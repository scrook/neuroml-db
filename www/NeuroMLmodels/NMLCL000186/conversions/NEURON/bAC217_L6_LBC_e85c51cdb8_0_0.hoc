// Cell: bAC217_L6_LBC_e85c51cdb8_0_0
/*
{
  "id" : "bAC217_L6_LBC_e85c51cdb8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.0872, -14.5298, 1.66446, 3.93857", "1.03391, -13.142, 1.51424, 6.52863", "0.980623, -11.7541, 1.36402, 8.04637", "0.927335, -10.3662, 1.21381, 9.63708", "0.874048, -8.97833, 1.06359, 11.064", "0.820761, -7.59046, 0.913373, 11.9239", "0.767473, -6.20258, 0.763156, 12.4398", "0.714186, -4.81471, 0.612939, 12.9921", "0.660898, -3.42683, 0.462723, 13.7517", "0.607611, -2.03896, 0.312506, 14.5599", "0.554324, -0.651085, 0.162289, 15.2134", "0.501036, 0.73679, 0.0120717, 15.5164", "0.447749, 2.12466, -0.138145, 15.3298", "0.394461, 3.51254, -0.288362, 13.7024", "0.341174, 4.90041, -0.438579, 11.5148", "0.287887, 6.28829, -0.588796, 9.87312", "0.234599, 7.67616, -0.739013, 8.2425", "0.181312, 9.06404, -0.88923, 6.9098", "0.128024, 10.4519, -1.03945, 5.83952", "0.0747371, 11.8398, -1.18966, 4.73272", "0.0214497, 13.2277, -1.33988, 2.78861" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.14716, -12.5986, 1.14781, 5.97", "1.14376, -12.6459, 1.14831, 6.04", "1.04857, -13.9717, 1.16232, 6.04", "1.02573, -14.2898, 1.16566, 5.0", "0.945809, -15.4027, 1.17742, 5.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.10284, 2.3259, -0.602184, 1.84", "-6.10284, 2.3259, -0.602184, 1.84", "-6.5123, 2.83962, -0.6684, 1.62", "-6.98674, 3.45502, -0.745582, 1.33", "-7.11743, 3.63066, -0.774427, 1.33", "-7.99827, 4.81447, -1.00898, 1.33", "-8.66337, 5.71184, -1.2003, 1.33", "-8.70708, 5.7719, -1.2136, 1.33", "-9.50224, 6.88964, -1.47576, 1.33", "-9.99753, 7.62602, -1.64375, 1.33", "-10.5742, 8.50622, -1.85496, 1.33", "-10.6085, 8.56088, -1.86785, 1.33", "-11.2638, 9.65423, -2.10016, 1.33", "-11.2958, 9.71011, -2.11335, 1.33", "-11.7279, 10.5136, -2.31681, 1.33", "-12.3331, 11.7007, -2.60292, 0.96", "-12.837, 12.7719, -2.86055, 0.96", "-12.8631, 12.8298, -2.87666, 0.96", "-13.278, 13.7968, -3.17759, 1.47", "-13.3279, 13.9128, -3.21285, 1.47", "-13.5824, 14.5187, -3.38042, 1.77", "-13.815, 15.0912, -3.51547, 1.77", "-14.1999, 16.0162, -3.72684, 1.77", "-14.4196, 16.5222, -3.82977, 1.62", "-14.8488, 17.4843, -3.99209, 1.62", "-15.3107, 18.5222, -4.14845, 1.62", "-15.337, 18.5816, -4.15637, 1.62", "-15.6421, 19.2614, -4.23942, 1.4", "-15.8099, 19.6366, -4.2668, 1.33", "-15.8637, 19.7552, -4.27839, 1.33", "-16.4852, 21.1087, -4.42854, 1.33", "-16.5131, 21.1675, -4.43528, 1.33", "-16.7643, 21.6831, -4.49227, 1.18", "-18.5032, 25.1129, -4.89654, 1.18", "-18.8868, 25.8645, -4.99138, 1.18", "-18.9581, 26.001, -5.00956, 1.18", "-19.3058, 26.6488, -5.10052, 1.18", "-19.6041, 27.2078, -5.17707, 1.18", "-20.0239, 28.005, -5.28016, 1.4", "-20.3766, 28.6727, -5.387, 1.69", "-20.4366, 28.7987, -5.40134, 1.69", "-20.6092, 29.1852, -5.44405, 1.69", "-20.6626, 29.3141, -5.45552, 1.69", "-20.8493, 29.7995, -5.48243, 1.69", "-20.8753, 29.8693, -5.48433, 1.69", "-21.2509, 30.8737, -5.50925, 1.69", "-21.4224, 31.347, -5.5191, 1.03", "-21.9357, 32.8201, -5.54375, 1.03", "-22.2777, 33.8009, -5.55547, 1.03", "-22.3936, 34.1319, -5.55755, 1.33", "-22.4619, 34.3251, -5.55816, 1.33", "-22.7124, 35.0404, -5.55705, 1.33", "-22.8902, 35.576, -5.5528, 1.47", "-23.1314, 36.3365, -5.54927, 1.47", "-23.2985, 36.9158, -5.54927, 1.47", "-23.3983, 37.2733, -5.54927, 1.47", "-23.4328, 37.3987, -5.54927, 1.47", "-23.7032, 38.3944, -5.54927, 1.25", "-23.7775, 38.6535, -5.55663, 1.25", "-24.0994, 39.7691, -5.60784, 1.25", "-24.2743, 40.3228, -5.61852, 1.25", "-24.354, 40.5576, -5.61885, 1.25", "-24.7732, 41.622, -5.60242, 1.25", "-25.4138, 43.072, -5.56029, 1.25", "-25.4422, 43.131, -5.55795, 1.25", "-25.9682, 44.1728, -5.50354, 1.25", "-26.0326, 44.2975, -5.49893, 1.25", "-26.7931, 45.7452, -5.45581, 1.25", "-26.829, 45.811, -5.45427, 1.25", "-27.313, 46.6974, -5.43898, 1.55", "-27.7802, 47.56, -5.4417, 1.55", "-29.1067, 50.0334, -5.51524, 1.55", "-29.1374, 50.0912, -5.51704, 1.55", "-29.7371, 51.2394, -5.55456, 1.47", "-30.0664, 51.8723, -5.57471, 1.62", "-30.1321, 51.9964, -5.57613, 1.62", "-30.4248, 52.5335, -5.56732, 1.62", "-30.4592, 52.5997, -5.562, 1.62", "-30.6775, 53.0317, -5.52554, 1.62", "-30.9405, 53.5354, -5.48172, 1.33", "-31.3702, 54.3268, -5.42113, 1.25", "-31.4016, 54.3843, -5.41676, 1.25", "-31.6801, 54.893, -5.37863, 1.11", "-32.6418, 56.6474, -5.25589, 1.11", "-33.0121, 57.3271, -5.21479, 1.92", "-33.5291, 58.2709, -5.1765, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.96716, 2.2214, -0.292184, 1.69", "7.96716, 2.2214, -0.292184, 1.69", "8.46642, 2.31853, -0.292184, 1.69", "9.0493, 2.43113, -0.292184, 1.62", "10.0267, 2.61803, -0.292184, 1.62", "10.7659, 2.75155, -0.292184, 1.62", "11.2973, 2.83878, -0.292184, 1.84", "11.3799, 2.84991, -0.292184, 1.84", "11.925, 2.89804, -0.292184, 1.84", "12.0028, 2.90104, -0.292184, 1.84", "12.4546, 2.89112, -0.292184, 1.84", "12.6933, 2.87597, -0.292184, 1.84", "13.0421, 2.84749, -0.292184, 1.84", "13.7785, 2.7849, -0.292184, 1.55", "13.8614, 2.77652, -0.292184, 1.55", "14.6363, 2.69937, -0.292184, 1.55", "14.7137, 2.69181, -0.292184, 1.55", "15.3297, 2.63691, -0.292184, 1.33", "16.0227, 2.57647, -0.292184, 1.18", "16.5351, 2.52781, -0.286964, 1.4", "17.1125, 2.4786, -0.276536, 1.4", "17.6894, 2.44919, -0.26237, 1.25", "18.3448, 2.43503, -0.243352, 1.25", "18.4225, 2.43677, -0.23957, 1.25", "19.0149, 2.47642, -0.20064, 1.03", "19.6001, 2.53989, -0.15417, 1.03", "20.4125, 2.66324, -0.0582184, 1.03", "20.4557, 2.67109, -0.0516997, 1.03", "20.9229, 2.76635, 0.031775, 1.33", "21.4711, 2.88705, 0.137319, 1.62", "21.5133, 2.89737, 0.14624, 1.62", "22.0793, 3.0301, 0.293449, 1.99", "22.2466, 3.06395, 0.346191, 2.43", "22.283, 3.07088, 0.3577, 2.43", "22.6111, 3.13116, 0.461943, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.237159, 12.2534, -1.85219, 4.13", "0.237159, 12.2534, -1.85219, 4.13", "0.294811, 12.7116, -1.88987, 4.13", "0.482338, 14.1652, -2.03112, 3.32", "0.629133, 15.2606, -2.12029, 2.95", "0.833288, 16.8211, -2.22672, 2.28", "0.970142, 17.9321, -2.29068, 2.28", "1.10551, 19.0154, -2.35248, 2.28", "1.24393, 20.096, -2.41311, 2.43", "1.45176, 21.6314, -2.49373, 2.5", "1.63774, 23.0989, -2.55168, 2.5", "1.79774, 24.5779, -2.56154, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.0214497, 13.2277, -1.33988, 1.03551", "-0.554051, 28.2167, -1.33988, 1.03551", "-1.12955, 43.2056, -1.33988, 1.03551" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.945809, -15.4027, 1.17742, 1.5", "2.71062, -17.1184, 1.41725, 1.5", "3.38254, -17.779, 1.50845, 2.0", "4.77507, -19.1661, 1.6972, 1.77", "5.38932, -19.7898, 1.78029, 1.77", "5.442, -19.844, 1.7874, 1.4", "6.16558, -20.59, 1.8851, 1.77", "7.0085, -21.476, 1.99865, 1.77", "7.68464, -22.1927, 2.08965, 2.14", "7.88091, -22.4072, 2.11597, 2.14", "8.79878, -23.422, 2.23888, 2.36", "9.29537, -23.9732, 2.30535, 2.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.945809, -15.4027, 1.17742, 3.02", "0.658894, -17.4245, 1.35413, 3.02", "0.539912, -18.2629, 1.42742, 3.5", "0.264238, -20.2055, 1.59722, 3.5", "-0.111818, -22.8554, 1.82884, 3.9", "-0.137263, -23.0347, 1.84451, 4.13" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-33.5291, 58.2709, -5.1765, 0.88", "-33.8351, 58.5448, -5.24641, 0.88", "-34.341, 58.9706, -5.35733, 0.88", "-35.0629, 59.5099, -5.49581, 0.88", "-35.6546, 59.9319, -5.60256, 0.29", "-35.7157, 59.974, -5.61203, 0.29", "-36.6285, 60.5927, -5.74028, 0.29", "-36.7631, 60.6786, -5.75776, 0.29", "-37.8071, 61.328, -5.88001, 0.29", "-37.8983, 61.3813, -5.88941, 0.29", "-39.5782, 62.3956, -6.12213, 0.29", "-40.2372, 62.7994, -6.24423, 0.66", "-40.4984, 62.9567, -6.30528, 0.96", "-40.8888, 63.183, -6.40465, 1.25", "-41.3613, 63.4489, -6.53885, 1.25", "-42.3129, 63.9624, -6.81699, 0.29", "-42.558, 64.0908, -6.89099, 0.29", "-43.7417, 64.7212, -7.22567, 0.29", "-45.2268, 65.5241, -7.61199, 0.29", "-45.5894, 65.721, -7.70747, 0.59", "-46.1339, 66.0274, -7.84347, 0.96", "-46.6069, 66.2985, -7.94215, 0.96", "-47.124, 66.6133, -8.06561, 0.96", "-47.1844, 66.6542, -8.08276, 0.96", "-47.8937, 67.1852, -8.31322, 0.29", "-47.9513, 67.2292, -8.33153, 0.29", "-48.8969, 67.9676, -8.59204, 0.29", "-48.955, 68.0125, -8.60578, 0.29", "-49.3503, 68.3119, -8.68002, 0.29", "-49.4184, 68.3626, -8.68938, 0.29", "-49.6818, 68.5512, -8.70884, 0.29", "-51.0103, 69.4694, -8.80938, 0.29", "-51.0726, 69.5107, -8.8131, 0.29", "-51.5219, 69.8016, -8.83515, 0.29", "-51.6688, 69.8921, -8.84126, 0.29", "-52.4097, 70.3262, -8.86423, 0.29", "-52.9908, 70.6583, -8.87468, 0.29", "-53.3474, 70.8511, -8.82462, 1.11", "-53.4914, 70.9314, -8.79312, 1.11", "-54.0885, 71.2745, -8.64388, 1.4", "-54.1844, 71.3308, -8.61922, 1.4", "-54.6103, 71.5782, -8.51357, 1.4", "-55.8311, 72.3005, -8.17278, 0.22", "-57.9488, 73.5822, -7.55539, 0.22", "-58.45, 73.9091, -7.41513, 1.03", "-58.8535, 74.1868, -7.30536, 1.47", "-59.3778, 74.5523, -7.17144, 1.47", "-60.6004, 75.4172, -6.89373, 0.22", "-60.6596, 75.4617, -6.88478, 0.22", "-62.1241, 76.6723, -6.5014, 0.22", "-62.1791, 76.7196, -6.48512, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-33.5291, 58.2709, -5.1765, 2.06", "-33.6263, 58.6854, -5.24007, 2.06", "-33.6414, 58.7586, -5.24948, 2.06", "-33.7387, 59.2671, -5.30862, 1.55", "-33.8443, 59.7158, -5.34403, 0.88", "-33.9641, 60.1733, -5.37316, 0.74", "-33.9808, 60.2347, -5.37657, 0.74", "-34.1052, 60.649, -5.3933, 0.74", "-34.1268, 60.7139, -5.39481, 0.74", "-34.6138, 61.9909, -5.39486, 0.74", "-34.7155, 62.2347, -5.39487, 1.11", "-34.7722, 62.3547, -5.39842, 1.11", "-35.0057, 62.8042, -5.42368, 1.11", "-35.0808, 62.9314, -5.43409, 1.11", "-35.353, 63.3595, -5.47766, 1.11", "-35.3713, 63.3859, -5.48118, 1.11", "-35.6751, 63.8321, -5.5359, 1.55", "-35.9761, 64.2833, -5.58743, 1.55", "-36.2111, 64.6718, -5.62527, 1.11", "-36.4399, 65.1092, -5.65561, 0.96", "-36.4531, 65.1384, -5.65686, 0.96", "-36.7939, 65.9841, -5.67311, 0.96", "-36.8271, 66.0788, -5.67254, 0.96", "-37.0267, 66.7213, -5.66814, 0.96", "-37.2918, 67.6781, -5.66113, 0.96", "-37.4014, 68.1027, -5.65803, 1.18", "-37.5228, 68.5754, -5.64301, 1.62", "-37.6436, 69.0662, -5.61713, 1.62", "-37.653, 69.1013, -5.6147, 1.62", "-37.814, 69.6566, -5.5667, 1.62", "-38.0211, 70.3402, -5.49836, 1.62", "-38.2157, 70.971, -5.43659, 1.62", "-38.2264, 71.0056, -5.43229, 1.62", "-38.3972, 71.5566, -5.35474, 1.62", "-38.5356, 71.9853, -5.2943, 1.25", "-38.6434, 72.2995, -5.25383, 1.03", "-38.8947, 72.9698, -5.18857, 1.03", "-39.1908, 73.7335, -5.13516, 0.88", "-39.2042, 73.7675, -5.133, 0.88", "-39.5353, 74.5977, -5.0879, 0.74", "-39.9296, 75.6019, -5.04507, 0.74", "-40.5011, 77.0815, -4.9796, 0.74", "-40.7214, 77.6723, -4.95977, 0.59", "-40.7674, 77.8012, -4.95731, 0.59", "-41.1342, 78.9007, -4.93254, 0.59", "-41.4257, 79.8689, -4.89365, 0.59", "-41.5118, 80.2022, -4.87341, 1.92", "-41.6464, 80.8781, -4.8186, 2.65", "-41.652, 80.9093, -4.81572, 2.65", "-41.7094, 81.2736, -4.7797, 2.65", "-41.7593, 81.6871, -4.73417, 0.66", "-41.8035, 82.1152, -4.69004, 0.66", "-41.8727, 82.9746, -4.62017, 0.66", "-41.8747, 83.0108, -4.61693, 0.66", "-41.8897, 83.4044, -4.58953, 0.88", "-41.8908, 83.4724, -4.58667, 0.88", "-41.8881, 83.8712, -4.56617, 0.88", "-41.8945, 84.2966, -4.52575, 1.33", "-41.8981, 84.3956, -4.51329, 1.33", "-41.9328, 84.8895, -4.44622, 1.33", "-41.9355, 84.9164, -4.44227, 1.33", "-42.0221, 85.4967, -4.35549, 0.52", "-42.1606, 86.1957, -4.24723, 0.52", "-42.2523, 86.5511, -4.19519, 0.52", "-42.3107, 86.7281, -4.17915, 1.03", "-42.3366, 86.7915, -4.17814, 1.03", "-42.4828, 87.1234, -4.19019, 1.03", "-42.4966, 87.1522, -4.19299, 1.03", "-42.6886, 87.5433, -4.23163, 1.03", "-42.921, 88.0269, -4.27394, 0.29", "-43.2914, 88.8182, -4.33762, 0.29", "-43.4325, 89.1335, -4.35998, 1.03", "-43.5751, 89.4626, -4.37956, 1.18", "-43.7615, 89.903, -4.40076, 1.18", "-43.9797, 90.4306, -4.41745, 1.33", "-44.1755, 90.9236, -4.42134, 1.69", "-44.3651, 91.3891, -4.42852, 2.43", "-44.5833, 91.9161, -4.44187, 2.95", "-44.5971, 91.9499, -4.4428, 2.95", "-44.7926, 92.4349, -4.4568, 3.32" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "22.6111, 3.13116, 0.461943, 0.81", "23.5988, 2.47203, 1.66974, 0.81", "24.5952, 1.79231, 2.7934, 0.52", "24.6371, 1.76526, 2.83828, 0.52", "25.4604, 1.24376, 3.69836, 0.66", "26.0588, 0.87994, 4.27586, 0.66", "26.248, 0.769293, 4.44725, 0.66", "26.5312, 0.616289, 4.64876, 0.66", "27.5925, 0.0849268, 5.24462, 0.44", "27.6484, 0.0595788, 5.27226, 0.44", "28.3822, -0.22536, 5.54383, 0.44", "28.5678, -0.283519, 5.62945, 0.74", "28.6946, -0.318131, 5.69065, 0.74", "29.3349, -0.483736, 5.99629, 0.74", "29.4774, -0.518466, 6.06077, 0.74", "30.2186, -0.6584, 6.41684, 0.74", "31.546, -0.83624, 7.11597, 0.88", "32.126, -0.87177, 7.42282, 0.88", "32.5794, -0.866, 7.66421, 0.37", "32.639, -0.86032, 7.69655, 0.37", "33.2168, -0.76805, 7.95823, 0.37", "33.3134, -0.74633, 7.98715, 0.37", "33.8616, -0.65537, 8.03611, 0.37", "34.3068, -0.613282, 8.0806, 0.96", "34.5705, -0.608783, 8.10787, 0.96", "35.2876, -0.65107, 8.18071, 0.96", "35.7762, -0.71364, 8.23036, 1.25", "36.0373, -0.74932, 8.26976, 1.25", "36.5146, -0.82283, 8.39641, 1.25", "36.714, -0.85872, 8.46306, 1.25", "37.1087, -0.94, 8.6174, 1.25", "37.1777, -0.95747, 8.64797, 1.25", "37.862, -1.17942, 9.06888, 1.25", "38.7915, -1.47713, 9.84118, 0.74", "39.2551, -1.62591, 10.2937, 0.74", "39.4368, -1.67201, 10.5163, 0.74", "39.7283, -1.7131, 10.8916, 0.74", "40.8651, -1.77562, 12.3554, 0.74", "41.7309, -1.75725, 13.5183, 0.66", "41.7782, -1.75458, 13.5798, 0.66", "43.002, -1.65561, 15.1109, 0.96", "43.8259, -1.60913, 16.0361, 0.96", "44.8088, -1.58869, 16.9593, 0.52", "45.6116, -1.61101, 17.5327, 1.11", "46.6716, -1.72908, 18.124, 1.25", "46.7327, -1.74015, 18.1512, 1.25", "47.8631, -2.05486, 18.4653, 1.25", "48.758, -2.35089, 18.7004, 0.96", "49.0474, -2.44726, 18.7613, 0.96", "49.4097, -2.5615, 18.8287, 1.25", "50.1127, -2.76517, 18.976, 1.25", "51.5033, -3.12088, 19.278, 1.25", "52.5898, -3.34158, 19.5183, 0.96", "52.796, -3.37423, 19.5623, 0.96", "53.565, -3.46833, 19.7166, 0.96", "53.6317, -3.47377, 19.7287, 0.96", "54.5665, -3.50309, 19.8559, 0.96", "55.3537, -3.4892, 19.9203, 1.25", "55.713, -3.48217, 19.9275, 1.47", "55.781, -3.48069, 19.928, 1.47", "56.2078, -3.47321, 19.9047, 1.47", "57.4964, -3.45019, 19.7892, 0.88", "57.5543, -3.44933, 19.7827, 0.88", "58.4726, -3.44685, 19.6198, 0.66", "59.9565, -3.46799, 19.3174, 0.66", "61.177, -3.50127, 19.0604, 1.03", "61.8218, -3.52259, 18.9335, 1.25", "62.7392, -3.57057, 18.772, 1.47", "64.199, -3.67009, 18.5474, 0.81", "65.6999, -3.80749, 18.4403, 0.74", "66.8379, -3.94617, 18.493, 0.74", "67.6305, -4.06367, 18.6189, 1.11", "68.7344, -4.25228, 18.8752, 1.11", "68.8073, -4.26572, 18.8978, 1.11", "70.6442, -4.61361, 19.7195, 1.11", "71.4236, -4.77798, 20.1264, 1.33", "72.1314, -4.94267, 20.5329, 1.47", "73.035, -5.16593, 21.0692, 1.62", "73.0908, -5.17933, 21.1051, 1.62", "74.3078, -5.47136, 21.9002, 1.62", "75.1603, -5.67745, 22.4394, 0.96", "76.2774, -5.93308, 23.1086, 0.59", "76.3343, -5.94579, 23.1431, 0.59", "77.2211, -6.12728, 23.7158, 0.88", "77.4016, -6.15787, 23.8251, 1.25", "78.1228, -6.24712, 24.1921, 1.25", "78.8276, -6.25043, 24.571, 1.25", "78.8959, -6.24245, 24.6072, 1.25", "80.0633, -6.0162, 25.2298, 1.33", "80.6124, -5.84989, 25.5214, 1.33", "81.2961, -5.5617, 25.9455, 0.59", "82.3827, -5.00836, 26.6387, 0.59", "82.8811, -4.74421, 26.9381, 0.44", "82.9441, -4.71305, 26.9702, 0.44", "83.3831, -4.53329, 27.1034, 0.44", "84.5662, -4.14891, 27.3603, 0.44", "85.5088, -3.9857, 27.4336, 1.25", "86.1795, -3.9786, 27.3505, 1.62", "86.5313, -3.99161, 27.2508, 1.62", "87.5908, -4.02492, 26.8851, 0.96", "87.664, -4.02551, 26.8591, 0.96", "88.5263, -4.01092, 26.531, 0.96", "89.7523, -3.94877, 26.1099, 0.96", "91.2286, -3.86279, 25.627, 0.52", "92.4133, -3.78971, 25.2617, 0.52", "93.9635, -3.69424, 24.8322, 0.52", "94.0294, -3.68884, 24.8166, 0.52", "94.804, -3.59501, 24.7207, 0.52", "95.4722, -3.48613, 24.7455, 0.52", "95.5785, -3.46751, 24.7658, 0.52", "96.1221, -3.36464, 24.9135, 0.29", "97.1292, -3.16716, 25.251, 0.29", "98.3902, -2.91281, 25.6962, 1.11", "98.4402, -2.89719, 25.7394, 1.11", "98.989, -2.71245, 26.4033, 1.11", "99.0298, -2.70108, 26.4565, 1.11", "99.4009, -2.61188, 26.9838, 1.11", "99.4368, -2.60431, 27.0411, 1.11", "101.44, -2.19139, 30.3941, 0.66", "101.744, -2.11862, 30.9511, 0.22", "102.173, -1.98979, 31.858, 0.22", "102.204, -1.98004, 31.9285, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "22.6111, 3.13116, 0.461943, 0.66", "23.7168, 3.33616, 0.459829, 0.66", "25.0958, 3.56819, 0.457908, 0.66", "25.2063, 3.58316, 0.446993, 0.66", "25.968, 3.6764, 0.344408, 1.03", "26.1932, 3.702, 0.295125, 1.03", "26.9486, 3.77174, 0.093973, 1.03", "27.1199, 3.77445, 0.0409277, 1.03", "28.9364, 3.74085, -0.569587, 0.81", "29.0064, 3.73767, -0.593047, 0.81", "30.7672, 3.6254, -1.19453, 0.66", "32.3649, 3.51179, -1.72803, 0.44", "33.3994, 3.42816, -2.06284, 0.44", "33.5511, 3.41525, -2.10588, 0.44", "34.1067, 3.36468, -2.22639, 0.44", "34.1897, 3.35829, -2.24058, 0.44", "34.7451, 3.32575, -2.28233, 0.66", "34.9768, 3.32742, -2.29434, 0.66", "35.8601, 3.36327, -2.34553, 0.66", "36.0392, 3.36685, -2.3554, 0.66", "37.0963, 3.35586, -2.40899, 0.66", "37.9523, 3.31801, -2.44609, 1.4", "38.6498, 3.26345, -2.4711, 1.99", "39.1373, 3.21476, -2.4853, 2.28", "39.9887, 3.1159, -2.50127, 1.92", "40.7286, 3.04536, -2.47959, 1.62", "41.5822, 2.98771, -2.41961, 0.96", "42.3638, 2.93532, -2.35427, 0.59", "42.4476, 2.93009, -2.34656, 0.59", "43.8317, 2.8487, -2.21782, 0.52", "45.1848, 2.77841, -2.08812, 0.52", "46.4226, 2.72521, -1.96759, 0.52", "48.2548, 2.65137, -1.78953, 0.52", "48.3388, 2.6481, -1.78161, 0.52", "49.7548, 2.59447, -1.66122, 0.52", "50.9221, 2.54788, -1.582, 0.52", "50.9959, 2.54618, -1.57981, 0.52", "51.2278, 2.55376, -1.57285, 0.96", "51.3114, 2.56412, -1.57486, 0.96", "52.0842, 2.69143, -1.63003, 1.4", "52.608, 2.83337, -1.69504, 1.69", "53.2369, 3.02508, -1.78964, 1.55", "53.8272, 3.20703, -1.88657, 1.18", "54.698, 3.48871, -2.03989, 0.29", "54.7666, 3.51167, -2.05269, 0.29", "56.5696, 4.14368, -2.39276, 0.29", "56.7155, 4.19594, -2.41933, 0.29", "57.0572, 4.31033, -2.46926, 0.66", "57.2678, 4.37927, -2.49089, 0.66", "57.338, 4.40095, -2.49422, 0.66", "58.3722, 4.70067, -2.52472, 0.37", "58.4429, 4.72083, -2.52529, 0.37", "59.7461, 5.10365, -2.51459, 0.37", "60.048, 5.1947, -2.53488, 0.74", "60.1177, 5.21597, -2.5446, 0.74", "60.8161, 5.45228, -2.69456, 0.96", "61.5238, 5.72316, -2.91044, 0.96", "61.6592, 5.78514, -2.95996, 0.96", "62.7024, 6.40632, -3.50773, 0.29", "62.7573, 6.44242, -3.53917, 0.29", "63.4802, 6.96115, -3.98375, 0.29", "63.6004, 7.05668, -4.06051, 0.29", "64.0149, 7.40332, -4.31024, 0.29", "64.8858, 8.16277, -4.75326, 1.84", "65.13, 8.38319, -4.84485, 2.21", "65.3364, 8.58304, -4.94843, 2.58", "65.6766, 8.93608, -5.16366, 2.58", "65.7281, 8.99157, -5.19619, 2.58", "65.9156, 9.23408, -5.33077, 2.58", "65.9512, 9.28737, -5.36287, 2.58", "66.7371, 10.5641, -6.13401, 0.44", "66.7739, 10.6266, -6.17178, 0.44", "67.2769, 11.4857, -6.67575, 0.44", "68.108, 12.8828, -7.50906, 0.44", "68.7382, 13.9106, -8.11944, 0.44", "69.2203, 14.677, -8.55766, 0.44", "69.2562, 14.7315, -8.587, 0.44", "69.7684, 15.4431, -8.96725, 0.44", "70.7646, 16.6141, -9.59326, 1.84", "71.0982, 16.9296, -9.74865, 2.21", "71.4571, 17.2299, -9.87908, 1.84", "71.913, 17.5785, -10.0114, 1.03", "72.4667, 17.9625, -10.116, 0.59", "74.1314, 19.034, -10.3014, 0.37", "74.7423, 19.4079, -10.3263, 0.59", "75.433, 19.8182, -10.3419, 0.59", "76.2718, 20.3064, -10.345, 0.29", "78.1971, 21.4304, -10.2974, 0.29", "78.7063, 21.7285, -10.2522, 0.29", "78.778, 21.7695, -10.2408, 0.29", "79.4629, 22.1675, -10.1211, 1.33", "79.8892, 22.4103, -10.0461, 1.84", "80.7132, 22.8831, -9.90935, 1.84", "81.5559, 23.3848, -9.73234, 0.29", "82.7114, 24.075, -9.48241, 0.29", "82.7816, 24.1185, -9.47215, 0.29", "83.0404, 24.2877, -9.45206, 0.59", "83.1099, 24.3323, -9.46142, 0.59", "83.4107, 24.5366, -9.56454, 0.59", "83.6195, 24.6869, -9.66543, 0.59", "84.5345, 25.3704, -10.1543, 0.22", "84.5887, 25.4103, -10.1817, 0.22", "85.7455, 26.2806, -10.7373, 0.22", "86.638, 26.9486, -11.1404, 0.22", "86.6919, 26.9898, -11.1661, 0.22", "87.0576, 27.2732, -11.3403, 1.03", "87.5228, 27.6419, -11.5238, 1.55", "87.9542, 27.9878, -11.68, 1.55", "88.0086, 28.0321, -11.6977, 1.55", "90.0324, 29.714, -12.4217, 0.29", "90.0855, 29.759, -12.4412, 0.29", "91.8425, 31.2929, -13.0946, 0.29", "92.0924, 31.5134, -13.1883, 0.59", "92.4734, 31.8459, -13.3314, 0.59", "93.9529, 33.1483, -13.8718, 0.22", "94.0752, 33.2601, -13.9126, 0.44", "94.3895, 33.5516, -14.027, 0.44", "94.44, 33.5989, -14.0475, 0.44", "95.7819, 34.8092, -14.6001, 0.22", "95.8358, 34.8543, -14.617, 0.22", "96.3556, 35.2388, -14.702, 1.33", "96.6887, 35.4799, -14.7468, 1.69", "97.3021, 35.9168, -14.8191, 1.69", "98.2556, 36.5927, -14.9173, 0.22", "100.936, 38.4839, -15.1474, 0.22", "105.519, 41.675, -15.5521, 0.22", "106.009, 42.0121, -15.5953, 1.25", "106.15, 42.1101, -15.6073, 1.69", "106.282, 42.2032, -15.6175, 1.69", "106.507, 42.3626, -15.6293, 1.69", "107.026, 42.7322, -15.6685, 1.18", "107.562, 43.17, -15.7409, 0.29", "108.308, 43.7818, -15.8351, 0.29", "108.363, 43.8262, -15.849, 0.29", "109.044, 44.3363, -16.0425, 0.29", "109.1, 44.3792, -16.0592, 0.66", "109.638, 44.7941, -16.2155, 0.66", "109.702, 44.8425, -16.2348, 0.66", "110.878, 45.6832, -16.5994, 0.22", "113.554, 47.494, -17.3884, 0.22", "113.837, 47.6696, -17.4608, 0.74", "114.601, 48.1082, -17.6282, 0.74", "114.665, 48.1418, -17.6397, 0.74", "115.52, 48.5587, -17.7522, 0.37", "116.561, 49.0217, -17.8169, 0.37", "118.296, 49.6894, -17.9123, 0.37", "118.652, 49.8417, -17.9258, 1.47", "119.246, 50.1224, -17.9387, 1.92", "119.732, 50.4071, -17.9414, 1.92", "120.449, 50.8928, -17.9319, 0.37", "120.792, 51.155, -17.9273, 0.22", "122.545, 52.6433, -17.9069, 0.22", "122.627, 52.7161, -17.9062, 0.22", "124.667, 54.6061, -17.8926, 0.22", "124.719, 54.6559, -17.8925, 0.22", "125.141, 55.0698, -17.8951, 0.96", "125.572, 55.4992, -17.9065, 0.96", "125.729, 55.6612, -17.9108, 0.96" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.79774, 24.5779, -2.56154, 1.25", "0.64291, 25.5218, -2.26269, 1.25", "0.58457, 25.5735, -2.25392, 1.25", "0.0518653, 26.0656, -2.19424, 1.25", "-0.00568254, 26.1188, -2.1956, 1.25", "-0.708019, 26.7763, -2.25029, 1.25", "-0.783646, 26.8474, -2.2574, 1.25", "-1.48367, 27.5393, -2.43076, 1.18", "-2.23175, 28.2683, -2.65297, 1.18", "-3.14406, 29.1471, -2.93497, 0.96", "-3.21174, 29.2132, -2.95634, 0.96", "-3.74014, 29.7293, -3.15229, 1.25", "-4.66852, 30.6234, -3.56764, 1.69", "-5.19281, 31.1246, -3.81181, 2.14", "-5.92087, 31.8258, -4.18297, 2.14", "-5.96738, 31.871, -4.20566, 2.14", "-6.66119, 32.5347, -4.56085, 2.14", "-7.6297, 33.4623, -5.13081, 1.69" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.79774, 24.5779, -2.56154, 2.5", "1.79079, 24.6497, -2.54358, 2.5", "1.71449, 25.4847, -2.35687, 2.43", "1.63009, 26.4082, -2.15036, 2.43", "1.55277, 27.2543, -1.96118, 2.5", "1.48722, 27.9715, -1.8008, 2.87", "1.41343, 28.779, -1.62025, 3.09", "1.38816, 29.0676, -1.56072, 3.09" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.12955, 43.2056, -1.33988, 1.03551", "-1.70505, 58.1946, -1.33988, 1.03551", "-2.28055, 73.1835, -1.33988, 1.03551" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "9.29537, -23.9732, 2.30535, 1.03", "10.8337, -24.5858, 2.70374, 1.03", "12.2161, -25.1409, 3.11841, 1.03", "14.2636, -25.9694, 3.77257, 1.03", "15.5604, -26.5289, 4.20537, 1.33", "15.8046, -26.6451, 4.2979, 1.33", "16.8999, -27.2092, 4.73899, 1.33", "17.9582, -27.8566, 5.18925, 1.33", "18.0248, -27.9025, 5.21992, 1.33", "19.2521, -28.8616, 5.82623, 1.33", "20.4966, -29.9323, 6.44845, 1.18", "21.2607, -30.6192, 6.80365, 1.18", "22.3136, -31.6142, 7.29976, 1.18", "23.0995, -32.3783, 7.65594, 1.11", "23.2174, -32.4916, 7.70796, 1.11", "23.9789, -33.1992, 8.06732, 1.33", "24.9758, -34.0675, 8.54424, 1.33", "25.9991, -34.9132, 9.07445, 0.66", "26.4163, -35.2299, 9.30041, 0.66", "28.3441, -36.5725, 10.3527, 0.66", "29.3391, -37.2441, 10.9025, 1.33", "29.8374, -37.554, 11.1827, 1.62", "29.9054, -37.5928, 11.2203, 1.62", "30.7833, -38.0325, 11.644, 1.84", "31.3266, -38.2722, 11.9166, 1.99" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "9.29537, -23.9732, 2.30535, 0.66", "9.63416, -25.1964, 2.24681, 0.66", "9.83704, -25.8375, 2.21126, 0.66", "10.209, -26.8839, 2.157, 0.66", "10.6406, -28.0303, 2.10806, 0.66", "11.013, -28.9983, 2.08017, 0.66", "11.664, -30.7038, 2.05395, 0.66", "11.7483, -30.9139, 2.05136, 0.66", "12.1913, -32.0657, 2.04307, 1.03", "12.6715, -33.377, 2.04129, 1.25", "13.4266, -35.4255, 2.0476, 0.74", "14.2132, -37.7104, 2.07006, 0.74", "14.5467, -38.7223, 2.09163, 1.11", "15.0128, -40.0745, 2.13454, 1.11", "15.0639, -40.2146, 2.13998, 1.11", "15.5216, -41.4143, 2.19397, 0.66", "16.217, -43.1796, 2.28726, 0.52", "17.5317, -46.42, 2.48127, 0.52", "19.0104, -49.972, 2.68965, 0.52", "19.3432, -50.7724, 2.73031, 0.88", "19.8944, -52.1352, 2.78988, 0.96", "20.6145, -53.9514, 2.824, 0.96", "20.6533, -54.0496, 2.82326, 0.96", "21.0099, -55.0461, 2.76304, 1.25", "21.6184, -57.054, 2.57227, 1.25", "21.6477, -57.1546, 2.56098, 1.25", "22.5195, -60.1897, 2.19494, 1.25", "22.5474, -60.2904, 2.18093, 1.25", "23.3313, -63.1234, 1.80369, 1.25", "24.103, -65.9078, 1.42741, 1.25", "24.4884, -67.2892, 1.23646, 1.25", "24.7829, -68.3589, 1.09297, 1.25", "25.1686, -69.8255, 0.90845, 0.22", "25.9624, -72.8224, 0.503583, 0.22", "26.2846, -74.0069, 0.336274, 0.88", "26.5365, -74.9639, 0.200529, 1.25", "26.6758, -75.5292, 0.129553, 1.55", "26.8775, -76.3874, 0.0300176, 1.55", "27.0371, -77.1598, -0.0383207, 1.25", "27.2464, -78.5725, -0.154259, 0.29", "27.4899, -80.8644, -0.200318, 0.29", "27.5029, -81.0232, -0.197583, 0.29", "27.5314, -81.4564, -0.174927, 0.52", "27.5853, -82.5505, -0.0809344, 0.52", "27.6328, -83.9642, 0.0875171, 0.29", "27.6492, -85.3836, 0.27029, 0.29", "27.6717, -86.0423, 0.381906, 1.11", "27.7376, -87.2406, 0.610324, 1.47", "27.8128, -88.2112, 0.832867, 1.77", "27.8986, -88.9596, 1.01931, 1.77", "27.9122, -89.0612, 1.04288, 1.77", "28.1094, -90.5384, 1.27444, 1.11", "28.1249, -90.6563, 1.29066, 1.11", "28.2446, -91.5431, 1.41839, 0.52", "28.5706, -93.9214, 1.7557, 0.52", "28.841, -95.8696, 2.0145, 0.52", "29.4715, -99.7464, 2.5768, 0.52", "29.4901, -99.8484, 2.59177, 0.52", "29.6584, -100.593, 2.71259, 1.25", "29.8595, -101.322, 2.8466, 1.55", "30.1322, -102.095, 3.02209, 1.55", "30.9805, -104.046, 3.51648, 1.55", "31.5291, -105.115, 3.81454, 0.44", "32.4029, -106.749, 4.20187, 0.44", "32.9372, -107.725, 4.40332, 0.66", "33.4531, -108.686, 4.57545, 0.66", "34.3319, -110.396, 4.78924, 0.52", "34.9837, -111.738, 4.8891, 0.37", "36.5389, -115.156, 5.06351, 0.37", "36.6272, -115.364, 5.06997, 0.37", "37.7664, -118.219, 5.09972, 0.37", "38.46, -120.001, 5.09682, 0.52", "38.815, -120.938, 5.08302, 1.11", "39.384, -122.499, 5.04624, 1.11", "39.4342, -122.639, 5.04364, 1.11", "39.7877, -123.558, 5.03971, 0.29", "41.2154, -126.987, 5.09661, 0.29", "41.7673, -128.24, 5.15431, 0.52", "42.4877, -129.803, 5.2282, 0.52", "42.5387, -129.913, 5.23341, 0.52", "42.9237, -130.781, 5.27355, 0.29", "43.0044, -130.976, 5.28222, 0.29", "43.6263, -132.649, 5.35244, 0.29", "43.6616, -132.748, 5.35651, 0.29", "44.5676, -135.391, 5.46288, 0.29", "44.6039, -135.506, 5.46535, 0.29", "44.9281, -136.606, 5.47563, 0.88", "45.2519, -137.711, 5.4781, 1.11", "45.5297, -138.664, 5.47412, 1.11", "45.5602, -138.765, 5.47348, 1.11", "46.3814, -141.355, 5.54825, 0.22", "47.2339, -143.893, 5.69761, 0.22", "47.2701, -143.992, 5.70671, 0.22", "47.5735, -144.767, 5.80087, 0.74", "47.9885, -145.758, 5.98458, 0.74", "48.5146, -147.007, 6.29395, 0.29", "48.5749, -147.137, 6.3399, 0.29", "49.5305, -149.114, 7.13912, 0.29", "49.5745, -149.204, 7.17517, 0.29", "50.084, -150.273, 7.65184, 0.88", "50.435, -151.026, 7.94094, 1.25", "50.7936, -151.803, 8.19577, 1.33", "50.9495, -152.149, 8.30581, 1.33", "51.0146, -152.29, 8.3483, 1.33", "51.6705, -153.7, 8.72296, 0.37", "53.2575, -157.057, 9.42428, 0.37", "53.3208, -157.19, 9.44993, 0.66", "53.5598, -157.69, 9.53435, 0.66", "54.2338, -159.024, 9.72935, 0.66", "54.4436, -159.425, 9.7752, 0.66", "55.6908, -161.569, 9.88439, 0.66", "55.747, -161.66, 9.88761, 0.66", "56.4193, -162.709, 9.91259, 1.03", "56.9055, -163.436, 9.92282, 1.47", "57.3516, -164.101, 9.92521, 1.47", "57.9813, -165.026, 9.92733, 0.22", "58.2294, -165.391, 9.92801, 0.22", "59.6755, -167.559, 9.94582, 0.22", "59.9278, -167.946, 9.95697, 0.66", "60.4476, -168.749, 9.99588, 1.11", "60.9416, -169.5, 10.0506, 1.33", "61.5132, -170.387, 10.1369, 1.33", "62.037, -171.175, 10.2197, 0.66", "62.5921, -172.003, 10.3148, 0.29", "62.651, -172.091, 10.3253, 0.29", "63.861, -173.873, 10.5502, 0.29", "63.92, -173.961, 10.5611, 0.29", "64.2295, -174.433, 10.6067, 0.66", "64.2851, -174.523, 10.6129, 0.66", "64.7497, -175.297, 10.6459, 0.66", "64.8112, -175.401, 10.6497, 0.66", "65.5194, -176.653, 10.6856, 0.66", "66.2821, -178.014, 10.7207, 0.59", "66.5897, -178.588, 10.733, 1.18", "66.7853, -178.941, 10.7509, 1.62", "66.8372, -179.033, 10.7578, 1.62", "67.2949, -179.92, 10.8478, 1.62", "67.3383, -180.016, 10.8578, 1.62", "67.5632, -180.525, 10.9127, 1.62", "68.1075, -181.748, 11.0391, 0.22", "68.149, -181.844, 11.0484, 0.22", "69.0769, -184.152, 11.2136, 0.22", "70.401, -188.087, 11.3839, 0.22", "70.4317, -188.188, 11.3866, 0.22", "70.5363, -188.574, 11.3808, 0.88", "70.7578, -189.545, 11.3316, 1.18", "71.0569, -191.013, 11.2276, 0.22", "71.8126, -195.451, 10.7877, 0.22", "71.8264, -195.555, 10.775, 0.22", "72.0062, -196.854, 10.5749, 1.11", "72.1644, -197.931, 10.3787, 1.77", "72.2862, -198.577, 10.2522, 1.99", "72.3131, -198.692, 10.2287, 1.99", "72.5633, -199.573, 10.0363, 1.99", "73.1412, -201.529, 9.679, 0.29", "73.1731, -201.628, 9.66382, 0.29", "73.995, -204.271, 9.25877, 0.29", "74.0247, -204.371, 9.24446, 0.29", "74.3908, -205.676, 9.0789, 0.29", "74.4183, -205.777, 9.06793, 0.29", "75.3409, -209.224, 8.80609, 0.29", "75.6085, -210.202, 8.71236, 1.77", "75.7848, -210.844, 8.63367, 2.28", "75.9856, -211.483, 8.56064, 2.58", "76.0193, -211.582, 8.54967, 2.58", "76.1452, -211.906, 8.52534, 2.58", "76.9632, -213.796, 8.45302, 0.29", "77.0071, -213.892, 8.45051, 0.29", "78.1527, -216.348, 8.41164, 0.29", "78.2498, -216.553, 8.41071, 0.29", "79.5278, -219.248, 8.42835, 0.29", "79.5942, -219.394, 8.4374, 0.29", "80.3379, -221.116, 8.65329, 0.29", "80.5028, -221.561, 8.72323, 0.74", "80.7031, -222.407, 8.8735, 0.74", "80.7201, -222.509, 8.89262, 0.74", "80.8675, -224.179, 9.24399, 0.22", "80.8744, -224.296, 9.2692, 0.22", "80.8623, -226.143, 9.67791, 0.22", "80.7489, -229.037, 10.2833, 0.22", "80.7423, -229.141, 10.3024, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.137263, -23.0347, 1.84451, 2.21", "0.151132, -25.1553, 2.20862, 2.21", "0.275868, -26.1022, 2.40593, 1.84", "0.414205, -27.2814, 2.66692, 1.77", "0.596292, -29.3345, 3.13387, 1.77", "0.776229, -31.3901, 3.57744, 1.77", "0.781569, -31.4396, 3.5877, 1.77", "0.946035, -32.5594, 3.81464, 1.92", "1.14716, -33.7052, 4.02318, 2.58", "1.37887, -34.7874, 4.17616, 2.58", "1.68461, -35.9205, 4.29311, 1.5", "2.15607, -37.3365, 4.37706, 0.66", "2.54003, -38.2396, 4.40421, 0.66", "2.84438, -38.7923, 4.39649, 0.96", "3.18799, -39.2501, 4.3713, 0.96", "3.24695, -39.3123, 4.3652, 0.96", "4.28498, -40.2413, 4.232, 0.74", "4.9993, -40.7896, 4.0911, 0.74", "5.10242, -40.8674, 4.06687, 0.74", "6.09141, -41.6121, 3.79728, 0.74", "6.1391, -41.6477, 3.78214, 0.74", "6.65343, -42.0637, 3.59036, 0.74", "7.18276, -42.5291, 3.34464, 0.74", "7.90937, -43.296, 3.00543, 0.74", "7.95249, -43.3466, 2.98532, 0.74", "8.1233, -43.5983, 2.90605, 0.96", "8.44077, -44.1484, 2.76398, 1.18", "8.49864, -44.2607, 2.73921, 1.18", "8.74759, -44.8174, 2.64646, 1.33", "8.76879, -44.8727, 2.63875, 1.33", "9.00657, -45.5791, 2.55442, 1.47", "9.17859, -46.2382, 2.49701, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.137263, -23.0347, 1.84451, 1.03", "-0.0307301, -25.7637, -1.00268, 1.03", "-0.0283219, -25.8157, -1.04107, 1.03", "0.00550558, -26.5492, -1.49691, 1.03", "0.0293168, -26.9937, -1.78424, 1.03", "0.0839035, -28.0169, -2.45485, 1.03", "0.164471, -28.971, -3.06866, 0.88", "0.21495, -29.7847, -3.5365, 0.88", "0.213604, -29.8434, -3.58155, 0.88", "0.00476228, -30.6454, -4.47705, 1.03", "-0.0221441, -30.7043, -4.56137, 1.03", "-0.332647, -31.1541, -5.31975, 1.03", "-1.52921, -32.476, -7.57479, 1.03", "-1.56243, -32.5069, -7.6228, 1.03", "-2.73234, -33.5353, -8.90358, 1.18", "-2.77437, -33.5708, -8.93967, 1.18", "-3.42754, -34.1081, -9.43172, 1.18", "-4.12075, -34.6671, -9.83997, 1.18", "-5.11874, -35.5348, -10.2561, 1.4", "-5.73406, -36.097, -10.5253, 1.4", "-6.88453, -37.2282, -10.9958, 1.03", "-6.9284, -37.2721, -11.0156, 1.03", "-7.57922, -37.9843, -11.3495, 1.03", "-7.61873, -38.0311, -11.3711, 1.03", "-8.36407, -39.045, -11.7806, 0.74", "-8.88685, -39.8599, -12.0839, 0.74", "-8.91969, -39.9227, -12.1032, 0.74", "-9.30019, -40.7892, -12.4278, 0.74", "-9.32666, -40.9022, -12.5034, 0.74", "-9.33177, -41.3959, -12.9366, 0.52", "-9.31942, -41.4382, -12.985, 0.52", "-9.17226, -41.8756, -13.6415, 0.81", "-9.16185, -41.911, -13.696, 0.81", "-8.95075, -42.6655, -14.9086, 1.03", "-8.87003, -42.9944, -15.3666, 1.25", "-8.86196, -43.0352, -15.4174, 1.25", "-8.65418, -44.2138, -16.7579, 1.84", "-8.63294, -44.449, -17.0184, 2.21", "-8.63263, -44.5858, -17.1516, 2.21", "-8.66934, -45.1872, -17.6804, 2.21", "-8.67438, -45.2362, -17.7227, 2.21", "-8.83912, -46.523, -18.7918, 1.99", "-9.08819, -48.2019, -20.0258, 0.88", "-9.29924, -49.3764, -20.8298, 0.88", "-9.30943, -49.4297, -20.8648, 0.88", "-9.50447, -50.4639, -21.5145, 0.59", "-9.51471, -50.5271, -21.5506, 0.59", "-9.65577, -51.5827, -22.1092, 0.59", "-9.73391, -52.3875, -22.5471, 0.44", "-9.80081, -53.2539, -23.0493, 0.66", "-9.85071, -54.2007, -23.5554, 2.06", "-9.88134, -55.0935, -23.9897, 3.17", "-9.91801, -56.5972, -24.686, 3.17", "-9.92781, -57.8277, -25.2186, 1.25", "-9.91569, -58.6454, -25.512, 0.29", "-9.884, -60.2122, -25.9386, 0.29", "-9.86284, -60.697, -26.027, 1.03", "-9.85785, -60.7601, -26.0328, 1.03", "-9.7612, -61.4925, -26.0286, 1.03", "-9.63954, -62.2453, -26.0026, 0.96", "-9.62721, -62.3077, -26.0001, 0.96", "-9.42036, -63.2328, -25.9631, 0.96", "-9.26482, -63.9025, -25.9395, 0.29", "-8.96567, -65.1747, -25.8856, 0.29", "-8.95077, -65.2365, -25.8827, 0.29", "-8.63308, -66.544, -25.82, 0.29", "-8.38866, -67.5389, -25.7653, 0.29", "-8.37327, -67.6006, -25.7612, 0.29", "-8.27687, -67.9937, -25.7418, 1.18", "-8.1417, -68.6116, -25.7412, 1.47", "-8.07223, -68.9483, -25.7565, 1.62", "-8.06001, -69.0105, -25.7625, 1.62", "-7.98173, -69.4009, -25.8015, 1.62", "-7.78323, -70.3838, -25.8974, 0.29", "-7.47897, -71.8338, -26.0354, 0.29", "-7.37577, -72.3263, -26.0804, 0.44", "-7.19631, -73.2119, -26.144, 0.44", "-7.1841, -73.2742, -26.1477, 0.44", "-7.08076, -73.8037, -26.1719, 0.15", "-6.92182, -74.6476, -26.1949, 0.15", "-6.90868, -74.7191, -26.1967, 0.15", "-6.4139, -77.5871, -26.2613, 0.15", "-6.40367, -77.6498, -26.2626, 0.15", "-6.31892, -78.187, -26.2772, 0.88", "-6.20998, -78.9238, -26.3302, 1.69", "-6.20091, -78.9955, -26.3379, 1.69", "-6.15634, -79.3796, -26.3941, 2.06", "-6.11764, -79.9089, -26.4948, 2.06", "-6.07925, -80.5358, -26.6121, 2.06", "-6.01933, -81.7874, -26.8484, 0.59", "-5.99952, -82.1908, -26.9193, 0.59", "-5.99551, -82.2992, -26.9428, 0.59", "-5.95276, -83.666, -27.251, 0.37", "-5.95156, -83.753, -27.2745, 0.37", "-5.95192, -83.9022, -27.3154, 0.74", "-5.9525, -84.8188, -27.5656, 0.74", "-5.94684, -85.7547, -27.8322, 0.22", "-5.91949, -87.495, -28.2845, 0.22", "-5.91269, -88.2357, -28.4511, 1.25", "-5.91133, -88.9985, -28.5881, 1.77", "-5.91241, -89.4991, -28.648, 1.77", "-5.92099, -89.9611, -28.6641, 1.77", "-5.94111, -90.9382, -28.6351, 0.29", "-5.97742, -92.1311, -28.5687, 0.22", "-5.98454, -92.3298, -28.5536, 0.22", "-6.04835, -93.7222, -28.4532, 0.22", "-6.20786, -96.3024, -28.2719, 0.22", "-6.22285, -96.5009, -28.2594, 0.22", "-6.27272, -97.0964, -28.2302, 0.88", "-6.32891, -97.7582, -28.1988, 1.33", "-6.36382, -98.1552, -28.1804, 1.62", "-6.40239, -98.5658, -28.1617, 1.62", "-6.48493, -99.4348, -28.1244, 0.29", "-6.56752, -100.302, -28.0865, 0.22", "-6.57606, -100.398, -28.0824, 0.22", "-6.66789, -101.581, -28.034, 0.22", "-6.677, -101.716, -28.0285, 0.22", "-6.69293, -102.069, -28.022, 1.18", "-6.7229, -102.867, -28.0177, 1.62", "-6.72222, -103.208, -28.0221, 1.84", "-6.7077, -103.806, -28.0356, 1.84", "-6.69612, -104.132, -28.0461, 1.84", "-6.64371, -105.285, -28.0894, 0.22", "-6.63973, -105.349, -28.0923, 0.22", "-6.44547, -107.965, -28.2196, 0.22", "-6.43824, -108.055, -28.224, 0.22", "-6.39895, -108.46, -28.2436, 1.11", "-6.39289, -108.523, -28.248, 1.11", "-6.36035, -108.883, -28.2774, 1.4", "-6.32875, -109.275, -28.3227, 1.92", "-6.32113, -109.409, -28.3418, 1.92", "-6.29775, -109.827, -28.3952, 1.92", "-6.26009, -110.789, -28.5504, 0.52", "-6.25839, -110.861, -28.563, 0.52", "-6.24929, -111.466, -28.6725, 0.22", "-6.25234, -113.113, -28.911, 0.22", "-6.25329, -113.176, -28.9184, 0.22", "-6.27831, -114.004, -28.9677, 1.03", "-6.29378, -114.471, -28.9782, 1.03", "-6.31998, -115.0, -28.9934, 0.59", "-6.41853, -116.479, -29.0368, 0.22", "-6.42603, -116.575, -29.0391, 0.22", "-6.64161, -119.423, -29.0858, 0.22", "-6.64668, -119.486, -29.0855, 0.22", "-6.69695, -120.046, -29.0894, 0.66", "-6.70279, -120.109, -29.0918, 0.66", "-6.74288, -120.704, -29.1432, 0.66", "-6.74557, -120.777, -29.1493, 0.66", "-6.75647, -121.375, -29.2272, 0.66", "-6.75686, -121.447, -29.2366, 0.66", "-6.75389, -122.108, -29.3154, 0.22", "-6.74689, -123.565, -29.493, 0.22", "-6.6986, -125.019, -29.6415, 0.22", "-6.64215, -126.056, -29.7302, 1.55", "-6.59827, -126.657, -29.7711, 1.55", "-6.5475, -127.18, -29.7877, 1.55", "-6.50918, -127.514, -29.786, 1.47", "-6.40434, -128.426, -29.8254, 0.59", "-6.3972, -128.489, -29.8308, 0.59", "-6.35507, -128.889, -29.8753, 0.22", "-6.10576, -131.539, -30.2935, 0.22", "-6.1006, -131.601, -30.3059, 0.22", "-6.0624, -132.886, -30.7429, 1.25", "-6.0688, -133.618, -31.0865, 1.47", "-6.07632, -134.096, -31.3492, 1.47", "-6.07652, -134.159, -31.3873, 1.47", "-6.08147, -134.44, -31.5927, 1.47", "-6.06951, -136.029, -32.7065, 0.29", "-6.03727, -136.952, -33.2916, 0.15", "-6.03752, -137.003, -33.3308, 0.15", "-6.09019, -138.027, -34.2843, 0.15", "-6.13459, -138.661, -34.9089, 0.81", "-6.13962, -138.71, -34.9645, 0.81", "-6.1727, -139.076, -35.3673, 0.81", "-6.29194, -140.65, -37.1944, 0.22", "-6.28451, -141.732, -38.4213, 1.47", "-6.26075, -142.185, -38.9541, 1.47", "-6.11155, -143.389, -40.2998, 0.22", "-5.93174, -144.39, -41.372, 0.22", "-5.68487, -145.344, -42.334, 0.22", "-5.28686, -146.433, -43.2142, 0.22", "-4.93928, -147.295, -43.8458, 1.55", "-4.66918, -147.922, -44.2886, 1.84", "-4.53718, -148.215, -44.4711, 1.84", "-4.1406, -149.121, -45.0305, 0.22", "-3.53267, -150.739, -45.9677, 0.22", "-3.26593, -151.576, -46.4015, 1.03", "-3.08496, -152.169, -46.6728, 1.33", "-2.89763, -152.838, -46.9847, 1.33", "-2.88121, -152.902, -47.0166, 1.33", "-2.58053, -154.16, -47.6498, 0.22", "-2.17999, -155.906, -48.5469, 0.22", "-2.15962, -155.992, -48.5884, 0.22", "-1.62519, -158.301, -49.5549, 0.22", "-1.4462, -159.075, -49.8525, 1.25", "-1.29846, -159.748, -50.0657, 1.55", "-1.21618, -160.145, -50.1777, 1.69", "-1.00186, -161.287, -50.4839, 0.22", "-0.447226, -164.513, -51.2372, 0.22", "-0.429624, -164.644, -51.2637, 0.22", "-0.191136, -166.657, -51.6624, 0.22", "-0.0846856, -167.703, -51.8709, 1.4", "-0.0261197, -168.364, -52.0028, 1.69", "0.0295747, -169.148, -52.1646, 1.69", "0.0945949, -170.304, -52.4182, 0.22", "0.103257, -170.438, -52.4455, 0.22", "0.380526, -173.857, -53.0908, 0.22", "0.387982, -173.929, -53.0998, 0.22", "0.470589, -174.595, -53.1647, 1.25", "0.590817, -175.375, -53.2053, 1.55", "0.61548, -175.509, -53.2039, 1.55", "0.733964, -176.09, -53.1884, 1.55", "0.906018, -176.85, -53.1387, 0.22", "0.926218, -176.938, -53.1322, 0.22", "1.24509, -178.237, -53.0163, 0.22", "1.2699, -178.33, -53.01, 0.22", "1.67349, -179.823, -52.9491, 0.22", "1.69138, -179.884, -52.9486, 0.22", "1.77694, -180.154, -52.9586, 1.55", "1.7988, -180.214, -52.9614, 1.55", "2.04933, -180.857, -52.9926, 1.99", "2.17914, -181.185, -53.0089, 1.99", "2.55997, -182.122, -53.0571, 0.22", "2.59733, -182.212, -53.0622, 0.22", "3.77886, -184.999, -53.234, 0.22", "3.80302, -185.058, -53.2375, 0.22", "3.91004, -185.321, -53.2321, 0.96", "3.93591, -185.407, -53.2209, 0.96", "4.04403, -185.898, -53.1171, 0.96", "4.06159, -186.02, -53.0848, 0.96", "4.07895, -186.339, -52.9758, 0.96", "4.13416, -187.797, -52.4724, 0.22", "4.14188, -190.27, -51.648, 0.22", "4.13933, -190.391, -51.6085, 0.52", "4.08696, -191.41, -51.2997, 0.52", "4.08183, -191.48, -51.2815, 0.52", "4.0303, -192.014, -51.1799, 0.22", "3.8715, -193.214, -51.0893, 0.22", "3.85641, -193.363, -51.0816, 0.22", "3.82156, -193.811, -51.0633, 1.25", "3.78217, -194.471, -51.0425, 1.47", "3.74684, -195.271, -51.0241, 1.55", "3.72011, -196.135, -51.0201, 0.22", "3.63692, -198.256, -50.9969, 0.22", "3.60959, -198.841, -50.9857, 0.66", "3.57813, -199.438, -50.9673, 0.66", "3.57329, -199.511, -50.9651, 0.66", "3.53627, -199.948, -50.9518, 0.22", "3.30472, -201.797, -51.0533, 0.22", "3.2431, -202.192, -51.1157, 0.88", "3.22474, -202.315, -51.1421, 0.88", "3.18054, -202.64, -51.2176, 0.88", "3.16393, -202.772, -51.2494, 0.88", "2.98511, -204.349, -51.7149, 0.22", "2.67998, -207.401, -52.8531, 0.22", "2.60107, -208.254, -53.1549, 1.18", "2.51737, -209.139, -53.4279, 1.18", "2.51162, -209.2, -53.4447, 1.18", "2.41237, -210.293, -53.7065, 1.18", "2.33824, -211.227, -53.8813, 0.15", "2.05764, -214.278, -54.5096, 0.15", "1.88629, -215.997, -54.8417, 0.15", "1.85589, -216.327, -54.8987, 0.74", "1.85008, -216.39, -54.9077, 0.74", "1.78991, -217.06, -54.9702, 0.74", "1.72701, -217.844, -55.0361, 0.22", "1.72064, -217.916, -55.0457, 0.22", "1.55388, -219.888, -55.3271, 0.22", "1.50971, -220.216, -55.389, 0.96", "1.49739, -220.287, -55.4039, 0.96", "1.39006, -220.806, -55.5076, 0.96", "1.20765, -221.804, -55.6606, 0.96", "1.1889, -221.904, -55.6759, 0.96", "0.937602, -223.224, -55.9105, 0.22", "0.926575, -223.286, -55.9213, 0.22", "0.669735, -225.034, -56.2207, 0.22", "0.47453, -226.669, -56.4853, 0.22", "0.457158, -226.801, -56.5147, 0.22", "0.299592, -227.957, -56.7839, 0.22", "0.261475, -228.232, -56.8378, 0.96", "0.114851, -229.187, -57.0321, 2.14", "-0.00417572, -229.838, -57.1837, 2.14", "-0.392884, -231.769, -57.6432, 0.22", "-0.784685, -233.665, -58.1285, 0.22", "-1.34946, -236.077, -58.7241, 0.22", "-1.36659, -236.145, -58.7408, 0.22", "-1.50652, -236.658, -58.8596, 0.96", "-1.63554, -237.161, -58.9586, 0.96", "-1.83545, -238.022, -59.0392, 0.22", "-2.26981, -239.566, -59.2078, 0.22", "-2.38092, -239.948, -59.2451, 0.59", "-2.45621, -240.199, -59.2843, 0.59", "-2.57145, -240.57, -59.3418, 0.22", "-3.12177, -242.258, -59.6141, 0.22", "-3.29153, -242.745, -59.6874, 0.96", "-3.52682, -243.359, -59.7985, 0.96", "-4.14978, -244.791, -60.0612, 0.22", "-5.3375, -246.895, -60.3446, 0.22", "-5.38071, -246.955, -60.3513, 0.22", "-5.68411, -247.293, -60.3755, 1.55", "-6.13718, -247.735, -60.3674, 1.55", "-6.55802, -248.074, -60.3954, 0.22", "-8.49598, -249.425, -60.5916, 0.22", "-9.35331, -249.917, -60.7641, 0.96", "-9.40866, -249.948, -60.7836, 0.96", "-10.3792, -250.448, -61.2198, 0.96", "-12.5861, -251.535, -62.3998, 0.22", "-13.3222, -251.882, -62.8532, 0.22", "-13.592, -252.007, -63.0389, 0.96", "-15.2761, -252.811, -64.1274, 0.15", "-16.0909, -253.193, -64.6304, 0.15", "-16.259, -253.269, -64.7271, 0.29", "-16.4989, -253.386, -64.818, 0.29", "-17.4377, -253.827, -65.1895, 0.22", "-17.4912, -253.851, -65.22, 0.22", "-18.5391, -254.363, -65.6414, 0.59", "-18.6161, -254.405, -65.6737, 0.59", "-18.9389, -254.588, -65.8046, 0.59", "-18.9918, -254.621, -65.8254, 0.59", "-20.8744, -255.834, -66.5723, 0.15", "-23.5705, -257.62, -67.5378, 0.15", "-24.116, -257.996, -67.6955, 1.18", "-24.1761, -258.037, -67.7119, 1.18", "-24.7864, -258.471, -67.857, 1.77" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.137263, -23.0347, 1.84451, 1.4", "-0.633181, -23.1772, 1.98076, 1.4", "-1.51446, -23.4708, 2.22623, 1.4", "-1.77, -23.5726, 2.29894, 1.4", "-2.5501, -23.9074, 2.52343, 1.25", "-3.22951, -24.2218, 2.7027, 1.25", "-3.8917, -24.5516, 2.8697, 1.25", "-3.92959, -24.5726, 2.87893, 1.25", "-4.44699, -24.9014, 3.00238, 1.4", "-4.48391, -24.924, 3.0114, 1.4", "-5.11736, -25.2911, 3.16995, 1.4", "-5.77992, -25.6324, 3.33949, 1.62", "-6.48791, -25.9547, 3.52524, 1.55", "-6.52793, -25.9708, 3.53622, 1.55", "-7.61855, -26.3521, 3.85024, 1.55", "-7.6596, -26.3645, 3.86274, 1.55", "-8.59316, -26.5953, 4.16811, 1.55", "-8.64093, -26.6049, 4.18383, 1.55", "-9.40142, -26.74, 4.43567, 1.55", "-9.78074, -26.7964, 4.56041, 1.84", "-10.3621, -26.862, 4.75052, 1.84", "-10.4046, -26.866, 4.76434, 1.84", "-11.0057, -26.9029, 4.95824, 1.69", "-11.0484, -26.9043, 4.97195, 1.69", "-12.2258, -26.9023, 5.348, 1.69", "-12.2686, -26.9015, 5.36163, 1.69", "-13.2201, -26.8751, 5.64918, 1.69", "-14.5804, -26.8273, 6.0457, 1.69", "-15.9864, -26.7661, 6.44388, 1.69", "-17.6795, -26.6754, 6.89292, 1.69", "-17.723, -26.6724, 6.90369, 1.69", "-18.5214, -26.5984, 7.08999, 1.69", "-19.3948, -26.4951, 7.2763, 1.69", "-19.4385, -26.4889, 7.28406, 1.69", "-20.0812, -26.3872, 7.38232, 1.55", "-20.6202, -26.3057, 7.46606, 1.55", "-21.7781, -26.1676, 7.65416, 1.55", "-21.8284, -26.1629, 7.66287, 1.55", "-22.4961, -26.1268, 7.7729, 1.55", "-23.5716, -26.1085, 7.95231, 1.55", "-24.4997, -26.1594, 8.11726, 1.55", "-25.2805, -26.2627, 8.25127, 1.55", "-25.3462, -26.2762, 8.26227, 1.55", "-26.0446, -26.4567, 8.38988, 1.55", "-26.0862, -26.4712, 8.39642, 1.55", "-26.7834, -26.7787, 8.45711, 1.33", "-27.1752, -26.9737, 8.47797, 1.11", "-27.2146, -26.9939, 8.4798, 1.11", "-27.8846, -27.3358, 8.49083, 1.11", "-28.7042, -27.7462, 8.47153, 1.11", "-29.375, -28.0714, 8.43618, 1.4", "-29.8859, -28.3216, 8.39946, 1.84", "-29.9254, -28.3415, 8.39646, 1.84", "-30.5973, -28.7006, 8.34523, 1.84", "-31.2837, -29.0936, 8.30529, 1.84", "-31.3371, -29.126, 8.30486, 1.84", "-31.9776, -29.5346, 8.30453, 2.14", "-32.0146, -29.5587, 8.30502, 2.14", "-32.6666, -29.9928, 8.32983, 2.5", "-33.3324, -30.433, 8.38371, 2.65", "-34.0032, -30.8831, 8.44929, 2.65", "-34.0401, -30.907, 8.45269, 2.65", "-34.5175, -31.1952, 8.49269, 2.95", "-34.5608, -31.221, 8.49704, 2.95", "-34.8844, -31.3996, 8.54955, 2.95" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-44.7926, 92.4349, -4.4568, 0.74", "-45.0718, 92.6643, -4.40027, 0.74", "-46.3103, 93.6202, -4.14984, 0.29", "-47.0484, 94.1822, -4.0015, 0.29", "-47.1722, 94.2776, -3.97691, 0.29", "-47.8868, 94.8448, -3.83784, 0.29", "-47.9397, 94.8872, -3.82762, 0.29", "-49.1236, 95.8577, -3.6065, 0.29", "-49.2503, 95.9634, -3.58396, 0.29", "-49.9336, 96.5568, -3.46357, 0.29", "-50.1432, 96.7439, -3.4262, 0.74", "-50.5546, 97.1353, -3.35236, 1.03", "-50.602, 97.1839, -3.34718, 1.03", "-50.961, 97.61, -3.33422, 1.03", "-51.0303, 97.6948, -3.33643, 1.03", "-51.3326, 98.0825, -3.35977, 0.81", "-51.8491, 98.7626, -3.40975, 0.66", "-52.533, 99.6924, -3.4859, 0.29", "-53.5641, 101.147, -3.61283, 0.29", "-53.9543, 101.73, -3.66686, 0.66", "-54.314, 102.321, -3.717, 1.47", "-54.5106, 102.674, -3.74552, 1.69", "-54.7542, 103.166, -3.78416, 1.69", "-55.0409, 103.82, -3.82579, 0.88", "-55.3114, 104.495, -3.8685, 0.37", "-55.9886, 106.253, -3.95543, 0.37", "-56.0401, 106.387, -3.96234, 0.37", "-56.3557, 107.176, -4.00002, 0.37", "-56.4692, 107.45, -4.01185, 0.88", "-56.6545, 107.852, -4.0225, 0.88", "-56.6895, 107.921, -4.02341, 0.88", "-56.9635, 108.392, -4.0192, 0.88", "-57.2475, 108.865, -3.97329, 1.11", "-57.2826, 108.922, -3.96395, 1.11", "-57.4679, 109.225, -3.91048, 1.11", "-57.537, 109.339, -3.88945, 1.11", "-57.7526, 109.703, -3.80564, 1.11", "-58.1909, 110.475, -3.60408, 0.22", "-59.1487, 112.167, -3.13343, 0.22", "-59.1823, 112.223, -3.11733, 0.74", "-59.2166, 112.279, -3.10105, 0.74", "-59.5899, 112.86, -2.93037, 0.66", "-59.632, 112.923, -2.91266, 0.66", "-60.2296, 113.778, -2.70869, 0.29", "-60.6908, 114.471, -2.50322, 0.29", "-60.7335, 114.533, -2.48478, 0.29", "-60.8404, 114.686, -2.44054, 0.88", "-61.2268, 115.22, -2.29739, 1.18", "-61.6364, 115.781, -2.14249, 1.18", "-62.2101, 116.571, -1.91538, 0.29", "-63.2334, 117.941, -1.51262, 0.29", "-63.2792, 118.001, -1.49441, 0.29", "-63.9458, 118.849, -1.23367, 0.29", "-64.1058, 119.044, -1.1743, 0.88", "-64.1547, 119.102, -1.15675, 0.88", "-64.5017, 119.501, -1.0457, 0.88", "-64.8504, 119.93, -0.934096, 1.33", "-65.1941, 120.416, -0.842095, 1.77", "-65.5449, 120.957, -0.759676, 1.77", "-66.2484, 122.115, -0.624143, 0.29", "-66.2867, 122.181, -0.618111, 0.29", "-66.9039, 123.343, -0.550835, 0.29", "-67.6503, 124.903, -0.519703, 0.29", "-67.6906, 124.996, -0.520024, 0.29", "-68.1069, 126.102, -0.422218, 0.29", "-68.1289, 126.165, -0.410595, 0.29", "-68.4116, 126.966, -0.13176, 0.96", "-68.7408, 127.861, 0.34271, 1.92", "-68.8698, 128.183, 0.562115, 1.92", "-69.5821, 129.913, 1.99623, 0.37", "-69.988, 130.87, 2.90463, 0.37", "-70.2986, 131.558, 3.60213, 0.96", "-70.5216, 132.021, 4.11189, 0.96", "-70.5444, 132.064, 4.16071, 0.96", "-71.024, 132.989, 5.07772, 0.29", "-71.326, 133.604, 5.55396, 0.29", "-71.386, 133.76, 5.67579, 0.66", "-71.4587, 133.997, 5.80725, 0.66", "-71.5382, 134.341, 5.98716, 0.66", "-71.6488, 134.847, 6.22295, 0.88", "-71.8688, 135.919, 6.65777, 0.22", "-71.9053, 136.112, 6.73536, 0.22", "-72.1687, 137.574, 7.29448, 0.22", "-72.3896, 138.705, 7.69536, 0.96", "-72.5067, 139.256, 7.89106, 1.33", "-72.5219, 139.318, 7.91109, 1.33", "-72.7191, 140.058, 8.10163, 1.33", "-72.7543, 140.183, 8.1342, 1.33", "-72.9607, 140.894, 8.3087, 1.33", "-73.2799, 141.946, 8.50496, 0.22", "-73.5534, 142.891, 8.67306, 0.22", "-73.6299, 143.17, 8.71734, 1.25", "-73.6753, 143.371, 8.75975, 1.25", "-73.7708, 143.903, 8.88384, 1.25", "-73.7976, 144.098, 8.92892, 1.25", "-73.881, 144.714, 9.05816, 1.25", "-73.9395, 145.044, 9.13934, 1.25", "-74.2149, 146.359, 9.48289, 0.29", "-74.2303, 146.422, 9.50011, 0.29", "-74.5103, 147.321, 9.75528, 0.29", "-74.629, 147.639, 9.86155, 0.29", "-74.9251, 148.3, 10.1093, 0.29", "-74.9651, 148.375, 10.1355, 0.81", "-75.0698, 148.544, 10.1855, 0.81", "-75.4003, 149.081, 10.3514, 0.81", "-75.8717, 149.828, 10.5858, 0.22", "-75.9448, 149.939, 10.6131, 0.22", "-76.7146, 151.045, 10.8211, 0.22", "-76.8886, 151.288, 10.8551, 0.22", "-77.0589, 151.521, 10.8846, 0.44", "-77.6553, 152.324, 10.961, 0.44", "-78.2063, 153.043, 10.995, 0.37", "-78.6732, 153.643, 11.0336, 0.37", "-78.7165, 153.695, 11.0388, 0.37", "-79.1427, 154.202, 11.1051, 0.37", "-79.1931, 154.26, 11.1155, 0.37", "-79.333, 154.417, 11.1577, 0.81", "-79.5344, 154.632, 11.2254, 0.81", "-79.955, 155.059, 11.3615, 0.81", "-80.1716, 155.278, 11.4269, 0.81", "-80.2265, 155.331, 11.4419, 0.81", "-80.7809, 155.854, 11.5966, 0.29", "-81.9152, 156.901, 11.9186, 0.29", "-82.3456, 157.308, 12.0518, 0.74", "-82.568, 157.525, 12.1237, 0.96", "-82.8332, 157.784, 12.2118, 0.96", "-83.3293, 158.278, 12.3764, 0.96", "-83.376, 158.325, 12.392, 0.96", "-84.0327, 158.997, 12.6112, 0.29", "-84.6539, 159.644, 12.802, 0.29", "-84.7224, 159.719, 12.8225, 0.29", "-85.1367, 160.25, 13.016, 0.29", "-85.1712, 160.304, 13.0379, 0.29", "-85.2892, 160.518, 13.1194, 0.66", "-85.3212, 160.584, 13.1439, 0.66", "-85.5224, 161.05, 13.3159, 0.66", "-86.0697, 162.261, 13.7597, 0.29", "-86.3754, 162.963, 14.0228, 0.29", "-86.8687, 164.085, 14.4448, 0.29", "-86.8983, 164.151, 14.4698, 0.29", "-86.9519, 164.268, 14.5119, 0.59", "-87.2231, 164.82, 14.6839, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-44.7926, 92.4349, -4.4568, 1.33", "-45.2728, 94.1901, -4.8251, 1.33", "-45.6012, 95.3128, -5.05944, 0.88", "-46.1529, 97.1532, -5.44085, 0.66", "-46.726, 98.9338, -5.85887, 0.66", "-47.3476, 100.788, -6.32629, 0.66", "-47.433, 101.032, -6.38947, 0.66", "-47.7751, 101.873, -6.64209, 1.11", "-47.8749, 102.094, -6.71567, 1.11", "-48.3361, 103.027, -7.02558, 1.11", "-48.3668, 103.1, -7.04159, 1.11", "-48.6623, 103.907, -7.17013, 1.11", "-48.7185, 104.077, -7.18603, 1.11", "-48.8333, 104.486, -7.20274, 1.11", "-49.2459, 106.137, -7.20129, 0.52", "-49.7806, 108.704, -7.10152, 0.52", "-49.7957, 108.783, -7.09872, 0.52", "-49.928, 109.576, -7.07415, 0.88", "-50.0959, 110.651, -7.04774, 0.88", "-50.1078, 110.742, -7.04263, 0.88", "-50.2208, 111.824, -6.95725, 0.88", "-50.3903, 113.613, -6.7988, 0.44", "-50.4634, 114.526, -6.73846, 0.81", "-50.5124, 115.467, -6.69916, 1.47", "-50.5412, 116.943, -6.66569, 1.62", "-50.5297, 117.874, -6.64465, 1.62", "-50.5072, 118.548, -6.63072, 0.96", "-50.4085, 120.304, -6.60738, 0.59", "-50.3019, 122.172, -6.60333, 0.59", "-50.0795, 125.349, -6.65716, 0.59", "-49.9905, 126.515, -6.70562, 1.47", "-49.9178, 127.363, -6.74331, 1.92", "-49.8376, 128.304, -6.79233, 1.33", "-49.7657, 129.249, -6.85225, 0.81", "-49.7024, 130.217, -6.93641, 0.44", "-49.6927, 130.388, -6.95556, 0.44", "-49.6207, 131.962, -7.18231, 0.44", "-49.5778, 132.801, -7.2905, 1.18", "-49.5205, 133.883, -7.41269, 1.47", "-49.5068, 134.053, -7.43048, 1.47", "-49.4301, 134.965, -7.51909, 1.47", "-49.3791, 135.463, -7.56684, 1.47", "-49.2609, 136.322, -7.65279, 0.52", "-48.9963, 137.903, -7.82137, 0.52", "-48.5026, 140.566, -8.13136, 0.52", "-48.3143, 141.54, -8.2524, 0.88", "-48.2759, 141.73, -8.27793, 0.88", "-47.9655, 143.218, -8.49924, 0.88", "-47.7693, 144.144, -8.667, 0.88", "-47.6626, 144.789, -8.78518, 1.33", "-47.6544, 144.867, -8.80114, 1.33", "-47.6228, 145.701, -8.97565, 1.33", "-47.6308, 146.115, -9.06103, 1.33", "-47.6921, 146.851, -9.20814, 0.37", "-47.9359, 148.941, -9.609, 0.37", "-48.0192, 149.553, -9.71741, 1.18", "-48.1865, 150.644, -9.8866, 1.77", "-48.3203, 151.551, -10.0209, 1.99", "-48.389, 152.062, -10.0939, 1.99", "-48.4817, 152.822, -10.1944, 1.33", "-48.5717, 153.666, -10.3054, 0.81", "-48.7296, 155.255, -10.5052, 0.37", "-49.0323, 158.685, -10.9571, 0.37", "-49.048, 158.877, -10.9832, 0.37", "-49.1566, 160.457, -11.2063, 0.37", "-49.1715, 160.717, -11.2486, 0.88", "-49.175, 160.795, -11.263, 0.88", "-49.1955, 161.447, -11.384, 1.18", "-49.1979, 161.526, -11.3952, 1.18", "-49.2212, 162.196, -11.4734, 1.18", "-49.2562, 163.162, -11.5711, 0.37", "-49.3303, 165.826, -11.8197, 0.37", "-49.3876, 168.24, -12.0287, 0.37", "-49.4031, 169.119, -12.099, 0.96", "-49.4166, 170.214, -12.1827, 1.62", "-49.4209, 171.392, -12.2645, 1.77", "-49.409, 172.293, -12.3153, 1.77", "-49.3758, 172.953, -12.3694, 1.77", "-49.3691, 173.032, -12.3792, 1.77", "-49.2804, 173.864, -12.5223, 0.74", "-49.1705, 174.682, -12.6708, 0.52", "-49.1182, 175.057, -12.7389, 0.52", "-48.9386, 176.544, -12.9966, 0.52", "-48.9292, 176.622, -13.0098, 0.52", "-48.8925, 176.959, -13.0625, 0.88", "-48.8376, 177.54, -13.153, 1.03", "-48.8048, 178.036, -13.2341, 1.03", "-48.7936, 178.611, -13.3286, 1.03", "-48.7964, 178.69, -13.3406, 1.03", "-48.8191, 179.191, -13.3847, 1.03", "-48.839, 179.972, -13.3364, 0.74", "-48.8416, 180.131, -13.3134, 0.74", "-48.8512, 181.127, -13.1234, 0.52", "-48.8598, 183.19, -12.6888, 0.52", "-48.8709, 185.911, -12.0664, 0.37", "-48.8846, 188.23, -11.5252, 1.18", "-48.8892, 189.013, -11.3364, 1.92", "-48.8907, 189.181, -11.2984, 1.92", "-48.9342, 190.666, -10.9995, 1.92", "-49.005, 191.995, -10.782, 0.59", "-49.1149, 193.575, -10.5842, 0.59", "-49.122, 193.655, -10.5784, 0.59", "-49.265, 195.156, -10.4416, 0.59", "-49.4429, 196.84, -10.2766, 0.59", "-49.4519, 196.919, -10.2685, 0.59", "-49.6124, 198.319, -10.1517, 0.29", "-49.6384, 198.56, -10.1345, 0.29", "-49.7959, 200.332, -10.0572, 0.29", "-49.8653, 201.38, -10.0424, 1.18", "-49.8903, 202.214, -10.0741, 1.18", "-49.892, 203.139, -10.1606, 1.18", "-49.8636, 204.045, -10.3043, 0.81", "-49.8408, 204.644, -10.4094, 0.59", "-49.8359, 204.733, -10.4262, 0.59", "-49.7877, 205.734, -10.6104, 0.59", "-49.738, 206.806, -10.8133, 0.52", "-49.6638, 208.868, -11.2046, 0.44", "-49.634, 210.9, -11.6104, 0.44", "-49.6402, 212.146, -11.8657, 1.18", "-49.6619, 213.067, -12.0539, 2.06", "-49.691, 213.698, -12.1836, 2.28", "-49.751, 214.379, -12.3165, 1.55", "-49.8547, 215.303, -12.4872, 1.11", "-49.9154, 215.706, -12.5498, 0.74", "-50.1302, 216.606, -12.682, 0.29", "-50.1762, 216.759, -12.7023, 0.29", "-50.6282, 218.038, -12.8531, 0.29", "-50.6566, 218.113, -12.8607, 0.29", "-51.3339, 219.803, -12.9931, 0.29", "-51.6087, 220.447, -13.0435, 0.81", "-51.8767, 221.072, -13.0755, 1.11", "-51.9079, 221.147, -13.0767, 1.11", "-52.2571, 222.036, -13.0515, 1.11", "-52.2869, 222.123, -13.0461, 1.11", "-52.4058, 222.59, -12.9951, 0.88", "-52.5724, 223.395, -12.9009, 0.88", "-52.6919, 224.105, -12.8286, 0.66", "-52.8197, 224.858, -12.7616, 0.66", "-52.9616, 225.772, -12.6881, 0.44", "-53.13, 226.869, -12.623, 0.29", "-53.1566, 227.039, -12.6176, 0.29", "-53.3059, 227.862, -12.5916, 0.29", "-53.4319, 228.572, -12.5647, 0.29", "-53.5144, 229.012, -12.5492, 1.03", "-53.7264, 230.03, -12.5136, 1.47", "-53.9149, 230.883, -12.4898, 1.47", "-54.2098, 232.156, -12.4538, 0.37", "-54.696, 234.203, -12.3659, 0.37", "-54.8731, 234.948, -12.3297, 0.81", "-55.052, 235.669, -12.2919, 1.18", "-55.2328, 236.424, -12.254, 1.18", "-55.3868, 237.155, -12.2338, 1.11", "-55.5073, 237.825, -12.2475, 0.52", "-55.6463, 238.686, -12.279, 0.52", "-55.6677, 238.856, -12.2893, 0.52", "-55.8135, 240.521, -12.4369, 0.52", "-55.9282, 242.426, -12.657, 0.52", "-55.9685, 243.267, -12.7922, 0.88", "-55.9742, 243.357, -12.8098, 0.88", "-56.0369, 244.02, -12.9621, 0.88", "-56.124, 244.669, -13.1263, 0.88", "-56.1532, 244.821, -13.1686, 0.88", "-56.3228, 245.488, -13.3576, 0.66", "-56.6649, 246.733, -13.6818, 0.66", "-56.8903, 247.538, -13.9105, 0.96", "-57.0765, 248.154, -14.1249, 1.47", "-57.2506, 248.784, -14.3326, 1.69", "-57.2679, 248.86, -14.3528, 1.69", "-57.3711, 249.437, -14.4547, 1.69", "-57.4775, 250.14, -14.5413, 1.69", "-57.593, 251.007, -14.6064, 1.33", "-57.7491, 252.196, -14.6715, 0.29", "-57.9869, 254.051, -14.7385, 0.29", "-58.1333, 255.216, -14.7593, 0.29", "-58.2045, 255.803, -14.755, 0.96", "-58.3025, 256.724, -14.7038, 0.96", "-58.3092, 256.804, -14.6977, 0.96", "-58.3374, 257.144, -14.6879, 0.96", "-58.364, 257.738, -14.666, 1.03", "-58.3832, 258.149, -14.6572, 1.03", "-58.4263, 258.746, -14.6408, 0.81", "-58.487, 259.327, -14.6215, 0.52", "-58.5044, 259.447, -14.6197, 0.52", "-58.6021, 260.023, -14.6176, 0.37", "-58.7221, 260.659, -14.5976, 0.29", "-58.9131, 261.569, -14.5576, 0.29", "-58.9395, 261.688, -14.5527, 0.29", "-59.2602, 263.2, -14.4246, 0.29", "-59.2757, 263.278, -14.416, 0.29", "-59.4378, 264.161, -14.3025, 1.03", "-59.5523, 264.934, -14.2111, 1.77", "-59.6395, 265.606, -14.143, 1.77", "-59.7272, 266.376, -14.0816, 1.33", "-59.7843, 266.962, -14.0488, 0.88", "-59.8492, 267.72, -14.0302, 0.74", "-59.9377, 269.226, -14.0656, 0.74", "-59.9604, 270.075, -14.1031, 1.03", "-59.9575, 270.406, -14.128, 1.03", "-59.9362, 270.905, -14.1849, 1.03", "-59.9213, 271.064, -14.1911, 1.03", "-59.7522, 272.264, -14.1391, 1.33", "-59.7178, 272.45, -14.1152, 1.33", "-59.5346, 273.453, -13.9663, 1.33", "-59.5135, 273.58, -13.9464, 1.33", "-59.336, 275.054, -13.7747, 0.81", "-59.2795, 275.806, -13.7223, 0.52", "-59.2771, 275.886, -13.7209, 0.52", "-59.2787, 277.728, -13.7713, 0.52", "-59.2811, 277.808, -13.7773, 0.52", "-59.3618, 279.556, -13.9991, 0.44", "-59.438, 280.788, -14.2458, 0.44", "-59.4859, 281.407, -14.3951, 0.74", "-59.5082, 281.649, -14.4623, 0.74", "-59.5555, 282.039, -14.5872, 0.74", "-59.5651, 282.127, -14.614, 0.74", "-59.6531, 282.753, -14.8175, 0.74", "-59.8178, 283.679, -15.1063, 0.29", "-59.8344, 283.766, -15.1317, 0.29", "-60.1181, 285.039, -15.4844, 0.29", "-60.6971, 287.332, -16.0687, 0.29", "-60.9432, 288.152, -16.2807, 1.11", "-61.2013, 288.958, -16.4781, 1.77", "-61.2235, 289.034, -16.4934, 1.77", "-61.417, 289.717, -16.6279, 1.77", "-61.5804, 290.321, -16.7516, 1.77", "-61.9186, 291.671, -17.0248, 0.29", "-62.2819, 293.358, -17.3307, 0.29", "-62.9257, 296.699, -17.9161, 0.29", "-62.9401, 296.777, -17.9282, 0.29", "-63.1169, 297.82, -18.0725, 1.11", "-63.2397, 298.566, -18.1531, 1.25", "-63.3887, 299.494, -18.2118, 0.37", "-63.4229, 299.662, -18.2208, 0.37", "-63.8466, 301.417, -18.2919, 0.37", "-63.8697, 301.505, -18.2951, 0.37", "-64.2634, 302.913, -18.3769, 0.37", "-64.285, 302.99, -18.3849, 0.37", "-64.491, 303.731, -18.4889, 1.11", "-64.6769, 304.464, -18.599, 1.47", "-64.8788, 305.334, -18.7409, 1.47", "-65.0772, 306.276, -18.8911, 0.74", "-65.2399, 307.086, -19.0168, 0.44", "-65.5617, 308.785, -19.2577, 0.29", "-65.7839, 310.095, -19.4223, 0.29", "-65.7959, 310.174, -19.4314, 0.29", "-65.9389, 311.243, -19.5654, 0.29", "-65.9707, 311.507, -19.598, 0.29", "-66.0251, 312.007, -19.6705, 0.74", "-66.0813, 312.658, -19.7812, 0.74", "-66.1925, 313.973, -20.0212, 0.74", "-66.3227, 315.775, -20.3645, 0.29", "-66.3451, 316.106, -20.4438, 0.59", "-66.3596, 316.36, -20.5147, 0.59", "-66.3816, 316.84, -20.6669, 0.59", "-66.3898, 317.067, -20.7465, 0.59", "-66.3856, 317.551, -20.9164, 0.59", "-66.372, 318.364, -21.2029, 0.29", "-66.3727, 318.515, -21.2553, 0.29", "-66.3954, 319.87, -21.7116, 0.29", "-66.398, 319.986, -21.7485, 0.29", "-66.4647, 321.648, -22.3596, 0.29", "-66.4994, 322.181, -22.5667, 0.96", "-66.5474, 322.733, -22.7699, 1.47", "-66.5668, 322.883, -22.8233, 1.47", "-66.6674, 323.508, -23.0633, 1.47", "-66.853, 324.659, -23.4881, 1.47", "-67.008, 325.537, -23.7961, 0.22", "-67.2327, 326.883, -24.2299, 0.22", "-67.5359, 328.573, -24.7586, 0.22", "-67.8408, 330.102, -25.1771, 1.25", "-68.1254, 331.375, -25.4995, 2.06", "-68.2593, 331.911, -25.6159, 2.43", "-68.3877, 332.376, -25.718, 2.43", "-68.796, 333.71, -26.0064, 0.37", "-69.6027, 336.04, -26.5739, 0.37", "-69.9954, 337.073, -26.8315, 1.03", "-70.4207, 338.133, -27.1157, 1.99", "-70.699, 338.818, -27.2928, 2.36", "-70.8391, 339.156, -27.3771, 2.36", "-71.5031, 340.761, -27.8216, 0.29", "-71.5328, 340.832, -27.8441, 0.29", "-72.2069, 342.49, -28.3567, 0.29", "-72.9384, 344.325, -29.0083, 0.29", "-72.9694, 344.407, -29.0376, 0.29", "-73.4062, 345.632, -29.4688, 1.33", "-73.6365, 346.328, -29.6948, 1.84", "-73.7935, 346.809, -29.8862, 1.84", "-74.1737, 348.057, -30.4934, 0.29", "-74.5593, 349.508, -31.2757, 0.29", "-74.5848, 349.606, -31.3273, 0.74", "-74.732, 350.212, -31.6234, 0.74", "-75.0496, 351.595, -32.3594, 0.22", "-75.1018, 351.853, -32.5047, 0.74", "-75.1738, 352.219, -32.7128, 0.74" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.6297, 33.4623, -5.13081, 0.59", "-8.06933, 33.9366, -6.15429, 0.59", "-8.77237, 34.6173, -7.49209, 0.88", "-9.65057, 35.4348, -8.93411, 0.88", "-9.69823, 35.4762, -9.00216, 0.88", "-10.0049, 35.7283, -9.39742, 0.88", "-12.8819, 38.0066, -12.7687, 0.52", "-13.8383, 38.702, -13.7569, 0.52", "-14.4412, 39.1146, -14.2902, 0.52", "-15.0397, 39.5062, -14.743, 0.52", "-15.2863, 39.6652, -14.93, 0.52", "-15.7406, 39.9432, -15.2431, 0.88", "-17.3502, 40.886, -16.1255, 0.88", "-17.8355, 41.1195, -16.5235, 0.88", "-18.0902, 41.2272, -16.7348, 0.88", "-19.6498, 41.7964, -18.0989, 0.52", "-20.2855, 41.9862, -18.6619, 0.52", "-21.4894, 42.2208, -19.9394, 1.03", "-24.2518, 42.5777, -22.9796, 0.44", "-25.2625, 42.6586, -24.1044, 0.44", "-26.5755, 42.7272, -25.6801, 1.92", "-27.0038, 42.7398, -26.2223, 1.92", "-30.9628, 42.8055, -31.4309, 0.52", "-31.5416, 42.8041, -32.2003, 1.18", "-32.1373, 42.8062, -32.9823, 1.55", "-35.511, 42.9001, -37.4062, 0.29", "-35.5711, 42.9056, -37.4779, 0.29", "-36.1552, 42.9964, -38.1007, 0.29", "-36.5775, 43.0996, -38.5264, 0.74", "-37.0466, 43.2138, -39.0366, 0.74", "-37.2312, 43.2473, -39.265, 0.74", "-37.6913, 43.2854, -39.8396, 0.74", "-37.7407, 43.2872, -39.905, 0.74", "-41.5291, 43.2607, -45.0807, 0.29", "-42.3592, 43.2303, -46.2362, 0.29", "-44.2014, 43.1174, -48.7485, 1.33", "-44.6106, 43.0819, -49.2818, 1.33", "-44.6623, 43.0765, -49.3452, 1.33", "-45.8867, 42.9544, -50.6452, 0.29", "-46.0517, 42.9437, -50.7462, 0.29", "-46.8272, 43.0004, -51.2078, 0.29", "-47.2576, 43.1049, -51.3707, 0.59", "-47.6794, 43.2253, -51.8037, 0.59", "-47.7348, 43.2426, -51.8614, 0.59", "-48.8388, 43.6225, -53.0527, 0.59", "-48.9015, 43.644, -53.1186, 0.59", "-49.1186, 43.7213, -53.344, 0.59", "-52.5406, 44.9105, -56.9484, 0.22", "-54.1939, 45.4452, -58.6054, 0.22", "-54.4761, 45.5327, -58.8663, 0.74", "-54.8687, 45.6584, -59.1842, 0.74", "-55.3836, 45.8311, -59.549, 0.74", "-57.5605, 46.6224, -60.6844, 0.22", "-58.3323, 46.9395, -60.9187, 0.22", "-59.1394, 47.2813, -61.2093, 1.33", "-60.1022, 47.6986, -61.5202, 1.77", "-60.7814, 47.9934, -61.7585, 0.22", "-62.1712, 48.5949, -62.2309, 0.22", "-64.0925, 49.4559, -62.7619, 1.33", "-64.2599, 49.5281, -62.8242, 1.33", "-64.9581, 49.8151, -63.119, 1.33", "-66.7405, 50.4782, -63.9954, 0.22", "-66.8933, 50.5276, -64.0653, 0.22", "-67.92, 50.8274, -64.4857, 0.22", "-69.3454, 51.2061, -64.9049, 0.74", "-70.0349, 51.3805, -65.0679, 0.74", "-71.2871, 51.6767, -65.2683, 0.29", "-73.3026, 52.0998, -65.4775, 0.29", "-73.4251, 52.1201, -65.4846, 0.29", "-73.9358, 52.1867, -65.4958, 0.74", "-74.5515, 52.2627, -65.4457, 1.18", "-75.0711, 52.3229, -65.3817, 1.18", "-76.7993, 52.5148, -65.1981, 0.22", "-80.1252, 53.0203, -65.3836, 0.22", "-80.2059, 53.0309, -65.3933, 0.22", "-81.6266, 53.2029, -65.6248, 1.69", "-81.7056, 53.2124, -65.6445, 1.69", "-83.674, 53.4491, -66.2603, 2.14", "-86.5732, 53.778, -67.3187, 0.15", "-88.8772, 54.023, -68.45, 0.15", "-88.9495, 54.0302, -68.488, 0.15", "-90.694, 54.1811, -69.498, 1.03", "-90.8738, 54.1963, -69.5976, 1.03", "-91.4398, 54.2383, -69.8537, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.6297, 33.4623, -5.13081, 0.66", "-8.29861, 34.0896, -5.37683, 0.66", "-9.18804, 34.9879, -5.86929, 0.66", "-10.0167, 35.8683, -6.40402, 0.66", "-10.656, 36.5418, -6.80208, 0.66", "-10.9442, 36.8241, -6.94959, 0.88", "-11.6305, 37.4552, -7.27786, 0.66", "-12.3958, 38.1501, -7.64313, 0.52", "-12.5101, 38.2441, -7.69746, 0.52", "-13.5487, 39.0295, -8.15977, 0.52", "-14.9798, 40.0357, -8.74696, 0.52", "-15.843, 40.6064, -9.0937, 0.52", "-16.4673, 40.9838, -9.31516, 1.4", "-17.7922, 41.6905, -9.85508, 2.14", "-17.8448, 41.716, -9.88042, 2.14", "-18.5858, 42.0387, -10.3303, 2.65", "-18.6693, 42.0725, -10.385, 2.65", "-19.5824, 42.4475, -10.924, 2.65", "-21.2504, 43.1361, -11.8612, 1.11", "-21.3118, 43.1625, -11.8941, 1.11", "-22.0695, 43.5017, -12.2886, 0.29", "-23.2908, 44.0784, -12.8797, 0.29", "-24.8734, 44.8638, -13.5871, 0.29", "-24.9262, 44.8925, -13.6077, 0.29", "-25.577, 45.2777, -13.8181, 1.11", "-25.6468, 45.3194, -13.8411, 1.11", "-26.3938, 45.7816, -14.076, 1.4", "-27.064, 46.2137, -14.3116, 1.69", "-27.5427, 46.5301, -14.5094, 1.69", "-28.5262, 47.1976, -14.9527, 1.11", "-28.5834, 47.2374, -14.9771, 1.11", "-29.2156, 47.686, -15.2484, 0.44", "-29.2951, 47.7445, -15.282, 0.44", "-30.1371, 48.3838, -15.5926, 0.29", "-30.3155, 48.5211, -15.6451, 0.29", "-31.6258, 49.5823, -15.9011, 0.29", "-31.9662, 49.8627, -15.9571, 0.74", "-32.4987, 50.3058, -16.0503, 1.11", "-32.9519, 50.6963, -16.1144, 1.11", "-33.04, 50.7748, -16.1223, 1.11", "-33.2728, 50.9808, -16.1494, 1.11", "-33.326, 51.0303, -16.1567, 1.11", "-33.947, 51.6212, -16.2585, 0.37", "-35.4293, 53.0302, -16.5064, 0.37", "-36.3603, 53.8972, -16.6473, 0.29", "-36.4751, 54.0028, -16.6625, 0.29", "-37.2038, 54.6647, -16.7834, 0.29", "-37.8481, 55.2655, -16.9153, 1.25", "-38.63, 56.0078, -17.0966, 2.21", "-39.3964, 56.7417, -17.3573, 2.43", "-39.6966, 57.0349, -17.4775, 2.06", "-40.8105, 58.1305, -17.9242, 0.29", "-42.0322, 59.3321, -18.4254, 0.29", "-42.0824, 59.3819, -18.4442, 0.29", "-42.9756, 60.3064, -18.8165, 0.29", "-43.2931, 60.6426, -18.9648, 0.29", "-44.4922, 61.9149, -19.5371, 0.29", "-44.5471, 61.9729, -19.5615, 0.29", "-45.5483, 63.0143, -20.0177, 0.29", "-46.2671, 63.761, -20.3437, 1.18", "-46.8241, 64.3352, -20.6981, 1.62", "-46.8726, 64.3783, -20.733, 1.62", "-47.3302, 64.7282, -21.0648, 1.62", "-47.3827, 64.7643, -21.1027, 1.62", "-47.6674, 64.9374, -21.2975, 1.62", "-49.4734, 65.9756, -22.5003, 0.29", "-51.0405, 66.8553, -23.5584, 0.29", "-51.8124, 67.2781, -24.0809, 0.29", "-52.6958, 67.7508, -24.7123, 1.11", "-53.2464, 68.0404, -25.1121, 1.47", "-54.2633, 68.5626, -25.7525, 1.47", "-54.3322, 68.598, -25.7873, 1.47", "-54.9613, 68.9593, -26.0373, 1.47", "-55.7993, 69.4641, -26.2719, 0.22", "-55.8702, 69.5084, -26.2837, 0.22", "-58.1046, 70.9491, -26.5285, 0.22", "-58.2949, 71.076, -26.5658, 0.22", "-60.6942, 72.7906, -27.2412, 0.22", "-61.0443, 73.0529, -27.3582, 1.92", "-61.7906, 73.6442, -27.5916, 2.28", "-62.0307, 73.8461, -27.6825, 2.58", "-64.4357, 76.0164, -28.7484, 0.29", "-66.441, 77.8665, -29.684, 0.29", "-66.5115, 77.9343, -29.7186, 0.29", "-69.4244, 80.792, -31.0524, 0.29", "-70.3557, 81.7141, -31.4346, 1.03", "-70.8975, 82.2564, -31.6041, 1.69", "-70.9576, 82.3139, -31.6107, 1.69", "-71.6864, 82.9682, -31.6648, 1.69", "-72.1847, 83.3903, -31.682, 1.92", "-72.2498, 83.4429, -31.6853, 1.92", "-73.021, 84.0528, -31.7216, 0.29", "-75.5703, 86.0349, -31.9097, 0.22", "-77.7269, 87.7058, -32.0446, 0.22", "-77.7851, 87.7505, -32.048, 0.22", "-79.0171, 88.6945, -32.1025, 1.47", "-79.7025, 89.226, -32.1244, 1.92", "-80.4417, 89.8097, -32.1297, 1.92", "-81.35, 90.5539, -32.1022, 0.22", "-81.4073, 90.5995, -32.0981, 0.22", "-83.0378, 91.8675, -31.9296, 0.22", "-83.1783, 91.9743, -31.904, 0.22", "-85.2347, 93.5367, -31.5065, 0.22", "-85.9655, 94.1142, -31.3683, 1.4", "-86.7121, 94.7127, -31.2405, 1.69", "-86.7763, 94.7652, -31.2289, 1.69", "-87.5867, 95.4508, -31.0696, 0.22", "-87.6701, 95.5224, -31.0533, 0.22", "-89.8224, 97.3893, -30.6366, 0.22", "-90.0022, 97.547, -30.6052, 0.22", "-91.5114, 98.8582, -30.3857, 0.22", "-91.6948, 99.014, -30.3653, 0.22", "-92.2846, 99.5078, -30.3299, 1.4", "-92.89, 100.009, -30.294, 1.62", "-93.2779, 100.322, -30.2717, 1.62", "-93.9194, 100.848, -30.234, 0.22", "-93.976, 100.895, -30.2307, 0.22", "-95.2021, 101.884, -30.1357, 0.22", "-95.6179, 102.226, -30.0953, 0.66", "-95.7883, 102.368, -30.0759, 0.96", "-95.8681, 102.433, -30.0666, 0.96", "-96.4258, 102.873, -29.9964, 0.96", "-96.8621, 103.208, -29.9402, 0.22", "-96.979, 103.296, -29.9261, 0.22", "-99.9177, 105.464, -29.7417, 0.22", "-99.9688, 105.501, -29.7409, 0.22", "-100.855, 106.135, -29.7569, 1.47", "-101.522, 106.607, -29.8077, 1.99", "-102.244, 107.115, -29.8977, 1.99", "-103.184, 107.729, -30.0368, 0.15", "-104.551, 108.551, -30.283, 0.15", "-104.792, 108.692, -30.3226, 0.15", "-106.601, 109.688, -30.6761, 0.15", "-106.693, 109.735, -30.6944, 0.15", "-108.669, 110.657, -31.0242, 0.15", "-109.117, 110.854, -31.0857, 1.4", "-110.092, 111.246, -31.2139, 1.4", "-111.318, 111.711, -31.3769, 0.37", "-111.781, 111.874, -31.4365, 0.22", "-114.611, 112.835, -31.8347, 0.22", "-114.681, 112.858, -31.8462, 0.22", "-116.209, 113.341, -32.1677, 0.22", "-116.871, 113.542, -32.3308, 1.25", "-117.221, 113.674, -32.4135, 1.47", "-117.745, 113.904, -32.5509, 1.47", "-117.974, 114.018, -32.6171, 1.47", "-119.147, 114.657, -32.9557, 0.22", "-119.209, 114.694, -32.9732, 0.22", "-122.011, 116.549, -33.5831, 0.22", "-122.862, 117.151, -33.7363, 0.74", "-123.269, 117.458, -33.7851, 0.74", "-123.781, 117.862, -33.819, 0.22", "-123.994, 118.042, -33.8213, 0.22", "-125.976, 119.813, -33.8262, 0.22", "-126.078, 119.916, -33.8329, 0.22", "-127.544, 121.435, -33.9574, 0.22", "-128.071, 121.989, -33.9954, 1.55", "-128.796, 122.754, -34.0416, 2.06", "-129.542, 123.556, -34.1022, 2.36", "-130.856, 124.994, -34.2297, 0.22", "-134.166, 128.628, -34.5761, 0.22", "-136.589, 131.314, -34.8492, 0.22", "-136.663, 131.396, -34.8573, 0.22", "-137.092, 131.865, -34.8997, 1.18", "-137.64, 132.462, -34.9395, 1.62", "-137.754, 132.586, -34.9385, 1.62", "-138.131, 133.062, -34.9467, 1.62", "-138.557, 133.622, -34.9364, 1.62", "-138.922, 134.107, -34.917, 0.15", "-138.972, 134.173, -34.913, 0.15", "-139.517, 134.901, -34.8683, 0.15", "-139.712, 135.164, -34.852, 0.15", "-141.252, 137.271, -34.7398, 0.15", "-141.745, 137.979, -34.7068, 0.88", "-142.138, 138.552, -34.6905, 1.18", "-142.557, 139.176, -34.6813, 1.18", "-142.68, 139.366, -34.6811, 1.18", "-142.949, 139.792, -34.6848, 0.22", "-143.996, 141.479, -34.7645, 0.22", "-144.334, 142.037, -34.798, 0.66", "-144.591, 142.473, -34.8152, 0.66", "-144.665, 142.597, -34.8209, 0.66", "-144.789, 142.799, -34.8296, 0.66", "-144.992, 143.117, -34.8413, 0.15", "-145.119, 143.304, -34.8466, 0.15", "-147.231, 146.369, -34.8839, 0.15", "-147.406, 146.609, -34.8823, 0.59", "-147.905, 147.26, -34.8712, 0.59", "-148.159, 147.587, -34.8617, 0.22", "-149.184, 148.919, -34.8396, 0.22", "-149.268, 149.048, -34.8386, 0.22", "-150.984, 152.165, -34.9066, 0.22", "-151.314, 152.846, -34.9283, 1.25", "-151.821, 154.015, -34.9805, 1.55", "-152.206, 155.017, -35.0339, 0.22", "-153.544, 158.985, -35.331, 0.22", "-153.885, 160.125, -35.4358, 1.11", "-154.051, 160.792, -35.5078, 1.4", "-154.069, 160.861, -35.515, 1.4", "-154.309, 161.671, -35.5886, 1.4", "-154.609, 162.494, -35.6138, 0.22", "-154.655, 162.585, -35.6119, 0.22", "-155.762, 164.592, -35.4322, 0.22", "-155.875, 164.788, -35.4092, 0.22", "-156.695, 166.131, -35.2222, 0.22", "-157.108, 166.772, -35.1112, 1.03", "-157.539, 167.376, -34.9899, 1.4", "-157.897, 167.841, -34.8901, 1.4", "-157.944, 167.896, -34.8771, 1.4", "-158.407, 168.4, -34.7597, 0.22", "-158.465, 168.458, -34.7474, 0.22", "-160.141, 170.119, -34.4875, 0.22", "-160.39, 170.368, -34.4445, 0.66", "-160.433, 170.412, -34.4352, 0.66", "-160.717, 170.723, -34.3704, 0.96", "-160.871, 170.903, -34.3326, 0.96", "-161.115, 171.196, -34.2746, 0.96", "-161.394, 171.538, -34.2144, 0.81", "-161.701, 171.905, -34.161, 0.22", "-163.266, 173.752, -33.9111, 0.22", "-163.372, 173.874, -33.8965, 0.59", "-163.476, 173.99, -33.884, 0.59", "-164.081, 174.681, -33.8491, 0.59", "-164.239, 174.858, -33.85, 0.22", "-164.423, 175.064, -33.8621, 0.22", "-165.885, 176.723, -34.0205, 0.22", "-165.932, 176.778, -34.0243, 0.22", "-166.473, 177.429, -34.0594, 1.25", "-166.979, 178.059, -34.0869, 1.4", "-167.548, 178.784, -34.1072, 0.22", "-167.643, 178.907, -34.1091, 0.22", "-169.463, 181.284, -34.1022, 0.22", "-169.729, 181.63, -34.0862, 1.11", "-169.779, 181.696, -34.0795, 1.11", "-170.228, 182.296, -34.0079, 1.11", "-170.297, 182.389, -33.9956, 1.11", "-170.517, 182.692, -33.953, 1.11", "-170.809, 183.107, -33.8893, 0.15", "-170.855, 183.174, -33.8793, 0.15", "-172.244, 185.207, -33.5942, 0.15", "-172.628, 185.786, -33.518, 0.88", "-172.707, 185.907, -33.5192, 0.88", "-173.018, 186.406, -33.5987, 0.96", "-173.072, 186.546, -33.629, 0.96", "-173.248, 187.165, -33.7967, 0.96", "-173.264, 187.242, -33.8208, 0.96", "-173.622, 189.248, -34.4349, 0.22", "-173.656, 189.462, -34.4972, 0.22", "-174.336, 194.275, -35.7982, 0.22", "-174.428, 195.009, -36.0121, 1.25", "-174.436, 195.078, -36.0322, 1.25", "-174.506, 195.734, -36.167, 1.25", "-174.54, 196.026, -36.2043, 1.25", "-174.603, 196.536, -36.2856, 1.25", "-174.821, 198.112, -36.5865, 0.22", "-174.833, 198.192, -36.6003, 0.22", "-175.606, 203.375, -37.9714, 0.22", "-175.679, 203.778, -38.0938, 0.96", "-175.842, 204.667, -38.3153, 1.25", "-175.938, 205.189, -38.4346, 1.25", "-175.957, 205.294, -38.4557, 1.25", "-176.461, 208.179, -39.0526, 0.22", "-177.085, 211.695, -39.8674, 0.22", "-178.015, 216.966, -41.0283, 0.22", "-178.252, 218.236, -41.2692, 1.55", "-178.448, 219.245, -41.4381, 1.55", "-178.463, 219.325, -41.4481, 1.55", "-178.666, 220.301, -41.4909, 0.22", "-178.7, 220.457, -41.5017, 0.22", "-179.326, 222.632, -41.6876, 0.22", "-179.391, 222.847, -41.71, 0.22", "-179.692, 223.835, -41.8516, 0.22", "-179.831, 224.458, -41.9308, 0.96", "-179.937, 225.056, -41.9936, 0.96", "-179.95, 225.136, -42.0032, 0.96", "-180.142, 226.48, -42.1924, 0.22", "-180.172, 226.619, -42.2058, 0.22", "-181.061, 230.165, -42.454, 0.22", "-181.22, 230.776, -42.5122, 0.22", "-181.272, 230.978, -42.5318, 0.59", "-181.373, 231.361, -42.5756, 0.22", "-182.306, 234.869, -42.9727, 0.22", "-182.324, 234.938, -42.9827, 0.22", "-182.724, 236.385, -43.3136, 1.18", "-183.006, 237.515, -43.6013, 1.18", "-183.196, 238.377, -43.8325, 0.22", "-183.221, 238.514, -43.8982, 0.22", "-183.561, 240.981, -45.7345, 0.22", "-183.633, 241.727, -46.3143, 0.66", "-183.649, 241.965, -46.4998, 0.66", "-183.657, 242.379, -46.832, 0.66", "-183.583, 245.7, -49.4484, 0.22", "-183.574, 245.811, -49.5584, 0.22", "-183.307, 247.345, -51.1818, 0.22", "-183.201, 247.885, -51.6972, 1.25", "-183.077, 248.476, -52.2162, 1.25", "-183.065, 248.533, -52.2599, 1.25", "-182.426, 251.44, -53.869, 0.22", "-182.059, 253.256, -55.0598, 0.22", "-182.047, 253.321, -55.1117, 0.22", "-182.016, 253.635, -55.3233, 0.74", "-182.012, 253.836, -55.4296, 0.74", "-182.029, 254.332, -55.6087, 0.74", "-182.151, 255.583, -55.7987, 0.22", "-182.179, 255.745, -55.8361, 0.22", "-182.753, 258.495, -56.487, 0.22", "-182.825, 258.818, -56.5589, 0.59", "-182.889, 259.09, -56.6627, 0.59", "-182.939, 259.289, -56.76, 0.59", "-183.366, 260.314, -57.26, 0.22", "-184.193, 261.846, -58.0606, 0.22", "-184.678, 262.595, -58.4931, 1.55", "-186.371, 265.021, -59.8084, 0.07", "-186.47, 265.152, -59.8751, 0.07", "-188.972, 268.26, -61.231, 0.07", "-189.411, 268.772, -61.4267, 0.66", "-189.466, 268.831, -61.4484, 0.66", "-189.984, 269.364, -61.6005, 0.66", "-190.15, 269.537, -61.6203, 0.15", "-191.324, 270.88, -61.834, 0.15", "-191.951, 271.772, -62.0514, 0.66", "-192.083, 271.97, -62.0957, 0.66", "-192.285, 272.295, -62.1182, 0.66", "-192.316, 272.348, -62.1183, 0.66", "-192.617, 272.863, -62.0965, 0.66", "-192.883, 273.319, -62.0566, 0.15", "-193.074, 273.648, -62.0185, 0.15", "-195.219, 277.36, -61.6103, 0.15", "-195.575, 277.982, -61.5351, 0.96", "-195.87, 278.491, -61.4702, 1.33", "-195.906, 278.553, -61.4621, 1.33", "-196.302, 279.251, -61.3711, 1.33", "-196.355, 279.345, -61.3571, 1.33", "-196.649, 279.858, -61.2612, 0.15", "-198.212, 282.536, -60.7526, 0.15", "-198.262, 282.621, -60.7296, 1.03", "-198.339, 282.748, -60.6871, 1.03", "-198.694, 283.249, -60.4925, 1.25", "-198.82, 283.408, -60.4263, 1.25", "-199.135, 283.784, -60.2865, 1.25", "-200.075, 284.837, -59.8754, 0.15", "-200.14, 284.913, -59.8496, 0.15", "-201.545, 286.614, -59.1121, 0.15", "-201.7, 286.825, -59.0254, 0.15", "-203.163, 288.959, -58.2025, 0.15", "-203.252, 289.096, -58.153, 0.81", "-203.607, 289.667, -57.9659, 0.81", "-204.635, 291.421, -57.271, 0.15", "-206.636, 295.166, -55.5184, 0.15", "-206.839, 295.553, -55.3205, 0.81", "-206.87, 295.61, -55.2886, 0.81", "-207.037, 295.905, -55.1102, 0.81", "-207.86, 297.243, -54.2416, 0.15", "-207.978, 297.421, -54.1266, 0.15", "-208.473, 298.097, -53.4734, 0.15", "-209.068, 298.89, -52.7145, 0.15", "-209.838, 299.894, -51.8057, 0.66", "-209.875, 299.943, -51.7677, 0.66", "-210.262, 300.477, -51.4751, 0.66", "-210.416, 300.708, -51.36, 0.07", "-210.48, 300.819, -51.2925, 0.15", "-210.556, 300.986, -51.1863, 0.15", "-210.915, 301.796, -50.8265, 0.15", "-210.997, 301.974, -50.7475, 0.52", "-211.28, 302.557, -50.4916, 0.52", "-211.853, 303.663, -49.9512, 0.15", "-211.959, 303.851, -49.8583, 0.15", "-213.091, 305.72, -48.9382, 0.15", "-213.342, 306.107, -48.7554, 0.81", "-213.628, 306.529, -48.5906, 0.81", "-214.089, 307.172, -48.4127, 0.22", "-214.847, 308.204, -48.2511, 0.22", "-215.115, 308.557, -48.2075, 1.25", "-215.599, 309.166, -48.1615, 1.25", "-216.034, 309.76, -48.1631, 0.15", "-216.767, 310.834, -48.2671, 0.15", "-216.842, 310.955, -48.2865, 0.37", "-216.9, 311.055, -48.3026, 0.37", "-217.307, 311.794, -48.4124, 0.37", "-218.441, 314.038, -48.6482, 0.22", "-218.786, 314.781, -48.6962, 1.11", "-218.985, 315.263, -48.7174, 1.11", "-219.177, 315.751, -48.7292, 0.15", "-219.313, 316.126, -48.7307, 0.15", "-219.988, 318.219, -48.6797, 0.15", "-220.069, 318.502, -48.6583, 0.15", "-220.456, 319.877, -48.5107, 0.15", "-220.53, 320.137, -48.4856, 0.59", "-220.574, 320.291, -48.4742, 0.59", "-220.634, 320.521, -48.4571, 0.59", "-220.648, 320.591, -48.4519, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.38816, 29.0676, -1.56072, 0.44", "-2.34962, 29.2773, 10.8978, 0.44", "-2.3752, 29.2795, 10.98, 0.44", "-2.57066, 29.3021, 11.5915, 0.44", "-2.62729, 29.3113, 11.7652, 0.44", "-2.85549, 29.3662, 12.4328, 0.44", "-2.9525, 29.3963, 12.7007, 0.44", "-3.19854, 29.6737, 12.7674, 0.44", "-3.30739, 29.784, 12.7949, 0.44", "-3.90391, 30.3605, 12.9487, 0.44", "-4.8643, 31.206, 13.1691, 0.44", "-5.243, 31.5158, 13.2495, 0.66", "-5.9542, 32.0964, 13.4496, 0.44", "-6.61253, 32.6213, 13.6613, 0.44", "-6.69623, 32.69, 13.6907, 0.44", "-7.02818, 32.9741, 13.814, 0.44", "-7.11394, 33.0863, 13.852, 0.44", "-7.56526, 34.1498, 14.4986, 0.44", "-7.57871, 34.2146, 14.5496, 0.44", "-7.61982, 34.5024, 14.7879, 0.52", "-7.64888, 34.6777, 14.9337, 0.52", "-7.74866, 35.14, 15.3123, 0.52", "-8.05683, 36.1078, 16.0492, 0.52", "-8.10329, 36.2089, 16.1109, 0.52", "-8.35789, 36.7048, 16.3927, 0.52", "-8.45108, 36.8577, 16.5121, 0.52", "-8.64549, 37.1654, 16.7749, 0.52", "-8.79163, 37.422, 16.9674, 0.88", "-8.99731, 37.8984, 17.292, 0.88", "-9.01792, 37.957, 17.3302, 0.88", "-9.50429, 39.4617, 18.3583, 0.52", "-9.61267, 39.8269, 18.6134, 0.44", "-9.85809, 40.748, 19.2683, 0.44", "-10.1882, 42.0896, 20.2273, 0.29", "-10.3663, 42.9155, 20.8116, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.38816, 29.0676, -1.56072, 3.09", "1.66972, 30.7182, -1.59226, 3.09", "1.84866, 31.7672, -1.6123, 3.09", "2.1159, 33.3337, -1.64224, 3.09" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "31.3266, -38.2722, 11.9166, 0.66", "31.598, -38.1355, 12.3586, 0.66", "32.034, -38.0633, 13.0564, 0.52", "32.0786, -38.0608, 13.1265, 0.52", "32.5011, -38.0718, 13.744, 0.52", "32.5558, -38.0746, 13.8217, 0.52", "33.1321, -38.2002, 14.7246, 0.81", "33.6199, -38.43, 15.5643, 0.96", "33.6659, -38.463, 15.6405, 0.96", "34.0324, -38.7147, 16.1721, 0.96", "34.0746, -38.7466, 16.2359, 0.96", "34.7938, -39.2587, 17.2785, 0.29", "34.8631, -39.3041, 17.3735, 0.29", "35.6703, -39.8261, 18.5136, 0.29", "36.3945, -40.2607, 19.5134, 0.29", "36.9953, -40.6, 20.3838, 0.81", "37.4441, -40.8072, 21.0181, 1.03", "37.7094, -40.8892, 21.3667, 1.33", "37.7582, -40.9017, 21.433, 1.33", "38.0071, -40.9465, 21.793, 1.33", "38.6181, -41.03, 22.6251, 1.11", "39.29, -41.079, 23.4412, 0.66", "39.9403, -41.1326, 24.3775, 0.66", "40.0462, -41.1433, 24.546, 1.03", "40.1388, -41.1528, 24.698, 1.03", "40.5878, -41.1939, 25.4393, 1.03", "40.682, -41.2011, 25.5905, 1.03", "41.5081, -41.2775, 26.9588, 0.66", "41.5526, -41.282, 27.0289, 0.66", "42.1576, -41.3907, 28.1059, 0.66", "42.4055, -41.4434, 28.5711, 0.81", "42.4938, -41.4646, 28.7246, 0.81", "43.0004, -41.585, 29.5392, 0.81", "43.3385, -41.6725, 30.035, 0.81", "44.285, -41.9724, 31.402, 0.81", "44.7757, -42.1595, 32.1127, 0.52", "45.7256, -42.5457, 33.4509, 0.52", "45.8046, -42.5785, 33.5547, 0.52", "46.3153, -42.8107, 34.1782, 0.52", "47.1401, -43.1946, 35.0685, 0.52", "47.2307, -43.2354, 35.1458, 0.88", "47.3485, -43.2967, 35.2447, 0.88", "47.9404, -43.6631, 35.6999, 0.88", "48.4891, -44.0186, 36.0923, 0.44", "48.5426, -44.0608, 36.1385, 0.44", "49.2453, -44.687, 36.8843, 0.44", "49.3438, -44.7766, 37.0007, 0.44", "50.0802, -45.428, 37.9376, 0.44", "50.1186, -45.4654, 38.0008, 0.44", "50.8609, -46.2205, 39.4694, 0.74", "51.1552, -46.5209, 40.1497, 0.74", "51.2354, -46.6062, 40.3835, 0.74", "51.3765, -46.7979, 41.0434, 0.74", "51.5337, -47.094, 42.4168, 0.74", "51.5501, -47.1243, 42.5945, 0.74", "51.5899, -47.1953, 43.2359, 0.74", "51.5941, -47.2029, 43.353, 0.74", "51.7607, -47.315, 45.2737, 1.03", "51.7724, -47.3195, 45.3678, 1.03", "51.9135, -47.3425, 46.0347, 1.03", "52.3185, -47.4258, 47.5812, 0.37", "52.5825, -47.5068, 48.3421, 0.37", "53.0735, -47.6671, 49.3563, 0.29", "53.1131, -47.685, 49.4129, 0.29", "53.3106, -47.8362, 49.6634, 0.66", "53.4729, -48.0271, 49.85, 0.66", "53.8451, -48.5396, 50.2225, 0.88", "53.9031, -48.63, 50.2841, 0.88", "54.5076, -49.5526, 50.9953, 0.88", "54.9578, -50.1963, 51.5427, 0.88", "55.5595, -50.9691, 52.3073, 0.37", "55.8433, -51.2516, 52.6821, 0.37", "55.9419, -51.3161, 52.8153, 0.37", "56.509, -51.4458, 53.5376, 0.37", "56.5623, -51.4355, 53.6004, 0.37", "56.9203, -51.3243, 54.106, 0.37", "57.3526, -51.206, 54.7482, 0.74", "57.425, -51.2009, 54.8612, 0.74", "57.5135, -51.465, 55.6401, 0.74", "57.5008, -51.4983, 55.7153, 0.74", "57.1226, -52.2265, 57.3004, 0.74", "57.0131, -52.4444, 57.7558, 0.96", "56.8527, -52.7641, 58.4004, 0.96", "55.8097, -55.0589, 62.9026, 1.11", "55.115, -56.6299, 65.9022, 0.81", "55.0937, -56.6841, 66.0044, 0.81", "54.8476, -57.3628, 67.2795, 0.81", "54.8374, -57.4068, 67.3631, 0.81", "54.8659, -57.9094, 68.3283, 0.81", "54.9025, -57.9545, 68.4031, 0.81", "56.0505, -58.9012, 69.8712, 0.52", "56.0804, -58.952, 69.9632, 0.52", "56.119, -59.3907, 71.0121, 0.52", "56.0425, -59.6689, 71.8477, 0.52", "55.9709, -59.7891, 72.2897, 0.88", "55.8608, -59.9328, 72.8883, 1.4", "54.9463, -60.8897, 77.4821, 0.37", "54.7606, -61.1156, 78.5019, 0.37", "54.7275, -61.1404, 78.6212, 0.37", "54.3938, -61.3533, 79.5636, 0.37", "54.2144, -61.4623, 80.0128, 0.37", "53.8336, -61.6756, 80.8877, 0.37", "54.3612, -61.8847, 81.219, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "31.3266, -38.2722, 11.9166, 0.59", "32.186, -38.6798, 12.1528, 0.59", "32.9168, -39.0589, 12.3572, 0.59", "34.154, -39.7264, 12.7087, 0.59", "34.5445, -39.9419, 12.825, 0.96", "34.6413, -39.9944, 12.8526, 0.96", "35.3084, -40.3546, 13.0421, 0.96", "35.6325, -40.5519, 13.154, 1.18", "35.6812, -40.5834, 13.1709, 1.18", "36.1173, -40.8677, 13.3308, 1.18", "36.7206, -41.2528, 13.5636, 1.33", "37.3015, -41.6225, 13.7862, 1.25", "37.8192, -41.9489, 13.9868, 0.37", "38.7341, -42.5365, 14.3463, 0.37", "38.8237, -42.5962, 14.3818, 0.37", "39.034, -42.7486, 14.4657, 0.81", "39.0776, -42.7846, 14.4866, 0.81", "39.6048, -43.242, 14.7623, 0.81", "40.0201, -43.6044, 14.994, 0.37", "40.0556, -43.6365, 15.0162, 0.37", "40.6308, -44.1576, 15.3931, 0.37", "41.0326, -44.5328, 15.6659, 1.11", "41.3484, -44.8188, 15.8764, 1.11", "41.5004, -44.9582, 15.9842, 1.11", "41.6804, -45.1201, 16.1149, 0.74", "41.9318, -45.3311, 16.2905, 0.52", "42.2348, -45.5722, 16.4886, 0.44", "42.7536, -45.9729, 16.7956, 0.44", "43.1966, -46.3253, 17.0546, 0.22", "43.2726, -46.3841, 17.0988, 0.22", "43.8863, -46.8336, 17.477, 0.22", "44.2602, -47.09, 17.7126, 0.81", "44.2996, -47.1152, 17.7378, 0.81", "44.7483, -47.3771, 18.0241, 1.18", "45.1533, -47.5924, 18.275, 1.4", "45.6483, -47.8586, 18.6395, 0.29", "46.3209, -48.2385, 19.1966, 0.29", "46.3628, -48.263, 19.2336, 0.29", "46.62, -48.428, 19.4743, 0.59", "46.9154, -48.6598, 19.8064, 0.59", "47.4207, -49.1424, 20.4515, 0.22", "47.9563, -49.7537, 21.2091, 0.22", "47.9839, -49.789, 21.2501, 0.22", "48.2278, -50.1119, 21.6052, 0.22", "48.5964, -50.6736, 22.2018, 0.88", "48.7704, -50.9638, 22.506, 1.18", "48.8386, -51.0627, 22.6106, 1.18", "49.2029, -51.558, 23.2068, 1.18", "49.2267, -51.5867, 23.2448, 1.18", "49.672, -52.018, 23.9017, 0.22", "49.7009, -52.0406, 23.9406, 0.22", "50.2799, -52.4393, 24.7263, 0.22", "50.3113, -52.4569, 24.7661, 0.22", "50.7695, -52.6774, 25.3188, 0.81", "51.071, -52.8069, 25.6296, 1.11", "51.255, -52.8773, 25.7849, 1.55", "51.6661, -53.032, 26.0555, 1.55", "52.3024, -53.2681, 26.3346, 0.29", "52.3574, -53.2876, 26.3523, 0.29", "53.0488, -53.5404, 26.5045, 0.29", "53.7336, -53.8153, 26.6193, 0.29", "54.769, -54.2518, 26.751, 0.29", "55.6234, -54.6312, 26.7997, 0.29", "55.9241, -54.7726, 26.8013, 1.11", "56.4621, -55.0352, 26.8005, 1.25", "56.7487, -55.1869, 26.7951, 1.4", "56.8005, -55.2175, 26.7954, 1.4", "57.5178, -55.7002, 26.8593, 1.4", "57.8959, -55.9693, 26.9118, 1.4", "58.3456, -56.3084, 26.9798, 0.96", "58.6503, -56.56, 27.0329, 0.66", "58.9634, -56.8422, 27.0847, 0.66", "59.0004, -56.8783, 27.0917, 0.66", "59.2702, -57.1571, 27.152, 0.29", "59.933, -57.8514, 27.296, 0.29", "60.5971, -58.5521, 27.4411, 0.29", "61.3745, -59.3906, 27.709, 0.29", "61.765, -59.8042, 27.8853, 1.4", "61.9765, -60.0207, 27.9985, 1.99", "62.3612, -60.4037, 28.2338, 2.58", "62.8673, -60.8887, 28.5853, 2.87", "63.921, -61.8483, 29.4001, 0.52", "64.4922, -62.3565, 29.884, 0.52", "64.8492, -62.672, 30.197, 0.81", "65.1505, -62.9318, 30.4618, 0.81", "65.2022, -62.9754, 30.5057, 0.81", "65.4263, -63.166, 30.6956, 0.81", "65.4613, -63.1952, 30.7228, 0.81", "65.9726, -63.6451, 31.1468, 0.37", "66.62, -64.2202, 31.6942, 0.37", "67.4724, -65.0298, 32.4576, 0.37", "67.7318, -65.2942, 32.6897, 1.11", "68.0045, -65.6072, 32.9194, 1.4", "68.1168, -65.7472, 33.0076, 1.4", "68.3492, -66.0662, 33.166, 1.03", "68.7254, -66.666, 33.3985, 0.22", "69.0412, -67.2571, 33.5875, 0.22", "69.4851, -68.1345, 33.8422, 0.22", "69.507, -68.1795, 33.8558, 0.22", "69.7874, -68.7489, 34.0381, 0.22", "69.8103, -68.793, 34.0532, 0.22", "70.1014, -69.2942, 34.2608, 1.11", "70.3518, -69.7178, 34.4952, 1.84", "70.5525, -70.0061, 34.6848, 2.06", "70.5803, -70.0441, 34.7083, 2.06", "70.7622, -70.2741, 34.8437, 2.06", "71.2057, -70.7891, 35.1186, 0.22", "71.2388, -70.8262, 35.135, 0.22", "71.9222, -71.6103, 35.4457, 0.22", "72.0603, -71.7762, 35.4995, 0.81", "72.3568, -72.1331, 35.6029, 1.25", "72.7149, -72.5752, 35.7168, 1.55", "72.9913, -72.9089, 35.7968, 1.25", "73.3326, -73.3166, 35.903, 0.44", "73.8588, -73.9305, 36.0804, 0.44", "73.8925, -73.9685, 36.0925, 0.44", "74.1387, -74.2357, 36.1862, 0.22", "74.9672, -75.0928, 36.521, 0.22", "75.3265, -75.4323, 36.6782, 0.59", "75.616, -75.6849, 36.8117, 1.03", "75.6945, -75.7452, 36.8485, 1.03", "75.984, -75.9516, 36.9779, 1.03", "76.0252, -75.9801, 36.9947, 1.03", "76.2407, -76.1317, 37.0794, 1.03", "76.3418, -76.2023, 37.1144, 1.03", "76.8719, -76.5733, 37.2815, 0.29", "77.6661, -77.1353, 37.5141, 0.29", "78.3009, -77.5843, 37.6916, 0.29", "78.3416, -77.615, 37.7047, 0.29", "78.6352, -77.8683, 37.8093, 0.66", "78.9387, -78.1505, 37.9282, 1.03", "78.9727, -78.1869, 37.9446, 1.03", "79.1925, -78.4543, 38.0696, 1.03", "79.6512, -79.0568, 38.3649, 0.22", "80.3962, -80.0937, 38.8645, 0.22", "80.4238, -80.1345, 38.8819, 0.22", "80.65, -80.4828, 39.005, 0.96", "80.8897, -80.8611, 39.1187, 1.47", "81.0842, -81.1976, 39.1987, 1.92", "81.2843, -81.561, 39.2646, 1.92", "81.6144, -82.2091, 39.3629, 0.22", "82.1956, -83.3745, 39.5156, 0.22", "82.2282, -83.4394, 39.5228, 0.22", "82.7675, -84.5805, 39.6552, 0.22", "82.9154, -84.8868, 39.6961, 1.11", "83.0617, -85.1694, 39.7418, 1.4", "83.0898, -85.2205, 39.7515, 1.4", "83.3216, -85.6113, 39.8239, 1.4", "83.6768, -86.1907, 39.9545, 0.22", "84.3434, -87.2034, 40.2267, 0.22", "84.8398, -87.9496, 40.4682, 0.22", "84.8684, -87.9907, 40.483, 0.22", "85.0208, -88.2043, 40.5647, 1.4", "85.4777, -88.8541, 40.844, 1.84", "85.8089, -89.325, 41.0694, 1.84", "86.4403, -90.2263, 41.5504, 0.29", "87.1111, -91.1786, 42.0868, 0.29", "87.1377, -91.2172, 42.1104, 0.29", "87.512, -91.8056, 42.4769, 0.29", "87.5322, -91.8398, 42.4981, 0.29", "87.9524, -92.6302, 42.9743, 0.29", "87.9831, -92.6933, 43.0118, 0.29", "88.5342, -93.9535, 43.7381, 0.22", "88.87, -94.7244, 44.1594, 0.22", "88.9154, -94.827, 44.211, 0.22", "89.2927, -95.6894, 44.6278, 0.22", "89.3114, -95.7336, 44.6481, 0.22", "89.677, -96.5618, 45.0075, 0.22", "89.7426, -96.6966, 45.0558, 0.52", "89.942, -97.0617, 45.1997, 0.52", "89.9645, -97.1052, 45.2173, 0.52", "90.0584, -97.3028, 45.3103, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "9.17859, -46.2382, 2.49701, 1.11", "8.48312, -47.0127, 3.71532, 1.11", "7.84402, -47.9699, 4.95213, 0.52", "7.81795, -48.0183, 5.01044, 0.52", "7.52422, -48.6292, 5.72515, 0.52", "6.87602, -50.1608, 7.42142, 0.52", "6.51466, -51.1804, 8.47752, 0.52", "6.24231, -52.323, 9.50154, 0.74", "6.09309, -53.3884, 10.3136, 0.81", "6.0884, -53.4508, 10.362, 0.81", "6.08129, -53.9687, 10.7672, 0.88", "6.09726, -54.5874, 11.2589, 0.44", "6.05876, -55.0494, 11.6783, 0.29", "6.01685, -55.3073, 11.967, 0.29", "5.77789, -56.5251, 13.3841, 0.44", "5.66274, -57.12, 14.078, 0.44", "5.42193, -58.2973, 15.514, 0.74", "5.33127, -58.997, 16.4084, 0.74", "5.31599, -59.7514, 17.3914, 0.74", "5.32319, -59.8139, 17.4692, 0.74", "5.44488, -60.2907, 17.9614, 0.74", "5.46337, -60.3461, 18.0156, 0.74", "5.88206, -61.4668, 19.0543, 0.44", "6.04609, -62.0606, 19.7756, 0.74", "6.04818, -62.1002, 19.8337, 0.74", "5.96182, -62.4425, 20.4857, 0.74", "5.93371, -62.5012, 20.6115, 0.74", "5.85852, -62.6637, 20.9399, 0.74", "5.37526, -63.6478, 22.8469, 0.74", "5.08237, -64.3716, 24.1482, 0.74", "4.77002, -65.2706, 25.6991, 1.11", "4.54415, -66.0808, 27.0469, 0.29", "4.40765, -66.7594, 28.0896, 0.29", "4.39567, -66.8944, 28.2633, 0.29", "4.45271, -67.5689, 28.8144, 0.29", "4.46386, -67.629, 28.8457, 0.29", "4.65181, -68.4655, 29.075, 0.74", "4.66484, -68.5314, 29.0856, 0.74", "4.80206, -69.2601, 29.3297, 0.74", "5.02559, -69.69, 29.6665, 0.96", "5.06854, -69.7206, 29.7136, 0.96", "5.33798, -69.9024, 30.1219, 0.96", "5.47011, -69.9849, 30.3429, 0.96", "6.3777, -70.641, 31.9435, 0.37", "7.01192, -71.1195, 33.1074, 0.37", "7.54627, -71.5865, 34.1884, 0.37", "8.8377, -73.0157, 37.1746, 0.37", "8.86917, -73.0603, 37.2597, 0.37", "9.11017, -73.7246, 38.3873, 0.37", "9.11271, -73.7708, 38.4529, 0.37", "9.00057, -74.5963, 39.5548, 0.96", "8.86197, -75.0326, 40.1236, 0.96", "8.83916, -75.083, 40.1815, 0.96", "8.13866, -76.3798, 41.9018, 0.74", "8.09998, -76.428, 41.9897, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.17859, -46.2382, 2.49701, 1.25", "10.1873, -49.0094, 2.69783, 1.25", "10.2143, -49.0918, 2.70012, 1.25", "10.9365, -51.3899, 2.72676, 1.03", "10.9641, -51.4721, 2.72475, 1.03", "11.8389, -53.9415, 2.59407, 1.03", "11.9021, -54.1162, 2.5827, 1.03", "12.7396, -56.32, 2.28095, 1.03", "12.7768, -56.4113, 2.26715, 1.03", "14.1371, -59.5501, 1.66189, 1.03", "15.0068, -61.477, 1.22756, 1.11", "15.0484, -61.5649, 1.20517, 1.11", "16.8052, -65.2358, 0.213007, 1.11", "16.9571, -65.5521, 0.123252, 1.11", "17.9845, -67.7378, -0.507389, 0.96", "19.1164, -70.2076, -1.22802, 0.96", "19.5398, -71.1461, -1.49537, 1.25", "19.5747, -71.2233, -1.51633, 1.25", "20.4816, -73.2619, -2.0284, 1.25", "20.5604, -73.427, -2.06793, 1.25", "21.9703, -76.2297, -2.65595, 1.33", "22.0099, -76.3059, -2.6723, 1.33", "23.0059, -78.1883, -3.08393, 1.55", "23.0512, -78.2746, -3.10637, 1.55", "23.7188, -79.5463, -3.4951, 1.69", "23.7716, -79.6527, -3.53009, 1.69", "24.2868, -80.7868, -3.93115, 1.69", "24.3573, -80.9495, -3.99218, 1.69", "25.002, -82.5396, -4.61214, 1.11", "25.0344, -82.6287, -4.64305, 1.11", "25.8147, -84.9489, -5.40131, 1.03", "25.8674, -85.1179, -5.46117, 1.03", "26.5124, -87.6959, -6.57481, 1.03", "26.529, -87.774, -6.61022, 1.03", "27.081, -90.7819, -8.00531, 1.03", "27.0978, -90.8848, -8.05366, 1.03", "27.4267, -93.2317, -9.19593, 1.03", "27.7879, -95.6316, -10.3207, 1.03", "28.182, -98.2406, -11.5489, 1.03", "28.1982, -98.3184, -11.585, 1.03", "28.7124, -100.209, -12.4451, 1.03", "28.7668, -100.375, -12.5132, 1.03", "29.6333, -102.538, -13.2892, 1.03", "30.5328, -104.469, -13.9276, 0.81", "31.807, -107.004, -14.8364, 0.66", "32.3558, -108.053, -15.2217, 1.25", "32.8479, -108.923, -15.5567, 1.55", "33.1569, -109.446, -15.7561, 1.55", "33.2544, -109.597, -15.8116, 1.55", "33.8844, -110.492, -16.0812, 1.11", "33.9378, -110.574, -16.1039, 1.11", "34.6044, -111.656, -16.385, 0.88", "34.6545, -111.74, -16.406, 0.88", "35.4925, -113.213, -16.7558, 0.81", "35.5897, -113.391, -16.7962, 0.81", "36.1475, -114.449, -17.0266, 0.81", "36.2297, -114.614, -17.0602, 0.81", "36.6545, -115.547, -17.2317, 1.18", "36.7211, -115.704, -17.2681, 1.18", "37.1184, -116.746, -17.5384, 1.18", "37.1464, -116.826, -17.5597, 1.18", "37.5273, -117.996, -17.8636, 1.18", "37.6045, -118.25, -17.927, 1.18", "38.0744, -119.868, -18.3003, 1.18", "38.5644, -121.514, -18.6705, 1.03", "38.6149, -121.688, -18.7149, 1.03", "39.1411, -123.475, -19.205, 0.74", "39.1766, -123.588, -19.2385, 0.74", "39.858, -125.64, -19.8649, 0.74", "39.923, -125.822, -19.9204, 0.74", "40.3462, -127.0, -20.3549, 1.18", "40.6839, -127.988, -20.7352, 1.62", "40.8418, -128.529, -20.9641, 1.84", "40.8648, -128.618, -21.0024, 1.84", "41.0645, -129.469, -21.3541, 1.69", "41.406, -130.987, -21.9322, 0.66", "41.7189, -132.355, -22.4019, 0.66", "42.0956, -133.953, -22.9462, 0.52", "42.1256, -134.066, -22.9835, 0.52", "42.667, -135.778, -23.5401, 0.52", "42.6967, -135.856, -23.5647, 0.52", "43.0401, -136.536, -23.7662, 1.18", "43.5571, -137.338, -24.0184, 1.62", "44.1601, -138.156, -24.2627, 1.92", "44.5022, -138.606, -24.4028, 2.14", "44.8322, -139.023, -24.5398, 2.21", "45.5675, -139.974, -24.8466, 1.92", "46.2577, -140.869, -25.1375, 1.62", "47.17, -142.081, -25.5113, 0.96", "47.8093, -142.956, -25.7679, 0.66", "48.6587, -144.152, -26.0993, 0.59", "48.8124, -144.374, -26.1575, 0.59", "49.6202, -145.594, -26.4524, 0.59", "50.0229, -146.279, -26.6592, 1.4", "50.4, -147.003, -26.936, 1.62", "50.4758, -147.162, -27.0, 1.62", "50.8122, -147.895, -27.3042, 1.62", "50.8982, -148.074, -27.3793, 1.62", "51.7686, -149.837, -28.1232, 0.29", "52.774, -151.752, -28.9358, 0.29", "54.5914, -155.042, -30.2948, 0.29", "54.6393, -155.124, -30.3276, 0.29", "54.945, -155.621, -30.515, 1.11", "55.3301, -156.2, -30.7105, 1.77", "55.9457, -157.023, -30.9249, 2.36", "56.3355, -157.55, -31.064, 2.65", "56.5839, -157.917, -31.1756, 2.8", "56.6286, -157.989, -31.1984, 2.8", "57.2816, -159.13, -31.5692, 1.03", "57.9757, -160.404, -31.9819, 0.74", "58.936, -162.266, -32.5735, 0.74", "59.6458, -163.71, -33.0229, 0.52", "59.6979, -163.826, -33.0614, 0.52", "59.9597, -164.472, -33.2849, 0.81", "59.9856, -164.551, -33.3129, 0.81", "60.2096, -165.414, -33.6366, 0.81", "60.2289, -165.505, -33.6718, 0.81", "60.5488, -166.861, -34.1543, 0.74", "60.794, -167.722, -34.471, 0.74", "60.8881, -167.989, -34.5746, 0.29", "60.9205, -168.065, -34.6049, 0.29", "61.2846, -168.803, -34.8911, 0.29", "61.8248, -169.791, -35.2327, 0.29", "62.0658, -170.173, -35.3395, 0.29", "62.36, -170.608, -35.468, 0.29", "62.4743, -170.775, -35.5168, 0.29", "62.9689, -171.517, -35.7272, 0.29", "63.1323, -171.792, -35.7958, 1.03", "63.4873, -172.479, -35.942, 1.4", "63.5308, -172.567, -35.9598, 1.4", "63.9135, -173.386, -36.115, 1.4", "63.9517, -173.463, -36.1285, 1.4", "64.4429, -174.407, -36.2756, 0.37", "64.4831, -174.483, -36.2865, 0.37", "65.412, -176.19, -36.5309, 0.37", "65.6091, -176.545, -36.567, 0.37", "66.1184, -177.439, -36.6367, 1.33", "66.9018, -178.791, -36.7341, 2.58", "67.2642, -179.41, -36.7737, 2.95", "67.833, -180.425, -36.8368, 2.95", "68.808, -182.267, -36.939, 0.44", "68.8464, -182.346, -36.9435, 0.44", "69.6198, -184.059, -37.0469, 0.44", "69.6867, -184.219, -37.0565, 0.44", "70.3985, -186.135, -37.1694, 0.44", "70.5736, -186.657, -37.2055, 0.74", "70.9135, -187.784, -37.3163, 0.74", "70.9863, -188.046, -37.3391, 0.74", "71.1526, -188.876, -37.3828, 0.59", "71.3146, -189.879, -37.4192, 0.44", "71.3511, -190.161, -37.4259, 0.44", "71.5418, -191.819, -37.459, 0.44", "71.5734, -192.106, -37.4649, 0.44", "71.8895, -194.973, -37.3595, 0.44", "71.8989, -195.059, -37.3529, 0.44", "72.0339, -196.298, -37.2247, 1.4", "72.192, -197.734, -37.0559, 2.28", "72.3242, -198.771, -36.9287, 2.65", "72.6279, -200.757, -36.7015, 0.96", "73.0148, -202.89, -36.4642, 0.96", "73.0615, -203.156, -36.4366, 0.96", "73.3268, -204.766, -36.2753, 1.18", "73.5037, -205.847, -36.1939, 1.62", "73.6519, -206.804, -36.1593, 1.62", "73.6654, -206.889, -36.163, 1.62", "73.8624, -208.057, -36.2194, 0.52", "73.8911, -208.227, -36.2277, 0.52", "74.1495, -209.522, -36.1836, 0.52", "74.1881, -209.69, -36.1668, 0.52", "74.5225, -210.96, -35.9782, 0.52", "74.9862, -212.43, -35.7321, 0.52", "75.0162, -212.51, -35.7173, 0.52", "75.6839, -214.165, -35.3868, 1.03", "75.7968, -214.424, -35.3377, 1.03", "76.0957, -215.084, -35.181, 1.03", "76.4215, -215.762, -34.9908, 1.03", "76.7196, -216.403, -34.8183, 0.29", "76.7572, -216.493, -34.7987, 0.29", "77.3199, -218.053, -34.5657, 0.29", "77.8041, -219.443, -34.331, 1.18", "77.8377, -219.533, -34.3078, 1.18", "78.1653, -220.456, -34.0179, 1.62", "78.3186, -220.891, -33.867, 1.84", "78.4714, -221.303, -33.7292, 1.84", "78.5364, -221.469, -33.675, 1.84", "79.3409, -223.298, -33.2996, 0.74", "79.7073, -224.026, -33.1876, 0.29", "79.7693, -224.132, -33.1788, 0.29", "80.2951, -224.974, -33.1777, 0.29", "80.3917, -225.12, -33.1901, 0.29", "81.1319, -226.199, -33.2832, 0.29", "81.5534, -226.771, -33.3577, 1.11", "82.1289, -227.581, -33.4195, 1.47", "82.4997, -228.135, -33.4376, 1.77", "82.7846, -228.637, -33.4244, 1.77", "83.5409, -230.207, -33.2203, 0.66", "83.8743, -231.032, -33.0395, 0.44", "84.2963, -232.211, -32.767, 0.44", "84.3225, -232.292, -32.7479, 0.44", "84.7017, -233.399, -32.4377, 0.44", "85.2753, -235.081, -31.931, 0.29", "85.3118, -235.194, -31.8978, 0.29", "86.0141, -237.343, -31.2193, 0.29", "86.0756, -237.509, -31.1589, 0.29", "86.6481, -239.052, -30.5884, 1.18", "86.8345, -239.543, -30.4044, 1.25", "87.1448, -240.436, -30.0952, 1.25", "87.3165, -241.018, -29.889, 1.03", "87.5962, -242.241, -29.4303, 0.59", "87.8609, -243.6, -29.0047, 0.59", "87.8727, -243.684, -28.9865, 0.59", "87.9795, -244.35, -28.8613, 0.88", "88.1337, -245.23, -28.745, 1.18", "88.1617, -245.4, -28.7341, 1.18", "88.2143, -245.717, -28.749, 1.18", "88.3209, -246.259, -28.7824, 0.74", "88.434, -246.82, -28.8182, 0.74", "88.6015, -247.662, -28.8752, 0.37", "88.627, -247.79, -28.8844, 0.37", "89.0453, -250.013, -29.0373, 0.37", "89.1433, -250.541, -29.0741, 0.74", "89.1625, -250.637, -29.0815, 0.74", "89.3354, -251.481, -29.1502, 1.18", "89.4364, -251.925, -29.1913, 1.18", "89.4796, -252.092, -29.2093, 1.18", "89.7215, -252.789, -29.314, 1.18", "90.1403, -253.781, -29.4951, 0.37", "90.2259, -253.944, -29.5318, 0.37", "90.5705, -254.485, -29.6776, 0.37", "90.6188, -254.555, -29.6983, 0.37", "91.0147, -255.158, -29.8665, 0.37", "91.0686, -255.24, -29.8894, 0.37", "91.6447, -256.235, -30.1304, 0.37", "91.6774, -256.315, -30.1434, 0.37", "91.7828, -256.667, -30.1821, 0.81", "91.9395, -257.378, -30.2339, 0.81", "91.9798, -257.646, -30.2444, 0.81", "92.0741, -258.362, -30.2665, 0.96", "92.1751, -259.355, -30.2831, 0.96", "92.2399, -260.008, -30.2932, 0.29", "92.2681, -260.292, -30.2976, 0.29", "92.3703, -261.571, -30.3938, 0.29", "92.4215, -262.396, -30.4877, 1.03", "92.479, -263.198, -30.6219, 1.4", "92.5466, -263.985, -30.7695, 1.69", "92.5964, -264.606, -30.9086, 1.84", "92.7191, -266.078, -31.2781, 1.25", "92.7687, -266.694, -31.4413, 1.25", "92.8855, -268.122, -31.826, 0.52", "93.1179, -270.707, -32.4922, 0.52", "93.1928, -271.536, -32.685, 0.81", "93.2078, -271.718, -32.7194, 0.81", "93.2976, -272.88, -32.87, 0.81", "93.3089, -273.149, -32.9064, 0.81", "93.2692, -274.6, -33.132, 0.81", "93.2102, -275.225, -33.2323, 1.69", "93.1334, -275.935, -33.3402, 1.99", "93.1104, -276.117, -33.3697, 1.99", "92.9575, -277.207, -33.5555, 1.99", "92.728, -278.764, -33.8231, 0.29", "92.4347, -280.711, -34.1537, 0.29", "92.4234, -280.796, -34.1671, 0.29", "92.353, -281.422, -34.2492, 0.66", "92.2616, -282.327, -34.3597, 0.88", "92.2568, -282.413, -34.3677, 0.88", "92.2404, -283.228, -34.4542, 0.88", "92.2419, -283.494, -34.5108, 0.88", "92.2533, -284.189, -34.6903, 0.88", "92.2928, -285.319, -35.0151, 0.37", "92.3659, -286.75, -35.444, 0.37", "92.3713, -286.833, -35.4685, 0.37", "92.5467, -288.668, -36.0001, 0.37", "92.563, -288.802, -36.0372, 0.37", "92.7429, -289.942, -36.3242, 0.37", "92.8683, -290.575, -36.4525, 0.66", "92.983, -291.105, -36.5528, 0.66", "93.2172, -292.079, -36.7065, 0.66", "93.2404, -292.162, -36.7148, 0.66", "93.4889, -292.983, -36.8065, 1.4", "93.6817, -293.522, -36.8807, 1.99", "93.7142, -293.602, -36.887, 1.99", "93.9193, -294.042, -36.9071, 1.99", "93.9773, -294.161, -36.9091, 1.99", "94.2146, -294.637, -36.899, 1.99", "94.2946, -294.792, -36.8925, 1.99", "94.9093, -296.137, -36.7781, 0.52", "95.5644, -297.716, -36.5956, 0.52", "95.5926, -297.797, -36.5821, 0.52", "96.0495, -299.32, -36.2769, 0.52", "96.0962, -299.514, -36.2325, 0.52", "96.2981, -300.573, -35.9867, 0.52", "96.3067, -300.645, -35.9701, 0.52", "96.4015, -302.113, -35.5842, 0.52", "96.4075, -302.198, -35.5651, 0.52", "96.4611, -302.816, -35.466, 0.88", "96.5653, -303.546, -35.3894, 1.03", "96.6572, -303.98, -35.3711, 1.03", "96.7005, -304.18, -35.3715, 1.03", "96.7918, -304.573, -35.3886, 1.03", "97.0049, -305.433, -35.4902, 1.03", "97.2283, -306.222, -35.6297, 0.52", "97.2523, -306.304, -35.6466, 0.52", "97.8549, -308.224, -36.0902, 0.52", "97.8949, -308.353, -36.1322, 0.52", "98.4114, -310.013, -36.7964, 0.52", "98.7227, -310.99, -37.2562, 0.96", "98.7936, -311.211, -37.3792, 0.96", "99.0651, -312.064, -37.9059, 1.4", "99.5524, -313.581, -38.9111, 1.69", "99.6986, -314.059, -39.2124, 1.69", "99.7198, -314.132, -39.2559, 1.69", "100.013, -315.239, -39.8878, 0.44", "100.033, -315.314, -39.9282, 0.44", "100.502, -317.007, -40.7185, 0.44", "100.574, -317.256, -40.8078, 0.44", "101.094, -319.015, -41.3968, 0.44", "101.185, -319.321, -41.4848, 1.33", "101.213, -319.413, -41.5071, 1.33", "101.564, -320.666, -41.8237, 1.92", "101.734, -321.38, -41.9993, 1.92", "101.827, -321.844, -42.0963, 1.92", "102.065, -323.236, -42.3321, 0.59", "102.095, -323.43, -42.3639, 0.59", "102.19, -324.244, -42.4839, 0.44", "102.297, -325.577, -42.6623, 0.44", "102.398, -327.114, -42.8499, 0.37", "102.404, -327.285, -42.8776, 0.37", "102.408, -328.007, -43.0183, 1.03", "102.416, -328.623, -43.1513, 1.18", "102.428, -328.9, -43.2167, 1.18", "102.48, -329.331, -43.3615, 1.18", "102.757, -330.756, -43.9487, 0.29", "102.785, -330.844, -43.9847, 0.29", "103.156, -331.768, -44.3601, 0.29", "103.24, -331.944, -44.4278, 0.29", "103.876, -333.165, -44.8492, 0.29", "103.919, -333.239, -44.8715, 0.29", "104.936, -334.826, -45.2361, 0.29", "104.987, -334.909, -45.2544, 0.29", "105.487, -335.758, -45.4284, 0.29", "105.59, -335.937, -45.4365, 1.18", "105.715, -336.18, -45.4114, 1.18", "106.147, -337.044, -45.2578, 1.84", "106.374, -337.531, -45.1491, 1.84", "106.433, -337.656, -45.1233, 1.84", "107.421, -339.679, -44.758, 0.29", "107.996, -340.815, -44.5905, 0.29", "108.039, -340.905, -44.5818, 0.29", "108.598, -342.167, -44.5425, 0.29", "108.844, -342.769, -44.5504, 1.62", "109.165, -343.678, -44.6004, 2.28", "109.235, -343.921, -44.6292, 2.28", "109.582, -345.27, -44.7266, 0.29", "109.952, -346.922, -44.7706, 0.29", "110.046, -347.539, -44.7457, 0.74", "110.093, -348.015, -44.7023, 0.74", "110.129, -348.759, -44.6067, 0.74", "110.151, -349.585, -44.4841, 0.29", "110.153, -349.697, -44.4655, 0.29", "110.142, -351.488, -44.1916, 0.29", "110.141, -351.574, -44.1814, 0.29", "110.171, -353.455, -44.0356, 0.29", "110.183, -353.91, -44.0137, 0.96", "110.211, -354.629, -44.0019, 1.18", "110.237, -355.171, -43.997, 0.52", "110.276, -355.811, -43.9953, 0.22", "110.467, -358.528, -44.0001, 0.22", "110.475, -358.614, -44.0012, 0.22", "110.555, -359.238, -43.9891, 0.88", "110.639, -359.804, -43.9589, 1.33", "110.74, -360.424, -43.919, 1.77", "110.756, -360.509, -43.9117, 1.77", "110.893, -361.146, -43.8218, 1.77", "111.239, -362.738, -43.5701, 0.29", "111.621, -364.388, -43.2636, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-34.8844, -31.3996, 8.54955, 0.96", "-35.2284, -32.0623, 7.97062, 0.96", "-35.6473, -33.0582, 7.05056, 0.74", "-36.0242, -34.0527, 6.18086, 0.74", "-36.4779, -35.2285, 5.17349, 0.74", "-36.5024, -35.2888, 5.12456, 0.74", "-37.3301, -37.1453, 3.65079, 0.74", "-37.6276, -37.7999, 3.14379, 0.52", "-37.9482, -38.4929, 2.64463, 0.52", "-38.4401, -39.4019, 2.01124, 0.52", "-38.8137, -39.9792, 1.63577, 1.4", "-39.6621, -41.149, 0.927569, 1.69", "-40.2634, -41.8817, 0.532204, 1.69", "-40.3157, -41.937, 0.502174, 1.69", "-41.3693, -42.9275, -0.045578, 1.69", "-42.6737, -44.0701, -0.638897, 0.66", "-43.2759, -44.568, -0.878792, 0.52", "-43.4109, -44.6715, -0.925162, 0.52", "-44.3599, -45.358, -1.21414, 0.52", "-45.4363, -46.1473, -1.52365, 0.52", "-45.647, -46.2986, -1.57487, 1.03", "-46.3284, -46.7961, -1.76888, 1.55", "-47.6219, -47.7399, -2.2296, 2.28", "-48.3733, -48.3045, -2.51103, 2.28", "-49.6086, -49.2437, -2.93127, 2.28", "-49.7608, -49.3573, -2.97389, 2.28", "-51.1033, -50.3284, -3.29284, 1.47", "-51.1702, -50.3752, -3.30394, 1.47", "-52.3712, -51.2064, -3.47922, 0.74", "-53.7766, -52.2124, -3.7681, 0.74", "-53.8422, -52.26, -3.78232, 0.74", "-54.927, -53.0919, -4.03988, 0.74", "-55.7847, -53.7742, -4.28787, 0.74", "-57.0468, -54.8346, -4.76241, 0.66", "-58.0002, -55.6678, -5.25616, 0.52", "-58.118, -55.779, -5.32435, 0.52", "-58.8537, -56.4793, -5.74534, 0.52", "-59.6467, -57.2607, -6.16553, 1.55", "-60.1346, -57.7589, -6.37671, 1.92", "-61.3723, -58.9527, -6.79984, 1.92", "-62.3372, -59.8498, -7.09092, 1.92", "-63.2939, -60.7233, -7.36335, 0.52", "-64.2534, -61.5812, -7.59926, 0.52", "-65.5411, -62.7119, -7.83023, 0.52", "-66.5444, -63.5648, -7.99095, 0.52", "-67.1967, -64.106, -8.05023, 0.52", "-67.5737, -64.3834, -8.0828, 0.66", "-68.4285, -64.9654, -8.11687, 0.66", "-68.577, -65.0592, -8.13836, 0.66", "-69.5029, -65.6299, -8.32121, 0.66", "-70.6415, -66.3642, -8.54896, 2.14", "-71.7293, -67.096, -8.84029, 2.73", "-72.6167, -67.7139, -9.16043, 2.73", "-74.8723, -69.3203, -10.0391, 0.59", "-74.9443, -69.3704, -10.0738, 0.59", "-75.727, -69.9187, -10.4947, 0.59", "-77.8168, -71.3684, -11.802, 0.59", "-80.037, -72.8755, -13.3187, 0.44", "-80.96, -73.4763, -13.9914, 0.44", "-83.2539, -74.8961, -15.6452, 1.47", "-83.9877, -75.3324, -16.1855, 2.36", "-85.5207, -76.1906, -17.272, 2.36", "-86.7858, -76.8396, -18.0974, 0.81", "-86.8518, -76.873, -18.1352, 0.81", "-87.7702, -77.3484, -18.5715, 0.52", "-87.8508, -77.3943, -18.5902, 0.52", "-89.8229, -78.4658, -19.0478, 0.52", "-90.7238, -78.9748, -19.2051, 0.96", "-90.8022, -79.0258, -19.2175, 0.96", "-91.2982, -79.3637, -19.3148, 0.96", "-92.0896, -79.9338, -19.4871, 0.96", "-93.6447, -81.1045, -19.8268, 0.29", "-93.7072, -81.156, -19.84, 0.29", "-95.8865, -83.1201, -20.1522, 0.29", "-96.4741, -83.671, -20.2344, 1.62", "-97.1633, -84.3554, -20.2978, 1.99", "-97.2198, -84.4142, -20.2997, 1.99", "-97.9908, -85.259, -20.2394, 1.99", "-98.5012, -85.8206, -20.1988, 1.55", "-99.4515, -86.8446, -20.1842, 0.29", "-100.851, -88.3613, -20.1836, 0.29", "-100.905, -88.4219, -20.1853, 0.29", "-102.491, -90.185, -20.3636, 0.29", "-102.553, -90.2536, -20.3745, 0.29", "-103.355, -91.1516, -20.5486, 0.88", "-104.31, -92.3115, -20.788, 0.88", "-104.77, -92.91, -20.9391, 0.88", "-105.517, -94.0435, -21.1441, 0.29", "-106.359, -95.2598, -21.719, 0.29", "-106.409, -95.3277, -21.7581, 0.29", "-106.866, -95.9728, -22.1541, 1.77", "-107.35, -96.6462, -22.6257, 2.5", "-108.196, -97.7489, -23.4276, 2.5", "-111.119, -101.469, -26.1839, 0.88", "-111.647, -102.095, -26.7009, 0.52", "-112.329, -102.851, -27.3348, 0.37", "-112.385, -102.908, -27.384, 0.37", "-113.521, -103.977, -28.3887, 0.37", "-113.574, -104.023, -28.4326, 0.37", "-114.394, -104.833, -28.8198, 0.96", "-114.855, -105.272, -29.0406, 1.47", "-115.256, -105.643, -29.2218, 1.47", "-116.586, -106.937, -29.7948, 0.29", "-116.648, -107.002, -29.8182, 0.29", "-118.274, -108.785, -30.3379, 0.29", "-118.327, -108.843, -30.3586, 0.29", "-118.615, -109.136, -30.4796, 0.59", "-118.679, -109.196, -30.5133, 0.59", "-119.24, -109.706, -30.7986, 0.59", "-119.305, -109.757, -30.8442, 0.59", "-120.718, -110.752, -31.9949, 0.44", "-121.604, -111.436, -32.6278, 0.37", "-123.027, -112.569, -33.5689, 2.06", "-123.762, -113.177, -34.0232, 2.21", "-125.968, -115.053, -35.3193, 0.29", "-126.024, -115.105, -35.3495, 0.29", "-128.145, -117.282, -36.2995, 0.29", "-128.204, -117.348, -36.327, 0.29", "-129.307, -118.731, -36.7911, 1.77", "-129.35, -118.797, -36.8097, 1.77", "-129.77, -119.789, -36.9929, 2.21", "-130.079, -120.684, -37.2361, 2.21", "-130.446, -122.15, -37.7351, 0.22", "-130.461, -122.224, -37.7611, 0.22", "-130.824, -124.215, -38.6156, 0.22", "-131.227, -126.446, -39.7426, 0.22", "-131.533, -128.095, -40.6997, 1.33", "-131.701, -129.032, -41.2705, 1.77", "-131.731, -129.172, -41.3694, 1.77", "-132.279, -131.508, -43.1641, 0.29", "-132.732, -133.636, -44.821, 0.22", "-132.874, -134.373, -45.3791, 1.03", "-133.033, -135.422, -46.0996, 1.03", "-133.414, -138.235, -47.9527, 0.22", "-133.603, -140.023, -49.0227, 0.22", "-133.751, -142.572, -50.3454, 0.22", "-133.796, -143.714, -50.9484, 1.4", "-133.81, -144.463, -51.3384, 1.92", "-133.811, -144.536, -51.3739, 1.92", "-133.82, -145.566, -51.7644, 1.92", "-133.828, -145.639, -51.7978, 1.92", "-134.222, -147.798, -52.8781, 0.22", "-134.238, -147.88, -52.917, 0.22", "-134.617, -149.48, -53.7801, 0.22", "-135.093, -151.379, -54.8072, 0.22", "-135.391, -152.49, -55.4069, 1.47", "-135.563, -153.138, -55.7385, 1.47", "-135.763, -153.89, -56.0849, 1.47", "-136.251, -155.625, -56.886, 0.22", "-136.747, -157.109, -57.7107, 0.22", "-136.775, -157.184, -57.756, 0.22", "-136.924, -157.554, -57.9346, 0.59", "-136.996, -157.716, -58.0063, 0.59", "-137.518, -158.876, -58.4168, 0.59", "-138.291, -160.644, -58.8615, 0.15", "-138.324, -160.715, -58.8829, 0.15", "-139.268, -162.757, -59.5155, 0.15", "-139.319, -162.864, -59.5471, 0.15", "-139.901, -164.118, -59.8958, 0.15", "-139.935, -164.189, -59.9164, 0.15", "-140.449, -165.248, -60.178, 1.25", "-140.855, -166.11, -60.4226, 1.25", "-141.144, -166.73, -60.6352, 1.25", "-141.177, -166.799, -60.6613, 1.25", "-141.681, -167.819, -61.0387, 0.22", "-141.718, -167.899, -61.0659, 0.22", "-142.589, -170.039, -61.6813, 0.22", "-142.644, -170.182, -61.7315, 0.22", "-142.956, -171.114, -62.0632, 1.62", "-143.348, -172.298, -62.3781, 2.06", "-143.413, -172.463, -62.4482, 2.06", "-143.668, -173.013, -62.7358, 2.06", "-144.4, -174.36, -63.5422, 0.29", "-145.013, -175.405, -64.1557, 0.29", "-146.531, -177.847, -65.5672, 0.29", "-148.645, -181.016, -67.459, 1.69", "-149.184, -181.751, -67.9234, 1.69", "-149.519, -182.195, -68.1833, 2.14", "-150.189, -183.062, -68.645, 2.14", "-150.285, -183.196, -68.7029, 2.14", "-150.414, -183.422, -68.7601, 2.14", "-151.369, -185.424, -68.9687, 0.29", "-152.58, -188.121, -69.3665, 0.29", "-152.624, -188.224, -69.384, 0.29", "-153.628, -190.698, -69.8285, 0.29", "-154.569, -193.097, -70.241, 0.29", "-154.63, -193.255, -70.2683, 0.29", "-155.212, -194.857, -70.5035, 1.47", "-155.472, -195.543, -70.6351, 1.92", "-155.656, -196.009, -70.7359, 2.36", "-155.944, -196.649, -70.9167, 2.36", "-156.719, -198.301, -71.4423, 0.29", "-157.583, -200.219, -71.9484, 0.29" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-34.8844, -31.3996, 8.54955, 0.52", "-35.9016, -31.7543, 8.77105, 0.52", "-37.3552, -32.2657, 9.08594, 0.52", "-37.4441, -32.2935, 9.10494, 0.52", "-38.0945, -32.4959, 9.23238, 0.52", "-38.2514, -32.5429, 9.2621, 0.52", "-38.8203, -32.6868, 9.36768, 0.74", "-38.9007, -32.7042, 9.38183, 0.74", "-40.0124, -32.9181, 9.57447, 0.74", "-40.8409, -33.0698, 9.7192, 0.74", "-41.8893, -33.2605, 9.90431, 0.44", "-43.5003, -33.5863, 10.192, 0.44", "-43.5918, -33.6071, 10.2088, 0.44", "-43.8238, -33.6687, 10.2535, 0.44", "-44.267, -33.813, 10.3461, 0.81", "-44.672, -33.9744, 10.4426, 1.11", "-45.3407, -34.3274, 10.6153, 1.11", "-45.8367, -34.6691, 10.7553, 1.11", "-45.9959, -34.7801, 10.8012, 1.25", "-46.3445, -35.0079, 10.8984, 1.25", "-46.754, -35.2627, 11.0146, 1.25", "-46.8362, -35.3038, 11.0367, 1.25", "-47.4521, -35.54, 11.2215, 0.96", "-48.0926, -35.7256, 11.4254, 0.74", "-48.7657, -35.8308, 11.6369, 0.52", "-48.8871, -35.8347, 11.674, 0.52", "-50.0696, -35.7275, 12.013, 0.52", "-50.7699, -35.583, 12.2064, 0.88", "-50.9361, -35.5331, 12.2495, 0.88", "-51.9478, -35.1852, 12.4948, 0.88", "-52.3463, -35.0407, 12.584, 0.88", "-53.2692, -34.7062, 12.7679, 0.88", "-53.9718, -34.4551, 12.892, 0.52", "-55.1251, -34.0783, 13.0699, 0.52", "-55.7171, -33.9103, 13.1423, 1.11", "-56.5166, -33.7032, 13.2171, 1.4", "-57.2189, -33.5361, 13.2558, 1.4", "-57.8242, -33.4027, 13.274, 1.69", "-58.5316, -33.2434, 13.3112, 1.69", "-59.8164, -32.9304, 13.3986, 0.44", "-61.1961, -32.5935, 13.5228, 0.44", "-62.5264, -32.2659, 13.6676, 0.44", "-63.8027, -31.9451, 13.8313, 0.66", "-65.0437, -31.6282, 14.0226, 1.11", "-65.1346, -31.6051, 14.0403, 1.11", "-66.1117, -31.3472, 14.3251, 1.11", "-66.2925, -31.3031, 14.3915, 1.4", "-66.377, -31.2807, 14.4299, 1.4", "-66.8428, -31.1514, 14.635, 1.4", "-66.92, -31.1319, 14.6606, 1.4", "-67.5692, -30.9552, 14.8741, 1.4", "-67.7328, -30.9047, 14.9257, 1.4", "-68.2249, -30.7865, 15.0656, 0.96", "-68.7114, -30.6664, 15.1784, 0.96", "-69.4678, -30.4489, 15.3563, 0.44", "-69.5574, -30.4237, 15.3769, 0.44", "-70.1076, -30.2823, 15.5244, 0.44", "-70.9115, -30.0894, 15.7746, 0.37", "-72.1533, -29.8203, 16.198, 0.37", "-73.0658, -29.6508, 16.5249, 0.37", "-73.8733, -29.5164, 16.8727, 0.66", "-74.7753, -29.3814, 17.2997, 1.25", "-75.4015, -29.3157, 17.6171, 1.62", "-76.0864, -29.2697, 18.0056, 1.62", "-76.7619, -29.2774, 18.4118, 1.62", "-77.9512, -29.3397, 19.1248, 0.96", "-78.4734, -29.3767, 19.4354, 0.66", "-79.4034, -29.4541, 19.9436, 0.66", "-80.1415, -29.5311, 20.3428, 0.96", "-80.9296, -29.6254, 20.7376, 0.96", "-81.0057, -29.6348, 20.7706, 0.96", "-81.872, -29.7385, 21.0659, 0.74", "-82.7978, -29.793, 21.3413, 0.59", "-82.8785, -29.7909, 21.3634, 0.59", "-83.8195, -29.726, 21.5968, 0.59", "-84.4108, -29.6646, 21.7491, 0.37", "-84.5832, -29.6453, 21.7944, 0.37", "-86.0728, -29.454, 22.1947, 0.37", "-87.1099, -29.308, 22.4741, 0.66", "-87.2015, -29.296, 22.4988, 0.66", "-88.1321, -29.2072, 22.7503, 0.66", "-88.9335, -29.2239, 22.9702, 0.66", "-89.0249, -29.235, 22.9956, 0.66", "-89.5584, -29.4132, 23.1525, 0.96", "-89.9445, -29.5918, 23.2642, 1.33", "-90.7395, -30.0307, 23.4943, 1.33", "-91.9299, -30.7898, 23.8436, 1.33", "-92.0238, -30.8526, 23.871, 1.33", "-93.1493, -31.6173, 24.1707, 1.33", "-93.2911, -31.7154, 24.2062, 1.33", "-94.336, -32.3766, 24.4437, 0.44", "-94.4159, -32.4238, 24.4604, 0.44", "-96.1062, -33.3193, 24.8442, 0.44", "-96.9973, -33.732, 25.0673, 0.44", "-97.0726, -33.7606, 25.0874, 0.44", "-98.2931, -34.1629, 25.4788, 0.44", "-98.3686, -34.1823, 25.508, 0.44", "-99.083, -34.349, 25.8279, 0.66", "-99.921, -34.4827, 26.2879, 0.66", "-100.001, -34.4959, 26.3374, 0.66", "-100.623, -34.6232, 26.7197, 0.29", "-100.693, -34.6407, 26.7612, 0.29", "-101.522, -34.857, 27.1715, 0.29", "-101.759, -34.9213, 27.2617, 0.29", "-102.216, -35.0495, 27.4222, 0.29", "-102.471, -35.1131, 27.4994, 0.96", "-103.051, -35.2438, 27.6482, 1.25", "-103.553, -35.3334, 27.7724, 1.25", "-103.987, -35.3901, 27.8747, 1.25", "-104.614, -35.4706, 28.0218, 0.88", "-105.473, -35.5851, 28.2226, 0.37", "-105.565, -35.5983, 28.2442, 0.37", "-106.853, -35.7981, 28.547, 0.37", "-108.4, -36.0463, 28.9091, 0.37", "-108.48, -36.059, 28.9276, 0.37", "-109.471, -36.2118, 29.1472, 0.37", "-109.563, -36.226, 29.1673, 0.37", "-110.443, -36.3578, 29.3554, 0.37", "-110.536, -36.3714, 29.3747, 0.74", "-111.225, -36.4678, 29.5162, 1.4", "-111.843, -36.5119, 29.6362, 1.69", "-112.114, -36.5195, 29.6869, 1.84", "-112.549, -36.5231, 29.7677, 1.99", "-113.173, -36.5208, 29.8834, 1.99", "-114.676, -36.5135, 30.1648, 0.66", "-116.448, -36.4576, 30.5349, 0.37", "-116.786, -36.4378, 30.6104, 0.37", "-118.157, -36.301, 30.9265, 0.37", "-118.238, -36.2896, 30.9453, 0.37", "-119.419, -36.0675, 31.2203, 0.37", "-120.528, -35.8057, 31.4494, 0.37", "-121.301, -35.6016, 31.5608, 0.88", "-122.575, -35.2168, 31.6738, 1.55", "-123.691, -34.8609, 31.693, 1.84", "-124.483, -34.6195, 31.6686, 1.84", "-125.552, -34.3083, 31.6096, 1.25", "-126.959, -33.9384, 31.5118, 0.37", "-128.359, -33.5846, 31.4575, 0.29", "-129.151, -33.3932, 31.4578, 0.15", "-129.88, -33.2184, 31.4975, 0.15", "-130.928, -32.9482, 31.6369, 0.15", "-131.699, -32.6938, 31.8653, 0.66", "-132.408, -32.3808, 32.174, 1.11", "-132.946, -32.0872, 32.4458, 1.11", "-133.009, -32.0475, 32.4826, 1.11", "-133.687, -31.5736, 32.8936, 1.11", "-134.669, -30.9012, 33.4712, 0.29", "-135.358, -30.4518, 33.9294, 0.29", "-135.418, -30.414, 33.972, 0.29", "-136.868, -29.5891, 35.0205, 0.29", "-136.921, -29.5619, 35.0589, 0.29", "-137.686, -29.2463, 35.581, 0.29", "-138.771, -28.8962, 36.2352, 0.29", "-138.922, -28.8537, 36.3214, 0.29", "-139.959, -28.6411, 36.7697, 0.96", "-140.396, -28.5836, 36.8866, 1.69", "-141.351, -28.4908, 37.0466, 2.21", "-141.968, -28.4476, 37.0982, 2.21", "-142.052, -28.4439, 37.1002, 2.21", "-143.726, -28.3846, 37.0486, 0.29", "-144.98, -28.3287, 36.9612, 0.29", "-145.894, -28.2749, 36.8771, 1.03", "-146.422, -28.2342, 36.8211, 1.03", "-147.201, -28.156, 36.7356, 1.03", "-148.529, -27.9978, 36.5736, 0.29", "-150.095, -27.7508, 36.3839, 0.29", "-150.335, -27.7127, 36.3531, 0.29", "-150.777, -27.6354, 36.3081, 0.66", "-151.047, -27.5838, 36.2841, 0.66", "-151.877, -27.4134, 36.1975, 0.44", "-153.019, -27.1625, 36.0942, 0.44", "-153.111, -27.1414, 36.0817, 0.44", "-154.078, -26.9222, 35.953, 0.44", "-154.314, -26.8709, 35.9136, 0.88", "-155.613, -26.6035, 35.711, 1.33", "-155.914, -26.54, 35.6671, 1.33", "-156.379, -26.452, 35.6142, 1.33", "-157.335, -26.2855, 35.5456, 0.88", "-158.308, -26.174, 35.5416, 0.29", "-159.805, -26.0717, 35.6463, 0.29", "-160.0, -26.0742, 35.681, 0.29", "-160.94, -26.1482, 35.8607, 0.29", "-161.064, -26.1638, 35.8864, 0.29", "-162.138, -26.3549, 36.1462, 0.29", "-162.227, -26.3758, 36.1713, 0.29", "-163.222, -26.6784, 36.4139, 0.29", "-164.01, -26.9071, 36.4483, 1.55", "-164.471, -26.998, 36.4015, 1.92", "-164.553, -27.0046, 36.3895, 1.92", "-164.976, -27.0217, 36.2892, 1.92", "-165.069, -27.0241, 36.2644, 1.92", "-167.003, -27.0648, 35.5677, 0.29", "-168.485, -27.112, 34.9688, 0.29", "-169.972, -27.1578, 34.349, 0.29", "-171.531, -27.2061, 33.6431, 0.29", "-171.784, -27.2126, 33.524, 0.74", "-173.451, -27.2452, 32.7654, 0.74", "-173.794, -27.2503, 32.6135, 0.37", "-175.01, -27.3034, 32.0754, 0.37", "-176.224, -27.3575, 31.5974, 0.96", "-176.903, -27.3628, 31.3838, 0.96", "-178.105, -27.3543, 31.0739, 0.29", "-178.188, -27.352, 31.0589, 0.29", "-178.925, -27.3273, 30.9111, 0.29", "-179.728, -27.2761, 30.7501, 1.18", "-180.911, -27.1637, 30.5689, 1.62", "-181.892, -27.0486, 30.4435, 1.62", "-181.986, -27.0345, 30.4348, 1.62", "-182.711, -26.8983, 30.4084, 0.29", "-183.904, -26.6159, 30.4482, 0.29", "-184.66, -26.4249, 30.554, 0.29", "-185.423, -26.2255, 30.7182, 1.03", "-185.942, -26.0918, 30.8578, 1.03", "-186.47, -25.964, 31.0193, 1.03", "-187.39, -25.7513, 31.3438, 0.66", "-188.297, -25.5531, 31.6673, 0.29", "-188.872, -25.4346, 31.8544, 0.29", "-189.781, -25.2308, 32.0937, 1.18", "-190.199, -25.1353, 32.1905, 1.47", "-190.29, -25.1139, 32.209, 1.47", "-190.968, -24.9526, 32.3237, 1.47", "-192.075, -24.6874, 32.4689, 0.29", "-193.756, -24.3097, 32.5701, 0.29", "-194.223, -24.2209, 32.5758, 1.03", "-194.306, -24.2069, 32.5758, 1.03", "-195.004, -24.1213, 32.5315, 1.03", "-195.702, -24.0645, 32.452, 1.03", "-197.07, -24.0375, 32.2482, 0.29", "-198.365, -24.0837, 32.0255, 0.29", "-198.459, -24.088, 32.0098, 0.29", "-200.822, -24.2371, 31.602, 0.29", "-200.904, -24.2439, 31.5886, 0.29", "-202.359, -24.357, 31.3437, 0.29", "-202.429, -24.3628, 31.3337, 0.29", "-203.215, -24.428, 31.195, 0.29", "-203.309, -24.4334, 31.1786, 0.29", "-204.963, -24.4727, 30.8275, 0.29", "-206.187, -24.4561, 30.5317, 0.29", "-207.076, -24.4173, 30.2892, 2.21", "-208.396, -24.3489, 29.9235, 2.58", "-209.078, -24.3081, 29.725, 2.58", "-210.836, -24.1218, 29.2326, 0.37", "-212.02, -23.9385, 28.9064, 0.37", "-212.111, -23.9226, 28.8845, 0.37", "-212.709, -23.7848, 28.7561, 0.37", "-212.789, -23.7634, 28.7448, 0.37", "-214.463, -23.2875, 28.5506, 0.37", "-214.583, -23.2501, 28.5353, 0.37", "-216.055, -22.8086, 28.2851, 0.37", "-216.887, -22.5733, 28.1452, 0.88", "-217.822, -22.3192, 27.9954, 0.88", "-217.902, -22.3014, 27.9814, 0.88", "-219.058, -22.1244, 27.7554, 0.37", "-220.529, -21.9259, 27.4545, 0.37", "-221.395, -21.8192, 27.2763, 1.03", "-222.251, -21.7093, 27.124, 1.03", "-223.547, -21.5268, 26.9044, 0.37", "-224.557, -21.3704, 26.763, 0.37", "-224.682, -21.3504, 26.7513, 0.37", "-225.032, -21.2979, 26.7147, 0.37", "-227.642, -20.9737, 26.4996, 0.37", "-229.016, -20.847, 26.4109, 1.84", "-229.822, -20.7813, 26.3798, 2.28", "-230.972, -20.7329, 26.3645, 1.4", "-232.194, -20.7723, 26.384, 0.29", "-233.546, -20.8962, 26.4381, 0.37", "-234.695, -21.0801, 26.5169, 0.37", "-234.776, -21.0949, 26.5253, 0.37", "-237.411, -21.6051, 26.8752, 0.37", "-239.3, -21.9155, 27.1881, 0.37", "-240.248, -22.0305, 27.38, 1.55", "-240.798, -22.0735, 27.5071, 1.92", "-241.393, -22.0978, 27.6629, 1.92", "-242.362, -22.1043, 27.9271, 0.29", "-244.343, -21.9746, 28.5714, 0.29", "-245.902, -21.7518, 29.1364, 0.29", "-246.336, -21.682, 29.3061, 1.18", "-246.421, -21.666, 29.3469, 1.18", "-246.95, -21.5702, 29.6342, 1.33", "-247.922, -21.4053, 30.2147, 1.33", "-248.591, -21.3159, 30.6538, 0.29", "-249.692, -21.1958, 31.3619, 0.29", "-251.238, -21.073, 32.276, 0.29", "-252.632, -20.9902, 33.0555, 0.29", "-252.717, -20.9873, 33.0994, 0.29", "-253.669, -20.9853, 33.5526, 0.29", "-254.314, -21.0004, 33.8528, 0.81", "-254.801, -21.0244, 34.0642, 0.81", "-254.891, -21.0326, 34.0959, 0.81", "-255.213, -21.0662, 34.2169, 0.81", "-256.298, -21.19, 34.6459, 0.22", "-257.688, -21.3618, 35.2168, 0.22", "-257.802, -21.3766, 35.2691, 0.22", "-258.826, -21.5119, 35.7632, 0.22", "-259.295, -21.5751, 35.9903, 0.66", "-259.848, -21.6567, 36.237, 0.81", "-260.424, -21.7468, 36.4635, 0.81", "-261.339, -21.8878, 36.8213, 0.29", "-261.428, -21.8995, 36.8538, 0.29", "-262.431, -22.0119, 37.1926, 0.29", "-263.38, -22.0989, 37.4627, 0.96", "-263.9, -22.1307, 37.5783, 0.96", "-263.983, -22.1342, 37.5935, 0.96", "-264.784, -22.1411, 37.7091, 0.29", "-264.867, -22.1395, 37.7216, 0.29", "-266.446, -22.1147, 37.8991, 0.29", "-267.239, -22.1019, 37.9712, 1.4", "-267.873, -22.0812, 38.0108, 1.77", "-268.624, -22.0517, 38.044, 1.77", "-269.245, -22.03, 38.0634, 1.77", "-270.691, -21.9783, 38.0983, 0.29", "-270.774, -21.9737, 38.1, 0.29", "-272.614, -21.8434, 38.1553, 0.29", "-272.78, -21.8285, 38.1625, 0.29", "-273.678, -21.7426, 38.1904, 0.29", "-273.772, -21.7287, 38.1933, 0.29", "-275.184, -21.4553, 38.2383, 0.81", "-275.277, -21.4355, 38.2385, 0.81", "-275.71, -21.3504, 38.2278, 1.11", "-276.93, -21.1869, 38.2148, 0.15", "-278.46, -21.0503, 38.1813, 0.15", "-278.819, -21.0326, 38.1748, 1.03", "-279.645, -21.0204, 38.1623, 1.47", "-281.351, -21.0644, 38.0766, 0.22", "-284.313, -21.2474, 37.8656, 0.22", "-284.895, -21.3167, 37.8501, 1.03", "-285.674, -21.4586, 37.8571, 1.03", "-285.755, -21.476, 37.8609, 1.03", "-288.021, -22.0375, 38.0401, 0.22", "-288.101, -22.0592, 38.0498, 0.22", "-290.697, -22.8319, 38.4373, 0.22", "-292.137, -23.2759, 38.6889, 0.22", "-292.818, -23.4975, 38.7942, 1.33", "-293.52, -23.7324, 38.9, 1.77", "-293.864, -23.8501, 38.9566, 1.77", "-294.934, -24.2088, 39.0596, 0.22", "-296.717, -24.8038, 39.0307, 0.22", "-297.818, -25.162, 38.9896, 0.59", "-297.897, -25.1868, 38.9871, 0.59", "-298.589, -25.3938, 38.9782, 0.59", "-299.44, -25.633, 38.9939, 0.22", "-299.532, -25.6583, 39.0019, 0.22", "-300.342, -25.901, 39.1392, 0.22", "-301.178, -26.1736, 39.3677, 1.03", "-301.638, -26.3444, 39.5076, 1.03", "-301.711, -26.3748, 39.5319, 1.03", "-302.04, -26.5214, 39.6699, 1.03", "-302.796, -26.8507, 40.0206, 0.22", "-302.866, -26.8795, 40.055, 0.22", "-303.724, -27.2275, 40.482, 0.22", "-305.017, -27.7308, 41.1091, 0.22", "-305.875, -28.0175, 41.4833, 1.33", "-306.448, -28.185, 41.7131, 1.69", "-307.094, -28.3395, 41.9408, 1.69", "-308.271, -28.5778, 42.3267, 0.22", "-308.351, -28.5896, 42.3501, 0.22", "-310.315, -28.788, 42.8501, 0.22", "-310.396, -28.7923, 42.8668, 0.22", "-311.862, -28.8073, 43.1538, 0.22", "-311.956, -28.7974, 43.1721, 0.22", "-312.324, -28.712, 43.2423, 0.96", "-312.733, -28.5684, 43.3164, 1.33", "-313.366, -28.2596, 43.4223, 1.33", "-313.437, -28.2185, 43.4326, 1.33", "-315.297, -27.0047, 43.6745, 0.22", "-315.591, -26.7937, 43.7323, 0.22", "-316.785, -25.8591, 44.0139, 0.22", "-317.112, -25.5817, 44.0984, 0.22", "-318.541, -24.292, 44.4427, 0.22", "-318.63, -24.2074, 44.4627, 0.22", "-320.044, -22.7313, 44.7278, 0.22", "-320.944, -21.7556, 44.8743, 1.55", "-321.32, -21.327, 44.9213, 2.06", "-322.122, -20.3887, 44.984, 0.15", "-322.197, -20.3014, 44.985, 0.15", "-323.448, -18.8787, 44.926, 0.15", "-323.652, -18.6558, 44.8988, 0.15", "-324.551, -17.6847, 44.8013, 0.15", "-324.766, -17.462, 44.7821, 0.15", "-326.093, -16.113, 44.7047, 0.15", "-326.16, -16.049, 44.7006, 0.15", "-326.308, -15.9235, 44.6911, 0.59", "-326.828, -15.4997, 44.6399, 0.59", "-327.206, -15.2108, 44.5875, 0.15", "-327.271, -15.1623, 44.5762, 0.15", "-328.466, -14.2767, 44.2954, 0.15", "-328.531, -14.2294, 44.2794, 0.15", "-328.858, -13.9892, 44.1946, 0.74", "-328.921, -13.9395, 44.1793, 0.74", "-329.323, -13.5767, 44.0929, 0.74", "-329.381, -13.5204, 44.0798, 0.74", "-329.538, -13.3466, 44.0419, 0.22", "-329.659, -13.2228, 44.0241, 0.22", "-330.473, -12.4171, 43.9614, 0.22", "-330.661, -12.246, 43.9256, 0.66", "-330.724, -12.1973, 43.9091, 0.66", "-331.051, -11.9912, 43.8285, 0.81", "-331.608, -11.6742, 43.6941, 0.81", "-331.68, -11.6372, 43.6784, 0.81", "-332.566, -11.27, 43.4787, 0.22", "-333.05, -11.0882, 43.408, 0.22", "-334.336, -10.6109, 43.2316, 0.22", "-334.509, -10.5478, 43.2111, 1.03", "-335.349, -10.23, 43.189, 1.03", "-338.079, -9.16235, 43.3173, 0.22", "-340.853, -8.10782, 43.7058, 0.22", "-341.408, -7.90826, 43.8113, 1.25", "-342.495, -7.55285, 44.0731, 1.47", "-344.868, -6.82767, 44.8504, 0.22", "-345.045, -6.78539, 44.9284, 0.22", "-347.746, -6.33504, 46.5566, 0.22", "-348.041, -6.31302, 46.7553, 1.18", "-348.308, -6.31294, 46.9287, 1.18", "-349.52, -6.47493, 47.6849, 0.22", "-351.177, -6.88305, 48.5552, 0.22", "-351.245, -6.90833, 48.5953, 0.22", "-351.506, -7.06698, 48.7684, 0.88", "-351.998, -7.39053, 49.0749, 0.88", "-353.382, -8.33795, 49.8488, 0.15", "-353.683, -8.56047, 49.9856, 0.44", "-354.003, -8.80602, 50.1226, 0.44", "-355.513, -9.92882, 50.7053, 0.15", "-355.578, -9.97392, 50.7269, 0.15", "-356.247, -10.4248, 50.9125, 0.15", "-356.736, -10.7212, 50.9929, 0.66", "-357.098, -10.9413, 51.0589, 0.88", "-357.178, -10.9891, 51.0707, 0.88", "-357.705, -11.2802, 51.079, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.1159, 33.3337, -1.64224, 1.33", "1.81678, 34.2888, -1.60945, 1.33", "1.48474, 35.4319, -1.59202, 1.62", "1.23179, 36.2823, -1.53728, 1.62", "0.891733, 37.4022, -1.44514, 1.47", "0.586208, 38.412, -1.35481, 1.47", "-0.735864, 42.6985, -0.864806, 1.47", "-1.14033, 44.0474, -0.685819, 1.47", "-1.58231, 45.4907, -0.464848, 1.47", "-1.79021, 46.1903, -0.336273, 1.47", "-2.0079, 46.9207, -0.18359, 1.47", "-2.30706, 47.8864, 0.0781371, 1.47", "-2.53923, 48.5816, 0.351427, 1.47", "-2.55602, 48.6336, 0.369571, 1.47", "-2.86315, 49.7012, 0.63124, 1.47", "-2.8804, 49.7644, 0.644635, 1.47", "-3.2187, 51.1144, 0.85517, 1.47", "-3.39356, 51.9763, 0.882037, 1.47", "-3.55966, 52.9418, 0.845605, 1.47", "-3.68675, 53.9042, 0.70727, 1.62", "-3.69416, 53.9779, 0.68971, 1.62", "-3.77662, 54.91, 0.426141, 1.62", "-3.88564, 56.3041, -0.0264625, 1.62", "-3.95707, 57.1521, -0.349103, 1.62", "-4.07569, 58.33, -0.813511, 1.62", "-4.16146, 59.0716, -1.10796, 1.62", "-4.27662, 59.8698, -1.39902, 1.69", "-4.41744, 60.6823, -1.67051, 1.69", "-4.71594, 62.0984, -2.05272, 1.84", "-4.97537, 63.2225, -2.32226, 1.84", "-4.99256, 63.2952, -2.338, 1.84", "-5.33433, 64.7995, -2.6916, 1.84", "-5.36149, 64.9363, -2.72323, 1.84", "-5.52163, 66.0738, -3.0408, 1.84", "-5.52713, 66.1377, -3.05915, 1.84", "-5.58614, 67.3568, -3.43626, 1.84", "-5.5865, 67.4209, -3.45457, 1.84", "-5.54336, 68.8405, -3.82684, 1.84", "-5.42916, 70.8501, -4.28598, 1.84", "-5.34208, 71.7947, -4.50465, 1.84", "-5.22797, 72.8114, -4.72853, 2.06", "-5.00619, 74.6501, -5.08916, 2.06", "-4.87632, 75.6709, -5.28214, 2.43", "-4.75129, 76.5529, -5.43322, 2.65", "-4.59708, 77.5381, -5.52993, 2.65", "-4.47865, 78.1845, -5.61113, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.1159, 33.3337, -1.64224, 1.25", "3.07227, 34.2519, -1.51348, 1.25", "4.3627, 35.4702, -1.37309, 1.11", "5.39791, 36.4672, -1.26729, 1.03", "6.25538, 37.3013, -1.22137, 1.25", "7.1032, 38.1407, -1.19476, 1.33", "7.71507, 38.7653, -1.20567, 1.33", "8.73585, 39.9001, -1.29182, 1.33", "9.74564, 41.0447, -1.47093, 1.33", "10.5837, 42.0375, -1.68895, 0.88", "11.1934, 42.8201, -1.8892, 0.88", "11.8274, 43.6833, -2.12982, 0.88", "12.4329, 44.568, -2.41225, 0.88", "13.0054, 45.4746, -2.75984, 1.11", "13.0443, 45.5385, -2.7846, 1.11", "13.5891, 46.4518, -3.10793, 1.11", "13.6457, 46.5433, -3.13665, 1.11", "14.4012, 47.6806, -3.4173, 1.4", "14.8237, 48.2962, -3.55662, 1.4", "15.5019, 49.2417, -3.72276, 0.96", "16.0114, 49.922, -3.82416, 0.81", "16.7768, 50.8902, -3.93514, 0.81", "17.3826, 51.632, -3.97443, 1.11", "17.4344, 51.6919, -3.97204, 1.11", "17.8883, 52.1897, -3.94477, 1.33", "18.4073, 52.7587, -3.90224, 1.84", "18.7626, 53.1517, -3.87314, 1.99", "19.316, 53.7734, -3.84138, 1.99", "19.8265, 54.3507, -3.8491, 1.62", "20.4894, 55.1336, -3.89299, 1.33", "20.9094, 55.6507, -3.94409, 0.81", "21.4555, 56.3306, -4.07856, 0.66", "22.006, 57.0572, -4.31674, 0.66", "22.6552, 57.9547, -4.71107, 0.66", "23.1416, 58.6795, -5.09027, 0.59", "23.1792, 58.7384, -5.12772, 0.59", "23.7383, 59.6559, -5.79037, 0.59", "24.2622, 60.609, -6.50348, 0.81", "24.2912, 60.6671, -6.54897, 0.81", "24.4675, 61.0517, -6.82508, 1.03", "24.9378, 62.0535, -7.51064, 1.03", "24.9674, 62.1183, -7.54389, 1.03", "25.2485, 62.7936, -7.72672, 1.25", "25.2814, 62.8758, -7.73703, 1.25", "25.5651, 63.5885, -7.85306, 1.4", "25.5927, 63.6605, -7.8651, 1.4", "25.8836, 64.4814, -7.98405, 1.4", "26.2062, 65.398, -8.18981, 1.55", "26.4737, 66.1798, -8.40434, 1.62", "26.8458, 67.3528, -8.7393, 1.62", "27.0247, 67.9532, -8.91682, 1.25", "27.2315, 68.6516, -9.11255, 0.96", "27.5457, 69.7347, -9.41111, 0.96", "27.7599, 70.5182, -9.57734, 0.74", "28.0437, 71.6186, -9.71855, 0.52", "28.2341, 72.425, -9.7328, 0.37", "28.447, 73.3464, -9.72625, 0.37", "28.4706, 73.4536, -9.72454, 0.37", "28.6751, 74.5664, -9.72058, 0.37", "28.7218, 74.8666, -9.73712, 0.59", "28.8281, 75.6695, -9.81641, 1.33", "28.933, 76.5734, -9.93373, 1.84", "29.0617, 77.7598, -10.1515, 1.84", "29.1885, 78.9671, -10.4154, 1.84", "29.3021, 80.0711, -10.6952, 1.62", "29.3619, 80.6978, -10.8509, 1.33", "29.3751, 80.8186, -10.8829, 1.33", "29.4619, 81.543, -11.0646, 1.33", "29.5745, 82.5001, -11.2955, 0.81", "29.6712, 83.2926, -11.5149, 0.81", "29.6787, 83.3667, -11.5374, 0.81", "29.7737, 84.487, -11.8712, 0.59", "29.8279, 85.2607, -12.1091, 0.59", "29.8975, 86.5807, -12.5047, 0.59", "29.9442, 87.5915, -12.8487, 1.11", "29.9639, 88.4328, -13.1374, 1.4", "29.97, 89.1306, -13.3635, 1.77", "29.9667, 90.1828, -13.6958, 1.92", "29.9747, 91.0319, -13.9708, 1.33", "29.9959, 92.0913, -14.3146, 0.74", "30.0367, 93.4027, -14.7442, 0.74", "30.1071, 94.6457, -15.1724, 0.74", "30.1939, 95.7717, -15.569, 0.44", "30.2588, 96.5034, -15.8122, 0.44", "30.2663, 96.5772, -15.8356, 0.44", "30.3813, 97.6479, -16.1274, 0.44", "30.4857, 98.5901, -16.3692, 0.44", "30.5828, 99.5181, -16.573, 0.81", "30.6749, 100.478, -16.7459, 1.11", "30.7361, 101.356, -16.8889, 1.77", "30.7921, 102.4, -17.0247, 1.77", "30.8165, 103.173, -17.0884, 1.77", "30.8234, 103.664, -17.1238, 1.33", "30.8337, 104.252, -17.1603, 1.11", "30.8494, 105.105, -17.2157, 0.66", "30.8649, 106.002, -17.275, 0.52", "30.8819, 106.974, -17.3368, 0.52", "30.9069, 108.275, -17.4103, 0.88", "30.9204, 108.996, -17.4623, 1.62", "30.9435, 110.133, -17.5524, 2.21", "30.9514, 110.464, -17.5811, 2.65", "30.9629, 111.103, -17.642, 2.65", "30.9734, 111.908, -17.7164, 2.36", "30.9741, 113.173, -17.8291, 1.18", "30.9716, 113.978, -17.9, 0.88", "30.9825, 114.952, -17.9782, 0.66", "31.0078, 116.158, -18.0632, 0.66", "31.0796, 117.936, -18.1583, 0.66", "31.1074, 118.373, -18.163, 0.29", "31.1189, 118.527, -18.1568, 0.29", "31.1861, 119.352, -18.1099, 0.29", "31.194, 119.44, -18.1034, 0.29", "31.2744, 120.334, -18.0273, 0.29", "31.3672, 121.376, -17.9353, 0.29", "31.4045, 121.918, -17.8942, 0.81", "31.4391, 122.725, -17.8639, 1.11", "31.4504, 123.459, -17.8503, 1.47", "31.4556, 124.106, -17.8487, 1.84", "31.4531, 124.918, -17.8735, 1.84", "31.453, 125.729, -17.9222, 1.84", "31.47, 126.764, -17.9819, 0.74", "31.4809, 127.125, -18.0093, 0.74", "31.5102, 127.687, -18.0553, 0.74", "31.5858, 128.606, -18.1295, 0.52", "31.7331, 129.969, -18.2365, 0.44", "31.9461, 131.499, -18.3454, 0.44", "32.1455, 132.695, -18.418, 0.81", "32.3141, 133.547, -18.472, 1.18", "32.4461, 134.123, -18.5021, 1.33", "32.4688, 134.208, -18.5045, 1.33", "32.5762, 134.549, -18.5305, 1.33", "32.602, 134.634, -18.5414, 1.33", "32.7451, 135.198, -18.6217, 0.88", "32.8697, 135.751, -18.7022, 0.66", "33.1033, 136.855, -18.8858, 0.52", "33.3153, 137.788, -19.0696, 0.29", "33.503, 138.596, -19.241, 0.29", "33.831, 140.021, -19.5482, 0.29", "34.1106, 141.249, -19.8098, 0.29", "34.3288, 142.223, -20.0076, 1.18", "34.5985, 143.467, -20.2316, 2.21", "34.6949, 143.947, -20.2971, 3.02", "34.841, 144.659, -20.3896, 3.02", "34.9772, 145.455, -20.4813, 2.43", "35.0445, 145.937, -20.5158, 1.77", "35.1227, 146.668, -20.5543, 1.33", "35.1654, 147.234, -20.5791, 0.88", "35.1946, 147.67, -20.6043, 0.37", "35.2527, 148.63, -20.6692, 0.37", "35.3042, 149.632, -20.7436, 0.37", "35.3701, 151.141, -20.8681, 0.22", "35.3899, 151.88, -20.9349, 0.81", "35.4138, 152.85, -21.0254, 1.25", "35.4234, 153.412, -21.0754, 1.62", "35.4335, 154.141, -21.1313, 1.62", "35.4382, 154.958, -21.176, 0.88", "35.45, 155.546, -21.1837, 0.52", "35.4613, 155.907, -21.1903, 0.59", "35.4973, 156.792, -21.2011, 0.37", "35.5199, 157.206, -21.2167, 0.81", "35.5608, 157.768, -21.2528, 0.81", "35.5705, 157.885, -21.2591, 0.81", "35.6004, 158.293, -21.2779, 0.81", "35.6046, 158.37, -21.2804, 0.81", "35.64, 159.006, -21.2963, 0.44", "35.6833, 159.816, -21.2781, 0.44", "35.7371, 160.671, -21.2279, 0.22", "35.8538, 162.278, -21.0943, 0.22", "36.0695, 164.609, -20.8467, 0.22", "36.0785, 164.685, -20.8368, 0.22", "36.2152, 165.637, -20.6867, 0.96", "36.387, 166.622, -20.4948, 1.69", "36.5382, 167.341, -20.335, 2.28", "36.6755, 167.894, -20.1667, 2.5", "36.8048, 168.363, -19.9942, 2.36", "36.9189, 168.77, -19.855, 1.92", "37.2165, 169.813, -19.528, 1.62", "37.5344, 170.951, -19.1611, 0.37", "37.8008, 171.909, -18.859, 0.29", "37.8233, 171.991, -18.834, 0.29", "38.3404, 173.834, -18.3088, 0.29", "38.9047, 175.72, -17.8184, 0.29", "38.928, 175.793, -17.8028, 0.29", "39.1472, 176.447, -17.6751, 1.11", "39.1716, 176.52, -17.6643, 1.11", "39.4243, 177.318, -17.5512, 1.47", "39.4416, 177.382, -17.5436, 1.47", "39.6003, 178.182, -17.5033, 1.55", "39.6092, 178.247, -17.5009, 1.55", "39.64, 178.567, -17.4926, 1.55", "39.6439, 178.633, -17.4895, 1.55", "39.6614, 179.517, -17.437, 0.66", "39.6694, 180.337, -17.3757, 0.37", "39.6648, 181.386, -17.2882, 0.29", "39.6625, 181.474, -17.2805, 0.29", "39.6387, 182.005, -17.2373, 0.44", "39.6251, 182.17, -17.2263, 0.44", "39.5536, 182.729, -17.1896, 0.44", "39.5389, 182.805, -17.1859, 0.44", "39.3799, 183.373, -17.1519, 1.03", "39.1578, 184.071, -17.1102, 1.03", "39.0052, 184.514, -17.0946, 0.74", "38.9097, 184.807, -17.0922, 0.37", "38.7961, 185.195, -17.0953, 0.37", "38.5631, 186.106, -17.1096, 0.22", "38.546, 186.181, -17.1113, 0.22", "38.2135, 187.924, -17.1608, 0.22", "38.0624, 189.001, -17.1954, 1.03", "37.9726, 189.971, -17.2307, 1.62", "37.9473, 190.376, -17.235, 1.92", "37.9282, 190.862, -17.2298, 1.84", "37.9029, 191.518, -17.1786, 1.47", "37.868, 192.476, -17.0483, 0.37", "37.7921, 193.993, -16.7873, 0.29", "37.7048, 195.547, -16.4949, 0.29", "37.6193, 196.901, -16.2338, 0.29", "37.5343, 198.14, -15.951, 1.03", "37.4852, 198.778, -15.7931, 1.77", "37.4313, 199.402, -15.6441, 1.77", "37.3768, 199.964, -15.5007, 1.4", "37.2974, 200.751, -15.3066, 0.66", "37.184, 201.745, -15.0586, 0.22", "36.9867, 203.405, -14.6697, 0.22", "36.7352, 205.273, -14.127, 0.22", "36.5836, 206.323, -13.7823, 0.81", "36.5129, 206.791, -13.6211, 1.18", "36.3851, 207.615, -13.3289, 1.77", "36.2896, 208.229, -13.1146, 1.77", "36.0425, 209.756, -12.5529, 0.96", "35.9794, 210.149, -12.4138, 0.52", "35.8206, 211.16, -12.1406, 0.29", "35.8088, 211.235, -12.1244, 0.29", "35.6357, 212.318, -11.9584, 0.15", "35.3866, 213.84, -11.8288, 0.15", "35.3745, 213.917, -11.8295, 0.15", "35.2641, 214.611, -11.8432, 0.81", "35.1781, 215.17, -11.8615, 1.18", "35.1667, 215.246, -11.8654, 1.18", "35.0688, 215.911, -11.9247, 1.18", "35.0584, 215.988, -11.9262, 1.18", "34.9593, 216.716, -11.89, 0.59", "34.9345, 216.89, -11.8523, 0.74", "34.8737, 217.382, -11.7208, 0.74", "34.8657, 217.457, -11.7027, 0.74", "34.7879, 218.284, -11.5214, 0.29", "34.6201, 220.112, -11.1605, 0.29", "34.4966, 221.52, -10.9096, 0.29", "34.3776, 222.952, -10.689, 0.29", "34.3083, 223.891, -10.5712, 1.18", "34.2501, 224.619, -10.4873, 1.84", "34.1929, 225.108, -10.4491, 1.84", "34.103, 225.665, -10.4259, 1.47", "33.9895, 226.243, -10.4339, 1.11", "33.8071, 226.957, -10.428, 0.44", "33.5808, 227.751, -10.4005, 0.22", "33.1687, 229.111, -10.3704, 0.22", "32.9746, 229.717, -10.3653, 0.29", "32.8943, 229.96, -10.3679, 0.29", "32.6224, 230.79, -10.3974, 0.29", "32.572, 230.948, -10.4085, 0.29", "32.3342, 231.834, -10.5017, 0.29", "32.314, 231.92, -10.5084, 0.29", "32.167, 232.561, -10.5517, 0.88", "32.0448, 233.136, -10.5936, 1.55", "31.924, 233.782, -10.6418, 1.55", "31.8494, 234.251, -10.6749, 1.18", "31.7628, 234.942, -10.7169, 0.74", "31.6965, 235.519, -10.7638, 0.44", "31.6084, 236.324, -10.8387, 0.29", "31.6006, 236.401, -10.8462, 0.29", "31.443, 238.015, -11.0096, 0.29", "31.2383, 240.016, -11.2169, 0.29", "31.1356, 240.951, -11.3132, 1.11", "31.0564, 241.589, -11.3919, 1.84", "30.9555, 242.306, -11.4965, 2.21", "30.9444, 242.381, -11.5105, 2.21", "30.8584, 242.908, -11.6289, 2.21", "30.7107, 243.791, -11.843, 1.03", "30.5644, 244.69, -12.0545, 0.66", "30.3835, 245.806, -12.3566, 0.37", "30.1403, 247.286, -12.79, 0.37", "30.0141, 248.089, -13.0311, 0.96", "29.9381, 248.627, -13.1935, 0.96", "29.9263, 248.711, -13.2188, 0.96", "29.8187, 249.504, -13.4632, 0.96", "29.7455, 250.057, -13.6607, 0.52", "29.6981, 250.432, -13.7953, 0.52", "29.6392, 250.967, -13.9754, 0.52", "29.6213, 251.138, -14.0243, 0.52", "29.5525, 251.789, -14.1746, 0.29", "29.495, 252.368, -14.2722, 0.29", "29.4187, 253.092, -14.3806, 0.22", "29.301, 254.158, -14.5127, 0.22", "29.2193, 254.793, -14.5641, 1.03", "29.1523, 255.303, -14.5843, 1.4", "29.0711, 255.862, -14.5826, 1.4", "28.9717, 256.605, -14.5735, 1.4", "28.8663, 257.407, -14.5583, 0.81", "28.7711, 258.151, -14.5543, 0.29", "28.711, 258.629, -14.5595, 0.29", "28.6631, 259.043, -14.5694, 0.29", "28.5061, 260.496, -14.6245, 0.29", "28.499, 260.572, -14.6304, 0.29", "28.4294, 261.405, -14.7625, 1.03", "28.3746, 262.195, -14.9309, 1.69", "28.3487, 262.581, -15.0295, 1.69", "28.3102, 263.286, -15.2235, 1.33", "28.2753, 264.033, -15.4413, 0.59", "28.2382, 264.823, -15.6683, 0.22", "28.1446, 267.017, -16.2895, 0.22", "28.1053, 267.807, -16.5163, 0.81", "28.0706, 268.44, -16.6973, 1.18", "28.0601, 268.591, -16.7346, 1.18", "28.0224, 269.058, -16.8261, 1.18", "28.0151, 269.134, -16.8369, 1.18", "27.9879, 269.374, -16.8693, 1.18", "27.8731, 270.32, -16.9653, 0.37", "27.6554, 272.099, -17.1351, 0.22", "27.6462, 272.186, -17.1423, 0.22", "27.5937, 272.836, -17.1842, 0.96", "27.5891, 272.902, -17.1873, 0.96", "27.5558, 273.554, -17.2014, 1.47", "27.5548, 273.631, -17.2034, 1.47", "27.578, 274.201, -17.2475, 1.47", "27.5868, 274.762, -17.3099, 1.18", "27.5843, 275.239, -17.4093, 0.96", "27.5738, 275.718, -17.5322, 0.59", "27.5563, 276.375, -17.7232, 0.29", "27.5382, 277.076, -17.936, 0.29", "27.4894, 278.353, -18.3364, 0.22", "27.4391, 279.488, -18.6865, 0.59", "27.4325, 279.646, -18.7384, 0.59", "27.4187, 279.922, -18.8275, 0.88", "27.3819, 280.472, -18.9832, 0.88", "27.3202, 281.046, -19.1026, 1.03", "27.2598, 281.524, -19.1802, 1.03", "27.1543, 282.256, -19.2639, 0.74", "27.0432, 282.982, -19.3431, 0.37", "26.8738, 284.044, -19.4509, 0.29", "26.6125, 285.633, -19.5959, 0.22", "26.4774, 286.466, -19.6792, 1.11", "26.3738, 287.097, -19.7428, 1.77", "26.2865, 287.653, -19.7923, 2.14", "26.2074, 288.221, -19.8504, 2.14", "26.1262, 288.875, -19.931, 1.77", "26.0162, 289.9, -20.0715, 0.81", "25.946, 290.55, -20.1512, 0.29", "25.7092, 292.805, -20.4234, 0.29", "25.6189, 293.759, -20.5625, 0.29", "25.5511, 294.598, -20.6988, 0.96", "25.506, 295.321, -20.8232, 1.11", "25.4993, 295.485, -20.8508, 1.11", "25.4809, 296.042, -20.9467, 1.11", "25.4359, 297.082, -21.1053, 0.66", "25.4064, 297.565, -21.1614, 0.29", "25.3997, 297.653, -21.1689, 0.29", "25.2826, 298.929, -21.2487, 0.29", "25.0421, 301.364, -21.347, 0.29", "24.897, 302.689, -21.3687, 0.96", "24.7924, 303.576, -21.3586, 1.99", "24.7076, 304.306, -21.3542, 2.28", "24.6165, 305.116, -21.3546, 1.25", "24.5548, 305.678, -21.3595, 0.52", "24.483, 306.421, -21.3745, 0.29", "24.3768, 307.636, -21.4208, 0.29", "24.3334, 308.139, -21.4444, 0.29", "24.2351, 309.2, -21.5, 0.29", "24.1791, 309.766, -21.5334, 1.03", "24.1704, 309.843, -21.5355, 1.03", "24.0648, 310.661, -21.5277, 1.03", "24.0264, 310.901, -21.5132, 1.03", "23.9415, 311.333, -21.4646, 1.03", "23.925, 311.408, -21.4523, 1.03", "23.7846, 312.179, -21.331, 0.59", "23.7722, 312.255, -21.3232, 0.59", "23.6903, 312.813, -21.2946, 0.29", "23.6743, 312.93, -21.2935, 0.29", "23.6053, 313.503, -21.3046, 0.29", "23.4747, 314.552, -21.3529, 0.22", "23.2915, 316.11, -21.4942, 0.22", "23.2338, 316.626, -21.5466, 0.88", "23.1526, 317.518, -21.6538, 1.4", "23.0924, 318.317, -21.7589, 1.55", "23.0548, 318.926, -21.8385, 1.55", "23.0215, 319.663, -21.9286, 1.55", "23.0037, 320.712, -22.0401, 0.52", "22.9958, 322.663, -22.206, 0.15", "22.9963, 322.74, -22.2115, 0.15", "23.0004, 323.181, -22.2345, 0.74", "23.0068, 323.904, -22.2531, 0.74", "22.9968, 324.395, -22.2513, 0.74", "22.9766, 324.804, -22.2472, 0.74", "22.9268, 325.372, -22.2395, 0.29", "22.8575, 326.016, -22.2432, 0.29", "22.7305, 326.985, -22.2709, 0.29", "22.5836, 327.962, -22.3057, 0.29", "22.4786, 328.601, -22.3327, 0.96", "22.3489, 329.325, -22.3712, 1.25", "22.2702, 329.755, -22.3966, 1.25", "22.1154, 330.565, -22.4482, 0.52", "21.9865, 331.199, -22.4917, 0.52", "21.6227, 332.971, -22.6513, 0.52", "21.2534, 334.837, -22.8472, 0.52", "21.2367, 334.923, -22.8572, 0.52", "20.9944, 336.231, -23.0185, 0.52", "20.8871, 336.911, -23.1321, 0.52", "20.8223, 337.409, -23.2338, 0.37", "20.7156, 338.516, -23.5001, 0.37", "20.6544, 339.407, -23.7218, 0.37", "20.6222, 340.037, -23.8718, 1.25", "20.5981, 341.422, -24.2609, 2.43", "20.5981, 342.13, -24.466, 2.43", "20.603, 342.76, -24.6637, 2.43", "20.6282, 343.833, -25.0411, 0.96", "20.6473, 344.455, -25.2692, 0.59", "20.6807, 345.669, -25.7019, 0.29", "20.7097, 346.817, -26.1243, 0.29", "20.7534, 347.886, -26.5048, 0.29", "20.7712, 348.218, -26.6179, 0.59", "20.799, 348.701, -26.7671, 0.81", "20.8415, 349.497, -26.9788, 0.81", "20.8981, 350.622, -27.2167, 0.22", "20.9999, 353.184, -27.6088, 0.22", "21.0307, 354.196, -27.6973, 1.18", "21.0578, 355.168, -27.7399, 1.62", "21.0775, 355.732, -27.7341, 1.62", "21.0913, 356.13, -27.708, 1.62", "21.1257, 357.436, -27.4653, 0.96", "21.1407, 358.061, -27.2933, 0.29", "21.1578, 358.853, -27.0406, 0.29", "21.2077, 360.797, -26.3919, 0.29", "21.2108, 360.902, -26.3572, 0.29", "21.2695, 362.319, -25.9136, 0.81", "21.3026, 362.869, -25.7668, 1.11", "21.3247, 363.414, -25.6152, 1.11", "21.3296, 363.727, -25.5363, 1.11", "21.3305, 363.803, -25.5236, 1.11", "21.3148, 364.398, -25.486, 0.74", "21.2839, 364.968, -25.4936, 0.37", "21.1713, 366.149, -25.5287, 0.37", "20.987, 367.431, -25.5848, 0.29", "20.7557, 368.615, -25.6738, 0.22", "20.3805, 370.167, -25.8319, 0.22", "20.1556, 370.885, -25.9006, 0.96", "19.8923, 371.601, -25.9679, 1.62", "19.602, 372.291, -26.0305, 1.62", "19.2518, 373.033, -26.0786, 0.74", "18.9489, 373.63, -26.0969, 0.37", "17.939, 375.626, -26.1226, 0.22", "17.9045, 375.697, -26.1235, 0.22", "17.5476, 376.472, -26.1333, 0.96", "17.3439, 376.948, -26.1399, 1.62", "17.0544, 377.668, -26.1506, 1.62", "16.7237, 378.514, -26.1839, 0.29", "15.9608, 380.558, -26.3278, 0.29", "15.4719, 381.921, -26.4234, 0.29", "15.1639, 382.851, -26.4869, 0.29", "15.0215, 383.317, -26.517, 0.74", "14.8617, 383.912, -26.5524, 0.96", "14.8044, 384.149, -26.5662, 0.96", "14.6573, 384.791, -26.5846, 0.44", "14.4665, 385.503, -26.591, 0.29", "14.1708, 386.51, -26.5876, 0.22", "14.1328, 386.63, -26.5868, 0.22", "13.8495, 387.494, -26.564, 0.22", "13.6347, 388.151, -26.5397, 0.88", "13.2797, 389.259, -26.517, 1.55", "13.0414, 390.034, -26.517, 1.84", "12.8047, 390.878, -26.5289, 1.84", "12.4962, 392.046, -26.5607, 0.29", "12.3116, 392.833, -26.5922, 0.29", "12.0445, 394.111, -26.6654, 0.29", "11.7371, 395.749, -26.7577, 0.29", "11.591, 396.549, -26.806, 0.88", "11.5767, 396.636, -26.8116, 0.88", "11.4678, 397.346, -26.863, 1.4", "11.3544, 398.072, -26.9024, 1.55", "11.2581, 398.71, -26.9291, 1.55", "11.2444, 398.787, -26.9337, 1.55", "11.0601, 399.655, -27.0065, 0.66", "10.944, 400.135, -27.054, 0.37", "10.649, 401.249, -27.1775, 0.37", "10.3088, 402.458, -27.3207, 0.37", "9.92217, 403.733, -27.4882, 0.37", "9.66352, 404.554, -27.6002, 0.96", "9.38715, 405.375, -27.7168, 1.84", "9.23055, 405.832, -27.7793, 2.14", "8.94701, 406.637, -27.8816, 1.84", "8.61709, 407.535, -27.9451, 0.81", "8.44055, 407.999, -27.9603, 0.29", "8.11167, 408.814, -27.9651, 0.29", "7.39293, 410.498, -27.9507, 0.29", "6.75774, 411.942, -27.9212, 0.29", "6.3083, 412.941, -27.8832, 1.03", "5.96933, 413.688, -27.8441, 1.4", "5.70306, 414.291, -27.8122, 1.4", "5.32958, 415.164, -27.7688, 0.66", "5.14822, 415.619, -27.7527, 0.29", "5.12376, 415.693, -27.7525, 0.29", "4.8628, 416.69, -27.7986, 0.29", "4.65087, 417.725, -27.8355, 0.29", "4.56255, 418.252, -27.8511, 0.96", "4.47367, 418.9, -27.849, 1.18", "4.41674, 419.294, -27.8392, 1.18", "4.29377, 419.942, -27.8188, 0.81", "4.1907, 420.425, -27.8153, 0.52", "4.17077, 420.501, -27.8172, 0.52", "3.97548, 421.104, -27.853, 0.52", "3.72761, 421.748, -27.8953, 0.22", "3.10905, 423.183, -27.9939, 0.22", "2.78686, 423.862, -28.0457, 1.03", "2.50562, 424.458, -28.093, 1.47", "2.10034, 425.277, -28.1679, 1.47", "1.83814, 425.777, -28.1978, 0.29", "1.54692, 426.307, -28.2022, 0.29", "1.25301, 426.825, -28.1785, 0.29", "0.669817, 427.805, -28.0993, 0.29", "-0.0193681, 428.952, -28.0061, 0.29", "-0.657532, 430.029, -27.9295, 0.29", "-0.83187, 430.33, -27.9152, 1.11", "-0.876541, 430.408, -27.906, 1.11", "-1.24445, 431.056, -27.7886, 1.69", "-1.53526, 431.685, -27.6606, 1.92", "-1.70016, 432.32, -27.5496, 1.92", "-1.80216, 432.889, -27.4664, 1.92", "-1.93165, 434.211, -27.2947, 0.29", "-1.97235, 434.975, -27.2023, 0.29", "-1.98088, 437.155, -26.9692, 0.29", "-1.90891, 439.514, -26.7566, 0.29", "-1.90469, 439.591, -26.7514, 0.29", "-1.71716, 442.041, -26.6541, 0.29", "-1.70743, 442.129, -26.6542, 0.29", "-1.56499, 443.27, -26.6541, 1.25", "-1.48275, 443.911, -26.6559, 1.62", "-1.39912, 444.72, -26.6637, 1.92", "-1.39619, 444.798, -26.6651, 1.92", "-1.4513, 445.631, -26.6926, 1.92", "-1.58616, 446.539, -26.7323, 1.03", "-1.68239, 447.017, -26.7484, 0.66", "-1.80177, 447.577, -26.764, 0.37", "-2.30069, 449.832, -26.8197, 0.37", "-2.7152, 451.648, -26.8238, 0.37", "-3.2442, 453.932, -26.7869, 0.37", "-3.50891, 455.105, -26.7461, 0.29", "-3.91598, 457.0, -26.6477, 0.29", "-3.93306, 457.086, -26.6415, 0.29", "-4.08641, 458.018, -26.4952, 1.03", "-4.17119, 458.801, -26.3063, 1.55", "-4.2246, 459.496, -26.0466, 1.62", "-4.27347, 460.104, -25.7716, 1.4", "-4.35539, 460.831, -25.4016, 0.81", "-4.55765, 462.387, -24.5937, 0.37", "-4.79006, 463.909, -23.8204, 0.29", "-5.05969, 465.361, -23.0522, 0.29", "-5.07205, 465.419, -23.0204, 0.29", "-5.26261, 466.182, -22.5985, 0.29", "-5.27836, 466.24, -22.569, 0.29", "-5.56598, 467.32, -22.1758, 0.29", "-5.58955, 467.423, -22.1437, 0.29", "-5.75401, 468.629, -21.8888, 1.11", "-5.76126, 468.705, -21.8739, 1.11", "-5.80707, 469.578, -21.6997, 1.92", "-5.83827, 470.542, -21.5177, 2.28", "-5.83272, 471.194, -21.4037, 2.5", "-5.8119, 471.891, -21.3064, 1.99", "-5.78689, 472.29, -21.2874, 1.99" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-157.583, -200.219, -71.9484, 0.29", "-157.138, -201.554, -71.7434, 0.29", "-157.117, -201.62, -71.7323, 0.29", "-156.839, -202.748, -71.5446, 0.29", "-156.734, -203.287, -71.4584, 0.59", "-156.629, -203.998, -71.3523, 0.59", "-156.621, -204.067, -71.3427, 0.59", "-156.625, -204.364, -71.3247, 0.22", "-156.665, -205.492, -71.3727, 0.22", "-156.685, -205.778, -71.3982, 0.59", "-156.739, -206.351, -71.4841, 0.59", "-156.775, -206.717, -71.5519, 0.59", "-156.845, -207.419, -71.6958, 0.15", "-157.055, -210.523, -72.1919, 0.15", "-157.063, -210.672, -72.1981, 0.15", "-157.093, -211.289, -72.1863, 1.03", "-157.119, -211.794, -72.1539, 1.11", "-157.156, -212.37, -72.0911, 1.11", "-157.281, -213.999, -71.8269, 0.15", "-157.718, -218.218, -70.9507, 0.15", "-157.727, -218.286, -70.9367, 0.15", "-157.82, -218.799, -70.8264, 0.66", "-157.936, -219.302, -70.7273, 0.66", "-157.957, -219.377, -70.7109, 0.66", "-157.981, -219.441, -70.696, 0.15", "-159.021, -221.44, -69.9405, 0.15", "-159.092, -221.571, -69.889, 0.29", "-159.232, -221.82, -69.7858, 0.29", "-159.905, -223.014, -69.2936, 0.15", "-161.073, -225.085, -68.4476, 0.15", "-161.247, -225.474, -68.1986, 0.96", "-161.32, -225.739, -67.9366, 0.96", "-161.338, -225.802, -67.8887, 0.96", "-161.49, -226.327, -67.5237, 1.11", "-161.51, -226.393, -67.4819, 1.11", "-162.285, -229.402, -65.6266, 0.15", "-162.302, -229.461, -65.5926, 0.15", "-163.679, -233.951, -63.1906, 0.15", "-163.7, -234.011, -63.1608, 0.15", "-163.845, -234.379, -63.0038, 0.66", "-164.193, -235.144, -62.7552, 0.66", "-164.639, -235.965, -62.6251, 0.44", "-164.731, -236.13, -62.5971, 0.15", "-164.765, -236.189, -62.5805, 0.15", "-165.577, -237.401, -62.1213, 0.15", "-165.688, -237.553, -62.0525, 0.52", "-165.83, -237.722, -61.9637, 0.52", "-166.019, -237.945, -61.8435, 0.52", "-166.537, -238.542, -61.519, 0.22", "-168.285, -240.495, -60.3946, 0.22", "-168.462, -240.678, -60.2755, 0.66", "-168.892, -241.112, -59.9916, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-157.583, -200.219, -71.9484, 0.22", "-158.533, -201.501, -72.3533, 0.22", "-158.578, -201.543, -72.3979, 0.22", "-159.519, -202.533, -73.2102, 0.22", "-159.564, -202.581, -73.2473, 0.22", "-160.187, -203.318, -73.7172, 0.74", "-160.735, -203.991, -74.1093, 1.03", "-162.731, -206.406, -75.5603, 0.22", "-164.184, -208.286, -76.5512, 0.22", "-164.225, -208.344, -76.5757, 0.22", "-165.219, -209.821, -77.1099, 0.22", "-165.257, -209.883, -77.1288, 0.22", "-165.41, -210.17, -77.1885, 1.55", "-165.822, -211.005, -77.284, 2.06", "-166.265, -211.895, -77.4348, 2.06", "-167.019, -213.397, -77.7129, 1.18", "-167.854, -215.044, -78.0497, 0.22", "-169.542, -218.362, -78.7096, 0.22", "-169.575, -218.427, -78.7224, 0.22", "-169.886, -219.01, -78.8596, 1.03", "-170.245, -219.643, -78.9933, 1.03", "-170.283, -219.706, -79.0028, 1.03", "-170.751, -220.405, -79.0884, 1.03", "-170.795, -220.464, -79.0969, 1.03", "-171.826, -221.816, -79.3128, 0.22", "-174.338, -224.944, -79.785, 0.22", "-174.674, -225.345, -79.85, 1.33", "-175.264, -226.02, -79.9285, 1.33", "-175.314, -226.076, -79.9368, 1.33", "-176.131, -226.982, -80.0695, 0.15", "-176.747, -227.638, -80.1465, 0.15", "-176.8, -227.69, -80.1621, 0.15", "-178.794, -229.738, -80.7359, 0.15", "-179.834, -230.903, -81.037, 1.47", "-180.329, -231.512, -81.1672, 1.47", "-180.668, -231.968, -81.2709, 1.47", "-181.463, -233.165, -81.5747, 0.22", "-183.053, -235.935, -82.3005, 0.22", "-183.39, -236.641, -82.5394, 1.11", "-183.817, -237.637, -82.8855, 1.11", "-184.336, -239.053, -83.4312, 0.29", "-184.616, -240.016, -83.8494, 0.29", "-184.846, -241.096, -84.3583, 0.29", "-185.091, -242.8, -85.362, 0.15", "-185.104, -242.897, -85.4198, 0.15", "-185.213, -243.967, -86.0577, 0.15", "-185.455, -245.367, -87.2056, 1.77", "-185.547, -245.721, -87.5931, 2.65", "-185.56, -245.77, -87.6498, 2.65", "-185.647, -246.132, -88.0571, 2.65", "-185.66, -246.188, -88.1226, 2.65", "-186.304, -249.239, -91.9654, 0.15", "-186.314, -249.278, -92.0302, 0.15", "-186.607, -250.314, -93.9392, 0.15", "-186.663, -250.56, -94.4042, 1.11", "-186.676, -250.635, -94.5497, 1.11", "-186.708, -250.927, -95.1075, 1.25", "-186.666, -253.814, -100.454, 0.22", "-186.664, -253.853, -100.532, 0.22", "-186.621, -254.279, -101.535, 0.22", "-186.607, -254.373, -101.748, 0.59", "-186.595, -254.446, -101.903, 0.59", "-186.563, -254.686, -102.366, 0.59", "-186.392, -255.563, -103.543, 1.25", "-186.391, -255.617, -103.612, 1.25", "-186.546, -256.595, -104.872, 1.25", "-186.56, -256.653, -104.934, 1.25", "-186.997, -258.009, -106.211, 0.22", "-187.04, -258.122, -106.301, 0.22", "-187.425, -259.076, -106.895, 0.22", "-187.449, -259.136, -106.933, 0.22", "-187.917, -260.282, -107.587, 0.22", "-188.6, -261.931, -108.495, 1.18", "-188.868, -262.599, -108.833, 2.06", "-189.11, -263.184, -109.143, 2.06", "-190.018, -265.236, -110.36, 0.22", "-190.354, -265.955, -110.807, 0.22", "-190.423, -266.094, -110.894, 0.52", "-190.665, -266.609, -111.166, 0.52", "-190.697, -266.68, -111.2, 0.52", "-191.101, -267.624, -111.549, 0.22", "-191.157, -267.784, -111.596, 0.22", "-191.522, -268.841, -111.967, 0.22", "-191.618, -269.115, -112.067, 0.96", "-191.949, -269.953, -112.412, 0.96", "-191.977, -270.017, -112.439, 0.96", "-192.558, -271.266, -112.94, 0.22", "-193.208, -272.596, -113.525, 0.22", "-193.254, -272.683, -113.583, 0.22", "-193.62, -273.355, -114.041, 1.25", "-193.815, -273.696, -114.271, 1.55", "-193.924, -273.876, -114.379, 1.55", "-194.111, -274.174, -114.536, 1.55", "-195.246, -275.873, -115.447, 0.22", "-196.12, -277.173, -116.072, 0.22", "-196.372, -277.529, -116.221, 0.44", "-196.711, -277.961, -116.378, 0.44", "-196.824, -278.087, -116.413, 0.15", "-197.413, -278.521, -116.695, 0.15", "-197.483, -278.56, -116.729, 0.15", "-198.285, -278.957, -117.211, 1.11", "-198.982, -279.288, -117.69, 1.33", "-199.165, -279.373, -117.822, 1.33", "-202.372, -280.817, -120.202, 0.22", "-203.202, -281.172, -120.818, 0.22", "-203.27, -281.198, -120.868, 0.22", "-204.173, -281.518, -121.52, 1.55", "-204.585, -281.668, -121.795, 1.99", "-204.647, -281.696, -121.829, 1.99", "-205.476, -282.128, -122.121, 1.99", "-207.638, -283.298, -122.909, 0.22", "-208.143, -283.612, -123.084, 0.22", "-208.975, -284.229, -123.414, 0.22", "-209.821, -284.964, -123.911, 0.22", "-209.868, -285.011, -123.947, 0.22", "-210.204, -285.541, -124.312, 1.25", "-210.463, -286.169, -124.698, 1.55", "-210.891, -287.468, -125.536, 0.74", "-211.224, -288.688, -126.373, 0.22", "-211.238, -288.75, -126.414, 0.22", "-211.592, -290.737, -127.57, 0.22", "-211.603, -290.831, -127.615, 0.44", "-211.638, -291.275, -127.775, 0.44", "-211.639, -291.448, -127.799, 0.44", "-211.609, -292.303, -127.798, 0.22", "-211.607, -292.387, -127.797, 0.22", "-211.682, -292.683, -127.772, 0.52", "-211.837, -293.118, -127.727, 0.52", "-211.872, -293.195, -127.718, 0.52", "-212.008, -293.439, -127.681, 0.22", "-212.05, -293.5, -127.67, 0.22", "-213.188, -295.03, -127.381, 0.22", "-213.293, -295.164, -127.354, 0.22", "-213.429, -295.339, -127.304, 0.66", "-213.655, -295.639, -127.203, 0.66", "-213.696, -295.697, -127.181, 0.66", "-213.944, -296.063, -127.038, 0.15", "-214.811, -297.486, -126.408, 0.15", "-215.182, -298.136, -126.115, 0.52", "-215.259, -298.279, -126.049, 0.52", "-215.483, -298.727, -125.836, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.47865, 78.1845, -5.61113, 0.59", "-4.99264, 79.0895, -5.52655, 0.59", "-5.76421, 80.43, -5.42477, 0.59", "-6.30634, 81.3947, -5.35915, 0.59", "-7.30529, 83.1856, -5.25115, 0.59", "-8.00989, 84.4521, -5.18486, 0.59", "-8.55485, 85.4154, -5.10687, 0.59", "-9.01078, 86.224, -5.04075, 1.03", "-9.22182, 86.5988, -5.02568, 1.03", "-9.33986, 86.7986, -4.99826, 1.03", "-9.4981, 87.0516, -4.9418, 1.03", "-10.2292, 88.1983, -4.65169, 0.81", "-10.7389, 89.001, -4.4542, 0.81", "-11.4385, 90.0855, -4.19052, 0.74", "-12.1262, 91.1343, -3.97756, 1.18", "-12.5253, 91.7227, -3.86715, 1.18", "-12.9883, 92.3646, -3.78991, 1.18", "-13.0567, 92.4549, -3.78878, 1.18", "-13.4586, 92.9479, -3.81119, 1.18", "-13.9952, 93.5839, -3.88089, 1.18", "-14.8563, 94.5836, -4.06411, 1.03", "-15.9167, 95.7818, -4.30221, 0.88", "-16.9119, 96.898, -4.53832, 0.88", "-17.6447, 97.746, -4.74065, 1.03", "-18.1646, 98.3894, -4.909, 1.03", "-18.8089, 99.27, -5.15742, 1.03", "-18.8577, 99.3439, -5.18021, 1.03", "-19.3521, 100.183, -5.4419, 0.88", "-19.8303, 101.133, -5.72629, 0.81", "-20.4153, 102.581, -6.1149, 0.81", "-20.892, 103.993, -6.41345, 0.81", "-20.9119, 104.068, -6.42462, 0.81", "-21.1035, 104.995, -6.51062, 0.81", "-21.2875, 106.379, -6.55331, 0.52", "-21.3664, 107.518, -6.5152, 0.52", "-21.3929, 108.53, -6.37265, 1.03", "-21.3938, 109.827, -6.07305, 1.4", "-21.4011, 110.584, -5.85069, 1.69", "-21.4147, 111.392, -5.54763, 1.69", "-21.4198, 111.463, -5.51402, 1.69", "-21.6561, 112.932, -4.76102, 1.11", "-21.676, 113.0, -4.72433, 1.11", "-21.8553, 113.408, -4.47576, 0.66", "-22.1107, 113.855, -4.1979, 0.66", "-22.8354, 114.964, -3.51863, 0.59", "-23.1944, 115.481, -3.24051, 0.59", "-23.8692, 116.396, -2.85656, 0.59", "-23.9525, 116.499, -2.81813, 0.59", "-24.6292, 117.225, -2.51759, 0.66", "-24.6919, 117.286, -2.48772, 0.66", "-25.1765, 117.755, -2.26268, 0.66", "-25.5882, 118.157, -2.04207, 0.88", "-26.213, 118.781, -1.68123, 0.88", "-27.1866, 119.776, -1.12233, 0.88", "-28.083, 120.686, -0.550341, 0.44", "-28.5889, 121.211, -0.210311, 0.44", "-29.3947, 122.089, 0.350299, 1.11", "-29.4439, 122.144, 0.382294, 1.11", "-30.0597, 122.891, 0.736339, 1.11", "-31.0897, 124.222, 1.15725, 1.11", "-31.4518, 124.701, 1.25777, 0.81", "-31.9377, 125.362, 1.34044, 1.11", "-32.3812, 126.003, 1.34682, 0.81", "-32.6222, 126.358, 1.32704, 0.74", "-32.951, 126.862, 1.26018, 0.44", "-33.2029, 127.267, 1.16132, 0.29", "-33.8747, 128.323, 0.898835, 0.29", "-34.159, 128.771, 0.788297, 0.74", "-34.4671, 129.267, 0.641516, 1.11", "-34.5078, 129.332, 0.618814, 1.11", "-34.7916, 129.789, 0.439493, 1.11", "-35.0879, 130.274, 0.238144, 1.18", "-35.5081, 130.95, -0.0768098, 1.11", "-35.9421, 131.645, -0.410532, 0.88", "-35.9815, 131.708, -0.441171, 0.88", "-36.2903, 132.185, -0.672616, 0.44", "-36.807, 133.005, -1.06512, 0.44", "-37.3496, 133.882, -1.46482, 0.44", "-37.3887, 133.946, -1.49174, 0.44", "-37.6252, 134.352, -1.63767, 0.81", "-37.9971, 134.993, -1.83976, 1.18", "-38.4859, 135.848, -2.06624, 1.4", "-38.8493, 136.463, -2.12968, 1.4", "-39.126, 136.948, -2.10232, 1.18", "-39.42, 137.472, -2.0345, 0.88", "-39.7457, 138.065, -1.92602, 0.81", "-40.289, 139.053, -1.71548, 0.59", "-41.2114, 140.697, -1.34035, 0.52", "-41.9042, 141.943, -1.07497, 0.52", "-41.9858, 142.091, -1.04872, 0.52", "-42.429, 142.904, -0.964111, 0.52", "-42.8673, 143.744, -0.950138, 0.74", "-43.1619, 144.349, -0.99514, 0.74", "-43.4258, 144.913, -1.08774, 0.96", "-43.7436, 145.578, -1.20554, 0.96", "-44.1032, 146.38, -1.31841, 0.96", "-44.1668, 146.536, -1.33477, 0.96", "-44.6219, 147.708, -1.3758, 0.96", "-45.0344, 148.765, -1.36621, 1.18", "-45.293, 149.461, -1.32755, 1.55", "-45.6257, 150.398, -1.23428, 1.55", "-45.967, 151.338, -1.05568, 1.55", "-46.3497, 152.353, -0.819963, 0.88", "-46.4151, 152.522, -0.772464, 0.88", "-46.6546, 153.137, -0.60913, 0.88", "-46.7167, 153.279, -0.57456, 0.88", "-47.2999, 154.388, -0.249515, 0.88", "-47.6719, 155.086, -0.0530803, 0.88", "-47.7017, 155.146, -0.039281, 0.88", "-48.1767, 156.105, 0.167735, 0.81", "-48.6741, 157.138, 0.347087, 0.81", "-49.3862, 158.708, 0.618694, 0.66", "-49.79, 159.699, 0.759397, 0.66", "-50.1137, 160.549, 0.904138, 0.66", "-50.1402, 160.623, 0.917213, 0.66", "-50.5906, 161.97, 1.15135, 0.52", "-50.9268, 163.04, 1.30515, 0.37", "-51.4149, 164.663, 1.44201, 0.37", "-51.6742, 165.481, 1.49536, 0.88", "-51.8689, 166.076, 1.53774, 1.18", "-52.2266, 167.137, 1.60382, 1.18", "-52.4254, 167.703, 1.63025, 1.18", "-52.7077, 168.497, 1.63903, 0.74", "-53.2024, 169.82, 1.64612, 0.74", "-53.5886, 170.835, 1.62831, 1.03", "-53.8646, 171.572, 1.61499, 1.33", "-53.9023, 171.677, 1.60949, 1.33", "-54.0443, 172.078, 1.56101, 1.33", "-54.2747, 172.732, 1.43354, 1.03", "-54.5274, 173.522, 1.1907, 0.81", "-54.7851, 174.357, 0.859867, 0.59", "-55.0927, 175.411, 0.36208, 0.59", "-55.2903, 176.041, 0.0284534, 0.59", "-55.504, 176.717, -0.399778, 0.88", "-55.7651, 177.487, -0.960653, 1.11", "-55.9831, 178.082, -1.44897, 1.11", "-56.2922, 178.843, -2.10245, 0.88", "-56.5746, 179.525, -2.71748, 0.88", "-56.8997, 180.331, -3.44453, 0.52", "-57.1037, 180.805, -3.87337, 0.52", "-57.1412, 180.887, -3.94375, 0.52", "-57.5118, 181.724, -4.60723, 0.52", "-57.9984, 182.84, -5.37111, 0.81", "-58.0595, 182.984, -5.4573, 0.81", "-58.4225, 183.784, -5.84067, 0.81", "-58.4571, 183.861, -5.87426, 0.81", "-58.7883, 184.594, -6.14279, 1.03", "-58.8207, 184.664, -6.16217, 1.03", "-59.2324, 185.567, -6.35425, 1.33", "-59.5304, 186.28, -6.51649, 1.33", "-59.5535, 186.342, -6.53202, 1.33", "-59.8297, 187.113, -6.73717, 1.55", "-60.0272, 187.688, -6.89646, 1.55", "-60.3497, 188.682, -7.16914, 0.74", "-60.6952, 189.83, -7.47797, 0.59", "-60.9086, 190.583, -7.66957, 0.88", "-61.1202, 191.348, -7.85225, 1.18", "-61.3807, 192.347, -8.0621, 1.4", "-61.5126, 192.922, -8.17094, 1.77", "-61.6287, 193.499, -8.26225, 1.47", "-61.7938, 194.471, -8.40346, 1.03", "-61.9061, 195.218, -8.50167, 0.66", "-62.0472, 196.352, -8.64415, 0.66", "-62.1632, 197.415, -8.77063, 0.88", "-62.2539, 198.31, -8.87157, 1.18", "-62.3323, 198.972, -8.91955, 1.33", "-62.3453, 199.049, -8.9228, 1.33", "-62.5131, 199.686, -8.94541, 1.33", "-62.8431, 200.638, -8.97989, 1.03", "-63.2468, 201.637, -9.013, 0.59", "-63.6429, 202.54, -9.05451, 0.59", "-64.2789, 203.881, -9.10913, 0.59", "-65.1022, 205.523, -9.18028, 0.59", "-65.7427, 206.747, -9.24035, 0.59", "-65.7799, 206.817, -9.24426, 0.59", "-66.0256, 207.283, -9.27706, 0.88", "-66.5628, 208.375, -9.37984, 0.81", "-66.9303, 209.222, -9.45995, 1.11", "-67.2282, 210.006, -9.54148, 1.33", "-67.372, 210.403, -9.59884, 1.33", "-67.5458, 210.924, -9.68806, 1.33", "-67.8303, 211.856, -9.89598, 0.81", "-68.194, 213.19, -10.2564, 0.74", "-68.3723, 213.885, -10.4537, 0.52", "-68.5967, 214.739, -10.7047, 0.29", "-68.847, 215.813, -11.0891, 0.29", "-68.9918, 216.677, -11.4592, 0.88", "-69.0041, 216.778, -11.5068, 0.88", "-69.0611, 217.3, -11.764, 1.55", "-69.1547, 218.292, -12.2702, 1.92", "-69.321, 219.895, -13.0944, 1.92", "-69.505, 221.122, -13.7274, 1.11", "-69.6931, 222.123, -14.2214, 0.96", "-69.89, 222.881, -14.561, 0.96", "-69.9144, 222.952, -14.5883, 0.96", "-70.2707, 223.703, -14.806, 1.18", "-70.8515, 224.6, -14.9061, 1.18", "-70.8995, 224.663, -14.9079, 1.18", "-71.728, 225.678, -14.9199, 0.81", "-72.2816, 226.333, -14.9197, 0.59", "-73.2993, 227.465, -14.9502, 0.59", "-74.3559, 228.585, -14.9984, 0.59", "-74.4207, 228.651, -14.9996, 0.59", "-75.5426, 229.726, -15.031, 0.59", "-75.6111, 229.788, -15.0346, 0.59", "-76.9201, 230.895, -15.122, 0.59", "-77.0104, 230.966, -15.1254, 0.59", "-78.0087, 231.719, -15.1793, 0.96", "-78.6342, 232.201, -15.198, 1.69", "-79.0987, 232.577, -15.2067, 2.06", "-79.8809, 233.238, -15.2264, 2.06", "-80.8092, 234.017, -15.2113, 1.77", "-81.7101, 234.751, -15.2029, 1.11", "-82.5398, 235.407, -15.185, 0.29", "-83.7561, 236.322, -15.102, 0.29", "-83.8316, 236.376, -15.0952, 0.29", "-84.9345, 237.152, -14.9884, 0.29", "-85.3058, 237.41, -14.9628, 0.29", "-85.9568, 237.833, -14.84, 0.66", "-86.4081, 238.101, -14.7183, 0.96", "-86.9133, 238.435, -14.5701, 0.96", "-87.4745, 238.874, -14.4092, 0.96", "-87.5322, 238.928, -14.3935, 0.96", "-88.4833, 239.887, -14.1182, 0.37", "-88.6319, 240.055, -14.083, 0.37", "-89.3904, 241.025, -13.9349, 0.37", "-90.0852, 242.038, -13.9593, 0.37", "-90.2669, 242.336, -14.0166, 0.74", "-90.3034, 242.404, -14.0382, 0.74", "-90.9138, 243.721, -14.6225, 0.74", "-91.3921, 244.81, -15.1629, 0.52", "-92.0509, 246.437, -16.0673, 0.59", "-92.3184, 247.109, -16.4708, 0.44", "-92.3467, 247.175, -16.5059, 0.44", "-92.7267, 247.998, -16.8814, 0.44", "-93.097, 248.697, -17.1324, 0.81", "-93.3158, 249.058, -17.2117, 1.33", "-93.7586, 249.685, -17.2794, 1.33", "-94.4617, 250.545, -17.4091, 0.88", "-94.8204, 250.941, -17.4738, 0.88", "-95.3676, 251.483, -17.574, 0.59", "-95.8103, 251.891, -17.6586, 0.29", "-96.7266, 252.669, -17.8563, 0.29", "-97.6326, 253.388, -18.0815, 0.29", "-98.0057, 253.658, -18.1958, 0.29", "-98.4071, 253.937, -18.3062, 0.81", "-98.4734, 253.981, -18.3228, 0.81", "-98.9792, 254.32, -18.4384, 1.03", "-99.0791, 254.39, -18.4589, 1.03", "-99.6752, 254.877, -18.5843, 1.03", "-100.263, 255.424, -18.7271, 0.29", "-100.615, 255.813, -18.8129, 0.29", "-100.724, 255.959, -18.8421, 0.29", "-100.766, 256.026, -18.8543, 0.29", "-101.193, 256.851, -18.9953, 0.29", "-101.381, 257.302, -19.067, 0.59", "-101.658, 258.14, -19.1937, 1.33", "-101.846, 258.8, -19.281, 1.47", "-101.992, 259.375, -19.3482, 1.47", "-102.15, 260.039, -19.4193, 1.03", "-102.281, 260.601, -19.4771, 0.66", "-102.511, 261.565, -19.5753, 0.37", "-102.532, 261.652, -19.584, 0.37", "-102.921, 263.189, -19.7368, 0.37", "-103.165, 264.123, -19.8329, 0.88", "-103.383, 264.948, -19.9188, 0.96", "-103.491, 265.357, -19.9617, 1.18", "-103.521, 265.464, -19.9732, 1.18", "-103.713, 266.199, -20.049, 0.96", "-103.899, 267.015, -20.1218, 0.96", "-104.004, 267.578, -20.1628, 1.25", "-104.145, 268.492, -20.2168, 1.03", "-104.242, 269.183, -20.2535, 0.59", "-104.347, 270.0, -20.2932, 0.29", "-104.539, 271.638, -20.3655, 0.29", "-104.659, 272.699, -20.4102, 0.29", "-104.73, 273.365, -20.4366, 0.74", "-104.814, 274.275, -20.4879, 0.96", "-104.876, 275.018, -20.5399, 1.11", "-104.904, 275.342, -20.5674, 1.11", "-104.953, 276.017, -20.6508, 0.37", "-105.025, 277.072, -20.8122, 0.37", "-105.165, 278.989, -21.1552, 0.37", "-105.212, 279.558, -21.2671, 0.96", "-105.221, 279.646, -21.2853, 0.96", "-105.324, 280.607, -21.5353, 1.25", "-105.414, 281.395, -21.7748, 1.25", "-105.518, 282.166, -22.041, 1.4", "-105.672, 283.127, -22.4009, 1.55", "-105.788, 283.761, -22.6464, 1.55", "-106.097, 285.13, -23.1375, 0.22", "-106.139, 285.286, -23.1878, 0.22", "-106.259, 285.78, -23.3212, 0.22", "-106.295, 285.96, -23.3557, 0.22", "-106.385, 286.577, -23.4034, 0.22", "-106.506, 287.295, -23.2985, 0.29", "-106.556, 287.542, -23.2171, 0.29", "-106.817, 288.558, -22.8726, 0.29", "-106.84, 288.64, -22.8435, 0.29", "-107.026, 289.148, -22.6179, 0.29", "-107.539, 290.213, -22.0776, 0.29", "-107.576, 290.275, -22.0447, 0.29", "-108.065, 290.879, -21.7238, 0.29", "-108.129, 290.941, -21.6984, 0.29", "-109.033, 291.781, -21.4779, 0.88", "-109.348, 292.059, -21.4565, 1.03", "-109.409, 292.112, -21.463, 1.03", "-110.013, 292.648, -21.5636, 1.03", "-110.976, 293.507, -21.8422, 0.29", "-111.322, 293.813, -21.9835, 0.29", "-111.926, 294.337, -22.2823, 0.29", "-112.424, 294.753, -22.5186, 0.29", "-112.484, 294.801, -22.5456, 0.29", "-113.031, 295.21, -22.7758, 0.29", "-113.104, 295.26, -22.8043, 0.29", "-113.848, 295.766, -23.0569, 0.29", "-113.848, 295.766, -23.0569, 0.74", "-114.064, 295.921, -23.0871, 0.74", "-114.282, 296.077, -23.0931, 0.74", "-114.437, 296.195, -23.0624, 0.74", "-114.575, 296.311, -23.0421, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.47865, 78.1845, -5.61113, 1.11", "-4.08511, 79.3547, -5.8616, 1.11", "-3.63257, 80.6387, -6.21739, 0.96", "-3.01343, 82.363, -6.7894, 0.81", "-2.66592, 83.3952, -7.14993, 0.81", "-2.61616, 83.5644, -7.20768, 0.81", "-2.34291, 84.6439, -7.59727, 0.81", "-2.08156, 85.9925, -8.12432, 0.81", "-1.98573, 86.9119, -8.47257, 1.03", "-1.98438, 87.6853, -8.72281, 1.33", "-2.04641, 88.8965, -9.10026, 1.33", "-2.14857, 90.1659, -9.45971, 1.33", "-2.27758, 91.3457, -9.75295, 1.47", "-2.42955, 92.7526, -10.0298, 1.47", "-2.57851, 94.3092, -10.3217, 1.47", "-2.71057, 96.0293, -10.6368, 1.47", "-2.7704, 97.008, -10.8072, 1.18", "-2.81032, 97.9841, -10.9516, 1.18", "-2.82455, 98.8899, -11.0809, 1.47", "-2.82528, 100.165, -11.2438, 1.47", "-2.81263, 101.438, -11.3518, 1.69", "-2.81228, 101.524, -11.3551, 1.69", "-2.78688, 102.877, -11.3759, 1.69", "-2.73292, 104.398, -11.3663, 1.69", "-2.65634, 105.831, -11.3266, 1.69", "-2.5617, 106.998, -11.2681, 1.69", "-2.46898, 107.892, -11.2224, 1.33", "-2.30127, 109.365, -11.1701, 1.25", "-2.17443, 110.44, -11.1489, 1.25", "-2.04368, 111.549, -11.1633, 1.03", "-1.89705, 112.832, -11.2231, 0.96", "-1.82965, 113.808, -11.3056, 0.96", "-1.81228, 114.856, -11.4096, 1.18", "-1.84965, 115.681, -11.5008, 1.18", "-1.95511, 116.762, -11.6242, 1.18", "-1.96711, 116.846, -11.6338, 1.18", "-2.42793, 119.368, -11.9041, 1.18", "-2.63181, 120.331, -11.9945, 1.4", "-2.883, 121.416, -12.0726, 1.69", "-3.09561, 122.327, -12.1355, 1.92", "-3.21284, 122.861, -12.169, 2.06", "-3.40729, 123.812, -12.1818, 1.84", "-3.52826, 124.483, -12.1598, 1.69", "-3.72207, 125.732, -12.1095, 1.69", "-3.98456, 127.809, -12.0197, 1.69", "-4.12324, 129.243, -11.9588, 1.69", "-4.27291, 131.106, -11.8879, 1.84", "-4.36915, 132.442, -11.8205, 1.84", "-4.45346, 133.606, -11.7544, 1.33", "-4.59017, 135.306, -11.6526, 1.25", "-4.74412, 136.906, -11.5619, 1.11", "-4.92432, 138.442, -11.5091, 1.11", "-5.10135, 139.776, -11.5088, 1.11", "-5.26299, 140.86, -11.4954, 1.4", "-5.36911, 141.501, -11.4758, 1.77", "-5.57301, 142.681, -11.4493, 1.99", "-5.77705, 143.944, -11.4393, 1.99", "-5.912, 144.934, -11.4466, 1.47", "-5.99087, 145.829, -11.4688, 1.18", "-6.02896, 146.659, -11.4848, 1.11", "-6.03627, 148.097, -11.4697, 0.96", "-5.96681, 149.886, -11.4028, 0.96", "-5.96134, 149.972, -11.3987, 0.96", "-5.79816, 151.973, -11.2898, 0.96", "-5.72195, 152.881, -11.2396, 0.74", "-5.64018, 153.845, -11.1889, 0.59", "-5.53391, 155.286, -11.0969, 0.59", "-5.47287, 156.402, -11.0218, 1.25", "-5.43789, 157.484, -10.9535, 1.84", "-5.43674, 158.823, -10.8815, 1.84", "-5.45885, 160.258, -10.8408, 1.84", "-5.50362, 161.513, -10.8045, 1.84", "-5.55226, 162.505, -10.7548, 1.62", "-5.59904, 163.397, -10.6929, 1.33", "-5.68535, 164.837, -10.5833, 1.11", "-5.76698, 166.204, -10.4781, 1.11", "-5.86527, 167.721, -10.339, 1.11", "-5.87069, 167.806, -10.3308, 1.11", "-5.9125, 168.879, -10.2051, 0.81", "-5.91508, 169.415, -10.1339, 0.74", "-5.87488, 170.74, -9.94986, 0.74", "-5.78879, 172.382, -9.74951, 0.52", "-5.78367, 172.467, -9.74278, 0.52", "-5.73258, 173.585, -9.67237, 0.52", "-5.72323, 174.318, -9.6123, 1.03", "-5.73974, 175.495, -9.50949, 1.33", "-5.78957, 176.732, -9.4052, 1.92", "-5.83401, 177.491, -9.35017, 1.92", "-5.93481, 178.75, -9.25177, 1.33", "-6.07018, 180.085, -9.14079, 0.59", "-6.24001, 181.781, -9.01661, 0.59", "-6.29366, 182.495, -8.9731, 0.81", "-6.32518, 183.137, -8.94307, 0.88", "-6.32523, 183.223, -8.94217, 0.88", "-6.30762, 184.305, -8.99021, 0.88", "-6.28977, 185.112, -9.07996, 0.66", "-6.32563, 186.283, -9.22952, 0.66", "-6.33247, 186.368, -9.24023, 0.66", "-6.45453, 187.239, -9.3448, 0.66", "-6.63689, 188.192, -9.44925, 0.66", "-6.83567, 188.997, -9.52798, 0.96", "-7.10176, 189.887, -9.5996, 1.25", "-7.44379, 190.918, -9.67935, 1.84", "-7.76528, 191.83, -9.74448, 1.99", "-8.06037, 192.634, -9.79426, 1.77", "-8.2786, 193.252, -9.83138, 1.69", "-8.59773, 194.128, -9.88529, 1.55", "-8.876, 194.892, -9.93231, 1.4", "-9.12998, 195.625, -9.97571, 1.03", "-9.37884, 196.403, -10.019, 0.88", "-9.73247, 197.605, -10.1029, 0.66", "-9.88373, 198.152, -10.1464, 0.44", "-9.90478, 198.235, -10.1535, 0.44", "-10.216, 199.551, -10.2674, 0.44", "-10.5038, 200.94, -10.4223, 0.44", "-10.738, 202.146, -10.5787, 1.11", "-10.948, 203.337, -10.7453, 1.4", "-11.1059, 204.302, -10.8831, 1.69", "-11.2052, 204.915, -10.9696, 2.14", "-11.3821, 206.135, -11.1334, 2.14", "-11.5144, 207.317, -11.2779, 1.69", "-11.5903, 208.124, -11.3625, 1.4", "-11.652, 208.928, -11.4382, 1.18", "-11.7395, 210.284, -11.5452, 0.81", "-11.8248, 211.718, -11.6311, 0.81", "-11.9285, 213.064, -11.6786, 0.66", "-11.9373, 213.15, -11.6805, 0.66", "-12.0658, 214.037, -11.6884, 0.52", "-12.227, 214.838, -11.6851, 0.37", "-12.3535, 215.313, -11.6758, 0.37", "-12.7138, 216.334, -11.6426, 0.37", "-13.0207, 217.068, -11.6121, 0.74", "-13.293, 217.671, -11.5913, 0.74", "-13.5934, 218.29, -11.5744, 0.81", "-13.6837, 218.474, -11.5727, 0.81", "-13.9355, 219.022, -11.5789, 0.81", "-14.1352, 219.515, -11.5983, 1.03", "-14.1665, 219.595, -11.6042, 1.03", "-14.5566, 220.73, -11.6866, 1.03", "-14.8536, 221.783, -11.7537, 1.18", "-14.8705, 221.855, -11.7578, 1.18", "-15.0844, 222.936, -11.7995, 1.18", "-15.2439, 223.899, -11.8234, 1.69", "-15.4281, 225.225, -11.8415, 1.92", "-15.5449, 226.389, -11.8433, 1.92", "-15.5961, 227.012, -11.8046, 1.77", "-15.6628, 227.852, -11.7148, 1.25", "-15.7207, 228.568, -11.6132, 0.96", "-15.7877, 229.268, -11.4991, 0.66", "-15.9706, 230.593, -11.2935, 0.66", "-16.2293, 232.081, -11.0194, 0.66", "-16.4248, 233.13, -10.8148, 0.66", "-16.6147, 234.115, -10.6181, 0.96", "-16.8556, 235.383, -10.3621, 0.96", "-17.2365, 237.548, -9.94681, 0.96", "-17.4257, 238.863, -9.72932, 0.52", "-17.4933, 239.585, -9.64439, 0.52", "-17.4986, 239.706, -9.63129, 0.52", "-17.5009, 240.617, -9.54766, 0.52", "-17.4454, 241.699, -9.50064, 1.03", "-17.3137, 243.054, -9.5097, 1.62", "-17.1785, 244.215, -9.57745, 2.28", "-16.9828, 245.811, -9.68485, 2.58", "-16.874, 246.633, -9.74364, 2.58", "-16.7301, 247.702, -9.82465, 0.96", "-16.7187, 247.787, -9.83333, 0.96", "-16.5614, 249.145, -10.0003, 0.96", "-16.5012, 249.872, -10.0965, 1.55", "-16.4602, 250.976, -10.2409, 1.18", "-16.4797, 252.053, -10.3675, 1.18", "-16.5876, 253.442, -10.4808, 1.18", "-16.6928, 254.37, -10.5474, 0.96", "-16.8781, 255.551, -10.6194, 0.81", "-17.0957, 256.728, -10.6739, 0.74", "-17.3922, 258.183, -10.7161, 0.74", "-17.7338, 259.912, -10.7245, 0.74", "-17.7562, 260.032, -10.7222, 0.74", "-17.9116, 260.936, -10.6802, 1.11", "-18.128, 262.279, -10.5919, 1.33", "-18.3228, 263.625, -10.4861, 1.33", "-18.5165, 265.047, -10.3731, 1.33", "-18.683, 266.297, -10.2807, 1.33", "-18.8589, 267.546, -10.1966, 1.33", "-18.9843, 268.353, -10.1553, 0.81", "-19.1482, 269.238, -10.125, 0.66", "-19.518, 270.947, -10.1068, 0.66", "-19.5428, 271.043, -10.1088, 0.66", "-20.1594, 273.175, -10.2182, 0.66", "-20.4568, 274.122, -10.3004, 1.25", "-20.7041, 274.856, -10.3665, 1.84", "-21.0809, 275.905, -10.466, 2.14", "-21.4194, 276.82, -10.555, 2.14", "-21.6033, 277.338, -10.6019, 2.14", "-21.8978, 278.228, -10.6729, 1.84", "-22.0928, 278.938, -10.7159, 1.62", "-22.2852, 280.037, -10.7663, 1.11", "-22.296, 280.122, -10.7704, 1.11", "-22.4512, 281.841, -10.8544, 1.03", "-22.5227, 282.836, -10.9038, 0.96", "-22.6045, 284.626, -10.9899, 0.88", "-22.6605, 287.016, -11.1002, 0.88", "-22.658, 287.736, -11.1305, 1.25", "-22.6345, 288.635, -11.1659, 1.47", "-22.6205, 288.818, -11.1719, 1.47", "-22.5201, 289.643, -11.2028, 1.47", "-22.5005, 289.763, -11.2077, 1.47", "-22.3318, 290.662, -11.2419, 1.33", "-22.0599, 291.989, -11.2812, 1.18", "-21.7692, 293.386, -11.3233, 1.18", "-21.5963, 294.238, -11.3497, 1.18", "-21.4083, 295.233, -11.3806, 1.03", "-21.2438, 296.304, -11.4133, 0.96", "-21.1382, 297.107, -11.454, 0.88", "-21.0276, 298.108, -11.5209, 0.88", "-21.0234, 298.194, -11.5279, 0.88", "-21.011, 299.542, -11.6456, 0.88", "-21.0824, 301.162, -11.818, 0.88", "-21.1509, 301.937, -11.909, 1.11", "-21.1628, 302.022, -11.9195, 1.11", "-21.3634, 303.09, -12.055, 1.11", "-21.3913, 303.216, -12.0727, 1.11", "-21.6806, 304.294, -12.2499, 1.11", "-21.9258, 305.337, -12.4128, 1.33", "-22.0619, 306.09, -12.5316, 1.33", "-22.0733, 306.187, -12.5474, 1.33", "-22.1545, 307.424, -12.7544, 0.59", "-22.1778, 307.949, -12.8419, 0.37", "-22.2152, 309.672, -13.1263, 0.37", "-22.2232, 310.991, -13.3384, 0.96", "-22.2238, 312.328, -13.5338, 1.25", "-22.2303, 312.778, -13.59, 1.62", "-22.2555, 313.407, -13.6472, 1.77", "-22.327, 314.054, -13.6903, 1.77", "-22.3445, 314.139, -13.6949, 1.77", "-22.6064, 315.153, -13.6829, 1.11", "-22.7383, 315.605, -13.6643, 0.88", "-23.022, 316.5, -13.6187, 0.81", "-23.6471, 318.457, -13.5043, 0.81", "-24.029, 319.705, -13.4362, 0.81", "-24.2848, 320.59, -13.3923, 0.59", "-24.6213, 321.893, -13.3315, 0.59", "-25.0107, 323.615, -13.2643, 0.59", "-25.2029, 324.657, -13.2306, 0.59", "-25.3522, 325.739, -13.2101, 1.25", "-25.4339, 326.546, -13.213, 1.62", "-25.4964, 327.458, -13.2444, 2.06", "-25.5208, 328.439, -13.2692, 2.21", "-25.5174, 329.253, -13.2741, 2.21", "-25.4927, 330.152, -13.2532, 1.55", "-25.4627, 330.784, -13.2179, 1.11", "-25.4079, 331.407, -13.1778, 0.81", "-25.3326, 331.948, -13.1402, 0.66", "-25.1031, 333.115, -13.0595, 0.52", "-24.904, 333.979, -13.0085, 0.52", "-24.8843, 334.063, -13.0048, 0.52", "-24.7405, 334.668, -12.9878, 0.52", "-24.5254, 335.645, -13.0088, 0.52", "-24.3514, 336.61, -13.0757, 0.81", "-24.2317, 337.593, -13.1769, 0.81", "-24.1885, 338.418, -13.2666, 1.03", "-24.1877, 338.516, -13.2762, 1.03", "-24.2156, 339.436, -13.353, 1.11", "-24.2633, 340.509, -13.4706, 1.18", "-24.3523, 341.847, -13.6361, 1.18", "-24.454, 343.089, -13.7938, 1.33", "-24.5426, 344.014, -13.9076, 1.33", "-24.6581, 345.168, -14.0366, 1.33", "-24.7861, 346.402, -14.156, 1.18", "-24.9375, 347.894, -14.2972, 0.96", "-25.0465, 349.054, -14.4003, 0.96", "-25.1354, 350.047, -14.4797, 1.25", "-25.2499, 351.401, -14.5708, 1.92", "-25.3574, 352.651, -14.6345, 2.8", "-25.4396, 353.642, -14.6584, 2.43", "-25.5316, 354.57, -14.6828, 1.62", "-25.643, 355.335, -14.7076, 1.4", "-25.7589, 355.956, -14.7312, 1.03", "-25.7793, 356.04, -14.7371, 1.03", "-26.027, 356.906, -14.8197, 0.88", "-26.4559, 358.285, -14.9748, 0.81", "-26.9816, 359.855, -15.1699, 0.81", "-27.0089, 359.936, -15.1802, 0.81", "-27.5163, 361.422, -15.3704, 0.81", "-27.768, 362.175, -15.4646, 1.11", "-27.9706, 362.787, -15.5396, 1.11", "-28.2193, 363.591, -15.6454, 1.4", "-28.5288, 364.636, -15.7848, 1.47", "-28.7033, 365.374, -15.8694, 1.47", "-28.8166, 365.988, -15.9269, 1.47", "-28.9046, 366.758, -15.9935, 1.47", "-28.965, 367.664, -16.0674, 0.96", "-28.9764, 368.46, -16.1238, 0.88", "-28.9371, 370.276, -16.2938, 0.88", "-28.9341, 370.361, -16.303, 0.88", "-28.8872, 371.892, -16.5171, 0.88", "-28.8871, 371.989, -16.5331, 0.88", "-29.0013, 373.485, -16.8012, 0.88", "-29.1422, 374.449, -17.0295, 0.74", "-29.3509, 375.425, -17.3051, 0.74", "-29.5222, 376.118, -17.5156, 0.96", "-29.8162, 377.215, -17.8677, 0.96", "-30.2372, 378.856, -18.3971, 0.96", "-30.4416, 379.686, -18.6534, 0.37", "-30.5673, 380.289, -18.8089, 0.37", "-30.5803, 380.372, -18.8286, 0.37", "-30.679, 381.281, -18.9988, 0.37", "-30.7301, 382.259, -19.1533, 0.96", "-30.7586, 383.431, -19.2906, 1.55", "-30.7901, 384.153, -19.3421, 1.77", "-30.7937, 384.238, -19.347, 1.77", "-30.8235, 385.326, -19.3906, 1.55", "-30.8319, 386.038, -19.4061, 1.18", "-30.814, 386.663, -19.4165, 1.03", "-30.7665, 387.477, -19.437, 0.81", "-30.6769, 388.85, -19.4805, 0.81", "-30.5892, 390.127, -19.5259, 0.81", "-30.509, 391.209, -19.5522, 1.11", "-30.4086, 392.676, -19.5737, 1.4", "-30.3375, 393.844, -19.5819, 1.55", "-30.2605, 395.367, -19.5817, 1.84", "-30.2307, 396.446, -19.5748, 1.84", "-30.2197, 397.68, -19.5571, 2.06", "-30.2217, 398.49, -19.5372, 2.06", "-30.225, 399.299, -19.5076, 1.84", "-30.2282, 400.01, -19.4848, 1.69", "-30.2256, 400.741, -19.4821, 1.55", "-30.2286, 401.538, -19.5059, 1.25", "-30.2344, 402.346, -19.5699, 1.11", "-30.2472, 403.968, -19.7304, 1.11", "-30.2485, 404.054, -19.7398, 1.11", "-30.2922, 405.354, -19.9141, 1.11", "-30.37, 406.701, -20.1099, 1.11", "-30.4525, 407.82, -20.282, 0.88", "-30.5246, 408.702, -20.429, 0.88", "-30.6533, 410.222, -20.6873, 0.88", "-30.8253, 412.432, -21.0459, 0.88", "-30.9324, 413.895, -21.2638, 1.25", "-30.941, 414.024, -21.2833, 1.25", "-31.0123, 415.308, -21.4654, 1.84", "-31.0626, 416.466, -21.6254, 1.92", "-31.0841, 417.087, -21.7032, 1.84", "-31.1433, 418.16, -21.8117, 1.4", "-31.2179, 419.118, -21.9042, 0.81", "-31.3323, 420.021, -21.9983, 0.81", "-31.5482, 421.177, -22.1217, 0.66", "-31.8212, 422.338, -22.2597, 0.59", "-32.1438, 423.536, -22.4352, 0.59", "-32.1675, 423.618, -22.4487, 0.59", "-32.5351, 424.89, -22.6922, 1.25", "-32.7985, 425.807, -22.8855, 1.69", "-33.012, 426.594, -23.061, 1.69", "-33.2607, 427.693, -23.3272, 1.4", "-33.4142, 428.653, -23.5521, 0.88", "-33.5726, 429.992, -23.8393, 0.59", "-33.7735, 432.28, -24.2575, 0.59", "-33.7791, 432.365, -24.2714, 0.59", "-33.8776, 434.108, -24.515, 0.59", "-33.9684, 435.83, -24.6977, 0.59", "-34.042, 437.262, -24.8223, 0.59", "-34.0877, 438.256, -24.8767, 0.96", "-34.0932, 438.386, -24.8775, 0.96", "-34.1773, 439.477, -24.8287, 1.18", "-34.309, 440.463, -24.7236, 1.4", "-34.3249, 440.546, -24.7064, 1.4", "-34.47, 441.239, -24.5148, 1.4", "-34.6925, 442.283, -24.1999, 1.4", "-34.9645, 443.582, -23.8029, 1.4", "-35.2294, 444.877, -23.3894, 1.4", "-35.587, 446.685, -22.8416, 1.11", "-35.6018, 446.767, -22.8197, 1.11", "-35.8196, 447.975, -22.4887, 1.11", "-36.0205, 449.192, -22.1887, 1.11", "-36.0334, 449.274, -22.1679, 1.11", "-36.2148, 450.415, -21.9065, 1.18", "-36.3845, 451.375, -21.7338, 1.18", "-36.6311, 452.604, -21.4987, 0.81", "-36.9419, 453.984, -21.2181, 0.74", "-37.3792, 455.706, -20.8784, 0.74", "-37.508, 456.203, -20.7907, 1.03", "-37.7224, 456.942, -20.69, 1.4", "-37.7511, 457.036, -20.6826, 1.4", "-37.9553, 457.726, -20.6707, 1.4", "-38.1954, 458.549, -20.6641, 0.96", "-38.3612, 459.16, -20.6661, 0.88", "-38.7053, 460.569, -20.6636, 0.88", "-39.1731, 462.65, -20.6512, 0.88", "-39.3668, 463.543, -20.6456, 1.18", "-39.5517, 464.421, -20.5987, 1.47", "-39.5682, 464.505, -20.5905, 1.47", "-39.6836, 465.214, -20.4937, 1.47", "-39.6927, 465.299, -20.48, 1.47", "-39.7725, 466.291, -20.3846, 1.47", "-39.868, 467.698, -20.3048, 1.18", "-39.9368, 468.597, -20.2887, 0.81", "-39.9937, 469.324, -20.299, 0.66", "-40.1388, 471.327, -20.3887, 0.66", "-40.2564, 473.024, -20.5419, 0.66", "-40.2611, 473.109, -20.554, 0.66", "-40.3082, 474.054, -20.7481, 0.96", "-40.3548, 474.847, -20.9156, 1.33", "-40.4348, 475.811, -21.1113, 1.62", "-40.478, 476.519, -21.2292, 1.33", "-40.4926, 477.007, -21.2713, 1.18", "-40.4931, 477.093, -21.2776, 1.18", "-40.4712, 477.628, -21.3042, 1.18", "-40.4312, 478.455, -21.3313, 0.96", "-40.3637, 479.631, -21.353, 0.74", "-40.2619, 481.441, -21.3632, 0.74", "-40.2569, 481.538, -21.3638, 0.74", "-40.1409, 483.798, -21.4233, 0.74", "-40.0793, 485.051, -21.4765, 1.11", "-40.0737, 485.149, -21.4856, 1.11", "-40.016, 486.233, -21.6409, 1.69", "-39.9584, 487.546, -21.912, 2.21", "-39.913, 488.649, -22.1885, 2.21", "-39.8741, 489.588, -22.4843, 1.03", "-39.8139, 490.767, -22.8718, 0.88", "-39.8083, 490.849, -22.8995, 0.88", "-39.7162, 491.914, -23.2714, 0.66", "-39.6436, 492.767, -23.549, 0.66", "-39.6292, 492.967, -23.6097, 0.66", "-39.5605, 494.088, -23.9372, 0.66", "-39.5233, 495.064, -24.1796, 0.59", "-39.5099, 495.598, -24.3095, 0.74", "-39.4994, 496.382, -24.523, 0.74", "-39.5468, 497.663, -24.8884, 0.81", "-39.5525, 497.746, -24.9121, 0.81", "-39.6353, 498.7, -25.2057, 0.81", "-39.7315, 499.656, -25.493, 0.81", "-39.8562, 500.994, -25.8891, 0.66", "-39.9833, 502.474, -26.2937, 0.52", "-39.9902, 502.569, -26.3161, 0.52", "-40.0616, 503.634, -26.5462, 0.52", "-40.0942, 504.248, -26.6639, 0.52", "-40.1305, 505.049, -26.7847, 1.11", "-40.1675, 506.038, -26.878, 1.69", "-40.1855, 506.571, -26.9167, 2.06", "-40.2444, 507.628, -26.9697, 1.4", "-40.3018, 508.522, -26.9891, 1.11", "-40.3566, 509.336, -27.007, 0.81", "-40.3992, 509.978, -27.0126, 0.59", "-40.4668, 510.975, -27.0112, 0.59", "-40.5427, 512.056, -27.0006, 0.59", "-40.6761, 513.845, -27.0305, 0.59", "-40.7061, 514.209, -27.0455, 0.52", "-40.7564, 514.833, -27.083, 0.52", "-40.7634, 514.919, -27.0894, 0.52", "-40.8825, 516.539, -27.2296, 0.52", "-40.9704, 517.788, -27.3519, 1.03", "-41.0426, 518.86, -27.4661, 1.55", "-41.1123, 520.372, -27.6221, 2.14", "-41.1244, 521.079, -27.7075, 2.36", "-41.1122, 521.622, -27.7698, 2.14", "-41.0776, 522.073, -27.8121, 1.84", "-41.0119, 522.879, -27.8629, 1.69", "-40.9549, 523.876, -27.8725, 1.4", "-40.9165, 524.859, -27.8382, 0.29", "-40.8896, 525.95, -27.7624, 0.29", "-40.8776, 526.722, -27.6855, 0.29", "-40.862, 528.199, -27.4938, 0.29", "-40.8558, 529.645, -27.2584, 0.29", "-40.8527, 530.008, -27.1833, 0.74", "-40.8493, 530.205, -27.1337, 0.74", "-40.8041, 531.096, -26.9194, 0.74", "-40.794, 531.215, -26.8964, 0.74", "-40.6837, 532.018, -26.7908, 0.88", "-40.591, 532.926, -26.7122, 0.88", "-40.5744, 533.194, -26.6844, 0.88", "-40.5477, 534.088, -26.5763, 0.88", "-40.5626, 534.993, -26.457, 1.25", "-40.6179, 535.881, -26.3445, 1.25", "-40.6936, 536.614, -26.2536, 1.11", "-40.7123, 536.742, -26.2354, 1.11", "-40.7706, 537.113, -26.1777, 1.11", "-40.8875, 537.832, -26.0647, 0.66", "-41.0382, 538.728, -25.943, 0.66", "-41.0618, 538.856, -25.9302, 0.66", "-41.2154, 539.732, -25.8747, 0.52", "-41.4786, 541.07, -25.8123, 0.52", "-41.5704, 541.509, -25.8004, 0.96", "-41.7808, 542.463, -25.7612, 1.25", "-41.9522, 543.206, -25.7267, 1.55", "-42.1011, 543.821, -25.7021, 1.55", "-42.3147, 544.682, -25.6775, 1.18", "-42.5902, 545.918, -25.6239, 0.81", "-42.7432, 546.689, -25.5911, 0.88", "-42.7734, 546.871, -25.5862, 0.88", "-42.9957, 548.419, -25.5651, 0.88", "-43.0064, 548.505, -25.565, 0.88", "-43.2403, 550.826, -25.5917, 0.88", "-43.4039, 552.744, -25.6418, 0.88", "-43.4795, 553.846, -25.6884, 1.33", "-43.5334, 554.739, -25.7252, 1.4", "-43.5894, 555.718, -25.7844, 1.4", "-43.6416, 556.524, -25.8453, 0.88", "-43.6472, 556.609, -25.853, 0.88", "-43.7251, 557.866, -25.9714, 0.88", "-43.8437, 559.655, -26.1354, 0.88", "-43.9467, 561.368, -26.3775, 0.88", "-44.0024, 562.434, -26.5702, 1.18", "-44.0356, 563.399, -26.7737, 1.18", "-44.0367, 563.495, -26.7954, 1.18", "-44.004, 564.536, -27.0964, 1.18", "-43.8893, 565.997, -27.5793, 0.96", "-43.8798, 566.079, -27.6059, 0.96", "-43.7703, 566.973, -27.8929, 0.88", "-43.5852, 568.523, -28.3516, 0.81", "-43.4271, 570.0, -28.7274, 0.37", "-43.33, 570.959, -28.9278, 0.59", "-43.2312, 572.038, -29.097, 0.81", "-43.1195, 573.378, -29.2927, 0.96", "-43.0509, 574.281, -29.4076, 1.55", "-42.9669, 575.528, -29.5224, 1.99", "-42.9419, 576.263, -29.534, 2.21", "-42.9409, 576.361, -29.5329, 2.21", "-42.9448, 576.803, -29.5146, 2.21", "-42.96, 577.883, -29.4351, 1.77", "-42.9954, 578.695, -29.3727, 1.47", "-43.0461, 579.501, -29.3087, 1.25", "-43.1312, 580.477, -29.2452, 0.59", "-43.1978, 581.205, -29.1976, 0.37", "-43.2757, 582.016, -29.1458, 0.29", "-43.389, 583.181, -29.0796, 0.29", "-43.3965, 583.267, -29.0759, 0.29", "-43.5216, 584.978, -29.0431, 0.29", "-43.5592, 585.413, -29.034, 0.66", "-43.5743, 585.596, -29.03, 0.66", "-43.6255, 586.318, -29.0157, 0.88", "-43.6285, 586.404, -29.0143, 0.88", "-43.6715, 587.299, -28.9891, 1.11", "-43.7172, 588.212, -28.9569, 1.33", "-43.7562, 588.863, -28.9356, 1.33", "-43.8151, 589.691, -28.9063, 0.81", "-43.9314, 590.94, -28.8589, 0.66", "-44.0877, 592.186, -28.8171, 0.66", "-44.1105, 592.323, -28.8132, 0.66", "-44.3039, 593.205, -28.7985, 1.55", "-44.6465, 594.427, -28.8017, 2.14", "-44.9357, 595.324, -28.8207, 2.5", "-45.385, 596.584, -28.875, 2.5", "-45.5994, 597.196, -28.9118, 2.43", "-45.9944, 598.391, -28.9826, 1.62", "-46.298, 599.354, -29.0397, 0.59", "-46.5343, 600.15, -29.087, 0.59", "-46.9864, 601.838, -29.1859, 0.44", "-47.2627, 603.06, -29.2496, 0.44", "-47.4275, 603.946, -29.2896, 0.74", "-47.4418, 604.044, -29.2943, 0.74", "-47.5242, 604.719, -29.3441, 0.74", "-47.5336, 604.804, -29.3529, 0.74", "-47.6481, 605.959, -29.5097, 0.74", "-47.6569, 606.043, -29.5232, 0.74", "-47.7427, 606.992, -29.6786, 0.37", "-47.8432, 608.553, -29.9308, 0.37", "-47.8453, 608.638, -29.9436, 0.37", "-47.8286, 609.345, -30.0337, 0.66", "-47.8192, 609.442, -30.0431, 0.66", "-47.6744, 610.33, -30.0909, 1.25", "-47.6515, 610.426, -30.0913, 1.25", "-47.3766, 611.376, -30.0672, 1.77", "-47.0972, 612.307, -30.062, 1.77", "-46.8775, 612.996, -30.066, 1.92", "-46.5288, 614.146, -30.0859, 1.55", "-46.1854, 615.324, -30.0953, 0.74", "-45.8526, 616.534, -30.0977, 0.52", "-45.7042, 617.11, -30.0957, 0.37", "-45.6849, 617.194, -30.0949, 0.37", "-45.4082, 618.607, -30.0722, 0.37", "-45.256, 619.531, -30.0479, 0.37", "-45.2447, 619.616, -30.0448, 0.37", "-45.1632, 620.328, -30.0105, 1.03", "-45.0977, 620.894, -29.9786, 1.4", "-45.0174, 621.699, -29.9257, 1.55", "-44.9335, 622.593, -29.8637, 1.25", "-44.8792, 623.319, -29.816, 0.81", "-44.8324, 624.034, -29.7605, 0.52", "-44.8034, 624.846, -29.6922, 0.52", "-44.7905, 626.118, -29.5782, 0.52", "-44.7913, 626.203, -29.5704, 0.52", "-44.8424, 627.188, -29.4861, 0.81", "-44.8506, 627.286, -29.479, 0.81", "-44.9715, 628.38, -29.4187, 0.96", "-44.9844, 628.477, -29.4163, 0.96", "-45.1233, 629.264, -29.4018, 0.96", "-45.259, 629.897, -29.3757, 0.96", "-45.3782, 630.344, -29.3514, 1.18", "-45.4335, 630.508, -29.3433, 1.18", "-45.666, 631.111, -29.3124, 1.18", "-46.0311, 631.98, -29.2688, 1.03", "-46.2711, 632.479, -29.2488, 0.81", "-46.8008, 633.485, -29.2278, 0.52", "-47.5854, 634.851, -29.2308, 0.52", "-47.6307, 634.925, -29.2326, 0.52", "-47.8531, 635.269, -29.2503, 0.74", "-48.5098, 636.234, -29.3347, 1.03", "-49.2158, 637.202, -29.4258, 1.03", "-49.7416, 637.879, -29.4945, 1.03", "-49.8731, 638.045, -29.5122, 1.03", "-50.5014, 638.8, -29.5569, 1.03", "-51.0987, 639.49, -29.5675, 0.74", "-51.1653, 639.565, -29.5648, 0.74", "-51.5689, 640.002, -29.5019, 0.52", "-52.1515, 640.618, -29.3308, 0.52", "-53.0654, 641.702, -28.982, 0.52", "-53.4996, 642.33, -28.7754, 0.44", "-53.5515, 642.411, -28.7491, 0.44", "-54.2091, 643.474, -28.3999, 0.29", "-55.0725, 644.947, -27.9015, 0.29", "-55.8665, 646.415, -27.4056, 2.73", "-56.48, 647.721, -27.0093, 3.17", "-56.7625, 648.374, -26.8163, 3.17" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 29
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.78689, 472.29, -21.2874, 0.37", "-6.47853, 473.23, -18.6602, 0.37", "-6.49676, 473.256, -18.5959, 0.37", "-6.63574, 473.486, -18.1242, 1.03", "-6.65709, 473.522, -18.0541, 1.03", "-7.28628, 474.611, -16.0276, 1.03", "-7.73295, 475.343, -14.749, 0.37", "-7.92857, 475.651, -14.2646, 0.29", "-8.22538, 476.119, -13.5629, 0.29", "-8.64987, 476.783, -12.61, 0.29", "-8.70512, 476.875, -12.5025, 0.29", "-9.06816, 477.542, -11.9544, 0.29", "-9.08896, 477.588, -11.9235, 0.29", "-9.41195, 478.68, -11.3388, 0.29", "-9.43774, 478.818, -11.274, 0.29", "-9.49979, 479.655, -10.9605, 0.29", "-9.49948, 479.794, -10.9108, 0.29", "-9.39861, 480.834, -10.5692, 0.29", "-9.2067, 482.183, -10.1825, 0.29", "-9.0659, 482.839, -10.0395, 0.96", "-8.92081, 483.363, -9.92544, 1.4", "-8.82474, 483.665, -9.8433, 1.4", "-8.66168, 484.144, -9.70014, 0.88", "-8.47887, 484.663, -9.52356, 0.52", "-7.99978, 486.02, -8.99281, 0.29", "-7.4441, 487.608, -8.33914, 0.29", "-7.13417, 488.534, -7.92362, 0.88", "-6.99495, 488.991, -7.71351, 0.88", "-6.84643, 489.587, -7.4387, 0.81", "-6.7625, 489.985, -7.25387, 0.22", "-6.75394, 490.047, -7.22538, 0.22", "-6.70574, 490.806, -6.97183, 0.22", "-6.65294, 491.718, -6.78776, 0.22", "-6.61605, 492.416, -6.68738, 0.22", "-6.59254, 492.675, -6.65765, 0.22", "-6.58276, 492.742, -6.64969, 0.22", "-6.46814, 493.333, -6.55591, 1.03", "-6.42958, 493.484, -6.5257, 1.4", "-6.2901, 493.959, -6.41546, 1.4", "-6.06904, 494.684, -6.24133, 0.22", "-5.88659, 495.384, -6.08575, 0.22", "-5.85959, 495.504, -6.06202, 0.22", "-5.70369, 496.354, -5.9102, 0.22", "-5.64076, 496.799, -5.84361, 0.66", "-5.62588, 496.934, -5.82718, 0.66", "-5.59329, 497.435, -5.77576, 0.66", "-5.57518, 497.94, -5.71642, 0.66", "-5.55737, 498.312, -5.6695, 0.15", "-5.51432, 499.225, -5.42955, 0.15", "-5.51052, 499.29, -5.40625, 0.15", "-5.48091, 499.633, -5.25823, 0.66", "-5.43043, 500.086, -5.03051, 0.88", "-5.38815, 500.367, -4.85511, 0.88", "-5.18475, 501.488, -4.13453, 0.29", "-5.17111, 501.554, -4.09245, 0.29", "-5.04494, 502.162, -3.74708, 0.29", "-5.03034, 502.232, -3.71299, 0.29", "-4.88175, 502.96, -3.38232, 0.22", "-4.67907, 503.966, -2.99681, 0.22", "-4.59153, 504.388, -2.87116, 0.88", "-4.51449, 504.737, -2.76758, 1.25", "-4.40127, 505.21, -2.63859, 1.25", "-4.1941, 506.089, -2.37699, 0.29", "-4.07159, 506.649, -2.21146, 0.22", "-4.04434, 506.778, -2.16857, 0.22", "-3.96963, 507.216, -2.02549, 0.22", "-3.86721, 508.143, -1.65955, 0.22", "-3.7704, 509.399, -1.13984, 0.22", "-3.75602, 509.742, -0.998086, 1.03", "-3.75221, 510.206, -0.805276, 1.03", "-3.78282, 510.922, -0.510781, 1.03", "-3.89864, 512.141, 0.0384596, 0.29", "-4.00464, 513.138, 0.511982, 0.22", "-4.01523, 513.263, 0.570584, 0.22", "-4.05386, 513.83, 0.902533, 0.22", "-4.10197, 514.756, 1.51072, 0.22", "-4.13449, 515.854, 2.25787, 1.03", "-4.14765, 516.265, 2.52291, 1.03", "-4.15353, 516.352, 2.58196, 1.03", "-4.24451, 517.879, 3.65231, 0.29", "-4.26227, 518.295, 3.96141, 0.22", "-4.26957, 518.88, 4.39462, 0.22", "-4.28548, 519.265, 4.65211, 0.74", "-4.31014, 519.534, 4.83106, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.78689, 472.29, -21.2874, 1.47", "-5.70596, 472.5, -21.3291, 1.47", "-5.55909, 472.865, -21.4045, 0.29", "-5.3232, 473.424, -21.5207, 0.29", "-5.10828, 473.922, -21.6222, 0.29", "-4.89905, 474.41, -21.7358, 0.29", "-4.65937, 474.965, -21.8753, 0.29", "-4.555, 475.217, -21.9467, 0.81", "-4.46435, 475.47, -22.0189, 1.11", "-4.38273, 475.754, -22.1002, 1.11", "-4.31942, 476.07, -22.1977, 0.29", "-4.30007, 476.209, -22.2413, 0.29", "-4.2449, 476.8, -22.4215, 0.37", "-4.18012, 477.726, -22.7003, 0.37", "-4.15204, 478.402, -22.8948, 0.37", "-4.14549, 478.755, -22.9987, 0.22", "-4.14652, 479.441, -23.1921, 0.22", "-4.15831, 479.759, -23.2909, 1.25", "-4.1704, 479.945, -23.3527, 1.62", "-4.1795, 480.18, -23.4474, 1.62", "-4.18501, 480.531, -23.596, 0.52", "-4.18403, 480.777, -23.7008, 0.44", "-4.18006, 481.195, -23.8904, 0.22", "-4.1614, 481.727, -24.136, 0.22", "-4.11723, 482.383, -24.4626, 0.22", "-4.11446, 482.411, -24.4759, 0.22", "-4.06282, 482.86, -24.6754, 1.11", "-4.03956, 483.014, -24.7495, 1.55", "-4.0192, 483.127, -24.8064, 1.55", "-3.92686, 483.593, -25.0558, 0.22", "-3.79253, 484.245, -25.3975, 0.22", "-3.78617, 484.272, -25.4113, 0.22", "-3.61288, 484.883, -25.713, 0.22", "-3.52272, 485.171, -25.8552, 1.11", "-3.47972, 485.289, -25.9123, 1.4", "-3.46669, 485.319, -25.9269, 1.4", "-3.40798, 485.421, -25.9946, 1.4", "-3.31839, 485.563, -26.0895, 0.96", "-3.30196, 485.582, -26.1003, 0.96", "-3.23208, 485.644, -26.1336, 0.96", "-2.98872, 485.849, -26.2673, 0.29", "-2.96562, 485.867, -26.2802, 0.29", "-2.70287, 486.055, -26.4254, 0.29", "-2.28046, 486.349, -26.6936, 0.29", "-1.98955, 486.559, -26.8803, 0.29", "-1.73102, 486.744, -27.0506, 1.11", "-1.53565, 486.885, -27.1779, 1.47", "-1.36928, 487.006, -27.2938, 1.47", "-1.03218, 487.261, -27.5468, 0.22", "-0.606335, 487.597, -27.9046, 0.22", "-0.35629, 487.837, -28.1115, 0.66", "-0.261416, 487.948, -28.1869, 0.66", "-0.225857, 487.996, -28.2165, 0.66", "-0.0894246, 488.201, -28.3248, 0.66", "0.0359917, 488.407, -28.4128, 0.22", "0.416093, 489.162, -28.6681, 0.22", "0.539939, 489.442, -28.7352, 0.81", "0.551909, 489.471, -28.7397, 0.81", "0.63437, 489.67, -28.7595, 1.18", "0.689077, 489.808, -28.7661, 1.18", "0.831923, 490.164, -28.7595, 0.15", "0.843731, 490.193, -28.7578, 0.15", "1.12026, 490.892, -28.7049, 0.15", "1.13083, 490.921, -28.7035, 0.15", "1.18264, 491.081, -28.7017, 0.81", "1.20751, 491.171, -28.6969, 1.11", "1.21385, 491.201, -28.6949, 1.11", "1.24478, 491.389, -28.6643, 1.11", "1.24858, 491.419, -28.6573, 1.11", "1.26911, 491.586, -28.6146, 0.15", "1.3526, 492.291, -28.4272, 0.15", "1.43703, 493.035, -28.2341, 0.15", "1.47095, 493.337, -28.1592, 0.88", "1.47452, 493.367, -28.1523, 0.88", "1.49749, 493.558, -28.1166, 1.69", "1.52777, 493.815, -28.0884, 1.69", "1.54701, 493.975, -28.0898, 0.96", "1.5726, 494.197, -28.1048, 0.52", "1.59402, 494.41, -28.1281, 0.15", "1.64715, 494.984, -28.1923, 0.15", "1.66715, 495.236, -28.2188, 0.88", "1.68256, 495.489, -28.2432, 1.18", "1.68765, 495.615, -28.254, 1.18", "1.69209, 495.811, -28.2684, 0.44", "1.68963, 496.006, -28.2874, 0.15", "1.68415, 496.707, -28.3692, 0.15", "1.68599, 496.898, -28.3922, 0.44", "1.69052, 497.092, -28.4196, 0.66", "1.69882, 497.282, -28.4566, 0.66", "1.72139, 497.633, -28.5434, 0.15", "1.78056, 498.296, -28.7442, 0.15", "1.80712, 498.484, -28.8224, 0.74", "1.81235, 498.515, -28.8386, 0.74", "1.887, 498.833, -29.0207, 0.96", "1.89429, 498.859, -29.0362, 0.96", "1.93944, 499.011, -29.1155, 0.96", "2.02149, 499.292, -29.2623, 0.74", "2.10261, 499.583, -29.4136, 0.15", "2.23699, 500.09, -29.6615, 0.15", "2.24509, 500.121, -29.6755, 0.15", "2.38578, 500.705, -29.9213, 0.15", "2.3909, 500.732, -29.9348, 0.15", "2.42963, 501.052, -30.1002, 0.96", "2.43671, 501.197, -30.1768, 1.33", "2.43548, 501.223, -30.1937, 1.33", "2.41322, 501.491, -30.3758, 1.62", "2.32564, 502.058, -30.8272, 0.81", "2.29603, 502.218, -30.9564, 0.22", "2.21897, 502.604, -31.2505, 0.22", "2.1537, 502.917, -31.49, 0.59", "2.11768, 503.102, -31.6288, 0.59", "2.04364, 503.532, -31.9357, 0.15", "2.0403, 503.558, -31.9517, 0.15", "1.99794, 503.845, -32.2186, 0.15", "1.99619, 503.872, -32.2421, 0.15", "1.99158, 504.128, -32.4424, 1.18", "2.00008, 504.288, -32.5595, 1.62", "2.00239, 504.313, -32.5771, 1.62", "2.10733, 505.282, -33.2897, 0.22", "2.22952, 506.321, -34.0898, 0.22", "2.23492, 506.371, -34.1345, 0.22", "2.29302, 507.091, -34.7783, 0.22", "2.29466, 507.114, -34.7991, 0.22", "2.3184, 507.544, -35.1665, 1.4", "2.32135, 507.604, -35.2133, 1.4", "2.31114, 508.398, -35.9781, 0.15", "2.2801, 509.166, -36.6944, 0.15", "2.26484, 509.366, -36.8736, 0.59", "2.25753, 509.527, -37.0046, 0.81", "2.25502, 509.652, -37.1105, 0.81", "2.2656, 510.001, -37.3927, 0.15", "2.31633, 510.611, -37.854, 0.15", "2.34647, 510.857, -38.0674, 1.33", "2.37397, 511.077, -38.2677, 1.55", "2.46021, 511.829, -38.9525, 0.15", "2.52999, 512.516, -39.5646, 0.15", "2.53454, 512.568, -39.6074, 0.44", "2.53553, 512.592, -39.6273, 0.44", "2.53238, 512.956, -39.9039, 0.22", "2.49325, 513.412, -40.2491, 0.22", "2.48836, 513.435, -40.2619, 0.22", "2.44574, 513.545, -40.3319, 0.88", "2.35449, 513.737, -40.4426, 0.88", "2.34076, 513.761, -40.4576, 0.88", "1.97256, 514.263, -40.724, 0.22", "1.47611, 514.864, -41.035, 0.22", "1.21247, 515.171, -41.182, 1.11", "0.976185, 515.437, -41.299, 1.33", "0.557381, 515.895, -41.4924, 0.15", "-0.347951, 516.842, -41.8335, 0.15", "-0.369928, 516.864, -41.8396, 0.15", "-0.502613, 516.988, -41.8756, 0.52", "-0.60632, 517.084, -41.9097, 0.52", "-0.767148, 517.235, -41.9728, 0.22", "-1.15861, 517.627, -42.2528, 0.22", "-1.28978, 517.761, -42.4002, 0.52", "-1.46585, 517.949, -42.6062, 0.52", "-1.84388, 518.369, -43.0771, 0.15", "-2.18307, 518.828, -43.5431, 0.15", "-2.69551, 519.677, -44.344, 0.88", "-2.71114, 519.713, -44.3766, 1.69", "-2.80672, 520.011, -44.6198, 0.15", "-2.81134, 520.036, -44.6374, 0.15", "-2.8315, 520.762, -44.9662, 0.15", "-2.76949, 520.947, -45.008, 0.52", "-2.6874, 521.114, -45.0104, 0.52", "-2.67248, 521.142, -45.011, 0.52", "-2.59, 521.281, -45.0184, 0.15", "-2.5735, 521.307, -45.0192, 0.15", "-1.7796, 522.437, -45.0115, 0.15", "-1.6498, 522.62, -45.0048, 1.03", "-1.52352, 522.799, -44.9984, 1.25" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-56.7625, 648.374, -26.8163, 0.96", "-56.5948, 649.196, -26.2259, 0.96", "-56.4155, 650.38, -25.436, 0.52", "-56.3526, 651.085, -25.0065, 0.52", "-56.3287, 652.148, -24.4266, 0.44", "-56.3315, 652.235, -24.3841, 0.44", "-56.4171, 653.068, -23.9277, 0.44", "-56.4327, 653.123, -23.8992, 0.44", "-56.6133, 653.527, -23.6951, 0.81", "-56.8597, 653.953, -23.4776, 0.96", "-57.0416, 654.241, -23.3429, 0.96", "-57.8307, 655.505, -22.7658, 0.74", "-58.0358, 655.821, -22.5616, 0.52", "-58.2271, 656.098, -22.3662, 0.52", "-58.642, 656.67, -21.8684, 0.22", "-58.7148, 656.767, -21.7742, 0.22", "-59.1201, 657.297, -21.2572, 0.22", "-60.0226, 658.41, -19.9915, 0.74", "-60.33, 658.77, -19.493, 0.96", "-60.8773, 659.439, -18.4788, 1.11", "-60.9031, 659.475, -18.4184, 1.11", "-61.0814, 659.783, -17.8771, 1.11", "-61.3678, 660.644, -16.2982, 1.03", "-61.3718, 660.683, -16.2346, 1.03", "-61.3632, 661.104, -15.6008, 0.66", "-61.2955, 661.855, -14.5982, 0.29", "-61.232, 662.368, -13.9654, 0.29", "-61.0529, 663.589, -12.6091, 0.29", "-60.999, 663.98, -12.2855, 0.66", "-60.9623, 664.353, -12.0061, 0.66", "-60.9573, 664.406, -11.9706, 0.66", "-60.9339, 664.702, -11.8098, 0.66", "-60.8525, 665.714, -11.3286, 0.29", "-60.6939, 666.765, -10.9085, 0.29", "-60.6801, 666.831, -10.8817, 0.29", "-60.3582, 668.124, -10.3752, 0.29", "-60.3064, 668.305, -10.3085, 0.96", "-60.1401, 668.81, -10.12, 1.25", "-60.1191, 668.867, -10.1012, 1.25", "-59.9221, 669.402, -9.9065, 1.25", "-59.8018, 669.778, -9.78428, 1.25", "-59.779, 669.868, -9.76042, 1.25", "-59.6637, 670.546, -9.59682, 0.29", "-59.5993, 671.189, -9.4678, 0.29", "-59.5958, 671.289, -9.45192, 0.29", "-59.6102, 671.87, -9.38175, 0.29", "-59.6165, 671.942, -9.37665, 0.29", "-59.7444, 672.811, -9.36533, 0.29", "-59.8662, 673.38, -9.39726, 0.81", "-59.9545, 673.696, -9.41701, 1.03", "-59.9765, 673.765, -9.42147, 1.03", "-60.1473, 674.248, -9.4537, 1.03", "-60.357, 674.777, -9.48994, 0.44", "-60.7631, 675.65, -9.47911, 0.29", "-60.9413, 675.998, -9.4516, 0.59", "-61.1752, 676.486, -9.38823, 0.59", "-61.2037, 676.551, -9.37693, 0.59", "-61.4718, 677.242, -9.22814, 0.59", "-61.7804, 678.145, -8.99086, 0.37", "-61.7967, 678.203, -8.97333, 0.37", "-61.9894, 679.127, -8.6496, 0.37", "-62.0434, 679.516, -8.51031, 0.37", "-62.0503, 679.567, -8.49509, 0.37", "-62.0829, 679.862, -8.42851, 0.59", "-62.1344, 680.242, -8.37229, 0.59", "-62.2676, 681.005, -8.26484, 0.44", "-62.427, 681.64, -8.18327, 0.29", "-62.772, 682.768, -8.0667, 0.29", "-62.9715, 683.332, -8.0211, 0.74", "-63.1355, 683.738, -8.00139, 0.81", "-63.1922, 683.862, -8.00004, 0.81", "-63.4483, 684.381, -8.02715, 0.81", "-63.6393, 684.748, -8.04403, 0.96", "-63.7347, 684.938, -8.05125, 0.96", "-63.7602, 684.997, -8.05315, 0.96", "-63.966, 685.557, -8.06593, 0.37", "-64.2228, 686.409, -8.07966, 0.37", "-64.4016, 687.159, -8.08777, 0.37", "-64.5469, 687.852, -8.09488, 0.22", "-64.7025, 688.697, -8.10378, 0.22", "-64.7936, 689.223, -8.11109, 0.37", "-64.8759, 689.743, -8.12148, 0.59", "-64.9525, 690.264, -8.13134, 0.88", "-65.008, 690.679, -8.13951, 1.33", "-65.0177, 690.75, -8.14122, 1.33", "-65.0978, 691.244, -8.13895, 1.33", "-65.2191, 691.982, -8.12248, 1.03", "-65.3226, 692.631, -8.09944, 0.59", "-65.477, 693.675, -8.05224, 0.29", "-65.697, 695.182, -7.94484, 0.29", "-65.7925, 695.819, -7.86931, 0.81", "-65.8975, 696.524, -7.75621, 0.81", "-65.9764, 697.038, -7.63961, 0.52", "-66.0076, 697.226, -7.58216, 0.44", "-66.3024, 698.721, -7.01672, 0.22", "-66.4592, 699.316, -6.71534, 0.59", "-66.5291, 699.538, -6.58926, 0.74", "-66.7929, 700.212, -6.17007, 0.74", "-66.9797, 700.638, -5.92397, 0.15", "-67.2768, 701.264, -5.60284, 0.15", "-67.844, 702.404, -5.17122, 0.15", "-67.9088, 702.537, -5.1412, 0.15", "-68.2227, 703.188, -5.0784, 0.15", "-68.6476, 704.093, -5.10083, 0.15", "-68.7276, 704.28, -5.1196, 0.15", "-69.0461, 705.152, -5.27722, 0.15", "-69.1321, 705.426, -5.34912, 0.15", "-69.4721, 706.588, -5.6315, 0.15", "-69.4907, 706.656, -5.64554, 0.52", "-69.5606, 706.914, -5.68015, 0.52", "-69.6411, 707.216, -5.72492, 0.15", "-69.7788, 707.74, -5.8207, 0.15", "-69.7933, 707.809, -5.83515, 0.15", "-69.8073, 708.092, -5.91758, 0.52", "-69.8169, 708.222, -5.955, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-56.7625, 648.374, -26.8163, 0.59", "-58.1232, 649.562, -27.1741, 0.59", "-58.6036, 650.007, -27.312, 0.59", "-58.6707, 650.076, -27.3328, 0.59", "-59.3598, 650.89, -27.5567, 0.52", "-60.3732, 652.256, -27.8936, 0.52", "-60.4265, 652.335, -27.9116, 0.52", "-60.7689, 652.964, -28.0538, 0.74", "-61.2533, 654.115, -28.2563, 0.74", "-61.6118, 655.276, -28.4072, 0.59", "-61.7576, 656.069, -28.4693, 0.29", "-61.8029, 656.794, -28.4894, 0.29", "-61.8016, 656.877, -28.4888, 0.29", "-61.6812, 658.749, -28.3413, 0.29", "-61.6358, 659.19, -28.2811, 0.59", "-61.6144, 659.391, -28.2463, 0.59", "-61.5434, 660.288, -28.0846, 0.59", "-61.4662, 662.282, -27.7498, 0.59", "-61.4621, 663.32, -27.594, 0.29", "-61.4668, 663.428, -27.5804, 0.29", "-61.5113, 664.121, -27.509, 0.22", "-61.6363, 665.716, -27.3818, 0.22", "-61.7679, 667.024, -27.3214, 0.96", "-61.8834, 668.037, -27.3153, 1.55", "-61.9546, 668.669, -27.3372, 1.84", "-62.0145, 669.158, -27.3562, 1.84", "-62.136, 669.978, -27.3971, 1.55", "-62.2923, 670.889, -27.4655, 0.59", "-62.367, 671.289, -27.5034, 0.52", "-62.5168, 671.998, -27.5849, 0.29", "-62.7869, 673.263, -27.7414, 0.29", "-63.0154, 674.222, -27.8763, 0.29", "-63.204, 674.961, -27.9907, 0.66", "-63.261, 675.156, -28.0248, 0.66", "-63.4994, 675.87, -28.1595, 0.96", "-63.5343, 675.958, -28.1778, 0.96", "-63.8587, 676.666, -28.3334, 0.96", "-63.8989, 676.752, -28.351, 0.96", "-64.2698, 677.614, -28.5586, 0.96", "-64.6084, 678.483, -28.7874, 0.96", "-64.9415, 679.424, -29.0443, 0.96", "-65.1846, 680.23, -29.2534, 0.59", "-65.3603, 680.918, -29.4253, 0.44", "-65.5948, 682.209, -29.6966, 0.29", "-65.7266, 683.454, -29.9045, 0.29", "-65.7414, 683.753, -29.9419, 0.29", "-65.7484, 684.943, -30.0432, 0.29", "-65.747, 685.052, -30.0487, 0.29", "-65.6643, 687.087, -30.1477, 0.29", "-65.6026, 688.178, -30.2152, 0.96", "-65.5431, 689.184, -30.3157, 1.69", "-65.5119, 689.876, -30.4042, 1.92", "-65.4842, 690.831, -30.5524, 1.25", "-65.4638, 692.044, -30.8041, 0.88", "-65.4632, 693.419, -31.1562, 0.29", "-65.4099, 695.848, -31.7663, 0.29", "-65.3937, 696.259, -31.8655, 0.74", "-65.3779, 696.568, -31.931, 0.74", "-65.2779, 698.228, -32.2249, 0.29", "-65.1946, 699.406, -32.3808, 0.29", "-65.0097, 701.24, -32.5734, 0.29", "-64.9921, 701.375, -32.5864, 0.29", "-64.7918, 702.959, -32.7167, 0.29", "-64.7702, 703.149, -32.7276, 0.29", "-64.7016, 704.134, -32.7463, 0.96", "-64.6959, 705.131, -32.7959, 1.25", "-64.7018, 705.226, -32.8071, 1.25", "-64.7357, 705.73, -32.8731, 1.25", "-64.7832, 706.421, -32.9665, 1.25", "-64.8681, 707.544, -33.1118, 0.52", "-64.9453, 708.442, -33.2401, 0.44", "-65.0099, 709.223, -33.3633, 0.22", "-65.2262, 711.486, -33.7383, 0.22", "-65.3059, 712.265, -33.8728, 0.81", "-65.4133, 712.974, -34.0056, 0.81", "-65.5911, 713.903, -34.1874, 0.15", "-65.6136, 713.995, -34.2056, 0.15", "-66.0741, 715.518, -34.4906, 0.15", "-66.1138, 715.618, -34.513, 0.15", "-66.5746, 717.24, -35.3132, 0.15", "-66.5881, 717.32, -35.3669, 0.15", "-66.6318, 717.84, -35.7425, 1.4", "-66.6231, 718.308, -36.1409, 1.69", "-66.5687, 719.041, -36.85, 1.69", "-66.2498, 722.213, -40.1314, 0.29", "-66.0038, 723.324, -41.523, 0.29", "-65.7881, 724.107, -42.5942, 0.29", "-65.5015, 725.043, -43.9546, 0.59", "-65.3236, 725.597, -44.7973, 0.59", "-65.3045, 725.658, -44.8912, 0.59", "-64.9477, 727.761, -47.9886, 0.15", "-64.9409, 727.813, -48.0725, 0.15", "-64.9319, 728.289, -48.7776, 0.15", "-64.9536, 728.445, -48.9495, 0.15", "-65.0477, 728.878, -49.3582, 0.15", "-65.1689, 729.161, -49.5517, 0.15", "-65.6786, 730.197, -50.3924, 0.15", "-65.859, 730.66, -50.8369, 0.96", "-65.985, 731.089, -51.3377, 1.4", "-66.0346, 731.28, -51.5777, 1.77", "-66.104, 731.926, -52.6415, 1.77", "-65.9358, 733.814, -56.503, 0.22", "-65.8365, 734.29, -57.574, 0.22", "-65.6597, 734.915, -59.0323, 0.96", "-65.4895, 735.209, -59.8668, 0.96", "-64.3391, 736.642, -64.4105, 0.74", "-63.5632, 737.498, -67.2541, 0.66", "-63.3572, 737.705, -67.9693, 0.66", "-63.3297, 737.732, -68.0623, 0.66", "-61.0536, 739.955, -75.5237, 0.88", "-60.9931, 740.015, -75.7215, 0.88", "-60.5041, 740.564, -77.4378, 0.22", "-60.1428, 741.034, -78.9456, 0.88", "-60.0383, 741.182, -79.4444, 0.88", "-60.0221, 741.211, -79.5389, 0.88", "-60.2355, 742.219, -81.6511, 0.22", "-60.2435, 742.257, -81.7436, 0.22", "-60.2602, 742.508, -82.7756, 0.22", "-60.2767, 742.531, -82.8871, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_18", "dend_15", "dend_0", "dend_34", "dend_24", "dend_22", "dend_19", "dend_17", "dend_16", "dend_12", "dend_1", "dend_36", "dend_35", "dend_31", "dend_30", "dend_25", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_6", "dend_3", "dend_29", "dend_28", "dend_10", "dend_7", "dend_5", "dend_4", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_18", "dend_15", "dend_0", "dend_34", "dend_24", "dend_22", "dend_19", "dend_17", "dend_16", "dend_12", "dend_1", "dend_36", "dend_35", "dend_31", "dend_30", "dend_25", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_6", "dend_3", "dend_29", "dend_28", "dend_10", "dend_7", "dend_5", "dend_4", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_LBC_e85c51cdb8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_23
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_24
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_10
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.49999876050328307)
    connect dend_18(0), soma_0(0.49999876050328307)
    connect dend_15(0), soma_0(0.49999876050328307)
    connect dend_0(0), soma_0(0.49999876050328307)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_24(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.0872, -14.5298, 1.66446, 3.93857 ) }
    soma_0 { pt3dadd( 1.03391, -13.142, 1.51424, 6.52863 ) }
    soma_0 { pt3dadd( 0.980623, -11.7541, 1.36402, 8.04637 ) }
    soma_0 { pt3dadd( 0.927335, -10.3662, 1.21381, 9.63708 ) }
    soma_0 { pt3dadd( 0.874048, -8.97833, 1.06359, 11.064 ) }
    soma_0 { pt3dadd( 0.820761, -7.59046, 0.913373, 11.9239 ) }
    soma_0 { pt3dadd( 0.767473, -6.20258, 0.763156, 12.4398 ) }
    soma_0 { pt3dadd( 0.714186, -4.81471, 0.612939, 12.9921 ) }
    soma_0 { pt3dadd( 0.660898, -3.42683, 0.462723, 13.7517 ) }
    soma_0 { pt3dadd( 0.607611, -2.03896, 0.312506, 14.5599 ) }
    soma_0 { pt3dadd( 0.554324, -0.651085, 0.162289, 15.2134 ) }
    soma_0 { pt3dadd( 0.501036, 0.73679, 0.0120717, 15.5164 ) }
    soma_0 { pt3dadd( 0.447749, 2.12466, -0.138145, 15.3298 ) }
    soma_0 { pt3dadd( 0.394461, 3.51254, -0.288362, 13.7024 ) }
    soma_0 { pt3dadd( 0.341174, 4.90041, -0.438579, 11.5148 ) }
    soma_0 { pt3dadd( 0.287887, 6.28829, -0.588796, 9.87312 ) }
    soma_0 { pt3dadd( 0.234599, 7.67616, -0.739013, 8.2425 ) }
    soma_0 { pt3dadd( 0.181312, 9.06404, -0.88923, 6.9098 ) }
    soma_0 { pt3dadd( 0.128024, 10.4519, -1.03945, 5.83952 ) }
    soma_0 { pt3dadd( 0.0747371, 11.8398, -1.18966, 4.73272 ) }
    soma_0 { pt3dadd( 0.0214497, 13.2277, -1.33988, 2.78861 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.14716, -12.5986, 1.14781, 5.97 ) }
    dend_23 { pt3dadd( 1.14376, -12.6459, 1.14831, 6.04 ) }
    dend_23 { pt3dadd( 1.04857, -13.9717, 1.16232, 6.04 ) }
    dend_23 { pt3dadd( 1.02573, -14.2898, 1.16566, 5.0 ) }
    dend_23 { pt3dadd( 0.945809, -15.4027, 1.17742, 5.0 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.10284, 2.3259, -0.602184, 1.84 ) }
    dend_18 { pt3dadd( -6.10284, 2.3259, -0.602184, 1.84 ) }
    dend_18 { pt3dadd( -6.5123, 2.83962, -0.6684, 1.62 ) }
    dend_18 { pt3dadd( -6.98674, 3.45502, -0.745582, 1.33 ) }
    dend_18 { pt3dadd( -7.11743, 3.63066, -0.774427, 1.33 ) }
    dend_18 { pt3dadd( -7.99827, 4.81447, -1.00898, 1.33 ) }
    dend_18 { pt3dadd( -8.66337, 5.71184, -1.2003, 1.33 ) }
    dend_18 { pt3dadd( -8.70708, 5.7719, -1.2136, 1.33 ) }
    dend_18 { pt3dadd( -9.50224, 6.88964, -1.47576, 1.33 ) }
    dend_18 { pt3dadd( -9.99753, 7.62602, -1.64375, 1.33 ) }
    dend_18 { pt3dadd( -10.5742, 8.50622, -1.85496, 1.33 ) }
    dend_18 { pt3dadd( -10.6085, 8.56088, -1.86785, 1.33 ) }
    dend_18 { pt3dadd( -11.2638, 9.65423, -2.10016, 1.33 ) }
    dend_18 { pt3dadd( -11.2958, 9.71011, -2.11335, 1.33 ) }
    dend_18 { pt3dadd( -11.7279, 10.5136, -2.31681, 1.33 ) }
    dend_18 { pt3dadd( -12.3331, 11.7007, -2.60292, 0.96 ) }
    dend_18 { pt3dadd( -12.837, 12.7719, -2.86055, 0.96 ) }
    dend_18 { pt3dadd( -12.8631, 12.8298, -2.87666, 0.96 ) }
    dend_18 { pt3dadd( -13.278, 13.7968, -3.17759, 1.47 ) }
    dend_18 { pt3dadd( -13.3279, 13.9128, -3.21285, 1.47 ) }
    dend_18 { pt3dadd( -13.5824, 14.5187, -3.38042, 1.77 ) }
    dend_18 { pt3dadd( -13.815, 15.0912, -3.51547, 1.77 ) }
    dend_18 { pt3dadd( -14.1999, 16.0162, -3.72684, 1.77 ) }
    dend_18 { pt3dadd( -14.4196, 16.5222, -3.82977, 1.62 ) }
    dend_18 { pt3dadd( -14.8488, 17.4843, -3.99209, 1.62 ) }
    dend_18 { pt3dadd( -15.3107, 18.5222, -4.14845, 1.62 ) }
    dend_18 { pt3dadd( -15.337, 18.5816, -4.15637, 1.62 ) }
    dend_18 { pt3dadd( -15.6421, 19.2614, -4.23942, 1.4 ) }
    dend_18 { pt3dadd( -15.8099, 19.6366, -4.2668, 1.33 ) }
    dend_18 { pt3dadd( -15.8637, 19.7552, -4.27839, 1.33 ) }
    dend_18 { pt3dadd( -16.4852, 21.1087, -4.42854, 1.33 ) }
    dend_18 { pt3dadd( -16.5131, 21.1675, -4.43528, 1.33 ) }
    dend_18 { pt3dadd( -16.7643, 21.6831, -4.49227, 1.18 ) }
    dend_18 { pt3dadd( -18.5032, 25.1129, -4.89654, 1.18 ) }
    dend_18 { pt3dadd( -18.8868, 25.8645, -4.99138, 1.18 ) }
    dend_18 { pt3dadd( -18.9581, 26.001, -5.00956, 1.18 ) }
    dend_18 { pt3dadd( -19.3058, 26.6488, -5.10052, 1.18 ) }
    dend_18 { pt3dadd( -19.6041, 27.2078, -5.17707, 1.18 ) }
    dend_18 { pt3dadd( -20.0239, 28.005, -5.28016, 1.4 ) }
    dend_18 { pt3dadd( -20.3766, 28.6727, -5.387, 1.69 ) }
    dend_18 { pt3dadd( -20.4366, 28.7987, -5.40134, 1.69 ) }
    dend_18 { pt3dadd( -20.6092, 29.1852, -5.44405, 1.69 ) }
    dend_18 { pt3dadd( -20.6626, 29.3141, -5.45552, 1.69 ) }
    dend_18 { pt3dadd( -20.8493, 29.7995, -5.48243, 1.69 ) }
    dend_18 { pt3dadd( -20.8753, 29.8693, -5.48433, 1.69 ) }
    dend_18 { pt3dadd( -21.2509, 30.8737, -5.50925, 1.69 ) }
    dend_18 { pt3dadd( -21.4224, 31.347, -5.5191, 1.03 ) }
    dend_18 { pt3dadd( -21.9357, 32.8201, -5.54375, 1.03 ) }
    dend_18 { pt3dadd( -22.2777, 33.8009, -5.55547, 1.03 ) }
    dend_18 { pt3dadd( -22.3936, 34.1319, -5.55755, 1.33 ) }
    dend_18 { pt3dadd( -22.4619, 34.3251, -5.55816, 1.33 ) }
    dend_18 { pt3dadd( -22.7124, 35.0404, -5.55705, 1.33 ) }
    dend_18 { pt3dadd( -22.8902, 35.576, -5.5528, 1.47 ) }
    dend_18 { pt3dadd( -23.1314, 36.3365, -5.54927, 1.47 ) }
    dend_18 { pt3dadd( -23.2985, 36.9158, -5.54927, 1.47 ) }
    dend_18 { pt3dadd( -23.3983, 37.2733, -5.54927, 1.47 ) }
    dend_18 { pt3dadd( -23.4328, 37.3987, -5.54927, 1.47 ) }
    dend_18 { pt3dadd( -23.7032, 38.3944, -5.54927, 1.25 ) }
    dend_18 { pt3dadd( -23.7775, 38.6535, -5.55663, 1.25 ) }
    dend_18 { pt3dadd( -24.0994, 39.7691, -5.60784, 1.25 ) }
    dend_18 { pt3dadd( -24.2743, 40.3228, -5.61852, 1.25 ) }
    dend_18 { pt3dadd( -24.354, 40.5576, -5.61885, 1.25 ) }
    dend_18 { pt3dadd( -24.7732, 41.622, -5.60242, 1.25 ) }
    dend_18 { pt3dadd( -25.4138, 43.072, -5.56029, 1.25 ) }
    dend_18 { pt3dadd( -25.4422, 43.131, -5.55795, 1.25 ) }
    dend_18 { pt3dadd( -25.9682, 44.1728, -5.50354, 1.25 ) }
    dend_18 { pt3dadd( -26.0326, 44.2975, -5.49893, 1.25 ) }
    dend_18 { pt3dadd( -26.7931, 45.7452, -5.45581, 1.25 ) }
    dend_18 { pt3dadd( -26.829, 45.811, -5.45427, 1.25 ) }
    dend_18 { pt3dadd( -27.313, 46.6974, -5.43898, 1.55 ) }
    dend_18 { pt3dadd( -27.7802, 47.56, -5.4417, 1.55 ) }
    dend_18 { pt3dadd( -29.1067, 50.0334, -5.51524, 1.55 ) }
    dend_18 { pt3dadd( -29.1374, 50.0912, -5.51704, 1.55 ) }
    dend_18 { pt3dadd( -29.7371, 51.2394, -5.55456, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -30.0664, 51.8723, -5.57471, 1.62 ) }
    dend_18 { pt3dadd( -30.1321, 51.9964, -5.57613, 1.62 ) }
    dend_18 { pt3dadd( -30.4248, 52.5335, -5.56732, 1.62 ) }
    dend_18 { pt3dadd( -30.4592, 52.5997, -5.562, 1.62 ) }
    dend_18 { pt3dadd( -30.6775, 53.0317, -5.52554, 1.62 ) }
    dend_18 { pt3dadd( -30.9405, 53.5354, -5.48172, 1.33 ) }
    dend_18 { pt3dadd( -31.3702, 54.3268, -5.42113, 1.25 ) }
    dend_18 { pt3dadd( -31.4016, 54.3843, -5.41676, 1.25 ) }
    dend_18 { pt3dadd( -31.6801, 54.893, -5.37863, 1.11 ) }
    dend_18 { pt3dadd( -32.6418, 56.6474, -5.25589, 1.11 ) }
    dend_18 { pt3dadd( -33.0121, 57.3271, -5.21479, 1.92 ) }
    dend_18 { pt3dadd( -33.5291, 58.2709, -5.1765, 2.5 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 12/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.96716, 2.2214, -0.292184, 1.69 ) }
    dend_15 { pt3dadd( 7.96716, 2.2214, -0.292184, 1.69 ) }
    dend_15 { pt3dadd( 8.46642, 2.31853, -0.292184, 1.69 ) }
    dend_15 { pt3dadd( 9.0493, 2.43113, -0.292184, 1.62 ) }
    dend_15 { pt3dadd( 10.0267, 2.61803, -0.292184, 1.62 ) }
    dend_15 { pt3dadd( 10.7659, 2.75155, -0.292184, 1.62 ) }
    dend_15 { pt3dadd( 11.2973, 2.83878, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 11.3799, 2.84991, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 11.925, 2.89804, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 12.0028, 2.90104, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 12.4546, 2.89112, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 12.6933, 2.87597, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 13.0421, 2.84749, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 13.7785, 2.7849, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 13.8614, 2.77652, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 14.6363, 2.69937, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 14.7137, 2.69181, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 15.3297, 2.63691, -0.292184, 1.33 ) }
    dend_15 { pt3dadd( 16.0227, 2.57647, -0.292184, 1.18 ) }
    dend_15 { pt3dadd( 16.5351, 2.52781, -0.286964, 1.4 ) }
    dend_15 { pt3dadd( 17.1125, 2.4786, -0.276536, 1.4 ) }
    dend_15 { pt3dadd( 17.6894, 2.44919, -0.26237, 1.25 ) }
    dend_15 { pt3dadd( 18.3448, 2.43503, -0.243352, 1.25 ) }
    dend_15 { pt3dadd( 18.4225, 2.43677, -0.23957, 1.25 ) }
    dend_15 { pt3dadd( 19.0149, 2.47642, -0.20064, 1.03 ) }
    dend_15 { pt3dadd( 19.6001, 2.53989, -0.15417, 1.03 ) }
    dend_15 { pt3dadd( 20.4125, 2.66324, -0.0582184, 1.03 ) }
    dend_15 { pt3dadd( 20.4557, 2.67109, -0.0516997, 1.03 ) }
    dend_15 { pt3dadd( 20.9229, 2.76635, 0.031775, 1.33 ) }
    dend_15 { pt3dadd( 21.4711, 2.88705, 0.137319, 1.62 ) }
    dend_15 { pt3dadd( 21.5133, 2.89737, 0.14624, 1.62 ) }
    dend_15 { pt3dadd( 22.0793, 3.0301, 0.293449, 1.99 ) }
    dend_15 { pt3dadd( 22.2466, 3.06395, 0.346191, 2.43 ) }
    dend_15 { pt3dadd( 22.283, 3.07088, 0.3577, 2.43 ) }
    dend_15 { pt3dadd( 22.6111, 3.13116, 0.461943, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 47/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.237159, 12.2534, -1.85219, 4.13 ) }
    dend_0 { pt3dadd( 0.237159, 12.2534, -1.85219, 4.13 ) }
    dend_0 { pt3dadd( 0.294811, 12.7116, -1.88987, 4.13 ) }
    dend_0 { pt3dadd( 0.482338, 14.1652, -2.03112, 3.32 ) }
    dend_0 { pt3dadd( 0.629133, 15.2606, -2.12029, 2.95 ) }
    dend_0 { pt3dadd( 0.833288, 16.8211, -2.22672, 2.28 ) }
    dend_0 { pt3dadd( 0.970142, 17.9321, -2.29068, 2.28 ) }
    dend_0 { pt3dadd( 1.10551, 19.0154, -2.35248, 2.28 ) }
    dend_0 { pt3dadd( 1.24393, 20.096, -2.41311, 2.43 ) }
    dend_0 { pt3dadd( 1.45176, 21.6314, -2.49373, 2.5 ) }
    dend_0 { pt3dadd( 1.63774, 23.0989, -2.55168, 2.5 ) }
    dend_0 { pt3dadd( 1.79774, 24.5779, -2.56154, 2.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.0214497, 13.2277, -1.33988, 1.03551 ) }
    axon_0 { pt3dadd( -0.554051, 28.2167, -1.33988, 1.03551 ) }
    axon_0 { pt3dadd( -1.12955, 43.2056, -1.33988, 1.03551 ) }
    // Section: dend_34, id: dend_34, parent: dend_23 (entry count 62/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.945809, -15.4027, 1.17742, 1.5 ) }
    dend_34 { pt3dadd( 2.71062, -17.1184, 1.41725, 1.5 ) }
    dend_34 { pt3dadd( 3.38254, -17.779, 1.50845, 2.0 ) }
    dend_34 { pt3dadd( 4.77507, -19.1661, 1.6972, 1.77 ) }
    dend_34 { pt3dadd( 5.38932, -19.7898, 1.78029, 1.77 ) }
    dend_34 { pt3dadd( 5.442, -19.844, 1.7874, 1.4 ) }
    dend_34 { pt3dadd( 6.16558, -20.59, 1.8851, 1.77 ) }
    dend_34 { pt3dadd( 7.0085, -21.476, 1.99865, 1.77 ) }
    dend_34 { pt3dadd( 7.68464, -22.1927, 2.08965, 2.14 ) }
    dend_34 { pt3dadd( 7.88091, -22.4072, 2.11597, 2.14 ) }
    dend_34 { pt3dadd( 8.79878, -23.422, 2.23888, 2.36 ) }
    dend_34 { pt3dadd( 9.29537, -23.9732, 2.30535, 2.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.945809, -15.4027, 1.17742, 3.02 ) }
    dend_24 { pt3dadd( 0.658894, -17.4245, 1.35413, 3.02 ) }
    dend_24 { pt3dadd( 0.539912, -18.2629, 1.42742, 3.5 ) }
    dend_24 { pt3dadd( 0.264238, -20.2055, 1.59722, 3.5 ) }
    dend_24 { pt3dadd( -0.111818, -22.8554, 1.82884, 3.9 ) }
    dend_24 { pt3dadd( -0.137263, -23.0347, 1.84451, 4.13 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 80/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -33.5291, 58.2709, -5.1765, 0.88 ) }
    dend_22 { pt3dadd( -33.8351, 58.5448, -5.24641, 0.88 ) }
    dend_22 { pt3dadd( -34.341, 58.9706, -5.35733, 0.88 ) }
    dend_22 { pt3dadd( -35.0629, 59.5099, -5.49581, 0.88 ) }
    dend_22 { pt3dadd( -35.6546, 59.9319, -5.60256, 0.29 ) }
    dend_22 { pt3dadd( -35.7157, 59.974, -5.61203, 0.29 ) }
    dend_22 { pt3dadd( -36.6285, 60.5927, -5.74028, 0.29 ) }
    dend_22 { pt3dadd( -36.7631, 60.6786, -5.75776, 0.29 ) }
    dend_22 { pt3dadd( -37.8071, 61.328, -5.88001, 0.29 ) }
    dend_22 { pt3dadd( -37.8983, 61.3813, -5.88941, 0.29 ) }
    dend_22 { pt3dadd( -39.5782, 62.3956, -6.12213, 0.29 ) }
    dend_22 { pt3dadd( -40.2372, 62.7994, -6.24423, 0.66 ) }
    dend_22 { pt3dadd( -40.4984, 62.9567, -6.30528, 0.96 ) }
    dend_22 { pt3dadd( -40.8888, 63.183, -6.40465, 1.25 ) }
    dend_22 { pt3dadd( -41.3613, 63.4489, -6.53885, 1.25 ) }
    dend_22 { pt3dadd( -42.3129, 63.9624, -6.81699, 0.29 ) }
    dend_22 { pt3dadd( -42.558, 64.0908, -6.89099, 0.29 ) }
    dend_22 { pt3dadd( -43.7417, 64.7212, -7.22567, 0.29 ) }
    dend_22 { pt3dadd( -45.2268, 65.5241, -7.61199, 0.29 ) }
    dend_22 { pt3dadd( -45.5894, 65.721, -7.70747, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( -46.1339, 66.0274, -7.84347, 0.96 ) }
    dend_22 { pt3dadd( -46.6069, 66.2985, -7.94215, 0.96 ) }
    dend_22 { pt3dadd( -47.124, 66.6133, -8.06561, 0.96 ) }
    dend_22 { pt3dadd( -47.1844, 66.6542, -8.08276, 0.96 ) }
    dend_22 { pt3dadd( -47.8937, 67.1852, -8.31322, 0.29 ) }
    dend_22 { pt3dadd( -47.9513, 67.2292, -8.33153, 0.29 ) }
    dend_22 { pt3dadd( -48.8969, 67.9676, -8.59204, 0.29 ) }
    dend_22 { pt3dadd( -48.955, 68.0125, -8.60578, 0.29 ) }
    dend_22 { pt3dadd( -49.3503, 68.3119, -8.68002, 0.29 ) }
    dend_22 { pt3dadd( -49.4184, 68.3626, -8.68938, 0.29 ) }
    dend_22 { pt3dadd( -49.6818, 68.5512, -8.70884, 0.29 ) }
    dend_22 { pt3dadd( -51.0103, 69.4694, -8.80938, 0.29 ) }
    dend_22 { pt3dadd( -51.0726, 69.5107, -8.8131, 0.29 ) }
    dend_22 { pt3dadd( -51.5219, 69.8016, -8.83515, 0.29 ) }
    dend_22 { pt3dadd( -51.6688, 69.8921, -8.84126, 0.29 ) }
    dend_22 { pt3dadd( -52.4097, 70.3262, -8.86423, 0.29 ) }
    dend_22 { pt3dadd( -52.9908, 70.6583, -8.87468, 0.29 ) }
    dend_22 { pt3dadd( -53.3474, 70.8511, -8.82462, 1.11 ) }
    dend_22 { pt3dadd( -53.4914, 70.9314, -8.79312, 1.11 ) }
    dend_22 { pt3dadd( -54.0885, 71.2745, -8.64388, 1.4 ) }
    dend_22 { pt3dadd( -54.1844, 71.3308, -8.61922, 1.4 ) }
    dend_22 { pt3dadd( -54.6103, 71.5782, -8.51357, 1.4 ) }
    dend_22 { pt3dadd( -55.8311, 72.3005, -8.17278, 0.22 ) }
    dend_22 { pt3dadd( -57.9488, 73.5822, -7.55539, 0.22 ) }
    dend_22 { pt3dadd( -58.45, 73.9091, -7.41513, 1.03 ) }
    dend_22 { pt3dadd( -58.8535, 74.1868, -7.30536, 1.47 ) }
    dend_22 { pt3dadd( -59.3778, 74.5523, -7.17144, 1.47 ) }
    dend_22 { pt3dadd( -60.6004, 75.4172, -6.89373, 0.22 ) }
    dend_22 { pt3dadd( -60.6596, 75.4617, -6.88478, 0.22 ) }
    dend_22 { pt3dadd( -62.1241, 76.6723, -6.5014, 0.22 ) }
    dend_22 { pt3dadd( -62.1791, 76.7196, -6.48512, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -33.5291, 58.2709, -5.1765, 2.06 ) }
    dend_19 { pt3dadd( -33.6263, 58.6854, -5.24007, 2.06 ) }
    dend_19 { pt3dadd( -33.6414, 58.7586, -5.24948, 2.06 ) }
    dend_19 { pt3dadd( -33.7387, 59.2671, -5.30862, 1.55 ) }
    dend_19 { pt3dadd( -33.8443, 59.7158, -5.34403, 0.88 ) }
    dend_19 { pt3dadd( -33.9641, 60.1733, -5.37316, 0.74 ) }
    dend_19 { pt3dadd( -33.9808, 60.2347, -5.37657, 0.74 ) }
    dend_19 { pt3dadd( -34.1052, 60.649, -5.3933, 0.74 ) }
    dend_19 { pt3dadd( -34.1268, 60.7139, -5.39481, 0.74 ) }
    dend_19 { pt3dadd( -34.6138, 61.9909, -5.39486, 0.74 ) }
    dend_19 { pt3dadd( -34.7155, 62.2347, -5.39487, 1.11 ) }
    dend_19 { pt3dadd( -34.7722, 62.3547, -5.39842, 1.11 ) }
    dend_19 { pt3dadd( -35.0057, 62.8042, -5.42368, 1.11 ) }
    dend_19 { pt3dadd( -35.0808, 62.9314, -5.43409, 1.11 ) }
    dend_19 { pt3dadd( -35.353, 63.3595, -5.47766, 1.11 ) }
    dend_19 { pt3dadd( -35.3713, 63.3859, -5.48118, 1.11 ) }
    dend_19 { pt3dadd( -35.6751, 63.8321, -5.5359, 1.55 ) }
    dend_19 { pt3dadd( -35.9761, 64.2833, -5.58743, 1.55 ) }
    dend_19 { pt3dadd( -36.2111, 64.6718, -5.62527, 1.11 ) }
    dend_19 { pt3dadd( -36.4399, 65.1092, -5.65561, 0.96 ) }
    dend_19 { pt3dadd( -36.4531, 65.1384, -5.65686, 0.96 ) }
    dend_19 { pt3dadd( -36.7939, 65.9841, -5.67311, 0.96 ) }
    dend_19 { pt3dadd( -36.8271, 66.0788, -5.67254, 0.96 ) }
    dend_19 { pt3dadd( -37.0267, 66.7213, -5.66814, 0.96 ) }
    dend_19 { pt3dadd( -37.2918, 67.6781, -5.66113, 0.96 ) }
    dend_19 { pt3dadd( -37.4014, 68.1027, -5.65803, 1.18 ) }
    dend_19 { pt3dadd( -37.5228, 68.5754, -5.64301, 1.62 ) }
    dend_19 { pt3dadd( -37.6436, 69.0662, -5.61713, 1.62 ) }
    dend_19 { pt3dadd( -37.653, 69.1013, -5.6147, 1.62 ) }
    dend_19 { pt3dadd( -37.814, 69.6566, -5.5667, 1.62 ) }
    dend_19 { pt3dadd( -38.0211, 70.3402, -5.49836, 1.62 ) }
    dend_19 { pt3dadd( -38.2157, 70.971, -5.43659, 1.62 ) }
    dend_19 { pt3dadd( -38.2264, 71.0056, -5.43229, 1.62 ) }
    dend_19 { pt3dadd( -38.3972, 71.5566, -5.35474, 1.62 ) }
    dend_19 { pt3dadd( -38.5356, 71.9853, -5.2943, 1.25 ) }
    dend_19 { pt3dadd( -38.6434, 72.2995, -5.25383, 1.03 ) }
    dend_19 { pt3dadd( -38.8947, 72.9698, -5.18857, 1.03 ) }
    dend_19 { pt3dadd( -39.1908, 73.7335, -5.13516, 0.88 ) }
    dend_19 { pt3dadd( -39.2042, 73.7675, -5.133, 0.88 ) }
    dend_19 { pt3dadd( -39.5353, 74.5977, -5.0879, 0.74 ) }
    dend_19 { pt3dadd( -39.9296, 75.6019, -5.04507, 0.74 ) }
    dend_19 { pt3dadd( -40.5011, 77.0815, -4.9796, 0.74 ) }
    dend_19 { pt3dadd( -40.7214, 77.6723, -4.95977, 0.59 ) }
    dend_19 { pt3dadd( -40.7674, 77.8012, -4.95731, 0.59 ) }
    dend_19 { pt3dadd( -41.1342, 78.9007, -4.93254, 0.59 ) }
    dend_19 { pt3dadd( -41.4257, 79.8689, -4.89365, 0.59 ) }
    dend_19 { pt3dadd( -41.5118, 80.2022, -4.87341, 1.92 ) }
    dend_19 { pt3dadd( -41.6464, 80.8781, -4.8186, 2.65 ) }
    dend_19 { pt3dadd( -41.652, 80.9093, -4.81572, 2.65 ) }
    dend_19 { pt3dadd( -41.7094, 81.2736, -4.7797, 2.65 ) }
    dend_19 { pt3dadd( -41.7593, 81.6871, -4.73417, 0.66 ) }
    dend_19 { pt3dadd( -41.8035, 82.1152, -4.69004, 0.66 ) }
    dend_19 { pt3dadd( -41.8727, 82.9746, -4.62017, 0.66 ) }
    dend_19 { pt3dadd( -41.8747, 83.0108, -4.61693, 0.66 ) }
    dend_19 { pt3dadd( -41.8897, 83.4044, -4.58953, 0.88 ) }
    dend_19 { pt3dadd( -41.8908, 83.4724, -4.58667, 0.88 ) }
    dend_19 { pt3dadd( -41.8881, 83.8712, -4.56617, 0.88 ) }
    dend_19 { pt3dadd( -41.8945, 84.2966, -4.52575, 1.33 ) }
    dend_19 { pt3dadd( -41.8981, 84.3956, -4.51329, 1.33 ) }
    dend_19 { pt3dadd( -41.9328, 84.8895, -4.44622, 1.33 ) }
    dend_19 { pt3dadd( -41.9355, 84.9164, -4.44227, 1.33 ) }
    dend_19 { pt3dadd( -42.0221, 85.4967, -4.35549, 0.52 ) }
    dend_19 { pt3dadd( -42.1606, 86.1957, -4.24723, 0.52 ) }
    dend_19 { pt3dadd( -42.2523, 86.5511, -4.19519, 0.52 ) }
    dend_19 { pt3dadd( -42.3107, 86.7281, -4.17915, 1.03 ) }
    dend_19 { pt3dadd( -42.3366, 86.7915, -4.17814, 1.03 ) }
    dend_19 { pt3dadd( -42.4828, 87.1234, -4.19019, 1.03 ) }
    dend_19 { pt3dadd( -42.4966, 87.1522, -4.19299, 1.03 ) }
    dend_19 { pt3dadd( -42.6886, 87.5433, -4.23163, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( -42.921, 88.0269, -4.27394, 0.29 ) }
    dend_19 { pt3dadd( -43.2914, 88.8182, -4.33762, 0.29 ) }
    dend_19 { pt3dadd( -43.4325, 89.1335, -4.35998, 1.03 ) }
    dend_19 { pt3dadd( -43.5751, 89.4626, -4.37956, 1.18 ) }
    dend_19 { pt3dadd( -43.7615, 89.903, -4.40076, 1.18 ) }
    dend_19 { pt3dadd( -43.9797, 90.4306, -4.41745, 1.33 ) }
    dend_19 { pt3dadd( -44.1755, 90.9236, -4.42134, 1.69 ) }
    dend_19 { pt3dadd( -44.3651, 91.3891, -4.42852, 2.43 ) }
    dend_19 { pt3dadd( -44.5833, 91.9161, -4.44187, 2.95 ) }
    dend_19 { pt3dadd( -44.5971, 91.9499, -4.4428, 2.95 ) }
    dend_19 { pt3dadd( -44.7926, 92.4349, -4.4568, 3.32 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 22.6111, 3.13116, 0.461943, 0.81 ) }
    dend_17 { pt3dadd( 23.5988, 2.47203, 1.66974, 0.81 ) }
    dend_17 { pt3dadd( 24.5952, 1.79231, 2.7934, 0.52 ) }
    dend_17 { pt3dadd( 24.6371, 1.76526, 2.83828, 0.52 ) }
    dend_17 { pt3dadd( 25.4604, 1.24376, 3.69836, 0.66 ) }
    dend_17 { pt3dadd( 26.0588, 0.87994, 4.27586, 0.66 ) }
    dend_17 { pt3dadd( 26.248, 0.769293, 4.44725, 0.66 ) }
    dend_17 { pt3dadd( 26.5312, 0.616289, 4.64876, 0.66 ) }
    dend_17 { pt3dadd( 27.5925, 0.0849268, 5.24462, 0.44 ) }
    dend_17 { pt3dadd( 27.6484, 0.0595788, 5.27226, 0.44 ) }
    dend_17 { pt3dadd( 28.3822, -0.22536, 5.54383, 0.44 ) }
    dend_17 { pt3dadd( 28.5678, -0.283519, 5.62945, 0.74 ) }
    dend_17 { pt3dadd( 28.6946, -0.318131, 5.69065, 0.74 ) }
    dend_17 { pt3dadd( 29.3349, -0.483736, 5.99629, 0.74 ) }
    dend_17 { pt3dadd( 29.4774, -0.518466, 6.06077, 0.74 ) }
    dend_17 { pt3dadd( 30.2186, -0.6584, 6.41684, 0.74 ) }
    dend_17 { pt3dadd( 31.546, -0.83624, 7.11597, 0.88 ) }
    dend_17 { pt3dadd( 32.126, -0.87177, 7.42282, 0.88 ) }
    dend_17 { pt3dadd( 32.5794, -0.866, 7.66421, 0.37 ) }
    dend_17 { pt3dadd( 32.639, -0.86032, 7.69655, 0.37 ) }
    dend_17 { pt3dadd( 33.2168, -0.76805, 7.95823, 0.37 ) }
    dend_17 { pt3dadd( 33.3134, -0.74633, 7.98715, 0.37 ) }
    dend_17 { pt3dadd( 33.8616, -0.65537, 8.03611, 0.37 ) }
    dend_17 { pt3dadd( 34.3068, -0.613282, 8.0806, 0.96 ) }
    dend_17 { pt3dadd( 34.5705, -0.608783, 8.10787, 0.96 ) }
    dend_17 { pt3dadd( 35.2876, -0.65107, 8.18071, 0.96 ) }
    dend_17 { pt3dadd( 35.7762, -0.71364, 8.23036, 1.25 ) }
    dend_17 { pt3dadd( 36.0373, -0.74932, 8.26976, 1.25 ) }
    dend_17 { pt3dadd( 36.5146, -0.82283, 8.39641, 1.25 ) }
    dend_17 { pt3dadd( 36.714, -0.85872, 8.46306, 1.25 ) }
    dend_17 { pt3dadd( 37.1087, -0.94, 8.6174, 1.25 ) }
    dend_17 { pt3dadd( 37.1777, -0.95747, 8.64797, 1.25 ) }
    dend_17 { pt3dadd( 37.862, -1.17942, 9.06888, 1.25 ) }
    dend_17 { pt3dadd( 38.7915, -1.47713, 9.84118, 0.74 ) }
    dend_17 { pt3dadd( 39.2551, -1.62591, 10.2937, 0.74 ) }
    dend_17 { pt3dadd( 39.4368, -1.67201, 10.5163, 0.74 ) }
    dend_17 { pt3dadd( 39.7283, -1.7131, 10.8916, 0.74 ) }
    dend_17 { pt3dadd( 40.8651, -1.77562, 12.3554, 0.74 ) }
    dend_17 { pt3dadd( 41.7309, -1.75725, 13.5183, 0.66 ) }
    dend_17 { pt3dadd( 41.7782, -1.75458, 13.5798, 0.66 ) }
    dend_17 { pt3dadd( 43.002, -1.65561, 15.1109, 0.96 ) }
    dend_17 { pt3dadd( 43.8259, -1.60913, 16.0361, 0.96 ) }
    dend_17 { pt3dadd( 44.8088, -1.58869, 16.9593, 0.52 ) }
    dend_17 { pt3dadd( 45.6116, -1.61101, 17.5327, 1.11 ) }
    dend_17 { pt3dadd( 46.6716, -1.72908, 18.124, 1.25 ) }
    dend_17 { pt3dadd( 46.7327, -1.74015, 18.1512, 1.25 ) }
    dend_17 { pt3dadd( 47.8631, -2.05486, 18.4653, 1.25 ) }
    dend_17 { pt3dadd( 48.758, -2.35089, 18.7004, 0.96 ) }
    dend_17 { pt3dadd( 49.0474, -2.44726, 18.7613, 0.96 ) }
    dend_17 { pt3dadd( 49.4097, -2.5615, 18.8287, 1.25 ) }
    dend_17 { pt3dadd( 50.1127, -2.76517, 18.976, 1.25 ) }
    dend_17 { pt3dadd( 51.5033, -3.12088, 19.278, 1.25 ) }
    dend_17 { pt3dadd( 52.5898, -3.34158, 19.5183, 0.96 ) }
    dend_17 { pt3dadd( 52.796, -3.37423, 19.5623, 0.96 ) }
    dend_17 { pt3dadd( 53.565, -3.46833, 19.7166, 0.96 ) }
    dend_17 { pt3dadd( 53.6317, -3.47377, 19.7287, 0.96 ) }
    dend_17 { pt3dadd( 54.5665, -3.50309, 19.8559, 0.96 ) }
    dend_17 { pt3dadd( 55.3537, -3.4892, 19.9203, 1.25 ) }
    dend_17 { pt3dadd( 55.713, -3.48217, 19.9275, 1.47 ) }
    dend_17 { pt3dadd( 55.781, -3.48069, 19.928, 1.47 ) }
    dend_17 { pt3dadd( 56.2078, -3.47321, 19.9047, 1.47 ) }
    dend_17 { pt3dadd( 57.4964, -3.45019, 19.7892, 0.88 ) }
    dend_17 { pt3dadd( 57.5543, -3.44933, 19.7827, 0.88 ) }
    dend_17 { pt3dadd( 58.4726, -3.44685, 19.6198, 0.66 ) }
    dend_17 { pt3dadd( 59.9565, -3.46799, 19.3174, 0.66 ) }
    dend_17 { pt3dadd( 61.177, -3.50127, 19.0604, 1.03 ) }
    dend_17 { pt3dadd( 61.8218, -3.52259, 18.9335, 1.25 ) }
    dend_17 { pt3dadd( 62.7392, -3.57057, 18.772, 1.47 ) }
    dend_17 { pt3dadd( 64.199, -3.67009, 18.5474, 0.81 ) }
    dend_17 { pt3dadd( 65.6999, -3.80749, 18.4403, 0.74 ) }
    dend_17 { pt3dadd( 66.8379, -3.94617, 18.493, 0.74 ) }
    dend_17 { pt3dadd( 67.6305, -4.06367, 18.6189, 1.11 ) }
    dend_17 { pt3dadd( 68.7344, -4.25228, 18.8752, 1.11 ) }
    dend_17 { pt3dadd( 68.8073, -4.26572, 18.8978, 1.11 ) }
    dend_17 { pt3dadd( 70.6442, -4.61361, 19.7195, 1.11 ) }
    dend_17 { pt3dadd( 71.4236, -4.77798, 20.1264, 1.33 ) }
    dend_17 { pt3dadd( 72.1314, -4.94267, 20.5329, 1.47 ) }
    dend_17 { pt3dadd( 73.035, -5.16593, 21.0692, 1.62 ) }
    dend_17 { pt3dadd( 73.0908, -5.17933, 21.1051, 1.62 ) }
    dend_17 { pt3dadd( 74.3078, -5.47136, 21.9002, 1.62 ) }
    dend_17 { pt3dadd( 75.1603, -5.67745, 22.4394, 0.96 ) }
    dend_17 { pt3dadd( 76.2774, -5.93308, 23.1086, 0.59 ) }
    dend_17 { pt3dadd( 76.3343, -5.94579, 23.1431, 0.59 ) }
    dend_17 { pt3dadd( 77.2211, -6.12728, 23.7158, 0.88 ) }
    dend_17 { pt3dadd( 77.4016, -6.15787, 23.8251, 1.25 ) }
    dend_17 { pt3dadd( 78.1228, -6.24712, 24.1921, 1.25 ) }
    dend_17 { pt3dadd( 78.8276, -6.25043, 24.571, 1.25 ) }
    dend_17 { pt3dadd( 78.8959, -6.24245, 24.6072, 1.25 ) }
    dend_17 { pt3dadd( 80.0633, -6.0162, 25.2298, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( 80.6124, -5.84989, 25.5214, 1.33 ) }
    dend_17 { pt3dadd( 81.2961, -5.5617, 25.9455, 0.59 ) }
    dend_17 { pt3dadd( 82.3827, -5.00836, 26.6387, 0.59 ) }
    dend_17 { pt3dadd( 82.8811, -4.74421, 26.9381, 0.44 ) }
    dend_17 { pt3dadd( 82.9441, -4.71305, 26.9702, 0.44 ) }
    dend_17 { pt3dadd( 83.3831, -4.53329, 27.1034, 0.44 ) }
    dend_17 { pt3dadd( 84.5662, -4.14891, 27.3603, 0.44 ) }
    dend_17 { pt3dadd( 85.5088, -3.9857, 27.4336, 1.25 ) }
    dend_17 { pt3dadd( 86.1795, -3.9786, 27.3505, 1.62 ) }
    dend_17 { pt3dadd( 86.5313, -3.99161, 27.2508, 1.62 ) }
    dend_17 { pt3dadd( 87.5908, -4.02492, 26.8851, 0.96 ) }
    dend_17 { pt3dadd( 87.664, -4.02551, 26.8591, 0.96 ) }
    dend_17 { pt3dadd( 88.5263, -4.01092, 26.531, 0.96 ) }
    dend_17 { pt3dadd( 89.7523, -3.94877, 26.1099, 0.96 ) }
    dend_17 { pt3dadd( 91.2286, -3.86279, 25.627, 0.52 ) }
    dend_17 { pt3dadd( 92.4133, -3.78971, 25.2617, 0.52 ) }
    dend_17 { pt3dadd( 93.9635, -3.69424, 24.8322, 0.52 ) }
    dend_17 { pt3dadd( 94.0294, -3.68884, 24.8166, 0.52 ) }
    dend_17 { pt3dadd( 94.804, -3.59501, 24.7207, 0.52 ) }
    dend_17 { pt3dadd( 95.4722, -3.48613, 24.7455, 0.52 ) }
    dend_17 { pt3dadd( 95.5785, -3.46751, 24.7658, 0.52 ) }
    dend_17 { pt3dadd( 96.1221, -3.36464, 24.9135, 0.29 ) }
    dend_17 { pt3dadd( 97.1292, -3.16716, 25.251, 0.29 ) }
    dend_17 { pt3dadd( 98.3902, -2.91281, 25.6962, 1.11 ) }
    dend_17 { pt3dadd( 98.4402, -2.89719, 25.7394, 1.11 ) }
    dend_17 { pt3dadd( 98.989, -2.71245, 26.4033, 1.11 ) }
    dend_17 { pt3dadd( 99.0298, -2.70108, 26.4565, 1.11 ) }
    dend_17 { pt3dadd( 99.4009, -2.61188, 26.9838, 1.11 ) }
    dend_17 { pt3dadd( 99.4368, -2.60431, 27.0411, 1.11 ) }
    dend_17 { pt3dadd( 101.44, -2.19139, 30.3941, 0.66 ) }
    dend_17 { pt3dadd( 101.744, -2.11862, 30.9511, 0.22 ) }
    dend_17 { pt3dadd( 102.173, -1.98979, 31.858, 0.22 ) }
    dend_17 { pt3dadd( 102.204, -1.98004, 31.9285, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 33/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 22.6111, 3.13116, 0.461943, 0.66 ) }
    dend_16 { pt3dadd( 23.7168, 3.33616, 0.459829, 0.66 ) }
    dend_16 { pt3dadd( 25.0958, 3.56819, 0.457908, 0.66 ) }
    dend_16 { pt3dadd( 25.2063, 3.58316, 0.446993, 0.66 ) }
    dend_16 { pt3dadd( 25.968, 3.6764, 0.344408, 1.03 ) }
    dend_16 { pt3dadd( 26.1932, 3.702, 0.295125, 1.03 ) }
    dend_16 { pt3dadd( 26.9486, 3.77174, 0.093973, 1.03 ) }
    dend_16 { pt3dadd( 27.1199, 3.77445, 0.0409277, 1.03 ) }
    dend_16 { pt3dadd( 28.9364, 3.74085, -0.569587, 0.81 ) }
    dend_16 { pt3dadd( 29.0064, 3.73767, -0.593047, 0.81 ) }
    dend_16 { pt3dadd( 30.7672, 3.6254, -1.19453, 0.66 ) }
    dend_16 { pt3dadd( 32.3649, 3.51179, -1.72803, 0.44 ) }
    dend_16 { pt3dadd( 33.3994, 3.42816, -2.06284, 0.44 ) }
    dend_16 { pt3dadd( 33.5511, 3.41525, -2.10588, 0.44 ) }
    dend_16 { pt3dadd( 34.1067, 3.36468, -2.22639, 0.44 ) }
    dend_16 { pt3dadd( 34.1897, 3.35829, -2.24058, 0.44 ) }
    dend_16 { pt3dadd( 34.7451, 3.32575, -2.28233, 0.66 ) }
    dend_16 { pt3dadd( 34.9768, 3.32742, -2.29434, 0.66 ) }
    dend_16 { pt3dadd( 35.8601, 3.36327, -2.34553, 0.66 ) }
    dend_16 { pt3dadd( 36.0392, 3.36685, -2.3554, 0.66 ) }
    dend_16 { pt3dadd( 37.0963, 3.35586, -2.40899, 0.66 ) }
    dend_16 { pt3dadd( 37.9523, 3.31801, -2.44609, 1.4 ) }
    dend_16 { pt3dadd( 38.6498, 3.26345, -2.4711, 1.99 ) }
    dend_16 { pt3dadd( 39.1373, 3.21476, -2.4853, 2.28 ) }
    dend_16 { pt3dadd( 39.9887, 3.1159, -2.50127, 1.92 ) }
    dend_16 { pt3dadd( 40.7286, 3.04536, -2.47959, 1.62 ) }
    dend_16 { pt3dadd( 41.5822, 2.98771, -2.41961, 0.96 ) }
    dend_16 { pt3dadd( 42.3638, 2.93532, -2.35427, 0.59 ) }
    dend_16 { pt3dadd( 42.4476, 2.93009, -2.34656, 0.59 ) }
    dend_16 { pt3dadd( 43.8317, 2.8487, -2.21782, 0.52 ) }
    dend_16 { pt3dadd( 45.1848, 2.77841, -2.08812, 0.52 ) }
    dend_16 { pt3dadd( 46.4226, 2.72521, -1.96759, 0.52 ) }
    dend_16 { pt3dadd( 48.2548, 2.65137, -1.78953, 0.52 ) }
    dend_16 { pt3dadd( 48.3388, 2.6481, -1.78161, 0.52 ) }
    dend_16 { pt3dadd( 49.7548, 2.59447, -1.66122, 0.52 ) }
    dend_16 { pt3dadd( 50.9221, 2.54788, -1.582, 0.52 ) }
    dend_16 { pt3dadd( 50.9959, 2.54618, -1.57981, 0.52 ) }
    dend_16 { pt3dadd( 51.2278, 2.55376, -1.57285, 0.96 ) }
    dend_16 { pt3dadd( 51.3114, 2.56412, -1.57486, 0.96 ) }
    dend_16 { pt3dadd( 52.0842, 2.69143, -1.63003, 1.4 ) }
    dend_16 { pt3dadd( 52.608, 2.83337, -1.69504, 1.69 ) }
    dend_16 { pt3dadd( 53.2369, 3.02508, -1.78964, 1.55 ) }
    dend_16 { pt3dadd( 53.8272, 3.20703, -1.88657, 1.18 ) }
    dend_16 { pt3dadd( 54.698, 3.48871, -2.03989, 0.29 ) }
    dend_16 { pt3dadd( 54.7666, 3.51167, -2.05269, 0.29 ) }
    dend_16 { pt3dadd( 56.5696, 4.14368, -2.39276, 0.29 ) }
    dend_16 { pt3dadd( 56.7155, 4.19594, -2.41933, 0.29 ) }
    dend_16 { pt3dadd( 57.0572, 4.31033, -2.46926, 0.66 ) }
    dend_16 { pt3dadd( 57.2678, 4.37927, -2.49089, 0.66 ) }
    dend_16 { pt3dadd( 57.338, 4.40095, -2.49422, 0.66 ) }
    dend_16 { pt3dadd( 58.3722, 4.70067, -2.52472, 0.37 ) }
    dend_16 { pt3dadd( 58.4429, 4.72083, -2.52529, 0.37 ) }
    dend_16 { pt3dadd( 59.7461, 5.10365, -2.51459, 0.37 ) }
    dend_16 { pt3dadd( 60.048, 5.1947, -2.53488, 0.74 ) }
    dend_16 { pt3dadd( 60.1177, 5.21597, -2.5446, 0.74 ) }
    dend_16 { pt3dadd( 60.8161, 5.45228, -2.69456, 0.96 ) }
    dend_16 { pt3dadd( 61.5238, 5.72316, -2.91044, 0.96 ) }
    dend_16 { pt3dadd( 61.6592, 5.78514, -2.95996, 0.96 ) }
    dend_16 { pt3dadd( 62.7024, 6.40632, -3.50773, 0.29 ) }
    dend_16 { pt3dadd( 62.7573, 6.44242, -3.53917, 0.29 ) }
    dend_16 { pt3dadd( 63.4802, 6.96115, -3.98375, 0.29 ) }
    dend_16 { pt3dadd( 63.6004, 7.05668, -4.06051, 0.29 ) }
    dend_16 { pt3dadd( 64.0149, 7.40332, -4.31024, 0.29 ) }
    dend_16 { pt3dadd( 64.8858, 8.16277, -4.75326, 1.84 ) }
    dend_16 { pt3dadd( 65.13, 8.38319, -4.84485, 2.21 ) }
    dend_16 { pt3dadd( 65.3364, 8.58304, -4.94843, 2.58 ) }
    dend_16 { pt3dadd( 65.6766, 8.93608, -5.16366, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( 65.7281, 8.99157, -5.19619, 2.58 ) }
    dend_16 { pt3dadd( 65.9156, 9.23408, -5.33077, 2.58 ) }
    dend_16 { pt3dadd( 65.9512, 9.28737, -5.36287, 2.58 ) }
    dend_16 { pt3dadd( 66.7371, 10.5641, -6.13401, 0.44 ) }
    dend_16 { pt3dadd( 66.7739, 10.6266, -6.17178, 0.44 ) }
    dend_16 { pt3dadd( 67.2769, 11.4857, -6.67575, 0.44 ) }
    dend_16 { pt3dadd( 68.108, 12.8828, -7.50906, 0.44 ) }
    dend_16 { pt3dadd( 68.7382, 13.9106, -8.11944, 0.44 ) }
    dend_16 { pt3dadd( 69.2203, 14.677, -8.55766, 0.44 ) }
    dend_16 { pt3dadd( 69.2562, 14.7315, -8.587, 0.44 ) }
    dend_16 { pt3dadd( 69.7684, 15.4431, -8.96725, 0.44 ) }
    dend_16 { pt3dadd( 70.7646, 16.6141, -9.59326, 1.84 ) }
    dend_16 { pt3dadd( 71.0982, 16.9296, -9.74865, 2.21 ) }
    dend_16 { pt3dadd( 71.4571, 17.2299, -9.87908, 1.84 ) }
    dend_16 { pt3dadd( 71.913, 17.5785, -10.0114, 1.03 ) }
    dend_16 { pt3dadd( 72.4667, 17.9625, -10.116, 0.59 ) }
    dend_16 { pt3dadd( 74.1314, 19.034, -10.3014, 0.37 ) }
    dend_16 { pt3dadd( 74.7423, 19.4079, -10.3263, 0.59 ) }
    dend_16 { pt3dadd( 75.433, 19.8182, -10.3419, 0.59 ) }
    dend_16 { pt3dadd( 76.2718, 20.3064, -10.345, 0.29 ) }
    dend_16 { pt3dadd( 78.1971, 21.4304, -10.2974, 0.29 ) }
    dend_16 { pt3dadd( 78.7063, 21.7285, -10.2522, 0.29 ) }
    dend_16 { pt3dadd( 78.778, 21.7695, -10.2408, 0.29 ) }
    dend_16 { pt3dadd( 79.4629, 22.1675, -10.1211, 1.33 ) }
    dend_16 { pt3dadd( 79.8892, 22.4103, -10.0461, 1.84 ) }
    dend_16 { pt3dadd( 80.7132, 22.8831, -9.90935, 1.84 ) }
    dend_16 { pt3dadd( 81.5559, 23.3848, -9.73234, 0.29 ) }
    dend_16 { pt3dadd( 82.7114, 24.075, -9.48241, 0.29 ) }
    dend_16 { pt3dadd( 82.7816, 24.1185, -9.47215, 0.29 ) }
    dend_16 { pt3dadd( 83.0404, 24.2877, -9.45206, 0.59 ) }
    dend_16 { pt3dadd( 83.1099, 24.3323, -9.46142, 0.59 ) }
    dend_16 { pt3dadd( 83.4107, 24.5366, -9.56454, 0.59 ) }
    dend_16 { pt3dadd( 83.6195, 24.6869, -9.66543, 0.59 ) }
    dend_16 { pt3dadd( 84.5345, 25.3704, -10.1543, 0.22 ) }
    dend_16 { pt3dadd( 84.5887, 25.4103, -10.1817, 0.22 ) }
    dend_16 { pt3dadd( 85.7455, 26.2806, -10.7373, 0.22 ) }
    dend_16 { pt3dadd( 86.638, 26.9486, -11.1404, 0.22 ) }
    dend_16 { pt3dadd( 86.6919, 26.9898, -11.1661, 0.22 ) }
    dend_16 { pt3dadd( 87.0576, 27.2732, -11.3403, 1.03 ) }
    dend_16 { pt3dadd( 87.5228, 27.6419, -11.5238, 1.55 ) }
    dend_16 { pt3dadd( 87.9542, 27.9878, -11.68, 1.55 ) }
    dend_16 { pt3dadd( 88.0086, 28.0321, -11.6977, 1.55 ) }
    dend_16 { pt3dadd( 90.0324, 29.714, -12.4217, 0.29 ) }
    dend_16 { pt3dadd( 90.0855, 29.759, -12.4412, 0.29 ) }
    dend_16 { pt3dadd( 91.8425, 31.2929, -13.0946, 0.29 ) }
    dend_16 { pt3dadd( 92.0924, 31.5134, -13.1883, 0.59 ) }
    dend_16 { pt3dadd( 92.4734, 31.8459, -13.3314, 0.59 ) }
    dend_16 { pt3dadd( 93.9529, 33.1483, -13.8718, 0.22 ) }
    dend_16 { pt3dadd( 94.0752, 33.2601, -13.9126, 0.44 ) }
    dend_16 { pt3dadd( 94.3895, 33.5516, -14.027, 0.44 ) }
    dend_16 { pt3dadd( 94.44, 33.5989, -14.0475, 0.44 ) }
    dend_16 { pt3dadd( 95.7819, 34.8092, -14.6001, 0.22 ) }
    dend_16 { pt3dadd( 95.8358, 34.8543, -14.617, 0.22 ) }
    dend_16 { pt3dadd( 96.3556, 35.2388, -14.702, 1.33 ) }
    dend_16 { pt3dadd( 96.6887, 35.4799, -14.7468, 1.69 ) }
    dend_16 { pt3dadd( 97.3021, 35.9168, -14.8191, 1.69 ) }
    dend_16 { pt3dadd( 98.2556, 36.5927, -14.9173, 0.22 ) }
    dend_16 { pt3dadd( 100.936, 38.4839, -15.1474, 0.22 ) }
    dend_16 { pt3dadd( 105.519, 41.675, -15.5521, 0.22 ) }
    dend_16 { pt3dadd( 106.009, 42.0121, -15.5953, 1.25 ) }
    dend_16 { pt3dadd( 106.15, 42.1101, -15.6073, 1.69 ) }
    dend_16 { pt3dadd( 106.282, 42.2032, -15.6175, 1.69 ) }
    dend_16 { pt3dadd( 106.507, 42.3626, -15.6293, 1.69 ) }
    dend_16 { pt3dadd( 107.026, 42.7322, -15.6685, 1.18 ) }
    dend_16 { pt3dadd( 107.562, 43.17, -15.7409, 0.29 ) }
    dend_16 { pt3dadd( 108.308, 43.7818, -15.8351, 0.29 ) }
    dend_16 { pt3dadd( 108.363, 43.8262, -15.849, 0.29 ) }
    dend_16 { pt3dadd( 109.044, 44.3363, -16.0425, 0.29 ) }
    dend_16 { pt3dadd( 109.1, 44.3792, -16.0592, 0.66 ) }
    dend_16 { pt3dadd( 109.638, 44.7941, -16.2155, 0.66 ) }
    dend_16 { pt3dadd( 109.702, 44.8425, -16.2348, 0.66 ) }
    dend_16 { pt3dadd( 110.878, 45.6832, -16.5994, 0.22 ) }
    dend_16 { pt3dadd( 113.554, 47.494, -17.3884, 0.22 ) }
    dend_16 { pt3dadd( 113.837, 47.6696, -17.4608, 0.74 ) }
    dend_16 { pt3dadd( 114.601, 48.1082, -17.6282, 0.74 ) }
    dend_16 { pt3dadd( 114.665, 48.1418, -17.6397, 0.74 ) }
    dend_16 { pt3dadd( 115.52, 48.5587, -17.7522, 0.37 ) }
    dend_16 { pt3dadd( 116.561, 49.0217, -17.8169, 0.37 ) }
    dend_16 { pt3dadd( 118.296, 49.6894, -17.9123, 0.37 ) }
    dend_16 { pt3dadd( 118.652, 49.8417, -17.9258, 1.47 ) }
    dend_16 { pt3dadd( 119.246, 50.1224, -17.9387, 1.92 ) }
    dend_16 { pt3dadd( 119.732, 50.4071, -17.9414, 1.92 ) }
    dend_16 { pt3dadd( 120.449, 50.8928, -17.9319, 0.37 ) }
    dend_16 { pt3dadd( 120.792, 51.155, -17.9273, 0.22 ) }
    dend_16 { pt3dadd( 122.545, 52.6433, -17.9069, 0.22 ) }
    dend_16 { pt3dadd( 122.627, 52.7161, -17.9062, 0.22 ) }
    dend_16 { pt3dadd( 124.667, 54.6061, -17.8926, 0.22 ) }
    dend_16 { pt3dadd( 124.719, 54.6559, -17.8925, 0.22 ) }
    dend_16 { pt3dadd( 125.141, 55.0698, -17.8951, 0.96 ) }
    dend_16 { pt3dadd( 125.572, 55.4992, -17.9065, 0.96 ) }
    dend_16 { pt3dadd( 125.729, 55.6612, -17.9108, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 91/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.79774, 24.5779, -2.56154, 1.25 ) }
    dend_12 { pt3dadd( 0.64291, 25.5218, -2.26269, 1.25 ) }
    dend_12 { pt3dadd( 0.58457, 25.5735, -2.25392, 1.25 ) }
    dend_12 { pt3dadd( 0.0518653, 26.0656, -2.19424, 1.25 ) }
    dend_12 { pt3dadd( -0.00568254, 26.1188, -2.1956, 1.25 ) }
    dend_12 { pt3dadd( -0.708019, 26.7763, -2.25029, 1.25 ) }
    dend_12 { pt3dadd( -0.783646, 26.8474, -2.2574, 1.25 ) }
    dend_12 { pt3dadd( -1.48367, 27.5393, -2.43076, 1.18 ) }
    dend_12 { pt3dadd( -2.23175, 28.2683, -2.65297, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( -3.14406, 29.1471, -2.93497, 0.96 ) }
    dend_12 { pt3dadd( -3.21174, 29.2132, -2.95634, 0.96 ) }
    dend_12 { pt3dadd( -3.74014, 29.7293, -3.15229, 1.25 ) }
    dend_12 { pt3dadd( -4.66852, 30.6234, -3.56764, 1.69 ) }
    dend_12 { pt3dadd( -5.19281, 31.1246, -3.81181, 2.14 ) }
    dend_12 { pt3dadd( -5.92087, 31.8258, -4.18297, 2.14 ) }
    dend_12 { pt3dadd( -5.96738, 31.871, -4.20566, 2.14 ) }
    dend_12 { pt3dadd( -6.66119, 32.5347, -4.56085, 2.14 ) }
    dend_12 { pt3dadd( -7.6297, 33.4623, -5.13081, 1.69 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.79774, 24.5779, -2.56154, 2.5 ) }
    dend_1 { pt3dadd( 1.79079, 24.6497, -2.54358, 2.5 ) }
    dend_1 { pt3dadd( 1.71449, 25.4847, -2.35687, 2.43 ) }
    dend_1 { pt3dadd( 1.63009, 26.4082, -2.15036, 2.43 ) }
    dend_1 { pt3dadd( 1.55277, 27.2543, -1.96118, 2.5 ) }
    dend_1 { pt3dadd( 1.48722, 27.9715, -1.8008, 2.87 ) }
    dend_1 { pt3dadd( 1.41343, 28.779, -1.62025, 3.09 ) }
    dend_1 { pt3dadd( 1.38816, 29.0676, -1.56072, 3.09 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 17/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.12955, 43.2056, -1.33988, 1.03551 ) }
    axon_1 { pt3dadd( -1.70505, 58.1946, -1.33988, 1.03551 ) }
    axon_1 { pt3dadd( -2.28055, 73.1835, -1.33988, 1.03551 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 9.29537, -23.9732, 2.30535, 1.03 ) }
    dend_36 { pt3dadd( 10.8337, -24.5858, 2.70374, 1.03 ) }
    dend_36 { pt3dadd( 12.2161, -25.1409, 3.11841, 1.03 ) }
    dend_36 { pt3dadd( 14.2636, -25.9694, 3.77257, 1.03 ) }
    dend_36 { pt3dadd( 15.5604, -26.5289, 4.20537, 1.33 ) }
    dend_36 { pt3dadd( 15.8046, -26.6451, 4.2979, 1.33 ) }
    dend_36 { pt3dadd( 16.8999, -27.2092, 4.73899, 1.33 ) }
    dend_36 { pt3dadd( 17.9582, -27.8566, 5.18925, 1.33 ) }
    dend_36 { pt3dadd( 18.0248, -27.9025, 5.21992, 1.33 ) }
    dend_36 { pt3dadd( 19.2521, -28.8616, 5.82623, 1.33 ) }
    dend_36 { pt3dadd( 20.4966, -29.9323, 6.44845, 1.18 ) }
    dend_36 { pt3dadd( 21.2607, -30.6192, 6.80365, 1.18 ) }
    dend_36 { pt3dadd( 22.3136, -31.6142, 7.29976, 1.18 ) }
    dend_36 { pt3dadd( 23.0995, -32.3783, 7.65594, 1.11 ) }
    dend_36 { pt3dadd( 23.2174, -32.4916, 7.70796, 1.11 ) }
    dend_36 { pt3dadd( 23.9789, -33.1992, 8.06732, 1.33 ) }
    dend_36 { pt3dadd( 24.9758, -34.0675, 8.54424, 1.33 ) }
    dend_36 { pt3dadd( 25.9991, -34.9132, 9.07445, 0.66 ) }
    dend_36 { pt3dadd( 26.4163, -35.2299, 9.30041, 0.66 ) }
    dend_36 { pt3dadd( 28.3441, -36.5725, 10.3527, 0.66 ) }
    dend_36 { pt3dadd( 29.3391, -37.2441, 10.9025, 1.33 ) }
    dend_36 { pt3dadd( 29.8374, -37.554, 11.1827, 1.62 ) }
    dend_36 { pt3dadd( 29.9054, -37.5928, 11.2203, 1.62 ) }
    dend_36 { pt3dadd( 30.7833, -38.0325, 11.644, 1.84 ) }
    dend_36 { pt3dadd( 31.3266, -38.2722, 11.9166, 1.99 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 45/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 9.29537, -23.9732, 2.30535, 0.66 ) }
    dend_35 { pt3dadd( 9.63416, -25.1964, 2.24681, 0.66 ) }
    dend_35 { pt3dadd( 9.83704, -25.8375, 2.21126, 0.66 ) }
    dend_35 { pt3dadd( 10.209, -26.8839, 2.157, 0.66 ) }
    dend_35 { pt3dadd( 10.6406, -28.0303, 2.10806, 0.66 ) }
    dend_35 { pt3dadd( 11.013, -28.9983, 2.08017, 0.66 ) }
    dend_35 { pt3dadd( 11.664, -30.7038, 2.05395, 0.66 ) }
    dend_35 { pt3dadd( 11.7483, -30.9139, 2.05136, 0.66 ) }
    dend_35 { pt3dadd( 12.1913, -32.0657, 2.04307, 1.03 ) }
    dend_35 { pt3dadd( 12.6715, -33.377, 2.04129, 1.25 ) }
    dend_35 { pt3dadd( 13.4266, -35.4255, 2.0476, 0.74 ) }
    dend_35 { pt3dadd( 14.2132, -37.7104, 2.07006, 0.74 ) }
    dend_35 { pt3dadd( 14.5467, -38.7223, 2.09163, 1.11 ) }
    dend_35 { pt3dadd( 15.0128, -40.0745, 2.13454, 1.11 ) }
    dend_35 { pt3dadd( 15.0639, -40.2146, 2.13998, 1.11 ) }
    dend_35 { pt3dadd( 15.5216, -41.4143, 2.19397, 0.66 ) }
    dend_35 { pt3dadd( 16.217, -43.1796, 2.28726, 0.52 ) }
    dend_35 { pt3dadd( 17.5317, -46.42, 2.48127, 0.52 ) }
    dend_35 { pt3dadd( 19.0104, -49.972, 2.68965, 0.52 ) }
    dend_35 { pt3dadd( 19.3432, -50.7724, 2.73031, 0.88 ) }
    dend_35 { pt3dadd( 19.8944, -52.1352, 2.78988, 0.96 ) }
    dend_35 { pt3dadd( 20.6145, -53.9514, 2.824, 0.96 ) }
    dend_35 { pt3dadd( 20.6533, -54.0496, 2.82326, 0.96 ) }
    dend_35 { pt3dadd( 21.0099, -55.0461, 2.76304, 1.25 ) }
    dend_35 { pt3dadd( 21.6184, -57.054, 2.57227, 1.25 ) }
    dend_35 { pt3dadd( 21.6477, -57.1546, 2.56098, 1.25 ) }
    dend_35 { pt3dadd( 22.5195, -60.1897, 2.19494, 1.25 ) }
    dend_35 { pt3dadd( 22.5474, -60.2904, 2.18093, 1.25 ) }
    dend_35 { pt3dadd( 23.3313, -63.1234, 1.80369, 1.25 ) }
    dend_35 { pt3dadd( 24.103, -65.9078, 1.42741, 1.25 ) }
    dend_35 { pt3dadd( 24.4884, -67.2892, 1.23646, 1.25 ) }
    dend_35 { pt3dadd( 24.7829, -68.3589, 1.09297, 1.25 ) }
    dend_35 { pt3dadd( 25.1686, -69.8255, 0.90845, 0.22 ) }
    dend_35 { pt3dadd( 25.9624, -72.8224, 0.503583, 0.22 ) }
    dend_35 { pt3dadd( 26.2846, -74.0069, 0.336274, 0.88 ) }
    dend_35 { pt3dadd( 26.5365, -74.9639, 0.200529, 1.25 ) }
    dend_35 { pt3dadd( 26.6758, -75.5292, 0.129553, 1.55 ) }
    dend_35 { pt3dadd( 26.8775, -76.3874, 0.0300176, 1.55 ) }
    dend_35 { pt3dadd( 27.0371, -77.1598, -0.0383207, 1.25 ) }
    dend_35 { pt3dadd( 27.2464, -78.5725, -0.154259, 0.29 ) }
    dend_35 { pt3dadd( 27.4899, -80.8644, -0.200318, 0.29 ) }
    dend_35 { pt3dadd( 27.5029, -81.0232, -0.197583, 0.29 ) }
    dend_35 { pt3dadd( 27.5314, -81.4564, -0.174927, 0.52 ) }
    dend_35 { pt3dadd( 27.5853, -82.5505, -0.0809344, 0.52 ) }
    dend_35 { pt3dadd( 27.6328, -83.9642, 0.0875171, 0.29 ) }
    dend_35 { pt3dadd( 27.6492, -85.3836, 0.27029, 0.29 ) }
    dend_35 { pt3dadd( 27.6717, -86.0423, 0.381906, 1.11 ) }
    dend_35 { pt3dadd( 27.7376, -87.2406, 0.610324, 1.47 ) }
    dend_35 { pt3dadd( 27.8128, -88.2112, 0.832867, 1.77 ) }
    dend_35 { pt3dadd( 27.8986, -88.9596, 1.01931, 1.77 ) }
    dend_35 { pt3dadd( 27.9122, -89.0612, 1.04288, 1.77 ) }
    dend_35 { pt3dadd( 28.1094, -90.5384, 1.27444, 1.11 ) }
    dend_35 { pt3dadd( 28.1249, -90.6563, 1.29066, 1.11 ) }
    dend_35 { pt3dadd( 28.2446, -91.5431, 1.41839, 0.52 ) }
    dend_35 { pt3dadd( 28.5706, -93.9214, 1.7557, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( 28.841, -95.8696, 2.0145, 0.52 ) }
    dend_35 { pt3dadd( 29.4715, -99.7464, 2.5768, 0.52 ) }
    dend_35 { pt3dadd( 29.4901, -99.8484, 2.59177, 0.52 ) }
    dend_35 { pt3dadd( 29.6584, -100.593, 2.71259, 1.25 ) }
    dend_35 { pt3dadd( 29.8595, -101.322, 2.8466, 1.55 ) }
    dend_35 { pt3dadd( 30.1322, -102.095, 3.02209, 1.55 ) }
    dend_35 { pt3dadd( 30.9805, -104.046, 3.51648, 1.55 ) }
    dend_35 { pt3dadd( 31.5291, -105.115, 3.81454, 0.44 ) }
    dend_35 { pt3dadd( 32.4029, -106.749, 4.20187, 0.44 ) }
    dend_35 { pt3dadd( 32.9372, -107.725, 4.40332, 0.66 ) }
    dend_35 { pt3dadd( 33.4531, -108.686, 4.57545, 0.66 ) }
    dend_35 { pt3dadd( 34.3319, -110.396, 4.78924, 0.52 ) }
    dend_35 { pt3dadd( 34.9837, -111.738, 4.8891, 0.37 ) }
    dend_35 { pt3dadd( 36.5389, -115.156, 5.06351, 0.37 ) }
    dend_35 { pt3dadd( 36.6272, -115.364, 5.06997, 0.37 ) }
    dend_35 { pt3dadd( 37.7664, -118.219, 5.09972, 0.37 ) }
    dend_35 { pt3dadd( 38.46, -120.001, 5.09682, 0.52 ) }
    dend_35 { pt3dadd( 38.815, -120.938, 5.08302, 1.11 ) }
    dend_35 { pt3dadd( 39.384, -122.499, 5.04624, 1.11 ) }
    dend_35 { pt3dadd( 39.4342, -122.639, 5.04364, 1.11 ) }
    dend_35 { pt3dadd( 39.7877, -123.558, 5.03971, 0.29 ) }
    dend_35 { pt3dadd( 41.2154, -126.987, 5.09661, 0.29 ) }
    dend_35 { pt3dadd( 41.7673, -128.24, 5.15431, 0.52 ) }
    dend_35 { pt3dadd( 42.4877, -129.803, 5.2282, 0.52 ) }
    dend_35 { pt3dadd( 42.5387, -129.913, 5.23341, 0.52 ) }
    dend_35 { pt3dadd( 42.9237, -130.781, 5.27355, 0.29 ) }
    dend_35 { pt3dadd( 43.0044, -130.976, 5.28222, 0.29 ) }
    dend_35 { pt3dadd( 43.6263, -132.649, 5.35244, 0.29 ) }
    dend_35 { pt3dadd( 43.6616, -132.748, 5.35651, 0.29 ) }
    dend_35 { pt3dadd( 44.5676, -135.391, 5.46288, 0.29 ) }
    dend_35 { pt3dadd( 44.6039, -135.506, 5.46535, 0.29 ) }
    dend_35 { pt3dadd( 44.9281, -136.606, 5.47563, 0.88 ) }
    dend_35 { pt3dadd( 45.2519, -137.711, 5.4781, 1.11 ) }
    dend_35 { pt3dadd( 45.5297, -138.664, 5.47412, 1.11 ) }
    dend_35 { pt3dadd( 45.5602, -138.765, 5.47348, 1.11 ) }
    dend_35 { pt3dadd( 46.3814, -141.355, 5.54825, 0.22 ) }
    dend_35 { pt3dadd( 47.2339, -143.893, 5.69761, 0.22 ) }
    dend_35 { pt3dadd( 47.2701, -143.992, 5.70671, 0.22 ) }
    dend_35 { pt3dadd( 47.5735, -144.767, 5.80087, 0.74 ) }
    dend_35 { pt3dadd( 47.9885, -145.758, 5.98458, 0.74 ) }
    dend_35 { pt3dadd( 48.5146, -147.007, 6.29395, 0.29 ) }
    dend_35 { pt3dadd( 48.5749, -147.137, 6.3399, 0.29 ) }
    dend_35 { pt3dadd( 49.5305, -149.114, 7.13912, 0.29 ) }
    dend_35 { pt3dadd( 49.5745, -149.204, 7.17517, 0.29 ) }
    dend_35 { pt3dadd( 50.084, -150.273, 7.65184, 0.88 ) }
    dend_35 { pt3dadd( 50.435, -151.026, 7.94094, 1.25 ) }
    dend_35 { pt3dadd( 50.7936, -151.803, 8.19577, 1.33 ) }
    dend_35 { pt3dadd( 50.9495, -152.149, 8.30581, 1.33 ) }
    dend_35 { pt3dadd( 51.0146, -152.29, 8.3483, 1.33 ) }
    dend_35 { pt3dadd( 51.6705, -153.7, 8.72296, 0.37 ) }
    dend_35 { pt3dadd( 53.2575, -157.057, 9.42428, 0.37 ) }
    dend_35 { pt3dadd( 53.3208, -157.19, 9.44993, 0.66 ) }
    dend_35 { pt3dadd( 53.5598, -157.69, 9.53435, 0.66 ) }
    dend_35 { pt3dadd( 54.2338, -159.024, 9.72935, 0.66 ) }
    dend_35 { pt3dadd( 54.4436, -159.425, 9.7752, 0.66 ) }
    dend_35 { pt3dadd( 55.6908, -161.569, 9.88439, 0.66 ) }
    dend_35 { pt3dadd( 55.747, -161.66, 9.88761, 0.66 ) }
    dend_35 { pt3dadd( 56.4193, -162.709, 9.91259, 1.03 ) }
    dend_35 { pt3dadd( 56.9055, -163.436, 9.92282, 1.47 ) }
    dend_35 { pt3dadd( 57.3516, -164.101, 9.92521, 1.47 ) }
    dend_35 { pt3dadd( 57.9813, -165.026, 9.92733, 0.22 ) }
    dend_35 { pt3dadd( 58.2294, -165.391, 9.92801, 0.22 ) }
    dend_35 { pt3dadd( 59.6755, -167.559, 9.94582, 0.22 ) }
    dend_35 { pt3dadd( 59.9278, -167.946, 9.95697, 0.66 ) }
    dend_35 { pt3dadd( 60.4476, -168.749, 9.99588, 1.11 ) }
    dend_35 { pt3dadd( 60.9416, -169.5, 10.0506, 1.33 ) }
    dend_35 { pt3dadd( 61.5132, -170.387, 10.1369, 1.33 ) }
    dend_35 { pt3dadd( 62.037, -171.175, 10.2197, 0.66 ) }
    dend_35 { pt3dadd( 62.5921, -172.003, 10.3148, 0.29 ) }
    dend_35 { pt3dadd( 62.651, -172.091, 10.3253, 0.29 ) }
    dend_35 { pt3dadd( 63.861, -173.873, 10.5502, 0.29 ) }
    dend_35 { pt3dadd( 63.92, -173.961, 10.5611, 0.29 ) }
    dend_35 { pt3dadd( 64.2295, -174.433, 10.6067, 0.66 ) }
    dend_35 { pt3dadd( 64.2851, -174.523, 10.6129, 0.66 ) }
    dend_35 { pt3dadd( 64.7497, -175.297, 10.6459, 0.66 ) }
    dend_35 { pt3dadd( 64.8112, -175.401, 10.6497, 0.66 ) }
    dend_35 { pt3dadd( 65.5194, -176.653, 10.6856, 0.66 ) }
    dend_35 { pt3dadd( 66.2821, -178.014, 10.7207, 0.59 ) }
    dend_35 { pt3dadd( 66.5897, -178.588, 10.733, 1.18 ) }
    dend_35 { pt3dadd( 66.7853, -178.941, 10.7509, 1.62 ) }
    dend_35 { pt3dadd( 66.8372, -179.033, 10.7578, 1.62 ) }
    dend_35 { pt3dadd( 67.2949, -179.92, 10.8478, 1.62 ) }
    dend_35 { pt3dadd( 67.3383, -180.016, 10.8578, 1.62 ) }
    dend_35 { pt3dadd( 67.5632, -180.525, 10.9127, 1.62 ) }
    dend_35 { pt3dadd( 68.1075, -181.748, 11.0391, 0.22 ) }
    dend_35 { pt3dadd( 68.149, -181.844, 11.0484, 0.22 ) }
    dend_35 { pt3dadd( 69.0769, -184.152, 11.2136, 0.22 ) }
    dend_35 { pt3dadd( 70.401, -188.087, 11.3839, 0.22 ) }
    dend_35 { pt3dadd( 70.4317, -188.188, 11.3866, 0.22 ) }
    dend_35 { pt3dadd( 70.5363, -188.574, 11.3808, 0.88 ) }
    dend_35 { pt3dadd( 70.7578, -189.545, 11.3316, 1.18 ) }
    dend_35 { pt3dadd( 71.0569, -191.013, 11.2276, 0.22 ) }
    dend_35 { pt3dadd( 71.8126, -195.451, 10.7877, 0.22 ) }
    dend_35 { pt3dadd( 71.8264, -195.555, 10.775, 0.22 ) }
    dend_35 { pt3dadd( 72.0062, -196.854, 10.5749, 1.11 ) }
    dend_35 { pt3dadd( 72.1644, -197.931, 10.3787, 1.77 ) }
    dend_35 { pt3dadd( 72.2862, -198.577, 10.2522, 1.99 ) }
    dend_35 { pt3dadd( 72.3131, -198.692, 10.2287, 1.99 ) }
    dend_35 { pt3dadd( 72.5633, -199.573, 10.0363, 1.99 ) }
    dend_35 { pt3dadd( 73.1412, -201.529, 9.679, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 73.1731, -201.628, 9.66382, 0.29 ) }
    dend_35 { pt3dadd( 73.995, -204.271, 9.25877, 0.29 ) }
    dend_35 { pt3dadd( 74.0247, -204.371, 9.24446, 0.29 ) }
    dend_35 { pt3dadd( 74.3908, -205.676, 9.0789, 0.29 ) }
    dend_35 { pt3dadd( 74.4183, -205.777, 9.06793, 0.29 ) }
    dend_35 { pt3dadd( 75.3409, -209.224, 8.80609, 0.29 ) }
    dend_35 { pt3dadd( 75.6085, -210.202, 8.71236, 1.77 ) }
    dend_35 { pt3dadd( 75.7848, -210.844, 8.63367, 2.28 ) }
    dend_35 { pt3dadd( 75.9856, -211.483, 8.56064, 2.58 ) }
    dend_35 { pt3dadd( 76.0193, -211.582, 8.54967, 2.58 ) }
    dend_35 { pt3dadd( 76.1452, -211.906, 8.52534, 2.58 ) }
    dend_35 { pt3dadd( 76.9632, -213.796, 8.45302, 0.29 ) }
    dend_35 { pt3dadd( 77.0071, -213.892, 8.45051, 0.29 ) }
    dend_35 { pt3dadd( 78.1527, -216.348, 8.41164, 0.29 ) }
    dend_35 { pt3dadd( 78.2498, -216.553, 8.41071, 0.29 ) }
    dend_35 { pt3dadd( 79.5278, -219.248, 8.42835, 0.29 ) }
    dend_35 { pt3dadd( 79.5942, -219.394, 8.4374, 0.29 ) }
    dend_35 { pt3dadd( 80.3379, -221.116, 8.65329, 0.29 ) }
    dend_35 { pt3dadd( 80.5028, -221.561, 8.72323, 0.74 ) }
    dend_35 { pt3dadd( 80.7031, -222.407, 8.8735, 0.74 ) }
    dend_35 { pt3dadd( 80.7201, -222.509, 8.89262, 0.74 ) }
    dend_35 { pt3dadd( 80.8675, -224.179, 9.24399, 0.22 ) }
    dend_35 { pt3dadd( 80.8744, -224.296, 9.2692, 0.22 ) }
    dend_35 { pt3dadd( 80.8623, -226.143, 9.67791, 0.22 ) }
    dend_35 { pt3dadd( 80.7489, -229.037, 10.2833, 0.22 ) }
    dend_35 { pt3dadd( 80.7423, -229.141, 10.3024, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_24 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.137263, -23.0347, 1.84451, 2.21 ) }
    dend_31 { pt3dadd( 0.151132, -25.1553, 2.20862, 2.21 ) }
    dend_31 { pt3dadd( 0.275868, -26.1022, 2.40593, 1.84 ) }
    dend_31 { pt3dadd( 0.414205, -27.2814, 2.66692, 1.77 ) }
    dend_31 { pt3dadd( 0.596292, -29.3345, 3.13387, 1.77 ) }
    dend_31 { pt3dadd( 0.776229, -31.3901, 3.57744, 1.77 ) }
    dend_31 { pt3dadd( 0.781569, -31.4396, 3.5877, 1.77 ) }
    dend_31 { pt3dadd( 0.946035, -32.5594, 3.81464, 1.92 ) }
    dend_31 { pt3dadd( 1.14716, -33.7052, 4.02318, 2.58 ) }
    dend_31 { pt3dadd( 1.37887, -34.7874, 4.17616, 2.58 ) }
    dend_31 { pt3dadd( 1.68461, -35.9205, 4.29311, 1.5 ) }
    dend_31 { pt3dadd( 2.15607, -37.3365, 4.37706, 0.66 ) }
    dend_31 { pt3dadd( 2.54003, -38.2396, 4.40421, 0.66 ) }
    dend_31 { pt3dadd( 2.84438, -38.7923, 4.39649, 0.96 ) }
    dend_31 { pt3dadd( 3.18799, -39.2501, 4.3713, 0.96 ) }
    dend_31 { pt3dadd( 3.24695, -39.3123, 4.3652, 0.96 ) }
    dend_31 { pt3dadd( 4.28498, -40.2413, 4.232, 0.74 ) }
    dend_31 { pt3dadd( 4.9993, -40.7896, 4.0911, 0.74 ) }
    dend_31 { pt3dadd( 5.10242, -40.8674, 4.06687, 0.74 ) }
    dend_31 { pt3dadd( 6.09141, -41.6121, 3.79728, 0.74 ) }
    dend_31 { pt3dadd( 6.1391, -41.6477, 3.78214, 0.74 ) }
    dend_31 { pt3dadd( 6.65343, -42.0637, 3.59036, 0.74 ) }
    dend_31 { pt3dadd( 7.18276, -42.5291, 3.34464, 0.74 ) }
    dend_31 { pt3dadd( 7.90937, -43.296, 3.00543, 0.74 ) }
    dend_31 { pt3dadd( 7.95249, -43.3466, 2.98532, 0.74 ) }
    dend_31 { pt3dadd( 8.1233, -43.5983, 2.90605, 0.96 ) }
    dend_31 { pt3dadd( 8.44077, -44.1484, 2.76398, 1.18 ) }
    dend_31 { pt3dadd( 8.49864, -44.2607, 2.73921, 1.18 ) }
    dend_31 { pt3dadd( 8.74759, -44.8174, 2.64646, 1.33 ) }
    dend_31 { pt3dadd( 8.76879, -44.8727, 2.63875, 1.33 ) }
    dend_31 { pt3dadd( 9.00657, -45.5791, 2.55442, 1.47 ) }
    dend_31 { pt3dadd( 9.17859, -46.2382, 2.49701, 1.62 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.137263, -23.0347, 1.84451, 1.03 ) }
    dend_30 { pt3dadd( -0.0307301, -25.7637, -1.00268, 1.03 ) }
    dend_30 { pt3dadd( -0.0283219, -25.8157, -1.04107, 1.03 ) }
    dend_30 { pt3dadd( 0.00550558, -26.5492, -1.49691, 1.03 ) }
    dend_30 { pt3dadd( 0.0293168, -26.9937, -1.78424, 1.03 ) }
    dend_30 { pt3dadd( 0.0839035, -28.0169, -2.45485, 1.03 ) }
    dend_30 { pt3dadd( 0.164471, -28.971, -3.06866, 0.88 ) }
    dend_30 { pt3dadd( 0.21495, -29.7847, -3.5365, 0.88 ) }
    dend_30 { pt3dadd( 0.213604, -29.8434, -3.58155, 0.88 ) }
    dend_30 { pt3dadd( 0.00476228, -30.6454, -4.47705, 1.03 ) }
    dend_30 { pt3dadd( -0.0221441, -30.7043, -4.56137, 1.03 ) }
    dend_30 { pt3dadd( -0.332647, -31.1541, -5.31975, 1.03 ) }
    dend_30 { pt3dadd( -1.52921, -32.476, -7.57479, 1.03 ) }
    dend_30 { pt3dadd( -1.56243, -32.5069, -7.6228, 1.03 ) }
    dend_30 { pt3dadd( -2.73234, -33.5353, -8.90358, 1.18 ) }
    dend_30 { pt3dadd( -2.77437, -33.5708, -8.93967, 1.18 ) }
    dend_30 { pt3dadd( -3.42754, -34.1081, -9.43172, 1.18 ) }
    dend_30 { pt3dadd( -4.12075, -34.6671, -9.83997, 1.18 ) }
    dend_30 { pt3dadd( -5.11874, -35.5348, -10.2561, 1.4 ) }
    dend_30 { pt3dadd( -5.73406, -36.097, -10.5253, 1.4 ) }
    dend_30 { pt3dadd( -6.88453, -37.2282, -10.9958, 1.03 ) }
    dend_30 { pt3dadd( -6.9284, -37.2721, -11.0156, 1.03 ) }
    dend_30 { pt3dadd( -7.57922, -37.9843, -11.3495, 1.03 ) }
    dend_30 { pt3dadd( -7.61873, -38.0311, -11.3711, 1.03 ) }
    dend_30 { pt3dadd( -8.36407, -39.045, -11.7806, 0.74 ) }
    dend_30 { pt3dadd( -8.88685, -39.8599, -12.0839, 0.74 ) }
    dend_30 { pt3dadd( -8.91969, -39.9227, -12.1032, 0.74 ) }
    dend_30 { pt3dadd( -9.30019, -40.7892, -12.4278, 0.74 ) }
    dend_30 { pt3dadd( -9.32666, -40.9022, -12.5034, 0.74 ) }
    dend_30 { pt3dadd( -9.33177, -41.3959, -12.9366, 0.52 ) }
    dend_30 { pt3dadd( -9.31942, -41.4382, -12.985, 0.52 ) }
    dend_30 { pt3dadd( -9.17226, -41.8756, -13.6415, 0.81 ) }
    dend_30 { pt3dadd( -9.16185, -41.911, -13.696, 0.81 ) }
    dend_30 { pt3dadd( -8.95075, -42.6655, -14.9086, 1.03 ) }
    dend_30 { pt3dadd( -8.87003, -42.9944, -15.3666, 1.25 ) }
    dend_30 { pt3dadd( -8.86196, -43.0352, -15.4174, 1.25 ) }
    dend_30 { pt3dadd( -8.65418, -44.2138, -16.7579, 1.84 ) }
    dend_30 { pt3dadd( -8.63294, -44.449, -17.0184, 2.21 ) }
    dend_30 { pt3dadd( -8.63263, -44.5858, -17.1516, 2.21 ) }
    dend_30 { pt3dadd( -8.66934, -45.1872, -17.6804, 2.21 ) }
    dend_30 { pt3dadd( -8.67438, -45.2362, -17.7227, 2.21 ) }
    dend_30 { pt3dadd( -8.83912, -46.523, -18.7918, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -9.08819, -48.2019, -20.0258, 0.88 ) }
    dend_30 { pt3dadd( -9.29924, -49.3764, -20.8298, 0.88 ) }
    dend_30 { pt3dadd( -9.30943, -49.4297, -20.8648, 0.88 ) }
    dend_30 { pt3dadd( -9.50447, -50.4639, -21.5145, 0.59 ) }
    dend_30 { pt3dadd( -9.51471, -50.5271, -21.5506, 0.59 ) }
    dend_30 { pt3dadd( -9.65577, -51.5827, -22.1092, 0.59 ) }
    dend_30 { pt3dadd( -9.73391, -52.3875, -22.5471, 0.44 ) }
    dend_30 { pt3dadd( -9.80081, -53.2539, -23.0493, 0.66 ) }
    dend_30 { pt3dadd( -9.85071, -54.2007, -23.5554, 2.06 ) }
    dend_30 { pt3dadd( -9.88134, -55.0935, -23.9897, 3.17 ) }
    dend_30 { pt3dadd( -9.91801, -56.5972, -24.686, 3.17 ) }
    dend_30 { pt3dadd( -9.92781, -57.8277, -25.2186, 1.25 ) }
    dend_30 { pt3dadd( -9.91569, -58.6454, -25.512, 0.29 ) }
    dend_30 { pt3dadd( -9.884, -60.2122, -25.9386, 0.29 ) }
    dend_30 { pt3dadd( -9.86284, -60.697, -26.027, 1.03 ) }
    dend_30 { pt3dadd( -9.85785, -60.7601, -26.0328, 1.03 ) }
    dend_30 { pt3dadd( -9.7612, -61.4925, -26.0286, 1.03 ) }
    dend_30 { pt3dadd( -9.63954, -62.2453, -26.0026, 0.96 ) }
    dend_30 { pt3dadd( -9.62721, -62.3077, -26.0001, 0.96 ) }
    dend_30 { pt3dadd( -9.42036, -63.2328, -25.9631, 0.96 ) }
    dend_30 { pt3dadd( -9.26482, -63.9025, -25.9395, 0.29 ) }
    dend_30 { pt3dadd( -8.96567, -65.1747, -25.8856, 0.29 ) }
    dend_30 { pt3dadd( -8.95077, -65.2365, -25.8827, 0.29 ) }
    dend_30 { pt3dadd( -8.63308, -66.544, -25.82, 0.29 ) }
    dend_30 { pt3dadd( -8.38866, -67.5389, -25.7653, 0.29 ) }
    dend_30 { pt3dadd( -8.37327, -67.6006, -25.7612, 0.29 ) }
    dend_30 { pt3dadd( -8.27687, -67.9937, -25.7418, 1.18 ) }
    dend_30 { pt3dadd( -8.1417, -68.6116, -25.7412, 1.47 ) }
    dend_30 { pt3dadd( -8.07223, -68.9483, -25.7565, 1.62 ) }
    dend_30 { pt3dadd( -8.06001, -69.0105, -25.7625, 1.62 ) }
    dend_30 { pt3dadd( -7.98173, -69.4009, -25.8015, 1.62 ) }
    dend_30 { pt3dadd( -7.78323, -70.3838, -25.8974, 0.29 ) }
    dend_30 { pt3dadd( -7.47897, -71.8338, -26.0354, 0.29 ) }
    dend_30 { pt3dadd( -7.37577, -72.3263, -26.0804, 0.44 ) }
    dend_30 { pt3dadd( -7.19631, -73.2119, -26.144, 0.44 ) }
    dend_30 { pt3dadd( -7.1841, -73.2742, -26.1477, 0.44 ) }
    dend_30 { pt3dadd( -7.08076, -73.8037, -26.1719, 0.15 ) }
    dend_30 { pt3dadd( -6.92182, -74.6476, -26.1949, 0.15 ) }
    dend_30 { pt3dadd( -6.90868, -74.7191, -26.1967, 0.15 ) }
    dend_30 { pt3dadd( -6.4139, -77.5871, -26.2613, 0.15 ) }
    dend_30 { pt3dadd( -6.40367, -77.6498, -26.2626, 0.15 ) }
    dend_30 { pt3dadd( -6.31892, -78.187, -26.2772, 0.88 ) }
    dend_30 { pt3dadd( -6.20998, -78.9238, -26.3302, 1.69 ) }
    dend_30 { pt3dadd( -6.20091, -78.9955, -26.3379, 1.69 ) }
    dend_30 { pt3dadd( -6.15634, -79.3796, -26.3941, 2.06 ) }
    dend_30 { pt3dadd( -6.11764, -79.9089, -26.4948, 2.06 ) }
    dend_30 { pt3dadd( -6.07925, -80.5358, -26.6121, 2.06 ) }
    dend_30 { pt3dadd( -6.01933, -81.7874, -26.8484, 0.59 ) }
    dend_30 { pt3dadd( -5.99952, -82.1908, -26.9193, 0.59 ) }
    dend_30 { pt3dadd( -5.99551, -82.2992, -26.9428, 0.59 ) }
    dend_30 { pt3dadd( -5.95276, -83.666, -27.251, 0.37 ) }
    dend_30 { pt3dadd( -5.95156, -83.753, -27.2745, 0.37 ) }
    dend_30 { pt3dadd( -5.95192, -83.9022, -27.3154, 0.74 ) }
    dend_30 { pt3dadd( -5.9525, -84.8188, -27.5656, 0.74 ) }
    dend_30 { pt3dadd( -5.94684, -85.7547, -27.8322, 0.22 ) }
    dend_30 { pt3dadd( -5.91949, -87.495, -28.2845, 0.22 ) }
    dend_30 { pt3dadd( -5.91269, -88.2357, -28.4511, 1.25 ) }
    dend_30 { pt3dadd( -5.91133, -88.9985, -28.5881, 1.77 ) }
    dend_30 { pt3dadd( -5.91241, -89.4991, -28.648, 1.77 ) }
    dend_30 { pt3dadd( -5.92099, -89.9611, -28.6641, 1.77 ) }
    dend_30 { pt3dadd( -5.94111, -90.9382, -28.6351, 0.29 ) }
    dend_30 { pt3dadd( -5.97742, -92.1311, -28.5687, 0.22 ) }
    dend_30 { pt3dadd( -5.98454, -92.3298, -28.5536, 0.22 ) }
    dend_30 { pt3dadd( -6.04835, -93.7222, -28.4532, 0.22 ) }
    dend_30 { pt3dadd( -6.20786, -96.3024, -28.2719, 0.22 ) }
    dend_30 { pt3dadd( -6.22285, -96.5009, -28.2594, 0.22 ) }
    dend_30 { pt3dadd( -6.27272, -97.0964, -28.2302, 0.88 ) }
    dend_30 { pt3dadd( -6.32891, -97.7582, -28.1988, 1.33 ) }
    dend_30 { pt3dadd( -6.36382, -98.1552, -28.1804, 1.62 ) }
    dend_30 { pt3dadd( -6.40239, -98.5658, -28.1617, 1.62 ) }
    dend_30 { pt3dadd( -6.48493, -99.4348, -28.1244, 0.29 ) }
    dend_30 { pt3dadd( -6.56752, -100.302, -28.0865, 0.22 ) }
    dend_30 { pt3dadd( -6.57606, -100.398, -28.0824, 0.22 ) }
    dend_30 { pt3dadd( -6.66789, -101.581, -28.034, 0.22 ) }
    dend_30 { pt3dadd( -6.677, -101.716, -28.0285, 0.22 ) }
    dend_30 { pt3dadd( -6.69293, -102.069, -28.022, 1.18 ) }
    dend_30 { pt3dadd( -6.7229, -102.867, -28.0177, 1.62 ) }
    dend_30 { pt3dadd( -6.72222, -103.208, -28.0221, 1.84 ) }
    dend_30 { pt3dadd( -6.7077, -103.806, -28.0356, 1.84 ) }
    dend_30 { pt3dadd( -6.69612, -104.132, -28.0461, 1.84 ) }
    dend_30 { pt3dadd( -6.64371, -105.285, -28.0894, 0.22 ) }
    dend_30 { pt3dadd( -6.63973, -105.349, -28.0923, 0.22 ) }
    dend_30 { pt3dadd( -6.44547, -107.965, -28.2196, 0.22 ) }
    dend_30 { pt3dadd( -6.43824, -108.055, -28.224, 0.22 ) }
    dend_30 { pt3dadd( -6.39895, -108.46, -28.2436, 1.11 ) }
    dend_30 { pt3dadd( -6.39289, -108.523, -28.248, 1.11 ) }
    dend_30 { pt3dadd( -6.36035, -108.883, -28.2774, 1.4 ) }
    dend_30 { pt3dadd( -6.32875, -109.275, -28.3227, 1.92 ) }
    dend_30 { pt3dadd( -6.32113, -109.409, -28.3418, 1.92 ) }
    dend_30 { pt3dadd( -6.29775, -109.827, -28.3952, 1.92 ) }
    dend_30 { pt3dadd( -6.26009, -110.789, -28.5504, 0.52 ) }
    dend_30 { pt3dadd( -6.25839, -110.861, -28.563, 0.52 ) }
    dend_30 { pt3dadd( -6.24929, -111.466, -28.6725, 0.22 ) }
    dend_30 { pt3dadd( -6.25234, -113.113, -28.911, 0.22 ) }
    dend_30 { pt3dadd( -6.25329, -113.176, -28.9184, 0.22 ) }
    dend_30 { pt3dadd( -6.27831, -114.004, -28.9677, 1.03 ) }
    dend_30 { pt3dadd( -6.29378, -114.471, -28.9782, 1.03 ) }
    dend_30 { pt3dadd( -6.31998, -115.0, -28.9934, 0.59 ) }
    dend_30 { pt3dadd( -6.41853, -116.479, -29.0368, 0.22 ) }
    dend_30 { pt3dadd( -6.42603, -116.575, -29.0391, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( -6.64161, -119.423, -29.0858, 0.22 ) }
    dend_30 { pt3dadd( -6.64668, -119.486, -29.0855, 0.22 ) }
    dend_30 { pt3dadd( -6.69695, -120.046, -29.0894, 0.66 ) }
    dend_30 { pt3dadd( -6.70279, -120.109, -29.0918, 0.66 ) }
    dend_30 { pt3dadd( -6.74288, -120.704, -29.1432, 0.66 ) }
    dend_30 { pt3dadd( -6.74557, -120.777, -29.1493, 0.66 ) }
    dend_30 { pt3dadd( -6.75647, -121.375, -29.2272, 0.66 ) }
    dend_30 { pt3dadd( -6.75686, -121.447, -29.2366, 0.66 ) }
    dend_30 { pt3dadd( -6.75389, -122.108, -29.3154, 0.22 ) }
    dend_30 { pt3dadd( -6.74689, -123.565, -29.493, 0.22 ) }
    dend_30 { pt3dadd( -6.6986, -125.019, -29.6415, 0.22 ) }
    dend_30 { pt3dadd( -6.64215, -126.056, -29.7302, 1.55 ) }
    dend_30 { pt3dadd( -6.59827, -126.657, -29.7711, 1.55 ) }
    dend_30 { pt3dadd( -6.5475, -127.18, -29.7877, 1.55 ) }
    dend_30 { pt3dadd( -6.50918, -127.514, -29.786, 1.47 ) }
    dend_30 { pt3dadd( -6.40434, -128.426, -29.8254, 0.59 ) }
    dend_30 { pt3dadd( -6.3972, -128.489, -29.8308, 0.59 ) }
    dend_30 { pt3dadd( -6.35507, -128.889, -29.8753, 0.22 ) }
    dend_30 { pt3dadd( -6.10576, -131.539, -30.2935, 0.22 ) }
    dend_30 { pt3dadd( -6.1006, -131.601, -30.3059, 0.22 ) }
    dend_30 { pt3dadd( -6.0624, -132.886, -30.7429, 1.25 ) }
    dend_30 { pt3dadd( -6.0688, -133.618, -31.0865, 1.47 ) }
    dend_30 { pt3dadd( -6.07632, -134.096, -31.3492, 1.47 ) }
    dend_30 { pt3dadd( -6.07652, -134.159, -31.3873, 1.47 ) }
    dend_30 { pt3dadd( -6.08147, -134.44, -31.5927, 1.47 ) }
    dend_30 { pt3dadd( -6.06951, -136.029, -32.7065, 0.29 ) }
    dend_30 { pt3dadd( -6.03727, -136.952, -33.2916, 0.15 ) }
    dend_30 { pt3dadd( -6.03752, -137.003, -33.3308, 0.15 ) }
    dend_30 { pt3dadd( -6.09019, -138.027, -34.2843, 0.15 ) }
    dend_30 { pt3dadd( -6.13459, -138.661, -34.9089, 0.81 ) }
    dend_30 { pt3dadd( -6.13962, -138.71, -34.9645, 0.81 ) }
    dend_30 { pt3dadd( -6.1727, -139.076, -35.3673, 0.81 ) }
    dend_30 { pt3dadd( -6.29194, -140.65, -37.1944, 0.22 ) }
    dend_30 { pt3dadd( -6.28451, -141.732, -38.4213, 1.47 ) }
    dend_30 { pt3dadd( -6.26075, -142.185, -38.9541, 1.47 ) }
    dend_30 { pt3dadd( -6.11155, -143.389, -40.2998, 0.22 ) }
    dend_30 { pt3dadd( -5.93174, -144.39, -41.372, 0.22 ) }
    dend_30 { pt3dadd( -5.68487, -145.344, -42.334, 0.22 ) }
    dend_30 { pt3dadd( -5.28686, -146.433, -43.2142, 0.22 ) }
    dend_30 { pt3dadd( -4.93928, -147.295, -43.8458, 1.55 ) }
    dend_30 { pt3dadd( -4.66918, -147.922, -44.2886, 1.84 ) }
    dend_30 { pt3dadd( -4.53718, -148.215, -44.4711, 1.84 ) }
    dend_30 { pt3dadd( -4.1406, -149.121, -45.0305, 0.22 ) }
    dend_30 { pt3dadd( -3.53267, -150.739, -45.9677, 0.22 ) }
    dend_30 { pt3dadd( -3.26593, -151.576, -46.4015, 1.03 ) }
    dend_30 { pt3dadd( -3.08496, -152.169, -46.6728, 1.33 ) }
    dend_30 { pt3dadd( -2.89763, -152.838, -46.9847, 1.33 ) }
    dend_30 { pt3dadd( -2.88121, -152.902, -47.0166, 1.33 ) }
    dend_30 { pt3dadd( -2.58053, -154.16, -47.6498, 0.22 ) }
    dend_30 { pt3dadd( -2.17999, -155.906, -48.5469, 0.22 ) }
    dend_30 { pt3dadd( -2.15962, -155.992, -48.5884, 0.22 ) }
    dend_30 { pt3dadd( -1.62519, -158.301, -49.5549, 0.22 ) }
    dend_30 { pt3dadd( -1.4462, -159.075, -49.8525, 1.25 ) }
    dend_30 { pt3dadd( -1.29846, -159.748, -50.0657, 1.55 ) }
    dend_30 { pt3dadd( -1.21618, -160.145, -50.1777, 1.69 ) }
    dend_30 { pt3dadd( -1.00186, -161.287, -50.4839, 0.22 ) }
    dend_30 { pt3dadd( -0.447226, -164.513, -51.2372, 0.22 ) }
    dend_30 { pt3dadd( -0.429624, -164.644, -51.2637, 0.22 ) }
    dend_30 { pt3dadd( -0.191136, -166.657, -51.6624, 0.22 ) }
    dend_30 { pt3dadd( -0.0846856, -167.703, -51.8709, 1.4 ) }
    dend_30 { pt3dadd( -0.0261197, -168.364, -52.0028, 1.69 ) }
    dend_30 { pt3dadd( 0.0295747, -169.148, -52.1646, 1.69 ) }
    dend_30 { pt3dadd( 0.0945949, -170.304, -52.4182, 0.22 ) }
    dend_30 { pt3dadd( 0.103257, -170.438, -52.4455, 0.22 ) }
    dend_30 { pt3dadd( 0.380526, -173.857, -53.0908, 0.22 ) }
    dend_30 { pt3dadd( 0.387982, -173.929, -53.0998, 0.22 ) }
    dend_30 { pt3dadd( 0.470589, -174.595, -53.1647, 1.25 ) }
    dend_30 { pt3dadd( 0.590817, -175.375, -53.2053, 1.55 ) }
    dend_30 { pt3dadd( 0.61548, -175.509, -53.2039, 1.55 ) }
    dend_30 { pt3dadd( 0.733964, -176.09, -53.1884, 1.55 ) }
    dend_30 { pt3dadd( 0.906018, -176.85, -53.1387, 0.22 ) }
    dend_30 { pt3dadd( 0.926218, -176.938, -53.1322, 0.22 ) }
    dend_30 { pt3dadd( 1.24509, -178.237, -53.0163, 0.22 ) }
    dend_30 { pt3dadd( 1.2699, -178.33, -53.01, 0.22 ) }
    dend_30 { pt3dadd( 1.67349, -179.823, -52.9491, 0.22 ) }
    dend_30 { pt3dadd( 1.69138, -179.884, -52.9486, 0.22 ) }
    dend_30 { pt3dadd( 1.77694, -180.154, -52.9586, 1.55 ) }
    dend_30 { pt3dadd( 1.7988, -180.214, -52.9614, 1.55 ) }
    dend_30 { pt3dadd( 2.04933, -180.857, -52.9926, 1.99 ) }
    dend_30 { pt3dadd( 2.17914, -181.185, -53.0089, 1.99 ) }
    dend_30 { pt3dadd( 2.55997, -182.122, -53.0571, 0.22 ) }
    dend_30 { pt3dadd( 2.59733, -182.212, -53.0622, 0.22 ) }
    dend_30 { pt3dadd( 3.77886, -184.999, -53.234, 0.22 ) }
    dend_30 { pt3dadd( 3.80302, -185.058, -53.2375, 0.22 ) }
    dend_30 { pt3dadd( 3.91004, -185.321, -53.2321, 0.96 ) }
    dend_30 { pt3dadd( 3.93591, -185.407, -53.2209, 0.96 ) }
    dend_30 { pt3dadd( 4.04403, -185.898, -53.1171, 0.96 ) }
    dend_30 { pt3dadd( 4.06159, -186.02, -53.0848, 0.96 ) }
    dend_30 { pt3dadd( 4.07895, -186.339, -52.9758, 0.96 ) }
    dend_30 { pt3dadd( 4.13416, -187.797, -52.4724, 0.22 ) }
    dend_30 { pt3dadd( 4.14188, -190.27, -51.648, 0.22 ) }
    dend_30 { pt3dadd( 4.13933, -190.391, -51.6085, 0.52 ) }
    dend_30 { pt3dadd( 4.08696, -191.41, -51.2997, 0.52 ) }
    dend_30 { pt3dadd( 4.08183, -191.48, -51.2815, 0.52 ) }
    dend_30 { pt3dadd( 4.0303, -192.014, -51.1799, 0.22 ) }
    dend_30 { pt3dadd( 3.8715, -193.214, -51.0893, 0.22 ) }
    dend_30 { pt3dadd( 3.85641, -193.363, -51.0816, 0.22 ) }
    dend_30 { pt3dadd( 3.82156, -193.811, -51.0633, 1.25 ) }
    dend_30 { pt3dadd( 3.78217, -194.471, -51.0425, 1.47 ) }
    dend_30 { pt3dadd( 3.74684, -195.271, -51.0241, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( 3.72011, -196.135, -51.0201, 0.22 ) }
    dend_30 { pt3dadd( 3.63692, -198.256, -50.9969, 0.22 ) }
    dend_30 { pt3dadd( 3.60959, -198.841, -50.9857, 0.66 ) }
    dend_30 { pt3dadd( 3.57813, -199.438, -50.9673, 0.66 ) }
    dend_30 { pt3dadd( 3.57329, -199.511, -50.9651, 0.66 ) }
    dend_30 { pt3dadd( 3.53627, -199.948, -50.9518, 0.22 ) }
    dend_30 { pt3dadd( 3.30472, -201.797, -51.0533, 0.22 ) }
    dend_30 { pt3dadd( 3.2431, -202.192, -51.1157, 0.88 ) }
    dend_30 { pt3dadd( 3.22474, -202.315, -51.1421, 0.88 ) }
    dend_30 { pt3dadd( 3.18054, -202.64, -51.2176, 0.88 ) }
    dend_30 { pt3dadd( 3.16393, -202.772, -51.2494, 0.88 ) }
    dend_30 { pt3dadd( 2.98511, -204.349, -51.7149, 0.22 ) }
    dend_30 { pt3dadd( 2.67998, -207.401, -52.8531, 0.22 ) }
    dend_30 { pt3dadd( 2.60107, -208.254, -53.1549, 1.18 ) }
    dend_30 { pt3dadd( 2.51737, -209.139, -53.4279, 1.18 ) }
    dend_30 { pt3dadd( 2.51162, -209.2, -53.4447, 1.18 ) }
    dend_30 { pt3dadd( 2.41237, -210.293, -53.7065, 1.18 ) }
    dend_30 { pt3dadd( 2.33824, -211.227, -53.8813, 0.15 ) }
    dend_30 { pt3dadd( 2.05764, -214.278, -54.5096, 0.15 ) }
    dend_30 { pt3dadd( 1.88629, -215.997, -54.8417, 0.15 ) }
    dend_30 { pt3dadd( 1.85589, -216.327, -54.8987, 0.74 ) }
    dend_30 { pt3dadd( 1.85008, -216.39, -54.9077, 0.74 ) }
    dend_30 { pt3dadd( 1.78991, -217.06, -54.9702, 0.74 ) }
    dend_30 { pt3dadd( 1.72701, -217.844, -55.0361, 0.22 ) }
    dend_30 { pt3dadd( 1.72064, -217.916, -55.0457, 0.22 ) }
    dend_30 { pt3dadd( 1.55388, -219.888, -55.3271, 0.22 ) }
    dend_30 { pt3dadd( 1.50971, -220.216, -55.389, 0.96 ) }
    dend_30 { pt3dadd( 1.49739, -220.287, -55.4039, 0.96 ) }
    dend_30 { pt3dadd( 1.39006, -220.806, -55.5076, 0.96 ) }
    dend_30 { pt3dadd( 1.20765, -221.804, -55.6606, 0.96 ) }
    dend_30 { pt3dadd( 1.1889, -221.904, -55.6759, 0.96 ) }
    dend_30 { pt3dadd( 0.937602, -223.224, -55.9105, 0.22 ) }
    dend_30 { pt3dadd( 0.926575, -223.286, -55.9213, 0.22 ) }
    dend_30 { pt3dadd( 0.669735, -225.034, -56.2207, 0.22 ) }
    dend_30 { pt3dadd( 0.47453, -226.669, -56.4853, 0.22 ) }
    dend_30 { pt3dadd( 0.457158, -226.801, -56.5147, 0.22 ) }
    dend_30 { pt3dadd( 0.299592, -227.957, -56.7839, 0.22 ) }
    dend_30 { pt3dadd( 0.261475, -228.232, -56.8378, 0.96 ) }
    dend_30 { pt3dadd( 0.114851, -229.187, -57.0321, 2.14 ) }
    dend_30 { pt3dadd( -0.00417572, -229.838, -57.1837, 2.14 ) }
    dend_30 { pt3dadd( -0.392884, -231.769, -57.6432, 0.22 ) }
    dend_30 { pt3dadd( -0.784685, -233.665, -58.1285, 0.22 ) }
    dend_30 { pt3dadd( -1.34946, -236.077, -58.7241, 0.22 ) }
    dend_30 { pt3dadd( -1.36659, -236.145, -58.7408, 0.22 ) }
    dend_30 { pt3dadd( -1.50652, -236.658, -58.8596, 0.96 ) }
    dend_30 { pt3dadd( -1.63554, -237.161, -58.9586, 0.96 ) }
    dend_30 { pt3dadd( -1.83545, -238.022, -59.0392, 0.22 ) }
    dend_30 { pt3dadd( -2.26981, -239.566, -59.2078, 0.22 ) }
    dend_30 { pt3dadd( -2.38092, -239.948, -59.2451, 0.59 ) }
    dend_30 { pt3dadd( -2.45621, -240.199, -59.2843, 0.59 ) }
    dend_30 { pt3dadd( -2.57145, -240.57, -59.3418, 0.22 ) }
    dend_30 { pt3dadd( -3.12177, -242.258, -59.6141, 0.22 ) }
    dend_30 { pt3dadd( -3.29153, -242.745, -59.6874, 0.96 ) }
    dend_30 { pt3dadd( -3.52682, -243.359, -59.7985, 0.96 ) }
    dend_30 { pt3dadd( -4.14978, -244.791, -60.0612, 0.22 ) }
    dend_30 { pt3dadd( -5.3375, -246.895, -60.3446, 0.22 ) }
    dend_30 { pt3dadd( -5.38071, -246.955, -60.3513, 0.22 ) }
    dend_30 { pt3dadd( -5.68411, -247.293, -60.3755, 1.55 ) }
    dend_30 { pt3dadd( -6.13718, -247.735, -60.3674, 1.55 ) }
    dend_30 { pt3dadd( -6.55802, -248.074, -60.3954, 0.22 ) }
    dend_30 { pt3dadd( -8.49598, -249.425, -60.5916, 0.22 ) }
    dend_30 { pt3dadd( -9.35331, -249.917, -60.7641, 0.96 ) }
    dend_30 { pt3dadd( -9.40866, -249.948, -60.7836, 0.96 ) }
    dend_30 { pt3dadd( -10.3792, -250.448, -61.2198, 0.96 ) }
    dend_30 { pt3dadd( -12.5861, -251.535, -62.3998, 0.22 ) }
    dend_30 { pt3dadd( -13.3222, -251.882, -62.8532, 0.22 ) }
    dend_30 { pt3dadd( -13.592, -252.007, -63.0389, 0.96 ) }
    dend_30 { pt3dadd( -15.2761, -252.811, -64.1274, 0.15 ) }
    dend_30 { pt3dadd( -16.0909, -253.193, -64.6304, 0.15 ) }
    dend_30 { pt3dadd( -16.259, -253.269, -64.7271, 0.29 ) }
    dend_30 { pt3dadd( -16.4989, -253.386, -64.818, 0.29 ) }
    dend_30 { pt3dadd( -17.4377, -253.827, -65.1895, 0.22 ) }
    dend_30 { pt3dadd( -17.4912, -253.851, -65.22, 0.22 ) }
    dend_30 { pt3dadd( -18.5391, -254.363, -65.6414, 0.59 ) }
    dend_30 { pt3dadd( -18.6161, -254.405, -65.6737, 0.59 ) }
    dend_30 { pt3dadd( -18.9389, -254.588, -65.8046, 0.59 ) }
    dend_30 { pt3dadd( -18.9918, -254.621, -65.8254, 0.59 ) }
    dend_30 { pt3dadd( -20.8744, -255.834, -66.5723, 0.15 ) }
    dend_30 { pt3dadd( -23.5705, -257.62, -67.5378, 0.15 ) }
    dend_30 { pt3dadd( -24.116, -257.996, -67.6955, 1.18 ) }
    dend_30 { pt3dadd( -24.1761, -258.037, -67.7119, 1.18 ) }
    dend_30 { pt3dadd( -24.7864, -258.471, -67.857, 1.77 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 82/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.137263, -23.0347, 1.84451, 1.4 ) }
    dend_25 { pt3dadd( -0.633181, -23.1772, 1.98076, 1.4 ) }
    dend_25 { pt3dadd( -1.51446, -23.4708, 2.22623, 1.4 ) }
    dend_25 { pt3dadd( -1.77, -23.5726, 2.29894, 1.4 ) }
    dend_25 { pt3dadd( -2.5501, -23.9074, 2.52343, 1.25 ) }
    dend_25 { pt3dadd( -3.22951, -24.2218, 2.7027, 1.25 ) }
    dend_25 { pt3dadd( -3.8917, -24.5516, 2.8697, 1.25 ) }
    dend_25 { pt3dadd( -3.92959, -24.5726, 2.87893, 1.25 ) }
    dend_25 { pt3dadd( -4.44699, -24.9014, 3.00238, 1.4 ) }
    dend_25 { pt3dadd( -4.48391, -24.924, 3.0114, 1.4 ) }
    dend_25 { pt3dadd( -5.11736, -25.2911, 3.16995, 1.4 ) }
    dend_25 { pt3dadd( -5.77992, -25.6324, 3.33949, 1.62 ) }
    dend_25 { pt3dadd( -6.48791, -25.9547, 3.52524, 1.55 ) }
    dend_25 { pt3dadd( -6.52793, -25.9708, 3.53622, 1.55 ) }
    dend_25 { pt3dadd( -7.61855, -26.3521, 3.85024, 1.55 ) }
    dend_25 { pt3dadd( -7.6596, -26.3645, 3.86274, 1.55 ) }
    dend_25 { pt3dadd( -8.59316, -26.5953, 4.16811, 1.55 ) }
    dend_25 { pt3dadd( -8.64093, -26.6049, 4.18383, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_25 { pt3dadd( -9.40142, -26.74, 4.43567, 1.55 ) }
    dend_25 { pt3dadd( -9.78074, -26.7964, 4.56041, 1.84 ) }
    dend_25 { pt3dadd( -10.3621, -26.862, 4.75052, 1.84 ) }
    dend_25 { pt3dadd( -10.4046, -26.866, 4.76434, 1.84 ) }
    dend_25 { pt3dadd( -11.0057, -26.9029, 4.95824, 1.69 ) }
    dend_25 { pt3dadd( -11.0484, -26.9043, 4.97195, 1.69 ) }
    dend_25 { pt3dadd( -12.2258, -26.9023, 5.348, 1.69 ) }
    dend_25 { pt3dadd( -12.2686, -26.9015, 5.36163, 1.69 ) }
    dend_25 { pt3dadd( -13.2201, -26.8751, 5.64918, 1.69 ) }
    dend_25 { pt3dadd( -14.5804, -26.8273, 6.0457, 1.69 ) }
    dend_25 { pt3dadd( -15.9864, -26.7661, 6.44388, 1.69 ) }
    dend_25 { pt3dadd( -17.6795, -26.6754, 6.89292, 1.69 ) }
    dend_25 { pt3dadd( -17.723, -26.6724, 6.90369, 1.69 ) }
    dend_25 { pt3dadd( -18.5214, -26.5984, 7.08999, 1.69 ) }
    dend_25 { pt3dadd( -19.3948, -26.4951, 7.2763, 1.69 ) }
    dend_25 { pt3dadd( -19.4385, -26.4889, 7.28406, 1.69 ) }
    dend_25 { pt3dadd( -20.0812, -26.3872, 7.38232, 1.55 ) }
    dend_25 { pt3dadd( -20.6202, -26.3057, 7.46606, 1.55 ) }
    dend_25 { pt3dadd( -21.7781, -26.1676, 7.65416, 1.55 ) }
    dend_25 { pt3dadd( -21.8284, -26.1629, 7.66287, 1.55 ) }
    dend_25 { pt3dadd( -22.4961, -26.1268, 7.7729, 1.55 ) }
    dend_25 { pt3dadd( -23.5716, -26.1085, 7.95231, 1.55 ) }
    dend_25 { pt3dadd( -24.4997, -26.1594, 8.11726, 1.55 ) }
    dend_25 { pt3dadd( -25.2805, -26.2627, 8.25127, 1.55 ) }
    dend_25 { pt3dadd( -25.3462, -26.2762, 8.26227, 1.55 ) }
    dend_25 { pt3dadd( -26.0446, -26.4567, 8.38988, 1.55 ) }
    dend_25 { pt3dadd( -26.0862, -26.4712, 8.39642, 1.55 ) }
    dend_25 { pt3dadd( -26.7834, -26.7787, 8.45711, 1.33 ) }
    dend_25 { pt3dadd( -27.1752, -26.9737, 8.47797, 1.11 ) }
    dend_25 { pt3dadd( -27.2146, -26.9939, 8.4798, 1.11 ) }
    dend_25 { pt3dadd( -27.8846, -27.3358, 8.49083, 1.11 ) }
    dend_25 { pt3dadd( -28.7042, -27.7462, 8.47153, 1.11 ) }
    dend_25 { pt3dadd( -29.375, -28.0714, 8.43618, 1.4 ) }
    dend_25 { pt3dadd( -29.8859, -28.3216, 8.39946, 1.84 ) }
    dend_25 { pt3dadd( -29.9254, -28.3415, 8.39646, 1.84 ) }
    dend_25 { pt3dadd( -30.5973, -28.7006, 8.34523, 1.84 ) }
    dend_25 { pt3dadd( -31.2837, -29.0936, 8.30529, 1.84 ) }
    dend_25 { pt3dadd( -31.3371, -29.126, 8.30486, 1.84 ) }
    dend_25 { pt3dadd( -31.9776, -29.5346, 8.30453, 2.14 ) }
    dend_25 { pt3dadd( -32.0146, -29.5587, 8.30502, 2.14 ) }
    dend_25 { pt3dadd( -32.6666, -29.9928, 8.32983, 2.5 ) }
    dend_25 { pt3dadd( -33.3324, -30.433, 8.38371, 2.65 ) }
    dend_25 { pt3dadd( -34.0032, -30.8831, 8.44929, 2.65 ) }
    dend_25 { pt3dadd( -34.0401, -30.907, 8.45269, 2.65 ) }
    dend_25 { pt3dadd( -34.5175, -31.1952, 8.49269, 2.95 ) }
    dend_25 { pt3dadd( -34.5608, -31.221, 8.49704, 2.95 ) }
    dend_25 { pt3dadd( -34.8844, -31.3996, 8.54955, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 47/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -44.7926, 92.4349, -4.4568, 0.74 ) }
    dend_21 { pt3dadd( -45.0718, 92.6643, -4.40027, 0.74 ) }
    dend_21 { pt3dadd( -46.3103, 93.6202, -4.14984, 0.29 ) }
    dend_21 { pt3dadd( -47.0484, 94.1822, -4.0015, 0.29 ) }
    dend_21 { pt3dadd( -47.1722, 94.2776, -3.97691, 0.29 ) }
    dend_21 { pt3dadd( -47.8868, 94.8448, -3.83784, 0.29 ) }
    dend_21 { pt3dadd( -47.9397, 94.8872, -3.82762, 0.29 ) }
    dend_21 { pt3dadd( -49.1236, 95.8577, -3.6065, 0.29 ) }
    dend_21 { pt3dadd( -49.2503, 95.9634, -3.58396, 0.29 ) }
    dend_21 { pt3dadd( -49.9336, 96.5568, -3.46357, 0.29 ) }
    dend_21 { pt3dadd( -50.1432, 96.7439, -3.4262, 0.74 ) }
    dend_21 { pt3dadd( -50.5546, 97.1353, -3.35236, 1.03 ) }
    dend_21 { pt3dadd( -50.602, 97.1839, -3.34718, 1.03 ) }
    dend_21 { pt3dadd( -50.961, 97.61, -3.33422, 1.03 ) }
    dend_21 { pt3dadd( -51.0303, 97.6948, -3.33643, 1.03 ) }
    dend_21 { pt3dadd( -51.3326, 98.0825, -3.35977, 0.81 ) }
    dend_21 { pt3dadd( -51.8491, 98.7626, -3.40975, 0.66 ) }
    dend_21 { pt3dadd( -52.533, 99.6924, -3.4859, 0.29 ) }
    dend_21 { pt3dadd( -53.5641, 101.147, -3.61283, 0.29 ) }
    dend_21 { pt3dadd( -53.9543, 101.73, -3.66686, 0.66 ) }
    dend_21 { pt3dadd( -54.314, 102.321, -3.717, 1.47 ) }
    dend_21 { pt3dadd( -54.5106, 102.674, -3.74552, 1.69 ) }
    dend_21 { pt3dadd( -54.7542, 103.166, -3.78416, 1.69 ) }
    dend_21 { pt3dadd( -55.0409, 103.82, -3.82579, 0.88 ) }
    dend_21 { pt3dadd( -55.3114, 104.495, -3.8685, 0.37 ) }
    dend_21 { pt3dadd( -55.9886, 106.253, -3.95543, 0.37 ) }
    dend_21 { pt3dadd( -56.0401, 106.387, -3.96234, 0.37 ) }
    dend_21 { pt3dadd( -56.3557, 107.176, -4.00002, 0.37 ) }
    dend_21 { pt3dadd( -56.4692, 107.45, -4.01185, 0.88 ) }
    dend_21 { pt3dadd( -56.6545, 107.852, -4.0225, 0.88 ) }
    dend_21 { pt3dadd( -56.6895, 107.921, -4.02341, 0.88 ) }
    dend_21 { pt3dadd( -56.9635, 108.392, -4.0192, 0.88 ) }
    dend_21 { pt3dadd( -57.2475, 108.865, -3.97329, 1.11 ) }
    dend_21 { pt3dadd( -57.2826, 108.922, -3.96395, 1.11 ) }
    dend_21 { pt3dadd( -57.4679, 109.225, -3.91048, 1.11 ) }
    dend_21 { pt3dadd( -57.537, 109.339, -3.88945, 1.11 ) }
    dend_21 { pt3dadd( -57.7526, 109.703, -3.80564, 1.11 ) }
    dend_21 { pt3dadd( -58.1909, 110.475, -3.60408, 0.22 ) }
    dend_21 { pt3dadd( -59.1487, 112.167, -3.13343, 0.22 ) }
    dend_21 { pt3dadd( -59.1823, 112.223, -3.11733, 0.74 ) }
    dend_21 { pt3dadd( -59.2166, 112.279, -3.10105, 0.74 ) }
    dend_21 { pt3dadd( -59.5899, 112.86, -2.93037, 0.66 ) }
    dend_21 { pt3dadd( -59.632, 112.923, -2.91266, 0.66 ) }
    dend_21 { pt3dadd( -60.2296, 113.778, -2.70869, 0.29 ) }
    dend_21 { pt3dadd( -60.6908, 114.471, -2.50322, 0.29 ) }
    dend_21 { pt3dadd( -60.7335, 114.533, -2.48478, 0.29 ) }
    dend_21 { pt3dadd( -60.8404, 114.686, -2.44054, 0.88 ) }
    dend_21 { pt3dadd( -61.2268, 115.22, -2.29739, 1.18 ) }
    dend_21 { pt3dadd( -61.6364, 115.781, -2.14249, 1.18 ) }
    dend_21 { pt3dadd( -62.2101, 116.571, -1.91538, 0.29 ) }
    dend_21 { pt3dadd( -63.2334, 117.941, -1.51262, 0.29 ) }
    dend_21 { pt3dadd( -63.2792, 118.001, -1.49441, 0.29 ) }
    dend_21 { pt3dadd( -63.9458, 118.849, -1.23367, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( -64.1058, 119.044, -1.1743, 0.88 ) }
    dend_21 { pt3dadd( -64.1547, 119.102, -1.15675, 0.88 ) }
    dend_21 { pt3dadd( -64.5017, 119.501, -1.0457, 0.88 ) }
    dend_21 { pt3dadd( -64.8504, 119.93, -0.934096, 1.33 ) }
    dend_21 { pt3dadd( -65.1941, 120.416, -0.842095, 1.77 ) }
    dend_21 { pt3dadd( -65.5449, 120.957, -0.759676, 1.77 ) }
    dend_21 { pt3dadd( -66.2484, 122.115, -0.624143, 0.29 ) }
    dend_21 { pt3dadd( -66.2867, 122.181, -0.618111, 0.29 ) }
    dend_21 { pt3dadd( -66.9039, 123.343, -0.550835, 0.29 ) }
    dend_21 { pt3dadd( -67.6503, 124.903, -0.519703, 0.29 ) }
    dend_21 { pt3dadd( -67.6906, 124.996, -0.520024, 0.29 ) }
    dend_21 { pt3dadd( -68.1069, 126.102, -0.422218, 0.29 ) }
    dend_21 { pt3dadd( -68.1289, 126.165, -0.410595, 0.29 ) }
    dend_21 { pt3dadd( -68.4116, 126.966, -0.13176, 0.96 ) }
    dend_21 { pt3dadd( -68.7408, 127.861, 0.34271, 1.92 ) }
    dend_21 { pt3dadd( -68.8698, 128.183, 0.562115, 1.92 ) }
    dend_21 { pt3dadd( -69.5821, 129.913, 1.99623, 0.37 ) }
    dend_21 { pt3dadd( -69.988, 130.87, 2.90463, 0.37 ) }
    dend_21 { pt3dadd( -70.2986, 131.558, 3.60213, 0.96 ) }
    dend_21 { pt3dadd( -70.5216, 132.021, 4.11189, 0.96 ) }
    dend_21 { pt3dadd( -70.5444, 132.064, 4.16071, 0.96 ) }
    dend_21 { pt3dadd( -71.024, 132.989, 5.07772, 0.29 ) }
    dend_21 { pt3dadd( -71.326, 133.604, 5.55396, 0.29 ) }
    dend_21 { pt3dadd( -71.386, 133.76, 5.67579, 0.66 ) }
    dend_21 { pt3dadd( -71.4587, 133.997, 5.80725, 0.66 ) }
    dend_21 { pt3dadd( -71.5382, 134.341, 5.98716, 0.66 ) }
    dend_21 { pt3dadd( -71.6488, 134.847, 6.22295, 0.88 ) }
    dend_21 { pt3dadd( -71.8688, 135.919, 6.65777, 0.22 ) }
    dend_21 { pt3dadd( -71.9053, 136.112, 6.73536, 0.22 ) }
    dend_21 { pt3dadd( -72.1687, 137.574, 7.29448, 0.22 ) }
    dend_21 { pt3dadd( -72.3896, 138.705, 7.69536, 0.96 ) }
    dend_21 { pt3dadd( -72.5067, 139.256, 7.89106, 1.33 ) }
    dend_21 { pt3dadd( -72.5219, 139.318, 7.91109, 1.33 ) }
    dend_21 { pt3dadd( -72.7191, 140.058, 8.10163, 1.33 ) }
    dend_21 { pt3dadd( -72.7543, 140.183, 8.1342, 1.33 ) }
    dend_21 { pt3dadd( -72.9607, 140.894, 8.3087, 1.33 ) }
    dend_21 { pt3dadd( -73.2799, 141.946, 8.50496, 0.22 ) }
    dend_21 { pt3dadd( -73.5534, 142.891, 8.67306, 0.22 ) }
    dend_21 { pt3dadd( -73.6299, 143.17, 8.71734, 1.25 ) }
    dend_21 { pt3dadd( -73.6753, 143.371, 8.75975, 1.25 ) }
    dend_21 { pt3dadd( -73.7708, 143.903, 8.88384, 1.25 ) }
    dend_21 { pt3dadd( -73.7976, 144.098, 8.92892, 1.25 ) }
    dend_21 { pt3dadd( -73.881, 144.714, 9.05816, 1.25 ) }
    dend_21 { pt3dadd( -73.9395, 145.044, 9.13934, 1.25 ) }
    dend_21 { pt3dadd( -74.2149, 146.359, 9.48289, 0.29 ) }
    dend_21 { pt3dadd( -74.2303, 146.422, 9.50011, 0.29 ) }
    dend_21 { pt3dadd( -74.5103, 147.321, 9.75528, 0.29 ) }
    dend_21 { pt3dadd( -74.629, 147.639, 9.86155, 0.29 ) }
    dend_21 { pt3dadd( -74.9251, 148.3, 10.1093, 0.29 ) }
    dend_21 { pt3dadd( -74.9651, 148.375, 10.1355, 0.81 ) }
    dend_21 { pt3dadd( -75.0698, 148.544, 10.1855, 0.81 ) }
    dend_21 { pt3dadd( -75.4003, 149.081, 10.3514, 0.81 ) }
    dend_21 { pt3dadd( -75.8717, 149.828, 10.5858, 0.22 ) }
    dend_21 { pt3dadd( -75.9448, 149.939, 10.6131, 0.22 ) }
    dend_21 { pt3dadd( -76.7146, 151.045, 10.8211, 0.22 ) }
    dend_21 { pt3dadd( -76.8886, 151.288, 10.8551, 0.22 ) }
    dend_21 { pt3dadd( -77.0589, 151.521, 10.8846, 0.44 ) }
    dend_21 { pt3dadd( -77.6553, 152.324, 10.961, 0.44 ) }
    dend_21 { pt3dadd( -78.2063, 153.043, 10.995, 0.37 ) }
    dend_21 { pt3dadd( -78.6732, 153.643, 11.0336, 0.37 ) }
    dend_21 { pt3dadd( -78.7165, 153.695, 11.0388, 0.37 ) }
    dend_21 { pt3dadd( -79.1427, 154.202, 11.1051, 0.37 ) }
    dend_21 { pt3dadd( -79.1931, 154.26, 11.1155, 0.37 ) }
    dend_21 { pt3dadd( -79.333, 154.417, 11.1577, 0.81 ) }
    dend_21 { pt3dadd( -79.5344, 154.632, 11.2254, 0.81 ) }
    dend_21 { pt3dadd( -79.955, 155.059, 11.3615, 0.81 ) }
    dend_21 { pt3dadd( -80.1716, 155.278, 11.4269, 0.81 ) }
    dend_21 { pt3dadd( -80.2265, 155.331, 11.4419, 0.81 ) }
    dend_21 { pt3dadd( -80.7809, 155.854, 11.5966, 0.29 ) }
    dend_21 { pt3dadd( -81.9152, 156.901, 11.9186, 0.29 ) }
    dend_21 { pt3dadd( -82.3456, 157.308, 12.0518, 0.74 ) }
    dend_21 { pt3dadd( -82.568, 157.525, 12.1237, 0.96 ) }
    dend_21 { pt3dadd( -82.8332, 157.784, 12.2118, 0.96 ) }
    dend_21 { pt3dadd( -83.3293, 158.278, 12.3764, 0.96 ) }
    dend_21 { pt3dadd( -83.376, 158.325, 12.392, 0.96 ) }
    dend_21 { pt3dadd( -84.0327, 158.997, 12.6112, 0.29 ) }
    dend_21 { pt3dadd( -84.6539, 159.644, 12.802, 0.29 ) }
    dend_21 { pt3dadd( -84.7224, 159.719, 12.8225, 0.29 ) }
    dend_21 { pt3dadd( -85.1367, 160.25, 13.016, 0.29 ) }
    dend_21 { pt3dadd( -85.1712, 160.304, 13.0379, 0.29 ) }
    dend_21 { pt3dadd( -85.2892, 160.518, 13.1194, 0.66 ) }
    dend_21 { pt3dadd( -85.3212, 160.584, 13.1439, 0.66 ) }
    dend_21 { pt3dadd( -85.5224, 161.05, 13.3159, 0.66 ) }
    dend_21 { pt3dadd( -86.0697, 162.261, 13.7597, 0.29 ) }
    dend_21 { pt3dadd( -86.3754, 162.963, 14.0228, 0.29 ) }
    dend_21 { pt3dadd( -86.8687, 164.085, 14.4448, 0.29 ) }
    dend_21 { pt3dadd( -86.8983, 164.151, 14.4698, 0.29 ) }
    dend_21 { pt3dadd( -86.9519, 164.268, 14.5119, 0.59 ) }
    dend_21 { pt3dadd( -87.2231, 164.82, 14.6839, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 89/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -44.7926, 92.4349, -4.4568, 1.33 ) }
    dend_20 { pt3dadd( -45.2728, 94.1901, -4.8251, 1.33 ) }
    dend_20 { pt3dadd( -45.6012, 95.3128, -5.05944, 0.88 ) }
    dend_20 { pt3dadd( -46.1529, 97.1532, -5.44085, 0.66 ) }
    dend_20 { pt3dadd( -46.726, 98.9338, -5.85887, 0.66 ) }
    dend_20 { pt3dadd( -47.3476, 100.788, -6.32629, 0.66 ) }
    dend_20 { pt3dadd( -47.433, 101.032, -6.38947, 0.66 ) }
    dend_20 { pt3dadd( -47.7751, 101.873, -6.64209, 1.11 ) }
    dend_20 { pt3dadd( -47.8749, 102.094, -6.71567, 1.11 ) }
    dend_20 { pt3dadd( -48.3361, 103.027, -7.02558, 1.11 ) }
    dend_20 { pt3dadd( -48.3668, 103.1, -7.04159, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_20 { pt3dadd( -48.6623, 103.907, -7.17013, 1.11 ) }
    dend_20 { pt3dadd( -48.7185, 104.077, -7.18603, 1.11 ) }
    dend_20 { pt3dadd( -48.8333, 104.486, -7.20274, 1.11 ) }
    dend_20 { pt3dadd( -49.2459, 106.137, -7.20129, 0.52 ) }
    dend_20 { pt3dadd( -49.7806, 108.704, -7.10152, 0.52 ) }
    dend_20 { pt3dadd( -49.7957, 108.783, -7.09872, 0.52 ) }
    dend_20 { pt3dadd( -49.928, 109.576, -7.07415, 0.88 ) }
    dend_20 { pt3dadd( -50.0959, 110.651, -7.04774, 0.88 ) }
    dend_20 { pt3dadd( -50.1078, 110.742, -7.04263, 0.88 ) }
    dend_20 { pt3dadd( -50.2208, 111.824, -6.95725, 0.88 ) }
    dend_20 { pt3dadd( -50.3903, 113.613, -6.7988, 0.44 ) }
    dend_20 { pt3dadd( -50.4634, 114.526, -6.73846, 0.81 ) }
    dend_20 { pt3dadd( -50.5124, 115.467, -6.69916, 1.47 ) }
    dend_20 { pt3dadd( -50.5412, 116.943, -6.66569, 1.62 ) }
    dend_20 { pt3dadd( -50.5297, 117.874, -6.64465, 1.62 ) }
    dend_20 { pt3dadd( -50.5072, 118.548, -6.63072, 0.96 ) }
    dend_20 { pt3dadd( -50.4085, 120.304, -6.60738, 0.59 ) }
    dend_20 { pt3dadd( -50.3019, 122.172, -6.60333, 0.59 ) }
    dend_20 { pt3dadd( -50.0795, 125.349, -6.65716, 0.59 ) }
    dend_20 { pt3dadd( -49.9905, 126.515, -6.70562, 1.47 ) }
    dend_20 { pt3dadd( -49.9178, 127.363, -6.74331, 1.92 ) }
    dend_20 { pt3dadd( -49.8376, 128.304, -6.79233, 1.33 ) }
    dend_20 { pt3dadd( -49.7657, 129.249, -6.85225, 0.81 ) }
    dend_20 { pt3dadd( -49.7024, 130.217, -6.93641, 0.44 ) }
    dend_20 { pt3dadd( -49.6927, 130.388, -6.95556, 0.44 ) }
    dend_20 { pt3dadd( -49.6207, 131.962, -7.18231, 0.44 ) }
    dend_20 { pt3dadd( -49.5778, 132.801, -7.2905, 1.18 ) }
    dend_20 { pt3dadd( -49.5205, 133.883, -7.41269, 1.47 ) }
    dend_20 { pt3dadd( -49.5068, 134.053, -7.43048, 1.47 ) }
    dend_20 { pt3dadd( -49.4301, 134.965, -7.51909, 1.47 ) }
    dend_20 { pt3dadd( -49.3791, 135.463, -7.56684, 1.47 ) }
    dend_20 { pt3dadd( -49.2609, 136.322, -7.65279, 0.52 ) }
    dend_20 { pt3dadd( -48.9963, 137.903, -7.82137, 0.52 ) }
    dend_20 { pt3dadd( -48.5026, 140.566, -8.13136, 0.52 ) }
    dend_20 { pt3dadd( -48.3143, 141.54, -8.2524, 0.88 ) }
    dend_20 { pt3dadd( -48.2759, 141.73, -8.27793, 0.88 ) }
    dend_20 { pt3dadd( -47.9655, 143.218, -8.49924, 0.88 ) }
    dend_20 { pt3dadd( -47.7693, 144.144, -8.667, 0.88 ) }
    dend_20 { pt3dadd( -47.6626, 144.789, -8.78518, 1.33 ) }
    dend_20 { pt3dadd( -47.6544, 144.867, -8.80114, 1.33 ) }
    dend_20 { pt3dadd( -47.6228, 145.701, -8.97565, 1.33 ) }
    dend_20 { pt3dadd( -47.6308, 146.115, -9.06103, 1.33 ) }
    dend_20 { pt3dadd( -47.6921, 146.851, -9.20814, 0.37 ) }
    dend_20 { pt3dadd( -47.9359, 148.941, -9.609, 0.37 ) }
    dend_20 { pt3dadd( -48.0192, 149.553, -9.71741, 1.18 ) }
    dend_20 { pt3dadd( -48.1865, 150.644, -9.8866, 1.77 ) }
    dend_20 { pt3dadd( -48.3203, 151.551, -10.0209, 1.99 ) }
    dend_20 { pt3dadd( -48.389, 152.062, -10.0939, 1.99 ) }
    dend_20 { pt3dadd( -48.4817, 152.822, -10.1944, 1.33 ) }
    dend_20 { pt3dadd( -48.5717, 153.666, -10.3054, 0.81 ) }
    dend_20 { pt3dadd( -48.7296, 155.255, -10.5052, 0.37 ) }
    dend_20 { pt3dadd( -49.0323, 158.685, -10.9571, 0.37 ) }
    dend_20 { pt3dadd( -49.048, 158.877, -10.9832, 0.37 ) }
    dend_20 { pt3dadd( -49.1566, 160.457, -11.2063, 0.37 ) }
    dend_20 { pt3dadd( -49.1715, 160.717, -11.2486, 0.88 ) }
    dend_20 { pt3dadd( -49.175, 160.795, -11.263, 0.88 ) }
    dend_20 { pt3dadd( -49.1955, 161.447, -11.384, 1.18 ) }
    dend_20 { pt3dadd( -49.1979, 161.526, -11.3952, 1.18 ) }
    dend_20 { pt3dadd( -49.2212, 162.196, -11.4734, 1.18 ) }
    dend_20 { pt3dadd( -49.2562, 163.162, -11.5711, 0.37 ) }
    dend_20 { pt3dadd( -49.3303, 165.826, -11.8197, 0.37 ) }
    dend_20 { pt3dadd( -49.3876, 168.24, -12.0287, 0.37 ) }
    dend_20 { pt3dadd( -49.4031, 169.119, -12.099, 0.96 ) }
    dend_20 { pt3dadd( -49.4166, 170.214, -12.1827, 1.62 ) }
    dend_20 { pt3dadd( -49.4209, 171.392, -12.2645, 1.77 ) }
    dend_20 { pt3dadd( -49.409, 172.293, -12.3153, 1.77 ) }
    dend_20 { pt3dadd( -49.3758, 172.953, -12.3694, 1.77 ) }
    dend_20 { pt3dadd( -49.3691, 173.032, -12.3792, 1.77 ) }
    dend_20 { pt3dadd( -49.2804, 173.864, -12.5223, 0.74 ) }
    dend_20 { pt3dadd( -49.1705, 174.682, -12.6708, 0.52 ) }
    dend_20 { pt3dadd( -49.1182, 175.057, -12.7389, 0.52 ) }
    dend_20 { pt3dadd( -48.9386, 176.544, -12.9966, 0.52 ) }
    dend_20 { pt3dadd( -48.9292, 176.622, -13.0098, 0.52 ) }
    dend_20 { pt3dadd( -48.8925, 176.959, -13.0625, 0.88 ) }
    dend_20 { pt3dadd( -48.8376, 177.54, -13.153, 1.03 ) }
    dend_20 { pt3dadd( -48.8048, 178.036, -13.2341, 1.03 ) }
    dend_20 { pt3dadd( -48.7936, 178.611, -13.3286, 1.03 ) }
    dend_20 { pt3dadd( -48.7964, 178.69, -13.3406, 1.03 ) }
    dend_20 { pt3dadd( -48.8191, 179.191, -13.3847, 1.03 ) }
    dend_20 { pt3dadd( -48.839, 179.972, -13.3364, 0.74 ) }
    dend_20 { pt3dadd( -48.8416, 180.131, -13.3134, 0.74 ) }
    dend_20 { pt3dadd( -48.8512, 181.127, -13.1234, 0.52 ) }
    dend_20 { pt3dadd( -48.8598, 183.19, -12.6888, 0.52 ) }
    dend_20 { pt3dadd( -48.8709, 185.911, -12.0664, 0.37 ) }
    dend_20 { pt3dadd( -48.8846, 188.23, -11.5252, 1.18 ) }
    dend_20 { pt3dadd( -48.8892, 189.013, -11.3364, 1.92 ) }
    dend_20 { pt3dadd( -48.8907, 189.181, -11.2984, 1.92 ) }
    dend_20 { pt3dadd( -48.9342, 190.666, -10.9995, 1.92 ) }
    dend_20 { pt3dadd( -49.005, 191.995, -10.782, 0.59 ) }
    dend_20 { pt3dadd( -49.1149, 193.575, -10.5842, 0.59 ) }
    dend_20 { pt3dadd( -49.122, 193.655, -10.5784, 0.59 ) }
    dend_20 { pt3dadd( -49.265, 195.156, -10.4416, 0.59 ) }
    dend_20 { pt3dadd( -49.4429, 196.84, -10.2766, 0.59 ) }
    dend_20 { pt3dadd( -49.4519, 196.919, -10.2685, 0.59 ) }
    dend_20 { pt3dadd( -49.6124, 198.319, -10.1517, 0.29 ) }
    dend_20 { pt3dadd( -49.6384, 198.56, -10.1345, 0.29 ) }
    dend_20 { pt3dadd( -49.7959, 200.332, -10.0572, 0.29 ) }
    dend_20 { pt3dadd( -49.8653, 201.38, -10.0424, 1.18 ) }
    dend_20 { pt3dadd( -49.8903, 202.214, -10.0741, 1.18 ) }
    dend_20 { pt3dadd( -49.892, 203.139, -10.1606, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_20 { pt3dadd( -49.8636, 204.045, -10.3043, 0.81 ) }
    dend_20 { pt3dadd( -49.8408, 204.644, -10.4094, 0.59 ) }
    dend_20 { pt3dadd( -49.8359, 204.733, -10.4262, 0.59 ) }
    dend_20 { pt3dadd( -49.7877, 205.734, -10.6104, 0.59 ) }
    dend_20 { pt3dadd( -49.738, 206.806, -10.8133, 0.52 ) }
    dend_20 { pt3dadd( -49.6638, 208.868, -11.2046, 0.44 ) }
    dend_20 { pt3dadd( -49.634, 210.9, -11.6104, 0.44 ) }
    dend_20 { pt3dadd( -49.6402, 212.146, -11.8657, 1.18 ) }
    dend_20 { pt3dadd( -49.6619, 213.067, -12.0539, 2.06 ) }
    dend_20 { pt3dadd( -49.691, 213.698, -12.1836, 2.28 ) }
    dend_20 { pt3dadd( -49.751, 214.379, -12.3165, 1.55 ) }
    dend_20 { pt3dadd( -49.8547, 215.303, -12.4872, 1.11 ) }
    dend_20 { pt3dadd( -49.9154, 215.706, -12.5498, 0.74 ) }
    dend_20 { pt3dadd( -50.1302, 216.606, -12.682, 0.29 ) }
    dend_20 { pt3dadd( -50.1762, 216.759, -12.7023, 0.29 ) }
    dend_20 { pt3dadd( -50.6282, 218.038, -12.8531, 0.29 ) }
    dend_20 { pt3dadd( -50.6566, 218.113, -12.8607, 0.29 ) }
    dend_20 { pt3dadd( -51.3339, 219.803, -12.9931, 0.29 ) }
    dend_20 { pt3dadd( -51.6087, 220.447, -13.0435, 0.81 ) }
    dend_20 { pt3dadd( -51.8767, 221.072, -13.0755, 1.11 ) }
    dend_20 { pt3dadd( -51.9079, 221.147, -13.0767, 1.11 ) }
    dend_20 { pt3dadd( -52.2571, 222.036, -13.0515, 1.11 ) }
    dend_20 { pt3dadd( -52.2869, 222.123, -13.0461, 1.11 ) }
    dend_20 { pt3dadd( -52.4058, 222.59, -12.9951, 0.88 ) }
    dend_20 { pt3dadd( -52.5724, 223.395, -12.9009, 0.88 ) }
    dend_20 { pt3dadd( -52.6919, 224.105, -12.8286, 0.66 ) }
    dend_20 { pt3dadd( -52.8197, 224.858, -12.7616, 0.66 ) }
    dend_20 { pt3dadd( -52.9616, 225.772, -12.6881, 0.44 ) }
    dend_20 { pt3dadd( -53.13, 226.869, -12.623, 0.29 ) }
    dend_20 { pt3dadd( -53.1566, 227.039, -12.6176, 0.29 ) }
    dend_20 { pt3dadd( -53.3059, 227.862, -12.5916, 0.29 ) }
    dend_20 { pt3dadd( -53.4319, 228.572, -12.5647, 0.29 ) }
    dend_20 { pt3dadd( -53.5144, 229.012, -12.5492, 1.03 ) }
    dend_20 { pt3dadd( -53.7264, 230.03, -12.5136, 1.47 ) }
    dend_20 { pt3dadd( -53.9149, 230.883, -12.4898, 1.47 ) }
    dend_20 { pt3dadd( -54.2098, 232.156, -12.4538, 0.37 ) }
    dend_20 { pt3dadd( -54.696, 234.203, -12.3659, 0.37 ) }
    dend_20 { pt3dadd( -54.8731, 234.948, -12.3297, 0.81 ) }
    dend_20 { pt3dadd( -55.052, 235.669, -12.2919, 1.18 ) }
    dend_20 { pt3dadd( -55.2328, 236.424, -12.254, 1.18 ) }
    dend_20 { pt3dadd( -55.3868, 237.155, -12.2338, 1.11 ) }
    dend_20 { pt3dadd( -55.5073, 237.825, -12.2475, 0.52 ) }
    dend_20 { pt3dadd( -55.6463, 238.686, -12.279, 0.52 ) }
    dend_20 { pt3dadd( -55.6677, 238.856, -12.2893, 0.52 ) }
    dend_20 { pt3dadd( -55.8135, 240.521, -12.4369, 0.52 ) }
    dend_20 { pt3dadd( -55.9282, 242.426, -12.657, 0.52 ) }
    dend_20 { pt3dadd( -55.9685, 243.267, -12.7922, 0.88 ) }
    dend_20 { pt3dadd( -55.9742, 243.357, -12.8098, 0.88 ) }
    dend_20 { pt3dadd( -56.0369, 244.02, -12.9621, 0.88 ) }
    dend_20 { pt3dadd( -56.124, 244.669, -13.1263, 0.88 ) }
    dend_20 { pt3dadd( -56.1532, 244.821, -13.1686, 0.88 ) }
    dend_20 { pt3dadd( -56.3228, 245.488, -13.3576, 0.66 ) }
    dend_20 { pt3dadd( -56.6649, 246.733, -13.6818, 0.66 ) }
    dend_20 { pt3dadd( -56.8903, 247.538, -13.9105, 0.96 ) }
    dend_20 { pt3dadd( -57.0765, 248.154, -14.1249, 1.47 ) }
    dend_20 { pt3dadd( -57.2506, 248.784, -14.3326, 1.69 ) }
    dend_20 { pt3dadd( -57.2679, 248.86, -14.3528, 1.69 ) }
    dend_20 { pt3dadd( -57.3711, 249.437, -14.4547, 1.69 ) }
    dend_20 { pt3dadd( -57.4775, 250.14, -14.5413, 1.69 ) }
    dend_20 { pt3dadd( -57.593, 251.007, -14.6064, 1.33 ) }
    dend_20 { pt3dadd( -57.7491, 252.196, -14.6715, 0.29 ) }
    dend_20 { pt3dadd( -57.9869, 254.051, -14.7385, 0.29 ) }
    dend_20 { pt3dadd( -58.1333, 255.216, -14.7593, 0.29 ) }
    dend_20 { pt3dadd( -58.2045, 255.803, -14.755, 0.96 ) }
    dend_20 { pt3dadd( -58.3025, 256.724, -14.7038, 0.96 ) }
    dend_20 { pt3dadd( -58.3092, 256.804, -14.6977, 0.96 ) }
    dend_20 { pt3dadd( -58.3374, 257.144, -14.6879, 0.96 ) }
    dend_20 { pt3dadd( -58.364, 257.738, -14.666, 1.03 ) }
    dend_20 { pt3dadd( -58.3832, 258.149, -14.6572, 1.03 ) }
    dend_20 { pt3dadd( -58.4263, 258.746, -14.6408, 0.81 ) }
    dend_20 { pt3dadd( -58.487, 259.327, -14.6215, 0.52 ) }
    dend_20 { pt3dadd( -58.5044, 259.447, -14.6197, 0.52 ) }
    dend_20 { pt3dadd( -58.6021, 260.023, -14.6176, 0.37 ) }
    dend_20 { pt3dadd( -58.7221, 260.659, -14.5976, 0.29 ) }
    dend_20 { pt3dadd( -58.9131, 261.569, -14.5576, 0.29 ) }
    dend_20 { pt3dadd( -58.9395, 261.688, -14.5527, 0.29 ) }
    dend_20 { pt3dadd( -59.2602, 263.2, -14.4246, 0.29 ) }
    dend_20 { pt3dadd( -59.2757, 263.278, -14.416, 0.29 ) }
    dend_20 { pt3dadd( -59.4378, 264.161, -14.3025, 1.03 ) }
    dend_20 { pt3dadd( -59.5523, 264.934, -14.2111, 1.77 ) }
    dend_20 { pt3dadd( -59.6395, 265.606, -14.143, 1.77 ) }
    dend_20 { pt3dadd( -59.7272, 266.376, -14.0816, 1.33 ) }
    dend_20 { pt3dadd( -59.7843, 266.962, -14.0488, 0.88 ) }
    dend_20 { pt3dadd( -59.8492, 267.72, -14.0302, 0.74 ) }
    dend_20 { pt3dadd( -59.9377, 269.226, -14.0656, 0.74 ) }
    dend_20 { pt3dadd( -59.9604, 270.075, -14.1031, 1.03 ) }
    dend_20 { pt3dadd( -59.9575, 270.406, -14.128, 1.03 ) }
    dend_20 { pt3dadd( -59.9362, 270.905, -14.1849, 1.03 ) }
    dend_20 { pt3dadd( -59.9213, 271.064, -14.1911, 1.03 ) }
    dend_20 { pt3dadd( -59.7522, 272.264, -14.1391, 1.33 ) }
    dend_20 { pt3dadd( -59.7178, 272.45, -14.1152, 1.33 ) }
    dend_20 { pt3dadd( -59.5346, 273.453, -13.9663, 1.33 ) }
    dend_20 { pt3dadd( -59.5135, 273.58, -13.9464, 1.33 ) }
    dend_20 { pt3dadd( -59.336, 275.054, -13.7747, 0.81 ) }
    dend_20 { pt3dadd( -59.2795, 275.806, -13.7223, 0.52 ) }
    dend_20 { pt3dadd( -59.2771, 275.886, -13.7209, 0.52 ) }
    dend_20 { pt3dadd( -59.2787, 277.728, -13.7713, 0.52 ) }
    dend_20 { pt3dadd( -59.2811, 277.808, -13.7773, 0.52 ) }
    dend_20 { pt3dadd( -59.3618, 279.556, -13.9991, 0.44 ) }
    dend_20 { pt3dadd( -59.438, 280.788, -14.2458, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( -59.4859, 281.407, -14.3951, 0.74 ) }
    dend_20 { pt3dadd( -59.5082, 281.649, -14.4623, 0.74 ) }
    dend_20 { pt3dadd( -59.5555, 282.039, -14.5872, 0.74 ) }
    dend_20 { pt3dadd( -59.5651, 282.127, -14.614, 0.74 ) }
    dend_20 { pt3dadd( -59.6531, 282.753, -14.8175, 0.74 ) }
    dend_20 { pt3dadd( -59.8178, 283.679, -15.1063, 0.29 ) }
    dend_20 { pt3dadd( -59.8344, 283.766, -15.1317, 0.29 ) }
    dend_20 { pt3dadd( -60.1181, 285.039, -15.4844, 0.29 ) }
    dend_20 { pt3dadd( -60.6971, 287.332, -16.0687, 0.29 ) }
    dend_20 { pt3dadd( -60.9432, 288.152, -16.2807, 1.11 ) }
    dend_20 { pt3dadd( -61.2013, 288.958, -16.4781, 1.77 ) }
    dend_20 { pt3dadd( -61.2235, 289.034, -16.4934, 1.77 ) }
    dend_20 { pt3dadd( -61.417, 289.717, -16.6279, 1.77 ) }
    dend_20 { pt3dadd( -61.5804, 290.321, -16.7516, 1.77 ) }
    dend_20 { pt3dadd( -61.9186, 291.671, -17.0248, 0.29 ) }
    dend_20 { pt3dadd( -62.2819, 293.358, -17.3307, 0.29 ) }
    dend_20 { pt3dadd( -62.9257, 296.699, -17.9161, 0.29 ) }
    dend_20 { pt3dadd( -62.9401, 296.777, -17.9282, 0.29 ) }
    dend_20 { pt3dadd( -63.1169, 297.82, -18.0725, 1.11 ) }
    dend_20 { pt3dadd( -63.2397, 298.566, -18.1531, 1.25 ) }
    dend_20 { pt3dadd( -63.3887, 299.494, -18.2118, 0.37 ) }
    dend_20 { pt3dadd( -63.4229, 299.662, -18.2208, 0.37 ) }
    dend_20 { pt3dadd( -63.8466, 301.417, -18.2919, 0.37 ) }
    dend_20 { pt3dadd( -63.8697, 301.505, -18.2951, 0.37 ) }
    dend_20 { pt3dadd( -64.2634, 302.913, -18.3769, 0.37 ) }
    dend_20 { pt3dadd( -64.285, 302.99, -18.3849, 0.37 ) }
    dend_20 { pt3dadd( -64.491, 303.731, -18.4889, 1.11 ) }
    dend_20 { pt3dadd( -64.6769, 304.464, -18.599, 1.47 ) }
    dend_20 { pt3dadd( -64.8788, 305.334, -18.7409, 1.47 ) }
    dend_20 { pt3dadd( -65.0772, 306.276, -18.8911, 0.74 ) }
    dend_20 { pt3dadd( -65.2399, 307.086, -19.0168, 0.44 ) }
    dend_20 { pt3dadd( -65.5617, 308.785, -19.2577, 0.29 ) }
    dend_20 { pt3dadd( -65.7839, 310.095, -19.4223, 0.29 ) }
    dend_20 { pt3dadd( -65.7959, 310.174, -19.4314, 0.29 ) }
    dend_20 { pt3dadd( -65.9389, 311.243, -19.5654, 0.29 ) }
    dend_20 { pt3dadd( -65.9707, 311.507, -19.598, 0.29 ) }
    dend_20 { pt3dadd( -66.0251, 312.007, -19.6705, 0.74 ) }
    dend_20 { pt3dadd( -66.0813, 312.658, -19.7812, 0.74 ) }
    dend_20 { pt3dadd( -66.1925, 313.973, -20.0212, 0.74 ) }
    dend_20 { pt3dadd( -66.3227, 315.775, -20.3645, 0.29 ) }
    dend_20 { pt3dadd( -66.3451, 316.106, -20.4438, 0.59 ) }
    dend_20 { pt3dadd( -66.3596, 316.36, -20.5147, 0.59 ) }
    dend_20 { pt3dadd( -66.3816, 316.84, -20.6669, 0.59 ) }
    dend_20 { pt3dadd( -66.3898, 317.067, -20.7465, 0.59 ) }
    dend_20 { pt3dadd( -66.3856, 317.551, -20.9164, 0.59 ) }
    dend_20 { pt3dadd( -66.372, 318.364, -21.2029, 0.29 ) }
    dend_20 { pt3dadd( -66.3727, 318.515, -21.2553, 0.29 ) }
    dend_20 { pt3dadd( -66.3954, 319.87, -21.7116, 0.29 ) }
    dend_20 { pt3dadd( -66.398, 319.986, -21.7485, 0.29 ) }
    dend_20 { pt3dadd( -66.4647, 321.648, -22.3596, 0.29 ) }
    dend_20 { pt3dadd( -66.4994, 322.181, -22.5667, 0.96 ) }
    dend_20 { pt3dadd( -66.5474, 322.733, -22.7699, 1.47 ) }
    dend_20 { pt3dadd( -66.5668, 322.883, -22.8233, 1.47 ) }
    dend_20 { pt3dadd( -66.6674, 323.508, -23.0633, 1.47 ) }
    dend_20 { pt3dadd( -66.853, 324.659, -23.4881, 1.47 ) }
    dend_20 { pt3dadd( -67.008, 325.537, -23.7961, 0.22 ) }
    dend_20 { pt3dadd( -67.2327, 326.883, -24.2299, 0.22 ) }
    dend_20 { pt3dadd( -67.5359, 328.573, -24.7586, 0.22 ) }
    dend_20 { pt3dadd( -67.8408, 330.102, -25.1771, 1.25 ) }
    dend_20 { pt3dadd( -68.1254, 331.375, -25.4995, 2.06 ) }
    dend_20 { pt3dadd( -68.2593, 331.911, -25.6159, 2.43 ) }
    dend_20 { pt3dadd( -68.3877, 332.376, -25.718, 2.43 ) }
    dend_20 { pt3dadd( -68.796, 333.71, -26.0064, 0.37 ) }
    dend_20 { pt3dadd( -69.6027, 336.04, -26.5739, 0.37 ) }
    dend_20 { pt3dadd( -69.9954, 337.073, -26.8315, 1.03 ) }
    dend_20 { pt3dadd( -70.4207, 338.133, -27.1157, 1.99 ) }
    dend_20 { pt3dadd( -70.699, 338.818, -27.2928, 2.36 ) }
    dend_20 { pt3dadd( -70.8391, 339.156, -27.3771, 2.36 ) }
    dend_20 { pt3dadd( -71.5031, 340.761, -27.8216, 0.29 ) }
    dend_20 { pt3dadd( -71.5328, 340.832, -27.8441, 0.29 ) }
    dend_20 { pt3dadd( -72.2069, 342.49, -28.3567, 0.29 ) }
    dend_20 { pt3dadd( -72.9384, 344.325, -29.0083, 0.29 ) }
    dend_20 { pt3dadd( -72.9694, 344.407, -29.0376, 0.29 ) }
    dend_20 { pt3dadd( -73.4062, 345.632, -29.4688, 1.33 ) }
    dend_20 { pt3dadd( -73.6365, 346.328, -29.6948, 1.84 ) }
    dend_20 { pt3dadd( -73.7935, 346.809, -29.8862, 1.84 ) }
    dend_20 { pt3dadd( -74.1737, 348.057, -30.4934, 0.29 ) }
    dend_20 { pt3dadd( -74.5593, 349.508, -31.2757, 0.29 ) }
    dend_20 { pt3dadd( -74.5848, 349.606, -31.3273, 0.74 ) }
    dend_20 { pt3dadd( -74.732, 350.212, -31.6234, 0.74 ) }
    dend_20 { pt3dadd( -75.0496, 351.595, -32.3594, 0.22 ) }
    dend_20 { pt3dadd( -75.1018, 351.853, -32.5047, 0.74 ) }
    dend_20 { pt3dadd( -75.1738, 352.219, -32.7128, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.6297, 33.4623, -5.13081, 0.59 ) }
    dend_14 { pt3dadd( -8.06933, 33.9366, -6.15429, 0.59 ) }
    dend_14 { pt3dadd( -8.77237, 34.6173, -7.49209, 0.88 ) }
    dend_14 { pt3dadd( -9.65057, 35.4348, -8.93411, 0.88 ) }
    dend_14 { pt3dadd( -9.69823, 35.4762, -9.00216, 0.88 ) }
    dend_14 { pt3dadd( -10.0049, 35.7283, -9.39742, 0.88 ) }
    dend_14 { pt3dadd( -12.8819, 38.0066, -12.7687, 0.52 ) }
    dend_14 { pt3dadd( -13.8383, 38.702, -13.7569, 0.52 ) }
    dend_14 { pt3dadd( -14.4412, 39.1146, -14.2902, 0.52 ) }
    dend_14 { pt3dadd( -15.0397, 39.5062, -14.743, 0.52 ) }
    dend_14 { pt3dadd( -15.2863, 39.6652, -14.93, 0.52 ) }
    dend_14 { pt3dadd( -15.7406, 39.9432, -15.2431, 0.88 ) }
    dend_14 { pt3dadd( -17.3502, 40.886, -16.1255, 0.88 ) }
    dend_14 { pt3dadd( -17.8355, 41.1195, -16.5235, 0.88 ) }
    dend_14 { pt3dadd( -18.0902, 41.2272, -16.7348, 0.88 ) }
    dend_14 { pt3dadd( -19.6498, 41.7964, -18.0989, 0.52 ) }
    dend_14 { pt3dadd( -20.2855, 41.9862, -18.6619, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -21.4894, 42.2208, -19.9394, 1.03 ) }
    dend_14 { pt3dadd( -24.2518, 42.5777, -22.9796, 0.44 ) }
    dend_14 { pt3dadd( -25.2625, 42.6586, -24.1044, 0.44 ) }
    dend_14 { pt3dadd( -26.5755, 42.7272, -25.6801, 1.92 ) }
    dend_14 { pt3dadd( -27.0038, 42.7398, -26.2223, 1.92 ) }
    dend_14 { pt3dadd( -30.9628, 42.8055, -31.4309, 0.52 ) }
    dend_14 { pt3dadd( -31.5416, 42.8041, -32.2003, 1.18 ) }
    dend_14 { pt3dadd( -32.1373, 42.8062, -32.9823, 1.55 ) }
    dend_14 { pt3dadd( -35.511, 42.9001, -37.4062, 0.29 ) }
    dend_14 { pt3dadd( -35.5711, 42.9056, -37.4779, 0.29 ) }
    dend_14 { pt3dadd( -36.1552, 42.9964, -38.1007, 0.29 ) }
    dend_14 { pt3dadd( -36.5775, 43.0996, -38.5264, 0.74 ) }
    dend_14 { pt3dadd( -37.0466, 43.2138, -39.0366, 0.74 ) }
    dend_14 { pt3dadd( -37.2312, 43.2473, -39.265, 0.74 ) }
    dend_14 { pt3dadd( -37.6913, 43.2854, -39.8396, 0.74 ) }
    dend_14 { pt3dadd( -37.7407, 43.2872, -39.905, 0.74 ) }
    dend_14 { pt3dadd( -41.5291, 43.2607, -45.0807, 0.29 ) }
    dend_14 { pt3dadd( -42.3592, 43.2303, -46.2362, 0.29 ) }
    dend_14 { pt3dadd( -44.2014, 43.1174, -48.7485, 1.33 ) }
    dend_14 { pt3dadd( -44.6106, 43.0819, -49.2818, 1.33 ) }
    dend_14 { pt3dadd( -44.6623, 43.0765, -49.3452, 1.33 ) }
    dend_14 { pt3dadd( -45.8867, 42.9544, -50.6452, 0.29 ) }
    dend_14 { pt3dadd( -46.0517, 42.9437, -50.7462, 0.29 ) }
    dend_14 { pt3dadd( -46.8272, 43.0004, -51.2078, 0.29 ) }
    dend_14 { pt3dadd( -47.2576, 43.1049, -51.3707, 0.59 ) }
    dend_14 { pt3dadd( -47.6794, 43.2253, -51.8037, 0.59 ) }
    dend_14 { pt3dadd( -47.7348, 43.2426, -51.8614, 0.59 ) }
    dend_14 { pt3dadd( -48.8388, 43.6225, -53.0527, 0.59 ) }
    dend_14 { pt3dadd( -48.9015, 43.644, -53.1186, 0.59 ) }
    dend_14 { pt3dadd( -49.1186, 43.7213, -53.344, 0.59 ) }
    dend_14 { pt3dadd( -52.5406, 44.9105, -56.9484, 0.22 ) }
    dend_14 { pt3dadd( -54.1939, 45.4452, -58.6054, 0.22 ) }
    dend_14 { pt3dadd( -54.4761, 45.5327, -58.8663, 0.74 ) }
    dend_14 { pt3dadd( -54.8687, 45.6584, -59.1842, 0.74 ) }
    dend_14 { pt3dadd( -55.3836, 45.8311, -59.549, 0.74 ) }
    dend_14 { pt3dadd( -57.5605, 46.6224, -60.6844, 0.22 ) }
    dend_14 { pt3dadd( -58.3323, 46.9395, -60.9187, 0.22 ) }
    dend_14 { pt3dadd( -59.1394, 47.2813, -61.2093, 1.33 ) }
    dend_14 { pt3dadd( -60.1022, 47.6986, -61.5202, 1.77 ) }
    dend_14 { pt3dadd( -60.7814, 47.9934, -61.7585, 0.22 ) }
    dend_14 { pt3dadd( -62.1712, 48.5949, -62.2309, 0.22 ) }
    dend_14 { pt3dadd( -64.0925, 49.4559, -62.7619, 1.33 ) }
    dend_14 { pt3dadd( -64.2599, 49.5281, -62.8242, 1.33 ) }
    dend_14 { pt3dadd( -64.9581, 49.8151, -63.119, 1.33 ) }
    dend_14 { pt3dadd( -66.7405, 50.4782, -63.9954, 0.22 ) }
    dend_14 { pt3dadd( -66.8933, 50.5276, -64.0653, 0.22 ) }
    dend_14 { pt3dadd( -67.92, 50.8274, -64.4857, 0.22 ) }
    dend_14 { pt3dadd( -69.3454, 51.2061, -64.9049, 0.74 ) }
    dend_14 { pt3dadd( -70.0349, 51.3805, -65.0679, 0.74 ) }
    dend_14 { pt3dadd( -71.2871, 51.6767, -65.2683, 0.29 ) }
    dend_14 { pt3dadd( -73.3026, 52.0998, -65.4775, 0.29 ) }
    dend_14 { pt3dadd( -73.4251, 52.1201, -65.4846, 0.29 ) }
    dend_14 { pt3dadd( -73.9358, 52.1867, -65.4958, 0.74 ) }
    dend_14 { pt3dadd( -74.5515, 52.2627, -65.4457, 1.18 ) }
    dend_14 { pt3dadd( -75.0711, 52.3229, -65.3817, 1.18 ) }
    dend_14 { pt3dadd( -76.7993, 52.5148, -65.1981, 0.22 ) }
    dend_14 { pt3dadd( -80.1252, 53.0203, -65.3836, 0.22 ) }
    dend_14 { pt3dadd( -80.2059, 53.0309, -65.3933, 0.22 ) }
    dend_14 { pt3dadd( -81.6266, 53.2029, -65.6248, 1.69 ) }
    dend_14 { pt3dadd( -81.7056, 53.2124, -65.6445, 1.69 ) }
    dend_14 { pt3dadd( -83.674, 53.4491, -66.2603, 2.14 ) }
    dend_14 { pt3dadd( -86.5732, 53.778, -67.3187, 0.15 ) }
    dend_14 { pt3dadd( -88.8772, 54.023, -68.45, 0.15 ) }
    dend_14 { pt3dadd( -88.9495, 54.0302, -68.488, 0.15 ) }
    dend_14 { pt3dadd( -90.694, 54.1811, -69.498, 1.03 ) }
    dend_14 { pt3dadd( -90.8738, 54.1963, -69.5976, 1.03 ) }
    dend_14 { pt3dadd( -91.4398, 54.2383, -69.8537, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.6297, 33.4623, -5.13081, 0.66 ) }
    dend_13 { pt3dadd( -8.29861, 34.0896, -5.37683, 0.66 ) }
    dend_13 { pt3dadd( -9.18804, 34.9879, -5.86929, 0.66 ) }
    dend_13 { pt3dadd( -10.0167, 35.8683, -6.40402, 0.66 ) }
    dend_13 { pt3dadd( -10.656, 36.5418, -6.80208, 0.66 ) }
    dend_13 { pt3dadd( -10.9442, 36.8241, -6.94959, 0.88 ) }
    dend_13 { pt3dadd( -11.6305, 37.4552, -7.27786, 0.66 ) }
    dend_13 { pt3dadd( -12.3958, 38.1501, -7.64313, 0.52 ) }
    dend_13 { pt3dadd( -12.5101, 38.2441, -7.69746, 0.52 ) }
    dend_13 { pt3dadd( -13.5487, 39.0295, -8.15977, 0.52 ) }
    dend_13 { pt3dadd( -14.9798, 40.0357, -8.74696, 0.52 ) }
    dend_13 { pt3dadd( -15.843, 40.6064, -9.0937, 0.52 ) }
    dend_13 { pt3dadd( -16.4673, 40.9838, -9.31516, 1.4 ) }
    dend_13 { pt3dadd( -17.7922, 41.6905, -9.85508, 2.14 ) }
    dend_13 { pt3dadd( -17.8448, 41.716, -9.88042, 2.14 ) }
    dend_13 { pt3dadd( -18.5858, 42.0387, -10.3303, 2.65 ) }
    dend_13 { pt3dadd( -18.6693, 42.0725, -10.385, 2.65 ) }
    dend_13 { pt3dadd( -19.5824, 42.4475, -10.924, 2.65 ) }
    dend_13 { pt3dadd( -21.2504, 43.1361, -11.8612, 1.11 ) }
    dend_13 { pt3dadd( -21.3118, 43.1625, -11.8941, 1.11 ) }
    dend_13 { pt3dadd( -22.0695, 43.5017, -12.2886, 0.29 ) }
    dend_13 { pt3dadd( -23.2908, 44.0784, -12.8797, 0.29 ) }
    dend_13 { pt3dadd( -24.8734, 44.8638, -13.5871, 0.29 ) }
    dend_13 { pt3dadd( -24.9262, 44.8925, -13.6077, 0.29 ) }
    dend_13 { pt3dadd( -25.577, 45.2777, -13.8181, 1.11 ) }
    dend_13 { pt3dadd( -25.6468, 45.3194, -13.8411, 1.11 ) }
    dend_13 { pt3dadd( -26.3938, 45.7816, -14.076, 1.4 ) }
    dend_13 { pt3dadd( -27.064, 46.2137, -14.3116, 1.69 ) }
    dend_13 { pt3dadd( -27.5427, 46.5301, -14.5094, 1.69 ) }
    dend_13 { pt3dadd( -28.5262, 47.1976, -14.9527, 1.11 ) }
    dend_13 { pt3dadd( -28.5834, 47.2374, -14.9771, 1.11 ) }
    dend_13 { pt3dadd( -29.2156, 47.686, -15.2484, 0.44 ) }
    dend_13 { pt3dadd( -29.2951, 47.7445, -15.282, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -30.1371, 48.3838, -15.5926, 0.29 ) }
    dend_13 { pt3dadd( -30.3155, 48.5211, -15.6451, 0.29 ) }
    dend_13 { pt3dadd( -31.6258, 49.5823, -15.9011, 0.29 ) }
    dend_13 { pt3dadd( -31.9662, 49.8627, -15.9571, 0.74 ) }
    dend_13 { pt3dadd( -32.4987, 50.3058, -16.0503, 1.11 ) }
    dend_13 { pt3dadd( -32.9519, 50.6963, -16.1144, 1.11 ) }
    dend_13 { pt3dadd( -33.04, 50.7748, -16.1223, 1.11 ) }
    dend_13 { pt3dadd( -33.2728, 50.9808, -16.1494, 1.11 ) }
    dend_13 { pt3dadd( -33.326, 51.0303, -16.1567, 1.11 ) }
    dend_13 { pt3dadd( -33.947, 51.6212, -16.2585, 0.37 ) }
    dend_13 { pt3dadd( -35.4293, 53.0302, -16.5064, 0.37 ) }
    dend_13 { pt3dadd( -36.3603, 53.8972, -16.6473, 0.29 ) }
    dend_13 { pt3dadd( -36.4751, 54.0028, -16.6625, 0.29 ) }
    dend_13 { pt3dadd( -37.2038, 54.6647, -16.7834, 0.29 ) }
    dend_13 { pt3dadd( -37.8481, 55.2655, -16.9153, 1.25 ) }
    dend_13 { pt3dadd( -38.63, 56.0078, -17.0966, 2.21 ) }
    dend_13 { pt3dadd( -39.3964, 56.7417, -17.3573, 2.43 ) }
    dend_13 { pt3dadd( -39.6966, 57.0349, -17.4775, 2.06 ) }
    dend_13 { pt3dadd( -40.8105, 58.1305, -17.9242, 0.29 ) }
    dend_13 { pt3dadd( -42.0322, 59.3321, -18.4254, 0.29 ) }
    dend_13 { pt3dadd( -42.0824, 59.3819, -18.4442, 0.29 ) }
    dend_13 { pt3dadd( -42.9756, 60.3064, -18.8165, 0.29 ) }
    dend_13 { pt3dadd( -43.2931, 60.6426, -18.9648, 0.29 ) }
    dend_13 { pt3dadd( -44.4922, 61.9149, -19.5371, 0.29 ) }
    dend_13 { pt3dadd( -44.5471, 61.9729, -19.5615, 0.29 ) }
    dend_13 { pt3dadd( -45.5483, 63.0143, -20.0177, 0.29 ) }
    dend_13 { pt3dadd( -46.2671, 63.761, -20.3437, 1.18 ) }
    dend_13 { pt3dadd( -46.8241, 64.3352, -20.6981, 1.62 ) }
    dend_13 { pt3dadd( -46.8726, 64.3783, -20.733, 1.62 ) }
    dend_13 { pt3dadd( -47.3302, 64.7282, -21.0648, 1.62 ) }
    dend_13 { pt3dadd( -47.3827, 64.7643, -21.1027, 1.62 ) }
    dend_13 { pt3dadd( -47.6674, 64.9374, -21.2975, 1.62 ) }
    dend_13 { pt3dadd( -49.4734, 65.9756, -22.5003, 0.29 ) }
    dend_13 { pt3dadd( -51.0405, 66.8553, -23.5584, 0.29 ) }
    dend_13 { pt3dadd( -51.8124, 67.2781, -24.0809, 0.29 ) }
    dend_13 { pt3dadd( -52.6958, 67.7508, -24.7123, 1.11 ) }
    dend_13 { pt3dadd( -53.2464, 68.0404, -25.1121, 1.47 ) }
    dend_13 { pt3dadd( -54.2633, 68.5626, -25.7525, 1.47 ) }
    dend_13 { pt3dadd( -54.3322, 68.598, -25.7873, 1.47 ) }
    dend_13 { pt3dadd( -54.9613, 68.9593, -26.0373, 1.47 ) }
    dend_13 { pt3dadd( -55.7993, 69.4641, -26.2719, 0.22 ) }
    dend_13 { pt3dadd( -55.8702, 69.5084, -26.2837, 0.22 ) }
    dend_13 { pt3dadd( -58.1046, 70.9491, -26.5285, 0.22 ) }
    dend_13 { pt3dadd( -58.2949, 71.076, -26.5658, 0.22 ) }
    dend_13 { pt3dadd( -60.6942, 72.7906, -27.2412, 0.22 ) }
    dend_13 { pt3dadd( -61.0443, 73.0529, -27.3582, 1.92 ) }
    dend_13 { pt3dadd( -61.7906, 73.6442, -27.5916, 2.28 ) }
    dend_13 { pt3dadd( -62.0307, 73.8461, -27.6825, 2.58 ) }
    dend_13 { pt3dadd( -64.4357, 76.0164, -28.7484, 0.29 ) }
    dend_13 { pt3dadd( -66.441, 77.8665, -29.684, 0.29 ) }
    dend_13 { pt3dadd( -66.5115, 77.9343, -29.7186, 0.29 ) }
    dend_13 { pt3dadd( -69.4244, 80.792, -31.0524, 0.29 ) }
    dend_13 { pt3dadd( -70.3557, 81.7141, -31.4346, 1.03 ) }
    dend_13 { pt3dadd( -70.8975, 82.2564, -31.6041, 1.69 ) }
    dend_13 { pt3dadd( -70.9576, 82.3139, -31.6107, 1.69 ) }
    dend_13 { pt3dadd( -71.6864, 82.9682, -31.6648, 1.69 ) }
    dend_13 { pt3dadd( -72.1847, 83.3903, -31.682, 1.92 ) }
    dend_13 { pt3dadd( -72.2498, 83.4429, -31.6853, 1.92 ) }
    dend_13 { pt3dadd( -73.021, 84.0528, -31.7216, 0.29 ) }
    dend_13 { pt3dadd( -75.5703, 86.0349, -31.9097, 0.22 ) }
    dend_13 { pt3dadd( -77.7269, 87.7058, -32.0446, 0.22 ) }
    dend_13 { pt3dadd( -77.7851, 87.7505, -32.048, 0.22 ) }
    dend_13 { pt3dadd( -79.0171, 88.6945, -32.1025, 1.47 ) }
    dend_13 { pt3dadd( -79.7025, 89.226, -32.1244, 1.92 ) }
    dend_13 { pt3dadd( -80.4417, 89.8097, -32.1297, 1.92 ) }
    dend_13 { pt3dadd( -81.35, 90.5539, -32.1022, 0.22 ) }
    dend_13 { pt3dadd( -81.4073, 90.5995, -32.0981, 0.22 ) }
    dend_13 { pt3dadd( -83.0378, 91.8675, -31.9296, 0.22 ) }
    dend_13 { pt3dadd( -83.1783, 91.9743, -31.904, 0.22 ) }
    dend_13 { pt3dadd( -85.2347, 93.5367, -31.5065, 0.22 ) }
    dend_13 { pt3dadd( -85.9655, 94.1142, -31.3683, 1.4 ) }
    dend_13 { pt3dadd( -86.7121, 94.7127, -31.2405, 1.69 ) }
    dend_13 { pt3dadd( -86.7763, 94.7652, -31.2289, 1.69 ) }
    dend_13 { pt3dadd( -87.5867, 95.4508, -31.0696, 0.22 ) }
    dend_13 { pt3dadd( -87.6701, 95.5224, -31.0533, 0.22 ) }
    dend_13 { pt3dadd( -89.8224, 97.3893, -30.6366, 0.22 ) }
    dend_13 { pt3dadd( -90.0022, 97.547, -30.6052, 0.22 ) }
    dend_13 { pt3dadd( -91.5114, 98.8582, -30.3857, 0.22 ) }
    dend_13 { pt3dadd( -91.6948, 99.014, -30.3653, 0.22 ) }
    dend_13 { pt3dadd( -92.2846, 99.5078, -30.3299, 1.4 ) }
    dend_13 { pt3dadd( -92.89, 100.009, -30.294, 1.62 ) }
    dend_13 { pt3dadd( -93.2779, 100.322, -30.2717, 1.62 ) }
    dend_13 { pt3dadd( -93.9194, 100.848, -30.234, 0.22 ) }
    dend_13 { pt3dadd( -93.976, 100.895, -30.2307, 0.22 ) }
    dend_13 { pt3dadd( -95.2021, 101.884, -30.1357, 0.22 ) }
    dend_13 { pt3dadd( -95.6179, 102.226, -30.0953, 0.66 ) }
    dend_13 { pt3dadd( -95.7883, 102.368, -30.0759, 0.96 ) }
    dend_13 { pt3dadd( -95.8681, 102.433, -30.0666, 0.96 ) }
    dend_13 { pt3dadd( -96.4258, 102.873, -29.9964, 0.96 ) }
    dend_13 { pt3dadd( -96.8621, 103.208, -29.9402, 0.22 ) }
    dend_13 { pt3dadd( -96.979, 103.296, -29.9261, 0.22 ) }
    dend_13 { pt3dadd( -99.9177, 105.464, -29.7417, 0.22 ) }
    dend_13 { pt3dadd( -99.9688, 105.501, -29.7409, 0.22 ) }
    dend_13 { pt3dadd( -100.855, 106.135, -29.7569, 1.47 ) }
    dend_13 { pt3dadd( -101.522, 106.607, -29.8077, 1.99 ) }
    dend_13 { pt3dadd( -102.244, 107.115, -29.8977, 1.99 ) }
    dend_13 { pt3dadd( -103.184, 107.729, -30.0368, 0.15 ) }
    dend_13 { pt3dadd( -104.551, 108.551, -30.283, 0.15 ) }
    dend_13 { pt3dadd( -104.792, 108.692, -30.3226, 0.15 ) }
    dend_13 { pt3dadd( -106.601, 109.688, -30.6761, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -106.693, 109.735, -30.6944, 0.15 ) }
    dend_13 { pt3dadd( -108.669, 110.657, -31.0242, 0.15 ) }
    dend_13 { pt3dadd( -109.117, 110.854, -31.0857, 1.4 ) }
    dend_13 { pt3dadd( -110.092, 111.246, -31.2139, 1.4 ) }
    dend_13 { pt3dadd( -111.318, 111.711, -31.3769, 0.37 ) }
    dend_13 { pt3dadd( -111.781, 111.874, -31.4365, 0.22 ) }
    dend_13 { pt3dadd( -114.611, 112.835, -31.8347, 0.22 ) }
    dend_13 { pt3dadd( -114.681, 112.858, -31.8462, 0.22 ) }
    dend_13 { pt3dadd( -116.209, 113.341, -32.1677, 0.22 ) }
    dend_13 { pt3dadd( -116.871, 113.542, -32.3308, 1.25 ) }
    dend_13 { pt3dadd( -117.221, 113.674, -32.4135, 1.47 ) }
    dend_13 { pt3dadd( -117.745, 113.904, -32.5509, 1.47 ) }
    dend_13 { pt3dadd( -117.974, 114.018, -32.6171, 1.47 ) }
    dend_13 { pt3dadd( -119.147, 114.657, -32.9557, 0.22 ) }
    dend_13 { pt3dadd( -119.209, 114.694, -32.9732, 0.22 ) }
    dend_13 { pt3dadd( -122.011, 116.549, -33.5831, 0.22 ) }
    dend_13 { pt3dadd( -122.862, 117.151, -33.7363, 0.74 ) }
    dend_13 { pt3dadd( -123.269, 117.458, -33.7851, 0.74 ) }
    dend_13 { pt3dadd( -123.781, 117.862, -33.819, 0.22 ) }
    dend_13 { pt3dadd( -123.994, 118.042, -33.8213, 0.22 ) }
    dend_13 { pt3dadd( -125.976, 119.813, -33.8262, 0.22 ) }
    dend_13 { pt3dadd( -126.078, 119.916, -33.8329, 0.22 ) }
    dend_13 { pt3dadd( -127.544, 121.435, -33.9574, 0.22 ) }
    dend_13 { pt3dadd( -128.071, 121.989, -33.9954, 1.55 ) }
    dend_13 { pt3dadd( -128.796, 122.754, -34.0416, 2.06 ) }
    dend_13 { pt3dadd( -129.542, 123.556, -34.1022, 2.36 ) }
    dend_13 { pt3dadd( -130.856, 124.994, -34.2297, 0.22 ) }
    dend_13 { pt3dadd( -134.166, 128.628, -34.5761, 0.22 ) }
    dend_13 { pt3dadd( -136.589, 131.314, -34.8492, 0.22 ) }
    dend_13 { pt3dadd( -136.663, 131.396, -34.8573, 0.22 ) }
    dend_13 { pt3dadd( -137.092, 131.865, -34.8997, 1.18 ) }
    dend_13 { pt3dadd( -137.64, 132.462, -34.9395, 1.62 ) }
    dend_13 { pt3dadd( -137.754, 132.586, -34.9385, 1.62 ) }
    dend_13 { pt3dadd( -138.131, 133.062, -34.9467, 1.62 ) }
    dend_13 { pt3dadd( -138.557, 133.622, -34.9364, 1.62 ) }
    dend_13 { pt3dadd( -138.922, 134.107, -34.917, 0.15 ) }
    dend_13 { pt3dadd( -138.972, 134.173, -34.913, 0.15 ) }
    dend_13 { pt3dadd( -139.517, 134.901, -34.8683, 0.15 ) }
    dend_13 { pt3dadd( -139.712, 135.164, -34.852, 0.15 ) }
    dend_13 { pt3dadd( -141.252, 137.271, -34.7398, 0.15 ) }
    dend_13 { pt3dadd( -141.745, 137.979, -34.7068, 0.88 ) }
    dend_13 { pt3dadd( -142.138, 138.552, -34.6905, 1.18 ) }
    dend_13 { pt3dadd( -142.557, 139.176, -34.6813, 1.18 ) }
    dend_13 { pt3dadd( -142.68, 139.366, -34.6811, 1.18 ) }
    dend_13 { pt3dadd( -142.949, 139.792, -34.6848, 0.22 ) }
    dend_13 { pt3dadd( -143.996, 141.479, -34.7645, 0.22 ) }
    dend_13 { pt3dadd( -144.334, 142.037, -34.798, 0.66 ) }
    dend_13 { pt3dadd( -144.591, 142.473, -34.8152, 0.66 ) }
    dend_13 { pt3dadd( -144.665, 142.597, -34.8209, 0.66 ) }
    dend_13 { pt3dadd( -144.789, 142.799, -34.8296, 0.66 ) }
    dend_13 { pt3dadd( -144.992, 143.117, -34.8413, 0.15 ) }
    dend_13 { pt3dadd( -145.119, 143.304, -34.8466, 0.15 ) }
    dend_13 { pt3dadd( -147.231, 146.369, -34.8839, 0.15 ) }
    dend_13 { pt3dadd( -147.406, 146.609, -34.8823, 0.59 ) }
    dend_13 { pt3dadd( -147.905, 147.26, -34.8712, 0.59 ) }
    dend_13 { pt3dadd( -148.159, 147.587, -34.8617, 0.22 ) }
    dend_13 { pt3dadd( -149.184, 148.919, -34.8396, 0.22 ) }
    dend_13 { pt3dadd( -149.268, 149.048, -34.8386, 0.22 ) }
    dend_13 { pt3dadd( -150.984, 152.165, -34.9066, 0.22 ) }
    dend_13 { pt3dadd( -151.314, 152.846, -34.9283, 1.25 ) }
    dend_13 { pt3dadd( -151.821, 154.015, -34.9805, 1.55 ) }
    dend_13 { pt3dadd( -152.206, 155.017, -35.0339, 0.22 ) }
    dend_13 { pt3dadd( -153.544, 158.985, -35.331, 0.22 ) }
    dend_13 { pt3dadd( -153.885, 160.125, -35.4358, 1.11 ) }
    dend_13 { pt3dadd( -154.051, 160.792, -35.5078, 1.4 ) }
    dend_13 { pt3dadd( -154.069, 160.861, -35.515, 1.4 ) }
    dend_13 { pt3dadd( -154.309, 161.671, -35.5886, 1.4 ) }
    dend_13 { pt3dadd( -154.609, 162.494, -35.6138, 0.22 ) }
    dend_13 { pt3dadd( -154.655, 162.585, -35.6119, 0.22 ) }
    dend_13 { pt3dadd( -155.762, 164.592, -35.4322, 0.22 ) }
    dend_13 { pt3dadd( -155.875, 164.788, -35.4092, 0.22 ) }
    dend_13 { pt3dadd( -156.695, 166.131, -35.2222, 0.22 ) }
    dend_13 { pt3dadd( -157.108, 166.772, -35.1112, 1.03 ) }
    dend_13 { pt3dadd( -157.539, 167.376, -34.9899, 1.4 ) }
    dend_13 { pt3dadd( -157.897, 167.841, -34.8901, 1.4 ) }
    dend_13 { pt3dadd( -157.944, 167.896, -34.8771, 1.4 ) }
    dend_13 { pt3dadd( -158.407, 168.4, -34.7597, 0.22 ) }
    dend_13 { pt3dadd( -158.465, 168.458, -34.7474, 0.22 ) }
    dend_13 { pt3dadd( -160.141, 170.119, -34.4875, 0.22 ) }
    dend_13 { pt3dadd( -160.39, 170.368, -34.4445, 0.66 ) }
    dend_13 { pt3dadd( -160.433, 170.412, -34.4352, 0.66 ) }
    dend_13 { pt3dadd( -160.717, 170.723, -34.3704, 0.96 ) }
    dend_13 { pt3dadd( -160.871, 170.903, -34.3326, 0.96 ) }
    dend_13 { pt3dadd( -161.115, 171.196, -34.2746, 0.96 ) }
    dend_13 { pt3dadd( -161.394, 171.538, -34.2144, 0.81 ) }
    dend_13 { pt3dadd( -161.701, 171.905, -34.161, 0.22 ) }
    dend_13 { pt3dadd( -163.266, 173.752, -33.9111, 0.22 ) }
    dend_13 { pt3dadd( -163.372, 173.874, -33.8965, 0.59 ) }
    dend_13 { pt3dadd( -163.476, 173.99, -33.884, 0.59 ) }
    dend_13 { pt3dadd( -164.081, 174.681, -33.8491, 0.59 ) }
    dend_13 { pt3dadd( -164.239, 174.858, -33.85, 0.22 ) }
    dend_13 { pt3dadd( -164.423, 175.064, -33.8621, 0.22 ) }
    dend_13 { pt3dadd( -165.885, 176.723, -34.0205, 0.22 ) }
    dend_13 { pt3dadd( -165.932, 176.778, -34.0243, 0.22 ) }
    dend_13 { pt3dadd( -166.473, 177.429, -34.0594, 1.25 ) }
    dend_13 { pt3dadd( -166.979, 178.059, -34.0869, 1.4 ) }
    dend_13 { pt3dadd( -167.548, 178.784, -34.1072, 0.22 ) }
    dend_13 { pt3dadd( -167.643, 178.907, -34.1091, 0.22 ) }
    dend_13 { pt3dadd( -169.463, 181.284, -34.1022, 0.22 ) }
    dend_13 { pt3dadd( -169.729, 181.63, -34.0862, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -169.779, 181.696, -34.0795, 1.11 ) }
    dend_13 { pt3dadd( -170.228, 182.296, -34.0079, 1.11 ) }
    dend_13 { pt3dadd( -170.297, 182.389, -33.9956, 1.11 ) }
    dend_13 { pt3dadd( -170.517, 182.692, -33.953, 1.11 ) }
    dend_13 { pt3dadd( -170.809, 183.107, -33.8893, 0.15 ) }
    dend_13 { pt3dadd( -170.855, 183.174, -33.8793, 0.15 ) }
    dend_13 { pt3dadd( -172.244, 185.207, -33.5942, 0.15 ) }
    dend_13 { pt3dadd( -172.628, 185.786, -33.518, 0.88 ) }
    dend_13 { pt3dadd( -172.707, 185.907, -33.5192, 0.88 ) }
    dend_13 { pt3dadd( -173.018, 186.406, -33.5987, 0.96 ) }
    dend_13 { pt3dadd( -173.072, 186.546, -33.629, 0.96 ) }
    dend_13 { pt3dadd( -173.248, 187.165, -33.7967, 0.96 ) }
    dend_13 { pt3dadd( -173.264, 187.242, -33.8208, 0.96 ) }
    dend_13 { pt3dadd( -173.622, 189.248, -34.4349, 0.22 ) }
    dend_13 { pt3dadd( -173.656, 189.462, -34.4972, 0.22 ) }
    dend_13 { pt3dadd( -174.336, 194.275, -35.7982, 0.22 ) }
    dend_13 { pt3dadd( -174.428, 195.009, -36.0121, 1.25 ) }
    dend_13 { pt3dadd( -174.436, 195.078, -36.0322, 1.25 ) }
    dend_13 { pt3dadd( -174.506, 195.734, -36.167, 1.25 ) }
    dend_13 { pt3dadd( -174.54, 196.026, -36.2043, 1.25 ) }
    dend_13 { pt3dadd( -174.603, 196.536, -36.2856, 1.25 ) }
    dend_13 { pt3dadd( -174.821, 198.112, -36.5865, 0.22 ) }
    dend_13 { pt3dadd( -174.833, 198.192, -36.6003, 0.22 ) }
    dend_13 { pt3dadd( -175.606, 203.375, -37.9714, 0.22 ) }
    dend_13 { pt3dadd( -175.679, 203.778, -38.0938, 0.96 ) }
    dend_13 { pt3dadd( -175.842, 204.667, -38.3153, 1.25 ) }
    dend_13 { pt3dadd( -175.938, 205.189, -38.4346, 1.25 ) }
    dend_13 { pt3dadd( -175.957, 205.294, -38.4557, 1.25 ) }
    dend_13 { pt3dadd( -176.461, 208.179, -39.0526, 0.22 ) }
    dend_13 { pt3dadd( -177.085, 211.695, -39.8674, 0.22 ) }
    dend_13 { pt3dadd( -178.015, 216.966, -41.0283, 0.22 ) }
    dend_13 { pt3dadd( -178.252, 218.236, -41.2692, 1.55 ) }
    dend_13 { pt3dadd( -178.448, 219.245, -41.4381, 1.55 ) }
    dend_13 { pt3dadd( -178.463, 219.325, -41.4481, 1.55 ) }
    dend_13 { pt3dadd( -178.666, 220.301, -41.4909, 0.22 ) }
    dend_13 { pt3dadd( -178.7, 220.457, -41.5017, 0.22 ) }
    dend_13 { pt3dadd( -179.326, 222.632, -41.6876, 0.22 ) }
    dend_13 { pt3dadd( -179.391, 222.847, -41.71, 0.22 ) }
    dend_13 { pt3dadd( -179.692, 223.835, -41.8516, 0.22 ) }
    dend_13 { pt3dadd( -179.831, 224.458, -41.9308, 0.96 ) }
    dend_13 { pt3dadd( -179.937, 225.056, -41.9936, 0.96 ) }
    dend_13 { pt3dadd( -179.95, 225.136, -42.0032, 0.96 ) }
    dend_13 { pt3dadd( -180.142, 226.48, -42.1924, 0.22 ) }
    dend_13 { pt3dadd( -180.172, 226.619, -42.2058, 0.22 ) }
    dend_13 { pt3dadd( -181.061, 230.165, -42.454, 0.22 ) }
    dend_13 { pt3dadd( -181.22, 230.776, -42.5122, 0.22 ) }
    dend_13 { pt3dadd( -181.272, 230.978, -42.5318, 0.59 ) }
    dend_13 { pt3dadd( -181.373, 231.361, -42.5756, 0.22 ) }
    dend_13 { pt3dadd( -182.306, 234.869, -42.9727, 0.22 ) }
    dend_13 { pt3dadd( -182.324, 234.938, -42.9827, 0.22 ) }
    dend_13 { pt3dadd( -182.724, 236.385, -43.3136, 1.18 ) }
    dend_13 { pt3dadd( -183.006, 237.515, -43.6013, 1.18 ) }
    dend_13 { pt3dadd( -183.196, 238.377, -43.8325, 0.22 ) }
    dend_13 { pt3dadd( -183.221, 238.514, -43.8982, 0.22 ) }
    dend_13 { pt3dadd( -183.561, 240.981, -45.7345, 0.22 ) }
    dend_13 { pt3dadd( -183.633, 241.727, -46.3143, 0.66 ) }
    dend_13 { pt3dadd( -183.649, 241.965, -46.4998, 0.66 ) }
    dend_13 { pt3dadd( -183.657, 242.379, -46.832, 0.66 ) }
    dend_13 { pt3dadd( -183.583, 245.7, -49.4484, 0.22 ) }
    dend_13 { pt3dadd( -183.574, 245.811, -49.5584, 0.22 ) }
    dend_13 { pt3dadd( -183.307, 247.345, -51.1818, 0.22 ) }
    dend_13 { pt3dadd( -183.201, 247.885, -51.6972, 1.25 ) }
    dend_13 { pt3dadd( -183.077, 248.476, -52.2162, 1.25 ) }
    dend_13 { pt3dadd( -183.065, 248.533, -52.2599, 1.25 ) }
    dend_13 { pt3dadd( -182.426, 251.44, -53.869, 0.22 ) }
    dend_13 { pt3dadd( -182.059, 253.256, -55.0598, 0.22 ) }
    dend_13 { pt3dadd( -182.047, 253.321, -55.1117, 0.22 ) }
    dend_13 { pt3dadd( -182.016, 253.635, -55.3233, 0.74 ) }
    dend_13 { pt3dadd( -182.012, 253.836, -55.4296, 0.74 ) }
    dend_13 { pt3dadd( -182.029, 254.332, -55.6087, 0.74 ) }
    dend_13 { pt3dadd( -182.151, 255.583, -55.7987, 0.22 ) }
    dend_13 { pt3dadd( -182.179, 255.745, -55.8361, 0.22 ) }
    dend_13 { pt3dadd( -182.753, 258.495, -56.487, 0.22 ) }
    dend_13 { pt3dadd( -182.825, 258.818, -56.5589, 0.59 ) }
    dend_13 { pt3dadd( -182.889, 259.09, -56.6627, 0.59 ) }
    dend_13 { pt3dadd( -182.939, 259.289, -56.76, 0.59 ) }
    dend_13 { pt3dadd( -183.366, 260.314, -57.26, 0.22 ) }
    dend_13 { pt3dadd( -184.193, 261.846, -58.0606, 0.22 ) }
    dend_13 { pt3dadd( -184.678, 262.595, -58.4931, 1.55 ) }
    dend_13 { pt3dadd( -186.371, 265.021, -59.8084, 0.07 ) }
    dend_13 { pt3dadd( -186.47, 265.152, -59.8751, 0.07 ) }
    dend_13 { pt3dadd( -188.972, 268.26, -61.231, 0.07 ) }
    dend_13 { pt3dadd( -189.411, 268.772, -61.4267, 0.66 ) }
    dend_13 { pt3dadd( -189.466, 268.831, -61.4484, 0.66 ) }
    dend_13 { pt3dadd( -189.984, 269.364, -61.6005, 0.66 ) }
    dend_13 { pt3dadd( -190.15, 269.537, -61.6203, 0.15 ) }
    dend_13 { pt3dadd( -191.324, 270.88, -61.834, 0.15 ) }
    dend_13 { pt3dadd( -191.951, 271.772, -62.0514, 0.66 ) }
    dend_13 { pt3dadd( -192.083, 271.97, -62.0957, 0.66 ) }
    dend_13 { pt3dadd( -192.285, 272.295, -62.1182, 0.66 ) }
    dend_13 { pt3dadd( -192.316, 272.348, -62.1183, 0.66 ) }
    dend_13 { pt3dadd( -192.617, 272.863, -62.0965, 0.66 ) }
    dend_13 { pt3dadd( -192.883, 273.319, -62.0566, 0.15 ) }
    dend_13 { pt3dadd( -193.074, 273.648, -62.0185, 0.15 ) }
    dend_13 { pt3dadd( -195.219, 277.36, -61.6103, 0.15 ) }
    dend_13 { pt3dadd( -195.575, 277.982, -61.5351, 0.96 ) }
    dend_13 { pt3dadd( -195.87, 278.491, -61.4702, 1.33 ) }
    dend_13 { pt3dadd( -195.906, 278.553, -61.4621, 1.33 ) }
    dend_13 { pt3dadd( -196.302, 279.251, -61.3711, 1.33 ) }
    dend_13 { pt3dadd( -196.355, 279.345, -61.3571, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -196.649, 279.858, -61.2612, 0.15 ) }
    dend_13 { pt3dadd( -198.212, 282.536, -60.7526, 0.15 ) }
    dend_13 { pt3dadd( -198.262, 282.621, -60.7296, 1.03 ) }
    dend_13 { pt3dadd( -198.339, 282.748, -60.6871, 1.03 ) }
    dend_13 { pt3dadd( -198.694, 283.249, -60.4925, 1.25 ) }
    dend_13 { pt3dadd( -198.82, 283.408, -60.4263, 1.25 ) }
    dend_13 { pt3dadd( -199.135, 283.784, -60.2865, 1.25 ) }
    dend_13 { pt3dadd( -200.075, 284.837, -59.8754, 0.15 ) }
    dend_13 { pt3dadd( -200.14, 284.913, -59.8496, 0.15 ) }
    dend_13 { pt3dadd( -201.545, 286.614, -59.1121, 0.15 ) }
    dend_13 { pt3dadd( -201.7, 286.825, -59.0254, 0.15 ) }
    dend_13 { pt3dadd( -203.163, 288.959, -58.2025, 0.15 ) }
    dend_13 { pt3dadd( -203.252, 289.096, -58.153, 0.81 ) }
    dend_13 { pt3dadd( -203.607, 289.667, -57.9659, 0.81 ) }
    dend_13 { pt3dadd( -204.635, 291.421, -57.271, 0.15 ) }
    dend_13 { pt3dadd( -206.636, 295.166, -55.5184, 0.15 ) }
    dend_13 { pt3dadd( -206.839, 295.553, -55.3205, 0.81 ) }
    dend_13 { pt3dadd( -206.87, 295.61, -55.2886, 0.81 ) }
    dend_13 { pt3dadd( -207.037, 295.905, -55.1102, 0.81 ) }
    dend_13 { pt3dadd( -207.86, 297.243, -54.2416, 0.15 ) }
    dend_13 { pt3dadd( -207.978, 297.421, -54.1266, 0.15 ) }
    dend_13 { pt3dadd( -208.473, 298.097, -53.4734, 0.15 ) }
    dend_13 { pt3dadd( -209.068, 298.89, -52.7145, 0.15 ) }
    dend_13 { pt3dadd( -209.838, 299.894, -51.8057, 0.66 ) }
    dend_13 { pt3dadd( -209.875, 299.943, -51.7677, 0.66 ) }
    dend_13 { pt3dadd( -210.262, 300.477, -51.4751, 0.66 ) }
    dend_13 { pt3dadd( -210.416, 300.708, -51.36, 0.07 ) }
    dend_13 { pt3dadd( -210.48, 300.819, -51.2925, 0.15 ) }
    dend_13 { pt3dadd( -210.556, 300.986, -51.1863, 0.15 ) }
    dend_13 { pt3dadd( -210.915, 301.796, -50.8265, 0.15 ) }
    dend_13 { pt3dadd( -210.997, 301.974, -50.7475, 0.52 ) }
    dend_13 { pt3dadd( -211.28, 302.557, -50.4916, 0.52 ) }
    dend_13 { pt3dadd( -211.853, 303.663, -49.9512, 0.15 ) }
    dend_13 { pt3dadd( -211.959, 303.851, -49.8583, 0.15 ) }
    dend_13 { pt3dadd( -213.091, 305.72, -48.9382, 0.15 ) }
    dend_13 { pt3dadd( -213.342, 306.107, -48.7554, 0.81 ) }
    dend_13 { pt3dadd( -213.628, 306.529, -48.5906, 0.81 ) }
    dend_13 { pt3dadd( -214.089, 307.172, -48.4127, 0.22 ) }
    dend_13 { pt3dadd( -214.847, 308.204, -48.2511, 0.22 ) }
    dend_13 { pt3dadd( -215.115, 308.557, -48.2075, 1.25 ) }
    dend_13 { pt3dadd( -215.599, 309.166, -48.1615, 1.25 ) }
    dend_13 { pt3dadd( -216.034, 309.76, -48.1631, 0.15 ) }
    dend_13 { pt3dadd( -216.767, 310.834, -48.2671, 0.15 ) }
    dend_13 { pt3dadd( -216.842, 310.955, -48.2865, 0.37 ) }
    dend_13 { pt3dadd( -216.9, 311.055, -48.3026, 0.37 ) }
    dend_13 { pt3dadd( -217.307, 311.794, -48.4124, 0.37 ) }
    dend_13 { pt3dadd( -218.441, 314.038, -48.6482, 0.22 ) }
    dend_13 { pt3dadd( -218.786, 314.781, -48.6962, 1.11 ) }
    dend_13 { pt3dadd( -218.985, 315.263, -48.7174, 1.11 ) }
    dend_13 { pt3dadd( -219.177, 315.751, -48.7292, 0.15 ) }
    dend_13 { pt3dadd( -219.313, 316.126, -48.7307, 0.15 ) }
    dend_13 { pt3dadd( -219.988, 318.219, -48.6797, 0.15 ) }
    dend_13 { pt3dadd( -220.069, 318.502, -48.6583, 0.15 ) }
    dend_13 { pt3dadd( -220.456, 319.877, -48.5107, 0.15 ) }
    dend_13 { pt3dadd( -220.53, 320.137, -48.4856, 0.59 ) }
    dend_13 { pt3dadd( -220.574, 320.291, -48.4742, 0.59 ) }
    dend_13 { pt3dadd( -220.634, 320.521, -48.4571, 0.59 ) }
    dend_13 { pt3dadd( -220.648, 320.591, -48.4519, 0.59 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.38816, 29.0676, -1.56072, 0.44 ) }
    dend_11 { pt3dadd( -2.34962, 29.2773, 10.8978, 0.44 ) }
    dend_11 { pt3dadd( -2.3752, 29.2795, 10.98, 0.44 ) }
    dend_11 { pt3dadd( -2.57066, 29.3021, 11.5915, 0.44 ) }
    dend_11 { pt3dadd( -2.62729, 29.3113, 11.7652, 0.44 ) }
    dend_11 { pt3dadd( -2.85549, 29.3662, 12.4328, 0.44 ) }
    dend_11 { pt3dadd( -2.9525, 29.3963, 12.7007, 0.44 ) }
    dend_11 { pt3dadd( -3.19854, 29.6737, 12.7674, 0.44 ) }
    dend_11 { pt3dadd( -3.30739, 29.784, 12.7949, 0.44 ) }
    dend_11 { pt3dadd( -3.90391, 30.3605, 12.9487, 0.44 ) }
    dend_11 { pt3dadd( -4.8643, 31.206, 13.1691, 0.44 ) }
    dend_11 { pt3dadd( -5.243, 31.5158, 13.2495, 0.66 ) }
    dend_11 { pt3dadd( -5.9542, 32.0964, 13.4496, 0.44 ) }
    dend_11 { pt3dadd( -6.61253, 32.6213, 13.6613, 0.44 ) }
    dend_11 { pt3dadd( -6.69623, 32.69, 13.6907, 0.44 ) }
    dend_11 { pt3dadd( -7.02818, 32.9741, 13.814, 0.44 ) }
    dend_11 { pt3dadd( -7.11394, 33.0863, 13.852, 0.44 ) }
    dend_11 { pt3dadd( -7.56526, 34.1498, 14.4986, 0.44 ) }
    dend_11 { pt3dadd( -7.57871, 34.2146, 14.5496, 0.44 ) }
    dend_11 { pt3dadd( -7.61982, 34.5024, 14.7879, 0.52 ) }
    dend_11 { pt3dadd( -7.64888, 34.6777, 14.9337, 0.52 ) }
    dend_11 { pt3dadd( -7.74866, 35.14, 15.3123, 0.52 ) }
    dend_11 { pt3dadd( -8.05683, 36.1078, 16.0492, 0.52 ) }
    dend_11 { pt3dadd( -8.10329, 36.2089, 16.1109, 0.52 ) }
    dend_11 { pt3dadd( -8.35789, 36.7048, 16.3927, 0.52 ) }
    dend_11 { pt3dadd( -8.45108, 36.8577, 16.5121, 0.52 ) }
    dend_11 { pt3dadd( -8.64549, 37.1654, 16.7749, 0.52 ) }
    dend_11 { pt3dadd( -8.79163, 37.422, 16.9674, 0.88 ) }
    dend_11 { pt3dadd( -8.99731, 37.8984, 17.292, 0.88 ) }
    dend_11 { pt3dadd( -9.01792, 37.957, 17.3302, 0.88 ) }
    dend_11 { pt3dadd( -9.50429, 39.4617, 18.3583, 0.52 ) }
    dend_11 { pt3dadd( -9.61267, 39.8269, 18.6134, 0.44 ) }
    dend_11 { pt3dadd( -9.85809, 40.748, 19.2683, 0.44 ) }
    dend_11 { pt3dadd( -10.1882, 42.0896, 20.2273, 0.29 ) }
    dend_11 { pt3dadd( -10.3663, 42.9155, 20.8116, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 93/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.38816, 29.0676, -1.56072, 3.09 ) }
    dend_2 { pt3dadd( 1.66972, 30.7182, -1.59226, 3.09 ) }
    dend_2 { pt3dadd( 1.84866, 31.7672, -1.6123, 3.09 ) }
    dend_2 { pt3dadd( 2.1159, 33.3337, -1.64224, 3.09 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 97/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 31.3266, -38.2722, 11.9166, 0.66 ) }
    dend_38 { pt3dadd( 31.598, -38.1355, 12.3586, 0.66 ) }
    dend_38 { pt3dadd( 32.034, -38.0633, 13.0564, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_38 { pt3dadd( 32.0786, -38.0608, 13.1265, 0.52 ) }
    dend_38 { pt3dadd( 32.5011, -38.0718, 13.744, 0.52 ) }
    dend_38 { pt3dadd( 32.5558, -38.0746, 13.8217, 0.52 ) }
    dend_38 { pt3dadd( 33.1321, -38.2002, 14.7246, 0.81 ) }
    dend_38 { pt3dadd( 33.6199, -38.43, 15.5643, 0.96 ) }
    dend_38 { pt3dadd( 33.6659, -38.463, 15.6405, 0.96 ) }
    dend_38 { pt3dadd( 34.0324, -38.7147, 16.1721, 0.96 ) }
    dend_38 { pt3dadd( 34.0746, -38.7466, 16.2359, 0.96 ) }
    dend_38 { pt3dadd( 34.7938, -39.2587, 17.2785, 0.29 ) }
    dend_38 { pt3dadd( 34.8631, -39.3041, 17.3735, 0.29 ) }
    dend_38 { pt3dadd( 35.6703, -39.8261, 18.5136, 0.29 ) }
    dend_38 { pt3dadd( 36.3945, -40.2607, 19.5134, 0.29 ) }
    dend_38 { pt3dadd( 36.9953, -40.6, 20.3838, 0.81 ) }
    dend_38 { pt3dadd( 37.4441, -40.8072, 21.0181, 1.03 ) }
    dend_38 { pt3dadd( 37.7094, -40.8892, 21.3667, 1.33 ) }
    dend_38 { pt3dadd( 37.7582, -40.9017, 21.433, 1.33 ) }
    dend_38 { pt3dadd( 38.0071, -40.9465, 21.793, 1.33 ) }
    dend_38 { pt3dadd( 38.6181, -41.03, 22.6251, 1.11 ) }
    dend_38 { pt3dadd( 39.29, -41.079, 23.4412, 0.66 ) }
    dend_38 { pt3dadd( 39.9403, -41.1326, 24.3775, 0.66 ) }
    dend_38 { pt3dadd( 40.0462, -41.1433, 24.546, 1.03 ) }
    dend_38 { pt3dadd( 40.1388, -41.1528, 24.698, 1.03 ) }
    dend_38 { pt3dadd( 40.5878, -41.1939, 25.4393, 1.03 ) }
    dend_38 { pt3dadd( 40.682, -41.2011, 25.5905, 1.03 ) }
    dend_38 { pt3dadd( 41.5081, -41.2775, 26.9588, 0.66 ) }
    dend_38 { pt3dadd( 41.5526, -41.282, 27.0289, 0.66 ) }
    dend_38 { pt3dadd( 42.1576, -41.3907, 28.1059, 0.66 ) }
    dend_38 { pt3dadd( 42.4055, -41.4434, 28.5711, 0.81 ) }
    dend_38 { pt3dadd( 42.4938, -41.4646, 28.7246, 0.81 ) }
    dend_38 { pt3dadd( 43.0004, -41.585, 29.5392, 0.81 ) }
    dend_38 { pt3dadd( 43.3385, -41.6725, 30.035, 0.81 ) }
    dend_38 { pt3dadd( 44.285, -41.9724, 31.402, 0.81 ) }
    dend_38 { pt3dadd( 44.7757, -42.1595, 32.1127, 0.52 ) }
    dend_38 { pt3dadd( 45.7256, -42.5457, 33.4509, 0.52 ) }
    dend_38 { pt3dadd( 45.8046, -42.5785, 33.5547, 0.52 ) }
    dend_38 { pt3dadd( 46.3153, -42.8107, 34.1782, 0.52 ) }
    dend_38 { pt3dadd( 47.1401, -43.1946, 35.0685, 0.52 ) }
    dend_38 { pt3dadd( 47.2307, -43.2354, 35.1458, 0.88 ) }
    dend_38 { pt3dadd( 47.3485, -43.2967, 35.2447, 0.88 ) }
    dend_38 { pt3dadd( 47.9404, -43.6631, 35.6999, 0.88 ) }
    dend_38 { pt3dadd( 48.4891, -44.0186, 36.0923, 0.44 ) }
    dend_38 { pt3dadd( 48.5426, -44.0608, 36.1385, 0.44 ) }
    dend_38 { pt3dadd( 49.2453, -44.687, 36.8843, 0.44 ) }
    dend_38 { pt3dadd( 49.3438, -44.7766, 37.0007, 0.44 ) }
    dend_38 { pt3dadd( 50.0802, -45.428, 37.9376, 0.44 ) }
    dend_38 { pt3dadd( 50.1186, -45.4654, 38.0008, 0.44 ) }
    dend_38 { pt3dadd( 50.8609, -46.2205, 39.4694, 0.74 ) }
    dend_38 { pt3dadd( 51.1552, -46.5209, 40.1497, 0.74 ) }
    dend_38 { pt3dadd( 51.2354, -46.6062, 40.3835, 0.74 ) }
    dend_38 { pt3dadd( 51.3765, -46.7979, 41.0434, 0.74 ) }
    dend_38 { pt3dadd( 51.5337, -47.094, 42.4168, 0.74 ) }
    dend_38 { pt3dadd( 51.5501, -47.1243, 42.5945, 0.74 ) }
    dend_38 { pt3dadd( 51.5899, -47.1953, 43.2359, 0.74 ) }
    dend_38 { pt3dadd( 51.5941, -47.2029, 43.353, 0.74 ) }
    dend_38 { pt3dadd( 51.7607, -47.315, 45.2737, 1.03 ) }
    dend_38 { pt3dadd( 51.7724, -47.3195, 45.3678, 1.03 ) }
    dend_38 { pt3dadd( 51.9135, -47.3425, 46.0347, 1.03 ) }
    dend_38 { pt3dadd( 52.3185, -47.4258, 47.5812, 0.37 ) }
    dend_38 { pt3dadd( 52.5825, -47.5068, 48.3421, 0.37 ) }
    dend_38 { pt3dadd( 53.0735, -47.6671, 49.3563, 0.29 ) }
    dend_38 { pt3dadd( 53.1131, -47.685, 49.4129, 0.29 ) }
    dend_38 { pt3dadd( 53.3106, -47.8362, 49.6634, 0.66 ) }
    dend_38 { pt3dadd( 53.4729, -48.0271, 49.85, 0.66 ) }
    dend_38 { pt3dadd( 53.8451, -48.5396, 50.2225, 0.88 ) }
    dend_38 { pt3dadd( 53.9031, -48.63, 50.2841, 0.88 ) }
    dend_38 { pt3dadd( 54.5076, -49.5526, 50.9953, 0.88 ) }
    dend_38 { pt3dadd( 54.9578, -50.1963, 51.5427, 0.88 ) }
    dend_38 { pt3dadd( 55.5595, -50.9691, 52.3073, 0.37 ) }
    dend_38 { pt3dadd( 55.8433, -51.2516, 52.6821, 0.37 ) }
    dend_38 { pt3dadd( 55.9419, -51.3161, 52.8153, 0.37 ) }
    dend_38 { pt3dadd( 56.509, -51.4458, 53.5376, 0.37 ) }
    dend_38 { pt3dadd( 56.5623, -51.4355, 53.6004, 0.37 ) }
    dend_38 { pt3dadd( 56.9203, -51.3243, 54.106, 0.37 ) }
    dend_38 { pt3dadd( 57.3526, -51.206, 54.7482, 0.74 ) }
    dend_38 { pt3dadd( 57.425, -51.2009, 54.8612, 0.74 ) }
    dend_38 { pt3dadd( 57.5135, -51.465, 55.6401, 0.74 ) }
    dend_38 { pt3dadd( 57.5008, -51.4983, 55.7153, 0.74 ) }
    dend_38 { pt3dadd( 57.1226, -52.2265, 57.3004, 0.74 ) }
    dend_38 { pt3dadd( 57.0131, -52.4444, 57.7558, 0.96 ) }
    dend_38 { pt3dadd( 56.8527, -52.7641, 58.4004, 0.96 ) }
    dend_38 { pt3dadd( 55.8097, -55.0589, 62.9026, 1.11 ) }
    dend_38 { pt3dadd( 55.115, -56.6299, 65.9022, 0.81 ) }
    dend_38 { pt3dadd( 55.0937, -56.6841, 66.0044, 0.81 ) }
    dend_38 { pt3dadd( 54.8476, -57.3628, 67.2795, 0.81 ) }
    dend_38 { pt3dadd( 54.8374, -57.4068, 67.3631, 0.81 ) }
    dend_38 { pt3dadd( 54.8659, -57.9094, 68.3283, 0.81 ) }
    dend_38 { pt3dadd( 54.9025, -57.9545, 68.4031, 0.81 ) }
    dend_38 { pt3dadd( 56.0505, -58.9012, 69.8712, 0.52 ) }
    dend_38 { pt3dadd( 56.0804, -58.952, 69.9632, 0.52 ) }
    dend_38 { pt3dadd( 56.119, -59.3907, 71.0121, 0.52 ) }
    dend_38 { pt3dadd( 56.0425, -59.6689, 71.8477, 0.52 ) }
    dend_38 { pt3dadd( 55.9709, -59.7891, 72.2897, 0.88 ) }
    dend_38 { pt3dadd( 55.8608, -59.9328, 72.8883, 1.4 ) }
    dend_38 { pt3dadd( 54.9463, -60.8897, 77.4821, 0.37 ) }
    dend_38 { pt3dadd( 54.7606, -61.1156, 78.5019, 0.37 ) }
    dend_38 { pt3dadd( 54.7275, -61.1404, 78.6212, 0.37 ) }
    dend_38 { pt3dadd( 54.3938, -61.3533, 79.5636, 0.37 ) }
    dend_38 { pt3dadd( 54.2144, -61.4623, 80.0128, 0.37 ) }
    dend_38 { pt3dadd( 53.8336, -61.6756, 80.8877, 0.37 ) }
    dend_38 { pt3dadd( 54.3612, -61.8847, 81.219, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 0/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 31.3266, -38.2722, 11.9166, 0.59 ) }
    dend_37 { pt3dadd( 32.186, -38.6798, 12.1528, 0.59 ) }
    dend_37 { pt3dadd( 32.9168, -39.0589, 12.3572, 0.59 ) }
    dend_37 { pt3dadd( 34.154, -39.7264, 12.7087, 0.59 ) }
    dend_37 { pt3dadd( 34.5445, -39.9419, 12.825, 0.96 ) }
    dend_37 { pt3dadd( 34.6413, -39.9944, 12.8526, 0.96 ) }
    dend_37 { pt3dadd( 35.3084, -40.3546, 13.0421, 0.96 ) }
    dend_37 { pt3dadd( 35.6325, -40.5519, 13.154, 1.18 ) }
    dend_37 { pt3dadd( 35.6812, -40.5834, 13.1709, 1.18 ) }
    dend_37 { pt3dadd( 36.1173, -40.8677, 13.3308, 1.18 ) }
    dend_37 { pt3dadd( 36.7206, -41.2528, 13.5636, 1.33 ) }
    dend_37 { pt3dadd( 37.3015, -41.6225, 13.7862, 1.25 ) }
    dend_37 { pt3dadd( 37.8192, -41.9489, 13.9868, 0.37 ) }
    dend_37 { pt3dadd( 38.7341, -42.5365, 14.3463, 0.37 ) }
    dend_37 { pt3dadd( 38.8237, -42.5962, 14.3818, 0.37 ) }
    dend_37 { pt3dadd( 39.034, -42.7486, 14.4657, 0.81 ) }
    dend_37 { pt3dadd( 39.0776, -42.7846, 14.4866, 0.81 ) }
    dend_37 { pt3dadd( 39.6048, -43.242, 14.7623, 0.81 ) }
    dend_37 { pt3dadd( 40.0201, -43.6044, 14.994, 0.37 ) }
    dend_37 { pt3dadd( 40.0556, -43.6365, 15.0162, 0.37 ) }
    dend_37 { pt3dadd( 40.6308, -44.1576, 15.3931, 0.37 ) }
    dend_37 { pt3dadd( 41.0326, -44.5328, 15.6659, 1.11 ) }
    dend_37 { pt3dadd( 41.3484, -44.8188, 15.8764, 1.11 ) }
    dend_37 { pt3dadd( 41.5004, -44.9582, 15.9842, 1.11 ) }
    dend_37 { pt3dadd( 41.6804, -45.1201, 16.1149, 0.74 ) }
    dend_37 { pt3dadd( 41.9318, -45.3311, 16.2905, 0.52 ) }
    dend_37 { pt3dadd( 42.2348, -45.5722, 16.4886, 0.44 ) }
    dend_37 { pt3dadd( 42.7536, -45.9729, 16.7956, 0.44 ) }
    dend_37 { pt3dadd( 43.1966, -46.3253, 17.0546, 0.22 ) }
    dend_37 { pt3dadd( 43.2726, -46.3841, 17.0988, 0.22 ) }
    dend_37 { pt3dadd( 43.8863, -46.8336, 17.477, 0.22 ) }
    dend_37 { pt3dadd( 44.2602, -47.09, 17.7126, 0.81 ) }
    dend_37 { pt3dadd( 44.2996, -47.1152, 17.7378, 0.81 ) }
    dend_37 { pt3dadd( 44.7483, -47.3771, 18.0241, 1.18 ) }
    dend_37 { pt3dadd( 45.1533, -47.5924, 18.275, 1.4 ) }
    dend_37 { pt3dadd( 45.6483, -47.8586, 18.6395, 0.29 ) }
    dend_37 { pt3dadd( 46.3209, -48.2385, 19.1966, 0.29 ) }
    dend_37 { pt3dadd( 46.3628, -48.263, 19.2336, 0.29 ) }
    dend_37 { pt3dadd( 46.62, -48.428, 19.4743, 0.59 ) }
    dend_37 { pt3dadd( 46.9154, -48.6598, 19.8064, 0.59 ) }
    dend_37 { pt3dadd( 47.4207, -49.1424, 20.4515, 0.22 ) }
    dend_37 { pt3dadd( 47.9563, -49.7537, 21.2091, 0.22 ) }
    dend_37 { pt3dadd( 47.9839, -49.789, 21.2501, 0.22 ) }
    dend_37 { pt3dadd( 48.2278, -50.1119, 21.6052, 0.22 ) }
    dend_37 { pt3dadd( 48.5964, -50.6736, 22.2018, 0.88 ) }
    dend_37 { pt3dadd( 48.7704, -50.9638, 22.506, 1.18 ) }
    dend_37 { pt3dadd( 48.8386, -51.0627, 22.6106, 1.18 ) }
    dend_37 { pt3dadd( 49.2029, -51.558, 23.2068, 1.18 ) }
    dend_37 { pt3dadd( 49.2267, -51.5867, 23.2448, 1.18 ) }
    dend_37 { pt3dadd( 49.672, -52.018, 23.9017, 0.22 ) }
    dend_37 { pt3dadd( 49.7009, -52.0406, 23.9406, 0.22 ) }
    dend_37 { pt3dadd( 50.2799, -52.4393, 24.7263, 0.22 ) }
    dend_37 { pt3dadd( 50.3113, -52.4569, 24.7661, 0.22 ) }
    dend_37 { pt3dadd( 50.7695, -52.6774, 25.3188, 0.81 ) }
    dend_37 { pt3dadd( 51.071, -52.8069, 25.6296, 1.11 ) }
    dend_37 { pt3dadd( 51.255, -52.8773, 25.7849, 1.55 ) }
    dend_37 { pt3dadd( 51.6661, -53.032, 26.0555, 1.55 ) }
    dend_37 { pt3dadd( 52.3024, -53.2681, 26.3346, 0.29 ) }
    dend_37 { pt3dadd( 52.3574, -53.2876, 26.3523, 0.29 ) }
    dend_37 { pt3dadd( 53.0488, -53.5404, 26.5045, 0.29 ) }
    dend_37 { pt3dadd( 53.7336, -53.8153, 26.6193, 0.29 ) }
    dend_37 { pt3dadd( 54.769, -54.2518, 26.751, 0.29 ) }
    dend_37 { pt3dadd( 55.6234, -54.6312, 26.7997, 0.29 ) }
    dend_37 { pt3dadd( 55.9241, -54.7726, 26.8013, 1.11 ) }
    dend_37 { pt3dadd( 56.4621, -55.0352, 26.8005, 1.25 ) }
    dend_37 { pt3dadd( 56.7487, -55.1869, 26.7951, 1.4 ) }
    dend_37 { pt3dadd( 56.8005, -55.2175, 26.7954, 1.4 ) }
    dend_37 { pt3dadd( 57.5178, -55.7002, 26.8593, 1.4 ) }
    dend_37 { pt3dadd( 57.8959, -55.9693, 26.9118, 1.4 ) }
    dend_37 { pt3dadd( 58.3456, -56.3084, 26.9798, 0.96 ) }
    dend_37 { pt3dadd( 58.6503, -56.56, 27.0329, 0.66 ) }
    dend_37 { pt3dadd( 58.9634, -56.8422, 27.0847, 0.66 ) }
    dend_37 { pt3dadd( 59.0004, -56.8783, 27.0917, 0.66 ) }
    dend_37 { pt3dadd( 59.2702, -57.1571, 27.152, 0.29 ) }
    dend_37 { pt3dadd( 59.933, -57.8514, 27.296, 0.29 ) }
    dend_37 { pt3dadd( 60.5971, -58.5521, 27.4411, 0.29 ) }
    dend_37 { pt3dadd( 61.3745, -59.3906, 27.709, 0.29 ) }
    dend_37 { pt3dadd( 61.765, -59.8042, 27.8853, 1.4 ) }
    dend_37 { pt3dadd( 61.9765, -60.0207, 27.9985, 1.99 ) }
    dend_37 { pt3dadd( 62.3612, -60.4037, 28.2338, 2.58 ) }
    dend_37 { pt3dadd( 62.8673, -60.8887, 28.5853, 2.87 ) }
    dend_37 { pt3dadd( 63.921, -61.8483, 29.4001, 0.52 ) }
    dend_37 { pt3dadd( 64.4922, -62.3565, 29.884, 0.52 ) }
    dend_37 { pt3dadd( 64.8492, -62.672, 30.197, 0.81 ) }
    dend_37 { pt3dadd( 65.1505, -62.9318, 30.4618, 0.81 ) }
    dend_37 { pt3dadd( 65.2022, -62.9754, 30.5057, 0.81 ) }
    dend_37 { pt3dadd( 65.4263, -63.166, 30.6956, 0.81 ) }
    dend_37 { pt3dadd( 65.4613, -63.1952, 30.7228, 0.81 ) }
    dend_37 { pt3dadd( 65.9726, -63.6451, 31.1468, 0.37 ) }
    dend_37 { pt3dadd( 66.62, -64.2202, 31.6942, 0.37 ) }
    dend_37 { pt3dadd( 67.4724, -65.0298, 32.4576, 0.37 ) }
    dend_37 { pt3dadd( 67.7318, -65.2942, 32.6897, 1.11 ) }
    dend_37 { pt3dadd( 68.0045, -65.6072, 32.9194, 1.4 ) }
    dend_37 { pt3dadd( 68.1168, -65.7472, 33.0076, 1.4 ) }
    dend_37 { pt3dadd( 68.3492, -66.0662, 33.166, 1.03 ) }
    dend_37 { pt3dadd( 68.7254, -66.666, 33.3985, 0.22 ) }
    dend_37 { pt3dadd( 69.0412, -67.2571, 33.5875, 0.22 ) }
    dend_37 { pt3dadd( 69.4851, -68.1345, 33.8422, 0.22 ) }
    dend_37 { pt3dadd( 69.507, -68.1795, 33.8558, 0.22 ) }
    dend_37 { pt3dadd( 69.7874, -68.7489, 34.0381, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_37 { pt3dadd( 69.8103, -68.793, 34.0532, 0.22 ) }
    dend_37 { pt3dadd( 70.1014, -69.2942, 34.2608, 1.11 ) }
    dend_37 { pt3dadd( 70.3518, -69.7178, 34.4952, 1.84 ) }
    dend_37 { pt3dadd( 70.5525, -70.0061, 34.6848, 2.06 ) }
    dend_37 { pt3dadd( 70.5803, -70.0441, 34.7083, 2.06 ) }
    dend_37 { pt3dadd( 70.7622, -70.2741, 34.8437, 2.06 ) }
    dend_37 { pt3dadd( 71.2057, -70.7891, 35.1186, 0.22 ) }
    dend_37 { pt3dadd( 71.2388, -70.8262, 35.135, 0.22 ) }
    dend_37 { pt3dadd( 71.9222, -71.6103, 35.4457, 0.22 ) }
    dend_37 { pt3dadd( 72.0603, -71.7762, 35.4995, 0.81 ) }
    dend_37 { pt3dadd( 72.3568, -72.1331, 35.6029, 1.25 ) }
    dend_37 { pt3dadd( 72.7149, -72.5752, 35.7168, 1.55 ) }
    dend_37 { pt3dadd( 72.9913, -72.9089, 35.7968, 1.25 ) }
    dend_37 { pt3dadd( 73.3326, -73.3166, 35.903, 0.44 ) }
    dend_37 { pt3dadd( 73.8588, -73.9305, 36.0804, 0.44 ) }
    dend_37 { pt3dadd( 73.8925, -73.9685, 36.0925, 0.44 ) }
    dend_37 { pt3dadd( 74.1387, -74.2357, 36.1862, 0.22 ) }
    dend_37 { pt3dadd( 74.9672, -75.0928, 36.521, 0.22 ) }
    dend_37 { pt3dadd( 75.3265, -75.4323, 36.6782, 0.59 ) }
    dend_37 { pt3dadd( 75.616, -75.6849, 36.8117, 1.03 ) }
    dend_37 { pt3dadd( 75.6945, -75.7452, 36.8485, 1.03 ) }
    dend_37 { pt3dadd( 75.984, -75.9516, 36.9779, 1.03 ) }
    dend_37 { pt3dadd( 76.0252, -75.9801, 36.9947, 1.03 ) }
    dend_37 { pt3dadd( 76.2407, -76.1317, 37.0794, 1.03 ) }
    dend_37 { pt3dadd( 76.3418, -76.2023, 37.1144, 1.03 ) }
    dend_37 { pt3dadd( 76.8719, -76.5733, 37.2815, 0.29 ) }
    dend_37 { pt3dadd( 77.6661, -77.1353, 37.5141, 0.29 ) }
    dend_37 { pt3dadd( 78.3009, -77.5843, 37.6916, 0.29 ) }
    dend_37 { pt3dadd( 78.3416, -77.615, 37.7047, 0.29 ) }
    dend_37 { pt3dadd( 78.6352, -77.8683, 37.8093, 0.66 ) }
    dend_37 { pt3dadd( 78.9387, -78.1505, 37.9282, 1.03 ) }
    dend_37 { pt3dadd( 78.9727, -78.1869, 37.9446, 1.03 ) }
    dend_37 { pt3dadd( 79.1925, -78.4543, 38.0696, 1.03 ) }
    dend_37 { pt3dadd( 79.6512, -79.0568, 38.3649, 0.22 ) }
    dend_37 { pt3dadd( 80.3962, -80.0937, 38.8645, 0.22 ) }
    dend_37 { pt3dadd( 80.4238, -80.1345, 38.8819, 0.22 ) }
    dend_37 { pt3dadd( 80.65, -80.4828, 39.005, 0.96 ) }
    dend_37 { pt3dadd( 80.8897, -80.8611, 39.1187, 1.47 ) }
    dend_37 { pt3dadd( 81.0842, -81.1976, 39.1987, 1.92 ) }
    dend_37 { pt3dadd( 81.2843, -81.561, 39.2646, 1.92 ) }
    dend_37 { pt3dadd( 81.6144, -82.2091, 39.3629, 0.22 ) }
    dend_37 { pt3dadd( 82.1956, -83.3745, 39.5156, 0.22 ) }
    dend_37 { pt3dadd( 82.2282, -83.4394, 39.5228, 0.22 ) }
    dend_37 { pt3dadd( 82.7675, -84.5805, 39.6552, 0.22 ) }
    dend_37 { pt3dadd( 82.9154, -84.8868, 39.6961, 1.11 ) }
    dend_37 { pt3dadd( 83.0617, -85.1694, 39.7418, 1.4 ) }
    dend_37 { pt3dadd( 83.0898, -85.2205, 39.7515, 1.4 ) }
    dend_37 { pt3dadd( 83.3216, -85.6113, 39.8239, 1.4 ) }
    dend_37 { pt3dadd( 83.6768, -86.1907, 39.9545, 0.22 ) }
    dend_37 { pt3dadd( 84.3434, -87.2034, 40.2267, 0.22 ) }
    dend_37 { pt3dadd( 84.8398, -87.9496, 40.4682, 0.22 ) }
    dend_37 { pt3dadd( 84.8684, -87.9907, 40.483, 0.22 ) }
    dend_37 { pt3dadd( 85.0208, -88.2043, 40.5647, 1.4 ) }
    dend_37 { pt3dadd( 85.4777, -88.8541, 40.844, 1.84 ) }
    dend_37 { pt3dadd( 85.8089, -89.325, 41.0694, 1.84 ) }
    dend_37 { pt3dadd( 86.4403, -90.2263, 41.5504, 0.29 ) }
    dend_37 { pt3dadd( 87.1111, -91.1786, 42.0868, 0.29 ) }
    dend_37 { pt3dadd( 87.1377, -91.2172, 42.1104, 0.29 ) }
    dend_37 { pt3dadd( 87.512, -91.8056, 42.4769, 0.29 ) }
    dend_37 { pt3dadd( 87.5322, -91.8398, 42.4981, 0.29 ) }
    dend_37 { pt3dadd( 87.9524, -92.6302, 42.9743, 0.29 ) }
    dend_37 { pt3dadd( 87.9831, -92.6933, 43.0118, 0.29 ) }
    dend_37 { pt3dadd( 88.5342, -93.9535, 43.7381, 0.22 ) }
    dend_37 { pt3dadd( 88.87, -94.7244, 44.1594, 0.22 ) }
    dend_37 { pt3dadd( 88.9154, -94.827, 44.211, 0.22 ) }
    dend_37 { pt3dadd( 89.2927, -95.6894, 44.6278, 0.22 ) }
    dend_37 { pt3dadd( 89.3114, -95.7336, 44.6481, 0.22 ) }
    dend_37 { pt3dadd( 89.677, -96.5618, 45.0075, 0.22 ) }
    dend_37 { pt3dadd( 89.7426, -96.6966, 45.0558, 0.52 ) }
    dend_37 { pt3dadd( 89.942, -97.0617, 45.1997, 0.52 ) }
    dend_37 { pt3dadd( 89.9645, -97.1052, 45.2173, 0.52 ) }
    dend_37 { pt3dadd( 90.0584, -97.3028, 45.3103, 0.52 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 72/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 9.17859, -46.2382, 2.49701, 1.11 ) }
    dend_33 { pt3dadd( 8.48312, -47.0127, 3.71532, 1.11 ) }
    dend_33 { pt3dadd( 7.84402, -47.9699, 4.95213, 0.52 ) }
    dend_33 { pt3dadd( 7.81795, -48.0183, 5.01044, 0.52 ) }
    dend_33 { pt3dadd( 7.52422, -48.6292, 5.72515, 0.52 ) }
    dend_33 { pt3dadd( 6.87602, -50.1608, 7.42142, 0.52 ) }
    dend_33 { pt3dadd( 6.51466, -51.1804, 8.47752, 0.52 ) }
    dend_33 { pt3dadd( 6.24231, -52.323, 9.50154, 0.74 ) }
    dend_33 { pt3dadd( 6.09309, -53.3884, 10.3136, 0.81 ) }
    dend_33 { pt3dadd( 6.0884, -53.4508, 10.362, 0.81 ) }
    dend_33 { pt3dadd( 6.08129, -53.9687, 10.7672, 0.88 ) }
    dend_33 { pt3dadd( 6.09726, -54.5874, 11.2589, 0.44 ) }
    dend_33 { pt3dadd( 6.05876, -55.0494, 11.6783, 0.29 ) }
    dend_33 { pt3dadd( 6.01685, -55.3073, 11.967, 0.29 ) }
    dend_33 { pt3dadd( 5.77789, -56.5251, 13.3841, 0.44 ) }
    dend_33 { pt3dadd( 5.66274, -57.12, 14.078, 0.44 ) }
    dend_33 { pt3dadd( 5.42193, -58.2973, 15.514, 0.74 ) }
    dend_33 { pt3dadd( 5.33127, -58.997, 16.4084, 0.74 ) }
    dend_33 { pt3dadd( 5.31599, -59.7514, 17.3914, 0.74 ) }
    dend_33 { pt3dadd( 5.32319, -59.8139, 17.4692, 0.74 ) }
    dend_33 { pt3dadd( 5.44488, -60.2907, 17.9614, 0.74 ) }
    dend_33 { pt3dadd( 5.46337, -60.3461, 18.0156, 0.74 ) }
    dend_33 { pt3dadd( 5.88206, -61.4668, 19.0543, 0.44 ) }
    dend_33 { pt3dadd( 6.04609, -62.0606, 19.7756, 0.74 ) }
    dend_33 { pt3dadd( 6.04818, -62.1002, 19.8337, 0.74 ) }
    dend_33 { pt3dadd( 5.96182, -62.4425, 20.4857, 0.74 ) }
    dend_33 { pt3dadd( 5.93371, -62.5012, 20.6115, 0.74 ) }
    dend_33 { pt3dadd( 5.85852, -62.6637, 20.9399, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_33 { pt3dadd( 5.37526, -63.6478, 22.8469, 0.74 ) }
    dend_33 { pt3dadd( 5.08237, -64.3716, 24.1482, 0.74 ) }
    dend_33 { pt3dadd( 4.77002, -65.2706, 25.6991, 1.11 ) }
    dend_33 { pt3dadd( 4.54415, -66.0808, 27.0469, 0.29 ) }
    dend_33 { pt3dadd( 4.40765, -66.7594, 28.0896, 0.29 ) }
    dend_33 { pt3dadd( 4.39567, -66.8944, 28.2633, 0.29 ) }
    dend_33 { pt3dadd( 4.45271, -67.5689, 28.8144, 0.29 ) }
    dend_33 { pt3dadd( 4.46386, -67.629, 28.8457, 0.29 ) }
    dend_33 { pt3dadd( 4.65181, -68.4655, 29.075, 0.74 ) }
    dend_33 { pt3dadd( 4.66484, -68.5314, 29.0856, 0.74 ) }
    dend_33 { pt3dadd( 4.80206, -69.2601, 29.3297, 0.74 ) }
    dend_33 { pt3dadd( 5.02559, -69.69, 29.6665, 0.96 ) }
    dend_33 { pt3dadd( 5.06854, -69.7206, 29.7136, 0.96 ) }
    dend_33 { pt3dadd( 5.33798, -69.9024, 30.1219, 0.96 ) }
    dend_33 { pt3dadd( 5.47011, -69.9849, 30.3429, 0.96 ) }
    dend_33 { pt3dadd( 6.3777, -70.641, 31.9435, 0.37 ) }
    dend_33 { pt3dadd( 7.01192, -71.1195, 33.1074, 0.37 ) }
    dend_33 { pt3dadd( 7.54627, -71.5865, 34.1884, 0.37 ) }
    dend_33 { pt3dadd( 8.8377, -73.0157, 37.1746, 0.37 ) }
    dend_33 { pt3dadd( 8.86917, -73.0603, 37.2597, 0.37 ) }
    dend_33 { pt3dadd( 9.11017, -73.7246, 38.3873, 0.37 ) }
    dend_33 { pt3dadd( 9.11271, -73.7708, 38.4529, 0.37 ) }
    dend_33 { pt3dadd( 9.00057, -74.5963, 39.5548, 0.96 ) }
    dend_33 { pt3dadd( 8.86197, -75.0326, 40.1236, 0.96 ) }
    dend_33 { pt3dadd( 8.83916, -75.083, 40.1815, 0.96 ) }
    dend_33 { pt3dadd( 8.13866, -76.3798, 41.9018, 0.74 ) }
    dend_33 { pt3dadd( 8.09998, -76.428, 41.9897, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 27/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.17859, -46.2382, 2.49701, 1.25 ) }
    dend_32 { pt3dadd( 10.1873, -49.0094, 2.69783, 1.25 ) }
    dend_32 { pt3dadd( 10.2143, -49.0918, 2.70012, 1.25 ) }
    dend_32 { pt3dadd( 10.9365, -51.3899, 2.72676, 1.03 ) }
    dend_32 { pt3dadd( 10.9641, -51.4721, 2.72475, 1.03 ) }
    dend_32 { pt3dadd( 11.8389, -53.9415, 2.59407, 1.03 ) }
    dend_32 { pt3dadd( 11.9021, -54.1162, 2.5827, 1.03 ) }
    dend_32 { pt3dadd( 12.7396, -56.32, 2.28095, 1.03 ) }
    dend_32 { pt3dadd( 12.7768, -56.4113, 2.26715, 1.03 ) }
    dend_32 { pt3dadd( 14.1371, -59.5501, 1.66189, 1.03 ) }
    dend_32 { pt3dadd( 15.0068, -61.477, 1.22756, 1.11 ) }
    dend_32 { pt3dadd( 15.0484, -61.5649, 1.20517, 1.11 ) }
    dend_32 { pt3dadd( 16.8052, -65.2358, 0.213007, 1.11 ) }
    dend_32 { pt3dadd( 16.9571, -65.5521, 0.123252, 1.11 ) }
    dend_32 { pt3dadd( 17.9845, -67.7378, -0.507389, 0.96 ) }
    dend_32 { pt3dadd( 19.1164, -70.2076, -1.22802, 0.96 ) }
    dend_32 { pt3dadd( 19.5398, -71.1461, -1.49537, 1.25 ) }
    dend_32 { pt3dadd( 19.5747, -71.2233, -1.51633, 1.25 ) }
    dend_32 { pt3dadd( 20.4816, -73.2619, -2.0284, 1.25 ) }
    dend_32 { pt3dadd( 20.5604, -73.427, -2.06793, 1.25 ) }
    dend_32 { pt3dadd( 21.9703, -76.2297, -2.65595, 1.33 ) }
    dend_32 { pt3dadd( 22.0099, -76.3059, -2.6723, 1.33 ) }
    dend_32 { pt3dadd( 23.0059, -78.1883, -3.08393, 1.55 ) }
    dend_32 { pt3dadd( 23.0512, -78.2746, -3.10637, 1.55 ) }
    dend_32 { pt3dadd( 23.7188, -79.5463, -3.4951, 1.69 ) }
    dend_32 { pt3dadd( 23.7716, -79.6527, -3.53009, 1.69 ) }
    dend_32 { pt3dadd( 24.2868, -80.7868, -3.93115, 1.69 ) }
    dend_32 { pt3dadd( 24.3573, -80.9495, -3.99218, 1.69 ) }
    dend_32 { pt3dadd( 25.002, -82.5396, -4.61214, 1.11 ) }
    dend_32 { pt3dadd( 25.0344, -82.6287, -4.64305, 1.11 ) }
    dend_32 { pt3dadd( 25.8147, -84.9489, -5.40131, 1.03 ) }
    dend_32 { pt3dadd( 25.8674, -85.1179, -5.46117, 1.03 ) }
    dend_32 { pt3dadd( 26.5124, -87.6959, -6.57481, 1.03 ) }
    dend_32 { pt3dadd( 26.529, -87.774, -6.61022, 1.03 ) }
    dend_32 { pt3dadd( 27.081, -90.7819, -8.00531, 1.03 ) }
    dend_32 { pt3dadd( 27.0978, -90.8848, -8.05366, 1.03 ) }
    dend_32 { pt3dadd( 27.4267, -93.2317, -9.19593, 1.03 ) }
    dend_32 { pt3dadd( 27.7879, -95.6316, -10.3207, 1.03 ) }
    dend_32 { pt3dadd( 28.182, -98.2406, -11.5489, 1.03 ) }
    dend_32 { pt3dadd( 28.1982, -98.3184, -11.585, 1.03 ) }
    dend_32 { pt3dadd( 28.7124, -100.209, -12.4451, 1.03 ) }
    dend_32 { pt3dadd( 28.7668, -100.375, -12.5132, 1.03 ) }
    dend_32 { pt3dadd( 29.6333, -102.538, -13.2892, 1.03 ) }
    dend_32 { pt3dadd( 30.5328, -104.469, -13.9276, 0.81 ) }
    dend_32 { pt3dadd( 31.807, -107.004, -14.8364, 0.66 ) }
    dend_32 { pt3dadd( 32.3558, -108.053, -15.2217, 1.25 ) }
    dend_32 { pt3dadd( 32.8479, -108.923, -15.5567, 1.55 ) }
    dend_32 { pt3dadd( 33.1569, -109.446, -15.7561, 1.55 ) }
    dend_32 { pt3dadd( 33.2544, -109.597, -15.8116, 1.55 ) }
    dend_32 { pt3dadd( 33.8844, -110.492, -16.0812, 1.11 ) }
    dend_32 { pt3dadd( 33.9378, -110.574, -16.1039, 1.11 ) }
    dend_32 { pt3dadd( 34.6044, -111.656, -16.385, 0.88 ) }
    dend_32 { pt3dadd( 34.6545, -111.74, -16.406, 0.88 ) }
    dend_32 { pt3dadd( 35.4925, -113.213, -16.7558, 0.81 ) }
    dend_32 { pt3dadd( 35.5897, -113.391, -16.7962, 0.81 ) }
    dend_32 { pt3dadd( 36.1475, -114.449, -17.0266, 0.81 ) }
    dend_32 { pt3dadd( 36.2297, -114.614, -17.0602, 0.81 ) }
    dend_32 { pt3dadd( 36.6545, -115.547, -17.2317, 1.18 ) }
    dend_32 { pt3dadd( 36.7211, -115.704, -17.2681, 1.18 ) }
    dend_32 { pt3dadd( 37.1184, -116.746, -17.5384, 1.18 ) }
    dend_32 { pt3dadd( 37.1464, -116.826, -17.5597, 1.18 ) }
    dend_32 { pt3dadd( 37.5273, -117.996, -17.8636, 1.18 ) }
    dend_32 { pt3dadd( 37.6045, -118.25, -17.927, 1.18 ) }
    dend_32 { pt3dadd( 38.0744, -119.868, -18.3003, 1.18 ) }
    dend_32 { pt3dadd( 38.5644, -121.514, -18.6705, 1.03 ) }
    dend_32 { pt3dadd( 38.6149, -121.688, -18.7149, 1.03 ) }
    dend_32 { pt3dadd( 39.1411, -123.475, -19.205, 0.74 ) }
    dend_32 { pt3dadd( 39.1766, -123.588, -19.2385, 0.74 ) }
    dend_32 { pt3dadd( 39.858, -125.64, -19.8649, 0.74 ) }
    dend_32 { pt3dadd( 39.923, -125.822, -19.9204, 0.74 ) }
    dend_32 { pt3dadd( 40.3462, -127.0, -20.3549, 1.18 ) }
    dend_32 { pt3dadd( 40.6839, -127.988, -20.7352, 1.62 ) }
    dend_32 { pt3dadd( 40.8418, -128.529, -20.9641, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_32 { pt3dadd( 40.8648, -128.618, -21.0024, 1.84 ) }
    dend_32 { pt3dadd( 41.0645, -129.469, -21.3541, 1.69 ) }
    dend_32 { pt3dadd( 41.406, -130.987, -21.9322, 0.66 ) }
    dend_32 { pt3dadd( 41.7189, -132.355, -22.4019, 0.66 ) }
    dend_32 { pt3dadd( 42.0956, -133.953, -22.9462, 0.52 ) }
    dend_32 { pt3dadd( 42.1256, -134.066, -22.9835, 0.52 ) }
    dend_32 { pt3dadd( 42.667, -135.778, -23.5401, 0.52 ) }
    dend_32 { pt3dadd( 42.6967, -135.856, -23.5647, 0.52 ) }
    dend_32 { pt3dadd( 43.0401, -136.536, -23.7662, 1.18 ) }
    dend_32 { pt3dadd( 43.5571, -137.338, -24.0184, 1.62 ) }
    dend_32 { pt3dadd( 44.1601, -138.156, -24.2627, 1.92 ) }
    dend_32 { pt3dadd( 44.5022, -138.606, -24.4028, 2.14 ) }
    dend_32 { pt3dadd( 44.8322, -139.023, -24.5398, 2.21 ) }
    dend_32 { pt3dadd( 45.5675, -139.974, -24.8466, 1.92 ) }
    dend_32 { pt3dadd( 46.2577, -140.869, -25.1375, 1.62 ) }
    dend_32 { pt3dadd( 47.17, -142.081, -25.5113, 0.96 ) }
    dend_32 { pt3dadd( 47.8093, -142.956, -25.7679, 0.66 ) }
    dend_32 { pt3dadd( 48.6587, -144.152, -26.0993, 0.59 ) }
    dend_32 { pt3dadd( 48.8124, -144.374, -26.1575, 0.59 ) }
    dend_32 { pt3dadd( 49.6202, -145.594, -26.4524, 0.59 ) }
    dend_32 { pt3dadd( 50.0229, -146.279, -26.6592, 1.4 ) }
    dend_32 { pt3dadd( 50.4, -147.003, -26.936, 1.62 ) }
    dend_32 { pt3dadd( 50.4758, -147.162, -27.0, 1.62 ) }
    dend_32 { pt3dadd( 50.8122, -147.895, -27.3042, 1.62 ) }
    dend_32 { pt3dadd( 50.8982, -148.074, -27.3793, 1.62 ) }
    dend_32 { pt3dadd( 51.7686, -149.837, -28.1232, 0.29 ) }
    dend_32 { pt3dadd( 52.774, -151.752, -28.9358, 0.29 ) }
    dend_32 { pt3dadd( 54.5914, -155.042, -30.2948, 0.29 ) }
    dend_32 { pt3dadd( 54.6393, -155.124, -30.3276, 0.29 ) }
    dend_32 { pt3dadd( 54.945, -155.621, -30.515, 1.11 ) }
    dend_32 { pt3dadd( 55.3301, -156.2, -30.7105, 1.77 ) }
    dend_32 { pt3dadd( 55.9457, -157.023, -30.9249, 2.36 ) }
    dend_32 { pt3dadd( 56.3355, -157.55, -31.064, 2.65 ) }
    dend_32 { pt3dadd( 56.5839, -157.917, -31.1756, 2.8 ) }
    dend_32 { pt3dadd( 56.6286, -157.989, -31.1984, 2.8 ) }
    dend_32 { pt3dadd( 57.2816, -159.13, -31.5692, 1.03 ) }
    dend_32 { pt3dadd( 57.9757, -160.404, -31.9819, 0.74 ) }
    dend_32 { pt3dadd( 58.936, -162.266, -32.5735, 0.74 ) }
    dend_32 { pt3dadd( 59.6458, -163.71, -33.0229, 0.52 ) }
    dend_32 { pt3dadd( 59.6979, -163.826, -33.0614, 0.52 ) }
    dend_32 { pt3dadd( 59.9597, -164.472, -33.2849, 0.81 ) }
    dend_32 { pt3dadd( 59.9856, -164.551, -33.3129, 0.81 ) }
    dend_32 { pt3dadd( 60.2096, -165.414, -33.6366, 0.81 ) }
    dend_32 { pt3dadd( 60.2289, -165.505, -33.6718, 0.81 ) }
    dend_32 { pt3dadd( 60.5488, -166.861, -34.1543, 0.74 ) }
    dend_32 { pt3dadd( 60.794, -167.722, -34.471, 0.74 ) }
    dend_32 { pt3dadd( 60.8881, -167.989, -34.5746, 0.29 ) }
    dend_32 { pt3dadd( 60.9205, -168.065, -34.6049, 0.29 ) }
    dend_32 { pt3dadd( 61.2846, -168.803, -34.8911, 0.29 ) }
    dend_32 { pt3dadd( 61.8248, -169.791, -35.2327, 0.29 ) }
    dend_32 { pt3dadd( 62.0658, -170.173, -35.3395, 0.29 ) }
    dend_32 { pt3dadd( 62.36, -170.608, -35.468, 0.29 ) }
    dend_32 { pt3dadd( 62.4743, -170.775, -35.5168, 0.29 ) }
    dend_32 { pt3dadd( 62.9689, -171.517, -35.7272, 0.29 ) }
    dend_32 { pt3dadd( 63.1323, -171.792, -35.7958, 1.03 ) }
    dend_32 { pt3dadd( 63.4873, -172.479, -35.942, 1.4 ) }
    dend_32 { pt3dadd( 63.5308, -172.567, -35.9598, 1.4 ) }
    dend_32 { pt3dadd( 63.9135, -173.386, -36.115, 1.4 ) }
    dend_32 { pt3dadd( 63.9517, -173.463, -36.1285, 1.4 ) }
    dend_32 { pt3dadd( 64.4429, -174.407, -36.2756, 0.37 ) }
    dend_32 { pt3dadd( 64.4831, -174.483, -36.2865, 0.37 ) }
    dend_32 { pt3dadd( 65.412, -176.19, -36.5309, 0.37 ) }
    dend_32 { pt3dadd( 65.6091, -176.545, -36.567, 0.37 ) }
    dend_32 { pt3dadd( 66.1184, -177.439, -36.6367, 1.33 ) }
    dend_32 { pt3dadd( 66.9018, -178.791, -36.7341, 2.58 ) }
    dend_32 { pt3dadd( 67.2642, -179.41, -36.7737, 2.95 ) }
    dend_32 { pt3dadd( 67.833, -180.425, -36.8368, 2.95 ) }
    dend_32 { pt3dadd( 68.808, -182.267, -36.939, 0.44 ) }
    dend_32 { pt3dadd( 68.8464, -182.346, -36.9435, 0.44 ) }
    dend_32 { pt3dadd( 69.6198, -184.059, -37.0469, 0.44 ) }
    dend_32 { pt3dadd( 69.6867, -184.219, -37.0565, 0.44 ) }
    dend_32 { pt3dadd( 70.3985, -186.135, -37.1694, 0.44 ) }
    dend_32 { pt3dadd( 70.5736, -186.657, -37.2055, 0.74 ) }
    dend_32 { pt3dadd( 70.9135, -187.784, -37.3163, 0.74 ) }
    dend_32 { pt3dadd( 70.9863, -188.046, -37.3391, 0.74 ) }
    dend_32 { pt3dadd( 71.1526, -188.876, -37.3828, 0.59 ) }
    dend_32 { pt3dadd( 71.3146, -189.879, -37.4192, 0.44 ) }
    dend_32 { pt3dadd( 71.3511, -190.161, -37.4259, 0.44 ) }
    dend_32 { pt3dadd( 71.5418, -191.819, -37.459, 0.44 ) }
    dend_32 { pt3dadd( 71.5734, -192.106, -37.4649, 0.44 ) }
    dend_32 { pt3dadd( 71.8895, -194.973, -37.3595, 0.44 ) }
    dend_32 { pt3dadd( 71.8989, -195.059, -37.3529, 0.44 ) }
    dend_32 { pt3dadd( 72.0339, -196.298, -37.2247, 1.4 ) }
    dend_32 { pt3dadd( 72.192, -197.734, -37.0559, 2.28 ) }
    dend_32 { pt3dadd( 72.3242, -198.771, -36.9287, 2.65 ) }
    dend_32 { pt3dadd( 72.6279, -200.757, -36.7015, 0.96 ) }
    dend_32 { pt3dadd( 73.0148, -202.89, -36.4642, 0.96 ) }
    dend_32 { pt3dadd( 73.0615, -203.156, -36.4366, 0.96 ) }
    dend_32 { pt3dadd( 73.3268, -204.766, -36.2753, 1.18 ) }
    dend_32 { pt3dadd( 73.5037, -205.847, -36.1939, 1.62 ) }
    dend_32 { pt3dadd( 73.6519, -206.804, -36.1593, 1.62 ) }
    dend_32 { pt3dadd( 73.6654, -206.889, -36.163, 1.62 ) }
    dend_32 { pt3dadd( 73.8624, -208.057, -36.2194, 0.52 ) }
    dend_32 { pt3dadd( 73.8911, -208.227, -36.2277, 0.52 ) }
    dend_32 { pt3dadd( 74.1495, -209.522, -36.1836, 0.52 ) }
    dend_32 { pt3dadd( 74.1881, -209.69, -36.1668, 0.52 ) }
    dend_32 { pt3dadd( 74.5225, -210.96, -35.9782, 0.52 ) }
    dend_32 { pt3dadd( 74.9862, -212.43, -35.7321, 0.52 ) }
    dend_32 { pt3dadd( 75.0162, -212.51, -35.7173, 0.52 ) }
    dend_32 { pt3dadd( 75.6839, -214.165, -35.3868, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_32 { pt3dadd( 75.7968, -214.424, -35.3377, 1.03 ) }
    dend_32 { pt3dadd( 76.0957, -215.084, -35.181, 1.03 ) }
    dend_32 { pt3dadd( 76.4215, -215.762, -34.9908, 1.03 ) }
    dend_32 { pt3dadd( 76.7196, -216.403, -34.8183, 0.29 ) }
    dend_32 { pt3dadd( 76.7572, -216.493, -34.7987, 0.29 ) }
    dend_32 { pt3dadd( 77.3199, -218.053, -34.5657, 0.29 ) }
    dend_32 { pt3dadd( 77.8041, -219.443, -34.331, 1.18 ) }
    dend_32 { pt3dadd( 77.8377, -219.533, -34.3078, 1.18 ) }
    dend_32 { pt3dadd( 78.1653, -220.456, -34.0179, 1.62 ) }
    dend_32 { pt3dadd( 78.3186, -220.891, -33.867, 1.84 ) }
    dend_32 { pt3dadd( 78.4714, -221.303, -33.7292, 1.84 ) }
    dend_32 { pt3dadd( 78.5364, -221.469, -33.675, 1.84 ) }
    dend_32 { pt3dadd( 79.3409, -223.298, -33.2996, 0.74 ) }
    dend_32 { pt3dadd( 79.7073, -224.026, -33.1876, 0.29 ) }
    dend_32 { pt3dadd( 79.7693, -224.132, -33.1788, 0.29 ) }
    dend_32 { pt3dadd( 80.2951, -224.974, -33.1777, 0.29 ) }
    dend_32 { pt3dadd( 80.3917, -225.12, -33.1901, 0.29 ) }
    dend_32 { pt3dadd( 81.1319, -226.199, -33.2832, 0.29 ) }
    dend_32 { pt3dadd( 81.5534, -226.771, -33.3577, 1.11 ) }
    dend_32 { pt3dadd( 82.1289, -227.581, -33.4195, 1.47 ) }
    dend_32 { pt3dadd( 82.4997, -228.135, -33.4376, 1.77 ) }
    dend_32 { pt3dadd( 82.7846, -228.637, -33.4244, 1.77 ) }
    dend_32 { pt3dadd( 83.5409, -230.207, -33.2203, 0.66 ) }
    dend_32 { pt3dadd( 83.8743, -231.032, -33.0395, 0.44 ) }
    dend_32 { pt3dadd( 84.2963, -232.211, -32.767, 0.44 ) }
    dend_32 { pt3dadd( 84.3225, -232.292, -32.7479, 0.44 ) }
    dend_32 { pt3dadd( 84.7017, -233.399, -32.4377, 0.44 ) }
    dend_32 { pt3dadd( 85.2753, -235.081, -31.931, 0.29 ) }
    dend_32 { pt3dadd( 85.3118, -235.194, -31.8978, 0.29 ) }
    dend_32 { pt3dadd( 86.0141, -237.343, -31.2193, 0.29 ) }
    dend_32 { pt3dadd( 86.0756, -237.509, -31.1589, 0.29 ) }
    dend_32 { pt3dadd( 86.6481, -239.052, -30.5884, 1.18 ) }
    dend_32 { pt3dadd( 86.8345, -239.543, -30.4044, 1.25 ) }
    dend_32 { pt3dadd( 87.1448, -240.436, -30.0952, 1.25 ) }
    dend_32 { pt3dadd( 87.3165, -241.018, -29.889, 1.03 ) }
    dend_32 { pt3dadd( 87.5962, -242.241, -29.4303, 0.59 ) }
    dend_32 { pt3dadd( 87.8609, -243.6, -29.0047, 0.59 ) }
    dend_32 { pt3dadd( 87.8727, -243.684, -28.9865, 0.59 ) }
    dend_32 { pt3dadd( 87.9795, -244.35, -28.8613, 0.88 ) }
    dend_32 { pt3dadd( 88.1337, -245.23, -28.745, 1.18 ) }
    dend_32 { pt3dadd( 88.1617, -245.4, -28.7341, 1.18 ) }
    dend_32 { pt3dadd( 88.2143, -245.717, -28.749, 1.18 ) }
    dend_32 { pt3dadd( 88.3209, -246.259, -28.7824, 0.74 ) }
    dend_32 { pt3dadd( 88.434, -246.82, -28.8182, 0.74 ) }
    dend_32 { pt3dadd( 88.6015, -247.662, -28.8752, 0.37 ) }
    dend_32 { pt3dadd( 88.627, -247.79, -28.8844, 0.37 ) }
    dend_32 { pt3dadd( 89.0453, -250.013, -29.0373, 0.37 ) }
    dend_32 { pt3dadd( 89.1433, -250.541, -29.0741, 0.74 ) }
    dend_32 { pt3dadd( 89.1625, -250.637, -29.0815, 0.74 ) }
    dend_32 { pt3dadd( 89.3354, -251.481, -29.1502, 1.18 ) }
    dend_32 { pt3dadd( 89.4364, -251.925, -29.1913, 1.18 ) }
    dend_32 { pt3dadd( 89.4796, -252.092, -29.2093, 1.18 ) }
    dend_32 { pt3dadd( 89.7215, -252.789, -29.314, 1.18 ) }
    dend_32 { pt3dadd( 90.1403, -253.781, -29.4951, 0.37 ) }
    dend_32 { pt3dadd( 90.2259, -253.944, -29.5318, 0.37 ) }
    dend_32 { pt3dadd( 90.5705, -254.485, -29.6776, 0.37 ) }
    dend_32 { pt3dadd( 90.6188, -254.555, -29.6983, 0.37 ) }
    dend_32 { pt3dadd( 91.0147, -255.158, -29.8665, 0.37 ) }
    dend_32 { pt3dadd( 91.0686, -255.24, -29.8894, 0.37 ) }
    dend_32 { pt3dadd( 91.6447, -256.235, -30.1304, 0.37 ) }
    dend_32 { pt3dadd( 91.6774, -256.315, -30.1434, 0.37 ) }
    dend_32 { pt3dadd( 91.7828, -256.667, -30.1821, 0.81 ) }
    dend_32 { pt3dadd( 91.9395, -257.378, -30.2339, 0.81 ) }
    dend_32 { pt3dadd( 91.9798, -257.646, -30.2444, 0.81 ) }
    dend_32 { pt3dadd( 92.0741, -258.362, -30.2665, 0.96 ) }
    dend_32 { pt3dadd( 92.1751, -259.355, -30.2831, 0.96 ) }
    dend_32 { pt3dadd( 92.2399, -260.008, -30.2932, 0.29 ) }
    dend_32 { pt3dadd( 92.2681, -260.292, -30.2976, 0.29 ) }
    dend_32 { pt3dadd( 92.3703, -261.571, -30.3938, 0.29 ) }
    dend_32 { pt3dadd( 92.4215, -262.396, -30.4877, 1.03 ) }
    dend_32 { pt3dadd( 92.479, -263.198, -30.6219, 1.4 ) }
    dend_32 { pt3dadd( 92.5466, -263.985, -30.7695, 1.69 ) }
    dend_32 { pt3dadd( 92.5964, -264.606, -30.9086, 1.84 ) }
    dend_32 { pt3dadd( 92.7191, -266.078, -31.2781, 1.25 ) }
    dend_32 { pt3dadd( 92.7687, -266.694, -31.4413, 1.25 ) }
    dend_32 { pt3dadd( 92.8855, -268.122, -31.826, 0.52 ) }
    dend_32 { pt3dadd( 93.1179, -270.707, -32.4922, 0.52 ) }
    dend_32 { pt3dadd( 93.1928, -271.536, -32.685, 0.81 ) }
    dend_32 { pt3dadd( 93.2078, -271.718, -32.7194, 0.81 ) }
    dend_32 { pt3dadd( 93.2976, -272.88, -32.87, 0.81 ) }
    dend_32 { pt3dadd( 93.3089, -273.149, -32.9064, 0.81 ) }
    dend_32 { pt3dadd( 93.2692, -274.6, -33.132, 0.81 ) }
    dend_32 { pt3dadd( 93.2102, -275.225, -33.2323, 1.69 ) }
    dend_32 { pt3dadd( 93.1334, -275.935, -33.3402, 1.99 ) }
    dend_32 { pt3dadd( 93.1104, -276.117, -33.3697, 1.99 ) }
    dend_32 { pt3dadd( 92.9575, -277.207, -33.5555, 1.99 ) }
    dend_32 { pt3dadd( 92.728, -278.764, -33.8231, 0.29 ) }
    dend_32 { pt3dadd( 92.4347, -280.711, -34.1537, 0.29 ) }
    dend_32 { pt3dadd( 92.4234, -280.796, -34.1671, 0.29 ) }
    dend_32 { pt3dadd( 92.353, -281.422, -34.2492, 0.66 ) }
    dend_32 { pt3dadd( 92.2616, -282.327, -34.3597, 0.88 ) }
    dend_32 { pt3dadd( 92.2568, -282.413, -34.3677, 0.88 ) }
    dend_32 { pt3dadd( 92.2404, -283.228, -34.4542, 0.88 ) }
    dend_32 { pt3dadd( 92.2419, -283.494, -34.5108, 0.88 ) }
    dend_32 { pt3dadd( 92.2533, -284.189, -34.6903, 0.88 ) }
    dend_32 { pt3dadd( 92.2928, -285.319, -35.0151, 0.37 ) }
    dend_32 { pt3dadd( 92.3659, -286.75, -35.444, 0.37 ) }
    dend_32 { pt3dadd( 92.3713, -286.833, -35.4685, 0.37 ) }
    dend_32 { pt3dadd( 92.5467, -288.668, -36.0001, 0.37 ) }
    dend_32 { pt3dadd( 92.563, -288.802, -36.0372, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( 92.7429, -289.942, -36.3242, 0.37 ) }
    dend_32 { pt3dadd( 92.8683, -290.575, -36.4525, 0.66 ) }
    dend_32 { pt3dadd( 92.983, -291.105, -36.5528, 0.66 ) }
    dend_32 { pt3dadd( 93.2172, -292.079, -36.7065, 0.66 ) }
    dend_32 { pt3dadd( 93.2404, -292.162, -36.7148, 0.66 ) }
    dend_32 { pt3dadd( 93.4889, -292.983, -36.8065, 1.4 ) }
    dend_32 { pt3dadd( 93.6817, -293.522, -36.8807, 1.99 ) }
    dend_32 { pt3dadd( 93.7142, -293.602, -36.887, 1.99 ) }
    dend_32 { pt3dadd( 93.9193, -294.042, -36.9071, 1.99 ) }
    dend_32 { pt3dadd( 93.9773, -294.161, -36.9091, 1.99 ) }
    dend_32 { pt3dadd( 94.2146, -294.637, -36.899, 1.99 ) }
    dend_32 { pt3dadd( 94.2946, -294.792, -36.8925, 1.99 ) }
    dend_32 { pt3dadd( 94.9093, -296.137, -36.7781, 0.52 ) }
    dend_32 { pt3dadd( 95.5644, -297.716, -36.5956, 0.52 ) }
    dend_32 { pt3dadd( 95.5926, -297.797, -36.5821, 0.52 ) }
    dend_32 { pt3dadd( 96.0495, -299.32, -36.2769, 0.52 ) }
    dend_32 { pt3dadd( 96.0962, -299.514, -36.2325, 0.52 ) }
    dend_32 { pt3dadd( 96.2981, -300.573, -35.9867, 0.52 ) }
    dend_32 { pt3dadd( 96.3067, -300.645, -35.9701, 0.52 ) }
    dend_32 { pt3dadd( 96.4015, -302.113, -35.5842, 0.52 ) }
    dend_32 { pt3dadd( 96.4075, -302.198, -35.5651, 0.52 ) }
    dend_32 { pt3dadd( 96.4611, -302.816, -35.466, 0.88 ) }
    dend_32 { pt3dadd( 96.5653, -303.546, -35.3894, 1.03 ) }
    dend_32 { pt3dadd( 96.6572, -303.98, -35.3711, 1.03 ) }
    dend_32 { pt3dadd( 96.7005, -304.18, -35.3715, 1.03 ) }
    dend_32 { pt3dadd( 96.7918, -304.573, -35.3886, 1.03 ) }
    dend_32 { pt3dadd( 97.0049, -305.433, -35.4902, 1.03 ) }
    dend_32 { pt3dadd( 97.2283, -306.222, -35.6297, 0.52 ) }
    dend_32 { pt3dadd( 97.2523, -306.304, -35.6466, 0.52 ) }
    dend_32 { pt3dadd( 97.8549, -308.224, -36.0902, 0.52 ) }
    dend_32 { pt3dadd( 97.8949, -308.353, -36.1322, 0.52 ) }
    dend_32 { pt3dadd( 98.4114, -310.013, -36.7964, 0.52 ) }
    dend_32 { pt3dadd( 98.7227, -310.99, -37.2562, 0.96 ) }
    dend_32 { pt3dadd( 98.7936, -311.211, -37.3792, 0.96 ) }
    dend_32 { pt3dadd( 99.0651, -312.064, -37.9059, 1.4 ) }
    dend_32 { pt3dadd( 99.5524, -313.581, -38.9111, 1.69 ) }
    dend_32 { pt3dadd( 99.6986, -314.059, -39.2124, 1.69 ) }
    dend_32 { pt3dadd( 99.7198, -314.132, -39.2559, 1.69 ) }
    dend_32 { pt3dadd( 100.013, -315.239, -39.8878, 0.44 ) }
    dend_32 { pt3dadd( 100.033, -315.314, -39.9282, 0.44 ) }
    dend_32 { pt3dadd( 100.502, -317.007, -40.7185, 0.44 ) }
    dend_32 { pt3dadd( 100.574, -317.256, -40.8078, 0.44 ) }
    dend_32 { pt3dadd( 101.094, -319.015, -41.3968, 0.44 ) }
    dend_32 { pt3dadd( 101.185, -319.321, -41.4848, 1.33 ) }
    dend_32 { pt3dadd( 101.213, -319.413, -41.5071, 1.33 ) }
    dend_32 { pt3dadd( 101.564, -320.666, -41.8237, 1.92 ) }
    dend_32 { pt3dadd( 101.734, -321.38, -41.9993, 1.92 ) }
    dend_32 { pt3dadd( 101.827, -321.844, -42.0963, 1.92 ) }
    dend_32 { pt3dadd( 102.065, -323.236, -42.3321, 0.59 ) }
    dend_32 { pt3dadd( 102.095, -323.43, -42.3639, 0.59 ) }
    dend_32 { pt3dadd( 102.19, -324.244, -42.4839, 0.44 ) }
    dend_32 { pt3dadd( 102.297, -325.577, -42.6623, 0.44 ) }
    dend_32 { pt3dadd( 102.398, -327.114, -42.8499, 0.37 ) }
    dend_32 { pt3dadd( 102.404, -327.285, -42.8776, 0.37 ) }
    dend_32 { pt3dadd( 102.408, -328.007, -43.0183, 1.03 ) }
    dend_32 { pt3dadd( 102.416, -328.623, -43.1513, 1.18 ) }
    dend_32 { pt3dadd( 102.428, -328.9, -43.2167, 1.18 ) }
    dend_32 { pt3dadd( 102.48, -329.331, -43.3615, 1.18 ) }
    dend_32 { pt3dadd( 102.757, -330.756, -43.9487, 0.29 ) }
    dend_32 { pt3dadd( 102.785, -330.844, -43.9847, 0.29 ) }
    dend_32 { pt3dadd( 103.156, -331.768, -44.3601, 0.29 ) }
    dend_32 { pt3dadd( 103.24, -331.944, -44.4278, 0.29 ) }
    dend_32 { pt3dadd( 103.876, -333.165, -44.8492, 0.29 ) }
    dend_32 { pt3dadd( 103.919, -333.239, -44.8715, 0.29 ) }
    dend_32 { pt3dadd( 104.936, -334.826, -45.2361, 0.29 ) }
    dend_32 { pt3dadd( 104.987, -334.909, -45.2544, 0.29 ) }
    dend_32 { pt3dadd( 105.487, -335.758, -45.4284, 0.29 ) }
    dend_32 { pt3dadd( 105.59, -335.937, -45.4365, 1.18 ) }
    dend_32 { pt3dadd( 105.715, -336.18, -45.4114, 1.18 ) }
    dend_32 { pt3dadd( 106.147, -337.044, -45.2578, 1.84 ) }
    dend_32 { pt3dadd( 106.374, -337.531, -45.1491, 1.84 ) }
    dend_32 { pt3dadd( 106.433, -337.656, -45.1233, 1.84 ) }
    dend_32 { pt3dadd( 107.421, -339.679, -44.758, 0.29 ) }
    dend_32 { pt3dadd( 107.996, -340.815, -44.5905, 0.29 ) }
    dend_32 { pt3dadd( 108.039, -340.905, -44.5818, 0.29 ) }
    dend_32 { pt3dadd( 108.598, -342.167, -44.5425, 0.29 ) }
    dend_32 { pt3dadd( 108.844, -342.769, -44.5504, 1.62 ) }
    dend_32 { pt3dadd( 109.165, -343.678, -44.6004, 2.28 ) }
    dend_32 { pt3dadd( 109.235, -343.921, -44.6292, 2.28 ) }
    dend_32 { pt3dadd( 109.582, -345.27, -44.7266, 0.29 ) }
    dend_32 { pt3dadd( 109.952, -346.922, -44.7706, 0.29 ) }
    dend_32 { pt3dadd( 110.046, -347.539, -44.7457, 0.74 ) }
    dend_32 { pt3dadd( 110.093, -348.015, -44.7023, 0.74 ) }
    dend_32 { pt3dadd( 110.129, -348.759, -44.6067, 0.74 ) }
    dend_32 { pt3dadd( 110.151, -349.585, -44.4841, 0.29 ) }
    dend_32 { pt3dadd( 110.153, -349.697, -44.4655, 0.29 ) }
    dend_32 { pt3dadd( 110.142, -351.488, -44.1916, 0.29 ) }
    dend_32 { pt3dadd( 110.141, -351.574, -44.1814, 0.29 ) }
    dend_32 { pt3dadd( 110.171, -353.455, -44.0356, 0.29 ) }
    dend_32 { pt3dadd( 110.183, -353.91, -44.0137, 0.96 ) }
    dend_32 { pt3dadd( 110.211, -354.629, -44.0019, 1.18 ) }
    dend_32 { pt3dadd( 110.237, -355.171, -43.997, 0.52 ) }
    dend_32 { pt3dadd( 110.276, -355.811, -43.9953, 0.22 ) }
    dend_32 { pt3dadd( 110.467, -358.528, -44.0001, 0.22 ) }
    dend_32 { pt3dadd( 110.475, -358.614, -44.0012, 0.22 ) }
    dend_32 { pt3dadd( 110.555, -359.238, -43.9891, 0.88 ) }
    dend_32 { pt3dadd( 110.639, -359.804, -43.9589, 1.33 ) }
    dend_32 { pt3dadd( 110.74, -360.424, -43.919, 1.77 ) }
    dend_32 { pt3dadd( 110.756, -360.509, -43.9117, 1.77 ) }
    dend_32 { pt3dadd( 110.893, -361.146, -43.8218, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_32 { pt3dadd( 111.239, -362.738, -43.5701, 0.29 ) }
    dend_32 { pt3dadd( 111.621, -364.388, -43.2636, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 2/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -34.8844, -31.3996, 8.54955, 0.96 ) }
    dend_27 { pt3dadd( -35.2284, -32.0623, 7.97062, 0.96 ) }
    dend_27 { pt3dadd( -35.6473, -33.0582, 7.05056, 0.74 ) }
    dend_27 { pt3dadd( -36.0242, -34.0527, 6.18086, 0.74 ) }
    dend_27 { pt3dadd( -36.4779, -35.2285, 5.17349, 0.74 ) }
    dend_27 { pt3dadd( -36.5024, -35.2888, 5.12456, 0.74 ) }
    dend_27 { pt3dadd( -37.3301, -37.1453, 3.65079, 0.74 ) }
    dend_27 { pt3dadd( -37.6276, -37.7999, 3.14379, 0.52 ) }
    dend_27 { pt3dadd( -37.9482, -38.4929, 2.64463, 0.52 ) }
    dend_27 { pt3dadd( -38.4401, -39.4019, 2.01124, 0.52 ) }
    dend_27 { pt3dadd( -38.8137, -39.9792, 1.63577, 1.4 ) }
    dend_27 { pt3dadd( -39.6621, -41.149, 0.927569, 1.69 ) }
    dend_27 { pt3dadd( -40.2634, -41.8817, 0.532204, 1.69 ) }
    dend_27 { pt3dadd( -40.3157, -41.937, 0.502174, 1.69 ) }
    dend_27 { pt3dadd( -41.3693, -42.9275, -0.045578, 1.69 ) }
    dend_27 { pt3dadd( -42.6737, -44.0701, -0.638897, 0.66 ) }
    dend_27 { pt3dadd( -43.2759, -44.568, -0.878792, 0.52 ) }
    dend_27 { pt3dadd( -43.4109, -44.6715, -0.925162, 0.52 ) }
    dend_27 { pt3dadd( -44.3599, -45.358, -1.21414, 0.52 ) }
    dend_27 { pt3dadd( -45.4363, -46.1473, -1.52365, 0.52 ) }
    dend_27 { pt3dadd( -45.647, -46.2986, -1.57487, 1.03 ) }
    dend_27 { pt3dadd( -46.3284, -46.7961, -1.76888, 1.55 ) }
    dend_27 { pt3dadd( -47.6219, -47.7399, -2.2296, 2.28 ) }
    dend_27 { pt3dadd( -48.3733, -48.3045, -2.51103, 2.28 ) }
    dend_27 { pt3dadd( -49.6086, -49.2437, -2.93127, 2.28 ) }
    dend_27 { pt3dadd( -49.7608, -49.3573, -2.97389, 2.28 ) }
    dend_27 { pt3dadd( -51.1033, -50.3284, -3.29284, 1.47 ) }
    dend_27 { pt3dadd( -51.1702, -50.3752, -3.30394, 1.47 ) }
    dend_27 { pt3dadd( -52.3712, -51.2064, -3.47922, 0.74 ) }
    dend_27 { pt3dadd( -53.7766, -52.2124, -3.7681, 0.74 ) }
    dend_27 { pt3dadd( -53.8422, -52.26, -3.78232, 0.74 ) }
    dend_27 { pt3dadd( -54.927, -53.0919, -4.03988, 0.74 ) }
    dend_27 { pt3dadd( -55.7847, -53.7742, -4.28787, 0.74 ) }
    dend_27 { pt3dadd( -57.0468, -54.8346, -4.76241, 0.66 ) }
    dend_27 { pt3dadd( -58.0002, -55.6678, -5.25616, 0.52 ) }
    dend_27 { pt3dadd( -58.118, -55.779, -5.32435, 0.52 ) }
    dend_27 { pt3dadd( -58.8537, -56.4793, -5.74534, 0.52 ) }
    dend_27 { pt3dadd( -59.6467, -57.2607, -6.16553, 1.55 ) }
    dend_27 { pt3dadd( -60.1346, -57.7589, -6.37671, 1.92 ) }
    dend_27 { pt3dadd( -61.3723, -58.9527, -6.79984, 1.92 ) }
    dend_27 { pt3dadd( -62.3372, -59.8498, -7.09092, 1.92 ) }
    dend_27 { pt3dadd( -63.2939, -60.7233, -7.36335, 0.52 ) }
    dend_27 { pt3dadd( -64.2534, -61.5812, -7.59926, 0.52 ) }
    dend_27 { pt3dadd( -65.5411, -62.7119, -7.83023, 0.52 ) }
    dend_27 { pt3dadd( -66.5444, -63.5648, -7.99095, 0.52 ) }
    dend_27 { pt3dadd( -67.1967, -64.106, -8.05023, 0.52 ) }
    dend_27 { pt3dadd( -67.5737, -64.3834, -8.0828, 0.66 ) }
    dend_27 { pt3dadd( -68.4285, -64.9654, -8.11687, 0.66 ) }
    dend_27 { pt3dadd( -68.577, -65.0592, -8.13836, 0.66 ) }
    dend_27 { pt3dadd( -69.5029, -65.6299, -8.32121, 0.66 ) }
    dend_27 { pt3dadd( -70.6415, -66.3642, -8.54896, 2.14 ) }
    dend_27 { pt3dadd( -71.7293, -67.096, -8.84029, 2.73 ) }
    dend_27 { pt3dadd( -72.6167, -67.7139, -9.16043, 2.73 ) }
    dend_27 { pt3dadd( -74.8723, -69.3203, -10.0391, 0.59 ) }
    dend_27 { pt3dadd( -74.9443, -69.3704, -10.0738, 0.59 ) }
    dend_27 { pt3dadd( -75.727, -69.9187, -10.4947, 0.59 ) }
    dend_27 { pt3dadd( -77.8168, -71.3684, -11.802, 0.59 ) }
    dend_27 { pt3dadd( -80.037, -72.8755, -13.3187, 0.44 ) }
    dend_27 { pt3dadd( -80.96, -73.4763, -13.9914, 0.44 ) }
    dend_27 { pt3dadd( -83.2539, -74.8961, -15.6452, 1.47 ) }
    dend_27 { pt3dadd( -83.9877, -75.3324, -16.1855, 2.36 ) }
    dend_27 { pt3dadd( -85.5207, -76.1906, -17.272, 2.36 ) }
    dend_27 { pt3dadd( -86.7858, -76.8396, -18.0974, 0.81 ) }
    dend_27 { pt3dadd( -86.8518, -76.873, -18.1352, 0.81 ) }
    dend_27 { pt3dadd( -87.7702, -77.3484, -18.5715, 0.52 ) }
    dend_27 { pt3dadd( -87.8508, -77.3943, -18.5902, 0.52 ) }
    dend_27 { pt3dadd( -89.8229, -78.4658, -19.0478, 0.52 ) }
    dend_27 { pt3dadd( -90.7238, -78.9748, -19.2051, 0.96 ) }
    dend_27 { pt3dadd( -90.8022, -79.0258, -19.2175, 0.96 ) }
    dend_27 { pt3dadd( -91.2982, -79.3637, -19.3148, 0.96 ) }
    dend_27 { pt3dadd( -92.0896, -79.9338, -19.4871, 0.96 ) }
    dend_27 { pt3dadd( -93.6447, -81.1045, -19.8268, 0.29 ) }
    dend_27 { pt3dadd( -93.7072, -81.156, -19.84, 0.29 ) }
    dend_27 { pt3dadd( -95.8865, -83.1201, -20.1522, 0.29 ) }
    dend_27 { pt3dadd( -96.4741, -83.671, -20.2344, 1.62 ) }
    dend_27 { pt3dadd( -97.1633, -84.3554, -20.2978, 1.99 ) }
    dend_27 { pt3dadd( -97.2198, -84.4142, -20.2997, 1.99 ) }
    dend_27 { pt3dadd( -97.9908, -85.259, -20.2394, 1.99 ) }
    dend_27 { pt3dadd( -98.5012, -85.8206, -20.1988, 1.55 ) }
    dend_27 { pt3dadd( -99.4515, -86.8446, -20.1842, 0.29 ) }
    dend_27 { pt3dadd( -100.851, -88.3613, -20.1836, 0.29 ) }
    dend_27 { pt3dadd( -100.905, -88.4219, -20.1853, 0.29 ) }
    dend_27 { pt3dadd( -102.491, -90.185, -20.3636, 0.29 ) }
    dend_27 { pt3dadd( -102.553, -90.2536, -20.3745, 0.29 ) }
    dend_27 { pt3dadd( -103.355, -91.1516, -20.5486, 0.88 ) }
    dend_27 { pt3dadd( -104.31, -92.3115, -20.788, 0.88 ) }
    dend_27 { pt3dadd( -104.77, -92.91, -20.9391, 0.88 ) }
    dend_27 { pt3dadd( -105.517, -94.0435, -21.1441, 0.29 ) }
    dend_27 { pt3dadd( -106.359, -95.2598, -21.719, 0.29 ) }
    dend_27 { pt3dadd( -106.409, -95.3277, -21.7581, 0.29 ) }
    dend_27 { pt3dadd( -106.866, -95.9728, -22.1541, 1.77 ) }
    dend_27 { pt3dadd( -107.35, -96.6462, -22.6257, 2.5 ) }
    dend_27 { pt3dadd( -108.196, -97.7489, -23.4276, 2.5 ) }
    dend_27 { pt3dadd( -111.119, -101.469, -26.1839, 0.88 ) }
    dend_27 { pt3dadd( -111.647, -102.095, -26.7009, 0.52 ) }
    dend_27 { pt3dadd( -112.329, -102.851, -27.3348, 0.37 ) }
    dend_27 { pt3dadd( -112.385, -102.908, -27.384, 0.37 ) }
    dend_27 { pt3dadd( -113.521, -103.977, -28.3887, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_27 { pt3dadd( -113.574, -104.023, -28.4326, 0.37 ) }
    dend_27 { pt3dadd( -114.394, -104.833, -28.8198, 0.96 ) }
    dend_27 { pt3dadd( -114.855, -105.272, -29.0406, 1.47 ) }
    dend_27 { pt3dadd( -115.256, -105.643, -29.2218, 1.47 ) }
    dend_27 { pt3dadd( -116.586, -106.937, -29.7948, 0.29 ) }
    dend_27 { pt3dadd( -116.648, -107.002, -29.8182, 0.29 ) }
    dend_27 { pt3dadd( -118.274, -108.785, -30.3379, 0.29 ) }
    dend_27 { pt3dadd( -118.327, -108.843, -30.3586, 0.29 ) }
    dend_27 { pt3dadd( -118.615, -109.136, -30.4796, 0.59 ) }
    dend_27 { pt3dadd( -118.679, -109.196, -30.5133, 0.59 ) }
    dend_27 { pt3dadd( -119.24, -109.706, -30.7986, 0.59 ) }
    dend_27 { pt3dadd( -119.305, -109.757, -30.8442, 0.59 ) }
    dend_27 { pt3dadd( -120.718, -110.752, -31.9949, 0.44 ) }
    dend_27 { pt3dadd( -121.604, -111.436, -32.6278, 0.37 ) }
    dend_27 { pt3dadd( -123.027, -112.569, -33.5689, 2.06 ) }
    dend_27 { pt3dadd( -123.762, -113.177, -34.0232, 2.21 ) }
    dend_27 { pt3dadd( -125.968, -115.053, -35.3193, 0.29 ) }
    dend_27 { pt3dadd( -126.024, -115.105, -35.3495, 0.29 ) }
    dend_27 { pt3dadd( -128.145, -117.282, -36.2995, 0.29 ) }
    dend_27 { pt3dadd( -128.204, -117.348, -36.327, 0.29 ) }
    dend_27 { pt3dadd( -129.307, -118.731, -36.7911, 1.77 ) }
    dend_27 { pt3dadd( -129.35, -118.797, -36.8097, 1.77 ) }
    dend_27 { pt3dadd( -129.77, -119.789, -36.9929, 2.21 ) }
    dend_27 { pt3dadd( -130.079, -120.684, -37.2361, 2.21 ) }
    dend_27 { pt3dadd( -130.446, -122.15, -37.7351, 0.22 ) }
    dend_27 { pt3dadd( -130.461, -122.224, -37.7611, 0.22 ) }
    dend_27 { pt3dadd( -130.824, -124.215, -38.6156, 0.22 ) }
    dend_27 { pt3dadd( -131.227, -126.446, -39.7426, 0.22 ) }
    dend_27 { pt3dadd( -131.533, -128.095, -40.6997, 1.33 ) }
    dend_27 { pt3dadd( -131.701, -129.032, -41.2705, 1.77 ) }
    dend_27 { pt3dadd( -131.731, -129.172, -41.3694, 1.77 ) }
    dend_27 { pt3dadd( -132.279, -131.508, -43.1641, 0.29 ) }
    dend_27 { pt3dadd( -132.732, -133.636, -44.821, 0.22 ) }
    dend_27 { pt3dadd( -132.874, -134.373, -45.3791, 1.03 ) }
    dend_27 { pt3dadd( -133.033, -135.422, -46.0996, 1.03 ) }
    dend_27 { pt3dadd( -133.414, -138.235, -47.9527, 0.22 ) }
    dend_27 { pt3dadd( -133.603, -140.023, -49.0227, 0.22 ) }
    dend_27 { pt3dadd( -133.751, -142.572, -50.3454, 0.22 ) }
    dend_27 { pt3dadd( -133.796, -143.714, -50.9484, 1.4 ) }
    dend_27 { pt3dadd( -133.81, -144.463, -51.3384, 1.92 ) }
    dend_27 { pt3dadd( -133.811, -144.536, -51.3739, 1.92 ) }
    dend_27 { pt3dadd( -133.82, -145.566, -51.7644, 1.92 ) }
    dend_27 { pt3dadd( -133.828, -145.639, -51.7978, 1.92 ) }
    dend_27 { pt3dadd( -134.222, -147.798, -52.8781, 0.22 ) }
    dend_27 { pt3dadd( -134.238, -147.88, -52.917, 0.22 ) }
    dend_27 { pt3dadd( -134.617, -149.48, -53.7801, 0.22 ) }
    dend_27 { pt3dadd( -135.093, -151.379, -54.8072, 0.22 ) }
    dend_27 { pt3dadd( -135.391, -152.49, -55.4069, 1.47 ) }
    dend_27 { pt3dadd( -135.563, -153.138, -55.7385, 1.47 ) }
    dend_27 { pt3dadd( -135.763, -153.89, -56.0849, 1.47 ) }
    dend_27 { pt3dadd( -136.251, -155.625, -56.886, 0.22 ) }
    dend_27 { pt3dadd( -136.747, -157.109, -57.7107, 0.22 ) }
    dend_27 { pt3dadd( -136.775, -157.184, -57.756, 0.22 ) }
    dend_27 { pt3dadd( -136.924, -157.554, -57.9346, 0.59 ) }
    dend_27 { pt3dadd( -136.996, -157.716, -58.0063, 0.59 ) }
    dend_27 { pt3dadd( -137.518, -158.876, -58.4168, 0.59 ) }
    dend_27 { pt3dadd( -138.291, -160.644, -58.8615, 0.15 ) }
    dend_27 { pt3dadd( -138.324, -160.715, -58.8829, 0.15 ) }
    dend_27 { pt3dadd( -139.268, -162.757, -59.5155, 0.15 ) }
    dend_27 { pt3dadd( -139.319, -162.864, -59.5471, 0.15 ) }
    dend_27 { pt3dadd( -139.901, -164.118, -59.8958, 0.15 ) }
    dend_27 { pt3dadd( -139.935, -164.189, -59.9164, 0.15 ) }
    dend_27 { pt3dadd( -140.449, -165.248, -60.178, 1.25 ) }
    dend_27 { pt3dadd( -140.855, -166.11, -60.4226, 1.25 ) }
    dend_27 { pt3dadd( -141.144, -166.73, -60.6352, 1.25 ) }
    dend_27 { pt3dadd( -141.177, -166.799, -60.6613, 1.25 ) }
    dend_27 { pt3dadd( -141.681, -167.819, -61.0387, 0.22 ) }
    dend_27 { pt3dadd( -141.718, -167.899, -61.0659, 0.22 ) }
    dend_27 { pt3dadd( -142.589, -170.039, -61.6813, 0.22 ) }
    dend_27 { pt3dadd( -142.644, -170.182, -61.7315, 0.22 ) }
    dend_27 { pt3dadd( -142.956, -171.114, -62.0632, 1.62 ) }
    dend_27 { pt3dadd( -143.348, -172.298, -62.3781, 2.06 ) }
    dend_27 { pt3dadd( -143.413, -172.463, -62.4482, 2.06 ) }
    dend_27 { pt3dadd( -143.668, -173.013, -62.7358, 2.06 ) }
    dend_27 { pt3dadd( -144.4, -174.36, -63.5422, 0.29 ) }
    dend_27 { pt3dadd( -145.013, -175.405, -64.1557, 0.29 ) }
    dend_27 { pt3dadd( -146.531, -177.847, -65.5672, 0.29 ) }
    dend_27 { pt3dadd( -148.645, -181.016, -67.459, 1.69 ) }
    dend_27 { pt3dadd( -149.184, -181.751, -67.9234, 1.69 ) }
    dend_27 { pt3dadd( -149.519, -182.195, -68.1833, 2.14 ) }
    dend_27 { pt3dadd( -150.189, -183.062, -68.645, 2.14 ) }
    dend_27 { pt3dadd( -150.285, -183.196, -68.7029, 2.14 ) }
    dend_27 { pt3dadd( -150.414, -183.422, -68.7601, 2.14 ) }
    dend_27 { pt3dadd( -151.369, -185.424, -68.9687, 0.29 ) }
    dend_27 { pt3dadd( -152.58, -188.121, -69.3665, 0.29 ) }
    dend_27 { pt3dadd( -152.624, -188.224, -69.384, 0.29 ) }
    dend_27 { pt3dadd( -153.628, -190.698, -69.8285, 0.29 ) }
    dend_27 { pt3dadd( -154.569, -193.097, -70.241, 0.29 ) }
    dend_27 { pt3dadd( -154.63, -193.255, -70.2683, 0.29 ) }
    dend_27 { pt3dadd( -155.212, -194.857, -70.5035, 1.47 ) }
    dend_27 { pt3dadd( -155.472, -195.543, -70.6351, 1.92 ) }
    dend_27 { pt3dadd( -155.656, -196.009, -70.7359, 2.36 ) }
    dend_27 { pt3dadd( -155.944, -196.649, -70.9167, 2.36 ) }
    dend_27 { pt3dadd( -156.719, -198.301, -71.4423, 0.29 ) }
    dend_27 { pt3dadd( -157.583, -200.219, -71.9484, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -34.8844, -31.3996, 8.54955, 0.52 ) }
    dend_26 { pt3dadd( -35.9016, -31.7543, 8.77105, 0.52 ) }
    dend_26 { pt3dadd( -37.3552, -32.2657, 9.08594, 0.52 ) }
    dend_26 { pt3dadd( -37.4441, -32.2935, 9.10494, 0.52 ) }
    dend_26 { pt3dadd( -38.0945, -32.4959, 9.23238, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_26 { pt3dadd( -38.2514, -32.5429, 9.2621, 0.52 ) }
    dend_26 { pt3dadd( -38.8203, -32.6868, 9.36768, 0.74 ) }
    dend_26 { pt3dadd( -38.9007, -32.7042, 9.38183, 0.74 ) }
    dend_26 { pt3dadd( -40.0124, -32.9181, 9.57447, 0.74 ) }
    dend_26 { pt3dadd( -40.8409, -33.0698, 9.7192, 0.74 ) }
    dend_26 { pt3dadd( -41.8893, -33.2605, 9.90431, 0.44 ) }
    dend_26 { pt3dadd( -43.5003, -33.5863, 10.192, 0.44 ) }
    dend_26 { pt3dadd( -43.5918, -33.6071, 10.2088, 0.44 ) }
    dend_26 { pt3dadd( -43.8238, -33.6687, 10.2535, 0.44 ) }
    dend_26 { pt3dadd( -44.267, -33.813, 10.3461, 0.81 ) }
    dend_26 { pt3dadd( -44.672, -33.9744, 10.4426, 1.11 ) }
    dend_26 { pt3dadd( -45.3407, -34.3274, 10.6153, 1.11 ) }
    dend_26 { pt3dadd( -45.8367, -34.6691, 10.7553, 1.11 ) }
    dend_26 { pt3dadd( -45.9959, -34.7801, 10.8012, 1.25 ) }
    dend_26 { pt3dadd( -46.3445, -35.0079, 10.8984, 1.25 ) }
    dend_26 { pt3dadd( -46.754, -35.2627, 11.0146, 1.25 ) }
    dend_26 { pt3dadd( -46.8362, -35.3038, 11.0367, 1.25 ) }
    dend_26 { pt3dadd( -47.4521, -35.54, 11.2215, 0.96 ) }
    dend_26 { pt3dadd( -48.0926, -35.7256, 11.4254, 0.74 ) }
    dend_26 { pt3dadd( -48.7657, -35.8308, 11.6369, 0.52 ) }
    dend_26 { pt3dadd( -48.8871, -35.8347, 11.674, 0.52 ) }
    dend_26 { pt3dadd( -50.0696, -35.7275, 12.013, 0.52 ) }
    dend_26 { pt3dadd( -50.7699, -35.583, 12.2064, 0.88 ) }
    dend_26 { pt3dadd( -50.9361, -35.5331, 12.2495, 0.88 ) }
    dend_26 { pt3dadd( -51.9478, -35.1852, 12.4948, 0.88 ) }
    dend_26 { pt3dadd( -52.3463, -35.0407, 12.584, 0.88 ) }
    dend_26 { pt3dadd( -53.2692, -34.7062, 12.7679, 0.88 ) }
    dend_26 { pt3dadd( -53.9718, -34.4551, 12.892, 0.52 ) }
    dend_26 { pt3dadd( -55.1251, -34.0783, 13.0699, 0.52 ) }
    dend_26 { pt3dadd( -55.7171, -33.9103, 13.1423, 1.11 ) }
    dend_26 { pt3dadd( -56.5166, -33.7032, 13.2171, 1.4 ) }
    dend_26 { pt3dadd( -57.2189, -33.5361, 13.2558, 1.4 ) }
    dend_26 { pt3dadd( -57.8242, -33.4027, 13.274, 1.69 ) }
    dend_26 { pt3dadd( -58.5316, -33.2434, 13.3112, 1.69 ) }
    dend_26 { pt3dadd( -59.8164, -32.9304, 13.3986, 0.44 ) }
    dend_26 { pt3dadd( -61.1961, -32.5935, 13.5228, 0.44 ) }
    dend_26 { pt3dadd( -62.5264, -32.2659, 13.6676, 0.44 ) }
    dend_26 { pt3dadd( -63.8027, -31.9451, 13.8313, 0.66 ) }
    dend_26 { pt3dadd( -65.0437, -31.6282, 14.0226, 1.11 ) }
    dend_26 { pt3dadd( -65.1346, -31.6051, 14.0403, 1.11 ) }
    dend_26 { pt3dadd( -66.1117, -31.3472, 14.3251, 1.11 ) }
    dend_26 { pt3dadd( -66.2925, -31.3031, 14.3915, 1.4 ) }
    dend_26 { pt3dadd( -66.377, -31.2807, 14.4299, 1.4 ) }
    dend_26 { pt3dadd( -66.8428, -31.1514, 14.635, 1.4 ) }
    dend_26 { pt3dadd( -66.92, -31.1319, 14.6606, 1.4 ) }
    dend_26 { pt3dadd( -67.5692, -30.9552, 14.8741, 1.4 ) }
    dend_26 { pt3dadd( -67.7328, -30.9047, 14.9257, 1.4 ) }
    dend_26 { pt3dadd( -68.2249, -30.7865, 15.0656, 0.96 ) }
    dend_26 { pt3dadd( -68.7114, -30.6664, 15.1784, 0.96 ) }
    dend_26 { pt3dadd( -69.4678, -30.4489, 15.3563, 0.44 ) }
    dend_26 { pt3dadd( -69.5574, -30.4237, 15.3769, 0.44 ) }
    dend_26 { pt3dadd( -70.1076, -30.2823, 15.5244, 0.44 ) }
    dend_26 { pt3dadd( -70.9115, -30.0894, 15.7746, 0.37 ) }
    dend_26 { pt3dadd( -72.1533, -29.8203, 16.198, 0.37 ) }
    dend_26 { pt3dadd( -73.0658, -29.6508, 16.5249, 0.37 ) }
    dend_26 { pt3dadd( -73.8733, -29.5164, 16.8727, 0.66 ) }
    dend_26 { pt3dadd( -74.7753, -29.3814, 17.2997, 1.25 ) }
    dend_26 { pt3dadd( -75.4015, -29.3157, 17.6171, 1.62 ) }
    dend_26 { pt3dadd( -76.0864, -29.2697, 18.0056, 1.62 ) }
    dend_26 { pt3dadd( -76.7619, -29.2774, 18.4118, 1.62 ) }
    dend_26 { pt3dadd( -77.9512, -29.3397, 19.1248, 0.96 ) }
    dend_26 { pt3dadd( -78.4734, -29.3767, 19.4354, 0.66 ) }
    dend_26 { pt3dadd( -79.4034, -29.4541, 19.9436, 0.66 ) }
    dend_26 { pt3dadd( -80.1415, -29.5311, 20.3428, 0.96 ) }
    dend_26 { pt3dadd( -80.9296, -29.6254, 20.7376, 0.96 ) }
    dend_26 { pt3dadd( -81.0057, -29.6348, 20.7706, 0.96 ) }
    dend_26 { pt3dadd( -81.872, -29.7385, 21.0659, 0.74 ) }
    dend_26 { pt3dadd( -82.7978, -29.793, 21.3413, 0.59 ) }
    dend_26 { pt3dadd( -82.8785, -29.7909, 21.3634, 0.59 ) }
    dend_26 { pt3dadd( -83.8195, -29.726, 21.5968, 0.59 ) }
    dend_26 { pt3dadd( -84.4108, -29.6646, 21.7491, 0.37 ) }
    dend_26 { pt3dadd( -84.5832, -29.6453, 21.7944, 0.37 ) }
    dend_26 { pt3dadd( -86.0728, -29.454, 22.1947, 0.37 ) }
    dend_26 { pt3dadd( -87.1099, -29.308, 22.4741, 0.66 ) }
    dend_26 { pt3dadd( -87.2015, -29.296, 22.4988, 0.66 ) }
    dend_26 { pt3dadd( -88.1321, -29.2072, 22.7503, 0.66 ) }
    dend_26 { pt3dadd( -88.9335, -29.2239, 22.9702, 0.66 ) }
    dend_26 { pt3dadd( -89.0249, -29.235, 22.9956, 0.66 ) }
    dend_26 { pt3dadd( -89.5584, -29.4132, 23.1525, 0.96 ) }
    dend_26 { pt3dadd( -89.9445, -29.5918, 23.2642, 1.33 ) }
    dend_26 { pt3dadd( -90.7395, -30.0307, 23.4943, 1.33 ) }
    dend_26 { pt3dadd( -91.9299, -30.7898, 23.8436, 1.33 ) }
    dend_26 { pt3dadd( -92.0238, -30.8526, 23.871, 1.33 ) }
    dend_26 { pt3dadd( -93.1493, -31.6173, 24.1707, 1.33 ) }
    dend_26 { pt3dadd( -93.2911, -31.7154, 24.2062, 1.33 ) }
    dend_26 { pt3dadd( -94.336, -32.3766, 24.4437, 0.44 ) }
    dend_26 { pt3dadd( -94.4159, -32.4238, 24.4604, 0.44 ) }
    dend_26 { pt3dadd( -96.1062, -33.3193, 24.8442, 0.44 ) }
    dend_26 { pt3dadd( -96.9973, -33.732, 25.0673, 0.44 ) }
    dend_26 { pt3dadd( -97.0726, -33.7606, 25.0874, 0.44 ) }
    dend_26 { pt3dadd( -98.2931, -34.1629, 25.4788, 0.44 ) }
    dend_26 { pt3dadd( -98.3686, -34.1823, 25.508, 0.44 ) }
    dend_26 { pt3dadd( -99.083, -34.349, 25.8279, 0.66 ) }
    dend_26 { pt3dadd( -99.921, -34.4827, 26.2879, 0.66 ) }
    dend_26 { pt3dadd( -100.001, -34.4959, 26.3374, 0.66 ) }
    dend_26 { pt3dadd( -100.623, -34.6232, 26.7197, 0.29 ) }
    dend_26 { pt3dadd( -100.693, -34.6407, 26.7612, 0.29 ) }
    dend_26 { pt3dadd( -101.522, -34.857, 27.1715, 0.29 ) }
    dend_26 { pt3dadd( -101.759, -34.9213, 27.2617, 0.29 ) }
    dend_26 { pt3dadd( -102.216, -35.0495, 27.4222, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_26 { pt3dadd( -102.471, -35.1131, 27.4994, 0.96 ) }
    dend_26 { pt3dadd( -103.051, -35.2438, 27.6482, 1.25 ) }
    dend_26 { pt3dadd( -103.553, -35.3334, 27.7724, 1.25 ) }
    dend_26 { pt3dadd( -103.987, -35.3901, 27.8747, 1.25 ) }
    dend_26 { pt3dadd( -104.614, -35.4706, 28.0218, 0.88 ) }
    dend_26 { pt3dadd( -105.473, -35.5851, 28.2226, 0.37 ) }
    dend_26 { pt3dadd( -105.565, -35.5983, 28.2442, 0.37 ) }
    dend_26 { pt3dadd( -106.853, -35.7981, 28.547, 0.37 ) }
    dend_26 { pt3dadd( -108.4, -36.0463, 28.9091, 0.37 ) }
    dend_26 { pt3dadd( -108.48, -36.059, 28.9276, 0.37 ) }
    dend_26 { pt3dadd( -109.471, -36.2118, 29.1472, 0.37 ) }
    dend_26 { pt3dadd( -109.563, -36.226, 29.1673, 0.37 ) }
    dend_26 { pt3dadd( -110.443, -36.3578, 29.3554, 0.37 ) }
    dend_26 { pt3dadd( -110.536, -36.3714, 29.3747, 0.74 ) }
    dend_26 { pt3dadd( -111.225, -36.4678, 29.5162, 1.4 ) }
    dend_26 { pt3dadd( -111.843, -36.5119, 29.6362, 1.69 ) }
    dend_26 { pt3dadd( -112.114, -36.5195, 29.6869, 1.84 ) }
    dend_26 { pt3dadd( -112.549, -36.5231, 29.7677, 1.99 ) }
    dend_26 { pt3dadd( -113.173, -36.5208, 29.8834, 1.99 ) }
    dend_26 { pt3dadd( -114.676, -36.5135, 30.1648, 0.66 ) }
    dend_26 { pt3dadd( -116.448, -36.4576, 30.5349, 0.37 ) }
    dend_26 { pt3dadd( -116.786, -36.4378, 30.6104, 0.37 ) }
    dend_26 { pt3dadd( -118.157, -36.301, 30.9265, 0.37 ) }
    dend_26 { pt3dadd( -118.238, -36.2896, 30.9453, 0.37 ) }
    dend_26 { pt3dadd( -119.419, -36.0675, 31.2203, 0.37 ) }
    dend_26 { pt3dadd( -120.528, -35.8057, 31.4494, 0.37 ) }
    dend_26 { pt3dadd( -121.301, -35.6016, 31.5608, 0.88 ) }
    dend_26 { pt3dadd( -122.575, -35.2168, 31.6738, 1.55 ) }
    dend_26 { pt3dadd( -123.691, -34.8609, 31.693, 1.84 ) }
    dend_26 { pt3dadd( -124.483, -34.6195, 31.6686, 1.84 ) }
    dend_26 { pt3dadd( -125.552, -34.3083, 31.6096, 1.25 ) }
    dend_26 { pt3dadd( -126.959, -33.9384, 31.5118, 0.37 ) }
    dend_26 { pt3dadd( -128.359, -33.5846, 31.4575, 0.29 ) }
    dend_26 { pt3dadd( -129.151, -33.3932, 31.4578, 0.15 ) }
    dend_26 { pt3dadd( -129.88, -33.2184, 31.4975, 0.15 ) }
    dend_26 { pt3dadd( -130.928, -32.9482, 31.6369, 0.15 ) }
    dend_26 { pt3dadd( -131.699, -32.6938, 31.8653, 0.66 ) }
    dend_26 { pt3dadd( -132.408, -32.3808, 32.174, 1.11 ) }
    dend_26 { pt3dadd( -132.946, -32.0872, 32.4458, 1.11 ) }
    dend_26 { pt3dadd( -133.009, -32.0475, 32.4826, 1.11 ) }
    dend_26 { pt3dadd( -133.687, -31.5736, 32.8936, 1.11 ) }
    dend_26 { pt3dadd( -134.669, -30.9012, 33.4712, 0.29 ) }
    dend_26 { pt3dadd( -135.358, -30.4518, 33.9294, 0.29 ) }
    dend_26 { pt3dadd( -135.418, -30.414, 33.972, 0.29 ) }
    dend_26 { pt3dadd( -136.868, -29.5891, 35.0205, 0.29 ) }
    dend_26 { pt3dadd( -136.921, -29.5619, 35.0589, 0.29 ) }
    dend_26 { pt3dadd( -137.686, -29.2463, 35.581, 0.29 ) }
    dend_26 { pt3dadd( -138.771, -28.8962, 36.2352, 0.29 ) }
    dend_26 { pt3dadd( -138.922, -28.8537, 36.3214, 0.29 ) }
    dend_26 { pt3dadd( -139.959, -28.6411, 36.7697, 0.96 ) }
    dend_26 { pt3dadd( -140.396, -28.5836, 36.8866, 1.69 ) }
    dend_26 { pt3dadd( -141.351, -28.4908, 37.0466, 2.21 ) }
    dend_26 { pt3dadd( -141.968, -28.4476, 37.0982, 2.21 ) }
    dend_26 { pt3dadd( -142.052, -28.4439, 37.1002, 2.21 ) }
    dend_26 { pt3dadd( -143.726, -28.3846, 37.0486, 0.29 ) }
    dend_26 { pt3dadd( -144.98, -28.3287, 36.9612, 0.29 ) }
    dend_26 { pt3dadd( -145.894, -28.2749, 36.8771, 1.03 ) }
    dend_26 { pt3dadd( -146.422, -28.2342, 36.8211, 1.03 ) }
    dend_26 { pt3dadd( -147.201, -28.156, 36.7356, 1.03 ) }
    dend_26 { pt3dadd( -148.529, -27.9978, 36.5736, 0.29 ) }
    dend_26 { pt3dadd( -150.095, -27.7508, 36.3839, 0.29 ) }
    dend_26 { pt3dadd( -150.335, -27.7127, 36.3531, 0.29 ) }
    dend_26 { pt3dadd( -150.777, -27.6354, 36.3081, 0.66 ) }
    dend_26 { pt3dadd( -151.047, -27.5838, 36.2841, 0.66 ) }
    dend_26 { pt3dadd( -151.877, -27.4134, 36.1975, 0.44 ) }
    dend_26 { pt3dadd( -153.019, -27.1625, 36.0942, 0.44 ) }
    dend_26 { pt3dadd( -153.111, -27.1414, 36.0817, 0.44 ) }
    dend_26 { pt3dadd( -154.078, -26.9222, 35.953, 0.44 ) }
    dend_26 { pt3dadd( -154.314, -26.8709, 35.9136, 0.88 ) }
    dend_26 { pt3dadd( -155.613, -26.6035, 35.711, 1.33 ) }
    dend_26 { pt3dadd( -155.914, -26.54, 35.6671, 1.33 ) }
    dend_26 { pt3dadd( -156.379, -26.452, 35.6142, 1.33 ) }
    dend_26 { pt3dadd( -157.335, -26.2855, 35.5456, 0.88 ) }
    dend_26 { pt3dadd( -158.308, -26.174, 35.5416, 0.29 ) }
    dend_26 { pt3dadd( -159.805, -26.0717, 35.6463, 0.29 ) }
    dend_26 { pt3dadd( -160.0, -26.0742, 35.681, 0.29 ) }
    dend_26 { pt3dadd( -160.94, -26.1482, 35.8607, 0.29 ) }
    dend_26 { pt3dadd( -161.064, -26.1638, 35.8864, 0.29 ) }
    dend_26 { pt3dadd( -162.138, -26.3549, 36.1462, 0.29 ) }
    dend_26 { pt3dadd( -162.227, -26.3758, 36.1713, 0.29 ) }
    dend_26 { pt3dadd( -163.222, -26.6784, 36.4139, 0.29 ) }
    dend_26 { pt3dadd( -164.01, -26.9071, 36.4483, 1.55 ) }
    dend_26 { pt3dadd( -164.471, -26.998, 36.4015, 1.92 ) }
    dend_26 { pt3dadd( -164.553, -27.0046, 36.3895, 1.92 ) }
    dend_26 { pt3dadd( -164.976, -27.0217, 36.2892, 1.92 ) }
    dend_26 { pt3dadd( -165.069, -27.0241, 36.2644, 1.92 ) }
    dend_26 { pt3dadd( -167.003, -27.0648, 35.5677, 0.29 ) }
    dend_26 { pt3dadd( -168.485, -27.112, 34.9688, 0.29 ) }
    dend_26 { pt3dadd( -169.972, -27.1578, 34.349, 0.29 ) }
    dend_26 { pt3dadd( -171.531, -27.2061, 33.6431, 0.29 ) }
    dend_26 { pt3dadd( -171.784, -27.2126, 33.524, 0.74 ) }
    dend_26 { pt3dadd( -173.451, -27.2452, 32.7654, 0.74 ) }
    dend_26 { pt3dadd( -173.794, -27.2503, 32.6135, 0.37 ) }
    dend_26 { pt3dadd( -175.01, -27.3034, 32.0754, 0.37 ) }
    dend_26 { pt3dadd( -176.224, -27.3575, 31.5974, 0.96 ) }
    dend_26 { pt3dadd( -176.903, -27.3628, 31.3838, 0.96 ) }
    dend_26 { pt3dadd( -178.105, -27.3543, 31.0739, 0.29 ) }
    dend_26 { pt3dadd( -178.188, -27.352, 31.0589, 0.29 ) }
    dend_26 { pt3dadd( -178.925, -27.3273, 30.9111, 0.29 ) }
    dend_26 { pt3dadd( -179.728, -27.2761, 30.7501, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_26 { pt3dadd( -180.911, -27.1637, 30.5689, 1.62 ) }
    dend_26 { pt3dadd( -181.892, -27.0486, 30.4435, 1.62 ) }
    dend_26 { pt3dadd( -181.986, -27.0345, 30.4348, 1.62 ) }
    dend_26 { pt3dadd( -182.711, -26.8983, 30.4084, 0.29 ) }
    dend_26 { pt3dadd( -183.904, -26.6159, 30.4482, 0.29 ) }
    dend_26 { pt3dadd( -184.66, -26.4249, 30.554, 0.29 ) }
    dend_26 { pt3dadd( -185.423, -26.2255, 30.7182, 1.03 ) }
    dend_26 { pt3dadd( -185.942, -26.0918, 30.8578, 1.03 ) }
    dend_26 { pt3dadd( -186.47, -25.964, 31.0193, 1.03 ) }
    dend_26 { pt3dadd( -187.39, -25.7513, 31.3438, 0.66 ) }
    dend_26 { pt3dadd( -188.297, -25.5531, 31.6673, 0.29 ) }
    dend_26 { pt3dadd( -188.872, -25.4346, 31.8544, 0.29 ) }
    dend_26 { pt3dadd( -189.781, -25.2308, 32.0937, 1.18 ) }
    dend_26 { pt3dadd( -190.199, -25.1353, 32.1905, 1.47 ) }
    dend_26 { pt3dadd( -190.29, -25.1139, 32.209, 1.47 ) }
    dend_26 { pt3dadd( -190.968, -24.9526, 32.3237, 1.47 ) }
    dend_26 { pt3dadd( -192.075, -24.6874, 32.4689, 0.29 ) }
    dend_26 { pt3dadd( -193.756, -24.3097, 32.5701, 0.29 ) }
    dend_26 { pt3dadd( -194.223, -24.2209, 32.5758, 1.03 ) }
    dend_26 { pt3dadd( -194.306, -24.2069, 32.5758, 1.03 ) }
    dend_26 { pt3dadd( -195.004, -24.1213, 32.5315, 1.03 ) }
    dend_26 { pt3dadd( -195.702, -24.0645, 32.452, 1.03 ) }
    dend_26 { pt3dadd( -197.07, -24.0375, 32.2482, 0.29 ) }
    dend_26 { pt3dadd( -198.365, -24.0837, 32.0255, 0.29 ) }
    dend_26 { pt3dadd( -198.459, -24.088, 32.0098, 0.29 ) }
    dend_26 { pt3dadd( -200.822, -24.2371, 31.602, 0.29 ) }
    dend_26 { pt3dadd( -200.904, -24.2439, 31.5886, 0.29 ) }
    dend_26 { pt3dadd( -202.359, -24.357, 31.3437, 0.29 ) }
    dend_26 { pt3dadd( -202.429, -24.3628, 31.3337, 0.29 ) }
    dend_26 { pt3dadd( -203.215, -24.428, 31.195, 0.29 ) }
    dend_26 { pt3dadd( -203.309, -24.4334, 31.1786, 0.29 ) }
    dend_26 { pt3dadd( -204.963, -24.4727, 30.8275, 0.29 ) }
    dend_26 { pt3dadd( -206.187, -24.4561, 30.5317, 0.29 ) }
    dend_26 { pt3dadd( -207.076, -24.4173, 30.2892, 2.21 ) }
    dend_26 { pt3dadd( -208.396, -24.3489, 29.9235, 2.58 ) }
    dend_26 { pt3dadd( -209.078, -24.3081, 29.725, 2.58 ) }
    dend_26 { pt3dadd( -210.836, -24.1218, 29.2326, 0.37 ) }
    dend_26 { pt3dadd( -212.02, -23.9385, 28.9064, 0.37 ) }
    dend_26 { pt3dadd( -212.111, -23.9226, 28.8845, 0.37 ) }
    dend_26 { pt3dadd( -212.709, -23.7848, 28.7561, 0.37 ) }
    dend_26 { pt3dadd( -212.789, -23.7634, 28.7448, 0.37 ) }
    dend_26 { pt3dadd( -214.463, -23.2875, 28.5506, 0.37 ) }
    dend_26 { pt3dadd( -214.583, -23.2501, 28.5353, 0.37 ) }
    dend_26 { pt3dadd( -216.055, -22.8086, 28.2851, 0.37 ) }
    dend_26 { pt3dadd( -216.887, -22.5733, 28.1452, 0.88 ) }
    dend_26 { pt3dadd( -217.822, -22.3192, 27.9954, 0.88 ) }
    dend_26 { pt3dadd( -217.902, -22.3014, 27.9814, 0.88 ) }
    dend_26 { pt3dadd( -219.058, -22.1244, 27.7554, 0.37 ) }
    dend_26 { pt3dadd( -220.529, -21.9259, 27.4545, 0.37 ) }
    dend_26 { pt3dadd( -221.395, -21.8192, 27.2763, 1.03 ) }
    dend_26 { pt3dadd( -222.251, -21.7093, 27.124, 1.03 ) }
    dend_26 { pt3dadd( -223.547, -21.5268, 26.9044, 0.37 ) }
    dend_26 { pt3dadd( -224.557, -21.3704, 26.763, 0.37 ) }
    dend_26 { pt3dadd( -224.682, -21.3504, 26.7513, 0.37 ) }
    dend_26 { pt3dadd( -225.032, -21.2979, 26.7147, 0.37 ) }
    dend_26 { pt3dadd( -227.642, -20.9737, 26.4996, 0.37 ) }
    dend_26 { pt3dadd( -229.016, -20.847, 26.4109, 1.84 ) }
    dend_26 { pt3dadd( -229.822, -20.7813, 26.3798, 2.28 ) }
    dend_26 { pt3dadd( -230.972, -20.7329, 26.3645, 1.4 ) }
    dend_26 { pt3dadd( -232.194, -20.7723, 26.384, 0.29 ) }
    dend_26 { pt3dadd( -233.546, -20.8962, 26.4381, 0.37 ) }
    dend_26 { pt3dadd( -234.695, -21.0801, 26.5169, 0.37 ) }
    dend_26 { pt3dadd( -234.776, -21.0949, 26.5253, 0.37 ) }
    dend_26 { pt3dadd( -237.411, -21.6051, 26.8752, 0.37 ) }
    dend_26 { pt3dadd( -239.3, -21.9155, 27.1881, 0.37 ) }
    dend_26 { pt3dadd( -240.248, -22.0305, 27.38, 1.55 ) }
    dend_26 { pt3dadd( -240.798, -22.0735, 27.5071, 1.92 ) }
    dend_26 { pt3dadd( -241.393, -22.0978, 27.6629, 1.92 ) }
    dend_26 { pt3dadd( -242.362, -22.1043, 27.9271, 0.29 ) }
    dend_26 { pt3dadd( -244.343, -21.9746, 28.5714, 0.29 ) }
    dend_26 { pt3dadd( -245.902, -21.7518, 29.1364, 0.29 ) }
    dend_26 { pt3dadd( -246.336, -21.682, 29.3061, 1.18 ) }
    dend_26 { pt3dadd( -246.421, -21.666, 29.3469, 1.18 ) }
    dend_26 { pt3dadd( -246.95, -21.5702, 29.6342, 1.33 ) }
    dend_26 { pt3dadd( -247.922, -21.4053, 30.2147, 1.33 ) }
    dend_26 { pt3dadd( -248.591, -21.3159, 30.6538, 0.29 ) }
    dend_26 { pt3dadd( -249.692, -21.1958, 31.3619, 0.29 ) }
    dend_26 { pt3dadd( -251.238, -21.073, 32.276, 0.29 ) }
    dend_26 { pt3dadd( -252.632, -20.9902, 33.0555, 0.29 ) }
    dend_26 { pt3dadd( -252.717, -20.9873, 33.0994, 0.29 ) }
    dend_26 { pt3dadd( -253.669, -20.9853, 33.5526, 0.29 ) }
    dend_26 { pt3dadd( -254.314, -21.0004, 33.8528, 0.81 ) }
    dend_26 { pt3dadd( -254.801, -21.0244, 34.0642, 0.81 ) }
    dend_26 { pt3dadd( -254.891, -21.0326, 34.0959, 0.81 ) }
    dend_26 { pt3dadd( -255.213, -21.0662, 34.2169, 0.81 ) }
    dend_26 { pt3dadd( -256.298, -21.19, 34.6459, 0.22 ) }
    dend_26 { pt3dadd( -257.688, -21.3618, 35.2168, 0.22 ) }
    dend_26 { pt3dadd( -257.802, -21.3766, 35.2691, 0.22 ) }
    dend_26 { pt3dadd( -258.826, -21.5119, 35.7632, 0.22 ) }
    dend_26 { pt3dadd( -259.295, -21.5751, 35.9903, 0.66 ) }
    dend_26 { pt3dadd( -259.848, -21.6567, 36.237, 0.81 ) }
    dend_26 { pt3dadd( -260.424, -21.7468, 36.4635, 0.81 ) }
    dend_26 { pt3dadd( -261.339, -21.8878, 36.8213, 0.29 ) }
    dend_26 { pt3dadd( -261.428, -21.8995, 36.8538, 0.29 ) }
    dend_26 { pt3dadd( -262.431, -22.0119, 37.1926, 0.29 ) }
    dend_26 { pt3dadd( -263.38, -22.0989, 37.4627, 0.96 ) }
    dend_26 { pt3dadd( -263.9, -22.1307, 37.5783, 0.96 ) }
    dend_26 { pt3dadd( -263.983, -22.1342, 37.5935, 0.96 ) }
    dend_26 { pt3dadd( -264.784, -22.1411, 37.7091, 0.29 ) }
    dend_26 { pt3dadd( -264.867, -22.1395, 37.7216, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_26 { pt3dadd( -266.446, -22.1147, 37.8991, 0.29 ) }
    dend_26 { pt3dadd( -267.239, -22.1019, 37.9712, 1.4 ) }
    dend_26 { pt3dadd( -267.873, -22.0812, 38.0108, 1.77 ) }
    dend_26 { pt3dadd( -268.624, -22.0517, 38.044, 1.77 ) }
    dend_26 { pt3dadd( -269.245, -22.03, 38.0634, 1.77 ) }
    dend_26 { pt3dadd( -270.691, -21.9783, 38.0983, 0.29 ) }
    dend_26 { pt3dadd( -270.774, -21.9737, 38.1, 0.29 ) }
    dend_26 { pt3dadd( -272.614, -21.8434, 38.1553, 0.29 ) }
    dend_26 { pt3dadd( -272.78, -21.8285, 38.1625, 0.29 ) }
    dend_26 { pt3dadd( -273.678, -21.7426, 38.1904, 0.29 ) }
    dend_26 { pt3dadd( -273.772, -21.7287, 38.1933, 0.29 ) }
    dend_26 { pt3dadd( -275.184, -21.4553, 38.2383, 0.81 ) }
    dend_26 { pt3dadd( -275.277, -21.4355, 38.2385, 0.81 ) }
    dend_26 { pt3dadd( -275.71, -21.3504, 38.2278, 1.11 ) }
    dend_26 { pt3dadd( -276.93, -21.1869, 38.2148, 0.15 ) }
    dend_26 { pt3dadd( -278.46, -21.0503, 38.1813, 0.15 ) }
    dend_26 { pt3dadd( -278.819, -21.0326, 38.1748, 1.03 ) }
    dend_26 { pt3dadd( -279.645, -21.0204, 38.1623, 1.47 ) }
    dend_26 { pt3dadd( -281.351, -21.0644, 38.0766, 0.22 ) }
    dend_26 { pt3dadd( -284.313, -21.2474, 37.8656, 0.22 ) }
    dend_26 { pt3dadd( -284.895, -21.3167, 37.8501, 1.03 ) }
    dend_26 { pt3dadd( -285.674, -21.4586, 37.8571, 1.03 ) }
    dend_26 { pt3dadd( -285.755, -21.476, 37.8609, 1.03 ) }
    dend_26 { pt3dadd( -288.021, -22.0375, 38.0401, 0.22 ) }
    dend_26 { pt3dadd( -288.101, -22.0592, 38.0498, 0.22 ) }
    dend_26 { pt3dadd( -290.697, -22.8319, 38.4373, 0.22 ) }
    dend_26 { pt3dadd( -292.137, -23.2759, 38.6889, 0.22 ) }
    dend_26 { pt3dadd( -292.818, -23.4975, 38.7942, 1.33 ) }
    dend_26 { pt3dadd( -293.52, -23.7324, 38.9, 1.77 ) }
    dend_26 { pt3dadd( -293.864, -23.8501, 38.9566, 1.77 ) }
    dend_26 { pt3dadd( -294.934, -24.2088, 39.0596, 0.22 ) }
    dend_26 { pt3dadd( -296.717, -24.8038, 39.0307, 0.22 ) }
    dend_26 { pt3dadd( -297.818, -25.162, 38.9896, 0.59 ) }
    dend_26 { pt3dadd( -297.897, -25.1868, 38.9871, 0.59 ) }
    dend_26 { pt3dadd( -298.589, -25.3938, 38.9782, 0.59 ) }
    dend_26 { pt3dadd( -299.44, -25.633, 38.9939, 0.22 ) }
    dend_26 { pt3dadd( -299.532, -25.6583, 39.0019, 0.22 ) }
    dend_26 { pt3dadd( -300.342, -25.901, 39.1392, 0.22 ) }
    dend_26 { pt3dadd( -301.178, -26.1736, 39.3677, 1.03 ) }
    dend_26 { pt3dadd( -301.638, -26.3444, 39.5076, 1.03 ) }
    dend_26 { pt3dadd( -301.711, -26.3748, 39.5319, 1.03 ) }
    dend_26 { pt3dadd( -302.04, -26.5214, 39.6699, 1.03 ) }
    dend_26 { pt3dadd( -302.796, -26.8507, 40.0206, 0.22 ) }
    dend_26 { pt3dadd( -302.866, -26.8795, 40.055, 0.22 ) }
    dend_26 { pt3dadd( -303.724, -27.2275, 40.482, 0.22 ) }
    dend_26 { pt3dadd( -305.017, -27.7308, 41.1091, 0.22 ) }
    dend_26 { pt3dadd( -305.875, -28.0175, 41.4833, 1.33 ) }
    dend_26 { pt3dadd( -306.448, -28.185, 41.7131, 1.69 ) }
    dend_26 { pt3dadd( -307.094, -28.3395, 41.9408, 1.69 ) }
    dend_26 { pt3dadd( -308.271, -28.5778, 42.3267, 0.22 ) }
    dend_26 { pt3dadd( -308.351, -28.5896, 42.3501, 0.22 ) }
    dend_26 { pt3dadd( -310.315, -28.788, 42.8501, 0.22 ) }
    dend_26 { pt3dadd( -310.396, -28.7923, 42.8668, 0.22 ) }
    dend_26 { pt3dadd( -311.862, -28.8073, 43.1538, 0.22 ) }
    dend_26 { pt3dadd( -311.956, -28.7974, 43.1721, 0.22 ) }
    dend_26 { pt3dadd( -312.324, -28.712, 43.2423, 0.96 ) }
    dend_26 { pt3dadd( -312.733, -28.5684, 43.3164, 1.33 ) }
    dend_26 { pt3dadd( -313.366, -28.2596, 43.4223, 1.33 ) }
    dend_26 { pt3dadd( -313.437, -28.2185, 43.4326, 1.33 ) }
    dend_26 { pt3dadd( -315.297, -27.0047, 43.6745, 0.22 ) }
    dend_26 { pt3dadd( -315.591, -26.7937, 43.7323, 0.22 ) }
    dend_26 { pt3dadd( -316.785, -25.8591, 44.0139, 0.22 ) }
    dend_26 { pt3dadd( -317.112, -25.5817, 44.0984, 0.22 ) }
    dend_26 { pt3dadd( -318.541, -24.292, 44.4427, 0.22 ) }
    dend_26 { pt3dadd( -318.63, -24.2074, 44.4627, 0.22 ) }
    dend_26 { pt3dadd( -320.044, -22.7313, 44.7278, 0.22 ) }
    dend_26 { pt3dadd( -320.944, -21.7556, 44.8743, 1.55 ) }
    dend_26 { pt3dadd( -321.32, -21.327, 44.9213, 2.06 ) }
    dend_26 { pt3dadd( -322.122, -20.3887, 44.984, 0.15 ) }
    dend_26 { pt3dadd( -322.197, -20.3014, 44.985, 0.15 ) }
    dend_26 { pt3dadd( -323.448, -18.8787, 44.926, 0.15 ) }
    dend_26 { pt3dadd( -323.652, -18.6558, 44.8988, 0.15 ) }
    dend_26 { pt3dadd( -324.551, -17.6847, 44.8013, 0.15 ) }
    dend_26 { pt3dadd( -324.766, -17.462, 44.7821, 0.15 ) }
    dend_26 { pt3dadd( -326.093, -16.113, 44.7047, 0.15 ) }
    dend_26 { pt3dadd( -326.16, -16.049, 44.7006, 0.15 ) }
    dend_26 { pt3dadd( -326.308, -15.9235, 44.6911, 0.59 ) }
    dend_26 { pt3dadd( -326.828, -15.4997, 44.6399, 0.59 ) }
    dend_26 { pt3dadd( -327.206, -15.2108, 44.5875, 0.15 ) }
    dend_26 { pt3dadd( -327.271, -15.1623, 44.5762, 0.15 ) }
    dend_26 { pt3dadd( -328.466, -14.2767, 44.2954, 0.15 ) }
    dend_26 { pt3dadd( -328.531, -14.2294, 44.2794, 0.15 ) }
    dend_26 { pt3dadd( -328.858, -13.9892, 44.1946, 0.74 ) }
    dend_26 { pt3dadd( -328.921, -13.9395, 44.1793, 0.74 ) }
    dend_26 { pt3dadd( -329.323, -13.5767, 44.0929, 0.74 ) }
    dend_26 { pt3dadd( -329.381, -13.5204, 44.0798, 0.74 ) }
    dend_26 { pt3dadd( -329.538, -13.3466, 44.0419, 0.22 ) }
    dend_26 { pt3dadd( -329.659, -13.2228, 44.0241, 0.22 ) }
    dend_26 { pt3dadd( -330.473, -12.4171, 43.9614, 0.22 ) }
    dend_26 { pt3dadd( -330.661, -12.246, 43.9256, 0.66 ) }
    dend_26 { pt3dadd( -330.724, -12.1973, 43.9091, 0.66 ) }
    dend_26 { pt3dadd( -331.051, -11.9912, 43.8285, 0.81 ) }
    dend_26 { pt3dadd( -331.608, -11.6742, 43.6941, 0.81 ) }
    dend_26 { pt3dadd( -331.68, -11.6372, 43.6784, 0.81 ) }
    dend_26 { pt3dadd( -332.566, -11.27, 43.4787, 0.22 ) }
    dend_26 { pt3dadd( -333.05, -11.0882, 43.408, 0.22 ) }
    dend_26 { pt3dadd( -334.336, -10.6109, 43.2316, 0.22 ) }
    dend_26 { pt3dadd( -334.509, -10.5478, 43.2111, 1.03 ) }
    dend_26 { pt3dadd( -335.349, -10.23, 43.189, 1.03 ) }
    dend_26 { pt3dadd( -338.079, -9.16235, 43.3173, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_26 { pt3dadd( -340.853, -8.10782, 43.7058, 0.22 ) }
    dend_26 { pt3dadd( -341.408, -7.90826, 43.8113, 1.25 ) }
    dend_26 { pt3dadd( -342.495, -7.55285, 44.0731, 1.47 ) }
    dend_26 { pt3dadd( -344.868, -6.82767, 44.8504, 0.22 ) }
    dend_26 { pt3dadd( -345.045, -6.78539, 44.9284, 0.22 ) }
    dend_26 { pt3dadd( -347.746, -6.33504, 46.5566, 0.22 ) }
    dend_26 { pt3dadd( -348.041, -6.31302, 46.7553, 1.18 ) }
    dend_26 { pt3dadd( -348.308, -6.31294, 46.9287, 1.18 ) }
    dend_26 { pt3dadd( -349.52, -6.47493, 47.6849, 0.22 ) }
    dend_26 { pt3dadd( -351.177, -6.88305, 48.5552, 0.22 ) }
    dend_26 { pt3dadd( -351.245, -6.90833, 48.5953, 0.22 ) }
    dend_26 { pt3dadd( -351.506, -7.06698, 48.7684, 0.88 ) }
    dend_26 { pt3dadd( -351.998, -7.39053, 49.0749, 0.88 ) }
    dend_26 { pt3dadd( -353.382, -8.33795, 49.8488, 0.15 ) }
    dend_26 { pt3dadd( -353.683, -8.56047, 49.9856, 0.44 ) }
    dend_26 { pt3dadd( -354.003, -8.80602, 50.1226, 0.44 ) }
    dend_26 { pt3dadd( -355.513, -9.92882, 50.7053, 0.15 ) }
    dend_26 { pt3dadd( -355.578, -9.97392, 50.7269, 0.15 ) }
    dend_26 { pt3dadd( -356.247, -10.4248, 50.9125, 0.15 ) }
    dend_26 { pt3dadd( -356.736, -10.7212, 50.9929, 0.66 ) }
    dend_26 { pt3dadd( -357.098, -10.9413, 51.0589, 0.88 ) }
    dend_26 { pt3dadd( -357.178, -10.9891, 51.0707, 0.88 ) }
    dend_26 { pt3dadd( -357.705, -11.2802, 51.079, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.1159, 33.3337, -1.64224, 1.33 ) }
    dend_6 { pt3dadd( 1.81678, 34.2888, -1.60945, 1.33 ) }
    dend_6 { pt3dadd( 1.48474, 35.4319, -1.59202, 1.62 ) }
    dend_6 { pt3dadd( 1.23179, 36.2823, -1.53728, 1.62 ) }
    dend_6 { pt3dadd( 0.891733, 37.4022, -1.44514, 1.47 ) }
    dend_6 { pt3dadd( 0.586208, 38.412, -1.35481, 1.47 ) }
    dend_6 { pt3dadd( -0.735864, 42.6985, -0.864806, 1.47 ) }
    dend_6 { pt3dadd( -1.14033, 44.0474, -0.685819, 1.47 ) }
    dend_6 { pt3dadd( -1.58231, 45.4907, -0.464848, 1.47 ) }
    dend_6 { pt3dadd( -1.79021, 46.1903, -0.336273, 1.47 ) }
    dend_6 { pt3dadd( -2.0079, 46.9207, -0.18359, 1.47 ) }
    dend_6 { pt3dadd( -2.30706, 47.8864, 0.0781371, 1.47 ) }
    dend_6 { pt3dadd( -2.53923, 48.5816, 0.351427, 1.47 ) }
    dend_6 { pt3dadd( -2.55602, 48.6336, 0.369571, 1.47 ) }
    dend_6 { pt3dadd( -2.86315, 49.7012, 0.63124, 1.47 ) }
    dend_6 { pt3dadd( -2.8804, 49.7644, 0.644635, 1.47 ) }
    dend_6 { pt3dadd( -3.2187, 51.1144, 0.85517, 1.47 ) }
    dend_6 { pt3dadd( -3.39356, 51.9763, 0.882037, 1.47 ) }
    dend_6 { pt3dadd( -3.55966, 52.9418, 0.845605, 1.47 ) }
    dend_6 { pt3dadd( -3.68675, 53.9042, 0.70727, 1.62 ) }
    dend_6 { pt3dadd( -3.69416, 53.9779, 0.68971, 1.62 ) }
    dend_6 { pt3dadd( -3.77662, 54.91, 0.426141, 1.62 ) }
    dend_6 { pt3dadd( -3.88564, 56.3041, -0.0264625, 1.62 ) }
    dend_6 { pt3dadd( -3.95707, 57.1521, -0.349103, 1.62 ) }
    dend_6 { pt3dadd( -4.07569, 58.33, -0.813511, 1.62 ) }
    dend_6 { pt3dadd( -4.16146, 59.0716, -1.10796, 1.62 ) }
    dend_6 { pt3dadd( -4.27662, 59.8698, -1.39902, 1.69 ) }
    dend_6 { pt3dadd( -4.41744, 60.6823, -1.67051, 1.69 ) }
    dend_6 { pt3dadd( -4.71594, 62.0984, -2.05272, 1.84 ) }
    dend_6 { pt3dadd( -4.97537, 63.2225, -2.32226, 1.84 ) }
    dend_6 { pt3dadd( -4.99256, 63.2952, -2.338, 1.84 ) }
    dend_6 { pt3dadd( -5.33433, 64.7995, -2.6916, 1.84 ) }
    dend_6 { pt3dadd( -5.36149, 64.9363, -2.72323, 1.84 ) }
    dend_6 { pt3dadd( -5.52163, 66.0738, -3.0408, 1.84 ) }
    dend_6 { pt3dadd( -5.52713, 66.1377, -3.05915, 1.84 ) }
    dend_6 { pt3dadd( -5.58614, 67.3568, -3.43626, 1.84 ) }
    dend_6 { pt3dadd( -5.5865, 67.4209, -3.45457, 1.84 ) }
    dend_6 { pt3dadd( -5.54336, 68.8405, -3.82684, 1.84 ) }
    dend_6 { pt3dadd( -5.42916, 70.8501, -4.28598, 1.84 ) }
    dend_6 { pt3dadd( -5.34208, 71.7947, -4.50465, 1.84 ) }
    dend_6 { pt3dadd( -5.22797, 72.8114, -4.72853, 2.06 ) }
    dend_6 { pt3dadd( -5.00619, 74.6501, -5.08916, 2.06 ) }
    dend_6 { pt3dadd( -4.87632, 75.6709, -5.28214, 2.43 ) }
    dend_6 { pt3dadd( -4.75129, 76.5529, -5.43322, 2.65 ) }
    dend_6 { pt3dadd( -4.59708, 77.5381, -5.52993, 2.65 ) }
    dend_6 { pt3dadd( -4.47865, 78.1845, -5.61113, 2.5 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.1159, 33.3337, -1.64224, 1.25 ) }
    dend_3 { pt3dadd( 3.07227, 34.2519, -1.51348, 1.25 ) }
    dend_3 { pt3dadd( 4.3627, 35.4702, -1.37309, 1.11 ) }
    dend_3 { pt3dadd( 5.39791, 36.4672, -1.26729, 1.03 ) }
    dend_3 { pt3dadd( 6.25538, 37.3013, -1.22137, 1.25 ) }
    dend_3 { pt3dadd( 7.1032, 38.1407, -1.19476, 1.33 ) }
    dend_3 { pt3dadd( 7.71507, 38.7653, -1.20567, 1.33 ) }
    dend_3 { pt3dadd( 8.73585, 39.9001, -1.29182, 1.33 ) }
    dend_3 { pt3dadd( 9.74564, 41.0447, -1.47093, 1.33 ) }
    dend_3 { pt3dadd( 10.5837, 42.0375, -1.68895, 0.88 ) }
    dend_3 { pt3dadd( 11.1934, 42.8201, -1.8892, 0.88 ) }
    dend_3 { pt3dadd( 11.8274, 43.6833, -2.12982, 0.88 ) }
    dend_3 { pt3dadd( 12.4329, 44.568, -2.41225, 0.88 ) }
    dend_3 { pt3dadd( 13.0054, 45.4746, -2.75984, 1.11 ) }
    dend_3 { pt3dadd( 13.0443, 45.5385, -2.7846, 1.11 ) }
    dend_3 { pt3dadd( 13.5891, 46.4518, -3.10793, 1.11 ) }
    dend_3 { pt3dadd( 13.6457, 46.5433, -3.13665, 1.11 ) }
    dend_3 { pt3dadd( 14.4012, 47.6806, -3.4173, 1.4 ) }
    dend_3 { pt3dadd( 14.8237, 48.2962, -3.55662, 1.4 ) }
    dend_3 { pt3dadd( 15.5019, 49.2417, -3.72276, 0.96 ) }
    dend_3 { pt3dadd( 16.0114, 49.922, -3.82416, 0.81 ) }
    dend_3 { pt3dadd( 16.7768, 50.8902, -3.93514, 0.81 ) }
    dend_3 { pt3dadd( 17.3826, 51.632, -3.97443, 1.11 ) }
    dend_3 { pt3dadd( 17.4344, 51.6919, -3.97204, 1.11 ) }
    dend_3 { pt3dadd( 17.8883, 52.1897, -3.94477, 1.33 ) }
    dend_3 { pt3dadd( 18.4073, 52.7587, -3.90224, 1.84 ) }
    dend_3 { pt3dadd( 18.7626, 53.1517, -3.87314, 1.99 ) }
    dend_3 { pt3dadd( 19.316, 53.7734, -3.84138, 1.99 ) }
    dend_3 { pt3dadd( 19.8265, 54.3507, -3.8491, 1.62 ) }
    dend_3 { pt3dadd( 20.4894, 55.1336, -3.89299, 1.33 ) }
    dend_3 { pt3dadd( 20.9094, 55.6507, -3.94409, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_3 { pt3dadd( 21.4555, 56.3306, -4.07856, 0.66 ) }
    dend_3 { pt3dadd( 22.006, 57.0572, -4.31674, 0.66 ) }
    dend_3 { pt3dadd( 22.6552, 57.9547, -4.71107, 0.66 ) }
    dend_3 { pt3dadd( 23.1416, 58.6795, -5.09027, 0.59 ) }
    dend_3 { pt3dadd( 23.1792, 58.7384, -5.12772, 0.59 ) }
    dend_3 { pt3dadd( 23.7383, 59.6559, -5.79037, 0.59 ) }
    dend_3 { pt3dadd( 24.2622, 60.609, -6.50348, 0.81 ) }
    dend_3 { pt3dadd( 24.2912, 60.6671, -6.54897, 0.81 ) }
    dend_3 { pt3dadd( 24.4675, 61.0517, -6.82508, 1.03 ) }
    dend_3 { pt3dadd( 24.9378, 62.0535, -7.51064, 1.03 ) }
    dend_3 { pt3dadd( 24.9674, 62.1183, -7.54389, 1.03 ) }
    dend_3 { pt3dadd( 25.2485, 62.7936, -7.72672, 1.25 ) }
    dend_3 { pt3dadd( 25.2814, 62.8758, -7.73703, 1.25 ) }
    dend_3 { pt3dadd( 25.5651, 63.5885, -7.85306, 1.4 ) }
    dend_3 { pt3dadd( 25.5927, 63.6605, -7.8651, 1.4 ) }
    dend_3 { pt3dadd( 25.8836, 64.4814, -7.98405, 1.4 ) }
    dend_3 { pt3dadd( 26.2062, 65.398, -8.18981, 1.55 ) }
    dend_3 { pt3dadd( 26.4737, 66.1798, -8.40434, 1.62 ) }
    dend_3 { pt3dadd( 26.8458, 67.3528, -8.7393, 1.62 ) }
    dend_3 { pt3dadd( 27.0247, 67.9532, -8.91682, 1.25 ) }
    dend_3 { pt3dadd( 27.2315, 68.6516, -9.11255, 0.96 ) }
    dend_3 { pt3dadd( 27.5457, 69.7347, -9.41111, 0.96 ) }
    dend_3 { pt3dadd( 27.7599, 70.5182, -9.57734, 0.74 ) }
    dend_3 { pt3dadd( 28.0437, 71.6186, -9.71855, 0.52 ) }
    dend_3 { pt3dadd( 28.2341, 72.425, -9.7328, 0.37 ) }
    dend_3 { pt3dadd( 28.447, 73.3464, -9.72625, 0.37 ) }
    dend_3 { pt3dadd( 28.4706, 73.4536, -9.72454, 0.37 ) }
    dend_3 { pt3dadd( 28.6751, 74.5664, -9.72058, 0.37 ) }
    dend_3 { pt3dadd( 28.7218, 74.8666, -9.73712, 0.59 ) }
    dend_3 { pt3dadd( 28.8281, 75.6695, -9.81641, 1.33 ) }
    dend_3 { pt3dadd( 28.933, 76.5734, -9.93373, 1.84 ) }
    dend_3 { pt3dadd( 29.0617, 77.7598, -10.1515, 1.84 ) }
    dend_3 { pt3dadd( 29.1885, 78.9671, -10.4154, 1.84 ) }
    dend_3 { pt3dadd( 29.3021, 80.0711, -10.6952, 1.62 ) }
    dend_3 { pt3dadd( 29.3619, 80.6978, -10.8509, 1.33 ) }
    dend_3 { pt3dadd( 29.3751, 80.8186, -10.8829, 1.33 ) }
    dend_3 { pt3dadd( 29.4619, 81.543, -11.0646, 1.33 ) }
    dend_3 { pt3dadd( 29.5745, 82.5001, -11.2955, 0.81 ) }
    dend_3 { pt3dadd( 29.6712, 83.2926, -11.5149, 0.81 ) }
    dend_3 { pt3dadd( 29.6787, 83.3667, -11.5374, 0.81 ) }
    dend_3 { pt3dadd( 29.7737, 84.487, -11.8712, 0.59 ) }
    dend_3 { pt3dadd( 29.8279, 85.2607, -12.1091, 0.59 ) }
    dend_3 { pt3dadd( 29.8975, 86.5807, -12.5047, 0.59 ) }
    dend_3 { pt3dadd( 29.9442, 87.5915, -12.8487, 1.11 ) }
    dend_3 { pt3dadd( 29.9639, 88.4328, -13.1374, 1.4 ) }
    dend_3 { pt3dadd( 29.97, 89.1306, -13.3635, 1.77 ) }
    dend_3 { pt3dadd( 29.9667, 90.1828, -13.6958, 1.92 ) }
    dend_3 { pt3dadd( 29.9747, 91.0319, -13.9708, 1.33 ) }
    dend_3 { pt3dadd( 29.9959, 92.0913, -14.3146, 0.74 ) }
    dend_3 { pt3dadd( 30.0367, 93.4027, -14.7442, 0.74 ) }
    dend_3 { pt3dadd( 30.1071, 94.6457, -15.1724, 0.74 ) }
    dend_3 { pt3dadd( 30.1939, 95.7717, -15.569, 0.44 ) }
    dend_3 { pt3dadd( 30.2588, 96.5034, -15.8122, 0.44 ) }
    dend_3 { pt3dadd( 30.2663, 96.5772, -15.8356, 0.44 ) }
    dend_3 { pt3dadd( 30.3813, 97.6479, -16.1274, 0.44 ) }
    dend_3 { pt3dadd( 30.4857, 98.5901, -16.3692, 0.44 ) }
    dend_3 { pt3dadd( 30.5828, 99.5181, -16.573, 0.81 ) }
    dend_3 { pt3dadd( 30.6749, 100.478, -16.7459, 1.11 ) }
    dend_3 { pt3dadd( 30.7361, 101.356, -16.8889, 1.77 ) }
    dend_3 { pt3dadd( 30.7921, 102.4, -17.0247, 1.77 ) }
    dend_3 { pt3dadd( 30.8165, 103.173, -17.0884, 1.77 ) }
    dend_3 { pt3dadd( 30.8234, 103.664, -17.1238, 1.33 ) }
    dend_3 { pt3dadd( 30.8337, 104.252, -17.1603, 1.11 ) }
    dend_3 { pt3dadd( 30.8494, 105.105, -17.2157, 0.66 ) }
    dend_3 { pt3dadd( 30.8649, 106.002, -17.275, 0.52 ) }
    dend_3 { pt3dadd( 30.8819, 106.974, -17.3368, 0.52 ) }
    dend_3 { pt3dadd( 30.9069, 108.275, -17.4103, 0.88 ) }
    dend_3 { pt3dadd( 30.9204, 108.996, -17.4623, 1.62 ) }
    dend_3 { pt3dadd( 30.9435, 110.133, -17.5524, 2.21 ) }
    dend_3 { pt3dadd( 30.9514, 110.464, -17.5811, 2.65 ) }
    dend_3 { pt3dadd( 30.9629, 111.103, -17.642, 2.65 ) }
    dend_3 { pt3dadd( 30.9734, 111.908, -17.7164, 2.36 ) }
    dend_3 { pt3dadd( 30.9741, 113.173, -17.8291, 1.18 ) }
    dend_3 { pt3dadd( 30.9716, 113.978, -17.9, 0.88 ) }
    dend_3 { pt3dadd( 30.9825, 114.952, -17.9782, 0.66 ) }
    dend_3 { pt3dadd( 31.0078, 116.158, -18.0632, 0.66 ) }
    dend_3 { pt3dadd( 31.0796, 117.936, -18.1583, 0.66 ) }
    dend_3 { pt3dadd( 31.1074, 118.373, -18.163, 0.29 ) }
    dend_3 { pt3dadd( 31.1189, 118.527, -18.1568, 0.29 ) }
    dend_3 { pt3dadd( 31.1861, 119.352, -18.1099, 0.29 ) }
    dend_3 { pt3dadd( 31.194, 119.44, -18.1034, 0.29 ) }
    dend_3 { pt3dadd( 31.2744, 120.334, -18.0273, 0.29 ) }
    dend_3 { pt3dadd( 31.3672, 121.376, -17.9353, 0.29 ) }
    dend_3 { pt3dadd( 31.4045, 121.918, -17.8942, 0.81 ) }
    dend_3 { pt3dadd( 31.4391, 122.725, -17.8639, 1.11 ) }
    dend_3 { pt3dadd( 31.4504, 123.459, -17.8503, 1.47 ) }
    dend_3 { pt3dadd( 31.4556, 124.106, -17.8487, 1.84 ) }
    dend_3 { pt3dadd( 31.4531, 124.918, -17.8735, 1.84 ) }
    dend_3 { pt3dadd( 31.453, 125.729, -17.9222, 1.84 ) }
    dend_3 { pt3dadd( 31.47, 126.764, -17.9819, 0.74 ) }
    dend_3 { pt3dadd( 31.4809, 127.125, -18.0093, 0.74 ) }
    dend_3 { pt3dadd( 31.5102, 127.687, -18.0553, 0.74 ) }
    dend_3 { pt3dadd( 31.5858, 128.606, -18.1295, 0.52 ) }
    dend_3 { pt3dadd( 31.7331, 129.969, -18.2365, 0.44 ) }
    dend_3 { pt3dadd( 31.9461, 131.499, -18.3454, 0.44 ) }
    dend_3 { pt3dadd( 32.1455, 132.695, -18.418, 0.81 ) }
    dend_3 { pt3dadd( 32.3141, 133.547, -18.472, 1.18 ) }
    dend_3 { pt3dadd( 32.4461, 134.123, -18.5021, 1.33 ) }
    dend_3 { pt3dadd( 32.4688, 134.208, -18.5045, 1.33 ) }
    dend_3 { pt3dadd( 32.5762, 134.549, -18.5305, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_3 { pt3dadd( 32.602, 134.634, -18.5414, 1.33 ) }
    dend_3 { pt3dadd( 32.7451, 135.198, -18.6217, 0.88 ) }
    dend_3 { pt3dadd( 32.8697, 135.751, -18.7022, 0.66 ) }
    dend_3 { pt3dadd( 33.1033, 136.855, -18.8858, 0.52 ) }
    dend_3 { pt3dadd( 33.3153, 137.788, -19.0696, 0.29 ) }
    dend_3 { pt3dadd( 33.503, 138.596, -19.241, 0.29 ) }
    dend_3 { pt3dadd( 33.831, 140.021, -19.5482, 0.29 ) }
    dend_3 { pt3dadd( 34.1106, 141.249, -19.8098, 0.29 ) }
    dend_3 { pt3dadd( 34.3288, 142.223, -20.0076, 1.18 ) }
    dend_3 { pt3dadd( 34.5985, 143.467, -20.2316, 2.21 ) }
    dend_3 { pt3dadd( 34.6949, 143.947, -20.2971, 3.02 ) }
    dend_3 { pt3dadd( 34.841, 144.659, -20.3896, 3.02 ) }
    dend_3 { pt3dadd( 34.9772, 145.455, -20.4813, 2.43 ) }
    dend_3 { pt3dadd( 35.0445, 145.937, -20.5158, 1.77 ) }
    dend_3 { pt3dadd( 35.1227, 146.668, -20.5543, 1.33 ) }
    dend_3 { pt3dadd( 35.1654, 147.234, -20.5791, 0.88 ) }
    dend_3 { pt3dadd( 35.1946, 147.67, -20.6043, 0.37 ) }
    dend_3 { pt3dadd( 35.2527, 148.63, -20.6692, 0.37 ) }
    dend_3 { pt3dadd( 35.3042, 149.632, -20.7436, 0.37 ) }
    dend_3 { pt3dadd( 35.3701, 151.141, -20.8681, 0.22 ) }
    dend_3 { pt3dadd( 35.3899, 151.88, -20.9349, 0.81 ) }
    dend_3 { pt3dadd( 35.4138, 152.85, -21.0254, 1.25 ) }
    dend_3 { pt3dadd( 35.4234, 153.412, -21.0754, 1.62 ) }
    dend_3 { pt3dadd( 35.4335, 154.141, -21.1313, 1.62 ) }
    dend_3 { pt3dadd( 35.4382, 154.958, -21.176, 0.88 ) }
    dend_3 { pt3dadd( 35.45, 155.546, -21.1837, 0.52 ) }
    dend_3 { pt3dadd( 35.4613, 155.907, -21.1903, 0.59 ) }
    dend_3 { pt3dadd( 35.4973, 156.792, -21.2011, 0.37 ) }
    dend_3 { pt3dadd( 35.5199, 157.206, -21.2167, 0.81 ) }
    dend_3 { pt3dadd( 35.5608, 157.768, -21.2528, 0.81 ) }
    dend_3 { pt3dadd( 35.5705, 157.885, -21.2591, 0.81 ) }
    dend_3 { pt3dadd( 35.6004, 158.293, -21.2779, 0.81 ) }
    dend_3 { pt3dadd( 35.6046, 158.37, -21.2804, 0.81 ) }
    dend_3 { pt3dadd( 35.64, 159.006, -21.2963, 0.44 ) }
    dend_3 { pt3dadd( 35.6833, 159.816, -21.2781, 0.44 ) }
    dend_3 { pt3dadd( 35.7371, 160.671, -21.2279, 0.22 ) }
    dend_3 { pt3dadd( 35.8538, 162.278, -21.0943, 0.22 ) }
    dend_3 { pt3dadd( 36.0695, 164.609, -20.8467, 0.22 ) }
    dend_3 { pt3dadd( 36.0785, 164.685, -20.8368, 0.22 ) }
    dend_3 { pt3dadd( 36.2152, 165.637, -20.6867, 0.96 ) }
    dend_3 { pt3dadd( 36.387, 166.622, -20.4948, 1.69 ) }
    dend_3 { pt3dadd( 36.5382, 167.341, -20.335, 2.28 ) }
    dend_3 { pt3dadd( 36.6755, 167.894, -20.1667, 2.5 ) }
    dend_3 { pt3dadd( 36.8048, 168.363, -19.9942, 2.36 ) }
    dend_3 { pt3dadd( 36.9189, 168.77, -19.855, 1.92 ) }
    dend_3 { pt3dadd( 37.2165, 169.813, -19.528, 1.62 ) }
    dend_3 { pt3dadd( 37.5344, 170.951, -19.1611, 0.37 ) }
    dend_3 { pt3dadd( 37.8008, 171.909, -18.859, 0.29 ) }
    dend_3 { pt3dadd( 37.8233, 171.991, -18.834, 0.29 ) }
    dend_3 { pt3dadd( 38.3404, 173.834, -18.3088, 0.29 ) }
    dend_3 { pt3dadd( 38.9047, 175.72, -17.8184, 0.29 ) }
    dend_3 { pt3dadd( 38.928, 175.793, -17.8028, 0.29 ) }
    dend_3 { pt3dadd( 39.1472, 176.447, -17.6751, 1.11 ) }
    dend_3 { pt3dadd( 39.1716, 176.52, -17.6643, 1.11 ) }
    dend_3 { pt3dadd( 39.4243, 177.318, -17.5512, 1.47 ) }
    dend_3 { pt3dadd( 39.4416, 177.382, -17.5436, 1.47 ) }
    dend_3 { pt3dadd( 39.6003, 178.182, -17.5033, 1.55 ) }
    dend_3 { pt3dadd( 39.6092, 178.247, -17.5009, 1.55 ) }
    dend_3 { pt3dadd( 39.64, 178.567, -17.4926, 1.55 ) }
    dend_3 { pt3dadd( 39.6439, 178.633, -17.4895, 1.55 ) }
    dend_3 { pt3dadd( 39.6614, 179.517, -17.437, 0.66 ) }
    dend_3 { pt3dadd( 39.6694, 180.337, -17.3757, 0.37 ) }
    dend_3 { pt3dadd( 39.6648, 181.386, -17.2882, 0.29 ) }
    dend_3 { pt3dadd( 39.6625, 181.474, -17.2805, 0.29 ) }
    dend_3 { pt3dadd( 39.6387, 182.005, -17.2373, 0.44 ) }
    dend_3 { pt3dadd( 39.6251, 182.17, -17.2263, 0.44 ) }
    dend_3 { pt3dadd( 39.5536, 182.729, -17.1896, 0.44 ) }
    dend_3 { pt3dadd( 39.5389, 182.805, -17.1859, 0.44 ) }
    dend_3 { pt3dadd( 39.3799, 183.373, -17.1519, 1.03 ) }
    dend_3 { pt3dadd( 39.1578, 184.071, -17.1102, 1.03 ) }
    dend_3 { pt3dadd( 39.0052, 184.514, -17.0946, 0.74 ) }
    dend_3 { pt3dadd( 38.9097, 184.807, -17.0922, 0.37 ) }
    dend_3 { pt3dadd( 38.7961, 185.195, -17.0953, 0.37 ) }
    dend_3 { pt3dadd( 38.5631, 186.106, -17.1096, 0.22 ) }
    dend_3 { pt3dadd( 38.546, 186.181, -17.1113, 0.22 ) }
    dend_3 { pt3dadd( 38.2135, 187.924, -17.1608, 0.22 ) }
    dend_3 { pt3dadd( 38.0624, 189.001, -17.1954, 1.03 ) }
    dend_3 { pt3dadd( 37.9726, 189.971, -17.2307, 1.62 ) }
    dend_3 { pt3dadd( 37.9473, 190.376, -17.235, 1.92 ) }
    dend_3 { pt3dadd( 37.9282, 190.862, -17.2298, 1.84 ) }
    dend_3 { pt3dadd( 37.9029, 191.518, -17.1786, 1.47 ) }
    dend_3 { pt3dadd( 37.868, 192.476, -17.0483, 0.37 ) }
    dend_3 { pt3dadd( 37.7921, 193.993, -16.7873, 0.29 ) }
    dend_3 { pt3dadd( 37.7048, 195.547, -16.4949, 0.29 ) }
    dend_3 { pt3dadd( 37.6193, 196.901, -16.2338, 0.29 ) }
    dend_3 { pt3dadd( 37.5343, 198.14, -15.951, 1.03 ) }
    dend_3 { pt3dadd( 37.4852, 198.778, -15.7931, 1.77 ) }
    dend_3 { pt3dadd( 37.4313, 199.402, -15.6441, 1.77 ) }
    dend_3 { pt3dadd( 37.3768, 199.964, -15.5007, 1.4 ) }
    dend_3 { pt3dadd( 37.2974, 200.751, -15.3066, 0.66 ) }
    dend_3 { pt3dadd( 37.184, 201.745, -15.0586, 0.22 ) }
    dend_3 { pt3dadd( 36.9867, 203.405, -14.6697, 0.22 ) }
    dend_3 { pt3dadd( 36.7352, 205.273, -14.127, 0.22 ) }
    dend_3 { pt3dadd( 36.5836, 206.323, -13.7823, 0.81 ) }
    dend_3 { pt3dadd( 36.5129, 206.791, -13.6211, 1.18 ) }
    dend_3 { pt3dadd( 36.3851, 207.615, -13.3289, 1.77 ) }
    dend_3 { pt3dadd( 36.2896, 208.229, -13.1146, 1.77 ) }
    dend_3 { pt3dadd( 36.0425, 209.756, -12.5529, 0.96 ) }
    dend_3 { pt3dadd( 35.9794, 210.149, -12.4138, 0.52 ) }
    dend_3 { pt3dadd( 35.8206, 211.16, -12.1406, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_3 { pt3dadd( 35.8088, 211.235, -12.1244, 0.29 ) }
    dend_3 { pt3dadd( 35.6357, 212.318, -11.9584, 0.15 ) }
    dend_3 { pt3dadd( 35.3866, 213.84, -11.8288, 0.15 ) }
    dend_3 { pt3dadd( 35.3745, 213.917, -11.8295, 0.15 ) }
    dend_3 { pt3dadd( 35.2641, 214.611, -11.8432, 0.81 ) }
    dend_3 { pt3dadd( 35.1781, 215.17, -11.8615, 1.18 ) }
    dend_3 { pt3dadd( 35.1667, 215.246, -11.8654, 1.18 ) }
    dend_3 { pt3dadd( 35.0688, 215.911, -11.9247, 1.18 ) }
    dend_3 { pt3dadd( 35.0584, 215.988, -11.9262, 1.18 ) }
    dend_3 { pt3dadd( 34.9593, 216.716, -11.89, 0.59 ) }
    dend_3 { pt3dadd( 34.9345, 216.89, -11.8523, 0.74 ) }
    dend_3 { pt3dadd( 34.8737, 217.382, -11.7208, 0.74 ) }
    dend_3 { pt3dadd( 34.8657, 217.457, -11.7027, 0.74 ) }
    dend_3 { pt3dadd( 34.7879, 218.284, -11.5214, 0.29 ) }
    dend_3 { pt3dadd( 34.6201, 220.112, -11.1605, 0.29 ) }
    dend_3 { pt3dadd( 34.4966, 221.52, -10.9096, 0.29 ) }
    dend_3 { pt3dadd( 34.3776, 222.952, -10.689, 0.29 ) }
    dend_3 { pt3dadd( 34.3083, 223.891, -10.5712, 1.18 ) }
    dend_3 { pt3dadd( 34.2501, 224.619, -10.4873, 1.84 ) }
    dend_3 { pt3dadd( 34.1929, 225.108, -10.4491, 1.84 ) }
    dend_3 { pt3dadd( 34.103, 225.665, -10.4259, 1.47 ) }
    dend_3 { pt3dadd( 33.9895, 226.243, -10.4339, 1.11 ) }
    dend_3 { pt3dadd( 33.8071, 226.957, -10.428, 0.44 ) }
    dend_3 { pt3dadd( 33.5808, 227.751, -10.4005, 0.22 ) }
    dend_3 { pt3dadd( 33.1687, 229.111, -10.3704, 0.22 ) }
    dend_3 { pt3dadd( 32.9746, 229.717, -10.3653, 0.29 ) }
    dend_3 { pt3dadd( 32.8943, 229.96, -10.3679, 0.29 ) }
    dend_3 { pt3dadd( 32.6224, 230.79, -10.3974, 0.29 ) }
    dend_3 { pt3dadd( 32.572, 230.948, -10.4085, 0.29 ) }
    dend_3 { pt3dadd( 32.3342, 231.834, -10.5017, 0.29 ) }
    dend_3 { pt3dadd( 32.314, 231.92, -10.5084, 0.29 ) }
    dend_3 { pt3dadd( 32.167, 232.561, -10.5517, 0.88 ) }
    dend_3 { pt3dadd( 32.0448, 233.136, -10.5936, 1.55 ) }
    dend_3 { pt3dadd( 31.924, 233.782, -10.6418, 1.55 ) }
    dend_3 { pt3dadd( 31.8494, 234.251, -10.6749, 1.18 ) }
    dend_3 { pt3dadd( 31.7628, 234.942, -10.7169, 0.74 ) }
    dend_3 { pt3dadd( 31.6965, 235.519, -10.7638, 0.44 ) }
    dend_3 { pt3dadd( 31.6084, 236.324, -10.8387, 0.29 ) }
    dend_3 { pt3dadd( 31.6006, 236.401, -10.8462, 0.29 ) }
    dend_3 { pt3dadd( 31.443, 238.015, -11.0096, 0.29 ) }
    dend_3 { pt3dadd( 31.2383, 240.016, -11.2169, 0.29 ) }
    dend_3 { pt3dadd( 31.1356, 240.951, -11.3132, 1.11 ) }
    dend_3 { pt3dadd( 31.0564, 241.589, -11.3919, 1.84 ) }
    dend_3 { pt3dadd( 30.9555, 242.306, -11.4965, 2.21 ) }
    dend_3 { pt3dadd( 30.9444, 242.381, -11.5105, 2.21 ) }
    dend_3 { pt3dadd( 30.8584, 242.908, -11.6289, 2.21 ) }
    dend_3 { pt3dadd( 30.7107, 243.791, -11.843, 1.03 ) }
    dend_3 { pt3dadd( 30.5644, 244.69, -12.0545, 0.66 ) }
    dend_3 { pt3dadd( 30.3835, 245.806, -12.3566, 0.37 ) }
    dend_3 { pt3dadd( 30.1403, 247.286, -12.79, 0.37 ) }
    dend_3 { pt3dadd( 30.0141, 248.089, -13.0311, 0.96 ) }
    dend_3 { pt3dadd( 29.9381, 248.627, -13.1935, 0.96 ) }
    dend_3 { pt3dadd( 29.9263, 248.711, -13.2188, 0.96 ) }
    dend_3 { pt3dadd( 29.8187, 249.504, -13.4632, 0.96 ) }
    dend_3 { pt3dadd( 29.7455, 250.057, -13.6607, 0.52 ) }
    dend_3 { pt3dadd( 29.6981, 250.432, -13.7953, 0.52 ) }
    dend_3 { pt3dadd( 29.6392, 250.967, -13.9754, 0.52 ) }
    dend_3 { pt3dadd( 29.6213, 251.138, -14.0243, 0.52 ) }
    dend_3 { pt3dadd( 29.5525, 251.789, -14.1746, 0.29 ) }
    dend_3 { pt3dadd( 29.495, 252.368, -14.2722, 0.29 ) }
    dend_3 { pt3dadd( 29.4187, 253.092, -14.3806, 0.22 ) }
    dend_3 { pt3dadd( 29.301, 254.158, -14.5127, 0.22 ) }
    dend_3 { pt3dadd( 29.2193, 254.793, -14.5641, 1.03 ) }
    dend_3 { pt3dadd( 29.1523, 255.303, -14.5843, 1.4 ) }
    dend_3 { pt3dadd( 29.0711, 255.862, -14.5826, 1.4 ) }
    dend_3 { pt3dadd( 28.9717, 256.605, -14.5735, 1.4 ) }
    dend_3 { pt3dadd( 28.8663, 257.407, -14.5583, 0.81 ) }
    dend_3 { pt3dadd( 28.7711, 258.151, -14.5543, 0.29 ) }
    dend_3 { pt3dadd( 28.711, 258.629, -14.5595, 0.29 ) }
    dend_3 { pt3dadd( 28.6631, 259.043, -14.5694, 0.29 ) }
    dend_3 { pt3dadd( 28.5061, 260.496, -14.6245, 0.29 ) }
    dend_3 { pt3dadd( 28.499, 260.572, -14.6304, 0.29 ) }
    dend_3 { pt3dadd( 28.4294, 261.405, -14.7625, 1.03 ) }
    dend_3 { pt3dadd( 28.3746, 262.195, -14.9309, 1.69 ) }
    dend_3 { pt3dadd( 28.3487, 262.581, -15.0295, 1.69 ) }
    dend_3 { pt3dadd( 28.3102, 263.286, -15.2235, 1.33 ) }
    dend_3 { pt3dadd( 28.2753, 264.033, -15.4413, 0.59 ) }
    dend_3 { pt3dadd( 28.2382, 264.823, -15.6683, 0.22 ) }
    dend_3 { pt3dadd( 28.1446, 267.017, -16.2895, 0.22 ) }
    dend_3 { pt3dadd( 28.1053, 267.807, -16.5163, 0.81 ) }
    dend_3 { pt3dadd( 28.0706, 268.44, -16.6973, 1.18 ) }
    dend_3 { pt3dadd( 28.0601, 268.591, -16.7346, 1.18 ) }
    dend_3 { pt3dadd( 28.0224, 269.058, -16.8261, 1.18 ) }
    dend_3 { pt3dadd( 28.0151, 269.134, -16.8369, 1.18 ) }
    dend_3 { pt3dadd( 27.9879, 269.374, -16.8693, 1.18 ) }
    dend_3 { pt3dadd( 27.8731, 270.32, -16.9653, 0.37 ) }
    dend_3 { pt3dadd( 27.6554, 272.099, -17.1351, 0.22 ) }
    dend_3 { pt3dadd( 27.6462, 272.186, -17.1423, 0.22 ) }
    dend_3 { pt3dadd( 27.5937, 272.836, -17.1842, 0.96 ) }
    dend_3 { pt3dadd( 27.5891, 272.902, -17.1873, 0.96 ) }
    dend_3 { pt3dadd( 27.5558, 273.554, -17.2014, 1.47 ) }
    dend_3 { pt3dadd( 27.5548, 273.631, -17.2034, 1.47 ) }
    dend_3 { pt3dadd( 27.578, 274.201, -17.2475, 1.47 ) }
    dend_3 { pt3dadd( 27.5868, 274.762, -17.3099, 1.18 ) }
    dend_3 { pt3dadd( 27.5843, 275.239, -17.4093, 0.96 ) }
    dend_3 { pt3dadd( 27.5738, 275.718, -17.5322, 0.59 ) }
    dend_3 { pt3dadd( 27.5563, 276.375, -17.7232, 0.29 ) }
    dend_3 { pt3dadd( 27.5382, 277.076, -17.936, 0.29 ) }
    dend_3 { pt3dadd( 27.4894, 278.353, -18.3364, 0.22 ) }
    dend_3 { pt3dadd( 27.4391, 279.488, -18.6865, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_3 { pt3dadd( 27.4325, 279.646, -18.7384, 0.59 ) }
    dend_3 { pt3dadd( 27.4187, 279.922, -18.8275, 0.88 ) }
    dend_3 { pt3dadd( 27.3819, 280.472, -18.9832, 0.88 ) }
    dend_3 { pt3dadd( 27.3202, 281.046, -19.1026, 1.03 ) }
    dend_3 { pt3dadd( 27.2598, 281.524, -19.1802, 1.03 ) }
    dend_3 { pt3dadd( 27.1543, 282.256, -19.2639, 0.74 ) }
    dend_3 { pt3dadd( 27.0432, 282.982, -19.3431, 0.37 ) }
    dend_3 { pt3dadd( 26.8738, 284.044, -19.4509, 0.29 ) }
    dend_3 { pt3dadd( 26.6125, 285.633, -19.5959, 0.22 ) }
    dend_3 { pt3dadd( 26.4774, 286.466, -19.6792, 1.11 ) }
    dend_3 { pt3dadd( 26.3738, 287.097, -19.7428, 1.77 ) }
    dend_3 { pt3dadd( 26.2865, 287.653, -19.7923, 2.14 ) }
    dend_3 { pt3dadd( 26.2074, 288.221, -19.8504, 2.14 ) }
    dend_3 { pt3dadd( 26.1262, 288.875, -19.931, 1.77 ) }
    dend_3 { pt3dadd( 26.0162, 289.9, -20.0715, 0.81 ) }
    dend_3 { pt3dadd( 25.946, 290.55, -20.1512, 0.29 ) }
    dend_3 { pt3dadd( 25.7092, 292.805, -20.4234, 0.29 ) }
    dend_3 { pt3dadd( 25.6189, 293.759, -20.5625, 0.29 ) }
    dend_3 { pt3dadd( 25.5511, 294.598, -20.6988, 0.96 ) }
    dend_3 { pt3dadd( 25.506, 295.321, -20.8232, 1.11 ) }
    dend_3 { pt3dadd( 25.4993, 295.485, -20.8508, 1.11 ) }
    dend_3 { pt3dadd( 25.4809, 296.042, -20.9467, 1.11 ) }
    dend_3 { pt3dadd( 25.4359, 297.082, -21.1053, 0.66 ) }
    dend_3 { pt3dadd( 25.4064, 297.565, -21.1614, 0.29 ) }
    dend_3 { pt3dadd( 25.3997, 297.653, -21.1689, 0.29 ) }
    dend_3 { pt3dadd( 25.2826, 298.929, -21.2487, 0.29 ) }
    dend_3 { pt3dadd( 25.0421, 301.364, -21.347, 0.29 ) }
    dend_3 { pt3dadd( 24.897, 302.689, -21.3687, 0.96 ) }
    dend_3 { pt3dadd( 24.7924, 303.576, -21.3586, 1.99 ) }
    dend_3 { pt3dadd( 24.7076, 304.306, -21.3542, 2.28 ) }
    dend_3 { pt3dadd( 24.6165, 305.116, -21.3546, 1.25 ) }
    dend_3 { pt3dadd( 24.5548, 305.678, -21.3595, 0.52 ) }
    dend_3 { pt3dadd( 24.483, 306.421, -21.3745, 0.29 ) }
    dend_3 { pt3dadd( 24.3768, 307.636, -21.4208, 0.29 ) }
    dend_3 { pt3dadd( 24.3334, 308.139, -21.4444, 0.29 ) }
    dend_3 { pt3dadd( 24.2351, 309.2, -21.5, 0.29 ) }
    dend_3 { pt3dadd( 24.1791, 309.766, -21.5334, 1.03 ) }
    dend_3 { pt3dadd( 24.1704, 309.843, -21.5355, 1.03 ) }
    dend_3 { pt3dadd( 24.0648, 310.661, -21.5277, 1.03 ) }
    dend_3 { pt3dadd( 24.0264, 310.901, -21.5132, 1.03 ) }
    dend_3 { pt3dadd( 23.9415, 311.333, -21.4646, 1.03 ) }
    dend_3 { pt3dadd( 23.925, 311.408, -21.4523, 1.03 ) }
    dend_3 { pt3dadd( 23.7846, 312.179, -21.331, 0.59 ) }
    dend_3 { pt3dadd( 23.7722, 312.255, -21.3232, 0.59 ) }
    dend_3 { pt3dadd( 23.6903, 312.813, -21.2946, 0.29 ) }
    dend_3 { pt3dadd( 23.6743, 312.93, -21.2935, 0.29 ) }
    dend_3 { pt3dadd( 23.6053, 313.503, -21.3046, 0.29 ) }
    dend_3 { pt3dadd( 23.4747, 314.552, -21.3529, 0.22 ) }
    dend_3 { pt3dadd( 23.2915, 316.11, -21.4942, 0.22 ) }
    dend_3 { pt3dadd( 23.2338, 316.626, -21.5466, 0.88 ) }
    dend_3 { pt3dadd( 23.1526, 317.518, -21.6538, 1.4 ) }
    dend_3 { pt3dadd( 23.0924, 318.317, -21.7589, 1.55 ) }
    dend_3 { pt3dadd( 23.0548, 318.926, -21.8385, 1.55 ) }
    dend_3 { pt3dadd( 23.0215, 319.663, -21.9286, 1.55 ) }
    dend_3 { pt3dadd( 23.0037, 320.712, -22.0401, 0.52 ) }
    dend_3 { pt3dadd( 22.9958, 322.663, -22.206, 0.15 ) }
    dend_3 { pt3dadd( 22.9963, 322.74, -22.2115, 0.15 ) }
    dend_3 { pt3dadd( 23.0004, 323.181, -22.2345, 0.74 ) }
    dend_3 { pt3dadd( 23.0068, 323.904, -22.2531, 0.74 ) }
    dend_3 { pt3dadd( 22.9968, 324.395, -22.2513, 0.74 ) }
    dend_3 { pt3dadd( 22.9766, 324.804, -22.2472, 0.74 ) }
    dend_3 { pt3dadd( 22.9268, 325.372, -22.2395, 0.29 ) }
    dend_3 { pt3dadd( 22.8575, 326.016, -22.2432, 0.29 ) }
    dend_3 { pt3dadd( 22.7305, 326.985, -22.2709, 0.29 ) }
    dend_3 { pt3dadd( 22.5836, 327.962, -22.3057, 0.29 ) }
    dend_3 { pt3dadd( 22.4786, 328.601, -22.3327, 0.96 ) }
    dend_3 { pt3dadd( 22.3489, 329.325, -22.3712, 1.25 ) }
    dend_3 { pt3dadd( 22.2702, 329.755, -22.3966, 1.25 ) }
    dend_3 { pt3dadd( 22.1154, 330.565, -22.4482, 0.52 ) }
    dend_3 { pt3dadd( 21.9865, 331.199, -22.4917, 0.52 ) }
    dend_3 { pt3dadd( 21.6227, 332.971, -22.6513, 0.52 ) }
    dend_3 { pt3dadd( 21.2534, 334.837, -22.8472, 0.52 ) }
    dend_3 { pt3dadd( 21.2367, 334.923, -22.8572, 0.52 ) }
    dend_3 { pt3dadd( 20.9944, 336.231, -23.0185, 0.52 ) }
    dend_3 { pt3dadd( 20.8871, 336.911, -23.1321, 0.52 ) }
    dend_3 { pt3dadd( 20.8223, 337.409, -23.2338, 0.37 ) }
    dend_3 { pt3dadd( 20.7156, 338.516, -23.5001, 0.37 ) }
    dend_3 { pt3dadd( 20.6544, 339.407, -23.7218, 0.37 ) }
    dend_3 { pt3dadd( 20.6222, 340.037, -23.8718, 1.25 ) }
    dend_3 { pt3dadd( 20.5981, 341.422, -24.2609, 2.43 ) }
    dend_3 { pt3dadd( 20.5981, 342.13, -24.466, 2.43 ) }
    dend_3 { pt3dadd( 20.603, 342.76, -24.6637, 2.43 ) }
    dend_3 { pt3dadd( 20.6282, 343.833, -25.0411, 0.96 ) }
    dend_3 { pt3dadd( 20.6473, 344.455, -25.2692, 0.59 ) }
    dend_3 { pt3dadd( 20.6807, 345.669, -25.7019, 0.29 ) }
    dend_3 { pt3dadd( 20.7097, 346.817, -26.1243, 0.29 ) }
    dend_3 { pt3dadd( 20.7534, 347.886, -26.5048, 0.29 ) }
    dend_3 { pt3dadd( 20.7712, 348.218, -26.6179, 0.59 ) }
    dend_3 { pt3dadd( 20.799, 348.701, -26.7671, 0.81 ) }
    dend_3 { pt3dadd( 20.8415, 349.497, -26.9788, 0.81 ) }
    dend_3 { pt3dadd( 20.8981, 350.622, -27.2167, 0.22 ) }
    dend_3 { pt3dadd( 20.9999, 353.184, -27.6088, 0.22 ) }
    dend_3 { pt3dadd( 21.0307, 354.196, -27.6973, 1.18 ) }
    dend_3 { pt3dadd( 21.0578, 355.168, -27.7399, 1.62 ) }
    dend_3 { pt3dadd( 21.0775, 355.732, -27.7341, 1.62 ) }
    dend_3 { pt3dadd( 21.0913, 356.13, -27.708, 1.62 ) }
    dend_3 { pt3dadd( 21.1257, 357.436, -27.4653, 0.96 ) }
    dend_3 { pt3dadd( 21.1407, 358.061, -27.2933, 0.29 ) }
    dend_3 { pt3dadd( 21.1578, 358.853, -27.0406, 0.29 ) }
    dend_3 { pt3dadd( 21.2077, 360.797, -26.3919, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_3 { pt3dadd( 21.2108, 360.902, -26.3572, 0.29 ) }
    dend_3 { pt3dadd( 21.2695, 362.319, -25.9136, 0.81 ) }
    dend_3 { pt3dadd( 21.3026, 362.869, -25.7668, 1.11 ) }
    dend_3 { pt3dadd( 21.3247, 363.414, -25.6152, 1.11 ) }
    dend_3 { pt3dadd( 21.3296, 363.727, -25.5363, 1.11 ) }
    dend_3 { pt3dadd( 21.3305, 363.803, -25.5236, 1.11 ) }
    dend_3 { pt3dadd( 21.3148, 364.398, -25.486, 0.74 ) }
    dend_3 { pt3dadd( 21.2839, 364.968, -25.4936, 0.37 ) }
    dend_3 { pt3dadd( 21.1713, 366.149, -25.5287, 0.37 ) }
    dend_3 { pt3dadd( 20.987, 367.431, -25.5848, 0.29 ) }
    dend_3 { pt3dadd( 20.7557, 368.615, -25.6738, 0.22 ) }
    dend_3 { pt3dadd( 20.3805, 370.167, -25.8319, 0.22 ) }
    dend_3 { pt3dadd( 20.1556, 370.885, -25.9006, 0.96 ) }
    dend_3 { pt3dadd( 19.8923, 371.601, -25.9679, 1.62 ) }
    dend_3 { pt3dadd( 19.602, 372.291, -26.0305, 1.62 ) }
    dend_3 { pt3dadd( 19.2518, 373.033, -26.0786, 0.74 ) }
    dend_3 { pt3dadd( 18.9489, 373.63, -26.0969, 0.37 ) }
    dend_3 { pt3dadd( 17.939, 375.626, -26.1226, 0.22 ) }
    dend_3 { pt3dadd( 17.9045, 375.697, -26.1235, 0.22 ) }
    dend_3 { pt3dadd( 17.5476, 376.472, -26.1333, 0.96 ) }
    dend_3 { pt3dadd( 17.3439, 376.948, -26.1399, 1.62 ) }
    dend_3 { pt3dadd( 17.0544, 377.668, -26.1506, 1.62 ) }
    dend_3 { pt3dadd( 16.7237, 378.514, -26.1839, 0.29 ) }
    dend_3 { pt3dadd( 15.9608, 380.558, -26.3278, 0.29 ) }
    dend_3 { pt3dadd( 15.4719, 381.921, -26.4234, 0.29 ) }
    dend_3 { pt3dadd( 15.1639, 382.851, -26.4869, 0.29 ) }
    dend_3 { pt3dadd( 15.0215, 383.317, -26.517, 0.74 ) }
    dend_3 { pt3dadd( 14.8617, 383.912, -26.5524, 0.96 ) }
    dend_3 { pt3dadd( 14.8044, 384.149, -26.5662, 0.96 ) }
    dend_3 { pt3dadd( 14.6573, 384.791, -26.5846, 0.44 ) }
    dend_3 { pt3dadd( 14.4665, 385.503, -26.591, 0.29 ) }
    dend_3 { pt3dadd( 14.1708, 386.51, -26.5876, 0.22 ) }
    dend_3 { pt3dadd( 14.1328, 386.63, -26.5868, 0.22 ) }
    dend_3 { pt3dadd( 13.8495, 387.494, -26.564, 0.22 ) }
    dend_3 { pt3dadd( 13.6347, 388.151, -26.5397, 0.88 ) }
    dend_3 { pt3dadd( 13.2797, 389.259, -26.517, 1.55 ) }
    dend_3 { pt3dadd( 13.0414, 390.034, -26.517, 1.84 ) }
    dend_3 { pt3dadd( 12.8047, 390.878, -26.5289, 1.84 ) }
    dend_3 { pt3dadd( 12.4962, 392.046, -26.5607, 0.29 ) }
    dend_3 { pt3dadd( 12.3116, 392.833, -26.5922, 0.29 ) }
    dend_3 { pt3dadd( 12.0445, 394.111, -26.6654, 0.29 ) }
    dend_3 { pt3dadd( 11.7371, 395.749, -26.7577, 0.29 ) }
    dend_3 { pt3dadd( 11.591, 396.549, -26.806, 0.88 ) }
    dend_3 { pt3dadd( 11.5767, 396.636, -26.8116, 0.88 ) }
    dend_3 { pt3dadd( 11.4678, 397.346, -26.863, 1.4 ) }
    dend_3 { pt3dadd( 11.3544, 398.072, -26.9024, 1.55 ) }
    dend_3 { pt3dadd( 11.2581, 398.71, -26.9291, 1.55 ) }
    dend_3 { pt3dadd( 11.2444, 398.787, -26.9337, 1.55 ) }
    dend_3 { pt3dadd( 11.0601, 399.655, -27.0065, 0.66 ) }
    dend_3 { pt3dadd( 10.944, 400.135, -27.054, 0.37 ) }
    dend_3 { pt3dadd( 10.649, 401.249, -27.1775, 0.37 ) }
    dend_3 { pt3dadd( 10.3088, 402.458, -27.3207, 0.37 ) }
    dend_3 { pt3dadd( 9.92217, 403.733, -27.4882, 0.37 ) }
    dend_3 { pt3dadd( 9.66352, 404.554, -27.6002, 0.96 ) }
    dend_3 { pt3dadd( 9.38715, 405.375, -27.7168, 1.84 ) }
    dend_3 { pt3dadd( 9.23055, 405.832, -27.7793, 2.14 ) }
    dend_3 { pt3dadd( 8.94701, 406.637, -27.8816, 1.84 ) }
    dend_3 { pt3dadd( 8.61709, 407.535, -27.9451, 0.81 ) }
    dend_3 { pt3dadd( 8.44055, 407.999, -27.9603, 0.29 ) }
    dend_3 { pt3dadd( 8.11167, 408.814, -27.9651, 0.29 ) }
    dend_3 { pt3dadd( 7.39293, 410.498, -27.9507, 0.29 ) }
    dend_3 { pt3dadd( 6.75774, 411.942, -27.9212, 0.29 ) }
    dend_3 { pt3dadd( 6.3083, 412.941, -27.8832, 1.03 ) }
    dend_3 { pt3dadd( 5.96933, 413.688, -27.8441, 1.4 ) }
    dend_3 { pt3dadd( 5.70306, 414.291, -27.8122, 1.4 ) }
    dend_3 { pt3dadd( 5.32958, 415.164, -27.7688, 0.66 ) }
    dend_3 { pt3dadd( 5.14822, 415.619, -27.7527, 0.29 ) }
    dend_3 { pt3dadd( 5.12376, 415.693, -27.7525, 0.29 ) }
    dend_3 { pt3dadd( 4.8628, 416.69, -27.7986, 0.29 ) }
    dend_3 { pt3dadd( 4.65087, 417.725, -27.8355, 0.29 ) }
    dend_3 { pt3dadd( 4.56255, 418.252, -27.8511, 0.96 ) }
    dend_3 { pt3dadd( 4.47367, 418.9, -27.849, 1.18 ) }
    dend_3 { pt3dadd( 4.41674, 419.294, -27.8392, 1.18 ) }
    dend_3 { pt3dadd( 4.29377, 419.942, -27.8188, 0.81 ) }
    dend_3 { pt3dadd( 4.1907, 420.425, -27.8153, 0.52 ) }
    dend_3 { pt3dadd( 4.17077, 420.501, -27.8172, 0.52 ) }
    dend_3 { pt3dadd( 3.97548, 421.104, -27.853, 0.52 ) }
    dend_3 { pt3dadd( 3.72761, 421.748, -27.8953, 0.22 ) }
    dend_3 { pt3dadd( 3.10905, 423.183, -27.9939, 0.22 ) }
    dend_3 { pt3dadd( 2.78686, 423.862, -28.0457, 1.03 ) }
    dend_3 { pt3dadd( 2.50562, 424.458, -28.093, 1.47 ) }
    dend_3 { pt3dadd( 2.10034, 425.277, -28.1679, 1.47 ) }
    dend_3 { pt3dadd( 1.83814, 425.777, -28.1978, 0.29 ) }
    dend_3 { pt3dadd( 1.54692, 426.307, -28.2022, 0.29 ) }
    dend_3 { pt3dadd( 1.25301, 426.825, -28.1785, 0.29 ) }
    dend_3 { pt3dadd( 0.669817, 427.805, -28.0993, 0.29 ) }
    dend_3 { pt3dadd( -0.0193681, 428.952, -28.0061, 0.29 ) }
    dend_3 { pt3dadd( -0.657532, 430.029, -27.9295, 0.29 ) }
    dend_3 { pt3dadd( -0.83187, 430.33, -27.9152, 1.11 ) }
    dend_3 { pt3dadd( -0.876541, 430.408, -27.906, 1.11 ) }
    dend_3 { pt3dadd( -1.24445, 431.056, -27.7886, 1.69 ) }
    dend_3 { pt3dadd( -1.53526, 431.685, -27.6606, 1.92 ) }
    dend_3 { pt3dadd( -1.70016, 432.32, -27.5496, 1.92 ) }
    dend_3 { pt3dadd( -1.80216, 432.889, -27.4664, 1.92 ) }
    dend_3 { pt3dadd( -1.93165, 434.211, -27.2947, 0.29 ) }
    dend_3 { pt3dadd( -1.97235, 434.975, -27.2023, 0.29 ) }
    dend_3 { pt3dadd( -1.98088, 437.155, -26.9692, 0.29 ) }
    dend_3 { pt3dadd( -1.90891, 439.514, -26.7566, 0.29 ) }
    dend_3 { pt3dadd( -1.90469, 439.591, -26.7514, 0.29 ) }
    dend_3 { pt3dadd( -1.71716, 442.041, -26.6541, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_3 { pt3dadd( -1.70743, 442.129, -26.6542, 0.29 ) }
    dend_3 { pt3dadd( -1.56499, 443.27, -26.6541, 1.25 ) }
    dend_3 { pt3dadd( -1.48275, 443.911, -26.6559, 1.62 ) }
    dend_3 { pt3dadd( -1.39912, 444.72, -26.6637, 1.92 ) }
    dend_3 { pt3dadd( -1.39619, 444.798, -26.6651, 1.92 ) }
    dend_3 { pt3dadd( -1.4513, 445.631, -26.6926, 1.92 ) }
    dend_3 { pt3dadd( -1.58616, 446.539, -26.7323, 1.03 ) }
    dend_3 { pt3dadd( -1.68239, 447.017, -26.7484, 0.66 ) }
    dend_3 { pt3dadd( -1.80177, 447.577, -26.764, 0.37 ) }
    dend_3 { pt3dadd( -2.30069, 449.832, -26.8197, 0.37 ) }
    dend_3 { pt3dadd( -2.7152, 451.648, -26.8238, 0.37 ) }
    dend_3 { pt3dadd( -3.2442, 453.932, -26.7869, 0.37 ) }
    dend_3 { pt3dadd( -3.50891, 455.105, -26.7461, 0.29 ) }
    dend_3 { pt3dadd( -3.91598, 457.0, -26.6477, 0.29 ) }
    dend_3 { pt3dadd( -3.93306, 457.086, -26.6415, 0.29 ) }
    dend_3 { pt3dadd( -4.08641, 458.018, -26.4952, 1.03 ) }
    dend_3 { pt3dadd( -4.17119, 458.801, -26.3063, 1.55 ) }
    dend_3 { pt3dadd( -4.2246, 459.496, -26.0466, 1.62 ) }
    dend_3 { pt3dadd( -4.27347, 460.104, -25.7716, 1.4 ) }
    dend_3 { pt3dadd( -4.35539, 460.831, -25.4016, 0.81 ) }
    dend_3 { pt3dadd( -4.55765, 462.387, -24.5937, 0.37 ) }
    dend_3 { pt3dadd( -4.79006, 463.909, -23.8204, 0.29 ) }
    dend_3 { pt3dadd( -5.05969, 465.361, -23.0522, 0.29 ) }
    dend_3 { pt3dadd( -5.07205, 465.419, -23.0204, 0.29 ) }
    dend_3 { pt3dadd( -5.26261, 466.182, -22.5985, 0.29 ) }
    dend_3 { pt3dadd( -5.27836, 466.24, -22.569, 0.29 ) }
    dend_3 { pt3dadd( -5.56598, 467.32, -22.1758, 0.29 ) }
    dend_3 { pt3dadd( -5.58955, 467.423, -22.1437, 0.29 ) }
    dend_3 { pt3dadd( -5.75401, 468.629, -21.8888, 1.11 ) }
    dend_3 { pt3dadd( -5.76126, 468.705, -21.8739, 1.11 ) }
    dend_3 { pt3dadd( -5.80707, 469.578, -21.6997, 1.92 ) }
    dend_3 { pt3dadd( -5.83827, 470.542, -21.5177, 2.28 ) }
    dend_3 { pt3dadd( -5.83272, 471.194, -21.4037, 2.5 ) }
    dend_3 { pt3dadd( -5.8119, 471.891, -21.3064, 1.99 ) }
    dend_3 { pt3dadd( -5.78689, 472.29, -21.2874, 1.99 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 35/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -157.583, -200.219, -71.9484, 0.29 ) }
    dend_29 { pt3dadd( -157.138, -201.554, -71.7434, 0.29 ) }
    dend_29 { pt3dadd( -157.117, -201.62, -71.7323, 0.29 ) }
    dend_29 { pt3dadd( -156.839, -202.748, -71.5446, 0.29 ) }
    dend_29 { pt3dadd( -156.734, -203.287, -71.4584, 0.59 ) }
    dend_29 { pt3dadd( -156.629, -203.998, -71.3523, 0.59 ) }
    dend_29 { pt3dadd( -156.621, -204.067, -71.3427, 0.59 ) }
    dend_29 { pt3dadd( -156.625, -204.364, -71.3247, 0.22 ) }
    dend_29 { pt3dadd( -156.665, -205.492, -71.3727, 0.22 ) }
    dend_29 { pt3dadd( -156.685, -205.778, -71.3982, 0.59 ) }
    dend_29 { pt3dadd( -156.739, -206.351, -71.4841, 0.59 ) }
    dend_29 { pt3dadd( -156.775, -206.717, -71.5519, 0.59 ) }
    dend_29 { pt3dadd( -156.845, -207.419, -71.6958, 0.15 ) }
    dend_29 { pt3dadd( -157.055, -210.523, -72.1919, 0.15 ) }
    dend_29 { pt3dadd( -157.063, -210.672, -72.1981, 0.15 ) }
    dend_29 { pt3dadd( -157.093, -211.289, -72.1863, 1.03 ) }
    dend_29 { pt3dadd( -157.119, -211.794, -72.1539, 1.11 ) }
    dend_29 { pt3dadd( -157.156, -212.37, -72.0911, 1.11 ) }
    dend_29 { pt3dadd( -157.281, -213.999, -71.8269, 0.15 ) }
    dend_29 { pt3dadd( -157.718, -218.218, -70.9507, 0.15 ) }
    dend_29 { pt3dadd( -157.727, -218.286, -70.9367, 0.15 ) }
    dend_29 { pt3dadd( -157.82, -218.799, -70.8264, 0.66 ) }
    dend_29 { pt3dadd( -157.936, -219.302, -70.7273, 0.66 ) }
    dend_29 { pt3dadd( -157.957, -219.377, -70.7109, 0.66 ) }
    dend_29 { pt3dadd( -157.981, -219.441, -70.696, 0.15 ) }
    dend_29 { pt3dadd( -159.021, -221.44, -69.9405, 0.15 ) }
    dend_29 { pt3dadd( -159.092, -221.571, -69.889, 0.29 ) }
    dend_29 { pt3dadd( -159.232, -221.82, -69.7858, 0.29 ) }
    dend_29 { pt3dadd( -159.905, -223.014, -69.2936, 0.15 ) }
    dend_29 { pt3dadd( -161.073, -225.085, -68.4476, 0.15 ) }
    dend_29 { pt3dadd( -161.247, -225.474, -68.1986, 0.96 ) }
    dend_29 { pt3dadd( -161.32, -225.739, -67.9366, 0.96 ) }
    dend_29 { pt3dadd( -161.338, -225.802, -67.8887, 0.96 ) }
    dend_29 { pt3dadd( -161.49, -226.327, -67.5237, 1.11 ) }
    dend_29 { pt3dadd( -161.51, -226.393, -67.4819, 1.11 ) }
    dend_29 { pt3dadd( -162.285, -229.402, -65.6266, 0.15 ) }
    dend_29 { pt3dadd( -162.302, -229.461, -65.5926, 0.15 ) }
    dend_29 { pt3dadd( -163.679, -233.951, -63.1906, 0.15 ) }
    dend_29 { pt3dadd( -163.7, -234.011, -63.1608, 0.15 ) }
    dend_29 { pt3dadd( -163.845, -234.379, -63.0038, 0.66 ) }
    dend_29 { pt3dadd( -164.193, -235.144, -62.7552, 0.66 ) }
    dend_29 { pt3dadd( -164.639, -235.965, -62.6251, 0.44 ) }
    dend_29 { pt3dadd( -164.731, -236.13, -62.5971, 0.15 ) }
    dend_29 { pt3dadd( -164.765, -236.189, -62.5805, 0.15 ) }
    dend_29 { pt3dadd( -165.577, -237.401, -62.1213, 0.15 ) }
    dend_29 { pt3dadd( -165.688, -237.553, -62.0525, 0.52 ) }
    dend_29 { pt3dadd( -165.83, -237.722, -61.9637, 0.52 ) }
    dend_29 { pt3dadd( -166.019, -237.945, -61.8435, 0.52 ) }
    dend_29 { pt3dadd( -166.537, -238.542, -61.519, 0.22 ) }
    dend_29 { pt3dadd( -168.285, -240.495, -60.3946, 0.22 ) }
    dend_29 { pt3dadd( -168.462, -240.678, -60.2755, 0.66 ) }
    dend_29 { pt3dadd( -168.892, -241.112, -59.9916, 0.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -157.583, -200.219, -71.9484, 0.22 ) }
    dend_28 { pt3dadd( -158.533, -201.501, -72.3533, 0.22 ) }
    dend_28 { pt3dadd( -158.578, -201.543, -72.3979, 0.22 ) }
    dend_28 { pt3dadd( -159.519, -202.533, -73.2102, 0.22 ) }
    dend_28 { pt3dadd( -159.564, -202.581, -73.2473, 0.22 ) }
    dend_28 { pt3dadd( -160.187, -203.318, -73.7172, 0.74 ) }
    dend_28 { pt3dadd( -160.735, -203.991, -74.1093, 1.03 ) }
    dend_28 { pt3dadd( -162.731, -206.406, -75.5603, 0.22 ) }
    dend_28 { pt3dadd( -164.184, -208.286, -76.5512, 0.22 ) }
    dend_28 { pt3dadd( -164.225, -208.344, -76.5757, 0.22 ) }
    dend_28 { pt3dadd( -165.219, -209.821, -77.1099, 0.22 ) }
    dend_28 { pt3dadd( -165.257, -209.883, -77.1288, 0.22 ) }
    dend_28 { pt3dadd( -165.41, -210.17, -77.1885, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_28 { pt3dadd( -165.822, -211.005, -77.284, 2.06 ) }
    dend_28 { pt3dadd( -166.265, -211.895, -77.4348, 2.06 ) }
    dend_28 { pt3dadd( -167.019, -213.397, -77.7129, 1.18 ) }
    dend_28 { pt3dadd( -167.854, -215.044, -78.0497, 0.22 ) }
    dend_28 { pt3dadd( -169.542, -218.362, -78.7096, 0.22 ) }
    dend_28 { pt3dadd( -169.575, -218.427, -78.7224, 0.22 ) }
    dend_28 { pt3dadd( -169.886, -219.01, -78.8596, 1.03 ) }
    dend_28 { pt3dadd( -170.245, -219.643, -78.9933, 1.03 ) }
    dend_28 { pt3dadd( -170.283, -219.706, -79.0028, 1.03 ) }
    dend_28 { pt3dadd( -170.751, -220.405, -79.0884, 1.03 ) }
    dend_28 { pt3dadd( -170.795, -220.464, -79.0969, 1.03 ) }
    dend_28 { pt3dadd( -171.826, -221.816, -79.3128, 0.22 ) }
    dend_28 { pt3dadd( -174.338, -224.944, -79.785, 0.22 ) }
    dend_28 { pt3dadd( -174.674, -225.345, -79.85, 1.33 ) }
    dend_28 { pt3dadd( -175.264, -226.02, -79.9285, 1.33 ) }
    dend_28 { pt3dadd( -175.314, -226.076, -79.9368, 1.33 ) }
    dend_28 { pt3dadd( -176.131, -226.982, -80.0695, 0.15 ) }
    dend_28 { pt3dadd( -176.747, -227.638, -80.1465, 0.15 ) }
    dend_28 { pt3dadd( -176.8, -227.69, -80.1621, 0.15 ) }
    dend_28 { pt3dadd( -178.794, -229.738, -80.7359, 0.15 ) }
    dend_28 { pt3dadd( -179.834, -230.903, -81.037, 1.47 ) }
    dend_28 { pt3dadd( -180.329, -231.512, -81.1672, 1.47 ) }
    dend_28 { pt3dadd( -180.668, -231.968, -81.2709, 1.47 ) }
    dend_28 { pt3dadd( -181.463, -233.165, -81.5747, 0.22 ) }
    dend_28 { pt3dadd( -183.053, -235.935, -82.3005, 0.22 ) }
    dend_28 { pt3dadd( -183.39, -236.641, -82.5394, 1.11 ) }
    dend_28 { pt3dadd( -183.817, -237.637, -82.8855, 1.11 ) }
    dend_28 { pt3dadd( -184.336, -239.053, -83.4312, 0.29 ) }
    dend_28 { pt3dadd( -184.616, -240.016, -83.8494, 0.29 ) }
    dend_28 { pt3dadd( -184.846, -241.096, -84.3583, 0.29 ) }
    dend_28 { pt3dadd( -185.091, -242.8, -85.362, 0.15 ) }
    dend_28 { pt3dadd( -185.104, -242.897, -85.4198, 0.15 ) }
    dend_28 { pt3dadd( -185.213, -243.967, -86.0577, 0.15 ) }
    dend_28 { pt3dadd( -185.455, -245.367, -87.2056, 1.77 ) }
    dend_28 { pt3dadd( -185.547, -245.721, -87.5931, 2.65 ) }
    dend_28 { pt3dadd( -185.56, -245.77, -87.6498, 2.65 ) }
    dend_28 { pt3dadd( -185.647, -246.132, -88.0571, 2.65 ) }
    dend_28 { pt3dadd( -185.66, -246.188, -88.1226, 2.65 ) }
    dend_28 { pt3dadd( -186.304, -249.239, -91.9654, 0.15 ) }
    dend_28 { pt3dadd( -186.314, -249.278, -92.0302, 0.15 ) }
    dend_28 { pt3dadd( -186.607, -250.314, -93.9392, 0.15 ) }
    dend_28 { pt3dadd( -186.663, -250.56, -94.4042, 1.11 ) }
    dend_28 { pt3dadd( -186.676, -250.635, -94.5497, 1.11 ) }
    dend_28 { pt3dadd( -186.708, -250.927, -95.1075, 1.25 ) }
    dend_28 { pt3dadd( -186.666, -253.814, -100.454, 0.22 ) }
    dend_28 { pt3dadd( -186.664, -253.853, -100.532, 0.22 ) }
    dend_28 { pt3dadd( -186.621, -254.279, -101.535, 0.22 ) }
    dend_28 { pt3dadd( -186.607, -254.373, -101.748, 0.59 ) }
    dend_28 { pt3dadd( -186.595, -254.446, -101.903, 0.59 ) }
    dend_28 { pt3dadd( -186.563, -254.686, -102.366, 0.59 ) }
    dend_28 { pt3dadd( -186.392, -255.563, -103.543, 1.25 ) }
    dend_28 { pt3dadd( -186.391, -255.617, -103.612, 1.25 ) }
    dend_28 { pt3dadd( -186.546, -256.595, -104.872, 1.25 ) }
    dend_28 { pt3dadd( -186.56, -256.653, -104.934, 1.25 ) }
    dend_28 { pt3dadd( -186.997, -258.009, -106.211, 0.22 ) }
    dend_28 { pt3dadd( -187.04, -258.122, -106.301, 0.22 ) }
    dend_28 { pt3dadd( -187.425, -259.076, -106.895, 0.22 ) }
    dend_28 { pt3dadd( -187.449, -259.136, -106.933, 0.22 ) }
    dend_28 { pt3dadd( -187.917, -260.282, -107.587, 0.22 ) }
    dend_28 { pt3dadd( -188.6, -261.931, -108.495, 1.18 ) }
    dend_28 { pt3dadd( -188.868, -262.599, -108.833, 2.06 ) }
    dend_28 { pt3dadd( -189.11, -263.184, -109.143, 2.06 ) }
    dend_28 { pt3dadd( -190.018, -265.236, -110.36, 0.22 ) }
    dend_28 { pt3dadd( -190.354, -265.955, -110.807, 0.22 ) }
    dend_28 { pt3dadd( -190.423, -266.094, -110.894, 0.52 ) }
    dend_28 { pt3dadd( -190.665, -266.609, -111.166, 0.52 ) }
    dend_28 { pt3dadd( -190.697, -266.68, -111.2, 0.52 ) }
    dend_28 { pt3dadd( -191.101, -267.624, -111.549, 0.22 ) }
    dend_28 { pt3dadd( -191.157, -267.784, -111.596, 0.22 ) }
    dend_28 { pt3dadd( -191.522, -268.841, -111.967, 0.22 ) }
    dend_28 { pt3dadd( -191.618, -269.115, -112.067, 0.96 ) }
    dend_28 { pt3dadd( -191.949, -269.953, -112.412, 0.96 ) }
    dend_28 { pt3dadd( -191.977, -270.017, -112.439, 0.96 ) }
    dend_28 { pt3dadd( -192.558, -271.266, -112.94, 0.22 ) }
    dend_28 { pt3dadd( -193.208, -272.596, -113.525, 0.22 ) }
    dend_28 { pt3dadd( -193.254, -272.683, -113.583, 0.22 ) }
    dend_28 { pt3dadd( -193.62, -273.355, -114.041, 1.25 ) }
    dend_28 { pt3dadd( -193.815, -273.696, -114.271, 1.55 ) }
    dend_28 { pt3dadd( -193.924, -273.876, -114.379, 1.55 ) }
    dend_28 { pt3dadd( -194.111, -274.174, -114.536, 1.55 ) }
    dend_28 { pt3dadd( -195.246, -275.873, -115.447, 0.22 ) }
    dend_28 { pt3dadd( -196.12, -277.173, -116.072, 0.22 ) }
    dend_28 { pt3dadd( -196.372, -277.529, -116.221, 0.44 ) }
    dend_28 { pt3dadd( -196.711, -277.961, -116.378, 0.44 ) }
    dend_28 { pt3dadd( -196.824, -278.087, -116.413, 0.15 ) }
    dend_28 { pt3dadd( -197.413, -278.521, -116.695, 0.15 ) }
    dend_28 { pt3dadd( -197.483, -278.56, -116.729, 0.15 ) }
    dend_28 { pt3dadd( -198.285, -278.957, -117.211, 1.11 ) }
    dend_28 { pt3dadd( -198.982, -279.288, -117.69, 1.33 ) }
    dend_28 { pt3dadd( -199.165, -279.373, -117.822, 1.33 ) }
    dend_28 { pt3dadd( -202.372, -280.817, -120.202, 0.22 ) }
    dend_28 { pt3dadd( -203.202, -281.172, -120.818, 0.22 ) }
    dend_28 { pt3dadd( -203.27, -281.198, -120.868, 0.22 ) }
    dend_28 { pt3dadd( -204.173, -281.518, -121.52, 1.55 ) }
    dend_28 { pt3dadd( -204.585, -281.668, -121.795, 1.99 ) }
    dend_28 { pt3dadd( -204.647, -281.696, -121.829, 1.99 ) }
    dend_28 { pt3dadd( -205.476, -282.128, -122.121, 1.99 ) }
    dend_28 { pt3dadd( -207.638, -283.298, -122.909, 0.22 ) }
    dend_28 { pt3dadd( -208.143, -283.612, -123.084, 0.22 ) }
    dend_28 { pt3dadd( -208.975, -284.229, -123.414, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_28 { pt3dadd( -209.821, -284.964, -123.911, 0.22 ) }
    dend_28 { pt3dadd( -209.868, -285.011, -123.947, 0.22 ) }
    dend_28 { pt3dadd( -210.204, -285.541, -124.312, 1.25 ) }
    dend_28 { pt3dadd( -210.463, -286.169, -124.698, 1.55 ) }
    dend_28 { pt3dadd( -210.891, -287.468, -125.536, 0.74 ) }
    dend_28 { pt3dadd( -211.224, -288.688, -126.373, 0.22 ) }
    dend_28 { pt3dadd( -211.238, -288.75, -126.414, 0.22 ) }
    dend_28 { pt3dadd( -211.592, -290.737, -127.57, 0.22 ) }
    dend_28 { pt3dadd( -211.603, -290.831, -127.615, 0.44 ) }
    dend_28 { pt3dadd( -211.638, -291.275, -127.775, 0.44 ) }
    dend_28 { pt3dadd( -211.639, -291.448, -127.799, 0.44 ) }
    dend_28 { pt3dadd( -211.609, -292.303, -127.798, 0.22 ) }
    dend_28 { pt3dadd( -211.607, -292.387, -127.797, 0.22 ) }
    dend_28 { pt3dadd( -211.682, -292.683, -127.772, 0.52 ) }
    dend_28 { pt3dadd( -211.837, -293.118, -127.727, 0.52 ) }
    dend_28 { pt3dadd( -211.872, -293.195, -127.718, 0.52 ) }
    dend_28 { pt3dadd( -212.008, -293.439, -127.681, 0.22 ) }
    dend_28 { pt3dadd( -212.05, -293.5, -127.67, 0.22 ) }
    dend_28 { pt3dadd( -213.188, -295.03, -127.381, 0.22 ) }
    dend_28 { pt3dadd( -213.293, -295.164, -127.354, 0.22 ) }
    dend_28 { pt3dadd( -213.429, -295.339, -127.304, 0.66 ) }
    dend_28 { pt3dadd( -213.655, -295.639, -127.203, 0.66 ) }
    dend_28 { pt3dadd( -213.696, -295.697, -127.181, 0.66 ) }
    dend_28 { pt3dadd( -213.944, -296.063, -127.038, 0.15 ) }
    dend_28 { pt3dadd( -214.811, -297.486, -126.408, 0.15 ) }
    dend_28 { pt3dadd( -215.182, -298.136, -126.115, 0.52 ) }
    dend_28 { pt3dadd( -215.259, -298.279, -126.049, 0.52 ) }
    dend_28 { pt3dadd( -215.483, -298.727, -125.836, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 28/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.47865, 78.1845, -5.61113, 0.59 ) }
    dend_10 { pt3dadd( -4.99264, 79.0895, -5.52655, 0.59 ) }
    dend_10 { pt3dadd( -5.76421, 80.43, -5.42477, 0.59 ) }
    dend_10 { pt3dadd( -6.30634, 81.3947, -5.35915, 0.59 ) }
    dend_10 { pt3dadd( -7.30529, 83.1856, -5.25115, 0.59 ) }
    dend_10 { pt3dadd( -8.00989, 84.4521, -5.18486, 0.59 ) }
    dend_10 { pt3dadd( -8.55485, 85.4154, -5.10687, 0.59 ) }
    dend_10 { pt3dadd( -9.01078, 86.224, -5.04075, 1.03 ) }
    dend_10 { pt3dadd( -9.22182, 86.5988, -5.02568, 1.03 ) }
    dend_10 { pt3dadd( -9.33986, 86.7986, -4.99826, 1.03 ) }
    dend_10 { pt3dadd( -9.4981, 87.0516, -4.9418, 1.03 ) }
    dend_10 { pt3dadd( -10.2292, 88.1983, -4.65169, 0.81 ) }
    dend_10 { pt3dadd( -10.7389, 89.001, -4.4542, 0.81 ) }
    dend_10 { pt3dadd( -11.4385, 90.0855, -4.19052, 0.74 ) }
    dend_10 { pt3dadd( -12.1262, 91.1343, -3.97756, 1.18 ) }
    dend_10 { pt3dadd( -12.5253, 91.7227, -3.86715, 1.18 ) }
    dend_10 { pt3dadd( -12.9883, 92.3646, -3.78991, 1.18 ) }
    dend_10 { pt3dadd( -13.0567, 92.4549, -3.78878, 1.18 ) }
    dend_10 { pt3dadd( -13.4586, 92.9479, -3.81119, 1.18 ) }
    dend_10 { pt3dadd( -13.9952, 93.5839, -3.88089, 1.18 ) }
    dend_10 { pt3dadd( -14.8563, 94.5836, -4.06411, 1.03 ) }
    dend_10 { pt3dadd( -15.9167, 95.7818, -4.30221, 0.88 ) }
    dend_10 { pt3dadd( -16.9119, 96.898, -4.53832, 0.88 ) }
    dend_10 { pt3dadd( -17.6447, 97.746, -4.74065, 1.03 ) }
    dend_10 { pt3dadd( -18.1646, 98.3894, -4.909, 1.03 ) }
    dend_10 { pt3dadd( -18.8089, 99.27, -5.15742, 1.03 ) }
    dend_10 { pt3dadd( -18.8577, 99.3439, -5.18021, 1.03 ) }
    dend_10 { pt3dadd( -19.3521, 100.183, -5.4419, 0.88 ) }
    dend_10 { pt3dadd( -19.8303, 101.133, -5.72629, 0.81 ) }
    dend_10 { pt3dadd( -20.4153, 102.581, -6.1149, 0.81 ) }
    dend_10 { pt3dadd( -20.892, 103.993, -6.41345, 0.81 ) }
    dend_10 { pt3dadd( -20.9119, 104.068, -6.42462, 0.81 ) }
    dend_10 { pt3dadd( -21.1035, 104.995, -6.51062, 0.81 ) }
    dend_10 { pt3dadd( -21.2875, 106.379, -6.55331, 0.52 ) }
    dend_10 { pt3dadd( -21.3664, 107.518, -6.5152, 0.52 ) }
    dend_10 { pt3dadd( -21.3929, 108.53, -6.37265, 1.03 ) }
    dend_10 { pt3dadd( -21.3938, 109.827, -6.07305, 1.4 ) }
    dend_10 { pt3dadd( -21.4011, 110.584, -5.85069, 1.69 ) }
    dend_10 { pt3dadd( -21.4147, 111.392, -5.54763, 1.69 ) }
    dend_10 { pt3dadd( -21.4198, 111.463, -5.51402, 1.69 ) }
    dend_10 { pt3dadd( -21.6561, 112.932, -4.76102, 1.11 ) }
    dend_10 { pt3dadd( -21.676, 113.0, -4.72433, 1.11 ) }
    dend_10 { pt3dadd( -21.8553, 113.408, -4.47576, 0.66 ) }
    dend_10 { pt3dadd( -22.1107, 113.855, -4.1979, 0.66 ) }
    dend_10 { pt3dadd( -22.8354, 114.964, -3.51863, 0.59 ) }
    dend_10 { pt3dadd( -23.1944, 115.481, -3.24051, 0.59 ) }
    dend_10 { pt3dadd( -23.8692, 116.396, -2.85656, 0.59 ) }
    dend_10 { pt3dadd( -23.9525, 116.499, -2.81813, 0.59 ) }
    dend_10 { pt3dadd( -24.6292, 117.225, -2.51759, 0.66 ) }
    dend_10 { pt3dadd( -24.6919, 117.286, -2.48772, 0.66 ) }
    dend_10 { pt3dadd( -25.1765, 117.755, -2.26268, 0.66 ) }
    dend_10 { pt3dadd( -25.5882, 118.157, -2.04207, 0.88 ) }
    dend_10 { pt3dadd( -26.213, 118.781, -1.68123, 0.88 ) }
    dend_10 { pt3dadd( -27.1866, 119.776, -1.12233, 0.88 ) }
    dend_10 { pt3dadd( -28.083, 120.686, -0.550341, 0.44 ) }
    dend_10 { pt3dadd( -28.5889, 121.211, -0.210311, 0.44 ) }
    dend_10 { pt3dadd( -29.3947, 122.089, 0.350299, 1.11 ) }
    dend_10 { pt3dadd( -29.4439, 122.144, 0.382294, 1.11 ) }
    dend_10 { pt3dadd( -30.0597, 122.891, 0.736339, 1.11 ) }
    dend_10 { pt3dadd( -31.0897, 124.222, 1.15725, 1.11 ) }
    dend_10 { pt3dadd( -31.4518, 124.701, 1.25777, 0.81 ) }
    dend_10 { pt3dadd( -31.9377, 125.362, 1.34044, 1.11 ) }
    dend_10 { pt3dadd( -32.3812, 126.003, 1.34682, 0.81 ) }
    dend_10 { pt3dadd( -32.6222, 126.358, 1.32704, 0.74 ) }
    dend_10 { pt3dadd( -32.951, 126.862, 1.26018, 0.44 ) }
    dend_10 { pt3dadd( -33.2029, 127.267, 1.16132, 0.29 ) }
    dend_10 { pt3dadd( -33.8747, 128.323, 0.898835, 0.29 ) }
    dend_10 { pt3dadd( -34.159, 128.771, 0.788297, 0.74 ) }
    dend_10 { pt3dadd( -34.4671, 129.267, 0.641516, 1.11 ) }
    dend_10 { pt3dadd( -34.5078, 129.332, 0.618814, 1.11 ) }
    dend_10 { pt3dadd( -34.7916, 129.789, 0.439493, 1.11 ) }
    dend_10 { pt3dadd( -35.0879, 130.274, 0.238144, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_10 { pt3dadd( -35.5081, 130.95, -0.0768098, 1.11 ) }
    dend_10 { pt3dadd( -35.9421, 131.645, -0.410532, 0.88 ) }
    dend_10 { pt3dadd( -35.9815, 131.708, -0.441171, 0.88 ) }
    dend_10 { pt3dadd( -36.2903, 132.185, -0.672616, 0.44 ) }
    dend_10 { pt3dadd( -36.807, 133.005, -1.06512, 0.44 ) }
    dend_10 { pt3dadd( -37.3496, 133.882, -1.46482, 0.44 ) }
    dend_10 { pt3dadd( -37.3887, 133.946, -1.49174, 0.44 ) }
    dend_10 { pt3dadd( -37.6252, 134.352, -1.63767, 0.81 ) }
    dend_10 { pt3dadd( -37.9971, 134.993, -1.83976, 1.18 ) }
    dend_10 { pt3dadd( -38.4859, 135.848, -2.06624, 1.4 ) }
    dend_10 { pt3dadd( -38.8493, 136.463, -2.12968, 1.4 ) }
    dend_10 { pt3dadd( -39.126, 136.948, -2.10232, 1.18 ) }
    dend_10 { pt3dadd( -39.42, 137.472, -2.0345, 0.88 ) }
    dend_10 { pt3dadd( -39.7457, 138.065, -1.92602, 0.81 ) }
    dend_10 { pt3dadd( -40.289, 139.053, -1.71548, 0.59 ) }
    dend_10 { pt3dadd( -41.2114, 140.697, -1.34035, 0.52 ) }
    dend_10 { pt3dadd( -41.9042, 141.943, -1.07497, 0.52 ) }
    dend_10 { pt3dadd( -41.9858, 142.091, -1.04872, 0.52 ) }
    dend_10 { pt3dadd( -42.429, 142.904, -0.964111, 0.52 ) }
    dend_10 { pt3dadd( -42.8673, 143.744, -0.950138, 0.74 ) }
    dend_10 { pt3dadd( -43.1619, 144.349, -0.99514, 0.74 ) }
    dend_10 { pt3dadd( -43.4258, 144.913, -1.08774, 0.96 ) }
    dend_10 { pt3dadd( -43.7436, 145.578, -1.20554, 0.96 ) }
    dend_10 { pt3dadd( -44.1032, 146.38, -1.31841, 0.96 ) }
    dend_10 { pt3dadd( -44.1668, 146.536, -1.33477, 0.96 ) }
    dend_10 { pt3dadd( -44.6219, 147.708, -1.3758, 0.96 ) }
    dend_10 { pt3dadd( -45.0344, 148.765, -1.36621, 1.18 ) }
    dend_10 { pt3dadd( -45.293, 149.461, -1.32755, 1.55 ) }
    dend_10 { pt3dadd( -45.6257, 150.398, -1.23428, 1.55 ) }
    dend_10 { pt3dadd( -45.967, 151.338, -1.05568, 1.55 ) }
    dend_10 { pt3dadd( -46.3497, 152.353, -0.819963, 0.88 ) }
    dend_10 { pt3dadd( -46.4151, 152.522, -0.772464, 0.88 ) }
    dend_10 { pt3dadd( -46.6546, 153.137, -0.60913, 0.88 ) }
    dend_10 { pt3dadd( -46.7167, 153.279, -0.57456, 0.88 ) }
    dend_10 { pt3dadd( -47.2999, 154.388, -0.249515, 0.88 ) }
    dend_10 { pt3dadd( -47.6719, 155.086, -0.0530803, 0.88 ) }
    dend_10 { pt3dadd( -47.7017, 155.146, -0.039281, 0.88 ) }
    dend_10 { pt3dadd( -48.1767, 156.105, 0.167735, 0.81 ) }
    dend_10 { pt3dadd( -48.6741, 157.138, 0.347087, 0.81 ) }
    dend_10 { pt3dadd( -49.3862, 158.708, 0.618694, 0.66 ) }
    dend_10 { pt3dadd( -49.79, 159.699, 0.759397, 0.66 ) }
    dend_10 { pt3dadd( -50.1137, 160.549, 0.904138, 0.66 ) }
    dend_10 { pt3dadd( -50.1402, 160.623, 0.917213, 0.66 ) }
    dend_10 { pt3dadd( -50.5906, 161.97, 1.15135, 0.52 ) }
    dend_10 { pt3dadd( -50.9268, 163.04, 1.30515, 0.37 ) }
    dend_10 { pt3dadd( -51.4149, 164.663, 1.44201, 0.37 ) }
    dend_10 { pt3dadd( -51.6742, 165.481, 1.49536, 0.88 ) }
    dend_10 { pt3dadd( -51.8689, 166.076, 1.53774, 1.18 ) }
    dend_10 { pt3dadd( -52.2266, 167.137, 1.60382, 1.18 ) }
    dend_10 { pt3dadd( -52.4254, 167.703, 1.63025, 1.18 ) }
    dend_10 { pt3dadd( -52.7077, 168.497, 1.63903, 0.74 ) }
    dend_10 { pt3dadd( -53.2024, 169.82, 1.64612, 0.74 ) }
    dend_10 { pt3dadd( -53.5886, 170.835, 1.62831, 1.03 ) }
    dend_10 { pt3dadd( -53.8646, 171.572, 1.61499, 1.33 ) }
    dend_10 { pt3dadd( -53.9023, 171.677, 1.60949, 1.33 ) }
    dend_10 { pt3dadd( -54.0443, 172.078, 1.56101, 1.33 ) }
    dend_10 { pt3dadd( -54.2747, 172.732, 1.43354, 1.03 ) }
    dend_10 { pt3dadd( -54.5274, 173.522, 1.1907, 0.81 ) }
    dend_10 { pt3dadd( -54.7851, 174.357, 0.859867, 0.59 ) }
    dend_10 { pt3dadd( -55.0927, 175.411, 0.36208, 0.59 ) }
    dend_10 { pt3dadd( -55.2903, 176.041, 0.0284534, 0.59 ) }
    dend_10 { pt3dadd( -55.504, 176.717, -0.399778, 0.88 ) }
    dend_10 { pt3dadd( -55.7651, 177.487, -0.960653, 1.11 ) }
    dend_10 { pt3dadd( -55.9831, 178.082, -1.44897, 1.11 ) }
    dend_10 { pt3dadd( -56.2922, 178.843, -2.10245, 0.88 ) }
    dend_10 { pt3dadd( -56.5746, 179.525, -2.71748, 0.88 ) }
    dend_10 { pt3dadd( -56.8997, 180.331, -3.44453, 0.52 ) }
    dend_10 { pt3dadd( -57.1037, 180.805, -3.87337, 0.52 ) }
    dend_10 { pt3dadd( -57.1412, 180.887, -3.94375, 0.52 ) }
    dend_10 { pt3dadd( -57.5118, 181.724, -4.60723, 0.52 ) }
    dend_10 { pt3dadd( -57.9984, 182.84, -5.37111, 0.81 ) }
    dend_10 { pt3dadd( -58.0595, 182.984, -5.4573, 0.81 ) }
    dend_10 { pt3dadd( -58.4225, 183.784, -5.84067, 0.81 ) }
    dend_10 { pt3dadd( -58.4571, 183.861, -5.87426, 0.81 ) }
    dend_10 { pt3dadd( -58.7883, 184.594, -6.14279, 1.03 ) }
    dend_10 { pt3dadd( -58.8207, 184.664, -6.16217, 1.03 ) }
    dend_10 { pt3dadd( -59.2324, 185.567, -6.35425, 1.33 ) }
    dend_10 { pt3dadd( -59.5304, 186.28, -6.51649, 1.33 ) }
    dend_10 { pt3dadd( -59.5535, 186.342, -6.53202, 1.33 ) }
    dend_10 { pt3dadd( -59.8297, 187.113, -6.73717, 1.55 ) }
    dend_10 { pt3dadd( -60.0272, 187.688, -6.89646, 1.55 ) }
    dend_10 { pt3dadd( -60.3497, 188.682, -7.16914, 0.74 ) }
    dend_10 { pt3dadd( -60.6952, 189.83, -7.47797, 0.59 ) }
    dend_10 { pt3dadd( -60.9086, 190.583, -7.66957, 0.88 ) }
    dend_10 { pt3dadd( -61.1202, 191.348, -7.85225, 1.18 ) }
    dend_10 { pt3dadd( -61.3807, 192.347, -8.0621, 1.4 ) }
    dend_10 { pt3dadd( -61.5126, 192.922, -8.17094, 1.77 ) }
    dend_10 { pt3dadd( -61.6287, 193.499, -8.26225, 1.47 ) }
    dend_10 { pt3dadd( -61.7938, 194.471, -8.40346, 1.03 ) }
    dend_10 { pt3dadd( -61.9061, 195.218, -8.50167, 0.66 ) }
    dend_10 { pt3dadd( -62.0472, 196.352, -8.64415, 0.66 ) }
    dend_10 { pt3dadd( -62.1632, 197.415, -8.77063, 0.88 ) }
    dend_10 { pt3dadd( -62.2539, 198.31, -8.87157, 1.18 ) }
    dend_10 { pt3dadd( -62.3323, 198.972, -8.91955, 1.33 ) }
    dend_10 { pt3dadd( -62.3453, 199.049, -8.9228, 1.33 ) }
    dend_10 { pt3dadd( -62.5131, 199.686, -8.94541, 1.33 ) }
    dend_10 { pt3dadd( -62.8431, 200.638, -8.97989, 1.03 ) }
    dend_10 { pt3dadd( -63.2468, 201.637, -9.013, 0.59 ) }
    dend_10 { pt3dadd( -63.6429, 202.54, -9.05451, 0.59 ) }
    dend_10 { pt3dadd( -64.2789, 203.881, -9.10913, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_10 { pt3dadd( -65.1022, 205.523, -9.18028, 0.59 ) }
    dend_10 { pt3dadd( -65.7427, 206.747, -9.24035, 0.59 ) }
    dend_10 { pt3dadd( -65.7799, 206.817, -9.24426, 0.59 ) }
    dend_10 { pt3dadd( -66.0256, 207.283, -9.27706, 0.88 ) }
    dend_10 { pt3dadd( -66.5628, 208.375, -9.37984, 0.81 ) }
    dend_10 { pt3dadd( -66.9303, 209.222, -9.45995, 1.11 ) }
    dend_10 { pt3dadd( -67.2282, 210.006, -9.54148, 1.33 ) }
    dend_10 { pt3dadd( -67.372, 210.403, -9.59884, 1.33 ) }
    dend_10 { pt3dadd( -67.5458, 210.924, -9.68806, 1.33 ) }
    dend_10 { pt3dadd( -67.8303, 211.856, -9.89598, 0.81 ) }
    dend_10 { pt3dadd( -68.194, 213.19, -10.2564, 0.74 ) }
    dend_10 { pt3dadd( -68.3723, 213.885, -10.4537, 0.52 ) }
    dend_10 { pt3dadd( -68.5967, 214.739, -10.7047, 0.29 ) }
    dend_10 { pt3dadd( -68.847, 215.813, -11.0891, 0.29 ) }
    dend_10 { pt3dadd( -68.9918, 216.677, -11.4592, 0.88 ) }
    dend_10 { pt3dadd( -69.0041, 216.778, -11.5068, 0.88 ) }
    dend_10 { pt3dadd( -69.0611, 217.3, -11.764, 1.55 ) }
    dend_10 { pt3dadd( -69.1547, 218.292, -12.2702, 1.92 ) }
    dend_10 { pt3dadd( -69.321, 219.895, -13.0944, 1.92 ) }
    dend_10 { pt3dadd( -69.505, 221.122, -13.7274, 1.11 ) }
    dend_10 { pt3dadd( -69.6931, 222.123, -14.2214, 0.96 ) }
    dend_10 { pt3dadd( -69.89, 222.881, -14.561, 0.96 ) }
    dend_10 { pt3dadd( -69.9144, 222.952, -14.5883, 0.96 ) }
    dend_10 { pt3dadd( -70.2707, 223.703, -14.806, 1.18 ) }
    dend_10 { pt3dadd( -70.8515, 224.6, -14.9061, 1.18 ) }
    dend_10 { pt3dadd( -70.8995, 224.663, -14.9079, 1.18 ) }
    dend_10 { pt3dadd( -71.728, 225.678, -14.9199, 0.81 ) }
    dend_10 { pt3dadd( -72.2816, 226.333, -14.9197, 0.59 ) }
    dend_10 { pt3dadd( -73.2993, 227.465, -14.9502, 0.59 ) }
    dend_10 { pt3dadd( -74.3559, 228.585, -14.9984, 0.59 ) }
    dend_10 { pt3dadd( -74.4207, 228.651, -14.9996, 0.59 ) }
    dend_10 { pt3dadd( -75.5426, 229.726, -15.031, 0.59 ) }
    dend_10 { pt3dadd( -75.6111, 229.788, -15.0346, 0.59 ) }
    dend_10 { pt3dadd( -76.9201, 230.895, -15.122, 0.59 ) }
    dend_10 { pt3dadd( -77.0104, 230.966, -15.1254, 0.59 ) }
    dend_10 { pt3dadd( -78.0087, 231.719, -15.1793, 0.96 ) }
    dend_10 { pt3dadd( -78.6342, 232.201, -15.198, 1.69 ) }
    dend_10 { pt3dadd( -79.0987, 232.577, -15.2067, 2.06 ) }
    dend_10 { pt3dadd( -79.8809, 233.238, -15.2264, 2.06 ) }
    dend_10 { pt3dadd( -80.8092, 234.017, -15.2113, 1.77 ) }
    dend_10 { pt3dadd( -81.7101, 234.751, -15.2029, 1.11 ) }
    dend_10 { pt3dadd( -82.5398, 235.407, -15.185, 0.29 ) }
    dend_10 { pt3dadd( -83.7561, 236.322, -15.102, 0.29 ) }
    dend_10 { pt3dadd( -83.8316, 236.376, -15.0952, 0.29 ) }
    dend_10 { pt3dadd( -84.9345, 237.152, -14.9884, 0.29 ) }
    dend_10 { pt3dadd( -85.3058, 237.41, -14.9628, 0.29 ) }
    dend_10 { pt3dadd( -85.9568, 237.833, -14.84, 0.66 ) }
    dend_10 { pt3dadd( -86.4081, 238.101, -14.7183, 0.96 ) }
    dend_10 { pt3dadd( -86.9133, 238.435, -14.5701, 0.96 ) }
    dend_10 { pt3dadd( -87.4745, 238.874, -14.4092, 0.96 ) }
    dend_10 { pt3dadd( -87.5322, 238.928, -14.3935, 0.96 ) }
    dend_10 { pt3dadd( -88.4833, 239.887, -14.1182, 0.37 ) }
    dend_10 { pt3dadd( -88.6319, 240.055, -14.083, 0.37 ) }
    dend_10 { pt3dadd( -89.3904, 241.025, -13.9349, 0.37 ) }
    dend_10 { pt3dadd( -90.0852, 242.038, -13.9593, 0.37 ) }
    dend_10 { pt3dadd( -90.2669, 242.336, -14.0166, 0.74 ) }
    dend_10 { pt3dadd( -90.3034, 242.404, -14.0382, 0.74 ) }
    dend_10 { pt3dadd( -90.9138, 243.721, -14.6225, 0.74 ) }
    dend_10 { pt3dadd( -91.3921, 244.81, -15.1629, 0.52 ) }
    dend_10 { pt3dadd( -92.0509, 246.437, -16.0673, 0.59 ) }
    dend_10 { pt3dadd( -92.3184, 247.109, -16.4708, 0.44 ) }
    dend_10 { pt3dadd( -92.3467, 247.175, -16.5059, 0.44 ) }
    dend_10 { pt3dadd( -92.7267, 247.998, -16.8814, 0.44 ) }
    dend_10 { pt3dadd( -93.097, 248.697, -17.1324, 0.81 ) }
    dend_10 { pt3dadd( -93.3158, 249.058, -17.2117, 1.33 ) }
    dend_10 { pt3dadd( -93.7586, 249.685, -17.2794, 1.33 ) }
    dend_10 { pt3dadd( -94.4617, 250.545, -17.4091, 0.88 ) }
    dend_10 { pt3dadd( -94.8204, 250.941, -17.4738, 0.88 ) }
    dend_10 { pt3dadd( -95.3676, 251.483, -17.574, 0.59 ) }
    dend_10 { pt3dadd( -95.8103, 251.891, -17.6586, 0.29 ) }
    dend_10 { pt3dadd( -96.7266, 252.669, -17.8563, 0.29 ) }
    dend_10 { pt3dadd( -97.6326, 253.388, -18.0815, 0.29 ) }
    dend_10 { pt3dadd( -98.0057, 253.658, -18.1958, 0.29 ) }
    dend_10 { pt3dadd( -98.4071, 253.937, -18.3062, 0.81 ) }
    dend_10 { pt3dadd( -98.4734, 253.981, -18.3228, 0.81 ) }
    dend_10 { pt3dadd( -98.9792, 254.32, -18.4384, 1.03 ) }
    dend_10 { pt3dadd( -99.0791, 254.39, -18.4589, 1.03 ) }
    dend_10 { pt3dadd( -99.6752, 254.877, -18.5843, 1.03 ) }
    dend_10 { pt3dadd( -100.263, 255.424, -18.7271, 0.29 ) }
    dend_10 { pt3dadd( -100.615, 255.813, -18.8129, 0.29 ) }
    dend_10 { pt3dadd( -100.724, 255.959, -18.8421, 0.29 ) }
    dend_10 { pt3dadd( -100.766, 256.026, -18.8543, 0.29 ) }
    dend_10 { pt3dadd( -101.193, 256.851, -18.9953, 0.29 ) }
    dend_10 { pt3dadd( -101.381, 257.302, -19.067, 0.59 ) }
    dend_10 { pt3dadd( -101.658, 258.14, -19.1937, 1.33 ) }
    dend_10 { pt3dadd( -101.846, 258.8, -19.281, 1.47 ) }
    dend_10 { pt3dadd( -101.992, 259.375, -19.3482, 1.47 ) }
    dend_10 { pt3dadd( -102.15, 260.039, -19.4193, 1.03 ) }
    dend_10 { pt3dadd( -102.281, 260.601, -19.4771, 0.66 ) }
    dend_10 { pt3dadd( -102.511, 261.565, -19.5753, 0.37 ) }
    dend_10 { pt3dadd( -102.532, 261.652, -19.584, 0.37 ) }
    dend_10 { pt3dadd( -102.921, 263.189, -19.7368, 0.37 ) }
    dend_10 { pt3dadd( -103.165, 264.123, -19.8329, 0.88 ) }
    dend_10 { pt3dadd( -103.383, 264.948, -19.9188, 0.96 ) }
    dend_10 { pt3dadd( -103.491, 265.357, -19.9617, 1.18 ) }
    dend_10 { pt3dadd( -103.521, 265.464, -19.9732, 1.18 ) }
    dend_10 { pt3dadd( -103.713, 266.199, -20.049, 0.96 ) }
    dend_10 { pt3dadd( -103.899, 267.015, -20.1218, 0.96 ) }
    dend_10 { pt3dadd( -104.004, 267.578, -20.1628, 1.25 ) }
    dend_10 { pt3dadd( -104.145, 268.492, -20.2168, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_10 { pt3dadd( -104.242, 269.183, -20.2535, 0.59 ) }
    dend_10 { pt3dadd( -104.347, 270.0, -20.2932, 0.29 ) }
    dend_10 { pt3dadd( -104.539, 271.638, -20.3655, 0.29 ) }
    dend_10 { pt3dadd( -104.659, 272.699, -20.4102, 0.29 ) }
    dend_10 { pt3dadd( -104.73, 273.365, -20.4366, 0.74 ) }
    dend_10 { pt3dadd( -104.814, 274.275, -20.4879, 0.96 ) }
    dend_10 { pt3dadd( -104.876, 275.018, -20.5399, 1.11 ) }
    dend_10 { pt3dadd( -104.904, 275.342, -20.5674, 1.11 ) }
    dend_10 { pt3dadd( -104.953, 276.017, -20.6508, 0.37 ) }
    dend_10 { pt3dadd( -105.025, 277.072, -20.8122, 0.37 ) }
    dend_10 { pt3dadd( -105.165, 278.989, -21.1552, 0.37 ) }
    dend_10 { pt3dadd( -105.212, 279.558, -21.2671, 0.96 ) }
    dend_10 { pt3dadd( -105.221, 279.646, -21.2853, 0.96 ) }
    dend_10 { pt3dadd( -105.324, 280.607, -21.5353, 1.25 ) }
    dend_10 { pt3dadd( -105.414, 281.395, -21.7748, 1.25 ) }
    dend_10 { pt3dadd( -105.518, 282.166, -22.041, 1.4 ) }
    dend_10 { pt3dadd( -105.672, 283.127, -22.4009, 1.55 ) }
    dend_10 { pt3dadd( -105.788, 283.761, -22.6464, 1.55 ) }
    dend_10 { pt3dadd( -106.097, 285.13, -23.1375, 0.22 ) }
    dend_10 { pt3dadd( -106.139, 285.286, -23.1878, 0.22 ) }
    dend_10 { pt3dadd( -106.259, 285.78, -23.3212, 0.22 ) }
    dend_10 { pt3dadd( -106.295, 285.96, -23.3557, 0.22 ) }
    dend_10 { pt3dadd( -106.385, 286.577, -23.4034, 0.22 ) }
    dend_10 { pt3dadd( -106.506, 287.295, -23.2985, 0.29 ) }
    dend_10 { pt3dadd( -106.556, 287.542, -23.2171, 0.29 ) }
    dend_10 { pt3dadd( -106.817, 288.558, -22.8726, 0.29 ) }
    dend_10 { pt3dadd( -106.84, 288.64, -22.8435, 0.29 ) }
    dend_10 { pt3dadd( -107.026, 289.148, -22.6179, 0.29 ) }
    dend_10 { pt3dadd( -107.539, 290.213, -22.0776, 0.29 ) }
    dend_10 { pt3dadd( -107.576, 290.275, -22.0447, 0.29 ) }
    dend_10 { pt3dadd( -108.065, 290.879, -21.7238, 0.29 ) }
    dend_10 { pt3dadd( -108.129, 290.941, -21.6984, 0.29 ) }
    dend_10 { pt3dadd( -109.033, 291.781, -21.4779, 0.88 ) }
    dend_10 { pt3dadd( -109.348, 292.059, -21.4565, 1.03 ) }
    dend_10 { pt3dadd( -109.409, 292.112, -21.463, 1.03 ) }
    dend_10 { pt3dadd( -110.013, 292.648, -21.5636, 1.03 ) }
    dend_10 { pt3dadd( -110.976, 293.507, -21.8422, 0.29 ) }
    dend_10 { pt3dadd( -111.322, 293.813, -21.9835, 0.29 ) }
    dend_10 { pt3dadd( -111.926, 294.337, -22.2823, 0.29 ) }
    dend_10 { pt3dadd( -112.424, 294.753, -22.5186, 0.29 ) }
    dend_10 { pt3dadd( -112.484, 294.801, -22.5456, 0.29 ) }
    dend_10 { pt3dadd( -113.031, 295.21, -22.7758, 0.29 ) }
    dend_10 { pt3dadd( -113.104, 295.26, -22.8043, 0.29 ) }
    dend_10 { pt3dadd( -113.848, 295.766, -23.0569, 0.29 ) }
    dend_10 { pt3dadd( -113.848, 295.766, -23.0569, 0.74 ) }
    dend_10 { pt3dadd( -114.064, 295.921, -23.0871, 0.74 ) }
    dend_10 { pt3dadd( -114.282, 296.077, -23.0931, 0.74 ) }
    dend_10 { pt3dadd( -114.437, 296.195, -23.0624, 0.74 ) }
    dend_10 { pt3dadd( -114.575, 296.311, -23.0421, 0.74 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.47865, 78.1845, -5.61113, 1.11 ) }
    dend_7 { pt3dadd( -4.08511, 79.3547, -5.8616, 1.11 ) }
    dend_7 { pt3dadd( -3.63257, 80.6387, -6.21739, 0.96 ) }
    dend_7 { pt3dadd( -3.01343, 82.363, -6.7894, 0.81 ) }
    dend_7 { pt3dadd( -2.66592, 83.3952, -7.14993, 0.81 ) }
    dend_7 { pt3dadd( -2.61616, 83.5644, -7.20768, 0.81 ) }
    dend_7 { pt3dadd( -2.34291, 84.6439, -7.59727, 0.81 ) }
    dend_7 { pt3dadd( -2.08156, 85.9925, -8.12432, 0.81 ) }
    dend_7 { pt3dadd( -1.98573, 86.9119, -8.47257, 1.03 ) }
    dend_7 { pt3dadd( -1.98438, 87.6853, -8.72281, 1.33 ) }
    dend_7 { pt3dadd( -2.04641, 88.8965, -9.10026, 1.33 ) }
    dend_7 { pt3dadd( -2.14857, 90.1659, -9.45971, 1.33 ) }
    dend_7 { pt3dadd( -2.27758, 91.3457, -9.75295, 1.47 ) }
    dend_7 { pt3dadd( -2.42955, 92.7526, -10.0298, 1.47 ) }
    dend_7 { pt3dadd( -2.57851, 94.3092, -10.3217, 1.47 ) }
    dend_7 { pt3dadd( -2.71057, 96.0293, -10.6368, 1.47 ) }
    dend_7 { pt3dadd( -2.7704, 97.008, -10.8072, 1.18 ) }
    dend_7 { pt3dadd( -2.81032, 97.9841, -10.9516, 1.18 ) }
    dend_7 { pt3dadd( -2.82455, 98.8899, -11.0809, 1.47 ) }
    dend_7 { pt3dadd( -2.82528, 100.165, -11.2438, 1.47 ) }
    dend_7 { pt3dadd( -2.81263, 101.438, -11.3518, 1.69 ) }
    dend_7 { pt3dadd( -2.81228, 101.524, -11.3551, 1.69 ) }
    dend_7 { pt3dadd( -2.78688, 102.877, -11.3759, 1.69 ) }
    dend_7 { pt3dadd( -2.73292, 104.398, -11.3663, 1.69 ) }
    dend_7 { pt3dadd( -2.65634, 105.831, -11.3266, 1.69 ) }
    dend_7 { pt3dadd( -2.5617, 106.998, -11.2681, 1.69 ) }
    dend_7 { pt3dadd( -2.46898, 107.892, -11.2224, 1.33 ) }
    dend_7 { pt3dadd( -2.30127, 109.365, -11.1701, 1.25 ) }
    dend_7 { pt3dadd( -2.17443, 110.44, -11.1489, 1.25 ) }
    dend_7 { pt3dadd( -2.04368, 111.549, -11.1633, 1.03 ) }
    dend_7 { pt3dadd( -1.89705, 112.832, -11.2231, 0.96 ) }
    dend_7 { pt3dadd( -1.82965, 113.808, -11.3056, 0.96 ) }
    dend_7 { pt3dadd( -1.81228, 114.856, -11.4096, 1.18 ) }
    dend_7 { pt3dadd( -1.84965, 115.681, -11.5008, 1.18 ) }
    dend_7 { pt3dadd( -1.95511, 116.762, -11.6242, 1.18 ) }
    dend_7 { pt3dadd( -1.96711, 116.846, -11.6338, 1.18 ) }
    dend_7 { pt3dadd( -2.42793, 119.368, -11.9041, 1.18 ) }
    dend_7 { pt3dadd( -2.63181, 120.331, -11.9945, 1.4 ) }
    dend_7 { pt3dadd( -2.883, 121.416, -12.0726, 1.69 ) }
    dend_7 { pt3dadd( -3.09561, 122.327, -12.1355, 1.92 ) }
    dend_7 { pt3dadd( -3.21284, 122.861, -12.169, 2.06 ) }
    dend_7 { pt3dadd( -3.40729, 123.812, -12.1818, 1.84 ) }
    dend_7 { pt3dadd( -3.52826, 124.483, -12.1598, 1.69 ) }
    dend_7 { pt3dadd( -3.72207, 125.732, -12.1095, 1.69 ) }
    dend_7 { pt3dadd( -3.98456, 127.809, -12.0197, 1.69 ) }
    dend_7 { pt3dadd( -4.12324, 129.243, -11.9588, 1.69 ) }
    dend_7 { pt3dadd( -4.27291, 131.106, -11.8879, 1.84 ) }
    dend_7 { pt3dadd( -4.36915, 132.442, -11.8205, 1.84 ) }
    dend_7 { pt3dadd( -4.45346, 133.606, -11.7544, 1.33 ) }
    dend_7 { pt3dadd( -4.59017, 135.306, -11.6526, 1.25 ) }
    dend_7 { pt3dadd( -4.74412, 136.906, -11.5619, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_7 { pt3dadd( -4.92432, 138.442, -11.5091, 1.11 ) }
    dend_7 { pt3dadd( -5.10135, 139.776, -11.5088, 1.11 ) }
    dend_7 { pt3dadd( -5.26299, 140.86, -11.4954, 1.4 ) }
    dend_7 { pt3dadd( -5.36911, 141.501, -11.4758, 1.77 ) }
    dend_7 { pt3dadd( -5.57301, 142.681, -11.4493, 1.99 ) }
    dend_7 { pt3dadd( -5.77705, 143.944, -11.4393, 1.99 ) }
    dend_7 { pt3dadd( -5.912, 144.934, -11.4466, 1.47 ) }
    dend_7 { pt3dadd( -5.99087, 145.829, -11.4688, 1.18 ) }
    dend_7 { pt3dadd( -6.02896, 146.659, -11.4848, 1.11 ) }
    dend_7 { pt3dadd( -6.03627, 148.097, -11.4697, 0.96 ) }
    dend_7 { pt3dadd( -5.96681, 149.886, -11.4028, 0.96 ) }
    dend_7 { pt3dadd( -5.96134, 149.972, -11.3987, 0.96 ) }
    dend_7 { pt3dadd( -5.79816, 151.973, -11.2898, 0.96 ) }
    dend_7 { pt3dadd( -5.72195, 152.881, -11.2396, 0.74 ) }
    dend_7 { pt3dadd( -5.64018, 153.845, -11.1889, 0.59 ) }
    dend_7 { pt3dadd( -5.53391, 155.286, -11.0969, 0.59 ) }
    dend_7 { pt3dadd( -5.47287, 156.402, -11.0218, 1.25 ) }
    dend_7 { pt3dadd( -5.43789, 157.484, -10.9535, 1.84 ) }
    dend_7 { pt3dadd( -5.43674, 158.823, -10.8815, 1.84 ) }
    dend_7 { pt3dadd( -5.45885, 160.258, -10.8408, 1.84 ) }
    dend_7 { pt3dadd( -5.50362, 161.513, -10.8045, 1.84 ) }
    dend_7 { pt3dadd( -5.55226, 162.505, -10.7548, 1.62 ) }
    dend_7 { pt3dadd( -5.59904, 163.397, -10.6929, 1.33 ) }
    dend_7 { pt3dadd( -5.68535, 164.837, -10.5833, 1.11 ) }
    dend_7 { pt3dadd( -5.76698, 166.204, -10.4781, 1.11 ) }
    dend_7 { pt3dadd( -5.86527, 167.721, -10.339, 1.11 ) }
    dend_7 { pt3dadd( -5.87069, 167.806, -10.3308, 1.11 ) }
    dend_7 { pt3dadd( -5.9125, 168.879, -10.2051, 0.81 ) }
    dend_7 { pt3dadd( -5.91508, 169.415, -10.1339, 0.74 ) }
    dend_7 { pt3dadd( -5.87488, 170.74, -9.94986, 0.74 ) }
    dend_7 { pt3dadd( -5.78879, 172.382, -9.74951, 0.52 ) }
    dend_7 { pt3dadd( -5.78367, 172.467, -9.74278, 0.52 ) }
    dend_7 { pt3dadd( -5.73258, 173.585, -9.67237, 0.52 ) }
    dend_7 { pt3dadd( -5.72323, 174.318, -9.6123, 1.03 ) }
    dend_7 { pt3dadd( -5.73974, 175.495, -9.50949, 1.33 ) }
    dend_7 { pt3dadd( -5.78957, 176.732, -9.4052, 1.92 ) }
    dend_7 { pt3dadd( -5.83401, 177.491, -9.35017, 1.92 ) }
    dend_7 { pt3dadd( -5.93481, 178.75, -9.25177, 1.33 ) }
    dend_7 { pt3dadd( -6.07018, 180.085, -9.14079, 0.59 ) }
    dend_7 { pt3dadd( -6.24001, 181.781, -9.01661, 0.59 ) }
    dend_7 { pt3dadd( -6.29366, 182.495, -8.9731, 0.81 ) }
    dend_7 { pt3dadd( -6.32518, 183.137, -8.94307, 0.88 ) }
    dend_7 { pt3dadd( -6.32523, 183.223, -8.94217, 0.88 ) }
    dend_7 { pt3dadd( -6.30762, 184.305, -8.99021, 0.88 ) }
    dend_7 { pt3dadd( -6.28977, 185.112, -9.07996, 0.66 ) }
    dend_7 { pt3dadd( -6.32563, 186.283, -9.22952, 0.66 ) }
    dend_7 { pt3dadd( -6.33247, 186.368, -9.24023, 0.66 ) }
    dend_7 { pt3dadd( -6.45453, 187.239, -9.3448, 0.66 ) }
    dend_7 { pt3dadd( -6.63689, 188.192, -9.44925, 0.66 ) }
    dend_7 { pt3dadd( -6.83567, 188.997, -9.52798, 0.96 ) }
    dend_7 { pt3dadd( -7.10176, 189.887, -9.5996, 1.25 ) }
    dend_7 { pt3dadd( -7.44379, 190.918, -9.67935, 1.84 ) }
    dend_7 { pt3dadd( -7.76528, 191.83, -9.74448, 1.99 ) }
    dend_7 { pt3dadd( -8.06037, 192.634, -9.79426, 1.77 ) }
    dend_7 { pt3dadd( -8.2786, 193.252, -9.83138, 1.69 ) }
    dend_7 { pt3dadd( -8.59773, 194.128, -9.88529, 1.55 ) }
    dend_7 { pt3dadd( -8.876, 194.892, -9.93231, 1.4 ) }
    dend_7 { pt3dadd( -9.12998, 195.625, -9.97571, 1.03 ) }
    dend_7 { pt3dadd( -9.37884, 196.403, -10.019, 0.88 ) }
    dend_7 { pt3dadd( -9.73247, 197.605, -10.1029, 0.66 ) }
    dend_7 { pt3dadd( -9.88373, 198.152, -10.1464, 0.44 ) }
    dend_7 { pt3dadd( -9.90478, 198.235, -10.1535, 0.44 ) }
    dend_7 { pt3dadd( -10.216, 199.551, -10.2674, 0.44 ) }
    dend_7 { pt3dadd( -10.5038, 200.94, -10.4223, 0.44 ) }
    dend_7 { pt3dadd( -10.738, 202.146, -10.5787, 1.11 ) }
    dend_7 { pt3dadd( -10.948, 203.337, -10.7453, 1.4 ) }
    dend_7 { pt3dadd( -11.1059, 204.302, -10.8831, 1.69 ) }
    dend_7 { pt3dadd( -11.2052, 204.915, -10.9696, 2.14 ) }
    dend_7 { pt3dadd( -11.3821, 206.135, -11.1334, 2.14 ) }
    dend_7 { pt3dadd( -11.5144, 207.317, -11.2779, 1.69 ) }
    dend_7 { pt3dadd( -11.5903, 208.124, -11.3625, 1.4 ) }
    dend_7 { pt3dadd( -11.652, 208.928, -11.4382, 1.18 ) }
    dend_7 { pt3dadd( -11.7395, 210.284, -11.5452, 0.81 ) }
    dend_7 { pt3dadd( -11.8248, 211.718, -11.6311, 0.81 ) }
    dend_7 { pt3dadd( -11.9285, 213.064, -11.6786, 0.66 ) }
    dend_7 { pt3dadd( -11.9373, 213.15, -11.6805, 0.66 ) }
    dend_7 { pt3dadd( -12.0658, 214.037, -11.6884, 0.52 ) }
    dend_7 { pt3dadd( -12.227, 214.838, -11.6851, 0.37 ) }
    dend_7 { pt3dadd( -12.3535, 215.313, -11.6758, 0.37 ) }
    dend_7 { pt3dadd( -12.7138, 216.334, -11.6426, 0.37 ) }
    dend_7 { pt3dadd( -13.0207, 217.068, -11.6121, 0.74 ) }
    dend_7 { pt3dadd( -13.293, 217.671, -11.5913, 0.74 ) }
    dend_7 { pt3dadd( -13.5934, 218.29, -11.5744, 0.81 ) }
    dend_7 { pt3dadd( -13.6837, 218.474, -11.5727, 0.81 ) }
    dend_7 { pt3dadd( -13.9355, 219.022, -11.5789, 0.81 ) }
    dend_7 { pt3dadd( -14.1352, 219.515, -11.5983, 1.03 ) }
    dend_7 { pt3dadd( -14.1665, 219.595, -11.6042, 1.03 ) }
    dend_7 { pt3dadd( -14.5566, 220.73, -11.6866, 1.03 ) }
    dend_7 { pt3dadd( -14.8536, 221.783, -11.7537, 1.18 ) }
    dend_7 { pt3dadd( -14.8705, 221.855, -11.7578, 1.18 ) }
    dend_7 { pt3dadd( -15.0844, 222.936, -11.7995, 1.18 ) }
    dend_7 { pt3dadd( -15.2439, 223.899, -11.8234, 1.69 ) }
    dend_7 { pt3dadd( -15.4281, 225.225, -11.8415, 1.92 ) }
    dend_7 { pt3dadd( -15.5449, 226.389, -11.8433, 1.92 ) }
    dend_7 { pt3dadd( -15.5961, 227.012, -11.8046, 1.77 ) }
    dend_7 { pt3dadd( -15.6628, 227.852, -11.7148, 1.25 ) }
    dend_7 { pt3dadd( -15.7207, 228.568, -11.6132, 0.96 ) }
    dend_7 { pt3dadd( -15.7877, 229.268, -11.4991, 0.66 ) }
    dend_7 { pt3dadd( -15.9706, 230.593, -11.2935, 0.66 ) }
    dend_7 { pt3dadd( -16.2293, 232.081, -11.0194, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_7 { pt3dadd( -16.4248, 233.13, -10.8148, 0.66 ) }
    dend_7 { pt3dadd( -16.6147, 234.115, -10.6181, 0.96 ) }
    dend_7 { pt3dadd( -16.8556, 235.383, -10.3621, 0.96 ) }
    dend_7 { pt3dadd( -17.2365, 237.548, -9.94681, 0.96 ) }
    dend_7 { pt3dadd( -17.4257, 238.863, -9.72932, 0.52 ) }
    dend_7 { pt3dadd( -17.4933, 239.585, -9.64439, 0.52 ) }
    dend_7 { pt3dadd( -17.4986, 239.706, -9.63129, 0.52 ) }
    dend_7 { pt3dadd( -17.5009, 240.617, -9.54766, 0.52 ) }
    dend_7 { pt3dadd( -17.4454, 241.699, -9.50064, 1.03 ) }
    dend_7 { pt3dadd( -17.3137, 243.054, -9.5097, 1.62 ) }
    dend_7 { pt3dadd( -17.1785, 244.215, -9.57745, 2.28 ) }
    dend_7 { pt3dadd( -16.9828, 245.811, -9.68485, 2.58 ) }
    dend_7 { pt3dadd( -16.874, 246.633, -9.74364, 2.58 ) }
    dend_7 { pt3dadd( -16.7301, 247.702, -9.82465, 0.96 ) }
    dend_7 { pt3dadd( -16.7187, 247.787, -9.83333, 0.96 ) }
    dend_7 { pt3dadd( -16.5614, 249.145, -10.0003, 0.96 ) }
    dend_7 { pt3dadd( -16.5012, 249.872, -10.0965, 1.55 ) }
    dend_7 { pt3dadd( -16.4602, 250.976, -10.2409, 1.18 ) }
    dend_7 { pt3dadd( -16.4797, 252.053, -10.3675, 1.18 ) }
    dend_7 { pt3dadd( -16.5876, 253.442, -10.4808, 1.18 ) }
    dend_7 { pt3dadd( -16.6928, 254.37, -10.5474, 0.96 ) }
    dend_7 { pt3dadd( -16.8781, 255.551, -10.6194, 0.81 ) }
    dend_7 { pt3dadd( -17.0957, 256.728, -10.6739, 0.74 ) }
    dend_7 { pt3dadd( -17.3922, 258.183, -10.7161, 0.74 ) }
    dend_7 { pt3dadd( -17.7338, 259.912, -10.7245, 0.74 ) }
    dend_7 { pt3dadd( -17.7562, 260.032, -10.7222, 0.74 ) }
    dend_7 { pt3dadd( -17.9116, 260.936, -10.6802, 1.11 ) }
    dend_7 { pt3dadd( -18.128, 262.279, -10.5919, 1.33 ) }
    dend_7 { pt3dadd( -18.3228, 263.625, -10.4861, 1.33 ) }
    dend_7 { pt3dadd( -18.5165, 265.047, -10.3731, 1.33 ) }
    dend_7 { pt3dadd( -18.683, 266.297, -10.2807, 1.33 ) }
    dend_7 { pt3dadd( -18.8589, 267.546, -10.1966, 1.33 ) }
    dend_7 { pt3dadd( -18.9843, 268.353, -10.1553, 0.81 ) }
    dend_7 { pt3dadd( -19.1482, 269.238, -10.125, 0.66 ) }
    dend_7 { pt3dadd( -19.518, 270.947, -10.1068, 0.66 ) }
    dend_7 { pt3dadd( -19.5428, 271.043, -10.1088, 0.66 ) }
    dend_7 { pt3dadd( -20.1594, 273.175, -10.2182, 0.66 ) }
    dend_7 { pt3dadd( -20.4568, 274.122, -10.3004, 1.25 ) }
    dend_7 { pt3dadd( -20.7041, 274.856, -10.3665, 1.84 ) }
    dend_7 { pt3dadd( -21.0809, 275.905, -10.466, 2.14 ) }
    dend_7 { pt3dadd( -21.4194, 276.82, -10.555, 2.14 ) }
    dend_7 { pt3dadd( -21.6033, 277.338, -10.6019, 2.14 ) }
    dend_7 { pt3dadd( -21.8978, 278.228, -10.6729, 1.84 ) }
    dend_7 { pt3dadd( -22.0928, 278.938, -10.7159, 1.62 ) }
    dend_7 { pt3dadd( -22.2852, 280.037, -10.7663, 1.11 ) }
    dend_7 { pt3dadd( -22.296, 280.122, -10.7704, 1.11 ) }
    dend_7 { pt3dadd( -22.4512, 281.841, -10.8544, 1.03 ) }
    dend_7 { pt3dadd( -22.5227, 282.836, -10.9038, 0.96 ) }
    dend_7 { pt3dadd( -22.6045, 284.626, -10.9899, 0.88 ) }
    dend_7 { pt3dadd( -22.6605, 287.016, -11.1002, 0.88 ) }
    dend_7 { pt3dadd( -22.658, 287.736, -11.1305, 1.25 ) }
    dend_7 { pt3dadd( -22.6345, 288.635, -11.1659, 1.47 ) }
    dend_7 { pt3dadd( -22.6205, 288.818, -11.1719, 1.47 ) }
    dend_7 { pt3dadd( -22.5201, 289.643, -11.2028, 1.47 ) }
    dend_7 { pt3dadd( -22.5005, 289.763, -11.2077, 1.47 ) }
    dend_7 { pt3dadd( -22.3318, 290.662, -11.2419, 1.33 ) }
    dend_7 { pt3dadd( -22.0599, 291.989, -11.2812, 1.18 ) }
    dend_7 { pt3dadd( -21.7692, 293.386, -11.3233, 1.18 ) }
    dend_7 { pt3dadd( -21.5963, 294.238, -11.3497, 1.18 ) }
    dend_7 { pt3dadd( -21.4083, 295.233, -11.3806, 1.03 ) }
    dend_7 { pt3dadd( -21.2438, 296.304, -11.4133, 0.96 ) }
    dend_7 { pt3dadd( -21.1382, 297.107, -11.454, 0.88 ) }
    dend_7 { pt3dadd( -21.0276, 298.108, -11.5209, 0.88 ) }
    dend_7 { pt3dadd( -21.0234, 298.194, -11.5279, 0.88 ) }
    dend_7 { pt3dadd( -21.011, 299.542, -11.6456, 0.88 ) }
    dend_7 { pt3dadd( -21.0824, 301.162, -11.818, 0.88 ) }
    dend_7 { pt3dadd( -21.1509, 301.937, -11.909, 1.11 ) }
    dend_7 { pt3dadd( -21.1628, 302.022, -11.9195, 1.11 ) }
    dend_7 { pt3dadd( -21.3634, 303.09, -12.055, 1.11 ) }
    dend_7 { pt3dadd( -21.3913, 303.216, -12.0727, 1.11 ) }
    dend_7 { pt3dadd( -21.6806, 304.294, -12.2499, 1.11 ) }
    dend_7 { pt3dadd( -21.9258, 305.337, -12.4128, 1.33 ) }
    dend_7 { pt3dadd( -22.0619, 306.09, -12.5316, 1.33 ) }
    dend_7 { pt3dadd( -22.0733, 306.187, -12.5474, 1.33 ) }
    dend_7 { pt3dadd( -22.1545, 307.424, -12.7544, 0.59 ) }
    dend_7 { pt3dadd( -22.1778, 307.949, -12.8419, 0.37 ) }
    dend_7 { pt3dadd( -22.2152, 309.672, -13.1263, 0.37 ) }
    dend_7 { pt3dadd( -22.2232, 310.991, -13.3384, 0.96 ) }
    dend_7 { pt3dadd( -22.2238, 312.328, -13.5338, 1.25 ) }
    dend_7 { pt3dadd( -22.2303, 312.778, -13.59, 1.62 ) }
    dend_7 { pt3dadd( -22.2555, 313.407, -13.6472, 1.77 ) }
    dend_7 { pt3dadd( -22.327, 314.054, -13.6903, 1.77 ) }
    dend_7 { pt3dadd( -22.3445, 314.139, -13.6949, 1.77 ) }
    dend_7 { pt3dadd( -22.6064, 315.153, -13.6829, 1.11 ) }
    dend_7 { pt3dadd( -22.7383, 315.605, -13.6643, 0.88 ) }
    dend_7 { pt3dadd( -23.022, 316.5, -13.6187, 0.81 ) }
    dend_7 { pt3dadd( -23.6471, 318.457, -13.5043, 0.81 ) }
    dend_7 { pt3dadd( -24.029, 319.705, -13.4362, 0.81 ) }
    dend_7 { pt3dadd( -24.2848, 320.59, -13.3923, 0.59 ) }
    dend_7 { pt3dadd( -24.6213, 321.893, -13.3315, 0.59 ) }
    dend_7 { pt3dadd( -25.0107, 323.615, -13.2643, 0.59 ) }
    dend_7 { pt3dadd( -25.2029, 324.657, -13.2306, 0.59 ) }
    dend_7 { pt3dadd( -25.3522, 325.739, -13.2101, 1.25 ) }
    dend_7 { pt3dadd( -25.4339, 326.546, -13.213, 1.62 ) }
    dend_7 { pt3dadd( -25.4964, 327.458, -13.2444, 2.06 ) }
    dend_7 { pt3dadd( -25.5208, 328.439, -13.2692, 2.21 ) }
    dend_7 { pt3dadd( -25.5174, 329.253, -13.2741, 2.21 ) }
    dend_7 { pt3dadd( -25.4927, 330.152, -13.2532, 1.55 ) }
    dend_7 { pt3dadd( -25.4627, 330.784, -13.2179, 1.11 ) }
    dend_7 { pt3dadd( -25.4079, 331.407, -13.1778, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_7 { pt3dadd( -25.3326, 331.948, -13.1402, 0.66 ) }
    dend_7 { pt3dadd( -25.1031, 333.115, -13.0595, 0.52 ) }
    dend_7 { pt3dadd( -24.904, 333.979, -13.0085, 0.52 ) }
    dend_7 { pt3dadd( -24.8843, 334.063, -13.0048, 0.52 ) }
    dend_7 { pt3dadd( -24.7405, 334.668, -12.9878, 0.52 ) }
    dend_7 { pt3dadd( -24.5254, 335.645, -13.0088, 0.52 ) }
    dend_7 { pt3dadd( -24.3514, 336.61, -13.0757, 0.81 ) }
    dend_7 { pt3dadd( -24.2317, 337.593, -13.1769, 0.81 ) }
    dend_7 { pt3dadd( -24.1885, 338.418, -13.2666, 1.03 ) }
    dend_7 { pt3dadd( -24.1877, 338.516, -13.2762, 1.03 ) }
    dend_7 { pt3dadd( -24.2156, 339.436, -13.353, 1.11 ) }
    dend_7 { pt3dadd( -24.2633, 340.509, -13.4706, 1.18 ) }
    dend_7 { pt3dadd( -24.3523, 341.847, -13.6361, 1.18 ) }
    dend_7 { pt3dadd( -24.454, 343.089, -13.7938, 1.33 ) }
    dend_7 { pt3dadd( -24.5426, 344.014, -13.9076, 1.33 ) }
    dend_7 { pt3dadd( -24.6581, 345.168, -14.0366, 1.33 ) }
    dend_7 { pt3dadd( -24.7861, 346.402, -14.156, 1.18 ) }
    dend_7 { pt3dadd( -24.9375, 347.894, -14.2972, 0.96 ) }
    dend_7 { pt3dadd( -25.0465, 349.054, -14.4003, 0.96 ) }
    dend_7 { pt3dadd( -25.1354, 350.047, -14.4797, 1.25 ) }
    dend_7 { pt3dadd( -25.2499, 351.401, -14.5708, 1.92 ) }
    dend_7 { pt3dadd( -25.3574, 352.651, -14.6345, 2.8 ) }
    dend_7 { pt3dadd( -25.4396, 353.642, -14.6584, 2.43 ) }
    dend_7 { pt3dadd( -25.5316, 354.57, -14.6828, 1.62 ) }
    dend_7 { pt3dadd( -25.643, 355.335, -14.7076, 1.4 ) }
    dend_7 { pt3dadd( -25.7589, 355.956, -14.7312, 1.03 ) }
    dend_7 { pt3dadd( -25.7793, 356.04, -14.7371, 1.03 ) }
    dend_7 { pt3dadd( -26.027, 356.906, -14.8197, 0.88 ) }
    dend_7 { pt3dadd( -26.4559, 358.285, -14.9748, 0.81 ) }
    dend_7 { pt3dadd( -26.9816, 359.855, -15.1699, 0.81 ) }
    dend_7 { pt3dadd( -27.0089, 359.936, -15.1802, 0.81 ) }
    dend_7 { pt3dadd( -27.5163, 361.422, -15.3704, 0.81 ) }
    dend_7 { pt3dadd( -27.768, 362.175, -15.4646, 1.11 ) }
    dend_7 { pt3dadd( -27.9706, 362.787, -15.5396, 1.11 ) }
    dend_7 { pt3dadd( -28.2193, 363.591, -15.6454, 1.4 ) }
    dend_7 { pt3dadd( -28.5288, 364.636, -15.7848, 1.47 ) }
    dend_7 { pt3dadd( -28.7033, 365.374, -15.8694, 1.47 ) }
    dend_7 { pt3dadd( -28.8166, 365.988, -15.9269, 1.47 ) }
    dend_7 { pt3dadd( -28.9046, 366.758, -15.9935, 1.47 ) }
    dend_7 { pt3dadd( -28.965, 367.664, -16.0674, 0.96 ) }
    dend_7 { pt3dadd( -28.9764, 368.46, -16.1238, 0.88 ) }
    dend_7 { pt3dadd( -28.9371, 370.276, -16.2938, 0.88 ) }
    dend_7 { pt3dadd( -28.9341, 370.361, -16.303, 0.88 ) }
    dend_7 { pt3dadd( -28.8872, 371.892, -16.5171, 0.88 ) }
    dend_7 { pt3dadd( -28.8871, 371.989, -16.5331, 0.88 ) }
    dend_7 { pt3dadd( -29.0013, 373.485, -16.8012, 0.88 ) }
    dend_7 { pt3dadd( -29.1422, 374.449, -17.0295, 0.74 ) }
    dend_7 { pt3dadd( -29.3509, 375.425, -17.3051, 0.74 ) }
    dend_7 { pt3dadd( -29.5222, 376.118, -17.5156, 0.96 ) }
    dend_7 { pt3dadd( -29.8162, 377.215, -17.8677, 0.96 ) }
    dend_7 { pt3dadd( -30.2372, 378.856, -18.3971, 0.96 ) }
    dend_7 { pt3dadd( -30.4416, 379.686, -18.6534, 0.37 ) }
    dend_7 { pt3dadd( -30.5673, 380.289, -18.8089, 0.37 ) }
    dend_7 { pt3dadd( -30.5803, 380.372, -18.8286, 0.37 ) }
    dend_7 { pt3dadd( -30.679, 381.281, -18.9988, 0.37 ) }
    dend_7 { pt3dadd( -30.7301, 382.259, -19.1533, 0.96 ) }
    dend_7 { pt3dadd( -30.7586, 383.431, -19.2906, 1.55 ) }
    dend_7 { pt3dadd( -30.7901, 384.153, -19.3421, 1.77 ) }
    dend_7 { pt3dadd( -30.7937, 384.238, -19.347, 1.77 ) }
    dend_7 { pt3dadd( -30.8235, 385.326, -19.3906, 1.55 ) }
    dend_7 { pt3dadd( -30.8319, 386.038, -19.4061, 1.18 ) }
    dend_7 { pt3dadd( -30.814, 386.663, -19.4165, 1.03 ) }
    dend_7 { pt3dadd( -30.7665, 387.477, -19.437, 0.81 ) }
    dend_7 { pt3dadd( -30.6769, 388.85, -19.4805, 0.81 ) }
    dend_7 { pt3dadd( -30.5892, 390.127, -19.5259, 0.81 ) }
    dend_7 { pt3dadd( -30.509, 391.209, -19.5522, 1.11 ) }
    dend_7 { pt3dadd( -30.4086, 392.676, -19.5737, 1.4 ) }
    dend_7 { pt3dadd( -30.3375, 393.844, -19.5819, 1.55 ) }
    dend_7 { pt3dadd( -30.2605, 395.367, -19.5817, 1.84 ) }
    dend_7 { pt3dadd( -30.2307, 396.446, -19.5748, 1.84 ) }
    dend_7 { pt3dadd( -30.2197, 397.68, -19.5571, 2.06 ) }
    dend_7 { pt3dadd( -30.2217, 398.49, -19.5372, 2.06 ) }
    dend_7 { pt3dadd( -30.225, 399.299, -19.5076, 1.84 ) }
    dend_7 { pt3dadd( -30.2282, 400.01, -19.4848, 1.69 ) }
    dend_7 { pt3dadd( -30.2256, 400.741, -19.4821, 1.55 ) }
    dend_7 { pt3dadd( -30.2286, 401.538, -19.5059, 1.25 ) }
    dend_7 { pt3dadd( -30.2344, 402.346, -19.5699, 1.11 ) }
    dend_7 { pt3dadd( -30.2472, 403.968, -19.7304, 1.11 ) }
    dend_7 { pt3dadd( -30.2485, 404.054, -19.7398, 1.11 ) }
    dend_7 { pt3dadd( -30.2922, 405.354, -19.9141, 1.11 ) }
    dend_7 { pt3dadd( -30.37, 406.701, -20.1099, 1.11 ) }
    dend_7 { pt3dadd( -30.4525, 407.82, -20.282, 0.88 ) }
    dend_7 { pt3dadd( -30.5246, 408.702, -20.429, 0.88 ) }
    dend_7 { pt3dadd( -30.6533, 410.222, -20.6873, 0.88 ) }
    dend_7 { pt3dadd( -30.8253, 412.432, -21.0459, 0.88 ) }
    dend_7 { pt3dadd( -30.9324, 413.895, -21.2638, 1.25 ) }
    dend_7 { pt3dadd( -30.941, 414.024, -21.2833, 1.25 ) }
    dend_7 { pt3dadd( -31.0123, 415.308, -21.4654, 1.84 ) }
    dend_7 { pt3dadd( -31.0626, 416.466, -21.6254, 1.92 ) }
    dend_7 { pt3dadd( -31.0841, 417.087, -21.7032, 1.84 ) }
    dend_7 { pt3dadd( -31.1433, 418.16, -21.8117, 1.4 ) }
    dend_7 { pt3dadd( -31.2179, 419.118, -21.9042, 0.81 ) }
    dend_7 { pt3dadd( -31.3323, 420.021, -21.9983, 0.81 ) }
    dend_7 { pt3dadd( -31.5482, 421.177, -22.1217, 0.66 ) }
    dend_7 { pt3dadd( -31.8212, 422.338, -22.2597, 0.59 ) }
    dend_7 { pt3dadd( -32.1438, 423.536, -22.4352, 0.59 ) }
    dend_7 { pt3dadd( -32.1675, 423.618, -22.4487, 0.59 ) }
    dend_7 { pt3dadd( -32.5351, 424.89, -22.6922, 1.25 ) }
    dend_7 { pt3dadd( -32.7985, 425.807, -22.8855, 1.69 ) }
    dend_7 { pt3dadd( -33.012, 426.594, -23.061, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_7 { pt3dadd( -33.2607, 427.693, -23.3272, 1.4 ) }
    dend_7 { pt3dadd( -33.4142, 428.653, -23.5521, 0.88 ) }
    dend_7 { pt3dadd( -33.5726, 429.992, -23.8393, 0.59 ) }
    dend_7 { pt3dadd( -33.7735, 432.28, -24.2575, 0.59 ) }
    dend_7 { pt3dadd( -33.7791, 432.365, -24.2714, 0.59 ) }
    dend_7 { pt3dadd( -33.8776, 434.108, -24.515, 0.59 ) }
    dend_7 { pt3dadd( -33.9684, 435.83, -24.6977, 0.59 ) }
    dend_7 { pt3dadd( -34.042, 437.262, -24.8223, 0.59 ) }
    dend_7 { pt3dadd( -34.0877, 438.256, -24.8767, 0.96 ) }
    dend_7 { pt3dadd( -34.0932, 438.386, -24.8775, 0.96 ) }
    dend_7 { pt3dadd( -34.1773, 439.477, -24.8287, 1.18 ) }
    dend_7 { pt3dadd( -34.309, 440.463, -24.7236, 1.4 ) }
    dend_7 { pt3dadd( -34.3249, 440.546, -24.7064, 1.4 ) }
    dend_7 { pt3dadd( -34.47, 441.239, -24.5148, 1.4 ) }
    dend_7 { pt3dadd( -34.6925, 442.283, -24.1999, 1.4 ) }
    dend_7 { pt3dadd( -34.9645, 443.582, -23.8029, 1.4 ) }
    dend_7 { pt3dadd( -35.2294, 444.877, -23.3894, 1.4 ) }
    dend_7 { pt3dadd( -35.587, 446.685, -22.8416, 1.11 ) }
    dend_7 { pt3dadd( -35.6018, 446.767, -22.8197, 1.11 ) }
    dend_7 { pt3dadd( -35.8196, 447.975, -22.4887, 1.11 ) }
    dend_7 { pt3dadd( -36.0205, 449.192, -22.1887, 1.11 ) }
    dend_7 { pt3dadd( -36.0334, 449.274, -22.1679, 1.11 ) }
    dend_7 { pt3dadd( -36.2148, 450.415, -21.9065, 1.18 ) }
    dend_7 { pt3dadd( -36.3845, 451.375, -21.7338, 1.18 ) }
    dend_7 { pt3dadd( -36.6311, 452.604, -21.4987, 0.81 ) }
    dend_7 { pt3dadd( -36.9419, 453.984, -21.2181, 0.74 ) }
    dend_7 { pt3dadd( -37.3792, 455.706, -20.8784, 0.74 ) }
    dend_7 { pt3dadd( -37.508, 456.203, -20.7907, 1.03 ) }
    dend_7 { pt3dadd( -37.7224, 456.942, -20.69, 1.4 ) }
    dend_7 { pt3dadd( -37.7511, 457.036, -20.6826, 1.4 ) }
    dend_7 { pt3dadd( -37.9553, 457.726, -20.6707, 1.4 ) }
    dend_7 { pt3dadd( -38.1954, 458.549, -20.6641, 0.96 ) }
    dend_7 { pt3dadd( -38.3612, 459.16, -20.6661, 0.88 ) }
    dend_7 { pt3dadd( -38.7053, 460.569, -20.6636, 0.88 ) }
    dend_7 { pt3dadd( -39.1731, 462.65, -20.6512, 0.88 ) }
    dend_7 { pt3dadd( -39.3668, 463.543, -20.6456, 1.18 ) }
    dend_7 { pt3dadd( -39.5517, 464.421, -20.5987, 1.47 ) }
    dend_7 { pt3dadd( -39.5682, 464.505, -20.5905, 1.47 ) }
    dend_7 { pt3dadd( -39.6836, 465.214, -20.4937, 1.47 ) }
    dend_7 { pt3dadd( -39.6927, 465.299, -20.48, 1.47 ) }
    dend_7 { pt3dadd( -39.7725, 466.291, -20.3846, 1.47 ) }
    dend_7 { pt3dadd( -39.868, 467.698, -20.3048, 1.18 ) }
    dend_7 { pt3dadd( -39.9368, 468.597, -20.2887, 0.81 ) }
    dend_7 { pt3dadd( -39.9937, 469.324, -20.299, 0.66 ) }
    dend_7 { pt3dadd( -40.1388, 471.327, -20.3887, 0.66 ) }
    dend_7 { pt3dadd( -40.2564, 473.024, -20.5419, 0.66 ) }
    dend_7 { pt3dadd( -40.2611, 473.109, -20.554, 0.66 ) }
    dend_7 { pt3dadd( -40.3082, 474.054, -20.7481, 0.96 ) }
    dend_7 { pt3dadd( -40.3548, 474.847, -20.9156, 1.33 ) }
    dend_7 { pt3dadd( -40.4348, 475.811, -21.1113, 1.62 ) }
    dend_7 { pt3dadd( -40.478, 476.519, -21.2292, 1.33 ) }
    dend_7 { pt3dadd( -40.4926, 477.007, -21.2713, 1.18 ) }
    dend_7 { pt3dadd( -40.4931, 477.093, -21.2776, 1.18 ) }
    dend_7 { pt3dadd( -40.4712, 477.628, -21.3042, 1.18 ) }
    dend_7 { pt3dadd( -40.4312, 478.455, -21.3313, 0.96 ) }
    dend_7 { pt3dadd( -40.3637, 479.631, -21.353, 0.74 ) }
    dend_7 { pt3dadd( -40.2619, 481.441, -21.3632, 0.74 ) }
    dend_7 { pt3dadd( -40.2569, 481.538, -21.3638, 0.74 ) }
    dend_7 { pt3dadd( -40.1409, 483.798, -21.4233, 0.74 ) }
    dend_7 { pt3dadd( -40.0793, 485.051, -21.4765, 1.11 ) }
    dend_7 { pt3dadd( -40.0737, 485.149, -21.4856, 1.11 ) }
    dend_7 { pt3dadd( -40.016, 486.233, -21.6409, 1.69 ) }
    dend_7 { pt3dadd( -39.9584, 487.546, -21.912, 2.21 ) }
    dend_7 { pt3dadd( -39.913, 488.649, -22.1885, 2.21 ) }
    dend_7 { pt3dadd( -39.8741, 489.588, -22.4843, 1.03 ) }
    dend_7 { pt3dadd( -39.8139, 490.767, -22.8718, 0.88 ) }
    dend_7 { pt3dadd( -39.8083, 490.849, -22.8995, 0.88 ) }
    dend_7 { pt3dadd( -39.7162, 491.914, -23.2714, 0.66 ) }
    dend_7 { pt3dadd( -39.6436, 492.767, -23.549, 0.66 ) }
    dend_7 { pt3dadd( -39.6292, 492.967, -23.6097, 0.66 ) }
    dend_7 { pt3dadd( -39.5605, 494.088, -23.9372, 0.66 ) }
    dend_7 { pt3dadd( -39.5233, 495.064, -24.1796, 0.59 ) }
    dend_7 { pt3dadd( -39.5099, 495.598, -24.3095, 0.74 ) }
    dend_7 { pt3dadd( -39.4994, 496.382, -24.523, 0.74 ) }
    dend_7 { pt3dadd( -39.5468, 497.663, -24.8884, 0.81 ) }
    dend_7 { pt3dadd( -39.5525, 497.746, -24.9121, 0.81 ) }
    dend_7 { pt3dadd( -39.6353, 498.7, -25.2057, 0.81 ) }
    dend_7 { pt3dadd( -39.7315, 499.656, -25.493, 0.81 ) }
    dend_7 { pt3dadd( -39.8562, 500.994, -25.8891, 0.66 ) }
    dend_7 { pt3dadd( -39.9833, 502.474, -26.2937, 0.52 ) }
    dend_7 { pt3dadd( -39.9902, 502.569, -26.3161, 0.52 ) }
    dend_7 { pt3dadd( -40.0616, 503.634, -26.5462, 0.52 ) }
    dend_7 { pt3dadd( -40.0942, 504.248, -26.6639, 0.52 ) }
    dend_7 { pt3dadd( -40.1305, 505.049, -26.7847, 1.11 ) }
    dend_7 { pt3dadd( -40.1675, 506.038, -26.878, 1.69 ) }
    dend_7 { pt3dadd( -40.1855, 506.571, -26.9167, 2.06 ) }
    dend_7 { pt3dadd( -40.2444, 507.628, -26.9697, 1.4 ) }
    dend_7 { pt3dadd( -40.3018, 508.522, -26.9891, 1.11 ) }
    dend_7 { pt3dadd( -40.3566, 509.336, -27.007, 0.81 ) }
    dend_7 { pt3dadd( -40.3992, 509.978, -27.0126, 0.59 ) }
    dend_7 { pt3dadd( -40.4668, 510.975, -27.0112, 0.59 ) }
    dend_7 { pt3dadd( -40.5427, 512.056, -27.0006, 0.59 ) }
    dend_7 { pt3dadd( -40.6761, 513.845, -27.0305, 0.59 ) }
    dend_7 { pt3dadd( -40.7061, 514.209, -27.0455, 0.52 ) }
    dend_7 { pt3dadd( -40.7564, 514.833, -27.083, 0.52 ) }
    dend_7 { pt3dadd( -40.7634, 514.919, -27.0894, 0.52 ) }
    dend_7 { pt3dadd( -40.8825, 516.539, -27.2296, 0.52 ) }
    dend_7 { pt3dadd( -40.9704, 517.788, -27.3519, 1.03 ) }
    dend_7 { pt3dadd( -41.0426, 518.86, -27.4661, 1.55 ) }
    dend_7 { pt3dadd( -41.1123, 520.372, -27.6221, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_7 { pt3dadd( -41.1244, 521.079, -27.7075, 2.36 ) }
    dend_7 { pt3dadd( -41.1122, 521.622, -27.7698, 2.14 ) }
    dend_7 { pt3dadd( -41.0776, 522.073, -27.8121, 1.84 ) }
    dend_7 { pt3dadd( -41.0119, 522.879, -27.8629, 1.69 ) }
    dend_7 { pt3dadd( -40.9549, 523.876, -27.8725, 1.4 ) }
    dend_7 { pt3dadd( -40.9165, 524.859, -27.8382, 0.29 ) }
    dend_7 { pt3dadd( -40.8896, 525.95, -27.7624, 0.29 ) }
    dend_7 { pt3dadd( -40.8776, 526.722, -27.6855, 0.29 ) }
    dend_7 { pt3dadd( -40.862, 528.199, -27.4938, 0.29 ) }
    dend_7 { pt3dadd( -40.8558, 529.645, -27.2584, 0.29 ) }
    dend_7 { pt3dadd( -40.8527, 530.008, -27.1833, 0.74 ) }
    dend_7 { pt3dadd( -40.8493, 530.205, -27.1337, 0.74 ) }
    dend_7 { pt3dadd( -40.8041, 531.096, -26.9194, 0.74 ) }
    dend_7 { pt3dadd( -40.794, 531.215, -26.8964, 0.74 ) }
    dend_7 { pt3dadd( -40.6837, 532.018, -26.7908, 0.88 ) }
    dend_7 { pt3dadd( -40.591, 532.926, -26.7122, 0.88 ) }
    dend_7 { pt3dadd( -40.5744, 533.194, -26.6844, 0.88 ) }
    dend_7 { pt3dadd( -40.5477, 534.088, -26.5763, 0.88 ) }
    dend_7 { pt3dadd( -40.5626, 534.993, -26.457, 1.25 ) }
    dend_7 { pt3dadd( -40.6179, 535.881, -26.3445, 1.25 ) }
    dend_7 { pt3dadd( -40.6936, 536.614, -26.2536, 1.11 ) }
    dend_7 { pt3dadd( -40.7123, 536.742, -26.2354, 1.11 ) }
    dend_7 { pt3dadd( -40.7706, 537.113, -26.1777, 1.11 ) }
    dend_7 { pt3dadd( -40.8875, 537.832, -26.0647, 0.66 ) }
    dend_7 { pt3dadd( -41.0382, 538.728, -25.943, 0.66 ) }
    dend_7 { pt3dadd( -41.0618, 538.856, -25.9302, 0.66 ) }
    dend_7 { pt3dadd( -41.2154, 539.732, -25.8747, 0.52 ) }
    dend_7 { pt3dadd( -41.4786, 541.07, -25.8123, 0.52 ) }
    dend_7 { pt3dadd( -41.5704, 541.509, -25.8004, 0.96 ) }
    dend_7 { pt3dadd( -41.7808, 542.463, -25.7612, 1.25 ) }
    dend_7 { pt3dadd( -41.9522, 543.206, -25.7267, 1.55 ) }
    dend_7 { pt3dadd( -42.1011, 543.821, -25.7021, 1.55 ) }
    dend_7 { pt3dadd( -42.3147, 544.682, -25.6775, 1.18 ) }
    dend_7 { pt3dadd( -42.5902, 545.918, -25.6239, 0.81 ) }
    dend_7 { pt3dadd( -42.7432, 546.689, -25.5911, 0.88 ) }
    dend_7 { pt3dadd( -42.7734, 546.871, -25.5862, 0.88 ) }
    dend_7 { pt3dadd( -42.9957, 548.419, -25.5651, 0.88 ) }
    dend_7 { pt3dadd( -43.0064, 548.505, -25.565, 0.88 ) }
    dend_7 { pt3dadd( -43.2403, 550.826, -25.5917, 0.88 ) }
    dend_7 { pt3dadd( -43.4039, 552.744, -25.6418, 0.88 ) }
    dend_7 { pt3dadd( -43.4795, 553.846, -25.6884, 1.33 ) }
    dend_7 { pt3dadd( -43.5334, 554.739, -25.7252, 1.4 ) }
    dend_7 { pt3dadd( -43.5894, 555.718, -25.7844, 1.4 ) }
    dend_7 { pt3dadd( -43.6416, 556.524, -25.8453, 0.88 ) }
    dend_7 { pt3dadd( -43.6472, 556.609, -25.853, 0.88 ) }
    dend_7 { pt3dadd( -43.7251, 557.866, -25.9714, 0.88 ) }
    dend_7 { pt3dadd( -43.8437, 559.655, -26.1354, 0.88 ) }
    dend_7 { pt3dadd( -43.9467, 561.368, -26.3775, 0.88 ) }
    dend_7 { pt3dadd( -44.0024, 562.434, -26.5702, 1.18 ) }
    dend_7 { pt3dadd( -44.0356, 563.399, -26.7737, 1.18 ) }
    dend_7 { pt3dadd( -44.0367, 563.495, -26.7954, 1.18 ) }
    dend_7 { pt3dadd( -44.004, 564.536, -27.0964, 1.18 ) }
    dend_7 { pt3dadd( -43.8893, 565.997, -27.5793, 0.96 ) }
    dend_7 { pt3dadd( -43.8798, 566.079, -27.6059, 0.96 ) }
    dend_7 { pt3dadd( -43.7703, 566.973, -27.8929, 0.88 ) }
    dend_7 { pt3dadd( -43.5852, 568.523, -28.3516, 0.81 ) }
    dend_7 { pt3dadd( -43.4271, 570.0, -28.7274, 0.37 ) }
    dend_7 { pt3dadd( -43.33, 570.959, -28.9278, 0.59 ) }
    dend_7 { pt3dadd( -43.2312, 572.038, -29.097, 0.81 ) }
    dend_7 { pt3dadd( -43.1195, 573.378, -29.2927, 0.96 ) }
    dend_7 { pt3dadd( -43.0509, 574.281, -29.4076, 1.55 ) }
    dend_7 { pt3dadd( -42.9669, 575.528, -29.5224, 1.99 ) }
    dend_7 { pt3dadd( -42.9419, 576.263, -29.534, 2.21 ) }
    dend_7 { pt3dadd( -42.9409, 576.361, -29.5329, 2.21 ) }
    dend_7 { pt3dadd( -42.9448, 576.803, -29.5146, 2.21 ) }
    dend_7 { pt3dadd( -42.96, 577.883, -29.4351, 1.77 ) }
    dend_7 { pt3dadd( -42.9954, 578.695, -29.3727, 1.47 ) }
    dend_7 { pt3dadd( -43.0461, 579.501, -29.3087, 1.25 ) }
    dend_7 { pt3dadd( -43.1312, 580.477, -29.2452, 0.59 ) }
    dend_7 { pt3dadd( -43.1978, 581.205, -29.1976, 0.37 ) }
    dend_7 { pt3dadd( -43.2757, 582.016, -29.1458, 0.29 ) }
    dend_7 { pt3dadd( -43.389, 583.181, -29.0796, 0.29 ) }
    dend_7 { pt3dadd( -43.3965, 583.267, -29.0759, 0.29 ) }
    dend_7 { pt3dadd( -43.5216, 584.978, -29.0431, 0.29 ) }
    dend_7 { pt3dadd( -43.5592, 585.413, -29.034, 0.66 ) }
    dend_7 { pt3dadd( -43.5743, 585.596, -29.03, 0.66 ) }
    dend_7 { pt3dadd( -43.6255, 586.318, -29.0157, 0.88 ) }
    dend_7 { pt3dadd( -43.6285, 586.404, -29.0143, 0.88 ) }
    dend_7 { pt3dadd( -43.6715, 587.299, -28.9891, 1.11 ) }
    dend_7 { pt3dadd( -43.7172, 588.212, -28.9569, 1.33 ) }
    dend_7 { pt3dadd( -43.7562, 588.863, -28.9356, 1.33 ) }
    dend_7 { pt3dadd( -43.8151, 589.691, -28.9063, 0.81 ) }
    dend_7 { pt3dadd( -43.9314, 590.94, -28.8589, 0.66 ) }
    dend_7 { pt3dadd( -44.0877, 592.186, -28.8171, 0.66 ) }
    dend_7 { pt3dadd( -44.1105, 592.323, -28.8132, 0.66 ) }
    dend_7 { pt3dadd( -44.3039, 593.205, -28.7985, 1.55 ) }
    dend_7 { pt3dadd( -44.6465, 594.427, -28.8017, 2.14 ) }
    dend_7 { pt3dadd( -44.9357, 595.324, -28.8207, 2.5 ) }
    dend_7 { pt3dadd( -45.385, 596.584, -28.875, 2.5 ) }
    dend_7 { pt3dadd( -45.5994, 597.196, -28.9118, 2.43 ) }
    dend_7 { pt3dadd( -45.9944, 598.391, -28.9826, 1.62 ) }
    dend_7 { pt3dadd( -46.298, 599.354, -29.0397, 0.59 ) }
    dend_7 { pt3dadd( -46.5343, 600.15, -29.087, 0.59 ) }
    dend_7 { pt3dadd( -46.9864, 601.838, -29.1859, 0.44 ) }
    dend_7 { pt3dadd( -47.2627, 603.06, -29.2496, 0.44 ) }
    dend_7 { pt3dadd( -47.4275, 603.946, -29.2896, 0.74 ) }
    dend_7 { pt3dadd( -47.4418, 604.044, -29.2943, 0.74 ) }
    dend_7 { pt3dadd( -47.5242, 604.719, -29.3441, 0.74 ) }
    dend_7 { pt3dadd( -47.5336, 604.804, -29.3529, 0.74 ) }
    dend_7 { pt3dadd( -47.6481, 605.959, -29.5097, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_7 { pt3dadd( -47.6569, 606.043, -29.5232, 0.74 ) }
    dend_7 { pt3dadd( -47.7427, 606.992, -29.6786, 0.37 ) }
    dend_7 { pt3dadd( -47.8432, 608.553, -29.9308, 0.37 ) }
    dend_7 { pt3dadd( -47.8453, 608.638, -29.9436, 0.37 ) }
    dend_7 { pt3dadd( -47.8286, 609.345, -30.0337, 0.66 ) }
    dend_7 { pt3dadd( -47.8192, 609.442, -30.0431, 0.66 ) }
    dend_7 { pt3dadd( -47.6744, 610.33, -30.0909, 1.25 ) }
    dend_7 { pt3dadd( -47.6515, 610.426, -30.0913, 1.25 ) }
    dend_7 { pt3dadd( -47.3766, 611.376, -30.0672, 1.77 ) }
    dend_7 { pt3dadd( -47.0972, 612.307, -30.062, 1.77 ) }
    dend_7 { pt3dadd( -46.8775, 612.996, -30.066, 1.92 ) }
    dend_7 { pt3dadd( -46.5288, 614.146, -30.0859, 1.55 ) }
    dend_7 { pt3dadd( -46.1854, 615.324, -30.0953, 0.74 ) }
    dend_7 { pt3dadd( -45.8526, 616.534, -30.0977, 0.52 ) }
    dend_7 { pt3dadd( -45.7042, 617.11, -30.0957, 0.37 ) }
    dend_7 { pt3dadd( -45.6849, 617.194, -30.0949, 0.37 ) }
    dend_7 { pt3dadd( -45.4082, 618.607, -30.0722, 0.37 ) }
    dend_7 { pt3dadd( -45.256, 619.531, -30.0479, 0.37 ) }
    dend_7 { pt3dadd( -45.2447, 619.616, -30.0448, 0.37 ) }
    dend_7 { pt3dadd( -45.1632, 620.328, -30.0105, 1.03 ) }
    dend_7 { pt3dadd( -45.0977, 620.894, -29.9786, 1.4 ) }
    dend_7 { pt3dadd( -45.0174, 621.699, -29.9257, 1.55 ) }
    dend_7 { pt3dadd( -44.9335, 622.593, -29.8637, 1.25 ) }
    dend_7 { pt3dadd( -44.8792, 623.319, -29.816, 0.81 ) }
    dend_7 { pt3dadd( -44.8324, 624.034, -29.7605, 0.52 ) }
    dend_7 { pt3dadd( -44.8034, 624.846, -29.6922, 0.52 ) }
    dend_7 { pt3dadd( -44.7905, 626.118, -29.5782, 0.52 ) }
    dend_7 { pt3dadd( -44.7913, 626.203, -29.5704, 0.52 ) }
    dend_7 { pt3dadd( -44.8424, 627.188, -29.4861, 0.81 ) }
    dend_7 { pt3dadd( -44.8506, 627.286, -29.479, 0.81 ) }
    dend_7 { pt3dadd( -44.9715, 628.38, -29.4187, 0.96 ) }
    dend_7 { pt3dadd( -44.9844, 628.477, -29.4163, 0.96 ) }
    dend_7 { pt3dadd( -45.1233, 629.264, -29.4018, 0.96 ) }
    dend_7 { pt3dadd( -45.259, 629.897, -29.3757, 0.96 ) }
    dend_7 { pt3dadd( -45.3782, 630.344, -29.3514, 1.18 ) }
    dend_7 { pt3dadd( -45.4335, 630.508, -29.3433, 1.18 ) }
    dend_7 { pt3dadd( -45.666, 631.111, -29.3124, 1.18 ) }
    dend_7 { pt3dadd( -46.0311, 631.98, -29.2688, 1.03 ) }
    dend_7 { pt3dadd( -46.2711, 632.479, -29.2488, 0.81 ) }
    dend_7 { pt3dadd( -46.8008, 633.485, -29.2278, 0.52 ) }
    dend_7 { pt3dadd( -47.5854, 634.851, -29.2308, 0.52 ) }
    dend_7 { pt3dadd( -47.6307, 634.925, -29.2326, 0.52 ) }
    dend_7 { pt3dadd( -47.8531, 635.269, -29.2503, 0.74 ) }
    dend_7 { pt3dadd( -48.5098, 636.234, -29.3347, 1.03 ) }
    dend_7 { pt3dadd( -49.2158, 637.202, -29.4258, 1.03 ) }
    dend_7 { pt3dadd( -49.7416, 637.879, -29.4945, 1.03 ) }
    dend_7 { pt3dadd( -49.8731, 638.045, -29.5122, 1.03 ) }
    dend_7 { pt3dadd( -50.5014, 638.8, -29.5569, 1.03 ) }
    dend_7 { pt3dadd( -51.0987, 639.49, -29.5675, 0.74 ) }
    dend_7 { pt3dadd( -51.1653, 639.565, -29.5648, 0.74 ) }
    dend_7 { pt3dadd( -51.5689, 640.002, -29.5019, 0.52 ) }
    dend_7 { pt3dadd( -52.1515, 640.618, -29.3308, 0.52 ) }
    dend_7 { pt3dadd( -53.0654, 641.702, -28.982, 0.52 ) }
    dend_7 { pt3dadd( -53.4996, 642.33, -28.7754, 0.44 ) }
    dend_7 { pt3dadd( -53.5515, 642.411, -28.7491, 0.44 ) }
    dend_7 { pt3dadd( -54.2091, 643.474, -28.3999, 0.29 ) }
    dend_7 { pt3dadd( -55.0725, 644.947, -27.9015, 0.29 ) }
    dend_7 { pt3dadd( -55.8665, 646.415, -27.4056, 2.73 ) }
    dend_7 { pt3dadd( -56.48, 647.721, -27.0093, 3.17 ) }
    dend_7 { pt3dadd( -56.7625, 648.374, -26.8163, 3.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.78689, 472.29, -21.2874, 0.37 ) }
    dend_5 { pt3dadd( -6.47853, 473.23, -18.6602, 0.37 ) }
    dend_5 { pt3dadd( -6.49676, 473.256, -18.5959, 0.37 ) }
    dend_5 { pt3dadd( -6.63574, 473.486, -18.1242, 1.03 ) }
    dend_5 { pt3dadd( -6.65709, 473.522, -18.0541, 1.03 ) }
    dend_5 { pt3dadd( -7.28628, 474.611, -16.0276, 1.03 ) }
    dend_5 { pt3dadd( -7.73295, 475.343, -14.749, 0.37 ) }
    dend_5 { pt3dadd( -7.92857, 475.651, -14.2646, 0.29 ) }
    dend_5 { pt3dadd( -8.22538, 476.119, -13.5629, 0.29 ) }
    dend_5 { pt3dadd( -8.64987, 476.783, -12.61, 0.29 ) }
    dend_5 { pt3dadd( -8.70512, 476.875, -12.5025, 0.29 ) }
    dend_5 { pt3dadd( -9.06816, 477.542, -11.9544, 0.29 ) }
    dend_5 { pt3dadd( -9.08896, 477.588, -11.9235, 0.29 ) }
    dend_5 { pt3dadd( -9.41195, 478.68, -11.3388, 0.29 ) }
    dend_5 { pt3dadd( -9.43774, 478.818, -11.274, 0.29 ) }
    dend_5 { pt3dadd( -9.49979, 479.655, -10.9605, 0.29 ) }
    dend_5 { pt3dadd( -9.49948, 479.794, -10.9108, 0.29 ) }
    dend_5 { pt3dadd( -9.39861, 480.834, -10.5692, 0.29 ) }
    dend_5 { pt3dadd( -9.2067, 482.183, -10.1825, 0.29 ) }
    dend_5 { pt3dadd( -9.0659, 482.839, -10.0395, 0.96 ) }
    dend_5 { pt3dadd( -8.92081, 483.363, -9.92544, 1.4 ) }
    dend_5 { pt3dadd( -8.82474, 483.665, -9.8433, 1.4 ) }
    dend_5 { pt3dadd( -8.66168, 484.144, -9.70014, 0.88 ) }
    dend_5 { pt3dadd( -8.47887, 484.663, -9.52356, 0.52 ) }
    dend_5 { pt3dadd( -7.99978, 486.02, -8.99281, 0.29 ) }
    dend_5 { pt3dadd( -7.4441, 487.608, -8.33914, 0.29 ) }
    dend_5 { pt3dadd( -7.13417, 488.534, -7.92362, 0.88 ) }
    dend_5 { pt3dadd( -6.99495, 488.991, -7.71351, 0.88 ) }
    dend_5 { pt3dadd( -6.84643, 489.587, -7.4387, 0.81 ) }
    dend_5 { pt3dadd( -6.7625, 489.985, -7.25387, 0.22 ) }
    dend_5 { pt3dadd( -6.75394, 490.047, -7.22538, 0.22 ) }
    dend_5 { pt3dadd( -6.70574, 490.806, -6.97183, 0.22 ) }
    dend_5 { pt3dadd( -6.65294, 491.718, -6.78776, 0.22 ) }
    dend_5 { pt3dadd( -6.61605, 492.416, -6.68738, 0.22 ) }
    dend_5 { pt3dadd( -6.59254, 492.675, -6.65765, 0.22 ) }
    dend_5 { pt3dadd( -6.58276, 492.742, -6.64969, 0.22 ) }
    dend_5 { pt3dadd( -6.46814, 493.333, -6.55591, 1.03 ) }
    dend_5 { pt3dadd( -6.42958, 493.484, -6.5257, 1.4 ) }
    dend_5 { pt3dadd( -6.2901, 493.959, -6.41546, 1.4 ) }
    dend_5 { pt3dadd( -6.06904, 494.684, -6.24133, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_5 { pt3dadd( -5.88659, 495.384, -6.08575, 0.22 ) }
    dend_5 { pt3dadd( -5.85959, 495.504, -6.06202, 0.22 ) }
    dend_5 { pt3dadd( -5.70369, 496.354, -5.9102, 0.22 ) }
    dend_5 { pt3dadd( -5.64076, 496.799, -5.84361, 0.66 ) }
    dend_5 { pt3dadd( -5.62588, 496.934, -5.82718, 0.66 ) }
    dend_5 { pt3dadd( -5.59329, 497.435, -5.77576, 0.66 ) }
    dend_5 { pt3dadd( -5.57518, 497.94, -5.71642, 0.66 ) }
    dend_5 { pt3dadd( -5.55737, 498.312, -5.6695, 0.15 ) }
    dend_5 { pt3dadd( -5.51432, 499.225, -5.42955, 0.15 ) }
    dend_5 { pt3dadd( -5.51052, 499.29, -5.40625, 0.15 ) }
    dend_5 { pt3dadd( -5.48091, 499.633, -5.25823, 0.66 ) }
    dend_5 { pt3dadd( -5.43043, 500.086, -5.03051, 0.88 ) }
    dend_5 { pt3dadd( -5.38815, 500.367, -4.85511, 0.88 ) }
    dend_5 { pt3dadd( -5.18475, 501.488, -4.13453, 0.29 ) }
    dend_5 { pt3dadd( -5.17111, 501.554, -4.09245, 0.29 ) }
    dend_5 { pt3dadd( -5.04494, 502.162, -3.74708, 0.29 ) }
    dend_5 { pt3dadd( -5.03034, 502.232, -3.71299, 0.29 ) }
    dend_5 { pt3dadd( -4.88175, 502.96, -3.38232, 0.22 ) }
    dend_5 { pt3dadd( -4.67907, 503.966, -2.99681, 0.22 ) }
    dend_5 { pt3dadd( -4.59153, 504.388, -2.87116, 0.88 ) }
    dend_5 { pt3dadd( -4.51449, 504.737, -2.76758, 1.25 ) }
    dend_5 { pt3dadd( -4.40127, 505.21, -2.63859, 1.25 ) }
    dend_5 { pt3dadd( -4.1941, 506.089, -2.37699, 0.29 ) }
    dend_5 { pt3dadd( -4.07159, 506.649, -2.21146, 0.22 ) }
    dend_5 { pt3dadd( -4.04434, 506.778, -2.16857, 0.22 ) }
    dend_5 { pt3dadd( -3.96963, 507.216, -2.02549, 0.22 ) }
    dend_5 { pt3dadd( -3.86721, 508.143, -1.65955, 0.22 ) }
    dend_5 { pt3dadd( -3.7704, 509.399, -1.13984, 0.22 ) }
    dend_5 { pt3dadd( -3.75602, 509.742, -0.998086, 1.03 ) }
    dend_5 { pt3dadd( -3.75221, 510.206, -0.805276, 1.03 ) }
    dend_5 { pt3dadd( -3.78282, 510.922, -0.510781, 1.03 ) }
    dend_5 { pt3dadd( -3.89864, 512.141, 0.0384596, 0.29 ) }
    dend_5 { pt3dadd( -4.00464, 513.138, 0.511982, 0.22 ) }
    dend_5 { pt3dadd( -4.01523, 513.263, 0.570584, 0.22 ) }
    dend_5 { pt3dadd( -4.05386, 513.83, 0.902533, 0.22 ) }
    dend_5 { pt3dadd( -4.10197, 514.756, 1.51072, 0.22 ) }
    dend_5 { pt3dadd( -4.13449, 515.854, 2.25787, 1.03 ) }
    dend_5 { pt3dadd( -4.14765, 516.265, 2.52291, 1.03 ) }
    dend_5 { pt3dadd( -4.15353, 516.352, 2.58196, 1.03 ) }
    dend_5 { pt3dadd( -4.24451, 517.879, 3.65231, 0.29 ) }
    dend_5 { pt3dadd( -4.26227, 518.295, 3.96141, 0.22 ) }
    dend_5 { pt3dadd( -4.26957, 518.88, 4.39462, 0.22 ) }
    dend_5 { pt3dadd( -4.28548, 519.265, 4.65211, 0.74 ) }
    dend_5 { pt3dadd( -4.31014, 519.534, 4.83106, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.78689, 472.29, -21.2874, 1.47 ) }
    dend_4 { pt3dadd( -5.70596, 472.5, -21.3291, 1.47 ) }
    dend_4 { pt3dadd( -5.55909, 472.865, -21.4045, 0.29 ) }
    dend_4 { pt3dadd( -5.3232, 473.424, -21.5207, 0.29 ) }
    dend_4 { pt3dadd( -5.10828, 473.922, -21.6222, 0.29 ) }
    dend_4 { pt3dadd( -4.89905, 474.41, -21.7358, 0.29 ) }
    dend_4 { pt3dadd( -4.65937, 474.965, -21.8753, 0.29 ) }
    dend_4 { pt3dadd( -4.555, 475.217, -21.9467, 0.81 ) }
    dend_4 { pt3dadd( -4.46435, 475.47, -22.0189, 1.11 ) }
    dend_4 { pt3dadd( -4.38273, 475.754, -22.1002, 1.11 ) }
    dend_4 { pt3dadd( -4.31942, 476.07, -22.1977, 0.29 ) }
    dend_4 { pt3dadd( -4.30007, 476.209, -22.2413, 0.29 ) }
    dend_4 { pt3dadd( -4.2449, 476.8, -22.4215, 0.37 ) }
    dend_4 { pt3dadd( -4.18012, 477.726, -22.7003, 0.37 ) }
    dend_4 { pt3dadd( -4.15204, 478.402, -22.8948, 0.37 ) }
    dend_4 { pt3dadd( -4.14549, 478.755, -22.9987, 0.22 ) }
    dend_4 { pt3dadd( -4.14652, 479.441, -23.1921, 0.22 ) }
    dend_4 { pt3dadd( -4.15831, 479.759, -23.2909, 1.25 ) }
    dend_4 { pt3dadd( -4.1704, 479.945, -23.3527, 1.62 ) }
    dend_4 { pt3dadd( -4.1795, 480.18, -23.4474, 1.62 ) }
    dend_4 { pt3dadd( -4.18501, 480.531, -23.596, 0.52 ) }
    dend_4 { pt3dadd( -4.18403, 480.777, -23.7008, 0.44 ) }
    dend_4 { pt3dadd( -4.18006, 481.195, -23.8904, 0.22 ) }
    dend_4 { pt3dadd( -4.1614, 481.727, -24.136, 0.22 ) }
    dend_4 { pt3dadd( -4.11723, 482.383, -24.4626, 0.22 ) }
    dend_4 { pt3dadd( -4.11446, 482.411, -24.4759, 0.22 ) }
    dend_4 { pt3dadd( -4.06282, 482.86, -24.6754, 1.11 ) }
    dend_4 { pt3dadd( -4.03956, 483.014, -24.7495, 1.55 ) }
    dend_4 { pt3dadd( -4.0192, 483.127, -24.8064, 1.55 ) }
    dend_4 { pt3dadd( -3.92686, 483.593, -25.0558, 0.22 ) }
    dend_4 { pt3dadd( -3.79253, 484.245, -25.3975, 0.22 ) }
    dend_4 { pt3dadd( -3.78617, 484.272, -25.4113, 0.22 ) }
    dend_4 { pt3dadd( -3.61288, 484.883, -25.713, 0.22 ) }
    dend_4 { pt3dadd( -3.52272, 485.171, -25.8552, 1.11 ) }
    dend_4 { pt3dadd( -3.47972, 485.289, -25.9123, 1.4 ) }
    dend_4 { pt3dadd( -3.46669, 485.319, -25.9269, 1.4 ) }
    dend_4 { pt3dadd( -3.40798, 485.421, -25.9946, 1.4 ) }
    dend_4 { pt3dadd( -3.31839, 485.563, -26.0895, 0.96 ) }
    dend_4 { pt3dadd( -3.30196, 485.582, -26.1003, 0.96 ) }
    dend_4 { pt3dadd( -3.23208, 485.644, -26.1336, 0.96 ) }
    dend_4 { pt3dadd( -2.98872, 485.849, -26.2673, 0.29 ) }
    dend_4 { pt3dadd( -2.96562, 485.867, -26.2802, 0.29 ) }
    dend_4 { pt3dadd( -2.70287, 486.055, -26.4254, 0.29 ) }
    dend_4 { pt3dadd( -2.28046, 486.349, -26.6936, 0.29 ) }
    dend_4 { pt3dadd( -1.98955, 486.559, -26.8803, 0.29 ) }
    dend_4 { pt3dadd( -1.73102, 486.744, -27.0506, 1.11 ) }
    dend_4 { pt3dadd( -1.53565, 486.885, -27.1779, 1.47 ) }
    dend_4 { pt3dadd( -1.36928, 487.006, -27.2938, 1.47 ) }
    dend_4 { pt3dadd( -1.03218, 487.261, -27.5468, 0.22 ) }
    dend_4 { pt3dadd( -0.606335, 487.597, -27.9046, 0.22 ) }
    dend_4 { pt3dadd( -0.35629, 487.837, -28.1115, 0.66 ) }
    dend_4 { pt3dadd( -0.261416, 487.948, -28.1869, 0.66 ) }
    dend_4 { pt3dadd( -0.225857, 487.996, -28.2165, 0.66 ) }
    dend_4 { pt3dadd( -0.0894246, 488.201, -28.3248, 0.66 ) }
    dend_4 { pt3dadd( 0.0359917, 488.407, -28.4128, 0.22 ) }
    dend_4 { pt3dadd( 0.416093, 489.162, -28.6681, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_4 { pt3dadd( 0.539939, 489.442, -28.7352, 0.81 ) }
    dend_4 { pt3dadd( 0.551909, 489.471, -28.7397, 0.81 ) }
    dend_4 { pt3dadd( 0.63437, 489.67, -28.7595, 1.18 ) }
    dend_4 { pt3dadd( 0.689077, 489.808, -28.7661, 1.18 ) }
    dend_4 { pt3dadd( 0.831923, 490.164, -28.7595, 0.15 ) }
    dend_4 { pt3dadd( 0.843731, 490.193, -28.7578, 0.15 ) }
    dend_4 { pt3dadd( 1.12026, 490.892, -28.7049, 0.15 ) }
    dend_4 { pt3dadd( 1.13083, 490.921, -28.7035, 0.15 ) }
    dend_4 { pt3dadd( 1.18264, 491.081, -28.7017, 0.81 ) }
    dend_4 { pt3dadd( 1.20751, 491.171, -28.6969, 1.11 ) }
    dend_4 { pt3dadd( 1.21385, 491.201, -28.6949, 1.11 ) }
    dend_4 { pt3dadd( 1.24478, 491.389, -28.6643, 1.11 ) }
    dend_4 { pt3dadd( 1.24858, 491.419, -28.6573, 1.11 ) }
    dend_4 { pt3dadd( 1.26911, 491.586, -28.6146, 0.15 ) }
    dend_4 { pt3dadd( 1.3526, 492.291, -28.4272, 0.15 ) }
    dend_4 { pt3dadd( 1.43703, 493.035, -28.2341, 0.15 ) }
    dend_4 { pt3dadd( 1.47095, 493.337, -28.1592, 0.88 ) }
    dend_4 { pt3dadd( 1.47452, 493.367, -28.1523, 0.88 ) }
    dend_4 { pt3dadd( 1.49749, 493.558, -28.1166, 1.69 ) }
    dend_4 { pt3dadd( 1.52777, 493.815, -28.0884, 1.69 ) }
    dend_4 { pt3dadd( 1.54701, 493.975, -28.0898, 0.96 ) }
    dend_4 { pt3dadd( 1.5726, 494.197, -28.1048, 0.52 ) }
    dend_4 { pt3dadd( 1.59402, 494.41, -28.1281, 0.15 ) }
    dend_4 { pt3dadd( 1.64715, 494.984, -28.1923, 0.15 ) }
    dend_4 { pt3dadd( 1.66715, 495.236, -28.2188, 0.88 ) }
    dend_4 { pt3dadd( 1.68256, 495.489, -28.2432, 1.18 ) }
    dend_4 { pt3dadd( 1.68765, 495.615, -28.254, 1.18 ) }
    dend_4 { pt3dadd( 1.69209, 495.811, -28.2684, 0.44 ) }
    dend_4 { pt3dadd( 1.68963, 496.006, -28.2874, 0.15 ) }
    dend_4 { pt3dadd( 1.68415, 496.707, -28.3692, 0.15 ) }
    dend_4 { pt3dadd( 1.68599, 496.898, -28.3922, 0.44 ) }
    dend_4 { pt3dadd( 1.69052, 497.092, -28.4196, 0.66 ) }
    dend_4 { pt3dadd( 1.69882, 497.282, -28.4566, 0.66 ) }
    dend_4 { pt3dadd( 1.72139, 497.633, -28.5434, 0.15 ) }
    dend_4 { pt3dadd( 1.78056, 498.296, -28.7442, 0.15 ) }
    dend_4 { pt3dadd( 1.80712, 498.484, -28.8224, 0.74 ) }
    dend_4 { pt3dadd( 1.81235, 498.515, -28.8386, 0.74 ) }
    dend_4 { pt3dadd( 1.887, 498.833, -29.0207, 0.96 ) }
    dend_4 { pt3dadd( 1.89429, 498.859, -29.0362, 0.96 ) }
    dend_4 { pt3dadd( 1.93944, 499.011, -29.1155, 0.96 ) }
    dend_4 { pt3dadd( 2.02149, 499.292, -29.2623, 0.74 ) }
    dend_4 { pt3dadd( 2.10261, 499.583, -29.4136, 0.15 ) }
    dend_4 { pt3dadd( 2.23699, 500.09, -29.6615, 0.15 ) }
    dend_4 { pt3dadd( 2.24509, 500.121, -29.6755, 0.15 ) }
    dend_4 { pt3dadd( 2.38578, 500.705, -29.9213, 0.15 ) }
    dend_4 { pt3dadd( 2.3909, 500.732, -29.9348, 0.15 ) }
    dend_4 { pt3dadd( 2.42963, 501.052, -30.1002, 0.96 ) }
    dend_4 { pt3dadd( 2.43671, 501.197, -30.1768, 1.33 ) }
    dend_4 { pt3dadd( 2.43548, 501.223, -30.1937, 1.33 ) }
    dend_4 { pt3dadd( 2.41322, 501.491, -30.3758, 1.62 ) }
    dend_4 { pt3dadd( 2.32564, 502.058, -30.8272, 0.81 ) }
    dend_4 { pt3dadd( 2.29603, 502.218, -30.9564, 0.22 ) }
    dend_4 { pt3dadd( 2.21897, 502.604, -31.2505, 0.22 ) }
    dend_4 { pt3dadd( 2.1537, 502.917, -31.49, 0.59 ) }
    dend_4 { pt3dadd( 2.11768, 503.102, -31.6288, 0.59 ) }
    dend_4 { pt3dadd( 2.04364, 503.532, -31.9357, 0.15 ) }
    dend_4 { pt3dadd( 2.0403, 503.558, -31.9517, 0.15 ) }
    dend_4 { pt3dadd( 1.99794, 503.845, -32.2186, 0.15 ) }
    dend_4 { pt3dadd( 1.99619, 503.872, -32.2421, 0.15 ) }
    dend_4 { pt3dadd( 1.99158, 504.128, -32.4424, 1.18 ) }
    dend_4 { pt3dadd( 2.00008, 504.288, -32.5595, 1.62 ) }
    dend_4 { pt3dadd( 2.00239, 504.313, -32.5771, 1.62 ) }
    dend_4 { pt3dadd( 2.10733, 505.282, -33.2897, 0.22 ) }
    dend_4 { pt3dadd( 2.22952, 506.321, -34.0898, 0.22 ) }
    dend_4 { pt3dadd( 2.23492, 506.371, -34.1345, 0.22 ) }
    dend_4 { pt3dadd( 2.29302, 507.091, -34.7783, 0.22 ) }
    dend_4 { pt3dadd( 2.29466, 507.114, -34.7991, 0.22 ) }
    dend_4 { pt3dadd( 2.3184, 507.544, -35.1665, 1.4 ) }
    dend_4 { pt3dadd( 2.32135, 507.604, -35.2133, 1.4 ) }
    dend_4 { pt3dadd( 2.31114, 508.398, -35.9781, 0.15 ) }
    dend_4 { pt3dadd( 2.2801, 509.166, -36.6944, 0.15 ) }
    dend_4 { pt3dadd( 2.26484, 509.366, -36.8736, 0.59 ) }
    dend_4 { pt3dadd( 2.25753, 509.527, -37.0046, 0.81 ) }
    dend_4 { pt3dadd( 2.25502, 509.652, -37.1105, 0.81 ) }
    dend_4 { pt3dadd( 2.2656, 510.001, -37.3927, 0.15 ) }
    dend_4 { pt3dadd( 2.31633, 510.611, -37.854, 0.15 ) }
    dend_4 { pt3dadd( 2.34647, 510.857, -38.0674, 1.33 ) }
    dend_4 { pt3dadd( 2.37397, 511.077, -38.2677, 1.55 ) }
    dend_4 { pt3dadd( 2.46021, 511.829, -38.9525, 0.15 ) }
    dend_4 { pt3dadd( 2.52999, 512.516, -39.5646, 0.15 ) }
    dend_4 { pt3dadd( 2.53454, 512.568, -39.6074, 0.44 ) }
    dend_4 { pt3dadd( 2.53553, 512.592, -39.6273, 0.44 ) }
    dend_4 { pt3dadd( 2.53238, 512.956, -39.9039, 0.22 ) }
    dend_4 { pt3dadd( 2.49325, 513.412, -40.2491, 0.22 ) }
    dend_4 { pt3dadd( 2.48836, 513.435, -40.2619, 0.22 ) }
    dend_4 { pt3dadd( 2.44574, 513.545, -40.3319, 0.88 ) }
    dend_4 { pt3dadd( 2.35449, 513.737, -40.4426, 0.88 ) }
    dend_4 { pt3dadd( 2.34076, 513.761, -40.4576, 0.88 ) }
    dend_4 { pt3dadd( 1.97256, 514.263, -40.724, 0.22 ) }
    dend_4 { pt3dadd( 1.47611, 514.864, -41.035, 0.22 ) }
    dend_4 { pt3dadd( 1.21247, 515.171, -41.182, 1.11 ) }
    dend_4 { pt3dadd( 0.976185, 515.437, -41.299, 1.33 ) }
    dend_4 { pt3dadd( 0.557381, 515.895, -41.4924, 0.15 ) }
    dend_4 { pt3dadd( -0.347951, 516.842, -41.8335, 0.15 ) }
    dend_4 { pt3dadd( -0.369928, 516.864, -41.8396, 0.15 ) }
    dend_4 { pt3dadd( -0.502613, 516.988, -41.8756, 0.52 ) }
    dend_4 { pt3dadd( -0.60632, 517.084, -41.9097, 0.52 ) }
    dend_4 { pt3dadd( -0.767148, 517.235, -41.9728, 0.22 ) }
    dend_4 { pt3dadd( -1.15861, 517.627, -42.2528, 0.22 ) }
    dend_4 { pt3dadd( -1.28978, 517.761, -42.4002, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_4 { pt3dadd( -1.46585, 517.949, -42.6062, 0.52 ) }
    dend_4 { pt3dadd( -1.84388, 518.369, -43.0771, 0.15 ) }
    dend_4 { pt3dadd( -2.18307, 518.828, -43.5431, 0.15 ) }
    dend_4 { pt3dadd( -2.69551, 519.677, -44.344, 0.88 ) }
    dend_4 { pt3dadd( -2.71114, 519.713, -44.3766, 1.69 ) }
    dend_4 { pt3dadd( -2.80672, 520.011, -44.6198, 0.15 ) }
    dend_4 { pt3dadd( -2.81134, 520.036, -44.6374, 0.15 ) }
    dend_4 { pt3dadd( -2.8315, 520.762, -44.9662, 0.15 ) }
    dend_4 { pt3dadd( -2.76949, 520.947, -45.008, 0.52 ) }
    dend_4 { pt3dadd( -2.6874, 521.114, -45.0104, 0.52 ) }
    dend_4 { pt3dadd( -2.67248, 521.142, -45.011, 0.52 ) }
    dend_4 { pt3dadd( -2.59, 521.281, -45.0184, 0.15 ) }
    dend_4 { pt3dadd( -2.5735, 521.307, -45.0192, 0.15 ) }
    dend_4 { pt3dadd( -1.7796, 522.437, -45.0115, 0.15 ) }
    dend_4 { pt3dadd( -1.6498, 522.62, -45.0048, 1.03 ) }
    dend_4 { pt3dadd( -1.52352, 522.799, -44.9984, 1.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -56.7625, 648.374, -26.8163, 0.96 ) }
    dend_9 { pt3dadd( -56.5948, 649.196, -26.2259, 0.96 ) }
    dend_9 { pt3dadd( -56.4155, 650.38, -25.436, 0.52 ) }
    dend_9 { pt3dadd( -56.3526, 651.085, -25.0065, 0.52 ) }
    dend_9 { pt3dadd( -56.3287, 652.148, -24.4266, 0.44 ) }
    dend_9 { pt3dadd( -56.3315, 652.235, -24.3841, 0.44 ) }
    dend_9 { pt3dadd( -56.4171, 653.068, -23.9277, 0.44 ) }
    dend_9 { pt3dadd( -56.4327, 653.123, -23.8992, 0.44 ) }
    dend_9 { pt3dadd( -56.6133, 653.527, -23.6951, 0.81 ) }
    dend_9 { pt3dadd( -56.8597, 653.953, -23.4776, 0.96 ) }
    dend_9 { pt3dadd( -57.0416, 654.241, -23.3429, 0.96 ) }
    dend_9 { pt3dadd( -57.8307, 655.505, -22.7658, 0.74 ) }
    dend_9 { pt3dadd( -58.0358, 655.821, -22.5616, 0.52 ) }
    dend_9 { pt3dadd( -58.2271, 656.098, -22.3662, 0.52 ) }
    dend_9 { pt3dadd( -58.642, 656.67, -21.8684, 0.22 ) }
    dend_9 { pt3dadd( -58.7148, 656.767, -21.7742, 0.22 ) }
    dend_9 { pt3dadd( -59.1201, 657.297, -21.2572, 0.22 ) }
    dend_9 { pt3dadd( -60.0226, 658.41, -19.9915, 0.74 ) }
    dend_9 { pt3dadd( -60.33, 658.77, -19.493, 0.96 ) }
    dend_9 { pt3dadd( -60.8773, 659.439, -18.4788, 1.11 ) }
    dend_9 { pt3dadd( -60.9031, 659.475, -18.4184, 1.11 ) }
    dend_9 { pt3dadd( -61.0814, 659.783, -17.8771, 1.11 ) }
    dend_9 { pt3dadd( -61.3678, 660.644, -16.2982, 1.03 ) }
    dend_9 { pt3dadd( -61.3718, 660.683, -16.2346, 1.03 ) }
    dend_9 { pt3dadd( -61.3632, 661.104, -15.6008, 0.66 ) }
    dend_9 { pt3dadd( -61.2955, 661.855, -14.5982, 0.29 ) }
    dend_9 { pt3dadd( -61.232, 662.368, -13.9654, 0.29 ) }
    dend_9 { pt3dadd( -61.0529, 663.589, -12.6091, 0.29 ) }
    dend_9 { pt3dadd( -60.999, 663.98, -12.2855, 0.66 ) }
    dend_9 { pt3dadd( -60.9623, 664.353, -12.0061, 0.66 ) }
    dend_9 { pt3dadd( -60.9573, 664.406, -11.9706, 0.66 ) }
    dend_9 { pt3dadd( -60.9339, 664.702, -11.8098, 0.66 ) }
    dend_9 { pt3dadd( -60.8525, 665.714, -11.3286, 0.29 ) }
    dend_9 { pt3dadd( -60.6939, 666.765, -10.9085, 0.29 ) }
    dend_9 { pt3dadd( -60.6801, 666.831, -10.8817, 0.29 ) }
    dend_9 { pt3dadd( -60.3582, 668.124, -10.3752, 0.29 ) }
    dend_9 { pt3dadd( -60.3064, 668.305, -10.3085, 0.96 ) }
    dend_9 { pt3dadd( -60.1401, 668.81, -10.12, 1.25 ) }
    dend_9 { pt3dadd( -60.1191, 668.867, -10.1012, 1.25 ) }
    dend_9 { pt3dadd( -59.9221, 669.402, -9.9065, 1.25 ) }
    dend_9 { pt3dadd( -59.8018, 669.778, -9.78428, 1.25 ) }
    dend_9 { pt3dadd( -59.779, 669.868, -9.76042, 1.25 ) }
    dend_9 { pt3dadd( -59.6637, 670.546, -9.59682, 0.29 ) }
    dend_9 { pt3dadd( -59.5993, 671.189, -9.4678, 0.29 ) }
    dend_9 { pt3dadd( -59.5958, 671.289, -9.45192, 0.29 ) }
    dend_9 { pt3dadd( -59.6102, 671.87, -9.38175, 0.29 ) }
    dend_9 { pt3dadd( -59.6165, 671.942, -9.37665, 0.29 ) }
    dend_9 { pt3dadd( -59.7444, 672.811, -9.36533, 0.29 ) }
    dend_9 { pt3dadd( -59.8662, 673.38, -9.39726, 0.81 ) }
    dend_9 { pt3dadd( -59.9545, 673.696, -9.41701, 1.03 ) }
    dend_9 { pt3dadd( -59.9765, 673.765, -9.42147, 1.03 ) }
    dend_9 { pt3dadd( -60.1473, 674.248, -9.4537, 1.03 ) }
    dend_9 { pt3dadd( -60.357, 674.777, -9.48994, 0.44 ) }
    dend_9 { pt3dadd( -60.7631, 675.65, -9.47911, 0.29 ) }
    dend_9 { pt3dadd( -60.9413, 675.998, -9.4516, 0.59 ) }
    dend_9 { pt3dadd( -61.1752, 676.486, -9.38823, 0.59 ) }
    dend_9 { pt3dadd( -61.2037, 676.551, -9.37693, 0.59 ) }
    dend_9 { pt3dadd( -61.4718, 677.242, -9.22814, 0.59 ) }
    dend_9 { pt3dadd( -61.7804, 678.145, -8.99086, 0.37 ) }
    dend_9 { pt3dadd( -61.7967, 678.203, -8.97333, 0.37 ) }
    dend_9 { pt3dadd( -61.9894, 679.127, -8.6496, 0.37 ) }
    dend_9 { pt3dadd( -62.0434, 679.516, -8.51031, 0.37 ) }
    dend_9 { pt3dadd( -62.0503, 679.567, -8.49509, 0.37 ) }
    dend_9 { pt3dadd( -62.0829, 679.862, -8.42851, 0.59 ) }
    dend_9 { pt3dadd( -62.1344, 680.242, -8.37229, 0.59 ) }
    dend_9 { pt3dadd( -62.2676, 681.005, -8.26484, 0.44 ) }
    dend_9 { pt3dadd( -62.427, 681.64, -8.18327, 0.29 ) }
    dend_9 { pt3dadd( -62.772, 682.768, -8.0667, 0.29 ) }
    dend_9 { pt3dadd( -62.9715, 683.332, -8.0211, 0.74 ) }
    dend_9 { pt3dadd( -63.1355, 683.738, -8.00139, 0.81 ) }
    dend_9 { pt3dadd( -63.1922, 683.862, -8.00004, 0.81 ) }
    dend_9 { pt3dadd( -63.4483, 684.381, -8.02715, 0.81 ) }
    dend_9 { pt3dadd( -63.6393, 684.748, -8.04403, 0.96 ) }
    dend_9 { pt3dadd( -63.7347, 684.938, -8.05125, 0.96 ) }
    dend_9 { pt3dadd( -63.7602, 684.997, -8.05315, 0.96 ) }
    dend_9 { pt3dadd( -63.966, 685.557, -8.06593, 0.37 ) }
    dend_9 { pt3dadd( -64.2228, 686.409, -8.07966, 0.37 ) }
    dend_9 { pt3dadd( -64.4016, 687.159, -8.08777, 0.37 ) }
    dend_9 { pt3dadd( -64.5469, 687.852, -8.09488, 0.22 ) }
    dend_9 { pt3dadd( -64.7025, 688.697, -8.10378, 0.22 ) }
    dend_9 { pt3dadd( -64.7936, 689.223, -8.11109, 0.37 ) }
    dend_9 { pt3dadd( -64.8759, 689.743, -8.12148, 0.59 ) }
    dend_9 { pt3dadd( -64.9525, 690.264, -8.13134, 0.88 ) }
    dend_9 { pt3dadd( -65.008, 690.679, -8.13951, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_9 { pt3dadd( -65.0177, 690.75, -8.14122, 1.33 ) }
    dend_9 { pt3dadd( -65.0978, 691.244, -8.13895, 1.33 ) }
    dend_9 { pt3dadd( -65.2191, 691.982, -8.12248, 1.03 ) }
    dend_9 { pt3dadd( -65.3226, 692.631, -8.09944, 0.59 ) }
    dend_9 { pt3dadd( -65.477, 693.675, -8.05224, 0.29 ) }
    dend_9 { pt3dadd( -65.697, 695.182, -7.94484, 0.29 ) }
    dend_9 { pt3dadd( -65.7925, 695.819, -7.86931, 0.81 ) }
    dend_9 { pt3dadd( -65.8975, 696.524, -7.75621, 0.81 ) }
    dend_9 { pt3dadd( -65.9764, 697.038, -7.63961, 0.52 ) }
    dend_9 { pt3dadd( -66.0076, 697.226, -7.58216, 0.44 ) }
    dend_9 { pt3dadd( -66.3024, 698.721, -7.01672, 0.22 ) }
    dend_9 { pt3dadd( -66.4592, 699.316, -6.71534, 0.59 ) }
    dend_9 { pt3dadd( -66.5291, 699.538, -6.58926, 0.74 ) }
    dend_9 { pt3dadd( -66.7929, 700.212, -6.17007, 0.74 ) }
    dend_9 { pt3dadd( -66.9797, 700.638, -5.92397, 0.15 ) }
    dend_9 { pt3dadd( -67.2768, 701.264, -5.60284, 0.15 ) }
    dend_9 { pt3dadd( -67.844, 702.404, -5.17122, 0.15 ) }
    dend_9 { pt3dadd( -67.9088, 702.537, -5.1412, 0.15 ) }
    dend_9 { pt3dadd( -68.2227, 703.188, -5.0784, 0.15 ) }
    dend_9 { pt3dadd( -68.6476, 704.093, -5.10083, 0.15 ) }
    dend_9 { pt3dadd( -68.7276, 704.28, -5.1196, 0.15 ) }
    dend_9 { pt3dadd( -69.0461, 705.152, -5.27722, 0.15 ) }
    dend_9 { pt3dadd( -69.1321, 705.426, -5.34912, 0.15 ) }
    dend_9 { pt3dadd( -69.4721, 706.588, -5.6315, 0.15 ) }
    dend_9 { pt3dadd( -69.4907, 706.656, -5.64554, 0.52 ) }
    dend_9 { pt3dadd( -69.5606, 706.914, -5.68015, 0.52 ) }
    dend_9 { pt3dadd( -69.6411, 707.216, -5.72492, 0.15 ) }
    dend_9 { pt3dadd( -69.7788, 707.74, -5.8207, 0.15 ) }
    dend_9 { pt3dadd( -69.7933, 707.809, -5.83515, 0.15 ) }
    dend_9 { pt3dadd( -69.8073, 708.092, -5.91758, 0.52 ) }
    dend_9 { pt3dadd( -69.8169, 708.222, -5.955, 0.52 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 31/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -56.7625, 648.374, -26.8163, 0.59 ) }
    dend_8 { pt3dadd( -58.1232, 649.562, -27.1741, 0.59 ) }
    dend_8 { pt3dadd( -58.6036, 650.007, -27.312, 0.59 ) }
    dend_8 { pt3dadd( -58.6707, 650.076, -27.3328, 0.59 ) }
    dend_8 { pt3dadd( -59.3598, 650.89, -27.5567, 0.52 ) }
    dend_8 { pt3dadd( -60.3732, 652.256, -27.8936, 0.52 ) }
    dend_8 { pt3dadd( -60.4265, 652.335, -27.9116, 0.52 ) }
    dend_8 { pt3dadd( -60.7689, 652.964, -28.0538, 0.74 ) }
    dend_8 { pt3dadd( -61.2533, 654.115, -28.2563, 0.74 ) }
    dend_8 { pt3dadd( -61.6118, 655.276, -28.4072, 0.59 ) }
    dend_8 { pt3dadd( -61.7576, 656.069, -28.4693, 0.29 ) }
    dend_8 { pt3dadd( -61.8029, 656.794, -28.4894, 0.29 ) }
    dend_8 { pt3dadd( -61.8016, 656.877, -28.4888, 0.29 ) }
    dend_8 { pt3dadd( -61.6812, 658.749, -28.3413, 0.29 ) }
    dend_8 { pt3dadd( -61.6358, 659.19, -28.2811, 0.59 ) }
    dend_8 { pt3dadd( -61.6144, 659.391, -28.2463, 0.59 ) }
    dend_8 { pt3dadd( -61.5434, 660.288, -28.0846, 0.59 ) }
    dend_8 { pt3dadd( -61.4662, 662.282, -27.7498, 0.59 ) }
    dend_8 { pt3dadd( -61.4621, 663.32, -27.594, 0.29 ) }
    dend_8 { pt3dadd( -61.4668, 663.428, -27.5804, 0.29 ) }
    dend_8 { pt3dadd( -61.5113, 664.121, -27.509, 0.22 ) }
    dend_8 { pt3dadd( -61.6363, 665.716, -27.3818, 0.22 ) }
    dend_8 { pt3dadd( -61.7679, 667.024, -27.3214, 0.96 ) }
    dend_8 { pt3dadd( -61.8834, 668.037, -27.3153, 1.55 ) }
    dend_8 { pt3dadd( -61.9546, 668.669, -27.3372, 1.84 ) }
    dend_8 { pt3dadd( -62.0145, 669.158, -27.3562, 1.84 ) }
    dend_8 { pt3dadd( -62.136, 669.978, -27.3971, 1.55 ) }
    dend_8 { pt3dadd( -62.2923, 670.889, -27.4655, 0.59 ) }
    dend_8 { pt3dadd( -62.367, 671.289, -27.5034, 0.52 ) }
    dend_8 { pt3dadd( -62.5168, 671.998, -27.5849, 0.29 ) }
    dend_8 { pt3dadd( -62.7869, 673.263, -27.7414, 0.29 ) }
    dend_8 { pt3dadd( -63.0154, 674.222, -27.8763, 0.29 ) }
    dend_8 { pt3dadd( -63.204, 674.961, -27.9907, 0.66 ) }
    dend_8 { pt3dadd( -63.261, 675.156, -28.0248, 0.66 ) }
    dend_8 { pt3dadd( -63.4994, 675.87, -28.1595, 0.96 ) }
    dend_8 { pt3dadd( -63.5343, 675.958, -28.1778, 0.96 ) }
    dend_8 { pt3dadd( -63.8587, 676.666, -28.3334, 0.96 ) }
    dend_8 { pt3dadd( -63.8989, 676.752, -28.351, 0.96 ) }
    dend_8 { pt3dadd( -64.2698, 677.614, -28.5586, 0.96 ) }
    dend_8 { pt3dadd( -64.6084, 678.483, -28.7874, 0.96 ) }
    dend_8 { pt3dadd( -64.9415, 679.424, -29.0443, 0.96 ) }
    dend_8 { pt3dadd( -65.1846, 680.23, -29.2534, 0.59 ) }
    dend_8 { pt3dadd( -65.3603, 680.918, -29.4253, 0.44 ) }
    dend_8 { pt3dadd( -65.5948, 682.209, -29.6966, 0.29 ) }
    dend_8 { pt3dadd( -65.7266, 683.454, -29.9045, 0.29 ) }
    dend_8 { pt3dadd( -65.7414, 683.753, -29.9419, 0.29 ) }
    dend_8 { pt3dadd( -65.7484, 684.943, -30.0432, 0.29 ) }
    dend_8 { pt3dadd( -65.747, 685.052, -30.0487, 0.29 ) }
    dend_8 { pt3dadd( -65.6643, 687.087, -30.1477, 0.29 ) }
    dend_8 { pt3dadd( -65.6026, 688.178, -30.2152, 0.96 ) }
    dend_8 { pt3dadd( -65.5431, 689.184, -30.3157, 1.69 ) }
    dend_8 { pt3dadd( -65.5119, 689.876, -30.4042, 1.92 ) }
    dend_8 { pt3dadd( -65.4842, 690.831, -30.5524, 1.25 ) }
    dend_8 { pt3dadd( -65.4638, 692.044, -30.8041, 0.88 ) }
    dend_8 { pt3dadd( -65.4632, 693.419, -31.1562, 0.29 ) }
    dend_8 { pt3dadd( -65.4099, 695.848, -31.7663, 0.29 ) }
    dend_8 { pt3dadd( -65.3937, 696.259, -31.8655, 0.74 ) }
    dend_8 { pt3dadd( -65.3779, 696.568, -31.931, 0.74 ) }
    dend_8 { pt3dadd( -65.2779, 698.228, -32.2249, 0.29 ) }
    dend_8 { pt3dadd( -65.1946, 699.406, -32.3808, 0.29 ) }
    dend_8 { pt3dadd( -65.0097, 701.24, -32.5734, 0.29 ) }
    dend_8 { pt3dadd( -64.9921, 701.375, -32.5864, 0.29 ) }
    dend_8 { pt3dadd( -64.7918, 702.959, -32.7167, 0.29 ) }
    dend_8 { pt3dadd( -64.7702, 703.149, -32.7276, 0.29 ) }
    dend_8 { pt3dadd( -64.7016, 704.134, -32.7463, 0.96 ) }
    dend_8 { pt3dadd( -64.6959, 705.131, -32.7959, 1.25 ) }
    dend_8 { pt3dadd( -64.7018, 705.226, -32.8071, 1.25 ) }
    dend_8 { pt3dadd( -64.7357, 705.73, -32.8731, 1.25 ) }
    dend_8 { pt3dadd( -64.7832, 706.421, -32.9665, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_8 { pt3dadd( -64.8681, 707.544, -33.1118, 0.52 ) }
    dend_8 { pt3dadd( -64.9453, 708.442, -33.2401, 0.44 ) }
    dend_8 { pt3dadd( -65.0099, 709.223, -33.3633, 0.22 ) }
    dend_8 { pt3dadd( -65.2262, 711.486, -33.7383, 0.22 ) }
    dend_8 { pt3dadd( -65.3059, 712.265, -33.8728, 0.81 ) }
    dend_8 { pt3dadd( -65.4133, 712.974, -34.0056, 0.81 ) }
    dend_8 { pt3dadd( -65.5911, 713.903, -34.1874, 0.15 ) }
    dend_8 { pt3dadd( -65.6136, 713.995, -34.2056, 0.15 ) }
    dend_8 { pt3dadd( -66.0741, 715.518, -34.4906, 0.15 ) }
    dend_8 { pt3dadd( -66.1138, 715.618, -34.513, 0.15 ) }
    dend_8 { pt3dadd( -66.5746, 717.24, -35.3132, 0.15 ) }
    dend_8 { pt3dadd( -66.5881, 717.32, -35.3669, 0.15 ) }
    dend_8 { pt3dadd( -66.6318, 717.84, -35.7425, 1.4 ) }
    dend_8 { pt3dadd( -66.6231, 718.308, -36.1409, 1.69 ) }
    dend_8 { pt3dadd( -66.5687, 719.041, -36.85, 1.69 ) }
    dend_8 { pt3dadd( -66.2498, 722.213, -40.1314, 0.29 ) }
    dend_8 { pt3dadd( -66.0038, 723.324, -41.523, 0.29 ) }
    dend_8 { pt3dadd( -65.7881, 724.107, -42.5942, 0.29 ) }
    dend_8 { pt3dadd( -65.5015, 725.043, -43.9546, 0.59 ) }
    dend_8 { pt3dadd( -65.3236, 725.597, -44.7973, 0.59 ) }
    dend_8 { pt3dadd( -65.3045, 725.658, -44.8912, 0.59 ) }
    dend_8 { pt3dadd( -64.9477, 727.761, -47.9886, 0.15 ) }
    dend_8 { pt3dadd( -64.9409, 727.813, -48.0725, 0.15 ) }
    dend_8 { pt3dadd( -64.9319, 728.289, -48.7776, 0.15 ) }
    dend_8 { pt3dadd( -64.9536, 728.445, -48.9495, 0.15 ) }
    dend_8 { pt3dadd( -65.0477, 728.878, -49.3582, 0.15 ) }
    dend_8 { pt3dadd( -65.1689, 729.161, -49.5517, 0.15 ) }
    dend_8 { pt3dadd( -65.6786, 730.197, -50.3924, 0.15 ) }
    dend_8 { pt3dadd( -65.859, 730.66, -50.8369, 0.96 ) }
    dend_8 { pt3dadd( -65.985, 731.089, -51.3377, 1.4 ) }
    dend_8 { pt3dadd( -66.0346, 731.28, -51.5777, 1.77 ) }
    dend_8 { pt3dadd( -66.104, 731.926, -52.6415, 1.77 ) }
    dend_8 { pt3dadd( -65.9358, 733.814, -56.503, 0.22 ) }
    dend_8 { pt3dadd( -65.8365, 734.29, -57.574, 0.22 ) }
    dend_8 { pt3dadd( -65.6597, 734.915, -59.0323, 0.96 ) }
    dend_8 { pt3dadd( -65.4895, 735.209, -59.8668, 0.96 ) }
    dend_8 { pt3dadd( -64.3391, 736.642, -64.4105, 0.74 ) }
    dend_8 { pt3dadd( -63.5632, 737.498, -67.2541, 0.66 ) }
    dend_8 { pt3dadd( -63.3572, 737.705, -67.9693, 0.66 ) }
    dend_8 { pt3dadd( -63.3297, 737.732, -68.0623, 0.66 ) }
    dend_8 { pt3dadd( -61.0536, 739.955, -75.5237, 0.88 ) }
    dend_8 { pt3dadd( -60.9931, 740.015, -75.7215, 0.88 ) }
    dend_8 { pt3dadd( -60.5041, 740.564, -77.4378, 0.22 ) }
    dend_8 { pt3dadd( -60.1428, 741.034, -78.9456, 0.88 ) }
    dend_8 { pt3dadd( -60.0383, 741.182, -79.4444, 0.88 ) }
    dend_8 { pt3dadd( -60.0221, 741.211, -79.5389, 0.88 ) }
    dend_8 { pt3dadd( -60.2355, 742.219, -81.6511, 0.22 ) }
    dend_8 { pt3dadd( -60.2435, 742.257, -81.7436, 0.22 ) }
    dend_8 { pt3dadd( -60.2602, 742.508, -82.7756, 0.22 ) }
    dend_8 { pt3dadd( -60.2767, 742.531, -82.8871, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_18 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_17 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_21 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_20 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_14 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_33 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_29 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_5 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_12 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_36 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_19 OneSecGrp_SectionRef_10.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 7
    dend_35 nseg = 11
    dend_30 nseg = 13
    dend_21 nseg = 5
    dend_20 nseg = 13
    dend_14 nseg = 5
    dend_13 nseg = 19
    dend_38 nseg = 5
    dend_37 nseg = 5
    dend_33 nseg = 3
    dend_32 nseg = 17
    dend_27 nseg = 11
    dend_26 nseg = 17
    dend_6 nseg = 3
    dend_3 nseg = 23
    dend_29 nseg = 3
    dend_28 nseg = 7
    dend_10 nseg = 13
    dend_7 nseg = 29
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_LBC_e85c51cdb8_0_0


