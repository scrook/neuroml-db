// Cell: bAC217_L6_NBC_ee7b52323f_0_0
/*
{
  "id" : "bAC217_L6_NBC_ee7b52323f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.94345, -11.2623, 0.984599, 4.09477", "-6.27697, -10.213, 0.889449, 7.03886", "-5.61048, -9.16359, 0.794299, 9.0513", "-4.94399, -8.11421, 0.699149, 10.7049", "-4.2775, -7.06483, 0.603999, 12.1545", "-3.61101, -6.01545, 0.508849, 13.4148", "-2.94452, -4.96607, 0.413699, 14.3077", "-2.27803, -3.91669, 0.318549, 14.7157", "-1.61155, -2.86731, 0.223399, 14.8034", "-0.945058, -1.81793, 0.128249, 14.7825", "-0.278569, -0.768556, 0.0330986, 14.484", "0.387919, 0.280823, -0.0620515, 14.2451", "1.05441, 1.3302, -0.157201, 13.4939", "1.7209, 2.37958, -0.252352, 12.4612", "2.38738, 3.42896, -0.347502, 11.3514", "3.05387, 4.47834, -0.442652, 10.0759", "3.72036, 5.52772, -0.537802, 8.68542", "4.38685, 6.5771, -0.632952, 7.03735", "5.05334, 7.62648, -0.728102, 5.61823", "5.71983, 8.67585, -0.823252, 4.41136", "6.38632, 9.72523, -0.918402, 2.8094" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.13964, -6.11904, -15.1942, 1.03", "-2.13964, -6.11904, -15.1942, 1.03", "-1.65101, -6.87406, -15.1942, 1.03", "-1.20076, -7.7852, -15.2249, 0.88", "-0.857653, -8.75427, -15.2778, 0.96", "-0.552206, -10.001, -15.3613, 0.52", "-0.46023, -10.6248, -15.4077, 0.44", "-0.500077, -11.6553, -15.4986, 0.37", "-0.817093, -12.5702, -15.5965, 0.96", "-1.17598, -13.1009, -15.6587, 1.18", "-1.43958, -13.3774, -15.7115, 1.18", "-1.79589, -13.7051, -15.8149, 0.88", "-2.23209, -14.1302, -15.9957, 0.66", "-2.65924, -14.6268, -16.2694, 0.52", "-3.02413, -15.2238, -16.7076, 0.37", "-3.29803, -15.9557, -17.3982, 0.37", "-3.45436, -16.6239, -18.1475, 1.11", "-3.52479, -17.0435, -18.6708, 1.33", "-3.57272, -17.3801, -19.1134, 1.4", "-3.68927, -18.089, -20.1074, 0.66", "-3.84225, -18.5543, -20.8228, 0.52", "-4.15039, -19.0201, -21.5331, 0.59", "-4.41291, -19.2834, -21.9056, 0.66", "-4.78192, -19.6178, -22.3455, 0.66", "-5.09205, -19.9047, -22.6804, 0.37", "-5.63423, -20.5389, -23.3403, 0.29", "-5.81713, -20.8605, -23.7032, 0.29", "-6.08953, -21.6359, -24.6178, 1.4", "-6.19921, -22.0978, -25.1428, 1.84", "-6.25785, -22.48, -25.5711, 1.84", "-6.36424, -23.5829, -26.8113, 0.81", "-6.42645, -24.6199, -27.9913, 0.37", "-6.45604, -25.1342, -28.6321, 0.37", "-6.49468, -25.7533, -29.4463, 1.55", "-6.5324, -26.3414, -30.2996, 2.06", "-6.57362, -26.8287, -31.0519, 2.21", "-6.6722, -27.977, -32.8744, 0.66", "-6.76925, -29.1729, -34.8103, 0.66", "-6.80468, -29.7185, -35.7512, 0.88", "-6.86807, -30.9898, -38.1408, 1.77", "-6.90785, -31.6608, -39.4463, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.29965, -8.49204, 0.925891, 1.25", "-8.29965, -8.49204, 0.925891, 1.25", "-8.78101, -9.31289, 1.11034, 1.25", "-9.65838, -10.918, 1.47752, 1.11", "-10.3542, -12.191, 1.76872, 1.55", "-10.8837, -13.1597, 1.99031, 1.92", "-11.5156, -14.3158, 2.25477, 2.14", "-12.0309, -15.295, 2.48704, 2.14", "-12.4463, -16.165, 2.71107, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.83964, -12.0095, -0.944109, 1.62", "-5.24999, -13.1191, -0.781059, 1.62", "-5.89791, -14.8785, -0.499452, 1.47", "-6.44314, -16.3846, -0.252441, 1.18", "-7.04594, -18.068, 0.0205689, 1.18", "-7.59029, -19.6175, 0.253229, 1.77", "-7.87874, -20.473, 0.366661, 2.14", "-8.26351, -21.6616, 0.54054, 2.65", "-8.57584, -22.6104, 0.68149, 2.73", "-9.04301, -23.9317, 0.861103, 2.5", "-9.76784, -25.8001, 1.07988, 1.92", "-10.6634, -27.95, 1.3078, 1.47", "-11.7551, -30.3404, 1.54386, 1.18", "-12.4868, -31.7918, 1.68438, 1.03", "-13.6727, -33.8788, 1.87479, 1.47", "-14.3094, -34.8675, 1.9529, 1.99", "-14.7961, -35.5746, 1.99688, 2.43", "-15.336, -36.3825, 2.032, 2.65", "-15.9269, -37.4337, 2.05047, 2.36", "-16.6928, -39.3221, 2.03192, 1.77", "-17.4238, -42.2077, 1.95893, 1.33", "-17.7225, -44.2716, 1.88706, 1.33", "-17.8547, -46.3813, 1.81004, 1.55", "-17.8086, -48.8781, 1.74006, 1.25", "-17.5518, -51.519, 1.72096, 1.11", "-17.1313, -53.8423, 1.75154, 1.55", "-16.8179, -55.0682, 1.77561, 2.06", "-16.5959, -55.8301, 1.79879, 2.43", "-16.2745, -56.8844, 1.85299, 2.8", "-15.9129, -58.1067, 2.00352, 2.95", "-15.677, -59.0664, 2.28165, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.93036, 10.6705, -0.514109, 3.54", "5.93036, 10.6705, -0.514109, 3.54", "6.43465, 11.8645, -0.438293, 3.54", "7.00097, 13.2054, -0.35315, 3.54", "7.36382, 14.0645, -0.298599, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.38632, 9.72523, -0.918402, 0.717789", "14.4283, 22.3872, -0.918402, 0.717789", "22.4703, 35.0492, -0.918402, 0.717789" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.90785, -31.6608, -39.4463, 0.88", "-6.25624, -32.2237, -39.9656, 0.88", "-5.64559, -32.742, -40.402, 0.52", "-5.18239, -33.1211, -40.7023, 0.29", "-4.59896, -33.5893, -41.0937, 0.22", "-4.00641, -34.0689, -41.4952, 1.33", "-3.50134, -34.4719, -41.858, 1.47", "-2.97795, -34.8909, -42.2424, 0.15", "-2.59301, -35.2027, -42.5116, 0.15", "-1.73447, -35.8948, -43.1349, 0.81", "-1.58288, -36.015, -43.2487, 0.96", "-0.226556, -37.076, -44.2892, 0.22", "-0.0562171, -37.2086, -44.4316, 0.74", "0.246094, -37.4523, -44.7099, 0.74", "1.27008, -38.2817, -45.7284, 0.22", "1.54463, -38.5079, -46.014, 0.88", "1.69529, -38.6335, -46.1821, 1.11", "2.82364, -39.5832, -47.5519, 0.22", "3.51038, -40.1478, -48.4188, 1.62", "3.94134, -40.5024, -48.9787, 2.06", "4.69725, -41.163, -50.0015, 0.81", "5.26109, -41.6896, -50.8029, 1.33", "6.12295, -42.5661, -52.0784, 0.22", "6.688, -43.1926, -52.9214, 1.33", "6.92745, -43.4764, -53.3086, 1.62", "7.79884, -44.6104, -54.8264, 0.59", "8.37306, -45.4409, -55.9512, 0.22", "8.65682, -45.9334, -56.6381, 0.74", "8.76858, -46.1747, -56.969, 0.96", "9.19444, -47.2815, -58.5005, 0.29", "9.35003, -47.7703, -59.2398, 1.18", "9.42371, -48.0731, -59.7346, 1.4", "9.65246, -49.2882, -61.7614, 0.22", "9.70147, -49.6442, -62.3893, 1.03", "9.71624, -49.8649, -62.7883, 1.18", "9.69323, -51.3587, -65.5518, 0.44", "9.64841, -51.9607, -66.75, 0.22", "9.62474, -52.1707, -67.1772, 1.18", "9.54926, -52.7519, -68.3938, 1.18", "9.49038, -53.1681, -69.3146, 1.62", "9.41403, -53.8466, -70.8342, 1.84", "9.39933, -54.1261, -71.4574, 1.99", "9.43751, -55.1739, -73.8317, 0.22", "9.50794, -55.8437, -75.3699, 1.47", "9.60058, -56.404, -76.6107, 1.69", "9.67663, -56.7557, -77.4001, 1.4", "9.87141, -57.4708, -79.0011, 0.81", "10.1937, -58.4463, -81.1977, 1.03", "10.6101, -59.5592, -83.7994, 0.22", "10.7494, -59.888, -84.5541, 1.47", "11.1499, -60.7427, -86.3938, 1.62", "11.4555, -61.3513, -87.6468, 0.29", "11.8687, -62.0546, -89.0271, 1.18", "12.2951, -62.6591, -90.13, 1.47", "12.9193, -63.4209, -91.4306, 0.15", "13.3476, -63.925, -92.2568, 0.15", "13.7886, -64.4348, -92.988, 1.18", "14.5169, -65.3309, -94.1341, 0.22", "14.7979, -65.7007, -94.5816, 0.22", "15.3221, -66.408, -95.4661, 0.88", "15.5969, -66.8029, -95.9835, 0.88", "15.9426, -67.2938, -96.6712, 1.11", "16.3158, -67.796, -97.3996, 1.33", "17.5305, -69.3443, -99.7634, 0.22", "18.1294, -70.0787, -100.958, 1.03", "18.2194, -70.1833, -101.138, 1.25", "19.2256, -71.3088, -103.117, 0.22", "19.7237, -71.8421, -104.091, 1.33", "20.0262, -72.1582, -104.666, 1.4", "20.9709, -73.207, -106.518, 0.22", "21.4258, -73.7359, -107.465, 0.74", "22.1494, -74.6133, -109.092, 0.22", "22.8279, -75.492, -110.712, 1.4", "23.0569, -75.8067, -111.286, 1.47", "23.8752, -76.9421, -113.36, 0.15", "24.5036, -77.7871, -114.95, 1.25", "24.7459, -78.1138, -115.593, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.90785, -31.6608, -39.4463, 1.92", "-8.10238, -32.3416, -41.3073, 1.92", "-9.1604, -32.9779, -42.9999, 1.77", "-10.4705, -33.8044, -45.0708, 2.21", "-11.4432, -34.4911, -46.6874, 0.22", "-11.7669, -34.7395, -47.2636, 0.22", "-12.4253, -35.2773, -48.484, 0.22", "-13.1708, -35.9663, -50.0127, 1.47", "-13.3819, -36.1847, -50.492, 1.77", "-14.2449, -37.1531, -52.617, 0.52", "-14.8808, -37.8985, -54.3105, 1.25", "-15.1112, -38.1819, -54.9573, 1.4", "-15.761, -39.1231, -57.0085, 0.29", "-16.2904, -39.9874, -58.8008, 1.62", "-16.4845, -40.3389, -59.5469, 1.84", "-16.8896, -41.1637, -61.2343, 0.52", "-17.287, -42.0867, -63.0474, 1.69", "-17.5153, -42.6824, -64.1517, 2.06", "-17.6612, -43.1293, -64.9082, 2.21", "-18.4278, -45.5809, -68.9047, 0.44", "-18.6086, -46.2477, -69.9857, 0.81", "-18.663, -46.499, -70.3693, 0.81", "-18.7764, -47.0252, -71.1278, 0.59", "-18.843, -47.3435, -71.5539, 0.88", "-19.0187, -48.3845, -72.8149, 0.37", "-19.4115, -50.9051, -75.5399, 1.4", "-19.5129, -51.5379, -76.2187, 1.92", "-19.8219, -53.312, -78.3381, 0.22", "-19.9401, -53.9336, -79.1353, 0.22", "-20.0373, -54.3584, -79.6965, 0.22", "-20.3127, -55.3162, -80.9579, 1.84", "-20.3836, -55.5143, -81.2567, 2.06", "-21.3098, -57.8251, -85.2128, 0.22", "-21.4743, -58.1726, -85.8795, 0.22", "-21.6192, -58.4215, -86.4062, 0.96", "-21.7928, -58.6785, -86.9802, 1.18", "-23.0821, -60.3964, -90.9768, 0.44", "-23.3138, -60.6864, -91.6271, 1.18", "-23.6218, -61.039, -92.3846, 1.18", "-24.3336, -61.848, -94.1823, 1.33", "-24.6787, -62.2531, -95.0494, 1.47", "-25.6833, -63.4703, -97.4324, 0.29", "-26.206, -64.1149, -98.5467, 1.4", "-26.4841, -64.491, -99.2167, 1.62", "-27.5646, -66.1989, -102.342, 0.22", "-27.7673, -66.5557, -102.985, 0.81", "-28.0048, -66.9933, -103.762, 0.29", "-28.3296, -67.6104, -104.813, 1.11", "-29.3718, -69.602, -108.209, 0.59", "-30.4664, -71.5553, -111.416, 0.22", "-30.8042, -72.1104, -112.302, 0.22", "-31.2692, -72.8024, -113.439, 1.69", "-31.5438, -73.1659, -114.085, 2.14", "-32.8157, -74.6747, -116.789, 0.22", "-33.3876, -75.2704, -117.82, 1.92", "-33.7215, -75.5875, -118.386, 2.21", "-34.1559, -75.9853, -119.142, 2.21", "-36.2497, -77.8965, -122.798, 0.22", "-36.4476, -78.0806, -123.146, 0.44", "-36.9493, -78.5843, -124.014, 0.29", "-37.5849, -79.28, -125.148, 1.03", "-37.7778, -79.5026, -125.49, 0.81", "-38.2558, -80.0873, -126.244, 0.29", "-38.8206, -80.7881, -126.999, 1.11", "-39.0315, -81.0555, -127.343, 1.33", "-39.2857, -81.3918, -127.8, 1.33", "-40.9323, -83.6127, -130.832, 0.22", "-41.5263, -84.4194, -131.989, 1.99", "-41.785, -84.76, -132.491, 2.43", "-43.7655, -87.337, -136.358, 0.22", "-44.0311, -87.6766, -136.92, 0.59", "-44.2201, -87.9321, -137.334, 0.59", "-44.9265, -88.9079, -138.896, 0.22", "-45.2174, -89.3215, -139.565, 1.25", "-45.6024, -89.9182, -140.498, 1.62", "-46.9943, -92.2192, -143.809, 0.22", "-47.5213, -93.1375, -145.128, 0.22", "-47.7378, -93.5551, -145.692, 0.96", "-47.866, -93.8427, -146.048, 1.33", "-48.6714, -95.995, -148.627, 0.22", "-48.7952, -96.4043, -149.123, 0.74", "-48.894, -96.8297, -149.62, 0.74", "-49.0006, -97.3958, -150.311, 0.22", "-49.1896, -98.6043, -151.757, 1.84", "-49.2828, -99.2852, -152.566, 2.14", "-49.6012, -101.951, -155.65, 0.22", "-49.6525, -102.413, -156.185, 0.22", "-49.7574, -103.351, -157.263, 1.55", "-49.8282, -103.926, -157.916, 1.84", "-50.0742, -105.621, -159.856, 0.22", "-50.1761, -106.222, -160.552, 0.52", "-50.3474, -107.027, -161.652, 0.22", "-50.6002, -107.966, -163.18, 1.03", "-50.6584, -108.148, -163.505, 1.18", "-51.2575, -109.841, -166.711, 1.25", "-51.4523, -110.33, -167.691, 1.62", "-52.3359, -112.391, -171.871, 0.22", "-52.6175, -112.998, -173.172, 0.22", "-52.8622, -113.496, -174.223, 1.47", "-53.1975, -114.158, -175.6, 1.62", "-53.733, -115.203, -177.775, 0.22", "-53.8934, -115.539, -178.519, 0.96", "-54.7382, -117.439, -182.697, 0.22", "-54.921, -117.869, -183.706, 1.18", "-55.2038, -118.497, -185.252, 1.4", "-55.799, -119.702, -188.234, 1.03", "-56.7354, -121.428, -192.552, 0.22", "-56.9796, -121.84, -193.6, 1.47", "-57.3863, -122.453, -195.204, 1.55", "-57.8601, -123.099, -196.958, 0.22", "-58.3109, -123.649, -198.399, 0.22", "-58.5594, -123.905, -199.052, 1.11", "-58.9899, -124.28, -200.159, 1.33", "-60.5367, -125.475, -204.266, 0.22", "-60.7519, -125.631, -204.845, 1.18", "-61.0207, -125.814, -205.618, 1.18", "-61.6471, -126.237, -207.491, 0.66", "-63.4119, -127.399, -212.776, 0.22", "-63.7909, -127.63, -213.851, 0.22", "-64.3825, -127.954, -215.419, 1.18", "-64.8926, -128.212, -216.834, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.4463, -16.165, 2.71107, 0.59", "-14.8176, -16.9684, 3.17413, 0.59", "-15.8406, -17.1954, 3.34054, 0.66", "-16.6442, -17.2831, 3.48041, 0.81", "-17.1251, -17.2879, 3.57656, 0.81", "-18.07, -17.2725, 3.79736, 0.81", "-19.2929, -17.2718, 4.18354, 0.96", "-19.9888, -17.2108, 4.4534, 0.66", "-20.8479, -17.1124, 4.84684, 0.37", "-21.677, -16.9962, 5.28988, 0.37", "-22.7023, -16.8556, 5.93799, 1.18", "-23.8776, -16.7449, 6.89495, 1.69", "-24.2147, -16.7796, 7.26075, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.4463, -16.165, 2.71107, 1.25", "-12.9546, -17.4366, 2.31453, 1.25", "-13.552, -18.7437, 1.93615, 0.74", "-13.9862, -19.5963, 1.71221, 0.96", "-14.5661, -20.6194, 1.47555, 1.18", "-15.0331, -21.3913, 1.35478, 1.47", "-15.5147, -22.1766, 1.27316, 1.47", "-15.926, -22.7937, 1.25644, 1.55", "-16.4177, -23.5118, 1.30648, 1.55", "-16.9226, -24.2847, 1.39586, 1.33", "-17.7013, -25.5453, 1.59162, 1.11", "-18.1555, -26.3466, 1.68493, 0.96", "-18.5196, -27.0687, 1.68589, 0.81", "-18.957, -28.0513, 1.33201, 0.66", "-19.2406, -28.7535, 0.841265, 0.52", "-19.4252, -29.2098, 0.421163, 0.52", "-19.763, -29.9725, -0.381278, 1.11", "-20.3349, -31.1378, -1.67369, 1.55", "-21.5713, -33.4626, -4.30132, 1.33", "-22.064, -34.3088, -5.26078, 0.88", "-22.5468, -35.0588, -6.05725, 1.18", "-23.0755, -35.8179, -6.72871, 1.84", "-23.4533, -36.3132, -7.01714, 2.21", "-23.8841, -36.8439, -7.14949, 2.36", "-24.2889, -37.3236, -7.15166, 2.5", "-24.8158, -37.9298, -7.13566, 2.28", "-25.5309, -38.7733, -7.11773, 1.92", "-26.3823, -39.7959, -7.14447, 1.18", "-26.9616, -40.492, -7.20396, 0.96", "-27.5504, -41.1906, -7.32319, 0.66", "-28.3123, -42.0877, -7.58321, 0.44", "-29.2584, -43.2013, -8.07041, 1.77", "-29.8348, -43.8856, -8.45261, 2.28", "-30.2406, -44.3806, -8.7861, 2.28", "-30.7383, -45.0243, -9.25861, 2.43", "-31.3247, -45.8429, -9.85641, 1.92", "-32.072, -46.9821, -10.6453, 0.81", "-32.6145, -47.8731, -11.1956, 0.96", "-33.1809, -48.8523, -11.6905, 1.18", "-33.5291, -49.458, -11.9303, 0.96", "-34.0661, -50.3409, -12.1521, 0.44", "-34.4889, -50.9571, -12.2259, 0.96", "-34.7313, -51.2902, -12.2396, 1.11", "-35.4063, -52.143, -12.219, 0.52", "-35.9861, -52.7968, -12.1406, 0.44", "-37.0131, -53.7927, -11.9738, 1.03", "-37.6761, -54.3389, -11.8442, 1.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-15.677, -59.0664, 2.28165, 0.81", "-15.9037, -60.0966, -0.377281, 0.81", "-16.0697, -60.5071, -1.5767, 1.18", "-16.1859, -60.7645, -2.28956, 1.25", "-16.3633, -61.2053, -3.47357, 0.66", "-16.4161, -61.3655, -3.87726, 0.52", "-16.5045, -61.6966, -4.64467, 0.66", "-16.5634, -61.9001, -5.0662, 0.88", "-16.5461, -62.357, -5.73592, 1.11", "-16.376, -62.9338, -6.56584, 1.25", "-16.2926, -63.1544, -6.899, 1.25", "-16.2072, -63.3635, -7.22234, 0.96", "-16.0575, -63.7093, -7.75569, 0.59", "-15.7873, -64.3246, -8.78298, 1.18", "-15.3297, -65.411, -10.6615, 1.25", "-15.0233, -66.2125, -11.9907, 1.25", "-14.8804, -66.6071, -12.6134, 1.69", "-14.7962, -66.8714, -12.9956, 1.77", "-14.4515, -68.3025, -14.7321, 0.81", "-14.3409, -68.9218, -15.3503, 1.11", "-14.2521, -69.4481, -15.7679, 0.96", "-14.1781, -70.0921, -16.2081, 0.52", "-14.1491, -70.9825, -16.7554, 0.52", "-14.2162, -72.494, -17.5699, 2.21", "-14.3156, -73.195, -17.8702, 2.5", "-14.3729, -73.4593, -17.987, 2.5", "-14.6034, -74.2569, -18.3544, 0.66", "-14.8411, -74.8887, -18.6688, 1.25", "-14.9861, -75.2072, -18.8278, 1.47", "-15.174, -75.5403, -18.988, 1.47", "-15.5358, -76.1297, -19.2452, 1.33", "-15.7614, -76.4652, -19.3982, 0.74", "-16.1152, -76.9596, -19.6304, 0.29", "-16.29, -77.208, -19.7541, 0.22", "-16.5159, -77.5552, -19.9232, 0.22", "-16.7775, -78.0268, -20.1223, 0.96", "-16.9224, -78.3474, -20.2291, 1.18", "-17.02, -78.657, -20.3268, 0.96", "-17.2018, -79.5701, -20.6271, 0.22", "-17.245, -79.8971, -20.7482, 0.22", "-17.2965, -80.4224, -20.9835, 0.88", "-17.3191, -80.7354, -21.1388, 1.11", "-17.3836, -81.5558, -21.5572, 0.22", "-17.477, -82.4065, -22.0803, 1.77", "-17.5215, -82.7444, -22.3568, 2.28", "-17.5943, -83.2723, -22.9161, 2.28", "-17.7333, -84.079, -23.9659, 0.15", "-17.7872, -84.4077, -24.4553, 0.74", "-17.8969, -85.2203, -25.7847, 0.44", "-17.9782, -86.2227, -27.4561, 1.69", "-18.0035, -86.9212, -28.649, 2.28", "-18.0057, -87.2931, -29.2864, 2.58", "-18.0077, -88.1808, -30.8012, 0.52", "-18.0041, -88.779, -31.7538, 0.29", "-18.003, -89.7857, -33.1496, 2.21", "-18.0214, -90.6194, -34.1692, 2.58", "-18.106, -92.0476, -35.7569, 0.29", "-18.1478, -92.4728, -36.1891, 0.22", "-18.1986, -92.759, -36.4569, 0.22", "-18.312, -93.2147, -36.8502, 1.33", "-18.4269, -93.563, -37.1147, 1.55", "-18.9946, -95.0891, -38.1465, 0.22", "-19.1542, -95.479, -38.3987, 0.96", "-19.2558, -95.7163, -38.5709, 1.25", "-19.3692, -95.9672, -38.7881, 1.25", "-19.7664, -96.7924, -39.5868, 0.22", "-20.0373, -97.3125, -40.1153, 0.88", "-20.1346, -97.4925, -40.3073, 1.11", "-20.327, -97.8701, -40.7136, 1.11", "-20.9388, -99.1404, -41.9995, 0.22", "-21.154, -99.6029, -42.4351, 1.77", "-21.2881, -99.9003, -42.6974, 2.28", "-21.4669, -100.309, -43.0232, 2.14", "-21.9607, -101.492, -43.905, 0.22", "-22.1936, -102.089, -44.2992, 1.03", "-22.3029, -102.401, -44.4932, 1.33", "-22.6522, -103.424, -45.1865, 0.22", "-22.7778, -103.789, -45.4508, 0.96", "-22.9132, -104.164, -45.7489, 1.25", "-22.993, -104.378, -45.9337, 1.33", "-23.4939, -105.732, -47.1656, 0.15", "-23.6921, -106.31, -47.7031, 1.18", "-23.8216, -106.713, -48.075, 1.55", "-24.139, -107.776, -49.0149, 0.22", "-24.2217, -108.065, -49.2507, 0.96", "-24.3329, -108.462, -49.557, 0.96", "-24.5543, -109.326, -50.1574, 0.22", "-24.6158, -109.62, -50.3366, 0.66", "-24.7637, -110.44, -50.8256, 0.22", "-24.8469, -110.946, -51.1111, 1.4", "-24.9187, -111.418, -51.3826, 1.84", "-24.9638, -111.696, -51.5468, 1.62", "-25.2093, -112.993, -52.3251, 0.15", "-25.3856, -113.908, -52.893, 1.03", "-25.4468, -114.219, -53.1095, 1.55", "-25.5181, -114.578, -53.368, 1.55", "-25.7549, -115.753, -54.2234, 0.22", "-25.8154, -116.073, -54.4684, 0.88", "-25.8954, -116.441, -54.7636, 0.88", "-26.2183, -117.806, -55.7913, 0.22", "-26.347, -118.311, -56.1503, 1.18", "-26.4439, -118.656, -56.3783, 1.33", "-26.7838, -119.836, -57.1346, 0.22", "-26.943, -120.366, -57.4622, 0.22", "-27.1667, -121.019, -57.8597, 0.22", "-27.3835, -121.614, -58.1882, 0.22", "-27.68, -122.42, -58.6392, 1.55", "-27.9, -123.045, -58.9901, 1.92", "-28.011, -123.402, -59.1802, 1.77", "-28.3796, -124.871, -59.9788, 0.22", "-28.5039, -125.422, -60.2907, 0.96", "-28.5675, -125.744, -60.4736, 1.11", "-28.7532, -126.859, -61.1116, 0.22", "-28.8609, -127.573, -61.5091, 0.22", "-28.9412, -128.213, -61.8753, 1.03", "-28.9806, -128.6, -62.0971, 1.33", "-29.0246, -129.025, -62.3561, 1.33", "-29.1984, -130.448, -63.2421, 0.15", "-29.2822, -131.049, -63.609, 0.15", "-29.4195, -131.889, -64.1122, 1.55", "-29.4863, -132.268, -64.321, 1.84", "-29.5622, -132.664, -64.522, 1.77", "-29.7706, -133.556, -64.9343, 0.22", "-29.9257, -134.083, -65.1434, 0.22", "-30.1003, -134.588, -65.3328, 0.96", "-30.2253, -134.9, -65.434, 1.11", "-30.6222, -135.776, -65.7072, 0.22", "-30.8217, -136.149, -65.8445, 0.22", "-31.0726, -136.534, -66.0156, 0.22", "-31.2746, -136.795, -66.1549, 0.96", "-31.4129, -136.948, -66.2464, 1.25", "-31.7105, -137.232, -66.4346, 1.25", "-32.4589, -137.881, -66.9476, 0.15", "-32.868, -138.248, -67.2763, 0.15", "-33.0157, -138.399, -67.4246, 0.44", "-33.1626, -138.57, -67.6063, 0.44", "-33.4411, -138.914, -67.99, 0.15", "-33.8531, -139.512, -68.6619, 1.33", "-34.0184, -139.799, -69.006, 1.4", "-34.3063, -140.546, -69.9682, 0.22", "-34.413, -140.958, -70.5164, 0.44", "-34.4547, -141.215, -70.8489, 0.22", "-34.495, -141.754, -71.5579, 1.33", "-34.4952, -142.306, -72.284, 1.62", "-34.4381, -143.505, -73.8394, 0.22", "-34.3983, -143.923, -74.364, 0.22", "-34.3458, -144.328, -74.8586, 0.96", "-34.2114, -145.081, -75.7297, 1.18", "-33.9868, -146.164, -76.9173, 0.22", "-33.9207, -146.453, -77.1938, 0.22", "-33.8763, -146.643, -77.3512, 0.66", "-33.645, -147.618, -78.0874, 0.22", "-33.4393, -148.46, -78.6655, 2.06", "-33.3868, -148.687, -78.8101, 2.28", "-33.0719, -150.051, -79.6319, 0.22", "-32.9808, -150.43, -79.8641, 0.22", "-32.7879, -151.233, -80.3826, 1.33", "-32.7209, -151.516, -80.5753, 1.62", "-32.3807, -153.163, -81.7394, 0.37", "-32.2856, -153.717, -82.1349, 0.22", "-32.2145, -154.265, -82.5358, 0.22", "-32.1201, -155.207, -83.2287, 1.03", "-32.097, -155.861, -83.7244, 1.4", "-32.1412, -156.919, -84.5485, 0.22", "-32.237, -157.67, -85.1239, 1.25", "-32.3311, -158.163, -85.5064, 1.55", "-32.3802, -158.34, -85.6382, 1.55", "-32.8751, -159.709, -86.5826, 0.29", "-33.0573, -160.119, -86.8606, 0.52", "-33.1494, -160.287, -86.9796, 0.52", "-33.4181, -160.719, -87.268, 0.22", "-33.8095, -161.302, -87.6026, 0.22", "-34.1143, -161.723, -87.8191, 1.25", "-34.3612, -162.032, -87.9528, 1.4", "-34.6816, -162.414, -88.121, 1.11", "-35.1777, -162.963, -88.4082, 0.15", "-35.5613, -163.392, -88.6945, 0.15", "-35.9524, -163.863, -89.062, 0.88", "-36.1456, -164.088, -89.2584, 1.11", "-36.3073, -164.264, -89.4164, 1.11", "-36.9235, -164.899, -89.9854, 0.22", "-37.5485, -165.531, -90.562, 0.22", "-37.7796, -165.787, -90.8441, 0.22", "-38.2322, -166.336, -91.4748, 0.22", "-38.58, -166.803, -92.0097, 1.25", "-38.7917, -167.124, -92.3573, 1.55", "-39.0528, -167.571, -92.8265, 1.55", "-39.9828, -169.209, -94.5416, 0.22", "-40.1001, -169.432, -94.7958, 0.66", "-40.1946, -169.62, -95.0557, 0.66", "-40.3789, -169.968, -95.6024, 0.22", "-40.5692, -170.274, -96.1216, 0.22", "-40.7224, -170.471, -96.4525, 0.66", "-40.9822, -170.75, -96.8565, 0.74", "-41.6957, -171.511, -97.8769, 0.22", "-41.9535, -171.788, -98.2147, 0.44", "-42.1226, -171.978, -98.4164, 0.44", "-42.4259, -172.42, -98.8569, 0.22", "-42.6523, -172.827, -99.2862, 1.33", "-42.7755, -173.081, -99.5734, 1.69", "-42.8274, -173.184, -99.7085, 1.92", "-42.9835, -173.501, -100.213, 1.69", "-43.4298, -174.508, -101.952, 0.59", "-43.6289, -175.041, -102.948, 0.96", "-43.7671, -175.482, -103.773, 0.44", "-43.8741, -175.876, -104.487, 0.29", "-43.9719, -176.304, -105.234, 0.29", "-44.0151, -176.554, -105.643, 0.29", "-44.1461, -177.27, -106.702, 0.88", "-44.2185, -177.6, -107.201, 1.55", "-44.2513, -177.707, -107.371, 2.06", "-44.6051, -178.613, -108.913, 1.69", "-44.6348, -178.658, -109.023, 1.84", "-45.0502, -179.132, -110.458, 0.37", "-45.3898, -179.46, -111.573, 0.22", "-45.6466, -179.707, -112.48, 1.84", "-45.8581, -179.917, -113.237, 2.06", "-46.6178, -180.704, -116.195, 0.22", "-46.7507, -180.844, -116.735, 0.22", "-46.9151, -181.042, -117.475, 1.55", "-47.1745, -181.403, -118.697, 1.69", "-47.2388, -181.531, -119.105, 1.69", "-47.6345, -182.578, -122.159, 0.52", "-47.6864, -182.758, -122.625, 1.92", "-47.7541, -182.994, -123.241, 1.92", "-48.1379, -184.188, -126.379, 1.92", "-48.6562, -185.595, -129.957, 0.66", "-48.7212, -185.782, -130.419, 0.66", "-48.8115, -186.086, -131.102, 0.29", "-48.8728, -186.33, -131.627, 0.29", "-48.926, -186.549, -132.079, 1.11", "-48.971, -186.766, -132.454, 1.62", "-49.3736, -188.144, -134.923, 0.22", "-49.4128, -188.258, -135.149, 0.22", "-49.5109, -188.512, -135.674, 1.47", "-49.6512, -188.861, -136.425, 1.77", "-49.7356, -189.058, -136.895, 1.77", "-50.3482, -190.302, -139.992, 0.22", "-50.5031, -190.581, -140.711, 1.33", "-50.6164, -190.829, -141.389, 1.62", "-50.7553, -191.206, -142.415, 1.62", "-51.0556, -192.202, -145.199, 0.22", "-51.0881, -192.362, -145.674, 1.18", "-51.1531, -192.758, -146.844, 1.33", "-51.2833, -193.617, -149.306, 0.15", "-51.3196, -193.832, -149.885, 1.25", "-51.4692, -194.49, -151.541, 1.62", "-51.8714, -195.768, -154.69, 0.22", "-52.051, -196.215, -155.808, 0.22", "-52.1842, -196.484, -156.455, 0.44", "-52.3497, -196.8, -157.182, 0.88", "-52.4194, -196.959, -157.535, 1.47", "-52.5493, -197.443, -158.512, 1.62", "-52.7311, -198.684, -160.905, 0.22", "-52.7362, -198.806, -161.144, 1.03", "-52.7435, -199.548, -162.618, 1.11", "-52.7422, -199.947, -163.387, 0.96", "-52.7113, -201.359, -166.001, 0.22", "-52.7161, -201.522, -166.3, 0.81", "-52.7476, -201.829, -166.847, 0.81", "-52.8441, -202.364, -167.778, 0.22", "-52.9848, -202.916, -168.705, 1.47", "-53.1792, -203.538, -169.695, 1.62", "-53.7789, -205.167, -172.071, 0.15", "-53.9264, -205.554, -172.63, 0.15", "-54.0721, -205.957, -173.174, 0.96", "-54.1487, -206.178, -173.461, 0.96", "-54.2674, -206.531, -173.876, 0.22", "-54.3711, -206.847, -174.182, 1.11", "-54.533, -207.509, -174.629, 1.11", "-54.8512, -208.813, -175.711, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-15.677, -59.0664, 2.28165, 2.8", "-15.5774, -59.5031, 2.46151, 2.8", "-15.2588, -60.9001, 3.0369, 1.84", "-14.9408, -62.2948, 3.61134, 1.03", "-14.7887, -62.9615, 3.88597, 1.03", "-14.593, -63.82, 4.23955, 1.18", "-14.4194, -64.581, 4.55298, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.36382, 14.0645, -0.298599, 0.81", "8.11124, 14.4115, 0.361268, 0.81", "8.51757, 14.6437, 0.803624, 0.37", "9.14644, 15.041, 1.52845, 0.88", "9.68278, 15.4119, 2.15175, 1.25", "10.405, 15.9529, 2.98118, 1.25", "10.7458, 16.2272, 3.35698, 1.11", "11.6903, 17.1376, 4.42282, 1.11", "11.9737, 17.4311, 4.71106, 1.11", "12.3347, 17.8001, 5.00218, 0.96", "13.1584, 18.5811, 5.47774, 0.66", "13.8253, 19.1413, 5.74964, 0.74", "14.5497, 19.6593, 5.96598, 0.88", "15.3764, 20.1318, 6.12291, 0.96", "16.2046, 20.4873, 6.2129, 0.74", "17.1362, 20.7569, 6.24697, 1.62", "18.0024, 20.8965, 6.21936, 1.84", "18.7213, 20.9348, 6.16669, 1.69", "19.5547, 20.9285, 6.06823, 1.62", "20.863, 20.898, 5.912, 0.88", "21.5654, 20.9276, 5.83624, 0.74", "22.4285, 21.03, 5.77132, 0.74", "23.3146, 21.2241, 5.73982, 0.96", "24.0609, 21.4707, 5.77054, 0.81", "25.0159, 21.8976, 5.90391, 0.74", "26.2193, 22.5602, 6.30696, 1.25", "26.716, 22.8725, 6.56574, 1.47", "27.1791, 23.2047, 6.96696, 1.77", "27.508, 23.4743, 7.35646, 1.77", "27.9078, 23.827, 7.98601, 1.11", "28.7043, 24.4714, 9.42606, 1.03", "29.1788, 24.8101, 10.3452, 1.18", "30.1425, 25.4327, 12.2253, 1.4", "30.4221, 25.588, 12.7619, 1.55", "31.3937, 25.982, 14.5025, 1.4", "32.0458, 26.1438, 15.5245, 1.84", "32.3976, 26.1766, 15.9618, 2.43", "32.8186, 26.171, 16.3648, 2.43", "33.3773, 26.1207, 16.7608, 2.21", "34.8867, 25.9401, 17.6637, 0.96", "35.6904, 25.8689, 18.0612, 0.66", "36.2774, 25.8622, 18.3367, 0.66", "36.924, 25.8864, 18.6388, 0.66", "37.5695, 25.9508, 18.9208, 0.66", "38.4537, 26.1163, 19.2881, 0.66", "39.4013, 26.4043, 19.641, 1.03", "40.2083, 26.7455, 19.9385, 0.59", "41.0767, 27.1788, 20.2392, 0.59", "41.6733, 27.522, 20.4332, 0.96", "42.4379, 28.0214, 20.6646, 0.66", "43.1512, 28.5553, 20.8438, 0.66", "44.1027, 29.3417, 21.0414, 1.33", "44.2788, 29.5028, 21.073, 1.55", "44.6006, 29.8259, 21.1136, 1.69", "44.9889, 30.2371, 21.1557, 1.4", "45.4774, 30.7693, 21.1828, 1.11", "45.807, 31.135, 21.2083, 1.11", "53.2126, 35.867, 27.512, 1.11", "60.7199, 40.0992, 34.0138, 1.11", "68.5039, 45.0237, 39.6968, 1.11", "75.3737, 50.4146, 46.1274, 1.11", "82.864, 54.4234, 52.7753, 1.11", "90.4323, 58.4022, 59.3508, 1.11", "98.2007, 63.8, 64.6527, 1.11", "106.217, 68.9636, 69.7934, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.36382, 14.0645, -0.298599, 2.95", "7.40785, 15.9773, -0.283044, 2.95", "7.44914, 17.771, -0.268457, 2.95", "7.48206, 19.2007, -0.256831, 2.95", "7.50195, 20.0648, -0.249804, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.4703, 35.0492, -0.918402, 0.37", "30.5123, 47.7112, -0.918402, 0.37", "38.5543, 60.3732, -0.918402, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-24.2147, -16.7796, 7.26075, 0.59", "-24.2077, -18.2909, 7.37869, 0.59", "-24.2014, -19.3497, 7.58546, 0.52", "-24.2066, -20.1306, 7.78095, 0.88", "-24.2223, -20.9848, 8.01983, 1.03", "-24.2341, -21.6286, 8.19988, 1.03", "-24.2511, -22.5529, 8.45835, 0.52", "-24.2986, -23.8367, 8.92339, 1.11", "-24.3187, -24.2975, 9.13656, 1.4", "-24.3426, -24.8107, 9.41504, 1.4", "-23.6317, -36.4009, 13.0369, 1.4", "-23.1469, -47.3655, 18.1209, 1.4", "-22.606, -57.9013, 23.9531, 1.4" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-24.2147, -16.7796, 7.26075, 0.29", "-25.7688, -16.4058, 7.13055, 0.29", "-27.0969, -16.0864, 7.01928, 0.59", "-27.5663, -15.9735, 6.97996, 0.81", "-28.1922, -15.8229, 6.92752, 0.81", "-29.1692, -15.588, 6.84567, 0.29", "-29.758, -15.4463, 6.79633, 0.59", "-40.7825, -10.2563, 7.48066, 0.59", "-50.5045, -3.23331, 10.1421, 0.59", "-60.1521, 4.32404, 11.3848, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.4194, -64.581, 4.55298, 0.59", "-14.4561, -65.5769, 6.08823, 0.59", "-14.4957, -66.5235, 7.47951, 0.44", "-14.4937, -66.871, 8.0287, 0.44", "-14.4704, -67.5441, 9.18265, 0.81", "-14.4282, -68.0062, 10.0159, 1.25", "-14.3862, -68.3137, 10.6189, 1.47", "-14.34, -68.5864, 11.2317, 1.47", "-14.1289, -69.6529, 13.6726, 0.74", "-13.8632, -70.6266, 16.1639, 0.37", "-13.7685, -70.8553, 16.83, 0.37", "-13.6203, -71.1302, 17.756, 0.81", "-13.4737, -71.3627, 18.6348, 0.96", "-11.7642, -74.8956, 29.6883, 0.96", "-10.045, -80.7773, 39.7977, 0.96", "-6.70373, -84.1356, 50.5221, 0.96", "-3.66585, -87.6676, 61.2867, 0.96", "1.02944, -91.6309, 71.2936, 0.96", "6.87733, -93.0615, 81.3053, 0.96", "11.7163, -93.3728, 91.9224, 0.96", "17.2625, -95.3196, 102.028, 0.96", "24.4117, -98.162, 110.855, 0.96", "30.2127, -99.9433, 120.844, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-14.4194, -64.581, 4.55298, 1.11", "-14.8901, -65.8312, 4.43265, 1.11", "-15.4228, -67.3031, 4.5001, 1.11", "-16.0411, -69.131, 4.76771, 1.11", "-16.3772, -70.2144, 5.0199, 0.96", "-16.608, -70.9988, 5.25639, 0.96", "-17.1662, -73.0222, 6.01409, 1.11", "-17.4075, -74.0524, 6.53058, 1.25", "-17.5837, -74.974, 7.09818, 1.25", "-17.7501, -76.0537, 7.85282, 1.03", "-17.8839, -77.0803, 8.55969, 1.03", "-18.0679, -78.4357, 9.38051, 1.18", "-18.1724, -79.1372, 9.69774, 1.77", "-18.3085, -79.8203, 9.92787, 2.28", "-18.4903, -80.5484, 10.0943, 2.14", "-18.829, -81.7164, 10.2411, 1.62", "-19.2031, -82.9334, 10.3115, 1.03", "-19.6459, -84.2992, 10.3319, 0.74", "-20.1173, -85.6883, 10.3619, 0.96", "-20.6779, -87.3156, 10.4218, 1.25", "-21.2718, -88.9782, 10.5517, 1.62", "-21.5895, -89.8708, 10.6576, 1.55", "-21.8472, -90.5888, 10.7692, 1.69", "-22.4835, -92.2442, 11.081, 1.18", "-22.9625, -93.4072, 11.3501, 1.03", "-23.4438, -94.4679, 11.6342, 1.33", "-23.8286, -95.2608, 11.8612, 1.62", "-24.1488, -95.9005, 12.0352, 1.62", "-24.5754, -96.7942, 12.2637, 1.77", "-24.8555, -97.4628, 12.4118, 1.77", "-25.2371, -98.5248, 12.6525, 1.55", "-25.5526, -99.5107, 12.8926, 1.25", "-25.8698, -100.758, 13.1723, 0.81", "-26.1658, -102.416, 13.483, 0.81", "-26.3395, -103.697, 13.7243, 1.03", "-26.5132, -105.241, 14.0482, 1.03", "-26.5845, -106.151, 14.2686, 1.18", "-26.68, -108.009, 14.7693, 0.29", "-26.7142, -109.027, 15.0541, 0.37", "-26.7914, -110.715, 15.5054, 0.37", "-26.8559, -111.895, 15.8336, 0.29", "-26.9018, -112.725, 16.0597, 0.29", "-26.965, -113.53, 16.3164, 0.29", "-27.0959, -114.252, 16.6472, 0.29", "-27.2921, -115.15, 17.0629, 0.22", "-28.9921, -127.009, 21.6116, 0.22", "-32.0968, -138.334, 26.6304, 0.22", "-35.018, -149.438, 32.1866, 0.22", "-38.5737, -158.816, 39.8635, 0.22", "-40.911, -168.673, 47.4663, 0.22", "-44.1804, -178.336, 54.9485, 0.22", "-47.2617, -189.591, 60.1232, 0.22", "-51.7199, -199.855, 66.105, 0.22", "-57.2713, -209.562, 72.0103, 0.22", "-60.6212, -219.38, 79.2682, 0.22", "-62.8756, -228.453, 87.7347, 0.22", "-66.1867, -235.606, 97.4296, 0.22", "-66.9758, -243.763, 106.943, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.50195, 20.0648, -0.249804, 0.66", "6.74478, 21.0616, -0.21314, 0.66", "6.3061, 21.7641, -0.185499, 0.29", "6.12521, 22.0942, -0.169858, 0.44", "5.6148, 23.1511, -0.115699, 0.44", "5.07754, 24.3566, -0.0495409, 0.81", "4.86462, 24.8599, -0.0201665, 0.96", "4.61264, 25.5412, 0.0241701, 0.81", "4.43825, 25.9811, 0.0606566, 1.03", "4.12342, 26.6335, 0.119989, 1.18", "3.68095, 27.3098, 0.19329, 0.66", "2.92021, 28.0646, 0.30246, 0.22", "2.35293, 28.439, 0.375893, 0.22", "1.73672, 28.6956, 0.44968, 0.22", "0.941828, 28.9298, 0.540795, 0.66", "0.419248, 29.0445, 0.600978, 0.81", "-9.48116E-4, 29.1268, 0.6461, 0.66", "-0.606828, 29.2556, 0.703501, 0.52", "-1.55103, 29.5314, 0.785588, 0.44", "-2.39911, 29.8359, 0.83232, 0.52", "-3.02589, 30.0962, 0.831297, 0.88", "-3.62012, 30.3791, 0.781317, 1.11", "-4.0923, 30.629, 0.711223, 1.11", "-4.5897, 30.9176, 0.586325, 0.96", "-5.34032, 31.3834, 0.323139, 0.37", "-6.16805, 31.9326, -0.0403657, 0.29", "-6.84361, 32.417, -0.369092, 0.88", "-7.1737, 32.6784, -0.530613, 1.03", "-7.78442, 33.2138, -0.851332, 1.03", "-7.9566, 33.3838, -0.947136, 1.03", "-8.68615, 34.2172, -1.34579, 0.29", "-9.01045, 34.6489, -1.5465, 0.29", "-9.52641, 35.39, -1.90024, 0.96", "-9.88354, 35.9013, -2.15889, 1.11", "-10.0897, 36.1928, -2.30246, 1.11", "-10.3964, 36.6074, -2.51502, 0.66", "-11.105, 37.5398, -2.99282, 0.29", "-11.5372, 38.0731, -3.27946, 0.29", "-12.0364, 38.6546, -3.56803, 0.66", "-12.3577, 39.0022, -3.73101, 0.88", "-12.6531, 39.304, -3.86806, 1.03", "-13.1173, 39.7629, -4.06586, 0.74", "-13.7149, 40.335, -4.27246, 0.44", "-14.4377, 41.0246, -4.51046, 0.22", "-15.1236, 41.6787, -4.73659, 0.44", "-15.4784, 42.0137, -4.84541, 0.59", "-15.7546, 42.2895, -4.88822, 0.59", "-16.3086, 42.8943, -4.8529, 0.29", "-16.8735, 43.591, -4.66941, 0.59", "-17.1968, 44.0326, -4.48561, 0.59", "-17.4269, 44.3426, -4.30501, 0.59", "-18.4708, 45.6412, -3.39159, 1.69", "-18.9767, 46.2423, -2.90037, 2.14", "-19.288, 46.6046, -2.57991, 2.36", "-19.53, 46.8746, -2.325, 2.36", "-20.6184, 48.0096, -1.2212, 0.29", "-21.2507, 48.6121, -0.625149, 0.22", "-22.1209, 49.3633, 0.11953, 0.74", "-22.4925, 49.6723, 0.425804, 0.96", "-22.7093, 49.8565, 0.609564, 0.96", "-23.461, 50.5376, 1.24102, 0.22", "-24.1647, 51.2568, 1.83147, 0.81", "-24.2881, 51.3914, 1.92936, 1.18", "-24.7372, 51.8708, 2.26296, 1.18", "-24.9143, 52.0612, 2.39318, 1.18", "-25.4586, 52.6666, 2.76761, 0.15", "-25.6958, 52.9614, 2.91348, 0.37", "-25.9105, 53.2828, 3.02433, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.50195, 20.0648, -0.249804, 2.8", "8.85782, 22.0742, 0.0348271, 2.8", "9.70617, 23.3315, 0.212919, 2.8", "10.4305, 24.4049, 0.364965, 2.95", "11.2159, 25.5688, 0.529831, 3.68", "11.7565, 26.3701, 0.643331, 3.9", "12.2694, 27.1303, 0.751005, 4.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-22.606, -57.9013, 23.9531, 0.66", "-22.2598, -68.3917, 28.603, 0.66", "-20.1758, -78.5511, 33.4608, 0.66", "-20.2867, -87.9921, 39.8228, 0.66", "-21.588, -96.7611, 46.886, 0.66", "-23.4607, -105.172, 54.2126, 0.66", "-24.3996, -114.461, 60.7077, 0.66", "-26.3776, -122.235, 68.6244, 0.66", "-27.5671, -130.716, 76.0181, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-22.606, -57.9013, 23.9531, 0.59", "-22.2559, -67.2956, 28.4618, 0.66", "-22.2168, -76.8973, 32.5779, 0.66", "-23.0371, -86.8833, 35.6843, 0.66", "-24.8134, -96.7976, 38.6041, 0.66", "-25.0244, -107.326, 39.46, 0.66", "-23.9675, -117.355, 42.37, 0.66", "-23.329, -127.409, 45.3189, 0.66", "-23.8547, -137.684, 47.5413, 0.66", "-23.4585, -147.815, 50.2948, 0.66", "-22.2776, -157.569, 53.8987, 0.66", "-21.1481, -167.82, 55.9987, 0.66", "-19.0658, -177.322, 59.7939, 0.66", "-16.2987, -187.329, 61.4215, 0.66", "-15.3925, -197.866, 61.5316, 0.66", "-13.174, -208.109, 62.6203, 0.66", "-12.1318, -218.599, 63.311, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-60.1521, 4.32404, 11.3848, 0.59", "-66.1749, 7.71542, 11.5472, 0.59", "-72.0405, 11.368, 10.999, 0.59", "-78.2535, 14.208, 11.867, 0.59", "-84.546, 16.9966, 12.1298, 0.59", "-90.0083, 21.208, 12.9833, 0.59", "-95.6281, 25.278, 13.3136, 0.59", "-100.099, 30.555, 14.4647, 0.59", "-104.06, 36.3502, 15.1452, 0.59", "-106.816, 42.8818, 15.6758, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-60.1521, 4.32404, 11.3848, 0.59", "-67.4091, 8.76716, 12.7065, 0.59", "-74.8701, 13.0732, 12.8931, 0.59", "-82.7395, 16.4496, 12.2963, 0.59", "-90.608, 19.5035, 10.7598, 0.59", "-97.7906, 23.6271, 8.31903, 0.59", "-105.253, 27.0054, 5.6941, 0.59", "-112.175, 30.748, 2.15962, 0.59", "-119.577, 32.6992, -1.66389, 0.59", "-127.088, 34.2473, -5.43035, 0.59", "-134.981, 35.2987, -8.48505, 0.59", "-142.854, 34.7501, -11.6638, 0.59", "-150.424, 34.572, -15.5511, 0.59", "-158.193, 35.0265, -19.0174, 0.59", "-166.368, 34.8038, -21.3646, 0.59", "-174.516, 33.763, -23.5761, 0.59", "-182.846, 34.2273, -25.2772, 0.59", "-191.276, 34.1446, -26.4238, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.2694, 27.1303, 0.751005, 2.36", "13.4996, 27.738, 2.51085, 2.36", "14.2871, 28.0822, 3.9489, 1.99", "14.6757, 28.2491, 4.77605, 1.84", "15.7629, 28.7441, 7.47778, 1.55", "16.7753, 29.2356, 10.4609, 2.06", "17.6701, 29.7529, 13.6719, 2.43", "18.0551, 30.0059, 16.0739, 2.58", "18.1177, 30.0487, 16.8599, 2.36", "18.1383, 30.0677, 17.9566, 2.21", "18.0499, 30.0674, 19.6628, 2.06", "17.9342, 30.0694, 20.9933, 1.25", "17.6886, 30.1845, 24.4906, 1.55", "17.6315, 30.3867, 26.7658, 1.18", "17.7045, 30.5519, 28.0606, 1.47", "17.8765, 30.7698, 29.2787, 2.14", "18.1472, 31.0582, 30.3776, 1.84", "18.6061, 31.5021, 31.5002, 1.47", "19.3002, 32.2588, 32.4747, 0.88", "20.1767, 33.2395, 33.255, 0.52", "20.6488, 33.7642, 33.5452, 0.22", "21.2141, 34.3493, 33.7937, 0.22", "21.6935, 34.8287, 33.9406, 0.59", "21.9888, 35.1012, 34.001, 0.66", "22.5208, 35.592, 34.0947, 0.22", "23.0083, 36.2426, 34.1565, 0.44", "25.3698, 37.6502, 45.768, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.2694, 27.1303, 0.751005, 0.96", "11.0863, 30.5006, -1.55019, 0.96", "10.7699, 31.4376, -2.22761, 1.33", "10.6143, 31.9251, -2.58096, 1.55", "10.4779, 32.3523, -2.89062, 1.77", "10.2692, 33.0061, -3.36458, 1.92", "9.96122, 33.9709, -4.06392, 0.96", "9.62591, 35.4622, -4.95652, 1.11", "9.55756, 35.7455, -5.14457, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "25.3698, 37.6502, 45.768, 0.44", "26.9439, 39.7835, 53.4498, 0.44", "29.7954, 43.1078, 60.3597, 0.44", "34.1223, 47.1322, 66.0813, 0.44", "39.9534, 50.1927, 70.9398, 0.44", "45.04, 53.4427, 76.4747, 0.44", "49.0785, 55.8525, 83.129, 0.44", "53.9709, 58.4367, 89.1255, 0.44", "58.9553, 60.9294, 95.0803, 0.44", "63.3309, 64.6197, 100.963, 0.44", "67.8957, 68.1061, 106.814, 0.44", "71.7619, 73.3495, 111.947, 0.44", "76.9833, 77.4494, 116.818, 0.44", "83.1585, 80.815, 121.033, 0.44", "88.6853, 84.8663, 125.595, 0.44", "93.3947, 89.5568, 130.508, 0.44", "97.9279, 94.3442, 135.5, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.3698, 37.6502, 45.768, 0.44", "29.1727, 39.7809, 56.0562, 0.44", "31.8468, 42.035, 66.6788, 0.44", "35.2647, 43.8783, 77.1484, 0.44", "37.5503, 44.1825, 88.0374, 0.44", "38.1091, 43.6624, 99.1295, 0.44", "40.7193, 43.7395, 109.944, 0.44", "44.5315, 44.2045, 120.39, 0.44", "48.7626, 45.5822, 130.612, 0.44", "51.6596, 44.7392, 141.305, 0.44", "53.0828, 43.0173, 152.182, 0.44", "56.0636, 42.02, 162.836, 0.44", "59.899, 41.3082, 173.238, 0.44", "64.0739, 40.9426, 183.532, 0.44", "67.6501, 42.11, 194.024, 0.44", "70.5239, 43.916, 204.664, 0.44", "71.8433, 47.9112, 215.109, 0.44", "71.844, 51.7858, 225.682, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.55756, 35.7455, -5.14457, 0.66", "9.55908, 35.5951, -6.2098, 0.66", "9.69004, 35.3621, -7.71361, 0.88", "9.86088, 35.2252, -8.88875, 1.11", "10.0344, 35.1608, -9.79288, 1.25", "10.1296, 35.1505, -10.2193, 1.47", "10.2978, 35.1708, -10.8984, 1.18", "10.4836, 35.241, -11.3954, 0.66", "10.9193, 35.6323, -12.1609, 0.52", "11.1164, 35.8916, -12.4444, 0.66", "11.2772, 36.1341, -12.6781, 0.66", "11.4644, 36.4502, -12.9915, 0.37", "11.7565, 36.8955, -13.4896, 0.37", "12.0068, 37.1496, -13.9089, 1.18", "12.3031, 37.2762, -14.3281, 1.77", "12.7316, 37.3458, -14.9005, 1.92", "12.9957, 37.3482, -15.227, 1.69", "13.4649, 37.3159, -15.7581, 0.66", "13.9995, 37.289, -16.3403, 0.52", "14.386, 37.3033, -16.7826, 0.37", "14.702, 37.3566, -17.1593, 0.37", "15.101, 37.4879, -17.6674, 0.29", "15.3489, 37.6178, -18.0279, 0.29", "15.8278, 37.9961, -18.8105, 0.59", "16.0677, 38.2912, -19.312, 1.55", "16.167, 38.4485, -19.5745, 1.77", "16.3433, 38.733, -20.09, 1.92", "16.439, 38.8716, -20.3809, 2.06", "16.5076, 38.9469, -20.5933, 2.06", "17.0142, 39.3684, -22.2921, 0.29", "17.1261, 39.4471, -22.6863, 0.29", "17.3045, 39.5565, -23.325, 0.29", "17.4302, 39.6212, -23.7556, 0.29", "17.7925, 39.7998, -25.0171, 1.18", "18.0772, 39.9618, -26.0421, 1.47", "18.1646, 40.0547, -26.4306, 1.69", "18.2202, 40.1467, -26.7307, 1.92", "18.2525, 40.2104, -26.9381, 2.14", "18.3034, 40.2937, -27.246, 2.14", "18.4216, 40.4209, -27.8783, 2.14", "18.7978, 40.6545, -29.6537, 1.03", "18.9995, 40.7474, -30.6389, 0.29", "19.1931, 40.814, -31.6352, 0.52", "19.3006, 40.8351, -32.1495, 0.81", "19.4042, 40.8441, -32.636, 0.81", "19.5232, 40.842, -33.1524, 0.52", "19.6898, 40.8456, -33.8086, 0.74", "19.8494, 40.9017, -34.4504, 0.81", "20.0088, 41.02, -35.0948, 1.69", "20.2682, 41.2528, -36.013, 2.06", "20.4174, 41.3797, -36.4513, 2.43", "20.8286, 41.6767, -37.4677, 1.11", "21.144, 41.8516, -38.0984, 0.96", "21.4816, 42.0146, -38.6581, 1.03", "21.997, 42.2617, -39.4239, 0.29", "22.3363, 42.4181, -39.8594, 0.37", "22.6442, 42.5679, -40.2224, 0.37", "22.9436, 42.7349, -40.5543, 0.22", "23.1703, 42.8831, -40.8262, 0.22", "23.5139, 43.1431, -41.2888, 0.22", "23.6999, 43.3309, -41.6007, 0.22", "23.8481, 43.5141, -41.8918, 0.22", "24.211, 43.9856, -42.6285, 1.62", "24.4984, 44.3336, -43.1862, 2.5", "24.6387, 44.4833, -43.4366, 2.73", "24.9316, 44.7584, -43.916, 2.14", "25.7382, 45.4785, -45.2106, 0.22", "25.9336, 45.6476, -45.5272, 0.22", "26.1634, 45.8496, -45.9097, 0.44", "26.2663, 45.9444, -46.0834, 0.44", "26.5754, 46.2571, -46.616, 0.29", "26.7966, 46.4904, -47.0099, 0.74", "26.9832, 46.6886, -47.3629, 0.74", "27.3822, 47.1029, -48.1413, 0.22", "27.631, 47.3577, -48.6321, 0.22", "28.0772, 47.8086, -49.5422, 1.84", "28.2904, 48.0105, -49.967, 2.14", "28.8048, 48.4761, -51.032, 0.29", "28.9669, 48.6074, -51.403, 0.44", "29.1006, 48.7062, -51.7473, 0.44", "29.375, 48.9034, -52.5811, 0.29", "29.6081, 49.0654, -53.4239, 1.84", "29.7964, 49.2419, -54.3238, 2.14", "30.0298, 49.5579, -55.9105, 0.29", "30.1612, 49.7687, -56.8706, 0.81", "30.2721, 49.9382, -57.6174, 0.81", "30.3667, 50.0722, -58.182, 0.52", "30.6297, 50.4528, -59.6442, 0.52", "30.751, 50.6168, -60.1805, 0.81", "31.1359, 51.1037, -61.5179, 2.14", "31.2787, 51.2583, -61.9188, 2.65", "31.3799, 51.3541, -62.1523, 2.65", "32.1779, 52.0101, -63.677, 0.29", "32.4336, 52.2063, -64.092, 0.22", "32.7259, 52.4498, -64.5462, 0.96", "32.9283, 52.6397, -64.8611, 1.18", "33.1926, 52.9047, -65.2678, 0.96", "33.54, 53.2505, -65.7526, 0.22", "33.8804, 53.5678, -66.1294, 0.22", "34.1223, 53.7835, -66.385, 0.22", "34.6322, 54.1791, -66.9256, 1.4", "34.9373, 54.4049, -67.2462, 1.84", "35.0069, 54.4567, -67.3194, 2.06", "35.2618, 54.6364, -67.5884, 1.99", "35.6548, 54.8878, -67.9994, 0.88", "36.281, 55.2855, -68.6359, 0.22", "36.5598, 55.4631, -68.8957, 0.29", "36.8607, 55.6389, -69.1436, 0.29", "37.1544, 55.7919, -69.3751, 0.29", "37.3308, 55.8723, -69.51, 0.66", "37.5807, 55.966, -69.688, 0.66", "37.7978, 56.032, -69.8376, 0.66", "38.1831, 56.1212, -70.1149, 0.22", "38.5256, 56.1861, -70.3668, 0.22", "39.0423, 56.286, -70.7535, 1.33", "39.5377, 56.3859, -71.1399, 2.14", "39.7828, 56.4436, -71.3404, 2.28", "40.0766, 56.5247, -71.5879, 1.99" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.55756, 35.7455, -5.14457, 0.59", "7.71899, 37.0967, -5.57166, 0.59", "7.19821, 37.4321, -5.75671, 0.96", "6.69766, 37.7161, -5.93119, 0.96", "6.16054, 37.9705, -6.17585, 0.81", "4.99021, 38.4895, -6.84595, 0.59", "4.53745, 38.7167, -7.13552, 0.81", "4.01687, 39.0061, -7.53447, 0.81", "3.69405, 39.2265, -7.80854, 0.74", "2.80254, 40.0279, -8.64333, 0.74", "2.2477, 40.7549, -9.22212, 0.74", "1.8372, 41.6726, -9.7298, 0.52", "1.69795, 42.3126, -9.99613, 0.66", "1.6744, 43.3067, -10.2393, 0.96", "1.76072, 43.9947, -10.3236, 0.88", "1.92193, 44.6142, -10.3116, 0.44", "2.14785, 45.2421, -10.24, 0.29", "2.4732, 45.9463, -10.0938, 0.29", "2.86437, 46.7253, -9.89073, 0.88", "3.09378, 47.1797, -9.75552, 1.11", "3.31529, 47.6498, -9.60358, 1.18", "3.50076, 48.1147, -9.45389, 0.88", "3.85297, 49.2619, -9.1296, 0.37", "4.00008, 49.9463, -8.97455, 0.29", "4.11464, 50.8854, -8.85525, 0.29", "4.13276, 51.5255, -8.80586, 0.29", "4.05131, 52.6478, -8.87794, 1.25", "3.95071, 53.3851, -9.01781, 1.77", "3.8929, 53.7351, -9.12818, 1.92", "3.78939, 54.432, -9.38565, 1.92", "3.71249, 55.1092, -9.66107, 1.11", "3.61312, 56.7112, -10.3737, 0.44", "3.59814, 57.4366, -10.6924, 0.66", "3.60676, 58.1987, -10.9696, 0.88", "3.62821, 58.8069, -11.157, 1.11", "3.65448, 59.2953, -11.2815, 1.11", "3.69377, 60.0244, -11.4647, 0.66", "3.74148, 61.0794, -11.6718, 0.37", "3.80077, 62.3961, -11.9201, 0.88", "3.83486, 63.034, -12.061, 1.47", "3.89087, 63.6354, -12.2124, 1.77", "3.9928, 64.3723, -12.4409, 1.92", "4.08665, 64.85, -12.6374, 2.14", "4.26237, 65.5107, -13.0282, 2.14", "4.41347, 66.2372, -13.7357, 1.62", "4.45966, 66.7177, -14.3326, 1.11", "4.44807, 67.3283, -15.1669, 0.66", "4.34317, 67.9198, -16.0298, 0.81", "4.15096, 68.4597, -16.8695, 0.66", "3.35813, 69.9365, -19.2856, 0.81", "3.0152, 70.4446, -20.0722, 0.74", "2.70783, 70.8365, -20.6437, 1.11", "2.06243, 71.5868, -21.6258, 1.62", "1.47666, 72.2328, -22.3724, 1.69", "0.821872, 72.9497, -23.0636, 1.55", "0.188591, 73.7481, -23.6438, 0.37", "-0.0168591, 74.0864, -23.8542, 0.52", "-0.236134, 74.5939, -24.1203, 0.66", "-0.378611, 75.0645, -24.3143, 0.66", "-0.525033, 75.6868, -24.5464, 0.22", "-0.730986, 76.5986, -24.9429, 0.22", "-1.07216, 77.972, -25.6651, 1.99", "-1.27829, 78.7116, -26.0775, 2.43", "-1.47005, 79.3387, -26.4367, 2.73", "-1.65318, 79.8571, -26.75, 2.95", "-2.62329, 82.1509, -28.1725, 0.52", "-3.00926, 82.8774, -28.6361, 0.59", "-3.28383, 83.3327, -28.9373, 1.11", "-3.46404, 83.629, -29.1306, 1.25", "-3.76059, 84.1542, -29.4335, 1.25", "-4.16387, 84.8998, -29.8263, 0.22", "-4.51793, 85.5538, -30.1525, 0.22", "-4.84626, 86.179, -30.4933, 0.37", "-5.16741, 86.7677, -30.8783, 0.37", "-5.70103, 87.7787, -31.5537, 1.69", "-6.09704, 88.5401, -32.0483, 2.28", "-6.34253, 88.9956, -32.3443, 2.65", "-6.66414, 89.6066, -32.7145, 2.65", "-7.14803, 90.549, -33.2605, 2.5", "-7.88752, 92.112, -34.1119, 0.29", "-8.12993, 92.7146, -34.4307, 0.29", "-8.31363, 93.3086, -34.7385, 0.29", "-8.4895, 94.0152, -35.1039, 0.74", "-8.6337, 94.6988, -35.4572, 0.96", "-8.78834, 95.499, -35.8956, 0.96", "-8.9506, 96.1239, -36.3193, 0.29", "-9.25848, 97.0232, -36.9668, 0.22", "-9.37573, 97.2794, -37.1538, 0.22", "-9.58089, 97.6191, -37.4166, 0.22", "-9.90224, 98.0883, -37.7732, 0.22", "-10.8102, 99.2988, -38.7518, 2.28", "-11.2075, 99.8174, -39.2241, 2.43", "-11.5076, 100.218, -39.6113, 2.65", "-12.7529, 101.997, -41.4145, 0.59", "-13.1035, 102.527, -41.9713, 0.52", "-13.7188, 103.505, -43.0095, 0.59", "-14.331, 104.544, -44.084, 0.37", "-14.5559, 104.966, -44.4911, 0.52", "-14.7696, 105.427, -44.8997, 0.66", "-14.9366, 105.838, -45.2171, 0.66", "-15.129, 106.37, -45.57, 0.44", "-15.541, 107.615, -46.2687, 2.14", "-15.8609, 108.582, -46.7674, 2.5", "-16.1179, 109.357, -47.1676, 1.92", "-16.6975, 111.118, -48.0656, 0.22", "-16.9342, 111.865, -48.4298, 0.22", "-17.4563, 113.602, -49.2346, 1.69", "-17.5505, 113.934, -49.3696, 2.06", "-17.7277, 114.631, -49.6043, 2.14", "-17.8156, 115.007, -49.7092, 1.62", "-18.1415, 116.577, -50.1023, 0.37", "-18.3162, 117.424, -50.3156, 0.37", "-18.5739, 118.718, -50.6304, 0.37", "-18.7712, 119.644, -50.8678, 0.37", "-19.2002, 121.607, -51.3944, 1.69", "-19.3344, 122.198, -51.5594, 1.92", "-19.4158, 122.555, -51.662, 1.92", "-19.6937, 123.771, -52.024, 0.22", "-19.8875, 124.691, -52.3075, 0.22", "-20.0171, 125.48, -52.5297, 0.37", "-20.0915, 126.074, -52.695, 0.37", "-20.1582, 126.765, -52.876, 1.33", "-20.1883, 127.27, -53.0105, 1.84", "-20.2033, 127.822, -53.1497, 1.84", "-20.2157, 129.202, -53.4724, 0.29", "-20.2364, 130.058, -53.6518, 0.44", "-20.2511, 130.457, -53.7278, 0.59", "-20.2831, 131.096, -53.8275, 0.59", "-20.3754, 132.289, -54.0159, 0.22", "-20.4671, 133.147, -54.165, 1.33", "-20.5291, 133.539, -54.2411, 1.77", "-20.5991, 133.934, -54.3127, 1.92", "-20.6782, 134.328, -54.3896, 1.4", "-21.1521, 136.204, -54.8979, 0.22", "-21.3744, 136.988, -55.1517, 0.22", "-21.7138, 138.159, -55.5707, 1.11", "-21.8733, 138.732, -55.7868, 1.55", "-22.0299, 139.327, -56.0138, 1.4", "-22.5946, 141.547, -56.8699, 0.29", "-22.7355, 142.131, -57.0771, 0.37", "-22.8567, 142.652, -57.2654, 0.44", "-22.991, 143.278, -57.4938, 0.44", "-23.1066, 143.867, -57.6946, 0.22", "-23.1866, 144.404, -57.8625, 0.22", "-23.3076, 145.581, -58.1958, 1.33", "-23.3994, 146.232, -58.4587, 1.55", "-23.4666, 146.596, -58.641, 1.55", "-23.8389, 148.201, -59.6153, 0.22", "-24.128, 149.178, -60.3498, 0.22", "-24.3044, 149.702, -60.7892, 0.66", "-24.9859, 151.424, -62.4399, 0.44", "-25.3811, 152.314, -63.4436, 1.4", "-25.7445, 153.072, -64.3513, 1.77", "-26.4494, 154.39, -66.0687, 1.33", "-26.7617, 154.929, -66.8012, 1.62", "-27.6336, 156.397, -68.8437, 0.74", "-29.0966, 158.958, -72.3872, 2.58" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "40.0766, 56.5247, -71.5879, 0.44", "41.1213, 56.7102, -72.404, 0.44", "41.7476, 56.8472, -72.9267, 0.37", "42.5133, 57.0293, -73.5825, 0.29", "42.9769, 57.1322, -74.0102, 0.59", "43.8507, 57.2758, -74.9126, 0.29", "44.4432, 57.377, -75.5432, 0.96", "44.8611, 57.488, -76.0248, 1.25", "45.2028, 57.5945, -76.4262, 1.33", "46.0403, 57.8663, -77.4094, 0.22", "47.063, 58.2143, -78.6499, 0.22", "47.5987, 58.4008, -79.3003, 0.37", "48.3439, 58.6725, -80.1912, 0.22", "48.9582, 58.9261, -80.8844, 1.18", "49.3858, 59.127, -81.3448, 1.4", "49.7742, 59.3335, -81.72, 1.4", "50.3324, 59.6477, -82.2, 0.44", "51.037, 60.0041, -82.7646, 0.22", "51.443, 60.1973, -83.0824, 0.52", "51.7586, 60.349, -83.3399, 0.52", "52.7603, 60.8614, -84.1532, 0.22", "53.3826, 61.1759, -84.6531, 0.81", "53.9987, 61.4614, -85.1848, 1.25", "54.73, 61.7614, -85.8253, 1.25", "55.8744, 62.1642, -86.8069, 0.22", "56.4166, 62.3394, -87.2766, 0.59", "56.8434, 62.4625, -87.6473, 0.74", "58.2631, 62.76, -88.8756, 0.22", "58.9877, 62.8686, -89.4903, 0.22", "60.0767, 62.9778, -90.3442, 1.25", "60.6698, 63.0143, -90.7988, 1.62", "60.8812, 63.0282, -90.9673, 1.62", "62.8003, 63.1697, -92.4939, 0.22", "63.3397, 63.2034, -92.916, 0.22", "64.2122, 63.2381, -93.6265, 1.03", "64.7908, 63.2377, -94.1085, 1.25", "66.1158, 63.2033, -95.2045, 0.22", "66.6516, 63.1802, -95.6721, 0.22", "67.0518, 63.1587, -96.0486, 0.66", "68.0359, 63.058, -97.0543, 0.22", "68.6639, 62.9596, -97.7763, 0.22", "69.1667, 62.8588, -98.3906, 0.74", "69.6197, 62.7743, -98.9756, 0.96", "70.4032, 62.6745, -100.018, 0.22", "71.3215, 62.6166, -101.221, 1.33", "71.8202, 62.6129, -101.85, 1.77", "72.0923, 62.6271, -102.179, 1.77", "73.71, 62.756, -104.021, 0.22", "74.0613, 62.7897, -104.397, 0.22", "74.481, 62.8422, -104.836, 0.74", "74.854, 62.9021, -105.214, 0.74", "75.8291, 63.0641, -106.185, 0.22", "76.314, 63.1515, -106.681, 1.03", "76.6666, 63.2274, -107.057, 1.33", "77.0737, 63.3384, -107.482, 1.47", "78.3324, 63.7321, -108.743, 0.15", "78.704, 63.863, -109.088, 0.29", "79.0756, 64.0136, -109.382, 0.29", "79.9667, 64.3979, -109.91, 0.15", "80.7214, 64.7598, -110.23, 0.66", "81.0258, 64.9174, -110.319, 0.74", "81.2641, 65.0515, -110.356, 0.74", "82.4572, 65.6878, -110.492, 0.15", "83.7058, 66.3343, -110.611, 0.15", "84.5802, 66.7743, -110.689, 1.03", "84.9951, 66.9807, -110.735, 1.18", "85.2955, 67.123, -110.777, 1.18", "86.9428, 67.8589, -111.057, 0.15", "87.5684, 68.1302, -111.194, 0.81", "87.9836, 68.3161, -111.313, 1.11", "88.3455, 68.4803, -111.426, 1.11", "90.9065, 69.69, -112.336, 0.22", "91.7386, 70.0918, -112.627, 0.88", "92.2465, 70.3507, -112.798, 0.74", "93.5586, 71.0149, -113.189, 0.22", "94.0675, 71.2706, -113.321, 0.59", "94.6529, 71.577, -113.45, 0.74", "96.1292, 72.4239, -113.685, 0.22", "96.8118, 72.8015, -113.768, 1.47", "97.5175, 73.1622, -113.826, 1.77", "97.9968, 73.3832, -113.859, 1.77", "99.9346, 74.2497, -113.952, 0.22", "100.798, 74.6329, -113.989, 0.66", "101.372, 74.8896, -114.034, 0.88", "102.563, 75.4042, -114.09, 0.22", "103.144, 75.6626, -114.11, 0.44", "104.34, 76.2056, -114.109, 0.22", "104.517, 76.2862, -114.099, 0.81", "104.855, 76.4695, -114.08, 0.81", "106.427, 77.5541, -114.018, 0.22", "107.172, 78.1275, -114.021, 1.03", "107.418, 78.3246, -114.032, 1.33", "107.798, 78.6277, -114.069, 1.33", "109.699, 80.087, -114.448, 0.22", "110.61, 80.7338, -114.732, 0.22", "111.58, 81.3366, -115.145, 1.03", "112.001, 81.554, -115.355, 1.33", "112.361, 81.6976, -115.55, 1.33", "113.973, 82.1572, -116.466, 0.22", "115.074, 82.3427, -117.115, 0.22", "116.126, 82.4653, -117.706, 0.74", "116.74, 82.5309, -118.011, 0.88", "118.101, 82.6692, -118.568, 0.22", "118.776, 82.732, -118.78, 0.22", "119.126, 82.7616, -118.842, 0.66", "119.421, 82.7744, -118.891, 0.66", "120.649, 82.7913, -119.124, 0.22", "121.418, 82.7882, -119.29, 0.88", "121.611, 82.7839, -119.339, 1.18", "121.835, 82.7748, -119.405, 1.18", "123.862, 82.6579, -120.013, 0.22", "124.752, 82.6012, -120.284, 0.44", "125.104, 82.581, -120.392, 0.29", "125.683, 82.5817, -120.645, 0.29", "126.63, 82.6699, -121.164, 0.96", "127.08, 82.7483, -121.475, 1.18", "127.432, 82.8362, -121.756, 1.18", "127.742, 82.9153, -122.01, 0.88", "129.85, 83.4995, -123.874, 0.22", "130.236, 83.6191, -124.249, 0.81", "130.587, 83.7357, -124.611, 0.81", "131.695, 84.0223, -125.702, 0.22", "132.2, 84.1367, -126.19, 0.22", "133.058, 84.3031, -126.985, 1.03", "133.572, 84.3932, -127.43, 1.11", "134.947, 84.6546, -128.72, 0.22", "135.8, 84.8584, -129.576, 0.22", "136.634, 85.0885, -130.518, 0.96", "137.072, 85.2105, -131.035, 1.18", "138.457, 85.6295, -132.746, 0.22", "139.096, 85.8519, -133.587, 0.22", "139.675, 86.0914, -134.413, 1.11", "140.066, 86.2868, -135.049, 1.33", "140.166, 86.3346, -135.228, 1.47", "140.616, 86.5671, -136.142, 1.18", "141.229, 86.9343, -137.621, 0.15", "141.487, 87.0881, -138.286, 0.59", "141.881, 87.3055, -139.339, 0.81", "142.425, 87.6034, -140.776, 0.22", "142.75, 87.81, -141.687, 1.03", "142.998, 88.0009, -142.454, 1.25", "143.482, 88.6394, -144.49, 0.22", "143.671, 88.9692, -145.381, 0.37", "143.828, 89.3169, -146.205, 0.15", "144.009, 89.8374, -147.34, 0.59", "144.081, 90.1541, -148.09, 0.59", "144.244, 91.0123, -150.369, 0.22", "144.302, 91.2717, -151.105, 0.22", "144.487, 91.8577, -152.953, 1.25", "144.549, 91.9768, -153.4, 1.92", "145.202, 92.9899, -157.914, 0.52", "145.466, 93.3704, -159.835, 0.29", "145.594, 93.5655, -160.853, 0.96", "145.716, 93.7987, -161.948, 1.18", "145.933, 94.261, -163.791, 0.81", "146.276, 95.1759, -166.902, 1.69", "146.424, 95.7038, -168.304, 1.92", "146.666, 97.0546, -171.309, 0.22", "146.703, 97.4585, -172.072, 0.22", "146.727, 98.0559, -173.011, 1.33", "146.721, 99.0706, -174.335, 1.33", "146.628, 100.732, -176.197, 0.22", "146.518, 101.463, -176.963, 0.22", "146.221, 102.46, -178.074, 0.22", "145.824, 103.407, -179.298, 1.4", "145.622, 103.786, -179.859, 1.62", "144.662, 105.311, -182.511, 0.22", "144.165, 106.031, -183.889, 0.96", "143.304, 107.251, -186.413, 1.55", "142.615, 108.261, -188.645, 2.21", "142.16, 108.961, -190.265, 2.43", "141.127, 110.77, -194.57, 0.81", "140.93, 111.193, -195.583, 0.29", "140.697, 111.849, -197.121, 0.74", "140.43, 113.154, -200.002, 0.81", "140.412, 113.482, -200.712, 0.96", "140.507, 114.456, -202.878, 0.22", "140.594, 114.75, -203.577, 0.52", "140.674, 114.951, -204.078, 0.59", "140.939, 115.445, -205.329, 0.22", "141.323, 116.052, -206.971, 1.47", "141.496, 116.387, -207.849, 1.69", "141.795, 117.245, -210.024, 0.37", "141.85, 117.554, -210.775, 0.88", "141.856, 117.896, -211.577, 1.11", "141.653, 119.074, -214.333, 0.22", "141.566, 119.448, -215.246, 0.37", "141.326, 120.32, -217.344, 0.22", "141.04, 121.112, -219.325, 1.47", "140.822, 121.638, -220.682, 1.69", "140.423, 122.577, -223.02, 1.77", "140.18, 123.101, -224.375, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "40.0766, 56.5247, -71.5879, 0.29", "41.0751, 57.9496, -72.4989, 0.29", "41.5849, 58.6351, -72.9255, 0.29", "42.18, 59.4216, -73.4118, 0.81", "42.5799, 59.9268, -73.7216, 0.96", "43.3174, 60.8127, -74.2668, 0.22", "43.8088, 61.3778, -74.6159, 0.44", "44.0613, 61.6351, -74.7847, 0.44", "44.6371, 62.1341, -75.1169, 0.22", "45.2489, 62.5603, -75.4371, 1.03", "45.5567, 62.7412, -75.5712, 1.33", "45.8265, 62.8728, -75.673, 1.55", "46.4788, 63.1382, -75.8608, 1.25", "47.5442, 63.514, -76.0858, 0.15", "48.1956, 63.7236, -76.1664, 0.74", "49.0663, 64.0087, -76.2053, 1.11", "49.5532, 64.185, -76.25, 1.18", "50.1513, 64.4232, -76.3448, 0.88", "51.1912, 64.8781, -76.5506, 0.15", "51.7724, 65.1542, -76.7234, 0.37", "52.1923, 65.3659, -76.9012, 0.52", "53.6603, 66.1276, -77.7672, 0.22", "54.3304, 66.4811, -78.2253, 1.25", "54.7592, 66.7025, -78.552, 1.77", "55.1069, 66.8746, -78.84, 1.77", "55.4122, 67.0245, -79.0988, 1.55", "56.5361, 67.5781, -80.0155, 0.22", "56.9628, 67.7935, -80.3211, 0.37", "57.3663, 68.0245, -80.6334, 0.37", "58.1098, 68.489, -81.23, 0.15", "58.6292, 68.8798, -81.6459, 0.96", "58.8303, 69.0624, -81.8132, 1.11", "58.9944, 69.2438, -81.9567, 1.11", "59.9699, 70.4464, -82.8045, 0.22", "60.3924, 71.0077, -83.1765, 0.22", "60.9179, 71.7378, -83.6319, 0.22", "61.2582, 72.228, -83.9429, 0.22", "61.7495, 72.9835, -84.3993, 1.18", "61.9569, 73.3144, -84.5889, 1.84", "62.1775, 73.7026, -84.7989, 1.84", "62.3058, 73.935, -84.9277, 1.84", "63.1105, 75.3726, -85.7921, 0.22", "63.4999, 76.1369, -86.2408, 0.81", "63.6376, 76.4499, -86.4136, 1.11", "63.8485, 76.9751, -86.6826, 1.11", "63.9538, 77.2554, -86.8151, 0.74", "64.2783, 78.1051, -87.2024, 0.29", "64.4785, 78.6144, -87.4152, 0.44", "64.6813, 79.0705, -87.6161, 0.44", "64.9335, 79.576, -87.8346, 0.22", "65.1478, 79.9644, -87.9909, 0.22", "65.6959, 80.9161, -88.3611, 1.18", "65.8854, 81.2277, -88.4768, 1.4", "66.0876, 81.5673, -88.6101, 1.4", "66.3792, 82.0574, -88.8101, 0.88", "66.6185, 82.4618, -88.9462, 0.37", "67.0558, 83.215, -89.1448, 0.22", "67.3564, 83.737, -89.2385, 0.29", "67.6526, 84.2489, -89.3097, 0.29", "68.2682, 85.3052, -89.428, 0.22", "68.7984, 86.2201, -89.5211, 0.22", "69.2525, 87.0405, -89.5966, 1.33", "69.5398, 87.5767, -89.6408, 1.55", "70.4218, 89.2979, -89.7822, 0.22", "70.7553, 89.996, -89.8708, 0.22", "71.1739, 90.9675, -90.0278, 0.22", "71.646, 92.1554, -90.2754, 1.55", "71.7842, 92.5149, -90.362, 1.84", "71.9244, 92.8968, -90.4652, 1.84", "72.5142, 94.5709, -90.9663, 0.22", "72.7269, 95.1821, -91.1782, 0.44", "72.9652, 95.7887, -91.4203, 0.59", "73.4671, 96.9645, -91.9258, 0.29", "73.6826, 97.4704, -92.1395, 1.18", "73.9022, 97.9716, -92.3367, 1.4", "74.1069, 98.413, -92.4942, 1.4", "74.7928, 99.788, -92.965, 0.22", "75.0612, 100.27, -93.1092, 0.22", "75.2961, 100.653, -93.1965, 0.44", "75.6132, 101.172, -93.2715, 0.22", "75.7639, 101.438, -93.2866, 0.22", "76.1441, 102.146, -93.2935, 1.11", "76.3805, 102.621, -93.29, 1.33", "76.4159, 102.686, -93.2923, 1.55", "77.0798, 103.781, -93.4145, 0.22", "77.328, 104.171, -93.4536, 0.22", "77.6041, 104.58, -93.4774, 0.44", "77.83, 104.9, -93.4773, 0.44", "78.404, 105.726, -93.458, 0.22", "78.8756, 106.404, -93.4358, 0.22", "79.5156, 107.327, -93.3962, 1.18", "79.7935, 107.778, -93.3804, 1.33", "80.1045, 108.327, -93.3194, 1.11", "80.5986, 109.299, -93.1637, 0.22", "80.7285, 109.584, -93.1085, 0.44", "80.9559, 110.076, -93.0065, 0.44", "81.2913, 110.721, -92.8964, 0.22", "82.0617, 111.931, -92.7249, 0.22", "82.4402, 112.414, -92.6763, 1.11", "82.8015, 112.828, -92.6408, 1.55", "83.2186, 113.304, -92.6252, 1.62", "83.5781, 113.696, -92.6278, 1.25", "84.5644, 114.717, -92.6792, 0.22", "85.2427, 115.428, -92.7722, 0.22", "85.6699, 115.881, -92.8322, 0.22", "86.3211, 116.611, -92.9303, 0.44", "86.6949, 117.069, -92.9943, 0.44", "87.135, 117.634, -93.0708, 0.22", "87.5039, 118.106, -93.1328, 0.22", "87.9181, 118.6, -93.2084, 0.59", "88.1333, 118.837, -93.2621, 0.59", "88.5938, 119.347, -93.4087, 0.22", "89.1457, 119.992, -93.6168, 0.74", "89.3914, 120.273, -93.7158, 0.88", "89.7989, 120.705, -93.8901, 0.52", "90.4987, 121.397, -94.2094, 0.22", "91.0919, 122.009, -94.5385, 0.22", "91.7282, 122.711, -94.9485, 1.11", "92.0446, 123.096, -95.1913, 1.47", "92.3486, 123.512, -95.4668, 1.55", "93.1122, 124.743, -96.3337, 0.22", "93.6819, 125.808, -97.1087, 0.96", "93.8376, 126.13, -97.349, 1.4", "94.0658, 126.677, -97.7645, 1.25", "94.2282, 127.11, -98.0831, 0.88", "94.6108, 128.198, -98.8429, 0.22", "94.7928, 128.787, -99.2401, 0.37", "94.983, 129.382, -99.6146, 0.22", "95.2834, 130.285, -100.198, 0.52", "95.444, 130.78, -100.507, 0.66", "95.7167, 131.718, -101.097, 0.22", "95.8839, 132.399, -101.523, 0.66", "95.9224, 132.602, -101.648, 0.66", "96.0972, 133.908, -102.415, 0.22", "96.1575, 134.522, -102.724, 0.59", "96.2364, 135.989, -103.348, 0.22", "96.2495, 136.511, -103.526, 0.22", "96.2597, 137.397, -103.779, 1.47", "96.2468, 137.817, -103.876, 1.69", "96.1122, 139.584, -104.153, 0.22", "95.995, 140.75, -104.31, 0.22", "95.8867, 141.604, -104.394, 0.74", "95.8227, 142.078, -104.439, 0.88", "95.6036, 143.584, -104.585, 0.22", "95.4085, 144.819, -104.72, 1.25", "95.3184, 145.351, -104.796, 1.25", "95.2334, 145.885, -104.883, 0.74", "95.0893, 146.859, -105.05, 0.22", "94.9568, 147.987, -105.237, 1.4", "94.9191, 148.406, -105.306, 1.62", "94.8074, 149.793, -105.526, 0.22", "94.7586, 150.645, -105.645, 0.59", "94.7515, 150.967, -105.668, 0.59", "94.7506, 152.338, -105.686, 0.15", "94.7722, 153.124, -105.646, 0.15", "94.8028, 153.833, -105.573, 0.15", "94.8432, 154.742, -105.455, 0.15", "94.9346, 156.579, -105.214, 1.18", "94.9381, 156.902, -105.186, 1.47", "94.9158, 157.392, -105.179, 1.11", "94.7891, 158.579, -105.238, 0.22", "94.6461, 159.449, -105.341, 0.96", "94.5155, 160.019, -105.459, 0.96", "94.1514, 161.498, -106.028, 0.22", "93.9164, 162.583, -106.513, 0.22", "93.7393, 163.508, -106.964, 1.18", "93.683, 163.835, -107.134, 1.4", "93.6016, 164.464, -107.451, 1.55", "93.3665, 167.03, -108.741, 0.22", "93.3124, 168.338, -109.402, 0.22", "93.3075, 169.225, -109.864, 0.81", "93.3112, 169.431, -109.975, 1.03", "93.3366, 170.7, -110.651, 0.22", "93.3531, 171.264, -110.935, 0.66", "93.3592, 171.741, -111.162, 0.66", "93.3573, 172.573, -111.6, 0.15", "93.3559, 173.555, -112.081, 1.25", "93.3507, 174.069, -112.301, 1.4", "93.333, 175.224, -112.743, 0.15", "93.3252, 175.932, -112.975, 0.37", "93.3266, 176.267, -113.07, 0.37", "93.3497, 178.087, -113.541, 0.22", "93.3779, 179.076, -113.779, 1.03", "93.3952, 179.511, -113.875, 1.18", "93.4045, 179.75, -113.925, 1.18", "93.4819, 181.387, -114.233, 0.22", "93.5195, 182.059, -114.369, 0.52", "93.5434, 182.373, -114.434, 0.52", "93.6707, 183.692, -114.686, 0.22", "93.7583, 184.461, -114.816, 0.22", "93.8831, 185.33, -114.951, 1.11", "93.9952, 186.009, -115.045, 1.11", "94.321, 187.717, -115.276, 0.22", "94.5383, 188.725, -115.423, 0.22", "94.7593, 189.602, -115.563, 1.03", "94.9132, 190.187, -115.665, 1.47", "95.032, 190.644, -115.748, 1.11", "95.3458, 191.884, -115.919, 0.15", "95.4594, 192.331, -115.981, 0.37", "95.7176, 193.349, -116.129, 0.22", "95.853, 193.887, -116.193, 0.37", "95.9259, 194.186, -116.231, 0.37", "96.2997, 195.596, -116.44, 0.22", "96.5345, 196.449, -116.574, 0.81", "96.6827, 196.958, -116.658, 1.03", "97.0883, 198.262, -116.895, 0.15", "97.3335, 199.002, -117.04, 0.29", "97.5519, 199.683, -117.19, 0.22", "97.7373, 200.312, -117.346, 0.88", "97.8337, 200.68, -117.422, 1.11", "97.9132, 201.062, -117.487, 1.11", "98.1152, 202.48, -117.682, 0.22", "98.1837, 203.261, -117.75, 1.03", "98.2006, 203.657, -117.776, 1.25", "98.2283, 205.0, -117.852, 0.22", "98.2257, 206.12, -117.9, 0.88", "98.2098, 207.216, -117.934, 0.29", "98.1842, 208.102, -117.951, 0.96", "98.1699, 208.521, -117.957, 0.96", "98.1341, 209.296, -117.964, 0.22", "98.0905, 209.929, -117.963, 0.37", "98.0203, 210.822, -117.965, 0.22", "97.9517, 211.605, -117.968, 0.52", "97.8305, 213.173, -117.99, 0.22", "97.7673, 213.884, -118.01, 0.81", "97.6838, 214.745, -118.047, 0.22", "97.623, 215.391, -118.083, 0.88", "97.584, 215.936, -118.129, 1.03", "97.4904, 217.99, -118.35, 0.22", "97.4817, 218.695, -118.44, 0.22", "97.4948, 219.478, -118.548, 0.81", "97.5069, 219.805, -118.594, 1.03", "97.5881, 221.459, -118.857, 0.22", "97.6071, 221.841, -118.912, 0.29", "97.6543, 222.898, -119.044, 0.15", "97.6829, 223.465, -119.102, 0.29", "97.7113, 224.251, -119.175, 0.88", "97.7119, 224.918, -119.236, 0.88", "97.7225, 226.209, -119.261, 0.22", "97.7298, 226.763, -119.248, 0.22", "97.7234, 227.42, -119.218, 0.88", "97.7237, 227.856, -119.179, 1.11", "97.7386, 228.358, -119.117, 1.11", "97.9033, 230.006, -118.852, 0.22", "98.0673, 230.974, -118.706, 0.22", "98.2336, 231.674, -118.582, 0.22", "98.5123, 232.58, -118.403, 0.81", "98.6463, 232.945, -118.329, 1.03", "99.3264, 233.824, -117.64, 0.22", "99.6449, 234.11, -117.257, 0.22", "100.251, 234.51, -116.544, 1.11", "100.519, 234.658, -116.243, 1.25", "100.807, 234.797, -115.93, 1.25", "105.032, 236.682, -111.46, 0.66", "105.629, 236.932, -110.839, 0.88", "106.613, 237.303, -109.806, 0.29", "107.162, 237.489, -109.227, 0.22", "107.566, 237.624, -108.802, 0.44", "107.94, 237.746, -108.437, 0.22", "108.582, 238.138, -108.379, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-29.0966, 158.958, -72.3872, 1.77", "-28.2756, 159.824, -75.0773, 1.77", "-27.5491, 160.848, -77.5621, 1.47", "-27.1783, 161.513, -78.9502, 1.18", "-26.8344, 162.272, -80.4053, 1.11", "-26.5349, 163.058, -81.8367, 0.88", "-26.4327, 163.381, -82.4135, 0.66", "-26.3096, 164.078, -83.514, 0.96", "-26.267, 164.92, -84.718, 1.11", "-26.2807, 165.627, -85.7831, 1.33", "-26.2988, 165.976, -86.3689, 1.62", "-26.3827, 166.806, -87.9092, 1.47", "-26.5898, 168.248, -90.8164, 0.96", "-26.7273, 168.93, -92.2415, 0.96", "-26.9472, 169.834, -94.1159, 1.55", "-27.1579, 170.694, -95.8948, 1.33", "-27.317, 171.391, -97.3223, 1.62", "-27.5283, 172.322, -99.1852, 1.11", "-27.6059, 172.64, -99.8127, 0.59", "-27.8654, 173.7, -101.876, 0.88", "-28.0734, 174.532, -103.415, 1.25", "-28.2633, 175.265, -104.713, 1.4", "-28.4953, 176.157, -106.252, 0.52", "-28.7318, 177.017, -107.666, 0.59", "-28.8708, 177.514, -108.507, 0.37", "-28.9623, 177.775, -108.95, 0.59", "-29.1693, 178.289, -109.822, 0.44", "-29.4791, 179.012, -111.035, 0.37", "-29.8363, 179.863, -112.418, 1.47", "-30.3241, 181.018, -114.233, 1.84", "-30.8446, 182.207, -116.047, 0.52", "-31.2041, 182.975, -117.166, 0.52", "-31.4285, 183.407, -117.764, 1.18", "-31.6606, 183.777, -118.26, 1.18", "-32.5511, 184.979, -119.787, 0.22", "-32.775, 185.249, -120.088, 0.37", "-33.2001, 185.725, -120.615, 0.96", "-33.7485, 186.31, -121.283, 1.25", "-34.8591, 187.441, -122.664, 0.22", "-35.1111, 187.698, -123.019, 0.37", "-35.3267, 187.927, -123.354, 0.37", "-36.0554, 188.809, -124.717, 1.11", "-36.232, 189.047, -125.094, 1.55", "-36.3718, 189.255, -125.415, 1.69", "-37.3258, 190.855, -127.94, 0.29", "-37.4981, 191.211, -128.529, 0.29", "-37.8207, 192.087, -129.958, 1.03", "-37.9037, 192.426, -130.498, 0.81", "-37.9451, 192.834, -131.126, 1.11", "-37.941, 193.716, -132.417, 1.33", "-37.7698, 195.451, -134.853, 0.59", "-37.6925, 196.069, -135.722, 1.18", "-37.5836, 196.832, -136.796, 1.33", "-37.3302, 198.447, -139.029, 0.52", "-37.2284, 199.06, -139.84, 0.81", "-37.1221, 199.779, -140.748, 0.81", "-36.9902, 200.827, -142.006, 0.37", "-36.9362, 201.348, -142.65, 0.37", "-36.9012, 201.766, -143.169, 0.22", "-36.8346, 202.667, -144.275, 1.18", "-36.7129, 204.223, -146.135, 1.33", "-36.624, 205.187, -147.251, 0.44", "-36.44, 206.406, -148.651, 0.74", "-36.1731, 207.752, -150.177, 0.52", "-35.9949, 208.42, -150.953, 0.66", "-35.8232, 208.895, -151.508, 1.47", "-35.5045, 209.595, -152.301, 1.55", "-34.5585, 211.339, -154.349, 0.96", "-34.0931, 212.05, -155.147, 0.37", "-33.1819, 213.308, -156.584, 0.29", "-32.7068, 213.962, -157.358, 0.81", "-32.4188, 214.389, -157.876, 1.25", "-31.9515, 215.203, -158.836, 1.25", "-31.622, 215.81, -159.635, 0.59", "-31.0231, 216.738, -161.16, 0.44", "-30.4544, 217.421, -162.582, 0.74", "-29.7913, 218.039, -164.191, 1.03", "-29.3738, 218.285, -165.08, 1.25", "-27.7572, 218.791, -168.085, 0.74", "-26.6595, 218.871, -169.896, 0.22", "-25.7368, 218.729, -171.111, 0.96", "-25.5049, 218.657, -171.365, 0.96", "-24.519, 218.236, -172.282, 0.29", "-23.9828, 217.963, -172.677, 0.52", "-23.3076, 217.596, -173.02, 0.22", "-22.537, 217.215, -173.334, 0.22", "-22.0381, 216.983, -173.496, 0.96", "-21.6506, 216.813, -173.596, 0.96", "-19.8262, 216.041, -173.903, 0.22", "-19.166, 215.772, -173.954, 0.44", "-18.6441, 215.567, -173.938, 0.44", "-17.5164, 215.111, -173.778, 0.15", "-16.6051, 214.743, -173.645, 0.15", "-15.9102, 214.475, -173.57, 0.22", "-15.3853, 214.288, -173.552, 0.81", "-14.5062, 213.962, -173.511, 1.11", "-14.1311, 213.82, -173.522, 1.11", "-12.2567, 213.199, -174.203, 0.15", "-11.5632, 213.033, -174.774, 0.37", "-11.2394, 212.97, -175.125, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-29.0966, 158.958, -72.3872, 0.29", "-30.3616, 160.486, -71.9258, 0.29", "-31.209, 161.484, -71.663, 0.22", "-31.5351, 161.859, -71.5777, 0.74", "-31.8568, 162.23, -71.5177, 0.74", "-32.449, 162.899, -71.4369, 0.22", "-33.0747, 163.592, -71.3831, 0.37", "-33.5686, 164.115, -71.3862, 0.22", "-34.1289, 164.685, -71.4186, 0.52", "-34.6635, 165.2, -71.4882, 0.52", "-35.326, 165.803, -71.6365, 0.22", "-35.7405, 166.143, -71.7735, 0.22", "-36.4371, 166.658, -72.0187, 1.47", "-36.8179, 166.926, -72.1412, 1.92", "-37.4534, 167.353, -72.3286, 2.06", "-38.0616, 167.755, -72.4845, 1.69", "-39.4328, 168.683, -72.8176, 0.44", "-40.3577, 169.321, -73.0053, 0.22", "-41.0416, 169.809, -73.1358, 0.52", "-41.4685, 170.121, -73.2136, 0.66", "-42.5004, 170.927, -73.4784, 0.22", "-42.9708, 171.324, -73.6228, 0.22", "-43.658, 171.965, -73.8676, 1.47", "-44.1019, 172.41, -74.0655, 1.77", "-44.6321, 172.977, -74.3299, 1.99", "-46.5417, 175.152, -75.4326, 0.22", "-47.2919, 176.067, -75.9163, 0.22", "-47.7728, 176.675, -76.2475, 0.96", "-48.2799, 177.337, -76.6078, 1.03", "-48.8858, 178.143, -77.0188, 0.22", "-49.5338, 179.039, -77.4305, 0.22", "-49.8679, 179.513, -77.6366, 0.81", "-50.2007, 179.973, -77.8668, 0.96", "-50.9219, 180.901, -78.3995, 0.22", "-51.3552, 181.419, -78.7153, 0.22", "-52.0447, 182.21, -79.2411, 1.11", "-52.362, 182.569, -79.4842, 1.4", "-52.702, 182.94, -79.7534, 1.4", "-53.8663, 184.163, -80.682, 0.22", "-54.3885, 184.681, -81.0791, 0.22", "-55.1638, 185.397, -81.6319, 0.96", "-55.6241, 185.795, -81.9578, 1.18", "-56.6732, 186.623, -82.7046, 0.22", "-57.1171, 186.95, -83.0175, 0.22", "-57.8944, 187.489, -83.5585, 1.55", "-58.3021, 187.768, -83.8391, 1.99", "-59.1311, 188.35, -84.4136, 1.99", "-60.9181, 189.697, -85.7061, 0.22", "-61.2603, 189.982, -85.9748, 0.44", "-61.4268, 190.148, -86.1155, 0.44", "-61.9459, 190.785, -86.5864, 0.22", "-62.698, 191.924, -87.2401, 1.25", "-63.064, 192.599, -87.5309, 1.62", "-63.2781, 193.087, -87.7028, 1.62", "-63.8685, 194.446, -88.1473, 0.22", "-64.1768, 195.163, -88.3754, 0.22", "-64.4901, 195.922, -88.6087, 0.29", "-64.8441, 196.768, -88.8256, 0.66", "-65.064, 197.28, -88.945, 0.66", "-65.5246, 198.276, -89.1718, 0.22", "-66.2319, 199.638, -89.507, 1.55", "-66.6082, 200.331, -89.6908, 1.77", "-66.9388, 200.968, -89.8725, 1.92" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-66.9388, 200.968, -89.8725, 0.22", "-67.5461, 202.843, -90.8036, 0.22", "-67.686, 203.24, -90.9542, 0.44", "-67.7663, 203.445, -91.0202, 0.44", "-68.0474, 204.106, -91.2135, 0.22", "-68.2628, 204.589, -91.3392, 0.59", "-68.4682, 205.029, -91.4494, 0.59", "-68.9466, 205.911, -91.6089, 0.22", "-69.175, 206.293, -91.6858, 0.22", "-69.6448, 207.05, -91.8277, 1.11", "-69.839, 207.346, -91.88, 1.33", "-70.0304, 207.63, -91.9509, 1.33", "-70.898, 208.952, -92.3469, 0.22", "-71.3224, 209.651, -92.5962, 0.22", "-71.7376, 210.383, -92.9034, 1.33", "-71.9695, 210.788, -93.1328, 1.69", "-72.7743, 212.113, -94.1241, 0.22", "-73.059, 212.573, -94.5252, 0.22", "-73.3995, 213.1, -95.0962, 1.11", "-73.6974, 213.534, -95.6905, 1.4", "-74.326, 214.398, -97.1496, 1.11", "-74.8403, 215.019, -98.4188, 1.03", "-74.9957, 215.188, -98.8041, 1.55", "-75.4325, 215.631, -99.8702, 1.69", "-76.0564, 216.227, -101.34, 0.74", "-76.7922, 216.943, -103.048, 1.4", "-77.7366, 217.961, -105.237, 1.18", "-78.127, 218.396, -106.124, 1.55", "-78.4562, 218.773, -106.832, 1.69", "-79.2938, 219.822, -108.513, 1.18", "-79.6719, 220.328, -109.217, 0.59", "-80.4497, 221.525, -110.641, 1.33", "-80.7704, 222.12, -111.26, 1.77", "-81.1868, 223.007, -112.134, 0.52", "-81.4378, 223.62, -112.711, 1.25", "-81.752, 224.467, -113.451, 1.11", "-82.1951, 225.646, -114.438, 0.22", "-82.5296, 226.484, -115.137, 0.22", "-82.8957, 227.364, -115.839, 1.55", "-83.1922, 228.015, -116.334, 1.69", "-83.9064, 229.424, -117.371, 0.15", "-84.2279, 230.005, -117.768, 0.81", "-84.5908, 230.598, -118.132, 1.03", "-85.2571, 231.648, -118.685, 0.22", "-85.6873, 232.316, -118.981, 1.03", "-86.0333, 232.867, -119.152, 1.47", "-86.4317, 233.519, -119.288, 1.47", "-87.1717, 234.726, -119.482, 0.22", "-87.4798, 235.227, -119.544, 0.74", "-87.6992, 235.58, -119.582, 0.88", "-88.6518, 237.139, -119.731, 0.22", "-89.1641, 237.995, -119.802, 1.11", "-89.4452, 238.47, -119.842, 1.4", "-90.0717, 239.518, -119.974, 0.22", "-90.2724, 239.875, -120.027, 0.52", "-90.5908, 240.495, -120.143, 0.22", "-90.8317, 241.043, -120.279, 0.52", "-90.9191, 241.277, -120.336, 0.52", "-91.1496, 241.98, -120.491, 0.22", "-91.4024, 242.794, -120.676, 1.33", "-91.5965, 243.363, -120.859, 1.55", "-91.9569, 244.461, -121.266, 0.22", "-92.2505, 245.327, -121.631, 0.22", "-92.5671, 246.146, -122.138, 1.47", "-92.7568, 246.656, -122.499, 1.69", "-93.3284, 248.384, -123.748, 0.22", "-93.5976, 249.27, -124.414, 1.99", "-93.7693, 249.848, -124.873, 2.36", "-94.6856, 252.939, -127.429, 0.22", "-95.0507, 254.181, -128.428, 0.44", "-95.3437, 255.209, -129.197, 0.22", "-95.8618, 257.056, -130.401, 1.84", "-96.009, 257.564, -130.69, 2.28", "-96.1531, 258.075, -130.925, 2.28", "-96.773, 260.092, -131.638, 0.22", "-96.9732, 260.65, -131.83, 0.74", "-97.6877, 262.487, -132.435, 0.22", "-97.9652, 263.275, -132.643, 0.74", "-98.1096, 263.711, -132.754, 0.81", "-98.8011, 265.866, -133.308, 0.15", "-99.0517, 266.619, -133.537, 1.11", "-99.3245, 267.402, -133.8, 1.11", "-100.006, 269.257, -134.488, 0.22", "-100.205, 269.789, -134.684, 0.66", "-100.359, 270.201, -134.822, 0.81", "-100.854, 271.469, -135.162, 0.22", "-101.131, 272.027, -135.316, 1.11", "-101.372, 272.392, -135.42, 1.33", "-102.019, 273.081, -135.657, 0.22", "-102.337, 273.375, -135.766, 0.66", "-102.622, 273.605, -135.851, 0.88", "-103.87, 274.499, -136.173, 0.22", "-104.685, 275.043, -136.395, 0.22", "-105.087, 275.301, -136.502, 0.96", "-105.611, 275.63, -136.641, 1.11", "-106.278, 276.079, -136.81, 0.22", "-106.699, 276.398, -136.893, 0.59", "-106.837, 276.524, -136.901, 0.59", "-107.17, 276.882, -136.885, 0.22", "-107.502, 277.275, -136.866, 0.44", "-107.663, 277.474, -136.856, 0.52", "-108.333, 278.346, -136.844, 0.15", "-108.55, 278.634, -136.846, 0.44", "-109.243, 279.54, -136.879, 0.22", "-109.629, 280.037, -136.924, 0.44", "-109.817, 280.28, -136.951, 0.44", "-110.121, 280.695, -136.999, 0.22", "-110.409, 281.106, -137.043, 0.59", "-110.786, 281.644, -137.096, 0.59", "-111.276, 282.346, -137.165, 0.22", "-111.713, 282.99, -137.249, 0.22", "-112.195, 283.711, -137.368, 0.81", "-112.319, 283.899, -137.407, 0.81", "-112.616, 284.352, -137.53, 0.22", "-112.928, 284.846, -137.673, 0.44", "-113.674, 286.056, -138.052, 0.22", "-113.866, 286.365, -138.157, 0.96", "-114.24, 286.953, -138.366, 1.11", "-115.306, 288.618, -138.942, 0.22", "-115.782, 289.377, -139.193, 0.22", "-115.95, 289.652, -139.278, 0.74", "-116.165, 290.014, -139.381, 0.96", "-116.409, 290.426, -139.495, 1.18", "-116.584, 290.724, -139.586, 1.18", "-117.202, 291.82, -139.941, 0.15", "-117.477, 292.287, -140.114, 0.52", "-117.583, 292.47, -140.187, 0.81", "-117.72, 292.731, -140.29, 0.81", "-118.291, 293.891, -140.749, 0.22", "-118.594, 294.551, -141.003, 0.96", "-118.787, 295.022, -141.171, 1.47", "-119.269, 296.361, -141.624, 0.22", "-119.54, 297.211, -141.907, 0.22", "-119.804, 298.108, -142.211, 1.03", "-119.899, 298.458, -142.329, 1.03", "-120.077, 299.152, -142.59, 0.22", "-120.204, 299.688, -142.816, 0.44", "-120.328, 300.219, -143.063, 0.37", "-120.509, 301.004, -143.453, 0.74", "-120.577, 301.296, -143.603, 0.96", "-121.051, 303.214, -144.636, 0.22", "-121.312, 304.206, -145.194, 0.74", "-121.382, 304.477, -145.346, 1.11", "-121.45, 304.758, -145.5, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-66.9388, 200.968, -89.8725, 0.22", "-68.5204, 202.685, -89.452, 0.22", "-68.9609, 203.18, -89.331, 0.22", "-69.2531, 203.57, -89.2398, 0.66", "-69.5401, 203.999, -89.1429, 0.88", "-69.7646, 204.381, -89.0387, 0.88", "-70.753, 206.175, -88.5033, 0.15", "-70.8581, 206.393, -88.4342, 0.29", "-71.8123, 208.338, -87.7403, 0.22", "-72.1175, 208.943, -87.5073, 0.37", "-72.8686, 210.372, -86.9453, 0.22", "-73.5076, 211.533, -86.4524, 1.33", "-73.6387, 211.759, -86.3463, 1.62", "-74.7095, 213.401, -85.4962, 0.22", "-75.5012, 214.452, -84.8609, 0.22", "-76.9282, 216.124, -83.7164, 0.22", "-77.5405, 216.773, -83.2239, 0.96", "-78.0396, 217.26, -82.7977, 1.18", "-79.1469, 218.215, -81.7734, 0.22", "-79.8993, 218.748, -81.0298, 0.22", "-80.688, 219.231, -80.2143, 1.11", "-80.917, 219.355, -79.9707, 1.4", "-81.3251, 219.611, -79.5501, 1.4", "-82.5839, 220.571, -78.2834, 0.22", "-83.1959, 221.167, -77.6559, 0.22", "-83.7338, 221.809, -77.1251, 0.44", "-83.9221, 222.073, -76.9437, 0.44", "-84.7717, 223.382, -76.1517, 0.22", "-85.2236, 224.17, -75.7366, 0.66", "-85.5969, 224.909, -75.4004, 0.66", "-86.0558, 225.887, -74.9448, 0.22", "-86.312, 226.42, -74.6722, 0.44", "-86.5465, 226.889, -74.4158, 0.44", "-86.9973, 227.772, -73.8988, 0.22", "-87.1706, 228.112, -73.693, 0.37", "-87.7943, 229.341, -72.9542, 0.22", "-88.0729, 229.936, -72.5855, 0.52", "-88.2055, 230.234, -72.3918, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_NBC_ee7b52323f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.49999920512097007)
    connect dend_22(0), soma_0(0.49999920512097007)
    connect dend_17(0), soma_0(0.49999920512097007)
    connect dend_0(0), soma_0(0.49999920512097007)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.94345, -11.2623, 0.984599, 4.09477 ) }
    soma_0 { pt3dadd( -6.27697, -10.213, 0.889449, 7.03886 ) }
    soma_0 { pt3dadd( -5.61048, -9.16359, 0.794299, 9.0513 ) }
    soma_0 { pt3dadd( -4.94399, -8.11421, 0.699149, 10.7049 ) }
    soma_0 { pt3dadd( -4.2775, -7.06483, 0.603999, 12.1545 ) }
    soma_0 { pt3dadd( -3.61101, -6.01545, 0.508849, 13.4148 ) }
    soma_0 { pt3dadd( -2.94452, -4.96607, 0.413699, 14.3077 ) }
    soma_0 { pt3dadd( -2.27803, -3.91669, 0.318549, 14.7157 ) }
    soma_0 { pt3dadd( -1.61155, -2.86731, 0.223399, 14.8034 ) }
    soma_0 { pt3dadd( -0.945058, -1.81793, 0.128249, 14.7825 ) }
    soma_0 { pt3dadd( -0.278569, -0.768556, 0.0330986, 14.484 ) }
    soma_0 { pt3dadd( 0.387919, 0.280823, -0.0620515, 14.2451 ) }
    soma_0 { pt3dadd( 1.05441, 1.3302, -0.157201, 13.4939 ) }
    soma_0 { pt3dadd( 1.7209, 2.37958, -0.252352, 12.4612 ) }
    soma_0 { pt3dadd( 2.38738, 3.42896, -0.347502, 11.3514 ) }
    soma_0 { pt3dadd( 3.05387, 4.47834, -0.442652, 10.0759 ) }
    soma_0 { pt3dadd( 3.72036, 5.52772, -0.537802, 8.68542 ) }
    soma_0 { pt3dadd( 4.38685, 6.5771, -0.632952, 7.03735 ) }
    soma_0 { pt3dadd( 5.05334, 7.62648, -0.728102, 5.61823 ) }
    soma_0 { pt3dadd( 5.71983, 8.67585, -0.823252, 4.41136 ) }
    soma_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 2.8094 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.13964, -6.11904, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -2.13964, -6.11904, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.65101, -6.87406, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.20076, -7.7852, -15.2249, 0.88 ) }
    dend_31 { pt3dadd( -0.857653, -8.75427, -15.2778, 0.96 ) }
    dend_31 { pt3dadd( -0.552206, -10.001, -15.3613, 0.52 ) }
    dend_31 { pt3dadd( -0.46023, -10.6248, -15.4077, 0.44 ) }
    dend_31 { pt3dadd( -0.500077, -11.6553, -15.4986, 0.37 ) }
    dend_31 { pt3dadd( -0.817093, -12.5702, -15.5965, 0.96 ) }
    dend_31 { pt3dadd( -1.17598, -13.1009, -15.6587, 1.18 ) }
    dend_31 { pt3dadd( -1.43958, -13.3774, -15.7115, 1.18 ) }
    dend_31 { pt3dadd( -1.79589, -13.7051, -15.8149, 0.88 ) }
    dend_31 { pt3dadd( -2.23209, -14.1302, -15.9957, 0.66 ) }
    dend_31 { pt3dadd( -2.65924, -14.6268, -16.2694, 0.52 ) }
    dend_31 { pt3dadd( -3.02413, -15.2238, -16.7076, 0.37 ) }
    dend_31 { pt3dadd( -3.29803, -15.9557, -17.3982, 0.37 ) }
    dend_31 { pt3dadd( -3.45436, -16.6239, -18.1475, 1.11 ) }
    dend_31 { pt3dadd( -3.52479, -17.0435, -18.6708, 1.33 ) }
    dend_31 { pt3dadd( -3.57272, -17.3801, -19.1134, 1.4 ) }
    dend_31 { pt3dadd( -3.68927, -18.089, -20.1074, 0.66 ) }
    dend_31 { pt3dadd( -3.84225, -18.5543, -20.8228, 0.52 ) }
    dend_31 { pt3dadd( -4.15039, -19.0201, -21.5331, 0.59 ) }
    dend_31 { pt3dadd( -4.41291, -19.2834, -21.9056, 0.66 ) }
    dend_31 { pt3dadd( -4.78192, -19.6178, -22.3455, 0.66 ) }
    dend_31 { pt3dadd( -5.09205, -19.9047, -22.6804, 0.37 ) }
    dend_31 { pt3dadd( -5.63423, -20.5389, -23.3403, 0.29 ) }
    dend_31 { pt3dadd( -5.81713, -20.8605, -23.7032, 0.29 ) }
    dend_31 { pt3dadd( -6.08953, -21.6359, -24.6178, 1.4 ) }
    dend_31 { pt3dadd( -6.19921, -22.0978, -25.1428, 1.84 ) }
    dend_31 { pt3dadd( -6.25785, -22.48, -25.5711, 1.84 ) }
    dend_31 { pt3dadd( -6.36424, -23.5829, -26.8113, 0.81 ) }
    dend_31 { pt3dadd( -6.42645, -24.6199, -27.9913, 0.37 ) }
    dend_31 { pt3dadd( -6.45604, -25.1342, -28.6321, 0.37 ) }
    dend_31 { pt3dadd( -6.49468, -25.7533, -29.4463, 1.55 ) }
    dend_31 { pt3dadd( -6.5324, -26.3414, -30.2996, 2.06 ) }
    dend_31 { pt3dadd( -6.57362, -26.8287, -31.0519, 2.21 ) }
    dend_31 { pt3dadd( -6.6722, -27.977, -32.8744, 0.66 ) }
    dend_31 { pt3dadd( -6.76925, -29.1729, -34.8103, 0.66 ) }
    dend_31 { pt3dadd( -6.80468, -29.7185, -35.7512, 0.88 ) }
    dend_31 { pt3dadd( -6.86807, -30.9898, -38.1408, 1.77 ) }
    dend_31 { pt3dadd( -6.90785, -31.6608, -39.4463, 3.09 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.29965, -8.49204, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.29965, -8.49204, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.78101, -9.31289, 1.11034, 1.25 ) }
    dend_22 { pt3dadd( -9.65838, -10.918, 1.47752, 1.11 ) }
    dend_22 { pt3dadd( -10.3542, -12.191, 1.76872, 1.55 ) }
    dend_22 { pt3dadd( -10.8837, -13.1597, 1.99031, 1.92 ) }
    dend_22 { pt3dadd( -11.5156, -14.3158, 2.25477, 2.14 ) }
    dend_22 { pt3dadd( -12.0309, -15.295, 2.48704, 2.14 ) }
    dend_22 { pt3dadd( -12.4463, -16.165, 2.71107, 2.14 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.83964, -12.0095, -0.944109, 1.62 ) }
    dend_17 { pt3dadd( -5.24999, -13.1191, -0.781059, 1.62 ) }
    dend_17 { pt3dadd( -5.89791, -14.8785, -0.499452, 1.47 ) }
    dend_17 { pt3dadd( -6.44314, -16.3846, -0.252441, 1.18 ) }
    dend_17 { pt3dadd( -7.04594, -18.068, 0.0205689, 1.18 ) }
    dend_17 { pt3dadd( -7.59029, -19.6175, 0.253229, 1.77 ) }
    dend_17 { pt3dadd( -7.87874, -20.473, 0.366661, 2.14 ) }
    dend_17 { pt3dadd( -8.26351, -21.6616, 0.54054, 2.65 ) }
    dend_17 { pt3dadd( -8.57584, -22.6104, 0.68149, 2.73 ) }
    dend_17 { pt3dadd( -9.04301, -23.9317, 0.861103, 2.5 ) }
    dend_17 { pt3dadd( -9.76784, -25.8001, 1.07988, 1.92 ) }
    dend_17 { pt3dadd( -10.6634, -27.95, 1.3078, 1.47 ) }
    dend_17 { pt3dadd( -11.7551, -30.3404, 1.54386, 1.18 ) }
    dend_17 { pt3dadd( -12.4868, -31.7918, 1.68438, 1.03 ) }
    dend_17 { pt3dadd( -13.6727, -33.8788, 1.87479, 1.47 ) }
    dend_17 { pt3dadd( -14.3094, -34.8675, 1.9529, 1.99 ) }
    dend_17 { pt3dadd( -14.7961, -35.5746, 1.99688, 2.43 ) }
    dend_17 { pt3dadd( -15.336, -36.3825, 2.032, 2.65 ) }
    dend_17 { pt3dadd( -15.9269, -37.4337, 2.05047, 2.36 ) }
    dend_17 { pt3dadd( -16.6928, -39.3221, 2.03192, 1.77 ) }
    dend_17 { pt3dadd( -17.4238, -42.2077, 1.95893, 1.33 ) }
    dend_17 { pt3dadd( -17.7225, -44.2716, 1.88706, 1.33 ) }
    dend_17 { pt3dadd( -17.8547, -46.3813, 1.81004, 1.55 ) }
    dend_17 { pt3dadd( -17.8086, -48.8781, 1.74006, 1.25 ) }
    dend_17 { pt3dadd( -17.5518, -51.519, 1.72096, 1.11 ) }
    dend_17 { pt3dadd( -17.1313, -53.8423, 1.75154, 1.55 ) }
    dend_17 { pt3dadd( -16.8179, -55.0682, 1.77561, 2.06 ) }
    dend_17 { pt3dadd( -16.5959, -55.8301, 1.79879, 2.43 ) }
    dend_17 { pt3dadd( -16.2745, -56.8844, 1.85299, 2.8 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -15.9129, -58.1067, 2.00352, 2.95 ) }
    dend_17 { pt3dadd( -15.677, -59.0664, 2.28165, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 2/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.93036, 10.6705, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 5.93036, 10.6705, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 6.43465, 11.8645, -0.438293, 3.54 ) }
    dend_0 { pt3dadd( 7.00097, 13.2054, -0.35315, 3.54 ) }
    dend_0 { pt3dadd( 7.36382, 14.0645, -0.298599, 2.95 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 0.717789 ) }
    axon_0 { pt3dadd( 14.4283, 22.3872, -0.918402, 0.717789 ) }
    axon_0 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.717789 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.90785, -31.6608, -39.4463, 0.88 ) }
    dend_33 { pt3dadd( -6.25624, -32.2237, -39.9656, 0.88 ) }
    dend_33 { pt3dadd( -5.64559, -32.742, -40.402, 0.52 ) }
    dend_33 { pt3dadd( -5.18239, -33.1211, -40.7023, 0.29 ) }
    dend_33 { pt3dadd( -4.59896, -33.5893, -41.0937, 0.22 ) }
    dend_33 { pt3dadd( -4.00641, -34.0689, -41.4952, 1.33 ) }
    dend_33 { pt3dadd( -3.50134, -34.4719, -41.858, 1.47 ) }
    dend_33 { pt3dadd( -2.97795, -34.8909, -42.2424, 0.15 ) }
    dend_33 { pt3dadd( -2.59301, -35.2027, -42.5116, 0.15 ) }
    dend_33 { pt3dadd( -1.73447, -35.8948, -43.1349, 0.81 ) }
    dend_33 { pt3dadd( -1.58288, -36.015, -43.2487, 0.96 ) }
    dend_33 { pt3dadd( -0.226556, -37.076, -44.2892, 0.22 ) }
    dend_33 { pt3dadd( -0.0562171, -37.2086, -44.4316, 0.74 ) }
    dend_33 { pt3dadd( 0.246094, -37.4523, -44.7099, 0.74 ) }
    dend_33 { pt3dadd( 1.27008, -38.2817, -45.7284, 0.22 ) }
    dend_33 { pt3dadd( 1.54463, -38.5079, -46.014, 0.88 ) }
    dend_33 { pt3dadd( 1.69529, -38.6335, -46.1821, 1.11 ) }
    dend_33 { pt3dadd( 2.82364, -39.5832, -47.5519, 0.22 ) }
    dend_33 { pt3dadd( 3.51038, -40.1478, -48.4188, 1.62 ) }
    dend_33 { pt3dadd( 3.94134, -40.5024, -48.9787, 2.06 ) }
    dend_33 { pt3dadd( 4.69725, -41.163, -50.0015, 0.81 ) }
    dend_33 { pt3dadd( 5.26109, -41.6896, -50.8029, 1.33 ) }
    dend_33 { pt3dadd( 6.12295, -42.5661, -52.0784, 0.22 ) }
    dend_33 { pt3dadd( 6.688, -43.1926, -52.9214, 1.33 ) }
    dend_33 { pt3dadd( 6.92745, -43.4764, -53.3086, 1.62 ) }
    dend_33 { pt3dadd( 7.79884, -44.6104, -54.8264, 0.59 ) }
    dend_33 { pt3dadd( 8.37306, -45.4409, -55.9512, 0.22 ) }
    dend_33 { pt3dadd( 8.65682, -45.9334, -56.6381, 0.74 ) }
    dend_33 { pt3dadd( 8.76858, -46.1747, -56.969, 0.96 ) }
    dend_33 { pt3dadd( 9.19444, -47.2815, -58.5005, 0.29 ) }
    dend_33 { pt3dadd( 9.35003, -47.7703, -59.2398, 1.18 ) }
    dend_33 { pt3dadd( 9.42371, -48.0731, -59.7346, 1.4 ) }
    dend_33 { pt3dadd( 9.65246, -49.2882, -61.7614, 0.22 ) }
    dend_33 { pt3dadd( 9.70147, -49.6442, -62.3893, 1.03 ) }
    dend_33 { pt3dadd( 9.71624, -49.8649, -62.7883, 1.18 ) }
    dend_33 { pt3dadd( 9.69323, -51.3587, -65.5518, 0.44 ) }
    dend_33 { pt3dadd( 9.64841, -51.9607, -66.75, 0.22 ) }
    dend_33 { pt3dadd( 9.62474, -52.1707, -67.1772, 1.18 ) }
    dend_33 { pt3dadd( 9.54926, -52.7519, -68.3938, 1.18 ) }
    dend_33 { pt3dadd( 9.49038, -53.1681, -69.3146, 1.62 ) }
    dend_33 { pt3dadd( 9.41403, -53.8466, -70.8342, 1.84 ) }
    dend_33 { pt3dadd( 9.39933, -54.1261, -71.4574, 1.99 ) }
    dend_33 { pt3dadd( 9.43751, -55.1739, -73.8317, 0.22 ) }
    dend_33 { pt3dadd( 9.50794, -55.8437, -75.3699, 1.47 ) }
    dend_33 { pt3dadd( 9.60058, -56.404, -76.6107, 1.69 ) }
    dend_33 { pt3dadd( 9.67663, -56.7557, -77.4001, 1.4 ) }
    dend_33 { pt3dadd( 9.87141, -57.4708, -79.0011, 0.81 ) }
    dend_33 { pt3dadd( 10.1937, -58.4463, -81.1977, 1.03 ) }
    dend_33 { pt3dadd( 10.6101, -59.5592, -83.7994, 0.22 ) }
    dend_33 { pt3dadd( 10.7494, -59.888, -84.5541, 1.47 ) }
    dend_33 { pt3dadd( 11.1499, -60.7427, -86.3938, 1.62 ) }
    dend_33 { pt3dadd( 11.4555, -61.3513, -87.6468, 0.29 ) }
    dend_33 { pt3dadd( 11.8687, -62.0546, -89.0271, 1.18 ) }
    dend_33 { pt3dadd( 12.2951, -62.6591, -90.13, 1.47 ) }
    dend_33 { pt3dadd( 12.9193, -63.4209, -91.4306, 0.15 ) }
    dend_33 { pt3dadd( 13.3476, -63.925, -92.2568, 0.15 ) }
    dend_33 { pt3dadd( 13.7886, -64.4348, -92.988, 1.18 ) }
    dend_33 { pt3dadd( 14.5169, -65.3309, -94.1341, 0.22 ) }
    dend_33 { pt3dadd( 14.7979, -65.7007, -94.5816, 0.22 ) }
    dend_33 { pt3dadd( 15.3221, -66.408, -95.4661, 0.88 ) }
    dend_33 { pt3dadd( 15.5969, -66.8029, -95.9835, 0.88 ) }
    dend_33 { pt3dadd( 15.9426, -67.2938, -96.6712, 1.11 ) }
    dend_33 { pt3dadd( 16.3158, -67.796, -97.3996, 1.33 ) }
    dend_33 { pt3dadd( 17.5305, -69.3443, -99.7634, 0.22 ) }
    dend_33 { pt3dadd( 18.1294, -70.0787, -100.958, 1.03 ) }
    dend_33 { pt3dadd( 18.2194, -70.1833, -101.138, 1.25 ) }
    dend_33 { pt3dadd( 19.2256, -71.3088, -103.117, 0.22 ) }
    dend_33 { pt3dadd( 19.7237, -71.8421, -104.091, 1.33 ) }
    dend_33 { pt3dadd( 20.0262, -72.1582, -104.666, 1.4 ) }
    dend_33 { pt3dadd( 20.9709, -73.207, -106.518, 0.22 ) }
    dend_33 { pt3dadd( 21.4258, -73.7359, -107.465, 0.74 ) }
    dend_33 { pt3dadd( 22.1494, -74.6133, -109.092, 0.22 ) }
    dend_33 { pt3dadd( 22.8279, -75.492, -110.712, 1.4 ) }
    dend_33 { pt3dadd( 23.0569, -75.8067, -111.286, 1.47 ) }
    dend_33 { pt3dadd( 23.8752, -76.9421, -113.36, 0.15 ) }
    dend_33 { pt3dadd( 24.5036, -77.7871, -114.95, 1.25 ) }
    dend_33 { pt3dadd( 24.7459, -78.1138, -115.593, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.90785, -31.6608, -39.4463, 1.92 ) }
    dend_32 { pt3dadd( -8.10238, -32.3416, -41.3073, 1.92 ) }
    dend_32 { pt3dadd( -9.1604, -32.9779, -42.9999, 1.77 ) }
    dend_32 { pt3dadd( -10.4705, -33.8044, -45.0708, 2.21 ) }
    dend_32 { pt3dadd( -11.4432, -34.4911, -46.6874, 0.22 ) }
    dend_32 { pt3dadd( -11.7669, -34.7395, -47.2636, 0.22 ) }
    dend_32 { pt3dadd( -12.4253, -35.2773, -48.484, 0.22 ) }
    dend_32 { pt3dadd( -13.1708, -35.9663, -50.0127, 1.47 ) }
    dend_32 { pt3dadd( -13.3819, -36.1847, -50.492, 1.77 ) }
    dend_32 { pt3dadd( -14.2449, -37.1531, -52.617, 0.52 ) }
    dend_32 { pt3dadd( -14.8808, -37.8985, -54.3105, 1.25 ) }
    dend_32 { pt3dadd( -15.1112, -38.1819, -54.9573, 1.4 ) }
    dend_32 { pt3dadd( -15.761, -39.1231, -57.0085, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -16.2904, -39.9874, -58.8008, 1.62 ) }
    dend_32 { pt3dadd( -16.4845, -40.3389, -59.5469, 1.84 ) }
    dend_32 { pt3dadd( -16.8896, -41.1637, -61.2343, 0.52 ) }
    dend_32 { pt3dadd( -17.287, -42.0867, -63.0474, 1.69 ) }
    dend_32 { pt3dadd( -17.5153, -42.6824, -64.1517, 2.06 ) }
    dend_32 { pt3dadd( -17.6612, -43.1293, -64.9082, 2.21 ) }
    dend_32 { pt3dadd( -18.4278, -45.5809, -68.9047, 0.44 ) }
    dend_32 { pt3dadd( -18.6086, -46.2477, -69.9857, 0.81 ) }
    dend_32 { pt3dadd( -18.663, -46.499, -70.3693, 0.81 ) }
    dend_32 { pt3dadd( -18.7764, -47.0252, -71.1278, 0.59 ) }
    dend_32 { pt3dadd( -18.843, -47.3435, -71.5539, 0.88 ) }
    dend_32 { pt3dadd( -19.0187, -48.3845, -72.8149, 0.37 ) }
    dend_32 { pt3dadd( -19.4115, -50.9051, -75.5399, 1.4 ) }
    dend_32 { pt3dadd( -19.5129, -51.5379, -76.2187, 1.92 ) }
    dend_32 { pt3dadd( -19.8219, -53.312, -78.3381, 0.22 ) }
    dend_32 { pt3dadd( -19.9401, -53.9336, -79.1353, 0.22 ) }
    dend_32 { pt3dadd( -20.0373, -54.3584, -79.6965, 0.22 ) }
    dend_32 { pt3dadd( -20.3127, -55.3162, -80.9579, 1.84 ) }
    dend_32 { pt3dadd( -20.3836, -55.5143, -81.2567, 2.06 ) }
    dend_32 { pt3dadd( -21.3098, -57.8251, -85.2128, 0.22 ) }
    dend_32 { pt3dadd( -21.4743, -58.1726, -85.8795, 0.22 ) }
    dend_32 { pt3dadd( -21.6192, -58.4215, -86.4062, 0.96 ) }
    dend_32 { pt3dadd( -21.7928, -58.6785, -86.9802, 1.18 ) }
    dend_32 { pt3dadd( -23.0821, -60.3964, -90.9768, 0.44 ) }
    dend_32 { pt3dadd( -23.3138, -60.6864, -91.6271, 1.18 ) }
    dend_32 { pt3dadd( -23.6218, -61.039, -92.3846, 1.18 ) }
    dend_32 { pt3dadd( -24.3336, -61.848, -94.1823, 1.33 ) }
    dend_32 { pt3dadd( -24.6787, -62.2531, -95.0494, 1.47 ) }
    dend_32 { pt3dadd( -25.6833, -63.4703, -97.4324, 0.29 ) }
    dend_32 { pt3dadd( -26.206, -64.1149, -98.5467, 1.4 ) }
    dend_32 { pt3dadd( -26.4841, -64.491, -99.2167, 1.62 ) }
    dend_32 { pt3dadd( -27.5646, -66.1989, -102.342, 0.22 ) }
    dend_32 { pt3dadd( -27.7673, -66.5557, -102.985, 0.81 ) }
    dend_32 { pt3dadd( -28.0048, -66.9933, -103.762, 0.29 ) }
    dend_32 { pt3dadd( -28.3296, -67.6104, -104.813, 1.11 ) }
    dend_32 { pt3dadd( -29.3718, -69.602, -108.209, 0.59 ) }
    dend_32 { pt3dadd( -30.4664, -71.5553, -111.416, 0.22 ) }
    dend_32 { pt3dadd( -30.8042, -72.1104, -112.302, 0.22 ) }
    dend_32 { pt3dadd( -31.2692, -72.8024, -113.439, 1.69 ) }
    dend_32 { pt3dadd( -31.5438, -73.1659, -114.085, 2.14 ) }
    dend_32 { pt3dadd( -32.8157, -74.6747, -116.789, 0.22 ) }
    dend_32 { pt3dadd( -33.3876, -75.2704, -117.82, 1.92 ) }
    dend_32 { pt3dadd( -33.7215, -75.5875, -118.386, 2.21 ) }
    dend_32 { pt3dadd( -34.1559, -75.9853, -119.142, 2.21 ) }
    dend_32 { pt3dadd( -36.2497, -77.8965, -122.798, 0.22 ) }
    dend_32 { pt3dadd( -36.4476, -78.0806, -123.146, 0.44 ) }
    dend_32 { pt3dadd( -36.9493, -78.5843, -124.014, 0.29 ) }
    dend_32 { pt3dadd( -37.5849, -79.28, -125.148, 1.03 ) }
    dend_32 { pt3dadd( -37.7778, -79.5026, -125.49, 0.81 ) }
    dend_32 { pt3dadd( -38.2558, -80.0873, -126.244, 0.29 ) }
    dend_32 { pt3dadd( -38.8206, -80.7881, -126.999, 1.11 ) }
    dend_32 { pt3dadd( -39.0315, -81.0555, -127.343, 1.33 ) }
    dend_32 { pt3dadd( -39.2857, -81.3918, -127.8, 1.33 ) }
    dend_32 { pt3dadd( -40.9323, -83.6127, -130.832, 0.22 ) }
    dend_32 { pt3dadd( -41.5263, -84.4194, -131.989, 1.99 ) }
    dend_32 { pt3dadd( -41.785, -84.76, -132.491, 2.43 ) }
    dend_32 { pt3dadd( -43.7655, -87.337, -136.358, 0.22 ) }
    dend_32 { pt3dadd( -44.0311, -87.6766, -136.92, 0.59 ) }
    dend_32 { pt3dadd( -44.2201, -87.9321, -137.334, 0.59 ) }
    dend_32 { pt3dadd( -44.9265, -88.9079, -138.896, 0.22 ) }
    dend_32 { pt3dadd( -45.2174, -89.3215, -139.565, 1.25 ) }
    dend_32 { pt3dadd( -45.6024, -89.9182, -140.498, 1.62 ) }
    dend_32 { pt3dadd( -46.9943, -92.2192, -143.809, 0.22 ) }
    dend_32 { pt3dadd( -47.5213, -93.1375, -145.128, 0.22 ) }
    dend_32 { pt3dadd( -47.7378, -93.5551, -145.692, 0.96 ) }
    dend_32 { pt3dadd( -47.866, -93.8427, -146.048, 1.33 ) }
    dend_32 { pt3dadd( -48.6714, -95.995, -148.627, 0.22 ) }
    dend_32 { pt3dadd( -48.7952, -96.4043, -149.123, 0.74 ) }
    dend_32 { pt3dadd( -48.894, -96.8297, -149.62, 0.74 ) }
    dend_32 { pt3dadd( -49.0006, -97.3958, -150.311, 0.22 ) }
    dend_32 { pt3dadd( -49.1896, -98.6043, -151.757, 1.84 ) }
    dend_32 { pt3dadd( -49.2828, -99.2852, -152.566, 2.14 ) }
    dend_32 { pt3dadd( -49.6012, -101.951, -155.65, 0.22 ) }
    dend_32 { pt3dadd( -49.6525, -102.413, -156.185, 0.22 ) }
    dend_32 { pt3dadd( -49.7574, -103.351, -157.263, 1.55 ) }
    dend_32 { pt3dadd( -49.8282, -103.926, -157.916, 1.84 ) }
    dend_32 { pt3dadd( -50.0742, -105.621, -159.856, 0.22 ) }
    dend_32 { pt3dadd( -50.1761, -106.222, -160.552, 0.52 ) }
    dend_32 { pt3dadd( -50.3474, -107.027, -161.652, 0.22 ) }
    dend_32 { pt3dadd( -50.6002, -107.966, -163.18, 1.03 ) }
    dend_32 { pt3dadd( -50.6584, -108.148, -163.505, 1.18 ) }
    dend_32 { pt3dadd( -51.2575, -109.841, -166.711, 1.25 ) }
    dend_32 { pt3dadd( -51.4523, -110.33, -167.691, 1.62 ) }
    dend_32 { pt3dadd( -52.3359, -112.391, -171.871, 0.22 ) }
    dend_32 { pt3dadd( -52.6175, -112.998, -173.172, 0.22 ) }
    dend_32 { pt3dadd( -52.8622, -113.496, -174.223, 1.47 ) }
    dend_32 { pt3dadd( -53.1975, -114.158, -175.6, 1.62 ) }
    dend_32 { pt3dadd( -53.733, -115.203, -177.775, 0.22 ) }
    dend_32 { pt3dadd( -53.8934, -115.539, -178.519, 0.96 ) }
    dend_32 { pt3dadd( -54.7382, -117.439, -182.697, 0.22 ) }
    dend_32 { pt3dadd( -54.921, -117.869, -183.706, 1.18 ) }
    dend_32 { pt3dadd( -55.2038, -118.497, -185.252, 1.4 ) }
    dend_32 { pt3dadd( -55.799, -119.702, -188.234, 1.03 ) }
    dend_32 { pt3dadd( -56.7354, -121.428, -192.552, 0.22 ) }
    dend_32 { pt3dadd( -56.9796, -121.84, -193.6, 1.47 ) }
    dend_32 { pt3dadd( -57.3863, -122.453, -195.204, 1.55 ) }
    dend_32 { pt3dadd( -57.8601, -123.099, -196.958, 0.22 ) }
    dend_32 { pt3dadd( -58.3109, -123.649, -198.399, 0.22 ) }
    dend_32 { pt3dadd( -58.5594, -123.905, -199.052, 1.11 ) }
    dend_32 { pt3dadd( -58.9899, -124.28, -200.159, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( -60.5367, -125.475, -204.266, 0.22 ) }
    dend_32 { pt3dadd( -60.7519, -125.631, -204.845, 1.18 ) }
    dend_32 { pt3dadd( -61.0207, -125.814, -205.618, 1.18 ) }
    dend_32 { pt3dadd( -61.6471, -126.237, -207.491, 0.66 ) }
    dend_32 { pt3dadd( -63.4119, -127.399, -212.776, 0.22 ) }
    dend_32 { pt3dadd( -63.7909, -127.63, -213.851, 0.22 ) }
    dend_32 { pt3dadd( -64.3825, -127.954, -215.419, 1.18 ) }
    dend_32 { pt3dadd( -64.8926, -128.212, -216.834, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.4463, -16.165, 2.71107, 0.59 ) }
    dend_24 { pt3dadd( -14.8176, -16.9684, 3.17413, 0.59 ) }
    dend_24 { pt3dadd( -15.8406, -17.1954, 3.34054, 0.66 ) }
    dend_24 { pt3dadd( -16.6442, -17.2831, 3.48041, 0.81 ) }
    dend_24 { pt3dadd( -17.1251, -17.2879, 3.57656, 0.81 ) }
    dend_24 { pt3dadd( -18.07, -17.2725, 3.79736, 0.81 ) }
    dend_24 { pt3dadd( -19.2929, -17.2718, 4.18354, 0.96 ) }
    dend_24 { pt3dadd( -19.9888, -17.2108, 4.4534, 0.66 ) }
    dend_24 { pt3dadd( -20.8479, -17.1124, 4.84684, 0.37 ) }
    dend_24 { pt3dadd( -21.677, -16.9962, 5.28988, 0.37 ) }
    dend_24 { pt3dadd( -22.7023, -16.8556, 5.93799, 1.18 ) }
    dend_24 { pt3dadd( -23.8776, -16.7449, 6.89495, 1.69 ) }
    dend_24 { pt3dadd( -24.2147, -16.7796, 7.26075, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.4463, -16.165, 2.71107, 1.25 ) }
    dend_23 { pt3dadd( -12.9546, -17.4366, 2.31453, 1.25 ) }
    dend_23 { pt3dadd( -13.552, -18.7437, 1.93615, 0.74 ) }
    dend_23 { pt3dadd( -13.9862, -19.5963, 1.71221, 0.96 ) }
    dend_23 { pt3dadd( -14.5661, -20.6194, 1.47555, 1.18 ) }
    dend_23 { pt3dadd( -15.0331, -21.3913, 1.35478, 1.47 ) }
    dend_23 { pt3dadd( -15.5147, -22.1766, 1.27316, 1.47 ) }
    dend_23 { pt3dadd( -15.926, -22.7937, 1.25644, 1.55 ) }
    dend_23 { pt3dadd( -16.4177, -23.5118, 1.30648, 1.55 ) }
    dend_23 { pt3dadd( -16.9226, -24.2847, 1.39586, 1.33 ) }
    dend_23 { pt3dadd( -17.7013, -25.5453, 1.59162, 1.11 ) }
    dend_23 { pt3dadd( -18.1555, -26.3466, 1.68493, 0.96 ) }
    dend_23 { pt3dadd( -18.5196, -27.0687, 1.68589, 0.81 ) }
    dend_23 { pt3dadd( -18.957, -28.0513, 1.33201, 0.66 ) }
    dend_23 { pt3dadd( -19.2406, -28.7535, 0.841265, 0.52 ) }
    dend_23 { pt3dadd( -19.4252, -29.2098, 0.421163, 0.52 ) }
    dend_23 { pt3dadd( -19.763, -29.9725, -0.381278, 1.11 ) }
    dend_23 { pt3dadd( -20.3349, -31.1378, -1.67369, 1.55 ) }
    dend_23 { pt3dadd( -21.5713, -33.4626, -4.30132, 1.33 ) }
    dend_23 { pt3dadd( -22.064, -34.3088, -5.26078, 0.88 ) }
    dend_23 { pt3dadd( -22.5468, -35.0588, -6.05725, 1.18 ) }
    dend_23 { pt3dadd( -23.0755, -35.8179, -6.72871, 1.84 ) }
    dend_23 { pt3dadd( -23.4533, -36.3132, -7.01714, 2.21 ) }
    dend_23 { pt3dadd( -23.8841, -36.8439, -7.14949, 2.36 ) }
    dend_23 { pt3dadd( -24.2889, -37.3236, -7.15166, 2.5 ) }
    dend_23 { pt3dadd( -24.8158, -37.9298, -7.13566, 2.28 ) }
    dend_23 { pt3dadd( -25.5309, -38.7733, -7.11773, 1.92 ) }
    dend_23 { pt3dadd( -26.3823, -39.7959, -7.14447, 1.18 ) }
    dend_23 { pt3dadd( -26.9616, -40.492, -7.20396, 0.96 ) }
    dend_23 { pt3dadd( -27.5504, -41.1906, -7.32319, 0.66 ) }
    dend_23 { pt3dadd( -28.3123, -42.0877, -7.58321, 0.44 ) }
    dend_23 { pt3dadd( -29.2584, -43.2013, -8.07041, 1.77 ) }
    dend_23 { pt3dadd( -29.8348, -43.8856, -8.45261, 2.28 ) }
    dend_23 { pt3dadd( -30.2406, -44.3806, -8.7861, 2.28 ) }
    dend_23 { pt3dadd( -30.7383, -45.0243, -9.25861, 2.43 ) }
    dend_23 { pt3dadd( -31.3247, -45.8429, -9.85641, 1.92 ) }
    dend_23 { pt3dadd( -32.072, -46.9821, -10.6453, 0.81 ) }
    dend_23 { pt3dadd( -32.6145, -47.8731, -11.1956, 0.96 ) }
    dend_23 { pt3dadd( -33.1809, -48.8523, -11.6905, 1.18 ) }
    dend_23 { pt3dadd( -33.5291, -49.458, -11.9303, 0.96 ) }
    dend_23 { pt3dadd( -34.0661, -50.3409, -12.1521, 0.44 ) }
    dend_23 { pt3dadd( -34.4889, -50.9571, -12.2259, 0.96 ) }
    dend_23 { pt3dadd( -34.7313, -51.2902, -12.2396, 1.11 ) }
    dend_23 { pt3dadd( -35.4063, -52.143, -12.219, 0.52 ) }
    dend_23 { pt3dadd( -35.9861, -52.7968, -12.1406, 0.44 ) }
    dend_23 { pt3dadd( -37.0131, -53.7927, -11.9738, 1.03 ) }
    dend_23 { pt3dadd( -37.6761, -54.3389, -11.8442, 1.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -15.677, -59.0664, 2.28165, 0.81 ) }
    dend_21 { pt3dadd( -15.9037, -60.0966, -0.377281, 0.81 ) }
    dend_21 { pt3dadd( -16.0697, -60.5071, -1.5767, 1.18 ) }
    dend_21 { pt3dadd( -16.1859, -60.7645, -2.28956, 1.25 ) }
    dend_21 { pt3dadd( -16.3633, -61.2053, -3.47357, 0.66 ) }
    dend_21 { pt3dadd( -16.4161, -61.3655, -3.87726, 0.52 ) }
    dend_21 { pt3dadd( -16.5045, -61.6966, -4.64467, 0.66 ) }
    dend_21 { pt3dadd( -16.5634, -61.9001, -5.0662, 0.88 ) }
    dend_21 { pt3dadd( -16.5461, -62.357, -5.73592, 1.11 ) }
    dend_21 { pt3dadd( -16.376, -62.9338, -6.56584, 1.25 ) }
    dend_21 { pt3dadd( -16.2926, -63.1544, -6.899, 1.25 ) }
    dend_21 { pt3dadd( -16.2072, -63.3635, -7.22234, 0.96 ) }
    dend_21 { pt3dadd( -16.0575, -63.7093, -7.75569, 0.59 ) }
    dend_21 { pt3dadd( -15.7873, -64.3246, -8.78298, 1.18 ) }
    dend_21 { pt3dadd( -15.3297, -65.411, -10.6615, 1.25 ) }
    dend_21 { pt3dadd( -15.0233, -66.2125, -11.9907, 1.25 ) }
    dend_21 { pt3dadd( -14.8804, -66.6071, -12.6134, 1.69 ) }
    dend_21 { pt3dadd( -14.7962, -66.8714, -12.9956, 1.77 ) }
    dend_21 { pt3dadd( -14.4515, -68.3025, -14.7321, 0.81 ) }
    dend_21 { pt3dadd( -14.3409, -68.9218, -15.3503, 1.11 ) }
    dend_21 { pt3dadd( -14.2521, -69.4481, -15.7679, 0.96 ) }
    dend_21 { pt3dadd( -14.1781, -70.0921, -16.2081, 0.52 ) }
    dend_21 { pt3dadd( -14.1491, -70.9825, -16.7554, 0.52 ) }
    dend_21 { pt3dadd( -14.2162, -72.494, -17.5699, 2.21 ) }
    dend_21 { pt3dadd( -14.3156, -73.195, -17.8702, 2.5 ) }
    dend_21 { pt3dadd( -14.3729, -73.4593, -17.987, 2.5 ) }
    dend_21 { pt3dadd( -14.6034, -74.2569, -18.3544, 0.66 ) }
    dend_21 { pt3dadd( -14.8411, -74.8887, -18.6688, 1.25 ) }
    dend_21 { pt3dadd( -14.9861, -75.2072, -18.8278, 1.47 ) }
    dend_21 { pt3dadd( -15.174, -75.5403, -18.988, 1.47 ) }
    dend_21 { pt3dadd( -15.5358, -76.1297, -19.2452, 1.33 ) }
    dend_21 { pt3dadd( -15.7614, -76.4652, -19.3982, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -16.1152, -76.9596, -19.6304, 0.29 ) }
    dend_21 { pt3dadd( -16.29, -77.208, -19.7541, 0.22 ) }
    dend_21 { pt3dadd( -16.5159, -77.5552, -19.9232, 0.22 ) }
    dend_21 { pt3dadd( -16.7775, -78.0268, -20.1223, 0.96 ) }
    dend_21 { pt3dadd( -16.9224, -78.3474, -20.2291, 1.18 ) }
    dend_21 { pt3dadd( -17.02, -78.657, -20.3268, 0.96 ) }
    dend_21 { pt3dadd( -17.2018, -79.5701, -20.6271, 0.22 ) }
    dend_21 { pt3dadd( -17.245, -79.8971, -20.7482, 0.22 ) }
    dend_21 { pt3dadd( -17.2965, -80.4224, -20.9835, 0.88 ) }
    dend_21 { pt3dadd( -17.3191, -80.7354, -21.1388, 1.11 ) }
    dend_21 { pt3dadd( -17.3836, -81.5558, -21.5572, 0.22 ) }
    dend_21 { pt3dadd( -17.477, -82.4065, -22.0803, 1.77 ) }
    dend_21 { pt3dadd( -17.5215, -82.7444, -22.3568, 2.28 ) }
    dend_21 { pt3dadd( -17.5943, -83.2723, -22.9161, 2.28 ) }
    dend_21 { pt3dadd( -17.7333, -84.079, -23.9659, 0.15 ) }
    dend_21 { pt3dadd( -17.7872, -84.4077, -24.4553, 0.74 ) }
    dend_21 { pt3dadd( -17.8969, -85.2203, -25.7847, 0.44 ) }
    dend_21 { pt3dadd( -17.9782, -86.2227, -27.4561, 1.69 ) }
    dend_21 { pt3dadd( -18.0035, -86.9212, -28.649, 2.28 ) }
    dend_21 { pt3dadd( -18.0057, -87.2931, -29.2864, 2.58 ) }
    dend_21 { pt3dadd( -18.0077, -88.1808, -30.8012, 0.52 ) }
    dend_21 { pt3dadd( -18.0041, -88.779, -31.7538, 0.29 ) }
    dend_21 { pt3dadd( -18.003, -89.7857, -33.1496, 2.21 ) }
    dend_21 { pt3dadd( -18.0214, -90.6194, -34.1692, 2.58 ) }
    dend_21 { pt3dadd( -18.106, -92.0476, -35.7569, 0.29 ) }
    dend_21 { pt3dadd( -18.1478, -92.4728, -36.1891, 0.22 ) }
    dend_21 { pt3dadd( -18.1986, -92.759, -36.4569, 0.22 ) }
    dend_21 { pt3dadd( -18.312, -93.2147, -36.8502, 1.33 ) }
    dend_21 { pt3dadd( -18.4269, -93.563, -37.1147, 1.55 ) }
    dend_21 { pt3dadd( -18.9946, -95.0891, -38.1465, 0.22 ) }
    dend_21 { pt3dadd( -19.1542, -95.479, -38.3987, 0.96 ) }
    dend_21 { pt3dadd( -19.2558, -95.7163, -38.5709, 1.25 ) }
    dend_21 { pt3dadd( -19.3692, -95.9672, -38.7881, 1.25 ) }
    dend_21 { pt3dadd( -19.7664, -96.7924, -39.5868, 0.22 ) }
    dend_21 { pt3dadd( -20.0373, -97.3125, -40.1153, 0.88 ) }
    dend_21 { pt3dadd( -20.1346, -97.4925, -40.3073, 1.11 ) }
    dend_21 { pt3dadd( -20.327, -97.8701, -40.7136, 1.11 ) }
    dend_21 { pt3dadd( -20.9388, -99.1404, -41.9995, 0.22 ) }
    dend_21 { pt3dadd( -21.154, -99.6029, -42.4351, 1.77 ) }
    dend_21 { pt3dadd( -21.2881, -99.9003, -42.6974, 2.28 ) }
    dend_21 { pt3dadd( -21.4669, -100.309, -43.0232, 2.14 ) }
    dend_21 { pt3dadd( -21.9607, -101.492, -43.905, 0.22 ) }
    dend_21 { pt3dadd( -22.1936, -102.089, -44.2992, 1.03 ) }
    dend_21 { pt3dadd( -22.3029, -102.401, -44.4932, 1.33 ) }
    dend_21 { pt3dadd( -22.6522, -103.424, -45.1865, 0.22 ) }
    dend_21 { pt3dadd( -22.7778, -103.789, -45.4508, 0.96 ) }
    dend_21 { pt3dadd( -22.9132, -104.164, -45.7489, 1.25 ) }
    dend_21 { pt3dadd( -22.993, -104.378, -45.9337, 1.33 ) }
    dend_21 { pt3dadd( -23.4939, -105.732, -47.1656, 0.15 ) }
    dend_21 { pt3dadd( -23.6921, -106.31, -47.7031, 1.18 ) }
    dend_21 { pt3dadd( -23.8216, -106.713, -48.075, 1.55 ) }
    dend_21 { pt3dadd( -24.139, -107.776, -49.0149, 0.22 ) }
    dend_21 { pt3dadd( -24.2217, -108.065, -49.2507, 0.96 ) }
    dend_21 { pt3dadd( -24.3329, -108.462, -49.557, 0.96 ) }
    dend_21 { pt3dadd( -24.5543, -109.326, -50.1574, 0.22 ) }
    dend_21 { pt3dadd( -24.6158, -109.62, -50.3366, 0.66 ) }
    dend_21 { pt3dadd( -24.7637, -110.44, -50.8256, 0.22 ) }
    dend_21 { pt3dadd( -24.8469, -110.946, -51.1111, 1.4 ) }
    dend_21 { pt3dadd( -24.9187, -111.418, -51.3826, 1.84 ) }
    dend_21 { pt3dadd( -24.9638, -111.696, -51.5468, 1.62 ) }
    dend_21 { pt3dadd( -25.2093, -112.993, -52.3251, 0.15 ) }
    dend_21 { pt3dadd( -25.3856, -113.908, -52.893, 1.03 ) }
    dend_21 { pt3dadd( -25.4468, -114.219, -53.1095, 1.55 ) }
    dend_21 { pt3dadd( -25.5181, -114.578, -53.368, 1.55 ) }
    dend_21 { pt3dadd( -25.7549, -115.753, -54.2234, 0.22 ) }
    dend_21 { pt3dadd( -25.8154, -116.073, -54.4684, 0.88 ) }
    dend_21 { pt3dadd( -25.8954, -116.441, -54.7636, 0.88 ) }
    dend_21 { pt3dadd( -26.2183, -117.806, -55.7913, 0.22 ) }
    dend_21 { pt3dadd( -26.347, -118.311, -56.1503, 1.18 ) }
    dend_21 { pt3dadd( -26.4439, -118.656, -56.3783, 1.33 ) }
    dend_21 { pt3dadd( -26.7838, -119.836, -57.1346, 0.22 ) }
    dend_21 { pt3dadd( -26.943, -120.366, -57.4622, 0.22 ) }
    dend_21 { pt3dadd( -27.1667, -121.019, -57.8597, 0.22 ) }
    dend_21 { pt3dadd( -27.3835, -121.614, -58.1882, 0.22 ) }
    dend_21 { pt3dadd( -27.68, -122.42, -58.6392, 1.55 ) }
    dend_21 { pt3dadd( -27.9, -123.045, -58.9901, 1.92 ) }
    dend_21 { pt3dadd( -28.011, -123.402, -59.1802, 1.77 ) }
    dend_21 { pt3dadd( -28.3796, -124.871, -59.9788, 0.22 ) }
    dend_21 { pt3dadd( -28.5039, -125.422, -60.2907, 0.96 ) }
    dend_21 { pt3dadd( -28.5675, -125.744, -60.4736, 1.11 ) }
    dend_21 { pt3dadd( -28.7532, -126.859, -61.1116, 0.22 ) }
    dend_21 { pt3dadd( -28.8609, -127.573, -61.5091, 0.22 ) }
    dend_21 { pt3dadd( -28.9412, -128.213, -61.8753, 1.03 ) }
    dend_21 { pt3dadd( -28.9806, -128.6, -62.0971, 1.33 ) }
    dend_21 { pt3dadd( -29.0246, -129.025, -62.3561, 1.33 ) }
    dend_21 { pt3dadd( -29.1984, -130.448, -63.2421, 0.15 ) }
    dend_21 { pt3dadd( -29.2822, -131.049, -63.609, 0.15 ) }
    dend_21 { pt3dadd( -29.4195, -131.889, -64.1122, 1.55 ) }
    dend_21 { pt3dadd( -29.4863, -132.268, -64.321, 1.84 ) }
    dend_21 { pt3dadd( -29.5622, -132.664, -64.522, 1.77 ) }
    dend_21 { pt3dadd( -29.7706, -133.556, -64.9343, 0.22 ) }
    dend_21 { pt3dadd( -29.9257, -134.083, -65.1434, 0.22 ) }
    dend_21 { pt3dadd( -30.1003, -134.588, -65.3328, 0.96 ) }
    dend_21 { pt3dadd( -30.2253, -134.9, -65.434, 1.11 ) }
    dend_21 { pt3dadd( -30.6222, -135.776, -65.7072, 0.22 ) }
    dend_21 { pt3dadd( -30.8217, -136.149, -65.8445, 0.22 ) }
    dend_21 { pt3dadd( -31.0726, -136.534, -66.0156, 0.22 ) }
    dend_21 { pt3dadd( -31.2746, -136.795, -66.1549, 0.96 ) }
    dend_21 { pt3dadd( -31.4129, -136.948, -66.2464, 1.25 ) }
    dend_21 { pt3dadd( -31.7105, -137.232, -66.4346, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_21 { pt3dadd( -32.4589, -137.881, -66.9476, 0.15 ) }
    dend_21 { pt3dadd( -32.868, -138.248, -67.2763, 0.15 ) }
    dend_21 { pt3dadd( -33.0157, -138.399, -67.4246, 0.44 ) }
    dend_21 { pt3dadd( -33.1626, -138.57, -67.6063, 0.44 ) }
    dend_21 { pt3dadd( -33.4411, -138.914, -67.99, 0.15 ) }
    dend_21 { pt3dadd( -33.8531, -139.512, -68.6619, 1.33 ) }
    dend_21 { pt3dadd( -34.0184, -139.799, -69.006, 1.4 ) }
    dend_21 { pt3dadd( -34.3063, -140.546, -69.9682, 0.22 ) }
    dend_21 { pt3dadd( -34.413, -140.958, -70.5164, 0.44 ) }
    dend_21 { pt3dadd( -34.4547, -141.215, -70.8489, 0.22 ) }
    dend_21 { pt3dadd( -34.495, -141.754, -71.5579, 1.33 ) }
    dend_21 { pt3dadd( -34.4952, -142.306, -72.284, 1.62 ) }
    dend_21 { pt3dadd( -34.4381, -143.505, -73.8394, 0.22 ) }
    dend_21 { pt3dadd( -34.3983, -143.923, -74.364, 0.22 ) }
    dend_21 { pt3dadd( -34.3458, -144.328, -74.8586, 0.96 ) }
    dend_21 { pt3dadd( -34.2114, -145.081, -75.7297, 1.18 ) }
    dend_21 { pt3dadd( -33.9868, -146.164, -76.9173, 0.22 ) }
    dend_21 { pt3dadd( -33.9207, -146.453, -77.1938, 0.22 ) }
    dend_21 { pt3dadd( -33.8763, -146.643, -77.3512, 0.66 ) }
    dend_21 { pt3dadd( -33.645, -147.618, -78.0874, 0.22 ) }
    dend_21 { pt3dadd( -33.4393, -148.46, -78.6655, 2.06 ) }
    dend_21 { pt3dadd( -33.3868, -148.687, -78.8101, 2.28 ) }
    dend_21 { pt3dadd( -33.0719, -150.051, -79.6319, 0.22 ) }
    dend_21 { pt3dadd( -32.9808, -150.43, -79.8641, 0.22 ) }
    dend_21 { pt3dadd( -32.7879, -151.233, -80.3826, 1.33 ) }
    dend_21 { pt3dadd( -32.7209, -151.516, -80.5753, 1.62 ) }
    dend_21 { pt3dadd( -32.3807, -153.163, -81.7394, 0.37 ) }
    dend_21 { pt3dadd( -32.2856, -153.717, -82.1349, 0.22 ) }
    dend_21 { pt3dadd( -32.2145, -154.265, -82.5358, 0.22 ) }
    dend_21 { pt3dadd( -32.1201, -155.207, -83.2287, 1.03 ) }
    dend_21 { pt3dadd( -32.097, -155.861, -83.7244, 1.4 ) }
    dend_21 { pt3dadd( -32.1412, -156.919, -84.5485, 0.22 ) }
    dend_21 { pt3dadd( -32.237, -157.67, -85.1239, 1.25 ) }
    dend_21 { pt3dadd( -32.3311, -158.163, -85.5064, 1.55 ) }
    dend_21 { pt3dadd( -32.3802, -158.34, -85.6382, 1.55 ) }
    dend_21 { pt3dadd( -32.8751, -159.709, -86.5826, 0.29 ) }
    dend_21 { pt3dadd( -33.0573, -160.119, -86.8606, 0.52 ) }
    dend_21 { pt3dadd( -33.1494, -160.287, -86.9796, 0.52 ) }
    dend_21 { pt3dadd( -33.4181, -160.719, -87.268, 0.22 ) }
    dend_21 { pt3dadd( -33.8095, -161.302, -87.6026, 0.22 ) }
    dend_21 { pt3dadd( -34.1143, -161.723, -87.8191, 1.25 ) }
    dend_21 { pt3dadd( -34.3612, -162.032, -87.9528, 1.4 ) }
    dend_21 { pt3dadd( -34.6816, -162.414, -88.121, 1.11 ) }
    dend_21 { pt3dadd( -35.1777, -162.963, -88.4082, 0.15 ) }
    dend_21 { pt3dadd( -35.5613, -163.392, -88.6945, 0.15 ) }
    dend_21 { pt3dadd( -35.9524, -163.863, -89.062, 0.88 ) }
    dend_21 { pt3dadd( -36.1456, -164.088, -89.2584, 1.11 ) }
    dend_21 { pt3dadd( -36.3073, -164.264, -89.4164, 1.11 ) }
    dend_21 { pt3dadd( -36.9235, -164.899, -89.9854, 0.22 ) }
    dend_21 { pt3dadd( -37.5485, -165.531, -90.562, 0.22 ) }
    dend_21 { pt3dadd( -37.7796, -165.787, -90.8441, 0.22 ) }
    dend_21 { pt3dadd( -38.2322, -166.336, -91.4748, 0.22 ) }
    dend_21 { pt3dadd( -38.58, -166.803, -92.0097, 1.25 ) }
    dend_21 { pt3dadd( -38.7917, -167.124, -92.3573, 1.55 ) }
    dend_21 { pt3dadd( -39.0528, -167.571, -92.8265, 1.55 ) }
    dend_21 { pt3dadd( -39.9828, -169.209, -94.5416, 0.22 ) }
    dend_21 { pt3dadd( -40.1001, -169.432, -94.7958, 0.66 ) }
    dend_21 { pt3dadd( -40.1946, -169.62, -95.0557, 0.66 ) }
    dend_21 { pt3dadd( -40.3789, -169.968, -95.6024, 0.22 ) }
    dend_21 { pt3dadd( -40.5692, -170.274, -96.1216, 0.22 ) }
    dend_21 { pt3dadd( -40.7224, -170.471, -96.4525, 0.66 ) }
    dend_21 { pt3dadd( -40.9822, -170.75, -96.8565, 0.74 ) }
    dend_21 { pt3dadd( -41.6957, -171.511, -97.8769, 0.22 ) }
    dend_21 { pt3dadd( -41.9535, -171.788, -98.2147, 0.44 ) }
    dend_21 { pt3dadd( -42.1226, -171.978, -98.4164, 0.44 ) }
    dend_21 { pt3dadd( -42.4259, -172.42, -98.8569, 0.22 ) }
    dend_21 { pt3dadd( -42.6523, -172.827, -99.2862, 1.33 ) }
    dend_21 { pt3dadd( -42.7755, -173.081, -99.5734, 1.69 ) }
    dend_21 { pt3dadd( -42.8274, -173.184, -99.7085, 1.92 ) }
    dend_21 { pt3dadd( -42.9835, -173.501, -100.213, 1.69 ) }
    dend_21 { pt3dadd( -43.4298, -174.508, -101.952, 0.59 ) }
    dend_21 { pt3dadd( -43.6289, -175.041, -102.948, 0.96 ) }
    dend_21 { pt3dadd( -43.7671, -175.482, -103.773, 0.44 ) }
    dend_21 { pt3dadd( -43.8741, -175.876, -104.487, 0.29 ) }
    dend_21 { pt3dadd( -43.9719, -176.304, -105.234, 0.29 ) }
    dend_21 { pt3dadd( -44.0151, -176.554, -105.643, 0.29 ) }
    dend_21 { pt3dadd( -44.1461, -177.27, -106.702, 0.88 ) }
    dend_21 { pt3dadd( -44.2185, -177.6, -107.201, 1.55 ) }
    dend_21 { pt3dadd( -44.2513, -177.707, -107.371, 2.06 ) }
    dend_21 { pt3dadd( -44.6051, -178.613, -108.913, 1.69 ) }
    dend_21 { pt3dadd( -44.6348, -178.658, -109.023, 1.84 ) }
    dend_21 { pt3dadd( -45.0502, -179.132, -110.458, 0.37 ) }
    dend_21 { pt3dadd( -45.3898, -179.46, -111.573, 0.22 ) }
    dend_21 { pt3dadd( -45.6466, -179.707, -112.48, 1.84 ) }
    dend_21 { pt3dadd( -45.8581, -179.917, -113.237, 2.06 ) }
    dend_21 { pt3dadd( -46.6178, -180.704, -116.195, 0.22 ) }
    dend_21 { pt3dadd( -46.7507, -180.844, -116.735, 0.22 ) }
    dend_21 { pt3dadd( -46.9151, -181.042, -117.475, 1.55 ) }
    dend_21 { pt3dadd( -47.1745, -181.403, -118.697, 1.69 ) }
    dend_21 { pt3dadd( -47.2388, -181.531, -119.105, 1.69 ) }
    dend_21 { pt3dadd( -47.6345, -182.578, -122.159, 0.52 ) }
    dend_21 { pt3dadd( -47.6864, -182.758, -122.625, 1.92 ) }
    dend_21 { pt3dadd( -47.7541, -182.994, -123.241, 1.92 ) }
    dend_21 { pt3dadd( -48.1379, -184.188, -126.379, 1.92 ) }
    dend_21 { pt3dadd( -48.6562, -185.595, -129.957, 0.66 ) }
    dend_21 { pt3dadd( -48.7212, -185.782, -130.419, 0.66 ) }
    dend_21 { pt3dadd( -48.8115, -186.086, -131.102, 0.29 ) }
    dend_21 { pt3dadd( -48.8728, -186.33, -131.627, 0.29 ) }
    dend_21 { pt3dadd( -48.926, -186.549, -132.079, 1.11 ) }
    dend_21 { pt3dadd( -48.971, -186.766, -132.454, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -49.3736, -188.144, -134.923, 0.22 ) }
    dend_21 { pt3dadd( -49.4128, -188.258, -135.149, 0.22 ) }
    dend_21 { pt3dadd( -49.5109, -188.512, -135.674, 1.47 ) }
    dend_21 { pt3dadd( -49.6512, -188.861, -136.425, 1.77 ) }
    dend_21 { pt3dadd( -49.7356, -189.058, -136.895, 1.77 ) }
    dend_21 { pt3dadd( -50.3482, -190.302, -139.992, 0.22 ) }
    dend_21 { pt3dadd( -50.5031, -190.581, -140.711, 1.33 ) }
    dend_21 { pt3dadd( -50.6164, -190.829, -141.389, 1.62 ) }
    dend_21 { pt3dadd( -50.7553, -191.206, -142.415, 1.62 ) }
    dend_21 { pt3dadd( -51.0556, -192.202, -145.199, 0.22 ) }
    dend_21 { pt3dadd( -51.0881, -192.362, -145.674, 1.18 ) }
    dend_21 { pt3dadd( -51.1531, -192.758, -146.844, 1.33 ) }
    dend_21 { pt3dadd( -51.2833, -193.617, -149.306, 0.15 ) }
    dend_21 { pt3dadd( -51.3196, -193.832, -149.885, 1.25 ) }
    dend_21 { pt3dadd( -51.4692, -194.49, -151.541, 1.62 ) }
    dend_21 { pt3dadd( -51.8714, -195.768, -154.69, 0.22 ) }
    dend_21 { pt3dadd( -52.051, -196.215, -155.808, 0.22 ) }
    dend_21 { pt3dadd( -52.1842, -196.484, -156.455, 0.44 ) }
    dend_21 { pt3dadd( -52.3497, -196.8, -157.182, 0.88 ) }
    dend_21 { pt3dadd( -52.4194, -196.959, -157.535, 1.47 ) }
    dend_21 { pt3dadd( -52.5493, -197.443, -158.512, 1.62 ) }
    dend_21 { pt3dadd( -52.7311, -198.684, -160.905, 0.22 ) }
    dend_21 { pt3dadd( -52.7362, -198.806, -161.144, 1.03 ) }
    dend_21 { pt3dadd( -52.7435, -199.548, -162.618, 1.11 ) }
    dend_21 { pt3dadd( -52.7422, -199.947, -163.387, 0.96 ) }
    dend_21 { pt3dadd( -52.7113, -201.359, -166.001, 0.22 ) }
    dend_21 { pt3dadd( -52.7161, -201.522, -166.3, 0.81 ) }
    dend_21 { pt3dadd( -52.7476, -201.829, -166.847, 0.81 ) }
    dend_21 { pt3dadd( -52.8441, -202.364, -167.778, 0.22 ) }
    dend_21 { pt3dadd( -52.9848, -202.916, -168.705, 1.47 ) }
    dend_21 { pt3dadd( -53.1792, -203.538, -169.695, 1.62 ) }
    dend_21 { pt3dadd( -53.7789, -205.167, -172.071, 0.15 ) }
    dend_21 { pt3dadd( -53.9264, -205.554, -172.63, 0.15 ) }
    dend_21 { pt3dadd( -54.0721, -205.957, -173.174, 0.96 ) }
    dend_21 { pt3dadd( -54.1487, -206.178, -173.461, 0.96 ) }
    dend_21 { pt3dadd( -54.2674, -206.531, -173.876, 0.22 ) }
    dend_21 { pt3dadd( -54.3711, -206.847, -174.182, 1.11 ) }
    dend_21 { pt3dadd( -54.533, -207.509, -174.629, 1.11 ) }
    dend_21 { pt3dadd( -54.8512, -208.813, -175.711, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 39/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -15.677, -59.0664, 2.28165, 2.8 ) }
    dend_18 { pt3dadd( -15.5774, -59.5031, 2.46151, 2.8 ) }
    dend_18 { pt3dadd( -15.2588, -60.9001, 3.0369, 1.84 ) }
    dend_18 { pt3dadd( -14.9408, -62.2948, 3.61134, 1.03 ) }
    dend_18 { pt3dadd( -14.7887, -62.9615, 3.88597, 1.03 ) }
    dend_18 { pt3dadd( -14.593, -63.82, 4.23955, 1.18 ) }
    dend_18 { pt3dadd( -14.4194, -64.581, 4.55298, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 46/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.36382, 14.0645, -0.298599, 0.81 ) }
    dend_16 { pt3dadd( 8.11124, 14.4115, 0.361268, 0.81 ) }
    dend_16 { pt3dadd( 8.51757, 14.6437, 0.803624, 0.37 ) }
    dend_16 { pt3dadd( 9.14644, 15.041, 1.52845, 0.88 ) }
    dend_16 { pt3dadd( 9.68278, 15.4119, 2.15175, 1.25 ) }
    dend_16 { pt3dadd( 10.405, 15.9529, 2.98118, 1.25 ) }
    dend_16 { pt3dadd( 10.7458, 16.2272, 3.35698, 1.11 ) }
    dend_16 { pt3dadd( 11.6903, 17.1376, 4.42282, 1.11 ) }
    dend_16 { pt3dadd( 11.9737, 17.4311, 4.71106, 1.11 ) }
    dend_16 { pt3dadd( 12.3347, 17.8001, 5.00218, 0.96 ) }
    dend_16 { pt3dadd( 13.1584, 18.5811, 5.47774, 0.66 ) }
    dend_16 { pt3dadd( 13.8253, 19.1413, 5.74964, 0.74 ) }
    dend_16 { pt3dadd( 14.5497, 19.6593, 5.96598, 0.88 ) }
    dend_16 { pt3dadd( 15.3764, 20.1318, 6.12291, 0.96 ) }
    dend_16 { pt3dadd( 16.2046, 20.4873, 6.2129, 0.74 ) }
    dend_16 { pt3dadd( 17.1362, 20.7569, 6.24697, 1.62 ) }
    dend_16 { pt3dadd( 18.0024, 20.8965, 6.21936, 1.84 ) }
    dend_16 { pt3dadd( 18.7213, 20.9348, 6.16669, 1.69 ) }
    dend_16 { pt3dadd( 19.5547, 20.9285, 6.06823, 1.62 ) }
    dend_16 { pt3dadd( 20.863, 20.898, 5.912, 0.88 ) }
    dend_16 { pt3dadd( 21.5654, 20.9276, 5.83624, 0.74 ) }
    dend_16 { pt3dadd( 22.4285, 21.03, 5.77132, 0.74 ) }
    dend_16 { pt3dadd( 23.3146, 21.2241, 5.73982, 0.96 ) }
    dend_16 { pt3dadd( 24.0609, 21.4707, 5.77054, 0.81 ) }
    dend_16 { pt3dadd( 25.0159, 21.8976, 5.90391, 0.74 ) }
    dend_16 { pt3dadd( 26.2193, 22.5602, 6.30696, 1.25 ) }
    dend_16 { pt3dadd( 26.716, 22.8725, 6.56574, 1.47 ) }
    dend_16 { pt3dadd( 27.1791, 23.2047, 6.96696, 1.77 ) }
    dend_16 { pt3dadd( 27.508, 23.4743, 7.35646, 1.77 ) }
    dend_16 { pt3dadd( 27.9078, 23.827, 7.98601, 1.11 ) }
    dend_16 { pt3dadd( 28.7043, 24.4714, 9.42606, 1.03 ) }
    dend_16 { pt3dadd( 29.1788, 24.8101, 10.3452, 1.18 ) }
    dend_16 { pt3dadd( 30.1425, 25.4327, 12.2253, 1.4 ) }
    dend_16 { pt3dadd( 30.4221, 25.588, 12.7619, 1.55 ) }
    dend_16 { pt3dadd( 31.3937, 25.982, 14.5025, 1.4 ) }
    dend_16 { pt3dadd( 32.0458, 26.1438, 15.5245, 1.84 ) }
    dend_16 { pt3dadd( 32.3976, 26.1766, 15.9618, 2.43 ) }
    dend_16 { pt3dadd( 32.8186, 26.171, 16.3648, 2.43 ) }
    dend_16 { pt3dadd( 33.3773, 26.1207, 16.7608, 2.21 ) }
    dend_16 { pt3dadd( 34.8867, 25.9401, 17.6637, 0.96 ) }
    dend_16 { pt3dadd( 35.6904, 25.8689, 18.0612, 0.66 ) }
    dend_16 { pt3dadd( 36.2774, 25.8622, 18.3367, 0.66 ) }
    dend_16 { pt3dadd( 36.924, 25.8864, 18.6388, 0.66 ) }
    dend_16 { pt3dadd( 37.5695, 25.9508, 18.9208, 0.66 ) }
    dend_16 { pt3dadd( 38.4537, 26.1163, 19.2881, 0.66 ) }
    dend_16 { pt3dadd( 39.4013, 26.4043, 19.641, 1.03 ) }
    dend_16 { pt3dadd( 40.2083, 26.7455, 19.9385, 0.59 ) }
    dend_16 { pt3dadd( 41.0767, 27.1788, 20.2392, 0.59 ) }
    dend_16 { pt3dadd( 41.6733, 27.522, 20.4332, 0.96 ) }
    dend_16 { pt3dadd( 42.4379, 28.0214, 20.6646, 0.66 ) }
    dend_16 { pt3dadd( 43.1512, 28.5553, 20.8438, 0.66 ) }
    dend_16 { pt3dadd( 44.1027, 29.3417, 21.0414, 1.33 ) }
    dend_16 { pt3dadd( 44.2788, 29.5028, 21.073, 1.55 ) }
    dend_16 { pt3dadd( 44.6006, 29.8259, 21.1136, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 44.9889, 30.2371, 21.1557, 1.4 ) }
    dend_16 { pt3dadd( 45.4774, 30.7693, 21.1828, 1.11 ) }
    dend_16 { pt3dadd( 45.807, 31.135, 21.2083, 1.11 ) }
    dend_16 { pt3dadd( 53.2126, 35.867, 27.512, 1.11 ) }
    dend_16 { pt3dadd( 60.7199, 40.0992, 34.0138, 1.11 ) }
    dend_16 { pt3dadd( 68.5039, 45.0237, 39.6968, 1.11 ) }
    dend_16 { pt3dadd( 75.3737, 50.4146, 46.1274, 1.11 ) }
    dend_16 { pt3dadd( 82.864, 54.4234, 52.7753, 1.11 ) }
    dend_16 { pt3dadd( 90.4323, 58.4022, 59.3508, 1.11 ) }
    dend_16 { pt3dadd( 98.2007, 63.8, 64.6527, 1.11 ) }
    dend_16 { pt3dadd( 106.217, 68.9636, 69.7934, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.36382, 14.0645, -0.298599, 2.95 ) }
    dend_1 { pt3dadd( 7.40785, 15.9773, -0.283044, 2.95 ) }
    dend_1 { pt3dadd( 7.44914, 17.771, -0.268457, 2.95 ) }
    dend_1 { pt3dadd( 7.48206, 19.2007, -0.256831, 2.95 ) }
    dend_1 { pt3dadd( 7.50195, 20.0648, -0.249804, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 30.5123, 47.7112, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 38.5543, 60.3732, -0.918402, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -24.2147, -16.7796, 7.26075, 0.59 ) }
    dend_28 { pt3dadd( -24.2077, -18.2909, 7.37869, 0.59 ) }
    dend_28 { pt3dadd( -24.2014, -19.3497, 7.58546, 0.52 ) }
    dend_28 { pt3dadd( -24.2066, -20.1306, 7.78095, 0.88 ) }
    dend_28 { pt3dadd( -24.2223, -20.9848, 8.01983, 1.03 ) }
    dend_28 { pt3dadd( -24.2341, -21.6286, 8.19988, 1.03 ) }
    dend_28 { pt3dadd( -24.2511, -22.5529, 8.45835, 0.52 ) }
    dend_28 { pt3dadd( -24.2986, -23.8367, 8.92339, 1.11 ) }
    dend_28 { pt3dadd( -24.3187, -24.2975, 9.13656, 1.4 ) }
    dend_28 { pt3dadd( -24.3426, -24.8107, 9.41504, 1.4 ) }
    dend_28 { pt3dadd( -23.6317, -36.4009, 13.0369, 1.4 ) }
    dend_28 { pt3dadd( -23.1469, -47.3655, 18.1209, 1.4 ) }
    dend_28 { pt3dadd( -22.606, -57.9013, 23.9531, 1.4 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -24.2147, -16.7796, 7.26075, 0.29 ) }
    dend_25 { pt3dadd( -25.7688, -16.4058, 7.13055, 0.29 ) }
    dend_25 { pt3dadd( -27.0969, -16.0864, 7.01928, 0.59 ) }
    dend_25 { pt3dadd( -27.5663, -15.9735, 6.97996, 0.81 ) }
    dend_25 { pt3dadd( -28.1922, -15.8229, 6.92752, 0.81 ) }
    dend_25 { pt3dadd( -29.1692, -15.588, 6.84567, 0.29 ) }
    dend_25 { pt3dadd( -29.758, -15.4463, 6.79633, 0.59 ) }
    dend_25 { pt3dadd( -40.7825, -10.2563, 7.48066, 0.59 ) }
    dend_25 { pt3dadd( -50.5045, -3.23331, 10.1421, 0.59 ) }
    dend_25 { pt3dadd( -60.1521, 4.32404, 11.3848, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.4194, -64.581, 4.55298, 0.59 ) }
    dend_20 { pt3dadd( -14.4561, -65.5769, 6.08823, 0.59 ) }
    dend_20 { pt3dadd( -14.4957, -66.5235, 7.47951, 0.44 ) }
    dend_20 { pt3dadd( -14.4937, -66.871, 8.0287, 0.44 ) }
    dend_20 { pt3dadd( -14.4704, -67.5441, 9.18265, 0.81 ) }
    dend_20 { pt3dadd( -14.4282, -68.0062, 10.0159, 1.25 ) }
    dend_20 { pt3dadd( -14.3862, -68.3137, 10.6189, 1.47 ) }
    dend_20 { pt3dadd( -14.34, -68.5864, 11.2317, 1.47 ) }
    dend_20 { pt3dadd( -14.1289, -69.6529, 13.6726, 0.74 ) }
    dend_20 { pt3dadd( -13.8632, -70.6266, 16.1639, 0.37 ) }
    dend_20 { pt3dadd( -13.7685, -70.8553, 16.83, 0.37 ) }
    dend_20 { pt3dadd( -13.6203, -71.1302, 17.756, 0.81 ) }
    dend_20 { pt3dadd( -13.4737, -71.3627, 18.6348, 0.96 ) }
    dend_20 { pt3dadd( -11.7642, -74.8956, 29.6883, 0.96 ) }
    dend_20 { pt3dadd( -10.045, -80.7773, 39.7977, 0.96 ) }
    dend_20 { pt3dadd( -6.70373, -84.1356, 50.5221, 0.96 ) }
    dend_20 { pt3dadd( -3.66585, -87.6676, 61.2867, 0.96 ) }
    dend_20 { pt3dadd( 1.02944, -91.6309, 71.2936, 0.96 ) }
    dend_20 { pt3dadd( 6.87733, -93.0615, 81.3053, 0.96 ) }
    dend_20 { pt3dadd( 11.7163, -93.3728, 91.9224, 0.96 ) }
    dend_20 { pt3dadd( 17.2625, -95.3196, 102.028, 0.96 ) }
    dend_20 { pt3dadd( 24.4117, -98.162, 110.855, 0.96 ) }
    dend_20 { pt3dadd( 30.2127, -99.9433, 120.844, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -14.4194, -64.581, 4.55298, 1.11 ) }
    dend_19 { pt3dadd( -14.8901, -65.8312, 4.43265, 1.11 ) }
    dend_19 { pt3dadd( -15.4228, -67.3031, 4.5001, 1.11 ) }
    dend_19 { pt3dadd( -16.0411, -69.131, 4.76771, 1.11 ) }
    dend_19 { pt3dadd( -16.3772, -70.2144, 5.0199, 0.96 ) }
    dend_19 { pt3dadd( -16.608, -70.9988, 5.25639, 0.96 ) }
    dend_19 { pt3dadd( -17.1662, -73.0222, 6.01409, 1.11 ) }
    dend_19 { pt3dadd( -17.4075, -74.0524, 6.53058, 1.25 ) }
    dend_19 { pt3dadd( -17.5837, -74.974, 7.09818, 1.25 ) }
    dend_19 { pt3dadd( -17.7501, -76.0537, 7.85282, 1.03 ) }
    dend_19 { pt3dadd( -17.8839, -77.0803, 8.55969, 1.03 ) }
    dend_19 { pt3dadd( -18.0679, -78.4357, 9.38051, 1.18 ) }
    dend_19 { pt3dadd( -18.1724, -79.1372, 9.69774, 1.77 ) }
    dend_19 { pt3dadd( -18.3085, -79.8203, 9.92787, 2.28 ) }
    dend_19 { pt3dadd( -18.4903, -80.5484, 10.0943, 2.14 ) }
    dend_19 { pt3dadd( -18.829, -81.7164, 10.2411, 1.62 ) }
    dend_19 { pt3dadd( -19.2031, -82.9334, 10.3115, 1.03 ) }
    dend_19 { pt3dadd( -19.6459, -84.2992, 10.3319, 0.74 ) }
    dend_19 { pt3dadd( -20.1173, -85.6883, 10.3619, 0.96 ) }
    dend_19 { pt3dadd( -20.6779, -87.3156, 10.4218, 1.25 ) }
    dend_19 { pt3dadd( -21.2718, -88.9782, 10.5517, 1.62 ) }
    dend_19 { pt3dadd( -21.5895, -89.8708, 10.6576, 1.55 ) }
    dend_19 { pt3dadd( -21.8472, -90.5888, 10.7692, 1.69 ) }
    dend_19 { pt3dadd( -22.4835, -92.2442, 11.081, 1.18 ) }
    dend_19 { pt3dadd( -22.9625, -93.4072, 11.3501, 1.03 ) }
    dend_19 { pt3dadd( -23.4438, -94.4679, 11.6342, 1.33 ) }
    dend_19 { pt3dadd( -23.8286, -95.2608, 11.8612, 1.62 ) }
    dend_19 { pt3dadd( -24.1488, -95.9005, 12.0352, 1.62 ) }
    dend_19 { pt3dadd( -24.5754, -96.7942, 12.2637, 1.77 ) }
    dend_19 { pt3dadd( -24.8555, -97.4628, 12.4118, 1.77 ) }
    dend_19 { pt3dadd( -25.2371, -98.5248, 12.6525, 1.55 ) }
    dend_19 { pt3dadd( -25.5526, -99.5107, 12.8926, 1.25 ) }
    dend_19 { pt3dadd( -25.8698, -100.758, 13.1723, 0.81 ) }
    dend_19 { pt3dadd( -26.1658, -102.416, 13.483, 0.81 ) }
    dend_19 { pt3dadd( -26.3395, -103.697, 13.7243, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( -26.5132, -105.241, 14.0482, 1.03 ) }
    dend_19 { pt3dadd( -26.5845, -106.151, 14.2686, 1.18 ) }
    dend_19 { pt3dadd( -26.68, -108.009, 14.7693, 0.29 ) }
    dend_19 { pt3dadd( -26.7142, -109.027, 15.0541, 0.37 ) }
    dend_19 { pt3dadd( -26.7914, -110.715, 15.5054, 0.37 ) }
    dend_19 { pt3dadd( -26.8559, -111.895, 15.8336, 0.29 ) }
    dend_19 { pt3dadd( -26.9018, -112.725, 16.0597, 0.29 ) }
    dend_19 { pt3dadd( -26.965, -113.53, 16.3164, 0.29 ) }
    dend_19 { pt3dadd( -27.0959, -114.252, 16.6472, 0.29 ) }
    dend_19 { pt3dadd( -27.2921, -115.15, 17.0629, 0.22 ) }
    dend_19 { pt3dadd( -28.9921, -127.009, 21.6116, 0.22 ) }
    dend_19 { pt3dadd( -32.0968, -138.334, 26.6304, 0.22 ) }
    dend_19 { pt3dadd( -35.018, -149.438, 32.1866, 0.22 ) }
    dend_19 { pt3dadd( -38.5737, -158.816, 39.8635, 0.22 ) }
    dend_19 { pt3dadd( -40.911, -168.673, 47.4663, 0.22 ) }
    dend_19 { pt3dadd( -44.1804, -178.336, 54.9485, 0.22 ) }
    dend_19 { pt3dadd( -47.2617, -189.591, 60.1232, 0.22 ) }
    dend_19 { pt3dadd( -51.7199, -199.855, 66.105, 0.22 ) }
    dend_19 { pt3dadd( -57.2713, -209.562, 72.0103, 0.22 ) }
    dend_19 { pt3dadd( -60.6212, -219.38, 79.2682, 0.22 ) }
    dend_19 { pt3dadd( -62.8756, -228.453, 87.7347, 0.22 ) }
    dend_19 { pt3dadd( -66.1867, -235.606, 97.4296, 0.22 ) }
    dend_19 { pt3dadd( -66.9758, -243.763, 106.943, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.50195, 20.0648, -0.249804, 0.66 ) }
    dend_15 { pt3dadd( 6.74478, 21.0616, -0.21314, 0.66 ) }
    dend_15 { pt3dadd( 6.3061, 21.7641, -0.185499, 0.29 ) }
    dend_15 { pt3dadd( 6.12521, 22.0942, -0.169858, 0.44 ) }
    dend_15 { pt3dadd( 5.6148, 23.1511, -0.115699, 0.44 ) }
    dend_15 { pt3dadd( 5.07754, 24.3566, -0.0495409, 0.81 ) }
    dend_15 { pt3dadd( 4.86462, 24.8599, -0.0201665, 0.96 ) }
    dend_15 { pt3dadd( 4.61264, 25.5412, 0.0241701, 0.81 ) }
    dend_15 { pt3dadd( 4.43825, 25.9811, 0.0606566, 1.03 ) }
    dend_15 { pt3dadd( 4.12342, 26.6335, 0.119989, 1.18 ) }
    dend_15 { pt3dadd( 3.68095, 27.3098, 0.19329, 0.66 ) }
    dend_15 { pt3dadd( 2.92021, 28.0646, 0.30246, 0.22 ) }
    dend_15 { pt3dadd( 2.35293, 28.439, 0.375893, 0.22 ) }
    dend_15 { pt3dadd( 1.73672, 28.6956, 0.44968, 0.22 ) }
    dend_15 { pt3dadd( 0.941828, 28.9298, 0.540795, 0.66 ) }
    dend_15 { pt3dadd( 0.419248, 29.0445, 0.600978, 0.81 ) }
    dend_15 { pt3dadd( -9.48116E-4, 29.1268, 0.6461, 0.66 ) }
    dend_15 { pt3dadd( -0.606828, 29.2556, 0.703501, 0.52 ) }
    dend_15 { pt3dadd( -1.55103, 29.5314, 0.785588, 0.44 ) }
    dend_15 { pt3dadd( -2.39911, 29.8359, 0.83232, 0.52 ) }
    dend_15 { pt3dadd( -3.02589, 30.0962, 0.831297, 0.88 ) }
    dend_15 { pt3dadd( -3.62012, 30.3791, 0.781317, 1.11 ) }
    dend_15 { pt3dadd( -4.0923, 30.629, 0.711223, 1.11 ) }
    dend_15 { pt3dadd( -4.5897, 30.9176, 0.586325, 0.96 ) }
    dend_15 { pt3dadd( -5.34032, 31.3834, 0.323139, 0.37 ) }
    dend_15 { pt3dadd( -6.16805, 31.9326, -0.0403657, 0.29 ) }
    dend_15 { pt3dadd( -6.84361, 32.417, -0.369092, 0.88 ) }
    dend_15 { pt3dadd( -7.1737, 32.6784, -0.530613, 1.03 ) }
    dend_15 { pt3dadd( -7.78442, 33.2138, -0.851332, 1.03 ) }
    dend_15 { pt3dadd( -7.9566, 33.3838, -0.947136, 1.03 ) }
    dend_15 { pt3dadd( -8.68615, 34.2172, -1.34579, 0.29 ) }
    dend_15 { pt3dadd( -9.01045, 34.6489, -1.5465, 0.29 ) }
    dend_15 { pt3dadd( -9.52641, 35.39, -1.90024, 0.96 ) }
    dend_15 { pt3dadd( -9.88354, 35.9013, -2.15889, 1.11 ) }
    dend_15 { pt3dadd( -10.0897, 36.1928, -2.30246, 1.11 ) }
    dend_15 { pt3dadd( -10.3964, 36.6074, -2.51502, 0.66 ) }
    dend_15 { pt3dadd( -11.105, 37.5398, -2.99282, 0.29 ) }
    dend_15 { pt3dadd( -11.5372, 38.0731, -3.27946, 0.29 ) }
    dend_15 { pt3dadd( -12.0364, 38.6546, -3.56803, 0.66 ) }
    dend_15 { pt3dadd( -12.3577, 39.0022, -3.73101, 0.88 ) }
    dend_15 { pt3dadd( -12.6531, 39.304, -3.86806, 1.03 ) }
    dend_15 { pt3dadd( -13.1173, 39.7629, -4.06586, 0.74 ) }
    dend_15 { pt3dadd( -13.7149, 40.335, -4.27246, 0.44 ) }
    dend_15 { pt3dadd( -14.4377, 41.0246, -4.51046, 0.22 ) }
    dend_15 { pt3dadd( -15.1236, 41.6787, -4.73659, 0.44 ) }
    dend_15 { pt3dadd( -15.4784, 42.0137, -4.84541, 0.59 ) }
    dend_15 { pt3dadd( -15.7546, 42.2895, -4.88822, 0.59 ) }
    dend_15 { pt3dadd( -16.3086, 42.8943, -4.8529, 0.29 ) }
    dend_15 { pt3dadd( -16.8735, 43.591, -4.66941, 0.59 ) }
    dend_15 { pt3dadd( -17.1968, 44.0326, -4.48561, 0.59 ) }
    dend_15 { pt3dadd( -17.4269, 44.3426, -4.30501, 0.59 ) }
    dend_15 { pt3dadd( -18.4708, 45.6412, -3.39159, 1.69 ) }
    dend_15 { pt3dadd( -18.9767, 46.2423, -2.90037, 2.14 ) }
    dend_15 { pt3dadd( -19.288, 46.6046, -2.57991, 2.36 ) }
    dend_15 { pt3dadd( -19.53, 46.8746, -2.325, 2.36 ) }
    dend_15 { pt3dadd( -20.6184, 48.0096, -1.2212, 0.29 ) }
    dend_15 { pt3dadd( -21.2507, 48.6121, -0.625149, 0.22 ) }
    dend_15 { pt3dadd( -22.1209, 49.3633, 0.11953, 0.74 ) }
    dend_15 { pt3dadd( -22.4925, 49.6723, 0.425804, 0.96 ) }
    dend_15 { pt3dadd( -22.7093, 49.8565, 0.609564, 0.96 ) }
    dend_15 { pt3dadd( -23.461, 50.5376, 1.24102, 0.22 ) }
    dend_15 { pt3dadd( -24.1647, 51.2568, 1.83147, 0.81 ) }
    dend_15 { pt3dadd( -24.2881, 51.3914, 1.92936, 1.18 ) }
    dend_15 { pt3dadd( -24.7372, 51.8708, 2.26296, 1.18 ) }
    dend_15 { pt3dadd( -24.9143, 52.0612, 2.39318, 1.18 ) }
    dend_15 { pt3dadd( -25.4586, 52.6666, 2.76761, 0.15 ) }
    dend_15 { pt3dadd( -25.6958, 52.9614, 2.91348, 0.37 ) }
    dend_15 { pt3dadd( -25.9105, 53.2828, 3.02433, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.50195, 20.0648, -0.249804, 2.8 ) }
    dend_2 { pt3dadd( 8.85782, 22.0742, 0.0348271, 2.8 ) }
    dend_2 { pt3dadd( 9.70617, 23.3315, 0.212919, 2.8 ) }
    dend_2 { pt3dadd( 10.4305, 24.4049, 0.364965, 2.95 ) }
    dend_2 { pt3dadd( 11.2159, 25.5688, 0.529831, 3.68 ) }
    dend_2 { pt3dadd( 11.7565, 26.3701, 0.643331, 3.9 ) }
    dend_2 { pt3dadd( 12.2694, 27.1303, 0.751005, 4.57 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -22.606, -57.9013, 23.9531, 0.66 ) }
    dend_30 { pt3dadd( -22.2598, -68.3917, 28.603, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -20.1758, -78.5511, 33.4608, 0.66 ) }
    dend_30 { pt3dadd( -20.2867, -87.9921, 39.8228, 0.66 ) }
    dend_30 { pt3dadd( -21.588, -96.7611, 46.886, 0.66 ) }
    dend_30 { pt3dadd( -23.4607, -105.172, 54.2126, 0.66 ) }
    dend_30 { pt3dadd( -24.3996, -114.461, 60.7077, 0.66 ) }
    dend_30 { pt3dadd( -26.3776, -122.235, 68.6244, 0.66 ) }
    dend_30 { pt3dadd( -27.5671, -130.716, 76.0181, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -22.606, -57.9013, 23.9531, 0.59 ) }
    dend_29 { pt3dadd( -22.2559, -67.2956, 28.4618, 0.66 ) }
    dend_29 { pt3dadd( -22.2168, -76.8973, 32.5779, 0.66 ) }
    dend_29 { pt3dadd( -23.0371, -86.8833, 35.6843, 0.66 ) }
    dend_29 { pt3dadd( -24.8134, -96.7976, 38.6041, 0.66 ) }
    dend_29 { pt3dadd( -25.0244, -107.326, 39.46, 0.66 ) }
    dend_29 { pt3dadd( -23.9675, -117.355, 42.37, 0.66 ) }
    dend_29 { pt3dadd( -23.329, -127.409, 45.3189, 0.66 ) }
    dend_29 { pt3dadd( -23.8547, -137.684, 47.5413, 0.66 ) }
    dend_29 { pt3dadd( -23.4585, -147.815, 50.2948, 0.66 ) }
    dend_29 { pt3dadd( -22.2776, -157.569, 53.8987, 0.66 ) }
    dend_29 { pt3dadd( -21.1481, -167.82, 55.9987, 0.66 ) }
    dend_29 { pt3dadd( -19.0658, -177.322, 59.7939, 0.66 ) }
    dend_29 { pt3dadd( -16.2987, -187.329, 61.4215, 0.66 ) }
    dend_29 { pt3dadd( -15.3925, -197.866, 61.5316, 0.66 ) }
    dend_29 { pt3dadd( -13.174, -208.109, 62.6203, 0.66 ) }
    dend_29 { pt3dadd( -12.1318, -218.599, 63.311, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -60.1521, 4.32404, 11.3848, 0.59 ) }
    dend_27 { pt3dadd( -66.1749, 7.71542, 11.5472, 0.59 ) }
    dend_27 { pt3dadd( -72.0405, 11.368, 10.999, 0.59 ) }
    dend_27 { pt3dadd( -78.2535, 14.208, 11.867, 0.59 ) }
    dend_27 { pt3dadd( -84.546, 16.9966, 12.1298, 0.59 ) }
    dend_27 { pt3dadd( -90.0083, 21.208, 12.9833, 0.59 ) }
    dend_27 { pt3dadd( -95.6281, 25.278, 13.3136, 0.59 ) }
    dend_27 { pt3dadd( -100.099, 30.555, 14.4647, 0.59 ) }
    dend_27 { pt3dadd( -104.06, 36.3502, 15.1452, 0.59 ) }
    dend_27 { pt3dadd( -106.816, 42.8818, 15.6758, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 34/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -60.1521, 4.32404, 11.3848, 0.59 ) }
    dend_26 { pt3dadd( -67.4091, 8.76716, 12.7065, 0.59 ) }
    dend_26 { pt3dadd( -74.8701, 13.0732, 12.8931, 0.59 ) }
    dend_26 { pt3dadd( -82.7395, 16.4496, 12.2963, 0.59 ) }
    dend_26 { pt3dadd( -90.608, 19.5035, 10.7598, 0.59 ) }
    dend_26 { pt3dadd( -97.7906, 23.6271, 8.31903, 0.59 ) }
    dend_26 { pt3dadd( -105.253, 27.0054, 5.6941, 0.59 ) }
    dend_26 { pt3dadd( -112.175, 30.748, 2.15962, 0.59 ) }
    dend_26 { pt3dadd( -119.577, 32.6992, -1.66389, 0.59 ) }
    dend_26 { pt3dadd( -127.088, 34.2473, -5.43035, 0.59 ) }
    dend_26 { pt3dadd( -134.981, 35.2987, -8.48505, 0.59 ) }
    dend_26 { pt3dadd( -142.854, 34.7501, -11.6638, 0.59 ) }
    dend_26 { pt3dadd( -150.424, 34.572, -15.5511, 0.59 ) }
    dend_26 { pt3dadd( -158.193, 35.0265, -19.0174, 0.59 ) }
    dend_26 { pt3dadd( -166.368, 34.8038, -21.3646, 0.59 ) }
    dend_26 { pt3dadd( -174.516, 33.763, -23.5761, 0.59 ) }
    dend_26 { pt3dadd( -182.846, 34.2273, -25.2772, 0.59 ) }
    dend_26 { pt3dadd( -191.276, 34.1446, -26.4238, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.2694, 27.1303, 0.751005, 2.36 ) }
    dend_12 { pt3dadd( 13.4996, 27.738, 2.51085, 2.36 ) }
    dend_12 { pt3dadd( 14.2871, 28.0822, 3.9489, 1.99 ) }
    dend_12 { pt3dadd( 14.6757, 28.2491, 4.77605, 1.84 ) }
    dend_12 { pt3dadd( 15.7629, 28.7441, 7.47778, 1.55 ) }
    dend_12 { pt3dadd( 16.7753, 29.2356, 10.4609, 2.06 ) }
    dend_12 { pt3dadd( 17.6701, 29.7529, 13.6719, 2.43 ) }
    dend_12 { pt3dadd( 18.0551, 30.0059, 16.0739, 2.58 ) }
    dend_12 { pt3dadd( 18.1177, 30.0487, 16.8599, 2.36 ) }
    dend_12 { pt3dadd( 18.1383, 30.0677, 17.9566, 2.21 ) }
    dend_12 { pt3dadd( 18.0499, 30.0674, 19.6628, 2.06 ) }
    dend_12 { pt3dadd( 17.9342, 30.0694, 20.9933, 1.25 ) }
    dend_12 { pt3dadd( 17.6886, 30.1845, 24.4906, 1.55 ) }
    dend_12 { pt3dadd( 17.6315, 30.3867, 26.7658, 1.18 ) }
    dend_12 { pt3dadd( 17.7045, 30.5519, 28.0606, 1.47 ) }
    dend_12 { pt3dadd( 17.8765, 30.7698, 29.2787, 2.14 ) }
    dend_12 { pt3dadd( 18.1472, 31.0582, 30.3776, 1.84 ) }
    dend_12 { pt3dadd( 18.6061, 31.5021, 31.5002, 1.47 ) }
    dend_12 { pt3dadd( 19.3002, 32.2588, 32.4747, 0.88 ) }
    dend_12 { pt3dadd( 20.1767, 33.2395, 33.255, 0.52 ) }
    dend_12 { pt3dadd( 20.6488, 33.7642, 33.5452, 0.22 ) }
    dend_12 { pt3dadd( 21.2141, 34.3493, 33.7937, 0.22 ) }
    dend_12 { pt3dadd( 21.6935, 34.8287, 33.9406, 0.59 ) }
    dend_12 { pt3dadd( 21.9888, 35.1012, 34.001, 0.66 ) }
    dend_12 { pt3dadd( 22.5208, 35.592, 34.0947, 0.22 ) }
    dend_12 { pt3dadd( 23.0083, 36.2426, 34.1565, 0.44 ) }
    dend_12 { pt3dadd( 25.3698, 37.6502, 45.768, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.2694, 27.1303, 0.751005, 0.96 ) }
    dend_3 { pt3dadd( 11.0863, 30.5006, -1.55019, 0.96 ) }
    dend_3 { pt3dadd( 10.7699, 31.4376, -2.22761, 1.33 ) }
    dend_3 { pt3dadd( 10.6143, 31.9251, -2.58096, 1.55 ) }
    dend_3 { pt3dadd( 10.4779, 32.3523, -2.89062, 1.77 ) }
    dend_3 { pt3dadd( 10.2692, 33.0061, -3.36458, 1.92 ) }
    dend_3 { pt3dadd( 9.96122, 33.9709, -4.06392, 0.96 ) }
    dend_3 { pt3dadd( 9.62591, 35.4622, -4.95652, 1.11 ) }
    dend_3 { pt3dadd( 9.55756, 35.7455, -5.14457, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 88/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 25.3698, 37.6502, 45.768, 0.44 ) }
    dend_14 { pt3dadd( 26.9439, 39.7835, 53.4498, 0.44 ) }
    dend_14 { pt3dadd( 29.7954, 43.1078, 60.3597, 0.44 ) }
    dend_14 { pt3dadd( 34.1223, 47.1322, 66.0813, 0.44 ) }
    dend_14 { pt3dadd( 39.9534, 50.1927, 70.9398, 0.44 ) }
    dend_14 { pt3dadd( 45.04, 53.4427, 76.4747, 0.44 ) }
    dend_14 { pt3dadd( 49.0785, 55.8525, 83.129, 0.44 ) }
    dend_14 { pt3dadd( 53.9709, 58.4367, 89.1255, 0.44 ) }
    dend_14 { pt3dadd( 58.9553, 60.9294, 95.0803, 0.44 ) }
    dend_14 { pt3dadd( 63.3309, 64.6197, 100.963, 0.44 ) }
    dend_14 { pt3dadd( 67.8957, 68.1061, 106.814, 0.44 ) }
    dend_14 { pt3dadd( 71.7619, 73.3495, 111.947, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 76.9833, 77.4494, 116.818, 0.44 ) }
    dend_14 { pt3dadd( 83.1585, 80.815, 121.033, 0.44 ) }
    dend_14 { pt3dadd( 88.6853, 84.8663, 125.595, 0.44 ) }
    dend_14 { pt3dadd( 93.3947, 89.5568, 130.508, 0.44 ) }
    dend_14 { pt3dadd( 97.9279, 94.3442, 135.5, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.3698, 37.6502, 45.768, 0.44 ) }
    dend_13 { pt3dadd( 29.1727, 39.7809, 56.0562, 0.44 ) }
    dend_13 { pt3dadd( 31.8468, 42.035, 66.6788, 0.44 ) }
    dend_13 { pt3dadd( 35.2647, 43.8783, 77.1484, 0.44 ) }
    dend_13 { pt3dadd( 37.5503, 44.1825, 88.0374, 0.44 ) }
    dend_13 { pt3dadd( 38.1091, 43.6624, 99.1295, 0.44 ) }
    dend_13 { pt3dadd( 40.7193, 43.7395, 109.944, 0.44 ) }
    dend_13 { pt3dadd( 44.5315, 44.2045, 120.39, 0.44 ) }
    dend_13 { pt3dadd( 48.7626, 45.5822, 130.612, 0.44 ) }
    dend_13 { pt3dadd( 51.6596, 44.7392, 141.305, 0.44 ) }
    dend_13 { pt3dadd( 53.0828, 43.0173, 152.182, 0.44 ) }
    dend_13 { pt3dadd( 56.0636, 42.02, 162.836, 0.44 ) }
    dend_13 { pt3dadd( 59.899, 41.3082, 173.238, 0.44 ) }
    dend_13 { pt3dadd( 64.0739, 40.9426, 183.532, 0.44 ) }
    dend_13 { pt3dadd( 67.6501, 42.11, 194.024, 0.44 ) }
    dend_13 { pt3dadd( 70.5239, 43.916, 204.664, 0.44 ) }
    dend_13 { pt3dadd( 71.8433, 47.9112, 215.109, 0.44 ) }
    dend_13 { pt3dadd( 71.844, 51.7858, 225.682, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.55756, 35.7455, -5.14457, 0.66 ) }
    dend_9 { pt3dadd( 9.55908, 35.5951, -6.2098, 0.66 ) }
    dend_9 { pt3dadd( 9.69004, 35.3621, -7.71361, 0.88 ) }
    dend_9 { pt3dadd( 9.86088, 35.2252, -8.88875, 1.11 ) }
    dend_9 { pt3dadd( 10.0344, 35.1608, -9.79288, 1.25 ) }
    dend_9 { pt3dadd( 10.1296, 35.1505, -10.2193, 1.47 ) }
    dend_9 { pt3dadd( 10.2978, 35.1708, -10.8984, 1.18 ) }
    dend_9 { pt3dadd( 10.4836, 35.241, -11.3954, 0.66 ) }
    dend_9 { pt3dadd( 10.9193, 35.6323, -12.1609, 0.52 ) }
    dend_9 { pt3dadd( 11.1164, 35.8916, -12.4444, 0.66 ) }
    dend_9 { pt3dadd( 11.2772, 36.1341, -12.6781, 0.66 ) }
    dend_9 { pt3dadd( 11.4644, 36.4502, -12.9915, 0.37 ) }
    dend_9 { pt3dadd( 11.7565, 36.8955, -13.4896, 0.37 ) }
    dend_9 { pt3dadd( 12.0068, 37.1496, -13.9089, 1.18 ) }
    dend_9 { pt3dadd( 12.3031, 37.2762, -14.3281, 1.77 ) }
    dend_9 { pt3dadd( 12.7316, 37.3458, -14.9005, 1.92 ) }
    dend_9 { pt3dadd( 12.9957, 37.3482, -15.227, 1.69 ) }
    dend_9 { pt3dadd( 13.4649, 37.3159, -15.7581, 0.66 ) }
    dend_9 { pt3dadd( 13.9995, 37.289, -16.3403, 0.52 ) }
    dend_9 { pt3dadd( 14.386, 37.3033, -16.7826, 0.37 ) }
    dend_9 { pt3dadd( 14.702, 37.3566, -17.1593, 0.37 ) }
    dend_9 { pt3dadd( 15.101, 37.4879, -17.6674, 0.29 ) }
    dend_9 { pt3dadd( 15.3489, 37.6178, -18.0279, 0.29 ) }
    dend_9 { pt3dadd( 15.8278, 37.9961, -18.8105, 0.59 ) }
    dend_9 { pt3dadd( 16.0677, 38.2912, -19.312, 1.55 ) }
    dend_9 { pt3dadd( 16.167, 38.4485, -19.5745, 1.77 ) }
    dend_9 { pt3dadd( 16.3433, 38.733, -20.09, 1.92 ) }
    dend_9 { pt3dadd( 16.439, 38.8716, -20.3809, 2.06 ) }
    dend_9 { pt3dadd( 16.5076, 38.9469, -20.5933, 2.06 ) }
    dend_9 { pt3dadd( 17.0142, 39.3684, -22.2921, 0.29 ) }
    dend_9 { pt3dadd( 17.1261, 39.4471, -22.6863, 0.29 ) }
    dend_9 { pt3dadd( 17.3045, 39.5565, -23.325, 0.29 ) }
    dend_9 { pt3dadd( 17.4302, 39.6212, -23.7556, 0.29 ) }
    dend_9 { pt3dadd( 17.7925, 39.7998, -25.0171, 1.18 ) }
    dend_9 { pt3dadd( 18.0772, 39.9618, -26.0421, 1.47 ) }
    dend_9 { pt3dadd( 18.1646, 40.0547, -26.4306, 1.69 ) }
    dend_9 { pt3dadd( 18.2202, 40.1467, -26.7307, 1.92 ) }
    dend_9 { pt3dadd( 18.2525, 40.2104, -26.9381, 2.14 ) }
    dend_9 { pt3dadd( 18.3034, 40.2937, -27.246, 2.14 ) }
    dend_9 { pt3dadd( 18.4216, 40.4209, -27.8783, 2.14 ) }
    dend_9 { pt3dadd( 18.7978, 40.6545, -29.6537, 1.03 ) }
    dend_9 { pt3dadd( 18.9995, 40.7474, -30.6389, 0.29 ) }
    dend_9 { pt3dadd( 19.1931, 40.814, -31.6352, 0.52 ) }
    dend_9 { pt3dadd( 19.3006, 40.8351, -32.1495, 0.81 ) }
    dend_9 { pt3dadd( 19.4042, 40.8441, -32.636, 0.81 ) }
    dend_9 { pt3dadd( 19.5232, 40.842, -33.1524, 0.52 ) }
    dend_9 { pt3dadd( 19.6898, 40.8456, -33.8086, 0.74 ) }
    dend_9 { pt3dadd( 19.8494, 40.9017, -34.4504, 0.81 ) }
    dend_9 { pt3dadd( 20.0088, 41.02, -35.0948, 1.69 ) }
    dend_9 { pt3dadd( 20.2682, 41.2528, -36.013, 2.06 ) }
    dend_9 { pt3dadd( 20.4174, 41.3797, -36.4513, 2.43 ) }
    dend_9 { pt3dadd( 20.8286, 41.6767, -37.4677, 1.11 ) }
    dend_9 { pt3dadd( 21.144, 41.8516, -38.0984, 0.96 ) }
    dend_9 { pt3dadd( 21.4816, 42.0146, -38.6581, 1.03 ) }
    dend_9 { pt3dadd( 21.997, 42.2617, -39.4239, 0.29 ) }
    dend_9 { pt3dadd( 22.3363, 42.4181, -39.8594, 0.37 ) }
    dend_9 { pt3dadd( 22.6442, 42.5679, -40.2224, 0.37 ) }
    dend_9 { pt3dadd( 22.9436, 42.7349, -40.5543, 0.22 ) }
    dend_9 { pt3dadd( 23.1703, 42.8831, -40.8262, 0.22 ) }
    dend_9 { pt3dadd( 23.5139, 43.1431, -41.2888, 0.22 ) }
    dend_9 { pt3dadd( 23.6999, 43.3309, -41.6007, 0.22 ) }
    dend_9 { pt3dadd( 23.8481, 43.5141, -41.8918, 0.22 ) }
    dend_9 { pt3dadd( 24.211, 43.9856, -42.6285, 1.62 ) }
    dend_9 { pt3dadd( 24.4984, 44.3336, -43.1862, 2.5 ) }
    dend_9 { pt3dadd( 24.6387, 44.4833, -43.4366, 2.73 ) }
    dend_9 { pt3dadd( 24.9316, 44.7584, -43.916, 2.14 ) }
    dend_9 { pt3dadd( 25.7382, 45.4785, -45.2106, 0.22 ) }
    dend_9 { pt3dadd( 25.9336, 45.6476, -45.5272, 0.22 ) }
    dend_9 { pt3dadd( 26.1634, 45.8496, -45.9097, 0.44 ) }
    dend_9 { pt3dadd( 26.2663, 45.9444, -46.0834, 0.44 ) }
    dend_9 { pt3dadd( 26.5754, 46.2571, -46.616, 0.29 ) }
    dend_9 { pt3dadd( 26.7966, 46.4904, -47.0099, 0.74 ) }
    dend_9 { pt3dadd( 26.9832, 46.6886, -47.3629, 0.74 ) }
    dend_9 { pt3dadd( 27.3822, 47.1029, -48.1413, 0.22 ) }
    dend_9 { pt3dadd( 27.631, 47.3577, -48.6321, 0.22 ) }
    dend_9 { pt3dadd( 28.0772, 47.8086, -49.5422, 1.84 ) }
    dend_9 { pt3dadd( 28.2904, 48.0105, -49.967, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 28.8048, 48.4761, -51.032, 0.29 ) }
    dend_9 { pt3dadd( 28.9669, 48.6074, -51.403, 0.44 ) }
    dend_9 { pt3dadd( 29.1006, 48.7062, -51.7473, 0.44 ) }
    dend_9 { pt3dadd( 29.375, 48.9034, -52.5811, 0.29 ) }
    dend_9 { pt3dadd( 29.6081, 49.0654, -53.4239, 1.84 ) }
    dend_9 { pt3dadd( 29.7964, 49.2419, -54.3238, 2.14 ) }
    dend_9 { pt3dadd( 30.0298, 49.5579, -55.9105, 0.29 ) }
    dend_9 { pt3dadd( 30.1612, 49.7687, -56.8706, 0.81 ) }
    dend_9 { pt3dadd( 30.2721, 49.9382, -57.6174, 0.81 ) }
    dend_9 { pt3dadd( 30.3667, 50.0722, -58.182, 0.52 ) }
    dend_9 { pt3dadd( 30.6297, 50.4528, -59.6442, 0.52 ) }
    dend_9 { pt3dadd( 30.751, 50.6168, -60.1805, 0.81 ) }
    dend_9 { pt3dadd( 31.1359, 51.1037, -61.5179, 2.14 ) }
    dend_9 { pt3dadd( 31.2787, 51.2583, -61.9188, 2.65 ) }
    dend_9 { pt3dadd( 31.3799, 51.3541, -62.1523, 2.65 ) }
    dend_9 { pt3dadd( 32.1779, 52.0101, -63.677, 0.29 ) }
    dend_9 { pt3dadd( 32.4336, 52.2063, -64.092, 0.22 ) }
    dend_9 { pt3dadd( 32.7259, 52.4498, -64.5462, 0.96 ) }
    dend_9 { pt3dadd( 32.9283, 52.6397, -64.8611, 1.18 ) }
    dend_9 { pt3dadd( 33.1926, 52.9047, -65.2678, 0.96 ) }
    dend_9 { pt3dadd( 33.54, 53.2505, -65.7526, 0.22 ) }
    dend_9 { pt3dadd( 33.8804, 53.5678, -66.1294, 0.22 ) }
    dend_9 { pt3dadd( 34.1223, 53.7835, -66.385, 0.22 ) }
    dend_9 { pt3dadd( 34.6322, 54.1791, -66.9256, 1.4 ) }
    dend_9 { pt3dadd( 34.9373, 54.4049, -67.2462, 1.84 ) }
    dend_9 { pt3dadd( 35.0069, 54.4567, -67.3194, 2.06 ) }
    dend_9 { pt3dadd( 35.2618, 54.6364, -67.5884, 1.99 ) }
    dend_9 { pt3dadd( 35.6548, 54.8878, -67.9994, 0.88 ) }
    dend_9 { pt3dadd( 36.281, 55.2855, -68.6359, 0.22 ) }
    dend_9 { pt3dadd( 36.5598, 55.4631, -68.8957, 0.29 ) }
    dend_9 { pt3dadd( 36.8607, 55.6389, -69.1436, 0.29 ) }
    dend_9 { pt3dadd( 37.1544, 55.7919, -69.3751, 0.29 ) }
    dend_9 { pt3dadd( 37.3308, 55.8723, -69.51, 0.66 ) }
    dend_9 { pt3dadd( 37.5807, 55.966, -69.688, 0.66 ) }
    dend_9 { pt3dadd( 37.7978, 56.032, -69.8376, 0.66 ) }
    dend_9 { pt3dadd( 38.1831, 56.1212, -70.1149, 0.22 ) }
    dend_9 { pt3dadd( 38.5256, 56.1861, -70.3668, 0.22 ) }
    dend_9 { pt3dadd( 39.0423, 56.286, -70.7535, 1.33 ) }
    dend_9 { pt3dadd( 39.5377, 56.3859, -71.1399, 2.14 ) }
    dend_9 { pt3dadd( 39.7828, 56.4436, -71.3404, 2.28 ) }
    dend_9 { pt3dadd( 40.0766, 56.5247, -71.5879, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.55756, 35.7455, -5.14457, 0.59 ) }
    dend_4 { pt3dadd( 7.71899, 37.0967, -5.57166, 0.59 ) }
    dend_4 { pt3dadd( 7.19821, 37.4321, -5.75671, 0.96 ) }
    dend_4 { pt3dadd( 6.69766, 37.7161, -5.93119, 0.96 ) }
    dend_4 { pt3dadd( 6.16054, 37.9705, -6.17585, 0.81 ) }
    dend_4 { pt3dadd( 4.99021, 38.4895, -6.84595, 0.59 ) }
    dend_4 { pt3dadd( 4.53745, 38.7167, -7.13552, 0.81 ) }
    dend_4 { pt3dadd( 4.01687, 39.0061, -7.53447, 0.81 ) }
    dend_4 { pt3dadd( 3.69405, 39.2265, -7.80854, 0.74 ) }
    dend_4 { pt3dadd( 2.80254, 40.0279, -8.64333, 0.74 ) }
    dend_4 { pt3dadd( 2.2477, 40.7549, -9.22212, 0.74 ) }
    dend_4 { pt3dadd( 1.8372, 41.6726, -9.7298, 0.52 ) }
    dend_4 { pt3dadd( 1.69795, 42.3126, -9.99613, 0.66 ) }
    dend_4 { pt3dadd( 1.6744, 43.3067, -10.2393, 0.96 ) }
    dend_4 { pt3dadd( 1.76072, 43.9947, -10.3236, 0.88 ) }
    dend_4 { pt3dadd( 1.92193, 44.6142, -10.3116, 0.44 ) }
    dend_4 { pt3dadd( 2.14785, 45.2421, -10.24, 0.29 ) }
    dend_4 { pt3dadd( 2.4732, 45.9463, -10.0938, 0.29 ) }
    dend_4 { pt3dadd( 2.86437, 46.7253, -9.89073, 0.88 ) }
    dend_4 { pt3dadd( 3.09378, 47.1797, -9.75552, 1.11 ) }
    dend_4 { pt3dadd( 3.31529, 47.6498, -9.60358, 1.18 ) }
    dend_4 { pt3dadd( 3.50076, 48.1147, -9.45389, 0.88 ) }
    dend_4 { pt3dadd( 3.85297, 49.2619, -9.1296, 0.37 ) }
    dend_4 { pt3dadd( 4.00008, 49.9463, -8.97455, 0.29 ) }
    dend_4 { pt3dadd( 4.11464, 50.8854, -8.85525, 0.29 ) }
    dend_4 { pt3dadd( 4.13276, 51.5255, -8.80586, 0.29 ) }
    dend_4 { pt3dadd( 4.05131, 52.6478, -8.87794, 1.25 ) }
    dend_4 { pt3dadd( 3.95071, 53.3851, -9.01781, 1.77 ) }
    dend_4 { pt3dadd( 3.8929, 53.7351, -9.12818, 1.92 ) }
    dend_4 { pt3dadd( 3.78939, 54.432, -9.38565, 1.92 ) }
    dend_4 { pt3dadd( 3.71249, 55.1092, -9.66107, 1.11 ) }
    dend_4 { pt3dadd( 3.61312, 56.7112, -10.3737, 0.44 ) }
    dend_4 { pt3dadd( 3.59814, 57.4366, -10.6924, 0.66 ) }
    dend_4 { pt3dadd( 3.60676, 58.1987, -10.9696, 0.88 ) }
    dend_4 { pt3dadd( 3.62821, 58.8069, -11.157, 1.11 ) }
    dend_4 { pt3dadd( 3.65448, 59.2953, -11.2815, 1.11 ) }
    dend_4 { pt3dadd( 3.69377, 60.0244, -11.4647, 0.66 ) }
    dend_4 { pt3dadd( 3.74148, 61.0794, -11.6718, 0.37 ) }
    dend_4 { pt3dadd( 3.80077, 62.3961, -11.9201, 0.88 ) }
    dend_4 { pt3dadd( 3.83486, 63.034, -12.061, 1.47 ) }
    dend_4 { pt3dadd( 3.89087, 63.6354, -12.2124, 1.77 ) }
    dend_4 { pt3dadd( 3.9928, 64.3723, -12.4409, 1.92 ) }
    dend_4 { pt3dadd( 4.08665, 64.85, -12.6374, 2.14 ) }
    dend_4 { pt3dadd( 4.26237, 65.5107, -13.0282, 2.14 ) }
    dend_4 { pt3dadd( 4.41347, 66.2372, -13.7357, 1.62 ) }
    dend_4 { pt3dadd( 4.45966, 66.7177, -14.3326, 1.11 ) }
    dend_4 { pt3dadd( 4.44807, 67.3283, -15.1669, 0.66 ) }
    dend_4 { pt3dadd( 4.34317, 67.9198, -16.0298, 0.81 ) }
    dend_4 { pt3dadd( 4.15096, 68.4597, -16.8695, 0.66 ) }
    dend_4 { pt3dadd( 3.35813, 69.9365, -19.2856, 0.81 ) }
    dend_4 { pt3dadd( 3.0152, 70.4446, -20.0722, 0.74 ) }
    dend_4 { pt3dadd( 2.70783, 70.8365, -20.6437, 1.11 ) }
    dend_4 { pt3dadd( 2.06243, 71.5868, -21.6258, 1.62 ) }
    dend_4 { pt3dadd( 1.47666, 72.2328, -22.3724, 1.69 ) }
    dend_4 { pt3dadd( 0.821872, 72.9497, -23.0636, 1.55 ) }
    dend_4 { pt3dadd( 0.188591, 73.7481, -23.6438, 0.37 ) }
    dend_4 { pt3dadd( -0.0168591, 74.0864, -23.8542, 0.52 ) }
    dend_4 { pt3dadd( -0.236134, 74.5939, -24.1203, 0.66 ) }
    dend_4 { pt3dadd( -0.378611, 75.0645, -24.3143, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( -0.525033, 75.6868, -24.5464, 0.22 ) }
    dend_4 { pt3dadd( -0.730986, 76.5986, -24.9429, 0.22 ) }
    dend_4 { pt3dadd( -1.07216, 77.972, -25.6651, 1.99 ) }
    dend_4 { pt3dadd( -1.27829, 78.7116, -26.0775, 2.43 ) }
    dend_4 { pt3dadd( -1.47005, 79.3387, -26.4367, 2.73 ) }
    dend_4 { pt3dadd( -1.65318, 79.8571, -26.75, 2.95 ) }
    dend_4 { pt3dadd( -2.62329, 82.1509, -28.1725, 0.52 ) }
    dend_4 { pt3dadd( -3.00926, 82.8774, -28.6361, 0.59 ) }
    dend_4 { pt3dadd( -3.28383, 83.3327, -28.9373, 1.11 ) }
    dend_4 { pt3dadd( -3.46404, 83.629, -29.1306, 1.25 ) }
    dend_4 { pt3dadd( -3.76059, 84.1542, -29.4335, 1.25 ) }
    dend_4 { pt3dadd( -4.16387, 84.8998, -29.8263, 0.22 ) }
    dend_4 { pt3dadd( -4.51793, 85.5538, -30.1525, 0.22 ) }
    dend_4 { pt3dadd( -4.84626, 86.179, -30.4933, 0.37 ) }
    dend_4 { pt3dadd( -5.16741, 86.7677, -30.8783, 0.37 ) }
    dend_4 { pt3dadd( -5.70103, 87.7787, -31.5537, 1.69 ) }
    dend_4 { pt3dadd( -6.09704, 88.5401, -32.0483, 2.28 ) }
    dend_4 { pt3dadd( -6.34253, 88.9956, -32.3443, 2.65 ) }
    dend_4 { pt3dadd( -6.66414, 89.6066, -32.7145, 2.65 ) }
    dend_4 { pt3dadd( -7.14803, 90.549, -33.2605, 2.5 ) }
    dend_4 { pt3dadd( -7.88752, 92.112, -34.1119, 0.29 ) }
    dend_4 { pt3dadd( -8.12993, 92.7146, -34.4307, 0.29 ) }
    dend_4 { pt3dadd( -8.31363, 93.3086, -34.7385, 0.29 ) }
    dend_4 { pt3dadd( -8.4895, 94.0152, -35.1039, 0.74 ) }
    dend_4 { pt3dadd( -8.6337, 94.6988, -35.4572, 0.96 ) }
    dend_4 { pt3dadd( -8.78834, 95.499, -35.8956, 0.96 ) }
    dend_4 { pt3dadd( -8.9506, 96.1239, -36.3193, 0.29 ) }
    dend_4 { pt3dadd( -9.25848, 97.0232, -36.9668, 0.22 ) }
    dend_4 { pt3dadd( -9.37573, 97.2794, -37.1538, 0.22 ) }
    dend_4 { pt3dadd( -9.58089, 97.6191, -37.4166, 0.22 ) }
    dend_4 { pt3dadd( -9.90224, 98.0883, -37.7732, 0.22 ) }
    dend_4 { pt3dadd( -10.8102, 99.2988, -38.7518, 2.28 ) }
    dend_4 { pt3dadd( -11.2075, 99.8174, -39.2241, 2.43 ) }
    dend_4 { pt3dadd( -11.5076, 100.218, -39.6113, 2.65 ) }
    dend_4 { pt3dadd( -12.7529, 101.997, -41.4145, 0.59 ) }
    dend_4 { pt3dadd( -13.1035, 102.527, -41.9713, 0.52 ) }
    dend_4 { pt3dadd( -13.7188, 103.505, -43.0095, 0.59 ) }
    dend_4 { pt3dadd( -14.331, 104.544, -44.084, 0.37 ) }
    dend_4 { pt3dadd( -14.5559, 104.966, -44.4911, 0.52 ) }
    dend_4 { pt3dadd( -14.7696, 105.427, -44.8997, 0.66 ) }
    dend_4 { pt3dadd( -14.9366, 105.838, -45.2171, 0.66 ) }
    dend_4 { pt3dadd( -15.129, 106.37, -45.57, 0.44 ) }
    dend_4 { pt3dadd( -15.541, 107.615, -46.2687, 2.14 ) }
    dend_4 { pt3dadd( -15.8609, 108.582, -46.7674, 2.5 ) }
    dend_4 { pt3dadd( -16.1179, 109.357, -47.1676, 1.92 ) }
    dend_4 { pt3dadd( -16.6975, 111.118, -48.0656, 0.22 ) }
    dend_4 { pt3dadd( -16.9342, 111.865, -48.4298, 0.22 ) }
    dend_4 { pt3dadd( -17.4563, 113.602, -49.2346, 1.69 ) }
    dend_4 { pt3dadd( -17.5505, 113.934, -49.3696, 2.06 ) }
    dend_4 { pt3dadd( -17.7277, 114.631, -49.6043, 2.14 ) }
    dend_4 { pt3dadd( -17.8156, 115.007, -49.7092, 1.62 ) }
    dend_4 { pt3dadd( -18.1415, 116.577, -50.1023, 0.37 ) }
    dend_4 { pt3dadd( -18.3162, 117.424, -50.3156, 0.37 ) }
    dend_4 { pt3dadd( -18.5739, 118.718, -50.6304, 0.37 ) }
    dend_4 { pt3dadd( -18.7712, 119.644, -50.8678, 0.37 ) }
    dend_4 { pt3dadd( -19.2002, 121.607, -51.3944, 1.69 ) }
    dend_4 { pt3dadd( -19.3344, 122.198, -51.5594, 1.92 ) }
    dend_4 { pt3dadd( -19.4158, 122.555, -51.662, 1.92 ) }
    dend_4 { pt3dadd( -19.6937, 123.771, -52.024, 0.22 ) }
    dend_4 { pt3dadd( -19.8875, 124.691, -52.3075, 0.22 ) }
    dend_4 { pt3dadd( -20.0171, 125.48, -52.5297, 0.37 ) }
    dend_4 { pt3dadd( -20.0915, 126.074, -52.695, 0.37 ) }
    dend_4 { pt3dadd( -20.1582, 126.765, -52.876, 1.33 ) }
    dend_4 { pt3dadd( -20.1883, 127.27, -53.0105, 1.84 ) }
    dend_4 { pt3dadd( -20.2033, 127.822, -53.1497, 1.84 ) }
    dend_4 { pt3dadd( -20.2157, 129.202, -53.4724, 0.29 ) }
    dend_4 { pt3dadd( -20.2364, 130.058, -53.6518, 0.44 ) }
    dend_4 { pt3dadd( -20.2511, 130.457, -53.7278, 0.59 ) }
    dend_4 { pt3dadd( -20.2831, 131.096, -53.8275, 0.59 ) }
    dend_4 { pt3dadd( -20.3754, 132.289, -54.0159, 0.22 ) }
    dend_4 { pt3dadd( -20.4671, 133.147, -54.165, 1.33 ) }
    dend_4 { pt3dadd( -20.5291, 133.539, -54.2411, 1.77 ) }
    dend_4 { pt3dadd( -20.5991, 133.934, -54.3127, 1.92 ) }
    dend_4 { pt3dadd( -20.6782, 134.328, -54.3896, 1.4 ) }
    dend_4 { pt3dadd( -21.1521, 136.204, -54.8979, 0.22 ) }
    dend_4 { pt3dadd( -21.3744, 136.988, -55.1517, 0.22 ) }
    dend_4 { pt3dadd( -21.7138, 138.159, -55.5707, 1.11 ) }
    dend_4 { pt3dadd( -21.8733, 138.732, -55.7868, 1.55 ) }
    dend_4 { pt3dadd( -22.0299, 139.327, -56.0138, 1.4 ) }
    dend_4 { pt3dadd( -22.5946, 141.547, -56.8699, 0.29 ) }
    dend_4 { pt3dadd( -22.7355, 142.131, -57.0771, 0.37 ) }
    dend_4 { pt3dadd( -22.8567, 142.652, -57.2654, 0.44 ) }
    dend_4 { pt3dadd( -22.991, 143.278, -57.4938, 0.44 ) }
    dend_4 { pt3dadd( -23.1066, 143.867, -57.6946, 0.22 ) }
    dend_4 { pt3dadd( -23.1866, 144.404, -57.8625, 0.22 ) }
    dend_4 { pt3dadd( -23.3076, 145.581, -58.1958, 1.33 ) }
    dend_4 { pt3dadd( -23.3994, 146.232, -58.4587, 1.55 ) }
    dend_4 { pt3dadd( -23.4666, 146.596, -58.641, 1.55 ) }
    dend_4 { pt3dadd( -23.8389, 148.201, -59.6153, 0.22 ) }
    dend_4 { pt3dadd( -24.128, 149.178, -60.3498, 0.22 ) }
    dend_4 { pt3dadd( -24.3044, 149.702, -60.7892, 0.66 ) }
    dend_4 { pt3dadd( -24.9859, 151.424, -62.4399, 0.44 ) }
    dend_4 { pt3dadd( -25.3811, 152.314, -63.4436, 1.4 ) }
    dend_4 { pt3dadd( -25.7445, 153.072, -64.3513, 1.77 ) }
    dend_4 { pt3dadd( -26.4494, 154.39, -66.0687, 1.33 ) }
    dend_4 { pt3dadd( -26.7617, 154.929, -66.8012, 1.62 ) }
    dend_4 { pt3dadd( -27.6336, 156.397, -68.8437, 0.74 ) }
    dend_4 { pt3dadd( -29.0966, 158.958, -72.3872, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 40.0766, 56.5247, -71.5879, 0.44 ) }
    dend_11 { pt3dadd( 41.1213, 56.7102, -72.404, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( 41.7476, 56.8472, -72.9267, 0.37 ) }
    dend_11 { pt3dadd( 42.5133, 57.0293, -73.5825, 0.29 ) }
    dend_11 { pt3dadd( 42.9769, 57.1322, -74.0102, 0.59 ) }
    dend_11 { pt3dadd( 43.8507, 57.2758, -74.9126, 0.29 ) }
    dend_11 { pt3dadd( 44.4432, 57.377, -75.5432, 0.96 ) }
    dend_11 { pt3dadd( 44.8611, 57.488, -76.0248, 1.25 ) }
    dend_11 { pt3dadd( 45.2028, 57.5945, -76.4262, 1.33 ) }
    dend_11 { pt3dadd( 46.0403, 57.8663, -77.4094, 0.22 ) }
    dend_11 { pt3dadd( 47.063, 58.2143, -78.6499, 0.22 ) }
    dend_11 { pt3dadd( 47.5987, 58.4008, -79.3003, 0.37 ) }
    dend_11 { pt3dadd( 48.3439, 58.6725, -80.1912, 0.22 ) }
    dend_11 { pt3dadd( 48.9582, 58.9261, -80.8844, 1.18 ) }
    dend_11 { pt3dadd( 49.3858, 59.127, -81.3448, 1.4 ) }
    dend_11 { pt3dadd( 49.7742, 59.3335, -81.72, 1.4 ) }
    dend_11 { pt3dadd( 50.3324, 59.6477, -82.2, 0.44 ) }
    dend_11 { pt3dadd( 51.037, 60.0041, -82.7646, 0.22 ) }
    dend_11 { pt3dadd( 51.443, 60.1973, -83.0824, 0.52 ) }
    dend_11 { pt3dadd( 51.7586, 60.349, -83.3399, 0.52 ) }
    dend_11 { pt3dadd( 52.7603, 60.8614, -84.1532, 0.22 ) }
    dend_11 { pt3dadd( 53.3826, 61.1759, -84.6531, 0.81 ) }
    dend_11 { pt3dadd( 53.9987, 61.4614, -85.1848, 1.25 ) }
    dend_11 { pt3dadd( 54.73, 61.7614, -85.8253, 1.25 ) }
    dend_11 { pt3dadd( 55.8744, 62.1642, -86.8069, 0.22 ) }
    dend_11 { pt3dadd( 56.4166, 62.3394, -87.2766, 0.59 ) }
    dend_11 { pt3dadd( 56.8434, 62.4625, -87.6473, 0.74 ) }
    dend_11 { pt3dadd( 58.2631, 62.76, -88.8756, 0.22 ) }
    dend_11 { pt3dadd( 58.9877, 62.8686, -89.4903, 0.22 ) }
    dend_11 { pt3dadd( 60.0767, 62.9778, -90.3442, 1.25 ) }
    dend_11 { pt3dadd( 60.6698, 63.0143, -90.7988, 1.62 ) }
    dend_11 { pt3dadd( 60.8812, 63.0282, -90.9673, 1.62 ) }
    dend_11 { pt3dadd( 62.8003, 63.1697, -92.4939, 0.22 ) }
    dend_11 { pt3dadd( 63.3397, 63.2034, -92.916, 0.22 ) }
    dend_11 { pt3dadd( 64.2122, 63.2381, -93.6265, 1.03 ) }
    dend_11 { pt3dadd( 64.7908, 63.2377, -94.1085, 1.25 ) }
    dend_11 { pt3dadd( 66.1158, 63.2033, -95.2045, 0.22 ) }
    dend_11 { pt3dadd( 66.6516, 63.1802, -95.6721, 0.22 ) }
    dend_11 { pt3dadd( 67.0518, 63.1587, -96.0486, 0.66 ) }
    dend_11 { pt3dadd( 68.0359, 63.058, -97.0543, 0.22 ) }
    dend_11 { pt3dadd( 68.6639, 62.9596, -97.7763, 0.22 ) }
    dend_11 { pt3dadd( 69.1667, 62.8588, -98.3906, 0.74 ) }
    dend_11 { pt3dadd( 69.6197, 62.7743, -98.9756, 0.96 ) }
    dend_11 { pt3dadd( 70.4032, 62.6745, -100.018, 0.22 ) }
    dend_11 { pt3dadd( 71.3215, 62.6166, -101.221, 1.33 ) }
    dend_11 { pt3dadd( 71.8202, 62.6129, -101.85, 1.77 ) }
    dend_11 { pt3dadd( 72.0923, 62.6271, -102.179, 1.77 ) }
    dend_11 { pt3dadd( 73.71, 62.756, -104.021, 0.22 ) }
    dend_11 { pt3dadd( 74.0613, 62.7897, -104.397, 0.22 ) }
    dend_11 { pt3dadd( 74.481, 62.8422, -104.836, 0.74 ) }
    dend_11 { pt3dadd( 74.854, 62.9021, -105.214, 0.74 ) }
    dend_11 { pt3dadd( 75.8291, 63.0641, -106.185, 0.22 ) }
    dend_11 { pt3dadd( 76.314, 63.1515, -106.681, 1.03 ) }
    dend_11 { pt3dadd( 76.6666, 63.2274, -107.057, 1.33 ) }
    dend_11 { pt3dadd( 77.0737, 63.3384, -107.482, 1.47 ) }
    dend_11 { pt3dadd( 78.3324, 63.7321, -108.743, 0.15 ) }
    dend_11 { pt3dadd( 78.704, 63.863, -109.088, 0.29 ) }
    dend_11 { pt3dadd( 79.0756, 64.0136, -109.382, 0.29 ) }
    dend_11 { pt3dadd( 79.9667, 64.3979, -109.91, 0.15 ) }
    dend_11 { pt3dadd( 80.7214, 64.7598, -110.23, 0.66 ) }
    dend_11 { pt3dadd( 81.0258, 64.9174, -110.319, 0.74 ) }
    dend_11 { pt3dadd( 81.2641, 65.0515, -110.356, 0.74 ) }
    dend_11 { pt3dadd( 82.4572, 65.6878, -110.492, 0.15 ) }
    dend_11 { pt3dadd( 83.7058, 66.3343, -110.611, 0.15 ) }
    dend_11 { pt3dadd( 84.5802, 66.7743, -110.689, 1.03 ) }
    dend_11 { pt3dadd( 84.9951, 66.9807, -110.735, 1.18 ) }
    dend_11 { pt3dadd( 85.2955, 67.123, -110.777, 1.18 ) }
    dend_11 { pt3dadd( 86.9428, 67.8589, -111.057, 0.15 ) }
    dend_11 { pt3dadd( 87.5684, 68.1302, -111.194, 0.81 ) }
    dend_11 { pt3dadd( 87.9836, 68.3161, -111.313, 1.11 ) }
    dend_11 { pt3dadd( 88.3455, 68.4803, -111.426, 1.11 ) }
    dend_11 { pt3dadd( 90.9065, 69.69, -112.336, 0.22 ) }
    dend_11 { pt3dadd( 91.7386, 70.0918, -112.627, 0.88 ) }
    dend_11 { pt3dadd( 92.2465, 70.3507, -112.798, 0.74 ) }
    dend_11 { pt3dadd( 93.5586, 71.0149, -113.189, 0.22 ) }
    dend_11 { pt3dadd( 94.0675, 71.2706, -113.321, 0.59 ) }
    dend_11 { pt3dadd( 94.6529, 71.577, -113.45, 0.74 ) }
    dend_11 { pt3dadd( 96.1292, 72.4239, -113.685, 0.22 ) }
    dend_11 { pt3dadd( 96.8118, 72.8015, -113.768, 1.47 ) }
    dend_11 { pt3dadd( 97.5175, 73.1622, -113.826, 1.77 ) }
    dend_11 { pt3dadd( 97.9968, 73.3832, -113.859, 1.77 ) }
    dend_11 { pt3dadd( 99.9346, 74.2497, -113.952, 0.22 ) }
    dend_11 { pt3dadd( 100.798, 74.6329, -113.989, 0.66 ) }
    dend_11 { pt3dadd( 101.372, 74.8896, -114.034, 0.88 ) }
    dend_11 { pt3dadd( 102.563, 75.4042, -114.09, 0.22 ) }
    dend_11 { pt3dadd( 103.144, 75.6626, -114.11, 0.44 ) }
    dend_11 { pt3dadd( 104.34, 76.2056, -114.109, 0.22 ) }
    dend_11 { pt3dadd( 104.517, 76.2862, -114.099, 0.81 ) }
    dend_11 { pt3dadd( 104.855, 76.4695, -114.08, 0.81 ) }
    dend_11 { pt3dadd( 106.427, 77.5541, -114.018, 0.22 ) }
    dend_11 { pt3dadd( 107.172, 78.1275, -114.021, 1.03 ) }
    dend_11 { pt3dadd( 107.418, 78.3246, -114.032, 1.33 ) }
    dend_11 { pt3dadd( 107.798, 78.6277, -114.069, 1.33 ) }
    dend_11 { pt3dadd( 109.699, 80.087, -114.448, 0.22 ) }
    dend_11 { pt3dadd( 110.61, 80.7338, -114.732, 0.22 ) }
    dend_11 { pt3dadd( 111.58, 81.3366, -115.145, 1.03 ) }
    dend_11 { pt3dadd( 112.001, 81.554, -115.355, 1.33 ) }
    dend_11 { pt3dadd( 112.361, 81.6976, -115.55, 1.33 ) }
    dend_11 { pt3dadd( 113.973, 82.1572, -116.466, 0.22 ) }
    dend_11 { pt3dadd( 115.074, 82.3427, -117.115, 0.22 ) }
    dend_11 { pt3dadd( 116.126, 82.4653, -117.706, 0.74 ) }
    dend_11 { pt3dadd( 116.74, 82.5309, -118.011, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 118.101, 82.6692, -118.568, 0.22 ) }
    dend_11 { pt3dadd( 118.776, 82.732, -118.78, 0.22 ) }
    dend_11 { pt3dadd( 119.126, 82.7616, -118.842, 0.66 ) }
    dend_11 { pt3dadd( 119.421, 82.7744, -118.891, 0.66 ) }
    dend_11 { pt3dadd( 120.649, 82.7913, -119.124, 0.22 ) }
    dend_11 { pt3dadd( 121.418, 82.7882, -119.29, 0.88 ) }
    dend_11 { pt3dadd( 121.611, 82.7839, -119.339, 1.18 ) }
    dend_11 { pt3dadd( 121.835, 82.7748, -119.405, 1.18 ) }
    dend_11 { pt3dadd( 123.862, 82.6579, -120.013, 0.22 ) }
    dend_11 { pt3dadd( 124.752, 82.6012, -120.284, 0.44 ) }
    dend_11 { pt3dadd( 125.104, 82.581, -120.392, 0.29 ) }
    dend_11 { pt3dadd( 125.683, 82.5817, -120.645, 0.29 ) }
    dend_11 { pt3dadd( 126.63, 82.6699, -121.164, 0.96 ) }
    dend_11 { pt3dadd( 127.08, 82.7483, -121.475, 1.18 ) }
    dend_11 { pt3dadd( 127.432, 82.8362, -121.756, 1.18 ) }
    dend_11 { pt3dadd( 127.742, 82.9153, -122.01, 0.88 ) }
    dend_11 { pt3dadd( 129.85, 83.4995, -123.874, 0.22 ) }
    dend_11 { pt3dadd( 130.236, 83.6191, -124.249, 0.81 ) }
    dend_11 { pt3dadd( 130.587, 83.7357, -124.611, 0.81 ) }
    dend_11 { pt3dadd( 131.695, 84.0223, -125.702, 0.22 ) }
    dend_11 { pt3dadd( 132.2, 84.1367, -126.19, 0.22 ) }
    dend_11 { pt3dadd( 133.058, 84.3031, -126.985, 1.03 ) }
    dend_11 { pt3dadd( 133.572, 84.3932, -127.43, 1.11 ) }
    dend_11 { pt3dadd( 134.947, 84.6546, -128.72, 0.22 ) }
    dend_11 { pt3dadd( 135.8, 84.8584, -129.576, 0.22 ) }
    dend_11 { pt3dadd( 136.634, 85.0885, -130.518, 0.96 ) }
    dend_11 { pt3dadd( 137.072, 85.2105, -131.035, 1.18 ) }
    dend_11 { pt3dadd( 138.457, 85.6295, -132.746, 0.22 ) }
    dend_11 { pt3dadd( 139.096, 85.8519, -133.587, 0.22 ) }
    dend_11 { pt3dadd( 139.675, 86.0914, -134.413, 1.11 ) }
    dend_11 { pt3dadd( 140.066, 86.2868, -135.049, 1.33 ) }
    dend_11 { pt3dadd( 140.166, 86.3346, -135.228, 1.47 ) }
    dend_11 { pt3dadd( 140.616, 86.5671, -136.142, 1.18 ) }
    dend_11 { pt3dadd( 141.229, 86.9343, -137.621, 0.15 ) }
    dend_11 { pt3dadd( 141.487, 87.0881, -138.286, 0.59 ) }
    dend_11 { pt3dadd( 141.881, 87.3055, -139.339, 0.81 ) }
    dend_11 { pt3dadd( 142.425, 87.6034, -140.776, 0.22 ) }
    dend_11 { pt3dadd( 142.75, 87.81, -141.687, 1.03 ) }
    dend_11 { pt3dadd( 142.998, 88.0009, -142.454, 1.25 ) }
    dend_11 { pt3dadd( 143.482, 88.6394, -144.49, 0.22 ) }
    dend_11 { pt3dadd( 143.671, 88.9692, -145.381, 0.37 ) }
    dend_11 { pt3dadd( 143.828, 89.3169, -146.205, 0.15 ) }
    dend_11 { pt3dadd( 144.009, 89.8374, -147.34, 0.59 ) }
    dend_11 { pt3dadd( 144.081, 90.1541, -148.09, 0.59 ) }
    dend_11 { pt3dadd( 144.244, 91.0123, -150.369, 0.22 ) }
    dend_11 { pt3dadd( 144.302, 91.2717, -151.105, 0.22 ) }
    dend_11 { pt3dadd( 144.487, 91.8577, -152.953, 1.25 ) }
    dend_11 { pt3dadd( 144.549, 91.9768, -153.4, 1.92 ) }
    dend_11 { pt3dadd( 145.202, 92.9899, -157.914, 0.52 ) }
    dend_11 { pt3dadd( 145.466, 93.3704, -159.835, 0.29 ) }
    dend_11 { pt3dadd( 145.594, 93.5655, -160.853, 0.96 ) }
    dend_11 { pt3dadd( 145.716, 93.7987, -161.948, 1.18 ) }
    dend_11 { pt3dadd( 145.933, 94.261, -163.791, 0.81 ) }
    dend_11 { pt3dadd( 146.276, 95.1759, -166.902, 1.69 ) }
    dend_11 { pt3dadd( 146.424, 95.7038, -168.304, 1.92 ) }
    dend_11 { pt3dadd( 146.666, 97.0546, -171.309, 0.22 ) }
    dend_11 { pt3dadd( 146.703, 97.4585, -172.072, 0.22 ) }
    dend_11 { pt3dadd( 146.727, 98.0559, -173.011, 1.33 ) }
    dend_11 { pt3dadd( 146.721, 99.0706, -174.335, 1.33 ) }
    dend_11 { pt3dadd( 146.628, 100.732, -176.197, 0.22 ) }
    dend_11 { pt3dadd( 146.518, 101.463, -176.963, 0.22 ) }
    dend_11 { pt3dadd( 146.221, 102.46, -178.074, 0.22 ) }
    dend_11 { pt3dadd( 145.824, 103.407, -179.298, 1.4 ) }
    dend_11 { pt3dadd( 145.622, 103.786, -179.859, 1.62 ) }
    dend_11 { pt3dadd( 144.662, 105.311, -182.511, 0.22 ) }
    dend_11 { pt3dadd( 144.165, 106.031, -183.889, 0.96 ) }
    dend_11 { pt3dadd( 143.304, 107.251, -186.413, 1.55 ) }
    dend_11 { pt3dadd( 142.615, 108.261, -188.645, 2.21 ) }
    dend_11 { pt3dadd( 142.16, 108.961, -190.265, 2.43 ) }
    dend_11 { pt3dadd( 141.127, 110.77, -194.57, 0.81 ) }
    dend_11 { pt3dadd( 140.93, 111.193, -195.583, 0.29 ) }
    dend_11 { pt3dadd( 140.697, 111.849, -197.121, 0.74 ) }
    dend_11 { pt3dadd( 140.43, 113.154, -200.002, 0.81 ) }
    dend_11 { pt3dadd( 140.412, 113.482, -200.712, 0.96 ) }
    dend_11 { pt3dadd( 140.507, 114.456, -202.878, 0.22 ) }
    dend_11 { pt3dadd( 140.594, 114.75, -203.577, 0.52 ) }
    dend_11 { pt3dadd( 140.674, 114.951, -204.078, 0.59 ) }
    dend_11 { pt3dadd( 140.939, 115.445, -205.329, 0.22 ) }
    dend_11 { pt3dadd( 141.323, 116.052, -206.971, 1.47 ) }
    dend_11 { pt3dadd( 141.496, 116.387, -207.849, 1.69 ) }
    dend_11 { pt3dadd( 141.795, 117.245, -210.024, 0.37 ) }
    dend_11 { pt3dadd( 141.85, 117.554, -210.775, 0.88 ) }
    dend_11 { pt3dadd( 141.856, 117.896, -211.577, 1.11 ) }
    dend_11 { pt3dadd( 141.653, 119.074, -214.333, 0.22 ) }
    dend_11 { pt3dadd( 141.566, 119.448, -215.246, 0.37 ) }
    dend_11 { pt3dadd( 141.326, 120.32, -217.344, 0.22 ) }
    dend_11 { pt3dadd( 141.04, 121.112, -219.325, 1.47 ) }
    dend_11 { pt3dadd( 140.822, 121.638, -220.682, 1.69 ) }
    dend_11 { pt3dadd( 140.423, 122.577, -223.02, 1.77 ) }
    dend_11 { pt3dadd( 140.18, 123.101, -224.375, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 40.0766, 56.5247, -71.5879, 0.29 ) }
    dend_10 { pt3dadd( 41.0751, 57.9496, -72.4989, 0.29 ) }
    dend_10 { pt3dadd( 41.5849, 58.6351, -72.9255, 0.29 ) }
    dend_10 { pt3dadd( 42.18, 59.4216, -73.4118, 0.81 ) }
    dend_10 { pt3dadd( 42.5799, 59.9268, -73.7216, 0.96 ) }
    dend_10 { pt3dadd( 43.3174, 60.8127, -74.2668, 0.22 ) }
    dend_10 { pt3dadd( 43.8088, 61.3778, -74.6159, 0.44 ) }
    dend_10 { pt3dadd( 44.0613, 61.6351, -74.7847, 0.44 ) }
    dend_10 { pt3dadd( 44.6371, 62.1341, -75.1169, 0.22 ) }
    dend_10 { pt3dadd( 45.2489, 62.5603, -75.4371, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_10 { pt3dadd( 45.5567, 62.7412, -75.5712, 1.33 ) }
    dend_10 { pt3dadd( 45.8265, 62.8728, -75.673, 1.55 ) }
    dend_10 { pt3dadd( 46.4788, 63.1382, -75.8608, 1.25 ) }
    dend_10 { pt3dadd( 47.5442, 63.514, -76.0858, 0.15 ) }
    dend_10 { pt3dadd( 48.1956, 63.7236, -76.1664, 0.74 ) }
    dend_10 { pt3dadd( 49.0663, 64.0087, -76.2053, 1.11 ) }
    dend_10 { pt3dadd( 49.5532, 64.185, -76.25, 1.18 ) }
    dend_10 { pt3dadd( 50.1513, 64.4232, -76.3448, 0.88 ) }
    dend_10 { pt3dadd( 51.1912, 64.8781, -76.5506, 0.15 ) }
    dend_10 { pt3dadd( 51.7724, 65.1542, -76.7234, 0.37 ) }
    dend_10 { pt3dadd( 52.1923, 65.3659, -76.9012, 0.52 ) }
    dend_10 { pt3dadd( 53.6603, 66.1276, -77.7672, 0.22 ) }
    dend_10 { pt3dadd( 54.3304, 66.4811, -78.2253, 1.25 ) }
    dend_10 { pt3dadd( 54.7592, 66.7025, -78.552, 1.77 ) }
    dend_10 { pt3dadd( 55.1069, 66.8746, -78.84, 1.77 ) }
    dend_10 { pt3dadd( 55.4122, 67.0245, -79.0988, 1.55 ) }
    dend_10 { pt3dadd( 56.5361, 67.5781, -80.0155, 0.22 ) }
    dend_10 { pt3dadd( 56.9628, 67.7935, -80.3211, 0.37 ) }
    dend_10 { pt3dadd( 57.3663, 68.0245, -80.6334, 0.37 ) }
    dend_10 { pt3dadd( 58.1098, 68.489, -81.23, 0.15 ) }
    dend_10 { pt3dadd( 58.6292, 68.8798, -81.6459, 0.96 ) }
    dend_10 { pt3dadd( 58.8303, 69.0624, -81.8132, 1.11 ) }
    dend_10 { pt3dadd( 58.9944, 69.2438, -81.9567, 1.11 ) }
    dend_10 { pt3dadd( 59.9699, 70.4464, -82.8045, 0.22 ) }
    dend_10 { pt3dadd( 60.3924, 71.0077, -83.1765, 0.22 ) }
    dend_10 { pt3dadd( 60.9179, 71.7378, -83.6319, 0.22 ) }
    dend_10 { pt3dadd( 61.2582, 72.228, -83.9429, 0.22 ) }
    dend_10 { pt3dadd( 61.7495, 72.9835, -84.3993, 1.18 ) }
    dend_10 { pt3dadd( 61.9569, 73.3144, -84.5889, 1.84 ) }
    dend_10 { pt3dadd( 62.1775, 73.7026, -84.7989, 1.84 ) }
    dend_10 { pt3dadd( 62.3058, 73.935, -84.9277, 1.84 ) }
    dend_10 { pt3dadd( 63.1105, 75.3726, -85.7921, 0.22 ) }
    dend_10 { pt3dadd( 63.4999, 76.1369, -86.2408, 0.81 ) }
    dend_10 { pt3dadd( 63.6376, 76.4499, -86.4136, 1.11 ) }
    dend_10 { pt3dadd( 63.8485, 76.9751, -86.6826, 1.11 ) }
    dend_10 { pt3dadd( 63.9538, 77.2554, -86.8151, 0.74 ) }
    dend_10 { pt3dadd( 64.2783, 78.1051, -87.2024, 0.29 ) }
    dend_10 { pt3dadd( 64.4785, 78.6144, -87.4152, 0.44 ) }
    dend_10 { pt3dadd( 64.6813, 79.0705, -87.6161, 0.44 ) }
    dend_10 { pt3dadd( 64.9335, 79.576, -87.8346, 0.22 ) }
    dend_10 { pt3dadd( 65.1478, 79.9644, -87.9909, 0.22 ) }
    dend_10 { pt3dadd( 65.6959, 80.9161, -88.3611, 1.18 ) }
    dend_10 { pt3dadd( 65.8854, 81.2277, -88.4768, 1.4 ) }
    dend_10 { pt3dadd( 66.0876, 81.5673, -88.6101, 1.4 ) }
    dend_10 { pt3dadd( 66.3792, 82.0574, -88.8101, 0.88 ) }
    dend_10 { pt3dadd( 66.6185, 82.4618, -88.9462, 0.37 ) }
    dend_10 { pt3dadd( 67.0558, 83.215, -89.1448, 0.22 ) }
    dend_10 { pt3dadd( 67.3564, 83.737, -89.2385, 0.29 ) }
    dend_10 { pt3dadd( 67.6526, 84.2489, -89.3097, 0.29 ) }
    dend_10 { pt3dadd( 68.2682, 85.3052, -89.428, 0.22 ) }
    dend_10 { pt3dadd( 68.7984, 86.2201, -89.5211, 0.22 ) }
    dend_10 { pt3dadd( 69.2525, 87.0405, -89.5966, 1.33 ) }
    dend_10 { pt3dadd( 69.5398, 87.5767, -89.6408, 1.55 ) }
    dend_10 { pt3dadd( 70.4218, 89.2979, -89.7822, 0.22 ) }
    dend_10 { pt3dadd( 70.7553, 89.996, -89.8708, 0.22 ) }
    dend_10 { pt3dadd( 71.1739, 90.9675, -90.0278, 0.22 ) }
    dend_10 { pt3dadd( 71.646, 92.1554, -90.2754, 1.55 ) }
    dend_10 { pt3dadd( 71.7842, 92.5149, -90.362, 1.84 ) }
    dend_10 { pt3dadd( 71.9244, 92.8968, -90.4652, 1.84 ) }
    dend_10 { pt3dadd( 72.5142, 94.5709, -90.9663, 0.22 ) }
    dend_10 { pt3dadd( 72.7269, 95.1821, -91.1782, 0.44 ) }
    dend_10 { pt3dadd( 72.9652, 95.7887, -91.4203, 0.59 ) }
    dend_10 { pt3dadd( 73.4671, 96.9645, -91.9258, 0.29 ) }
    dend_10 { pt3dadd( 73.6826, 97.4704, -92.1395, 1.18 ) }
    dend_10 { pt3dadd( 73.9022, 97.9716, -92.3367, 1.4 ) }
    dend_10 { pt3dadd( 74.1069, 98.413, -92.4942, 1.4 ) }
    dend_10 { pt3dadd( 74.7928, 99.788, -92.965, 0.22 ) }
    dend_10 { pt3dadd( 75.0612, 100.27, -93.1092, 0.22 ) }
    dend_10 { pt3dadd( 75.2961, 100.653, -93.1965, 0.44 ) }
    dend_10 { pt3dadd( 75.6132, 101.172, -93.2715, 0.22 ) }
    dend_10 { pt3dadd( 75.7639, 101.438, -93.2866, 0.22 ) }
    dend_10 { pt3dadd( 76.1441, 102.146, -93.2935, 1.11 ) }
    dend_10 { pt3dadd( 76.3805, 102.621, -93.29, 1.33 ) }
    dend_10 { pt3dadd( 76.4159, 102.686, -93.2923, 1.55 ) }
    dend_10 { pt3dadd( 77.0798, 103.781, -93.4145, 0.22 ) }
    dend_10 { pt3dadd( 77.328, 104.171, -93.4536, 0.22 ) }
    dend_10 { pt3dadd( 77.6041, 104.58, -93.4774, 0.44 ) }
    dend_10 { pt3dadd( 77.83, 104.9, -93.4773, 0.44 ) }
    dend_10 { pt3dadd( 78.404, 105.726, -93.458, 0.22 ) }
    dend_10 { pt3dadd( 78.8756, 106.404, -93.4358, 0.22 ) }
    dend_10 { pt3dadd( 79.5156, 107.327, -93.3962, 1.18 ) }
    dend_10 { pt3dadd( 79.7935, 107.778, -93.3804, 1.33 ) }
    dend_10 { pt3dadd( 80.1045, 108.327, -93.3194, 1.11 ) }
    dend_10 { pt3dadd( 80.5986, 109.299, -93.1637, 0.22 ) }
    dend_10 { pt3dadd( 80.7285, 109.584, -93.1085, 0.44 ) }
    dend_10 { pt3dadd( 80.9559, 110.076, -93.0065, 0.44 ) }
    dend_10 { pt3dadd( 81.2913, 110.721, -92.8964, 0.22 ) }
    dend_10 { pt3dadd( 82.0617, 111.931, -92.7249, 0.22 ) }
    dend_10 { pt3dadd( 82.4402, 112.414, -92.6763, 1.11 ) }
    dend_10 { pt3dadd( 82.8015, 112.828, -92.6408, 1.55 ) }
    dend_10 { pt3dadd( 83.2186, 113.304, -92.6252, 1.62 ) }
    dend_10 { pt3dadd( 83.5781, 113.696, -92.6278, 1.25 ) }
    dend_10 { pt3dadd( 84.5644, 114.717, -92.6792, 0.22 ) }
    dend_10 { pt3dadd( 85.2427, 115.428, -92.7722, 0.22 ) }
    dend_10 { pt3dadd( 85.6699, 115.881, -92.8322, 0.22 ) }
    dend_10 { pt3dadd( 86.3211, 116.611, -92.9303, 0.44 ) }
    dend_10 { pt3dadd( 86.6949, 117.069, -92.9943, 0.44 ) }
    dend_10 { pt3dadd( 87.135, 117.634, -93.0708, 0.22 ) }
    dend_10 { pt3dadd( 87.5039, 118.106, -93.1328, 0.22 ) }
    dend_10 { pt3dadd( 87.9181, 118.6, -93.2084, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_10 { pt3dadd( 88.1333, 118.837, -93.2621, 0.59 ) }
    dend_10 { pt3dadd( 88.5938, 119.347, -93.4087, 0.22 ) }
    dend_10 { pt3dadd( 89.1457, 119.992, -93.6168, 0.74 ) }
    dend_10 { pt3dadd( 89.3914, 120.273, -93.7158, 0.88 ) }
    dend_10 { pt3dadd( 89.7989, 120.705, -93.8901, 0.52 ) }
    dend_10 { pt3dadd( 90.4987, 121.397, -94.2094, 0.22 ) }
    dend_10 { pt3dadd( 91.0919, 122.009, -94.5385, 0.22 ) }
    dend_10 { pt3dadd( 91.7282, 122.711, -94.9485, 1.11 ) }
    dend_10 { pt3dadd( 92.0446, 123.096, -95.1913, 1.47 ) }
    dend_10 { pt3dadd( 92.3486, 123.512, -95.4668, 1.55 ) }
    dend_10 { pt3dadd( 93.1122, 124.743, -96.3337, 0.22 ) }
    dend_10 { pt3dadd( 93.6819, 125.808, -97.1087, 0.96 ) }
    dend_10 { pt3dadd( 93.8376, 126.13, -97.349, 1.4 ) }
    dend_10 { pt3dadd( 94.0658, 126.677, -97.7645, 1.25 ) }
    dend_10 { pt3dadd( 94.2282, 127.11, -98.0831, 0.88 ) }
    dend_10 { pt3dadd( 94.6108, 128.198, -98.8429, 0.22 ) }
    dend_10 { pt3dadd( 94.7928, 128.787, -99.2401, 0.37 ) }
    dend_10 { pt3dadd( 94.983, 129.382, -99.6146, 0.22 ) }
    dend_10 { pt3dadd( 95.2834, 130.285, -100.198, 0.52 ) }
    dend_10 { pt3dadd( 95.444, 130.78, -100.507, 0.66 ) }
    dend_10 { pt3dadd( 95.7167, 131.718, -101.097, 0.22 ) }
    dend_10 { pt3dadd( 95.8839, 132.399, -101.523, 0.66 ) }
    dend_10 { pt3dadd( 95.9224, 132.602, -101.648, 0.66 ) }
    dend_10 { pt3dadd( 96.0972, 133.908, -102.415, 0.22 ) }
    dend_10 { pt3dadd( 96.1575, 134.522, -102.724, 0.59 ) }
    dend_10 { pt3dadd( 96.2364, 135.989, -103.348, 0.22 ) }
    dend_10 { pt3dadd( 96.2495, 136.511, -103.526, 0.22 ) }
    dend_10 { pt3dadd( 96.2597, 137.397, -103.779, 1.47 ) }
    dend_10 { pt3dadd( 96.2468, 137.817, -103.876, 1.69 ) }
    dend_10 { pt3dadd( 96.1122, 139.584, -104.153, 0.22 ) }
    dend_10 { pt3dadd( 95.995, 140.75, -104.31, 0.22 ) }
    dend_10 { pt3dadd( 95.8867, 141.604, -104.394, 0.74 ) }
    dend_10 { pt3dadd( 95.8227, 142.078, -104.439, 0.88 ) }
    dend_10 { pt3dadd( 95.6036, 143.584, -104.585, 0.22 ) }
    dend_10 { pt3dadd( 95.4085, 144.819, -104.72, 1.25 ) }
    dend_10 { pt3dadd( 95.3184, 145.351, -104.796, 1.25 ) }
    dend_10 { pt3dadd( 95.2334, 145.885, -104.883, 0.74 ) }
    dend_10 { pt3dadd( 95.0893, 146.859, -105.05, 0.22 ) }
    dend_10 { pt3dadd( 94.9568, 147.987, -105.237, 1.4 ) }
    dend_10 { pt3dadd( 94.9191, 148.406, -105.306, 1.62 ) }
    dend_10 { pt3dadd( 94.8074, 149.793, -105.526, 0.22 ) }
    dend_10 { pt3dadd( 94.7586, 150.645, -105.645, 0.59 ) }
    dend_10 { pt3dadd( 94.7515, 150.967, -105.668, 0.59 ) }
    dend_10 { pt3dadd( 94.7506, 152.338, -105.686, 0.15 ) }
    dend_10 { pt3dadd( 94.7722, 153.124, -105.646, 0.15 ) }
    dend_10 { pt3dadd( 94.8028, 153.833, -105.573, 0.15 ) }
    dend_10 { pt3dadd( 94.8432, 154.742, -105.455, 0.15 ) }
    dend_10 { pt3dadd( 94.9346, 156.579, -105.214, 1.18 ) }
    dend_10 { pt3dadd( 94.9381, 156.902, -105.186, 1.47 ) }
    dend_10 { pt3dadd( 94.9158, 157.392, -105.179, 1.11 ) }
    dend_10 { pt3dadd( 94.7891, 158.579, -105.238, 0.22 ) }
    dend_10 { pt3dadd( 94.6461, 159.449, -105.341, 0.96 ) }
    dend_10 { pt3dadd( 94.5155, 160.019, -105.459, 0.96 ) }
    dend_10 { pt3dadd( 94.1514, 161.498, -106.028, 0.22 ) }
    dend_10 { pt3dadd( 93.9164, 162.583, -106.513, 0.22 ) }
    dend_10 { pt3dadd( 93.7393, 163.508, -106.964, 1.18 ) }
    dend_10 { pt3dadd( 93.683, 163.835, -107.134, 1.4 ) }
    dend_10 { pt3dadd( 93.6016, 164.464, -107.451, 1.55 ) }
    dend_10 { pt3dadd( 93.3665, 167.03, -108.741, 0.22 ) }
    dend_10 { pt3dadd( 93.3124, 168.338, -109.402, 0.22 ) }
    dend_10 { pt3dadd( 93.3075, 169.225, -109.864, 0.81 ) }
    dend_10 { pt3dadd( 93.3112, 169.431, -109.975, 1.03 ) }
    dend_10 { pt3dadd( 93.3366, 170.7, -110.651, 0.22 ) }
    dend_10 { pt3dadd( 93.3531, 171.264, -110.935, 0.66 ) }
    dend_10 { pt3dadd( 93.3592, 171.741, -111.162, 0.66 ) }
    dend_10 { pt3dadd( 93.3573, 172.573, -111.6, 0.15 ) }
    dend_10 { pt3dadd( 93.3559, 173.555, -112.081, 1.25 ) }
    dend_10 { pt3dadd( 93.3507, 174.069, -112.301, 1.4 ) }
    dend_10 { pt3dadd( 93.333, 175.224, -112.743, 0.15 ) }
    dend_10 { pt3dadd( 93.3252, 175.932, -112.975, 0.37 ) }
    dend_10 { pt3dadd( 93.3266, 176.267, -113.07, 0.37 ) }
    dend_10 { pt3dadd( 93.3497, 178.087, -113.541, 0.22 ) }
    dend_10 { pt3dadd( 93.3779, 179.076, -113.779, 1.03 ) }
    dend_10 { pt3dadd( 93.3952, 179.511, -113.875, 1.18 ) }
    dend_10 { pt3dadd( 93.4045, 179.75, -113.925, 1.18 ) }
    dend_10 { pt3dadd( 93.4819, 181.387, -114.233, 0.22 ) }
    dend_10 { pt3dadd( 93.5195, 182.059, -114.369, 0.52 ) }
    dend_10 { pt3dadd( 93.5434, 182.373, -114.434, 0.52 ) }
    dend_10 { pt3dadd( 93.6707, 183.692, -114.686, 0.22 ) }
    dend_10 { pt3dadd( 93.7583, 184.461, -114.816, 0.22 ) }
    dend_10 { pt3dadd( 93.8831, 185.33, -114.951, 1.11 ) }
    dend_10 { pt3dadd( 93.9952, 186.009, -115.045, 1.11 ) }
    dend_10 { pt3dadd( 94.321, 187.717, -115.276, 0.22 ) }
    dend_10 { pt3dadd( 94.5383, 188.725, -115.423, 0.22 ) }
    dend_10 { pt3dadd( 94.7593, 189.602, -115.563, 1.03 ) }
    dend_10 { pt3dadd( 94.9132, 190.187, -115.665, 1.47 ) }
    dend_10 { pt3dadd( 95.032, 190.644, -115.748, 1.11 ) }
    dend_10 { pt3dadd( 95.3458, 191.884, -115.919, 0.15 ) }
    dend_10 { pt3dadd( 95.4594, 192.331, -115.981, 0.37 ) }
    dend_10 { pt3dadd( 95.7176, 193.349, -116.129, 0.22 ) }
    dend_10 { pt3dadd( 95.853, 193.887, -116.193, 0.37 ) }
    dend_10 { pt3dadd( 95.9259, 194.186, -116.231, 0.37 ) }
    dend_10 { pt3dadd( 96.2997, 195.596, -116.44, 0.22 ) }
    dend_10 { pt3dadd( 96.5345, 196.449, -116.574, 0.81 ) }
    dend_10 { pt3dadd( 96.6827, 196.958, -116.658, 1.03 ) }
    dend_10 { pt3dadd( 97.0883, 198.262, -116.895, 0.15 ) }
    dend_10 { pt3dadd( 97.3335, 199.002, -117.04, 0.29 ) }
    dend_10 { pt3dadd( 97.5519, 199.683, -117.19, 0.22 ) }
    dend_10 { pt3dadd( 97.7373, 200.312, -117.346, 0.88 ) }
    dend_10 { pt3dadd( 97.8337, 200.68, -117.422, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 97.9132, 201.062, -117.487, 1.11 ) }
    dend_10 { pt3dadd( 98.1152, 202.48, -117.682, 0.22 ) }
    dend_10 { pt3dadd( 98.1837, 203.261, -117.75, 1.03 ) }
    dend_10 { pt3dadd( 98.2006, 203.657, -117.776, 1.25 ) }
    dend_10 { pt3dadd( 98.2283, 205.0, -117.852, 0.22 ) }
    dend_10 { pt3dadd( 98.2257, 206.12, -117.9, 0.88 ) }
    dend_10 { pt3dadd( 98.2098, 207.216, -117.934, 0.29 ) }
    dend_10 { pt3dadd( 98.1842, 208.102, -117.951, 0.96 ) }
    dend_10 { pt3dadd( 98.1699, 208.521, -117.957, 0.96 ) }
    dend_10 { pt3dadd( 98.1341, 209.296, -117.964, 0.22 ) }
    dend_10 { pt3dadd( 98.0905, 209.929, -117.963, 0.37 ) }
    dend_10 { pt3dadd( 98.0203, 210.822, -117.965, 0.22 ) }
    dend_10 { pt3dadd( 97.9517, 211.605, -117.968, 0.52 ) }
    dend_10 { pt3dadd( 97.8305, 213.173, -117.99, 0.22 ) }
    dend_10 { pt3dadd( 97.7673, 213.884, -118.01, 0.81 ) }
    dend_10 { pt3dadd( 97.6838, 214.745, -118.047, 0.22 ) }
    dend_10 { pt3dadd( 97.623, 215.391, -118.083, 0.88 ) }
    dend_10 { pt3dadd( 97.584, 215.936, -118.129, 1.03 ) }
    dend_10 { pt3dadd( 97.4904, 217.99, -118.35, 0.22 ) }
    dend_10 { pt3dadd( 97.4817, 218.695, -118.44, 0.22 ) }
    dend_10 { pt3dadd( 97.4948, 219.478, -118.548, 0.81 ) }
    dend_10 { pt3dadd( 97.5069, 219.805, -118.594, 1.03 ) }
    dend_10 { pt3dadd( 97.5881, 221.459, -118.857, 0.22 ) }
    dend_10 { pt3dadd( 97.6071, 221.841, -118.912, 0.29 ) }
    dend_10 { pt3dadd( 97.6543, 222.898, -119.044, 0.15 ) }
    dend_10 { pt3dadd( 97.6829, 223.465, -119.102, 0.29 ) }
    dend_10 { pt3dadd( 97.7113, 224.251, -119.175, 0.88 ) }
    dend_10 { pt3dadd( 97.7119, 224.918, -119.236, 0.88 ) }
    dend_10 { pt3dadd( 97.7225, 226.209, -119.261, 0.22 ) }
    dend_10 { pt3dadd( 97.7298, 226.763, -119.248, 0.22 ) }
    dend_10 { pt3dadd( 97.7234, 227.42, -119.218, 0.88 ) }
    dend_10 { pt3dadd( 97.7237, 227.856, -119.179, 1.11 ) }
    dend_10 { pt3dadd( 97.7386, 228.358, -119.117, 1.11 ) }
    dend_10 { pt3dadd( 97.9033, 230.006, -118.852, 0.22 ) }
    dend_10 { pt3dadd( 98.0673, 230.974, -118.706, 0.22 ) }
    dend_10 { pt3dadd( 98.2336, 231.674, -118.582, 0.22 ) }
    dend_10 { pt3dadd( 98.5123, 232.58, -118.403, 0.81 ) }
    dend_10 { pt3dadd( 98.6463, 232.945, -118.329, 1.03 ) }
    dend_10 { pt3dadd( 99.3264, 233.824, -117.64, 0.22 ) }
    dend_10 { pt3dadd( 99.6449, 234.11, -117.257, 0.22 ) }
    dend_10 { pt3dadd( 100.251, 234.51, -116.544, 1.11 ) }
    dend_10 { pt3dadd( 100.519, 234.658, -116.243, 1.25 ) }
    dend_10 { pt3dadd( 100.807, 234.797, -115.93, 1.25 ) }
    dend_10 { pt3dadd( 105.032, 236.682, -111.46, 0.66 ) }
    dend_10 { pt3dadd( 105.629, 236.932, -110.839, 0.88 ) }
    dend_10 { pt3dadd( 106.613, 237.303, -109.806, 0.29 ) }
    dend_10 { pt3dadd( 107.162, 237.489, -109.227, 0.22 ) }
    dend_10 { pt3dadd( 107.566, 237.624, -108.802, 0.44 ) }
    dend_10 { pt3dadd( 107.94, 237.746, -108.437, 0.22 ) }
    dend_10 { pt3dadd( 108.582, 238.138, -108.379, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -29.0966, 158.958, -72.3872, 1.77 ) }
    dend_8 { pt3dadd( -28.2756, 159.824, -75.0773, 1.77 ) }
    dend_8 { pt3dadd( -27.5491, 160.848, -77.5621, 1.47 ) }
    dend_8 { pt3dadd( -27.1783, 161.513, -78.9502, 1.18 ) }
    dend_8 { pt3dadd( -26.8344, 162.272, -80.4053, 1.11 ) }
    dend_8 { pt3dadd( -26.5349, 163.058, -81.8367, 0.88 ) }
    dend_8 { pt3dadd( -26.4327, 163.381, -82.4135, 0.66 ) }
    dend_8 { pt3dadd( -26.3096, 164.078, -83.514, 0.96 ) }
    dend_8 { pt3dadd( -26.267, 164.92, -84.718, 1.11 ) }
    dend_8 { pt3dadd( -26.2807, 165.627, -85.7831, 1.33 ) }
    dend_8 { pt3dadd( -26.2988, 165.976, -86.3689, 1.62 ) }
    dend_8 { pt3dadd( -26.3827, 166.806, -87.9092, 1.47 ) }
    dend_8 { pt3dadd( -26.5898, 168.248, -90.8164, 0.96 ) }
    dend_8 { pt3dadd( -26.7273, 168.93, -92.2415, 0.96 ) }
    dend_8 { pt3dadd( -26.9472, 169.834, -94.1159, 1.55 ) }
    dend_8 { pt3dadd( -27.1579, 170.694, -95.8948, 1.33 ) }
    dend_8 { pt3dadd( -27.317, 171.391, -97.3223, 1.62 ) }
    dend_8 { pt3dadd( -27.5283, 172.322, -99.1852, 1.11 ) }
    dend_8 { pt3dadd( -27.6059, 172.64, -99.8127, 0.59 ) }
    dend_8 { pt3dadd( -27.8654, 173.7, -101.876, 0.88 ) }
    dend_8 { pt3dadd( -28.0734, 174.532, -103.415, 1.25 ) }
    dend_8 { pt3dadd( -28.2633, 175.265, -104.713, 1.4 ) }
    dend_8 { pt3dadd( -28.4953, 176.157, -106.252, 0.52 ) }
    dend_8 { pt3dadd( -28.7318, 177.017, -107.666, 0.59 ) }
    dend_8 { pt3dadd( -28.8708, 177.514, -108.507, 0.37 ) }
    dend_8 { pt3dadd( -28.9623, 177.775, -108.95, 0.59 ) }
    dend_8 { pt3dadd( -29.1693, 178.289, -109.822, 0.44 ) }
    dend_8 { pt3dadd( -29.4791, 179.012, -111.035, 0.37 ) }
    dend_8 { pt3dadd( -29.8363, 179.863, -112.418, 1.47 ) }
    dend_8 { pt3dadd( -30.3241, 181.018, -114.233, 1.84 ) }
    dend_8 { pt3dadd( -30.8446, 182.207, -116.047, 0.52 ) }
    dend_8 { pt3dadd( -31.2041, 182.975, -117.166, 0.52 ) }
    dend_8 { pt3dadd( -31.4285, 183.407, -117.764, 1.18 ) }
    dend_8 { pt3dadd( -31.6606, 183.777, -118.26, 1.18 ) }
    dend_8 { pt3dadd( -32.5511, 184.979, -119.787, 0.22 ) }
    dend_8 { pt3dadd( -32.775, 185.249, -120.088, 0.37 ) }
    dend_8 { pt3dadd( -33.2001, 185.725, -120.615, 0.96 ) }
    dend_8 { pt3dadd( -33.7485, 186.31, -121.283, 1.25 ) }
    dend_8 { pt3dadd( -34.8591, 187.441, -122.664, 0.22 ) }
    dend_8 { pt3dadd( -35.1111, 187.698, -123.019, 0.37 ) }
    dend_8 { pt3dadd( -35.3267, 187.927, -123.354, 0.37 ) }
    dend_8 { pt3dadd( -36.0554, 188.809, -124.717, 1.11 ) }
    dend_8 { pt3dadd( -36.232, 189.047, -125.094, 1.55 ) }
    dend_8 { pt3dadd( -36.3718, 189.255, -125.415, 1.69 ) }
    dend_8 { pt3dadd( -37.3258, 190.855, -127.94, 0.29 ) }
    dend_8 { pt3dadd( -37.4981, 191.211, -128.529, 0.29 ) }
    dend_8 { pt3dadd( -37.8207, 192.087, -129.958, 1.03 ) }
    dend_8 { pt3dadd( -37.9037, 192.426, -130.498, 0.81 ) }
    dend_8 { pt3dadd( -37.9451, 192.834, -131.126, 1.11 ) }
    dend_8 { pt3dadd( -37.941, 193.716, -132.417, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( -37.7698, 195.451, -134.853, 0.59 ) }
    dend_8 { pt3dadd( -37.6925, 196.069, -135.722, 1.18 ) }
    dend_8 { pt3dadd( -37.5836, 196.832, -136.796, 1.33 ) }
    dend_8 { pt3dadd( -37.3302, 198.447, -139.029, 0.52 ) }
    dend_8 { pt3dadd( -37.2284, 199.06, -139.84, 0.81 ) }
    dend_8 { pt3dadd( -37.1221, 199.779, -140.748, 0.81 ) }
    dend_8 { pt3dadd( -36.9902, 200.827, -142.006, 0.37 ) }
    dend_8 { pt3dadd( -36.9362, 201.348, -142.65, 0.37 ) }
    dend_8 { pt3dadd( -36.9012, 201.766, -143.169, 0.22 ) }
    dend_8 { pt3dadd( -36.8346, 202.667, -144.275, 1.18 ) }
    dend_8 { pt3dadd( -36.7129, 204.223, -146.135, 1.33 ) }
    dend_8 { pt3dadd( -36.624, 205.187, -147.251, 0.44 ) }
    dend_8 { pt3dadd( -36.44, 206.406, -148.651, 0.74 ) }
    dend_8 { pt3dadd( -36.1731, 207.752, -150.177, 0.52 ) }
    dend_8 { pt3dadd( -35.9949, 208.42, -150.953, 0.66 ) }
    dend_8 { pt3dadd( -35.8232, 208.895, -151.508, 1.47 ) }
    dend_8 { pt3dadd( -35.5045, 209.595, -152.301, 1.55 ) }
    dend_8 { pt3dadd( -34.5585, 211.339, -154.349, 0.96 ) }
    dend_8 { pt3dadd( -34.0931, 212.05, -155.147, 0.37 ) }
    dend_8 { pt3dadd( -33.1819, 213.308, -156.584, 0.29 ) }
    dend_8 { pt3dadd( -32.7068, 213.962, -157.358, 0.81 ) }
    dend_8 { pt3dadd( -32.4188, 214.389, -157.876, 1.25 ) }
    dend_8 { pt3dadd( -31.9515, 215.203, -158.836, 1.25 ) }
    dend_8 { pt3dadd( -31.622, 215.81, -159.635, 0.59 ) }
    dend_8 { pt3dadd( -31.0231, 216.738, -161.16, 0.44 ) }
    dend_8 { pt3dadd( -30.4544, 217.421, -162.582, 0.74 ) }
    dend_8 { pt3dadd( -29.7913, 218.039, -164.191, 1.03 ) }
    dend_8 { pt3dadd( -29.3738, 218.285, -165.08, 1.25 ) }
    dend_8 { pt3dadd( -27.7572, 218.791, -168.085, 0.74 ) }
    dend_8 { pt3dadd( -26.6595, 218.871, -169.896, 0.22 ) }
    dend_8 { pt3dadd( -25.7368, 218.729, -171.111, 0.96 ) }
    dend_8 { pt3dadd( -25.5049, 218.657, -171.365, 0.96 ) }
    dend_8 { pt3dadd( -24.519, 218.236, -172.282, 0.29 ) }
    dend_8 { pt3dadd( -23.9828, 217.963, -172.677, 0.52 ) }
    dend_8 { pt3dadd( -23.3076, 217.596, -173.02, 0.22 ) }
    dend_8 { pt3dadd( -22.537, 217.215, -173.334, 0.22 ) }
    dend_8 { pt3dadd( -22.0381, 216.983, -173.496, 0.96 ) }
    dend_8 { pt3dadd( -21.6506, 216.813, -173.596, 0.96 ) }
    dend_8 { pt3dadd( -19.8262, 216.041, -173.903, 0.22 ) }
    dend_8 { pt3dadd( -19.166, 215.772, -173.954, 0.44 ) }
    dend_8 { pt3dadd( -18.6441, 215.567, -173.938, 0.44 ) }
    dend_8 { pt3dadd( -17.5164, 215.111, -173.778, 0.15 ) }
    dend_8 { pt3dadd( -16.6051, 214.743, -173.645, 0.15 ) }
    dend_8 { pt3dadd( -15.9102, 214.475, -173.57, 0.22 ) }
    dend_8 { pt3dadd( -15.3853, 214.288, -173.552, 0.81 ) }
    dend_8 { pt3dadd( -14.5062, 213.962, -173.511, 1.11 ) }
    dend_8 { pt3dadd( -14.1311, 213.82, -173.522, 1.11 ) }
    dend_8 { pt3dadd( -12.2567, 213.199, -174.203, 0.15 ) }
    dend_8 { pt3dadd( -11.5632, 213.033, -174.774, 0.37 ) }
    dend_8 { pt3dadd( -11.2394, 212.97, -175.125, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -29.0966, 158.958, -72.3872, 0.29 ) }
    dend_5 { pt3dadd( -30.3616, 160.486, -71.9258, 0.29 ) }
    dend_5 { pt3dadd( -31.209, 161.484, -71.663, 0.22 ) }
    dend_5 { pt3dadd( -31.5351, 161.859, -71.5777, 0.74 ) }
    dend_5 { pt3dadd( -31.8568, 162.23, -71.5177, 0.74 ) }
    dend_5 { pt3dadd( -32.449, 162.899, -71.4369, 0.22 ) }
    dend_5 { pt3dadd( -33.0747, 163.592, -71.3831, 0.37 ) }
    dend_5 { pt3dadd( -33.5686, 164.115, -71.3862, 0.22 ) }
    dend_5 { pt3dadd( -34.1289, 164.685, -71.4186, 0.52 ) }
    dend_5 { pt3dadd( -34.6635, 165.2, -71.4882, 0.52 ) }
    dend_5 { pt3dadd( -35.326, 165.803, -71.6365, 0.22 ) }
    dend_5 { pt3dadd( -35.7405, 166.143, -71.7735, 0.22 ) }
    dend_5 { pt3dadd( -36.4371, 166.658, -72.0187, 1.47 ) }
    dend_5 { pt3dadd( -36.8179, 166.926, -72.1412, 1.92 ) }
    dend_5 { pt3dadd( -37.4534, 167.353, -72.3286, 2.06 ) }
    dend_5 { pt3dadd( -38.0616, 167.755, -72.4845, 1.69 ) }
    dend_5 { pt3dadd( -39.4328, 168.683, -72.8176, 0.44 ) }
    dend_5 { pt3dadd( -40.3577, 169.321, -73.0053, 0.22 ) }
    dend_5 { pt3dadd( -41.0416, 169.809, -73.1358, 0.52 ) }
    dend_5 { pt3dadd( -41.4685, 170.121, -73.2136, 0.66 ) }
    dend_5 { pt3dadd( -42.5004, 170.927, -73.4784, 0.22 ) }
    dend_5 { pt3dadd( -42.9708, 171.324, -73.6228, 0.22 ) }
    dend_5 { pt3dadd( -43.658, 171.965, -73.8676, 1.47 ) }
    dend_5 { pt3dadd( -44.1019, 172.41, -74.0655, 1.77 ) }
    dend_5 { pt3dadd( -44.6321, 172.977, -74.3299, 1.99 ) }
    dend_5 { pt3dadd( -46.5417, 175.152, -75.4326, 0.22 ) }
    dend_5 { pt3dadd( -47.2919, 176.067, -75.9163, 0.22 ) }
    dend_5 { pt3dadd( -47.7728, 176.675, -76.2475, 0.96 ) }
    dend_5 { pt3dadd( -48.2799, 177.337, -76.6078, 1.03 ) }
    dend_5 { pt3dadd( -48.8858, 178.143, -77.0188, 0.22 ) }
    dend_5 { pt3dadd( -49.5338, 179.039, -77.4305, 0.22 ) }
    dend_5 { pt3dadd( -49.8679, 179.513, -77.6366, 0.81 ) }
    dend_5 { pt3dadd( -50.2007, 179.973, -77.8668, 0.96 ) }
    dend_5 { pt3dadd( -50.9219, 180.901, -78.3995, 0.22 ) }
    dend_5 { pt3dadd( -51.3552, 181.419, -78.7153, 0.22 ) }
    dend_5 { pt3dadd( -52.0447, 182.21, -79.2411, 1.11 ) }
    dend_5 { pt3dadd( -52.362, 182.569, -79.4842, 1.4 ) }
    dend_5 { pt3dadd( -52.702, 182.94, -79.7534, 1.4 ) }
    dend_5 { pt3dadd( -53.8663, 184.163, -80.682, 0.22 ) }
    dend_5 { pt3dadd( -54.3885, 184.681, -81.0791, 0.22 ) }
    dend_5 { pt3dadd( -55.1638, 185.397, -81.6319, 0.96 ) }
    dend_5 { pt3dadd( -55.6241, 185.795, -81.9578, 1.18 ) }
    dend_5 { pt3dadd( -56.6732, 186.623, -82.7046, 0.22 ) }
    dend_5 { pt3dadd( -57.1171, 186.95, -83.0175, 0.22 ) }
    dend_5 { pt3dadd( -57.8944, 187.489, -83.5585, 1.55 ) }
    dend_5 { pt3dadd( -58.3021, 187.768, -83.8391, 1.99 ) }
    dend_5 { pt3dadd( -59.1311, 188.35, -84.4136, 1.99 ) }
    dend_5 { pt3dadd( -60.9181, 189.697, -85.7061, 0.22 ) }
    dend_5 { pt3dadd( -61.2603, 189.982, -85.9748, 0.44 ) }
    dend_5 { pt3dadd( -61.4268, 190.148, -86.1155, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( -61.9459, 190.785, -86.5864, 0.22 ) }
    dend_5 { pt3dadd( -62.698, 191.924, -87.2401, 1.25 ) }
    dend_5 { pt3dadd( -63.064, 192.599, -87.5309, 1.62 ) }
    dend_5 { pt3dadd( -63.2781, 193.087, -87.7028, 1.62 ) }
    dend_5 { pt3dadd( -63.8685, 194.446, -88.1473, 0.22 ) }
    dend_5 { pt3dadd( -64.1768, 195.163, -88.3754, 0.22 ) }
    dend_5 { pt3dadd( -64.4901, 195.922, -88.6087, 0.29 ) }
    dend_5 { pt3dadd( -64.8441, 196.768, -88.8256, 0.66 ) }
    dend_5 { pt3dadd( -65.064, 197.28, -88.945, 0.66 ) }
    dend_5 { pt3dadd( -65.5246, 198.276, -89.1718, 0.22 ) }
    dend_5 { pt3dadd( -66.2319, 199.638, -89.507, 1.55 ) }
    dend_5 { pt3dadd( -66.6082, 200.331, -89.6908, 1.77 ) }
    dend_5 { pt3dadd( -66.9388, 200.968, -89.8725, 1.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -66.9388, 200.968, -89.8725, 0.22 ) }
    dend_7 { pt3dadd( -67.5461, 202.843, -90.8036, 0.22 ) }
    dend_7 { pt3dadd( -67.686, 203.24, -90.9542, 0.44 ) }
    dend_7 { pt3dadd( -67.7663, 203.445, -91.0202, 0.44 ) }
    dend_7 { pt3dadd( -68.0474, 204.106, -91.2135, 0.22 ) }
    dend_7 { pt3dadd( -68.2628, 204.589, -91.3392, 0.59 ) }
    dend_7 { pt3dadd( -68.4682, 205.029, -91.4494, 0.59 ) }
    dend_7 { pt3dadd( -68.9466, 205.911, -91.6089, 0.22 ) }
    dend_7 { pt3dadd( -69.175, 206.293, -91.6858, 0.22 ) }
    dend_7 { pt3dadd( -69.6448, 207.05, -91.8277, 1.11 ) }
    dend_7 { pt3dadd( -69.839, 207.346, -91.88, 1.33 ) }
    dend_7 { pt3dadd( -70.0304, 207.63, -91.9509, 1.33 ) }
    dend_7 { pt3dadd( -70.898, 208.952, -92.3469, 0.22 ) }
    dend_7 { pt3dadd( -71.3224, 209.651, -92.5962, 0.22 ) }
    dend_7 { pt3dadd( -71.7376, 210.383, -92.9034, 1.33 ) }
    dend_7 { pt3dadd( -71.9695, 210.788, -93.1328, 1.69 ) }
    dend_7 { pt3dadd( -72.7743, 212.113, -94.1241, 0.22 ) }
    dend_7 { pt3dadd( -73.059, 212.573, -94.5252, 0.22 ) }
    dend_7 { pt3dadd( -73.3995, 213.1, -95.0962, 1.11 ) }
    dend_7 { pt3dadd( -73.6974, 213.534, -95.6905, 1.4 ) }
    dend_7 { pt3dadd( -74.326, 214.398, -97.1496, 1.11 ) }
    dend_7 { pt3dadd( -74.8403, 215.019, -98.4188, 1.03 ) }
    dend_7 { pt3dadd( -74.9957, 215.188, -98.8041, 1.55 ) }
    dend_7 { pt3dadd( -75.4325, 215.631, -99.8702, 1.69 ) }
    dend_7 { pt3dadd( -76.0564, 216.227, -101.34, 0.74 ) }
    dend_7 { pt3dadd( -76.7922, 216.943, -103.048, 1.4 ) }
    dend_7 { pt3dadd( -77.7366, 217.961, -105.237, 1.18 ) }
    dend_7 { pt3dadd( -78.127, 218.396, -106.124, 1.55 ) }
    dend_7 { pt3dadd( -78.4562, 218.773, -106.832, 1.69 ) }
    dend_7 { pt3dadd( -79.2938, 219.822, -108.513, 1.18 ) }
    dend_7 { pt3dadd( -79.6719, 220.328, -109.217, 0.59 ) }
    dend_7 { pt3dadd( -80.4497, 221.525, -110.641, 1.33 ) }
    dend_7 { pt3dadd( -80.7704, 222.12, -111.26, 1.77 ) }
    dend_7 { pt3dadd( -81.1868, 223.007, -112.134, 0.52 ) }
    dend_7 { pt3dadd( -81.4378, 223.62, -112.711, 1.25 ) }
    dend_7 { pt3dadd( -81.752, 224.467, -113.451, 1.11 ) }
    dend_7 { pt3dadd( -82.1951, 225.646, -114.438, 0.22 ) }
    dend_7 { pt3dadd( -82.5296, 226.484, -115.137, 0.22 ) }
    dend_7 { pt3dadd( -82.8957, 227.364, -115.839, 1.55 ) }
    dend_7 { pt3dadd( -83.1922, 228.015, -116.334, 1.69 ) }
    dend_7 { pt3dadd( -83.9064, 229.424, -117.371, 0.15 ) }
    dend_7 { pt3dadd( -84.2279, 230.005, -117.768, 0.81 ) }
    dend_7 { pt3dadd( -84.5908, 230.598, -118.132, 1.03 ) }
    dend_7 { pt3dadd( -85.2571, 231.648, -118.685, 0.22 ) }
    dend_7 { pt3dadd( -85.6873, 232.316, -118.981, 1.03 ) }
    dend_7 { pt3dadd( -86.0333, 232.867, -119.152, 1.47 ) }
    dend_7 { pt3dadd( -86.4317, 233.519, -119.288, 1.47 ) }
    dend_7 { pt3dadd( -87.1717, 234.726, -119.482, 0.22 ) }
    dend_7 { pt3dadd( -87.4798, 235.227, -119.544, 0.74 ) }
    dend_7 { pt3dadd( -87.6992, 235.58, -119.582, 0.88 ) }
    dend_7 { pt3dadd( -88.6518, 237.139, -119.731, 0.22 ) }
    dend_7 { pt3dadd( -89.1641, 237.995, -119.802, 1.11 ) }
    dend_7 { pt3dadd( -89.4452, 238.47, -119.842, 1.4 ) }
    dend_7 { pt3dadd( -90.0717, 239.518, -119.974, 0.22 ) }
    dend_7 { pt3dadd( -90.2724, 239.875, -120.027, 0.52 ) }
    dend_7 { pt3dadd( -90.5908, 240.495, -120.143, 0.22 ) }
    dend_7 { pt3dadd( -90.8317, 241.043, -120.279, 0.52 ) }
    dend_7 { pt3dadd( -90.9191, 241.277, -120.336, 0.52 ) }
    dend_7 { pt3dadd( -91.1496, 241.98, -120.491, 0.22 ) }
    dend_7 { pt3dadd( -91.4024, 242.794, -120.676, 1.33 ) }
    dend_7 { pt3dadd( -91.5965, 243.363, -120.859, 1.55 ) }
    dend_7 { pt3dadd( -91.9569, 244.461, -121.266, 0.22 ) }
    dend_7 { pt3dadd( -92.2505, 245.327, -121.631, 0.22 ) }
    dend_7 { pt3dadd( -92.5671, 246.146, -122.138, 1.47 ) }
    dend_7 { pt3dadd( -92.7568, 246.656, -122.499, 1.69 ) }
    dend_7 { pt3dadd( -93.3284, 248.384, -123.748, 0.22 ) }
    dend_7 { pt3dadd( -93.5976, 249.27, -124.414, 1.99 ) }
    dend_7 { pt3dadd( -93.7693, 249.848, -124.873, 2.36 ) }
    dend_7 { pt3dadd( -94.6856, 252.939, -127.429, 0.22 ) }
    dend_7 { pt3dadd( -95.0507, 254.181, -128.428, 0.44 ) }
    dend_7 { pt3dadd( -95.3437, 255.209, -129.197, 0.22 ) }
    dend_7 { pt3dadd( -95.8618, 257.056, -130.401, 1.84 ) }
    dend_7 { pt3dadd( -96.009, 257.564, -130.69, 2.28 ) }
    dend_7 { pt3dadd( -96.1531, 258.075, -130.925, 2.28 ) }
    dend_7 { pt3dadd( -96.773, 260.092, -131.638, 0.22 ) }
    dend_7 { pt3dadd( -96.9732, 260.65, -131.83, 0.74 ) }
    dend_7 { pt3dadd( -97.6877, 262.487, -132.435, 0.22 ) }
    dend_7 { pt3dadd( -97.9652, 263.275, -132.643, 0.74 ) }
    dend_7 { pt3dadd( -98.1096, 263.711, -132.754, 0.81 ) }
    dend_7 { pt3dadd( -98.8011, 265.866, -133.308, 0.15 ) }
    dend_7 { pt3dadd( -99.0517, 266.619, -133.537, 1.11 ) }
    dend_7 { pt3dadd( -99.3245, 267.402, -133.8, 1.11 ) }
    dend_7 { pt3dadd( -100.006, 269.257, -134.488, 0.22 ) }
    dend_7 { pt3dadd( -100.205, 269.789, -134.684, 0.66 ) }
    dend_7 { pt3dadd( -100.359, 270.201, -134.822, 0.81 ) }
    dend_7 { pt3dadd( -100.854, 271.469, -135.162, 0.22 ) }
    dend_7 { pt3dadd( -101.131, 272.027, -135.316, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -101.372, 272.392, -135.42, 1.33 ) }
    dend_7 { pt3dadd( -102.019, 273.081, -135.657, 0.22 ) }
    dend_7 { pt3dadd( -102.337, 273.375, -135.766, 0.66 ) }
    dend_7 { pt3dadd( -102.622, 273.605, -135.851, 0.88 ) }
    dend_7 { pt3dadd( -103.87, 274.499, -136.173, 0.22 ) }
    dend_7 { pt3dadd( -104.685, 275.043, -136.395, 0.22 ) }
    dend_7 { pt3dadd( -105.087, 275.301, -136.502, 0.96 ) }
    dend_7 { pt3dadd( -105.611, 275.63, -136.641, 1.11 ) }
    dend_7 { pt3dadd( -106.278, 276.079, -136.81, 0.22 ) }
    dend_7 { pt3dadd( -106.699, 276.398, -136.893, 0.59 ) }
    dend_7 { pt3dadd( -106.837, 276.524, -136.901, 0.59 ) }
    dend_7 { pt3dadd( -107.17, 276.882, -136.885, 0.22 ) }
    dend_7 { pt3dadd( -107.502, 277.275, -136.866, 0.44 ) }
    dend_7 { pt3dadd( -107.663, 277.474, -136.856, 0.52 ) }
    dend_7 { pt3dadd( -108.333, 278.346, -136.844, 0.15 ) }
    dend_7 { pt3dadd( -108.55, 278.634, -136.846, 0.44 ) }
    dend_7 { pt3dadd( -109.243, 279.54, -136.879, 0.22 ) }
    dend_7 { pt3dadd( -109.629, 280.037, -136.924, 0.44 ) }
    dend_7 { pt3dadd( -109.817, 280.28, -136.951, 0.44 ) }
    dend_7 { pt3dadd( -110.121, 280.695, -136.999, 0.22 ) }
    dend_7 { pt3dadd( -110.409, 281.106, -137.043, 0.59 ) }
    dend_7 { pt3dadd( -110.786, 281.644, -137.096, 0.59 ) }
    dend_7 { pt3dadd( -111.276, 282.346, -137.165, 0.22 ) }
    dend_7 { pt3dadd( -111.713, 282.99, -137.249, 0.22 ) }
    dend_7 { pt3dadd( -112.195, 283.711, -137.368, 0.81 ) }
    dend_7 { pt3dadd( -112.319, 283.899, -137.407, 0.81 ) }
    dend_7 { pt3dadd( -112.616, 284.352, -137.53, 0.22 ) }
    dend_7 { pt3dadd( -112.928, 284.846, -137.673, 0.44 ) }
    dend_7 { pt3dadd( -113.674, 286.056, -138.052, 0.22 ) }
    dend_7 { pt3dadd( -113.866, 286.365, -138.157, 0.96 ) }
    dend_7 { pt3dadd( -114.24, 286.953, -138.366, 1.11 ) }
    dend_7 { pt3dadd( -115.306, 288.618, -138.942, 0.22 ) }
    dend_7 { pt3dadd( -115.782, 289.377, -139.193, 0.22 ) }
    dend_7 { pt3dadd( -115.95, 289.652, -139.278, 0.74 ) }
    dend_7 { pt3dadd( -116.165, 290.014, -139.381, 0.96 ) }
    dend_7 { pt3dadd( -116.409, 290.426, -139.495, 1.18 ) }
    dend_7 { pt3dadd( -116.584, 290.724, -139.586, 1.18 ) }
    dend_7 { pt3dadd( -117.202, 291.82, -139.941, 0.15 ) }
    dend_7 { pt3dadd( -117.477, 292.287, -140.114, 0.52 ) }
    dend_7 { pt3dadd( -117.583, 292.47, -140.187, 0.81 ) }
    dend_7 { pt3dadd( -117.72, 292.731, -140.29, 0.81 ) }
    dend_7 { pt3dadd( -118.291, 293.891, -140.749, 0.22 ) }
    dend_7 { pt3dadd( -118.594, 294.551, -141.003, 0.96 ) }
    dend_7 { pt3dadd( -118.787, 295.022, -141.171, 1.47 ) }
    dend_7 { pt3dadd( -119.269, 296.361, -141.624, 0.22 ) }
    dend_7 { pt3dadd( -119.54, 297.211, -141.907, 0.22 ) }
    dend_7 { pt3dadd( -119.804, 298.108, -142.211, 1.03 ) }
    dend_7 { pt3dadd( -119.899, 298.458, -142.329, 1.03 ) }
    dend_7 { pt3dadd( -120.077, 299.152, -142.59, 0.22 ) }
    dend_7 { pt3dadd( -120.204, 299.688, -142.816, 0.44 ) }
    dend_7 { pt3dadd( -120.328, 300.219, -143.063, 0.37 ) }
    dend_7 { pt3dadd( -120.509, 301.004, -143.453, 0.74 ) }
    dend_7 { pt3dadd( -120.577, 301.296, -143.603, 0.96 ) }
    dend_7 { pt3dadd( -121.051, 303.214, -144.636, 0.22 ) }
    dend_7 { pt3dadd( -121.312, 304.206, -145.194, 0.74 ) }
    dend_7 { pt3dadd( -121.382, 304.477, -145.346, 1.11 ) }
    dend_7 { pt3dadd( -121.45, 304.758, -145.5, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -66.9388, 200.968, -89.8725, 0.22 ) }
    dend_6 { pt3dadd( -68.5204, 202.685, -89.452, 0.22 ) }
    dend_6 { pt3dadd( -68.9609, 203.18, -89.331, 0.22 ) }
    dend_6 { pt3dadd( -69.2531, 203.57, -89.2398, 0.66 ) }
    dend_6 { pt3dadd( -69.5401, 203.999, -89.1429, 0.88 ) }
    dend_6 { pt3dadd( -69.7646, 204.381, -89.0387, 0.88 ) }
    dend_6 { pt3dadd( -70.753, 206.175, -88.5033, 0.15 ) }
    dend_6 { pt3dadd( -70.8581, 206.393, -88.4342, 0.29 ) }
    dend_6 { pt3dadd( -71.8123, 208.338, -87.7403, 0.22 ) }
    dend_6 { pt3dadd( -72.1175, 208.943, -87.5073, 0.37 ) }
    dend_6 { pt3dadd( -72.8686, 210.372, -86.9453, 0.22 ) }
    dend_6 { pt3dadd( -73.5076, 211.533, -86.4524, 1.33 ) }
    dend_6 { pt3dadd( -73.6387, 211.759, -86.3463, 1.62 ) }
    dend_6 { pt3dadd( -74.7095, 213.401, -85.4962, 0.22 ) }
    dend_6 { pt3dadd( -75.5012, 214.452, -84.8609, 0.22 ) }
    dend_6 { pt3dadd( -76.9282, 216.124, -83.7164, 0.22 ) }
    dend_6 { pt3dadd( -77.5405, 216.773, -83.2239, 0.96 ) }
    dend_6 { pt3dadd( -78.0396, 217.26, -82.7977, 1.18 ) }
    dend_6 { pt3dadd( -79.1469, 218.215, -81.7734, 0.22 ) }
    dend_6 { pt3dadd( -79.8993, 218.748, -81.0298, 0.22 ) }
    dend_6 { pt3dadd( -80.688, 219.231, -80.2143, 1.11 ) }
    dend_6 { pt3dadd( -80.917, 219.355, -79.9707, 1.4 ) }
    dend_6 { pt3dadd( -81.3251, 219.611, -79.5501, 1.4 ) }
    dend_6 { pt3dadd( -82.5839, 220.571, -78.2834, 0.22 ) }
    dend_6 { pt3dadd( -83.1959, 221.167, -77.6559, 0.22 ) }
    dend_6 { pt3dadd( -83.7338, 221.809, -77.1251, 0.44 ) }
    dend_6 { pt3dadd( -83.9221, 222.073, -76.9437, 0.44 ) }
    dend_6 { pt3dadd( -84.7717, 223.382, -76.1517, 0.22 ) }
    dend_6 { pt3dadd( -85.2236, 224.17, -75.7366, 0.66 ) }
    dend_6 { pt3dadd( -85.5969, 224.909, -75.4004, 0.66 ) }
    dend_6 { pt3dadd( -86.0558, 225.887, -74.9448, 0.22 ) }
    dend_6 { pt3dadd( -86.312, 226.42, -74.6722, 0.44 ) }
    dend_6 { pt3dadd( -86.5465, 226.889, -74.4158, 0.44 ) }
    dend_6 { pt3dadd( -86.9973, 227.772, -73.8988, 0.22 ) }
    dend_6 { pt3dadd( -87.1706, 228.112, -73.693, 0.37 ) }
    dend_6 { pt3dadd( -87.7943, 229.341, -72.9542, 0.22 ) }
    dend_6 { pt3dadd( -88.0729, 229.936, -72.5855, 0.52 ) }
    dend_6 { pt3dadd( -88.2055, 230.234, -72.3918, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_33 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_33 nseg = 5
    dend_32 nseg = 11
    dend_23 nseg = 3
    dend_21 nseg = 13
    dend_16 nseg = 7
    dend_28 nseg = 3
    dend_25 nseg = 3
    dend_20 nseg = 7
    dend_19 nseg = 11
    dend_15 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 9
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_12 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 9
    dend_9 nseg = 3
    dend_4 nseg = 7
    dend_11 nseg = 11
    dend_10 nseg = 11
    dend_8 nseg = 7
    dend_5 nseg = 3
    dend_7 nseg = 7
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_NBC_ee7b52323f_0_0


