// Cell: bIR215_L6_DBC_84d9723b18_0_0
/*
{
  "id" : "bIR215_L6_DBC_84d9723b18_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.20498, -9.63696, 0.0, 2.93949", "1.97921, -8.62937, 0.0, 5.10114", "1.75343, -7.62179, 0.0, 6.34149", "1.52766, -6.61421, 0.0, 7.24948", "1.30189, -5.60662, 0.0, 8.32859", "1.07612, -4.59904, 0.0, 9.63098", "0.850343, -3.59146, 0.0, 10.5761", "0.624571, -2.58388, 0.0, 11.2008", "0.398798, -1.57629, 0.0, 11.5851", "0.173026, -0.56871, 0.0, 11.8715", "-0.0527468, 0.438873, 0.0, 11.942", "-0.278519, 1.44646, 0.0, 11.923", "-0.504292, 2.45404, 0.0, 11.4797", "-0.730064, 3.46162, 0.0, 10.9001", "-0.955837, 4.4692, 0.0, 10.1322", "-1.18161, 5.47679, 0.0, 9.32117", "-1.40738, 6.48437, 0.0, 8.43955", "-1.63315, 7.49195, 0.0, 7.43264", "-1.85893, 8.49954, 0.0, 6.41765", "-2.0847, 9.50712, 0.0, 5.2256", "-2.31047, 10.5147, 0.0, 2.87927" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67666, -9.45895, 7.1, 4.35", "1.67666, -9.45895, 7.1, 4.35", "2.08525, -10.3219, 7.68651, 3.32", "2.82557, -11.667, 8.84708, 2.36", "3.61638, -13.1037, 10.0868, 2.88", "3.69142, -13.2401, 10.2044, 2.65", "4.2629, -14.2784, 11.1003, 1.62", "5.0404, -15.5866, 12.3656, 1.84", "5.81839, -16.682, 13.7268, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.96334, 10.0313, 0.0, 4.28", "-1.96334, 10.0313, 0.0, 4.28", "-2.65692, 11.3292, -0.136885, 3.32", "-3.14879, 12.2453, -0.299524, 2.88", "-3.50514, 12.9109, -0.433177, 2.88", "-4.03734, 13.905, -0.632785, 3.47", "-4.73311, 15.2045, -0.893738, 2.51", "-5.56035, 16.7252, -1.23158, 2.8", "-6.29356, 18.0279, -1.58224, 4.13", "-6.63957, 18.632, -1.77181, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.31047, 10.5147, 0.0, 0.489044", "-5.59024, 25.1517, 0.0, 0.489044", "-8.87001, 39.7888, 0.0, 0.489044" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "5.81839, -16.682, 13.7268, 1.4", "6.83065, -17.4816, 12.7612, 1.4", "8.17757, -18.5788, 11.5201, 1.4", "9.09193, -19.3236, 10.7293, 1.4", "10.2384, -20.2731, 9.8348, 1.4", "11.2405, -21.1121, 9.0936, 1.18", "12.5168, -22.171, 8.21852, 1.4", "13.0965, -22.6695, 7.85556, 1.55", "13.6679, -23.164, 7.55361, 1.7", "14.9169, -24.2324, 6.96169, 1.18", "15.8979, -25.045, 6.57706, 1.18", "16.7817, -25.7611, 6.28578, 1.84", "17.2987, -26.1803, 6.16438, 1.84" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.81839, -16.682, 13.7268, 1.18", "5.53096, -17.3405, 14.6553, 1.18", "4.88233, -18.9592, 16.872, 1.03", "4.5078, -20.1447, 18.5023, 1.03", "4.36432, -20.8123, 19.4679, 0.96", "4.32571, -21.3649, 20.3412, 0.96", "4.33866, -22.063, 21.5545, 1.11", "4.42894, -22.7293, 22.8758, 1.03", "4.56672, -23.4598, 24.4698, 1.18", "4.73009, -24.3607, 26.614, 1.84", "4.87286, -25.396, 29.304, 1.18", "4.88292, -26.1875, 31.4461, 1.18", "4.73787, -26.7644, 33.0642, 1.18", "4.27677, -27.3894, 34.8084, 1.33", "3.55214, -27.9124, 36.2274, 1.33", "2.9658, -28.2047, 36.99, 1.33", "1.91093, -28.6335, 38.1469, 1.4", "0.874614, -29.0256, 39.3499, 1.47", "-0.52533, -29.5601, 41.3127, 1.33", "-1.54512, -29.9893, 43.2142, 1.33", "-2.25087, -30.3423, 44.8763, 1.4", "-3.13913, -30.8626, 47.5771, 1.4", "-3.88552, -31.3851, 50.4512, 1.4", "-4.40166, -31.8553, 52.7854, 1.4", "-4.98845, -32.4897, 55.5248, 1.4", "-5.2957, -32.8331, 56.6721, 1.11", "-6.22011, -33.8039, 59.2213, 1.11", "-7.34349, -34.8683, 61.5086, 1.25", "-8.01229, -35.4662, 62.6225, 1.55", "-9.24744, -36.5034, 64.3395, 1.55", "-10.7536, -37.7288, 66.1662, 1.25", "-12.4798, -39.0859, 68.1245, 1.25", "-14.5491, -40.7342, 70.1586, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.63957, 18.632, -1.77181, 2.88", "-8.30144, 20.2579, -3.24683, 2.88", "-9.50514, 21.4356, -4.31519, 2.88", "-10.7129, 22.6172, -5.38715, 3.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.63957, 18.632, -1.77181, 2.06", "-6.15313, 21.3556, 0.193826, 2.06", "-5.67106, 23.8543, 1.75516, 0.96", "-5.42669, 24.9812, 2.39479, 0.96", "-5.04961, 26.6075, 3.21773, 0.81", "-4.71711, 27.911, 3.81029, 0.81", "-4.24168, 29.6503, 4.53758, 1.03", "-3.90566, 30.777, 4.85243, 1.11", "-3.49173, 32.0392, 5.09229, 1.55", "-2.9559, 33.7015, 5.35086, 1.18", "-2.47795, 35.2937, 5.55309, 0.88", "-2.23823, 36.2143, 5.65403, 0.74", "-1.91125, 37.7883, 5.79357, 1.18", "-1.61751, 39.5469, 5.9767, 0.81", "-1.32168, 41.6446, 6.21792, 0.96", "-1.06821, 43.4872, 6.42039, 1.25", "-0.842013, 45.0995, 6.59153, 1.25", "-0.581353, 46.6053, 6.75066, 0.66", "-0.21266, 48.172, 6.92279, 0.88", "0.274165, 49.5734, 7.03847, 0.52", "0.864261, 50.893, 7.10501, 0.96", "1.29105, 51.7266, 7.12072, 0.96", "2.17784, 53.3027, 7.15132, 0.74", "2.93209, 54.5464, 7.17557, 0.88", "3.87692, 56.0685, 7.20037, 0.88", "4.91232, 57.8086, 7.33516, 0.96", "5.22364, 58.3492, 7.41386, 0.96", "6.03621, 59.8337, 7.7369, 0.96", "6.38457, 60.5107, 7.9523, 1.11", "6.79678, 61.3588, 8.28601, 0.96", "7.55305, 62.8478, 9.03174, 0.81", "8.21033, 64.0825, 9.75097, 0.66", "9.06724, 65.696, 10.7274, 0.59", "9.7846, 67.0654, 11.6704, 0.88", "10.4608, 68.3594, 12.6037, 1.4", "11.4605, 70.2289, 14.0358, 0.88", "12.3153, 71.7533, 15.2862, 0.74", "12.7813, 72.5878, 16.0151, 0.74", "13.9772, 74.5621, 17.8148, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.87001, 39.7888, 0.0, 0.158836", "-12.1498, 54.4258, 0.0, 0.158836", "-15.4296, 69.0629, 0.0, 0.158836" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "17.2987, -26.1803, 6.16438, 1.7", "18.3265, -26.1907, 7.75836, 1.7", "19.1909, -26.2935, 9.15595, 1.25", "19.8524, -26.4377, 10.2598, 1.25", "20.5142, -26.6413, 11.3529, 1.55", "21.3489, -26.9566, 12.7003, 1.4", "22.1355, -27.2875, 13.9374, 1.62", "22.9145, -27.6831, 15.0874, 1.55", "23.8238, -28.1848, 16.3872, 1.4", "24.6011, -28.6259, 17.4436, 1.47", "25.7303, -29.2748, 18.8945, 1.18", "26.8122, -29.8719, 20.1784, 1.18", "28.0111, -30.496, 21.4823, 1.03", "29.0271, -30.9809, 22.4849, 1.03", "29.4624, -31.164, 22.8729, 1.25", "30.5669, -31.5662, 23.7898, 1.11", "31.5238, -31.8638, 24.6103, 1.33", "32.1272, -32.0252, 25.1313, 1.62", "33.5125, -32.3678, 26.3278, 1.33", "34.875, -32.6723, 27.5175, 1.25", "36.0407, -32.8933, 28.5668, 1.18", "38.0296, -33.1879, 30.4129, 1.47", "38.5955, -33.2587, 30.9696, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.2987, -26.1803, 6.16438, 0.88", "17.3609, -27.5265, 6.93731, 0.88", "17.2657, -29.5351, 8.16123, 0.74", "17.0386, -31.6076, 9.51013, 0.74", "16.812, -33.2273, 10.5387, 0.74", "16.5252, -34.9638, 11.5922, 0.96", "16.2053, -36.6944, 12.5843, 1.7", "15.5693, -39.2872, 14.0251, 0.66", "15.0329, -41.0892, 14.8983, 0.74", "14.6094, -42.446, 15.3555, 0.88", "14.2257, -43.6861, 15.5585, 1.11", "13.8024, -45.1808, 15.5532, 1.33", "13.3126, -47.1935, 15.2881, 0.74", "12.9662, -49.0645, 14.8642, 0.74", "12.792, -50.3751, 14.4725, 0.59", "12.5813, -52.6736, 13.7399, 0.88", "12.4779, -54.6673, 13.0988, 0.59", "12.4512, -55.7181, 12.7514, 0.59", "12.4603, -57.6305, 12.1383, 0.81", "12.5082, -60.0805, 11.452, 0.74", "12.5471, -61.31, 11.1129, 0.59", "12.629, -62.9137, 10.733, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-14.5491, -40.7342, 70.1586, 0.52", "-15.6823, -40.3451, 73.7875, 0.52", "-16.177, -40.1194, 75.5886, 0.52", "-16.5455, -39.9232, 77.0082, 0.52", "-16.8299, -39.7687, 78.1758, 0.52", "-17.2765, -39.5141, 79.9371, 0.52", "-17.6077, -39.3223, 81.1824, 0.52", "-17.9414, -39.1025, 82.3188, 0.52", "-18.4831, -38.739, 84.0438, 0.52", "-19.2347, -38.2356, 86.1671, 0.52", "-19.8163, -37.8571, 87.5951, 0.81", "-20.4183, -37.4477, 88.8701, 0.81", "-20.9259, -37.058, 89.866, 0.59", "-21.9809, -36.1436, 91.8991, 0.59", "-22.7304, -35.3571, 93.4085, 0.52", "-23.348, -34.5804, 94.6862, 0.37", "-24.1009, -33.4469, 96.4366, 0.44", "-24.7681, -32.2341, 98.1352, 0.29", "-25.2457, -31.1875, 99.5429, 0.29", "-25.7635, -29.8395, 101.162, 0.29", "-26.1478, -28.7295, 102.449, 0.29", "-26.6865, -27.0647, 104.311, 0.29", "-26.9592, -26.1902, 105.281, 0.29", "-27.548, -24.3355, 107.331, 0.29", "-27.9379, -23.1164, 108.654, 0.22", "-28.5932, -21.1467, 110.815, 0.22", "-28.8907, -20.2635, 111.814, 0.22", "-29.4317, -18.7453, 113.514, 0.22", "-30.0894, -17.0265, 115.548, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-14.5491, -40.7342, 70.1586, 1.03", "-14.582, -41.4901, 70.1425, 1.03", "-14.6435, -42.5515, 70.247, 0.74", "-14.7046, -43.8047, 70.4301, 0.74", "-14.7416, -44.8049, 70.5906, 0.88", "-14.7649, -46.1518, 70.7623, 0.96", "-14.7643, -46.8421, 70.8334, 0.96", "-14.712, -48.712, 71.0025, 1.03", "-14.6523, -49.9612, 71.0999, 0.66", "-14.5797, -50.9616, 71.1738, 0.52", "-14.4375, -52.2327, 71.2544, 0.66", "-14.2664, -53.2941, 71.3011, 0.96", "-14.0787, -54.419, 71.3136, 1.11", "-13.9987, -54.8547, 71.2994, 1.11", "-13.7727, -55.9768, 71.2918, 0.66", "-13.6302, -56.6557, 71.3043, 0.66", "-13.4255, -57.6113, 71.3443, 0.66", "-13.1875, -58.7598, 71.4422, 0.88", "-12.9407, -60.0358, 71.6146, 0.81", "-12.689, -61.4994, 71.9108, 0.74", "-12.4942, -62.8286, 72.2452, 0.66", "-12.3399, -64.0992, 72.6319, 0.52", "-12.1626, -65.7876, 73.2066, 0.52", "-12.0708, -66.7651, 73.5902, 0.52", "-12.0012, -68.1032, 74.143, 0.52", "-11.9775, -68.9899, 74.509, 0.66", "-11.9547, -69.9666, 74.8945, 0.96", "-11.9083, -71.3542, 75.3943, 1.03", "-11.8236, -72.8166, 75.8053, 0.74", "-11.7134, -74.1737, 76.1084, 0.44", "-11.6221, -75.0369, 76.2601, 0.22", "-11.5731, -75.4254, 76.3214, 0.22", "-11.4224, -76.3938, 76.445, 0.52", "-11.1881, -77.5622, 76.5107, 0.52", "-10.8289, -78.9676, 76.4825, 0.22", "-10.6136, -79.6979, 76.4822, 0.22", "-10.3172, -80.6769, 76.5306, 0.66", "-9.88225, -82.0572, 76.6479, 0.66", "-9.43137, -83.3969, 76.7995, 0.37", "-9.06721, -84.4216, 76.9914, 0.22", "-8.47444, -86.1089, 77.4029, 0.29", "-8.09905, -87.2153, 77.5941, 0.29", "-7.9151, -87.7771, 77.6558, 0.66", "-7.62611, -88.6644, 77.6927, 0.96", "-7.16683, -90.092, 77.6648, 0.96", "-6.7514, -91.3408, 77.5184, 0.37", "-5.90717, -93.8714, 77.02, 0.44", "-5.67681, -94.6117, 76.863, 0.44", "-5.26931, -96.0622, 76.6107, 0.52", "-4.91156, -97.4583, 76.4202, 0.44", "-4.67381, -98.4627, 76.3302, 0.44", "-4.34925, -99.9418, 76.3147, 0.44", "-4.02141, -101.598, 76.4916, 0.44", "-3.78427, -102.933, 76.6789, 0.44", "-3.63568, -103.917, 76.8437, 0.44", "-3.50236, -104.854, 77.0156, 0.44", "-3.39698, -105.868, 77.2142, 0.52", "-3.31592, -107.112, 77.4571, 0.52", "-3.28755, -107.861, 77.591, 0.52", "-3.2728, -109.543, 77.828, 0.22", "-3.26213, -110.917, 77.9818, 0.22", "-3.25002, -112.151, 78.0841, 0.22", "-3.23409, -113.436, 78.1531, 0.29", "-3.18948, -114.632, 78.1482, 0.29", "-3.10605, -116.021, 78.2149, 0.29", "-2.95389, -117.776, 78.3771, 0.22", "-2.87567, -118.467, 78.4643, 0.29", "-2.68672, -119.763, 78.6573, 0.37", "-2.43747, -121.281, 78.9175, 0.37", "-2.00994, -123.807, 79.3122, 0.22", "-1.86642, -124.608, 79.4236, 0.22", "-1.70482, -125.536, 79.5283, 0.37", "-1.5255, -126.584, 79.6079, 0.37", "-1.21947, -128.382, 79.7071, 0.29", "-1.02565, -129.583, 79.7453, 0.22", "-0.869272, -130.548, 79.7202, 0.22", "-0.715098, -131.603, 79.7596, 0.29", "-0.545312, -132.98, 79.8932, 0.29", "-0.440057, -134.154, 80.1382, 0.29", "-0.386382, -135.023, 80.3693, 0.29", "-0.308488, -136.64, 80.9014, 0.15", "-0.259853, -138.213, 81.4867, 0.15", "-0.242871, -138.941, 81.7974, 0.37", "-0.200389, -140.875, 82.7532, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.7129, 22.6172, -5.38715, 2.8", "-12.1453, 22.8172, -6.24143, 2.8" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.7129, 22.6172, -5.38715, 1.77", "-10.8141, 24.1371, -7.08815, 1.77", "-11.0663, 26.197, -9.47638, 1.4", "-11.3102, 27.8098, -11.3492, 1.4", "-11.4914, 28.8423, -12.5733, 1.7", "-11.7733, 30.1895, -14.2117, 1.84", "-12.1305, 31.7681, -16.1413, 1.84", "-12.5392, 33.2214, -17.985, 1.4", "-12.9848, 34.7681, -19.9004, 1.84", "-13.4917, 36.6073, -22.0272, 1.62", "-14.0784, 38.8484, -24.4135, 1.77", "-14.4092, 40.1244, -25.5898, 1.77", "-14.9771, 42.1862, -27.2693, 1.62", "-15.3668, 43.5023, -28.2174, 1.62", "-16.0795, 45.6758, -29.6291, 1.47", "-16.6079, 47.1632, -30.4895, 1.47", "-17.6359, 49.9153, -31.995, 1.4", "-18.4413, 52.0123, -33.1625, 1.47", "-19.1742, 53.9485, -34.3153, 1.55", "-19.5687, 55.0691, -35.0809, 1.55", "-20.1604, 57.085, -36.6195, 1.25", "-20.5671, 59.0541, -38.2254, 1.25", "-20.7187, 60.6399, -39.5513, 1.4", "-20.722, 62.3146, -40.9079, 1.25", "-20.5686, 64.3071, -42.3905, 1.25", "-20.4115, 65.7447, -43.3095, 1.25", "-20.2119, 67.4663, -44.3369, 1.47", "-20.1356, 68.4718, -44.8642, 1.62", "-20.136, 69.7518, -45.4287, 1.33", "-20.3763, 72.5574, -46.4215, 1.11", "-20.6979, 74.2672, -46.9768, 1.11", "-21.1883, 76.2855, -47.6451, 1.25", "-21.5292, 77.414, -48.0388, 1.47", "-22.1469, 79.1755, -48.6777, 1.4", "-22.8154, 80.7969, -49.2858, 1.25", "-23.9736, 83.0072, -50.0777, 1.47" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.9772, 74.5621, 17.8148, 0.15", "13.8196, 74.3309, 22.3642, 0.15", "13.7557, 74.2941, 24.5213, 0.15", "13.7215, 74.3484, 25.8479, 0.29", "13.6859, 74.7278, 29.3184, 0.22", "13.7038, 75.2031, 32.2254, 0.22", "13.7435, 75.7405, 34.5985, 0.37", "13.7655, 75.8733, 35.0538, 0.81", "13.8522, 76.4627, 36.3307, 0.15", "14.0042, 77.469, 37.8964, 0.22", "14.079, 77.9067, 38.4415, 0.59", "14.2339, 78.7216, 39.4588, 1.03", "14.452, 80.1586, 41.4541, 0.15", "14.5046, 80.6528, 42.3255, 0.29", "14.5492, 81.5934, 44.6104, 0.22", "14.4965, 82.4608, 47.3276, 0.37", "14.4257, 82.8808, 49.0252, 0.37", "14.356, 83.1198, 50.4777, 0.44", "14.1905, 83.3894, 53.0872, 0.37", "14.0021, 83.5991, 55.7603, 0.37", "13.8405, 83.6955, 57.4717, 0.37", "13.5995, 83.7838, 59.6551, 0.37", "13.2773, 83.9038, 63.0209, 0.37", "13.0498, 84.0478, 66.6893, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "13.9772, 74.5621, 17.8148, 0.96", "15.124, 76.5004, 16.9717, 0.96", "15.5223, 77.1581, 16.7395, 0.88", "16.2523, 78.3218, 16.3928, 0.74", "17.0818, 79.6303, 16.0745, 0.96", "17.831, 80.8309, 15.7762, 0.81", "18.4907, 81.9138, 15.5011, 0.44", "19.1118, 83.0163, 15.2825, 0.44", "19.548, 83.8802, 15.0828, 0.66", "20.2121, 85.3437, 14.7132, 0.52", "20.7179, 86.5776, 14.3682, 0.74", "21.1172, 87.6403, 14.0182, 1.11", "21.4572, 88.6779, 13.6647, 0.66", "21.924, 90.218, 13.153, 0.66", "22.2295, 91.247, 12.8309, 0.66", "22.6423, 92.5561, 12.4837, 0.81", "22.9684, 93.4846, 12.31, 0.59", "23.4992, 94.8729, 12.075, 0.52", "23.8947, 95.8849, 11.9171, 0.52", "24.1422, 96.498, 11.8389, 0.52", "24.6266, 97.7106, 11.7326, 0.66", "25.0548, 98.7441, 11.6946, 0.88", "25.6406, 100.035, 11.671, 1.03", "26.2967, 101.346, 11.6717, 0.52", "26.8639, 102.445, 11.7007, 0.29", "27.4151, 103.461, 11.7562, 0.29", "28.071, 104.635, 11.9294, 0.52", "28.7674, 105.819, 12.2216, 0.22", "29.1471, 106.444, 12.4333, 0.15", "29.5978, 107.214, 12.7125, 0.66", "30.0935, 108.229, 13.1133, 0.29", "30.5863, 109.556, 13.721, 0.52", "30.7759, 110.224, 14.0716, 1.03", "31.0304, 111.229, 14.6432, 0.37", "31.2669, 112.108, 15.095, 0.44", "31.7184, 113.651, 15.7248, 0.59", "32.1731, 115.226, 16.1707, 0.88", "32.4386, 116.164, 16.3142, 0.88", "32.6724, 117.008, 16.3829, 0.66", "33.209, 118.852, 16.316, 0.29", "33.6378, 120.233, 16.0921, 0.66", "33.9843, 121.312, 15.7924, 0.44", "34.1987, 122.032, 15.5605, 0.44", "34.4991, 123.198, 15.2225, 0.22", "34.772, 124.402, 14.9525, 0.22", "34.9748, 125.296, 14.8922, 0.66", "35.1541, 126.006, 14.9242, 0.88", "35.4918, 127.203, 15.0766, 0.52", "35.7827, 128.145, 15.3216, 0.52", "36.184, 129.384, 15.8329, 0.52", "36.7574, 131.116, 16.7553, 0.52", "37.0651, 131.987, 17.2911, 0.96", "37.5003, 133.092, 18.0402, 0.66", "38.0972, 134.404, 18.9769, 0.22", "38.4308, 135.077, 19.4553, 0.22", "38.8117, 135.815, 19.9279, 0.29", "39.354, 136.832, 20.4355, 0.37", "40.0721, 138.066, 20.8788, 0.52", "40.6478, 138.939, 21.0637, 0.81", "41.1595, 139.661, 21.0754, 0.81", "42.0918, 140.928, 20.9144, 0.22", "42.7407, 141.781, 20.7947, 0.59", "43.6923, 143.023, 20.5936, 0.59", "44.4763, 144.047, 20.4313, 0.22", "45.4681, 145.392, 20.2837, 0.15", "46.1665, 146.433, 20.2374, 0.15", "47.3073, 148.334, 20.4754, 0.59", "47.6827, 149.04, 20.679, 0.59", "48.1249, 149.985, 21.0642, 0.59", "48.4951, 150.856, 21.4584, 0.29", "48.9055, 151.848, 21.9345, 0.22", "49.6874, 153.677, 22.7131, 0.22", "49.9304, 154.228, 22.8716, 0.22", "50.3823, 155.196, 23.1019, 0.52", "50.9207, 156.308, 23.3055, 0.59", "51.2608, 157.0, 23.3879, 0.59", "51.9107, 158.284, 23.508, 0.29", "52.3438, 159.186, 23.5579, 0.29", "52.8652, 160.4, 23.6667, 0.37", "53.1559, 161.2, 23.7688, 0.29", "53.4263, 162.151, 23.9957, 0.44", "53.7923, 163.72, 24.4811, 0.44", "54.0235, 164.833, 24.8627, 0.66", "54.2399, 165.866, 25.2367, 0.88", "54.5234, 167.233, 25.7192, 0.66", "55.147, 169.796, 26.565, 0.37", "55.5262, 171.065, 26.991, 0.22", "55.9118, 172.219, 27.3201, 0.52", "56.2114, 172.971, 27.5008, 0.59", "56.6935, 174.019, 27.6603, 0.29", "57.2183, 175.054, 27.7844, 0.22", "58.1869, 176.921, 27.9644, 0.15", "58.9212, 178.386, 28.201, 0.37", "59.3558, 179.317, 28.4032, 0.37", "59.7912, 180.36, 28.6533, 0.37", "60.6696, 182.589, 29.202, 0.81", "61.1026, 183.76, 29.5015, 0.96", "61.4321, 184.687, 29.7278, 0.52", "61.8093, 185.789, 30.0649, 0.22", "62.2498, 187.215, 30.5156, 0.29", "62.6766, 188.665, 30.9388, 0.22", "63.0209, 189.86, 31.2165, 0.74", "63.5238, 191.605, 31.6212, 0.29", "64.0789, 193.515, 32.1349, 0.52", "64.3874, 194.538, 32.4455, 0.59", "64.7406, 195.719, 32.8341, 0.29", "64.9666, 196.583, 33.094, 0.29", "65.2209, 197.64, 33.4264, 0.29", "65.4769, 198.685, 33.8335, 0.66", "65.682, 199.442, 34.1694, 0.96", "65.9306, 200.288, 34.6723, 0.37", "66.29, 201.521, 35.5303, 0.29", "66.655, 203.019, 36.6284, 0.37", "66.9252, 204.381, 37.6464, 0.66", "67.0641, 205.194, 38.2381, 0.44", "67.3105, 206.691, 39.2868, 0.88", "67.4624, 207.616, 39.8991, 1.11", "67.7202, 209.372, 40.9698, 0.22", "67.8188, 210.248, 41.3641, 0.22", "67.891, 211.148, 41.6751, 0.15", "67.9243, 212.19, 41.967, 0.15", "67.9256, 212.954, 42.1349, 0.15", "67.9109, 214.177, 42.4186, 0.37", "67.9107, 215.405, 42.7092, 0.37", "67.9078, 216.16, 42.9004, 0.22", "67.9092, 217.273, 43.1898, 0.44", "67.9164, 217.876, 43.3412, 0.44", "67.9495, 218.737, 43.5407, 0.44", "68.0121, 219.499, 43.6711, 0.66", "68.1388, 220.342, 43.8227, 0.37", "68.3515, 221.301, 43.9903, 0.37", "68.6663, 222.329, 44.1568, 0.22", "68.8239, 222.778, 44.2195, 0.22", "69.2456, 223.939, 44.3645, 0.22", "69.8017, 225.459, 44.4784, 0.52", "70.1213, 226.347, 44.5103, 0.96", "70.3436, 227.003, 44.5124, 0.96", "70.7573, 228.313, 44.4806, 0.22", "71.046, 229.371, 44.4221, 0.29", "71.3377, 230.7, 44.2754, 0.29", "71.4697, 231.483, 44.1373, 0.81", "71.5709, 232.173, 44.0049, 0.52", "71.708, 233.297, 43.7598, 0.37", "71.7742, 234.082, 43.5052, 0.37", "71.8299, 235.089, 43.1275, 0.74", "71.8609, 235.853, 42.8359, 0.74", "71.899, 236.804, 42.4401, 0.29", "71.9322, 237.742, 42.0419, 0.37", "72.0036, 239.82, 41.1925, 0.37", "72.0497, 240.826, 40.7817, 0.52", "72.1151, 241.609, 40.4903, 0.52", "72.2261, 242.226, 40.2569, 0.52", "72.4929, 243.106, 40.0051, 0.59", "72.8417, 243.968, 39.8469, 0.22", "73.5352, 245.345, 39.7863, 0.44", "74.203, 246.456, 39.7974, 0.52", "75.395, 248.171, 39.989, 0.29", "76.6021, 249.631, 40.3943, 0.44", "77.3792, 250.438, 40.8144, 0.44", "78.4188, 251.407, 41.6518, 0.44", "79.115, 252.041, 42.372, 0.44", "79.9072, 252.796, 43.3963, 0.44", "80.7806, 253.693, 44.7455, 0.22", "81.5093, 254.509, 45.9854, 0.74", "82.2527, 255.48, 47.4136, 0.74", "82.6689, 256.198, 48.3468, 0.59", "83.1163, 257.246, 49.5647, 0.22", "83.2572, 257.698, 50.0053, 0.15", "83.4308, 258.603, 50.7167, 0.29", "83.5524, 259.686, 51.4056, 0.29", "83.604, 260.78, 51.9775, 0.29", "83.6058, 261.417, 52.2983, 0.52", "83.5856, 262.135, 52.6139, 0.88", "83.5095, 263.379, 53.1244, 0.52", "83.4285, 264.232, 53.3507, 0.52", "83.3062, 265.151, 53.4775, 0.22", "83.1274, 266.167, 53.5826, 0.22", "82.997, 266.845, 53.6466, 0.52", "82.8873, 267.386, 53.6893, 0.81", "82.4401, 269.542, 53.8125, 0.22", "82.1962, 270.595, 53.8641, 0.22", "81.7239, 272.479, 53.9525, 0.22", "81.6259, 272.855, 53.95, 0.37", "81.4509, 273.566, 53.9453, 0.96", "81.3889, 273.848, 53.9485, 0.96", "81.1682, 275.022, 54.0056, 0.22", "81.1213, 275.342, 54.0124, 0.22", "80.9942, 276.543, 53.9984, 0.37", "80.9476, 277.307, 54.054, 0.88", "80.9274, 278.855, 54.2635, 0.22", "80.9565, 279.55, 54.3912, 0.37", "81.0869, 280.996, 54.7461, 0.66", "81.2083, 282.108, 55.1242, 0.22", "81.3628, 283.357, 55.664, 0.66", "81.4477, 284.008, 55.9907, 0.66", "81.5872, 284.982, 56.5937, 0.44", "81.6497, 285.47, 56.9644, 0.59", "81.7778, 286.543, 57.9222, 0.15", "81.8235, 286.969, 58.3946, 0.37", "81.8578, 287.334, 58.85, 0.37", "81.9125, 288.113, 59.9183, 0.15", "81.9453, 288.691, 60.7487, 0.15", "81.9786, 289.02, 61.1577, 0.29", "82.094, 289.717, 61.925, 0.29", "82.2821, 290.712, 62.856, 0.22", "82.4392, 291.59, 63.5067, 0.66", "82.4697, 291.801, 63.6319, 0.66", "82.57, 293.115, 64.4176, 0.15", "82.5674, 294.126, 65.0367, 0.15", "82.4862, 294.901, 65.5642, 0.37", "82.4044, 295.406, 65.993, 0.37", "82.2361, 296.237, 66.7129, 0.22", "81.9218, 297.551, 67.8285, 0.22", "81.7592, 298.218, 68.3679, 0.37", "81.343, 300.032, 69.6471, 0.15", "80.9762, 301.738, 70.643, 0.15", "80.5845, 303.87, 71.6406, 0.15", "80.4095, 305.068, 72.0623, 0.15", "80.2504, 306.836, 72.4987, 0.15", "80.2716, 308.295, 72.7437, 0.15", "80.6024, 310.486, 72.8838, 0.15", "80.9384, 311.588, 72.8436, 0.15", "81.3747, 312.457, 72.7649, 0.15", "82.0278, 313.374, 72.6376, 0.37", "83.7419, 315.161, 72.3011, 0.15", "84.7831, 316.01, 72.123, 0.15", "86.0702, 316.864, 71.9909, 0.15", "86.5507, 317.161, 71.9546, 0.59", "87.525, 317.73, 71.9538, 0.29", "88.2868, 318.176, 72.0397, 0.15", "88.6911, 318.443, 72.1528, 0.29", "89.647, 319.183, 72.5588, 0.88", "90.2323, 319.729, 72.9674, 0.22", "91.0128, 320.679, 73.809, 0.22", "91.3132, 321.162, 74.34, 0.22", "91.7744, 322.041, 75.4621, 0.29", "92.0415, 322.641, 76.3071, 0.15", "92.4885, 323.839, 78.106, 0.66", "92.8352, 324.973, 79.8809, 0.37", "93.1248, 326.219, 81.9281, 0.15", "93.2507, 327.052, 83.2673, 0.15", "93.2856, 327.783, 84.3767, 0.15", "93.2684, 328.121, 84.8009, 0.15", "93.1741, 328.832, 85.4385, 0.52", "92.9833, 329.929, 86.0368, 0.52", "92.5852, 331.966, 86.6402, 0.15", "92.2472, 333.703, 86.9407, 0.15", "92.0026, 335.253, 87.0649, 0.15", "91.7248, 337.507, 87.1209, 0.15", "91.4776, 340.38, 87.0571, 0.15", "91.4003, 342.395, 86.92, 0.15", "91.4139, 343.401, 86.819, 0.22", "91.5264, 345.401, 86.5681, 0.07", "91.5807, 346.056, 86.4761, 0.07", "91.7109, 347.366, 86.2592, 0.22", "91.9227, 349.299, 85.9883, 0.07", "92.0032, 349.992, 85.8515, 0.07", "92.0629, 350.515, 85.7192, 0.22", "92.1569, 351.234, 85.4989, 0.59", "92.4867, 353.057, 84.7929, 0.07", "92.7882, 354.265, 84.2417, 0.07", "92.9422, 354.756, 83.999, 0.29", "93.1515, 355.345, 83.6961, 0.29", "93.5978, 356.591, 83.0737, 0.07", "94.0776, 358.02, 82.4515, 0.07", "94.2615, 358.678, 82.2258, 0.07", "94.3383, 359.139, 82.0755, 0.29", "94.3726, 359.745, 81.9307, 0.29", "94.368, 361.422, 81.6054, 0.15", "94.2202, 362.924, 81.3837, 0.15", "94.0356, 363.959, 81.2926, 0.29", "93.6339, 365.717, 81.1441, 0.22", "93.1552, 367.559, 81.0152, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "38.5955, -33.2587, 30.9696, 0.88", "38.7384, -32.4483, 31.0178, 0.88", "38.8041, -31.8953, 31.0917, 0.74", "38.8675, -31.1072, 31.2188, 0.81", "38.9152, -30.2324, 31.3697, 0.88", "38.9458, -29.4241, 31.5121, 1.4", "38.955, -28.646, 31.6779, 0.96", "38.8915, -27.6848, 31.922, 0.88", "38.8256, -27.1311, 32.0788, 0.81", "38.7667, -26.7848, 32.1485, 0.81", "38.6443, -26.2696, 32.1948, 0.81", "38.3637, -25.3214, 32.1714, 1.18", "38.1132, -24.5933, 32.1012, 1.18", "37.8148, -23.7602, 31.9792, 1.18", "37.1662, -21.879, 31.762, 0.96", "36.7532, -20.5536, 31.6519, 0.59", "36.5146, -19.656, 31.636, 0.59", "36.3537, -18.8906, 31.6912, 0.74", "36.2321, -18.105, 31.8507, 1.11", "36.0893, -16.8764, 32.3121, 1.4", "36.0253, -15.9114, 32.8176, 1.4", "35.9831, -14.8026, 33.4488, 1.18", "35.9502, -13.9809, 33.8966, 1.47", "35.91, -13.3643, 34.169, 1.11", "35.7765, -12.2301, 34.4693, 0.74", "35.6596, -11.5162, 34.5041, 1.03", "35.5325, -10.875, 34.4213, 1.11", "35.3089, -9.90985, 34.1222, 0.88", "35.057, -8.96739, 33.6988, 0.88", "34.7931, -8.13976, 33.251, 0.74", "34.5975, -7.59438, 32.9044, 0.66", "34.3408, -6.94269, 32.4857, 0.59", "34.0586, -6.20337, 32.0236, 0.81", "33.7694, -5.44054, 31.615, 0.88", "33.4135, -4.43752, 31.1796, 0.81", "33.1392, -3.59157, 30.8737, 0.81", "32.9035, -2.69127, 30.603, 0.81", "32.7237, -1.69003, 30.3669, 0.66", "32.6304, -0.799919, 30.2174, 0.88", "32.5936, -0.00793835, 30.1061, 1.18", "32.5894, 0.511686, 30.0411, 1.18", "32.6059, 1.56262, 29.9256, 0.81", "32.6558, 2.69174, 29.8045, 0.96", "32.6993, 3.6175, 29.6843, 0.96", "32.7488, 4.42521, 29.5386, 1.11", "32.7976, 5.07593, 29.4145, 1.11", "32.8565, 5.76762, 29.2887, 0.88", "32.9407, 6.66887, 29.1744, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "38.5955, -33.2587, 30.9696, 0.88", "40.0507, -35.4183, 33.9222, 0.88", "40.5863, -36.1318, 34.7906, 0.66", "41.4189, -37.2918, 36.1764, 0.74", "41.7118, -37.7724, 36.7317, 1.03", "41.9611, -38.278, 37.2575, 0.74", "42.2757, -39.0664, 38.0225, 0.96", "42.6966, -40.5769, 39.1904, 1.03", "43.0071, -42.285, 40.5123, 0.74", "43.2024, -43.8595, 41.711, 1.03", "43.3122, -45.1779, 42.7575, 0.88", "43.3838, -46.5095, 43.8764, 0.81", "43.3963, -47.5321, 44.7422, 0.66", "43.38, -48.8357, 45.8056, 0.66", "43.3943, -50.3817, 46.9843, 0.88", "43.4829, -52.047, 48.2561, 1.11", "43.663, -53.8001, 49.6257, 0.96", "43.9124, -55.4932, 50.8963, 0.96", "44.1366, -56.6438, 51.7067, 0.96", "44.5553, -58.4268, 52.8909, 1.03", "44.9888, -60.1711, 53.9804, 0.81", "45.2895, -61.227, 54.5923, 0.81", "45.5974, -62.1339, 55.0731, 0.66", "46.1004, -63.248, 55.6898, 0.88", "46.9046, -64.7334, 56.5886, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.629, -62.9137, 10.733, 0.29", "12.3924, -64.0106, 11.2037, 0.29", "12.1711, -65.2853, 11.7132, 0.29", "12.0605, -66.1273, 12.0663, 0.81", "11.9283, -67.4934, 12.6348, 0.59", "11.8394, -68.9134, 13.2714, 0.44", "11.8134, -70.089, 13.85, 0.22", "11.8602, -70.9578, 14.3042, 0.22", "12.0046, -72.0553, 14.923, 0.22", "12.1114, -72.7327, 15.361, 0.74", "12.3111, -73.971, 16.2349, 0.74", "12.4906, -75.0986, 17.0707, 0.96", "12.5747, -75.745, 17.5291, 1.11", "12.7146, -77.2114, 18.5056, 0.37", "12.821, -78.4957, 19.2353, 0.22", "12.8882, -79.2854, 19.5981, 0.66", "12.9627, -80.1943, 19.8769, 0.66", "13.0383, -81.0417, 20.0411, 0.66", "13.1287, -81.9063, 20.1621, 0.29", "13.2841, -82.9899, 20.2482, 0.22", "13.5375, -84.2754, 20.3573, 0.66", "13.8219, -85.5603, 20.5702, 0.88", "14.0262, -86.4925, 20.7976, 0.37", "14.2875, -87.799, 21.1929, 0.22", "14.4209, -88.5915, 21.4927, 0.59", "14.5544, -89.585, 21.9257, 0.74", "14.7645, -91.347, 22.7657, 0.15", "14.8375, -92.0156, 23.0901, 0.15", "14.918, -92.8945, 23.4806, 0.37", "15.0521, -94.5267, 24.0852, 0.22", "15.1014, -95.0458, 24.2411, 0.66", "15.1766, -95.6726, 24.3925, 1.11", "15.3179, -96.5953, 24.5622, 0.37", "15.5712, -97.8941, 24.7883, 0.15", "15.7622, -98.7319, 24.9641, 0.44", "16.1328, -100.229, 25.3456, 0.15", "16.441, -101.46, 25.7234, 0.15", "16.6171, -102.189, 25.9926, 0.81", "16.754, -102.781, 26.228, 1.18", "17.1415, -104.726, 27.0735, 0.15", "17.3192, -105.824, 27.5593, 0.15", "17.378, -106.396, 27.8193, 0.81", "17.4305, -107.313, 28.3005, 0.81", "17.4561, -108.213, 28.8275, 0.22", "17.4656, -109.498, 29.6611, 0.15", "17.4622, -109.941, 29.9548, 0.22", "17.4569, -111.071, 30.7388, 0.15", "17.4679, -112.729, 32.0355, 0.15", "17.4767, -113.264, 32.4767, 0.59", "17.5022, -114.613, 33.63, 0.15", "17.5173, -115.233, 34.1358, 0.15", "17.5439, -116.038, 34.7353, 0.81", "17.6489, -117.85, 35.8481, 0.15", "17.7147, -118.717, 36.2685, 0.15", "17.7639, -119.303, 36.5101, 0.52", "17.8407, -120.125, 36.7666, 0.66", "17.9219, -121.133, 37.0078, 0.29", "17.9871, -122.345, 37.1724, 0.15", "17.997, -122.939, 37.1944, 0.15", "17.9862, -123.573, 37.2124, 0.59", "17.9444, -124.363, 37.1919, 0.88", "17.8507, -125.337, 37.1211, 0.29", "17.7281, -126.173, 37.0233, 0.22", "17.5339, -127.34, 36.8497, 0.07", "17.4263, -128.106, 36.6876, 0.07", "17.2773, -129.429, 36.3579, 0.07", "17.2583, -129.736, 36.2749, 0.29", "17.2622, -130.597, 36.0557, 0.66", "17.3163, -131.69, 35.8067, 0.15", "17.3992, -132.942, 35.578, 0.15", "17.4574, -133.805, 35.4284, 0.29", "17.5149, -134.842, 35.2837, 0.15", "17.5489, -135.747, 35.1511, 0.37", "17.5579, -136.365, 35.0378, 0.37", "17.5345, -137.536, 34.7989, 0.22", "17.4877, -138.526, 34.6002, 0.44", "17.4261, -139.524, 34.3126, 0.96", "17.3819, -140.192, 34.0609, 0.22", "17.3051, -141.559, 33.458, 0.15", "17.2955, -141.841, 33.3297, 0.15", "17.2951, -142.972, 32.7654, 0.29", "17.3231, -144.259, 32.0679, 0.15", "17.3569, -144.937, 31.6603, 0.15", "17.372, -145.218, 31.4878, 0.37", "17.4103, -145.966, 31.0508, 0.88", "17.5083, -147.551, 30.1858, 0.15", "17.5569, -148.374, 29.7846, 0.15", "17.5928, -149.195, 29.4708, 0.15", "17.5993, -149.955, 29.2368, 0.66", "17.582, -150.81, 29.043, 0.22", "17.5414, -151.636, 28.9209, 0.22", "17.4807, -152.384, 28.8803, 0.15", "17.4281, -152.929, 28.8685, 0.15", "17.3134, -153.957, 28.8437, 0.66", "17.0954, -155.6, 28.8025, 0.15", "17.0094, -156.177, 28.7883, 0.15", "16.933, -156.666, 28.7765, 0.22", "16.8348, -157.366, 28.76, 0.15", "16.7418, -158.078, 28.7443, 0.96", "16.5963, -159.183, 28.7234, 0.44", "16.443, -160.355, 28.707, 0.15", "16.3598, -161.056, 28.6731, 0.15", "16.2882, -161.674, 28.5886, 0.15", "16.2036, -162.372, 28.4423, 0.15", "16.0912, -163.179, 28.2319, 0.44", "15.9324, -164.154, 27.9492, 0.44", "15.6878, -165.449, 27.6238, 0.15", "15.3703, -167.112, 27.2806, 0.15", "15.223, -167.902, 27.146, 0.44", "15.0244, -169.039, 26.9959, 0.22", "14.8502, -170.272, 26.9476, 0.22", "14.6255, -172.111, 27.0393, 0.07", "14.4975, -173.351, 27.2225, 0.07", "14.4584, -173.808, 27.3199, 0.29", "14.3959, -174.647, 27.5127, 0.96", "14.2564, -176.904, 28.1118, 0.15", "14.1981, -177.749, 28.3535, 0.15", "14.1176, -178.503, 28.524, 0.15", "13.9722, -179.535, 28.7644, 0.37", "13.8759, -180.114, 28.9023, 0.37", "13.6028, -181.459, 29.2079, 0.15", "13.408, -182.221, 29.3814, 0.74", "12.9083, -183.939, 29.9721, 0.15", "12.5075, -185.083, 30.4803, 0.15", "12.2418, -185.702, 30.8644, 0.59", "11.9377, -186.309, 31.3446, 0.22", "11.36, -187.315, 32.2626, 0.15", "10.6272, -188.446, 33.4783, 0.15", "10.2445, -188.964, 34.1227, 0.52", "9.39838, -189.931, 35.4061, 0.15", "8.81828, -190.503, 36.3088, 0.15", "8.57494, -190.723, 36.7001, 0.44", "8.11814, -191.108, 37.421, 0.81", "7.69768, -191.47, 38.0568, 0.81", "6.72028, -192.39, 39.6042, 0.15", "5.74407, -193.387, 41.1373, 0.15", "5.45412, -193.734, 41.6118, 0.15", "5.23078, -194.061, 42.0314, 0.66", "4.7943, -194.881, 42.9425, 0.22", "4.34296, -196.013, 44.153, 0.15", "4.2449, -196.338, 44.5226, 0.22", "3.99472, -197.261, 45.6381, 0.15", "3.78686, -198.017, 46.6215, 0.44", "3.6282, -198.601, 47.4081, 0.88", "3.04859, -200.39, 49.8958, 0.15", "2.46464, -201.797, 51.8499, 0.15", "2.09375, -202.555, 52.8993, 0.15", "1.76803, -203.111, 53.655, 0.37", "1.45219, -203.581, 54.2618, 0.37", "0.619438, -204.672, 55.6597, 0.07", "-0.0391841, -205.454, 56.4991, 0.07", "-0.401374, -205.873, 56.895, 0.15", "-1.22481, -206.806, 57.7643, 0.07", "-1.6904, -207.326, 58.258, 0.29", "-2.32724, -208.037, 58.9401, 0.29", "-3.07994, -208.963, 59.7839, 0.15", "-3.4352, -209.433, 60.2041, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.629, -62.9137, 10.733, 0.22", "14.4471, -63.426, 6.61532, 0.22", "14.953, -63.6046, 5.58294, 0.22", "15.3887, -63.7918, 4.70003, 0.52", "15.7456, -63.9708, 3.95579, 0.88", "16.3052, -64.3059, 2.72447, 0.96", "16.8452, -64.6998, 1.42269, 0.74", "17.3567, -65.3029, -0.0432176, 0.29", "17.6304, -65.7808, -1.05557, 0.37", "17.7838, -66.1769, -1.7872, 0.37", "17.8875, -66.5524, -2.43607, 0.74", "18.0088, -67.054, -3.29403, 0.44", "18.2685, -67.9162, -4.8805, 0.44", "18.4265, -68.1968, -5.51343, 0.44", "18.7397, -68.5224, -6.3769, 0.22", "19.2585, -68.9372, -7.54691, 0.22", "19.7144, -69.2698, -8.50404, 0.44", "20.1342, -69.6053, -9.40734, 0.59", "20.7853, -70.2971, -11.1032, 0.29", "21.0128, -70.6683, -11.9726, 0.22", "21.1011, -71.0458, -12.7547, 0.29", "21.0831, -71.5597, -13.6602, 0.44", "20.9328, -72.2575, -14.7774, 0.74", "20.6377, -73.073, -15.9912, 0.96", "20.4724, -73.4311, -16.5018, 0.96", "20.1259, -74.1502, -17.5466, 0.37", "19.8093, -74.8798, -18.6734, 0.44", "19.659, -75.3859, -19.51, 0.37", "19.6255, -75.7576, -20.1511, 0.22", "19.7074, -76.1336, -20.8485, 0.22", "19.852, -76.3416, -21.3363, 0.29", "20.2144, -76.5798, -22.1566, 0.44", "20.6474, -76.7499, -23.0266, 0.44", "20.9838, -76.8586, -23.6912, 0.66", "21.5755, -77.0527, -24.9084, 0.81", "22.2477, -77.3224, -26.4364, 0.96", "22.7683, -77.6157, -27.8025, 0.96", "23.1297, -77.8795, -28.8521, 0.96", "23.3346, -78.0446, -29.4914, 0.66", "23.6555, -78.3133, -30.5056, 0.74", "23.977, -78.5957, -31.471, 0.74", "24.6481, -79.1515, -33.2639, 0.59", "25.3761, -79.7007, -35.054, 0.29", "25.9312, -80.0688, -36.416, 0.29", "26.3435, -80.3046, -37.3796, 0.29", "26.732, -80.4978, -38.2563, 0.37", "27.3516, -80.7659, -39.6226, 0.52", "27.909, -80.9927, -40.8587, 0.44", "28.776, -81.4039, -42.9046, 0.44", "32.5792, -85.1204, -50.2722, 0.44", "35.8956, -89.9354, -57.19, 0.44", "39.5242, -93.7632, -64.5854, 0.44", "42.8727, -97.5451, -72.1364, 0.44", "44.58, -100.312, -80.643, 0.44", "47.4938, -101.304, -89.2387, 0.44", "50.4386, -102.55, -97.7883, 0.44", "54.5163, -104.634, -105.672, 0.44", "58.5184, -105.506, -113.833, 0.44", "61.4918, -104.849, -122.447, 0.44", "65.2578, -103.24, -130.612, 0.44", "68.1597, -102.79, -139.264, 0.44", "71.2093, -103.325, -147.857, 0.44", "75.1892, -105.142, -155.86, 0.44", "79.5735, -106.796, -163.688, 0.44", "83.9819, -109.649, -171.125, 0.44", "87.8586, -112.825, -178.719, 0.44", "91.4068, -116.221, -186.372, 0.44", "95.8909, -118.498, -193.973, 0.44", "98.6772, -120.592, -202.398, 0.44", "102.424, -123.689, -210.091, 0.44", "105.599, -128.536, -217.05, 0.44", "109.896, -133.459, -223.318, 0.44", "114.938, -139.111, -228.237, 0.44", "119.447, -144.857, -233.544, 0.44", "122.869, -151.575, -238.447, 0.44", "127.694, -156.373, -244.425, 0.44", "132.254, -161.878, -249.953, 0.44", "137.25, -167.839, -254.523, 0.44", "142.574, -173.933, -258.502, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.200389, -140.875, 82.7532, 0.15", "-0.0887824, -142.262, 83.346, 0.15", "-0.00519395, -143.261, 83.8574, 0.22", "0.0507702, -143.977, 84.2407, 0.22", "0.137802, -145.059, 84.8382, 0.37", "0.324336, -146.481, 85.732, 0.15", "0.758926, -148.838, 87.3167, 0.15", "0.955337, -149.551, 87.9205, 0.15", "1.18509, -150.235, 88.5788, 0.29", "2.04627, -152.412, 90.8926, 0.15", "2.77102, -153.87, 92.6617, 0.15", "3.18092, -154.519, 93.5497, 0.15", "4.48413, -156.173, 96.0064, 0.15", "5.09955, -156.784, 97.1244, 0.15", "5.84151, -157.399, 98.4651, 0.22", "6.90742, -158.185, 100.374, 0.44", "7.60499, -158.692, 101.615, 0.44", "8.9011, -159.647, 103.866, 0.15", "11.6105, -161.602, 108.293, 0.22", "13.2762, -162.782, 110.924, 0.22", "13.8207, -163.177, 111.731, 0.22", "14.7555, -163.908, 113.014, 0.22", "15.6527, -164.653, 114.07, 0.22", "16.9093, -165.757, 115.214, 0.22", "17.7322, -166.532, 115.757, 0.22", "18.8349, -167.666, 116.395, 0.07", "20.4853, -169.427, 117.407, 0.07", "22.4017, -171.527, 118.57, 0.07", "23.8776, -173.16, 119.487, 0.07", "25.9523, -175.599, 120.798, 0.07", "27.712, -177.75, 122.02, 0.07", "29.3702, -179.868, 123.483, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.200389, -140.875, 82.7532, 0.22", "-0.884544, -142.195, 82.1952, 0.22", "-1.34789, -143.343, 82.0282, 0.15", "-1.6349, -144.224, 82.0666, 0.15", "-1.8799, -145.079, 82.1898, 0.15", "-2.11299, -145.92, 82.3512, 0.15", "-2.60465, -147.786, 82.727, 0.15", "-2.78107, -148.648, 82.9884, 0.15", "-2.88539, -149.197, 83.1832, 0.37", "-3.05154, -149.918, 83.4106, 0.59", "-3.37902, -151.135, 83.7163, 0.22", "-3.70204, -152.147, 83.8956, 0.22", "-4.01741, -152.943, 83.9341, 0.15", "-4.32806, -153.632, 83.9381, 0.15", "-4.85608, -154.694, 83.9456, 0.15", "-5.12243, -155.166, 83.9254, 0.15", "-5.42046, -155.617, 83.8604, 0.29", "-5.68341, -155.976, 83.7854, 0.29", "-6.15063, -156.61, 83.613, 0.44", "-6.48861, -157.131, 83.5155, 0.44", "-7.03994, -158.145, 83.4599, 0.22", "-7.48838, -159.107, 83.4852, 0.29", "-7.87368, -160.113, 83.5824, 0.07", "-8.12505, -160.937, 83.716, 0.07", "-8.54971, -162.703, 84.0298, 0.22", "-8.6804, -163.507, 84.2519, 0.22", "-8.72534, -164.028, 84.4591, 0.22", "-8.72752, -164.439, 84.6596, 0.44", "-8.71332, -164.88, 84.8876, 0.66", "-8.66955, -166.013, 85.4755, 0.22", "-8.62922, -167.306, 86.0793, 0.22", "-8.60649, -167.925, 86.3638, 0.07", "-8.57363, -168.715, 86.6757, 0.07", "-8.53765, -169.384, 86.8897, 0.15", "-8.50137, -169.913, 87.0171, 0.15", "-8.43669, -170.743, 87.1492, 0.37", "-8.38642, -171.603, 87.1457, 0.66", "-8.32579, -172.871, 87.0271, 0.15", "-8.29816, -173.748, 86.8842, 0.22", "-8.27954, -174.564, 86.7233, 0.22", "-8.27893, -175.276, 86.5615, 0.15", "-8.29399, -175.776, 86.4409, 0.15", "-8.33005, -176.261, 86.3473, 0.59", "-8.40642, -176.795, 86.2907, 0.59", "-8.64496, -177.843, 86.2434, 0.22", "-8.74171, -178.152, 86.2321, 0.22", "-8.92106, -178.658, 86.2179, 0.44", "-9.15928, -179.384, 86.197, 0.66", "-9.39904, -180.195, 86.1584, 0.29", "-9.56688, -180.861, 86.1153, 0.66", "-9.72421, -181.714, 86.0394, 0.52", "-9.88652, -182.948, 85.8972, 0.29", "-9.99282, -184.052, 85.7013, 0.22", "-10.0444, -184.861, 85.5051, 0.29", "-10.0684, -185.629, 85.2812, 0.37", "-10.0633, -186.538, 85.0168, 0.22", "-10.0501, -187.009, 84.8905, 0.22", "-10.0194, -188.179, 84.5701, 0.29", "-10.0196, -188.961, 84.3707, 0.52", "-10.0275, -189.438, 84.2666, 0.81", "-10.0542, -190.407, 84.1006, 0.29", "-10.0501, -191.214, 84.0648, 0.22", "-10.0312, -191.542, 84.0903, 0.22", "-9.99172, -191.936, 84.1678, 0.44", "-9.9382, -192.509, 84.3046, 0.74", "-9.88379, -193.108, 84.4302, 0.29", "-9.76932, -194.266, 84.6082, 0.15", "-9.73659, -194.548, 84.6437, 0.15", "-9.66956, -195.039, 84.6827, 0.15", "-9.55492, -195.749, 84.707, 0.44", "-9.35501, -196.838, 84.7355, 0.22", "-9.22668, -197.58, 84.747, 0.22", "-9.07973, -198.53, 84.7362, 0.52", "-8.93056, -199.622, 84.6925, 0.15", "-8.86071, -200.381, 84.6214, 0.29", "-8.84333, -201.288, 84.4624, 0.59", "-8.91107, -202.03, 84.256, 0.74", "-8.96377, -202.305, 84.1534, 0.74", "-9.28401, -203.356, 83.6827, 0.22", "-9.75114, -204.429, 83.1523, 0.15", "-10.1478, -205.168, 82.7405, 0.15", "-10.5267, -205.797, 82.3749, 0.29", "-10.84, -206.292, 82.1044, 0.74", "-11.1629, -206.822, 81.8595, 0.66", "-11.7102, -207.814, 81.4986, 0.15", "-12.1746, -208.718, 81.1819, 0.15", "-12.4827, -209.385, 80.9516, 0.22", "-12.8018, -210.155, 80.6677, 0.52", "-13.1318, -211.092, 80.2932, 0.29", "-13.4165, -212.192, 79.8542, 0.15", "-13.557, -213.06, 79.496, 0.15", "-13.584, -213.354, 79.3689, 0.15", "-13.6108, -213.814, 79.1513, 0.81", "-13.6598, -214.425, 78.8696, 0.29", "-13.8047, -215.473, 78.4026, 0.15", "-13.9711, -216.253, 78.0629, 0.59", "-14.1303, -216.805, 77.8362, 0.59", "-14.3171, -217.267, 77.6218, 0.59", "-14.7471, -218.047, 77.1855, 1.18", "-15.1943, -218.642, 76.7299, 0.74", "-15.9742, -219.503, 75.9133, 0.22", "-16.228, -219.76, 75.6284, 0.29", "-16.7916, -220.297, 74.9246, 0.37", "-17.3942, -220.823, 74.0638, 0.37", "-18.2276, -221.466, 72.7294, 0.37", "-18.5198, -221.658, 72.2561, 0.37", "-18.8919, -221.88, 71.6332, 0.37", "-18.9988, -221.948, 71.435, 0.37", "-19.1724, -222.077, 71.0569, 0.37", "-19.3555, -222.263, 70.5848, 0.37", "-19.5848, -222.553, 69.9757, 0.44", "-19.8135, -222.844, 69.4372, 0.52", "-20.212, -223.425, 68.6095, 0.52", "-20.568, -223.967, 67.9467, 0.37", "-20.7313, -224.248, 67.6533, 0.22", "-20.8997, -224.564, 67.367, 0.22", "-21.1377, -225.019, 67.0286, 0.29", "-21.4855, -225.67, 66.6839, 0.81", "-21.9667, -226.631, 66.3824, 0.15", "-22.1835, -227.075, 66.2999, 0.15", "-22.3763, -227.479, 66.2287, 0.22", "-22.6069, -228.011, 66.1413, 0.29", "-22.7652, -228.399, 66.078, 0.81", "-23.1604, -229.33, 65.8968, 0.22", "-23.484, -230.069, 65.7255, 0.22", "-23.7836, -230.692, 65.5084, 0.22", "-24.0386, -231.205, 65.2457, 0.52", "-24.112, -231.347, 65.1434, 0.52", "-24.5166, -232.077, 64.4511, 0.22", "-24.8011, -232.544, 63.9137, 0.37", "-25.0637, -232.961, 63.3664, 0.66", "-25.3968, -233.491, 62.6348, 0.22", "-25.7141, -233.991, 61.9206, 0.22", "-25.9781, -234.451, 61.2918, 0.22", "-26.0886, -234.683, 60.9963, 0.37", "-26.3618, -235.37, 60.2036, 1.11", "-26.6201, -236.147, 59.4171, 0.44", "-26.823, -236.857, 58.7576, 0.66", "-26.9328, -237.354, 58.317, 0.59", "-26.9971, -237.75, 57.9545, 0.52", "-27.0473, -238.17, 57.532, 0.29", "-27.1185, -238.826, 56.8049, 0.15", "-27.2065, -239.539, 55.9834, 0.15", "-27.2614, -239.844, 55.6178, 0.52", "-27.4547, -240.525, 54.8076, 0.74", "-27.5772, -240.878, 54.4098, 0.74", "-27.897, -241.748, 53.4997, 0.37", "-28.1817, -242.514, 52.8353, 0.37", "-28.4487, -243.267, 52.3319, 0.59", "-28.7168, -244.036, 51.9408, 0.88", "-28.8492, -244.443, 51.7962, 0.88", "-29.1071, -245.283, 51.5715, 0.37", "-29.331, -246.144, 51.4067, 0.66", "-29.4938, -246.923, 51.2339, 0.66", "-29.6209, -247.776, 51.0335, 1.18", "-29.6794, -248.427, 50.8617, 0.81", "-29.7383, -249.653, 50.5049, 0.44", "-29.7372, -250.643, 50.1966, 0.37", "-29.6444, -252.02, 49.6998, 0.29", "-29.617, -252.257, 49.5975, 0.52", "-29.5439, -252.684, 49.3878, 0.96", "-29.4143, -253.364, 48.9902, 0.29", "-29.326, -253.748, 48.7447, 0.29", "-29.232, -254.165, 48.4618, 0.59", "-29.0478, -254.93, 48.0474, 0.59", "-28.94, -255.361, 47.843, 0.59", "-28.6259, -256.588, 47.3353, 0.29", "-28.405, -257.413, 47.0591, 0.22", "-28.2829, -257.867, 46.963, 0.88", "-27.8956, -259.303, 46.9091, 0.37", "-27.779, -259.75, 46.9662, 0.66", "-27.6873, -260.095, 47.0741, 0.66", "-27.4484, -260.916, 47.4787, 0.44", "-27.2682, -261.479, 47.8546, 0.44", "-27.0095, -262.13, 48.439, 0.44", "-26.779, -262.637, 48.9836, 0.81", "-26.2786, -263.548, 50.0516, 0.22", "-26.0057, -263.97, 50.5795, 0.37", "-25.467, -264.682, 51.5127, 0.37", "-24.798, -265.468, 52.5156, 0.37", "-24.4821, -265.801, 52.9111, 0.66", "-23.9246, -266.317, 53.529, 0.22", "-23.591, -266.598, 53.846, 0.22", "-23.277, -266.826, 54.1437, 0.74", "-22.939, -267.028, 54.4588, 0.74", "-22.1538, -267.374, 55.2741, 0.22", "-21.389, -267.605, 56.1896, 0.22", "-20.9853, -267.695, 56.7534, 0.37", "-19.9287, -267.893, 58.3819, 0.37", "-19.6132, -267.944, 58.9358, 0.74", "-18.8717, -268.035, 60.3941, 0.74", "-18.3301, -268.09, 61.5649, 0.52", "-17.7349, -268.18, 62.9431, 0.52", "-17.537, -268.226, 63.4292, 0.52", "-16.9639, -268.39, 64.877, 0.52", "-16.6745, -268.489, 65.6295, 0.52", "-16.1689, -268.684, 66.9489, 0.52", "-16.004, -268.75, 67.3826, 0.52", "-14.7577, -269.195, 70.5404, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.1453, 22.8172, -6.24143, 0.96", "-14.6302, 24.3551, -5.97445, 0.96", "-15.8192, 25.1308, -5.82352, 0.96", "-17.1586, 26.1122, -5.58478, 0.88", "-18.3902, 27.0984, -5.31946, 0.88", "-19.5867, 28.1429, -4.97424, 0.81", "-20.7867, 29.3006, -4.51227, 0.66", "-21.5497, 30.1882, -4.01232, 1.03", "-22.3724, 31.2769, -3.22444, 1.18", "-22.6474, 31.6698, -2.86404, 1.33", "-23.3774, 32.7189, -1.74031, 1.03", "-24.1972, 33.8227, -0.491823, 0.96", "-25.0829, 34.8338, 0.799337, 0.96", "-26.3667, 35.9682, 2.47551, 1.33", "-27.4711, 36.7074, 3.774, 1.03", "-28.027, 36.9835, 4.41107, 1.03", "-29.5017, 37.4678, 6.07377, 0.74", "-30.3503, 37.6469, 7.06703, 0.96", "-31.0024, 37.755, 7.86898, 1.55", "-32.0958, 37.9562, 9.37113, 1.25", "-33.2113, 38.2347, 11.2785, 1.03", "-33.8928, 38.4699, 12.7903, 0.74", "-34.2846, 38.6665, 13.8581, 0.74", "-34.6766, 38.9042, 15.0567, 1.11", "-35.0596, 39.155, 16.2811, 1.11", "-35.8604, 39.6783, 18.722, 0.96", "-36.6497, 40.2274, 20.9725, 1.18", "-37.2325, 40.6753, 22.537, 1.55", "-37.6633, 41.0316, 23.58, 1.55", "-38.1617, 41.4685, 24.5983, 1.18", "-38.6957, 41.9713, 25.403, 0.88", "-39.4551, 42.7842, 26.3022, 0.66", "-40.2474, 43.7369, 27.2236, 0.96", "-40.7852, 44.4799, 27.9395, 1.18", "-41.3141, 45.3634, 28.787, 1.18", "-41.8717, 46.5596, 29.9675, 1.11", "-42.4832, 48.1641, 31.6037, 1.18", "-42.9821, 49.6985, 33.2091, 1.03", "-43.3277, 50.8832, 34.543, 1.03", "-43.6356, 52.1031, 36.0401, 0.88", "-43.8957, 53.3656, 37.6322, 1.03", "-44.0746, 54.421, 38.9794, 0.74", "-44.2371, 55.5146, 40.3273, 0.66", "-44.4067, 56.8574, 41.9385, 0.59", "-44.6018, 58.3676, 43.8285, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.1453, 22.8172, -6.24143, 1.03", "-13.8329, 23.0767, -8.35083, 1.03", "-15.5879, 23.3257, -10.3234, 1.03", "-17.14, 23.5279, -11.9015, 1.18", "-18.9743, 23.7399, -13.6409, 1.18", "-20.2435, 23.8826, -14.7905, 1.18", "-21.6789, 24.0471, -16.0808, 1.03", "-23.0171, 24.2193, -17.1668, 0.96", "-23.9683, 24.3643, -17.8838, 1.18", "-25.0233, 24.5435, -18.6607, 1.03", "-26.0051, 24.7189, -19.3771, 1.03", "-27.2586, 24.9615, -20.2817, 1.03", "-28.2278, 25.1611, -20.9604, 1.18", "-29.7295, 25.5037, -21.9009, 1.18", "-30.7657, 25.7721, -22.4833, 1.18", "-31.9793, 26.1174, -23.1245, 1.11", "-33.2437, 26.495, -23.7296, 1.18", "-34.0194, 26.7522, -24.0532, 0.96", "-35.1158, 27.1884, -24.4654, 0.81", "-36.4686, 27.8562, -24.9412, 1.03", "-38.4382, 29.0052, -25.597, 1.25", "-39.0586, 29.4106, -25.7991, 1.25", "-39.9859, 30.045, -26.0785, 0.88", "-41.2707, 30.9076, -26.4351, 0.88", "-42.7305, 31.823, -26.7875, 1.11", "-43.943, 32.514, -26.9951, 1.11", "-45.4546, 33.3074, -27.1706, 0.96", "-46.7154, 33.9099, -27.3088, 1.03", "-47.9337, 34.4393, -27.4462, 1.03", "-49.1997, 34.93, -27.5839, 0.96", "-50.3721, 35.3576, -27.6875, 0.96", "-51.6347, 35.7955, -27.8166, 0.96", "-53.2179, 36.3136, -27.9604, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-23.9736, 83.0072, -50.0777, 1.18", "-24.1135, 85.5625, -50.0672, 1.18", "-24.1178, 87.3005, -50.1169, 0.96", "-24.0694, 88.4446, -50.2331, 0.96", "-24.0098, 89.478, -50.4195, 0.96", "-23.9157, 91.3582, -50.8739, 0.96", "-23.889, 93.1939, -51.3897, 1.03", "-23.8815, 94.5228, -51.8664, 1.11", "-23.9072, 96.099, -52.5713, 0.88", "-24.0105, 97.3073, -53.1667, 0.88", "-24.2173, 98.5494, -53.7598, 0.88", "-24.5575, 100.09, -54.4663, 1.03", "-24.8184, 101.134, -54.9097, 1.03", "-25.3707, 103.272, -55.674, 1.18", "-25.9082, 105.506, -56.3561, 0.88", "-26.4861, 108.258, -57.0951, 0.81", "-26.6574, 109.273, -57.3399, 0.96", "-26.8081, 110.314, -57.5831, 0.96", "-27.1203, 112.397, -58.0671, 0.88", "-27.3398, 113.875, -58.3924, 0.88", "-27.5963, 115.508, -58.7969, 1.11", "-28.0323, 118.02, -59.5007, 1.25", "-28.3421, 119.624, -59.9738, 1.03", "-28.7003, 121.368, -60.5236, 1.03", "-28.9832, 122.722, -60.975, 1.18", "-29.5026, 125.092, -61.8589, 0.96", "-29.9015, 126.993, -62.6434, 1.11", "-30.1688, 128.581, -63.3514, 1.11", "-30.3291, 130.333, -64.1372, 1.18", "-30.3286, 132.013, -64.9001, 0.74", "-30.169, 133.662, -65.6587, 0.88", "-29.9183, 134.835, -66.1827, 1.25", "-29.382, 136.421, -66.8754, 1.33", "-28.6212, 138.054, -67.5228, 0.96", "-27.8127, 139.419, -67.9877, 0.74", "-26.999, 140.606, -68.3299, 0.81", "-26.2397, 141.595, -68.5079, 0.81", "-25.2384, 142.847, -68.6467, 0.74", "-24.3888, 143.933, -68.6688, 1.25", "-23.2472, 145.422, -68.5884, 1.4", "-22.4107, 146.61, -68.4273, 1.4", "-20.8249, 149.052, -67.9783, 0.88", "-20.479, 149.623, -67.8487, 0.88", "-19.6189, 151.147, -67.4649, 0.88", "-19.0512, 152.243, -67.2072, 0.88", "-18.2105, 154.088, -66.8687, 0.96", "-17.77, 155.22, -66.7516, 0.96", "-17.2299, 156.903, -66.7266, 1.55", "-17.0697, 157.469, -66.727, 1.55", "-16.4982, 159.719, -66.8656, 1.18", "-16.0204, 162.002, -67.1326, 1.25", "-15.7593, 163.823, -67.4788, 1.62", "-15.7003, 164.759, -67.722, 1.62", "-15.723, 167.303, -68.532, 0.96", "-15.8678, 169.263, -69.2759, 0.96", "-16.0526, 170.546, -69.8536, 1.33", "-16.4438, 172.407, -70.8465, 1.11", "-16.9017, 174.177, -71.9972, 1.33", "-17.2616, 175.427, -72.9289, 1.33", "-17.7668, 176.963, -74.274, 1.47", "-18.0888, 177.912, -75.132, 1.62", "-18.6698, 179.646, -76.7589, 1.03", "-19.1384, 181.131, -78.1468, 0.96", "-19.4148, 182.136, -79.0599, 0.88", "-19.7967, 183.717, -80.5185, 0.81", "-19.9599, 184.502, -81.1753, 1.18", "-20.4036, 186.829, -82.9064, 0.96", "-20.8122, 189.006, -84.2962, 0.96", "-21.1454, 190.852, -85.215, 0.74", "-21.4862, 192.836, -85.9831, 0.59", "-21.902, 195.442, -86.7087, 0.59", "-22.2294, 197.432, -87.1495, 0.52", "-22.4482, 198.747, -87.348, 0.74", "-22.9475, 201.335, -87.6221, 1.03", "-23.2422, 202.654, -87.701, 1.11", "-23.5988, 204.214, -87.7471, 0.74", "-24.0959, 206.402, -87.8366, 0.66", "-24.3626, 207.57, -87.9061, 0.52", "-24.6653, 208.905, -88.0468, 0.22", "-25.2112, 211.032, -88.452, 0.15", "-25.3926, 211.709, -88.5802, 0.22", "-27.936, 222.791, -92.349, 0.22", "-29.6228, 232.849, -98.7004, 0.22", "-31.1469, 243.602, -103.775, 0.22", "-34.2531, 254.428, -107.884, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-23.9736, 83.0072, -50.0777, 0.66", "-24.3961, 83.2275, -52.8049, 0.66", "-24.6813, 83.3761, -54.6454, 0.59", "-24.9678, 83.5254, -56.4946, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "32.9407, 6.66887, 29.1744, 0.88", "33.5504, 8.21764, 28.8688, 0.88", "34.0434, 9.59842, 28.5383, 0.59", "34.6244, 11.1879, 28.1434, 0.59", "35.0849, 12.2712, 27.8699, 0.59", "35.5239, 13.19, 27.5987, 0.59", "36.0106, 14.1308, 27.2673, 0.81", "36.5799, 15.1173, 26.8011, 0.81", "37.0601, 15.8023, 26.4044, 0.81", "37.8625, 16.7298, 25.7839, 0.52", "38.8735, 17.7403, 25.0004, 0.52", "39.669, 18.4589, 24.3617, 0.52", "40.4106, 19.0923, 23.7717, 0.52", "40.9348, 19.554, 23.3713, 0.52", "41.7023, 20.2928, 22.7412, 0.44", "42.638, 21.2679, 21.9275, 0.59", "43.4414, 22.0766, 21.282, 0.44", "43.9347, 22.5556, 20.877, 0.66", "44.6627, 23.2117, 20.2864, 0.37", "45.6277, 23.9974, 19.4796, 0.37", "46.6075, 24.647, 18.7016, 0.59", "47.3629, 25.0696, 18.1075, 1.11", "48.6892, 25.7935, 17.0015, 1.11", "49.711, 26.3697, 16.1149, 0.66", "50.8015, 27.054, 15.1606, 0.52", "51.561, 27.636, 14.4727, 0.29", "52.3166, 28.4199, 13.714, 0.29", "52.9323, 29.3976, 12.8928, 0.59", "53.1935, 30.05, 12.4222, 0.59", "53.5014, 31.2236, 11.6589, 0.37", "53.7354, 32.4128, 10.9283, 0.37", "53.8835, 33.2443, 10.4101, 0.59", "54.2287, 34.9379, 9.33312, 1.03", "54.5149, 36.0595, 8.58665, 0.88", "54.7944, 36.9705, 7.96651, 0.44", "55.2581, 38.2983, 6.99446, 0.44", "55.5308, 38.9571, 6.51481, 0.44", "55.7976, 39.4827, 6.10612, 0.66", "56.0616, 39.8858, 5.7838, 0.66", "56.516, 40.4802, 5.24264, 0.44", "57.6842, 41.8124, 3.90934, 0.44", "58.0368, 42.1585, 3.53514, 0.81", "58.6074, 42.6734, 2.89443, 1.03", "59.3842, 43.3452, 1.85001, 0.66", "59.9488, 43.8402, 0.89542, 0.66", "60.555, 44.4407, -0.532413, 0.52", "60.9867, 44.9625, -2.0501, 0.37", "61.2468, 45.4146, -3.61811, 0.44", "61.4522, 46.0325, -6.11306, 0.52", "61.5188, 46.4518, -8.05524, 0.52", "61.5892, 46.9339, -10.4859, 0.52", "61.6482, 47.3326, -12.525, 0.81", "61.7277, 47.6852, -14.1462, 1.03", "61.8918, 48.0901, -15.6108, 1.03", "62.1416, 48.4836, -16.633, 0.81", "62.6914, 49.1907, -17.9859, 0.59", "63.2415, 49.8388, -18.9034, 0.59", "63.6684, 50.3544, -19.4721, 0.44", "64.5554, 51.4316, -20.5295, 0.44", "65.2236, 52.2095, -21.2545, 0.37", "65.7334, 52.757, -21.7544, 0.37", "66.351, 53.3317, -22.2752, 0.96", "67.5907, 54.296, -23.1654, 0.66", "68.43, 54.887, -23.725, 0.66", "69.2903, 55.4808, -24.3141, 0.88", "70.355, 56.3108, -25.2088, 0.74", "71.2074, 57.1485, -26.1726, 0.74", "72.0348, 58.2394, -27.4224, 0.74", "72.5176, 59.1771, -28.4302, 0.59", "73.0455, 60.7651, -30.0028, 0.81", "73.3612, 62.4704, -31.5797, 0.96", "73.4753, 64.1493, -33.0267, 0.96", "73.4706, 65.0737, -33.7157, 0.66", "73.4484, 66.076, -34.3349, 0.59", "73.4657, 66.7986, -34.7327, 0.44", "73.5603, 68.002, -35.2688, 0.88", "73.6387, 68.5651, -35.5375, 0.88", "73.8566, 69.6853, -36.3519, 0.29", "74.1475, 70.9829, -37.9615, 0.29", "74.4388, 72.2038, -40.2029, 0.29", "74.5149, 72.5259, -40.9218, 0.88", "74.6766, 73.2974, -42.8477, 0.88", "74.7608, 73.9237, -44.4111, 0.88", "74.7588, 74.4543, -45.6864, 0.88", "74.6198, 75.252, -47.2361, 0.88", "74.5074, 75.6326, -47.7241, 0.88", "74.3083, 76.2191, -48.1627, 0.88", "73.82, 77.2899, -48.482, 0.52", "73.3145, 78.1914, -48.6437, 0.52", "72.8241, 78.9645, -48.7893, 1.03", "72.333, 79.7327, -48.976, 1.03", "71.8049, 80.6073, -49.2603, 0.81", "71.0564, 81.9785, -49.8131, 0.44", "70.4942, 83.2047, -50.3804, 0.52", "70.0737, 84.2937, -50.938, 0.52", "69.6326, 85.5146, -51.6586, 0.66", "69.3904, 86.1112, -52.1038, 0.52", "68.9843, 86.9683, -52.8489, 0.66", "68.4871, 87.8895, -53.6884, 0.88", "67.6298, 89.2583, -54.9257, 0.59", "66.9863, 90.1891, -55.7488, 0.59", "65.6701, 91.9978, -57.3944, 0.52", "65.1638, 92.7101, -58.0456, 0.52", "64.8072, 93.3149, -58.561, 0.52", "64.4386, 94.2752, -59.2168, 0.52", "64.3717, 95.3002, -59.594, 0.44", "64.4988, 96.4181, -59.7479, 0.74", "64.6151, 97.0313, -59.7481, 0.81", "65.0031, 98.7139, -59.7145, 0.59", "65.2892, 99.8345, -59.7398, 0.66", "65.6571, 101.275, -59.7748, 0.59", "65.9961, 102.784, -59.7834, 0.59", "66.2113, 103.932, -59.7467, 0.66", "66.4054, 105.212, -59.6898, 0.52", "66.6424, 107.117, -59.5488, 0.81", "69.9539, 114.581, -65.9938, 0.81", "72.305, 121.687, -73.2273, 0.81", "73.8249, 128.176, -81.2344, 0.81", "73.4156, 135.093, -88.9922, 0.81", "72.9739, 143.382, -95.1926, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "32.9407, 6.66887, 29.1744, 0.81", "32.5057, 7.21263, 29.258, 0.81", "31.9918, 7.87831, 29.3913, 0.74", "31.5227, 8.48232, 29.5906, 0.59", "30.8455, 9.37776, 29.9394, 0.37", "30.3543, 10.0703, 30.2607, 0.44", "29.9115, 10.7399, 30.5951, 0.44", "29.4951, 11.4273, 30.9746, 0.74", "28.8867, 12.5243, 31.6292, 0.44", "28.6376, 13.0588, 31.9592, 0.52", "28.3271, 13.9018, 32.4861, 0.66", "28.187, 14.3812, 32.7607, 0.44", "28.0254, 15.0282, 33.0878, 0.44", "27.8913, 15.6575, 33.3647, 0.37", "27.7337, 16.5601, 33.6817, 0.37", "27.6151, 17.301, 33.9155, 0.44", "27.5347, 17.8635, 34.0735, 0.22", "27.4743, 18.3716, 34.2191, 0.22", "27.4062, 19.0231, 34.4093, 0.29", "27.3313, 19.7307, 34.5988, 0.74", "27.2521, 20.4163, 34.7669, 0.59", "27.1727, 21.0701, 34.9141, 0.44", "27.1112, 21.6836, 34.9923, 0.22", "27.0822, 22.1851, 35.0194, 0.22", "27.0664, 22.8391, 35.0525, 0.22", "27.0689, 23.4466, 35.0863, 0.37", "27.0799, 23.8494, 35.0942, 0.37", "27.1285, 25.2973, 35.0995, 0.74", "27.1578, 26.2548, 35.0844, 0.22", "27.1794, 27.3103, 35.0706, 0.22", "27.1739, 28.0964, 35.0583, 0.44", "27.1076, 29.0595, 34.9861, 0.29", "27.0355, 29.6382, 34.8814, 0.66", "26.9159, 30.2924, 34.7203, 0.66", "26.7568, 30.9293, 34.5267, 0.88", "26.5489, 31.6489, 34.2992, 0.88", "26.1673, 33.0045, 33.9269, 0.59", "25.8693, 34.2985, 33.6624, 0.44", "25.7286, 35.0745, 33.5268, 0.44", "25.5607, 36.1985, 33.3881, 0.52", "25.4557, 37.0321, 33.2948, 0.59", "25.3337, 38.1871, 33.1756, 0.44", "25.2434, 39.2472, 33.0896, 0.22", "25.1719, 40.0989, 33.0014, 0.44", "25.1028, 40.8866, 32.8822, 0.74", "24.9876, 42.1176, 32.6695, 1.11", "24.8386, 43.2845, 32.4653, 0.96", "24.7268, 43.9419, 32.3606, 0.96", "24.442, 45.371, 32.1763, 0.59", "24.2509, 46.2522, 32.1179, 0.37", "24.0336, 47.2389, 32.1498, 0.22", "23.8816, 47.845, 32.2531, 0.66", "23.7369, 48.3701, 32.3725, 0.74", "23.5753, 48.952, 32.5069, 0.52", "23.3452, 49.7819, 32.6793, 0.59", "23.0478, 50.9112, 32.8475, 0.66", "22.8004, 51.9099, 32.9566, 0.29", "22.5128, 53.0926, 33.0611, 0.29", "22.3105, 53.9596, 33.0994, 0.37", "22.0584, 55.1411, 33.1133, 0.44", "21.8746, 56.0864, 33.0743, 0.52", "21.6892, 57.0233, 32.9859, 0.66", "21.5264, 57.8835, 32.9083, 0.66", "21.3498, 58.7508, 32.8352, 0.66", "21.1761, 59.5504, 32.7582, 0.96", "20.8716, 61.0369, 32.5861, 0.44", "20.7074, 61.916, 32.4472, 0.44", "20.5824, 62.7348, 32.2833, 0.59", "20.4444, 63.9628, 31.993, 0.22", "20.3964, 64.5346, 31.8551, 0.22", "20.3669, 65.0079, 31.7359, 0.22", "20.3614, 65.314, 31.6642, 0.22", "20.364, 65.8604, 31.5494, 0.22", "20.3617, 66.2947, 31.4581, 0.22", "20.3491, 66.8624, 31.3447, 0.66", "20.3085, 67.6675, 31.1791, 0.66", "20.2288, 68.5262, 31.0219, 0.66", "20.1583, 69.0855, 30.9367, 0.37", "20.0132, 69.977, 30.8141, 0.22", "19.8452, 70.9199, 30.7635, 0.44", "19.7253, 71.5622, 30.801, 0.44", "19.6086, 72.2732, 30.9637, 0.44", "19.4864, 73.1245, 31.4229, 0.22", "19.3835, 73.9053, 31.9502, 0.29", "19.1997, 75.2561, 32.9157, 0.44", "19.0687, 76.1578, 33.5131, 0.66", "18.9329, 77.0878, 33.981, 0.66", "18.7154, 78.6612, 34.4377, 0.29", "18.5163, 80.1371, 34.4977, 0.37", "18.3133, 81.4133, 34.2627, 0.52", "18.0758, 82.5269, 33.8371, 0.74", "17.7755, 83.7438, 33.227, 0.74", "17.5667, 84.5543, 32.7687, 0.74", "17.2455, 85.8123, 32.0081, 0.52", "16.9796, 86.8916, 31.4221, 0.59", "16.5559, 88.5823, 30.6023, 0.22", "16.3802, 89.2788, 30.2912, 0.22", "16.171, 90.0839, 29.9616, 0.59", "15.8542, 91.2488, 29.4771, 0.96", "15.5341, 92.4356, 29.0345, 0.37", "15.3237, 93.3185, 28.7408, 0.44", "15.0805, 94.4977, 28.378, 0.44", "14.8915, 95.5035, 28.0742, 0.44", "14.7632, 96.3113, 27.8249, 0.44", "14.6291, 97.5339, 27.4544, 0.22", "14.533, 98.8668, 27.0415, 0.22", "14.5201, 99.3065, 26.9134, 0.22", "14.5178, 100.077, 26.7247, 0.59", "14.5381, 101.444, 26.4546, 0.29", "14.5325, 102.383, 26.3004, 0.29", "14.4733, 103.395, 26.1509, 0.52", "14.3618, 104.287, 26.0529, 0.88", "14.2449, 104.943, 25.9892, 0.88", "14.0616, 105.827, 25.9282, 0.59", "13.8387, 106.967, 25.8994, 0.22", "13.7517, 107.562, 25.8836, 0.29", "13.7115, 108.078, 25.8575, 0.29", "13.7031, 108.687, 25.8231, 0.81", "13.7435, 109.516, 25.7728, 0.88", "13.8259, 110.261, 25.7401, 0.59", "13.9677, 111.228, 25.699, 0.59", "14.1301, 112.359, 25.6529, 0.29", "14.3084, 113.837, 25.5807, 0.52", "14.3807, 114.766, 25.4939, 0.59", "14.388, 115.738, 25.3592, 0.59", "14.348, 116.457, 25.2268, 0.74", "14.2915, 116.973, 25.0953, 0.74", "14.1396, 117.943, 24.7706, 0.66", "13.9585, 118.852, 24.4073, 0.66", "13.7738, 119.682, 24.0728, 0.74", "13.532, 120.789, 23.7159, 0.52", "13.3946, 121.532, 23.5976, 0.59", "13.2922, 122.312, 23.6456, 0.44", "13.2216, 123.081, 23.7942, 0.59", "13.1759, 123.683, 23.9353, 0.37", "13.0099, 125.069, 24.2032, 0.74", "12.7939, 125.974, 24.2677, 1.03", "12.4247, 127.026, 24.1502, 0.44", "11.6736, 128.666, 23.5115, 0.59", "11.2526, 129.529, 23.0296, 1.18", "10.699, 130.618, 22.3211, 0.37", "10.1155, 131.675, 21.536, 0.37", "9.63047, 132.484, 20.8775, 0.81", "8.84236, 133.791, 19.8078, 0.81", "8.37036, 134.614, 19.2089, 0.66", "7.91673, 135.531, 18.6221, 0.37", "7.49165, 136.613, 18.0437, 0.37", "7.06011, 137.936, 17.4818, 0.37", "6.85284, 138.691, 17.2586, 0.52", "6.64633, 139.509, 17.1311, 0.44", "6.43132, 140.39, 17.0089, 0.66", "6.27043, 141.201, 16.878, 0.81", "6.17652, 141.759, 16.7922, 0.81", "6.07273, 142.374, 16.6925, 0.74", "5.80102, 143.741, 16.4449, 0.66", "5.48785, 145.188, 16.1672, 0.44", "5.20814, 146.366, 15.9496, 0.44", "4.98628, 147.287, 15.7996, 1.03", "4.82825, 147.951, 15.7618, 0.66", "4.62529, 148.78, 15.8577, 0.52", "4.52693, 149.21, 15.9649, 0.74", "4.37807, 149.791, 16.1154, 0.96", "4.29187, 150.127, 16.1799, 0.96", "3.89499, 151.671, 16.2418, 0.66", "3.53311, 153.026, 16.0829, 0.66", "3.16447, 154.264, 15.7613, 0.44", "2.65475, 155.725, 15.1965, 0.96", "2.24768, 156.689, 14.6947, 0.52", "1.73626, 157.636, 14.057, 0.52", "1.21692, 158.531, 13.3239, 0.52", "0.77216, 159.183, 12.7048, 0.44", "0.281196, 159.758, 12.1149, 0.44", "-0.20528, 160.194, 11.6054, 0.96", "-1.16872, 160.812, 10.7012, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "46.9046, -64.7334, 56.5886, 0.37", "47.2422, -66.0573, 58.8653, 0.37", "47.761, -67.6193, 61.0605, 0.37", "48.0703, -68.4216, 62.147, 0.59", "48.5912, -69.7156, 63.8161, 0.44", "48.8841, -70.339, 64.7085, 0.66", "49.3164, -71.1201, 66.0342, 0.44", "49.9775, -72.2009, 67.9002, 0.44", "50.5193, -72.9984, 69.2843, 0.44", "50.9053, -73.511, 70.1919, 0.81", "52.1536, -75.1121, 72.9634, 0.81", "53.3261, -76.6184, 75.5475, 0.81", "53.7054, -77.1177, 76.3739, 0.81", "54.2386, -77.864, 77.4566, 0.44", "54.7305, -78.6392, 78.3784, 0.44", "55.5033, -80.0402, 79.8322, 0.44", "55.8671, -80.8308, 80.5272, 0.66", "56.1152, -81.457, 81.0571, 0.66", "56.6471, -82.9169, 82.4869, 0.52", "57.0685, -84.3023, 84.0096, 0.66", "57.4984, -86.1488, 86.1009, 0.29", "57.6277, -86.9036, 86.9821, 0.29", "57.774, -88.117, 88.3987, 0.22", "57.9025, -89.9973, 90.5217, 0.22", "57.9386, -91.28, 91.9369, 0.22", "57.9329, -92.4491, 93.1797, 0.37", "57.8873, -94.1557, 94.899, 0.74", "57.8569, -95.1452, 95.8082, 0.88", "57.8211, -96.2516, 96.7361, 0.22", "57.6896, -98.1875, 98.0809, 0.22", "57.63, -98.9442, 98.5564, 0.22", "57.5116, -100.142, 99.1395, 0.22", "57.2987, -102.085, 99.7941, 0.15", "57.1659, -103.563, 100.163, 0.15", "56.9803, -106.332, 100.765, 0.22", "56.8789, -108.248, 101.133, 0.22", "56.721, -111.679, 101.887, 0.15", "56.5376, -114.543, 102.58, 0.15", "56.3109, -117.258, 103.374, 0.22", "56.0923, -119.615, 104.21, 0.22", "55.9075, -121.55, 105.026, 0.22", "55.6645, -123.784, 106.097, 0.22", "55.354, -126.659, 107.745, 0.22", "55.0411, -129.573, 109.492, 0.22", "54.8606, -131.331, 110.574, 0.22", "54.754, -132.567, 111.291, 0.52", "54.6736, -134.085, 112.137, 0.59", "54.6815, -135.898, 113.084, 0.22", "54.7567, -137.139, 113.704, 0.15", "54.875, -138.733, 114.541, 0.15", "54.8628, -140.445, 115.298, 0.22", "54.7096, -141.663, 115.8, 0.37", "54.409, -143.348, 116.482, 0.37", "53.9647, -145.146, 117.144, 0.15", "53.1049, -147.942, 118.14, 0.15", "51.5063, -152.255, 119.447, 0.15", "50.6094, -154.231, 120.007, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "46.9046, -64.7334, 56.5886, 0.29", "47.1507, -65.4131, 56.0161, 0.29", "47.5937, -66.5183, 55.0186, 0.37", "47.8676, -67.1794, 54.4198, 0.37", "48.2536, -68.0394, 53.6552, 0.22", "48.7191, -68.9661, 52.8361, 0.22", "48.9945, -69.4767, 52.4032, 0.52", "49.5549, -70.555, 51.5331, 0.29", "49.8172, -71.0604, 51.1527, 0.44", "50.0738, -71.5838, 50.777, 0.66", "50.4006, -72.3317, 50.2698, 0.37", "50.6537, -73.081, 49.8218, 0.29", "50.8604, -73.9912, 49.3012, 0.29", "50.983, -74.8188, 48.8586, 0.29", "51.097, -75.7319, 48.3876, 0.66", "51.1792, -76.6564, 47.9289, 0.66", "51.2395, -77.5791, 47.4984, 0.52", "51.3349, -78.9363, 46.8932, 0.37", "51.4458, -79.8719, 46.5046, 0.66", "51.6165, -80.8415, 46.0981, 0.22", "51.7677, -81.4415, 45.81, 0.22", "51.9651, -82.0381, 45.4867, 0.59", "52.2413, -82.703, 45.0953, 0.81", "52.7013, -83.6127, 44.5138, 0.52", "53.3093, -84.6804, 43.7779, 0.66", "53.9052, -85.6584, 43.0825, 0.44", "54.5604, -86.6864, 42.3946, 0.37", "54.8739, -87.1927, 42.0713, 0.37", "55.2095, -87.7603, 41.7352, 0.37", "55.7783, -88.7893, 41.2072, 0.66", "56.1216, -89.4391, 40.9318, 1.11", "56.6108, -90.4301, 40.5341, 0.66", "57.0853, -91.4565, 40.0695, 0.44", "57.4589, -92.3547, 39.5747, 0.44", "57.7725, -93.1433, 39.0832, 0.59", "58.0379, -93.7976, 38.6305, 0.52", "58.4653, -94.7872, 37.8527, 0.29", "58.8707, -95.6532, 37.0726, 0.81", "59.3523, -96.591, 36.1505, 0.22", "59.526, -96.9094, 35.814, 0.22", "59.6637, -97.1396, 35.5589, 0.29", "60.1109, -97.7235, 34.904, 0.52", "60.6509, -98.2593, 34.3268, 0.22", "61.238, -98.7253, 33.8649, 0.52", "61.6814, -99.0156, 33.5945, 0.52", "62.1905, -99.3082, 33.3655, 0.29", "63.3463, -99.8696, 33.0348, 0.22", "64.064, -100.167, 32.9448, 0.29", "64.6585, -100.401, 32.9332, 0.52", "65.2492, -100.64, 32.9679, 0.66", "66.4877, -101.146, 33.0905, 0.44", "67.4399, -101.563, 33.2208, 0.44", "68.326, -101.985, 33.3533, 0.44", "69.1346, -102.379, 33.4566, 0.52", "69.8458, -102.736, 33.4916, 0.66", "70.467, -103.058, 33.4656, 0.66", "71.3042, -103.475, 33.3307, 0.37", "71.9266, -103.758, 33.2018, 0.37", "72.4492, -103.969, 33.0463, 0.74", "73.1211, -104.208, 32.8099, 1.03", "73.9158, -104.484, 32.5064, 0.29", "74.7876, -104.785, 32.1626, 0.22", "75.7132, -105.088, 31.8052, 0.22", "76.7277, -105.434, 31.4378, 0.22", "77.5538, -105.729, 31.2, 0.29", "78.2252, -105.99, 31.0713, 0.44", "78.8713, -106.255, 31.0061, 0.44", "79.5121, -106.54, 31.0215, 0.81", "79.8748, -106.712, 31.0769, 0.88", "80.8969, -107.236, 31.3664, 0.22", "81.5218, -107.602, 31.6513, 0.15", "82.1946, -108.018, 32.0698, 0.15", "82.9419, -108.502, 32.6104, 0.15", "83.3178, -108.759, 32.8986, 0.37", "83.8111, -109.114, 33.2698, 0.81", "84.9412, -110.008, 34.0875, 0.52", "85.6536, -110.683, 34.6124, 0.66", "85.9948, -111.083, 34.8524, 0.52", "86.3862, -111.637, 35.0822, 0.22", "86.8453, -112.393, 35.3594, 0.22", "87.1493, -112.973, 35.5374, 0.44", "87.6495, -114.089, 35.8456, 0.44", "87.9788, -114.999, 36.1123, 0.44", "88.23, -115.844, 36.3968, 0.44", "88.5761, -117.048, 36.9362, 0.29", "88.702, -117.456, 37.1528, 0.66", "89.0104, -118.331, 37.6738, 0.66", "89.373, -119.222, 38.252, 0.66", "89.6445, -119.824, 38.6574, 1.03", "90.2981, -121.119, 39.5053, 0.29", "90.7182, -121.876, 39.9541, 0.15", "90.885, -122.141, 40.1232, 0.15", "91.149, -122.488, 40.3848, 0.15", "91.4985, -122.843, 40.7402, 0.59", "91.7192, -123.034, 40.9675, 0.81", "92.4673, -123.645, 41.7319, 0.29", "93.1805, -124.209, 42.5042, 0.44", "94.1149, -124.944, 43.5144, 0.22", "94.9941, -125.627, 44.4427, 0.22", "95.6581, -126.169, 45.1763, 0.22", "96.328, -126.755, 45.9228, 0.29", "96.9052, -127.293, 46.5413, 0.59", "97.2981, -127.72, 46.9698, 1.03", "97.5221, -128.02, 47.2205, 1.03", "98.4706, -129.489, 48.3884, 0.15", "98.8456, -130.111, 48.8704, 0.15", "99.1269, -130.602, 49.2308, 0.22", "99.6668, -131.541, 49.8452, 0.74", "100.054, -132.182, 50.2279, 0.96", "100.783, -133.319, 50.7795, 0.22", "101.254, -134.002, 50.9808, 0.22", "101.895, -134.875, 51.1403, 0.37", "102.564, -135.712, 51.1896, 0.15", "103.037, -136.269, 51.1229, 0.29", "103.646, -136.979, 50.9557, 0.15", "104.288, -137.752, 50.6896, 0.66", "105.011, -138.6, 50.3644, 0.22", "105.633, -139.312, 50.0824, 0.22", "106.295, -140.1, 49.8274, 0.29", "106.691, -140.604, 49.7166, 0.15", "107.018, -141.036, 49.6738, 0.52", "107.365, -141.514, 49.7255, 0.59", "107.974, -142.393, 50.0382, 0.22", "108.505, -143.132, 50.4915, 0.88", "108.896, -143.602, 50.9397, 0.88", "109.241, -143.964, 51.409, 0.59", "110.055, -144.73, 52.6521, 0.15", "110.688, -145.264, 53.7463, 0.22", "111.066, -145.528, 54.4586, 0.22", "111.703, -145.881, 55.7426, 0.15", "112.13, -146.08, 56.6308, 0.15", "112.386, -146.18, 57.1754, 0.44", "112.966, -146.357, 58.3819, 0.74", "113.452, -146.5, 59.3988, 0.74", "114.003, -146.691, 60.6777, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-44.6018, 58.3676, 43.8285, 1.18", "-46.4181, 60.04, 44.8696, 1.18", "-47.4699, 60.8857, 45.3719, 1.03", "-48.4181, 61.5484, 45.7221, 1.4", "-49.6458, 62.3725, 46.1921, 1.03", "-50.4364, 62.8971, 46.5339, 0.88", "-51.6686, 63.7058, 47.1083, 0.59", "-52.9522, 64.4658, 47.6569, 0.29", "-54.0627, 65.0737, 48.1903, 0.37", "-55.2786, 65.7119, 48.8504, 0.74", "-56.3684, 66.2807, 49.5208, 1.4", "-57.7745, 67.0458, 50.4797, 0.88", "-58.5616, 67.525, 51.125, 0.88", "-59.0702, 67.8844, 51.6082, 0.88", "-59.7069, 68.369, 52.2761, 0.59", "-60.477, 68.9517, 53.1073, 0.44", "-61.0907, 69.4164, 53.8476, 0.29", "-62.1222, 70.2326, 55.2808, 0.52", "-62.7759, 70.7733, 56.2918, 0.74", "-63.3893, 71.29, 57.3424, 1.03", "-64.1286, 71.8826, 58.6558, 0.59", "-64.8552, 72.4349, 59.9485, 0.22", "-65.4912, 72.8732, 61.0491, 0.22", "-66.2374, 73.3561, 62.3393, 0.22", "-66.9134, 73.828, 63.6109, 0.37", "-67.2434, 74.0663, 64.2457, 0.52", "-67.9015, 74.5379, 65.4476, 1.33", "-68.7082, 75.1064, 66.8255, 0.29", "-69.7385, 75.7576, 68.4134, 0.37", "-70.7025, 76.3011, 69.7343, 0.37", "-71.3133, 76.5982, 70.4741, 0.37", "-72.0929, 76.9016, 71.314, 0.66", "-72.5672, 77.0445, 71.7614, 0.66", "-73.5336, 77.2903, 72.5341, 0.44", "-74.1272, 77.4367, 72.9737, 0.44", "-74.8998, 77.6484, 73.6265, 0.22", "-75.5267, 77.879, 74.3217, 0.22", "-76.2195, 78.1975, 75.3378, 0.22", "-76.779, 78.4968, 76.3061, 0.15", "-77.4548, 78.9156, 77.7284, 0.66", "-78.0969, 79.3174, 79.1235, 0.29", "-78.7766, 79.7103, 80.5774, 0.66", "-79.4747, 80.0383, 81.9308, 1.03", "-80.0739, 80.2327, 82.9287, 1.25", "-81.5652, 80.5206, 85.0851, 0.22", "-82.4599, 80.5935, 86.158, 0.22", "-83.1576, 80.5912, 86.833, 0.29", "-84.2624, 80.5123, 87.6661, 0.29", "-85.0853, 80.4181, 88.1057, 0.22", "-86.0206, 80.2705, 88.4481, 0.29", "-86.6831, 80.1504, 88.5858, 0.44", "-87.489, 79.9948, 88.6713, 0.66", "-88.3584, 79.8444, 88.7001, 0.66", "-89.6221, 79.6739, 88.6779, 0.22", "-90.5912, 79.5867, 88.6519, 0.22", "-91.8497, 79.5352, 88.7113, 0.29", "-93.5749, 79.5344, 88.9482, 0.29", "-94.3083, 79.5586, 89.1244, 0.59", "-95.4485, 79.6237, 89.571, 0.59", "-96.7954, 79.7268, 90.2835, 0.22", "-98.542, 79.8885, 91.3826, 0.44", "-99.2386, 79.9548, 91.8946, 0.44", "-100.007, 80.0266, 92.5164, 0.22", "-101.16, 80.116, 93.4188, 0.37", "-101.665, 80.1508, 93.7571, 0.59", "-102.256, 80.2, 94.0639, 0.96", "-103.246, 80.2945, 94.4417, 0.29", "-104.823, 80.4782, 94.952, 0.22", "-105.767, 80.6375, 95.316, 0.22", "-107.373, 80.9715, 95.9894, 0.22", "-108.745, 81.3168, 96.6479, 0.29", "-109.467, 81.5288, 97.0316, 0.29", "-110.376, 81.8418, 97.5644, 0.59", "-112.678, 82.8461, 99.2817, 0.07", "-113.139, 83.097, 99.7198, 0.15", "-113.642, 83.4583, 100.366, 0.29", "-114.494, 84.2224, 101.693, 0.15", "-114.755, 84.5046, 102.187, 0.22", "-115.568, 85.5104, 104.026, 0.44", "-115.896, 85.9309, 104.813, 0.81", "-116.525, 86.7619, 106.47, 0.22", "-116.856, 87.1846, 107.352, 0.29", "-117.463, 87.9167, 108.968, 0.22", "-118.019, 88.4426, 110.133, 0.22", "-118.419, 88.7035, 110.686, 0.66", "-118.753, 88.8589, 110.986, 0.66", "-119.827, 89.2129, 111.515, 0.22", "-121.035, 89.526, 111.778, 0.29", "-122.415, 89.8639, 111.8, 0.74", "-124.485, 90.3551, 111.553, 0.22", "-125.739, 90.6236, 111.33, 0.15", "-126.399, 90.7466, 111.183, 0.29", "-127.261, 90.884, 110.96, 0.74", "-128.399, 91.0468, 110.663, 0.22", "-129.781, 91.217, 110.418, 0.22", "-130.4, 91.3023, 110.4, 0.52", "-130.801, 91.3534, 110.406, 0.88", "-131.566, 91.4518, 110.449, 0.29", "-132.51, 91.6277, 110.757, 0.22", "-133.641, 91.9518, 111.446, 0.22", "-134.25, 92.192, 111.964, 0.22", "-135.12, 92.605, 112.822, 0.22", "-135.993, 93.0678, 113.823, 0.15", "-138.373, 94.5662, 117.503, 0.15", "-138.937, 94.9647, 118.654, 0.15", "-139.261, 95.2247, 119.483, 0.15", "-139.513, 95.4591, 120.321, 0.15", "-139.815, 95.7656, 121.499, 0.37", "-140.511, 96.499, 124.577, 0.15", "-140.994, 96.9275, 126.625, 0.15", "-141.303, 97.2122, 128.202, 0.15", "-141.658, 97.6021, 130.47, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-44.6018, 58.3676, 43.8285, 0.29", "-44.2471, 58.6343, 44.9166, 0.29", "-43.6808, 59.0305, 46.7173, 0.29", "-43.2257, 59.36, 48.2782, 0.29", "-42.7992, 59.7032, 49.8677, 0.29", "-42.5011, 60.0016, 51.1265, 0.29", "-42.4374, 60.0828, 51.4455, 0.29", "-42.3253, 60.292, 52.2163, 0.29", "-42.3038, 60.408, 52.6304, 0.37", "-42.3856, 60.6736, 53.5885, 0.37", "-42.5576, 60.8634, 54.3224, 0.22", "-42.8209, 61.0749, 55.1743, 0.22", "-42.9213, 61.1497, 55.5084, 0.22", "-42.993, 61.2042, 55.8164, 0.22", "-43.0805, 61.2814, 56.4145, 0.22", "-43.1316, 61.3236, 56.9081, 0.22", "-43.1495, 61.335, 57.1747, 0.22", "-43.1594, 61.3508, 57.5376, 0.29", "-43.1736, 61.3735, 58.4635, 0.29", "-43.2041, 61.3841, 59.5072, 0.29", "-43.2451, 61.376, 60.2746, 0.29", "-43.2727, 61.3687, 60.7731, 0.15", "-43.3666, 61.321, 62.6088, 0.15", "-43.4587, 61.2298, 64.5305, 0.15", "-43.5477, 61.0964, 66.2232, 0.15", "-43.5983, 60.9984, 67.1598, 0.52" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-53.2179, 36.3136, -27.9604, 1.18", "-54.619, 36.5861, -27.1718, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-53.2179, 36.3136, -27.9604, 0.29", "-54.0545, 37.2683, -27.6215, 0.29", "-54.8082, 38.1265, -27.4619, 0.29", "-55.471, 38.8714, -27.3906, 0.88", "-56.2604, 39.747, -27.3472, 0.44", "-57.0377, 40.5917, -27.3557, 0.44", "-57.525, 41.1049, -27.3758, 0.29", "-58.5285, 42.1191, -27.5621, 0.29", "-59.0256, 42.5928, -27.6807, 0.74", "-59.4144, 42.9174, -27.7685, 0.96", "-60.2077, 43.5136, -27.8822, 0.96", "-61.2036, 44.1986, -27.9114, 0.66", "-62.6365, 45.1146, -27.7392, 0.37", "-63.4377, 45.6223, -27.5028, 0.22", "-64.5222, 46.3197, -27.0403, 0.29", "-65.7121, 47.1045, -26.3422, 0.29", "-66.3478, 47.5314, -25.8431, 0.81", "-67.356, 48.2239, -24.8656, 1.03", "-68.2114, 48.8515, -23.9, 0.22", "-68.7104, 49.2689, -23.2999, 0.29", "-69.1674, 49.7307, -22.7271, 0.44", "-69.5508, 50.1818, -22.2903, 0.44", "-70.0172, 50.8404, -21.7428, 0.44", "-70.4848, 51.6577, -21.2539, 0.52", "-70.8052, 52.2739, -21.0312, 0.52", "-71.2284, 53.1551, -20.861, 0.29", "-71.4985, 53.752, -20.8066, 0.37", "-71.8793, 54.5786, -20.7722, 0.37", "-72.6321, 56.0481, -20.7805, 0.81", "-73.2273, 57.0869, -20.836, 1.03", "-73.771, 57.9487, -20.9066, 0.74", "-74.4461, 58.9387, -21.0037, 0.66", "-75.1106, 59.8881, -21.0989, 0.37", "-75.9716, 61.1076, -21.2188, 0.29", "-76.5059, 61.8747, -21.2458, 0.29", "-76.7966, 62.3257, -21.2874, 0.66", "-77.1058, 62.8553, -21.3566, 1.18", "-77.3435, 63.3346, -21.4273, 1.18", "-77.6998, 64.1335, -21.5332, 0.74", "-78.034, 64.8706, -21.5963, 0.44", "-78.5559, 65.9337, -21.6809, 0.29", "-78.8269, 66.4601, -21.7233, 0.29", "-79.1154, 67.0067, -21.7629, 0.29", "-79.6327, 67.955, -21.8581, 0.29", "-80.0926, 68.7627, -21.9449, 0.22", "-80.6673, 69.718, -22.0464, 0.37", "-81.2027, 70.5813, -22.1101, 0.22", "-81.4407, 70.9713, -22.1409, 0.22", "-81.9031, 71.7701, -22.1976, 0.44", "-82.2255, 72.366, -22.2273, 0.96", "-82.5096, 72.8744, -22.2321, 1.18", "-83.0406, 73.7333, -22.1899, 1.18", "-83.4235, 74.2939, -22.173, 1.25", "-83.8885, 74.929, -22.1877, 0.37", "-84.3059, 75.4752, -22.2153, 0.22", "-84.8086, 76.1231, -22.2953, 0.29", "-85.1307, 76.5722, -22.3834, 0.29", "-85.6934, 77.4439, -22.6314, 0.22", "-86.1535, 78.2648, -22.9086, 0.22", "-86.3063, 78.5611, -23.0135, 0.44", "-86.7024, 79.376, -23.334, 0.81", "-87.2748, 80.6213, -23.8757, 0.29", "-87.7096, 81.5545, -24.3299, 0.52", "-88.081, 82.2784, -24.7088, 1.03", "-88.466, 82.9299, -25.0841, 1.03", "-89.1861, 83.9746, -25.7412, 0.66", "-89.8929, 84.8773, -26.3555, 0.59", "-90.6557, 85.7625, -26.9832, 0.88", "-91.5734, 86.8071, -27.6975, 0.22", "-92.299, 87.6369, -28.2355, 0.59", "-93.1624, 88.6598, -28.8636, 0.22", "-93.6014, 89.2136, -29.1672, 0.44", "-94.0985, 89.9279, -29.5416, 0.74", "-94.4186, 90.5014, -29.8481, 0.88", "-94.7666, 91.2773, -30.2883, 0.37", "-95.0607, 92.0026, -30.739, 0.37", "-95.399, 92.8659, -31.2924, 0.37", "-95.8389, 93.9177, -31.9525, 0.29", "-96.2043, 94.7777, -32.514, 0.52", "-96.3753, 95.1714, -32.7866, 0.52", "-96.7971, 96.143, -33.4629, 0.52", "-97.1725, 96.9244, -33.9609, 0.37", "-97.4527, 97.3802, -34.2105, 0.37", "-101.834, 105.069, -33.8176, 0.37", "-104.7, 113.149, -31.6817, 0.37", "-106.694, 121.429, -29.3545, 0.37", "-108.618, 129.792, -27.2885, 0.37", "-109.295, 138.554, -26.4872, 0.37", "-109.032, 147.085, -24.2259, 0.37", "-108.22, 155.755, -22.7493, 0.37", "-107.22, 164.327, -20.8551, 0.37", "-107.347, 173.028, -19.3822, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-24.9678, 83.5254, -56.4946, 0.52", "-26.6111, 83.3478, -57.3732, 0.52", "-28.1987, 83.065, -58.2685, 0.52", "-29.1614, 82.7979, -58.9864, 0.66", "-29.9186, 82.4645, -59.736, 0.44", "-30.5551, 82.1046, -60.5383, 0.37", "-31.5986, 81.4719, -62.0526, 0.37", "-31.8398, 81.308, -62.4634, 0.37", "-32.7745, 80.5507, -64.3328, 0.37", "-33.4831, 79.9085, -65.8609, 0.52", "-34.0042, 79.4422, -66.9531, 0.52", "-34.2915, 79.2061, -67.4772, 0.52", "-34.9914, 78.7264, -68.3531, 0.52", "-35.8796, 78.2567, -68.9898, 0.66", "-36.7512, 77.8725, -69.0036, 0.52", "-37.8977, 77.4079, -68.8298, 0.44", "-38.7217, 77.0612, -68.616, 0.44", "-39.3593, 76.7668, -68.3962, 0.81", "-40.3682, 76.2681, -67.8936, 0.96", "-41.76, 75.607, -67.0353, 0.22", "-49.841, 70.6445, -69.9311, 0.22", "-58.5963, 66.0026, -70.1151, 0.22", "-66.627, 60.2605, -70.5469, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-24.9678, 83.5254, -56.4946, 0.59", "-24.3355, 84.8976, -56.2923, 0.59", "-23.7256, 86.4781, -56.1197, 0.59", "-23.3372, 87.773, -56.1324, 0.66", "-23.1308, 88.7656, -56.2203, 0.81", "-22.9666, 90.2179, -56.4762, 0.52", "-22.9252, 91.9751, -56.9307, 0.52", "-23.0734, 93.0577, -57.4126, 0.66", "-23.5258, 94.6617, -58.5264, 1.03", "-24.1588, 96.1493, -60.01, 0.37", "-24.7439, 97.1936, -61.4617, 0.37", "-25.2488, 97.93, -62.8137, 0.59", "-25.9409, 98.8526, -64.8421, 0.74", "-26.4842, 99.5843, -66.7014, 0.74", "-27.0097, 100.345, -68.8876, 0.37", "-27.3121, 100.858, -70.5509, 0.37", "-27.4158, 101.169, -71.5632, 0.37", "-27.4584, 101.443, -72.5454, 0.44", "-27.4623, 101.911, -74.0988, 0.44", "-27.4436, 102.192, -74.9632, 0.74", "-27.4006, 102.725, -76.5369, 0.74", "-27.3252, 103.334, -78.413, 0.15", "-27.2609, 103.817, -80.2577, 0.15", "-26.7631, 112.302, -87.5029, 0.15", "-26.4155, 121.346, -94.013, 0.15", "-28.5018, 129.344, -101.566, 0.15", "-31.6179, 136.61, -109.537, 0.15", "-34.3517, 144.925, -116.51, 0.15", "-36.1958, 153.508, -123.426, 0.15", "-36.3792, 161.965, -130.724, 0.15", "-35.6628, 170.945, -137.293, 0.15", "-35.6382, 180.499, -143.009, 0.15", "-32.7328, 189.842, -148.323, 0.15", "-29.1951, 199.202, -153.205, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-1.16872, 160.812, 10.7012, 0.29", "-2.03285, 161.761, 9.62696, 0.29", "-3.19491, 162.886, 8.09391, 0.29", "-3.98469, 163.551, 7.09513, 0.29", "-4.64421, 164.056, 6.33342, 0.29", "-5.10372, 164.4, 5.82668, 0.59", "-6.38155, 165.399, 4.43687, 0.22", "-7.23479, 166.148, 3.52015, 0.22", "-7.66189, 166.584, 3.0645, 0.22", "-8.15347, 167.181, 2.49745, 0.15", "-8.23115, 167.763, 2.17843, 0.15", "-8.00057, 168.502, 1.99672, 0.66", "-7.41196, 169.711, 1.85872, 0.22", "-7.09043, 170.303, 1.81054, 0.22", "-6.76176, 170.812, 1.75433, 0.44", "-5.74663, 172.079, 1.56521, 0.29", "-7.18659, 180.098, -4.66246, 0.29", "-9.65042, 188.066, -10.619, 0.29", "-12.9923, 195.935, -16.262, 0.29", "-16.6877, 204.402, -20.6094, 0.29", "-20.0008, 212.771, -25.4504, 0.29", "-25.2204, 219.63, -31.0209, 0.29", "-31.4123, 225.35, -36.9193, 0.29", "-38.1907, 231.408, -41.6953, 0.29", "-43.7378, 238.066, -47.1991, 0.29", "-49.3506, 245.377, -51.6533, 0.29", "-53.9521, 253.518, -55.7569, 0.29", "-57.185, 261.546, -61.2275, 0.29", "-58.1135, 269.614, -67.4912, 0.29", "-59.0705, 276.32, -75.2494, 0.29", "-59.0932, 282.166, -83.754, 0.29", "-59.3461, 286.355, -93.2013, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-1.16872, 160.812, 10.7012, 0.74", "-1.61457, 161.098, 11.0265, 0.74", "-3.73166, 162.361, 12.376, 0.29", "-4.48261, 162.767, 12.8003, 0.29", "-5.68341, 163.363, 13.4057, 0.52", "-6.51879, 163.748, 13.7735, 0.29", "-7.61452, 164.247, 14.1481, 0.37", "-8.55952, 164.661, 14.3502, 0.59", "-9.28139, 164.956, 14.4434, 0.44", "-10.0991, 165.299, 14.5801, 0.88", "-11.6203, 166.004, 14.9678, 0.37", "-13.1273, 166.792, 15.5362, 0.66", "-14.0025, 167.333, 15.9799, 0.29", "-14.9646, 168.054, 16.5898, 0.22", "-15.9999, 168.977, 17.3745, 0.74", "-17.0482, 170.074, 18.3103, 0.29", "-17.6118, 170.775, 18.901, 0.22", "-18.0358, 171.366, 19.3853, 0.88", "-18.5529, 172.157, 19.9208, 0.88", "-18.9545, 172.826, 20.256, 0.22", "-19.3581, 173.542, 20.5173, 0.22", "-19.8051, 174.401, 20.7641, 0.15", "-20.0533, 174.924, 20.9131, 0.66", "-20.29, 175.485, 21.0711, 0.22", "-20.6194, 176.329, 21.3038, 0.15", "-20.7663, 176.776, 21.4167, 0.15", "-20.9526, 177.515, 21.5418, 0.44", "-21.1407, 178.559, 21.6187, 0.44", "-21.3171, 179.762, 21.5426, 0.22", "-21.4018, 180.45, 21.3914, 0.22", "-21.4983, 181.37, 21.0467, 0.52", "-21.6113, 182.538, 20.443, 0.52", "-21.6713, 183.303, 19.9492, 0.22", "-21.7492, 184.68, 18.9733, 0.22", "-21.802, 185.748, 18.1758, 0.22", "-21.8501, 186.568, 17.5401, 0.22", "-21.929, 187.522, 16.7946, 0.22", "-22.0471, 188.916, 15.7517, 0.22", "-22.1105, 189.95, 14.9838, 0.66", "-22.1088, 190.61, 14.5318, 0.37", "-25.9911, 199.286, 14.8712, 0.37", "-28.9217, 208.266, 15.8742, 0.37", "-33.4665, 216.21, 18.4547, 0.37", "-37.3069, 224.159, 21.9775, 0.37", "-41.6092, 232.354, 24.1447, 0.37", "-44.4882, 241.259, 25.7489, 0.37", "-45.7874, 250.388, 28.017, 0.37", "-46.7361, 259.132, 31.6093, 0.37", "-45.9347, 267.442, 36.2021, 0.37", "-43.6987, 276.094, 39.5547, 0.37", "-40.9301, 285.072, 41.2909, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-54.619, 36.5861, -27.1718, 0.52", "-56.0137, 37.2496, -27.1245, 0.52", "-56.5772, 37.5181, -27.1217, 0.66", "-57.4691, 37.9349, -27.1134, 0.88", "-58.8063, 38.5423, -27.0868, 0.74", "-59.9978, 39.0563, -27.0306, 0.52", "-60.9947, 39.4666, -26.9631, 0.52", "-62.5067, 40.0354, -26.8751, 0.74", "-63.3514, 40.3318, -26.8093, 0.74", "-64.5399, 40.713, -26.662, 0.66", "-65.8494, 41.0663, -26.4435, 0.37", "-66.4397, 41.194, -26.3321, 0.37", "-67.0466, 41.289, -26.227, 0.88", "-68.0195, 41.3883, -26.0943, 0.88", "-68.7966, 41.4491, -26.0318, 0.59", "-69.5948, 41.4855, -26.009, 0.59", "-70.4456, 41.5038, -26.0589, 0.59", "-71.1966, 41.4866, -26.1886, 0.59", "-72.03, 41.4461, -26.3858, 0.59", "-72.6445, 41.4022, -26.54, 0.81", "-73.4322, 41.3384, -26.722, 1.03", "-74.8283, 41.1825, -26.9737, 0.52", "-76.6661, 40.9306, -27.1877, 0.59", "-77.8428, 40.7095, -27.2561, 0.59", "-78.8089, 40.4664, -27.2362, 0.59", "-80.101, 40.0324, -27.1029, 0.59", "-80.966, 39.6473, -26.9032, 0.59", "-81.9282, 39.0933, -26.5074, 0.52", "-82.5396, 38.664, -26.1587, 0.59", "-83.1982, 38.1215, -25.747, 0.52", "-83.8152, 37.5812, -25.3613, 0.37", "-84.6451, 36.8471, -24.8742, 0.66", "-85.1856, 36.4042, -24.5864, 0.66", "-85.7341, 36.0188, -24.341, 0.88", "-86.4318, 35.6147, -24.0734, 0.88", "-87.714, 34.966, -23.6901, 0.52", "-88.4867, 34.6187, -23.5459, 0.52", "-89.0268, 34.411, -23.5146, 0.66", "-90.4428, 33.9518, -23.6046, 0.44", "-91.1392, 33.7777, -23.7281, 0.59", "-92.0971, 33.6162, -23.9806, 0.66", "-93.7043, 33.4958, -24.5252, 0.66", "-94.7941, 33.4866, -24.9519, 0.88", "-95.6448, 33.5303, -25.3119, 0.88", "-96.5061, 33.6132, -25.6858, 0.81", "-97.2863, 33.7202, -25.9892, 1.11", "-98.3468, 33.9111, -26.2955, 0.52", "-99.7027, 34.1951, -26.5815, 0.52", "-101.178, 34.534, -26.7979, 0.29", "-101.635, 34.6445, -26.8399, 0.29", "-102.642, 34.8701, -26.9168, 0.59", "-103.988, 35.0955, -27.0844, 0.29", "-105.809, 35.3034, -27.4748, 0.37", "-107.009, 35.3847, -27.8001, 0.37", "-107.931, 35.4131, -28.0941, 0.37", "-109.553, 35.4255, -28.6884, 0.44", "-111.649, 35.3631, -29.5995, 0.96", "-113.666, 35.2053, -30.6369, 0.44", "-114.501, 35.095, -31.1268, 0.52", "-115.519, 34.9321, -31.8267, 0.52", "-124.624, 34.0348, -33.1745, 0.52", "-133.827, 33.7822, -34.0713, 0.52", "-143.005, 32.7386, -33.7289, 0.52", "-151.704, 30.9518, -31.2214, 0.52", "-159.769, 28.559, -27.4656, 0.52", "-168.424, 27.5221, -24.4108, 0.52", "-176.867, 24.7219, -22.0229, 0.52", "-185.738, 22.6881, -20.499, 0.52", "-194.845, 21.1573, -20.262, 0.52", "-203.92, 19.8889, -21.4902, 0.52", "-212.906, 18.067, -22.625, 0.52", "-221.753, 16.3516, -24.6772, 0.52", "-230.696, 14.6396, -26.2539, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-54.619, 36.5861, -27.1718, 0.29", "-56.5525, 36.724, -28.2705, 0.29", "-58.7999, 36.8279, -29.4565, 0.44", "-59.7295, 36.869, -29.8883, 0.44", "-61.2051, 36.9525, -30.4787, 0.29", "-62.7244, 37.0656, -31.0022, 0.29", "-64.2358, 37.2003, -31.4547, 0.59", "-65.284, 37.3473, -31.6097, 0.81", "-66.5872, 37.5382, -31.6868, 0.59", "-67.8331, 37.6936, -31.7695, 0.44", "-68.8747, 37.7977, -31.8804, 0.74", "-69.675, 37.883, -32.0129, 1.03", "-71.2717, 38.0572, -32.4127, 0.29", "-73.0717, 38.1842, -33.0525, 0.29", "-74.9706, 38.1588, -33.9265, 0.96", "-76.9213, 37.9214, -35.0024, 0.66", "-78.3171, 37.576, -35.8739, 0.74", "-79.6203, 37.1907, -36.7641, 0.81", "-80.8228, 36.752, -37.6767, 0.52", "-82.3519, 36.0471, -38.8745, 0.52", "-83.5665, 35.2755, -39.8695, 0.44", "-84.5076, 34.4384, -40.6404, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-230.696, 14.6396, -26.2539, 0.66", "-237.169, 9.25428, -26.2961, 0.66", "-242.852, 3.09141, -26.67, 0.66", "-248.374, -3.20638, -27.0881, 0.66", "-254.131, -9.26038, -26.2171, 0.66", "-259.137, -15.8982, -25.1868, 0.66", "-264.17, -22.5866, -24.987, 0.66", "-269.162, -29.2361, -25.9593, 0.66", "-273.692, -36.1846, -26.9872, 0.66", "-277.98, -43.3163, -27.7028, 0.66", "-281.675, -50.7745, -28.1995, 0.66", "-284.509, -58.5951, -27.8383, 0.66", "-286.994, -66.5332, -27.6527, 0.66", "-291.251, -73.7103, -27.2598, 0.66", "-295.256, -81.0325, -27.2316, 0.66", "-300.073, -87.7519, -28.5191, 0.66", "-305.17, -94.2885, -29.717, 0.66", "-311.224, -99.573, -32.2245, 0.66", "-317.098, -104.505, -35.7163, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-230.696, 14.6396, -26.2539, 0.15", "-241.428, 19.3843, -28.4324, 0.66", "-251.206, 25.9412, -30.1303, 0.66", "-261.085, 32.4252, -31.5157, 0.66", "-270.037, 40.1301, -32.6324, 0.66", "-279.286, 47.3849, -34.312, 0.66", "-287.613, 54.9427, -38.05, 0.66", "-296.39, 61.8434, -42.0812, 0.66", "-304.41, 69.5642, -46.1212, 0.66", "-313.922, 75.6031, -49.9386, 0.66", "-323.3, 80.6523, -55.2754, 0.66", "-331.322, 86.0718, -62.1838, 0.66", "-340.82, 89.9793, -68.2608, 0.66", "-348.949, 94.7555, -75.5352, 0.66", "-355.791, 100.917, -83.0225, 0.66", "-361.047, 107.601, -91.2654, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-84.5076, 34.4384, -40.6404, 0.66", "-84.7308, 33.5714, -41.2692, 0.66", "-84.9279, 32.918, -41.8679, 0.59", "-85.1259, 32.473, -42.3655, 0.29", "-85.5067, 31.8568, -43.1149, 0.29", "-85.6945, 31.6213, -43.4509, 0.44", "-86.2705, 31.0704, -44.4215, 0.59", "-86.7446, 30.7166, -45.1576, 0.59", "-87.3092, 30.3903, -46.0192, 0.59", "-87.7415, 30.1923, -46.6716, 0.66", "-88.4465, 29.9342, -47.7042, 0.66", "-89.3546, 29.6861, -49.0007, 0.22", "-92.5917, 26.8904, -55.4932, 0.22", "-95.9967, 24.0701, -61.8882, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-84.5076, 34.4384, -40.6404, 0.15", "-85.4513, 34.5411, -40.3716, 0.15", "-86.3871, 34.5669, -40.1081, 0.22", "-87.3613, 34.4597, -39.8616, 0.37", "-88.2999, 34.2712, -39.6599, 0.52", "-89.5609, 33.898, -39.3951, 0.22", "-90.2984, 33.6396, -39.2323, 0.22", "-90.8353, 33.4101, -39.0693, 0.22", "-91.9977, 32.8141, -38.6485, 0.29", "-92.6585, 32.4325, -38.386, 0.22", "-93.6524, 31.8879, -38.0588, 0.29", "-94.6925, 31.4045, -37.7955, 0.15", "-96.0297, 30.9038, -37.5018, 0.15", "-96.5611, 30.7547, -37.4057, 0.44", "-97.236, 30.62, -37.3153, 0.44", "-99.1658, 30.3455, -37.1612, 0.22", "-100.099, 30.2625, -37.097, 0.22", "-100.821, 30.2312, -37.0368, 0.52", "-101.688, 30.2458, -36.983, 0.52", "-102.698, 30.2914, -36.8799, 0.22", "-103.466, 30.3548, -36.7397, 0.44", "-104.853, 30.5095, -36.2621, 0.44", "-105.803, 30.6852, -35.88, 0.74", "-106.877, 30.9729, -35.3584, 0.88", "-116.628, 28.7883, -31.95, 0.88", "-126.125, 25.5855, -28.6435, 0.88", "-136.382, 23.7253, -26.9638, 0.88", "-146.927, 23.2116, -26.9986, 0.88", "-157.407, 22.892, -28.2378, 0.88", "-167.918, 23.5368, -28.9036, 0.88", "-178.047, 25.5107, -31.0519, 0.88", "-187.774, 26.0829, -35.1129, 0.88", "-197.588, 27.8505, -38.5465, 0.88", "-208.075, 27.4143, -39.6909, 0.88", "-218.4, 25.2411, -39.3528, 0.88", "-228.137, 21.7503, -41.3869, 0.88", "-237.484, 18.5634, -45.0722, 0.88", "-247.679, 16.7678, -47.1441, 0.88", "-257.889, 15.32, -49.4066, 0.88", "-268.307, 13.7964, -50.2018, 0.88", "-278.741, 12.2547, -49.7196, 0.88", "-288.619, 8.74226, -48.5584, 0.88", "-298.419, 6.07506, -45.6823, 0.88", "-307.566, 4.65095, -40.6043, 0.88", "-315.903, 1.8251, -34.7764, 0.88", "-322.889, -2.69201, -28.2981, 0.88", "-328.873, -8.08664, -21.5176, 0.88", "-335.707, -14.4799, -16.7432, 0.88", "-341.536, -21.6473, -11.7865, 0.88", "-345.505, -29.8249, -6.63157, 0.88", "-348.234, -38.8341, -2.18446, 0.88", "-349.209, -48.3865, 1.75207, 0.88", "-348.841, -58.5313, 3.65428, 0.88", "-349.051, -68.3534, 6.93386, 0.88", "-350.525, -77.986, 10.4917, 0.88", "-351.767, -87.5142, 14.4178, 0.88", "-352.257, -97.4648, 17.2196, 0.88", "-351.949, -107.183, 20.7992, 0.88", "-352.072, -116.964, 24.2132, 0.88", "-351.792, -126.783, 27.4875, 0.88", "-353.011, -135.954, 32.238, 0.88", "-353.435, -145.364, 36.6097, 0.88", "-355.072, -153.932, 42.3286, 0.88", "-357.881, -163.002, 46.5916, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-95.9967, 24.0701, -61.8882, 0.22", "-101.782, 18.9222, -71.7982, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-95.9967, 24.0701, -61.8882, 0.22", "-99.4246, 21.195, -71.2655, 0.22", "-104.367, 17.0898, -79.4097, 0.22", "-108.343, 14.2709, -88.5896, 0.22", "-111.699, 10.5662, -97.6784, 0.22", "-113.665, 8.71211, -107.723, 0.22", "-115.341, 5.3801, -117.403, 0.22", "-115.452, 2.11724, -127.243, 0.22", "-116.739, -2.89376, -136.184, 0.22", "-118.521, -6.85535, -145.588, 0.22", "-121.913, -10.7766, -154.567, 0.22", "-125.11, -15.4552, -163.227, 0.22", "-129.009, -20.874, -171.117, 0.22", "-133.682, -26.1794, -178.668, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_DBC_84d9723b18_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000015763654744)
    connect dend_0(0), soma_0(0.45000015763654744)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.20498, -9.63696, 0.0, 2.93949 ) }
    soma_0 { pt3dadd( 1.97921, -8.62937, 0.0, 5.10114 ) }
    soma_0 { pt3dadd( 1.75343, -7.62179, 0.0, 6.34149 ) }
    soma_0 { pt3dadd( 1.52766, -6.61421, 0.0, 7.24948 ) }
    soma_0 { pt3dadd( 1.30189, -5.60662, 0.0, 8.32859 ) }
    soma_0 { pt3dadd( 1.07612, -4.59904, 0.0, 9.63098 ) }
    soma_0 { pt3dadd( 0.850343, -3.59146, 0.0, 10.5761 ) }
    soma_0 { pt3dadd( 0.624571, -2.58388, 0.0, 11.2008 ) }
    soma_0 { pt3dadd( 0.398798, -1.57629, 0.0, 11.5851 ) }
    soma_0 { pt3dadd( 0.173026, -0.56871, 0.0, 11.8715 ) }
    soma_0 { pt3dadd( -0.0527468, 0.438873, 0.0, 11.942 ) }
    soma_0 { pt3dadd( -0.278519, 1.44646, 0.0, 11.923 ) }
    soma_0 { pt3dadd( -0.504292, 2.45404, 0.0, 11.4797 ) }
    soma_0 { pt3dadd( -0.730064, 3.46162, 0.0, 10.9001 ) }
    soma_0 { pt3dadd( -0.955837, 4.4692, 0.0, 10.1322 ) }
    soma_0 { pt3dadd( -1.18161, 5.47679, 0.0, 9.32117 ) }
    soma_0 { pt3dadd( -1.40738, 6.48437, 0.0, 8.43955 ) }
    soma_0 { pt3dadd( -1.63315, 7.49195, 0.0, 7.43264 ) }
    soma_0 { pt3dadd( -1.85893, 8.49954, 0.0, 6.41765 ) }
    soma_0 { pt3dadd( -2.0847, 9.50712, 0.0, 5.2256 ) }
    soma_0 { pt3dadd( -2.31047, 10.5147, 0.0, 2.87927 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67666, -9.45895, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 1.67666, -9.45895, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 2.08525, -10.3219, 7.68651, 3.32 ) }
    dend_25 { pt3dadd( 2.82557, -11.667, 8.84708, 2.36 ) }
    dend_25 { pt3dadd( 3.61638, -13.1037, 10.0868, 2.88 ) }
    dend_25 { pt3dadd( 3.69142, -13.2401, 10.2044, 2.65 ) }
    dend_25 { pt3dadd( 4.2629, -14.2784, 11.1003, 1.62 ) }
    dend_25 { pt3dadd( 5.0404, -15.5866, 12.3656, 1.84 ) }
    dend_25 { pt3dadd( 5.81839, -16.682, 13.7268, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.96334, 10.0313, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -1.96334, 10.0313, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -2.65692, 11.3292, -0.136885, 3.32 ) }
    dend_0 { pt3dadd( -3.14879, 12.2453, -0.299524, 2.88 ) }
    dend_0 { pt3dadd( -3.50514, 12.9109, -0.433177, 2.88 ) }
    dend_0 { pt3dadd( -4.03734, 13.905, -0.632785, 3.47 ) }
    dend_0 { pt3dadd( -4.73311, 15.2045, -0.893738, 2.51 ) }
    dend_0 { pt3dadd( -5.56035, 16.7252, -1.23158, 2.8 ) }
    dend_0 { pt3dadd( -6.29356, 18.0279, -1.58224, 4.13 ) }
    dend_0 { pt3dadd( -6.63957, 18.632, -1.77181, 4.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.31047, 10.5147, 0.0, 0.489044 ) }
    axon_0 { pt3dadd( -5.59024, 25.1517, 0.0, 0.489044 ) }
    axon_0 { pt3dadd( -8.87001, 39.7888, 0.0, 0.489044 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 5.81839, -16.682, 13.7268, 1.4 ) }
    dend_31 { pt3dadd( 6.83065, -17.4816, 12.7612, 1.4 ) }
    dend_31 { pt3dadd( 8.17757, -18.5788, 11.5201, 1.4 ) }
    dend_31 { pt3dadd( 9.09193, -19.3236, 10.7293, 1.4 ) }
    dend_31 { pt3dadd( 10.2384, -20.2731, 9.8348, 1.4 ) }
    dend_31 { pt3dadd( 11.2405, -21.1121, 9.0936, 1.18 ) }
    dend_31 { pt3dadd( 12.5168, -22.171, 8.21852, 1.4 ) }
    dend_31 { pt3dadd( 13.0965, -22.6695, 7.85556, 1.55 ) }
    dend_31 { pt3dadd( 13.6679, -23.164, 7.55361, 1.7 ) }
    dend_31 { pt3dadd( 14.9169, -24.2324, 6.96169, 1.18 ) }
    dend_31 { pt3dadd( 15.8979, -25.045, 6.57706, 1.18 ) }
    dend_31 { pt3dadd( 16.7817, -25.7611, 6.28578, 1.84 ) }
    dend_31 { pt3dadd( 17.2987, -26.1803, 6.16438, 1.84 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.81839, -16.682, 13.7268, 1.18 ) }
    dend_26 { pt3dadd( 5.53096, -17.3405, 14.6553, 1.18 ) }
    dend_26 { pt3dadd( 4.88233, -18.9592, 16.872, 1.03 ) }
    dend_26 { pt3dadd( 4.5078, -20.1447, 18.5023, 1.03 ) }
    dend_26 { pt3dadd( 4.36432, -20.8123, 19.4679, 0.96 ) }
    dend_26 { pt3dadd( 4.32571, -21.3649, 20.3412, 0.96 ) }
    dend_26 { pt3dadd( 4.33866, -22.063, 21.5545, 1.11 ) }
    dend_26 { pt3dadd( 4.42894, -22.7293, 22.8758, 1.03 ) }
    dend_26 { pt3dadd( 4.56672, -23.4598, 24.4698, 1.18 ) }
    dend_26 { pt3dadd( 4.73009, -24.3607, 26.614, 1.84 ) }
    dend_26 { pt3dadd( 4.87286, -25.396, 29.304, 1.18 ) }
    dend_26 { pt3dadd( 4.88292, -26.1875, 31.4461, 1.18 ) }
    dend_26 { pt3dadd( 4.73787, -26.7644, 33.0642, 1.18 ) }
    dend_26 { pt3dadd( 4.27677, -27.3894, 34.8084, 1.33 ) }
    dend_26 { pt3dadd( 3.55214, -27.9124, 36.2274, 1.33 ) }
    dend_26 { pt3dadd( 2.9658, -28.2047, 36.99, 1.33 ) }
    dend_26 { pt3dadd( 1.91093, -28.6335, 38.1469, 1.4 ) }
    dend_26 { pt3dadd( 0.874614, -29.0256, 39.3499, 1.47 ) }
    dend_26 { pt3dadd( -0.52533, -29.5601, 41.3127, 1.33 ) }
    dend_26 { pt3dadd( -1.54512, -29.9893, 43.2142, 1.33 ) }
    dend_26 { pt3dadd( -2.25087, -30.3423, 44.8763, 1.4 ) }
    dend_26 { pt3dadd( -3.13913, -30.8626, 47.5771, 1.4 ) }
    dend_26 { pt3dadd( -3.88552, -31.3851, 50.4512, 1.4 ) }
    dend_26 { pt3dadd( -4.40166, -31.8553, 52.7854, 1.4 ) }
    dend_26 { pt3dadd( -4.98845, -32.4897, 55.5248, 1.4 ) }
    dend_26 { pt3dadd( -5.2957, -32.8331, 56.6721, 1.11 ) }
    dend_26 { pt3dadd( -6.22011, -33.8039, 59.2213, 1.11 ) }
    dend_26 { pt3dadd( -7.34349, -34.8683, 61.5086, 1.25 ) }
    dend_26 { pt3dadd( -8.01229, -35.4662, 62.6225, 1.55 ) }
    dend_26 { pt3dadd( -9.24744, -36.5034, 64.3395, 1.55 ) }
    dend_26 { pt3dadd( -10.7536, -37.7288, 66.1662, 1.25 ) }
    dend_26 { pt3dadd( -12.4798, -39.0859, 68.1245, 1.25 ) }
    dend_26 { pt3dadd( -14.5491, -40.7342, 70.1586, 1.62 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.63957, 18.632, -1.77181, 2.88 ) }
    dend_4 { pt3dadd( -8.30144, 20.2579, -3.24683, 2.88 ) }
    dend_4 { pt3dadd( -9.50514, 21.4356, -4.31519, 2.88 ) }
    dend_4 { pt3dadd( -10.7129, 22.6172, -5.38715, 3.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.63957, 18.632, -1.77181, 2.06 ) }
    dend_1 { pt3dadd( -6.15313, 21.3556, 0.193826, 2.06 ) }
    dend_1 { pt3dadd( -5.67106, 23.8543, 1.75516, 0.96 ) }
    dend_1 { pt3dadd( -5.42669, 24.9812, 2.39479, 0.96 ) }
    dend_1 { pt3dadd( -5.04961, 26.6075, 3.21773, 0.81 ) }
    dend_1 { pt3dadd( -4.71711, 27.911, 3.81029, 0.81 ) }
    dend_1 { pt3dadd( -4.24168, 29.6503, 4.53758, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -3.90566, 30.777, 4.85243, 1.11 ) }
    dend_1 { pt3dadd( -3.49173, 32.0392, 5.09229, 1.55 ) }
    dend_1 { pt3dadd( -2.9559, 33.7015, 5.35086, 1.18 ) }
    dend_1 { pt3dadd( -2.47795, 35.2937, 5.55309, 0.88 ) }
    dend_1 { pt3dadd( -2.23823, 36.2143, 5.65403, 0.74 ) }
    dend_1 { pt3dadd( -1.91125, 37.7883, 5.79357, 1.18 ) }
    dend_1 { pt3dadd( -1.61751, 39.5469, 5.9767, 0.81 ) }
    dend_1 { pt3dadd( -1.32168, 41.6446, 6.21792, 0.96 ) }
    dend_1 { pt3dadd( -1.06821, 43.4872, 6.42039, 1.25 ) }
    dend_1 { pt3dadd( -0.842013, 45.0995, 6.59153, 1.25 ) }
    dend_1 { pt3dadd( -0.581353, 46.6053, 6.75066, 0.66 ) }
    dend_1 { pt3dadd( -0.21266, 48.172, 6.92279, 0.88 ) }
    dend_1 { pt3dadd( 0.274165, 49.5734, 7.03847, 0.52 ) }
    dend_1 { pt3dadd( 0.864261, 50.893, 7.10501, 0.96 ) }
    dend_1 { pt3dadd( 1.29105, 51.7266, 7.12072, 0.96 ) }
    dend_1 { pt3dadd( 2.17784, 53.3027, 7.15132, 0.74 ) }
    dend_1 { pt3dadd( 2.93209, 54.5464, 7.17557, 0.88 ) }
    dend_1 { pt3dadd( 3.87692, 56.0685, 7.20037, 0.88 ) }
    dend_1 { pt3dadd( 4.91232, 57.8086, 7.33516, 0.96 ) }
    dend_1 { pt3dadd( 5.22364, 58.3492, 7.41386, 0.96 ) }
    dend_1 { pt3dadd( 6.03621, 59.8337, 7.7369, 0.96 ) }
    dend_1 { pt3dadd( 6.38457, 60.5107, 7.9523, 1.11 ) }
    dend_1 { pt3dadd( 6.79678, 61.3588, 8.28601, 0.96 ) }
    dend_1 { pt3dadd( 7.55305, 62.8478, 9.03174, 0.81 ) }
    dend_1 { pt3dadd( 8.21033, 64.0825, 9.75097, 0.66 ) }
    dend_1 { pt3dadd( 9.06724, 65.696, 10.7274, 0.59 ) }
    dend_1 { pt3dadd( 9.7846, 67.0654, 11.6704, 0.88 ) }
    dend_1 { pt3dadd( 10.4608, 68.3594, 12.6037, 1.4 ) }
    dend_1 { pt3dadd( 11.4605, 70.2289, 14.0358, 0.88 ) }
    dend_1 { pt3dadd( 12.3153, 71.7533, 15.2862, 0.74 ) }
    dend_1 { pt3dadd( 12.7813, 72.5878, 16.0151, 0.74 ) }
    dend_1 { pt3dadd( 13.9772, 74.5621, 17.8148, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.87001, 39.7888, 0.0, 0.158836 ) }
    axon_1 { pt3dadd( -12.1498, 54.4258, 0.0, 0.158836 ) }
    axon_1 { pt3dadd( -15.4296, 69.0629, 0.0, 0.158836 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 35/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 17.2987, -26.1803, 6.16438, 1.7 ) }
    dend_35 { pt3dadd( 18.3265, -26.1907, 7.75836, 1.7 ) }
    dend_35 { pt3dadd( 19.1909, -26.2935, 9.15595, 1.25 ) }
    dend_35 { pt3dadd( 19.8524, -26.4377, 10.2598, 1.25 ) }
    dend_35 { pt3dadd( 20.5142, -26.6413, 11.3529, 1.55 ) }
    dend_35 { pt3dadd( 21.3489, -26.9566, 12.7003, 1.4 ) }
    dend_35 { pt3dadd( 22.1355, -27.2875, 13.9374, 1.62 ) }
    dend_35 { pt3dadd( 22.9145, -27.6831, 15.0874, 1.55 ) }
    dend_35 { pt3dadd( 23.8238, -28.1848, 16.3872, 1.4 ) }
    dend_35 { pt3dadd( 24.6011, -28.6259, 17.4436, 1.47 ) }
    dend_35 { pt3dadd( 25.7303, -29.2748, 18.8945, 1.18 ) }
    dend_35 { pt3dadd( 26.8122, -29.8719, 20.1784, 1.18 ) }
    dend_35 { pt3dadd( 28.0111, -30.496, 21.4823, 1.03 ) }
    dend_35 { pt3dadd( 29.0271, -30.9809, 22.4849, 1.03 ) }
    dend_35 { pt3dadd( 29.4624, -31.164, 22.8729, 1.25 ) }
    dend_35 { pt3dadd( 30.5669, -31.5662, 23.7898, 1.11 ) }
    dend_35 { pt3dadd( 31.5238, -31.8638, 24.6103, 1.33 ) }
    dend_35 { pt3dadd( 32.1272, -32.0252, 25.1313, 1.62 ) }
    dend_35 { pt3dadd( 33.5125, -32.3678, 26.3278, 1.33 ) }
    dend_35 { pt3dadd( 34.875, -32.6723, 27.5175, 1.25 ) }
    dend_35 { pt3dadd( 36.0407, -32.8933, 28.5668, 1.18 ) }
    dend_35 { pt3dadd( 38.0296, -33.1879, 30.4129, 1.47 ) }
    dend_35 { pt3dadd( 38.5955, -33.2587, 30.9696, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.2987, -26.1803, 6.16438, 0.88 ) }
    dend_32 { pt3dadd( 17.3609, -27.5265, 6.93731, 0.88 ) }
    dend_32 { pt3dadd( 17.2657, -29.5351, 8.16123, 0.74 ) }
    dend_32 { pt3dadd( 17.0386, -31.6076, 9.51013, 0.74 ) }
    dend_32 { pt3dadd( 16.812, -33.2273, 10.5387, 0.74 ) }
    dend_32 { pt3dadd( 16.5252, -34.9638, 11.5922, 0.96 ) }
    dend_32 { pt3dadd( 16.2053, -36.6944, 12.5843, 1.7 ) }
    dend_32 { pt3dadd( 15.5693, -39.2872, 14.0251, 0.66 ) }
    dend_32 { pt3dadd( 15.0329, -41.0892, 14.8983, 0.74 ) }
    dend_32 { pt3dadd( 14.6094, -42.446, 15.3555, 0.88 ) }
    dend_32 { pt3dadd( 14.2257, -43.6861, 15.5585, 1.11 ) }
    dend_32 { pt3dadd( 13.8024, -45.1808, 15.5532, 1.33 ) }
    dend_32 { pt3dadd( 13.3126, -47.1935, 15.2881, 0.74 ) }
    dend_32 { pt3dadd( 12.9662, -49.0645, 14.8642, 0.74 ) }
    dend_32 { pt3dadd( 12.792, -50.3751, 14.4725, 0.59 ) }
    dend_32 { pt3dadd( 12.5813, -52.6736, 13.7399, 0.88 ) }
    dend_32 { pt3dadd( 12.4779, -54.6673, 13.0988, 0.59 ) }
    dend_32 { pt3dadd( 12.4512, -55.7181, 12.7514, 0.59 ) }
    dend_32 { pt3dadd( 12.4603, -57.6305, 12.1383, 0.81 ) }
    dend_32 { pt3dadd( 12.5082, -60.0805, 11.452, 0.74 ) }
    dend_32 { pt3dadd( 12.5471, -61.31, 11.1129, 0.59 ) }
    dend_32 { pt3dadd( 12.629, -62.9137, 10.733, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -14.5491, -40.7342, 70.1586, 0.52 ) }
    dend_30 { pt3dadd( -15.6823, -40.3451, 73.7875, 0.52 ) }
    dend_30 { pt3dadd( -16.177, -40.1194, 75.5886, 0.52 ) }
    dend_30 { pt3dadd( -16.5455, -39.9232, 77.0082, 0.52 ) }
    dend_30 { pt3dadd( -16.8299, -39.7687, 78.1758, 0.52 ) }
    dend_30 { pt3dadd( -17.2765, -39.5141, 79.9371, 0.52 ) }
    dend_30 { pt3dadd( -17.6077, -39.3223, 81.1824, 0.52 ) }
    dend_30 { pt3dadd( -17.9414, -39.1025, 82.3188, 0.52 ) }
    dend_30 { pt3dadd( -18.4831, -38.739, 84.0438, 0.52 ) }
    dend_30 { pt3dadd( -19.2347, -38.2356, 86.1671, 0.52 ) }
    dend_30 { pt3dadd( -19.8163, -37.8571, 87.5951, 0.81 ) }
    dend_30 { pt3dadd( -20.4183, -37.4477, 88.8701, 0.81 ) }
    dend_30 { pt3dadd( -20.9259, -37.058, 89.866, 0.59 ) }
    dend_30 { pt3dadd( -21.9809, -36.1436, 91.8991, 0.59 ) }
    dend_30 { pt3dadd( -22.7304, -35.3571, 93.4085, 0.52 ) }
    dend_30 { pt3dadd( -23.348, -34.5804, 94.6862, 0.37 ) }
    dend_30 { pt3dadd( -24.1009, -33.4469, 96.4366, 0.44 ) }
    dend_30 { pt3dadd( -24.7681, -32.2341, 98.1352, 0.29 ) }
    dend_30 { pt3dadd( -25.2457, -31.1875, 99.5429, 0.29 ) }
    dend_30 { pt3dadd( -25.7635, -29.8395, 101.162, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -26.1478, -28.7295, 102.449, 0.29 ) }
    dend_30 { pt3dadd( -26.6865, -27.0647, 104.311, 0.29 ) }
    dend_30 { pt3dadd( -26.9592, -26.1902, 105.281, 0.29 ) }
    dend_30 { pt3dadd( -27.548, -24.3355, 107.331, 0.29 ) }
    dend_30 { pt3dadd( -27.9379, -23.1164, 108.654, 0.22 ) }
    dend_30 { pt3dadd( -28.5932, -21.1467, 110.815, 0.22 ) }
    dend_30 { pt3dadd( -28.8907, -20.2635, 111.814, 0.22 ) }
    dend_30 { pt3dadd( -29.4317, -18.7453, 113.514, 0.22 ) }
    dend_30 { pt3dadd( -30.0894, -17.0265, 115.548, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -14.5491, -40.7342, 70.1586, 1.03 ) }
    dend_27 { pt3dadd( -14.582, -41.4901, 70.1425, 1.03 ) }
    dend_27 { pt3dadd( -14.6435, -42.5515, 70.247, 0.74 ) }
    dend_27 { pt3dadd( -14.7046, -43.8047, 70.4301, 0.74 ) }
    dend_27 { pt3dadd( -14.7416, -44.8049, 70.5906, 0.88 ) }
    dend_27 { pt3dadd( -14.7649, -46.1518, 70.7623, 0.96 ) }
    dend_27 { pt3dadd( -14.7643, -46.8421, 70.8334, 0.96 ) }
    dend_27 { pt3dadd( -14.712, -48.712, 71.0025, 1.03 ) }
    dend_27 { pt3dadd( -14.6523, -49.9612, 71.0999, 0.66 ) }
    dend_27 { pt3dadd( -14.5797, -50.9616, 71.1738, 0.52 ) }
    dend_27 { pt3dadd( -14.4375, -52.2327, 71.2544, 0.66 ) }
    dend_27 { pt3dadd( -14.2664, -53.2941, 71.3011, 0.96 ) }
    dend_27 { pt3dadd( -14.0787, -54.419, 71.3136, 1.11 ) }
    dend_27 { pt3dadd( -13.9987, -54.8547, 71.2994, 1.11 ) }
    dend_27 { pt3dadd( -13.7727, -55.9768, 71.2918, 0.66 ) }
    dend_27 { pt3dadd( -13.6302, -56.6557, 71.3043, 0.66 ) }
    dend_27 { pt3dadd( -13.4255, -57.6113, 71.3443, 0.66 ) }
    dend_27 { pt3dadd( -13.1875, -58.7598, 71.4422, 0.88 ) }
    dend_27 { pt3dadd( -12.9407, -60.0358, 71.6146, 0.81 ) }
    dend_27 { pt3dadd( -12.689, -61.4994, 71.9108, 0.74 ) }
    dend_27 { pt3dadd( -12.4942, -62.8286, 72.2452, 0.66 ) }
    dend_27 { pt3dadd( -12.3399, -64.0992, 72.6319, 0.52 ) }
    dend_27 { pt3dadd( -12.1626, -65.7876, 73.2066, 0.52 ) }
    dend_27 { pt3dadd( -12.0708, -66.7651, 73.5902, 0.52 ) }
    dend_27 { pt3dadd( -12.0012, -68.1032, 74.143, 0.52 ) }
    dend_27 { pt3dadd( -11.9775, -68.9899, 74.509, 0.66 ) }
    dend_27 { pt3dadd( -11.9547, -69.9666, 74.8945, 0.96 ) }
    dend_27 { pt3dadd( -11.9083, -71.3542, 75.3943, 1.03 ) }
    dend_27 { pt3dadd( -11.8236, -72.8166, 75.8053, 0.74 ) }
    dend_27 { pt3dadd( -11.7134, -74.1737, 76.1084, 0.44 ) }
    dend_27 { pt3dadd( -11.6221, -75.0369, 76.2601, 0.22 ) }
    dend_27 { pt3dadd( -11.5731, -75.4254, 76.3214, 0.22 ) }
    dend_27 { pt3dadd( -11.4224, -76.3938, 76.445, 0.52 ) }
    dend_27 { pt3dadd( -11.1881, -77.5622, 76.5107, 0.52 ) }
    dend_27 { pt3dadd( -10.8289, -78.9676, 76.4825, 0.22 ) }
    dend_27 { pt3dadd( -10.6136, -79.6979, 76.4822, 0.22 ) }
    dend_27 { pt3dadd( -10.3172, -80.6769, 76.5306, 0.66 ) }
    dend_27 { pt3dadd( -9.88225, -82.0572, 76.6479, 0.66 ) }
    dend_27 { pt3dadd( -9.43137, -83.3969, 76.7995, 0.37 ) }
    dend_27 { pt3dadd( -9.06721, -84.4216, 76.9914, 0.22 ) }
    dend_27 { pt3dadd( -8.47444, -86.1089, 77.4029, 0.29 ) }
    dend_27 { pt3dadd( -8.09905, -87.2153, 77.5941, 0.29 ) }
    dend_27 { pt3dadd( -7.9151, -87.7771, 77.6558, 0.66 ) }
    dend_27 { pt3dadd( -7.62611, -88.6644, 77.6927, 0.96 ) }
    dend_27 { pt3dadd( -7.16683, -90.092, 77.6648, 0.96 ) }
    dend_27 { pt3dadd( -6.7514, -91.3408, 77.5184, 0.37 ) }
    dend_27 { pt3dadd( -5.90717, -93.8714, 77.02, 0.44 ) }
    dend_27 { pt3dadd( -5.67681, -94.6117, 76.863, 0.44 ) }
    dend_27 { pt3dadd( -5.26931, -96.0622, 76.6107, 0.52 ) }
    dend_27 { pt3dadd( -4.91156, -97.4583, 76.4202, 0.44 ) }
    dend_27 { pt3dadd( -4.67381, -98.4627, 76.3302, 0.44 ) }
    dend_27 { pt3dadd( -4.34925, -99.9418, 76.3147, 0.44 ) }
    dend_27 { pt3dadd( -4.02141, -101.598, 76.4916, 0.44 ) }
    dend_27 { pt3dadd( -3.78427, -102.933, 76.6789, 0.44 ) }
    dend_27 { pt3dadd( -3.63568, -103.917, 76.8437, 0.44 ) }
    dend_27 { pt3dadd( -3.50236, -104.854, 77.0156, 0.44 ) }
    dend_27 { pt3dadd( -3.39698, -105.868, 77.2142, 0.52 ) }
    dend_27 { pt3dadd( -3.31592, -107.112, 77.4571, 0.52 ) }
    dend_27 { pt3dadd( -3.28755, -107.861, 77.591, 0.52 ) }
    dend_27 { pt3dadd( -3.2728, -109.543, 77.828, 0.22 ) }
    dend_27 { pt3dadd( -3.26213, -110.917, 77.9818, 0.22 ) }
    dend_27 { pt3dadd( -3.25002, -112.151, 78.0841, 0.22 ) }
    dend_27 { pt3dadd( -3.23409, -113.436, 78.1531, 0.29 ) }
    dend_27 { pt3dadd( -3.18948, -114.632, 78.1482, 0.29 ) }
    dend_27 { pt3dadd( -3.10605, -116.021, 78.2149, 0.29 ) }
    dend_27 { pt3dadd( -2.95389, -117.776, 78.3771, 0.22 ) }
    dend_27 { pt3dadd( -2.87567, -118.467, 78.4643, 0.29 ) }
    dend_27 { pt3dadd( -2.68672, -119.763, 78.6573, 0.37 ) }
    dend_27 { pt3dadd( -2.43747, -121.281, 78.9175, 0.37 ) }
    dend_27 { pt3dadd( -2.00994, -123.807, 79.3122, 0.22 ) }
    dend_27 { pt3dadd( -1.86642, -124.608, 79.4236, 0.22 ) }
    dend_27 { pt3dadd( -1.70482, -125.536, 79.5283, 0.37 ) }
    dend_27 { pt3dadd( -1.5255, -126.584, 79.6079, 0.37 ) }
    dend_27 { pt3dadd( -1.21947, -128.382, 79.7071, 0.29 ) }
    dend_27 { pt3dadd( -1.02565, -129.583, 79.7453, 0.22 ) }
    dend_27 { pt3dadd( -0.869272, -130.548, 79.7202, 0.22 ) }
    dend_27 { pt3dadd( -0.715098, -131.603, 79.7596, 0.29 ) }
    dend_27 { pt3dadd( -0.545312, -132.98, 79.8932, 0.29 ) }
    dend_27 { pt3dadd( -0.440057, -134.154, 80.1382, 0.29 ) }
    dend_27 { pt3dadd( -0.386382, -135.023, 80.3693, 0.29 ) }
    dend_27 { pt3dadd( -0.308488, -136.64, 80.9014, 0.15 ) }
    dend_27 { pt3dadd( -0.259853, -138.213, 81.4867, 0.15 ) }
    dend_27 { pt3dadd( -0.242871, -138.941, 81.7974, 0.37 ) }
    dend_27 { pt3dadd( -0.200389, -140.875, 82.7532, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.7129, 22.6172, -5.38715, 2.8 ) }
    dend_10 { pt3dadd( -12.1453, 22.8172, -6.24143, 2.8 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.7129, 22.6172, -5.38715, 1.77 ) }
    dend_5 { pt3dadd( -10.8141, 24.1371, -7.08815, 1.77 ) }
    dend_5 { pt3dadd( -11.0663, 26.197, -9.47638, 1.4 ) }
    dend_5 { pt3dadd( -11.3102, 27.8098, -11.3492, 1.4 ) }
    dend_5 { pt3dadd( -11.4914, 28.8423, -12.5733, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -11.7733, 30.1895, -14.2117, 1.84 ) }
    dend_5 { pt3dadd( -12.1305, 31.7681, -16.1413, 1.84 ) }
    dend_5 { pt3dadd( -12.5392, 33.2214, -17.985, 1.4 ) }
    dend_5 { pt3dadd( -12.9848, 34.7681, -19.9004, 1.84 ) }
    dend_5 { pt3dadd( -13.4917, 36.6073, -22.0272, 1.62 ) }
    dend_5 { pt3dadd( -14.0784, 38.8484, -24.4135, 1.77 ) }
    dend_5 { pt3dadd( -14.4092, 40.1244, -25.5898, 1.77 ) }
    dend_5 { pt3dadd( -14.9771, 42.1862, -27.2693, 1.62 ) }
    dend_5 { pt3dadd( -15.3668, 43.5023, -28.2174, 1.62 ) }
    dend_5 { pt3dadd( -16.0795, 45.6758, -29.6291, 1.47 ) }
    dend_5 { pt3dadd( -16.6079, 47.1632, -30.4895, 1.47 ) }
    dend_5 { pt3dadd( -17.6359, 49.9153, -31.995, 1.4 ) }
    dend_5 { pt3dadd( -18.4413, 52.0123, -33.1625, 1.47 ) }
    dend_5 { pt3dadd( -19.1742, 53.9485, -34.3153, 1.55 ) }
    dend_5 { pt3dadd( -19.5687, 55.0691, -35.0809, 1.55 ) }
    dend_5 { pt3dadd( -20.1604, 57.085, -36.6195, 1.25 ) }
    dend_5 { pt3dadd( -20.5671, 59.0541, -38.2254, 1.25 ) }
    dend_5 { pt3dadd( -20.7187, 60.6399, -39.5513, 1.4 ) }
    dend_5 { pt3dadd( -20.722, 62.3146, -40.9079, 1.25 ) }
    dend_5 { pt3dadd( -20.5686, 64.3071, -42.3905, 1.25 ) }
    dend_5 { pt3dadd( -20.4115, 65.7447, -43.3095, 1.25 ) }
    dend_5 { pt3dadd( -20.2119, 67.4663, -44.3369, 1.47 ) }
    dend_5 { pt3dadd( -20.1356, 68.4718, -44.8642, 1.62 ) }
    dend_5 { pt3dadd( -20.136, 69.7518, -45.4287, 1.33 ) }
    dend_5 { pt3dadd( -20.3763, 72.5574, -46.4215, 1.11 ) }
    dend_5 { pt3dadd( -20.6979, 74.2672, -46.9768, 1.11 ) }
    dend_5 { pt3dadd( -21.1883, 76.2855, -47.6451, 1.25 ) }
    dend_5 { pt3dadd( -21.5292, 77.414, -48.0388, 1.47 ) }
    dend_5 { pt3dadd( -22.1469, 79.1755, -48.6777, 1.4 ) }
    dend_5 { pt3dadd( -22.8154, 80.7969, -49.2858, 1.25 ) }
    dend_5 { pt3dadd( -23.9736, 83.0072, -50.0777, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.9772, 74.5621, 17.8148, 0.15 ) }
    dend_3 { pt3dadd( 13.8196, 74.3309, 22.3642, 0.15 ) }
    dend_3 { pt3dadd( 13.7557, 74.2941, 24.5213, 0.15 ) }
    dend_3 { pt3dadd( 13.7215, 74.3484, 25.8479, 0.29 ) }
    dend_3 { pt3dadd( 13.6859, 74.7278, 29.3184, 0.22 ) }
    dend_3 { pt3dadd( 13.7038, 75.2031, 32.2254, 0.22 ) }
    dend_3 { pt3dadd( 13.7435, 75.7405, 34.5985, 0.37 ) }
    dend_3 { pt3dadd( 13.7655, 75.8733, 35.0538, 0.81 ) }
    dend_3 { pt3dadd( 13.8522, 76.4627, 36.3307, 0.15 ) }
    dend_3 { pt3dadd( 14.0042, 77.469, 37.8964, 0.22 ) }
    dend_3 { pt3dadd( 14.079, 77.9067, 38.4415, 0.59 ) }
    dend_3 { pt3dadd( 14.2339, 78.7216, 39.4588, 1.03 ) }
    dend_3 { pt3dadd( 14.452, 80.1586, 41.4541, 0.15 ) }
    dend_3 { pt3dadd( 14.5046, 80.6528, 42.3255, 0.29 ) }
    dend_3 { pt3dadd( 14.5492, 81.5934, 44.6104, 0.22 ) }
    dend_3 { pt3dadd( 14.4965, 82.4608, 47.3276, 0.37 ) }
    dend_3 { pt3dadd( 14.4257, 82.8808, 49.0252, 0.37 ) }
    dend_3 { pt3dadd( 14.356, 83.1198, 50.4777, 0.44 ) }
    dend_3 { pt3dadd( 14.1905, 83.3894, 53.0872, 0.37 ) }
    dend_3 { pt3dadd( 14.0021, 83.5991, 55.7603, 0.37 ) }
    dend_3 { pt3dadd( 13.8405, 83.6955, 57.4717, 0.37 ) }
    dend_3 { pt3dadd( 13.5995, 83.7838, 59.6551, 0.37 ) }
    dend_3 { pt3dadd( 13.2773, 83.9038, 63.0209, 0.37 ) }
    dend_3 { pt3dadd( 13.0498, 84.0478, 66.6893, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 13.9772, 74.5621, 17.8148, 0.96 ) }
    dend_2 { pt3dadd( 15.124, 76.5004, 16.9717, 0.96 ) }
    dend_2 { pt3dadd( 15.5223, 77.1581, 16.7395, 0.88 ) }
    dend_2 { pt3dadd( 16.2523, 78.3218, 16.3928, 0.74 ) }
    dend_2 { pt3dadd( 17.0818, 79.6303, 16.0745, 0.96 ) }
    dend_2 { pt3dadd( 17.831, 80.8309, 15.7762, 0.81 ) }
    dend_2 { pt3dadd( 18.4907, 81.9138, 15.5011, 0.44 ) }
    dend_2 { pt3dadd( 19.1118, 83.0163, 15.2825, 0.44 ) }
    dend_2 { pt3dadd( 19.548, 83.8802, 15.0828, 0.66 ) }
    dend_2 { pt3dadd( 20.2121, 85.3437, 14.7132, 0.52 ) }
    dend_2 { pt3dadd( 20.7179, 86.5776, 14.3682, 0.74 ) }
    dend_2 { pt3dadd( 21.1172, 87.6403, 14.0182, 1.11 ) }
    dend_2 { pt3dadd( 21.4572, 88.6779, 13.6647, 0.66 ) }
    dend_2 { pt3dadd( 21.924, 90.218, 13.153, 0.66 ) }
    dend_2 { pt3dadd( 22.2295, 91.247, 12.8309, 0.66 ) }
    dend_2 { pt3dadd( 22.6423, 92.5561, 12.4837, 0.81 ) }
    dend_2 { pt3dadd( 22.9684, 93.4846, 12.31, 0.59 ) }
    dend_2 { pt3dadd( 23.4992, 94.8729, 12.075, 0.52 ) }
    dend_2 { pt3dadd( 23.8947, 95.8849, 11.9171, 0.52 ) }
    dend_2 { pt3dadd( 24.1422, 96.498, 11.8389, 0.52 ) }
    dend_2 { pt3dadd( 24.6266, 97.7106, 11.7326, 0.66 ) }
    dend_2 { pt3dadd( 25.0548, 98.7441, 11.6946, 0.88 ) }
    dend_2 { pt3dadd( 25.6406, 100.035, 11.671, 1.03 ) }
    dend_2 { pt3dadd( 26.2967, 101.346, 11.6717, 0.52 ) }
    dend_2 { pt3dadd( 26.8639, 102.445, 11.7007, 0.29 ) }
    dend_2 { pt3dadd( 27.4151, 103.461, 11.7562, 0.29 ) }
    dend_2 { pt3dadd( 28.071, 104.635, 11.9294, 0.52 ) }
    dend_2 { pt3dadd( 28.7674, 105.819, 12.2216, 0.22 ) }
    dend_2 { pt3dadd( 29.1471, 106.444, 12.4333, 0.15 ) }
    dend_2 { pt3dadd( 29.5978, 107.214, 12.7125, 0.66 ) }
    dend_2 { pt3dadd( 30.0935, 108.229, 13.1133, 0.29 ) }
    dend_2 { pt3dadd( 30.5863, 109.556, 13.721, 0.52 ) }
    dend_2 { pt3dadd( 30.7759, 110.224, 14.0716, 1.03 ) }
    dend_2 { pt3dadd( 31.0304, 111.229, 14.6432, 0.37 ) }
    dend_2 { pt3dadd( 31.2669, 112.108, 15.095, 0.44 ) }
    dend_2 { pt3dadd( 31.7184, 113.651, 15.7248, 0.59 ) }
    dend_2 { pt3dadd( 32.1731, 115.226, 16.1707, 0.88 ) }
    dend_2 { pt3dadd( 32.4386, 116.164, 16.3142, 0.88 ) }
    dend_2 { pt3dadd( 32.6724, 117.008, 16.3829, 0.66 ) }
    dend_2 { pt3dadd( 33.209, 118.852, 16.316, 0.29 ) }
    dend_2 { pt3dadd( 33.6378, 120.233, 16.0921, 0.66 ) }
    dend_2 { pt3dadd( 33.9843, 121.312, 15.7924, 0.44 ) }
    dend_2 { pt3dadd( 34.1987, 122.032, 15.5605, 0.44 ) }
    dend_2 { pt3dadd( 34.4991, 123.198, 15.2225, 0.22 ) }
    dend_2 { pt3dadd( 34.772, 124.402, 14.9525, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 34.9748, 125.296, 14.8922, 0.66 ) }
    dend_2 { pt3dadd( 35.1541, 126.006, 14.9242, 0.88 ) }
    dend_2 { pt3dadd( 35.4918, 127.203, 15.0766, 0.52 ) }
    dend_2 { pt3dadd( 35.7827, 128.145, 15.3216, 0.52 ) }
    dend_2 { pt3dadd( 36.184, 129.384, 15.8329, 0.52 ) }
    dend_2 { pt3dadd( 36.7574, 131.116, 16.7553, 0.52 ) }
    dend_2 { pt3dadd( 37.0651, 131.987, 17.2911, 0.96 ) }
    dend_2 { pt3dadd( 37.5003, 133.092, 18.0402, 0.66 ) }
    dend_2 { pt3dadd( 38.0972, 134.404, 18.9769, 0.22 ) }
    dend_2 { pt3dadd( 38.4308, 135.077, 19.4553, 0.22 ) }
    dend_2 { pt3dadd( 38.8117, 135.815, 19.9279, 0.29 ) }
    dend_2 { pt3dadd( 39.354, 136.832, 20.4355, 0.37 ) }
    dend_2 { pt3dadd( 40.0721, 138.066, 20.8788, 0.52 ) }
    dend_2 { pt3dadd( 40.6478, 138.939, 21.0637, 0.81 ) }
    dend_2 { pt3dadd( 41.1595, 139.661, 21.0754, 0.81 ) }
    dend_2 { pt3dadd( 42.0918, 140.928, 20.9144, 0.22 ) }
    dend_2 { pt3dadd( 42.7407, 141.781, 20.7947, 0.59 ) }
    dend_2 { pt3dadd( 43.6923, 143.023, 20.5936, 0.59 ) }
    dend_2 { pt3dadd( 44.4763, 144.047, 20.4313, 0.22 ) }
    dend_2 { pt3dadd( 45.4681, 145.392, 20.2837, 0.15 ) }
    dend_2 { pt3dadd( 46.1665, 146.433, 20.2374, 0.15 ) }
    dend_2 { pt3dadd( 47.3073, 148.334, 20.4754, 0.59 ) }
    dend_2 { pt3dadd( 47.6827, 149.04, 20.679, 0.59 ) }
    dend_2 { pt3dadd( 48.1249, 149.985, 21.0642, 0.59 ) }
    dend_2 { pt3dadd( 48.4951, 150.856, 21.4584, 0.29 ) }
    dend_2 { pt3dadd( 48.9055, 151.848, 21.9345, 0.22 ) }
    dend_2 { pt3dadd( 49.6874, 153.677, 22.7131, 0.22 ) }
    dend_2 { pt3dadd( 49.9304, 154.228, 22.8716, 0.22 ) }
    dend_2 { pt3dadd( 50.3823, 155.196, 23.1019, 0.52 ) }
    dend_2 { pt3dadd( 50.9207, 156.308, 23.3055, 0.59 ) }
    dend_2 { pt3dadd( 51.2608, 157.0, 23.3879, 0.59 ) }
    dend_2 { pt3dadd( 51.9107, 158.284, 23.508, 0.29 ) }
    dend_2 { pt3dadd( 52.3438, 159.186, 23.5579, 0.29 ) }
    dend_2 { pt3dadd( 52.8652, 160.4, 23.6667, 0.37 ) }
    dend_2 { pt3dadd( 53.1559, 161.2, 23.7688, 0.29 ) }
    dend_2 { pt3dadd( 53.4263, 162.151, 23.9957, 0.44 ) }
    dend_2 { pt3dadd( 53.7923, 163.72, 24.4811, 0.44 ) }
    dend_2 { pt3dadd( 54.0235, 164.833, 24.8627, 0.66 ) }
    dend_2 { pt3dadd( 54.2399, 165.866, 25.2367, 0.88 ) }
    dend_2 { pt3dadd( 54.5234, 167.233, 25.7192, 0.66 ) }
    dend_2 { pt3dadd( 55.147, 169.796, 26.565, 0.37 ) }
    dend_2 { pt3dadd( 55.5262, 171.065, 26.991, 0.22 ) }
    dend_2 { pt3dadd( 55.9118, 172.219, 27.3201, 0.52 ) }
    dend_2 { pt3dadd( 56.2114, 172.971, 27.5008, 0.59 ) }
    dend_2 { pt3dadd( 56.6935, 174.019, 27.6603, 0.29 ) }
    dend_2 { pt3dadd( 57.2183, 175.054, 27.7844, 0.22 ) }
    dend_2 { pt3dadd( 58.1869, 176.921, 27.9644, 0.15 ) }
    dend_2 { pt3dadd( 58.9212, 178.386, 28.201, 0.37 ) }
    dend_2 { pt3dadd( 59.3558, 179.317, 28.4032, 0.37 ) }
    dend_2 { pt3dadd( 59.7912, 180.36, 28.6533, 0.37 ) }
    dend_2 { pt3dadd( 60.6696, 182.589, 29.202, 0.81 ) }
    dend_2 { pt3dadd( 61.1026, 183.76, 29.5015, 0.96 ) }
    dend_2 { pt3dadd( 61.4321, 184.687, 29.7278, 0.52 ) }
    dend_2 { pt3dadd( 61.8093, 185.789, 30.0649, 0.22 ) }
    dend_2 { pt3dadd( 62.2498, 187.215, 30.5156, 0.29 ) }
    dend_2 { pt3dadd( 62.6766, 188.665, 30.9388, 0.22 ) }
    dend_2 { pt3dadd( 63.0209, 189.86, 31.2165, 0.74 ) }
    dend_2 { pt3dadd( 63.5238, 191.605, 31.6212, 0.29 ) }
    dend_2 { pt3dadd( 64.0789, 193.515, 32.1349, 0.52 ) }
    dend_2 { pt3dadd( 64.3874, 194.538, 32.4455, 0.59 ) }
    dend_2 { pt3dadd( 64.7406, 195.719, 32.8341, 0.29 ) }
    dend_2 { pt3dadd( 64.9666, 196.583, 33.094, 0.29 ) }
    dend_2 { pt3dadd( 65.2209, 197.64, 33.4264, 0.29 ) }
    dend_2 { pt3dadd( 65.4769, 198.685, 33.8335, 0.66 ) }
    dend_2 { pt3dadd( 65.682, 199.442, 34.1694, 0.96 ) }
    dend_2 { pt3dadd( 65.9306, 200.288, 34.6723, 0.37 ) }
    dend_2 { pt3dadd( 66.29, 201.521, 35.5303, 0.29 ) }
    dend_2 { pt3dadd( 66.655, 203.019, 36.6284, 0.37 ) }
    dend_2 { pt3dadd( 66.9252, 204.381, 37.6464, 0.66 ) }
    dend_2 { pt3dadd( 67.0641, 205.194, 38.2381, 0.44 ) }
    dend_2 { pt3dadd( 67.3105, 206.691, 39.2868, 0.88 ) }
    dend_2 { pt3dadd( 67.4624, 207.616, 39.8991, 1.11 ) }
    dend_2 { pt3dadd( 67.7202, 209.372, 40.9698, 0.22 ) }
    dend_2 { pt3dadd( 67.8188, 210.248, 41.3641, 0.22 ) }
    dend_2 { pt3dadd( 67.891, 211.148, 41.6751, 0.15 ) }
    dend_2 { pt3dadd( 67.9243, 212.19, 41.967, 0.15 ) }
    dend_2 { pt3dadd( 67.9256, 212.954, 42.1349, 0.15 ) }
    dend_2 { pt3dadd( 67.9109, 214.177, 42.4186, 0.37 ) }
    dend_2 { pt3dadd( 67.9107, 215.405, 42.7092, 0.37 ) }
    dend_2 { pt3dadd( 67.9078, 216.16, 42.9004, 0.22 ) }
    dend_2 { pt3dadd( 67.9092, 217.273, 43.1898, 0.44 ) }
    dend_2 { pt3dadd( 67.9164, 217.876, 43.3412, 0.44 ) }
    dend_2 { pt3dadd( 67.9495, 218.737, 43.5407, 0.44 ) }
    dend_2 { pt3dadd( 68.0121, 219.499, 43.6711, 0.66 ) }
    dend_2 { pt3dadd( 68.1388, 220.342, 43.8227, 0.37 ) }
    dend_2 { pt3dadd( 68.3515, 221.301, 43.9903, 0.37 ) }
    dend_2 { pt3dadd( 68.6663, 222.329, 44.1568, 0.22 ) }
    dend_2 { pt3dadd( 68.8239, 222.778, 44.2195, 0.22 ) }
    dend_2 { pt3dadd( 69.2456, 223.939, 44.3645, 0.22 ) }
    dend_2 { pt3dadd( 69.8017, 225.459, 44.4784, 0.52 ) }
    dend_2 { pt3dadd( 70.1213, 226.347, 44.5103, 0.96 ) }
    dend_2 { pt3dadd( 70.3436, 227.003, 44.5124, 0.96 ) }
    dend_2 { pt3dadd( 70.7573, 228.313, 44.4806, 0.22 ) }
    dend_2 { pt3dadd( 71.046, 229.371, 44.4221, 0.29 ) }
    dend_2 { pt3dadd( 71.3377, 230.7, 44.2754, 0.29 ) }
    dend_2 { pt3dadd( 71.4697, 231.483, 44.1373, 0.81 ) }
    dend_2 { pt3dadd( 71.5709, 232.173, 44.0049, 0.52 ) }
    dend_2 { pt3dadd( 71.708, 233.297, 43.7598, 0.37 ) }
    dend_2 { pt3dadd( 71.7742, 234.082, 43.5052, 0.37 ) }
    dend_2 { pt3dadd( 71.8299, 235.089, 43.1275, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 71.8609, 235.853, 42.8359, 0.74 ) }
    dend_2 { pt3dadd( 71.899, 236.804, 42.4401, 0.29 ) }
    dend_2 { pt3dadd( 71.9322, 237.742, 42.0419, 0.37 ) }
    dend_2 { pt3dadd( 72.0036, 239.82, 41.1925, 0.37 ) }
    dend_2 { pt3dadd( 72.0497, 240.826, 40.7817, 0.52 ) }
    dend_2 { pt3dadd( 72.1151, 241.609, 40.4903, 0.52 ) }
    dend_2 { pt3dadd( 72.2261, 242.226, 40.2569, 0.52 ) }
    dend_2 { pt3dadd( 72.4929, 243.106, 40.0051, 0.59 ) }
    dend_2 { pt3dadd( 72.8417, 243.968, 39.8469, 0.22 ) }
    dend_2 { pt3dadd( 73.5352, 245.345, 39.7863, 0.44 ) }
    dend_2 { pt3dadd( 74.203, 246.456, 39.7974, 0.52 ) }
    dend_2 { pt3dadd( 75.395, 248.171, 39.989, 0.29 ) }
    dend_2 { pt3dadd( 76.6021, 249.631, 40.3943, 0.44 ) }
    dend_2 { pt3dadd( 77.3792, 250.438, 40.8144, 0.44 ) }
    dend_2 { pt3dadd( 78.4188, 251.407, 41.6518, 0.44 ) }
    dend_2 { pt3dadd( 79.115, 252.041, 42.372, 0.44 ) }
    dend_2 { pt3dadd( 79.9072, 252.796, 43.3963, 0.44 ) }
    dend_2 { pt3dadd( 80.7806, 253.693, 44.7455, 0.22 ) }
    dend_2 { pt3dadd( 81.5093, 254.509, 45.9854, 0.74 ) }
    dend_2 { pt3dadd( 82.2527, 255.48, 47.4136, 0.74 ) }
    dend_2 { pt3dadd( 82.6689, 256.198, 48.3468, 0.59 ) }
    dend_2 { pt3dadd( 83.1163, 257.246, 49.5647, 0.22 ) }
    dend_2 { pt3dadd( 83.2572, 257.698, 50.0053, 0.15 ) }
    dend_2 { pt3dadd( 83.4308, 258.603, 50.7167, 0.29 ) }
    dend_2 { pt3dadd( 83.5524, 259.686, 51.4056, 0.29 ) }
    dend_2 { pt3dadd( 83.604, 260.78, 51.9775, 0.29 ) }
    dend_2 { pt3dadd( 83.6058, 261.417, 52.2983, 0.52 ) }
    dend_2 { pt3dadd( 83.5856, 262.135, 52.6139, 0.88 ) }
    dend_2 { pt3dadd( 83.5095, 263.379, 53.1244, 0.52 ) }
    dend_2 { pt3dadd( 83.4285, 264.232, 53.3507, 0.52 ) }
    dend_2 { pt3dadd( 83.3062, 265.151, 53.4775, 0.22 ) }
    dend_2 { pt3dadd( 83.1274, 266.167, 53.5826, 0.22 ) }
    dend_2 { pt3dadd( 82.997, 266.845, 53.6466, 0.52 ) }
    dend_2 { pt3dadd( 82.8873, 267.386, 53.6893, 0.81 ) }
    dend_2 { pt3dadd( 82.4401, 269.542, 53.8125, 0.22 ) }
    dend_2 { pt3dadd( 82.1962, 270.595, 53.8641, 0.22 ) }
    dend_2 { pt3dadd( 81.7239, 272.479, 53.9525, 0.22 ) }
    dend_2 { pt3dadd( 81.6259, 272.855, 53.95, 0.37 ) }
    dend_2 { pt3dadd( 81.4509, 273.566, 53.9453, 0.96 ) }
    dend_2 { pt3dadd( 81.3889, 273.848, 53.9485, 0.96 ) }
    dend_2 { pt3dadd( 81.1682, 275.022, 54.0056, 0.22 ) }
    dend_2 { pt3dadd( 81.1213, 275.342, 54.0124, 0.22 ) }
    dend_2 { pt3dadd( 80.9942, 276.543, 53.9984, 0.37 ) }
    dend_2 { pt3dadd( 80.9476, 277.307, 54.054, 0.88 ) }
    dend_2 { pt3dadd( 80.9274, 278.855, 54.2635, 0.22 ) }
    dend_2 { pt3dadd( 80.9565, 279.55, 54.3912, 0.37 ) }
    dend_2 { pt3dadd( 81.0869, 280.996, 54.7461, 0.66 ) }
    dend_2 { pt3dadd( 81.2083, 282.108, 55.1242, 0.22 ) }
    dend_2 { pt3dadd( 81.3628, 283.357, 55.664, 0.66 ) }
    dend_2 { pt3dadd( 81.4477, 284.008, 55.9907, 0.66 ) }
    dend_2 { pt3dadd( 81.5872, 284.982, 56.5937, 0.44 ) }
    dend_2 { pt3dadd( 81.6497, 285.47, 56.9644, 0.59 ) }
    dend_2 { pt3dadd( 81.7778, 286.543, 57.9222, 0.15 ) }
    dend_2 { pt3dadd( 81.8235, 286.969, 58.3946, 0.37 ) }
    dend_2 { pt3dadd( 81.8578, 287.334, 58.85, 0.37 ) }
    dend_2 { pt3dadd( 81.9125, 288.113, 59.9183, 0.15 ) }
    dend_2 { pt3dadd( 81.9453, 288.691, 60.7487, 0.15 ) }
    dend_2 { pt3dadd( 81.9786, 289.02, 61.1577, 0.29 ) }
    dend_2 { pt3dadd( 82.094, 289.717, 61.925, 0.29 ) }
    dend_2 { pt3dadd( 82.2821, 290.712, 62.856, 0.22 ) }
    dend_2 { pt3dadd( 82.4392, 291.59, 63.5067, 0.66 ) }
    dend_2 { pt3dadd( 82.4697, 291.801, 63.6319, 0.66 ) }
    dend_2 { pt3dadd( 82.57, 293.115, 64.4176, 0.15 ) }
    dend_2 { pt3dadd( 82.5674, 294.126, 65.0367, 0.15 ) }
    dend_2 { pt3dadd( 82.4862, 294.901, 65.5642, 0.37 ) }
    dend_2 { pt3dadd( 82.4044, 295.406, 65.993, 0.37 ) }
    dend_2 { pt3dadd( 82.2361, 296.237, 66.7129, 0.22 ) }
    dend_2 { pt3dadd( 81.9218, 297.551, 67.8285, 0.22 ) }
    dend_2 { pt3dadd( 81.7592, 298.218, 68.3679, 0.37 ) }
    dend_2 { pt3dadd( 81.343, 300.032, 69.6471, 0.15 ) }
    dend_2 { pt3dadd( 80.9762, 301.738, 70.643, 0.15 ) }
    dend_2 { pt3dadd( 80.5845, 303.87, 71.6406, 0.15 ) }
    dend_2 { pt3dadd( 80.4095, 305.068, 72.0623, 0.15 ) }
    dend_2 { pt3dadd( 80.2504, 306.836, 72.4987, 0.15 ) }
    dend_2 { pt3dadd( 80.2716, 308.295, 72.7437, 0.15 ) }
    dend_2 { pt3dadd( 80.6024, 310.486, 72.8838, 0.15 ) }
    dend_2 { pt3dadd( 80.9384, 311.588, 72.8436, 0.15 ) }
    dend_2 { pt3dadd( 81.3747, 312.457, 72.7649, 0.15 ) }
    dend_2 { pt3dadd( 82.0278, 313.374, 72.6376, 0.37 ) }
    dend_2 { pt3dadd( 83.7419, 315.161, 72.3011, 0.15 ) }
    dend_2 { pt3dadd( 84.7831, 316.01, 72.123, 0.15 ) }
    dend_2 { pt3dadd( 86.0702, 316.864, 71.9909, 0.15 ) }
    dend_2 { pt3dadd( 86.5507, 317.161, 71.9546, 0.59 ) }
    dend_2 { pt3dadd( 87.525, 317.73, 71.9538, 0.29 ) }
    dend_2 { pt3dadd( 88.2868, 318.176, 72.0397, 0.15 ) }
    dend_2 { pt3dadd( 88.6911, 318.443, 72.1528, 0.29 ) }
    dend_2 { pt3dadd( 89.647, 319.183, 72.5588, 0.88 ) }
    dend_2 { pt3dadd( 90.2323, 319.729, 72.9674, 0.22 ) }
    dend_2 { pt3dadd( 91.0128, 320.679, 73.809, 0.22 ) }
    dend_2 { pt3dadd( 91.3132, 321.162, 74.34, 0.22 ) }
    dend_2 { pt3dadd( 91.7744, 322.041, 75.4621, 0.29 ) }
    dend_2 { pt3dadd( 92.0415, 322.641, 76.3071, 0.15 ) }
    dend_2 { pt3dadd( 92.4885, 323.839, 78.106, 0.66 ) }
    dend_2 { pt3dadd( 92.8352, 324.973, 79.8809, 0.37 ) }
    dend_2 { pt3dadd( 93.1248, 326.219, 81.9281, 0.15 ) }
    dend_2 { pt3dadd( 93.2507, 327.052, 83.2673, 0.15 ) }
    dend_2 { pt3dadd( 93.2856, 327.783, 84.3767, 0.15 ) }
    dend_2 { pt3dadd( 93.2684, 328.121, 84.8009, 0.15 ) }
    dend_2 { pt3dadd( 93.1741, 328.832, 85.4385, 0.52 ) }
    dend_2 { pt3dadd( 92.9833, 329.929, 86.0368, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 92.5852, 331.966, 86.6402, 0.15 ) }
    dend_2 { pt3dadd( 92.2472, 333.703, 86.9407, 0.15 ) }
    dend_2 { pt3dadd( 92.0026, 335.253, 87.0649, 0.15 ) }
    dend_2 { pt3dadd( 91.7248, 337.507, 87.1209, 0.15 ) }
    dend_2 { pt3dadd( 91.4776, 340.38, 87.0571, 0.15 ) }
    dend_2 { pt3dadd( 91.4003, 342.395, 86.92, 0.15 ) }
    dend_2 { pt3dadd( 91.4139, 343.401, 86.819, 0.22 ) }
    dend_2 { pt3dadd( 91.5264, 345.401, 86.5681, 0.07 ) }
    dend_2 { pt3dadd( 91.5807, 346.056, 86.4761, 0.07 ) }
    dend_2 { pt3dadd( 91.7109, 347.366, 86.2592, 0.22 ) }
    dend_2 { pt3dadd( 91.9227, 349.299, 85.9883, 0.07 ) }
    dend_2 { pt3dadd( 92.0032, 349.992, 85.8515, 0.07 ) }
    dend_2 { pt3dadd( 92.0629, 350.515, 85.7192, 0.22 ) }
    dend_2 { pt3dadd( 92.1569, 351.234, 85.4989, 0.59 ) }
    dend_2 { pt3dadd( 92.4867, 353.057, 84.7929, 0.07 ) }
    dend_2 { pt3dadd( 92.7882, 354.265, 84.2417, 0.07 ) }
    dend_2 { pt3dadd( 92.9422, 354.756, 83.999, 0.29 ) }
    dend_2 { pt3dadd( 93.1515, 355.345, 83.6961, 0.29 ) }
    dend_2 { pt3dadd( 93.5978, 356.591, 83.0737, 0.07 ) }
    dend_2 { pt3dadd( 94.0776, 358.02, 82.4515, 0.07 ) }
    dend_2 { pt3dadd( 94.2615, 358.678, 82.2258, 0.07 ) }
    dend_2 { pt3dadd( 94.3383, 359.139, 82.0755, 0.29 ) }
    dend_2 { pt3dadd( 94.3726, 359.745, 81.9307, 0.29 ) }
    dend_2 { pt3dadd( 94.368, 361.422, 81.6054, 0.15 ) }
    dend_2 { pt3dadd( 94.2202, 362.924, 81.3837, 0.15 ) }
    dend_2 { pt3dadd( 94.0356, 363.959, 81.2926, 0.29 ) }
    dend_2 { pt3dadd( 93.6339, 365.717, 81.1441, 0.22 ) }
    dend_2 { pt3dadd( 93.1552, 367.559, 81.0152, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 38.5955, -33.2587, 30.9696, 0.88 ) }
    dend_39 { pt3dadd( 38.7384, -32.4483, 31.0178, 0.88 ) }
    dend_39 { pt3dadd( 38.8041, -31.8953, 31.0917, 0.74 ) }
    dend_39 { pt3dadd( 38.8675, -31.1072, 31.2188, 0.81 ) }
    dend_39 { pt3dadd( 38.9152, -30.2324, 31.3697, 0.88 ) }
    dend_39 { pt3dadd( 38.9458, -29.4241, 31.5121, 1.4 ) }
    dend_39 { pt3dadd( 38.955, -28.646, 31.6779, 0.96 ) }
    dend_39 { pt3dadd( 38.8915, -27.6848, 31.922, 0.88 ) }
    dend_39 { pt3dadd( 38.8256, -27.1311, 32.0788, 0.81 ) }
    dend_39 { pt3dadd( 38.7667, -26.7848, 32.1485, 0.81 ) }
    dend_39 { pt3dadd( 38.6443, -26.2696, 32.1948, 0.81 ) }
    dend_39 { pt3dadd( 38.3637, -25.3214, 32.1714, 1.18 ) }
    dend_39 { pt3dadd( 38.1132, -24.5933, 32.1012, 1.18 ) }
    dend_39 { pt3dadd( 37.8148, -23.7602, 31.9792, 1.18 ) }
    dend_39 { pt3dadd( 37.1662, -21.879, 31.762, 0.96 ) }
    dend_39 { pt3dadd( 36.7532, -20.5536, 31.6519, 0.59 ) }
    dend_39 { pt3dadd( 36.5146, -19.656, 31.636, 0.59 ) }
    dend_39 { pt3dadd( 36.3537, -18.8906, 31.6912, 0.74 ) }
    dend_39 { pt3dadd( 36.2321, -18.105, 31.8507, 1.11 ) }
    dend_39 { pt3dadd( 36.0893, -16.8764, 32.3121, 1.4 ) }
    dend_39 { pt3dadd( 36.0253, -15.9114, 32.8176, 1.4 ) }
    dend_39 { pt3dadd( 35.9831, -14.8026, 33.4488, 1.18 ) }
    dend_39 { pt3dadd( 35.9502, -13.9809, 33.8966, 1.47 ) }
    dend_39 { pt3dadd( 35.91, -13.3643, 34.169, 1.11 ) }
    dend_39 { pt3dadd( 35.7765, -12.2301, 34.4693, 0.74 ) }
    dend_39 { pt3dadd( 35.6596, -11.5162, 34.5041, 1.03 ) }
    dend_39 { pt3dadd( 35.5325, -10.875, 34.4213, 1.11 ) }
    dend_39 { pt3dadd( 35.3089, -9.90985, 34.1222, 0.88 ) }
    dend_39 { pt3dadd( 35.057, -8.96739, 33.6988, 0.88 ) }
    dend_39 { pt3dadd( 34.7931, -8.13976, 33.251, 0.74 ) }
    dend_39 { pt3dadd( 34.5975, -7.59438, 32.9044, 0.66 ) }
    dend_39 { pt3dadd( 34.3408, -6.94269, 32.4857, 0.59 ) }
    dend_39 { pt3dadd( 34.0586, -6.20337, 32.0236, 0.81 ) }
    dend_39 { pt3dadd( 33.7694, -5.44054, 31.615, 0.88 ) }
    dend_39 { pt3dadd( 33.4135, -4.43752, 31.1796, 0.81 ) }
    dend_39 { pt3dadd( 33.1392, -3.59157, 30.8737, 0.81 ) }
    dend_39 { pt3dadd( 32.9035, -2.69127, 30.603, 0.81 ) }
    dend_39 { pt3dadd( 32.7237, -1.69003, 30.3669, 0.66 ) }
    dend_39 { pt3dadd( 32.6304, -0.799919, 30.2174, 0.88 ) }
    dend_39 { pt3dadd( 32.5936, -0.00793835, 30.1061, 1.18 ) }
    dend_39 { pt3dadd( 32.5894, 0.511686, 30.0411, 1.18 ) }
    dend_39 { pt3dadd( 32.6059, 1.56262, 29.9256, 0.81 ) }
    dend_39 { pt3dadd( 32.6558, 2.69174, 29.8045, 0.96 ) }
    dend_39 { pt3dadd( 32.6993, 3.6175, 29.6843, 0.96 ) }
    dend_39 { pt3dadd( 32.7488, 4.42521, 29.5386, 1.11 ) }
    dend_39 { pt3dadd( 32.7976, 5.07593, 29.4145, 1.11 ) }
    dend_39 { pt3dadd( 32.8565, 5.76762, 29.2887, 0.88 ) }
    dend_39 { pt3dadd( 32.9407, 6.66887, 29.1744, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 38.5955, -33.2587, 30.9696, 0.88 ) }
    dend_36 { pt3dadd( 40.0507, -35.4183, 33.9222, 0.88 ) }
    dend_36 { pt3dadd( 40.5863, -36.1318, 34.7906, 0.66 ) }
    dend_36 { pt3dadd( 41.4189, -37.2918, 36.1764, 0.74 ) }
    dend_36 { pt3dadd( 41.7118, -37.7724, 36.7317, 1.03 ) }
    dend_36 { pt3dadd( 41.9611, -38.278, 37.2575, 0.74 ) }
    dend_36 { pt3dadd( 42.2757, -39.0664, 38.0225, 0.96 ) }
    dend_36 { pt3dadd( 42.6966, -40.5769, 39.1904, 1.03 ) }
    dend_36 { pt3dadd( 43.0071, -42.285, 40.5123, 0.74 ) }
    dend_36 { pt3dadd( 43.2024, -43.8595, 41.711, 1.03 ) }
    dend_36 { pt3dadd( 43.3122, -45.1779, 42.7575, 0.88 ) }
    dend_36 { pt3dadd( 43.3838, -46.5095, 43.8764, 0.81 ) }
    dend_36 { pt3dadd( 43.3963, -47.5321, 44.7422, 0.66 ) }
    dend_36 { pt3dadd( 43.38, -48.8357, 45.8056, 0.66 ) }
    dend_36 { pt3dadd( 43.3943, -50.3817, 46.9843, 0.88 ) }
    dend_36 { pt3dadd( 43.4829, -52.047, 48.2561, 1.11 ) }
    dend_36 { pt3dadd( 43.663, -53.8001, 49.6257, 0.96 ) }
    dend_36 { pt3dadd( 43.9124, -55.4932, 50.8963, 0.96 ) }
    dend_36 { pt3dadd( 44.1366, -56.6438, 51.7067, 0.96 ) }
    dend_36 { pt3dadd( 44.5553, -58.4268, 52.8909, 1.03 ) }
    dend_36 { pt3dadd( 44.9888, -60.1711, 53.9804, 0.81 ) }
    dend_36 { pt3dadd( 45.2895, -61.227, 54.5923, 0.81 ) }
    dend_36 { pt3dadd( 45.5974, -62.1339, 55.0731, 0.66 ) }
    dend_36 { pt3dadd( 46.1004, -63.248, 55.6898, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 46.9046, -64.7334, 56.5886, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 1/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.629, -62.9137, 10.733, 0.29 ) }
    dend_34 { pt3dadd( 12.3924, -64.0106, 11.2037, 0.29 ) }
    dend_34 { pt3dadd( 12.1711, -65.2853, 11.7132, 0.29 ) }
    dend_34 { pt3dadd( 12.0605, -66.1273, 12.0663, 0.81 ) }
    dend_34 { pt3dadd( 11.9283, -67.4934, 12.6348, 0.59 ) }
    dend_34 { pt3dadd( 11.8394, -68.9134, 13.2714, 0.44 ) }
    dend_34 { pt3dadd( 11.8134, -70.089, 13.85, 0.22 ) }
    dend_34 { pt3dadd( 11.8602, -70.9578, 14.3042, 0.22 ) }
    dend_34 { pt3dadd( 12.0046, -72.0553, 14.923, 0.22 ) }
    dend_34 { pt3dadd( 12.1114, -72.7327, 15.361, 0.74 ) }
    dend_34 { pt3dadd( 12.3111, -73.971, 16.2349, 0.74 ) }
    dend_34 { pt3dadd( 12.4906, -75.0986, 17.0707, 0.96 ) }
    dend_34 { pt3dadd( 12.5747, -75.745, 17.5291, 1.11 ) }
    dend_34 { pt3dadd( 12.7146, -77.2114, 18.5056, 0.37 ) }
    dend_34 { pt3dadd( 12.821, -78.4957, 19.2353, 0.22 ) }
    dend_34 { pt3dadd( 12.8882, -79.2854, 19.5981, 0.66 ) }
    dend_34 { pt3dadd( 12.9627, -80.1943, 19.8769, 0.66 ) }
    dend_34 { pt3dadd( 13.0383, -81.0417, 20.0411, 0.66 ) }
    dend_34 { pt3dadd( 13.1287, -81.9063, 20.1621, 0.29 ) }
    dend_34 { pt3dadd( 13.2841, -82.9899, 20.2482, 0.22 ) }
    dend_34 { pt3dadd( 13.5375, -84.2754, 20.3573, 0.66 ) }
    dend_34 { pt3dadd( 13.8219, -85.5603, 20.5702, 0.88 ) }
    dend_34 { pt3dadd( 14.0262, -86.4925, 20.7976, 0.37 ) }
    dend_34 { pt3dadd( 14.2875, -87.799, 21.1929, 0.22 ) }
    dend_34 { pt3dadd( 14.4209, -88.5915, 21.4927, 0.59 ) }
    dend_34 { pt3dadd( 14.5544, -89.585, 21.9257, 0.74 ) }
    dend_34 { pt3dadd( 14.7645, -91.347, 22.7657, 0.15 ) }
    dend_34 { pt3dadd( 14.8375, -92.0156, 23.0901, 0.15 ) }
    dend_34 { pt3dadd( 14.918, -92.8945, 23.4806, 0.37 ) }
    dend_34 { pt3dadd( 15.0521, -94.5267, 24.0852, 0.22 ) }
    dend_34 { pt3dadd( 15.1014, -95.0458, 24.2411, 0.66 ) }
    dend_34 { pt3dadd( 15.1766, -95.6726, 24.3925, 1.11 ) }
    dend_34 { pt3dadd( 15.3179, -96.5953, 24.5622, 0.37 ) }
    dend_34 { pt3dadd( 15.5712, -97.8941, 24.7883, 0.15 ) }
    dend_34 { pt3dadd( 15.7622, -98.7319, 24.9641, 0.44 ) }
    dend_34 { pt3dadd( 16.1328, -100.229, 25.3456, 0.15 ) }
    dend_34 { pt3dadd( 16.441, -101.46, 25.7234, 0.15 ) }
    dend_34 { pt3dadd( 16.6171, -102.189, 25.9926, 0.81 ) }
    dend_34 { pt3dadd( 16.754, -102.781, 26.228, 1.18 ) }
    dend_34 { pt3dadd( 17.1415, -104.726, 27.0735, 0.15 ) }
    dend_34 { pt3dadd( 17.3192, -105.824, 27.5593, 0.15 ) }
    dend_34 { pt3dadd( 17.378, -106.396, 27.8193, 0.81 ) }
    dend_34 { pt3dadd( 17.4305, -107.313, 28.3005, 0.81 ) }
    dend_34 { pt3dadd( 17.4561, -108.213, 28.8275, 0.22 ) }
    dend_34 { pt3dadd( 17.4656, -109.498, 29.6611, 0.15 ) }
    dend_34 { pt3dadd( 17.4622, -109.941, 29.9548, 0.22 ) }
    dend_34 { pt3dadd( 17.4569, -111.071, 30.7388, 0.15 ) }
    dend_34 { pt3dadd( 17.4679, -112.729, 32.0355, 0.15 ) }
    dend_34 { pt3dadd( 17.4767, -113.264, 32.4767, 0.59 ) }
    dend_34 { pt3dadd( 17.5022, -114.613, 33.63, 0.15 ) }
    dend_34 { pt3dadd( 17.5173, -115.233, 34.1358, 0.15 ) }
    dend_34 { pt3dadd( 17.5439, -116.038, 34.7353, 0.81 ) }
    dend_34 { pt3dadd( 17.6489, -117.85, 35.8481, 0.15 ) }
    dend_34 { pt3dadd( 17.7147, -118.717, 36.2685, 0.15 ) }
    dend_34 { pt3dadd( 17.7639, -119.303, 36.5101, 0.52 ) }
    dend_34 { pt3dadd( 17.8407, -120.125, 36.7666, 0.66 ) }
    dend_34 { pt3dadd( 17.9219, -121.133, 37.0078, 0.29 ) }
    dend_34 { pt3dadd( 17.9871, -122.345, 37.1724, 0.15 ) }
    dend_34 { pt3dadd( 17.997, -122.939, 37.1944, 0.15 ) }
    dend_34 { pt3dadd( 17.9862, -123.573, 37.2124, 0.59 ) }
    dend_34 { pt3dadd( 17.9444, -124.363, 37.1919, 0.88 ) }
    dend_34 { pt3dadd( 17.8507, -125.337, 37.1211, 0.29 ) }
    dend_34 { pt3dadd( 17.7281, -126.173, 37.0233, 0.22 ) }
    dend_34 { pt3dadd( 17.5339, -127.34, 36.8497, 0.07 ) }
    dend_34 { pt3dadd( 17.4263, -128.106, 36.6876, 0.07 ) }
    dend_34 { pt3dadd( 17.2773, -129.429, 36.3579, 0.07 ) }
    dend_34 { pt3dadd( 17.2583, -129.736, 36.2749, 0.29 ) }
    dend_34 { pt3dadd( 17.2622, -130.597, 36.0557, 0.66 ) }
    dend_34 { pt3dadd( 17.3163, -131.69, 35.8067, 0.15 ) }
    dend_34 { pt3dadd( 17.3992, -132.942, 35.578, 0.15 ) }
    dend_34 { pt3dadd( 17.4574, -133.805, 35.4284, 0.29 ) }
    dend_34 { pt3dadd( 17.5149, -134.842, 35.2837, 0.15 ) }
    dend_34 { pt3dadd( 17.5489, -135.747, 35.1511, 0.37 ) }
    dend_34 { pt3dadd( 17.5579, -136.365, 35.0378, 0.37 ) }
    dend_34 { pt3dadd( 17.5345, -137.536, 34.7989, 0.22 ) }
    dend_34 { pt3dadd( 17.4877, -138.526, 34.6002, 0.44 ) }
    dend_34 { pt3dadd( 17.4261, -139.524, 34.3126, 0.96 ) }
    dend_34 { pt3dadd( 17.3819, -140.192, 34.0609, 0.22 ) }
    dend_34 { pt3dadd( 17.3051, -141.559, 33.458, 0.15 ) }
    dend_34 { pt3dadd( 17.2955, -141.841, 33.3297, 0.15 ) }
    dend_34 { pt3dadd( 17.2951, -142.972, 32.7654, 0.29 ) }
    dend_34 { pt3dadd( 17.3231, -144.259, 32.0679, 0.15 ) }
    dend_34 { pt3dadd( 17.3569, -144.937, 31.6603, 0.15 ) }
    dend_34 { pt3dadd( 17.372, -145.218, 31.4878, 0.37 ) }
    dend_34 { pt3dadd( 17.4103, -145.966, 31.0508, 0.88 ) }
    dend_34 { pt3dadd( 17.5083, -147.551, 30.1858, 0.15 ) }
    dend_34 { pt3dadd( 17.5569, -148.374, 29.7846, 0.15 ) }
    dend_34 { pt3dadd( 17.5928, -149.195, 29.4708, 0.15 ) }
    dend_34 { pt3dadd( 17.5993, -149.955, 29.2368, 0.66 ) }
    dend_34 { pt3dadd( 17.582, -150.81, 29.043, 0.22 ) }
    dend_34 { pt3dadd( 17.5414, -151.636, 28.9209, 0.22 ) }
    dend_34 { pt3dadd( 17.4807, -152.384, 28.8803, 0.15 ) }
    dend_34 { pt3dadd( 17.4281, -152.929, 28.8685, 0.15 ) }
    dend_34 { pt3dadd( 17.3134, -153.957, 28.8437, 0.66 ) }
    dend_34 { pt3dadd( 17.0954, -155.6, 28.8025, 0.15 ) }
    dend_34 { pt3dadd( 17.0094, -156.177, 28.7883, 0.15 ) }
    dend_34 { pt3dadd( 16.933, -156.666, 28.7765, 0.22 ) }
    dend_34 { pt3dadd( 16.8348, -157.366, 28.76, 0.15 ) }
    dend_34 { pt3dadd( 16.7418, -158.078, 28.7443, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 16.5963, -159.183, 28.7234, 0.44 ) }
    dend_34 { pt3dadd( 16.443, -160.355, 28.707, 0.15 ) }
    dend_34 { pt3dadd( 16.3598, -161.056, 28.6731, 0.15 ) }
    dend_34 { pt3dadd( 16.2882, -161.674, 28.5886, 0.15 ) }
    dend_34 { pt3dadd( 16.2036, -162.372, 28.4423, 0.15 ) }
    dend_34 { pt3dadd( 16.0912, -163.179, 28.2319, 0.44 ) }
    dend_34 { pt3dadd( 15.9324, -164.154, 27.9492, 0.44 ) }
    dend_34 { pt3dadd( 15.6878, -165.449, 27.6238, 0.15 ) }
    dend_34 { pt3dadd( 15.3703, -167.112, 27.2806, 0.15 ) }
    dend_34 { pt3dadd( 15.223, -167.902, 27.146, 0.44 ) }
    dend_34 { pt3dadd( 15.0244, -169.039, 26.9959, 0.22 ) }
    dend_34 { pt3dadd( 14.8502, -170.272, 26.9476, 0.22 ) }
    dend_34 { pt3dadd( 14.6255, -172.111, 27.0393, 0.07 ) }
    dend_34 { pt3dadd( 14.4975, -173.351, 27.2225, 0.07 ) }
    dend_34 { pt3dadd( 14.4584, -173.808, 27.3199, 0.29 ) }
    dend_34 { pt3dadd( 14.3959, -174.647, 27.5127, 0.96 ) }
    dend_34 { pt3dadd( 14.2564, -176.904, 28.1118, 0.15 ) }
    dend_34 { pt3dadd( 14.1981, -177.749, 28.3535, 0.15 ) }
    dend_34 { pt3dadd( 14.1176, -178.503, 28.524, 0.15 ) }
    dend_34 { pt3dadd( 13.9722, -179.535, 28.7644, 0.37 ) }
    dend_34 { pt3dadd( 13.8759, -180.114, 28.9023, 0.37 ) }
    dend_34 { pt3dadd( 13.6028, -181.459, 29.2079, 0.15 ) }
    dend_34 { pt3dadd( 13.408, -182.221, 29.3814, 0.74 ) }
    dend_34 { pt3dadd( 12.9083, -183.939, 29.9721, 0.15 ) }
    dend_34 { pt3dadd( 12.5075, -185.083, 30.4803, 0.15 ) }
    dend_34 { pt3dadd( 12.2418, -185.702, 30.8644, 0.59 ) }
    dend_34 { pt3dadd( 11.9377, -186.309, 31.3446, 0.22 ) }
    dend_34 { pt3dadd( 11.36, -187.315, 32.2626, 0.15 ) }
    dend_34 { pt3dadd( 10.6272, -188.446, 33.4783, 0.15 ) }
    dend_34 { pt3dadd( 10.2445, -188.964, 34.1227, 0.52 ) }
    dend_34 { pt3dadd( 9.39838, -189.931, 35.4061, 0.15 ) }
    dend_34 { pt3dadd( 8.81828, -190.503, 36.3088, 0.15 ) }
    dend_34 { pt3dadd( 8.57494, -190.723, 36.7001, 0.44 ) }
    dend_34 { pt3dadd( 8.11814, -191.108, 37.421, 0.81 ) }
    dend_34 { pt3dadd( 7.69768, -191.47, 38.0568, 0.81 ) }
    dend_34 { pt3dadd( 6.72028, -192.39, 39.6042, 0.15 ) }
    dend_34 { pt3dadd( 5.74407, -193.387, 41.1373, 0.15 ) }
    dend_34 { pt3dadd( 5.45412, -193.734, 41.6118, 0.15 ) }
    dend_34 { pt3dadd( 5.23078, -194.061, 42.0314, 0.66 ) }
    dend_34 { pt3dadd( 4.7943, -194.881, 42.9425, 0.22 ) }
    dend_34 { pt3dadd( 4.34296, -196.013, 44.153, 0.15 ) }
    dend_34 { pt3dadd( 4.2449, -196.338, 44.5226, 0.22 ) }
    dend_34 { pt3dadd( 3.99472, -197.261, 45.6381, 0.15 ) }
    dend_34 { pt3dadd( 3.78686, -198.017, 46.6215, 0.44 ) }
    dend_34 { pt3dadd( 3.6282, -198.601, 47.4081, 0.88 ) }
    dend_34 { pt3dadd( 3.04859, -200.39, 49.8958, 0.15 ) }
    dend_34 { pt3dadd( 2.46464, -201.797, 51.8499, 0.15 ) }
    dend_34 { pt3dadd( 2.09375, -202.555, 52.8993, 0.15 ) }
    dend_34 { pt3dadd( 1.76803, -203.111, 53.655, 0.37 ) }
    dend_34 { pt3dadd( 1.45219, -203.581, 54.2618, 0.37 ) }
    dend_34 { pt3dadd( 0.619438, -204.672, 55.6597, 0.07 ) }
    dend_34 { pt3dadd( -0.0391841, -205.454, 56.4991, 0.07 ) }
    dend_34 { pt3dadd( -0.401374, -205.873, 56.895, 0.15 ) }
    dend_34 { pt3dadd( -1.22481, -206.806, 57.7643, 0.07 ) }
    dend_34 { pt3dadd( -1.6904, -207.326, 58.258, 0.29 ) }
    dend_34 { pt3dadd( -2.32724, -208.037, 58.9401, 0.29 ) }
    dend_34 { pt3dadd( -3.07994, -208.963, 59.7839, 0.15 ) }
    dend_34 { pt3dadd( -3.4352, -209.433, 60.2041, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.629, -62.9137, 10.733, 0.22 ) }
    dend_33 { pt3dadd( 14.4471, -63.426, 6.61532, 0.22 ) }
    dend_33 { pt3dadd( 14.953, -63.6046, 5.58294, 0.22 ) }
    dend_33 { pt3dadd( 15.3887, -63.7918, 4.70003, 0.52 ) }
    dend_33 { pt3dadd( 15.7456, -63.9708, 3.95579, 0.88 ) }
    dend_33 { pt3dadd( 16.3052, -64.3059, 2.72447, 0.96 ) }
    dend_33 { pt3dadd( 16.8452, -64.6998, 1.42269, 0.74 ) }
    dend_33 { pt3dadd( 17.3567, -65.3029, -0.0432176, 0.29 ) }
    dend_33 { pt3dadd( 17.6304, -65.7808, -1.05557, 0.37 ) }
    dend_33 { pt3dadd( 17.7838, -66.1769, -1.7872, 0.37 ) }
    dend_33 { pt3dadd( 17.8875, -66.5524, -2.43607, 0.74 ) }
    dend_33 { pt3dadd( 18.0088, -67.054, -3.29403, 0.44 ) }
    dend_33 { pt3dadd( 18.2685, -67.9162, -4.8805, 0.44 ) }
    dend_33 { pt3dadd( 18.4265, -68.1968, -5.51343, 0.44 ) }
    dend_33 { pt3dadd( 18.7397, -68.5224, -6.3769, 0.22 ) }
    dend_33 { pt3dadd( 19.2585, -68.9372, -7.54691, 0.22 ) }
    dend_33 { pt3dadd( 19.7144, -69.2698, -8.50404, 0.44 ) }
    dend_33 { pt3dadd( 20.1342, -69.6053, -9.40734, 0.59 ) }
    dend_33 { pt3dadd( 20.7853, -70.2971, -11.1032, 0.29 ) }
    dend_33 { pt3dadd( 21.0128, -70.6683, -11.9726, 0.22 ) }
    dend_33 { pt3dadd( 21.1011, -71.0458, -12.7547, 0.29 ) }
    dend_33 { pt3dadd( 21.0831, -71.5597, -13.6602, 0.44 ) }
    dend_33 { pt3dadd( 20.9328, -72.2575, -14.7774, 0.74 ) }
    dend_33 { pt3dadd( 20.6377, -73.073, -15.9912, 0.96 ) }
    dend_33 { pt3dadd( 20.4724, -73.4311, -16.5018, 0.96 ) }
    dend_33 { pt3dadd( 20.1259, -74.1502, -17.5466, 0.37 ) }
    dend_33 { pt3dadd( 19.8093, -74.8798, -18.6734, 0.44 ) }
    dend_33 { pt3dadd( 19.659, -75.3859, -19.51, 0.37 ) }
    dend_33 { pt3dadd( 19.6255, -75.7576, -20.1511, 0.22 ) }
    dend_33 { pt3dadd( 19.7074, -76.1336, -20.8485, 0.22 ) }
    dend_33 { pt3dadd( 19.852, -76.3416, -21.3363, 0.29 ) }
    dend_33 { pt3dadd( 20.2144, -76.5798, -22.1566, 0.44 ) }
    dend_33 { pt3dadd( 20.6474, -76.7499, -23.0266, 0.44 ) }
    dend_33 { pt3dadd( 20.9838, -76.8586, -23.6912, 0.66 ) }
    dend_33 { pt3dadd( 21.5755, -77.0527, -24.9084, 0.81 ) }
    dend_33 { pt3dadd( 22.2477, -77.3224, -26.4364, 0.96 ) }
    dend_33 { pt3dadd( 22.7683, -77.6157, -27.8025, 0.96 ) }
    dend_33 { pt3dadd( 23.1297, -77.8795, -28.8521, 0.96 ) }
    dend_33 { pt3dadd( 23.3346, -78.0446, -29.4914, 0.66 ) }
    dend_33 { pt3dadd( 23.6555, -78.3133, -30.5056, 0.74 ) }
    dend_33 { pt3dadd( 23.977, -78.5957, -31.471, 0.74 ) }
    dend_33 { pt3dadd( 24.6481, -79.1515, -33.2639, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( 25.3761, -79.7007, -35.054, 0.29 ) }
    dend_33 { pt3dadd( 25.9312, -80.0688, -36.416, 0.29 ) }
    dend_33 { pt3dadd( 26.3435, -80.3046, -37.3796, 0.29 ) }
    dend_33 { pt3dadd( 26.732, -80.4978, -38.2563, 0.37 ) }
    dend_33 { pt3dadd( 27.3516, -80.7659, -39.6226, 0.52 ) }
    dend_33 { pt3dadd( 27.909, -80.9927, -40.8587, 0.44 ) }
    dend_33 { pt3dadd( 28.776, -81.4039, -42.9046, 0.44 ) }
    dend_33 { pt3dadd( 32.5792, -85.1204, -50.2722, 0.44 ) }
    dend_33 { pt3dadd( 35.8956, -89.9354, -57.19, 0.44 ) }
    dend_33 { pt3dadd( 39.5242, -93.7632, -64.5854, 0.44 ) }
    dend_33 { pt3dadd( 42.8727, -97.5451, -72.1364, 0.44 ) }
    dend_33 { pt3dadd( 44.58, -100.312, -80.643, 0.44 ) }
    dend_33 { pt3dadd( 47.4938, -101.304, -89.2387, 0.44 ) }
    dend_33 { pt3dadd( 50.4386, -102.55, -97.7883, 0.44 ) }
    dend_33 { pt3dadd( 54.5163, -104.634, -105.672, 0.44 ) }
    dend_33 { pt3dadd( 58.5184, -105.506, -113.833, 0.44 ) }
    dend_33 { pt3dadd( 61.4918, -104.849, -122.447, 0.44 ) }
    dend_33 { pt3dadd( 65.2578, -103.24, -130.612, 0.44 ) }
    dend_33 { pt3dadd( 68.1597, -102.79, -139.264, 0.44 ) }
    dend_33 { pt3dadd( 71.2093, -103.325, -147.857, 0.44 ) }
    dend_33 { pt3dadd( 75.1892, -105.142, -155.86, 0.44 ) }
    dend_33 { pt3dadd( 79.5735, -106.796, -163.688, 0.44 ) }
    dend_33 { pt3dadd( 83.9819, -109.649, -171.125, 0.44 ) }
    dend_33 { pt3dadd( 87.8586, -112.825, -178.719, 0.44 ) }
    dend_33 { pt3dadd( 91.4068, -116.221, -186.372, 0.44 ) }
    dend_33 { pt3dadd( 95.8909, -118.498, -193.973, 0.44 ) }
    dend_33 { pt3dadd( 98.6772, -120.592, -202.398, 0.44 ) }
    dend_33 { pt3dadd( 102.424, -123.689, -210.091, 0.44 ) }
    dend_33 { pt3dadd( 105.599, -128.536, -217.05, 0.44 ) }
    dend_33 { pt3dadd( 109.896, -133.459, -223.318, 0.44 ) }
    dend_33 { pt3dadd( 114.938, -139.111, -228.237, 0.44 ) }
    dend_33 { pt3dadd( 119.447, -144.857, -233.544, 0.44 ) }
    dend_33 { pt3dadd( 122.869, -151.575, -238.447, 0.44 ) }
    dend_33 { pt3dadd( 127.694, -156.373, -244.425, 0.44 ) }
    dend_33 { pt3dadd( 132.254, -161.878, -249.953, 0.44 ) }
    dend_33 { pt3dadd( 137.25, -167.839, -254.523, 0.44 ) }
    dend_33 { pt3dadd( 142.574, -173.933, -258.502, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.200389, -140.875, 82.7532, 0.15 ) }
    dend_29 { pt3dadd( -0.0887824, -142.262, 83.346, 0.15 ) }
    dend_29 { pt3dadd( -0.00519395, -143.261, 83.8574, 0.22 ) }
    dend_29 { pt3dadd( 0.0507702, -143.977, 84.2407, 0.22 ) }
    dend_29 { pt3dadd( 0.137802, -145.059, 84.8382, 0.37 ) }
    dend_29 { pt3dadd( 0.324336, -146.481, 85.732, 0.15 ) }
    dend_29 { pt3dadd( 0.758926, -148.838, 87.3167, 0.15 ) }
    dend_29 { pt3dadd( 0.955337, -149.551, 87.9205, 0.15 ) }
    dend_29 { pt3dadd( 1.18509, -150.235, 88.5788, 0.29 ) }
    dend_29 { pt3dadd( 2.04627, -152.412, 90.8926, 0.15 ) }
    dend_29 { pt3dadd( 2.77102, -153.87, 92.6617, 0.15 ) }
    dend_29 { pt3dadd( 3.18092, -154.519, 93.5497, 0.15 ) }
    dend_29 { pt3dadd( 4.48413, -156.173, 96.0064, 0.15 ) }
    dend_29 { pt3dadd( 5.09955, -156.784, 97.1244, 0.15 ) }
    dend_29 { pt3dadd( 5.84151, -157.399, 98.4651, 0.22 ) }
    dend_29 { pt3dadd( 6.90742, -158.185, 100.374, 0.44 ) }
    dend_29 { pt3dadd( 7.60499, -158.692, 101.615, 0.44 ) }
    dend_29 { pt3dadd( 8.9011, -159.647, 103.866, 0.15 ) }
    dend_29 { pt3dadd( 11.6105, -161.602, 108.293, 0.22 ) }
    dend_29 { pt3dadd( 13.2762, -162.782, 110.924, 0.22 ) }
    dend_29 { pt3dadd( 13.8207, -163.177, 111.731, 0.22 ) }
    dend_29 { pt3dadd( 14.7555, -163.908, 113.014, 0.22 ) }
    dend_29 { pt3dadd( 15.6527, -164.653, 114.07, 0.22 ) }
    dend_29 { pt3dadd( 16.9093, -165.757, 115.214, 0.22 ) }
    dend_29 { pt3dadd( 17.7322, -166.532, 115.757, 0.22 ) }
    dend_29 { pt3dadd( 18.8349, -167.666, 116.395, 0.07 ) }
    dend_29 { pt3dadd( 20.4853, -169.427, 117.407, 0.07 ) }
    dend_29 { pt3dadd( 22.4017, -171.527, 118.57, 0.07 ) }
    dend_29 { pt3dadd( 23.8776, -173.16, 119.487, 0.07 ) }
    dend_29 { pt3dadd( 25.9523, -175.599, 120.798, 0.07 ) }
    dend_29 { pt3dadd( 27.712, -177.75, 122.02, 0.07 ) }
    dend_29 { pt3dadd( 29.3702, -179.868, 123.483, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 69/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.200389, -140.875, 82.7532, 0.22 ) }
    dend_28 { pt3dadd( -0.884544, -142.195, 82.1952, 0.22 ) }
    dend_28 { pt3dadd( -1.34789, -143.343, 82.0282, 0.15 ) }
    dend_28 { pt3dadd( -1.6349, -144.224, 82.0666, 0.15 ) }
    dend_28 { pt3dadd( -1.8799, -145.079, 82.1898, 0.15 ) }
    dend_28 { pt3dadd( -2.11299, -145.92, 82.3512, 0.15 ) }
    dend_28 { pt3dadd( -2.60465, -147.786, 82.727, 0.15 ) }
    dend_28 { pt3dadd( -2.78107, -148.648, 82.9884, 0.15 ) }
    dend_28 { pt3dadd( -2.88539, -149.197, 83.1832, 0.37 ) }
    dend_28 { pt3dadd( -3.05154, -149.918, 83.4106, 0.59 ) }
    dend_28 { pt3dadd( -3.37902, -151.135, 83.7163, 0.22 ) }
    dend_28 { pt3dadd( -3.70204, -152.147, 83.8956, 0.22 ) }
    dend_28 { pt3dadd( -4.01741, -152.943, 83.9341, 0.15 ) }
    dend_28 { pt3dadd( -4.32806, -153.632, 83.9381, 0.15 ) }
    dend_28 { pt3dadd( -4.85608, -154.694, 83.9456, 0.15 ) }
    dend_28 { pt3dadd( -5.12243, -155.166, 83.9254, 0.15 ) }
    dend_28 { pt3dadd( -5.42046, -155.617, 83.8604, 0.29 ) }
    dend_28 { pt3dadd( -5.68341, -155.976, 83.7854, 0.29 ) }
    dend_28 { pt3dadd( -6.15063, -156.61, 83.613, 0.44 ) }
    dend_28 { pt3dadd( -6.48861, -157.131, 83.5155, 0.44 ) }
    dend_28 { pt3dadd( -7.03994, -158.145, 83.4599, 0.22 ) }
    dend_28 { pt3dadd( -7.48838, -159.107, 83.4852, 0.29 ) }
    dend_28 { pt3dadd( -7.87368, -160.113, 83.5824, 0.07 ) }
    dend_28 { pt3dadd( -8.12505, -160.937, 83.716, 0.07 ) }
    dend_28 { pt3dadd( -8.54971, -162.703, 84.0298, 0.22 ) }
    dend_28 { pt3dadd( -8.6804, -163.507, 84.2519, 0.22 ) }
    dend_28 { pt3dadd( -8.72534, -164.028, 84.4591, 0.22 ) }
    dend_28 { pt3dadd( -8.72752, -164.439, 84.6596, 0.44 ) }
    dend_28 { pt3dadd( -8.71332, -164.88, 84.8876, 0.66 ) }
    dend_28 { pt3dadd( -8.66955, -166.013, 85.4755, 0.22 ) }
    dend_28 { pt3dadd( -8.62922, -167.306, 86.0793, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -8.60649, -167.925, 86.3638, 0.07 ) }
    dend_28 { pt3dadd( -8.57363, -168.715, 86.6757, 0.07 ) }
    dend_28 { pt3dadd( -8.53765, -169.384, 86.8897, 0.15 ) }
    dend_28 { pt3dadd( -8.50137, -169.913, 87.0171, 0.15 ) }
    dend_28 { pt3dadd( -8.43669, -170.743, 87.1492, 0.37 ) }
    dend_28 { pt3dadd( -8.38642, -171.603, 87.1457, 0.66 ) }
    dend_28 { pt3dadd( -8.32579, -172.871, 87.0271, 0.15 ) }
    dend_28 { pt3dadd( -8.29816, -173.748, 86.8842, 0.22 ) }
    dend_28 { pt3dadd( -8.27954, -174.564, 86.7233, 0.22 ) }
    dend_28 { pt3dadd( -8.27893, -175.276, 86.5615, 0.15 ) }
    dend_28 { pt3dadd( -8.29399, -175.776, 86.4409, 0.15 ) }
    dend_28 { pt3dadd( -8.33005, -176.261, 86.3473, 0.59 ) }
    dend_28 { pt3dadd( -8.40642, -176.795, 86.2907, 0.59 ) }
    dend_28 { pt3dadd( -8.64496, -177.843, 86.2434, 0.22 ) }
    dend_28 { pt3dadd( -8.74171, -178.152, 86.2321, 0.22 ) }
    dend_28 { pt3dadd( -8.92106, -178.658, 86.2179, 0.44 ) }
    dend_28 { pt3dadd( -9.15928, -179.384, 86.197, 0.66 ) }
    dend_28 { pt3dadd( -9.39904, -180.195, 86.1584, 0.29 ) }
    dend_28 { pt3dadd( -9.56688, -180.861, 86.1153, 0.66 ) }
    dend_28 { pt3dadd( -9.72421, -181.714, 86.0394, 0.52 ) }
    dend_28 { pt3dadd( -9.88652, -182.948, 85.8972, 0.29 ) }
    dend_28 { pt3dadd( -9.99282, -184.052, 85.7013, 0.22 ) }
    dend_28 { pt3dadd( -10.0444, -184.861, 85.5051, 0.29 ) }
    dend_28 { pt3dadd( -10.0684, -185.629, 85.2812, 0.37 ) }
    dend_28 { pt3dadd( -10.0633, -186.538, 85.0168, 0.22 ) }
    dend_28 { pt3dadd( -10.0501, -187.009, 84.8905, 0.22 ) }
    dend_28 { pt3dadd( -10.0194, -188.179, 84.5701, 0.29 ) }
    dend_28 { pt3dadd( -10.0196, -188.961, 84.3707, 0.52 ) }
    dend_28 { pt3dadd( -10.0275, -189.438, 84.2666, 0.81 ) }
    dend_28 { pt3dadd( -10.0542, -190.407, 84.1006, 0.29 ) }
    dend_28 { pt3dadd( -10.0501, -191.214, 84.0648, 0.22 ) }
    dend_28 { pt3dadd( -10.0312, -191.542, 84.0903, 0.22 ) }
    dend_28 { pt3dadd( -9.99172, -191.936, 84.1678, 0.44 ) }
    dend_28 { pt3dadd( -9.9382, -192.509, 84.3046, 0.74 ) }
    dend_28 { pt3dadd( -9.88379, -193.108, 84.4302, 0.29 ) }
    dend_28 { pt3dadd( -9.76932, -194.266, 84.6082, 0.15 ) }
    dend_28 { pt3dadd( -9.73659, -194.548, 84.6437, 0.15 ) }
    dend_28 { pt3dadd( -9.66956, -195.039, 84.6827, 0.15 ) }
    dend_28 { pt3dadd( -9.55492, -195.749, 84.707, 0.44 ) }
    dend_28 { pt3dadd( -9.35501, -196.838, 84.7355, 0.22 ) }
    dend_28 { pt3dadd( -9.22668, -197.58, 84.747, 0.22 ) }
    dend_28 { pt3dadd( -9.07973, -198.53, 84.7362, 0.52 ) }
    dend_28 { pt3dadd( -8.93056, -199.622, 84.6925, 0.15 ) }
    dend_28 { pt3dadd( -8.86071, -200.381, 84.6214, 0.29 ) }
    dend_28 { pt3dadd( -8.84333, -201.288, 84.4624, 0.59 ) }
    dend_28 { pt3dadd( -8.91107, -202.03, 84.256, 0.74 ) }
    dend_28 { pt3dadd( -8.96377, -202.305, 84.1534, 0.74 ) }
    dend_28 { pt3dadd( -9.28401, -203.356, 83.6827, 0.22 ) }
    dend_28 { pt3dadd( -9.75114, -204.429, 83.1523, 0.15 ) }
    dend_28 { pt3dadd( -10.1478, -205.168, 82.7405, 0.15 ) }
    dend_28 { pt3dadd( -10.5267, -205.797, 82.3749, 0.29 ) }
    dend_28 { pt3dadd( -10.84, -206.292, 82.1044, 0.74 ) }
    dend_28 { pt3dadd( -11.1629, -206.822, 81.8595, 0.66 ) }
    dend_28 { pt3dadd( -11.7102, -207.814, 81.4986, 0.15 ) }
    dend_28 { pt3dadd( -12.1746, -208.718, 81.1819, 0.15 ) }
    dend_28 { pt3dadd( -12.4827, -209.385, 80.9516, 0.22 ) }
    dend_28 { pt3dadd( -12.8018, -210.155, 80.6677, 0.52 ) }
    dend_28 { pt3dadd( -13.1318, -211.092, 80.2932, 0.29 ) }
    dend_28 { pt3dadd( -13.4165, -212.192, 79.8542, 0.15 ) }
    dend_28 { pt3dadd( -13.557, -213.06, 79.496, 0.15 ) }
    dend_28 { pt3dadd( -13.584, -213.354, 79.3689, 0.15 ) }
    dend_28 { pt3dadd( -13.6108, -213.814, 79.1513, 0.81 ) }
    dend_28 { pt3dadd( -13.6598, -214.425, 78.8696, 0.29 ) }
    dend_28 { pt3dadd( -13.8047, -215.473, 78.4026, 0.15 ) }
    dend_28 { pt3dadd( -13.9711, -216.253, 78.0629, 0.59 ) }
    dend_28 { pt3dadd( -14.1303, -216.805, 77.8362, 0.59 ) }
    dend_28 { pt3dadd( -14.3171, -217.267, 77.6218, 0.59 ) }
    dend_28 { pt3dadd( -14.7471, -218.047, 77.1855, 1.18 ) }
    dend_28 { pt3dadd( -15.1943, -218.642, 76.7299, 0.74 ) }
    dend_28 { pt3dadd( -15.9742, -219.503, 75.9133, 0.22 ) }
    dend_28 { pt3dadd( -16.228, -219.76, 75.6284, 0.29 ) }
    dend_28 { pt3dadd( -16.7916, -220.297, 74.9246, 0.37 ) }
    dend_28 { pt3dadd( -17.3942, -220.823, 74.0638, 0.37 ) }
    dend_28 { pt3dadd( -18.2276, -221.466, 72.7294, 0.37 ) }
    dend_28 { pt3dadd( -18.5198, -221.658, 72.2561, 0.37 ) }
    dend_28 { pt3dadd( -18.8919, -221.88, 71.6332, 0.37 ) }
    dend_28 { pt3dadd( -18.9988, -221.948, 71.435, 0.37 ) }
    dend_28 { pt3dadd( -19.1724, -222.077, 71.0569, 0.37 ) }
    dend_28 { pt3dadd( -19.3555, -222.263, 70.5848, 0.37 ) }
    dend_28 { pt3dadd( -19.5848, -222.553, 69.9757, 0.44 ) }
    dend_28 { pt3dadd( -19.8135, -222.844, 69.4372, 0.52 ) }
    dend_28 { pt3dadd( -20.212, -223.425, 68.6095, 0.52 ) }
    dend_28 { pt3dadd( -20.568, -223.967, 67.9467, 0.37 ) }
    dend_28 { pt3dadd( -20.7313, -224.248, 67.6533, 0.22 ) }
    dend_28 { pt3dadd( -20.8997, -224.564, 67.367, 0.22 ) }
    dend_28 { pt3dadd( -21.1377, -225.019, 67.0286, 0.29 ) }
    dend_28 { pt3dadd( -21.4855, -225.67, 66.6839, 0.81 ) }
    dend_28 { pt3dadd( -21.9667, -226.631, 66.3824, 0.15 ) }
    dend_28 { pt3dadd( -22.1835, -227.075, 66.2999, 0.15 ) }
    dend_28 { pt3dadd( -22.3763, -227.479, 66.2287, 0.22 ) }
    dend_28 { pt3dadd( -22.6069, -228.011, 66.1413, 0.29 ) }
    dend_28 { pt3dadd( -22.7652, -228.399, 66.078, 0.81 ) }
    dend_28 { pt3dadd( -23.1604, -229.33, 65.8968, 0.22 ) }
    dend_28 { pt3dadd( -23.484, -230.069, 65.7255, 0.22 ) }
    dend_28 { pt3dadd( -23.7836, -230.692, 65.5084, 0.22 ) }
    dend_28 { pt3dadd( -24.0386, -231.205, 65.2457, 0.52 ) }
    dend_28 { pt3dadd( -24.112, -231.347, 65.1434, 0.52 ) }
    dend_28 { pt3dadd( -24.5166, -232.077, 64.4511, 0.22 ) }
    dend_28 { pt3dadd( -24.8011, -232.544, 63.9137, 0.37 ) }
    dend_28 { pt3dadd( -25.0637, -232.961, 63.3664, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -25.3968, -233.491, 62.6348, 0.22 ) }
    dend_28 { pt3dadd( -25.7141, -233.991, 61.9206, 0.22 ) }
    dend_28 { pt3dadd( -25.9781, -234.451, 61.2918, 0.22 ) }
    dend_28 { pt3dadd( -26.0886, -234.683, 60.9963, 0.37 ) }
    dend_28 { pt3dadd( -26.3618, -235.37, 60.2036, 1.11 ) }
    dend_28 { pt3dadd( -26.6201, -236.147, 59.4171, 0.44 ) }
    dend_28 { pt3dadd( -26.823, -236.857, 58.7576, 0.66 ) }
    dend_28 { pt3dadd( -26.9328, -237.354, 58.317, 0.59 ) }
    dend_28 { pt3dadd( -26.9971, -237.75, 57.9545, 0.52 ) }
    dend_28 { pt3dadd( -27.0473, -238.17, 57.532, 0.29 ) }
    dend_28 { pt3dadd( -27.1185, -238.826, 56.8049, 0.15 ) }
    dend_28 { pt3dadd( -27.2065, -239.539, 55.9834, 0.15 ) }
    dend_28 { pt3dadd( -27.2614, -239.844, 55.6178, 0.52 ) }
    dend_28 { pt3dadd( -27.4547, -240.525, 54.8076, 0.74 ) }
    dend_28 { pt3dadd( -27.5772, -240.878, 54.4098, 0.74 ) }
    dend_28 { pt3dadd( -27.897, -241.748, 53.4997, 0.37 ) }
    dend_28 { pt3dadd( -28.1817, -242.514, 52.8353, 0.37 ) }
    dend_28 { pt3dadd( -28.4487, -243.267, 52.3319, 0.59 ) }
    dend_28 { pt3dadd( -28.7168, -244.036, 51.9408, 0.88 ) }
    dend_28 { pt3dadd( -28.8492, -244.443, 51.7962, 0.88 ) }
    dend_28 { pt3dadd( -29.1071, -245.283, 51.5715, 0.37 ) }
    dend_28 { pt3dadd( -29.331, -246.144, 51.4067, 0.66 ) }
    dend_28 { pt3dadd( -29.4938, -246.923, 51.2339, 0.66 ) }
    dend_28 { pt3dadd( -29.6209, -247.776, 51.0335, 1.18 ) }
    dend_28 { pt3dadd( -29.6794, -248.427, 50.8617, 0.81 ) }
    dend_28 { pt3dadd( -29.7383, -249.653, 50.5049, 0.44 ) }
    dend_28 { pt3dadd( -29.7372, -250.643, 50.1966, 0.37 ) }
    dend_28 { pt3dadd( -29.6444, -252.02, 49.6998, 0.29 ) }
    dend_28 { pt3dadd( -29.617, -252.257, 49.5975, 0.52 ) }
    dend_28 { pt3dadd( -29.5439, -252.684, 49.3878, 0.96 ) }
    dend_28 { pt3dadd( -29.4143, -253.364, 48.9902, 0.29 ) }
    dend_28 { pt3dadd( -29.326, -253.748, 48.7447, 0.29 ) }
    dend_28 { pt3dadd( -29.232, -254.165, 48.4618, 0.59 ) }
    dend_28 { pt3dadd( -29.0478, -254.93, 48.0474, 0.59 ) }
    dend_28 { pt3dadd( -28.94, -255.361, 47.843, 0.59 ) }
    dend_28 { pt3dadd( -28.6259, -256.588, 47.3353, 0.29 ) }
    dend_28 { pt3dadd( -28.405, -257.413, 47.0591, 0.22 ) }
    dend_28 { pt3dadd( -28.2829, -257.867, 46.963, 0.88 ) }
    dend_28 { pt3dadd( -27.8956, -259.303, 46.9091, 0.37 ) }
    dend_28 { pt3dadd( -27.779, -259.75, 46.9662, 0.66 ) }
    dend_28 { pt3dadd( -27.6873, -260.095, 47.0741, 0.66 ) }
    dend_28 { pt3dadd( -27.4484, -260.916, 47.4787, 0.44 ) }
    dend_28 { pt3dadd( -27.2682, -261.479, 47.8546, 0.44 ) }
    dend_28 { pt3dadd( -27.0095, -262.13, 48.439, 0.44 ) }
    dend_28 { pt3dadd( -26.779, -262.637, 48.9836, 0.81 ) }
    dend_28 { pt3dadd( -26.2786, -263.548, 50.0516, 0.22 ) }
    dend_28 { pt3dadd( -26.0057, -263.97, 50.5795, 0.37 ) }
    dend_28 { pt3dadd( -25.467, -264.682, 51.5127, 0.37 ) }
    dend_28 { pt3dadd( -24.798, -265.468, 52.5156, 0.37 ) }
    dend_28 { pt3dadd( -24.4821, -265.801, 52.9111, 0.66 ) }
    dend_28 { pt3dadd( -23.9246, -266.317, 53.529, 0.22 ) }
    dend_28 { pt3dadd( -23.591, -266.598, 53.846, 0.22 ) }
    dend_28 { pt3dadd( -23.277, -266.826, 54.1437, 0.74 ) }
    dend_28 { pt3dadd( -22.939, -267.028, 54.4588, 0.74 ) }
    dend_28 { pt3dadd( -22.1538, -267.374, 55.2741, 0.22 ) }
    dend_28 { pt3dadd( -21.389, -267.605, 56.1896, 0.22 ) }
    dend_28 { pt3dadd( -20.9853, -267.695, 56.7534, 0.37 ) }
    dend_28 { pt3dadd( -19.9287, -267.893, 58.3819, 0.37 ) }
    dend_28 { pt3dadd( -19.6132, -267.944, 58.9358, 0.74 ) }
    dend_28 { pt3dadd( -18.8717, -268.035, 60.3941, 0.74 ) }
    dend_28 { pt3dadd( -18.3301, -268.09, 61.5649, 0.52 ) }
    dend_28 { pt3dadd( -17.7349, -268.18, 62.9431, 0.52 ) }
    dend_28 { pt3dadd( -17.537, -268.226, 63.4292, 0.52 ) }
    dend_28 { pt3dadd( -16.9639, -268.39, 64.877, 0.52 ) }
    dend_28 { pt3dadd( -16.6745, -268.489, 65.6295, 0.52 ) }
    dend_28 { pt3dadd( -16.1689, -268.684, 66.9489, 0.52 ) }
    dend_28 { pt3dadd( -16.004, -268.75, 67.3826, 0.52 ) }
    dend_28 { pt3dadd( -14.7577, -269.195, 70.5404, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 68/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.1453, 22.8172, -6.24143, 0.96 ) }
    dend_22 { pt3dadd( -14.6302, 24.3551, -5.97445, 0.96 ) }
    dend_22 { pt3dadd( -15.8192, 25.1308, -5.82352, 0.96 ) }
    dend_22 { pt3dadd( -17.1586, 26.1122, -5.58478, 0.88 ) }
    dend_22 { pt3dadd( -18.3902, 27.0984, -5.31946, 0.88 ) }
    dend_22 { pt3dadd( -19.5867, 28.1429, -4.97424, 0.81 ) }
    dend_22 { pt3dadd( -20.7867, 29.3006, -4.51227, 0.66 ) }
    dend_22 { pt3dadd( -21.5497, 30.1882, -4.01232, 1.03 ) }
    dend_22 { pt3dadd( -22.3724, 31.2769, -3.22444, 1.18 ) }
    dend_22 { pt3dadd( -22.6474, 31.6698, -2.86404, 1.33 ) }
    dend_22 { pt3dadd( -23.3774, 32.7189, -1.74031, 1.03 ) }
    dend_22 { pt3dadd( -24.1972, 33.8227, -0.491823, 0.96 ) }
    dend_22 { pt3dadd( -25.0829, 34.8338, 0.799337, 0.96 ) }
    dend_22 { pt3dadd( -26.3667, 35.9682, 2.47551, 1.33 ) }
    dend_22 { pt3dadd( -27.4711, 36.7074, 3.774, 1.03 ) }
    dend_22 { pt3dadd( -28.027, 36.9835, 4.41107, 1.03 ) }
    dend_22 { pt3dadd( -29.5017, 37.4678, 6.07377, 0.74 ) }
    dend_22 { pt3dadd( -30.3503, 37.6469, 7.06703, 0.96 ) }
    dend_22 { pt3dadd( -31.0024, 37.755, 7.86898, 1.55 ) }
    dend_22 { pt3dadd( -32.0958, 37.9562, 9.37113, 1.25 ) }
    dend_22 { pt3dadd( -33.2113, 38.2347, 11.2785, 1.03 ) }
    dend_22 { pt3dadd( -33.8928, 38.4699, 12.7903, 0.74 ) }
    dend_22 { pt3dadd( -34.2846, 38.6665, 13.8581, 0.74 ) }
    dend_22 { pt3dadd( -34.6766, 38.9042, 15.0567, 1.11 ) }
    dend_22 { pt3dadd( -35.0596, 39.155, 16.2811, 1.11 ) }
    dend_22 { pt3dadd( -35.8604, 39.6783, 18.722, 0.96 ) }
    dend_22 { pt3dadd( -36.6497, 40.2274, 20.9725, 1.18 ) }
    dend_22 { pt3dadd( -37.2325, 40.6753, 22.537, 1.55 ) }
    dend_22 { pt3dadd( -37.6633, 41.0316, 23.58, 1.55 ) }
    dend_22 { pt3dadd( -38.1617, 41.4685, 24.5983, 1.18 ) }
    dend_22 { pt3dadd( -38.6957, 41.9713, 25.403, 0.88 ) }
    dend_22 { pt3dadd( -39.4551, 42.7842, 26.3022, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -40.2474, 43.7369, 27.2236, 0.96 ) }
    dend_22 { pt3dadd( -40.7852, 44.4799, 27.9395, 1.18 ) }
    dend_22 { pt3dadd( -41.3141, 45.3634, 28.787, 1.18 ) }
    dend_22 { pt3dadd( -41.8717, 46.5596, 29.9675, 1.11 ) }
    dend_22 { pt3dadd( -42.4832, 48.1641, 31.6037, 1.18 ) }
    dend_22 { pt3dadd( -42.9821, 49.6985, 33.2091, 1.03 ) }
    dend_22 { pt3dadd( -43.3277, 50.8832, 34.543, 1.03 ) }
    dend_22 { pt3dadd( -43.6356, 52.1031, 36.0401, 0.88 ) }
    dend_22 { pt3dadd( -43.8957, 53.3656, 37.6322, 1.03 ) }
    dend_22 { pt3dadd( -44.0746, 54.421, 38.9794, 0.74 ) }
    dend_22 { pt3dadd( -44.2371, 55.5146, 40.3273, 0.66 ) }
    dend_22 { pt3dadd( -44.4067, 56.8574, 41.9385, 0.59 ) }
    dend_22 { pt3dadd( -44.6018, 58.3676, 43.8285, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.1453, 22.8172, -6.24143, 1.03 ) }
    dend_11 { pt3dadd( -13.8329, 23.0767, -8.35083, 1.03 ) }
    dend_11 { pt3dadd( -15.5879, 23.3257, -10.3234, 1.03 ) }
    dend_11 { pt3dadd( -17.14, 23.5279, -11.9015, 1.18 ) }
    dend_11 { pt3dadd( -18.9743, 23.7399, -13.6409, 1.18 ) }
    dend_11 { pt3dadd( -20.2435, 23.8826, -14.7905, 1.18 ) }
    dend_11 { pt3dadd( -21.6789, 24.0471, -16.0808, 1.03 ) }
    dend_11 { pt3dadd( -23.0171, 24.2193, -17.1668, 0.96 ) }
    dend_11 { pt3dadd( -23.9683, 24.3643, -17.8838, 1.18 ) }
    dend_11 { pt3dadd( -25.0233, 24.5435, -18.6607, 1.03 ) }
    dend_11 { pt3dadd( -26.0051, 24.7189, -19.3771, 1.03 ) }
    dend_11 { pt3dadd( -27.2586, 24.9615, -20.2817, 1.03 ) }
    dend_11 { pt3dadd( -28.2278, 25.1611, -20.9604, 1.18 ) }
    dend_11 { pt3dadd( -29.7295, 25.5037, -21.9009, 1.18 ) }
    dend_11 { pt3dadd( -30.7657, 25.7721, -22.4833, 1.18 ) }
    dend_11 { pt3dadd( -31.9793, 26.1174, -23.1245, 1.11 ) }
    dend_11 { pt3dadd( -33.2437, 26.495, -23.7296, 1.18 ) }
    dend_11 { pt3dadd( -34.0194, 26.7522, -24.0532, 0.96 ) }
    dend_11 { pt3dadd( -35.1158, 27.1884, -24.4654, 0.81 ) }
    dend_11 { pt3dadd( -36.4686, 27.8562, -24.9412, 1.03 ) }
    dend_11 { pt3dadd( -38.4382, 29.0052, -25.597, 1.25 ) }
    dend_11 { pt3dadd( -39.0586, 29.4106, -25.7991, 1.25 ) }
    dend_11 { pt3dadd( -39.9859, 30.045, -26.0785, 0.88 ) }
    dend_11 { pt3dadd( -41.2707, 30.9076, -26.4351, 0.88 ) }
    dend_11 { pt3dadd( -42.7305, 31.823, -26.7875, 1.11 ) }
    dend_11 { pt3dadd( -43.943, 32.514, -26.9951, 1.11 ) }
    dend_11 { pt3dadd( -45.4546, 33.3074, -27.1706, 0.96 ) }
    dend_11 { pt3dadd( -46.7154, 33.9099, -27.3088, 1.03 ) }
    dend_11 { pt3dadd( -47.9337, 34.4393, -27.4462, 1.03 ) }
    dend_11 { pt3dadd( -49.1997, 34.93, -27.5839, 0.96 ) }
    dend_11 { pt3dadd( -50.3721, 35.3576, -27.6875, 0.96 ) }
    dend_11 { pt3dadd( -51.6347, 35.7955, -27.8166, 0.96 ) }
    dend_11 { pt3dadd( -53.2179, 36.3136, -27.9604, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -23.9736, 83.0072, -50.0777, 1.18 ) }
    dend_9 { pt3dadd( -24.1135, 85.5625, -50.0672, 1.18 ) }
    dend_9 { pt3dadd( -24.1178, 87.3005, -50.1169, 0.96 ) }
    dend_9 { pt3dadd( -24.0694, 88.4446, -50.2331, 0.96 ) }
    dend_9 { pt3dadd( -24.0098, 89.478, -50.4195, 0.96 ) }
    dend_9 { pt3dadd( -23.9157, 91.3582, -50.8739, 0.96 ) }
    dend_9 { pt3dadd( -23.889, 93.1939, -51.3897, 1.03 ) }
    dend_9 { pt3dadd( -23.8815, 94.5228, -51.8664, 1.11 ) }
    dend_9 { pt3dadd( -23.9072, 96.099, -52.5713, 0.88 ) }
    dend_9 { pt3dadd( -24.0105, 97.3073, -53.1667, 0.88 ) }
    dend_9 { pt3dadd( -24.2173, 98.5494, -53.7598, 0.88 ) }
    dend_9 { pt3dadd( -24.5575, 100.09, -54.4663, 1.03 ) }
    dend_9 { pt3dadd( -24.8184, 101.134, -54.9097, 1.03 ) }
    dend_9 { pt3dadd( -25.3707, 103.272, -55.674, 1.18 ) }
    dend_9 { pt3dadd( -25.9082, 105.506, -56.3561, 0.88 ) }
    dend_9 { pt3dadd( -26.4861, 108.258, -57.0951, 0.81 ) }
    dend_9 { pt3dadd( -26.6574, 109.273, -57.3399, 0.96 ) }
    dend_9 { pt3dadd( -26.8081, 110.314, -57.5831, 0.96 ) }
    dend_9 { pt3dadd( -27.1203, 112.397, -58.0671, 0.88 ) }
    dend_9 { pt3dadd( -27.3398, 113.875, -58.3924, 0.88 ) }
    dend_9 { pt3dadd( -27.5963, 115.508, -58.7969, 1.11 ) }
    dend_9 { pt3dadd( -28.0323, 118.02, -59.5007, 1.25 ) }
    dend_9 { pt3dadd( -28.3421, 119.624, -59.9738, 1.03 ) }
    dend_9 { pt3dadd( -28.7003, 121.368, -60.5236, 1.03 ) }
    dend_9 { pt3dadd( -28.9832, 122.722, -60.975, 1.18 ) }
    dend_9 { pt3dadd( -29.5026, 125.092, -61.8589, 0.96 ) }
    dend_9 { pt3dadd( -29.9015, 126.993, -62.6434, 1.11 ) }
    dend_9 { pt3dadd( -30.1688, 128.581, -63.3514, 1.11 ) }
    dend_9 { pt3dadd( -30.3291, 130.333, -64.1372, 1.18 ) }
    dend_9 { pt3dadd( -30.3286, 132.013, -64.9001, 0.74 ) }
    dend_9 { pt3dadd( -30.169, 133.662, -65.6587, 0.88 ) }
    dend_9 { pt3dadd( -29.9183, 134.835, -66.1827, 1.25 ) }
    dend_9 { pt3dadd( -29.382, 136.421, -66.8754, 1.33 ) }
    dend_9 { pt3dadd( -28.6212, 138.054, -67.5228, 0.96 ) }
    dend_9 { pt3dadd( -27.8127, 139.419, -67.9877, 0.74 ) }
    dend_9 { pt3dadd( -26.999, 140.606, -68.3299, 0.81 ) }
    dend_9 { pt3dadd( -26.2397, 141.595, -68.5079, 0.81 ) }
    dend_9 { pt3dadd( -25.2384, 142.847, -68.6467, 0.74 ) }
    dend_9 { pt3dadd( -24.3888, 143.933, -68.6688, 1.25 ) }
    dend_9 { pt3dadd( -23.2472, 145.422, -68.5884, 1.4 ) }
    dend_9 { pt3dadd( -22.4107, 146.61, -68.4273, 1.4 ) }
    dend_9 { pt3dadd( -20.8249, 149.052, -67.9783, 0.88 ) }
    dend_9 { pt3dadd( -20.479, 149.623, -67.8487, 0.88 ) }
    dend_9 { pt3dadd( -19.6189, 151.147, -67.4649, 0.88 ) }
    dend_9 { pt3dadd( -19.0512, 152.243, -67.2072, 0.88 ) }
    dend_9 { pt3dadd( -18.2105, 154.088, -66.8687, 0.96 ) }
    dend_9 { pt3dadd( -17.77, 155.22, -66.7516, 0.96 ) }
    dend_9 { pt3dadd( -17.2299, 156.903, -66.7266, 1.55 ) }
    dend_9 { pt3dadd( -17.0697, 157.469, -66.727, 1.55 ) }
    dend_9 { pt3dadd( -16.4982, 159.719, -66.8656, 1.18 ) }
    dend_9 { pt3dadd( -16.0204, 162.002, -67.1326, 1.25 ) }
    dend_9 { pt3dadd( -15.7593, 163.823, -67.4788, 1.62 ) }
    dend_9 { pt3dadd( -15.7003, 164.759, -67.722, 1.62 ) }
    dend_9 { pt3dadd( -15.723, 167.303, -68.532, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -15.8678, 169.263, -69.2759, 0.96 ) }
    dend_9 { pt3dadd( -16.0526, 170.546, -69.8536, 1.33 ) }
    dend_9 { pt3dadd( -16.4438, 172.407, -70.8465, 1.11 ) }
    dend_9 { pt3dadd( -16.9017, 174.177, -71.9972, 1.33 ) }
    dend_9 { pt3dadd( -17.2616, 175.427, -72.9289, 1.33 ) }
    dend_9 { pt3dadd( -17.7668, 176.963, -74.274, 1.47 ) }
    dend_9 { pt3dadd( -18.0888, 177.912, -75.132, 1.62 ) }
    dend_9 { pt3dadd( -18.6698, 179.646, -76.7589, 1.03 ) }
    dend_9 { pt3dadd( -19.1384, 181.131, -78.1468, 0.96 ) }
    dend_9 { pt3dadd( -19.4148, 182.136, -79.0599, 0.88 ) }
    dend_9 { pt3dadd( -19.7967, 183.717, -80.5185, 0.81 ) }
    dend_9 { pt3dadd( -19.9599, 184.502, -81.1753, 1.18 ) }
    dend_9 { pt3dadd( -20.4036, 186.829, -82.9064, 0.96 ) }
    dend_9 { pt3dadd( -20.8122, 189.006, -84.2962, 0.96 ) }
    dend_9 { pt3dadd( -21.1454, 190.852, -85.215, 0.74 ) }
    dend_9 { pt3dadd( -21.4862, 192.836, -85.9831, 0.59 ) }
    dend_9 { pt3dadd( -21.902, 195.442, -86.7087, 0.59 ) }
    dend_9 { pt3dadd( -22.2294, 197.432, -87.1495, 0.52 ) }
    dend_9 { pt3dadd( -22.4482, 198.747, -87.348, 0.74 ) }
    dend_9 { pt3dadd( -22.9475, 201.335, -87.6221, 1.03 ) }
    dend_9 { pt3dadd( -23.2422, 202.654, -87.701, 1.11 ) }
    dend_9 { pt3dadd( -23.5988, 204.214, -87.7471, 0.74 ) }
    dend_9 { pt3dadd( -24.0959, 206.402, -87.8366, 0.66 ) }
    dend_9 { pt3dadd( -24.3626, 207.57, -87.9061, 0.52 ) }
    dend_9 { pt3dadd( -24.6653, 208.905, -88.0468, 0.22 ) }
    dend_9 { pt3dadd( -25.2112, 211.032, -88.452, 0.15 ) }
    dend_9 { pt3dadd( -25.3926, 211.709, -88.5802, 0.22 ) }
    dend_9 { pt3dadd( -27.936, 222.791, -92.349, 0.22 ) }
    dend_9 { pt3dadd( -29.6228, 232.849, -98.7004, 0.22 ) }
    dend_9 { pt3dadd( -31.1469, 243.602, -103.775, 0.22 ) }
    dend_9 { pt3dadd( -34.2531, 254.428, -107.884, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -23.9736, 83.0072, -50.0777, 0.66 ) }
    dend_6 { pt3dadd( -24.3961, 83.2275, -52.8049, 0.66 ) }
    dend_6 { pt3dadd( -24.6813, 83.3761, -54.6454, 0.59 ) }
    dend_6 { pt3dadd( -24.9678, 83.5254, -56.4946, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 32.9407, 6.66887, 29.1744, 0.88 ) }
    dend_43 { pt3dadd( 33.5504, 8.21764, 28.8688, 0.88 ) }
    dend_43 { pt3dadd( 34.0434, 9.59842, 28.5383, 0.59 ) }
    dend_43 { pt3dadd( 34.6244, 11.1879, 28.1434, 0.59 ) }
    dend_43 { pt3dadd( 35.0849, 12.2712, 27.8699, 0.59 ) }
    dend_43 { pt3dadd( 35.5239, 13.19, 27.5987, 0.59 ) }
    dend_43 { pt3dadd( 36.0106, 14.1308, 27.2673, 0.81 ) }
    dend_43 { pt3dadd( 36.5799, 15.1173, 26.8011, 0.81 ) }
    dend_43 { pt3dadd( 37.0601, 15.8023, 26.4044, 0.81 ) }
    dend_43 { pt3dadd( 37.8625, 16.7298, 25.7839, 0.52 ) }
    dend_43 { pt3dadd( 38.8735, 17.7403, 25.0004, 0.52 ) }
    dend_43 { pt3dadd( 39.669, 18.4589, 24.3617, 0.52 ) }
    dend_43 { pt3dadd( 40.4106, 19.0923, 23.7717, 0.52 ) }
    dend_43 { pt3dadd( 40.9348, 19.554, 23.3713, 0.52 ) }
    dend_43 { pt3dadd( 41.7023, 20.2928, 22.7412, 0.44 ) }
    dend_43 { pt3dadd( 42.638, 21.2679, 21.9275, 0.59 ) }
    dend_43 { pt3dadd( 43.4414, 22.0766, 21.282, 0.44 ) }
    dend_43 { pt3dadd( 43.9347, 22.5556, 20.877, 0.66 ) }
    dend_43 { pt3dadd( 44.6627, 23.2117, 20.2864, 0.37 ) }
    dend_43 { pt3dadd( 45.6277, 23.9974, 19.4796, 0.37 ) }
    dend_43 { pt3dadd( 46.6075, 24.647, 18.7016, 0.59 ) }
    dend_43 { pt3dadd( 47.3629, 25.0696, 18.1075, 1.11 ) }
    dend_43 { pt3dadd( 48.6892, 25.7935, 17.0015, 1.11 ) }
    dend_43 { pt3dadd( 49.711, 26.3697, 16.1149, 0.66 ) }
    dend_43 { pt3dadd( 50.8015, 27.054, 15.1606, 0.52 ) }
    dend_43 { pt3dadd( 51.561, 27.636, 14.4727, 0.29 ) }
    dend_43 { pt3dadd( 52.3166, 28.4199, 13.714, 0.29 ) }
    dend_43 { pt3dadd( 52.9323, 29.3976, 12.8928, 0.59 ) }
    dend_43 { pt3dadd( 53.1935, 30.05, 12.4222, 0.59 ) }
    dend_43 { pt3dadd( 53.5014, 31.2236, 11.6589, 0.37 ) }
    dend_43 { pt3dadd( 53.7354, 32.4128, 10.9283, 0.37 ) }
    dend_43 { pt3dadd( 53.8835, 33.2443, 10.4101, 0.59 ) }
    dend_43 { pt3dadd( 54.2287, 34.9379, 9.33312, 1.03 ) }
    dend_43 { pt3dadd( 54.5149, 36.0595, 8.58665, 0.88 ) }
    dend_43 { pt3dadd( 54.7944, 36.9705, 7.96651, 0.44 ) }
    dend_43 { pt3dadd( 55.2581, 38.2983, 6.99446, 0.44 ) }
    dend_43 { pt3dadd( 55.5308, 38.9571, 6.51481, 0.44 ) }
    dend_43 { pt3dadd( 55.7976, 39.4827, 6.10612, 0.66 ) }
    dend_43 { pt3dadd( 56.0616, 39.8858, 5.7838, 0.66 ) }
    dend_43 { pt3dadd( 56.516, 40.4802, 5.24264, 0.44 ) }
    dend_43 { pt3dadd( 57.6842, 41.8124, 3.90934, 0.44 ) }
    dend_43 { pt3dadd( 58.0368, 42.1585, 3.53514, 0.81 ) }
    dend_43 { pt3dadd( 58.6074, 42.6734, 2.89443, 1.03 ) }
    dend_43 { pt3dadd( 59.3842, 43.3452, 1.85001, 0.66 ) }
    dend_43 { pt3dadd( 59.9488, 43.8402, 0.89542, 0.66 ) }
    dend_43 { pt3dadd( 60.555, 44.4407, -0.532413, 0.52 ) }
    dend_43 { pt3dadd( 60.9867, 44.9625, -2.0501, 0.37 ) }
    dend_43 { pt3dadd( 61.2468, 45.4146, -3.61811, 0.44 ) }
    dend_43 { pt3dadd( 61.4522, 46.0325, -6.11306, 0.52 ) }
    dend_43 { pt3dadd( 61.5188, 46.4518, -8.05524, 0.52 ) }
    dend_43 { pt3dadd( 61.5892, 46.9339, -10.4859, 0.52 ) }
    dend_43 { pt3dadd( 61.6482, 47.3326, -12.525, 0.81 ) }
    dend_43 { pt3dadd( 61.7277, 47.6852, -14.1462, 1.03 ) }
    dend_43 { pt3dadd( 61.8918, 48.0901, -15.6108, 1.03 ) }
    dend_43 { pt3dadd( 62.1416, 48.4836, -16.633, 0.81 ) }
    dend_43 { pt3dadd( 62.6914, 49.1907, -17.9859, 0.59 ) }
    dend_43 { pt3dadd( 63.2415, 49.8388, -18.9034, 0.59 ) }
    dend_43 { pt3dadd( 63.6684, 50.3544, -19.4721, 0.44 ) }
    dend_43 { pt3dadd( 64.5554, 51.4316, -20.5295, 0.44 ) }
    dend_43 { pt3dadd( 65.2236, 52.2095, -21.2545, 0.37 ) }
    dend_43 { pt3dadd( 65.7334, 52.757, -21.7544, 0.37 ) }
    dend_43 { pt3dadd( 66.351, 53.3317, -22.2752, 0.96 ) }
    dend_43 { pt3dadd( 67.5907, 54.296, -23.1654, 0.66 ) }
    dend_43 { pt3dadd( 68.43, 54.887, -23.725, 0.66 ) }
    dend_43 { pt3dadd( 69.2903, 55.4808, -24.3141, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 70.355, 56.3108, -25.2088, 0.74 ) }
    dend_43 { pt3dadd( 71.2074, 57.1485, -26.1726, 0.74 ) }
    dend_43 { pt3dadd( 72.0348, 58.2394, -27.4224, 0.74 ) }
    dend_43 { pt3dadd( 72.5176, 59.1771, -28.4302, 0.59 ) }
    dend_43 { pt3dadd( 73.0455, 60.7651, -30.0028, 0.81 ) }
    dend_43 { pt3dadd( 73.3612, 62.4704, -31.5797, 0.96 ) }
    dend_43 { pt3dadd( 73.4753, 64.1493, -33.0267, 0.96 ) }
    dend_43 { pt3dadd( 73.4706, 65.0737, -33.7157, 0.66 ) }
    dend_43 { pt3dadd( 73.4484, 66.076, -34.3349, 0.59 ) }
    dend_43 { pt3dadd( 73.4657, 66.7986, -34.7327, 0.44 ) }
    dend_43 { pt3dadd( 73.5603, 68.002, -35.2688, 0.88 ) }
    dend_43 { pt3dadd( 73.6387, 68.5651, -35.5375, 0.88 ) }
    dend_43 { pt3dadd( 73.8566, 69.6853, -36.3519, 0.29 ) }
    dend_43 { pt3dadd( 74.1475, 70.9829, -37.9615, 0.29 ) }
    dend_43 { pt3dadd( 74.4388, 72.2038, -40.2029, 0.29 ) }
    dend_43 { pt3dadd( 74.5149, 72.5259, -40.9218, 0.88 ) }
    dend_43 { pt3dadd( 74.6766, 73.2974, -42.8477, 0.88 ) }
    dend_43 { pt3dadd( 74.7608, 73.9237, -44.4111, 0.88 ) }
    dend_43 { pt3dadd( 74.7588, 74.4543, -45.6864, 0.88 ) }
    dend_43 { pt3dadd( 74.6198, 75.252, -47.2361, 0.88 ) }
    dend_43 { pt3dadd( 74.5074, 75.6326, -47.7241, 0.88 ) }
    dend_43 { pt3dadd( 74.3083, 76.2191, -48.1627, 0.88 ) }
    dend_43 { pt3dadd( 73.82, 77.2899, -48.482, 0.52 ) }
    dend_43 { pt3dadd( 73.3145, 78.1914, -48.6437, 0.52 ) }
    dend_43 { pt3dadd( 72.8241, 78.9645, -48.7893, 1.03 ) }
    dend_43 { pt3dadd( 72.333, 79.7327, -48.976, 1.03 ) }
    dend_43 { pt3dadd( 71.8049, 80.6073, -49.2603, 0.81 ) }
    dend_43 { pt3dadd( 71.0564, 81.9785, -49.8131, 0.44 ) }
    dend_43 { pt3dadd( 70.4942, 83.2047, -50.3804, 0.52 ) }
    dend_43 { pt3dadd( 70.0737, 84.2937, -50.938, 0.52 ) }
    dend_43 { pt3dadd( 69.6326, 85.5146, -51.6586, 0.66 ) }
    dend_43 { pt3dadd( 69.3904, 86.1112, -52.1038, 0.52 ) }
    dend_43 { pt3dadd( 68.9843, 86.9683, -52.8489, 0.66 ) }
    dend_43 { pt3dadd( 68.4871, 87.8895, -53.6884, 0.88 ) }
    dend_43 { pt3dadd( 67.6298, 89.2583, -54.9257, 0.59 ) }
    dend_43 { pt3dadd( 66.9863, 90.1891, -55.7488, 0.59 ) }
    dend_43 { pt3dadd( 65.6701, 91.9978, -57.3944, 0.52 ) }
    dend_43 { pt3dadd( 65.1638, 92.7101, -58.0456, 0.52 ) }
    dend_43 { pt3dadd( 64.8072, 93.3149, -58.561, 0.52 ) }
    dend_43 { pt3dadd( 64.4386, 94.2752, -59.2168, 0.52 ) }
    dend_43 { pt3dadd( 64.3717, 95.3002, -59.594, 0.44 ) }
    dend_43 { pt3dadd( 64.4988, 96.4181, -59.7479, 0.74 ) }
    dend_43 { pt3dadd( 64.6151, 97.0313, -59.7481, 0.81 ) }
    dend_43 { pt3dadd( 65.0031, 98.7139, -59.7145, 0.59 ) }
    dend_43 { pt3dadd( 65.2892, 99.8345, -59.7398, 0.66 ) }
    dend_43 { pt3dadd( 65.6571, 101.275, -59.7748, 0.59 ) }
    dend_43 { pt3dadd( 65.9961, 102.784, -59.7834, 0.59 ) }
    dend_43 { pt3dadd( 66.2113, 103.932, -59.7467, 0.66 ) }
    dend_43 { pt3dadd( 66.4054, 105.212, -59.6898, 0.52 ) }
    dend_43 { pt3dadd( 66.6424, 107.117, -59.5488, 0.81 ) }
    dend_43 { pt3dadd( 69.9539, 114.581, -65.9938, 0.81 ) }
    dend_43 { pt3dadd( 72.305, 121.687, -73.2273, 0.81 ) }
    dend_43 { pt3dadd( 73.8249, 128.176, -81.2344, 0.81 ) }
    dend_43 { pt3dadd( 73.4156, 135.093, -88.9922, 0.81 ) }
    dend_43 { pt3dadd( 72.9739, 143.382, -95.1926, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 32.9407, 6.66887, 29.1744, 0.81 ) }
    dend_40 { pt3dadd( 32.5057, 7.21263, 29.258, 0.81 ) }
    dend_40 { pt3dadd( 31.9918, 7.87831, 29.3913, 0.74 ) }
    dend_40 { pt3dadd( 31.5227, 8.48232, 29.5906, 0.59 ) }
    dend_40 { pt3dadd( 30.8455, 9.37776, 29.9394, 0.37 ) }
    dend_40 { pt3dadd( 30.3543, 10.0703, 30.2607, 0.44 ) }
    dend_40 { pt3dadd( 29.9115, 10.7399, 30.5951, 0.44 ) }
    dend_40 { pt3dadd( 29.4951, 11.4273, 30.9746, 0.74 ) }
    dend_40 { pt3dadd( 28.8867, 12.5243, 31.6292, 0.44 ) }
    dend_40 { pt3dadd( 28.6376, 13.0588, 31.9592, 0.52 ) }
    dend_40 { pt3dadd( 28.3271, 13.9018, 32.4861, 0.66 ) }
    dend_40 { pt3dadd( 28.187, 14.3812, 32.7607, 0.44 ) }
    dend_40 { pt3dadd( 28.0254, 15.0282, 33.0878, 0.44 ) }
    dend_40 { pt3dadd( 27.8913, 15.6575, 33.3647, 0.37 ) }
    dend_40 { pt3dadd( 27.7337, 16.5601, 33.6817, 0.37 ) }
    dend_40 { pt3dadd( 27.6151, 17.301, 33.9155, 0.44 ) }
    dend_40 { pt3dadd( 27.5347, 17.8635, 34.0735, 0.22 ) }
    dend_40 { pt3dadd( 27.4743, 18.3716, 34.2191, 0.22 ) }
    dend_40 { pt3dadd( 27.4062, 19.0231, 34.4093, 0.29 ) }
    dend_40 { pt3dadd( 27.3313, 19.7307, 34.5988, 0.74 ) }
    dend_40 { pt3dadd( 27.2521, 20.4163, 34.7669, 0.59 ) }
    dend_40 { pt3dadd( 27.1727, 21.0701, 34.9141, 0.44 ) }
    dend_40 { pt3dadd( 27.1112, 21.6836, 34.9923, 0.22 ) }
    dend_40 { pt3dadd( 27.0822, 22.1851, 35.0194, 0.22 ) }
    dend_40 { pt3dadd( 27.0664, 22.8391, 35.0525, 0.22 ) }
    dend_40 { pt3dadd( 27.0689, 23.4466, 35.0863, 0.37 ) }
    dend_40 { pt3dadd( 27.0799, 23.8494, 35.0942, 0.37 ) }
    dend_40 { pt3dadd( 27.1285, 25.2973, 35.0995, 0.74 ) }
    dend_40 { pt3dadd( 27.1578, 26.2548, 35.0844, 0.22 ) }
    dend_40 { pt3dadd( 27.1794, 27.3103, 35.0706, 0.22 ) }
    dend_40 { pt3dadd( 27.1739, 28.0964, 35.0583, 0.44 ) }
    dend_40 { pt3dadd( 27.1076, 29.0595, 34.9861, 0.29 ) }
    dend_40 { pt3dadd( 27.0355, 29.6382, 34.8814, 0.66 ) }
    dend_40 { pt3dadd( 26.9159, 30.2924, 34.7203, 0.66 ) }
    dend_40 { pt3dadd( 26.7568, 30.9293, 34.5267, 0.88 ) }
    dend_40 { pt3dadd( 26.5489, 31.6489, 34.2992, 0.88 ) }
    dend_40 { pt3dadd( 26.1673, 33.0045, 33.9269, 0.59 ) }
    dend_40 { pt3dadd( 25.8693, 34.2985, 33.6624, 0.44 ) }
    dend_40 { pt3dadd( 25.7286, 35.0745, 33.5268, 0.44 ) }
    dend_40 { pt3dadd( 25.5607, 36.1985, 33.3881, 0.52 ) }
    dend_40 { pt3dadd( 25.4557, 37.0321, 33.2948, 0.59 ) }
    dend_40 { pt3dadd( 25.3337, 38.1871, 33.1756, 0.44 ) }
    dend_40 { pt3dadd( 25.2434, 39.2472, 33.0896, 0.22 ) }
    dend_40 { pt3dadd( 25.1719, 40.0989, 33.0014, 0.44 ) }
    dend_40 { pt3dadd( 25.1028, 40.8866, 32.8822, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 24.9876, 42.1176, 32.6695, 1.11 ) }
    dend_40 { pt3dadd( 24.8386, 43.2845, 32.4653, 0.96 ) }
    dend_40 { pt3dadd( 24.7268, 43.9419, 32.3606, 0.96 ) }
    dend_40 { pt3dadd( 24.442, 45.371, 32.1763, 0.59 ) }
    dend_40 { pt3dadd( 24.2509, 46.2522, 32.1179, 0.37 ) }
    dend_40 { pt3dadd( 24.0336, 47.2389, 32.1498, 0.22 ) }
    dend_40 { pt3dadd( 23.8816, 47.845, 32.2531, 0.66 ) }
    dend_40 { pt3dadd( 23.7369, 48.3701, 32.3725, 0.74 ) }
    dend_40 { pt3dadd( 23.5753, 48.952, 32.5069, 0.52 ) }
    dend_40 { pt3dadd( 23.3452, 49.7819, 32.6793, 0.59 ) }
    dend_40 { pt3dadd( 23.0478, 50.9112, 32.8475, 0.66 ) }
    dend_40 { pt3dadd( 22.8004, 51.9099, 32.9566, 0.29 ) }
    dend_40 { pt3dadd( 22.5128, 53.0926, 33.0611, 0.29 ) }
    dend_40 { pt3dadd( 22.3105, 53.9596, 33.0994, 0.37 ) }
    dend_40 { pt3dadd( 22.0584, 55.1411, 33.1133, 0.44 ) }
    dend_40 { pt3dadd( 21.8746, 56.0864, 33.0743, 0.52 ) }
    dend_40 { pt3dadd( 21.6892, 57.0233, 32.9859, 0.66 ) }
    dend_40 { pt3dadd( 21.5264, 57.8835, 32.9083, 0.66 ) }
    dend_40 { pt3dadd( 21.3498, 58.7508, 32.8352, 0.66 ) }
    dend_40 { pt3dadd( 21.1761, 59.5504, 32.7582, 0.96 ) }
    dend_40 { pt3dadd( 20.8716, 61.0369, 32.5861, 0.44 ) }
    dend_40 { pt3dadd( 20.7074, 61.916, 32.4472, 0.44 ) }
    dend_40 { pt3dadd( 20.5824, 62.7348, 32.2833, 0.59 ) }
    dend_40 { pt3dadd( 20.4444, 63.9628, 31.993, 0.22 ) }
    dend_40 { pt3dadd( 20.3964, 64.5346, 31.8551, 0.22 ) }
    dend_40 { pt3dadd( 20.3669, 65.0079, 31.7359, 0.22 ) }
    dend_40 { pt3dadd( 20.3614, 65.314, 31.6642, 0.22 ) }
    dend_40 { pt3dadd( 20.364, 65.8604, 31.5494, 0.22 ) }
    dend_40 { pt3dadd( 20.3617, 66.2947, 31.4581, 0.22 ) }
    dend_40 { pt3dadd( 20.3491, 66.8624, 31.3447, 0.66 ) }
    dend_40 { pt3dadd( 20.3085, 67.6675, 31.1791, 0.66 ) }
    dend_40 { pt3dadd( 20.2288, 68.5262, 31.0219, 0.66 ) }
    dend_40 { pt3dadd( 20.1583, 69.0855, 30.9367, 0.37 ) }
    dend_40 { pt3dadd( 20.0132, 69.977, 30.8141, 0.22 ) }
    dend_40 { pt3dadd( 19.8452, 70.9199, 30.7635, 0.44 ) }
    dend_40 { pt3dadd( 19.7253, 71.5622, 30.801, 0.44 ) }
    dend_40 { pt3dadd( 19.6086, 72.2732, 30.9637, 0.44 ) }
    dend_40 { pt3dadd( 19.4864, 73.1245, 31.4229, 0.22 ) }
    dend_40 { pt3dadd( 19.3835, 73.9053, 31.9502, 0.29 ) }
    dend_40 { pt3dadd( 19.1997, 75.2561, 32.9157, 0.44 ) }
    dend_40 { pt3dadd( 19.0687, 76.1578, 33.5131, 0.66 ) }
    dend_40 { pt3dadd( 18.9329, 77.0878, 33.981, 0.66 ) }
    dend_40 { pt3dadd( 18.7154, 78.6612, 34.4377, 0.29 ) }
    dend_40 { pt3dadd( 18.5163, 80.1371, 34.4977, 0.37 ) }
    dend_40 { pt3dadd( 18.3133, 81.4133, 34.2627, 0.52 ) }
    dend_40 { pt3dadd( 18.0758, 82.5269, 33.8371, 0.74 ) }
    dend_40 { pt3dadd( 17.7755, 83.7438, 33.227, 0.74 ) }
    dend_40 { pt3dadd( 17.5667, 84.5543, 32.7687, 0.74 ) }
    dend_40 { pt3dadd( 17.2455, 85.8123, 32.0081, 0.52 ) }
    dend_40 { pt3dadd( 16.9796, 86.8916, 31.4221, 0.59 ) }
    dend_40 { pt3dadd( 16.5559, 88.5823, 30.6023, 0.22 ) }
    dend_40 { pt3dadd( 16.3802, 89.2788, 30.2912, 0.22 ) }
    dend_40 { pt3dadd( 16.171, 90.0839, 29.9616, 0.59 ) }
    dend_40 { pt3dadd( 15.8542, 91.2488, 29.4771, 0.96 ) }
    dend_40 { pt3dadd( 15.5341, 92.4356, 29.0345, 0.37 ) }
    dend_40 { pt3dadd( 15.3237, 93.3185, 28.7408, 0.44 ) }
    dend_40 { pt3dadd( 15.0805, 94.4977, 28.378, 0.44 ) }
    dend_40 { pt3dadd( 14.8915, 95.5035, 28.0742, 0.44 ) }
    dend_40 { pt3dadd( 14.7632, 96.3113, 27.8249, 0.44 ) }
    dend_40 { pt3dadd( 14.6291, 97.5339, 27.4544, 0.22 ) }
    dend_40 { pt3dadd( 14.533, 98.8668, 27.0415, 0.22 ) }
    dend_40 { pt3dadd( 14.5201, 99.3065, 26.9134, 0.22 ) }
    dend_40 { pt3dadd( 14.5178, 100.077, 26.7247, 0.59 ) }
    dend_40 { pt3dadd( 14.5381, 101.444, 26.4546, 0.29 ) }
    dend_40 { pt3dadd( 14.5325, 102.383, 26.3004, 0.29 ) }
    dend_40 { pt3dadd( 14.4733, 103.395, 26.1509, 0.52 ) }
    dend_40 { pt3dadd( 14.3618, 104.287, 26.0529, 0.88 ) }
    dend_40 { pt3dadd( 14.2449, 104.943, 25.9892, 0.88 ) }
    dend_40 { pt3dadd( 14.0616, 105.827, 25.9282, 0.59 ) }
    dend_40 { pt3dadd( 13.8387, 106.967, 25.8994, 0.22 ) }
    dend_40 { pt3dadd( 13.7517, 107.562, 25.8836, 0.29 ) }
    dend_40 { pt3dadd( 13.7115, 108.078, 25.8575, 0.29 ) }
    dend_40 { pt3dadd( 13.7031, 108.687, 25.8231, 0.81 ) }
    dend_40 { pt3dadd( 13.7435, 109.516, 25.7728, 0.88 ) }
    dend_40 { pt3dadd( 13.8259, 110.261, 25.7401, 0.59 ) }
    dend_40 { pt3dadd( 13.9677, 111.228, 25.699, 0.59 ) }
    dend_40 { pt3dadd( 14.1301, 112.359, 25.6529, 0.29 ) }
    dend_40 { pt3dadd( 14.3084, 113.837, 25.5807, 0.52 ) }
    dend_40 { pt3dadd( 14.3807, 114.766, 25.4939, 0.59 ) }
    dend_40 { pt3dadd( 14.388, 115.738, 25.3592, 0.59 ) }
    dend_40 { pt3dadd( 14.348, 116.457, 25.2268, 0.74 ) }
    dend_40 { pt3dadd( 14.2915, 116.973, 25.0953, 0.74 ) }
    dend_40 { pt3dadd( 14.1396, 117.943, 24.7706, 0.66 ) }
    dend_40 { pt3dadd( 13.9585, 118.852, 24.4073, 0.66 ) }
    dend_40 { pt3dadd( 13.7738, 119.682, 24.0728, 0.74 ) }
    dend_40 { pt3dadd( 13.532, 120.789, 23.7159, 0.52 ) }
    dend_40 { pt3dadd( 13.3946, 121.532, 23.5976, 0.59 ) }
    dend_40 { pt3dadd( 13.2922, 122.312, 23.6456, 0.44 ) }
    dend_40 { pt3dadd( 13.2216, 123.081, 23.7942, 0.59 ) }
    dend_40 { pt3dadd( 13.1759, 123.683, 23.9353, 0.37 ) }
    dend_40 { pt3dadd( 13.0099, 125.069, 24.2032, 0.74 ) }
    dend_40 { pt3dadd( 12.7939, 125.974, 24.2677, 1.03 ) }
    dend_40 { pt3dadd( 12.4247, 127.026, 24.1502, 0.44 ) }
    dend_40 { pt3dadd( 11.6736, 128.666, 23.5115, 0.59 ) }
    dend_40 { pt3dadd( 11.2526, 129.529, 23.0296, 1.18 ) }
    dend_40 { pt3dadd( 10.699, 130.618, 22.3211, 0.37 ) }
    dend_40 { pt3dadd( 10.1155, 131.675, 21.536, 0.37 ) }
    dend_40 { pt3dadd( 9.63047, 132.484, 20.8775, 0.81 ) }
    dend_40 { pt3dadd( 8.84236, 133.791, 19.8078, 0.81 ) }
    dend_40 { pt3dadd( 8.37036, 134.614, 19.2089, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 7.91673, 135.531, 18.6221, 0.37 ) }
    dend_40 { pt3dadd( 7.49165, 136.613, 18.0437, 0.37 ) }
    dend_40 { pt3dadd( 7.06011, 137.936, 17.4818, 0.37 ) }
    dend_40 { pt3dadd( 6.85284, 138.691, 17.2586, 0.52 ) }
    dend_40 { pt3dadd( 6.64633, 139.509, 17.1311, 0.44 ) }
    dend_40 { pt3dadd( 6.43132, 140.39, 17.0089, 0.66 ) }
    dend_40 { pt3dadd( 6.27043, 141.201, 16.878, 0.81 ) }
    dend_40 { pt3dadd( 6.17652, 141.759, 16.7922, 0.81 ) }
    dend_40 { pt3dadd( 6.07273, 142.374, 16.6925, 0.74 ) }
    dend_40 { pt3dadd( 5.80102, 143.741, 16.4449, 0.66 ) }
    dend_40 { pt3dadd( 5.48785, 145.188, 16.1672, 0.44 ) }
    dend_40 { pt3dadd( 5.20814, 146.366, 15.9496, 0.44 ) }
    dend_40 { pt3dadd( 4.98628, 147.287, 15.7996, 1.03 ) }
    dend_40 { pt3dadd( 4.82825, 147.951, 15.7618, 0.66 ) }
    dend_40 { pt3dadd( 4.62529, 148.78, 15.8577, 0.52 ) }
    dend_40 { pt3dadd( 4.52693, 149.21, 15.9649, 0.74 ) }
    dend_40 { pt3dadd( 4.37807, 149.791, 16.1154, 0.96 ) }
    dend_40 { pt3dadd( 4.29187, 150.127, 16.1799, 0.96 ) }
    dend_40 { pt3dadd( 3.89499, 151.671, 16.2418, 0.66 ) }
    dend_40 { pt3dadd( 3.53311, 153.026, 16.0829, 0.66 ) }
    dend_40 { pt3dadd( 3.16447, 154.264, 15.7613, 0.44 ) }
    dend_40 { pt3dadd( 2.65475, 155.725, 15.1965, 0.96 ) }
    dend_40 { pt3dadd( 2.24768, 156.689, 14.6947, 0.52 ) }
    dend_40 { pt3dadd( 1.73626, 157.636, 14.057, 0.52 ) }
    dend_40 { pt3dadd( 1.21692, 158.531, 13.3239, 0.52 ) }
    dend_40 { pt3dadd( 0.77216, 159.183, 12.7048, 0.44 ) }
    dend_40 { pt3dadd( 0.281196, 159.758, 12.1149, 0.44 ) }
    dend_40 { pt3dadd( -0.20528, 160.194, 11.6054, 0.96 ) }
    dend_40 { pt3dadd( -1.16872, 160.812, 10.7012, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 46.9046, -64.7334, 56.5886, 0.37 ) }
    dend_38 { pt3dadd( 47.2422, -66.0573, 58.8653, 0.37 ) }
    dend_38 { pt3dadd( 47.761, -67.6193, 61.0605, 0.37 ) }
    dend_38 { pt3dadd( 48.0703, -68.4216, 62.147, 0.59 ) }
    dend_38 { pt3dadd( 48.5912, -69.7156, 63.8161, 0.44 ) }
    dend_38 { pt3dadd( 48.8841, -70.339, 64.7085, 0.66 ) }
    dend_38 { pt3dadd( 49.3164, -71.1201, 66.0342, 0.44 ) }
    dend_38 { pt3dadd( 49.9775, -72.2009, 67.9002, 0.44 ) }
    dend_38 { pt3dadd( 50.5193, -72.9984, 69.2843, 0.44 ) }
    dend_38 { pt3dadd( 50.9053, -73.511, 70.1919, 0.81 ) }
    dend_38 { pt3dadd( 52.1536, -75.1121, 72.9634, 0.81 ) }
    dend_38 { pt3dadd( 53.3261, -76.6184, 75.5475, 0.81 ) }
    dend_38 { pt3dadd( 53.7054, -77.1177, 76.3739, 0.81 ) }
    dend_38 { pt3dadd( 54.2386, -77.864, 77.4566, 0.44 ) }
    dend_38 { pt3dadd( 54.7305, -78.6392, 78.3784, 0.44 ) }
    dend_38 { pt3dadd( 55.5033, -80.0402, 79.8322, 0.44 ) }
    dend_38 { pt3dadd( 55.8671, -80.8308, 80.5272, 0.66 ) }
    dend_38 { pt3dadd( 56.1152, -81.457, 81.0571, 0.66 ) }
    dend_38 { pt3dadd( 56.6471, -82.9169, 82.4869, 0.52 ) }
    dend_38 { pt3dadd( 57.0685, -84.3023, 84.0096, 0.66 ) }
    dend_38 { pt3dadd( 57.4984, -86.1488, 86.1009, 0.29 ) }
    dend_38 { pt3dadd( 57.6277, -86.9036, 86.9821, 0.29 ) }
    dend_38 { pt3dadd( 57.774, -88.117, 88.3987, 0.22 ) }
    dend_38 { pt3dadd( 57.9025, -89.9973, 90.5217, 0.22 ) }
    dend_38 { pt3dadd( 57.9386, -91.28, 91.9369, 0.22 ) }
    dend_38 { pt3dadd( 57.9329, -92.4491, 93.1797, 0.37 ) }
    dend_38 { pt3dadd( 57.8873, -94.1557, 94.899, 0.74 ) }
    dend_38 { pt3dadd( 57.8569, -95.1452, 95.8082, 0.88 ) }
    dend_38 { pt3dadd( 57.8211, -96.2516, 96.7361, 0.22 ) }
    dend_38 { pt3dadd( 57.6896, -98.1875, 98.0809, 0.22 ) }
    dend_38 { pt3dadd( 57.63, -98.9442, 98.5564, 0.22 ) }
    dend_38 { pt3dadd( 57.5116, -100.142, 99.1395, 0.22 ) }
    dend_38 { pt3dadd( 57.2987, -102.085, 99.7941, 0.15 ) }
    dend_38 { pt3dadd( 57.1659, -103.563, 100.163, 0.15 ) }
    dend_38 { pt3dadd( 56.9803, -106.332, 100.765, 0.22 ) }
    dend_38 { pt3dadd( 56.8789, -108.248, 101.133, 0.22 ) }
    dend_38 { pt3dadd( 56.721, -111.679, 101.887, 0.15 ) }
    dend_38 { pt3dadd( 56.5376, -114.543, 102.58, 0.15 ) }
    dend_38 { pt3dadd( 56.3109, -117.258, 103.374, 0.22 ) }
    dend_38 { pt3dadd( 56.0923, -119.615, 104.21, 0.22 ) }
    dend_38 { pt3dadd( 55.9075, -121.55, 105.026, 0.22 ) }
    dend_38 { pt3dadd( 55.6645, -123.784, 106.097, 0.22 ) }
    dend_38 { pt3dadd( 55.354, -126.659, 107.745, 0.22 ) }
    dend_38 { pt3dadd( 55.0411, -129.573, 109.492, 0.22 ) }
    dend_38 { pt3dadd( 54.8606, -131.331, 110.574, 0.22 ) }
    dend_38 { pt3dadd( 54.754, -132.567, 111.291, 0.52 ) }
    dend_38 { pt3dadd( 54.6736, -134.085, 112.137, 0.59 ) }
    dend_38 { pt3dadd( 54.6815, -135.898, 113.084, 0.22 ) }
    dend_38 { pt3dadd( 54.7567, -137.139, 113.704, 0.15 ) }
    dend_38 { pt3dadd( 54.875, -138.733, 114.541, 0.15 ) }
    dend_38 { pt3dadd( 54.8628, -140.445, 115.298, 0.22 ) }
    dend_38 { pt3dadd( 54.7096, -141.663, 115.8, 0.37 ) }
    dend_38 { pt3dadd( 54.409, -143.348, 116.482, 0.37 ) }
    dend_38 { pt3dadd( 53.9647, -145.146, 117.144, 0.15 ) }
    dend_38 { pt3dadd( 53.1049, -147.942, 118.14, 0.15 ) }
    dend_38 { pt3dadd( 51.5063, -152.255, 119.447, 0.15 ) }
    dend_38 { pt3dadd( 50.6094, -154.231, 120.007, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 46.9046, -64.7334, 56.5886, 0.29 ) }
    dend_37 { pt3dadd( 47.1507, -65.4131, 56.0161, 0.29 ) }
    dend_37 { pt3dadd( 47.5937, -66.5183, 55.0186, 0.37 ) }
    dend_37 { pt3dadd( 47.8676, -67.1794, 54.4198, 0.37 ) }
    dend_37 { pt3dadd( 48.2536, -68.0394, 53.6552, 0.22 ) }
    dend_37 { pt3dadd( 48.7191, -68.9661, 52.8361, 0.22 ) }
    dend_37 { pt3dadd( 48.9945, -69.4767, 52.4032, 0.52 ) }
    dend_37 { pt3dadd( 49.5549, -70.555, 51.5331, 0.29 ) }
    dend_37 { pt3dadd( 49.8172, -71.0604, 51.1527, 0.44 ) }
    dend_37 { pt3dadd( 50.0738, -71.5838, 50.777, 0.66 ) }
    dend_37 { pt3dadd( 50.4006, -72.3317, 50.2698, 0.37 ) }
    dend_37 { pt3dadd( 50.6537, -73.081, 49.8218, 0.29 ) }
    dend_37 { pt3dadd( 50.8604, -73.9912, 49.3012, 0.29 ) }
    dend_37 { pt3dadd( 50.983, -74.8188, 48.8586, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 51.097, -75.7319, 48.3876, 0.66 ) }
    dend_37 { pt3dadd( 51.1792, -76.6564, 47.9289, 0.66 ) }
    dend_37 { pt3dadd( 51.2395, -77.5791, 47.4984, 0.52 ) }
    dend_37 { pt3dadd( 51.3349, -78.9363, 46.8932, 0.37 ) }
    dend_37 { pt3dadd( 51.4458, -79.8719, 46.5046, 0.66 ) }
    dend_37 { pt3dadd( 51.6165, -80.8415, 46.0981, 0.22 ) }
    dend_37 { pt3dadd( 51.7677, -81.4415, 45.81, 0.22 ) }
    dend_37 { pt3dadd( 51.9651, -82.0381, 45.4867, 0.59 ) }
    dend_37 { pt3dadd( 52.2413, -82.703, 45.0953, 0.81 ) }
    dend_37 { pt3dadd( 52.7013, -83.6127, 44.5138, 0.52 ) }
    dend_37 { pt3dadd( 53.3093, -84.6804, 43.7779, 0.66 ) }
    dend_37 { pt3dadd( 53.9052, -85.6584, 43.0825, 0.44 ) }
    dend_37 { pt3dadd( 54.5604, -86.6864, 42.3946, 0.37 ) }
    dend_37 { pt3dadd( 54.8739, -87.1927, 42.0713, 0.37 ) }
    dend_37 { pt3dadd( 55.2095, -87.7603, 41.7352, 0.37 ) }
    dend_37 { pt3dadd( 55.7783, -88.7893, 41.2072, 0.66 ) }
    dend_37 { pt3dadd( 56.1216, -89.4391, 40.9318, 1.11 ) }
    dend_37 { pt3dadd( 56.6108, -90.4301, 40.5341, 0.66 ) }
    dend_37 { pt3dadd( 57.0853, -91.4565, 40.0695, 0.44 ) }
    dend_37 { pt3dadd( 57.4589, -92.3547, 39.5747, 0.44 ) }
    dend_37 { pt3dadd( 57.7725, -93.1433, 39.0832, 0.59 ) }
    dend_37 { pt3dadd( 58.0379, -93.7976, 38.6305, 0.52 ) }
    dend_37 { pt3dadd( 58.4653, -94.7872, 37.8527, 0.29 ) }
    dend_37 { pt3dadd( 58.8707, -95.6532, 37.0726, 0.81 ) }
    dend_37 { pt3dadd( 59.3523, -96.591, 36.1505, 0.22 ) }
    dend_37 { pt3dadd( 59.526, -96.9094, 35.814, 0.22 ) }
    dend_37 { pt3dadd( 59.6637, -97.1396, 35.5589, 0.29 ) }
    dend_37 { pt3dadd( 60.1109, -97.7235, 34.904, 0.52 ) }
    dend_37 { pt3dadd( 60.6509, -98.2593, 34.3268, 0.22 ) }
    dend_37 { pt3dadd( 61.238, -98.7253, 33.8649, 0.52 ) }
    dend_37 { pt3dadd( 61.6814, -99.0156, 33.5945, 0.52 ) }
    dend_37 { pt3dadd( 62.1905, -99.3082, 33.3655, 0.29 ) }
    dend_37 { pt3dadd( 63.3463, -99.8696, 33.0348, 0.22 ) }
    dend_37 { pt3dadd( 64.064, -100.167, 32.9448, 0.29 ) }
    dend_37 { pt3dadd( 64.6585, -100.401, 32.9332, 0.52 ) }
    dend_37 { pt3dadd( 65.2492, -100.64, 32.9679, 0.66 ) }
    dend_37 { pt3dadd( 66.4877, -101.146, 33.0905, 0.44 ) }
    dend_37 { pt3dadd( 67.4399, -101.563, 33.2208, 0.44 ) }
    dend_37 { pt3dadd( 68.326, -101.985, 33.3533, 0.44 ) }
    dend_37 { pt3dadd( 69.1346, -102.379, 33.4566, 0.52 ) }
    dend_37 { pt3dadd( 69.8458, -102.736, 33.4916, 0.66 ) }
    dend_37 { pt3dadd( 70.467, -103.058, 33.4656, 0.66 ) }
    dend_37 { pt3dadd( 71.3042, -103.475, 33.3307, 0.37 ) }
    dend_37 { pt3dadd( 71.9266, -103.758, 33.2018, 0.37 ) }
    dend_37 { pt3dadd( 72.4492, -103.969, 33.0463, 0.74 ) }
    dend_37 { pt3dadd( 73.1211, -104.208, 32.8099, 1.03 ) }
    dend_37 { pt3dadd( 73.9158, -104.484, 32.5064, 0.29 ) }
    dend_37 { pt3dadd( 74.7876, -104.785, 32.1626, 0.22 ) }
    dend_37 { pt3dadd( 75.7132, -105.088, 31.8052, 0.22 ) }
    dend_37 { pt3dadd( 76.7277, -105.434, 31.4378, 0.22 ) }
    dend_37 { pt3dadd( 77.5538, -105.729, 31.2, 0.29 ) }
    dend_37 { pt3dadd( 78.2252, -105.99, 31.0713, 0.44 ) }
    dend_37 { pt3dadd( 78.8713, -106.255, 31.0061, 0.44 ) }
    dend_37 { pt3dadd( 79.5121, -106.54, 31.0215, 0.81 ) }
    dend_37 { pt3dadd( 79.8748, -106.712, 31.0769, 0.88 ) }
    dend_37 { pt3dadd( 80.8969, -107.236, 31.3664, 0.22 ) }
    dend_37 { pt3dadd( 81.5218, -107.602, 31.6513, 0.15 ) }
    dend_37 { pt3dadd( 82.1946, -108.018, 32.0698, 0.15 ) }
    dend_37 { pt3dadd( 82.9419, -108.502, 32.6104, 0.15 ) }
    dend_37 { pt3dadd( 83.3178, -108.759, 32.8986, 0.37 ) }
    dend_37 { pt3dadd( 83.8111, -109.114, 33.2698, 0.81 ) }
    dend_37 { pt3dadd( 84.9412, -110.008, 34.0875, 0.52 ) }
    dend_37 { pt3dadd( 85.6536, -110.683, 34.6124, 0.66 ) }
    dend_37 { pt3dadd( 85.9948, -111.083, 34.8524, 0.52 ) }
    dend_37 { pt3dadd( 86.3862, -111.637, 35.0822, 0.22 ) }
    dend_37 { pt3dadd( 86.8453, -112.393, 35.3594, 0.22 ) }
    dend_37 { pt3dadd( 87.1493, -112.973, 35.5374, 0.44 ) }
    dend_37 { pt3dadd( 87.6495, -114.089, 35.8456, 0.44 ) }
    dend_37 { pt3dadd( 87.9788, -114.999, 36.1123, 0.44 ) }
    dend_37 { pt3dadd( 88.23, -115.844, 36.3968, 0.44 ) }
    dend_37 { pt3dadd( 88.5761, -117.048, 36.9362, 0.29 ) }
    dend_37 { pt3dadd( 88.702, -117.456, 37.1528, 0.66 ) }
    dend_37 { pt3dadd( 89.0104, -118.331, 37.6738, 0.66 ) }
    dend_37 { pt3dadd( 89.373, -119.222, 38.252, 0.66 ) }
    dend_37 { pt3dadd( 89.6445, -119.824, 38.6574, 1.03 ) }
    dend_37 { pt3dadd( 90.2981, -121.119, 39.5053, 0.29 ) }
    dend_37 { pt3dadd( 90.7182, -121.876, 39.9541, 0.15 ) }
    dend_37 { pt3dadd( 90.885, -122.141, 40.1232, 0.15 ) }
    dend_37 { pt3dadd( 91.149, -122.488, 40.3848, 0.15 ) }
    dend_37 { pt3dadd( 91.4985, -122.843, 40.7402, 0.59 ) }
    dend_37 { pt3dadd( 91.7192, -123.034, 40.9675, 0.81 ) }
    dend_37 { pt3dadd( 92.4673, -123.645, 41.7319, 0.29 ) }
    dend_37 { pt3dadd( 93.1805, -124.209, 42.5042, 0.44 ) }
    dend_37 { pt3dadd( 94.1149, -124.944, 43.5144, 0.22 ) }
    dend_37 { pt3dadd( 94.9941, -125.627, 44.4427, 0.22 ) }
    dend_37 { pt3dadd( 95.6581, -126.169, 45.1763, 0.22 ) }
    dend_37 { pt3dadd( 96.328, -126.755, 45.9228, 0.29 ) }
    dend_37 { pt3dadd( 96.9052, -127.293, 46.5413, 0.59 ) }
    dend_37 { pt3dadd( 97.2981, -127.72, 46.9698, 1.03 ) }
    dend_37 { pt3dadd( 97.5221, -128.02, 47.2205, 1.03 ) }
    dend_37 { pt3dadd( 98.4706, -129.489, 48.3884, 0.15 ) }
    dend_37 { pt3dadd( 98.8456, -130.111, 48.8704, 0.15 ) }
    dend_37 { pt3dadd( 99.1269, -130.602, 49.2308, 0.22 ) }
    dend_37 { pt3dadd( 99.6668, -131.541, 49.8452, 0.74 ) }
    dend_37 { pt3dadd( 100.054, -132.182, 50.2279, 0.96 ) }
    dend_37 { pt3dadd( 100.783, -133.319, 50.7795, 0.22 ) }
    dend_37 { pt3dadd( 101.254, -134.002, 50.9808, 0.22 ) }
    dend_37 { pt3dadd( 101.895, -134.875, 51.1403, 0.37 ) }
    dend_37 { pt3dadd( 102.564, -135.712, 51.1896, 0.15 ) }
    dend_37 { pt3dadd( 103.037, -136.269, 51.1229, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 103.646, -136.979, 50.9557, 0.15 ) }
    dend_37 { pt3dadd( 104.288, -137.752, 50.6896, 0.66 ) }
    dend_37 { pt3dadd( 105.011, -138.6, 50.3644, 0.22 ) }
    dend_37 { pt3dadd( 105.633, -139.312, 50.0824, 0.22 ) }
    dend_37 { pt3dadd( 106.295, -140.1, 49.8274, 0.29 ) }
    dend_37 { pt3dadd( 106.691, -140.604, 49.7166, 0.15 ) }
    dend_37 { pt3dadd( 107.018, -141.036, 49.6738, 0.52 ) }
    dend_37 { pt3dadd( 107.365, -141.514, 49.7255, 0.59 ) }
    dend_37 { pt3dadd( 107.974, -142.393, 50.0382, 0.22 ) }
    dend_37 { pt3dadd( 108.505, -143.132, 50.4915, 0.88 ) }
    dend_37 { pt3dadd( 108.896, -143.602, 50.9397, 0.88 ) }
    dend_37 { pt3dadd( 109.241, -143.964, 51.409, 0.59 ) }
    dend_37 { pt3dadd( 110.055, -144.73, 52.6521, 0.15 ) }
    dend_37 { pt3dadd( 110.688, -145.264, 53.7463, 0.22 ) }
    dend_37 { pt3dadd( 111.066, -145.528, 54.4586, 0.22 ) }
    dend_37 { pt3dadd( 111.703, -145.881, 55.7426, 0.15 ) }
    dend_37 { pt3dadd( 112.13, -146.08, 56.6308, 0.15 ) }
    dend_37 { pt3dadd( 112.386, -146.18, 57.1754, 0.44 ) }
    dend_37 { pt3dadd( 112.966, -146.357, 58.3819, 0.74 ) }
    dend_37 { pt3dadd( 113.452, -146.5, 59.3988, 0.74 ) }
    dend_37 { pt3dadd( 114.003, -146.691, 60.6777, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -44.6018, 58.3676, 43.8285, 1.18 ) }
    dend_24 { pt3dadd( -46.4181, 60.04, 44.8696, 1.18 ) }
    dend_24 { pt3dadd( -47.4699, 60.8857, 45.3719, 1.03 ) }
    dend_24 { pt3dadd( -48.4181, 61.5484, 45.7221, 1.4 ) }
    dend_24 { pt3dadd( -49.6458, 62.3725, 46.1921, 1.03 ) }
    dend_24 { pt3dadd( -50.4364, 62.8971, 46.5339, 0.88 ) }
    dend_24 { pt3dadd( -51.6686, 63.7058, 47.1083, 0.59 ) }
    dend_24 { pt3dadd( -52.9522, 64.4658, 47.6569, 0.29 ) }
    dend_24 { pt3dadd( -54.0627, 65.0737, 48.1903, 0.37 ) }
    dend_24 { pt3dadd( -55.2786, 65.7119, 48.8504, 0.74 ) }
    dend_24 { pt3dadd( -56.3684, 66.2807, 49.5208, 1.4 ) }
    dend_24 { pt3dadd( -57.7745, 67.0458, 50.4797, 0.88 ) }
    dend_24 { pt3dadd( -58.5616, 67.525, 51.125, 0.88 ) }
    dend_24 { pt3dadd( -59.0702, 67.8844, 51.6082, 0.88 ) }
    dend_24 { pt3dadd( -59.7069, 68.369, 52.2761, 0.59 ) }
    dend_24 { pt3dadd( -60.477, 68.9517, 53.1073, 0.44 ) }
    dend_24 { pt3dadd( -61.0907, 69.4164, 53.8476, 0.29 ) }
    dend_24 { pt3dadd( -62.1222, 70.2326, 55.2808, 0.52 ) }
    dend_24 { pt3dadd( -62.7759, 70.7733, 56.2918, 0.74 ) }
    dend_24 { pt3dadd( -63.3893, 71.29, 57.3424, 1.03 ) }
    dend_24 { pt3dadd( -64.1286, 71.8826, 58.6558, 0.59 ) }
    dend_24 { pt3dadd( -64.8552, 72.4349, 59.9485, 0.22 ) }
    dend_24 { pt3dadd( -65.4912, 72.8732, 61.0491, 0.22 ) }
    dend_24 { pt3dadd( -66.2374, 73.3561, 62.3393, 0.22 ) }
    dend_24 { pt3dadd( -66.9134, 73.828, 63.6109, 0.37 ) }
    dend_24 { pt3dadd( -67.2434, 74.0663, 64.2457, 0.52 ) }
    dend_24 { pt3dadd( -67.9015, 74.5379, 65.4476, 1.33 ) }
    dend_24 { pt3dadd( -68.7082, 75.1064, 66.8255, 0.29 ) }
    dend_24 { pt3dadd( -69.7385, 75.7576, 68.4134, 0.37 ) }
    dend_24 { pt3dadd( -70.7025, 76.3011, 69.7343, 0.37 ) }
    dend_24 { pt3dadd( -71.3133, 76.5982, 70.4741, 0.37 ) }
    dend_24 { pt3dadd( -72.0929, 76.9016, 71.314, 0.66 ) }
    dend_24 { pt3dadd( -72.5672, 77.0445, 71.7614, 0.66 ) }
    dend_24 { pt3dadd( -73.5336, 77.2903, 72.5341, 0.44 ) }
    dend_24 { pt3dadd( -74.1272, 77.4367, 72.9737, 0.44 ) }
    dend_24 { pt3dadd( -74.8998, 77.6484, 73.6265, 0.22 ) }
    dend_24 { pt3dadd( -75.5267, 77.879, 74.3217, 0.22 ) }
    dend_24 { pt3dadd( -76.2195, 78.1975, 75.3378, 0.22 ) }
    dend_24 { pt3dadd( -76.779, 78.4968, 76.3061, 0.15 ) }
    dend_24 { pt3dadd( -77.4548, 78.9156, 77.7284, 0.66 ) }
    dend_24 { pt3dadd( -78.0969, 79.3174, 79.1235, 0.29 ) }
    dend_24 { pt3dadd( -78.7766, 79.7103, 80.5774, 0.66 ) }
    dend_24 { pt3dadd( -79.4747, 80.0383, 81.9308, 1.03 ) }
    dend_24 { pt3dadd( -80.0739, 80.2327, 82.9287, 1.25 ) }
    dend_24 { pt3dadd( -81.5652, 80.5206, 85.0851, 0.22 ) }
    dend_24 { pt3dadd( -82.4599, 80.5935, 86.158, 0.22 ) }
    dend_24 { pt3dadd( -83.1576, 80.5912, 86.833, 0.29 ) }
    dend_24 { pt3dadd( -84.2624, 80.5123, 87.6661, 0.29 ) }
    dend_24 { pt3dadd( -85.0853, 80.4181, 88.1057, 0.22 ) }
    dend_24 { pt3dadd( -86.0206, 80.2705, 88.4481, 0.29 ) }
    dend_24 { pt3dadd( -86.6831, 80.1504, 88.5858, 0.44 ) }
    dend_24 { pt3dadd( -87.489, 79.9948, 88.6713, 0.66 ) }
    dend_24 { pt3dadd( -88.3584, 79.8444, 88.7001, 0.66 ) }
    dend_24 { pt3dadd( -89.6221, 79.6739, 88.6779, 0.22 ) }
    dend_24 { pt3dadd( -90.5912, 79.5867, 88.6519, 0.22 ) }
    dend_24 { pt3dadd( -91.8497, 79.5352, 88.7113, 0.29 ) }
    dend_24 { pt3dadd( -93.5749, 79.5344, 88.9482, 0.29 ) }
    dend_24 { pt3dadd( -94.3083, 79.5586, 89.1244, 0.59 ) }
    dend_24 { pt3dadd( -95.4485, 79.6237, 89.571, 0.59 ) }
    dend_24 { pt3dadd( -96.7954, 79.7268, 90.2835, 0.22 ) }
    dend_24 { pt3dadd( -98.542, 79.8885, 91.3826, 0.44 ) }
    dend_24 { pt3dadd( -99.2386, 79.9548, 91.8946, 0.44 ) }
    dend_24 { pt3dadd( -100.007, 80.0266, 92.5164, 0.22 ) }
    dend_24 { pt3dadd( -101.16, 80.116, 93.4188, 0.37 ) }
    dend_24 { pt3dadd( -101.665, 80.1508, 93.7571, 0.59 ) }
    dend_24 { pt3dadd( -102.256, 80.2, 94.0639, 0.96 ) }
    dend_24 { pt3dadd( -103.246, 80.2945, 94.4417, 0.29 ) }
    dend_24 { pt3dadd( -104.823, 80.4782, 94.952, 0.22 ) }
    dend_24 { pt3dadd( -105.767, 80.6375, 95.316, 0.22 ) }
    dend_24 { pt3dadd( -107.373, 80.9715, 95.9894, 0.22 ) }
    dend_24 { pt3dadd( -108.745, 81.3168, 96.6479, 0.29 ) }
    dend_24 { pt3dadd( -109.467, 81.5288, 97.0316, 0.29 ) }
    dend_24 { pt3dadd( -110.376, 81.8418, 97.5644, 0.59 ) }
    dend_24 { pt3dadd( -112.678, 82.8461, 99.2817, 0.07 ) }
    dend_24 { pt3dadd( -113.139, 83.097, 99.7198, 0.15 ) }
    dend_24 { pt3dadd( -113.642, 83.4583, 100.366, 0.29 ) }
    dend_24 { pt3dadd( -114.494, 84.2224, 101.693, 0.15 ) }
    dend_24 { pt3dadd( -114.755, 84.5046, 102.187, 0.22 ) }
    dend_24 { pt3dadd( -115.568, 85.5104, 104.026, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -115.896, 85.9309, 104.813, 0.81 ) }
    dend_24 { pt3dadd( -116.525, 86.7619, 106.47, 0.22 ) }
    dend_24 { pt3dadd( -116.856, 87.1846, 107.352, 0.29 ) }
    dend_24 { pt3dadd( -117.463, 87.9167, 108.968, 0.22 ) }
    dend_24 { pt3dadd( -118.019, 88.4426, 110.133, 0.22 ) }
    dend_24 { pt3dadd( -118.419, 88.7035, 110.686, 0.66 ) }
    dend_24 { pt3dadd( -118.753, 88.8589, 110.986, 0.66 ) }
    dend_24 { pt3dadd( -119.827, 89.2129, 111.515, 0.22 ) }
    dend_24 { pt3dadd( -121.035, 89.526, 111.778, 0.29 ) }
    dend_24 { pt3dadd( -122.415, 89.8639, 111.8, 0.74 ) }
    dend_24 { pt3dadd( -124.485, 90.3551, 111.553, 0.22 ) }
    dend_24 { pt3dadd( -125.739, 90.6236, 111.33, 0.15 ) }
    dend_24 { pt3dadd( -126.399, 90.7466, 111.183, 0.29 ) }
    dend_24 { pt3dadd( -127.261, 90.884, 110.96, 0.74 ) }
    dend_24 { pt3dadd( -128.399, 91.0468, 110.663, 0.22 ) }
    dend_24 { pt3dadd( -129.781, 91.217, 110.418, 0.22 ) }
    dend_24 { pt3dadd( -130.4, 91.3023, 110.4, 0.52 ) }
    dend_24 { pt3dadd( -130.801, 91.3534, 110.406, 0.88 ) }
    dend_24 { pt3dadd( -131.566, 91.4518, 110.449, 0.29 ) }
    dend_24 { pt3dadd( -132.51, 91.6277, 110.757, 0.22 ) }
    dend_24 { pt3dadd( -133.641, 91.9518, 111.446, 0.22 ) }
    dend_24 { pt3dadd( -134.25, 92.192, 111.964, 0.22 ) }
    dend_24 { pt3dadd( -135.12, 92.605, 112.822, 0.22 ) }
    dend_24 { pt3dadd( -135.993, 93.0678, 113.823, 0.15 ) }
    dend_24 { pt3dadd( -138.373, 94.5662, 117.503, 0.15 ) }
    dend_24 { pt3dadd( -138.937, 94.9647, 118.654, 0.15 ) }
    dend_24 { pt3dadd( -139.261, 95.2247, 119.483, 0.15 ) }
    dend_24 { pt3dadd( -139.513, 95.4591, 120.321, 0.15 ) }
    dend_24 { pt3dadd( -139.815, 95.7656, 121.499, 0.37 ) }
    dend_24 { pt3dadd( -140.511, 96.499, 124.577, 0.15 ) }
    dend_24 { pt3dadd( -140.994, 96.9275, 126.625, 0.15 ) }
    dend_24 { pt3dadd( -141.303, 97.2122, 128.202, 0.15 ) }
    dend_24 { pt3dadd( -141.658, 97.6021, 130.47, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -44.6018, 58.3676, 43.8285, 0.29 ) }
    dend_23 { pt3dadd( -44.2471, 58.6343, 44.9166, 0.29 ) }
    dend_23 { pt3dadd( -43.6808, 59.0305, 46.7173, 0.29 ) }
    dend_23 { pt3dadd( -43.2257, 59.36, 48.2782, 0.29 ) }
    dend_23 { pt3dadd( -42.7992, 59.7032, 49.8677, 0.29 ) }
    dend_23 { pt3dadd( -42.5011, 60.0016, 51.1265, 0.29 ) }
    dend_23 { pt3dadd( -42.4374, 60.0828, 51.4455, 0.29 ) }
    dend_23 { pt3dadd( -42.3253, 60.292, 52.2163, 0.29 ) }
    dend_23 { pt3dadd( -42.3038, 60.408, 52.6304, 0.37 ) }
    dend_23 { pt3dadd( -42.3856, 60.6736, 53.5885, 0.37 ) }
    dend_23 { pt3dadd( -42.5576, 60.8634, 54.3224, 0.22 ) }
    dend_23 { pt3dadd( -42.8209, 61.0749, 55.1743, 0.22 ) }
    dend_23 { pt3dadd( -42.9213, 61.1497, 55.5084, 0.22 ) }
    dend_23 { pt3dadd( -42.993, 61.2042, 55.8164, 0.22 ) }
    dend_23 { pt3dadd( -43.0805, 61.2814, 56.4145, 0.22 ) }
    dend_23 { pt3dadd( -43.1316, 61.3236, 56.9081, 0.22 ) }
    dend_23 { pt3dadd( -43.1495, 61.335, 57.1747, 0.22 ) }
    dend_23 { pt3dadd( -43.1594, 61.3508, 57.5376, 0.29 ) }
    dend_23 { pt3dadd( -43.1736, 61.3735, 58.4635, 0.29 ) }
    dend_23 { pt3dadd( -43.2041, 61.3841, 59.5072, 0.29 ) }
    dend_23 { pt3dadd( -43.2451, 61.376, 60.2746, 0.29 ) }
    dend_23 { pt3dadd( -43.2727, 61.3687, 60.7731, 0.15 ) }
    dend_23 { pt3dadd( -43.3666, 61.321, 62.6088, 0.15 ) }
    dend_23 { pt3dadd( -43.4587, 61.2298, 64.5305, 0.15 ) }
    dend_23 { pt3dadd( -43.5477, 61.0964, 66.2232, 0.15 ) }
    dend_23 { pt3dadd( -43.5983, 60.9984, 67.1598, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -53.2179, 36.3136, -27.9604, 1.18 ) }
    dend_13 { pt3dadd( -54.619, 36.5861, -27.1718, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -53.2179, 36.3136, -27.9604, 0.29 ) }
    dend_12 { pt3dadd( -54.0545, 37.2683, -27.6215, 0.29 ) }
    dend_12 { pt3dadd( -54.8082, 38.1265, -27.4619, 0.29 ) }
    dend_12 { pt3dadd( -55.471, 38.8714, -27.3906, 0.88 ) }
    dend_12 { pt3dadd( -56.2604, 39.747, -27.3472, 0.44 ) }
    dend_12 { pt3dadd( -57.0377, 40.5917, -27.3557, 0.44 ) }
    dend_12 { pt3dadd( -57.525, 41.1049, -27.3758, 0.29 ) }
    dend_12 { pt3dadd( -58.5285, 42.1191, -27.5621, 0.29 ) }
    dend_12 { pt3dadd( -59.0256, 42.5928, -27.6807, 0.74 ) }
    dend_12 { pt3dadd( -59.4144, 42.9174, -27.7685, 0.96 ) }
    dend_12 { pt3dadd( -60.2077, 43.5136, -27.8822, 0.96 ) }
    dend_12 { pt3dadd( -61.2036, 44.1986, -27.9114, 0.66 ) }
    dend_12 { pt3dadd( -62.6365, 45.1146, -27.7392, 0.37 ) }
    dend_12 { pt3dadd( -63.4377, 45.6223, -27.5028, 0.22 ) }
    dend_12 { pt3dadd( -64.5222, 46.3197, -27.0403, 0.29 ) }
    dend_12 { pt3dadd( -65.7121, 47.1045, -26.3422, 0.29 ) }
    dend_12 { pt3dadd( -66.3478, 47.5314, -25.8431, 0.81 ) }
    dend_12 { pt3dadd( -67.356, 48.2239, -24.8656, 1.03 ) }
    dend_12 { pt3dadd( -68.2114, 48.8515, -23.9, 0.22 ) }
    dend_12 { pt3dadd( -68.7104, 49.2689, -23.2999, 0.29 ) }
    dend_12 { pt3dadd( -69.1674, 49.7307, -22.7271, 0.44 ) }
    dend_12 { pt3dadd( -69.5508, 50.1818, -22.2903, 0.44 ) }
    dend_12 { pt3dadd( -70.0172, 50.8404, -21.7428, 0.44 ) }
    dend_12 { pt3dadd( -70.4848, 51.6577, -21.2539, 0.52 ) }
    dend_12 { pt3dadd( -70.8052, 52.2739, -21.0312, 0.52 ) }
    dend_12 { pt3dadd( -71.2284, 53.1551, -20.861, 0.29 ) }
    dend_12 { pt3dadd( -71.4985, 53.752, -20.8066, 0.37 ) }
    dend_12 { pt3dadd( -71.8793, 54.5786, -20.7722, 0.37 ) }
    dend_12 { pt3dadd( -72.6321, 56.0481, -20.7805, 0.81 ) }
    dend_12 { pt3dadd( -73.2273, 57.0869, -20.836, 1.03 ) }
    dend_12 { pt3dadd( -73.771, 57.9487, -20.9066, 0.74 ) }
    dend_12 { pt3dadd( -74.4461, 58.9387, -21.0037, 0.66 ) }
    dend_12 { pt3dadd( -75.1106, 59.8881, -21.0989, 0.37 ) }
    dend_12 { pt3dadd( -75.9716, 61.1076, -21.2188, 0.29 ) }
    dend_12 { pt3dadd( -76.5059, 61.8747, -21.2458, 0.29 ) }
    dend_12 { pt3dadd( -76.7966, 62.3257, -21.2874, 0.66 ) }
    dend_12 { pt3dadd( -77.1058, 62.8553, -21.3566, 1.18 ) }
    dend_12 { pt3dadd( -77.3435, 63.3346, -21.4273, 1.18 ) }
    dend_12 { pt3dadd( -77.6998, 64.1335, -21.5332, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -78.034, 64.8706, -21.5963, 0.44 ) }
    dend_12 { pt3dadd( -78.5559, 65.9337, -21.6809, 0.29 ) }
    dend_12 { pt3dadd( -78.8269, 66.4601, -21.7233, 0.29 ) }
    dend_12 { pt3dadd( -79.1154, 67.0067, -21.7629, 0.29 ) }
    dend_12 { pt3dadd( -79.6327, 67.955, -21.8581, 0.29 ) }
    dend_12 { pt3dadd( -80.0926, 68.7627, -21.9449, 0.22 ) }
    dend_12 { pt3dadd( -80.6673, 69.718, -22.0464, 0.37 ) }
    dend_12 { pt3dadd( -81.2027, 70.5813, -22.1101, 0.22 ) }
    dend_12 { pt3dadd( -81.4407, 70.9713, -22.1409, 0.22 ) }
    dend_12 { pt3dadd( -81.9031, 71.7701, -22.1976, 0.44 ) }
    dend_12 { pt3dadd( -82.2255, 72.366, -22.2273, 0.96 ) }
    dend_12 { pt3dadd( -82.5096, 72.8744, -22.2321, 1.18 ) }
    dend_12 { pt3dadd( -83.0406, 73.7333, -22.1899, 1.18 ) }
    dend_12 { pt3dadd( -83.4235, 74.2939, -22.173, 1.25 ) }
    dend_12 { pt3dadd( -83.8885, 74.929, -22.1877, 0.37 ) }
    dend_12 { pt3dadd( -84.3059, 75.4752, -22.2153, 0.22 ) }
    dend_12 { pt3dadd( -84.8086, 76.1231, -22.2953, 0.29 ) }
    dend_12 { pt3dadd( -85.1307, 76.5722, -22.3834, 0.29 ) }
    dend_12 { pt3dadd( -85.6934, 77.4439, -22.6314, 0.22 ) }
    dend_12 { pt3dadd( -86.1535, 78.2648, -22.9086, 0.22 ) }
    dend_12 { pt3dadd( -86.3063, 78.5611, -23.0135, 0.44 ) }
    dend_12 { pt3dadd( -86.7024, 79.376, -23.334, 0.81 ) }
    dend_12 { pt3dadd( -87.2748, 80.6213, -23.8757, 0.29 ) }
    dend_12 { pt3dadd( -87.7096, 81.5545, -24.3299, 0.52 ) }
    dend_12 { pt3dadd( -88.081, 82.2784, -24.7088, 1.03 ) }
    dend_12 { pt3dadd( -88.466, 82.9299, -25.0841, 1.03 ) }
    dend_12 { pt3dadd( -89.1861, 83.9746, -25.7412, 0.66 ) }
    dend_12 { pt3dadd( -89.8929, 84.8773, -26.3555, 0.59 ) }
    dend_12 { pt3dadd( -90.6557, 85.7625, -26.9832, 0.88 ) }
    dend_12 { pt3dadd( -91.5734, 86.8071, -27.6975, 0.22 ) }
    dend_12 { pt3dadd( -92.299, 87.6369, -28.2355, 0.59 ) }
    dend_12 { pt3dadd( -93.1624, 88.6598, -28.8636, 0.22 ) }
    dend_12 { pt3dadd( -93.6014, 89.2136, -29.1672, 0.44 ) }
    dend_12 { pt3dadd( -94.0985, 89.9279, -29.5416, 0.74 ) }
    dend_12 { pt3dadd( -94.4186, 90.5014, -29.8481, 0.88 ) }
    dend_12 { pt3dadd( -94.7666, 91.2773, -30.2883, 0.37 ) }
    dend_12 { pt3dadd( -95.0607, 92.0026, -30.739, 0.37 ) }
    dend_12 { pt3dadd( -95.399, 92.8659, -31.2924, 0.37 ) }
    dend_12 { pt3dadd( -95.8389, 93.9177, -31.9525, 0.29 ) }
    dend_12 { pt3dadd( -96.2043, 94.7777, -32.514, 0.52 ) }
    dend_12 { pt3dadd( -96.3753, 95.1714, -32.7866, 0.52 ) }
    dend_12 { pt3dadd( -96.7971, 96.143, -33.4629, 0.52 ) }
    dend_12 { pt3dadd( -97.1725, 96.9244, -33.9609, 0.37 ) }
    dend_12 { pt3dadd( -97.4527, 97.3802, -34.2105, 0.37 ) }
    dend_12 { pt3dadd( -101.834, 105.069, -33.8176, 0.37 ) }
    dend_12 { pt3dadd( -104.7, 113.149, -31.6817, 0.37 ) }
    dend_12 { pt3dadd( -106.694, 121.429, -29.3545, 0.37 ) }
    dend_12 { pt3dadd( -108.618, 129.792, -27.2885, 0.37 ) }
    dend_12 { pt3dadd( -109.295, 138.554, -26.4872, 0.37 ) }
    dend_12 { pt3dadd( -109.032, 147.085, -24.2259, 0.37 ) }
    dend_12 { pt3dadd( -108.22, 155.755, -22.7493, 0.37 ) }
    dend_12 { pt3dadd( -107.22, 164.327, -20.8551, 0.37 ) }
    dend_12 { pt3dadd( -107.347, 173.028, -19.3822, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -24.9678, 83.5254, -56.4946, 0.52 ) }
    dend_8 { pt3dadd( -26.6111, 83.3478, -57.3732, 0.52 ) }
    dend_8 { pt3dadd( -28.1987, 83.065, -58.2685, 0.52 ) }
    dend_8 { pt3dadd( -29.1614, 82.7979, -58.9864, 0.66 ) }
    dend_8 { pt3dadd( -29.9186, 82.4645, -59.736, 0.44 ) }
    dend_8 { pt3dadd( -30.5551, 82.1046, -60.5383, 0.37 ) }
    dend_8 { pt3dadd( -31.5986, 81.4719, -62.0526, 0.37 ) }
    dend_8 { pt3dadd( -31.8398, 81.308, -62.4634, 0.37 ) }
    dend_8 { pt3dadd( -32.7745, 80.5507, -64.3328, 0.37 ) }
    dend_8 { pt3dadd( -33.4831, 79.9085, -65.8609, 0.52 ) }
    dend_8 { pt3dadd( -34.0042, 79.4422, -66.9531, 0.52 ) }
    dend_8 { pt3dadd( -34.2915, 79.2061, -67.4772, 0.52 ) }
    dend_8 { pt3dadd( -34.9914, 78.7264, -68.3531, 0.52 ) }
    dend_8 { pt3dadd( -35.8796, 78.2567, -68.9898, 0.66 ) }
    dend_8 { pt3dadd( -36.7512, 77.8725, -69.0036, 0.52 ) }
    dend_8 { pt3dadd( -37.8977, 77.4079, -68.8298, 0.44 ) }
    dend_8 { pt3dadd( -38.7217, 77.0612, -68.616, 0.44 ) }
    dend_8 { pt3dadd( -39.3593, 76.7668, -68.3962, 0.81 ) }
    dend_8 { pt3dadd( -40.3682, 76.2681, -67.8936, 0.96 ) }
    dend_8 { pt3dadd( -41.76, 75.607, -67.0353, 0.22 ) }
    dend_8 { pt3dadd( -49.841, 70.6445, -69.9311, 0.22 ) }
    dend_8 { pt3dadd( -58.5963, 66.0026, -70.1151, 0.22 ) }
    dend_8 { pt3dadd( -66.627, 60.2605, -70.5469, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -24.9678, 83.5254, -56.4946, 0.59 ) }
    dend_7 { pt3dadd( -24.3355, 84.8976, -56.2923, 0.59 ) }
    dend_7 { pt3dadd( -23.7256, 86.4781, -56.1197, 0.59 ) }
    dend_7 { pt3dadd( -23.3372, 87.773, -56.1324, 0.66 ) }
    dend_7 { pt3dadd( -23.1308, 88.7656, -56.2203, 0.81 ) }
    dend_7 { pt3dadd( -22.9666, 90.2179, -56.4762, 0.52 ) }
    dend_7 { pt3dadd( -22.9252, 91.9751, -56.9307, 0.52 ) }
    dend_7 { pt3dadd( -23.0734, 93.0577, -57.4126, 0.66 ) }
    dend_7 { pt3dadd( -23.5258, 94.6617, -58.5264, 1.03 ) }
    dend_7 { pt3dadd( -24.1588, 96.1493, -60.01, 0.37 ) }
    dend_7 { pt3dadd( -24.7439, 97.1936, -61.4617, 0.37 ) }
    dend_7 { pt3dadd( -25.2488, 97.93, -62.8137, 0.59 ) }
    dend_7 { pt3dadd( -25.9409, 98.8526, -64.8421, 0.74 ) }
    dend_7 { pt3dadd( -26.4842, 99.5843, -66.7014, 0.74 ) }
    dend_7 { pt3dadd( -27.0097, 100.345, -68.8876, 0.37 ) }
    dend_7 { pt3dadd( -27.3121, 100.858, -70.5509, 0.37 ) }
    dend_7 { pt3dadd( -27.4158, 101.169, -71.5632, 0.37 ) }
    dend_7 { pt3dadd( -27.4584, 101.443, -72.5454, 0.44 ) }
    dend_7 { pt3dadd( -27.4623, 101.911, -74.0988, 0.44 ) }
    dend_7 { pt3dadd( -27.4436, 102.192, -74.9632, 0.74 ) }
    dend_7 { pt3dadd( -27.4006, 102.725, -76.5369, 0.74 ) }
    dend_7 { pt3dadd( -27.3252, 103.334, -78.413, 0.15 ) }
    dend_7 { pt3dadd( -27.2609, 103.817, -80.2577, 0.15 ) }
    dend_7 { pt3dadd( -26.7631, 112.302, -87.5029, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -26.4155, 121.346, -94.013, 0.15 ) }
    dend_7 { pt3dadd( -28.5018, 129.344, -101.566, 0.15 ) }
    dend_7 { pt3dadd( -31.6179, 136.61, -109.537, 0.15 ) }
    dend_7 { pt3dadd( -34.3517, 144.925, -116.51, 0.15 ) }
    dend_7 { pt3dadd( -36.1958, 153.508, -123.426, 0.15 ) }
    dend_7 { pt3dadd( -36.3792, 161.965, -130.724, 0.15 ) }
    dend_7 { pt3dadd( -35.6628, 170.945, -137.293, 0.15 ) }
    dend_7 { pt3dadd( -35.6382, 180.499, -143.009, 0.15 ) }
    dend_7 { pt3dadd( -32.7328, 189.842, -148.323, 0.15 ) }
    dend_7 { pt3dadd( -29.1951, 199.202, -153.205, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -1.16872, 160.812, 10.7012, 0.29 ) }
    dend_42 { pt3dadd( -2.03285, 161.761, 9.62696, 0.29 ) }
    dend_42 { pt3dadd( -3.19491, 162.886, 8.09391, 0.29 ) }
    dend_42 { pt3dadd( -3.98469, 163.551, 7.09513, 0.29 ) }
    dend_42 { pt3dadd( -4.64421, 164.056, 6.33342, 0.29 ) }
    dend_42 { pt3dadd( -5.10372, 164.4, 5.82668, 0.59 ) }
    dend_42 { pt3dadd( -6.38155, 165.399, 4.43687, 0.22 ) }
    dend_42 { pt3dadd( -7.23479, 166.148, 3.52015, 0.22 ) }
    dend_42 { pt3dadd( -7.66189, 166.584, 3.0645, 0.22 ) }
    dend_42 { pt3dadd( -8.15347, 167.181, 2.49745, 0.15 ) }
    dend_42 { pt3dadd( -8.23115, 167.763, 2.17843, 0.15 ) }
    dend_42 { pt3dadd( -8.00057, 168.502, 1.99672, 0.66 ) }
    dend_42 { pt3dadd( -7.41196, 169.711, 1.85872, 0.22 ) }
    dend_42 { pt3dadd( -7.09043, 170.303, 1.81054, 0.22 ) }
    dend_42 { pt3dadd( -6.76176, 170.812, 1.75433, 0.44 ) }
    dend_42 { pt3dadd( -5.74663, 172.079, 1.56521, 0.29 ) }
    dend_42 { pt3dadd( -7.18659, 180.098, -4.66246, 0.29 ) }
    dend_42 { pt3dadd( -9.65042, 188.066, -10.619, 0.29 ) }
    dend_42 { pt3dadd( -12.9923, 195.935, -16.262, 0.29 ) }
    dend_42 { pt3dadd( -16.6877, 204.402, -20.6094, 0.29 ) }
    dend_42 { pt3dadd( -20.0008, 212.771, -25.4504, 0.29 ) }
    dend_42 { pt3dadd( -25.2204, 219.63, -31.0209, 0.29 ) }
    dend_42 { pt3dadd( -31.4123, 225.35, -36.9193, 0.29 ) }
    dend_42 { pt3dadd( -38.1907, 231.408, -41.6953, 0.29 ) }
    dend_42 { pt3dadd( -43.7378, 238.066, -47.1991, 0.29 ) }
    dend_42 { pt3dadd( -49.3506, 245.377, -51.6533, 0.29 ) }
    dend_42 { pt3dadd( -53.9521, 253.518, -55.7569, 0.29 ) }
    dend_42 { pt3dadd( -57.185, 261.546, -61.2275, 0.29 ) }
    dend_42 { pt3dadd( -58.1135, 269.614, -67.4912, 0.29 ) }
    dend_42 { pt3dadd( -59.0705, 276.32, -75.2494, 0.29 ) }
    dend_42 { pt3dadd( -59.0932, 282.166, -83.754, 0.29 ) }
    dend_42 { pt3dadd( -59.3461, 286.355, -93.2013, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -1.16872, 160.812, 10.7012, 0.74 ) }
    dend_41 { pt3dadd( -1.61457, 161.098, 11.0265, 0.74 ) }
    dend_41 { pt3dadd( -3.73166, 162.361, 12.376, 0.29 ) }
    dend_41 { pt3dadd( -4.48261, 162.767, 12.8003, 0.29 ) }
    dend_41 { pt3dadd( -5.68341, 163.363, 13.4057, 0.52 ) }
    dend_41 { pt3dadd( -6.51879, 163.748, 13.7735, 0.29 ) }
    dend_41 { pt3dadd( -7.61452, 164.247, 14.1481, 0.37 ) }
    dend_41 { pt3dadd( -8.55952, 164.661, 14.3502, 0.59 ) }
    dend_41 { pt3dadd( -9.28139, 164.956, 14.4434, 0.44 ) }
    dend_41 { pt3dadd( -10.0991, 165.299, 14.5801, 0.88 ) }
    dend_41 { pt3dadd( -11.6203, 166.004, 14.9678, 0.37 ) }
    dend_41 { pt3dadd( -13.1273, 166.792, 15.5362, 0.66 ) }
    dend_41 { pt3dadd( -14.0025, 167.333, 15.9799, 0.29 ) }
    dend_41 { pt3dadd( -14.9646, 168.054, 16.5898, 0.22 ) }
    dend_41 { pt3dadd( -15.9999, 168.977, 17.3745, 0.74 ) }
    dend_41 { pt3dadd( -17.0482, 170.074, 18.3103, 0.29 ) }
    dend_41 { pt3dadd( -17.6118, 170.775, 18.901, 0.22 ) }
    dend_41 { pt3dadd( -18.0358, 171.366, 19.3853, 0.88 ) }
    dend_41 { pt3dadd( -18.5529, 172.157, 19.9208, 0.88 ) }
    dend_41 { pt3dadd( -18.9545, 172.826, 20.256, 0.22 ) }
    dend_41 { pt3dadd( -19.3581, 173.542, 20.5173, 0.22 ) }
    dend_41 { pt3dadd( -19.8051, 174.401, 20.7641, 0.15 ) }
    dend_41 { pt3dadd( -20.0533, 174.924, 20.9131, 0.66 ) }
    dend_41 { pt3dadd( -20.29, 175.485, 21.0711, 0.22 ) }
    dend_41 { pt3dadd( -20.6194, 176.329, 21.3038, 0.15 ) }
    dend_41 { pt3dadd( -20.7663, 176.776, 21.4167, 0.15 ) }
    dend_41 { pt3dadd( -20.9526, 177.515, 21.5418, 0.44 ) }
    dend_41 { pt3dadd( -21.1407, 178.559, 21.6187, 0.44 ) }
    dend_41 { pt3dadd( -21.3171, 179.762, 21.5426, 0.22 ) }
    dend_41 { pt3dadd( -21.4018, 180.45, 21.3914, 0.22 ) }
    dend_41 { pt3dadd( -21.4983, 181.37, 21.0467, 0.52 ) }
    dend_41 { pt3dadd( -21.6113, 182.538, 20.443, 0.52 ) }
    dend_41 { pt3dadd( -21.6713, 183.303, 19.9492, 0.22 ) }
    dend_41 { pt3dadd( -21.7492, 184.68, 18.9733, 0.22 ) }
    dend_41 { pt3dadd( -21.802, 185.748, 18.1758, 0.22 ) }
    dend_41 { pt3dadd( -21.8501, 186.568, 17.5401, 0.22 ) }
    dend_41 { pt3dadd( -21.929, 187.522, 16.7946, 0.22 ) }
    dend_41 { pt3dadd( -22.0471, 188.916, 15.7517, 0.22 ) }
    dend_41 { pt3dadd( -22.1105, 189.95, 14.9838, 0.66 ) }
    dend_41 { pt3dadd( -22.1088, 190.61, 14.5318, 0.37 ) }
    dend_41 { pt3dadd( -25.9911, 199.286, 14.8712, 0.37 ) }
    dend_41 { pt3dadd( -28.9217, 208.266, 15.8742, 0.37 ) }
    dend_41 { pt3dadd( -33.4665, 216.21, 18.4547, 0.37 ) }
    dend_41 { pt3dadd( -37.3069, 224.159, 21.9775, 0.37 ) }
    dend_41 { pt3dadd( -41.6092, 232.354, 24.1447, 0.37 ) }
    dend_41 { pt3dadd( -44.4882, 241.259, 25.7489, 0.37 ) }
    dend_41 { pt3dadd( -45.7874, 250.388, 28.017, 0.37 ) }
    dend_41 { pt3dadd( -46.7361, 259.132, 31.6093, 0.37 ) }
    dend_41 { pt3dadd( -45.9347, 267.442, 36.2021, 0.37 ) }
    dend_41 { pt3dadd( -43.6987, 276.094, 39.5547, 0.37 ) }
    dend_41 { pt3dadd( -40.9301, 285.072, 41.2909, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -54.619, 36.5861, -27.1718, 0.52 ) }
    dend_19 { pt3dadd( -56.0137, 37.2496, -27.1245, 0.52 ) }
    dend_19 { pt3dadd( -56.5772, 37.5181, -27.1217, 0.66 ) }
    dend_19 { pt3dadd( -57.4691, 37.9349, -27.1134, 0.88 ) }
    dend_19 { pt3dadd( -58.8063, 38.5423, -27.0868, 0.74 ) }
    dend_19 { pt3dadd( -59.9978, 39.0563, -27.0306, 0.52 ) }
    dend_19 { pt3dadd( -60.9947, 39.4666, -26.9631, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -62.5067, 40.0354, -26.8751, 0.74 ) }
    dend_19 { pt3dadd( -63.3514, 40.3318, -26.8093, 0.74 ) }
    dend_19 { pt3dadd( -64.5399, 40.713, -26.662, 0.66 ) }
    dend_19 { pt3dadd( -65.8494, 41.0663, -26.4435, 0.37 ) }
    dend_19 { pt3dadd( -66.4397, 41.194, -26.3321, 0.37 ) }
    dend_19 { pt3dadd( -67.0466, 41.289, -26.227, 0.88 ) }
    dend_19 { pt3dadd( -68.0195, 41.3883, -26.0943, 0.88 ) }
    dend_19 { pt3dadd( -68.7966, 41.4491, -26.0318, 0.59 ) }
    dend_19 { pt3dadd( -69.5948, 41.4855, -26.009, 0.59 ) }
    dend_19 { pt3dadd( -70.4456, 41.5038, -26.0589, 0.59 ) }
    dend_19 { pt3dadd( -71.1966, 41.4866, -26.1886, 0.59 ) }
    dend_19 { pt3dadd( -72.03, 41.4461, -26.3858, 0.59 ) }
    dend_19 { pt3dadd( -72.6445, 41.4022, -26.54, 0.81 ) }
    dend_19 { pt3dadd( -73.4322, 41.3384, -26.722, 1.03 ) }
    dend_19 { pt3dadd( -74.8283, 41.1825, -26.9737, 0.52 ) }
    dend_19 { pt3dadd( -76.6661, 40.9306, -27.1877, 0.59 ) }
    dend_19 { pt3dadd( -77.8428, 40.7095, -27.2561, 0.59 ) }
    dend_19 { pt3dadd( -78.8089, 40.4664, -27.2362, 0.59 ) }
    dend_19 { pt3dadd( -80.101, 40.0324, -27.1029, 0.59 ) }
    dend_19 { pt3dadd( -80.966, 39.6473, -26.9032, 0.59 ) }
    dend_19 { pt3dadd( -81.9282, 39.0933, -26.5074, 0.52 ) }
    dend_19 { pt3dadd( -82.5396, 38.664, -26.1587, 0.59 ) }
    dend_19 { pt3dadd( -83.1982, 38.1215, -25.747, 0.52 ) }
    dend_19 { pt3dadd( -83.8152, 37.5812, -25.3613, 0.37 ) }
    dend_19 { pt3dadd( -84.6451, 36.8471, -24.8742, 0.66 ) }
    dend_19 { pt3dadd( -85.1856, 36.4042, -24.5864, 0.66 ) }
    dend_19 { pt3dadd( -85.7341, 36.0188, -24.341, 0.88 ) }
    dend_19 { pt3dadd( -86.4318, 35.6147, -24.0734, 0.88 ) }
    dend_19 { pt3dadd( -87.714, 34.966, -23.6901, 0.52 ) }
    dend_19 { pt3dadd( -88.4867, 34.6187, -23.5459, 0.52 ) }
    dend_19 { pt3dadd( -89.0268, 34.411, -23.5146, 0.66 ) }
    dend_19 { pt3dadd( -90.4428, 33.9518, -23.6046, 0.44 ) }
    dend_19 { pt3dadd( -91.1392, 33.7777, -23.7281, 0.59 ) }
    dend_19 { pt3dadd( -92.0971, 33.6162, -23.9806, 0.66 ) }
    dend_19 { pt3dadd( -93.7043, 33.4958, -24.5252, 0.66 ) }
    dend_19 { pt3dadd( -94.7941, 33.4866, -24.9519, 0.88 ) }
    dend_19 { pt3dadd( -95.6448, 33.5303, -25.3119, 0.88 ) }
    dend_19 { pt3dadd( -96.5061, 33.6132, -25.6858, 0.81 ) }
    dend_19 { pt3dadd( -97.2863, 33.7202, -25.9892, 1.11 ) }
    dend_19 { pt3dadd( -98.3468, 33.9111, -26.2955, 0.52 ) }
    dend_19 { pt3dadd( -99.7027, 34.1951, -26.5815, 0.52 ) }
    dend_19 { pt3dadd( -101.178, 34.534, -26.7979, 0.29 ) }
    dend_19 { pt3dadd( -101.635, 34.6445, -26.8399, 0.29 ) }
    dend_19 { pt3dadd( -102.642, 34.8701, -26.9168, 0.59 ) }
    dend_19 { pt3dadd( -103.988, 35.0955, -27.0844, 0.29 ) }
    dend_19 { pt3dadd( -105.809, 35.3034, -27.4748, 0.37 ) }
    dend_19 { pt3dadd( -107.009, 35.3847, -27.8001, 0.37 ) }
    dend_19 { pt3dadd( -107.931, 35.4131, -28.0941, 0.37 ) }
    dend_19 { pt3dadd( -109.553, 35.4255, -28.6884, 0.44 ) }
    dend_19 { pt3dadd( -111.649, 35.3631, -29.5995, 0.96 ) }
    dend_19 { pt3dadd( -113.666, 35.2053, -30.6369, 0.44 ) }
    dend_19 { pt3dadd( -114.501, 35.095, -31.1268, 0.52 ) }
    dend_19 { pt3dadd( -115.519, 34.9321, -31.8267, 0.52 ) }
    dend_19 { pt3dadd( -124.624, 34.0348, -33.1745, 0.52 ) }
    dend_19 { pt3dadd( -133.827, 33.7822, -34.0713, 0.52 ) }
    dend_19 { pt3dadd( -143.005, 32.7386, -33.7289, 0.52 ) }
    dend_19 { pt3dadd( -151.704, 30.9518, -31.2214, 0.52 ) }
    dend_19 { pt3dadd( -159.769, 28.559, -27.4656, 0.52 ) }
    dend_19 { pt3dadd( -168.424, 27.5221, -24.4108, 0.52 ) }
    dend_19 { pt3dadd( -176.867, 24.7219, -22.0229, 0.52 ) }
    dend_19 { pt3dadd( -185.738, 22.6881, -20.499, 0.52 ) }
    dend_19 { pt3dadd( -194.845, 21.1573, -20.262, 0.52 ) }
    dend_19 { pt3dadd( -203.92, 19.8889, -21.4902, 0.52 ) }
    dend_19 { pt3dadd( -212.906, 18.067, -22.625, 0.52 ) }
    dend_19 { pt3dadd( -221.753, 16.3516, -24.6772, 0.52 ) }
    dend_19 { pt3dadd( -230.696, 14.6396, -26.2539, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -54.619, 36.5861, -27.1718, 0.29 ) }
    dend_14 { pt3dadd( -56.5525, 36.724, -28.2705, 0.29 ) }
    dend_14 { pt3dadd( -58.7999, 36.8279, -29.4565, 0.44 ) }
    dend_14 { pt3dadd( -59.7295, 36.869, -29.8883, 0.44 ) }
    dend_14 { pt3dadd( -61.2051, 36.9525, -30.4787, 0.29 ) }
    dend_14 { pt3dadd( -62.7244, 37.0656, -31.0022, 0.29 ) }
    dend_14 { pt3dadd( -64.2358, 37.2003, -31.4547, 0.59 ) }
    dend_14 { pt3dadd( -65.284, 37.3473, -31.6097, 0.81 ) }
    dend_14 { pt3dadd( -66.5872, 37.5382, -31.6868, 0.59 ) }
    dend_14 { pt3dadd( -67.8331, 37.6936, -31.7695, 0.44 ) }
    dend_14 { pt3dadd( -68.8747, 37.7977, -31.8804, 0.74 ) }
    dend_14 { pt3dadd( -69.675, 37.883, -32.0129, 1.03 ) }
    dend_14 { pt3dadd( -71.2717, 38.0572, -32.4127, 0.29 ) }
    dend_14 { pt3dadd( -73.0717, 38.1842, -33.0525, 0.29 ) }
    dend_14 { pt3dadd( -74.9706, 38.1588, -33.9265, 0.96 ) }
    dend_14 { pt3dadd( -76.9213, 37.9214, -35.0024, 0.66 ) }
    dend_14 { pt3dadd( -78.3171, 37.576, -35.8739, 0.74 ) }
    dend_14 { pt3dadd( -79.6203, 37.1907, -36.7641, 0.81 ) }
    dend_14 { pt3dadd( -80.8228, 36.752, -37.6767, 0.52 ) }
    dend_14 { pt3dadd( -82.3519, 36.0471, -38.8745, 0.52 ) }
    dend_14 { pt3dadd( -83.5665, 35.2755, -39.8695, 0.44 ) }
    dend_14 { pt3dadd( -84.5076, 34.4384, -40.6404, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -230.696, 14.6396, -26.2539, 0.66 ) }
    dend_21 { pt3dadd( -237.169, 9.25428, -26.2961, 0.66 ) }
    dend_21 { pt3dadd( -242.852, 3.09141, -26.67, 0.66 ) }
    dend_21 { pt3dadd( -248.374, -3.20638, -27.0881, 0.66 ) }
    dend_21 { pt3dadd( -254.131, -9.26038, -26.2171, 0.66 ) }
    dend_21 { pt3dadd( -259.137, -15.8982, -25.1868, 0.66 ) }
    dend_21 { pt3dadd( -264.17, -22.5866, -24.987, 0.66 ) }
    dend_21 { pt3dadd( -269.162, -29.2361, -25.9593, 0.66 ) }
    dend_21 { pt3dadd( -273.692, -36.1846, -26.9872, 0.66 ) }
    dend_21 { pt3dadd( -277.98, -43.3163, -27.7028, 0.66 ) }
    dend_21 { pt3dadd( -281.675, -50.7745, -28.1995, 0.66 ) }
    dend_21 { pt3dadd( -284.509, -58.5951, -27.8383, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -286.994, -66.5332, -27.6527, 0.66 ) }
    dend_21 { pt3dadd( -291.251, -73.7103, -27.2598, 0.66 ) }
    dend_21 { pt3dadd( -295.256, -81.0325, -27.2316, 0.66 ) }
    dend_21 { pt3dadd( -300.073, -87.7519, -28.5191, 0.66 ) }
    dend_21 { pt3dadd( -305.17, -94.2885, -29.717, 0.66 ) }
    dend_21 { pt3dadd( -311.224, -99.573, -32.2245, 0.66 ) }
    dend_21 { pt3dadd( -317.098, -104.505, -35.7163, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -230.696, 14.6396, -26.2539, 0.15 ) }
    dend_20 { pt3dadd( -241.428, 19.3843, -28.4324, 0.66 ) }
    dend_20 { pt3dadd( -251.206, 25.9412, -30.1303, 0.66 ) }
    dend_20 { pt3dadd( -261.085, 32.4252, -31.5157, 0.66 ) }
    dend_20 { pt3dadd( -270.037, 40.1301, -32.6324, 0.66 ) }
    dend_20 { pt3dadd( -279.286, 47.3849, -34.312, 0.66 ) }
    dend_20 { pt3dadd( -287.613, 54.9427, -38.05, 0.66 ) }
    dend_20 { pt3dadd( -296.39, 61.8434, -42.0812, 0.66 ) }
    dend_20 { pt3dadd( -304.41, 69.5642, -46.1212, 0.66 ) }
    dend_20 { pt3dadd( -313.922, 75.6031, -49.9386, 0.66 ) }
    dend_20 { pt3dadd( -323.3, 80.6523, -55.2754, 0.66 ) }
    dend_20 { pt3dadd( -331.322, 86.0718, -62.1838, 0.66 ) }
    dend_20 { pt3dadd( -340.82, 89.9793, -68.2608, 0.66 ) }
    dend_20 { pt3dadd( -348.949, 94.7555, -75.5352, 0.66 ) }
    dend_20 { pt3dadd( -355.791, 100.917, -83.0225, 0.66 ) }
    dend_20 { pt3dadd( -361.047, 107.601, -91.2654, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -84.5076, 34.4384, -40.6404, 0.66 ) }
    dend_16 { pt3dadd( -84.7308, 33.5714, -41.2692, 0.66 ) }
    dend_16 { pt3dadd( -84.9279, 32.918, -41.8679, 0.59 ) }
    dend_16 { pt3dadd( -85.1259, 32.473, -42.3655, 0.29 ) }
    dend_16 { pt3dadd( -85.5067, 31.8568, -43.1149, 0.29 ) }
    dend_16 { pt3dadd( -85.6945, 31.6213, -43.4509, 0.44 ) }
    dend_16 { pt3dadd( -86.2705, 31.0704, -44.4215, 0.59 ) }
    dend_16 { pt3dadd( -86.7446, 30.7166, -45.1576, 0.59 ) }
    dend_16 { pt3dadd( -87.3092, 30.3903, -46.0192, 0.59 ) }
    dend_16 { pt3dadd( -87.7415, 30.1923, -46.6716, 0.66 ) }
    dend_16 { pt3dadd( -88.4465, 29.9342, -47.7042, 0.66 ) }
    dend_16 { pt3dadd( -89.3546, 29.6861, -49.0007, 0.22 ) }
    dend_16 { pt3dadd( -92.5917, 26.8904, -55.4932, 0.22 ) }
    dend_16 { pt3dadd( -95.9967, 24.0701, -61.8882, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -84.5076, 34.4384, -40.6404, 0.15 ) }
    dend_15 { pt3dadd( -85.4513, 34.5411, -40.3716, 0.15 ) }
    dend_15 { pt3dadd( -86.3871, 34.5669, -40.1081, 0.22 ) }
    dend_15 { pt3dadd( -87.3613, 34.4597, -39.8616, 0.37 ) }
    dend_15 { pt3dadd( -88.2999, 34.2712, -39.6599, 0.52 ) }
    dend_15 { pt3dadd( -89.5609, 33.898, -39.3951, 0.22 ) }
    dend_15 { pt3dadd( -90.2984, 33.6396, -39.2323, 0.22 ) }
    dend_15 { pt3dadd( -90.8353, 33.4101, -39.0693, 0.22 ) }
    dend_15 { pt3dadd( -91.9977, 32.8141, -38.6485, 0.29 ) }
    dend_15 { pt3dadd( -92.6585, 32.4325, -38.386, 0.22 ) }
    dend_15 { pt3dadd( -93.6524, 31.8879, -38.0588, 0.29 ) }
    dend_15 { pt3dadd( -94.6925, 31.4045, -37.7955, 0.15 ) }
    dend_15 { pt3dadd( -96.0297, 30.9038, -37.5018, 0.15 ) }
    dend_15 { pt3dadd( -96.5611, 30.7547, -37.4057, 0.44 ) }
    dend_15 { pt3dadd( -97.236, 30.62, -37.3153, 0.44 ) }
    dend_15 { pt3dadd( -99.1658, 30.3455, -37.1612, 0.22 ) }
    dend_15 { pt3dadd( -100.099, 30.2625, -37.097, 0.22 ) }
    dend_15 { pt3dadd( -100.821, 30.2312, -37.0368, 0.52 ) }
    dend_15 { pt3dadd( -101.688, 30.2458, -36.983, 0.52 ) }
    dend_15 { pt3dadd( -102.698, 30.2914, -36.8799, 0.22 ) }
    dend_15 { pt3dadd( -103.466, 30.3548, -36.7397, 0.44 ) }
    dend_15 { pt3dadd( -104.853, 30.5095, -36.2621, 0.44 ) }
    dend_15 { pt3dadd( -105.803, 30.6852, -35.88, 0.74 ) }
    dend_15 { pt3dadd( -106.877, 30.9729, -35.3584, 0.88 ) }
    dend_15 { pt3dadd( -116.628, 28.7883, -31.95, 0.88 ) }
    dend_15 { pt3dadd( -126.125, 25.5855, -28.6435, 0.88 ) }
    dend_15 { pt3dadd( -136.382, 23.7253, -26.9638, 0.88 ) }
    dend_15 { pt3dadd( -146.927, 23.2116, -26.9986, 0.88 ) }
    dend_15 { pt3dadd( -157.407, 22.892, -28.2378, 0.88 ) }
    dend_15 { pt3dadd( -167.918, 23.5368, -28.9036, 0.88 ) }
    dend_15 { pt3dadd( -178.047, 25.5107, -31.0519, 0.88 ) }
    dend_15 { pt3dadd( -187.774, 26.0829, -35.1129, 0.88 ) }
    dend_15 { pt3dadd( -197.588, 27.8505, -38.5465, 0.88 ) }
    dend_15 { pt3dadd( -208.075, 27.4143, -39.6909, 0.88 ) }
    dend_15 { pt3dadd( -218.4, 25.2411, -39.3528, 0.88 ) }
    dend_15 { pt3dadd( -228.137, 21.7503, -41.3869, 0.88 ) }
    dend_15 { pt3dadd( -237.484, 18.5634, -45.0722, 0.88 ) }
    dend_15 { pt3dadd( -247.679, 16.7678, -47.1441, 0.88 ) }
    dend_15 { pt3dadd( -257.889, 15.32, -49.4066, 0.88 ) }
    dend_15 { pt3dadd( -268.307, 13.7964, -50.2018, 0.88 ) }
    dend_15 { pt3dadd( -278.741, 12.2547, -49.7196, 0.88 ) }
    dend_15 { pt3dadd( -288.619, 8.74226, -48.5584, 0.88 ) }
    dend_15 { pt3dadd( -298.419, 6.07506, -45.6823, 0.88 ) }
    dend_15 { pt3dadd( -307.566, 4.65095, -40.6043, 0.88 ) }
    dend_15 { pt3dadd( -315.903, 1.8251, -34.7764, 0.88 ) }
    dend_15 { pt3dadd( -322.889, -2.69201, -28.2981, 0.88 ) }
    dend_15 { pt3dadd( -328.873, -8.08664, -21.5176, 0.88 ) }
    dend_15 { pt3dadd( -335.707, -14.4799, -16.7432, 0.88 ) }
    dend_15 { pt3dadd( -341.536, -21.6473, -11.7865, 0.88 ) }
    dend_15 { pt3dadd( -345.505, -29.8249, -6.63157, 0.88 ) }
    dend_15 { pt3dadd( -348.234, -38.8341, -2.18446, 0.88 ) }
    dend_15 { pt3dadd( -349.209, -48.3865, 1.75207, 0.88 ) }
    dend_15 { pt3dadd( -348.841, -58.5313, 3.65428, 0.88 ) }
    dend_15 { pt3dadd( -349.051, -68.3534, 6.93386, 0.88 ) }
    dend_15 { pt3dadd( -350.525, -77.986, 10.4917, 0.88 ) }
    dend_15 { pt3dadd( -351.767, -87.5142, 14.4178, 0.88 ) }
    dend_15 { pt3dadd( -352.257, -97.4648, 17.2196, 0.88 ) }
    dend_15 { pt3dadd( -351.949, -107.183, 20.7992, 0.88 ) }
    dend_15 { pt3dadd( -352.072, -116.964, 24.2132, 0.88 ) }
    dend_15 { pt3dadd( -351.792, -126.783, 27.4875, 0.88 ) }
    dend_15 { pt3dadd( -353.011, -135.954, 32.238, 0.88 ) }
    dend_15 { pt3dadd( -353.435, -145.364, 36.6097, 0.88 ) }
    dend_15 { pt3dadd( -355.072, -153.932, 42.3286, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -357.881, -163.002, 46.5916, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -95.9967, 24.0701, -61.8882, 0.22 ) }
    dend_18 { pt3dadd( -101.782, 18.9222, -71.7982, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -95.9967, 24.0701, -61.8882, 0.22 ) }
    dend_17 { pt3dadd( -99.4246, 21.195, -71.2655, 0.22 ) }
    dend_17 { pt3dadd( -104.367, 17.0898, -79.4097, 0.22 ) }
    dend_17 { pt3dadd( -108.343, 14.2709, -88.5896, 0.22 ) }
    dend_17 { pt3dadd( -111.699, 10.5662, -97.6784, 0.22 ) }
    dend_17 { pt3dadd( -113.665, 8.71211, -107.723, 0.22 ) }
    dend_17 { pt3dadd( -115.341, 5.3801, -117.403, 0.22 ) }
    dend_17 { pt3dadd( -115.452, 2.11724, -127.243, 0.22 ) }
    dend_17 { pt3dadd( -116.739, -2.89376, -136.184, 0.22 ) }
    dend_17 { pt3dadd( -118.521, -6.85535, -145.588, 0.22 ) }
    dend_17 { pt3dadd( -121.913, -10.7766, -154.567, 0.22 ) }
    dend_17 { pt3dadd( -125.11, -15.4552, -163.227, 0.22 ) }
    dend_17 { pt3dadd( -129.009, -20.874, -171.117, 0.22 ) }
    dend_17 { pt3dadd( -133.682, -26.1794, -178.668, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_1 nseg = 3
    dend_32 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 5
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 17
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 9
    dend_33 nseg = 17
    dend_29 nseg = 3
    dend_28 nseg = 9
    dend_22 nseg = 3
    dend_11 nseg = 3
    dend_9 nseg = 9
    dend_43 nseg = 11
    dend_40 nseg = 9
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_24 nseg = 7
    dend_12 nseg = 9
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_42 nseg = 9
    dend_41 nseg = 7
    dend_19 nseg = 9
    dend_21 nseg = 7
    dend_20 nseg = 9
    dend_15 nseg = 23
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_DBC_84d9723b18_0_0


