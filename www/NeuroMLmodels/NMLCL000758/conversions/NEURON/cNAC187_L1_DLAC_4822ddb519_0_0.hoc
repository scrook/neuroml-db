// Cell: cNAC187_L1_DLAC_4822ddb519_0_0
/*
{
  "id" : "cNAC187_L1_DLAC_4822ddb519_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.72139, -3.07833, 0.0, 5.33181", "-6.01808, -2.65828, 0.0, 10.0867", "-5.31478, -2.23823, 0.0, 11.4587", "-4.61147, -1.81819, 0.0, 12.5833", "-3.90817, -1.39814, 0.0, 13.0425", "-3.20486, -0.97809, 0.0, 13.5134", "-2.50156, -0.558043, 0.0, 13.9112", "-1.79825, -0.137995, 0.0, 14.1298", "-1.09495, 0.282053, 0.0, 14.241", "-0.391641, 0.702101, 0.0, 14.3378", "0.311664, 1.12215, 0.0, 14.4513", "1.01497, 1.5422, 0.0, 14.5931", "1.71827, 1.96224, 0.0, 14.6986", "2.42158, 2.38229, 0.0, 14.5687", "3.12489, 2.80234, 0.0, 14.3508", "3.82819, 3.22239, 0.0, 13.9653", "4.5315, 3.64243, 0.0, 13.3396", "5.2348, 4.06248, 0.0, 12.4886", "5.93811, 4.48253, 0.0, 11.1129", "6.64141, 4.90258, 0.0, 8.63124", "7.34472, 5.32263, 0.0, 4.83175" ]
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.40346, -6.6056, 3.0, 2.64", "-2.45345, -6.9571, 3.0, 2.64" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.47655, -2.3021, 3.96, 1.47", "8.29935, -2.76151, 4.11238, 1.47", "10.2273, -3.75823, 4.56904, 1.18", "11.2343, -4.24247, 4.84157, 1.25", "12.0446, -4.63214, 5.06088, 1.25", "12.7456, -4.96921, 5.25059, 1.18", "14.6755, -5.89726, 5.7729, 1.18", "16.3905, -6.68114, 6.25117, 1.18", "17.6649, -7.20282, 6.59216, 1.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.18345, -4.3351, 5.85, 0.81", "-5.90894, -4.68254, 6.45926, 0.88", "-6.91896, -5.06426, 7.2689, 0.66", "-7.42453, -5.17353, 7.68324, 0.66", "-8.1397, -5.22871, 8.21509, 0.66", "-8.88912, -5.22974, 8.7083, 0.66", "-9.39867, -5.2175, 8.98812, 0.88", "-10.1419, -5.14296, 9.36078, 1.1", "-11.5548, -4.95605, 9.92884, 0.88", "-12.6944, -4.85376, 10.4283, 0.37", "-13.5745, -4.85579, 10.8221, 0.88", "-14.5877, -4.96306, 11.3093, 0.88", "-15.4934, -5.14202, 11.7662, 0.88", "-16.4555, -5.41854, 12.2836, 1.4", "-18.3561, -6.12598, 13.3434, 0.81", "-19.574, -6.61972, 14.1406, 0.59", "-20.3984, -6.94958, 14.7248, 0.73", "-21.1508, -7.21551, 15.2708, 0.37", "-22.0291, -7.469, 15.8687, 0.37", "-22.7415, -7.60105, 16.3489, 1.25", "-24.305, -7.60005, 17.2889, 0.37", "-24.735, -7.5415, 17.559, 0.37", "-25.4135, -7.36007, 17.9968, 0.37", "-25.8656, -7.15828, 18.3134, 0.37", "-26.3233, -6.79865, 18.6055, 0.37", "-26.8863, -5.97114, 18.9496, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.96655, 1.4314, 3.67, 1.1", "9.85709, 1.7169, 3.83738, 0.73", "10.4644, 1.92764, 3.92081, 0.73", "11.5493, 2.36295, 4.03842, 0.95", "12.9248, 2.99659, 4.16485, 1.03", "13.424, 3.26307, 4.18775, 1.03", "14.5278, 3.90425, 4.27931, 1.03", "15.2667, 4.41313, 4.39091, 1.1", "15.8777, 4.87407, 4.53043, 0.95", "16.2751, 5.1921, 4.67486, 0.95", "17.149, 5.88869, 5.02663, 0.95", "18.2448, 6.77463, 5.52799, 1.18", "19.0865, 7.47256, 5.97648, 0.88", "20.1515, 8.31331, 6.63049, 0.88", "21.1824, 9.0667, 7.30738, 1.18", "22.3197, 9.83724, 8.09951, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "4.60655, 7.4924, -4.1, 0.88", "4.66448, 8.16768, -4.33233, 0.88", "4.83351, 9.64627, -4.69775, 0.95", "4.9562, 10.3694, -4.85755, 1.1", "5.16925, 11.2537, -5.0288, 0.81", "5.33594, 11.8541, -5.13357, 0.81", "5.52426, 12.5169, -5.23864, 1.03", "5.95198, 13.9559, -5.44811, 0.73", "6.20794, 14.9516, -5.59248, 0.88", "6.4834, 16.1413, -5.82085, 0.44", "6.63305, 16.7106, -5.92564, 0.51", "6.83592, 17.3797, -6.02548, 0.81", "7.17408, 18.3595, -6.13087, 1.18", "7.68059, 19.7445, -6.20158, 0.95", "7.85487, 20.2403, -6.19784, 0.51", "8.46486, 21.7823, -6.19153, 0.51", "8.89526, 22.7363, -6.1844, 0.88", "9.29064, 23.5468, -6.1695, 0.66", "9.86557, 24.6623, -6.12525, 0.44", "10.4248, 25.7159, -6.07008, 1.03", "10.9742, 26.9577, -6.09023, 0.81", "11.1659, 27.5312, -6.14851, 0.37", "11.3595, 28.2723, -6.26519, 0.37", "11.4274, 28.5782, -6.33349, 0.37", "11.6178, 29.5117, -6.58772, 0.95", "11.8331, 30.4586, -6.83037, 1.03", "11.947, 30.9595, -6.93866, 1.03", "12.2197, 32.0357, -7.15998, 1.1", "12.4828, 33.1165, -7.36137, 0.59", "12.626, 33.819, -7.45709, 0.73", "12.8129, 34.9614, -7.56297, 0.29", "12.8947, 35.5776, -7.57418, 0.29", "12.9728, 36.5553, -7.54825, 0.81", "13.0039, 37.4284, -7.52129, 0.51", "12.9916, 38.7873, -7.49911, 0.73", "12.9617, 39.4324, -7.51965, 0.73", "12.9006, 40.1964, -7.61548, 0.73", "12.8132, 41.1757, -7.79948, 0.59", "12.6962, 42.2776, -8.08621, 0.51", "12.6372, 42.9509, -8.29669, 0.81", "12.5648, 43.7264, -8.5948, 0.51", "12.4353, 45.0327, -9.15059, 0.22", "12.3665, 45.5571, -9.3987, 0.22", "12.2354, 46.2186, -9.73646, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.17345, 5.7539, 7.35, 0.88", "-4.44444, 6.54679, 7.41903, 0.73", "-4.66879, 7.22885, 7.50338, 0.88", "-4.80724, 7.69856, 7.56715, 0.59", "-4.99998, 8.63378, 7.72276, 0.73", "-5.08153, 9.17061, 7.8548, 0.29", "-5.16979, 9.7977, 8.03337, 0.29", "-5.25848, 10.3587, 8.25111, 0.66", "-5.33417, 10.7495, 8.43283, 0.37", "-5.51396, 11.5455, 8.84044, 0.37", "-5.7881, 12.3668, 9.28586, 0.22", "-5.97138, 12.7366, 9.48533, 0.22", "-6.36593, 13.3618, 9.80263, 0.22", "-6.72081, 13.8639, 10.0417, 0.37", "-6.93369, 14.1419, 10.1681, 0.51", "-7.40133, 14.6918, 10.395, 0.37", "-8.15073, 15.58, 10.7023, 0.15", "-8.3976, 15.8977, 10.81, 0.37", "-8.78008, 16.4669, 10.9837, 0.15", "-9.17868, 17.115, 11.2052, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.403454, 7.6064, 4.06, 1.03", "-0.581711, 8.32885, 4.09483, 1.03", "-0.76034, 9.59635, 4.10774, 0.81", "-0.789803, 10.392, 4.09902, 0.88", "-0.728616, 11.3814, 4.07603, 1.18", "-0.603429, 12.2426, 4.05043, 1.18", "-0.39248, 13.2561, 4.04987, 0.59", "-0.129414, 13.9842, 4.06591, 0.59", "0.248083, 14.6894, 4.14257, 0.95", "0.740555, 15.4471, 4.24609, 0.59", "1.20346, 16.1095, 4.34783, 0.73", "1.63282, 16.7781, 4.41579, 0.73", "2.00596, 17.4896, 4.45313, 1.03", "2.46824, 18.6936, 4.42299, 1.54", "2.78729, 19.8673, 4.37265, 0.88", "2.95573, 20.754, 4.31752, 0.51", "3.17078, 22.3783, 4.18495, 0.51", "3.24554, 23.2929, 4.05592, 0.51", "3.26247, 24.5075, 3.84879, 0.51", "3.16691, 25.7389, 3.63288, 0.51", "3.10117, 26.3114, 3.56481, 0.51", "3.00262, 27.0338, 3.50509, 0.59", "2.82835, 28.0659, 3.52646, 0.88", "2.7096, 28.7077, 3.53683, 0.37", "2.38057, 29.8433, 3.53245, 0.51" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.31345, 4.1769, -1.8, 1.91", "-7.31345, 4.1769, -1.8, 1.91", "-8.78537, 5.04628, -1.80044, 1.25", "-9.9158, 5.7646, -1.78085, 1.47", "-11.0187, 6.49364, -1.75325, 1.47", "-11.8798, 7.06288, -1.7317, 1.62", "-13.2096, 7.942, -1.69841, 1.25", "-14.574, 8.86713, -1.61399, 1.47", "-15.3584, 9.43017, -1.49752, 1.76", "-15.561, 9.58625, -1.45631, 2.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999475985608
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.34472, 5.32263, 0.0, 0.637487", "20.2227, 13.014, 0.0, 0.637487", "33.1007, 20.7054, 0.0, 0.637487" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.45345, -6.9571, 3.0, 2.06", "-2.84591, -8.69339, 2.74899, 2.06", "-3.3476, -10.9131, 2.4281, 1.76", "-3.52737, -11.7084, 2.31311, 1.76", "-3.60299, -12.043, 2.26474, 1.76" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.45345, -6.9571, 3.0, 0.59", "-1.66548, -8.04192, 3.35723, 0.59", "-1.14906, -8.81719, 3.64487, 0.59", "-0.781073, -9.41702, 3.9186, 0.59", "-0.335993, -10.251, 4.35181, 0.59", "0.115854, -11.2564, 4.98227, 0.95", "0.407236, -12.0619, 5.54921, 0.81", "0.487187, -12.4692, 5.92492, 0.81", "0.550223, -13.135, 6.63863, 0.81", "0.611919, -13.8304, 7.491, 0.51", "0.69219, -14.6259, 8.56658, 1.03", "0.758324, -15.0875, 9.24432, 1.32", "1.01537, -16.0613, 10.7009, 0.59", "1.11126, -16.3115, 11.0543, 0.73", "1.51813, -17.1481, 12.0966, 0.22", "1.73161, -17.5191, 12.5124, 0.22", "1.99893, -17.8784, 12.8494, 0.37", "2.40144, -18.3172, 13.2112, 0.37", "2.79077, -18.7064, 13.4165, 0.37", "3.41302, -19.3197, 13.731, 0.37", "3.5449, -20.4241, 13.7167, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.6649, -7.20282, 6.59216, 1.1", "18.4878, -7.71884, 5.40509, 1.1", "19.3748, -8.17904, 4.29539, 1.1", "19.7648, -8.34517, 3.86262, 1.1", "20.3957, -8.56501, 3.2429, 0.73", "21.1882, -8.8061, 2.53855, 0.73", "22.8747, -9.27123, 1.18837, 0.73", "24.3118, -9.59607, 0.239304, 0.73", "24.9592, -9.72954, -0.132366, 0.88", "25.736, -9.87286, -0.549714, 1.03", "27.1621, -10.1144, -1.25639, 0.59", "28.0448, -10.2703, -1.65674, 0.66", "29.1117, -10.4713, -2.14258, 0.81", "29.8381, -10.6322, -2.47203, 0.81", "30.6655, -10.8483, -2.87962, 0.81", "31.4129, -11.0692, -3.28004, 0.95", "32.4014, -11.3794, -3.85001, 0.81", "33.1636, -11.6507, -4.3812, 1.1" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "17.6649, -7.20282, 6.59216, 1.47", "19.094, -7.86166, 6.66696, 1.47", "20.8343, -8.63686, 6.71657, 1.32", "22.3578, -9.26787, 6.75991, 0.95", "24.0776, -9.90808, 6.89851, 1.18", "25.7147, -10.4322, 7.07273, 0.95", "27.6026, -10.9398, 7.35918, 0.95", "28.5938, -11.1569, 7.54949, 1.1", "29.7243, -11.2751, 7.93972, 1.1", "31.1146, -11.1727, 8.8483, 1.25", "31.8972, -10.9698, 9.61794, 0.88", "32.7165, -10.6376, 10.6286, 0.81", "33.5579, -10.1289, 11.9525, 0.95", "34.3334, -9.52368, 13.4931, 0.59", "34.6589, -9.17266, 14.3636, 0.59", "34.7594, -9.0128, 14.7586, 0.59" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "22.3197, 9.83724, 8.09951, 0.95", "23.1691, 9.13134, 8.5295, 0.95", "23.7915, 8.60093, 8.74366, 0.95", "24.8069, 7.74942, 9.02197, 1.32", "25.859, 6.85553, 9.29379, 0.88", "26.7777, 6.03367, 9.5615, 0.81", "27.544, 5.33459, 9.81569, 1.18", "28.4905, 4.44808, 10.1237, 0.59", "29.2273, 3.78352, 10.3881, 0.59", "30.0125, 3.16067, 10.6677, 0.44", "31.2721, 2.38195, 11.1647, 0.44", "31.8671, 2.1425, 11.4282, 0.44", "32.3265, 2.08119, 11.6673, 0.44", "33.1746, 2.20301, 12.1591, 0.59", "33.9601, 2.55559, 12.6696, 0.73", "34.6083, 3.02304, 13.1295, 0.59", "35.1939, 3.58899, 13.5881, 0.59", "35.6919, 4.14148, 14.0361, 0.44", "36.1931, 4.70971, 14.5445, 0.73", "36.9974, 5.58039, 15.3672, 0.29", "37.2137, 5.7826, 15.581, 0.29", "37.7158, 6.15588, 16.0002, 0.29", "38.4468, 6.55111, 16.4358, 0.22", "39.5307, 7.06437, 17.0, 0.15", "40.4182, 7.40397, 17.3665, 0.15", "41.1918, 7.63705, 17.613, 0.15", "42.2258, 7.90439, 17.9084, 0.15", "43.8303, 8.25211, 18.2638, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "22.3197, 9.83724, 8.09951, 0.95", "22.8023, 10.7916, 8.08105, 0.95", "23.278, 11.9472, 8.18834, 0.88", "23.5287, 12.6454, 8.28556, 1.25", "23.6586, 13.0392, 8.34382, 1.25", "24.0086, 14.0575, 8.52092, 0.81", "24.4631, 15.2413, 8.74296, 1.1", "24.712, 15.8074, 8.88072, 1.25", "25.1777, 16.7456, 9.14202, 0.81", "25.7182, 17.6312, 9.37087, 0.37", "26.0522, 18.0605, 9.4625, 0.37", "26.4944, 18.5195, 9.5371, 0.37", "27.0758, 19.0704, 9.63603, 0.37", "27.5675, 19.5586, 9.76617, 0.37", "28.2368, 20.2846, 10.01, 0.37", "28.7221, 20.8995, 10.2843, 0.51", "28.9211, 21.2454, 10.4474, 0.81", "29.3756, 22.3945, 11.0157, 0.73", "29.589, 23.1866, 11.3996, 0.29", "29.6721, 23.5862, 11.5826, 0.29", "29.8452, 24.6197, 11.9936, 0.29", "29.9841, 25.4258, 12.2742, 0.29", "30.1159, 26.0245, 12.4625, 0.29", "30.3836, 26.9164, 12.7648, 0.29", "30.7501, 27.7261, 13.1174, 0.29", "31.2466, 28.5151, 13.5401, 0.29", "31.4609, 28.799, 13.7016, 0.29", "31.9771, 29.2722, 14.0863, 0.29", "33.0173, 29.8893, 14.8905, 0.59", "33.7609, 30.072, 15.5107, 0.95", "34.1622, 30.055, 15.8577, 0.95" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.561, 9.58625, -1.45631, 1.18", "-16.3639, 9.73784, -2.02806, 1.18", "-17.2223, 9.8999, -2.6393, 0.95", "-17.9688, 10.0408, -3.17085, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.561, 9.58625, -1.45631, 1.03", "-15.3635, 10.604, -1.97132, 1.03", "-15.1972, 11.8523, -2.55678, 0.59", "-15.1181, 13.0363, -3.07125, 0.59", "-15.1247, 13.9324, -3.4247, 0.59", "-15.1295, 14.5907, -3.68436, 0.88", "-15.1319, 14.9189, -3.8138, 0.88", "-15.1988, 15.5423, -4.06042, 0.88", "-15.3338, 16.0465, -4.20256, 1.03", "-15.6409, 16.6909, -4.30543, 1.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "33.1007, 20.7054, 0.0, 0.227585", "45.9787, 28.3967, 0.0, 0.227585", "58.8567, 36.0881, 0.0, 0.227585" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-3.60299, -12.043, 2.26474, 1.76", "-3.53029, -13.4723, 1.60929, 1.76", "-3.46154, -14.8238, 0.989485, 1.91", "-3.42132, -15.6145, 0.626887, 1.91", "-3.33137, -17.3827, -0.184014, 1.54" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.60299, -12.043, 2.26474, 0.29", "-4.18845, -12.5044, 2.77646, 0.29", "-4.46717, -12.8298, 3.11922, 0.29", "-4.81783, -13.4868, 3.77072, 1.1", "-4.97464, -13.85, 4.09036, 1.1", "-5.06433, -14.0705, 4.27086, 1.1", "-5.33745, -14.5947, 4.67702, 0.95", "-5.61205, -15.0466, 4.98517, 0.95", "-6.00389, -15.5656, 5.3016, 0.66", "-6.45463, -15.9916, 5.51935, 0.59", "-6.96301, -16.3589, 5.69452, 0.59", "-7.88165, -16.8988, 5.95069, 1.25", "-9.00996, -17.4791, 6.23282, 0.66", "-9.43953, -17.6945, 6.33607, 0.66", "-10.3807, -18.1755, 6.6087, 0.51", "-10.7475, -18.3964, 6.77819, 0.44", "-11.0691, -18.7573, 7.17075, 0.44", "-11.0948, -19.0239, 7.58171, 0.66", "-11.0462, -19.466, 8.25528, 0.73", "-10.9445, -20.0933, 9.14729, 0.51", "-10.82, -20.7566, 10.0246, 0.73", "-10.7168, -21.3726, 10.7967, 1.25", "-10.598, -22.4489, 12.0706, 1.47", "-10.6159, -23.2699, 12.9913, 0.59", "-10.7269, -23.7917, 13.5599, 0.51", "-10.909, -24.1993, 13.9886, 0.51", "-11.2053, -24.5624, 14.3934, 0.51", "-11.5536, -24.6722, 14.6745, 0.51", "-12.2679, -24.4599, 15.1008, 0.44", "-12.9696, -24.1681, 15.4895, 0.44", "-13.8376, -23.8136, 15.883, 0.44", "-14.6581, -23.4986, 16.1646, 0.37", "-15.6315, -23.1701, 16.4029, 0.29", "-16.7406, -22.8759, 16.4428, 0.66", "-17.5357, -22.7271, 16.3036, 0.37", "-18.679, -22.5966, 15.9075, 0.22", "-19.6202, -22.5409, 15.502, 0.22", "-20.2165, -22.5105, 15.2164, 0.44", "-22.5513, -22.3601, 14.0153, 0.29", "-23.5554, -22.2624, 13.4887, 0.44", "-24.622, -22.109, 12.9706, 0.29", "-25.6894, -21.9155, 12.4898, 0.22", "-26.7401, -21.703, 12.0859, 0.22", "-27.124, -21.6181, 11.9691, 0.22", "-27.6054, -21.5042, 11.9296, 0.22", "-28.1102, -21.3806, 11.8946, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "33.1636, -11.6507, -4.3812, 0.73", "33.7599, -12.2031, -5.24372, 0.73", "34.5497, -13.1657, -6.39956, 0.66", "34.7628, -13.5163, -6.71605, 0.44", "35.0441, -14.0654, -7.09844, 0.44", "35.1914, -14.385, -7.29132, 0.44", "35.3635, -14.8065, -7.53391, 0.44", "35.6914, -15.7671, -8.09758, 0.95", "36.0011, -16.7933, -8.63058, 0.37", "36.2381, -17.7033, -9.0995, 0.51", "36.4399, -18.5706, -9.53974, 0.29", "36.765, -19.9502, -10.2543, 1.03", "37.0757, -21.1948, -10.9798, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "33.1636, -11.6507, -4.3812, 1.1", "33.9436, -11.4528, -4.64737, 1.1", "35.4273, -11.1623, -5.09363, 0.81", "36.8217, -11.0351, -5.50388, 0.88", "37.9215, -11.0227, -5.7715, 0.88", "39.0376, -11.0809, -6.00255, 0.88", "40.1223, -11.1799, -6.20022, 0.88", "41.1944, -11.3745, -6.33687, 1.03", "42.7386, -11.7747, -6.44592, 0.66", "44.0092, -12.1236, -6.49984, 0.73", "44.8844, -12.3313, -6.50605, 0.73", "45.4074, -12.4103, -6.50152, 0.73", "46.4154, -12.4383, -6.47194, 0.73", "47.2076, -12.3182, -6.46354, 1.03", "48.6096, -11.8259, -6.45732, 0.73", "49.3584, -11.4891, -6.48068, 1.18", "50.1207, -11.1107, -6.55263, 0.88", "50.7976, -10.75, -6.68579, 0.59", "51.6628, -10.2849, -6.92472, 0.59", "52.2872, -9.96698, -7.13091, 0.59", "53.3824, -9.47821, -7.56538, 0.66", "54.5702, -9.02248, -8.05231, 0.66", "55.8166, -8.62401, -8.55097, 1.4", "56.9597, -8.30401, -8.99274, 0.66", "57.5499, -8.14586, -9.20838, 0.37", "58.8952, -7.76583, -9.77302, 0.51", "59.6834, -7.52082, -10.1096, 0.66", "60.4234, -7.29663, -10.391, 0.66", "60.6925, -7.22645, -10.5028, 0.73", "61.1681, -7.1219, -10.7215, 0.51", "62.9434, -6.78843, -11.5232, 0.07", "63.6842, -6.65195, -11.8564, 0.59", "64.2819, -6.54741, -12.1211, 0.51", "65.3382, -6.35951, -12.603, 0.51", "66.4883, -6.14401, -13.1062, 0.73", "67.3876, -5.98091, -13.4582, 0.81", "68.8406, -5.74824, -13.9205, 0.37", "69.6873, -5.62425, -14.1746, 0.37", "70.6573, -5.48882, -14.4374, 0.37", "71.5328, -5.38165, -14.6336, 0.29", "72.5305, -5.30345, -14.8291, 0.29", "73.3217, -5.29649, -14.9475, 0.29", "74.261, -5.35468, -15.0756, 0.29", "74.738, -5.4075, -15.1648, 0.88", "75.8703, -5.57455, -15.4022, 1.32", "77.2789, -5.82152, -15.7538, 0.66", "78.0937, -5.97465, -15.9817, 0.15", "79.2319, -6.2002, -16.2685, 0.88", "80.4759, -6.44765, -16.5369, 1.03", "81.5325, -6.64503, -16.7238, 0.15", "82.426, -6.79238, -16.8388, 0.15", "83.0447, -6.86225, -16.879, 0.37", "84.5085, -6.89167, -16.8584, 0.37", "85.4605, -6.80466, -16.7727, 0.15", "85.7576, -6.74, -16.7378, 0.88", "86.2498, -6.58216, -16.7124, 1.1", "87.3229, -6.13944, -16.7209, 0.51", "88.1983, -5.70326, -16.7771, 0.29", "89.5122, -4.99076, -16.9277, 0.29", "90.4001, -4.48628, -17.0371, 0.95", "91.4013, -3.89653, -17.1643, 1.47", "91.8462, -3.62101, -17.2214, 1.47", "92.6992, -3.06389, -17.3224, 1.1", "94.2239, -2.01492, -17.4669, 0.22", "94.8794, -1.51223, -17.5082, 0.37", "95.2462, -1.1981, -17.5178, 0.73", "95.8682, -0.593063, -17.5091, 0.29", "96.3898, -0.0512776, -17.5031, 0.29", "96.9937, 0.631336, -17.4927, 0.66", "97.3523, 1.10001, -17.4829, 0.66", "97.875, 1.77776, -17.4634, 0.81", "98.5792, 2.68532, -17.4454, 0.37", "98.9106, 3.12874, -17.4467, 0.59" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.9688, 10.0408, -3.17085, 1.25", "-18.3927, 9.31892, -4.03102, 1.25", "-18.7861, 8.59755, -4.73902, 1.25", "-19.2219, 7.82012, -5.42512, 1.25", "-19.9947, 6.55837, -6.46898, 1.25", "-20.904, 5.24614, -7.58943, 0.81", "-21.4745, 4.50277, -8.2794, 0.81", "-22.0861, 3.76725, -9.01219, 0.66", "-22.4189, 3.45116, -9.43944, 0.66", "-22.9076, 3.14694, -10.1191, 0.81", "-23.5508, 2.95626, -11.0791, 0.81", "-24.0646, 2.91151, -11.9304, 0.81", "-24.8436, 2.86493, -13.3763, 1.1", "-25.9028, 2.67978, -15.437, 1.25", "-26.2771, 2.54168, -16.1701, 1.25", "-26.5595, 2.38947, -16.6946, 1.47", "-27.1321, 2.00535, -17.6454, 0.81", "-27.9287, 1.44558, -18.7803, 0.81", "-29.0259, 0.673345, -20.1329, 0.51", "-29.8012, 0.16916, -20.9393, 0.51", "-30.3369, -0.135876, -21.4489, 0.51", "-31.2162, -0.546819, -22.2153, 0.95", "-32.2529, -0.877098, -22.975, 1.4", "-32.993, -0.99275, -23.4341, 1.4", "-34.0679, -0.98765, -23.9922, 1.03", "-34.8004, -0.923315, -24.3216, 0.22", "-35.3322, -0.848395, -24.5237, 0.37", "-35.8165, -0.761629, -24.6609, 0.37", "-36.5382, -0.606592, -24.8253, 0.37", "-37.9404, -0.264537, -25.1796, 0.22", "-38.4715, -0.124449, -25.3264, 0.66", "-38.9645, 0.0048623, -25.4778, 0.66", "-39.5718, 0.174359, -25.6711, 0.59", "-40.7763, 0.547563, -26.0569, 1.1", "-41.9566, 0.95636, -26.4249, 0.73", "-43.0961, 1.38743, -26.805, 0.73", "-44.4629, 1.94722, -27.2549, 1.25", "-44.8264, 2.11227, -27.3898, 1.4", "-45.8421, 2.63642, -27.794, 0.88", "-46.2917, 2.88371, -27.9748, 0.95", "-47.1052, 3.31884, -28.3035, 0.81", "-47.499, 3.50456, -28.4813, 0.59", "-48.4374, 3.8347, -28.8994, 0.37", "-49.1874, 3.99315, -29.2329, 0.15", "-49.861, 4.01812, -29.5129, 0.88", "-50.6839, 3.95016, -29.8159, 0.88", "-51.478, 3.8096, -30.0601, 0.37", "-52.1539, 3.63032, -30.2411, 0.37", "-52.6963, 3.43257, -30.3479, 0.37", "-53.3251, 3.16953, -30.4822, 0.22", "-53.7737, 2.9835, -30.5724, 0.22", "-54.1064, 2.85728, -30.6259, 0.22", "-54.7612, 2.62705, -30.7422, 0.44", "-55.8515, 2.2674, -30.9949, 1.1", "-56.7494, 1.97577, -31.2292, 1.1", "-57.6364, 1.67326, -31.5111, 0.66", "-58.7379, 1.25144, -31.9053, 0.29", "-59.7343, 0.837612, -32.2852, 0.22", "-60.5384, 0.489722, -32.6412, 0.59", "-61.0787, 0.239405, -32.8884, 1.03", "-62.2039, -0.347746, -33.3956, 0.44", "-62.9203, -0.780026, -33.7321, 0.66", "-63.4262, -1.1387, -33.962, 0.81", "-64.4753, -1.97615, -34.3457, 0.15", "-65.2141, -2.60837, -34.5911, 0.66", "-65.5161, -2.87155, -34.6854, 0.66", "-65.8857, -3.18373, -34.7789, 0.66", "-66.4349, -3.6094, -34.919, 0.15", "-67.0862, -4.0831, -35.0778, 0.73", "-68.3728, -4.96672, -35.4089, 0.29", "-68.757, -5.20538, -35.5281, 0.73", "-69.2432, -5.47899, -35.6989, 0.73", "-70.2645, -6.01596, -36.0846, 0.22", "-71.0553, -6.42294, -36.3983, 0.22", "-71.7688, -6.7869, -36.7086, 0.22", "-72.2999, -7.05315, -36.9849, 0.51", "-73.0399, -7.43253, -37.3282, 0.88", "-73.4214, -7.64359, -37.5018, 0.95", "-73.8312, -7.89193, -37.6963, 0.95", "-74.8595, -8.54527, -38.1812, 0.15", "-76.4305, -9.56767, -38.9206, 0.15", "-78.0987, -10.6387, -39.7009, 0.37", "-78.9566, -11.1582, -40.0943, 1.1", "-80.0136, -11.7244, -40.5743, 0.66", "-80.3223, -11.8667, -40.7221, 0.22", "-81.1247, -12.1617, -41.1029, 0.22", "-81.5781, -12.2672, -41.3558, 0.81", "-82.5877, -12.3664, -41.9998, 0.15", "-83.5599, -12.3601, -42.5603, 0.15", "-84.4365, -12.2889, -43.022, 0.15", "-85.1602, -12.1954, -43.3845, 0.66", "-86.5018, -11.9326, -44.0438, 0.37", "-87.3084, -11.7093, -44.4401, 0.59", "-87.693, -11.5675, -44.6242, 0.22", "-88.2015, -11.3607, -44.8571, 0.37", "-88.6052, -11.19, -45.0293, 0.15", "-89.6497, -10.7673, -45.4663, 0.15", "-90.4394, -10.46, -45.7605, 0.88", "-91.553, -10.0601, -46.1731, 0.15", "-92.2916, -9.8108, -46.4302, 0.15", "-93.2015, -9.54973, -46.7087, 0.73", "-93.8556, -9.40254, -46.8906, 0.51", "-94.5253, -9.30392, -47.0388, 0.37", "-95.3418, -9.23027, -47.198, 0.07", "-95.9125, -9.17993, -47.2871, 0.22", "-96.78, -9.08673, -47.4072, 0.44", "-97.7615, -8.96902, -47.5349, 0.88", "-98.8527, -8.81782, -47.693, 1.03", "-99.883, -8.69087, -47.8499, 0.44", "-100.645, -8.63066, -47.9817, 0.29", "-101.104, -8.61767, -48.0765, 0.29", "-101.632, -8.62392, -48.2115, 0.59", "-102.266, -8.64767, -48.3986, 0.81", "-102.959, -8.68144, -48.6257, 0.81", "-104.528, -8.78326, -49.1981, 0.07", "-105.405, -8.83579, -49.5254, 0.88", "-106.674, -8.87145, -49.9875, 0.44", "-108.414, -8.86509, -50.5604, 0.29", "-109.394, -8.81931, -50.8499, 0.59", "-110.071, -8.76056, -51.0294, 0.88", "-110.909, -8.65477, -51.2043, 0.59", "-111.833, -8.52327, -51.341, 0.29", "-112.689, -8.40714, -51.4187, 0.22", "-113.779, -8.26872, -51.4787, 0.59", "-114.72, -8.16034, -51.5167, 0.22", "-115.518, -8.0867, -51.5278, 0.22", "-116.421, -8.04371, -51.5559, 0.22", "-117.432, -8.03563, -51.6197, 0.88" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.9688, 10.0408, -3.17085, 0.37", "-17.6719, 10.467, -3.689, 0.37", "-17.4939, 10.7575, -4.02616, 0.37", "-17.3012, 11.1684, -4.49472, 0.37", "-17.1671, 11.734, -5.18395, 0.37", "-17.4039, 12.2434, -5.99197, 0.37", "-17.4039, 12.2434, -5.99197, 0.44", "-17.8667, 12.3637, -6.30753, 0.44", "-18.5695, 12.4984, -6.66581, 0.44", "-19.3637, 12.6625, -6.97308, 0.44", "-20.6147, 12.9646, -7.35699, 0.44", "-21.5853, 13.2552, -7.61274, 0.73", "-22.3335, 13.5422, -7.78993, 0.66", "-22.8757, 13.8029, -7.89751, 0.66", "-23.7912, 14.3564, -7.9891, 0.22", "-24.3263, 14.7213, -7.99136, 0.22", "-25.0019, 15.2183, -7.95147, 0.66", "-25.7673, 15.8022, -7.89672, 0.73", "-26.6334, 16.4501, -7.84025, 0.81", "-28.0674, 17.4508, -7.75443, 0.59", "-29.0709, 18.0558, -7.703, 0.59", "-30.1202, 18.5851, -7.66846, 0.81", "-30.6386, 18.801, -7.6599, 0.95", "-31.5214, 19.1092, -7.70268, 0.73", "-32.0076, 19.2503, -7.75979, 1.03", "-33.5484, 19.6563, -8.02279, 0.37", "-34.3663, 19.8736, -8.16603, 0.73", "-35.0088, 20.0458, -8.2808, 0.88", "-36.1574, 20.3817, -8.44568, 0.44", "-37.3061, 20.7664, -8.54356, 1.18", "-38.2445, 21.143, -8.54621, 0.59", "-39.2369, 21.6189, -8.41483, 0.37", "-39.5921, 21.8038, -8.32279, 0.37", "-40.2642, 22.1462, -8.08503, 0.37", "-41.0089, 22.5181, -7.71961, 0.59", "-41.7787, 22.9116, -7.31223, 0.59", "-42.4338, 23.2537, -6.98846, 0.29", "-43.1539, 23.6708, -6.65883, 0.29", "-43.753, 24.0336, -6.4289, 0.59", "-44.5889, 24.5589, -6.1874, 0.59", "-45.5769, 25.1878, -5.9685, 0.22", "-46.5999, 25.8683, -5.87782, 0.22", "-47.3139, 26.3701, -5.90825, 0.22", "-48.0339, 26.9054, -6.02676, 0.51", "-48.665, 27.3971, -6.209, 0.51", "-49.2824, 27.9064, -6.47953, 0.66", "-50.3842, 28.8541, -7.08717, 0.66", "-50.8463, 29.2698, -7.41095, 0.66", "-51.2311, 29.6315, -7.74443, 0.44", "-51.4265, 29.842, -7.96534, 0.44", "-51.6875, 30.1622, -8.34678, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-15.6409, 16.6909, -4.30543, 0.66", "-14.6522, 16.6902, -2.74243, 0.66", "-14.4027, 16.5998, -2.28679, 0.66", "-14.0594, 16.0692, -1.3173, 0.66", "-14.031, 15.9297, -1.14958, 0.66", "-14.0757, 15.3914, -0.691472, 0.66", "-14.1283, 14.7593, -0.153496, 0.44", "-14.2729, 14.0398, 0.277315, 0.29", "-14.4841, 13.3119, 0.670486, 0.07", "-14.6367, 12.9138, 0.850961, 0.07", "-15.1616, 11.7376, 1.40596, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.6409, 16.6909, -4.30543, 0.59", "-15.8545, 17.7974, -4.38818, 0.59", "-15.9585, 18.5844, -4.55072, 0.59", "-16.0137, 19.0752, -4.59566, 0.59", "-16.1428, 19.9898, -4.61978, 0.95", "-16.2704, 20.7285, -4.61388, 0.95", "-16.5058, 22.0495, -4.57981, 0.59", "-16.6153, 22.8264, -4.54759, 0.59", "-16.941, 24.3418, -4.46546, 0.59", "-17.2613, 25.2526, -4.37206, 0.44", "-17.6185, 25.9266, -4.27204, 0.81", "-17.9433, 26.3936, -4.15801, 1.1", "-18.3253, 26.8614, -4.01926, 1.1", "-19.2556, 27.9057, -3.71771, 0.66", "-19.9663, 28.6399, -3.5361, 0.66", "-21.1902, 29.8667, -3.2176, 0.73", "-22.4109, 31.1332, -2.89002, 0.73", "-23.0161, 31.8033, -2.72405, 0.73", "-23.7961, 32.7839, -2.47124, 0.73", "-24.5908, 34.0006, -2.14754, 0.73", "-24.8192, 34.4155, -2.01678, 0.73", "-25.3984, 35.6646, -1.58463, 0.73", "-25.6547, 36.2765, -1.37411, 0.73", "-26.0743, 37.2775, -1.00695, 0.73", "-26.4445, 38.1434, -0.689757, 0.73", "-26.9286, 39.2888, -0.256296, 0.73", "-27.3238, 40.1581, 0.0643521, 0.73", "-28.1397, 41.7966, 0.631653, 0.51", "-28.5063, 42.4824, 0.838005, 0.73", "-28.9928, 43.3563, 1.04327, 0.44", "-29.4411, 44.2126, 1.19672, 0.44", "-29.8995, 45.1986, 1.27834, 0.59", "-30.1555, 45.8333, 1.30399, 0.59", "-30.5013, 46.8307, 1.30341, 0.59", "-30.7454, 47.5463, 1.28646, 0.59", "-31.349, 49.1362, 1.21506, 0.29", "-31.8475, 50.3876, 1.13522, 0.29", "-32.3589, 51.6957, 1.05466, 0.29", "-32.651, 52.4958, 1.00889, 0.29", "-33.0286, 53.6609, 0.949619, 0.29", "-33.5355, 55.2336, 0.877967, 0.29", "-33.8797, 56.2385, 0.845681, 0.29", "-34.1113, 56.8961, 0.845681, 0.29", "-34.3371, 57.5265, 0.845681, 0.29", "-34.572, 58.2736, 0.845681, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.33137, -17.3827, -0.184014, 0.66", "-3.41576, -18.0942, -0.0495921, 0.66", "-3.51273, -18.9118, 0.104904, 0.81", "-3.60997, -19.7316, 0.25979, 0.81", "-3.6995, -20.4864, 0.402414, 1.18", "-3.8239, -21.5353, 0.600591, 1.32", "-3.967, -22.7417, 0.828545, 1.69" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-3.33137, -17.3827, -0.184014, 0.88", "-2.21569, -18.3079, -0.524764, 0.88", "-0.938885, -19.3667, -0.914726, 0.88", "-0.174321, -20.0008, -1.14824, 0.88", "0.595549, -20.6392, -1.38337, 0.88", "1.16674, -21.1129, -1.55782, 1.25" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-117.432, -8.03563, -51.6197, 0.29", "-117.097, -8.07307, -52.2081, 0.29", "-116.577, -8.13127, -53.1228, 0.29", "-115.947, -8.20174, -54.2302, 0.15", "-115.248, -8.28001, -55.4603, 0.22", "-114.912, -8.31764, -56.0517, 0.22", "-114.532, -8.3601, -56.719, 0.51" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-117.432, -8.03563, -51.6197, 0.22", "-118.388, -8.09571, -51.712, 0.22", "-118.766, -8.09493, -51.7738, 0.59", "-119.544, -8.04215, -51.9149, 0.59", "-121.171, -7.84839, -52.2178, 0.15", "-121.842, -7.74429, -52.3397, 0.15", "-123.251, -7.50271, -52.5815, 0.95", "-124.551, -7.21648, -52.8014, 0.29", "-125.482, -6.95473, -52.961, 0.29", "-126.01, -6.75927, -53.0464, 0.29", "-126.783, -6.42303, -53.1827, 0.29", "-127.654, -6.04302, -53.3293, 0.22", "-128.709, -5.59043, -53.4806, 0.22", "-129.525, -5.24815, -53.6273, 0.22", "-131.045, -4.64066, -53.9519, 0.59", "-132.345, -4.1498, -54.2598, 0.22", "-133.029, -3.90588, -54.4324, 0.22", "-133.878, -3.62212, -54.6719, 0.59", "-135.478, -3.14921, -55.1348, 0.15", "-135.961, -3.01688, -55.2727, 0.73", "-136.35, -2.90692, -55.3869, 0.29", "-137.248, -2.6297, -55.6297, 0.44", "-138.343, -2.2837, -55.9165, 0.15", "-139.408, -1.94675, -56.1716, 0.15", "-140.207, -1.70434, -56.3528, 0.15", "-140.923, -1.48544, -56.5471, 0.15", "-141.399, -1.33548, -56.6883, 0.15", "-142.218, -1.09385, -56.9396, 0.15", "-142.613, -0.99005, -57.0533, 0.29", "-143.827, -0.686912, -57.4024, 0.07", "-144.718, -0.426511, -57.6204, 0.07", "-145.366, -0.213553, -57.7739, 0.59", "-146.033, 0.0239585, -57.9327, 0.15", "-146.693, 0.27817, -58.0844, 0.66", "-147.403, 0.56898, -58.224, 0.66", "-149.105, 1.35709, -58.4234, 0.15", "-149.811, 1.71543, -58.4747, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.967, -22.7417, 0.828545, 0.81", "-4.48633, -23.5617, 1.46977, 0.81", "-5.1165, -24.4914, 2.08591, 0.81", "-5.66053, -25.2987, 2.50589, 0.81", "-6.05649, -25.9518, 2.77125, 0.81", "-6.51272, -26.7669, 3.03077, 0.95", "-6.95535, -27.5987, 3.23953, 1.18", "-7.47933, -28.6245, 3.36675, 0.66", "-7.96776, -29.5785, 3.36426, 1.25", "-8.48834, -30.5719, 3.24741, 0.44", "-8.95927, -31.4539, 3.071, 0.66", "-9.40361, -32.3121, 2.85309, 0.66", "-9.78168, -33.0654, 2.6313, 0.73", "-10.2053, -33.8749, 2.3623, 0.88", "-10.8161, -34.9183, 2.01089, 0.95", "-11.1832, -35.4368, 1.83825, 0.37", "-11.5759, -35.9239, 1.69327, 0.37", "-12.0457, -36.4464, 1.56189, 0.37", "-12.7405, -37.126, 1.41772, 0.29", "-13.4813, -37.8023, 1.29372, 0.95", "-14.6232, -38.7807, 1.15106, 0.95", "-15.5352, -39.5434, 1.03995, 0.44", "-15.945, -39.8757, 0.994288, 0.66", "-17.3809, -41.0478, 0.859514, 0.37", "-17.6011, -41.2346, 0.835817, 0.37", "-17.8751, -41.4706, 0.804033, 0.37", "-18.2663, -41.7824, 0.81865, 0.37", "-18.7258, -42.098, 0.899821, 0.37", "-19.3249, -42.4521, 1.05964, 0.59", "-20.074, -42.8576, 1.31179, 1.1", "-20.7075, -43.1713, 1.53109, 1.1", "-22.7473, -44.08, 2.26186, 0.29", "-23.4411, -44.3552, 2.52401, 0.66", "-24.0432, -44.5728, 2.77351, 0.95", "-24.7341, -44.7975, 3.09278, 1.1" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.967, -22.7417, 0.828545, 0.88", "-3.18963, -23.9393, 0.266591, 0.88", "-2.64693, -24.9049, -0.11242, 0.73", "-2.2729, -25.7171, -0.36993, 0.66", "-1.88131, -26.8698, -0.680046, 0.88", "-1.73009, -27.4642, -0.819385, 1.03", "-1.6114, -28.0708, -0.946951, 0.81", "-1.5469, -29.0445, -1.05249, 0.73", "-1.57923, -30.1765, -1.0655, 0.51", "-1.70786, -31.3164, -1.02454, 0.88", "-1.83525, -31.9612, -0.994642, 0.51", "-1.96205, -32.3964, -0.985565, 0.88", "-2.33054, -33.3896, -0.999568, 0.95", "-2.66434, -34.1744, -1.06774, 0.51", "-3.12929, -35.2379, -1.29051, 0.66", "-3.35405, -35.7709, -1.45069, 0.66", "-3.78133, -36.7167, -1.80626, 0.66", "-4.1143, -37.3982, -2.09423, 0.88", "-4.53747, -38.2121, -2.48808, 0.88", "-5.14382, -39.352, -3.04499, 0.81", "-5.42251, -39.8504, -3.27204, 0.81", "-5.84993, -40.5617, -3.55981, 0.81", "-6.38717, -41.3658, -3.83828, 1.03", "-7.0441, -42.1633, -4.06189, 0.73", "-7.73464, -42.8602, -4.21908, 1.03", "-8.56406, -43.6068, -4.36976, 0.73", "-9.36067, -44.2869, -4.55856, 0.59", "-10.1699, -44.9487, -4.81787, 0.73", "-11.0847, -45.6677, -5.17054, 0.44", "-11.6792, -46.1421, -5.45772, 0.59", "-12.2735, -46.6524, -5.83, 1.03", "-13.2256, -47.5767, -6.57733, 1.03", "-13.8482, -48.2421, -7.14154, 1.18", "-14.0583, -48.4979, -7.34684, 1.03", "-14.6566, -49.3203, -7.9656, 1.03", "-15.3997, -50.4036, -8.68618, 0.44", "-15.7325, -50.9201, -8.96973, 0.95", "-15.9955, -51.3724, -9.17105, 0.95", "-16.4688, -52.2739, -9.53075, 0.22", "-16.9688, -53.3803, -10.0003, 1.25", "-17.1364, -53.9061, -10.2443, 1.25", "-17.3288, -54.871, -10.785, 0.81", "-17.4434, -55.6441, -11.3145, 1.03", "-17.4939, -56.0868, -11.6612, 1.03", "-17.5739, -57.0048, -12.4908, 1.18", "-17.6582, -57.9722, -13.4682, 0.44", "-17.7299, -58.4559, -14.0432, 0.44", "-17.8558, -58.9474, -14.6968, 0.44", "-17.985, -59.2434, -15.0926, 0.44", "-18.219, -59.589, -15.5237, 0.66", "-18.8185, -60.245, -16.2661, 0.88", "-19.4046, -60.8301, -16.8413, 0.81", "-19.9047, -61.3852, -17.2922, 0.81", "-20.3209, -61.8943, -17.6337, 0.59", "-20.9279, -62.6882, -18.0733, 0.66", "-21.5935, -63.6059, -18.4641, 0.81", "-21.9129, -64.0953, -18.6336, 0.88", "-22.2765, -64.7537, -18.851, 0.95", "-22.5109, -65.2512, -19.021, 1.03", "-23.1666, -66.9309, -19.6103, 0.37", "-23.387, -67.637, -19.85, 0.59", "-23.5657, -68.3228, -20.0938, 0.59", "-23.7981, -69.2789, -20.4866, 0.37", "-23.876, -69.5925, -20.6315, 0.37", "-24.0736, -70.3119, -20.9738, 0.66", "-24.3483, -71.11, -21.3532, 0.51", "-24.7238, -71.9383, -21.7297, 1.03", "-25.1552, -72.7306, -22.0551, 1.1", "-25.7705, -73.781, -22.4592, 0.51", "-26.28, -74.6555, -22.7759, 0.81", "-26.832, -75.6501, -23.111, 0.44", "-27.2739, -76.4862, -23.3608, 0.95", "-27.7925, -77.5614, -23.6228, 0.66", "-28.3094, -78.7941, -23.9127, 0.88", "-28.6894, -79.8736, -24.1549, 0.88", "-29.046, -81.1007, -24.4257, 0.37", "-29.185, -81.7003, -24.5655, 0.66", "-29.3945, -82.7808, -24.8285, 0.81", "-29.5596, -83.8395, -25.1065, 1.03", "-29.6962, -85.0092, -25.4321, 0.73", "-29.8163, -86.6675, -25.9066, 0.73", "-29.8357, -87.6279, -26.2029, 0.44", "-29.8217, -88.0082, -26.3248, 0.44", "-29.7363, -88.8709, -26.5978, 0.88", "-29.6644, -89.4803, -26.8116, 1.03", "-29.4967, -90.914, -27.3764, 0.22", "-29.4133, -92.0257, -27.8218, 0.66", "-29.4097, -92.479, -28.0063, 1.18", "-29.4383, -93.0782, -28.2558, 1.03", "-29.561, -94.648, -28.9078, 0.15", "-29.616, -95.1944, -29.15, 0.81", "-29.7115, -95.9366, -29.5064, 0.44", "-29.8046, -96.5845, -29.8095, 0.44", "-29.9221, -97.5336, -30.2628, 0.88", "-30.0205, -98.6581, -30.8062, 0.29", "-30.0655, -99.4122, -31.1497, 0.88", "-30.116, -100.127, -31.4814, 0.88", "-30.1872, -101.037, -31.8911, 0.88", "-30.2739, -101.963, -32.2709, 0.37", "-30.352, -102.748, -32.56, 0.29", "-30.4, -103.281, -32.7547, 0.44", "-30.4413, -103.91, -32.9829, 0.88", "-30.4842, -104.562, -33.2274, 0.44", "-30.572, -105.502, -33.6115, 1.25", "-30.8112, -107.055, -34.3215, 0.44", "-31.089, -108.278, -34.9625, 0.29", "-31.209, -108.669, -35.1983, 0.51", "-31.4583, -109.232, -35.6197, 0.73", "-31.8111, -109.845, -36.1763, 1.1", "-32.2126, -110.451, -36.8033, 0.81", "-32.5075, -110.889, -37.3152, 0.81", "-32.6807, -111.206, -37.6747, 1.25", "-33.0692, -112.275, -38.8812, 0.44", "-33.1771, -112.717, -39.4396, 0.44", "-33.2832, -113.214, -40.092, 0.59", "-33.4498, -113.96, -41.0884, 0.59", "-33.6043, -114.442, -41.7529, 0.37", "-33.8524, -114.929, -42.4473, 0.51", "-34.4592, -115.74, -43.6295, 0.73", "-34.9057, -116.247, -44.3802, 0.95", "-35.2593, -116.615, -44.9165, 0.66", "-36.0125, -117.378, -45.9443, 0.29", "-36.608, -118.03, -46.7455, 0.95", "-37.2768, -118.867, -47.6331, 0.44", "-37.7329, -119.649, -48.3347, 0.66", "-37.8756, -120.043, -48.6564, 0.66", "-37.943, -120.494, -48.9933, 0.66", "-37.8924, -121.5, -49.7169, 0.37", "-37.7787, -122.116, -50.1572, 0.37", "-37.5013, -123.175, -50.9314, 1.1", "-37.2513, -124.132, -51.6325, 0.37", "-36.9437, -125.349, -52.5106, 0.59", "-36.8275, -126.036, -53.0271, 1.18", "-36.7955, -126.392, -53.2872, 1.18", "-36.7877, -127.078, -53.8027, 1.18", "-36.8354, -127.933, -54.4198, 0.88", "-36.8926, -128.634, -54.8967, 0.73", "-37.0434, -130.552, -56.0755, 0.29", "-37.0842, -131.153, -56.4603, 0.59", "-37.1252, -132.039, -57.0472, 0.81", "-37.1636, -133.223, -57.8372, 0.44", "-37.1983, -133.973, -58.3662, 0.44", "-37.2688, -134.784, -58.9424, 0.73", "-37.4605, -136.279, -59.9894, 0.88", "-37.5547, -136.676, -60.2674, 0.88", "-37.688, -137.029, -60.5307, 0.88", "-38.178, -138.025, -61.3243, 0.37", "-38.3642, -138.354, -61.6151, 0.22", "-38.7639, -138.963, -62.1725, 0.22", "-39.4432, -139.848, -63.0287, 1.47", "-40.5652, -141.206, -64.519, 0.07", "-40.6799, -141.345, -64.6815, 0.22", "-41.1643, -141.956, -65.4066, 0.22", "-41.5432, -142.413, -65.9438, 0.81", "-42.1952, -143.153, -66.7641, 0.29", "-42.6868, -143.667, -67.3387, 0.29", "-43.386, -144.374, -68.0309, 0.59", "-44.2888, -145.231, -68.8958, 0.22", "-44.8825, -145.78, -69.4311, 0.44", "-45.3368, -146.221, -69.8737, 0.07", "-45.7067, -146.609, -70.2359, 0.59", "-46.0, -146.932, -70.5243, 0.59", "-46.8175, -148.054, -71.5068, 0.15", "-46.9327, -148.331, -71.7736, 0.44", "-47.0717, -149.104, -72.5675, 0.66", "-47.0976, -149.766, -73.2335, 0.29", "-47.084, -150.222, -73.6901, 0.29", "-47.0091, -151.211, -74.6919, 1.1", "-46.8146, -152.843, -76.2664, 0.29", "-46.7574, -153.407, -76.8486, 0.81", "-46.7386, -153.801, -77.2699, 0.81", "-46.7763, -154.948, -78.5526, 0.29", "-46.8584, -155.575, -79.2456, 0.29", "-46.9737, -156.08, -79.758, 0.73", "-47.183, -156.848, -80.3834, 0.73", "-47.3155, -157.292, -80.6888, 0.73", "-47.5727, -157.971, -81.1255, 0.44", "-47.7695, -158.362, -81.3007, 0.44", "-48.0335, -158.753, -81.49, 0.44", "-48.4683, -159.203, -81.7489, 0.44", "-49.0921, -159.702, -82.029, 0.44", "-50.4707, -160.544, -82.6575, 0.95", "-51.2242, -160.945, -83.0314, 0.07", "-51.9149, -161.291, -83.368, 0.07", "-52.8281, -161.749, -83.7861, 0.88", "-53.9559, -162.339, -84.2772, 0.22", "-54.8152, -162.839, -84.6295, 0.22", "-55.5655, -163.335, -84.8725, 0.22", "-56.2159, -163.805, -85.079, 0.22", "-56.9911, -164.422, -85.2981, 0.66", "-57.4158, -164.8, -85.4402, 1.03", "-58.1697, -165.516, -85.7066, 0.07", "-58.4895, -165.847, -85.8305, 0.22", "-59.1137, -166.508, -86.0908, 0.07", "-59.4936, -166.922, -86.2691, 0.37", "-60.3058, -167.866, -86.6968, 0.37", "-60.5668, -168.198, -86.8452, 1.25", "-61.3491, -169.359, -87.3102, 0.44", "-61.6809, -169.929, -87.5164, 0.59", "-62.1059, -170.744, -87.7683, 0.37", "-62.4409, -171.455, -87.9602, 1.03", "-62.6049, -171.847, -88.0418, 1.03", "-63.0636, -173.003, -88.248, 0.07", "-63.5245, -174.179, -88.4177, 0.37", "-63.7907, -174.821, -88.5153, 0.22", "-64.0759, -175.461, -88.6121, 0.44", "-64.6017, -176.487, -88.7594, 0.29", "-64.9091, -177.024, -88.8532, 0.29", "-65.4569, -177.894, -89.0223, 0.29", "-66.2247, -179.026, -89.2409, 0.73", "-66.6273, -179.556, -89.3581, 0.29", "-66.9875, -179.962, -89.4599, 0.59", "-67.9515, -180.852, -89.71, 0.07", "-68.6763, -181.4, -89.8721, 0.07", "-69.3225, -181.784, -89.9873, 1.32", "-70.0387, -182.097, -90.0805, 0.29", "-70.6645, -182.29, -90.1385, 0.29", "-71.3284, -182.414, -90.1713, 0.51", "-72.1357, -182.492, -90.1743, 0.07", "-72.647, -182.509, -90.1765, 0.37", "-73.323, -182.51, -90.18, 0.07", "-74.2054, -182.524, -90.1854, 0.73", "-75.2023, -182.527, -90.193, 0.07" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "1.16674, -21.1129, -1.55782, 0.59", "1.04034, -22.1791, -1.45284, 0.59", "1.03177, -22.9792, -1.38143, 0.59", "1.06626, -23.7089, -1.37208, 0.59", "1.09494, -23.9836, -1.38055, 0.81", "1.20886, -24.6021, -1.41582, 0.51", "1.39717, -25.3004, -1.41887, 0.51", "1.7811, -26.1989, -1.40901, 0.51", "2.13841, -26.8802, -1.36808, 0.51", "2.41158, -27.3695, -1.31675, 0.51", "2.90564, -28.2553, -1.19595, 0.51", "3.53467, -29.398, -1.05597, 0.51", "3.81756, -29.8842, -1.00555, 1.1", "4.40534, -30.8662, -0.92229, 0.07", "4.74292, -31.4262, -0.885848, 0.73", "4.99769, -31.8717, -0.885476, 0.88", "5.43025, -32.6891, -0.946135, 0.88", "6.08984, -33.9203, -1.16248, 0.29", "6.44709, -34.5066, -1.24083, 0.29", "6.77048, -34.9787, -1.28425, 0.29", "7.10954, -35.4439, -1.34229, 0.29", "7.44664, -35.9122, -1.40155, 0.66", "8.24286, -37.0677, -1.53106, 0.66", "9.20208, -38.5538, -1.71379, 0.22", "9.82627, -39.5351, -1.83615, 0.22", "10.6555, -40.871, -2.00869, 0.95", "11.0239, -41.4654, -2.1054, 0.66", "11.3081, -41.9612, -2.1894, 0.66", "11.5759, -42.5252, -2.28744, 0.29", "11.7748, -43.045, -2.39094, 0.29", "12.086, -43.9118, -2.49981, 0.29", "12.3038, -44.5934, -2.52389, 0.29", "12.5816, -45.551, -2.57444, 0.88", "12.6864, -45.9786, -2.60542, 1.1", "12.8182, -46.7324, -2.70548, 1.1", "12.9246, -47.8438, -2.89447, 0.66", "12.9316, -48.6888, -3.05734, 0.44", "12.7449, -50.3818, -3.39582, 0.44", "12.5543, -51.2798, -3.60792, 0.66", "12.1516, -52.5425, -3.93824, 0.59", "11.8312, -53.2256, -4.13429, 1.1", "11.3426, -53.9785, -4.39372, 0.44", "10.6102, -54.8827, -4.74209, 0.22", "10.453, -55.0395, -4.80943, 0.22", "9.72489, -55.7382, -5.17167, 0.73", "9.38352, -56.0765, -5.36032, 0.81", "8.74932, -56.7532, -5.81747, 0.44", "8.35571, -57.1873, -6.12733, 0.59", "7.8004, -57.8426, -6.60456, 0.15", "7.05497, -58.7308, -7.22386, 0.73", "6.71146, -59.1558, -7.49008, 0.88", "5.97186, -60.1243, -7.96357, 0.81", "5.28109, -61.0728, -8.2956, 0.22", "4.87749, -61.6687, -8.44468, 0.66", "4.42393, -62.3753, -8.5428, 0.66", "3.85454, -63.2651, -8.57442, 0.22", "3.13682, -64.472, -8.53926, 0.22", "2.77164, -65.1291, -8.44798, 0.22", "2.4801, -65.6824, -8.33989, 0.22", "2.29647, -66.0426, -8.25303, 0.22", "1.90898, -66.857, -8.0543, 0.88", "1.58094, -67.6596, -7.86311, 0.37", "1.3823, -68.2949, -7.68567, 0.37", "1.17459, -69.0519, -7.44162, 0.37", "1.01819, -69.626, -7.22535, 0.37", "0.793325, -70.5598, -6.85143, 0.66", "0.63748, -71.2959, -6.5488, 1.03", "0.340041, -72.6346, -6.00769, 0.22", "0.154499, -73.5315, -5.67039, 0.51", "-0.068638, -74.5077, -5.28077, 0.22", "-0.174241, -74.913, -5.12533, 0.22", "-0.284655, -75.2953, -4.9829, 0.22", "-0.439729, -75.8315, -4.81116, 0.22", "-0.644591, -76.5806, -4.626, 0.73", "-0.825307, -77.4071, -4.44194, 1.25", "-1.01533, -78.514, -4.23701, 0.22", "-1.15913, -79.5521, -4.05704, 0.22", "-1.24622, -80.4414, -3.91779, 0.51", "-1.28525, -81.3896, -3.81297, 0.59", "-1.27453, -82.1677, -3.74055, 0.59", "-1.21051, -82.8588, -3.69696, 0.59", "-1.10225, -83.5805, -3.64746, 0.29", "-0.977925, -84.2726, -3.60405, 0.44", "-0.783603, -85.442, -3.50627, 0.22", "-0.674776, -86.1777, -3.43261, 0.22", "-0.548697, -87.3128, -3.30468, 0.37", "-0.488089, -88.2398, -3.1979, 0.37", "-0.462583, -88.7621, -3.1377, 0.51", "-0.438639, -89.4576, -3.05156, 0.51", "-0.437999, -90.0949, -2.96846, 0.59", "-0.451089, -90.4365, -2.94465, 0.59", "-0.601433, -91.6917, -2.88031, 0.15", "-0.670212, -92.2389, -2.88031, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "1.16674, -21.1129, -1.55782, 0.73", "2.29803, -21.3329, -2.23952, 0.73", "3.14527, -21.5539, -2.6434, 0.73", "4.10744, -21.8347, -2.95154, 0.59", "4.85336, -22.0341, -3.07119, 0.44", "5.79119, -22.2623, -3.15427, 0.44", "6.68727, -22.4689, -3.23147, 0.51", "7.04471, -22.5549, -3.23715, 0.88", "8.08928, -22.8141, -3.26866, 0.51", "9.75519, -23.1701, -3.3634, 0.51", "10.4863, -23.2953, -3.46831, 0.81", "11.3831, -23.4247, -3.66684, 0.95", "12.2154, -23.5261, -3.90501, 0.95", "13.5547, -23.6932, -4.34415, 0.95", "14.4703, -23.8699, -4.72841, 0.37", "15.1326, -24.0692, -5.05955, 0.37", "15.5907, -24.2417, -5.28352, 0.29", "16.2123, -24.5196, -5.52458, 0.29", "16.5204, -24.6781, -5.61269, 1.03", "18.0238, -25.5084, -6.00585, 0.66", "18.9812, -26.0218, -6.2859, 0.66", "19.7847, -26.3971, -6.56756, 0.73", "21.0277, -26.8935, -7.1032, 0.66", "22.2322, -27.313, -7.71794, 0.51", "23.1708, -27.6086, -8.22868, 0.37", "24.2456, -27.921, -8.83298, 0.66", "25.5301, -28.333, -9.62718, 0.95", "26.0935, -28.5454, -10.0123, 0.95", "27.1603, -29.0417, -10.7917, 0.59", "27.9855, -29.5557, -11.3648, 0.59", "29.0638, -30.4402, -12.0246, 0.66", "29.7814, -31.1512, -12.4515, 0.73", "30.2135, -31.6327, -12.7226, 0.73", "30.8143, -32.3509, -13.1331, 0.95", "31.5866, -33.3602, -13.7284, 0.73", "32.1835, -34.2271, -14.2429, 0.44", "32.8075, -35.2473, -14.8151, 0.44", "33.4558, -36.3552, -15.389, 0.95", "33.6361, -36.6523, -15.5457, 0.95", "34.3937, -37.7615, -16.1964, 0.73", "34.9006, -38.4082, -16.6565, 0.51", "35.2718, -38.8069, -17.0075, 0.51", "35.7982, -39.2387, -17.6069, 0.29", "36.2553, -39.4776, -18.2674, 0.15", "36.7418, -39.6311, -19.0812, 0.15", "37.3433, -39.6539, -20.2629, 1.1", "37.8955, -39.5231, -21.4575, 1.1", "38.8041, -39.0415, -23.5524, 1.1", "39.2896, -38.5843, -24.7429, 0.37", "39.7296, -37.9774, -25.7513, 0.22", "40.026, -37.4895, -26.3046, 0.22", "40.4744, -36.8104, -26.9435, 0.88", "40.8114, -36.3244, -27.4, 1.1", "41.3339, -35.6308, -28.0304, 1.1", "41.8919, -34.9703, -28.7587, 0.15", "42.5734, -34.1801, -29.8288, 0.29", "43.329, -33.1837, -31.3203, 0.44", "43.7455, -32.5738, -32.2907, 1.1", "44.0836, -32.0609, -33.1268, 0.22", "44.3989, -31.6203, -33.9046, 0.22", "44.7817, -31.2108, -34.6534, 0.22", "45.4659, -30.7576, -35.5091, 0.88", "46.2952, -30.4001, -36.2938, 0.22", "47.1857, -30.1309, -37.0277, 0.22", "48.4817, -29.8208, -38.307, 0.95", "49.4556, -29.6325, -39.4547, 0.59", "50.5392, -29.544, -40.9921, 0.59", "51.057, -29.5749, -41.9199, 0.81", "51.1612, -29.5985, -42.1679, 1.1", "52.0599, -29.9206, -44.8715, 0.51", "52.3867, -30.1132, -46.2034, 0.51", "52.6049, -30.3098, -47.602, 0.59", "52.6699, -30.4321, -48.4033, 0.59", "52.7137, -30.5929, -49.2596, 0.59", "52.7839, -30.7677, -50.1326, 0.81", "52.9292, -30.9307, -51.1421, 0.81", "53.096, -30.9472, -52.576, 0.81", "53.1178, -30.8658, -53.7705, 0.73", "53.054, -30.7924, -54.5905, 0.73", "52.8807, -30.6564, -55.8253, 0.73", "52.7398, -30.5495, -56.7782, 0.73", "52.5291, -30.3091, -58.6961, 0.73", "52.4196, -30.0856, -60.5108, 0.73", "52.4243, -29.9878, -61.4392, 0.73", "52.4336, -29.8788, -62.6889, 0.73", "52.4167, -29.8318, -64.048, 0.73", "52.3999, -29.8851, -65.4959, 0.73", "52.4892, -30.0327, -67.3426, 0.73", "52.6372, -30.1811, -68.8051, 0.37", "52.7608, -30.3184, -69.7423, 0.15", "52.8266, -30.5341, -70.6032, 0.15", "52.8011, -30.8029, -71.328, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-24.7341, -44.7975, 3.09278, 0.66", "-24.9709, -45.4766, 3.92818, 0.66", "-25.2744, -46.1452, 4.83129, 0.59", "-25.585, -46.6872, 5.77202, 0.59", "-25.8101, -46.992, 6.53123, 0.66", "-26.0376, -47.3237, 7.61771, 0.66", "-26.1772, -47.6004, 8.61404, 0.66", "-26.2232, -47.6758, 9.02046, 0.66", "-26.3425, -47.7803, 10.4595, 0.66", "-26.3894, -47.735, 11.8581, 0.66", "-26.3587, -47.5789, 13.183, 0.37", "-26.2066, -47.3426, 14.4688, 0.59", "-25.7856, -46.9772, 16.5048, 0.51" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-24.7341, -44.7975, 3.09278, 0.29", "-25.464, -45.6045, 2.9559, 0.29", "-25.8178, -46.021, 2.77314, 0.29", "-26.0612, -46.2439, 2.64775, 0.29", "-26.4354, -46.5588, 2.46176, 0.29", "-26.9981, -47.0131, 2.19407, 0.29", "-27.9539, -47.7617, 1.72923, 0.88", "-28.7395, -48.3935, 1.34932, 0.44", "-29.667, -49.1127, 0.953496, 0.59", "-30.0174, -49.3712, 0.810473, 0.59", "-30.7552, -49.8905, 0.501495, 0.66", "-31.9096, -50.6635, -0.0237453, 0.59", "-32.9787, -51.3365, -0.502269, 0.37", "-34.2207, -52.1198, -1.07773, 0.37", "-35.2034, -52.7399, -1.56815, 1.25", "-36.1535, -53.306, -2.06583, 1.03", "-37.3534, -53.959, -2.73347, 0.59", "-38.0426, -54.2961, -3.12938, 0.29", "-38.2577, -54.3947, -3.25731, 0.29", "-38.8603, -54.6682, -3.60236, 0.29", "-39.8153, -55.1116, -4.06098, 0.59", "-40.6817, -55.5181, -4.3934, 0.88", "-41.1957, -55.7692, -4.55726, 0.88", "-42.0464, -56.1888, -4.80578, 0.37", "-42.5926, -56.4403, -4.94922, 0.37", "-42.926, -56.5881, -5.01415, 0.66", "-44.7294, -57.3553, -5.33317, 0.15", "-45.1151, -57.5241, -5.40163, 0.51", "-45.9157, -57.8752, -5.55483, 0.29", "-46.3815, -58.0644, -5.62583, 0.44", "-47.145, -58.3532, -5.76827, 0.22", "-48.4201, -58.8079, -6.02655, 0.37", "-49.2842, -59.0853, -6.22693, 1.4", "-50.7171, -59.5137, -6.60575, 0.22", "-51.6984, -59.7852, -6.88433, 0.22", "-53.034, -60.1676, -7.27894, 0.22", "-53.8358, -60.4062, -7.51527, 0.81", "-54.4992, -60.5956, -7.67598, 0.81", "-55.4045, -60.8283, -7.93165, 0.44", "-55.9999, -60.987, -8.13584, 0.51", "-56.686, -61.2318, -8.38933, 0.07", "-57.2819, -61.5247, -8.49338, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-57.2819, -61.5247, -8.49338, 0.59", "-57.1999, -61.2939, -8.00147, 0.59", "-57.1121, -61.0434, -7.54534, 0.59", "-57.0799, -60.7632, -7.01614, 0.59", "-57.1312, -60.5483, -6.64103, 0.59", "-57.3674, -60.1261, -5.92389, 0.59", "-57.9008, -59.5088, -4.90772, 0.29", "-58.1443, -59.2484, -4.51569, 0.29", "-58.5158, -58.8446, -3.93051, 0.29", "-58.9511, -58.4024, -3.30158, 0.51", "-59.5409, -57.9036, -2.62117, 0.15", "-60.0951, -57.5315, -2.16992, 0.29", "-60.2274, -57.4681, -2.09405, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-57.2819, -61.5247, -8.49338, 0.29", "-56.641, -62.0482, -8.42561, 0.29", "-55.8179, -62.7298, -8.32791, 0.37", "-55.2735, -63.1807, -8.26329, 0.37", "-54.7585, -63.6071, -8.20215, 0.44", "-54.2878, -63.9969, -8.14628, 0.44", "-53.7834, -64.4146, -8.0864, 0.44", "-53.4295, -64.7077, -8.02218, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_21", "dend_16", "dend_15", "dend_12", "dend_11", "dend_10", "dend_9", "dend_0", "dend_23", "dend_22", "dend_18", "dend_17", "dend_14", "dend_13", "dend_4", "dend_1", "dend_25", "dend_24", "dend_20", "dend_19", "dend_6", "dend_5", "dend_3", "dend_2", "dend_29", "dend_26", "dend_8", "dend_7", "dend_31", "dend_30", "dend_28", "dend_27", "dend_35", "dend_32", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_21", "dend_16", "dend_15", "dend_12", "dend_11", "dend_10", "dend_9", "dend_0", "dend_23", "dend_22", "dend_18", "dend_17", "dend_14", "dend_13", "dend_4", "dend_1", "dend_25", "dend_24", "dend_20", "dend_19", "dend_6", "dend_5", "dend_3", "dend_2", "dend_29", "dend_26", "dend_8", "dend_7", "dend_31", "dend_30", "dend_28", "dend_27", "dend_35", "dend_32", "dend_34", "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DLAC_4822ddb519_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_21, dend_16, dend_15, dend_12, dend_11, dend_10, dend_9, dend_0, dend_23, dend_22, dend_18, dend_17, dend_14, dend_13, dend_4, dend_1, dend_25, dend_24, dend_20, dend_19, dend_6, dend_5, dend_3, dend_2, dend_29, dend_26, dend_8, dend_7, dend_31, dend_30, dend_28, dend_27, dend_35, dend_32, dend_34, dend_33]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_21, dend_16, dend_15, dend_12, dend_11, dend_10, dend_9, dend_0, dend_23, dend_22, dend_18, dend_17, dend_14, dend_13, dend_4, dend_1, dend_25, dend_24, dend_20, dend_19, dend_6, dend_5, dend_3, dend_2, dend_29, dend_26, dend_8, dend_7, dend_31, dend_30, dend_28, dend_27, dend_35, dend_32, dend_34, dend_33]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_21(0), soma_0(0.4999999475985608)
    connect dend_16(0), soma_0(0.4999999475985608)
    connect dend_15(0), soma_0(0.4999999475985608)
    connect dend_12(0), soma_0(0.4999999475985608)
    connect dend_11(0), soma_0(0.4999999475985608)
    connect dend_10(0), soma_0(0.4999999475985608)
    connect dend_9(0), soma_0(0.4999999475985608)
    connect dend_0(0), soma_0(0.4999999475985608)
    connect axon_0(0), soma_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.72139, -3.07833, 0.0, 5.33181 ) }
    soma_0 { pt3dadd( -6.01808, -2.65828, 0.0, 10.0867 ) }
    soma_0 { pt3dadd( -5.31478, -2.23823, 0.0, 11.4587 ) }
    soma_0 { pt3dadd( -4.61147, -1.81819, 0.0, 12.5833 ) }
    soma_0 { pt3dadd( -3.90817, -1.39814, 0.0, 13.0425 ) }
    soma_0 { pt3dadd( -3.20486, -0.97809, 0.0, 13.5134 ) }
    soma_0 { pt3dadd( -2.50156, -0.558043, 0.0, 13.9112 ) }
    soma_0 { pt3dadd( -1.79825, -0.137995, 0.0, 14.1298 ) }
    soma_0 { pt3dadd( -1.09495, 0.282053, 0.0, 14.241 ) }
    soma_0 { pt3dadd( -0.391641, 0.702101, 0.0, 14.3378 ) }
    soma_0 { pt3dadd( 0.311664, 1.12215, 0.0, 14.4513 ) }
    soma_0 { pt3dadd( 1.01497, 1.5422, 0.0, 14.5931 ) }
    soma_0 { pt3dadd( 1.71827, 1.96224, 0.0, 14.6986 ) }
    soma_0 { pt3dadd( 2.42158, 2.38229, 0.0, 14.5687 ) }
    soma_0 { pt3dadd( 3.12489, 2.80234, 0.0, 14.3508 ) }
    soma_0 { pt3dadd( 3.82819, 3.22239, 0.0, 13.9653 ) }
    soma_0 { pt3dadd( 4.5315, 3.64243, 0.0, 13.3396 ) }
    soma_0 { pt3dadd( 5.2348, 4.06248, 0.0, 12.4886 ) }
    soma_0 { pt3dadd( 5.93811, 4.48253, 0.0, 11.1129 ) }
    soma_0 { pt3dadd( 6.64141, 4.90258, 0.0, 8.63124 ) }
    soma_0 { pt3dadd( 7.34472, 5.32263, 0.0, 4.83175 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.40346, -6.6056, 3.0, 2.64 ) }
    dend_21 { pt3dadd( -2.45345, -6.9571, 3.0, 2.64 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.47655, -2.3021, 3.96, 1.47 ) }
    dend_16 { pt3dadd( 8.29935, -2.76151, 4.11238, 1.47 ) }
    dend_16 { pt3dadd( 10.2273, -3.75823, 4.56904, 1.18 ) }
    dend_16 { pt3dadd( 11.2343, -4.24247, 4.84157, 1.25 ) }
    dend_16 { pt3dadd( 12.0446, -4.63214, 5.06088, 1.25 ) }
    dend_16 { pt3dadd( 12.7456, -4.96921, 5.25059, 1.18 ) }
    dend_16 { pt3dadd( 14.6755, -5.89726, 5.7729, 1.18 ) }
    dend_16 { pt3dadd( 16.3905, -6.68114, 6.25117, 1.18 ) }
    dend_16 { pt3dadd( 17.6649, -7.20282, 6.59216, 1.98 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.18345, -4.3351, 5.85, 0.81 ) }
    dend_15 { pt3dadd( -5.90894, -4.68254, 6.45926, 0.88 ) }
    dend_15 { pt3dadd( -6.91896, -5.06426, 7.2689, 0.66 ) }
    dend_15 { pt3dadd( -7.42453, -5.17353, 7.68324, 0.66 ) }
    dend_15 { pt3dadd( -8.1397, -5.22871, 8.21509, 0.66 ) }
    dend_15 { pt3dadd( -8.88912, -5.22974, 8.7083, 0.66 ) }
    dend_15 { pt3dadd( -9.39867, -5.2175, 8.98812, 0.88 ) }
    dend_15 { pt3dadd( -10.1419, -5.14296, 9.36078, 1.1 ) }
    dend_15 { pt3dadd( -11.5548, -4.95605, 9.92884, 0.88 ) }
    dend_15 { pt3dadd( -12.6944, -4.85376, 10.4283, 0.37 ) }
    dend_15 { pt3dadd( -13.5745, -4.85579, 10.8221, 0.88 ) }
    dend_15 { pt3dadd( -14.5877, -4.96306, 11.3093, 0.88 ) }
    dend_15 { pt3dadd( -15.4934, -5.14202, 11.7662, 0.88 ) }
    dend_15 { pt3dadd( -16.4555, -5.41854, 12.2836, 1.4 ) }
    dend_15 { pt3dadd( -18.3561, -6.12598, 13.3434, 0.81 ) }
    dend_15 { pt3dadd( -19.574, -6.61972, 14.1406, 0.59 ) }
    dend_15 { pt3dadd( -20.3984, -6.94958, 14.7248, 0.73 ) }
    dend_15 { pt3dadd( -21.1508, -7.21551, 15.2708, 0.37 ) }
    dend_15 { pt3dadd( -22.0291, -7.469, 15.8687, 0.37 ) }
    dend_15 { pt3dadd( -22.7415, -7.60105, 16.3489, 1.25 ) }
    dend_15 { pt3dadd( -24.305, -7.60005, 17.2889, 0.37 ) }
    dend_15 { pt3dadd( -24.735, -7.5415, 17.559, 0.37 ) }
    dend_15 { pt3dadd( -25.4135, -7.36007, 17.9968, 0.37 ) }
    dend_15 { pt3dadd( -25.8656, -7.15828, 18.3134, 0.37 ) }
    dend_15 { pt3dadd( -26.3233, -6.79865, 18.6055, 0.37 ) }
    dend_15 { pt3dadd( -26.8863, -5.97114, 18.9496, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 58/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.96655, 1.4314, 3.67, 1.1 ) }
    dend_12 { pt3dadd( 9.85709, 1.7169, 3.83738, 0.73 ) }
    dend_12 { pt3dadd( 10.4644, 1.92764, 3.92081, 0.73 ) }
    dend_12 { pt3dadd( 11.5493, 2.36295, 4.03842, 0.95 ) }
    dend_12 { pt3dadd( 12.9248, 2.99659, 4.16485, 1.03 ) }
    dend_12 { pt3dadd( 13.424, 3.26307, 4.18775, 1.03 ) }
    dend_12 { pt3dadd( 14.5278, 3.90425, 4.27931, 1.03 ) }
    dend_12 { pt3dadd( 15.2667, 4.41313, 4.39091, 1.1 ) }
    dend_12 { pt3dadd( 15.8777, 4.87407, 4.53043, 0.95 ) }
    dend_12 { pt3dadd( 16.2751, 5.1921, 4.67486, 0.95 ) }
    dend_12 { pt3dadd( 17.149, 5.88869, 5.02663, 0.95 ) }
    dend_12 { pt3dadd( 18.2448, 6.77463, 5.52799, 1.18 ) }
    dend_12 { pt3dadd( 19.0865, 7.47256, 5.97648, 0.88 ) }
    dend_12 { pt3dadd( 20.1515, 8.31331, 6.63049, 0.88 ) }
    dend_12 { pt3dadd( 21.1824, 9.0667, 7.30738, 1.18 ) }
    dend_12 { pt3dadd( 22.3197, 9.83724, 8.09951, 1.54 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 74/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 4.60655, 7.4924, -4.1, 0.88 ) }
    dend_11 { pt3dadd( 4.66448, 8.16768, -4.33233, 0.88 ) }
    dend_11 { pt3dadd( 4.83351, 9.64627, -4.69775, 0.95 ) }
    dend_11 { pt3dadd( 4.9562, 10.3694, -4.85755, 1.1 ) }
    dend_11 { pt3dadd( 5.16925, 11.2537, -5.0288, 0.81 ) }
    dend_11 { pt3dadd( 5.33594, 11.8541, -5.13357, 0.81 ) }
    dend_11 { pt3dadd( 5.52426, 12.5169, -5.23864, 1.03 ) }
    dend_11 { pt3dadd( 5.95198, 13.9559, -5.44811, 0.73 ) }
    dend_11 { pt3dadd( 6.20794, 14.9516, -5.59248, 0.88 ) }
    dend_11 { pt3dadd( 6.4834, 16.1413, -5.82085, 0.44 ) }
    dend_11 { pt3dadd( 6.63305, 16.7106, -5.92564, 0.51 ) }
    dend_11 { pt3dadd( 6.83592, 17.3797, -6.02548, 0.81 ) }
    dend_11 { pt3dadd( 7.17408, 18.3595, -6.13087, 1.18 ) }
    dend_11 { pt3dadd( 7.68059, 19.7445, -6.20158, 0.95 ) }
    dend_11 { pt3dadd( 7.85487, 20.2403, -6.19784, 0.51 ) }
    dend_11 { pt3dadd( 8.46486, 21.7823, -6.19153, 0.51 ) }
    dend_11 { pt3dadd( 8.89526, 22.7363, -6.1844, 0.88 ) }
    dend_11 { pt3dadd( 9.29064, 23.5468, -6.1695, 0.66 ) }
    dend_11 { pt3dadd( 9.86557, 24.6623, -6.12525, 0.44 ) }
    dend_11 { pt3dadd( 10.4248, 25.7159, -6.07008, 1.03 ) }
    dend_11 { pt3dadd( 10.9742, 26.9577, -6.09023, 0.81 ) }
    dend_11 { pt3dadd( 11.1659, 27.5312, -6.14851, 0.37 ) }
    dend_11 { pt3dadd( 11.3595, 28.2723, -6.26519, 0.37 ) }
    dend_11 { pt3dadd( 11.4274, 28.5782, -6.33349, 0.37 ) }
    dend_11 { pt3dadd( 11.6178, 29.5117, -6.58772, 0.95 ) }
    dend_11 { pt3dadd( 11.8331, 30.4586, -6.83037, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 11.947, 30.9595, -6.93866, 1.03 ) }
    dend_11 { pt3dadd( 12.2197, 32.0357, -7.15998, 1.1 ) }
    dend_11 { pt3dadd( 12.4828, 33.1165, -7.36137, 0.59 ) }
    dend_11 { pt3dadd( 12.626, 33.819, -7.45709, 0.73 ) }
    dend_11 { pt3dadd( 12.8129, 34.9614, -7.56297, 0.29 ) }
    dend_11 { pt3dadd( 12.8947, 35.5776, -7.57418, 0.29 ) }
    dend_11 { pt3dadd( 12.9728, 36.5553, -7.54825, 0.81 ) }
    dend_11 { pt3dadd( 13.0039, 37.4284, -7.52129, 0.51 ) }
    dend_11 { pt3dadd( 12.9916, 38.7873, -7.49911, 0.73 ) }
    dend_11 { pt3dadd( 12.9617, 39.4324, -7.51965, 0.73 ) }
    dend_11 { pt3dadd( 12.9006, 40.1964, -7.61548, 0.73 ) }
    dend_11 { pt3dadd( 12.8132, 41.1757, -7.79948, 0.59 ) }
    dend_11 { pt3dadd( 12.6962, 42.2776, -8.08621, 0.51 ) }
    dend_11 { pt3dadd( 12.6372, 42.9509, -8.29669, 0.81 ) }
    dend_11 { pt3dadd( 12.5648, 43.7264, -8.5948, 0.51 ) }
    dend_11 { pt3dadd( 12.4353, 45.0327, -9.15059, 0.22 ) }
    dend_11 { pt3dadd( 12.3665, 45.5571, -9.3987, 0.22 ) }
    dend_11 { pt3dadd( 12.2354, 46.2186, -9.73646, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.17345, 5.7539, 7.35, 0.88 ) }
    dend_10 { pt3dadd( -4.44444, 6.54679, 7.41903, 0.73 ) }
    dend_10 { pt3dadd( -4.66879, 7.22885, 7.50338, 0.88 ) }
    dend_10 { pt3dadd( -4.80724, 7.69856, 7.56715, 0.59 ) }
    dend_10 { pt3dadd( -4.99998, 8.63378, 7.72276, 0.73 ) }
    dend_10 { pt3dadd( -5.08153, 9.17061, 7.8548, 0.29 ) }
    dend_10 { pt3dadd( -5.16979, 9.7977, 8.03337, 0.29 ) }
    dend_10 { pt3dadd( -5.25848, 10.3587, 8.25111, 0.66 ) }
    dend_10 { pt3dadd( -5.33417, 10.7495, 8.43283, 0.37 ) }
    dend_10 { pt3dadd( -5.51396, 11.5455, 8.84044, 0.37 ) }
    dend_10 { pt3dadd( -5.7881, 12.3668, 9.28586, 0.22 ) }
    dend_10 { pt3dadd( -5.97138, 12.7366, 9.48533, 0.22 ) }
    dend_10 { pt3dadd( -6.36593, 13.3618, 9.80263, 0.22 ) }
    dend_10 { pt3dadd( -6.72081, 13.8639, 10.0417, 0.37 ) }
    dend_10 { pt3dadd( -6.93369, 14.1419, 10.1681, 0.51 ) }
    dend_10 { pt3dadd( -7.40133, 14.6918, 10.395, 0.37 ) }
    dend_10 { pt3dadd( -8.15073, 15.58, 10.7023, 0.15 ) }
    dend_10 { pt3dadd( -8.3976, 15.8977, 10.81, 0.37 ) }
    dend_10 { pt3dadd( -8.78008, 16.4669, 10.9837, 0.15 ) }
    dend_10 { pt3dadd( -9.17868, 17.115, 11.2052, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.403454, 7.6064, 4.06, 1.03 ) }
    dend_9 { pt3dadd( -0.581711, 8.32885, 4.09483, 1.03 ) }
    dend_9 { pt3dadd( -0.76034, 9.59635, 4.10774, 0.81 ) }
    dend_9 { pt3dadd( -0.789803, 10.392, 4.09902, 0.88 ) }
    dend_9 { pt3dadd( -0.728616, 11.3814, 4.07603, 1.18 ) }
    dend_9 { pt3dadd( -0.603429, 12.2426, 4.05043, 1.18 ) }
    dend_9 { pt3dadd( -0.39248, 13.2561, 4.04987, 0.59 ) }
    dend_9 { pt3dadd( -0.129414, 13.9842, 4.06591, 0.59 ) }
    dend_9 { pt3dadd( 0.248083, 14.6894, 4.14257, 0.95 ) }
    dend_9 { pt3dadd( 0.740555, 15.4471, 4.24609, 0.59 ) }
    dend_9 { pt3dadd( 1.20346, 16.1095, 4.34783, 0.73 ) }
    dend_9 { pt3dadd( 1.63282, 16.7781, 4.41579, 0.73 ) }
    dend_9 { pt3dadd( 2.00596, 17.4896, 4.45313, 1.03 ) }
    dend_9 { pt3dadd( 2.46824, 18.6936, 4.42299, 1.54 ) }
    dend_9 { pt3dadd( 2.78729, 19.8673, 4.37265, 0.88 ) }
    dend_9 { pt3dadd( 2.95573, 20.754, 4.31752, 0.51 ) }
    dend_9 { pt3dadd( 3.17078, 22.3783, 4.18495, 0.51 ) }
    dend_9 { pt3dadd( 3.24554, 23.2929, 4.05592, 0.51 ) }
    dend_9 { pt3dadd( 3.26247, 24.5075, 3.84879, 0.51 ) }
    dend_9 { pt3dadd( 3.16691, 25.7389, 3.63288, 0.51 ) }
    dend_9 { pt3dadd( 3.10117, 26.3114, 3.56481, 0.51 ) }
    dend_9 { pt3dadd( 3.00262, 27.0338, 3.50509, 0.59 ) }
    dend_9 { pt3dadd( 2.82835, 28.0659, 3.52646, 0.88 ) }
    dend_9 { pt3dadd( 2.7096, 28.7077, 3.53683, 0.37 ) }
    dend_9 { pt3dadd( 2.38057, 29.8433, 3.53245, 0.51 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 63/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.31345, 4.1769, -1.8, 1.91 ) }
    dend_0 { pt3dadd( -7.31345, 4.1769, -1.8, 1.91 ) }
    dend_0 { pt3dadd( -8.78537, 5.04628, -1.80044, 1.25 ) }
    dend_0 { pt3dadd( -9.9158, 5.7646, -1.78085, 1.47 ) }
    dend_0 { pt3dadd( -11.0187, 6.49364, -1.75325, 1.47 ) }
    dend_0 { pt3dadd( -11.8798, 7.06288, -1.7317, 1.62 ) }
    dend_0 { pt3dadd( -13.2096, 7.942, -1.69841, 1.25 ) }
    dend_0 { pt3dadd( -14.574, 8.86713, -1.61399, 1.47 ) }
    dend_0 { pt3dadd( -15.3584, 9.43017, -1.49752, 1.76 ) }
    dend_0 { pt3dadd( -15.561, 9.58625, -1.45631, 2.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 73/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.34472, 5.32263, 0.0, 0.637487 ) }
    axon_0 { pt3dadd( 20.2227, 13.014, 0.0, 0.637487 ) }
    axon_0 { pt3dadd( 33.1007, 20.7054, 0.0, 0.637487 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.45345, -6.9571, 3.0, 2.06 ) }
    dend_23 { pt3dadd( -2.84591, -8.69339, 2.74899, 2.06 ) }
    dend_23 { pt3dadd( -3.3476, -10.9131, 2.4281, 1.76 ) }
    dend_23 { pt3dadd( -3.52737, -11.7084, 2.31311, 1.76 ) }
    dend_23 { pt3dadd( -3.60299, -12.043, 2.26474, 1.76 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 81/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.45345, -6.9571, 3.0, 0.59 ) }
    dend_22 { pt3dadd( -1.66548, -8.04192, 3.35723, 0.59 ) }
    dend_22 { pt3dadd( -1.14906, -8.81719, 3.64487, 0.59 ) }
    dend_22 { pt3dadd( -0.781073, -9.41702, 3.9186, 0.59 ) }
    dend_22 { pt3dadd( -0.335993, -10.251, 4.35181, 0.59 ) }
    dend_22 { pt3dadd( 0.115854, -11.2564, 4.98227, 0.95 ) }
    dend_22 { pt3dadd( 0.407236, -12.0619, 5.54921, 0.81 ) }
    dend_22 { pt3dadd( 0.487187, -12.4692, 5.92492, 0.81 ) }
    dend_22 { pt3dadd( 0.550223, -13.135, 6.63863, 0.81 ) }
    dend_22 { pt3dadd( 0.611919, -13.8304, 7.491, 0.51 ) }
    dend_22 { pt3dadd( 0.69219, -14.6259, 8.56658, 1.03 ) }
    dend_22 { pt3dadd( 0.758324, -15.0875, 9.24432, 1.32 ) }
    dend_22 { pt3dadd( 1.01537, -16.0613, 10.7009, 0.59 ) }
    dend_22 { pt3dadd( 1.11126, -16.3115, 11.0543, 0.73 ) }
    dend_22 { pt3dadd( 1.51813, -17.1481, 12.0966, 0.22 ) }
    dend_22 { pt3dadd( 1.73161, -17.5191, 12.5124, 0.22 ) }
    dend_22 { pt3dadd( 1.99893, -17.8784, 12.8494, 0.37 ) }
    dend_22 { pt3dadd( 2.40144, -18.3172, 13.2112, 0.37 ) }
    dend_22 { pt3dadd( 2.79077, -18.7064, 13.4165, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( 3.41302, -19.3197, 13.731, 0.37 ) }
    dend_22 { pt3dadd( 3.5449, -20.4241, 13.7167, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 2/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.6649, -7.20282, 6.59216, 1.1 ) }
    dend_18 { pt3dadd( 18.4878, -7.71884, 5.40509, 1.1 ) }
    dend_18 { pt3dadd( 19.3748, -8.17904, 4.29539, 1.1 ) }
    dend_18 { pt3dadd( 19.7648, -8.34517, 3.86262, 1.1 ) }
    dend_18 { pt3dadd( 20.3957, -8.56501, 3.2429, 0.73 ) }
    dend_18 { pt3dadd( 21.1882, -8.8061, 2.53855, 0.73 ) }
    dend_18 { pt3dadd( 22.8747, -9.27123, 1.18837, 0.73 ) }
    dend_18 { pt3dadd( 24.3118, -9.59607, 0.239304, 0.73 ) }
    dend_18 { pt3dadd( 24.9592, -9.72954, -0.132366, 0.88 ) }
    dend_18 { pt3dadd( 25.736, -9.87286, -0.549714, 1.03 ) }
    dend_18 { pt3dadd( 27.1621, -10.1144, -1.25639, 0.59 ) }
    dend_18 { pt3dadd( 28.0448, -10.2703, -1.65674, 0.66 ) }
    dend_18 { pt3dadd( 29.1117, -10.4713, -2.14258, 0.81 ) }
    dend_18 { pt3dadd( 29.8381, -10.6322, -2.47203, 0.81 ) }
    dend_18 { pt3dadd( 30.6655, -10.8483, -2.87962, 0.81 ) }
    dend_18 { pt3dadd( 31.4129, -11.0692, -3.28004, 0.95 ) }
    dend_18 { pt3dadd( 32.4014, -11.3794, -3.85001, 0.81 ) }
    dend_18 { pt3dadd( 33.1636, -11.6507, -4.3812, 1.1 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 20/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 17.6649, -7.20282, 6.59216, 1.47 ) }
    dend_17 { pt3dadd( 19.094, -7.86166, 6.66696, 1.47 ) }
    dend_17 { pt3dadd( 20.8343, -8.63686, 6.71657, 1.32 ) }
    dend_17 { pt3dadd( 22.3578, -9.26787, 6.75991, 0.95 ) }
    dend_17 { pt3dadd( 24.0776, -9.90808, 6.89851, 1.18 ) }
    dend_17 { pt3dadd( 25.7147, -10.4322, 7.07273, 0.95 ) }
    dend_17 { pt3dadd( 27.6026, -10.9398, 7.35918, 0.95 ) }
    dend_17 { pt3dadd( 28.5938, -11.1569, 7.54949, 1.1 ) }
    dend_17 { pt3dadd( 29.7243, -11.2751, 7.93972, 1.1 ) }
    dend_17 { pt3dadd( 31.1146, -11.1727, 8.8483, 1.25 ) }
    dend_17 { pt3dadd( 31.8972, -10.9698, 9.61794, 0.88 ) }
    dend_17 { pt3dadd( 32.7165, -10.6376, 10.6286, 0.81 ) }
    dend_17 { pt3dadd( 33.5579, -10.1289, 11.9525, 0.95 ) }
    dend_17 { pt3dadd( 34.3334, -9.52368, 13.4931, 0.59 ) }
    dend_17 { pt3dadd( 34.6589, -9.17266, 14.3636, 0.59 ) }
    dend_17 { pt3dadd( 34.7594, -9.0128, 14.7586, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 22.3197, 9.83724, 8.09951, 0.95 ) }
    dend_14 { pt3dadd( 23.1691, 9.13134, 8.5295, 0.95 ) }
    dend_14 { pt3dadd( 23.7915, 8.60093, 8.74366, 0.95 ) }
    dend_14 { pt3dadd( 24.8069, 7.74942, 9.02197, 1.32 ) }
    dend_14 { pt3dadd( 25.859, 6.85553, 9.29379, 0.88 ) }
    dend_14 { pt3dadd( 26.7777, 6.03367, 9.5615, 0.81 ) }
    dend_14 { pt3dadd( 27.544, 5.33459, 9.81569, 1.18 ) }
    dend_14 { pt3dadd( 28.4905, 4.44808, 10.1237, 0.59 ) }
    dend_14 { pt3dadd( 29.2273, 3.78352, 10.3881, 0.59 ) }
    dend_14 { pt3dadd( 30.0125, 3.16067, 10.6677, 0.44 ) }
    dend_14 { pt3dadd( 31.2721, 2.38195, 11.1647, 0.44 ) }
    dend_14 { pt3dadd( 31.8671, 2.1425, 11.4282, 0.44 ) }
    dend_14 { pt3dadd( 32.3265, 2.08119, 11.6673, 0.44 ) }
    dend_14 { pt3dadd( 33.1746, 2.20301, 12.1591, 0.59 ) }
    dend_14 { pt3dadd( 33.9601, 2.55559, 12.6696, 0.73 ) }
    dend_14 { pt3dadd( 34.6083, 3.02304, 13.1295, 0.59 ) }
    dend_14 { pt3dadd( 35.1939, 3.58899, 13.5881, 0.59 ) }
    dend_14 { pt3dadd( 35.6919, 4.14148, 14.0361, 0.44 ) }
    dend_14 { pt3dadd( 36.1931, 4.70971, 14.5445, 0.73 ) }
    dend_14 { pt3dadd( 36.9974, 5.58039, 15.3672, 0.29 ) }
    dend_14 { pt3dadd( 37.2137, 5.7826, 15.581, 0.29 ) }
    dend_14 { pt3dadd( 37.7158, 6.15588, 16.0002, 0.29 ) }
    dend_14 { pt3dadd( 38.4468, 6.55111, 16.4358, 0.22 ) }
    dend_14 { pt3dadd( 39.5307, 7.06437, 17.0, 0.15 ) }
    dend_14 { pt3dadd( 40.4182, 7.40397, 17.3665, 0.15 ) }
    dend_14 { pt3dadd( 41.1918, 7.63705, 17.613, 0.15 ) }
    dend_14 { pt3dadd( 42.2258, 7.90439, 17.9084, 0.15 ) }
    dend_14 { pt3dadd( 43.8303, 8.25211, 18.2638, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 22.3197, 9.83724, 8.09951, 0.95 ) }
    dend_13 { pt3dadd( 22.8023, 10.7916, 8.08105, 0.95 ) }
    dend_13 { pt3dadd( 23.278, 11.9472, 8.18834, 0.88 ) }
    dend_13 { pt3dadd( 23.5287, 12.6454, 8.28556, 1.25 ) }
    dend_13 { pt3dadd( 23.6586, 13.0392, 8.34382, 1.25 ) }
    dend_13 { pt3dadd( 24.0086, 14.0575, 8.52092, 0.81 ) }
    dend_13 { pt3dadd( 24.4631, 15.2413, 8.74296, 1.1 ) }
    dend_13 { pt3dadd( 24.712, 15.8074, 8.88072, 1.25 ) }
    dend_13 { pt3dadd( 25.1777, 16.7456, 9.14202, 0.81 ) }
    dend_13 { pt3dadd( 25.7182, 17.6312, 9.37087, 0.37 ) }
    dend_13 { pt3dadd( 26.0522, 18.0605, 9.4625, 0.37 ) }
    dend_13 { pt3dadd( 26.4944, 18.5195, 9.5371, 0.37 ) }
    dend_13 { pt3dadd( 27.0758, 19.0704, 9.63603, 0.37 ) }
    dend_13 { pt3dadd( 27.5675, 19.5586, 9.76617, 0.37 ) }
    dend_13 { pt3dadd( 28.2368, 20.2846, 10.01, 0.37 ) }
    dend_13 { pt3dadd( 28.7221, 20.8995, 10.2843, 0.51 ) }
    dend_13 { pt3dadd( 28.9211, 21.2454, 10.4474, 0.81 ) }
    dend_13 { pt3dadd( 29.3756, 22.3945, 11.0157, 0.73 ) }
    dend_13 { pt3dadd( 29.589, 23.1866, 11.3996, 0.29 ) }
    dend_13 { pt3dadd( 29.6721, 23.5862, 11.5826, 0.29 ) }
    dend_13 { pt3dadd( 29.8452, 24.6197, 11.9936, 0.29 ) }
    dend_13 { pt3dadd( 29.9841, 25.4258, 12.2742, 0.29 ) }
    dend_13 { pt3dadd( 30.1159, 26.0245, 12.4625, 0.29 ) }
    dend_13 { pt3dadd( 30.3836, 26.9164, 12.7648, 0.29 ) }
    dend_13 { pt3dadd( 30.7501, 27.7261, 13.1174, 0.29 ) }
    dend_13 { pt3dadd( 31.2466, 28.5151, 13.5401, 0.29 ) }
    dend_13 { pt3dadd( 31.4609, 28.799, 13.7016, 0.29 ) }
    dend_13 { pt3dadd( 31.9771, 29.2722, 14.0863, 0.29 ) }
    dend_13 { pt3dadd( 33.0173, 29.8893, 14.8905, 0.59 ) }
    dend_13 { pt3dadd( 33.7609, 30.072, 15.5107, 0.95 ) }
    dend_13 { pt3dadd( 34.1622, 30.055, 15.8577, 0.95 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 95/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.561, 9.58625, -1.45631, 1.18 ) }
    dend_4 { pt3dadd( -16.3639, 9.73784, -2.02806, 1.18 ) }
    dend_4 { pt3dadd( -17.2223, 9.8999, -2.6393, 0.95 ) }
    dend_4 { pt3dadd( -17.9688, 10.0408, -3.17085, 1.25 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.561, 9.58625, -1.45631, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -15.3635, 10.604, -1.97132, 1.03 ) }
    dend_1 { pt3dadd( -15.1972, 11.8523, -2.55678, 0.59 ) }
    dend_1 { pt3dadd( -15.1181, 13.0363, -3.07125, 0.59 ) }
    dend_1 { pt3dadd( -15.1247, 13.9324, -3.4247, 0.59 ) }
    dend_1 { pt3dadd( -15.1295, 14.5907, -3.68436, 0.88 ) }
    dend_1 { pt3dadd( -15.1319, 14.9189, -3.8138, 0.88 ) }
    dend_1 { pt3dadd( -15.1988, 15.5423, -4.06042, 0.88 ) }
    dend_1 { pt3dadd( -15.3338, 16.0465, -4.20256, 1.03 ) }
    dend_1 { pt3dadd( -15.6409, 16.6909, -4.30543, 1.32 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 9/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 33.1007, 20.7054, 0.0, 0.227585 ) }
    axon_1 { pt3dadd( 45.9787, 28.3967, 0.0, 0.227585 ) }
    axon_1 { pt3dadd( 58.8567, 36.0881, 0.0, 0.227585 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 12/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -3.60299, -12.043, 2.26474, 1.76 ) }
    dend_25 { pt3dadd( -3.53029, -13.4723, 1.60929, 1.76 ) }
    dend_25 { pt3dadd( -3.46154, -14.8238, 0.989485, 1.91 ) }
    dend_25 { pt3dadd( -3.42132, -15.6145, 0.626887, 1.91 ) }
    dend_25 { pt3dadd( -3.33137, -17.3827, -0.184014, 1.54 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 17/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.60299, -12.043, 2.26474, 0.29 ) }
    dend_24 { pt3dadd( -4.18845, -12.5044, 2.77646, 0.29 ) }
    dend_24 { pt3dadd( -4.46717, -12.8298, 3.11922, 0.29 ) }
    dend_24 { pt3dadd( -4.81783, -13.4868, 3.77072, 1.1 ) }
    dend_24 { pt3dadd( -4.97464, -13.85, 4.09036, 1.1 ) }
    dend_24 { pt3dadd( -5.06433, -14.0705, 4.27086, 1.1 ) }
    dend_24 { pt3dadd( -5.33745, -14.5947, 4.67702, 0.95 ) }
    dend_24 { pt3dadd( -5.61205, -15.0466, 4.98517, 0.95 ) }
    dend_24 { pt3dadd( -6.00389, -15.5656, 5.3016, 0.66 ) }
    dend_24 { pt3dadd( -6.45463, -15.9916, 5.51935, 0.59 ) }
    dend_24 { pt3dadd( -6.96301, -16.3589, 5.69452, 0.59 ) }
    dend_24 { pt3dadd( -7.88165, -16.8988, 5.95069, 1.25 ) }
    dend_24 { pt3dadd( -9.00996, -17.4791, 6.23282, 0.66 ) }
    dend_24 { pt3dadd( -9.43953, -17.6945, 6.33607, 0.66 ) }
    dend_24 { pt3dadd( -10.3807, -18.1755, 6.6087, 0.51 ) }
    dend_24 { pt3dadd( -10.7475, -18.3964, 6.77819, 0.44 ) }
    dend_24 { pt3dadd( -11.0691, -18.7573, 7.17075, 0.44 ) }
    dend_24 { pt3dadd( -11.0948, -19.0239, 7.58171, 0.66 ) }
    dend_24 { pt3dadd( -11.0462, -19.466, 8.25528, 0.73 ) }
    dend_24 { pt3dadd( -10.9445, -20.0933, 9.14729, 0.51 ) }
    dend_24 { pt3dadd( -10.82, -20.7566, 10.0246, 0.73 ) }
    dend_24 { pt3dadd( -10.7168, -21.3726, 10.7967, 1.25 ) }
    dend_24 { pt3dadd( -10.598, -22.4489, 12.0706, 1.47 ) }
    dend_24 { pt3dadd( -10.6159, -23.2699, 12.9913, 0.59 ) }
    dend_24 { pt3dadd( -10.7269, -23.7917, 13.5599, 0.51 ) }
    dend_24 { pt3dadd( -10.909, -24.1993, 13.9886, 0.51 ) }
    dend_24 { pt3dadd( -11.2053, -24.5624, 14.3934, 0.51 ) }
    dend_24 { pt3dadd( -11.5536, -24.6722, 14.6745, 0.51 ) }
    dend_24 { pt3dadd( -12.2679, -24.4599, 15.1008, 0.44 ) }
    dend_24 { pt3dadd( -12.9696, -24.1681, 15.4895, 0.44 ) }
    dend_24 { pt3dadd( -13.8376, -23.8136, 15.883, 0.44 ) }
    dend_24 { pt3dadd( -14.6581, -23.4986, 16.1646, 0.37 ) }
    dend_24 { pt3dadd( -15.6315, -23.1701, 16.4029, 0.29 ) }
    dend_24 { pt3dadd( -16.7406, -22.8759, 16.4428, 0.66 ) }
    dend_24 { pt3dadd( -17.5357, -22.7271, 16.3036, 0.37 ) }
    dend_24 { pt3dadd( -18.679, -22.5966, 15.9075, 0.22 ) }
    dend_24 { pt3dadd( -19.6202, -22.5409, 15.502, 0.22 ) }
    dend_24 { pt3dadd( -20.2165, -22.5105, 15.2164, 0.44 ) }
    dend_24 { pt3dadd( -22.5513, -22.3601, 14.0153, 0.29 ) }
    dend_24 { pt3dadd( -23.5554, -22.2624, 13.4887, 0.44 ) }
    dend_24 { pt3dadd( -24.622, -22.109, 12.9706, 0.29 ) }
    dend_24 { pt3dadd( -25.6894, -21.9155, 12.4898, 0.22 ) }
    dend_24 { pt3dadd( -26.7401, -21.703, 12.0859, 0.22 ) }
    dend_24 { pt3dadd( -27.124, -21.6181, 11.9691, 0.22 ) }
    dend_24 { pt3dadd( -27.6054, -21.5042, 11.9296, 0.22 ) }
    dend_24 { pt3dadd( -28.1102, -21.3806, 11.8946, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 33.1636, -11.6507, -4.3812, 0.73 ) }
    dend_20 { pt3dadd( 33.7599, -12.2031, -5.24372, 0.73 ) }
    dend_20 { pt3dadd( 34.5497, -13.1657, -6.39956, 0.66 ) }
    dend_20 { pt3dadd( 34.7628, -13.5163, -6.71605, 0.44 ) }
    dend_20 { pt3dadd( 35.0441, -14.0654, -7.09844, 0.44 ) }
    dend_20 { pt3dadd( 35.1914, -14.385, -7.29132, 0.44 ) }
    dend_20 { pt3dadd( 35.3635, -14.8065, -7.53391, 0.44 ) }
    dend_20 { pt3dadd( 35.6914, -15.7671, -8.09758, 0.95 ) }
    dend_20 { pt3dadd( 36.0011, -16.7933, -8.63058, 0.37 ) }
    dend_20 { pt3dadd( 36.2381, -17.7033, -9.0995, 0.51 ) }
    dend_20 { pt3dadd( 36.4399, -18.5706, -9.53974, 0.29 ) }
    dend_20 { pt3dadd( 36.765, -19.9502, -10.2543, 1.03 ) }
    dend_20 { pt3dadd( 37.0757, -21.1948, -10.9798, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 33.1636, -11.6507, -4.3812, 1.1 ) }
    dend_19 { pt3dadd( 33.9436, -11.4528, -4.64737, 1.1 ) }
    dend_19 { pt3dadd( 35.4273, -11.1623, -5.09363, 0.81 ) }
    dend_19 { pt3dadd( 36.8217, -11.0351, -5.50388, 0.88 ) }
    dend_19 { pt3dadd( 37.9215, -11.0227, -5.7715, 0.88 ) }
    dend_19 { pt3dadd( 39.0376, -11.0809, -6.00255, 0.88 ) }
    dend_19 { pt3dadd( 40.1223, -11.1799, -6.20022, 0.88 ) }
    dend_19 { pt3dadd( 41.1944, -11.3745, -6.33687, 1.03 ) }
    dend_19 { pt3dadd( 42.7386, -11.7747, -6.44592, 0.66 ) }
    dend_19 { pt3dadd( 44.0092, -12.1236, -6.49984, 0.73 ) }
    dend_19 { pt3dadd( 44.8844, -12.3313, -6.50605, 0.73 ) }
    dend_19 { pt3dadd( 45.4074, -12.4103, -6.50152, 0.73 ) }
    dend_19 { pt3dadd( 46.4154, -12.4383, -6.47194, 0.73 ) }
    dend_19 { pt3dadd( 47.2076, -12.3182, -6.46354, 1.03 ) }
    dend_19 { pt3dadd( 48.6096, -11.8259, -6.45732, 0.73 ) }
    dend_19 { pt3dadd( 49.3584, -11.4891, -6.48068, 1.18 ) }
    dend_19 { pt3dadd( 50.1207, -11.1107, -6.55263, 0.88 ) }
    dend_19 { pt3dadd( 50.7976, -10.75, -6.68579, 0.59 ) }
    dend_19 { pt3dadd( 51.6628, -10.2849, -6.92472, 0.59 ) }
    dend_19 { pt3dadd( 52.2872, -9.96698, -7.13091, 0.59 ) }
    dend_19 { pt3dadd( 53.3824, -9.47821, -7.56538, 0.66 ) }
    dend_19 { pt3dadd( 54.5702, -9.02248, -8.05231, 0.66 ) }
    dend_19 { pt3dadd( 55.8166, -8.62401, -8.55097, 1.4 ) }
    dend_19 { pt3dadd( 56.9597, -8.30401, -8.99274, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 57.5499, -8.14586, -9.20838, 0.37 ) }
    dend_19 { pt3dadd( 58.8952, -7.76583, -9.77302, 0.51 ) }
    dend_19 { pt3dadd( 59.6834, -7.52082, -10.1096, 0.66 ) }
    dend_19 { pt3dadd( 60.4234, -7.29663, -10.391, 0.66 ) }
    dend_19 { pt3dadd( 60.6925, -7.22645, -10.5028, 0.73 ) }
    dend_19 { pt3dadd( 61.1681, -7.1219, -10.7215, 0.51 ) }
    dend_19 { pt3dadd( 62.9434, -6.78843, -11.5232, 0.07 ) }
    dend_19 { pt3dadd( 63.6842, -6.65195, -11.8564, 0.59 ) }
    dend_19 { pt3dadd( 64.2819, -6.54741, -12.1211, 0.51 ) }
    dend_19 { pt3dadd( 65.3382, -6.35951, -12.603, 0.51 ) }
    dend_19 { pt3dadd( 66.4883, -6.14401, -13.1062, 0.73 ) }
    dend_19 { pt3dadd( 67.3876, -5.98091, -13.4582, 0.81 ) }
    dend_19 { pt3dadd( 68.8406, -5.74824, -13.9205, 0.37 ) }
    dend_19 { pt3dadd( 69.6873, -5.62425, -14.1746, 0.37 ) }
    dend_19 { pt3dadd( 70.6573, -5.48882, -14.4374, 0.37 ) }
    dend_19 { pt3dadd( 71.5328, -5.38165, -14.6336, 0.29 ) }
    dend_19 { pt3dadd( 72.5305, -5.30345, -14.8291, 0.29 ) }
    dend_19 { pt3dadd( 73.3217, -5.29649, -14.9475, 0.29 ) }
    dend_19 { pt3dadd( 74.261, -5.35468, -15.0756, 0.29 ) }
    dend_19 { pt3dadd( 74.738, -5.4075, -15.1648, 0.88 ) }
    dend_19 { pt3dadd( 75.8703, -5.57455, -15.4022, 1.32 ) }
    dend_19 { pt3dadd( 77.2789, -5.82152, -15.7538, 0.66 ) }
    dend_19 { pt3dadd( 78.0937, -5.97465, -15.9817, 0.15 ) }
    dend_19 { pt3dadd( 79.2319, -6.2002, -16.2685, 0.88 ) }
    dend_19 { pt3dadd( 80.4759, -6.44765, -16.5369, 1.03 ) }
    dend_19 { pt3dadd( 81.5325, -6.64503, -16.7238, 0.15 ) }
    dend_19 { pt3dadd( 82.426, -6.79238, -16.8388, 0.15 ) }
    dend_19 { pt3dadd( 83.0447, -6.86225, -16.879, 0.37 ) }
    dend_19 { pt3dadd( 84.5085, -6.89167, -16.8584, 0.37 ) }
    dend_19 { pt3dadd( 85.4605, -6.80466, -16.7727, 0.15 ) }
    dend_19 { pt3dadd( 85.7576, -6.74, -16.7378, 0.88 ) }
    dend_19 { pt3dadd( 86.2498, -6.58216, -16.7124, 1.1 ) }
    dend_19 { pt3dadd( 87.3229, -6.13944, -16.7209, 0.51 ) }
    dend_19 { pt3dadd( 88.1983, -5.70326, -16.7771, 0.29 ) }
    dend_19 { pt3dadd( 89.5122, -4.99076, -16.9277, 0.29 ) }
    dend_19 { pt3dadd( 90.4001, -4.48628, -17.0371, 0.95 ) }
    dend_19 { pt3dadd( 91.4013, -3.89653, -17.1643, 1.47 ) }
    dend_19 { pt3dadd( 91.8462, -3.62101, -17.2214, 1.47 ) }
    dend_19 { pt3dadd( 92.6992, -3.06389, -17.3224, 1.1 ) }
    dend_19 { pt3dadd( 94.2239, -2.01492, -17.4669, 0.22 ) }
    dend_19 { pt3dadd( 94.8794, -1.51223, -17.5082, 0.37 ) }
    dend_19 { pt3dadd( 95.2462, -1.1981, -17.5178, 0.73 ) }
    dend_19 { pt3dadd( 95.8682, -0.593063, -17.5091, 0.29 ) }
    dend_19 { pt3dadd( 96.3898, -0.0512776, -17.5031, 0.29 ) }
    dend_19 { pt3dadd( 96.9937, 0.631336, -17.4927, 0.66 ) }
    dend_19 { pt3dadd( 97.3523, 1.10001, -17.4829, 0.66 ) }
    dend_19 { pt3dadd( 97.875, 1.77776, -17.4634, 0.81 ) }
    dend_19 { pt3dadd( 98.5792, 2.68532, -17.4454, 0.37 ) }
    dend_19 { pt3dadd( 98.9106, 3.12874, -17.4467, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 49/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.9688, 10.0408, -3.17085, 1.25 ) }
    dend_6 { pt3dadd( -18.3927, 9.31892, -4.03102, 1.25 ) }
    dend_6 { pt3dadd( -18.7861, 8.59755, -4.73902, 1.25 ) }
    dend_6 { pt3dadd( -19.2219, 7.82012, -5.42512, 1.25 ) }
    dend_6 { pt3dadd( -19.9947, 6.55837, -6.46898, 1.25 ) }
    dend_6 { pt3dadd( -20.904, 5.24614, -7.58943, 0.81 ) }
    dend_6 { pt3dadd( -21.4745, 4.50277, -8.2794, 0.81 ) }
    dend_6 { pt3dadd( -22.0861, 3.76725, -9.01219, 0.66 ) }
    dend_6 { pt3dadd( -22.4189, 3.45116, -9.43944, 0.66 ) }
    dend_6 { pt3dadd( -22.9076, 3.14694, -10.1191, 0.81 ) }
    dend_6 { pt3dadd( -23.5508, 2.95626, -11.0791, 0.81 ) }
    dend_6 { pt3dadd( -24.0646, 2.91151, -11.9304, 0.81 ) }
    dend_6 { pt3dadd( -24.8436, 2.86493, -13.3763, 1.1 ) }
    dend_6 { pt3dadd( -25.9028, 2.67978, -15.437, 1.25 ) }
    dend_6 { pt3dadd( -26.2771, 2.54168, -16.1701, 1.25 ) }
    dend_6 { pt3dadd( -26.5595, 2.38947, -16.6946, 1.47 ) }
    dend_6 { pt3dadd( -27.1321, 2.00535, -17.6454, 0.81 ) }
    dend_6 { pt3dadd( -27.9287, 1.44558, -18.7803, 0.81 ) }
    dend_6 { pt3dadd( -29.0259, 0.673345, -20.1329, 0.51 ) }
    dend_6 { pt3dadd( -29.8012, 0.16916, -20.9393, 0.51 ) }
    dend_6 { pt3dadd( -30.3369, -0.135876, -21.4489, 0.51 ) }
    dend_6 { pt3dadd( -31.2162, -0.546819, -22.2153, 0.95 ) }
    dend_6 { pt3dadd( -32.2529, -0.877098, -22.975, 1.4 ) }
    dend_6 { pt3dadd( -32.993, -0.99275, -23.4341, 1.4 ) }
    dend_6 { pt3dadd( -34.0679, -0.98765, -23.9922, 1.03 ) }
    dend_6 { pt3dadd( -34.8004, -0.923315, -24.3216, 0.22 ) }
    dend_6 { pt3dadd( -35.3322, -0.848395, -24.5237, 0.37 ) }
    dend_6 { pt3dadd( -35.8165, -0.761629, -24.6609, 0.37 ) }
    dend_6 { pt3dadd( -36.5382, -0.606592, -24.8253, 0.37 ) }
    dend_6 { pt3dadd( -37.9404, -0.264537, -25.1796, 0.22 ) }
    dend_6 { pt3dadd( -38.4715, -0.124449, -25.3264, 0.66 ) }
    dend_6 { pt3dadd( -38.9645, 0.0048623, -25.4778, 0.66 ) }
    dend_6 { pt3dadd( -39.5718, 0.174359, -25.6711, 0.59 ) }
    dend_6 { pt3dadd( -40.7763, 0.547563, -26.0569, 1.1 ) }
    dend_6 { pt3dadd( -41.9566, 0.95636, -26.4249, 0.73 ) }
    dend_6 { pt3dadd( -43.0961, 1.38743, -26.805, 0.73 ) }
    dend_6 { pt3dadd( -44.4629, 1.94722, -27.2549, 1.25 ) }
    dend_6 { pt3dadd( -44.8264, 2.11227, -27.3898, 1.4 ) }
    dend_6 { pt3dadd( -45.8421, 2.63642, -27.794, 0.88 ) }
    dend_6 { pt3dadd( -46.2917, 2.88371, -27.9748, 0.95 ) }
    dend_6 { pt3dadd( -47.1052, 3.31884, -28.3035, 0.81 ) }
    dend_6 { pt3dadd( -47.499, 3.50456, -28.4813, 0.59 ) }
    dend_6 { pt3dadd( -48.4374, 3.8347, -28.8994, 0.37 ) }
    dend_6 { pt3dadd( -49.1874, 3.99315, -29.2329, 0.15 ) }
    dend_6 { pt3dadd( -49.861, 4.01812, -29.5129, 0.88 ) }
    dend_6 { pt3dadd( -50.6839, 3.95016, -29.8159, 0.88 ) }
    dend_6 { pt3dadd( -51.478, 3.8096, -30.0601, 0.37 ) }
    dend_6 { pt3dadd( -52.1539, 3.63032, -30.2411, 0.37 ) }
    dend_6 { pt3dadd( -52.6963, 3.43257, -30.3479, 0.37 ) }
    dend_6 { pt3dadd( -53.3251, 3.16953, -30.4822, 0.22 ) }
    dend_6 { pt3dadd( -53.7737, 2.9835, -30.5724, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -54.1064, 2.85728, -30.6259, 0.22 ) }
    dend_6 { pt3dadd( -54.7612, 2.62705, -30.7422, 0.44 ) }
    dend_6 { pt3dadd( -55.8515, 2.2674, -30.9949, 1.1 ) }
    dend_6 { pt3dadd( -56.7494, 1.97577, -31.2292, 1.1 ) }
    dend_6 { pt3dadd( -57.6364, 1.67326, -31.5111, 0.66 ) }
    dend_6 { pt3dadd( -58.7379, 1.25144, -31.9053, 0.29 ) }
    dend_6 { pt3dadd( -59.7343, 0.837612, -32.2852, 0.22 ) }
    dend_6 { pt3dadd( -60.5384, 0.489722, -32.6412, 0.59 ) }
    dend_6 { pt3dadd( -61.0787, 0.239405, -32.8884, 1.03 ) }
    dend_6 { pt3dadd( -62.2039, -0.347746, -33.3956, 0.44 ) }
    dend_6 { pt3dadd( -62.9203, -0.780026, -33.7321, 0.66 ) }
    dend_6 { pt3dadd( -63.4262, -1.1387, -33.962, 0.81 ) }
    dend_6 { pt3dadd( -64.4753, -1.97615, -34.3457, 0.15 ) }
    dend_6 { pt3dadd( -65.2141, -2.60837, -34.5911, 0.66 ) }
    dend_6 { pt3dadd( -65.5161, -2.87155, -34.6854, 0.66 ) }
    dend_6 { pt3dadd( -65.8857, -3.18373, -34.7789, 0.66 ) }
    dend_6 { pt3dadd( -66.4349, -3.6094, -34.919, 0.15 ) }
    dend_6 { pt3dadd( -67.0862, -4.0831, -35.0778, 0.73 ) }
    dend_6 { pt3dadd( -68.3728, -4.96672, -35.4089, 0.29 ) }
    dend_6 { pt3dadd( -68.757, -5.20538, -35.5281, 0.73 ) }
    dend_6 { pt3dadd( -69.2432, -5.47899, -35.6989, 0.73 ) }
    dend_6 { pt3dadd( -70.2645, -6.01596, -36.0846, 0.22 ) }
    dend_6 { pt3dadd( -71.0553, -6.42294, -36.3983, 0.22 ) }
    dend_6 { pt3dadd( -71.7688, -6.7869, -36.7086, 0.22 ) }
    dend_6 { pt3dadd( -72.2999, -7.05315, -36.9849, 0.51 ) }
    dend_6 { pt3dadd( -73.0399, -7.43253, -37.3282, 0.88 ) }
    dend_6 { pt3dadd( -73.4214, -7.64359, -37.5018, 0.95 ) }
    dend_6 { pt3dadd( -73.8312, -7.89193, -37.6963, 0.95 ) }
    dend_6 { pt3dadd( -74.8595, -8.54527, -38.1812, 0.15 ) }
    dend_6 { pt3dadd( -76.4305, -9.56767, -38.9206, 0.15 ) }
    dend_6 { pt3dadd( -78.0987, -10.6387, -39.7009, 0.37 ) }
    dend_6 { pt3dadd( -78.9566, -11.1582, -40.0943, 1.1 ) }
    dend_6 { pt3dadd( -80.0136, -11.7244, -40.5743, 0.66 ) }
    dend_6 { pt3dadd( -80.3223, -11.8667, -40.7221, 0.22 ) }
    dend_6 { pt3dadd( -81.1247, -12.1617, -41.1029, 0.22 ) }
    dend_6 { pt3dadd( -81.5781, -12.2672, -41.3558, 0.81 ) }
    dend_6 { pt3dadd( -82.5877, -12.3664, -41.9998, 0.15 ) }
    dend_6 { pt3dadd( -83.5599, -12.3601, -42.5603, 0.15 ) }
    dend_6 { pt3dadd( -84.4365, -12.2889, -43.022, 0.15 ) }
    dend_6 { pt3dadd( -85.1602, -12.1954, -43.3845, 0.66 ) }
    dend_6 { pt3dadd( -86.5018, -11.9326, -44.0438, 0.37 ) }
    dend_6 { pt3dadd( -87.3084, -11.7093, -44.4401, 0.59 ) }
    dend_6 { pt3dadd( -87.693, -11.5675, -44.6242, 0.22 ) }
    dend_6 { pt3dadd( -88.2015, -11.3607, -44.8571, 0.37 ) }
    dend_6 { pt3dadd( -88.6052, -11.19, -45.0293, 0.15 ) }
    dend_6 { pt3dadd( -89.6497, -10.7673, -45.4663, 0.15 ) }
    dend_6 { pt3dadd( -90.4394, -10.46, -45.7605, 0.88 ) }
    dend_6 { pt3dadd( -91.553, -10.0601, -46.1731, 0.15 ) }
    dend_6 { pt3dadd( -92.2916, -9.8108, -46.4302, 0.15 ) }
    dend_6 { pt3dadd( -93.2015, -9.54973, -46.7087, 0.73 ) }
    dend_6 { pt3dadd( -93.8556, -9.40254, -46.8906, 0.51 ) }
    dend_6 { pt3dadd( -94.5253, -9.30392, -47.0388, 0.37 ) }
    dend_6 { pt3dadd( -95.3418, -9.23027, -47.198, 0.07 ) }
    dend_6 { pt3dadd( -95.9125, -9.17993, -47.2871, 0.22 ) }
    dend_6 { pt3dadd( -96.78, -9.08673, -47.4072, 0.44 ) }
    dend_6 { pt3dadd( -97.7615, -8.96902, -47.5349, 0.88 ) }
    dend_6 { pt3dadd( -98.8527, -8.81782, -47.693, 1.03 ) }
    dend_6 { pt3dadd( -99.883, -8.69087, -47.8499, 0.44 ) }
    dend_6 { pt3dadd( -100.645, -8.63066, -47.9817, 0.29 ) }
    dend_6 { pt3dadd( -101.104, -8.61767, -48.0765, 0.29 ) }
    dend_6 { pt3dadd( -101.632, -8.62392, -48.2115, 0.59 ) }
    dend_6 { pt3dadd( -102.266, -8.64767, -48.3986, 0.81 ) }
    dend_6 { pt3dadd( -102.959, -8.68144, -48.6257, 0.81 ) }
    dend_6 { pt3dadd( -104.528, -8.78326, -49.1981, 0.07 ) }
    dend_6 { pt3dadd( -105.405, -8.83579, -49.5254, 0.88 ) }
    dend_6 { pt3dadd( -106.674, -8.87145, -49.9875, 0.44 ) }
    dend_6 { pt3dadd( -108.414, -8.86509, -50.5604, 0.29 ) }
    dend_6 { pt3dadd( -109.394, -8.81931, -50.8499, 0.59 ) }
    dend_6 { pt3dadd( -110.071, -8.76056, -51.0294, 0.88 ) }
    dend_6 { pt3dadd( -110.909, -8.65477, -51.2043, 0.59 ) }
    dend_6 { pt3dadd( -111.833, -8.52327, -51.341, 0.29 ) }
    dend_6 { pt3dadd( -112.689, -8.40714, -51.4187, 0.22 ) }
    dend_6 { pt3dadd( -113.779, -8.26872, -51.4787, 0.59 ) }
    dend_6 { pt3dadd( -114.72, -8.16034, -51.5167, 0.22 ) }
    dend_6 { pt3dadd( -115.518, -8.0867, -51.5278, 0.22 ) }
    dend_6 { pt3dadd( -116.421, -8.04371, -51.5559, 0.22 ) }
    dend_6 { pt3dadd( -117.432, -8.03563, -51.6197, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.9688, 10.0408, -3.17085, 0.37 ) }
    dend_5 { pt3dadd( -17.6719, 10.467, -3.689, 0.37 ) }
    dend_5 { pt3dadd( -17.4939, 10.7575, -4.02616, 0.37 ) }
    dend_5 { pt3dadd( -17.3012, 11.1684, -4.49472, 0.37 ) }
    dend_5 { pt3dadd( -17.1671, 11.734, -5.18395, 0.37 ) }
    dend_5 { pt3dadd( -17.4039, 12.2434, -5.99197, 0.37 ) }
    dend_5 { pt3dadd( -17.4039, 12.2434, -5.99197, 0.44 ) }
    dend_5 { pt3dadd( -17.8667, 12.3637, -6.30753, 0.44 ) }
    dend_5 { pt3dadd( -18.5695, 12.4984, -6.66581, 0.44 ) }
    dend_5 { pt3dadd( -19.3637, 12.6625, -6.97308, 0.44 ) }
    dend_5 { pt3dadd( -20.6147, 12.9646, -7.35699, 0.44 ) }
    dend_5 { pt3dadd( -21.5853, 13.2552, -7.61274, 0.73 ) }
    dend_5 { pt3dadd( -22.3335, 13.5422, -7.78993, 0.66 ) }
    dend_5 { pt3dadd( -22.8757, 13.8029, -7.89751, 0.66 ) }
    dend_5 { pt3dadd( -23.7912, 14.3564, -7.9891, 0.22 ) }
    dend_5 { pt3dadd( -24.3263, 14.7213, -7.99136, 0.22 ) }
    dend_5 { pt3dadd( -25.0019, 15.2183, -7.95147, 0.66 ) }
    dend_5 { pt3dadd( -25.7673, 15.8022, -7.89672, 0.73 ) }
    dend_5 { pt3dadd( -26.6334, 16.4501, -7.84025, 0.81 ) }
    dend_5 { pt3dadd( -28.0674, 17.4508, -7.75443, 0.59 ) }
    dend_5 { pt3dadd( -29.0709, 18.0558, -7.703, 0.59 ) }
    dend_5 { pt3dadd( -30.1202, 18.5851, -7.66846, 0.81 ) }
    dend_5 { pt3dadd( -30.6386, 18.801, -7.6599, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_5 { pt3dadd( -31.5214, 19.1092, -7.70268, 0.73 ) }
    dend_5 { pt3dadd( -32.0076, 19.2503, -7.75979, 1.03 ) }
    dend_5 { pt3dadd( -33.5484, 19.6563, -8.02279, 0.37 ) }
    dend_5 { pt3dadd( -34.3663, 19.8736, -8.16603, 0.73 ) }
    dend_5 { pt3dadd( -35.0088, 20.0458, -8.2808, 0.88 ) }
    dend_5 { pt3dadd( -36.1574, 20.3817, -8.44568, 0.44 ) }
    dend_5 { pt3dadd( -37.3061, 20.7664, -8.54356, 1.18 ) }
    dend_5 { pt3dadd( -38.2445, 21.143, -8.54621, 0.59 ) }
    dend_5 { pt3dadd( -39.2369, 21.6189, -8.41483, 0.37 ) }
    dend_5 { pt3dadd( -39.5921, 21.8038, -8.32279, 0.37 ) }
    dend_5 { pt3dadd( -40.2642, 22.1462, -8.08503, 0.37 ) }
    dend_5 { pt3dadd( -41.0089, 22.5181, -7.71961, 0.59 ) }
    dend_5 { pt3dadd( -41.7787, 22.9116, -7.31223, 0.59 ) }
    dend_5 { pt3dadd( -42.4338, 23.2537, -6.98846, 0.29 ) }
    dend_5 { pt3dadd( -43.1539, 23.6708, -6.65883, 0.29 ) }
    dend_5 { pt3dadd( -43.753, 24.0336, -6.4289, 0.59 ) }
    dend_5 { pt3dadd( -44.5889, 24.5589, -6.1874, 0.59 ) }
    dend_5 { pt3dadd( -45.5769, 25.1878, -5.9685, 0.22 ) }
    dend_5 { pt3dadd( -46.5999, 25.8683, -5.87782, 0.22 ) }
    dend_5 { pt3dadd( -47.3139, 26.3701, -5.90825, 0.22 ) }
    dend_5 { pt3dadd( -48.0339, 26.9054, -6.02676, 0.51 ) }
    dend_5 { pt3dadd( -48.665, 27.3971, -6.209, 0.51 ) }
    dend_5 { pt3dadd( -49.2824, 27.9064, -6.47953, 0.66 ) }
    dend_5 { pt3dadd( -50.3842, 28.8541, -7.08717, 0.66 ) }
    dend_5 { pt3dadd( -50.8463, 29.2698, -7.41095, 0.66 ) }
    dend_5 { pt3dadd( -51.2311, 29.6315, -7.74443, 0.44 ) }
    dend_5 { pt3dadd( -51.4265, 29.842, -7.96534, 0.44 ) }
    dend_5 { pt3dadd( -51.6875, 30.1622, -8.34678, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 28/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -15.6409, 16.6909, -4.30543, 0.66 ) }
    dend_3 { pt3dadd( -14.6522, 16.6902, -2.74243, 0.66 ) }
    dend_3 { pt3dadd( -14.4027, 16.5998, -2.28679, 0.66 ) }
    dend_3 { pt3dadd( -14.0594, 16.0692, -1.3173, 0.66 ) }
    dend_3 { pt3dadd( -14.031, 15.9297, -1.14958, 0.66 ) }
    dend_3 { pt3dadd( -14.0757, 15.3914, -0.691472, 0.66 ) }
    dend_3 { pt3dadd( -14.1283, 14.7593, -0.153496, 0.44 ) }
    dend_3 { pt3dadd( -14.2729, 14.0398, 0.277315, 0.29 ) }
    dend_3 { pt3dadd( -14.4841, 13.3119, 0.670486, 0.07 ) }
    dend_3 { pt3dadd( -14.6367, 12.9138, 0.850961, 0.07 ) }
    dend_3 { pt3dadd( -15.1616, 11.7376, 1.40596, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 39/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.6409, 16.6909, -4.30543, 0.59 ) }
    dend_2 { pt3dadd( -15.8545, 17.7974, -4.38818, 0.59 ) }
    dend_2 { pt3dadd( -15.9585, 18.5844, -4.55072, 0.59 ) }
    dend_2 { pt3dadd( -16.0137, 19.0752, -4.59566, 0.59 ) }
    dend_2 { pt3dadd( -16.1428, 19.9898, -4.61978, 0.95 ) }
    dend_2 { pt3dadd( -16.2704, 20.7285, -4.61388, 0.95 ) }
    dend_2 { pt3dadd( -16.5058, 22.0495, -4.57981, 0.59 ) }
    dend_2 { pt3dadd( -16.6153, 22.8264, -4.54759, 0.59 ) }
    dend_2 { pt3dadd( -16.941, 24.3418, -4.46546, 0.59 ) }
    dend_2 { pt3dadd( -17.2613, 25.2526, -4.37206, 0.44 ) }
    dend_2 { pt3dadd( -17.6185, 25.9266, -4.27204, 0.81 ) }
    dend_2 { pt3dadd( -17.9433, 26.3936, -4.15801, 1.1 ) }
    dend_2 { pt3dadd( -18.3253, 26.8614, -4.01926, 1.1 ) }
    dend_2 { pt3dadd( -19.2556, 27.9057, -3.71771, 0.66 ) }
    dend_2 { pt3dadd( -19.9663, 28.6399, -3.5361, 0.66 ) }
    dend_2 { pt3dadd( -21.1902, 29.8667, -3.2176, 0.73 ) }
    dend_2 { pt3dadd( -22.4109, 31.1332, -2.89002, 0.73 ) }
    dend_2 { pt3dadd( -23.0161, 31.8033, -2.72405, 0.73 ) }
    dend_2 { pt3dadd( -23.7961, 32.7839, -2.47124, 0.73 ) }
    dend_2 { pt3dadd( -24.5908, 34.0006, -2.14754, 0.73 ) }
    dend_2 { pt3dadd( -24.8192, 34.4155, -2.01678, 0.73 ) }
    dend_2 { pt3dadd( -25.3984, 35.6646, -1.58463, 0.73 ) }
    dend_2 { pt3dadd( -25.6547, 36.2765, -1.37411, 0.73 ) }
    dend_2 { pt3dadd( -26.0743, 37.2775, -1.00695, 0.73 ) }
    dend_2 { pt3dadd( -26.4445, 38.1434, -0.689757, 0.73 ) }
    dend_2 { pt3dadd( -26.9286, 39.2888, -0.256296, 0.73 ) }
    dend_2 { pt3dadd( -27.3238, 40.1581, 0.0643521, 0.73 ) }
    dend_2 { pt3dadd( -28.1397, 41.7966, 0.631653, 0.51 ) }
    dend_2 { pt3dadd( -28.5063, 42.4824, 0.838005, 0.73 ) }
    dend_2 { pt3dadd( -28.9928, 43.3563, 1.04327, 0.44 ) }
    dend_2 { pt3dadd( -29.4411, 44.2126, 1.19672, 0.44 ) }
    dend_2 { pt3dadd( -29.8995, 45.1986, 1.27834, 0.59 ) }
    dend_2 { pt3dadd( -30.1555, 45.8333, 1.30399, 0.59 ) }
    dend_2 { pt3dadd( -30.5013, 46.8307, 1.30341, 0.59 ) }
    dend_2 { pt3dadd( -30.7454, 47.5463, 1.28646, 0.59 ) }
    dend_2 { pt3dadd( -31.349, 49.1362, 1.21506, 0.29 ) }
    dend_2 { pt3dadd( -31.8475, 50.3876, 1.13522, 0.29 ) }
    dend_2 { pt3dadd( -32.3589, 51.6957, 1.05466, 0.29 ) }
    dend_2 { pt3dadd( -32.651, 52.4958, 1.00889, 0.29 ) }
    dend_2 { pt3dadd( -33.0286, 53.6609, 0.949619, 0.29 ) }
    dend_2 { pt3dadd( -33.5355, 55.2336, 0.877967, 0.29 ) }
    dend_2 { pt3dadd( -33.8797, 56.2385, 0.845681, 0.29 ) }
    dend_2 { pt3dadd( -34.1113, 56.8961, 0.845681, 0.29 ) }
    dend_2 { pt3dadd( -34.3371, 57.5265, 0.845681, 0.29 ) }
    dend_2 { pt3dadd( -34.572, 58.2736, 0.845681, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.33137, -17.3827, -0.184014, 0.66 ) }
    dend_29 { pt3dadd( -3.41576, -18.0942, -0.0495921, 0.66 ) }
    dend_29 { pt3dadd( -3.51273, -18.9118, 0.104904, 0.81 ) }
    dend_29 { pt3dadd( -3.60997, -19.7316, 0.25979, 0.81 ) }
    dend_29 { pt3dadd( -3.6995, -20.4864, 0.402414, 1.18 ) }
    dend_29 { pt3dadd( -3.8239, -21.5353, 0.600591, 1.32 ) }
    dend_29 { pt3dadd( -3.967, -22.7417, 0.828545, 1.69 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -3.33137, -17.3827, -0.184014, 0.88 ) }
    dend_26 { pt3dadd( -2.21569, -18.3079, -0.524764, 0.88 ) }
    dend_26 { pt3dadd( -0.938885, -19.3667, -0.914726, 0.88 ) }
    dend_26 { pt3dadd( -0.174321, -20.0008, -1.14824, 0.88 ) }
    dend_26 { pt3dadd( 0.595549, -20.6392, -1.38337, 0.88 ) }
    dend_26 { pt3dadd( 1.16674, -21.1129, -1.55782, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 97/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -117.432, -8.03563, -51.6197, 0.29 ) }
    dend_8 { pt3dadd( -117.097, -8.07307, -52.2081, 0.29 ) }
    dend_8 { pt3dadd( -116.577, -8.13127, -53.1228, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_8 { pt3dadd( -115.947, -8.20174, -54.2302, 0.15 ) }
    dend_8 { pt3dadd( -115.248, -8.28001, -55.4603, 0.22 ) }
    dend_8 { pt3dadd( -114.912, -8.31764, -56.0517, 0.22 ) }
    dend_8 { pt3dadd( -114.532, -8.3601, -56.719, 0.51 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 4/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -117.432, -8.03563, -51.6197, 0.22 ) }
    dend_7 { pt3dadd( -118.388, -8.09571, -51.712, 0.22 ) }
    dend_7 { pt3dadd( -118.766, -8.09493, -51.7738, 0.59 ) }
    dend_7 { pt3dadd( -119.544, -8.04215, -51.9149, 0.59 ) }
    dend_7 { pt3dadd( -121.171, -7.84839, -52.2178, 0.15 ) }
    dend_7 { pt3dadd( -121.842, -7.74429, -52.3397, 0.15 ) }
    dend_7 { pt3dadd( -123.251, -7.50271, -52.5815, 0.95 ) }
    dend_7 { pt3dadd( -124.551, -7.21648, -52.8014, 0.29 ) }
    dend_7 { pt3dadd( -125.482, -6.95473, -52.961, 0.29 ) }
    dend_7 { pt3dadd( -126.01, -6.75927, -53.0464, 0.29 ) }
    dend_7 { pt3dadd( -126.783, -6.42303, -53.1827, 0.29 ) }
    dend_7 { pt3dadd( -127.654, -6.04302, -53.3293, 0.22 ) }
    dend_7 { pt3dadd( -128.709, -5.59043, -53.4806, 0.22 ) }
    dend_7 { pt3dadd( -129.525, -5.24815, -53.6273, 0.22 ) }
    dend_7 { pt3dadd( -131.045, -4.64066, -53.9519, 0.59 ) }
    dend_7 { pt3dadd( -132.345, -4.1498, -54.2598, 0.22 ) }
    dend_7 { pt3dadd( -133.029, -3.90588, -54.4324, 0.22 ) }
    dend_7 { pt3dadd( -133.878, -3.62212, -54.6719, 0.59 ) }
    dend_7 { pt3dadd( -135.478, -3.14921, -55.1348, 0.15 ) }
    dend_7 { pt3dadd( -135.961, -3.01688, -55.2727, 0.73 ) }
    dend_7 { pt3dadd( -136.35, -2.90692, -55.3869, 0.29 ) }
    dend_7 { pt3dadd( -137.248, -2.6297, -55.6297, 0.44 ) }
    dend_7 { pt3dadd( -138.343, -2.2837, -55.9165, 0.15 ) }
    dend_7 { pt3dadd( -139.408, -1.94675, -56.1716, 0.15 ) }
    dend_7 { pt3dadd( -140.207, -1.70434, -56.3528, 0.15 ) }
    dend_7 { pt3dadd( -140.923, -1.48544, -56.5471, 0.15 ) }
    dend_7 { pt3dadd( -141.399, -1.33548, -56.6883, 0.15 ) }
    dend_7 { pt3dadd( -142.218, -1.09385, -56.9396, 0.15 ) }
    dend_7 { pt3dadd( -142.613, -0.99005, -57.0533, 0.29 ) }
    dend_7 { pt3dadd( -143.827, -0.686912, -57.4024, 0.07 ) }
    dend_7 { pt3dadd( -144.718, -0.426511, -57.6204, 0.07 ) }
    dend_7 { pt3dadd( -145.366, -0.213553, -57.7739, 0.59 ) }
    dend_7 { pt3dadd( -146.033, 0.0239585, -57.9327, 0.15 ) }
    dend_7 { pt3dadd( -146.693, 0.27817, -58.0844, 0.66 ) }
    dend_7 { pt3dadd( -147.403, 0.56898, -58.224, 0.66 ) }
    dend_7 { pt3dadd( -149.105, 1.35709, -58.4234, 0.15 ) }
    dend_7 { pt3dadd( -149.811, 1.71543, -58.4747, 0.59 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 41/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.967, -22.7417, 0.828545, 0.81 ) }
    dend_31 { pt3dadd( -4.48633, -23.5617, 1.46977, 0.81 ) }
    dend_31 { pt3dadd( -5.1165, -24.4914, 2.08591, 0.81 ) }
    dend_31 { pt3dadd( -5.66053, -25.2987, 2.50589, 0.81 ) }
    dend_31 { pt3dadd( -6.05649, -25.9518, 2.77125, 0.81 ) }
    dend_31 { pt3dadd( -6.51272, -26.7669, 3.03077, 0.95 ) }
    dend_31 { pt3dadd( -6.95535, -27.5987, 3.23953, 1.18 ) }
    dend_31 { pt3dadd( -7.47933, -28.6245, 3.36675, 0.66 ) }
    dend_31 { pt3dadd( -7.96776, -29.5785, 3.36426, 1.25 ) }
    dend_31 { pt3dadd( -8.48834, -30.5719, 3.24741, 0.44 ) }
    dend_31 { pt3dadd( -8.95927, -31.4539, 3.071, 0.66 ) }
    dend_31 { pt3dadd( -9.40361, -32.3121, 2.85309, 0.66 ) }
    dend_31 { pt3dadd( -9.78168, -33.0654, 2.6313, 0.73 ) }
    dend_31 { pt3dadd( -10.2053, -33.8749, 2.3623, 0.88 ) }
    dend_31 { pt3dadd( -10.8161, -34.9183, 2.01089, 0.95 ) }
    dend_31 { pt3dadd( -11.1832, -35.4368, 1.83825, 0.37 ) }
    dend_31 { pt3dadd( -11.5759, -35.9239, 1.69327, 0.37 ) }
    dend_31 { pt3dadd( -12.0457, -36.4464, 1.56189, 0.37 ) }
    dend_31 { pt3dadd( -12.7405, -37.126, 1.41772, 0.29 ) }
    dend_31 { pt3dadd( -13.4813, -37.8023, 1.29372, 0.95 ) }
    dend_31 { pt3dadd( -14.6232, -38.7807, 1.15106, 0.95 ) }
    dend_31 { pt3dadd( -15.5352, -39.5434, 1.03995, 0.44 ) }
    dend_31 { pt3dadd( -15.945, -39.8757, 0.994288, 0.66 ) }
    dend_31 { pt3dadd( -17.3809, -41.0478, 0.859514, 0.37 ) }
    dend_31 { pt3dadd( -17.6011, -41.2346, 0.835817, 0.37 ) }
    dend_31 { pt3dadd( -17.8751, -41.4706, 0.804033, 0.37 ) }
    dend_31 { pt3dadd( -18.2663, -41.7824, 0.81865, 0.37 ) }
    dend_31 { pt3dadd( -18.7258, -42.098, 0.899821, 0.37 ) }
    dend_31 { pt3dadd( -19.3249, -42.4521, 1.05964, 0.59 ) }
    dend_31 { pt3dadd( -20.074, -42.8576, 1.31179, 1.1 ) }
    dend_31 { pt3dadd( -20.7075, -43.1713, 1.53109, 1.1 ) }
    dend_31 { pt3dadd( -22.7473, -44.08, 2.26186, 0.29 ) }
    dend_31 { pt3dadd( -23.4411, -44.3552, 2.52401, 0.66 ) }
    dend_31 { pt3dadd( -24.0432, -44.5728, 2.77351, 0.95 ) }
    dend_31 { pt3dadd( -24.7341, -44.7975, 3.09278, 1.1 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 76/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.967, -22.7417, 0.828545, 0.88 ) }
    dend_30 { pt3dadd( -3.18963, -23.9393, 0.266591, 0.88 ) }
    dend_30 { pt3dadd( -2.64693, -24.9049, -0.11242, 0.73 ) }
    dend_30 { pt3dadd( -2.2729, -25.7171, -0.36993, 0.66 ) }
    dend_30 { pt3dadd( -1.88131, -26.8698, -0.680046, 0.88 ) }
    dend_30 { pt3dadd( -1.73009, -27.4642, -0.819385, 1.03 ) }
    dend_30 { pt3dadd( -1.6114, -28.0708, -0.946951, 0.81 ) }
    dend_30 { pt3dadd( -1.5469, -29.0445, -1.05249, 0.73 ) }
    dend_30 { pt3dadd( -1.57923, -30.1765, -1.0655, 0.51 ) }
    dend_30 { pt3dadd( -1.70786, -31.3164, -1.02454, 0.88 ) }
    dend_30 { pt3dadd( -1.83525, -31.9612, -0.994642, 0.51 ) }
    dend_30 { pt3dadd( -1.96205, -32.3964, -0.985565, 0.88 ) }
    dend_30 { pt3dadd( -2.33054, -33.3896, -0.999568, 0.95 ) }
    dend_30 { pt3dadd( -2.66434, -34.1744, -1.06774, 0.51 ) }
    dend_30 { pt3dadd( -3.12929, -35.2379, -1.29051, 0.66 ) }
    dend_30 { pt3dadd( -3.35405, -35.7709, -1.45069, 0.66 ) }
    dend_30 { pt3dadd( -3.78133, -36.7167, -1.80626, 0.66 ) }
    dend_30 { pt3dadd( -4.1143, -37.3982, -2.09423, 0.88 ) }
    dend_30 { pt3dadd( -4.53747, -38.2121, -2.48808, 0.88 ) }
    dend_30 { pt3dadd( -5.14382, -39.352, -3.04499, 0.81 ) }
    dend_30 { pt3dadd( -5.42251, -39.8504, -3.27204, 0.81 ) }
    dend_30 { pt3dadd( -5.84993, -40.5617, -3.55981, 0.81 ) }
    dend_30 { pt3dadd( -6.38717, -41.3658, -3.83828, 1.03 ) }
    dend_30 { pt3dadd( -7.0441, -42.1633, -4.06189, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -7.73464, -42.8602, -4.21908, 1.03 ) }
    dend_30 { pt3dadd( -8.56406, -43.6068, -4.36976, 0.73 ) }
    dend_30 { pt3dadd( -9.36067, -44.2869, -4.55856, 0.59 ) }
    dend_30 { pt3dadd( -10.1699, -44.9487, -4.81787, 0.73 ) }
    dend_30 { pt3dadd( -11.0847, -45.6677, -5.17054, 0.44 ) }
    dend_30 { pt3dadd( -11.6792, -46.1421, -5.45772, 0.59 ) }
    dend_30 { pt3dadd( -12.2735, -46.6524, -5.83, 1.03 ) }
    dend_30 { pt3dadd( -13.2256, -47.5767, -6.57733, 1.03 ) }
    dend_30 { pt3dadd( -13.8482, -48.2421, -7.14154, 1.18 ) }
    dend_30 { pt3dadd( -14.0583, -48.4979, -7.34684, 1.03 ) }
    dend_30 { pt3dadd( -14.6566, -49.3203, -7.9656, 1.03 ) }
    dend_30 { pt3dadd( -15.3997, -50.4036, -8.68618, 0.44 ) }
    dend_30 { pt3dadd( -15.7325, -50.9201, -8.96973, 0.95 ) }
    dend_30 { pt3dadd( -15.9955, -51.3724, -9.17105, 0.95 ) }
    dend_30 { pt3dadd( -16.4688, -52.2739, -9.53075, 0.22 ) }
    dend_30 { pt3dadd( -16.9688, -53.3803, -10.0003, 1.25 ) }
    dend_30 { pt3dadd( -17.1364, -53.9061, -10.2443, 1.25 ) }
    dend_30 { pt3dadd( -17.3288, -54.871, -10.785, 0.81 ) }
    dend_30 { pt3dadd( -17.4434, -55.6441, -11.3145, 1.03 ) }
    dend_30 { pt3dadd( -17.4939, -56.0868, -11.6612, 1.03 ) }
    dend_30 { pt3dadd( -17.5739, -57.0048, -12.4908, 1.18 ) }
    dend_30 { pt3dadd( -17.6582, -57.9722, -13.4682, 0.44 ) }
    dend_30 { pt3dadd( -17.7299, -58.4559, -14.0432, 0.44 ) }
    dend_30 { pt3dadd( -17.8558, -58.9474, -14.6968, 0.44 ) }
    dend_30 { pt3dadd( -17.985, -59.2434, -15.0926, 0.44 ) }
    dend_30 { pt3dadd( -18.219, -59.589, -15.5237, 0.66 ) }
    dend_30 { pt3dadd( -18.8185, -60.245, -16.2661, 0.88 ) }
    dend_30 { pt3dadd( -19.4046, -60.8301, -16.8413, 0.81 ) }
    dend_30 { pt3dadd( -19.9047, -61.3852, -17.2922, 0.81 ) }
    dend_30 { pt3dadd( -20.3209, -61.8943, -17.6337, 0.59 ) }
    dend_30 { pt3dadd( -20.9279, -62.6882, -18.0733, 0.66 ) }
    dend_30 { pt3dadd( -21.5935, -63.6059, -18.4641, 0.81 ) }
    dend_30 { pt3dadd( -21.9129, -64.0953, -18.6336, 0.88 ) }
    dend_30 { pt3dadd( -22.2765, -64.7537, -18.851, 0.95 ) }
    dend_30 { pt3dadd( -22.5109, -65.2512, -19.021, 1.03 ) }
    dend_30 { pt3dadd( -23.1666, -66.9309, -19.6103, 0.37 ) }
    dend_30 { pt3dadd( -23.387, -67.637, -19.85, 0.59 ) }
    dend_30 { pt3dadd( -23.5657, -68.3228, -20.0938, 0.59 ) }
    dend_30 { pt3dadd( -23.7981, -69.2789, -20.4866, 0.37 ) }
    dend_30 { pt3dadd( -23.876, -69.5925, -20.6315, 0.37 ) }
    dend_30 { pt3dadd( -24.0736, -70.3119, -20.9738, 0.66 ) }
    dend_30 { pt3dadd( -24.3483, -71.11, -21.3532, 0.51 ) }
    dend_30 { pt3dadd( -24.7238, -71.9383, -21.7297, 1.03 ) }
    dend_30 { pt3dadd( -25.1552, -72.7306, -22.0551, 1.1 ) }
    dend_30 { pt3dadd( -25.7705, -73.781, -22.4592, 0.51 ) }
    dend_30 { pt3dadd( -26.28, -74.6555, -22.7759, 0.81 ) }
    dend_30 { pt3dadd( -26.832, -75.6501, -23.111, 0.44 ) }
    dend_30 { pt3dadd( -27.2739, -76.4862, -23.3608, 0.95 ) }
    dend_30 { pt3dadd( -27.7925, -77.5614, -23.6228, 0.66 ) }
    dend_30 { pt3dadd( -28.3094, -78.7941, -23.9127, 0.88 ) }
    dend_30 { pt3dadd( -28.6894, -79.8736, -24.1549, 0.88 ) }
    dend_30 { pt3dadd( -29.046, -81.1007, -24.4257, 0.37 ) }
    dend_30 { pt3dadd( -29.185, -81.7003, -24.5655, 0.66 ) }
    dend_30 { pt3dadd( -29.3945, -82.7808, -24.8285, 0.81 ) }
    dend_30 { pt3dadd( -29.5596, -83.8395, -25.1065, 1.03 ) }
    dend_30 { pt3dadd( -29.6962, -85.0092, -25.4321, 0.73 ) }
    dend_30 { pt3dadd( -29.8163, -86.6675, -25.9066, 0.73 ) }
    dend_30 { pt3dadd( -29.8357, -87.6279, -26.2029, 0.44 ) }
    dend_30 { pt3dadd( -29.8217, -88.0082, -26.3248, 0.44 ) }
    dend_30 { pt3dadd( -29.7363, -88.8709, -26.5978, 0.88 ) }
    dend_30 { pt3dadd( -29.6644, -89.4803, -26.8116, 1.03 ) }
    dend_30 { pt3dadd( -29.4967, -90.914, -27.3764, 0.22 ) }
    dend_30 { pt3dadd( -29.4133, -92.0257, -27.8218, 0.66 ) }
    dend_30 { pt3dadd( -29.4097, -92.479, -28.0063, 1.18 ) }
    dend_30 { pt3dadd( -29.4383, -93.0782, -28.2558, 1.03 ) }
    dend_30 { pt3dadd( -29.561, -94.648, -28.9078, 0.15 ) }
    dend_30 { pt3dadd( -29.616, -95.1944, -29.15, 0.81 ) }
    dend_30 { pt3dadd( -29.7115, -95.9366, -29.5064, 0.44 ) }
    dend_30 { pt3dadd( -29.8046, -96.5845, -29.8095, 0.44 ) }
    dend_30 { pt3dadd( -29.9221, -97.5336, -30.2628, 0.88 ) }
    dend_30 { pt3dadd( -30.0205, -98.6581, -30.8062, 0.29 ) }
    dend_30 { pt3dadd( -30.0655, -99.4122, -31.1497, 0.88 ) }
    dend_30 { pt3dadd( -30.116, -100.127, -31.4814, 0.88 ) }
    dend_30 { pt3dadd( -30.1872, -101.037, -31.8911, 0.88 ) }
    dend_30 { pt3dadd( -30.2739, -101.963, -32.2709, 0.37 ) }
    dend_30 { pt3dadd( -30.352, -102.748, -32.56, 0.29 ) }
    dend_30 { pt3dadd( -30.4, -103.281, -32.7547, 0.44 ) }
    dend_30 { pt3dadd( -30.4413, -103.91, -32.9829, 0.88 ) }
    dend_30 { pt3dadd( -30.4842, -104.562, -33.2274, 0.44 ) }
    dend_30 { pt3dadd( -30.572, -105.502, -33.6115, 1.25 ) }
    dend_30 { pt3dadd( -30.8112, -107.055, -34.3215, 0.44 ) }
    dend_30 { pt3dadd( -31.089, -108.278, -34.9625, 0.29 ) }
    dend_30 { pt3dadd( -31.209, -108.669, -35.1983, 0.51 ) }
    dend_30 { pt3dadd( -31.4583, -109.232, -35.6197, 0.73 ) }
    dend_30 { pt3dadd( -31.8111, -109.845, -36.1763, 1.1 ) }
    dend_30 { pt3dadd( -32.2126, -110.451, -36.8033, 0.81 ) }
    dend_30 { pt3dadd( -32.5075, -110.889, -37.3152, 0.81 ) }
    dend_30 { pt3dadd( -32.6807, -111.206, -37.6747, 1.25 ) }
    dend_30 { pt3dadd( -33.0692, -112.275, -38.8812, 0.44 ) }
    dend_30 { pt3dadd( -33.1771, -112.717, -39.4396, 0.44 ) }
    dend_30 { pt3dadd( -33.2832, -113.214, -40.092, 0.59 ) }
    dend_30 { pt3dadd( -33.4498, -113.96, -41.0884, 0.59 ) }
    dend_30 { pt3dadd( -33.6043, -114.442, -41.7529, 0.37 ) }
    dend_30 { pt3dadd( -33.8524, -114.929, -42.4473, 0.51 ) }
    dend_30 { pt3dadd( -34.4592, -115.74, -43.6295, 0.73 ) }
    dend_30 { pt3dadd( -34.9057, -116.247, -44.3802, 0.95 ) }
    dend_30 { pt3dadd( -35.2593, -116.615, -44.9165, 0.66 ) }
    dend_30 { pt3dadd( -36.0125, -117.378, -45.9443, 0.29 ) }
    dend_30 { pt3dadd( -36.608, -118.03, -46.7455, 0.95 ) }
    dend_30 { pt3dadd( -37.2768, -118.867, -47.6331, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -37.7329, -119.649, -48.3347, 0.66 ) }
    dend_30 { pt3dadd( -37.8756, -120.043, -48.6564, 0.66 ) }
    dend_30 { pt3dadd( -37.943, -120.494, -48.9933, 0.66 ) }
    dend_30 { pt3dadd( -37.8924, -121.5, -49.7169, 0.37 ) }
    dend_30 { pt3dadd( -37.7787, -122.116, -50.1572, 0.37 ) }
    dend_30 { pt3dadd( -37.5013, -123.175, -50.9314, 1.1 ) }
    dend_30 { pt3dadd( -37.2513, -124.132, -51.6325, 0.37 ) }
    dend_30 { pt3dadd( -36.9437, -125.349, -52.5106, 0.59 ) }
    dend_30 { pt3dadd( -36.8275, -126.036, -53.0271, 1.18 ) }
    dend_30 { pt3dadd( -36.7955, -126.392, -53.2872, 1.18 ) }
    dend_30 { pt3dadd( -36.7877, -127.078, -53.8027, 1.18 ) }
    dend_30 { pt3dadd( -36.8354, -127.933, -54.4198, 0.88 ) }
    dend_30 { pt3dadd( -36.8926, -128.634, -54.8967, 0.73 ) }
    dend_30 { pt3dadd( -37.0434, -130.552, -56.0755, 0.29 ) }
    dend_30 { pt3dadd( -37.0842, -131.153, -56.4603, 0.59 ) }
    dend_30 { pt3dadd( -37.1252, -132.039, -57.0472, 0.81 ) }
    dend_30 { pt3dadd( -37.1636, -133.223, -57.8372, 0.44 ) }
    dend_30 { pt3dadd( -37.1983, -133.973, -58.3662, 0.44 ) }
    dend_30 { pt3dadd( -37.2688, -134.784, -58.9424, 0.73 ) }
    dend_30 { pt3dadd( -37.4605, -136.279, -59.9894, 0.88 ) }
    dend_30 { pt3dadd( -37.5547, -136.676, -60.2674, 0.88 ) }
    dend_30 { pt3dadd( -37.688, -137.029, -60.5307, 0.88 ) }
    dend_30 { pt3dadd( -38.178, -138.025, -61.3243, 0.37 ) }
    dend_30 { pt3dadd( -38.3642, -138.354, -61.6151, 0.22 ) }
    dend_30 { pt3dadd( -38.7639, -138.963, -62.1725, 0.22 ) }
    dend_30 { pt3dadd( -39.4432, -139.848, -63.0287, 1.47 ) }
    dend_30 { pt3dadd( -40.5652, -141.206, -64.519, 0.07 ) }
    dend_30 { pt3dadd( -40.6799, -141.345, -64.6815, 0.22 ) }
    dend_30 { pt3dadd( -41.1643, -141.956, -65.4066, 0.22 ) }
    dend_30 { pt3dadd( -41.5432, -142.413, -65.9438, 0.81 ) }
    dend_30 { pt3dadd( -42.1952, -143.153, -66.7641, 0.29 ) }
    dend_30 { pt3dadd( -42.6868, -143.667, -67.3387, 0.29 ) }
    dend_30 { pt3dadd( -43.386, -144.374, -68.0309, 0.59 ) }
    dend_30 { pt3dadd( -44.2888, -145.231, -68.8958, 0.22 ) }
    dend_30 { pt3dadd( -44.8825, -145.78, -69.4311, 0.44 ) }
    dend_30 { pt3dadd( -45.3368, -146.221, -69.8737, 0.07 ) }
    dend_30 { pt3dadd( -45.7067, -146.609, -70.2359, 0.59 ) }
    dend_30 { pt3dadd( -46.0, -146.932, -70.5243, 0.59 ) }
    dend_30 { pt3dadd( -46.8175, -148.054, -71.5068, 0.15 ) }
    dend_30 { pt3dadd( -46.9327, -148.331, -71.7736, 0.44 ) }
    dend_30 { pt3dadd( -47.0717, -149.104, -72.5675, 0.66 ) }
    dend_30 { pt3dadd( -47.0976, -149.766, -73.2335, 0.29 ) }
    dend_30 { pt3dadd( -47.084, -150.222, -73.6901, 0.29 ) }
    dend_30 { pt3dadd( -47.0091, -151.211, -74.6919, 1.1 ) }
    dend_30 { pt3dadd( -46.8146, -152.843, -76.2664, 0.29 ) }
    dend_30 { pt3dadd( -46.7574, -153.407, -76.8486, 0.81 ) }
    dend_30 { pt3dadd( -46.7386, -153.801, -77.2699, 0.81 ) }
    dend_30 { pt3dadd( -46.7763, -154.948, -78.5526, 0.29 ) }
    dend_30 { pt3dadd( -46.8584, -155.575, -79.2456, 0.29 ) }
    dend_30 { pt3dadd( -46.9737, -156.08, -79.758, 0.73 ) }
    dend_30 { pt3dadd( -47.183, -156.848, -80.3834, 0.73 ) }
    dend_30 { pt3dadd( -47.3155, -157.292, -80.6888, 0.73 ) }
    dend_30 { pt3dadd( -47.5727, -157.971, -81.1255, 0.44 ) }
    dend_30 { pt3dadd( -47.7695, -158.362, -81.3007, 0.44 ) }
    dend_30 { pt3dadd( -48.0335, -158.753, -81.49, 0.44 ) }
    dend_30 { pt3dadd( -48.4683, -159.203, -81.7489, 0.44 ) }
    dend_30 { pt3dadd( -49.0921, -159.702, -82.029, 0.44 ) }
    dend_30 { pt3dadd( -50.4707, -160.544, -82.6575, 0.95 ) }
    dend_30 { pt3dadd( -51.2242, -160.945, -83.0314, 0.07 ) }
    dend_30 { pt3dadd( -51.9149, -161.291, -83.368, 0.07 ) }
    dend_30 { pt3dadd( -52.8281, -161.749, -83.7861, 0.88 ) }
    dend_30 { pt3dadd( -53.9559, -162.339, -84.2772, 0.22 ) }
    dend_30 { pt3dadd( -54.8152, -162.839, -84.6295, 0.22 ) }
    dend_30 { pt3dadd( -55.5655, -163.335, -84.8725, 0.22 ) }
    dend_30 { pt3dadd( -56.2159, -163.805, -85.079, 0.22 ) }
    dend_30 { pt3dadd( -56.9911, -164.422, -85.2981, 0.66 ) }
    dend_30 { pt3dadd( -57.4158, -164.8, -85.4402, 1.03 ) }
    dend_30 { pt3dadd( -58.1697, -165.516, -85.7066, 0.07 ) }
    dend_30 { pt3dadd( -58.4895, -165.847, -85.8305, 0.22 ) }
    dend_30 { pt3dadd( -59.1137, -166.508, -86.0908, 0.07 ) }
    dend_30 { pt3dadd( -59.4936, -166.922, -86.2691, 0.37 ) }
    dend_30 { pt3dadd( -60.3058, -167.866, -86.6968, 0.37 ) }
    dend_30 { pt3dadd( -60.5668, -168.198, -86.8452, 1.25 ) }
    dend_30 { pt3dadd( -61.3491, -169.359, -87.3102, 0.44 ) }
    dend_30 { pt3dadd( -61.6809, -169.929, -87.5164, 0.59 ) }
    dend_30 { pt3dadd( -62.1059, -170.744, -87.7683, 0.37 ) }
    dend_30 { pt3dadd( -62.4409, -171.455, -87.9602, 1.03 ) }
    dend_30 { pt3dadd( -62.6049, -171.847, -88.0418, 1.03 ) }
    dend_30 { pt3dadd( -63.0636, -173.003, -88.248, 0.07 ) }
    dend_30 { pt3dadd( -63.5245, -174.179, -88.4177, 0.37 ) }
    dend_30 { pt3dadd( -63.7907, -174.821, -88.5153, 0.22 ) }
    dend_30 { pt3dadd( -64.0759, -175.461, -88.6121, 0.44 ) }
    dend_30 { pt3dadd( -64.6017, -176.487, -88.7594, 0.29 ) }
    dend_30 { pt3dadd( -64.9091, -177.024, -88.8532, 0.29 ) }
    dend_30 { pt3dadd( -65.4569, -177.894, -89.0223, 0.29 ) }
    dend_30 { pt3dadd( -66.2247, -179.026, -89.2409, 0.73 ) }
    dend_30 { pt3dadd( -66.6273, -179.556, -89.3581, 0.29 ) }
    dend_30 { pt3dadd( -66.9875, -179.962, -89.4599, 0.59 ) }
    dend_30 { pt3dadd( -67.9515, -180.852, -89.71, 0.07 ) }
    dend_30 { pt3dadd( -68.6763, -181.4, -89.8721, 0.07 ) }
    dend_30 { pt3dadd( -69.3225, -181.784, -89.9873, 1.32 ) }
    dend_30 { pt3dadd( -70.0387, -182.097, -90.0805, 0.29 ) }
    dend_30 { pt3dadd( -70.6645, -182.29, -90.1385, 0.29 ) }
    dend_30 { pt3dadd( -71.3284, -182.414, -90.1713, 0.51 ) }
    dend_30 { pt3dadd( -72.1357, -182.492, -90.1743, 0.07 ) }
    dend_30 { pt3dadd( -72.647, -182.509, -90.1765, 0.37 ) }
    dend_30 { pt3dadd( -73.323, -182.51, -90.18, 0.07 ) }
    dend_30 { pt3dadd( -74.2054, -182.524, -90.1854, 0.73 ) }
    dend_30 { pt3dadd( -75.2023, -182.527, -90.193, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 1.16674, -21.1129, -1.55782, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( 1.04034, -22.1791, -1.45284, 0.59 ) }
    dend_28 { pt3dadd( 1.03177, -22.9792, -1.38143, 0.59 ) }
    dend_28 { pt3dadd( 1.06626, -23.7089, -1.37208, 0.59 ) }
    dend_28 { pt3dadd( 1.09494, -23.9836, -1.38055, 0.81 ) }
    dend_28 { pt3dadd( 1.20886, -24.6021, -1.41582, 0.51 ) }
    dend_28 { pt3dadd( 1.39717, -25.3004, -1.41887, 0.51 ) }
    dend_28 { pt3dadd( 1.7811, -26.1989, -1.40901, 0.51 ) }
    dend_28 { pt3dadd( 2.13841, -26.8802, -1.36808, 0.51 ) }
    dend_28 { pt3dadd( 2.41158, -27.3695, -1.31675, 0.51 ) }
    dend_28 { pt3dadd( 2.90564, -28.2553, -1.19595, 0.51 ) }
    dend_28 { pt3dadd( 3.53467, -29.398, -1.05597, 0.51 ) }
    dend_28 { pt3dadd( 3.81756, -29.8842, -1.00555, 1.1 ) }
    dend_28 { pt3dadd( 4.40534, -30.8662, -0.92229, 0.07 ) }
    dend_28 { pt3dadd( 4.74292, -31.4262, -0.885848, 0.73 ) }
    dend_28 { pt3dadd( 4.99769, -31.8717, -0.885476, 0.88 ) }
    dend_28 { pt3dadd( 5.43025, -32.6891, -0.946135, 0.88 ) }
    dend_28 { pt3dadd( 6.08984, -33.9203, -1.16248, 0.29 ) }
    dend_28 { pt3dadd( 6.44709, -34.5066, -1.24083, 0.29 ) }
    dend_28 { pt3dadd( 6.77048, -34.9787, -1.28425, 0.29 ) }
    dend_28 { pt3dadd( 7.10954, -35.4439, -1.34229, 0.29 ) }
    dend_28 { pt3dadd( 7.44664, -35.9122, -1.40155, 0.66 ) }
    dend_28 { pt3dadd( 8.24286, -37.0677, -1.53106, 0.66 ) }
    dend_28 { pt3dadd( 9.20208, -38.5538, -1.71379, 0.22 ) }
    dend_28 { pt3dadd( 9.82627, -39.5351, -1.83615, 0.22 ) }
    dend_28 { pt3dadd( 10.6555, -40.871, -2.00869, 0.95 ) }
    dend_28 { pt3dadd( 11.0239, -41.4654, -2.1054, 0.66 ) }
    dend_28 { pt3dadd( 11.3081, -41.9612, -2.1894, 0.66 ) }
    dend_28 { pt3dadd( 11.5759, -42.5252, -2.28744, 0.29 ) }
    dend_28 { pt3dadd( 11.7748, -43.045, -2.39094, 0.29 ) }
    dend_28 { pt3dadd( 12.086, -43.9118, -2.49981, 0.29 ) }
    dend_28 { pt3dadd( 12.3038, -44.5934, -2.52389, 0.29 ) }
    dend_28 { pt3dadd( 12.5816, -45.551, -2.57444, 0.88 ) }
    dend_28 { pt3dadd( 12.6864, -45.9786, -2.60542, 1.1 ) }
    dend_28 { pt3dadd( 12.8182, -46.7324, -2.70548, 1.1 ) }
    dend_28 { pt3dadd( 12.9246, -47.8438, -2.89447, 0.66 ) }
    dend_28 { pt3dadd( 12.9316, -48.6888, -3.05734, 0.44 ) }
    dend_28 { pt3dadd( 12.7449, -50.3818, -3.39582, 0.44 ) }
    dend_28 { pt3dadd( 12.5543, -51.2798, -3.60792, 0.66 ) }
    dend_28 { pt3dadd( 12.1516, -52.5425, -3.93824, 0.59 ) }
    dend_28 { pt3dadd( 11.8312, -53.2256, -4.13429, 1.1 ) }
    dend_28 { pt3dadd( 11.3426, -53.9785, -4.39372, 0.44 ) }
    dend_28 { pt3dadd( 10.6102, -54.8827, -4.74209, 0.22 ) }
    dend_28 { pt3dadd( 10.453, -55.0395, -4.80943, 0.22 ) }
    dend_28 { pt3dadd( 9.72489, -55.7382, -5.17167, 0.73 ) }
    dend_28 { pt3dadd( 9.38352, -56.0765, -5.36032, 0.81 ) }
    dend_28 { pt3dadd( 8.74932, -56.7532, -5.81747, 0.44 ) }
    dend_28 { pt3dadd( 8.35571, -57.1873, -6.12733, 0.59 ) }
    dend_28 { pt3dadd( 7.8004, -57.8426, -6.60456, 0.15 ) }
    dend_28 { pt3dadd( 7.05497, -58.7308, -7.22386, 0.73 ) }
    dend_28 { pt3dadd( 6.71146, -59.1558, -7.49008, 0.88 ) }
    dend_28 { pt3dadd( 5.97186, -60.1243, -7.96357, 0.81 ) }
    dend_28 { pt3dadd( 5.28109, -61.0728, -8.2956, 0.22 ) }
    dend_28 { pt3dadd( 4.87749, -61.6687, -8.44468, 0.66 ) }
    dend_28 { pt3dadd( 4.42393, -62.3753, -8.5428, 0.66 ) }
    dend_28 { pt3dadd( 3.85454, -63.2651, -8.57442, 0.22 ) }
    dend_28 { pt3dadd( 3.13682, -64.472, -8.53926, 0.22 ) }
    dend_28 { pt3dadd( 2.77164, -65.1291, -8.44798, 0.22 ) }
    dend_28 { pt3dadd( 2.4801, -65.6824, -8.33989, 0.22 ) }
    dend_28 { pt3dadd( 2.29647, -66.0426, -8.25303, 0.22 ) }
    dend_28 { pt3dadd( 1.90898, -66.857, -8.0543, 0.88 ) }
    dend_28 { pt3dadd( 1.58094, -67.6596, -7.86311, 0.37 ) }
    dend_28 { pt3dadd( 1.3823, -68.2949, -7.68567, 0.37 ) }
    dend_28 { pt3dadd( 1.17459, -69.0519, -7.44162, 0.37 ) }
    dend_28 { pt3dadd( 1.01819, -69.626, -7.22535, 0.37 ) }
    dend_28 { pt3dadd( 0.793325, -70.5598, -6.85143, 0.66 ) }
    dend_28 { pt3dadd( 0.63748, -71.2959, -6.5488, 1.03 ) }
    dend_28 { pt3dadd( 0.340041, -72.6346, -6.00769, 0.22 ) }
    dend_28 { pt3dadd( 0.154499, -73.5315, -5.67039, 0.51 ) }
    dend_28 { pt3dadd( -0.068638, -74.5077, -5.28077, 0.22 ) }
    dend_28 { pt3dadd( -0.174241, -74.913, -5.12533, 0.22 ) }
    dend_28 { pt3dadd( -0.284655, -75.2953, -4.9829, 0.22 ) }
    dend_28 { pt3dadd( -0.439729, -75.8315, -4.81116, 0.22 ) }
    dend_28 { pt3dadd( -0.644591, -76.5806, -4.626, 0.73 ) }
    dend_28 { pt3dadd( -0.825307, -77.4071, -4.44194, 1.25 ) }
    dend_28 { pt3dadd( -1.01533, -78.514, -4.23701, 0.22 ) }
    dend_28 { pt3dadd( -1.15913, -79.5521, -4.05704, 0.22 ) }
    dend_28 { pt3dadd( -1.24622, -80.4414, -3.91779, 0.51 ) }
    dend_28 { pt3dadd( -1.28525, -81.3896, -3.81297, 0.59 ) }
    dend_28 { pt3dadd( -1.27453, -82.1677, -3.74055, 0.59 ) }
    dend_28 { pt3dadd( -1.21051, -82.8588, -3.69696, 0.59 ) }
    dend_28 { pt3dadd( -1.10225, -83.5805, -3.64746, 0.29 ) }
    dend_28 { pt3dadd( -0.977925, -84.2726, -3.60405, 0.44 ) }
    dend_28 { pt3dadd( -0.783603, -85.442, -3.50627, 0.22 ) }
    dend_28 { pt3dadd( -0.674776, -86.1777, -3.43261, 0.22 ) }
    dend_28 { pt3dadd( -0.548697, -87.3128, -3.30468, 0.37 ) }
    dend_28 { pt3dadd( -0.488089, -88.2398, -3.1979, 0.37 ) }
    dend_28 { pt3dadd( -0.462583, -88.7621, -3.1377, 0.51 ) }
    dend_28 { pt3dadd( -0.438639, -89.4576, -3.05156, 0.51 ) }
    dend_28 { pt3dadd( -0.437999, -90.0949, -2.96846, 0.59 ) }
    dend_28 { pt3dadd( -0.451089, -90.4365, -2.94465, 0.59 ) }
    dend_28 { pt3dadd( -0.601433, -91.6917, -2.88031, 0.15 ) }
    dend_28 { pt3dadd( -0.670212, -92.2389, -2.88031, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 1.16674, -21.1129, -1.55782, 0.73 ) }
    dend_27 { pt3dadd( 2.29803, -21.3329, -2.23952, 0.73 ) }
    dend_27 { pt3dadd( 3.14527, -21.5539, -2.6434, 0.73 ) }
    dend_27 { pt3dadd( 4.10744, -21.8347, -2.95154, 0.59 ) }
    dend_27 { pt3dadd( 4.85336, -22.0341, -3.07119, 0.44 ) }
    dend_27 { pt3dadd( 5.79119, -22.2623, -3.15427, 0.44 ) }
    dend_27 { pt3dadd( 6.68727, -22.4689, -3.23147, 0.51 ) }
    dend_27 { pt3dadd( 7.04471, -22.5549, -3.23715, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_27 { pt3dadd( 8.08928, -22.8141, -3.26866, 0.51 ) }
    dend_27 { pt3dadd( 9.75519, -23.1701, -3.3634, 0.51 ) }
    dend_27 { pt3dadd( 10.4863, -23.2953, -3.46831, 0.81 ) }
    dend_27 { pt3dadd( 11.3831, -23.4247, -3.66684, 0.95 ) }
    dend_27 { pt3dadd( 12.2154, -23.5261, -3.90501, 0.95 ) }
    dend_27 { pt3dadd( 13.5547, -23.6932, -4.34415, 0.95 ) }
    dend_27 { pt3dadd( 14.4703, -23.8699, -4.72841, 0.37 ) }
    dend_27 { pt3dadd( 15.1326, -24.0692, -5.05955, 0.37 ) }
    dend_27 { pt3dadd( 15.5907, -24.2417, -5.28352, 0.29 ) }
    dend_27 { pt3dadd( 16.2123, -24.5196, -5.52458, 0.29 ) }
    dend_27 { pt3dadd( 16.5204, -24.6781, -5.61269, 1.03 ) }
    dend_27 { pt3dadd( 18.0238, -25.5084, -6.00585, 0.66 ) }
    dend_27 { pt3dadd( 18.9812, -26.0218, -6.2859, 0.66 ) }
    dend_27 { pt3dadd( 19.7847, -26.3971, -6.56756, 0.73 ) }
    dend_27 { pt3dadd( 21.0277, -26.8935, -7.1032, 0.66 ) }
    dend_27 { pt3dadd( 22.2322, -27.313, -7.71794, 0.51 ) }
    dend_27 { pt3dadd( 23.1708, -27.6086, -8.22868, 0.37 ) }
    dend_27 { pt3dadd( 24.2456, -27.921, -8.83298, 0.66 ) }
    dend_27 { pt3dadd( 25.5301, -28.333, -9.62718, 0.95 ) }
    dend_27 { pt3dadd( 26.0935, -28.5454, -10.0123, 0.95 ) }
    dend_27 { pt3dadd( 27.1603, -29.0417, -10.7917, 0.59 ) }
    dend_27 { pt3dadd( 27.9855, -29.5557, -11.3648, 0.59 ) }
    dend_27 { pt3dadd( 29.0638, -30.4402, -12.0246, 0.66 ) }
    dend_27 { pt3dadd( 29.7814, -31.1512, -12.4515, 0.73 ) }
    dend_27 { pt3dadd( 30.2135, -31.6327, -12.7226, 0.73 ) }
    dend_27 { pt3dadd( 30.8143, -32.3509, -13.1331, 0.95 ) }
    dend_27 { pt3dadd( 31.5866, -33.3602, -13.7284, 0.73 ) }
    dend_27 { pt3dadd( 32.1835, -34.2271, -14.2429, 0.44 ) }
    dend_27 { pt3dadd( 32.8075, -35.2473, -14.8151, 0.44 ) }
    dend_27 { pt3dadd( 33.4558, -36.3552, -15.389, 0.95 ) }
    dend_27 { pt3dadd( 33.6361, -36.6523, -15.5457, 0.95 ) }
    dend_27 { pt3dadd( 34.3937, -37.7615, -16.1964, 0.73 ) }
    dend_27 { pt3dadd( 34.9006, -38.4082, -16.6565, 0.51 ) }
    dend_27 { pt3dadd( 35.2718, -38.8069, -17.0075, 0.51 ) }
    dend_27 { pt3dadd( 35.7982, -39.2387, -17.6069, 0.29 ) }
    dend_27 { pt3dadd( 36.2553, -39.4776, -18.2674, 0.15 ) }
    dend_27 { pt3dadd( 36.7418, -39.6311, -19.0812, 0.15 ) }
    dend_27 { pt3dadd( 37.3433, -39.6539, -20.2629, 1.1 ) }
    dend_27 { pt3dadd( 37.8955, -39.5231, -21.4575, 1.1 ) }
    dend_27 { pt3dadd( 38.8041, -39.0415, -23.5524, 1.1 ) }
    dend_27 { pt3dadd( 39.2896, -38.5843, -24.7429, 0.37 ) }
    dend_27 { pt3dadd( 39.7296, -37.9774, -25.7513, 0.22 ) }
    dend_27 { pt3dadd( 40.026, -37.4895, -26.3046, 0.22 ) }
    dend_27 { pt3dadd( 40.4744, -36.8104, -26.9435, 0.88 ) }
    dend_27 { pt3dadd( 40.8114, -36.3244, -27.4, 1.1 ) }
    dend_27 { pt3dadd( 41.3339, -35.6308, -28.0304, 1.1 ) }
    dend_27 { pt3dadd( 41.8919, -34.9703, -28.7587, 0.15 ) }
    dend_27 { pt3dadd( 42.5734, -34.1801, -29.8288, 0.29 ) }
    dend_27 { pt3dadd( 43.329, -33.1837, -31.3203, 0.44 ) }
    dend_27 { pt3dadd( 43.7455, -32.5738, -32.2907, 1.1 ) }
    dend_27 { pt3dadd( 44.0836, -32.0609, -33.1268, 0.22 ) }
    dend_27 { pt3dadd( 44.3989, -31.6203, -33.9046, 0.22 ) }
    dend_27 { pt3dadd( 44.7817, -31.2108, -34.6534, 0.22 ) }
    dend_27 { pt3dadd( 45.4659, -30.7576, -35.5091, 0.88 ) }
    dend_27 { pt3dadd( 46.2952, -30.4001, -36.2938, 0.22 ) }
    dend_27 { pt3dadd( 47.1857, -30.1309, -37.0277, 0.22 ) }
    dend_27 { pt3dadd( 48.4817, -29.8208, -38.307, 0.95 ) }
    dend_27 { pt3dadd( 49.4556, -29.6325, -39.4547, 0.59 ) }
    dend_27 { pt3dadd( 50.5392, -29.544, -40.9921, 0.59 ) }
    dend_27 { pt3dadd( 51.057, -29.5749, -41.9199, 0.81 ) }
    dend_27 { pt3dadd( 51.1612, -29.5985, -42.1679, 1.1 ) }
    dend_27 { pt3dadd( 52.0599, -29.9206, -44.8715, 0.51 ) }
    dend_27 { pt3dadd( 52.3867, -30.1132, -46.2034, 0.51 ) }
    dend_27 { pt3dadd( 52.6049, -30.3098, -47.602, 0.59 ) }
    dend_27 { pt3dadd( 52.6699, -30.4321, -48.4033, 0.59 ) }
    dend_27 { pt3dadd( 52.7137, -30.5929, -49.2596, 0.59 ) }
    dend_27 { pt3dadd( 52.7839, -30.7677, -50.1326, 0.81 ) }
    dend_27 { pt3dadd( 52.9292, -30.9307, -51.1421, 0.81 ) }
    dend_27 { pt3dadd( 53.096, -30.9472, -52.576, 0.81 ) }
    dend_27 { pt3dadd( 53.1178, -30.8658, -53.7705, 0.73 ) }
    dend_27 { pt3dadd( 53.054, -30.7924, -54.5905, 0.73 ) }
    dend_27 { pt3dadd( 52.8807, -30.6564, -55.8253, 0.73 ) }
    dend_27 { pt3dadd( 52.7398, -30.5495, -56.7782, 0.73 ) }
    dend_27 { pt3dadd( 52.5291, -30.3091, -58.6961, 0.73 ) }
    dend_27 { pt3dadd( 52.4196, -30.0856, -60.5108, 0.73 ) }
    dend_27 { pt3dadd( 52.4243, -29.9878, -61.4392, 0.73 ) }
    dend_27 { pt3dadd( 52.4336, -29.8788, -62.6889, 0.73 ) }
    dend_27 { pt3dadd( 52.4167, -29.8318, -64.048, 0.73 ) }
    dend_27 { pt3dadd( 52.3999, -29.8851, -65.4959, 0.73 ) }
    dend_27 { pt3dadd( 52.4892, -30.0327, -67.3426, 0.73 ) }
    dend_27 { pt3dadd( 52.6372, -30.1811, -68.8051, 0.37 ) }
    dend_27 { pt3dadd( 52.7608, -30.3184, -69.7423, 0.15 ) }
    dend_27 { pt3dadd( 52.8266, -30.5341, -70.6032, 0.15 ) }
    dend_27 { pt3dadd( 52.8011, -30.8029, -71.328, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 84/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -24.7341, -44.7975, 3.09278, 0.66 ) }
    dend_35 { pt3dadd( -24.9709, -45.4766, 3.92818, 0.66 ) }
    dend_35 { pt3dadd( -25.2744, -46.1452, 4.83129, 0.59 ) }
    dend_35 { pt3dadd( -25.585, -46.6872, 5.77202, 0.59 ) }
    dend_35 { pt3dadd( -25.8101, -46.992, 6.53123, 0.66 ) }
    dend_35 { pt3dadd( -26.0376, -47.3237, 7.61771, 0.66 ) }
    dend_35 { pt3dadd( -26.1772, -47.6004, 8.61404, 0.66 ) }
    dend_35 { pt3dadd( -26.2232, -47.6758, 9.02046, 0.66 ) }
    dend_35 { pt3dadd( -26.3425, -47.7803, 10.4595, 0.66 ) }
    dend_35 { pt3dadd( -26.3894, -47.735, 11.8581, 0.66 ) }
    dend_35 { pt3dadd( -26.3587, -47.5789, 13.183, 0.37 ) }
    dend_35 { pt3dadd( -26.2066, -47.3426, 14.4688, 0.59 ) }
    dend_35 { pt3dadd( -25.7856, -46.9772, 16.5048, 0.51 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 97/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -24.7341, -44.7975, 3.09278, 0.29 ) }
    dend_32 { pt3dadd( -25.464, -45.6045, 2.9559, 0.29 ) }
    dend_32 { pt3dadd( -25.8178, -46.021, 2.77314, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_32 { pt3dadd( -26.0612, -46.2439, 2.64775, 0.29 ) }
    dend_32 { pt3dadd( -26.4354, -46.5588, 2.46176, 0.29 ) }
    dend_32 { pt3dadd( -26.9981, -47.0131, 2.19407, 0.29 ) }
    dend_32 { pt3dadd( -27.9539, -47.7617, 1.72923, 0.88 ) }
    dend_32 { pt3dadd( -28.7395, -48.3935, 1.34932, 0.44 ) }
    dend_32 { pt3dadd( -29.667, -49.1127, 0.953496, 0.59 ) }
    dend_32 { pt3dadd( -30.0174, -49.3712, 0.810473, 0.59 ) }
    dend_32 { pt3dadd( -30.7552, -49.8905, 0.501495, 0.66 ) }
    dend_32 { pt3dadd( -31.9096, -50.6635, -0.0237453, 0.59 ) }
    dend_32 { pt3dadd( -32.9787, -51.3365, -0.502269, 0.37 ) }
    dend_32 { pt3dadd( -34.2207, -52.1198, -1.07773, 0.37 ) }
    dend_32 { pt3dadd( -35.2034, -52.7399, -1.56815, 1.25 ) }
    dend_32 { pt3dadd( -36.1535, -53.306, -2.06583, 1.03 ) }
    dend_32 { pt3dadd( -37.3534, -53.959, -2.73347, 0.59 ) }
    dend_32 { pt3dadd( -38.0426, -54.2961, -3.12938, 0.29 ) }
    dend_32 { pt3dadd( -38.2577, -54.3947, -3.25731, 0.29 ) }
    dend_32 { pt3dadd( -38.8603, -54.6682, -3.60236, 0.29 ) }
    dend_32 { pt3dadd( -39.8153, -55.1116, -4.06098, 0.59 ) }
    dend_32 { pt3dadd( -40.6817, -55.5181, -4.3934, 0.88 ) }
    dend_32 { pt3dadd( -41.1957, -55.7692, -4.55726, 0.88 ) }
    dend_32 { pt3dadd( -42.0464, -56.1888, -4.80578, 0.37 ) }
    dend_32 { pt3dadd( -42.5926, -56.4403, -4.94922, 0.37 ) }
    dend_32 { pt3dadd( -42.926, -56.5881, -5.01415, 0.66 ) }
    dend_32 { pt3dadd( -44.7294, -57.3553, -5.33317, 0.15 ) }
    dend_32 { pt3dadd( -45.1151, -57.5241, -5.40163, 0.51 ) }
    dend_32 { pt3dadd( -45.9157, -57.8752, -5.55483, 0.29 ) }
    dend_32 { pt3dadd( -46.3815, -58.0644, -5.62583, 0.44 ) }
    dend_32 { pt3dadd( -47.145, -58.3532, -5.76827, 0.22 ) }
    dend_32 { pt3dadd( -48.4201, -58.8079, -6.02655, 0.37 ) }
    dend_32 { pt3dadd( -49.2842, -59.0853, -6.22693, 1.4 ) }
    dend_32 { pt3dadd( -50.7171, -59.5137, -6.60575, 0.22 ) }
    dend_32 { pt3dadd( -51.6984, -59.7852, -6.88433, 0.22 ) }
    dend_32 { pt3dadd( -53.034, -60.1676, -7.27894, 0.22 ) }
    dend_32 { pt3dadd( -53.8358, -60.4062, -7.51527, 0.81 ) }
    dend_32 { pt3dadd( -54.4992, -60.5956, -7.67598, 0.81 ) }
    dend_32 { pt3dadd( -55.4045, -60.8283, -7.93165, 0.44 ) }
    dend_32 { pt3dadd( -55.9999, -60.987, -8.13584, 0.51 ) }
    dend_32 { pt3dadd( -56.686, -61.2318, -8.38933, 0.07 ) }
    dend_32 { pt3dadd( -57.2819, -61.5247, -8.49338, 0.07 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -57.2819, -61.5247, -8.49338, 0.59 ) }
    dend_34 { pt3dadd( -57.1999, -61.2939, -8.00147, 0.59 ) }
    dend_34 { pt3dadd( -57.1121, -61.0434, -7.54534, 0.59 ) }
    dend_34 { pt3dadd( -57.0799, -60.7632, -7.01614, 0.59 ) }
    dend_34 { pt3dadd( -57.1312, -60.5483, -6.64103, 0.59 ) }
    dend_34 { pt3dadd( -57.3674, -60.1261, -5.92389, 0.59 ) }
    dend_34 { pt3dadd( -57.9008, -59.5088, -4.90772, 0.29 ) }
    dend_34 { pt3dadd( -58.1443, -59.2484, -4.51569, 0.29 ) }
    dend_34 { pt3dadd( -58.5158, -58.8446, -3.93051, 0.29 ) }
    dend_34 { pt3dadd( -58.9511, -58.4024, -3.30158, 0.51 ) }
    dend_34 { pt3dadd( -59.5409, -57.9036, -2.62117, 0.15 ) }
    dend_34 { pt3dadd( -60.0951, -57.5315, -2.16992, 0.29 ) }
    dend_34 { pt3dadd( -60.2274, -57.4681, -2.09405, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -57.2819, -61.5247, -8.49338, 0.29 ) }
    dend_33 { pt3dadd( -56.641, -62.0482, -8.42561, 0.29 ) }
    dend_33 { pt3dadd( -55.8179, -62.7298, -8.32791, 0.37 ) }
    dend_33 { pt3dadd( -55.2735, -63.1807, -8.26329, 0.37 ) }
    dend_33 { pt3dadd( -54.7585, -63.6071, -8.20215, 0.44 ) }
    dend_33 { pt3dadd( -54.2878, -63.9969, -8.14628, 0.44 ) }
    dend_33 { pt3dadd( -53.7834, -64.4146, -8.0864, 0.44 ) }
    dend_33 { pt3dadd( -53.4295, -64.7077, -8.02218, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_21, dend_16, dend_15, dend_12, dend_11, dend_10, dend_9, dend_0, dend_23, dend_22, dend_18, dend_17, dend_14, dend_13, dend_4, dend_1, dend_25, dend_24, dend_20, dend_19, dend_6, dend_5, dend_3, dend_2, dend_29, dend_26, dend_8, dend_7, dend_31, dend_30, dend_28, dend_27, dend_35, dend_32, dend_34, dend_33]}
    ModelViewParmSubset_2 = new SectionList()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_21, dend_16, dend_15, dend_12, dend_11, dend_10, dend_9, dend_0, dend_23, dend_22, dend_18, dend_17, dend_14, dend_13, dend_4, dend_1, dend_25, dend_24, dend_20, dend_19, dend_6, dend_5, dend_3, dend_2, dend_29, dend_26, dend_8, dend_7, dend_31, dend_30, dend_28, dend_27, dend_35, dend_32, dend_34, dend_33]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_19 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_6 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_30 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_27 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_21 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_16 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_10 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_12 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_22 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_9 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_18 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_17 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_20 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_31 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_19 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_30 nseg = 11
    dend_28 nseg = 5
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DLAC_4822ddb519_0_0


