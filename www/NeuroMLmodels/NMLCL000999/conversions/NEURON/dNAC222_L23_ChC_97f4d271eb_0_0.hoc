// Cell: dNAC222_L23_ChC_97f4d271eb_0_0
/*
{
  "id" : "dNAC222_L23_ChC_97f4d271eb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.96523, -8.50396, 0.0192879, 2.77292", "-4.44098, -7.63716, 0.0179479, 3.51612", "-3.91674, -6.77037, 0.0166079, 5.09768", "-3.3925, -5.90357, 0.0152679, 6.03936", "-2.86825, -5.03677, 0.0139278, 6.97148", "-2.34401, -4.16997, 0.0125878, 7.92835", "-1.81976, -3.30317, 0.0112478, 9.28613", "-1.29552, -2.43637, 0.00990778, 9.94241", "-0.771277, -1.56957, 0.00856776, 10.1843", "-0.247034, -0.702773, 0.00722774, 10.3452", "0.27721, 0.164025, 0.00588772, 10.228", "0.801453, 1.03082, 0.0045477, 9.54324", "1.3257, 1.89762, 0.00320768, 8.78219", "1.84994, 2.76442, 0.00186766, 7.98349", "2.37418, 3.63122, 5.27637E-4, 7.19659", "2.89843, 4.49802, -8.12382E-4, 6.4097", "3.42267, 5.36482, -0.0021524, 5.30941", "3.94692, 6.23162, -0.00349242, 4.2542", "4.47116, 7.09842, -0.00483244, 3.4094", "4.9954, 7.96521, -0.00617246, 2.28943", "5.51965, 8.83201, -0.00751248, 1.46335" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.16275, -9.55365, 5.04691, 2.4", "-4.82087, -16.6449, 3.23245, 2.22", "-5.35418, -22.3912, 1.76212, 2.22", "-5.99912, -29.3402, -0.0159887, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.23725, 4.22235, -2.37309, 0.55", "8.56881, 6.62538, -3.7866, 0.55", "11.0893, 9.22306, -5.31462, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.56725, 8.32785, -2.03309, 1.94", "4.80229, 10.2786, -3.57764, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.51965, 8.83201, -0.00751248, 0.83", "13.2824, 21.6671, -0.00751248, 0.83", "21.0451, 34.5022, -0.00751248, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.99912, -29.3402, -0.0159887, 0.83", "-3.69521, -30.6369, -0.398454, 0.83", "-1.83183, -31.6856, -0.707788, 0.83", "0.927462, -33.2386, -1.16585, 0.83", "2.60274, -34.1814, -1.44395, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.99912, -29.3402, -0.0159887, 2.22", "-7.20151, -31.8464, -2.3348, 2.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.0893, 9.22306, -5.31462, 0.55", "13.0529, 11.5476, -5.80115, 0.55", "14.8372, 13.7378, -6.21537, 1.11", "16.7932, 16.2422, -6.6456, 0.55", "17.978, 17.8857, -6.91944, 0.55", "19.935, 20.6895, -7.5696, 0.83", "21.4038, 22.892, -8.26285, 0.55", "22.3499, 24.5071, -8.88072, 0.55", "23.7535, 27.1559, -10.0455, 1.11", "24.9626, 29.7192, -11.3485, 1.11", "26.4091, 33.0241, -13.3726, 0.55", "27.6559, 36.331, -15.6584, 0.83", "28.3894, 38.4341, -17.2667, 0.55", "28.6501, 39.2588, -17.9294, 0.55", "29.3566, 41.7252, -19.9887, 1.11", "30.0176, 44.2738, -22.0705, 0.28", "30.2809, 45.4234, -22.8862, 0.55", "30.868, 48.022, -24.7208, 0.28", "31.1669, 49.3882, -25.6957, 0.83", "31.7248, 51.9018, -27.5043, 0.28", "31.9414, 53.0507, -28.309, 0.83", "32.3214, 55.6871, -30.1591, 0.83", "32.8983, 59.4413, -33.0205, 0.28", "33.0622, 60.5329, -33.9253, 0.55", "33.3202, 62.1214, -35.3178, 0.28", "33.5688, 63.6017, -36.6212, 1.11", "34.2741, 67.7243, -40.262, 0.28", "34.6616, 69.952, -42.2101, 0.83", "35.1016, 72.4949, -44.2563, 0.28", "35.3281, 73.7043, -45.1639, 0.55", "35.8096, 75.8907, -46.7761, 0.28", "36.0289, 76.7729, -47.3709, 0.55", "36.3479, 78.1497, -48.1864, 0.28", "36.6358, 79.4466, -48.9795, 0.83", "37.0773, 81.6248, -50.3016, 0.83", "38.0489, 86.97, -53.7582, 0.28", "38.4, 89.3484, -55.2676, 0.55", "38.6608, 91.7626, -56.7808, 0.28", "39.0208, 96.1917, -59.4889, 0.55", "39.2529, 99.8096, -61.569, 0.28", "39.2999, 101.732, -62.5919, 0.55", "39.3644, 104.633, -63.9819, 0.28", "39.4934, 107.161, -65.2609, 0.55", "39.5783, 108.496, -65.8475, 0.55", "39.8715, 112.73, -67.3028, 0.28", "40.0342, 114.378, -67.8442, 0.55", "40.5996, 119.003, -69.2419, 0.28", "40.8124, 120.571, -69.7019, 0.55", "41.3193, 124.185, -70.6439, 0.28", "41.7497, 127.439, -71.5306, 0.55", "42.3044, 131.854, -72.7511, 0.28", "42.4431, 133.044, -73.0759, 0.55", "42.8026, 136.011, -73.9409, 0.28", "43.2315, 139.074, -74.9991, 0.55", "43.8132, 142.636, -76.4613, 0.28", "44.2277, 145.139, -77.5579, 0.55", "44.7692, 148.233, -78.9949, 0.28", "45.4942, 152.283, -80.9655, 0.55", "46.1457, 155.708, -82.7223, 0.28", "46.4512, 157.251, -83.5288, 0.55", "47.1789, 160.841, -85.3728, 0.55", "47.7472, 163.608, -86.7251, 0.28", "48.0461, 165.153, -87.4207, 0.55", "48.3778, 167.22, -88.1933, 0.28", "48.6263, 168.834, -88.701, 0.55", "48.838, 170.323, -89.0748, 0.55", "49.1646, 173.088, -89.5488, 0.28", "49.2551, 174.156, -89.698, 0.55", "49.5319, 177.297, -90.172, 0.28", "49.6854, 178.999, -90.4183, 0.83", "49.9197, 181.154, -90.8701, 0.28", "50.1833, 182.483, -91.2802, 0.55", "50.7546, 184.458, -92.0954, 0.28", "51.2901, 185.772, -92.6408, 0.55", "52.7519, 188.543, -93.745, 0.28", "54.0402, 190.708, -94.6178, 0.55", "56.2335, 194.006, -95.9113, 0.28", "57.4021, 195.621, -96.5197, 0.55", "59.8736, 198.709, -97.6109, 0.28", "61.7087, 200.788, -98.4668, 0.28", "62.2209, 201.288, -98.7134, 0.28", "64.7446, 203.512, -99.8828, 0.28", "66.6693, 205.151, -100.789, 0.83", "71.5631, 209.163, -103.263, 0.28", "73.9332, 210.979, -104.601, 0.55", "77.5895, 213.596, -106.725, 0.28", "78.6873, 214.345, -107.362, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "11.0893, 9.22306, -5.31462, 0.55", "11.9382, 12.3711, -6.04317, 0.55", "12.8313, 15.8033, -6.68667, 0.55", "13.2939, 17.7971, -6.96534, 0.55", "14.067, 21.3563, -7.57577, 0.55", "14.5231, 23.6165, -7.96295, 0.28", "15.1765, 26.5952, -8.45577, 1.11", "15.8147, 29.7078, -9.01235, 0.55", "16.1766, 31.7719, -9.4172, 0.55", "16.7226, 35.7213, -10.0995, 0.83", "17.0932, 38.5748, -10.5696, 0.55", "17.5372, 42.5982, -11.1701, 0.55", "17.9186, 46.4212, -11.8165, 0.55", "18.254, 49.9328, -12.5275, 0.55", "18.6439, 54.1012, -13.3454, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.80229, 10.2786, -3.57764, 0.83", "8.16726, 12.7902, -3.75892, 0.83", "12.3336, 15.9, -3.98338, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.80229, 10.2786, -3.57764, 1.11", "3.86721, 14.2998, -3.04392, 1.11", "3.31722, 16.6649, -2.73, 0.83", "2.19632, 21.4852, -2.09022, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.0451, 34.5022, -0.00751248, 0.28", "28.8079, 47.3373, -0.00751248, 0.28", "36.5706, 60.1724, -0.00751248, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "2.60274, -34.1814, -1.44395, 0.55", "4.99894, -36.0735, -0.322366, 0.55", "7.37224, -37.9473, 0.788511, 0.55", "9.33804, -39.4995, 1.70865, 0.28", "11.2801, -41.0329, 2.61764, 0.55", "13.7334, -42.9701, 3.76597, 0.55", "15.5679, -44.4186, 4.62467, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "2.60274, -34.1814, -1.44395, 0.55", "3.92059, -34.8736, -1.1962, 0.55", "5.64097, -35.6972, -0.954784, 0.55", "6.83793, -36.2218, -0.7909, 0.83", "8.58231, -36.9989, -0.619275, 0.55", "10.2019, -37.7115, -0.481735, 0.55", "12.2065, -38.5751, -0.301597, 0.83", "13.6334, -39.1369, -0.220959, 0.28", "15.0477, -39.636, -0.160842, 0.55", "16.7522, -40.2498, -0.213648, 0.28", "17.7566, -40.636, -0.315353, 0.55", "19.3381, -41.2815, -0.599049, 0.55", "20.7357, -41.8969, -0.903231, 0.55", "22.2189, -42.5663, -1.25417, 0.55", "24.9067, -43.7337, -1.965, 0.55", "26.1347, -44.2691, -2.3109, 0.28", "26.9594, -44.6674, -2.55756, 0.55", "28.1363, -45.2742, -2.92167, 0.55", "29.6012, -46.0849, -3.35213, 0.55", "31.3796, -47.111, -3.81399, 0.55", "33.1554, -48.1449, -4.19944, 0.55", "34.4426, -48.9167, -4.47097, 0.55", "35.9482, -49.8288, -4.79492, 0.55", "37.2145, -50.6045, -5.097, 0.55", "38.4064, -51.3732, -5.4047, 0.55", "40.1577, -52.4907, -5.83746, 0.55", "41.4468, -53.2556, -6.14848, 0.55", "42.897, -54.0755, -6.53231, 0.83", "44.3783, -54.9167, -6.93971, 0.83", "45.6691, -55.6514, -7.31424, 0.55", "47.1149, -56.4769, -7.81906, 0.55", "48.0625, -57.0182, -8.16482, 0.83", "49.7207, -57.8923, -8.76111, 0.28", "50.8849, -58.4481, -9.15347, 0.55", "53.4529, -59.5574, -9.89677, 0.55", "55.8947, -60.5194, -10.5654, 0.55", "56.9911, -60.9305, -10.8509, 0.28", "58.4357, -61.4184, -11.1507, 0.55", "60.7649, -62.1474, -11.5269, 0.28", "62.1261, -62.6017, -11.6793, 0.28", "63.273, -63.0084, -11.7996, 0.28", "64.6805, -63.5956, -11.9719, 0.55", "65.8405, -64.175, -12.1809, 0.55", "67.5474, -65.2454, -12.621, 0.55", "69.2554, -66.467, -13.2058, 0.55", "71.1925, -67.8837, -14.0083, 0.55", "72.3472, -68.7678, -14.4865, 0.28", "73.2058, -69.4541, -14.8534, 0.55", "74.9192, -70.8881, -15.6226, 0.55", "76.5443, -72.2702, -16.3068, 0.55", "77.9914, -73.4802, -16.8898, 0.83", "79.1908, -74.521, -17.2636, 0.83", "79.7872, -75.0023, -17.4304, 0.83", "81.1337, -76.0088, -17.7518, 0.28", "82.1033, -76.6432, -17.8823, 0.83", "84.0584, -77.7561, -17.9772, 0.28", "85.3576, -78.3868, -18.0241, 0.83", "87.2129, -79.1668, -17.9718, 0.55", "88.4927, -79.6139, -17.8245, 0.55", "91.3137, -80.4605, -17.198, 0.55", "92.722, -80.8501, -16.6791, 0.55", "94.1149, -81.2085, -15.9303, 0.55", "96.2086, -81.7647, -14.3278, 0.55", "96.9349, -82.0163, -13.578, 0.55", "97.7553, -82.3633, -12.5678, 0.83", "99.1947, -83.1698, -10.5266, 0.28", "99.6523, -83.477, -9.86022, 0.55", "101.043, -84.4685, -7.86037, 0.28", "102.286, -85.436, -6.34703, 0.55", "102.802, -85.8686, -5.80538, 0.55", "103.931, -86.8185, -4.86017, 0.28", "104.614, -87.3916, -4.46645, 0.28", "105.266, -87.9307, -4.18423, 0.55", "106.63, -88.9639, -3.81331, 0.28", "107.429, -89.5014, -3.64888, 0.28", "107.951, -89.8172, -3.54877, 0.55", "109.452, -90.5565, -3.25871, 0.28", "110.868, -91.1962, -2.95664, 0.55", "112.105, -91.6462, -2.66143, 0.28", "113.259, -92.0037, -2.3682, 0.55", "115.078, -92.5124, -1.89077, 0.28", "116.541, -92.8745, -1.48969, 0.28", "118.393, -93.2703, -0.929524, 0.55", "119.951, -93.5793, -0.419407, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-7.20151, -31.8464, -2.3348, 0.55", "-8.74199, -33.6935, -3.49883, 0.55", "-9.57474, -34.5853, -4.05561, 0.55", "-10.952, -36.0731, -4.89899, 0.83", "-13.3532, -38.8951, -6.40353, 0.55", "-14.9787, -40.9277, -7.38892, 0.55", "-16.6852, -43.1157, -8.3993, 0.83", "-18.2188, -45.1939, -9.28751, 0.55", "-19.3685, -46.7208, -9.85463, 1.11", "-20.6458, -48.4211, -10.3267, 0.28", "-22.034, -50.4167, -10.6376, 0.55", "-22.6734, -51.4604, -10.7922, 0.28", "-23.9252, -53.4382, -11.0381, 0.55", "-24.8309, -54.6982, -11.1373, 0.28", "-26.8895, -57.1348, -11.2673, 0.83", "-29.2204, -59.4809, -11.2914, 0.55", "-31.6696, -61.8459, -11.2982, 0.55", "-33.9192, -63.9333, -11.2836, 0.55", "-36.4092, -66.0753, -11.2687, 0.55", "-38.5274, -67.7628, -11.2623, 0.55", "-40.9537, -69.3879, -11.1651, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-7.20151, -31.8464, -2.3348, 1.66", "-6.05696, -34.6607, -2.62226, 1.66", "-4.37609, -38.7937, -3.04443, 0.83", "-2.26732, -43.979, -3.57407, 0.83", "-0.370074, -48.6441, -4.05059, 0.83", "1.0885, -52.2306, -4.41692, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "18.6439, 54.1012, -13.3454, 0.55", "19.694, 56.2646, -14.7953, 0.55", "21.126, 58.8854, -16.5878, 0.55", "22.6974, 61.8358, -18.4483, 0.28", "24.0477, 64.4625, -19.9898, 0.83", "24.9494, 66.2859, -21.0175, 0.55", "26.1322, 68.7106, -22.3245, 0.55", "27.5867, 71.5911, -23.7836, 0.55", "29.2203, 74.864, -25.0581, 0.83", "30.2959, 77.1996, -25.6646, 0.28", "30.5685, 77.8522, -25.7808, 0.28", "31.5043, 80.2845, -26.0804, 0.55", "32.3195, 82.5488, -26.2856, 0.55", "33.9675, 87.1911, -26.7197, 0.55", "34.7887, 89.4688, -26.9902, 0.55", "36.5317, 94.2623, -27.6948, 0.55", "37.5985, 97.1967, -28.2023, 0.55", "38.8836, 100.75, -28.9442, 0.55", "40.3737, 104.65, -30.0781, 0.55", "41.1501, 106.393, -30.744, 0.55", "41.8549, 107.67, -31.3592, 0.28", "42.3891, 108.433, -31.797, 0.55", "43.3764, 109.587, -32.4993, 0.28", "45.3304, 111.628, -33.7417, 0.55", "48.5355, 114.85, -35.4751, 0.55", "51.091, 117.399, -36.9188, 0.55", "52.5616, 118.84, -37.7362, 0.55", "55.9808, 122.059, -39.6876, 0.55", "57.3497, 123.405, -40.4954, 0.55", "58.4959, 124.651, -41.2058, 0.28", "60.0, 126.539, -42.3302, 0.55", "61.2319, 128.404, -43.3472, 0.55", "62.4475, 130.75, -44.6568, 0.55", "63.4628, 133.421, -46.0755, 0.55", "64.506, 136.569, -47.7814, 0.55", "65.0353, 138.298, -48.7066, 0.55", "65.5084, 139.973, -49.5256, 0.55", "66.1466, 142.012, -50.5719, 0.55", "67.3506, 145.093, -52.1673, 0.55", "68.9946, 148.035, -53.8656, 0.55", "69.9528, 149.277, -54.7156, 0.55", "70.9002, 150.287, -55.4746, 0.55", "73.6957, 152.85, -57.595, 0.55", "74.8188, 153.774, -58.375, 0.55", "76.7253, 155.229, -59.6867, 0.55", "78.9244, 156.912, -61.1319, 0.55", "80.2227, 157.929, -62.0127, 0.28", "81.1763, 158.662, -62.709, 0.28", "82.2048, 159.47, -63.4993, 0.55", "84.9027, 161.523, -65.5646, 0.55", "87.708, 163.591, -67.7339, 0.55", "89.0676, 164.472, -68.7811, 0.83", "92.7423, 166.626, -72.2775, 0.55", "94.854, 167.684, -74.5805, 0.55", "96.4386, 168.451, -76.4751, 0.55", "98.9467, 169.57, -79.7593, 0.55", "102.323, 171.051, -84.3704, 0.55", "107.846, 173.225, -92.1238, 0.55", "111.987, 174.781, -98.1183, 0.55", "113.546, 175.321, -100.451, 0.55", "116.887, 176.396, -105.615, 0.55", "118.74, 176.946, -108.492, 0.55", "121.733, 177.94, -113.135, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "18.6439, 54.1012, -13.3454, 0.28", "18.178, 57.6913, -12.9578, 0.28", "17.9637, 59.5717, -12.7399, 0.83", "17.6927, 62.5373, -12.3648, 0.55", "17.4499, 65.4757, -11.9963, 0.55", "17.1617, 69.3774, -11.5504, 0.28", "16.9927, 71.9541, -11.2902, 0.28", "16.9619, 72.9421, -11.2139, 0.55", "16.9145, 74.98, -11.0534, 0.28", "16.9163, 76.1469, -10.9851, 0.55", "16.9585, 77.5992, -10.9264, 0.28", "17.0743, 79.0538, -11.0233, 0.55", "17.237, 81.1469, -11.2886, 0.28", "17.237, 81.1469, -11.2886, 0.55", "17.6485, 83.6756, -11.7779, 0.55", "18.1959, 85.9807, -12.3844, 0.83", "19.1083, 88.8178, -13.3185, 0.55", "19.6616, 90.2433, -13.8517, 0.55", "20.7581, 92.7903, -14.7823, 0.55", "21.8518, 95.1946, -15.5987, 0.28", "23.641, 99.0011, -16.7699, 0.83", "24.7714, 101.44, -17.4198, 0.28", "25.5793, 103.199, -17.7182, 0.55", "26.8961, 106.149, -18.1106, 0.28", "27.461, 107.535, -18.2144, 0.55", "28.2874, 109.945, -18.1718, 0.28", "28.6203, 111.23, -18.0194, 0.55", "29.2828, 114.104, -17.6286, 0.28", "29.8391, 116.339, -17.2945, 0.55", "30.4362, 118.59, -16.9762, 0.28", "31.0438, 120.977, -16.6745, 0.55", "31.7152, 123.515, -16.4043, 0.28", "32.6777, 127.21, -16.1494, 0.55", "33.3368, 129.452, -16.0513, 0.28", "33.6578, 130.481, -15.9602, 0.55", "34.3234, 132.444, -15.7566, 0.28", "34.8505, 133.865, -15.6037, 0.55", "35.6322, 135.935, -15.3874, 0.55", "36.3802, 137.976, -15.0815, 0.55", "37.6599, 141.485, -14.3985, 0.55", "38.688, 144.452, -13.7099, 0.55", "39.7253, 147.521, -12.981, 0.55", "40.961, 151.474, -12.0971, 0.55", "42.1978, 155.662, -11.2336, 0.55", "42.8665, 158.052, -10.8226, 0.28", "43.5397, 160.282, -10.4941, 0.55", "44.2366, 162.55, -10.2201, 0.55", "44.6862, 163.964, -10.0968, 0.83", "45.7389, 167.365, -9.96883, 0.28", "46.7357, 170.362, -10.8532, 0.55", "47.7281, 173.091, -12.4532, 0.28", "48.065, 173.995, -13.188, 0.55", "49.1005, 176.895, -15.784, 0.55", "49.5938, 178.39, -17.2598, 0.55", "52.7393, 188.685, -28.016, 0.28", "53.3169, 190.742, -30.1322, 0.28", "53.8121, 192.667, -32.0179, 0.55", "54.4599, 195.167, -34.4511, 0.55", "54.7528, 196.309, -35.5269, 0.55", "55.3863, 199.025, -37.1443, 0.55", "55.9955, 202.466, -37.1813, 0.55", "56.2471, 203.962, -37.2459, 0.55", "62.3682, 215.445, -36.885, 0.55", "69.8031, 225.998, -38.0723, 0.55", "75.7163, 237.612, -37.951, 0.55", "81.6723, 249.205, -38.1179, 0.55", "85.7078, 261.636, -37.2587, 0.55", "91.0695, 273.172, -34.6013, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "12.3336, 15.9, -3.98338, 0.55", "15.1116, 17.5434, -4.59324, 0.55", "17.7715, 19.1091, -5.01304, 0.83", "20.5416, 20.761, -5.35906, 0.28", "22.5636, 21.9365, -5.4921, 0.55", "24.9349, 23.2812, -5.58136, 0.28", "26.7133, 24.2468, -5.67256, 0.83", "29.4238, 25.6392, -5.74029, 0.55", "31.6442, 26.7128, -5.73047, 0.83", "34.4928, 27.9735, -5.688, 0.28", "36.3604, 28.7219, -5.70534, 0.55", "39.6645, 29.9531, -5.81549, 0.28", "42.3465, 30.9302, -6.00457, 0.83", "44.4988, 31.709, -6.25944, 0.28", "47.1003, 32.6267, -6.66398, 0.55", "50.1385, 33.6986, -7.25037, 0.28", "51.465, 34.1763, -7.53152, 0.83", "54.4257, 35.2834, -8.17431, 0.28", "55.3392, 35.6271, -8.40875, 0.55", "58.1247, 36.7034, -9.24375, 0.83", "60.5038, 37.6087, -10.0033, 0.28", "62.2583, 38.2825, -10.6072, 0.83", "63.8439, 38.9323, -11.171, 0.28", "64.4704, 39.197, -11.3892, 0.55", "66.4251, 40.0827, -12.0448, 0.28", "68.5214, 41.1432, -12.7933, 0.83", "70.7494, 42.3612, -13.5558, 0.28", "71.6662, 42.8948, -13.8288, 0.55", "73.9934, 44.3071, -14.4628, 0.28", "75.6611, 45.4153, -14.8437, 0.55", "78.9948, 47.7749, -15.5211, 0.28", "80.1119, 48.6303, -15.7006, 0.83", "82.6319, 50.6229, -15.9996, 0.28", "84.211, 51.9296, -16.1458, 0.83", "88.0294, 55.3026, -16.384, 0.28", "89.6178, 56.7216, -16.3631, 0.83", "92.5334, 59.2943, -16.17, 0.28", "93.5126, 60.1406, -16.077, 0.55", "94.8728, 61.291, -15.884, 0.28", "95.4776, 61.7685, -15.7548, 0.55", "98.568, 63.9345, -14.8327, 0.28", "100.324, 65.1209, -14.3293, 0.55", "102.708, 66.7, -13.7546, 0.28", "103.549, 67.2208, -13.5388, 0.83", "107.541, 69.5597, -12.5769, 0.28", "109.425, 70.6377, -12.1391, 0.55", "112.136, 72.1992, -11.5529, 0.28", "114.034, 73.2821, -11.1517, 0.83", "118.524, 75.8099, -10.3375, 0.28", "121.542, 77.4503, -9.71183, 0.55", "123.698, 78.5967, -9.24564, 0.28", "124.797, 79.164, -8.97519, 0.55", "127.168, 80.3155, -8.30279, 0.28", "128.283, 80.851, -7.99536, 0.55", "132.718, 83.0229, -6.99281, 0.28", "134.461, 83.8579, -6.62625, 0.83", "138.529, 85.6435, -5.76586, 0.28", "139.846, 86.1646, -5.44981, 0.28", "141.203, 86.6651, -5.13632, 0.55", "143.178, 87.385, -4.69595, 0.28", "144.791, 87.9574, -4.43411, 0.55", "148.329, 89.0923, -3.7597, 0.28", "150.713, 89.7728, -3.22229, 0.83", "152.782, 90.3503, -2.60586, 0.28", "154.527, 90.7845, -1.92852, 0.55", "165.517, 96.7153, -3.30925, 0.55", "176.635, 101.68, -6.20204, 0.55", "188.21, 106.433, -6.63366, 0.55", "200.328, 108.811, -8.14418, 0.55", "212.034, 112.369, -10.5529, 0.55", "222.912, 116.695, -14.8867, 0.55", "233.313, 121.311, -20.0284, 0.55", "243.364, 123.49, -26.9938, 0.55", "253.706, 124.696, -33.7482, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "12.3336, 15.9, -3.98338, 0.55", "13.4666, 20.8777, -1.37414, 0.55", "15.163, 27.455, 2.02996, 0.83", "15.9992, 30.0768, 3.39159, 0.55", "16.8499, 32.754, 4.88205, 0.83", "18.4975, 38.0479, 8.25214, 0.83", "19.4044, 40.7648, 10.127, 0.55", "20.4524, 43.4415, 12.2001, 0.55", "21.2202, 45.2633, 13.9002, 0.55", "22.8442, 48.6623, 17.2886, 0.55", "24.4855, 52.3048, 21.2688, 0.55", "24.9865, 53.6935, 22.6338, 0.55", "29.6553, 64.518, 29.2533, 0.55", "34.5192, 75.0872, 36.1023, 0.55", "38.0617, 86.7134, 42.1632, 0.55", "41.9816, 97.9902, 48.5796, 0.55", "44.5779, 110.873, 52.4225, 0.55", "49.7764, 122.717, 56.6407, 0.55", "56.9097, 133.613, 60.3279, 0.55", "62.6934, 145.196, 64.4444, 0.55", "66.8876, 157.402, 68.8375, 0.55", "70.706, 170.029, 72.4267, 0.55", "72.3224, 182.776, 77.1117, 0.55", "72.3963, 195.882, 81.1304, 0.55", "71.0022, 208.802, 85.4404, 0.55", "69.629, 221.505, 90.3009, 0.55", "67.4238, 234.658, 93.4965, 0.55", "65.7722, 247.789, 97.0846, 0.55", "65.0914, 260.647, 101.719, 0.55", "64.6408, 273.535, 106.306, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.19632, 21.4852, -2.09022, 0.28", "1.04551, 21.6101, -1.91673, 0.28", "0.55399, 21.6612, -1.86109, 0.55", "-2.00501, 21.9275, -1.57144, 0.28", "-2.70012, 21.9999, -1.49276, 0.55", "-5.31813, 22.2723, -1.19643, 0.28", "-6.67107, 22.4131, -1.04329, 0.28", "-7.21917, 22.4603, -1.00313, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.19632, 21.4852, -2.09022, 0.83", "2.60153, 24.7436, -1.11426, 0.83", "3.0767, 28.5646, 0.0301966, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "15.5679, -44.4186, 4.62467, 0.55", "16.897, -45.1336, 8.25851, 0.55", "17.7561, -45.2584, 10.4104, 0.55", "19.3366, -45.1127, 14.0678, 0.55", "20.2516, -44.8405, 16.1506, 0.55", "21.6645, -44.4205, 19.3669, 0.55", "22.8186, -44.0774, 21.9937, 0.55", "24.36, -43.3725, 25.1568, 0.55", "25.7211, -42.4688, 27.9804, 0.55", "28.1447, -40.4989, 32.6225, 0.55", "32.6166, -37.8568, 43.0848, 0.55", "36.0215, -34.3067, 53.712, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "15.5679, -44.4186, 4.62467, 0.55", "17.9311, -46.048, 4.70941, 0.55", "20.8178, -48.025, 4.81031, 0.28", "22.989, -49.5424, 4.85286, 0.83", "25.6315, -51.3998, 4.95082, 0.28", "27.8753, -53.019, 5.05937, 0.28", "29.1229, -53.9461, 5.12208, 0.55", "30.6473, -55.2261, 5.21574, 0.28", "31.1662, -55.7146, 5.29132, 0.55", "32.9711, -57.5022, 5.69283, 0.28", "33.4123, -57.9543, 5.79947, 0.83", "34.4653, -59.1227, 6.16623, 0.28", "35.2004, -59.9471, 6.46331, 0.55", "37.2738, -62.3167, 7.37698, 0.28", "37.8358, -62.9393, 7.63834, 0.55", "39.1498, -64.396, 8.25439, 0.28", "40.0709, -65.3464, 8.71677, 0.55", "41.7339, -66.9508, 9.65938, 0.28", "42.5959, -67.6946, 10.2794, 0.55", "44.1989, -69.0203, 11.4801, 0.28", "44.7942, -69.4678, 11.9184, 0.55", "46.5311, -70.7162, 13.1398, 0.28", "47.5275, -71.3801, 13.7782, 0.55", "52.0393, -74.2397, 16.214, 0.28", "53.7314, -75.1251, 16.9071, 0.55", "55.3618, -75.8372, 17.3388, 0.28", "56.8621, -76.3683, 17.4919, 0.55", "59.2787, -77.0044, 17.3619, 0.28", "60.8742, -77.3641, 17.1298, 0.55", "63.8803, -77.827, 16.3555, 0.28", "65.6003, -78.0173, 15.9852, 0.55", "68.0373, -78.2318, 15.4625, 0.28", "69.5335, -78.2501, 15.1038, 0.55", "79.5569, -83.2029, 14.9429, 0.55", "89.0953, -88.811, 16.7804, 0.55", "99.3103, -93.3175, 16.7894, 0.55", "109.752, -96.709, 18.637, 0.55", "119.729, -100.752, 21.5652, 0.55", "129.514, -103.091, 26.2855, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-40.9537, -69.3879, -11.1651, 0.28", "-42.1518, -69.7339, -10.1234, 0.28", "-42.6164, -69.8851, -9.74569, 0.55", "-45.0572, -70.4106, -7.35822, 0.28", "-46.0344, -70.6433, -6.33438, 0.55", "-48.9637, -71.5469, -3.13714, 0.28", "-49.3664, -71.6979, -2.68613, 0.55", "-50.4432, -72.2338, -1.37677, 0.55", "-53.2019, -73.9023, 2.31746, 0.55", "-53.9558, -74.4688, 3.40328, 0.28", "-54.7744, -75.0326, 4.46673, 0.55", "-55.4272, -75.4788, 5.17408, 0.28", "-56.0444, -75.9222, 5.86309, 0.55", "-57.1062, -76.7911, 7.07948, 0.28", "-57.7372, -77.3634, 7.67037, 0.55", "-59.7079, -78.7654, 9.49953, 0.28", "-61.2191, -79.618, 10.9003, 0.55", "-67.974, -81.414, 18.2594, 0.55", "-74.8696, -81.0753, 25.6584, 0.55", "-82.2168, -79.1724, 32.3597, 0.55", "-88.9182, -78.1471, 39.872, 0.55", "-96.2997, -78.4218, 46.7954, 0.55", "-104.283, -78.4563, 53.0178, 0.55", "-111.843, -80.5305, 59.4731, 0.55", "-118.339, -80.5625, 67.2353, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-40.9537, -69.3879, -11.1651, 0.28", "-42.2249, -70.6013, -11.2746, 0.28", "-42.5577, -70.9005, -11.3072, 0.55", "-43.6172, -71.8997, -11.3862, 0.28", "-44.8043, -72.9883, -11.4642, 0.55", "-46.9786, -74.9482, -11.5033, 0.55", "-48.4831, -76.3046, -11.4941, 0.28", "-50.1544, -77.7899, -11.4116, 0.55", "-52.2673, -79.6993, -11.2415, 0.55", "-54.6948, -82.0106, -10.9439, 0.55", "-55.9919, -83.2766, -10.7473, 0.28", "-56.6847, -83.9837, -10.6202, 0.55", "-57.4977, -84.8536, -10.4662, 0.28", "-58.768, -86.1872, -10.2538, 0.55", "-59.8769, -87.3402, -10.1562, 0.28", "-60.7922, -88.279, -10.0239, 0.55", "-61.7108, -89.2032, -9.88026, 0.28", "-63.3233, -90.7305, -9.59096, 0.55", "-65.4294, -92.6115, -9.21173, 0.55", "-66.4492, -93.4958, -9.01276, 0.55", "-69.629, -96.204, -8.37714, 0.55", "-71.0491, -97.4398, -8.0765, 0.55", "-72.6062, -98.8507, -7.72829, 0.28", "-73.8439, -100.057, -7.45856, 0.28", "-74.7515, -101.029, -7.29406, 0.55", "-75.5918, -102.039, -7.22052, 0.55", "-76.4644, -103.205, -7.31951, 0.28", "-77.112, -104.157, -7.41438, 0.55", "-77.6624, -105.015, -7.5093, 0.28", "-78.5593, -106.333, -7.6371, 0.55", "-79.7166, -107.874, -7.77247, 0.55", "-80.773, -109.217, -7.90038, 0.55", "-82.0751, -110.793, -8.05126, 0.28", "-83.3698, -112.232, -8.1792, 0.55", "-84.3978, -113.299, -8.2478, 0.55", "-85.4415, -114.281, -8.32003, 0.55", "-86.7392, -115.427, -8.40605, 0.83", "-92.7565, -120.813, -8.18799, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.0885, -52.2306, -4.41692, 0.83", "2.66804, -53.3295, -5.42288, 0.83", "4.39647, -54.4296, -6.49425, 0.83", "7.047, -55.9825, -8.09937, 0.83", "10.095, -57.6414, -9.90615, 0.83", "13.6496, -59.5154, -11.9781, 0.83", "16.5185, -61.0279, -13.6503, 0.83", "21.0232, -63.3247, -16.2919, 0.83", "23.0632, -64.3517, -17.494, 0.55", "24.9029, -65.1733, -18.5665, 0.55", "26.6776, -65.9437, -19.5649, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.0885, -52.2306, -4.41692, 1.11", "-1.15891, -53.7948, -5.566, 1.11", "-7.56644, -58.2551, -8.84212, 0.83", "-10.0209, -59.9636, -10.0971, 0.83", "-11.9001, -61.2715, -11.0579, 0.83", "-14.2346, -62.8965, -12.2515, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "121.733, 177.94, -113.135, 0.55", "123.299, 178.14, -112.874, 0.55", "126.627, 178.242, -112.709, 0.55", "127.743, 178.255, -112.699, 0.55", "130.137, 178.27, -112.743, 0.55", "133.829, 178.316, -112.989, 0.55", "137.499, 178.362, -113.234, 0.55", "143.433, 178.345, -113.838, 0.55", "144.795, 178.29, -114.033, 0.83", "147.442, 178.158, -114.492, 0.28", "150.342, 178.07, -115.141, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "121.733, 177.94, -113.135, 0.55", "124.173, 179.367, -116.512, 0.55", "127.492, 181.309, -121.109, 0.55", "131.498, 183.653, -126.656, 0.28", "132.721, 184.368, -128.349, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "91.0695, 273.172, -34.6013, 0.55", "91.0292, 288.464, -35.4383, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "91.0695, 273.172, -34.6013, 0.55", "98.0897, 279.45, -34.6642, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "253.706, 124.696, -33.7482, 0.55", "260.284, 128.103, -31.5567, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "253.706, 124.696, -33.7482, 0.55", "265.803, 129.098, -40.3987, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "64.6408, 273.535, 106.306, 0.55", "66.6949, 283.964, 110.707, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "64.6408, 273.535, 106.306, 0.55", "67.3203, 284.299, 111.23, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.0767, 28.5646, 0.0301966, 0.83", "3.91831, 30.3781, 0.229881, 0.83", "4.75233, 32.4392, 0.528699, 0.83", "5.3416, 34.3056, 0.855934, 0.28", "5.54663, 35.0314, 0.961084, 1.11", "6.15284, 37.3095, 1.29103, 0.28", "6.57847, 38.9358, 1.49792, 0.83", "7.07936, 41.0456, 1.71749, 0.28", "7.60012, 43.2899, 1.94879, 0.83", "8.26972, 46.211, 2.28448, 0.55", "8.57778, 47.6189, 2.46669, 1.11", "9.07344, 49.925, 2.79672, 0.55", "9.53994, 52.0441, 3.0634, 0.83", "10.0164, 54.0195, 3.25482, 0.28", "10.4866, 55.8933, 3.41585, 0.83", "10.8297, 57.4627, 3.64442, 0.28", "10.9971, 58.3406, 3.7891, 0.55", "11.3046, 60.1147, 4.1072, 0.28", "11.5044, 61.3425, 4.31558, 0.83", "11.8832, 63.578, 4.64698, 0.83", "12.3622, 66.0817, 5.03504, 0.28", "12.5544, 67.3306, 5.3295, 0.55", "12.6644, 68.4699, 5.64302, 0.28", "12.724, 69.2139, 5.8629, 0.55", "12.8177, 70.6133, 6.24282, 0.28", "12.8888, 71.7151, 6.48866, 0.83", "13.1371, 74.7976, 6.97629, 0.55", "13.2202, 75.923, 7.14781, 0.83", "13.3135, 77.4424, 7.36852, 0.55", "13.4389, 79.218, 7.49218, 0.55", "13.5731, 80.7522, 7.50358, 0.28", "13.6865, 81.7854, 7.47996, 0.55", "13.916, 83.3974, 7.37835, 0.28", "13.9486, 83.6435, 7.36864, 0.55", "14.1913, 85.8179, 7.31414, 0.28", "14.3866, 87.2814, 7.28745, 0.55", "14.5691, 88.5298, 7.32552, 0.28", "14.7894, 89.8817, 7.42393, 0.83", "15.1, 91.3568, 7.59117, 0.83", "15.3411, 92.405, 7.75144, 0.28", "15.6544, 93.6794, 8.08901, 0.55", "16.1121, 95.387, 8.4761, 0.28", "16.1816, 95.6321, 8.52173, 0.55", "16.7406, 97.4426, 8.81083, 0.28", "16.8833, 97.956, 8.89455, 0.55", "17.3709, 100.308, 9.17042, 0.28", "17.7357, 102.541, 9.41749, 0.55", "17.8397, 103.434, 9.50372, 0.28", "17.9449, 104.717, 9.64623, 0.55", "18.0558, 107.286, 10.0127, 0.55", "18.0979, 108.875, 10.2633, 0.28", "18.1216, 110.612, 10.5528, 0.55", "18.1246, 112.198, 10.9581, 0.28", "18.1226, 112.674, 11.0964, 0.55", "18.0865, 113.852, 11.4627, 0.28", "18.0515, 114.852, 11.7672, 0.83", "20.7854, 123.453, 12.9425, 0.83", "23.0358, 132.055, 14.8762, 0.83", "24.0294, 140.956, 16.6309, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.0767, 28.5646, 0.0301966, 0.55", "1.58639, 30.8537, 0.604382, 0.55", "1.28692, 31.3381, 0.721476, 0.55", "-0.223974, 33.9342, 1.29632, 0.83", "-1.84018, 36.8421, 1.81427, 0.55", "-2.42041, 37.9172, 1.98221, 0.55", "-3.173, 39.3936, 2.18555, 0.55", "-3.96505, 41.0918, 2.30293, 0.83", "-5.00063, 43.2795, 2.34304, 0.28", "-5.64256, 44.7104, 2.27186, 0.55", "-6.07261, 45.7432, 2.14919, 0.28", "-6.79412, 47.3807, 1.92701, 0.83", "-7.90654, 49.8091, 1.60561, 0.55", "-8.42071, 50.9277, 1.48449, 0.55", "-9.7443, 53.8565, 1.28834, 0.55", "-10.4521, 55.4418, 1.16042, 0.28", "-11.3031, 57.377, 1.116, 0.55", "-12.0876, 59.2408, 1.06056, 0.28", "-12.8635, 61.1773, 0.999322, 0.28", "-13.5357, 62.8793, 0.895595, 0.55", "-14.8151, 66.0156, 0.625376, 0.55", "-16.37, 70.0795, 0.00940431, 0.28", "-17.5582, 73.241, -0.527852, 0.83", "-18.5154, 75.8094, -0.917784, 0.55", "-19.4691, 78.3829, -1.25259, 0.55", "-20.1109, 80.2742, -1.44767, 0.55", "-21.0895, 83.4686, -1.64328, 0.28", "-21.8469, 86.1656, -1.78514, 0.55", "-22.4094, 88.451, -1.71013, 0.55", "-22.6799, 89.7083, -1.63496, 0.28", "-22.942, 90.8662, -1.54236, 0.83", "-23.498, 92.9121, -1.35219, 0.28", "-24.0969, 94.6518, -1.17455, 0.55", "-25.1152, 97.1815, -0.99096, 0.55", "-26.0575, 99.1408, -0.8733, 0.55", "-26.7813, 100.419, -0.731382, 0.28", "-27.14, 100.973, -0.651988, 0.55", "-27.9675, 102.182, -0.389429, 0.55", "-29.6331, 104.422, 0.161073, 0.28", "-31.1954, 106.333, 0.666916, 0.55", "-32.6754, 108.035, 1.01013, 0.28", "-33.2957, 108.719, 1.15906, 0.55", "-34.7296, 110.212, 1.5267, 0.28", "-36.5988, 112.003, 1.9868, 0.55", "-38.2998, 113.435, 2.33977, 0.28", "-39.6107, 114.466, 2.60665, 0.55", "-42.9897, 117.179, 3.42065, 0.55", "-44.1237, 118.061, 3.72046, 0.55", "-45.6393, 119.217, 4.12857, 0.55", "-47.1961, 120.5, 4.56415, 0.55", "-50.0745, 122.999, 5.50531, 0.55", "-52.0359, 124.724, 6.22938, 0.55", "-53.3644, 125.865, 6.57435, 0.55", "-55.8317, 128.039, 7.20926, 0.55", "-57.9792, 129.972, 7.7974, 0.55", "-60.2066, 132.022, 8.42682, 0.83", "-62.8615, 134.34, 9.11935, 0.28", "-66.0548, 137.067, 9.65819, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "36.0215, -34.3067, 53.712, 0.55", "39.1013, -32.6411, 63.382, 0.55", "42.508, -32.489, 73.0613, 0.55", "45.1925, -31.5896, 82.9343, 0.55", "47.1728, -32.0162, 92.9919, 0.55", "49.9725, -31.3699, 102.849, 0.55", "51.3189, -29.1088, 112.807, 0.55", "52.6857, -26.0477, 122.571, 0.55", "56.2499, -22.0055, 131.416, 0.55", "59.1376, -17.6602, 140.379, 0.55", "61.7212, -11.836, 148.654, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "36.0215, -34.3067, 53.712, 0.55", "38.9842, -32.663, 62.07, 0.55", "42.7499, -32.7663, 70.2289, 0.55", "46.461, -33.969, 78.3226, 0.55", "51.2881, -35.9212, 85.6583, 0.55", "55.592, -37.6686, 93.3558, 0.55", "58.9348, -39.6282, 101.467, 0.55", "61.0755, -41.5725, 109.974, 0.55", "62.6292, -42.368, 118.79, 0.55", "63.0199, -43.195, 127.733, 0.55", "62.4685, -43.5217, 136.71, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "129.514, -103.091, 26.2855, 0.55", "138.179, -107.993, 30.0038, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "129.514, -103.091, 26.2855, 0.55", "140.419, -109.843, 24.5026, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-118.339, -80.5625, 67.2353, 0.55", "-124.783, -82.5356, 75.337, 0.55", "-129.83, -86.1052, 83.9086, 0.55", "-135.193, -91.2017, 91.5391, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-118.339, -80.5625, 67.2353, 0.55", "-124.047, -81.7974, 73.9114, 0.55", "-130.029, -83.8, 80.1705, 0.55", "-137.295, -84.6895, 85.1779, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "26.6776, -65.9437, -19.5649, 0.55", "29.3095, -65.8752, -21.2154, 0.55", "31.522, -65.8578, -22.5642, 0.55", "33.9325, -65.7693, -23.9893, 0.55", "36.576, -65.6826, -25.4781, 0.55", "39.946, -65.477, -27.3107, 0.55", "42.4234, -65.2823, -28.6286, 0.55", "45.2505, -64.896, -30.1054, 0.55", "46.8278, -64.5856, -30.8932, 0.55", "50.0532, -63.6305, -32.4015, 0.55", "51.7042, -63.0131, -33.1075, 0.55", "52.9621, -62.4646, -33.6045, 0.55", "55.9116, -60.9947, -34.7377, 0.55", "57.9057, -59.8507, -35.4928, 0.83", "59.2249, -59.0262, -35.9805, 0.55", "60.977, -57.7985, -36.6045, 0.55", "64.7331, -54.9695, -37.9089, 0.55", "65.8025, -54.0977, -38.2663, 0.55", "66.4689, -53.4935, -38.4844, 0.83", "68.6166, -51.3563, -39.1704, 0.55", "69.9753, -49.8651, -39.5612, 0.55", "71.6646, -47.8325, -39.9371, 0.55", "73.5193, -45.3241, -40.2319, 0.55", "76.0153, -41.8241, -40.5034, 0.55", "77.0844, -40.2946, -40.5756, 0.28", "78.9825, -37.5512, -40.5941, 0.55", "80.7408, -35.0266, -40.5469, 0.28", "81.5687, -33.8256, -40.5048, 0.55", "82.6049, -32.2521, -40.4394, 0.28", "82.9578, -31.7135, -40.4492, 0.55", "84.1416, -29.9715, -40.6701, 0.55", "86.4433, -26.8626, -41.3956, 0.55", "87.8658, -25.0466, -41.946, 0.55", "89.1527, -23.5118, -42.4712, 0.55", "91.8362, -20.4173, -43.6154, 0.55", "94.5645, -17.272, -44.8618, 0.55", "96.7397, -14.7544, -45.9261, 0.55", "98.2033, -13.119, -46.6611, 0.55", "99.3011, -11.9638, -47.1968, 0.83", "99.9024, -11.3499, -47.4798, 0.83", "101.387, -9.88968, -48.1098, 0.55", "101.999, -9.26018, -48.3676, 0.83", "103.727, -7.38619, -49.104, 0.28", "105.209, -5.78518, -49.7144, 0.55", "106.165, -4.78082, -50.06, 0.55", "107.533, -3.35239, -50.5186, 0.55", "109.26, -1.59824, -51.0475, 0.28", "110.602, -0.27104, -51.4614, 0.55", "112.073, 1.08417, -51.9449, 0.83", "113.496, 2.23831, -52.4418, 0.55", "115.581, 3.55843, -53.0906, 0.28", "118.015, 4.8355, -53.8001, 0.55", "119.941, 5.65838, -54.3309, 0.55", "122.588, 6.60001, -55.0687, 0.55", "125.001, 7.32647, -55.7509, 0.55", "128.435, 8.24951, -56.7231, 0.55", "130.44, 8.70961, -57.2331, 0.55", "133.422, 9.456, -57.9548, 0.55", "134.785, 9.89695, -58.2642, 0.28", "137.201, 10.9756, -58.7775, 0.55", "138.088, 11.433, -58.9791, 0.28", "138.871, 11.903, -59.1887, 0.83", "141.443, 13.3941, -59.8053, 0.55", "143.452, 14.7465, -60.2344, 0.28", "145.079, 16.0223, -60.5304, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "26.6776, -65.9437, -19.5649, 0.55", "28.3306, -68.0277, -20.5582, 0.55", "30.2004, -70.3326, -21.6137, 0.55", "32.6238, -73.1999, -22.584, 0.28", "33.6103, -74.3416, -22.9094, 0.28", "35.0144, -75.9073, -23.0871, 0.55", "36.437, -77.4604, -23.1524, 0.28", "38.2501, -79.3663, -23.0913, 0.55", "41.2101, -82.4893, -22.7557, 0.28", "42.9671, -84.2481, -22.4519, 0.55", "47.4646, -88.5522, -21.6319, 0.55", "50.2277, -91.2153, -21.1444, 0.55", "51.9171, -92.8055, -20.9152, 0.28", "52.6835, -93.532, -20.8229, 0.55", "55.8416, -96.5485, -20.5978, 0.28", "57.2397, -97.9145, -20.472, 0.55", "59.7822, -100.443, -20.3019, 0.55", "62.2005, -102.814, -20.0178, 0.55", "64.6965, -105.321, -19.6546, 0.28", "65.3007, -105.936, -19.567, 0.55", "68.0938, -108.962, -19.0631, 0.28", "68.3462, -109.225, -18.9989, 0.55", "69.9886, -110.922, -18.3694, 0.28", "70.7365, -111.833, -17.9841, 0.55", "81.6821, -120.346, -15.878, 0.55", "90.6524, -130.863, -12.8705, 0.55", "97.3164, -142.929, -9.22972, 0.55", "104.493, -155.154, -7.53595, 0.55", "112.945, -166.328, -5.25708, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-14.2346, -62.8965, -12.2515, 0.55", "-15.9851, -62.3249, -12.9794, 0.55", "-19.8419, -61.0619, -14.4669, 0.55", "-25.421, -58.9394, -16.3658, 0.28", "-26.9572, -58.3549, -16.8887, 0.83", "-32.0584, -56.4142, -18.625, 0.55", "-36.6379, -54.6721, -20.1836, 0.55", "-38.1337, -54.1431, -20.7597, 0.28", "-41.0829, -53.3031, -21.9745, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-14.2346, -62.8965, -12.2515, 0.83", "-15.3989, -65.5578, -11.5724, 0.83", "-16.8418, -68.8559, -10.7307, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "24.0294, 140.956, 16.6309, 0.83", "27.0064, 151.491, 18.1691, 0.83", "31.439, 161.574, 18.7078, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "24.0294, 140.956, 16.6309, 0.55", "23.5459, 152.692, 18.3848, 0.83", "23.4949, 164.567, 19.1037, 0.83", "22.2463, 176.217, 20.9693, 0.83", "22.4627, 187.906, 23.0358, 0.83", "22.0992, 199.57, 25.1907, 0.83", "20.4306, 211.327, 25.5828, 0.83", "18.2289, 222.988, 25.1213, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-66.0548, 137.067, 9.65819, 0.28", "-70.2837, 136.264, 10.9797, 0.28", "-71.5691, 136.02, 11.3815, 0.28", "-73.3035, 135.691, 11.9235, 0.55", "-74.8946, 135.388, 12.4208, 0.28", "-76.5123, 135.081, 12.9264, 0.28", "-79.3932, 134.534, 13.8267, 0.83", "-88.4695, 131.827, 16.318, 0.83", "-97.3084, 130.029, 20.083, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-66.0548, 137.067, 9.65819, 0.28", "-68.9456, 139.644, 10.7972, 0.28", "-71.9585, 142.219, 12.093, 0.55", "-74.5806, 144.508, 13.3232, 0.55", "-75.2342, 145.075, 13.6663, 0.55", "-76.7362, 146.471, 14.5198, 0.28", "-78.1437, 147.781, 15.3085, 0.55", "-79.861, 149.337, 16.446, 0.28", "-80.9959, 150.294, 17.2461, 0.28", "-83.2179, 152.171, 18.9422, 0.55", "-85.5267, 154.098, 20.7634, 0.28", "-87.7629, 155.947, 22.5878, 0.55", "-90.718, 158.308, 24.8956, 0.28", "-91.9018, 159.245, 25.8223, 0.55", "-99.3809, 165.754, 32.2736, 0.55", "-106.924, 171.402, 39.356, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.8418, -68.8559, -10.7307, 0.55", "-16.8153, -70.5471, -11.1997, 0.55", "-16.9034, -73.0452, -11.8071, 0.55", "-17.138, -76.9285, -12.7445, 0.55", "-17.6488, -81.4148, -13.6993, 0.55", "-18.1979, -84.7572, -14.4135, 0.55", "-18.7722, -87.2495, -14.9119, 0.55", "-19.3455, -88.9385, -15.18, 0.55", "-20.4652, -91.7868, -15.5679, 0.55", "-21.9764, -95.1812, -15.9696, 0.55", "-23.2521, -97.989, -16.3835, 0.55", "-24.7139, -101.326, -16.9076, 0.55", "-26.7038, -106.211, -17.8512, 0.55", "-28.0746, -109.831, -18.6116, 0.55", "-29.7528, -114.734, -19.661, 0.55", "-30.9288, -118.878, -20.6311, 0.55", "-31.558, -121.633, -21.2275, 0.55", "-32.1116, -124.942, -21.9257, 0.55", "-32.3399, -126.809, -22.298, 0.55", "-32.735, -130.992, -23.0242, 0.55", "-32.7591, -132.611, -23.2905, 0.55", "-32.7474, -136.453, -23.7555, 0.55", "-32.6222, -139.502, -24.1341, 0.55", "-32.4583, -141.524, -24.3382, 0.55", "-32.327, -142.892, -24.4737, 0.55", "-32.0069, -144.997, -24.7246, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-16.8418, -68.8559, -10.7307, 0.55", "-17.2647, -70.8178, -10.2167, 0.55", "-17.7049, -73.2997, -9.65808, 0.55", "-18.0142, -75.2141, -9.29388, 0.55", "-18.5418, -78.6795, -8.7133, 0.55", "-18.7826, -80.0674, -8.48696, 0.55", "-19.091, -81.7533, -8.2058, 0.55", "-19.3694, -83.3066, -7.95562, 0.55", "-19.9934, -86.4925, -7.40075, 0.55", "-20.3739, -88.1366, -7.00259, 0.55", "-20.7875, -89.8774, -6.39841, 0.55", "-21.3997, -92.1844, -5.40343, 0.55", "-21.9204, -94.0115, -4.46876, 0.55", "-22.3768, -95.5471, -3.58711, 0.55", "-22.8976, -97.3715, -2.42796, 0.55", "-23.458, -99.6686, -0.902628, 0.55", "-23.6285, -100.69, -0.260856, 0.55", "-23.6922, -101.366, 0.128392, 0.83", "-23.6852, -102.756, 0.786645, 0.83", "-23.5852, -103.9, 1.18461, 0.83", "-23.0805, -106.459, 1.81709, 0.55", "-22.626, -108.273, 2.12433, 0.83", "-22.2729, -109.503, 2.3869, 0.55", "-21.9485, -110.649, 2.67077, 0.55", "-21.369, -112.681, 3.24538, 0.55", "-21.0483, -114.014, 3.6975, 0.55", "-20.9133, -115.074, 4.12215, 0.55", "-20.901, -117.599, 5.30303, 0.55", "-20.9987, -118.99, 5.95767, 0.55", "-21.1366, -120.178, 6.47291, 0.55", "-21.3527, -122.09, 7.1876, 0.55", "-21.6384, -124.392, 7.91124, 0.55", "-21.8121, -125.869, 8.30805, 0.55", "-22.0039, -127.719, 8.72241, 0.55", "-22.352, -131.124, 9.41693, 0.55", "-22.7049, -134.321, 9.95871, 0.55", "-22.8528, -135.858, 10.1893, 0.55", "-23.0548, -138.235, 10.5408, 0.55", "-23.3905, -141.791, 11.0925, 0.83", "-23.8476, -145.581, 11.7179, 0.83", "-24.0706, -147.168, 11.9768, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.2289, 222.988, 25.1213, 0.83", "17.6979, 230.542, 25.7208, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "18.2289, 222.988, 25.1213, 0.55", "17.702, 230.702, 26.3098, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-32.0069, -144.997, -24.7246, 0.55", "-31.6179, -146.404, -25.8574, 0.55", "-31.2024, -147.827, -26.9683, 0.55", "-30.4894, -150.31, -28.8132, 0.55", "-29.7917, -152.706, -30.6021, 0.55", "-29.2896, -154.3, -31.7937, 0.55", "-28.7737, -155.835, -32.9329, 0.55", "-27.9554, -158.412, -34.6971, 0.55", "-27.3338, -160.291, -35.9202, 0.55", "-27.0466, -161.173, -36.4506, 0.55", "-26.1253, -164.053, -38.0915, 0.83", "-25.497, -166.06, -39.2264, 0.55", "-24.6398, -168.574, -40.6747, 0.55", "-23.9552, -170.575, -41.8063, 0.55", "-23.1065, -173.064, -43.1766, 0.55", "-22.0545, -176.215, -44.8514, 0.55", "-21.4135, -178.232, -45.9096, 0.55", "-20.8286, -180.187, -46.9345, 0.55", "-20.435, -181.485, -47.598, 0.55", "-20.1414, -182.579, -48.0646, 0.28", "-19.9515, -183.396, -48.3198, 0.55", "-19.7734, -184.353, -48.5667, 0.28", "-19.5902, -185.799, -48.8989, 0.55", "-19.3481, -187.916, -49.4408, 0.28", "-18.9903, -190.157, -50.0449, 0.55", "-18.6306, -192.229, -50.6329, 0.55", "-18.3663, -193.869, -51.1028, 0.55", "-18.0068, -195.946, -51.7686, 0.55", "-17.6408, -197.801, -52.3034, 0.55", "-17.119, -200.744, -53.1926, 0.83", "-16.8192, -202.356, -53.6806, 0.28", "-16.4185, -204.747, -54.3561, 0.28", "-16.0731, -207.09, -54.9747, 0.28", "-15.4456, -211.746, -56.191, 0.55", "-15.0543, -215.146, -57.0826, 1.66", "-14.6525, -218.871, -58.0938, 0.55", "-14.2236, -222.464, -59.0929, 0.55", "-13.7637, -226.501, -60.2071, 0.28", "-13.4851, -229.59, -61.0218, 0.55", "-13.2289, -233.002, -61.8951, 0.28", "-13.0696, -235.015, -62.3105, 0.83", "-12.901, -237.607, -62.7744, 0.55", "-12.7146, -240.091, -63.158, 0.55", "-12.5998, -242.561, -63.4271, 0.83", "-12.5483, -245.023, -63.6197, 0.28", "-12.5483, -245.023, -63.6197, 0.55", "-12.612, -246.605, -63.7306, 0.28", "-12.6506, -247.207, -63.7719, 0.55", "-12.7356, -248.904, -63.9903, 0.28", "-12.8152, -250.405, -64.2993, 0.55", "-13.0114, -253.137, -65.0931, 0.28", "-13.0485, -253.794, -65.2941, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-32.0069, -144.997, -24.7246, 0.55", "-31.8918, -146.385, -24.9123, 0.55", "-31.8392, -147.066, -24.9902, 0.28", "-31.7691, -147.768, -25.0776, 0.55", "-31.5041, -149.827, -25.3794, 0.28", "-31.4758, -150.053, -25.4301, 0.55", "-31.2519, -151.812, -25.8977, 0.28", "-31.1373, -152.603, -26.1393, 0.55", "-30.9962, -153.683, -26.4877, 0.28", "-30.8597, -155.128, -26.9549, 0.55", "-30.7468, -157.124, -27.5982, 0.28", "-30.7483, -157.609, -27.7488, 0.55", "-30.8588, -158.718, -28.0464, 0.28", "-30.9192, -159.196, -28.1728, 0.55", "-31.1804, -160.536, -28.4605, 0.28", "-31.3524, -161.185, -28.5502, 0.55", "-31.7432, -162.473, -28.5881, 0.28", "-32.2814, -164.035, -28.6451, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-24.0706, -147.168, 11.9768, 0.55", "-25.0015, -148.597, 12.1254, 0.55", "-27.3948, -152.27, 12.5076, 0.55", "-29.9938, -156.259, 12.9227, 0.55", "-31.779, -158.999, 13.2078, 0.55", "-38.4306, -168.803, 15.4197, 0.55", "-45.2166, -178.516, 17.5919, 0.55", "-52.8719, -186.373, 22.2449, 0.55", "-61.2816, -193.572, 26.5492, 0.55", "-69.9207, -200.236, 31.1701, 0.55", "-77.9214, -206.128, 37.5485, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-24.0706, -147.168, 11.9768, 0.55", "-24.3179, -148.288, 12.3976, 0.55", "-24.5347, -149.717, 12.8591, 0.55", "-25.0088, -152.845, 13.8684, 0.55", "-25.466, -155.86, 14.8419, 0.55", "-25.7735, -157.889, 15.4967, 0.55", "-26.0802, -159.913, 16.1497, 0.55", "-26.431, -162.454, 17.0158, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-32.2814, -164.035, -28.6451, 0.28", "-33.5363, -167.021, -29.0743, 0.28", "-33.8945, -167.946, -29.2352, 0.55", "-34.9144, -170.525, -29.688, 0.28", "-35.3813, -171.705, -29.8953, 0.55", "-36.4347, -174.368, -30.3629, 0.28", "-37.1523, -176.182, -30.6815, 0.83", "-37.8165, -178.103, -31.1209, 0.28", "-38.2838, -179.537, -31.4726, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-32.2814, -164.035, -28.6451, 0.55", "-31.9199, -165.602, -28.5956, 0.55", "-31.3364, -167.79, -28.4594, 0.55", "-30.7781, -170.224, -28.2914, 0.55", "-30.4079, -171.887, -28.1861, 0.55", "-30.1347, -173.152, -28.1193, 0.28", "-29.6643, -175.561, -27.9977, 0.55", "-29.1889, -178.086, -27.863, 0.28", "-28.7946, -181.059, -27.8402, 0.55", "-28.6621, -182.721, -27.8886, 0.28", "-28.6392, -183.934, -27.9454, 0.55", "-28.6582, -185.282, -28.0106, 0.28", "-28.7143, -186.472, -28.0897, 0.55", "-28.9942, -189.548, -28.4619, 0.28", "-29.2775, -192.11, -28.8359, 0.28", "-29.5098, -193.664, -29.0732, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-26.431, -162.454, 17.0158, 0.28", "-24.7758, -162.902, 16.4398, 0.28", "-24.3366, -163.021, 16.2869, 0.55", "-23.0767, -163.362, 15.8485, 0.28", "-22.2269, -163.592, 15.5527, 0.55", "-20.9006, -163.952, 15.0912, 0.28", "-20.2689, -164.123, 14.8713, 0.55", "-13.2945, -166.71, 12.0651, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-26.431, -162.454, 17.0158, 0.55", "-26.6748, -164.888, 17.1144, 0.55", "-26.3113, -172.171, 17.9709, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.2945, -166.71, 12.0651, 0.55", "-6.91125, -168.562, 10.9352, 0.55", "-0.310228, -169.472, 10.0489, 0.55", "6.32101, -170.094, 9.16688, 0.55", "12.8402, -169.404, 7.70706, 0.55", "19.4849, -168.662, 7.06754, 0.55", "25.856, -166.867, 5.83536, 0.55", "32.0469, -164.16, 5.70122, 0.55", "37.5103, -160.078, 5.66832, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-13.2945, -166.71, 12.0651, 0.55", "-1.78942, -169.641, 12.6333, 0.55", "9.4167, -172.67, 15.215, 0.55", "20.5816, -174.475, 18.7954, 0.55", "32.2076, -176.28, 20.2997, 0.55", "43.1731, -179.97, 23.1389, 0.55", "53.8271, -185.355, 24.095, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_58", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_9", "dend_8", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_ChC_97f4d271eb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_54, id: dend_54, parent: dend_28
create dend_54
public dend_54
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_29
create dend_49
public dend_49
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_31
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.4999999999991157)
    connect dend_19(0), soma_0(0.4999999999991157)
    connect dend_0(0), soma_0(0.4999999999991157)
    connect axon_0(0), soma_0(1.0)
    connect dend_54(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.96523, -8.50396, 0.0192879, 2.77292 ) }
    soma_0 { pt3dadd( -4.44098, -7.63716, 0.0179479, 3.51612 ) }
    soma_0 { pt3dadd( -3.91674, -6.77037, 0.0166079, 5.09768 ) }
    soma_0 { pt3dadd( -3.3925, -5.90357, 0.0152679, 6.03936 ) }
    soma_0 { pt3dadd( -2.86825, -5.03677, 0.0139278, 6.97148 ) }
    soma_0 { pt3dadd( -2.34401, -4.16997, 0.0125878, 7.92835 ) }
    soma_0 { pt3dadd( -1.81976, -3.30317, 0.0112478, 9.28613 ) }
    soma_0 { pt3dadd( -1.29552, -2.43637, 0.00990778, 9.94241 ) }
    soma_0 { pt3dadd( -0.771277, -1.56957, 0.00856776, 10.1843 ) }
    soma_0 { pt3dadd( -0.247034, -0.702773, 0.00722774, 10.3452 ) }
    soma_0 { pt3dadd( 0.27721, 0.164025, 0.00588772, 10.228 ) }
    soma_0 { pt3dadd( 0.801453, 1.03082, 0.0045477, 9.54324 ) }
    soma_0 { pt3dadd( 1.3257, 1.89762, 0.00320768, 8.78219 ) }
    soma_0 { pt3dadd( 1.84994, 2.76442, 0.00186766, 7.98349 ) }
    soma_0 { pt3dadd( 2.37418, 3.63122, 5.27637E-4, 7.19659 ) }
    soma_0 { pt3dadd( 2.89843, 4.49802, -8.12382E-4, 6.4097 ) }
    soma_0 { pt3dadd( 3.42267, 5.36482, -0.0021524, 5.30941 ) }
    soma_0 { pt3dadd( 3.94692, 6.23162, -0.00349242, 4.2542 ) }
    soma_0 { pt3dadd( 4.47116, 7.09842, -0.00483244, 3.4094 ) }
    soma_0 { pt3dadd( 4.9954, 7.96521, -0.00617246, 2.28943 ) }
    soma_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 1.46335 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.16275, -9.55365, 5.04691, 2.4 ) }
    dend_28 { pt3dadd( -4.82087, -16.6449, 3.23245, 2.22 ) }
    dend_28 { pt3dadd( -5.35418, -22.3912, 1.76212, 2.22 ) }
    dend_28 { pt3dadd( -5.99912, -29.3402, -0.0159887, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 25/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.23725, 4.22235, -2.37309, 0.55 ) }
    dend_19 { pt3dadd( 8.56881, 6.62538, -3.7866, 0.55 ) }
    dend_19 { pt3dadd( 11.0893, 9.22306, -5.31462, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.56725, 8.32785, -2.03309, 1.94 ) }
    dend_0 { pt3dadd( 4.80229, 10.2786, -3.57764, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 13.2824, 21.6671, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_28 (entry count 33/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.99912, -29.3402, -0.0159887, 0.83 ) }
    dend_54 { pt3dadd( -3.69521, -30.6369, -0.398454, 0.83 ) }
    dend_54 { pt3dadd( -1.83183, -31.6856, -0.707788, 0.83 ) }
    dend_54 { pt3dadd( 0.927462, -33.2386, -1.16585, 0.83 ) }
    dend_54 { pt3dadd( 2.60274, -34.1814, -1.44395, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.99912, -29.3402, -0.0159887, 2.22 ) }
    dend_29 { pt3dadd( -7.20151, -31.8464, -2.3348, 2.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.0893, 9.22306, -5.31462, 0.55 ) }
    dend_27 { pt3dadd( 13.0529, 11.5476, -5.80115, 0.55 ) }
    dend_27 { pt3dadd( 14.8372, 13.7378, -6.21537, 1.11 ) }
    dend_27 { pt3dadd( 16.7932, 16.2422, -6.6456, 0.55 ) }
    dend_27 { pt3dadd( 17.978, 17.8857, -6.91944, 0.55 ) }
    dend_27 { pt3dadd( 19.935, 20.6895, -7.5696, 0.83 ) }
    dend_27 { pt3dadd( 21.4038, 22.892, -8.26285, 0.55 ) }
    dend_27 { pt3dadd( 22.3499, 24.5071, -8.88072, 0.55 ) }
    dend_27 { pt3dadd( 23.7535, 27.1559, -10.0455, 1.11 ) }
    dend_27 { pt3dadd( 24.9626, 29.7192, -11.3485, 1.11 ) }
    dend_27 { pt3dadd( 26.4091, 33.0241, -13.3726, 0.55 ) }
    dend_27 { pt3dadd( 27.6559, 36.331, -15.6584, 0.83 ) }
    dend_27 { pt3dadd( 28.3894, 38.4341, -17.2667, 0.55 ) }
    dend_27 { pt3dadd( 28.6501, 39.2588, -17.9294, 0.55 ) }
    dend_27 { pt3dadd( 29.3566, 41.7252, -19.9887, 1.11 ) }
    dend_27 { pt3dadd( 30.0176, 44.2738, -22.0705, 0.28 ) }
    dend_27 { pt3dadd( 30.2809, 45.4234, -22.8862, 0.55 ) }
    dend_27 { pt3dadd( 30.868, 48.022, -24.7208, 0.28 ) }
    dend_27 { pt3dadd( 31.1669, 49.3882, -25.6957, 0.83 ) }
    dend_27 { pt3dadd( 31.7248, 51.9018, -27.5043, 0.28 ) }
    dend_27 { pt3dadd( 31.9414, 53.0507, -28.309, 0.83 ) }
    dend_27 { pt3dadd( 32.3214, 55.6871, -30.1591, 0.83 ) }
    dend_27 { pt3dadd( 32.8983, 59.4413, -33.0205, 0.28 ) }
    dend_27 { pt3dadd( 33.0622, 60.5329, -33.9253, 0.55 ) }
    dend_27 { pt3dadd( 33.3202, 62.1214, -35.3178, 0.28 ) }
    dend_27 { pt3dadd( 33.5688, 63.6017, -36.6212, 1.11 ) }
    dend_27 { pt3dadd( 34.2741, 67.7243, -40.262, 0.28 ) }
    dend_27 { pt3dadd( 34.6616, 69.952, -42.2101, 0.83 ) }
    dend_27 { pt3dadd( 35.1016, 72.4949, -44.2563, 0.28 ) }
    dend_27 { pt3dadd( 35.3281, 73.7043, -45.1639, 0.55 ) }
    dend_27 { pt3dadd( 35.8096, 75.8907, -46.7761, 0.28 ) }
    dend_27 { pt3dadd( 36.0289, 76.7729, -47.3709, 0.55 ) }
    dend_27 { pt3dadd( 36.3479, 78.1497, -48.1864, 0.28 ) }
    dend_27 { pt3dadd( 36.6358, 79.4466, -48.9795, 0.83 ) }
    dend_27 { pt3dadd( 37.0773, 81.6248, -50.3016, 0.83 ) }
    dend_27 { pt3dadd( 38.0489, 86.97, -53.7582, 0.28 ) }
    dend_27 { pt3dadd( 38.4, 89.3484, -55.2676, 0.55 ) }
    dend_27 { pt3dadd( 38.6608, 91.7626, -56.7808, 0.28 ) }
    dend_27 { pt3dadd( 39.0208, 96.1917, -59.4889, 0.55 ) }
    dend_27 { pt3dadd( 39.2529, 99.8096, -61.569, 0.28 ) }
    dend_27 { pt3dadd( 39.2999, 101.732, -62.5919, 0.55 ) }
    dend_27 { pt3dadd( 39.3644, 104.633, -63.9819, 0.28 ) }
    dend_27 { pt3dadd( 39.4934, 107.161, -65.2609, 0.55 ) }
    dend_27 { pt3dadd( 39.5783, 108.496, -65.8475, 0.55 ) }
    dend_27 { pt3dadd( 39.8715, 112.73, -67.3028, 0.28 ) }
    dend_27 { pt3dadd( 40.0342, 114.378, -67.8442, 0.55 ) }
    dend_27 { pt3dadd( 40.5996, 119.003, -69.2419, 0.28 ) }
    dend_27 { pt3dadd( 40.8124, 120.571, -69.7019, 0.55 ) }
    dend_27 { pt3dadd( 41.3193, 124.185, -70.6439, 0.28 ) }
    dend_27 { pt3dadd( 41.7497, 127.439, -71.5306, 0.55 ) }
    dend_27 { pt3dadd( 42.3044, 131.854, -72.7511, 0.28 ) }
    dend_27 { pt3dadd( 42.4431, 133.044, -73.0759, 0.55 ) }
    dend_27 { pt3dadd( 42.8026, 136.011, -73.9409, 0.28 ) }
    dend_27 { pt3dadd( 43.2315, 139.074, -74.9991, 0.55 ) }
    dend_27 { pt3dadd( 43.8132, 142.636, -76.4613, 0.28 ) }
    dend_27 { pt3dadd( 44.2277, 145.139, -77.5579, 0.55 ) }
    dend_27 { pt3dadd( 44.7692, 148.233, -78.9949, 0.28 ) }
    dend_27 { pt3dadd( 45.4942, 152.283, -80.9655, 0.55 ) }
    dend_27 { pt3dadd( 46.1457, 155.708, -82.7223, 0.28 ) }
    dend_27 { pt3dadd( 46.4512, 157.251, -83.5288, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 47.1789, 160.841, -85.3728, 0.55 ) }
    dend_27 { pt3dadd( 47.7472, 163.608, -86.7251, 0.28 ) }
    dend_27 { pt3dadd( 48.0461, 165.153, -87.4207, 0.55 ) }
    dend_27 { pt3dadd( 48.3778, 167.22, -88.1933, 0.28 ) }
    dend_27 { pt3dadd( 48.6263, 168.834, -88.701, 0.55 ) }
    dend_27 { pt3dadd( 48.838, 170.323, -89.0748, 0.55 ) }
    dend_27 { pt3dadd( 49.1646, 173.088, -89.5488, 0.28 ) }
    dend_27 { pt3dadd( 49.2551, 174.156, -89.698, 0.55 ) }
    dend_27 { pt3dadd( 49.5319, 177.297, -90.172, 0.28 ) }
    dend_27 { pt3dadd( 49.6854, 178.999, -90.4183, 0.83 ) }
    dend_27 { pt3dadd( 49.9197, 181.154, -90.8701, 0.28 ) }
    dend_27 { pt3dadd( 50.1833, 182.483, -91.2802, 0.55 ) }
    dend_27 { pt3dadd( 50.7546, 184.458, -92.0954, 0.28 ) }
    dend_27 { pt3dadd( 51.2901, 185.772, -92.6408, 0.55 ) }
    dend_27 { pt3dadd( 52.7519, 188.543, -93.745, 0.28 ) }
    dend_27 { pt3dadd( 54.0402, 190.708, -94.6178, 0.55 ) }
    dend_27 { pt3dadd( 56.2335, 194.006, -95.9113, 0.28 ) }
    dend_27 { pt3dadd( 57.4021, 195.621, -96.5197, 0.55 ) }
    dend_27 { pt3dadd( 59.8736, 198.709, -97.6109, 0.28 ) }
    dend_27 { pt3dadd( 61.7087, 200.788, -98.4668, 0.28 ) }
    dend_27 { pt3dadd( 62.2209, 201.288, -98.7134, 0.28 ) }
    dend_27 { pt3dadd( 64.7446, 203.512, -99.8828, 0.28 ) }
    dend_27 { pt3dadd( 66.6693, 205.151, -100.789, 0.83 ) }
    dend_27 { pt3dadd( 71.5631, 209.163, -103.263, 0.28 ) }
    dend_27 { pt3dadd( 73.9332, 210.979, -104.601, 0.55 ) }
    dend_27 { pt3dadd( 77.5895, 213.596, -106.725, 0.28 ) }
    dend_27 { pt3dadd( 78.6873, 214.345, -107.362, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 11.0893, 9.22306, -5.31462, 0.55 ) }
    dend_20 { pt3dadd( 11.9382, 12.3711, -6.04317, 0.55 ) }
    dend_20 { pt3dadd( 12.8313, 15.8033, -6.68667, 0.55 ) }
    dend_20 { pt3dadd( 13.2939, 17.7971, -6.96534, 0.55 ) }
    dend_20 { pt3dadd( 14.067, 21.3563, -7.57577, 0.55 ) }
    dend_20 { pt3dadd( 14.5231, 23.6165, -7.96295, 0.28 ) }
    dend_20 { pt3dadd( 15.1765, 26.5952, -8.45577, 1.11 ) }
    dend_20 { pt3dadd( 15.8147, 29.7078, -9.01235, 0.55 ) }
    dend_20 { pt3dadd( 16.1766, 31.7719, -9.4172, 0.55 ) }
    dend_20 { pt3dadd( 16.7226, 35.7213, -10.0995, 0.83 ) }
    dend_20 { pt3dadd( 17.0932, 38.5748, -10.5696, 0.55 ) }
    dend_20 { pt3dadd( 17.5372, 42.5982, -11.1701, 0.55 ) }
    dend_20 { pt3dadd( 17.9186, 46.4212, -11.8165, 0.55 ) }
    dend_20 { pt3dadd( 18.254, 49.9328, -12.5275, 0.55 ) }
    dend_20 { pt3dadd( 18.6439, 54.1012, -13.3454, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.80229, 10.2786, -3.57764, 0.83 ) }
    dend_12 { pt3dadd( 8.16726, 12.7902, -3.75892, 0.83 ) }
    dend_12 { pt3dadd( 12.3336, 15.9, -3.98338, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.80229, 10.2786, -3.57764, 1.11 ) }
    dend_1 { pt3dadd( 3.86721, 14.2998, -3.04392, 1.11 ) }
    dend_1 { pt3dadd( 3.31722, 16.6649, -2.73, 0.83 ) }
    dend_1 { pt3dadd( 2.19632, 21.4852, -2.09022, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 28.8079, 47.3373, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 36.5706, 60.1724, -0.00751248, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 2.60274, -34.1814, -1.44395, 0.55 ) }
    dend_56 { pt3dadd( 4.99894, -36.0735, -0.322366, 0.55 ) }
    dend_56 { pt3dadd( 7.37224, -37.9473, 0.788511, 0.55 ) }
    dend_56 { pt3dadd( 9.33804, -39.4995, 1.70865, 0.28 ) }
    dend_56 { pt3dadd( 11.2801, -41.0329, 2.61764, 0.55 ) }
    dend_56 { pt3dadd( 13.7334, -42.9701, 3.76597, 0.55 ) }
    dend_56 { pt3dadd( 15.5679, -44.4186, 4.62467, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 59/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 2.60274, -34.1814, -1.44395, 0.55 ) }
    dend_55 { pt3dadd( 3.92059, -34.8736, -1.1962, 0.55 ) }
    dend_55 { pt3dadd( 5.64097, -35.6972, -0.954784, 0.55 ) }
    dend_55 { pt3dadd( 6.83793, -36.2218, -0.7909, 0.83 ) }
    dend_55 { pt3dadd( 8.58231, -36.9989, -0.619275, 0.55 ) }
    dend_55 { pt3dadd( 10.2019, -37.7115, -0.481735, 0.55 ) }
    dend_55 { pt3dadd( 12.2065, -38.5751, -0.301597, 0.83 ) }
    dend_55 { pt3dadd( 13.6334, -39.1369, -0.220959, 0.28 ) }
    dend_55 { pt3dadd( 15.0477, -39.636, -0.160842, 0.55 ) }
    dend_55 { pt3dadd( 16.7522, -40.2498, -0.213648, 0.28 ) }
    dend_55 { pt3dadd( 17.7566, -40.636, -0.315353, 0.55 ) }
    dend_55 { pt3dadd( 19.3381, -41.2815, -0.599049, 0.55 ) }
    dend_55 { pt3dadd( 20.7357, -41.8969, -0.903231, 0.55 ) }
    dend_55 { pt3dadd( 22.2189, -42.5663, -1.25417, 0.55 ) }
    dend_55 { pt3dadd( 24.9067, -43.7337, -1.965, 0.55 ) }
    dend_55 { pt3dadd( 26.1347, -44.2691, -2.3109, 0.28 ) }
    dend_55 { pt3dadd( 26.9594, -44.6674, -2.55756, 0.55 ) }
    dend_55 { pt3dadd( 28.1363, -45.2742, -2.92167, 0.55 ) }
    dend_55 { pt3dadd( 29.6012, -46.0849, -3.35213, 0.55 ) }
    dend_55 { pt3dadd( 31.3796, -47.111, -3.81399, 0.55 ) }
    dend_55 { pt3dadd( 33.1554, -48.1449, -4.19944, 0.55 ) }
    dend_55 { pt3dadd( 34.4426, -48.9167, -4.47097, 0.55 ) }
    dend_55 { pt3dadd( 35.9482, -49.8288, -4.79492, 0.55 ) }
    dend_55 { pt3dadd( 37.2145, -50.6045, -5.097, 0.55 ) }
    dend_55 { pt3dadd( 38.4064, -51.3732, -5.4047, 0.55 ) }
    dend_55 { pt3dadd( 40.1577, -52.4907, -5.83746, 0.55 ) }
    dend_55 { pt3dadd( 41.4468, -53.2556, -6.14848, 0.55 ) }
    dend_55 { pt3dadd( 42.897, -54.0755, -6.53231, 0.83 ) }
    dend_55 { pt3dadd( 44.3783, -54.9167, -6.93971, 0.83 ) }
    dend_55 { pt3dadd( 45.6691, -55.6514, -7.31424, 0.55 ) }
    dend_55 { pt3dadd( 47.1149, -56.4769, -7.81906, 0.55 ) }
    dend_55 { pt3dadd( 48.0625, -57.0182, -8.16482, 0.83 ) }
    dend_55 { pt3dadd( 49.7207, -57.8923, -8.76111, 0.28 ) }
    dend_55 { pt3dadd( 50.8849, -58.4481, -9.15347, 0.55 ) }
    dend_55 { pt3dadd( 53.4529, -59.5574, -9.89677, 0.55 ) }
    dend_55 { pt3dadd( 55.8947, -60.5194, -10.5654, 0.55 ) }
    dend_55 { pt3dadd( 56.9911, -60.9305, -10.8509, 0.28 ) }
    dend_55 { pt3dadd( 58.4357, -61.4184, -11.1507, 0.55 ) }
    dend_55 { pt3dadd( 60.7649, -62.1474, -11.5269, 0.28 ) }
    dend_55 { pt3dadd( 62.1261, -62.6017, -11.6793, 0.28 ) }
    dend_55 { pt3dadd( 63.273, -63.0084, -11.7996, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_55 { pt3dadd( 64.6805, -63.5956, -11.9719, 0.55 ) }
    dend_55 { pt3dadd( 65.8405, -64.175, -12.1809, 0.55 ) }
    dend_55 { pt3dadd( 67.5474, -65.2454, -12.621, 0.55 ) }
    dend_55 { pt3dadd( 69.2554, -66.467, -13.2058, 0.55 ) }
    dend_55 { pt3dadd( 71.1925, -67.8837, -14.0083, 0.55 ) }
    dend_55 { pt3dadd( 72.3472, -68.7678, -14.4865, 0.28 ) }
    dend_55 { pt3dadd( 73.2058, -69.4541, -14.8534, 0.55 ) }
    dend_55 { pt3dadd( 74.9192, -70.8881, -15.6226, 0.55 ) }
    dend_55 { pt3dadd( 76.5443, -72.2702, -16.3068, 0.55 ) }
    dend_55 { pt3dadd( 77.9914, -73.4802, -16.8898, 0.83 ) }
    dend_55 { pt3dadd( 79.1908, -74.521, -17.2636, 0.83 ) }
    dend_55 { pt3dadd( 79.7872, -75.0023, -17.4304, 0.83 ) }
    dend_55 { pt3dadd( 81.1337, -76.0088, -17.7518, 0.28 ) }
    dend_55 { pt3dadd( 82.1033, -76.6432, -17.8823, 0.83 ) }
    dend_55 { pt3dadd( 84.0584, -77.7561, -17.9772, 0.28 ) }
    dend_55 { pt3dadd( 85.3576, -78.3868, -18.0241, 0.83 ) }
    dend_55 { pt3dadd( 87.2129, -79.1668, -17.9718, 0.55 ) }
    dend_55 { pt3dadd( 88.4927, -79.6139, -17.8245, 0.55 ) }
    dend_55 { pt3dadd( 91.3137, -80.4605, -17.198, 0.55 ) }
    dend_55 { pt3dadd( 92.722, -80.8501, -16.6791, 0.55 ) }
    dend_55 { pt3dadd( 94.1149, -81.2085, -15.9303, 0.55 ) }
    dend_55 { pt3dadd( 96.2086, -81.7647, -14.3278, 0.55 ) }
    dend_55 { pt3dadd( 96.9349, -82.0163, -13.578, 0.55 ) }
    dend_55 { pt3dadd( 97.7553, -82.3633, -12.5678, 0.83 ) }
    dend_55 { pt3dadd( 99.1947, -83.1698, -10.5266, 0.28 ) }
    dend_55 { pt3dadd( 99.6523, -83.477, -9.86022, 0.55 ) }
    dend_55 { pt3dadd( 101.043, -84.4685, -7.86037, 0.28 ) }
    dend_55 { pt3dadd( 102.286, -85.436, -6.34703, 0.55 ) }
    dend_55 { pt3dadd( 102.802, -85.8686, -5.80538, 0.55 ) }
    dend_55 { pt3dadd( 103.931, -86.8185, -4.86017, 0.28 ) }
    dend_55 { pt3dadd( 104.614, -87.3916, -4.46645, 0.28 ) }
    dend_55 { pt3dadd( 105.266, -87.9307, -4.18423, 0.55 ) }
    dend_55 { pt3dadd( 106.63, -88.9639, -3.81331, 0.28 ) }
    dend_55 { pt3dadd( 107.429, -89.5014, -3.64888, 0.28 ) }
    dend_55 { pt3dadd( 107.951, -89.8172, -3.54877, 0.55 ) }
    dend_55 { pt3dadd( 109.452, -90.5565, -3.25871, 0.28 ) }
    dend_55 { pt3dadd( 110.868, -91.1962, -2.95664, 0.55 ) }
    dend_55 { pt3dadd( 112.105, -91.6462, -2.66143, 0.28 ) }
    dend_55 { pt3dadd( 113.259, -92.0037, -2.3682, 0.55 ) }
    dend_55 { pt3dadd( 115.078, -92.5124, -1.89077, 0.28 ) }
    dend_55 { pt3dadd( 116.541, -92.8745, -1.48969, 0.28 ) }
    dend_55 { pt3dadd( 118.393, -93.2703, -0.929524, 0.55 ) }
    dend_55 { pt3dadd( 119.951, -93.5793, -0.419407, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_29 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -7.20151, -31.8464, -2.3348, 0.55 ) }
    dend_49 { pt3dadd( -8.74199, -33.6935, -3.49883, 0.55 ) }
    dend_49 { pt3dadd( -9.57474, -34.5853, -4.05561, 0.55 ) }
    dend_49 { pt3dadd( -10.952, -36.0731, -4.89899, 0.83 ) }
    dend_49 { pt3dadd( -13.3532, -38.8951, -6.40353, 0.55 ) }
    dend_49 { pt3dadd( -14.9787, -40.9277, -7.38892, 0.55 ) }
    dend_49 { pt3dadd( -16.6852, -43.1157, -8.3993, 0.83 ) }
    dend_49 { pt3dadd( -18.2188, -45.1939, -9.28751, 0.55 ) }
    dend_49 { pt3dadd( -19.3685, -46.7208, -9.85463, 1.11 ) }
    dend_49 { pt3dadd( -20.6458, -48.4211, -10.3267, 0.28 ) }
    dend_49 { pt3dadd( -22.034, -50.4167, -10.6376, 0.55 ) }
    dend_49 { pt3dadd( -22.6734, -51.4604, -10.7922, 0.28 ) }
    dend_49 { pt3dadd( -23.9252, -53.4382, -11.0381, 0.55 ) }
    dend_49 { pt3dadd( -24.8309, -54.6982, -11.1373, 0.28 ) }
    dend_49 { pt3dadd( -26.8895, -57.1348, -11.2673, 0.83 ) }
    dend_49 { pt3dadd( -29.2204, -59.4809, -11.2914, 0.55 ) }
    dend_49 { pt3dadd( -31.6696, -61.8459, -11.2982, 0.55 ) }
    dend_49 { pt3dadd( -33.9192, -63.9333, -11.2836, 0.55 ) }
    dend_49 { pt3dadd( -36.4092, -66.0753, -11.2687, 0.55 ) }
    dend_49 { pt3dadd( -38.5274, -67.7628, -11.2623, 0.55 ) }
    dend_49 { pt3dadd( -40.9537, -69.3879, -11.1651, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -7.20151, -31.8464, -2.3348, 1.66 ) }
    dend_30 { pt3dadd( -6.05696, -34.6607, -2.62226, 1.66 ) }
    dend_30 { pt3dadd( -4.37609, -38.7937, -3.04443, 0.83 ) }
    dend_30 { pt3dadd( -2.26732, -43.979, -3.57407, 0.83 ) }
    dend_30 { pt3dadd( -0.370074, -48.6441, -4.05059, 0.83 ) }
    dend_30 { pt3dadd( 1.0885, -52.2306, -4.41692, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 18.6439, 54.1012, -13.3454, 0.55 ) }
    dend_24 { pt3dadd( 19.694, 56.2646, -14.7953, 0.55 ) }
    dend_24 { pt3dadd( 21.126, 58.8854, -16.5878, 0.55 ) }
    dend_24 { pt3dadd( 22.6974, 61.8358, -18.4483, 0.28 ) }
    dend_24 { pt3dadd( 24.0477, 64.4625, -19.9898, 0.83 ) }
    dend_24 { pt3dadd( 24.9494, 66.2859, -21.0175, 0.55 ) }
    dend_24 { pt3dadd( 26.1322, 68.7106, -22.3245, 0.55 ) }
    dend_24 { pt3dadd( 27.5867, 71.5911, -23.7836, 0.55 ) }
    dend_24 { pt3dadd( 29.2203, 74.864, -25.0581, 0.83 ) }
    dend_24 { pt3dadd( 30.2959, 77.1996, -25.6646, 0.28 ) }
    dend_24 { pt3dadd( 30.5685, 77.8522, -25.7808, 0.28 ) }
    dend_24 { pt3dadd( 31.5043, 80.2845, -26.0804, 0.55 ) }
    dend_24 { pt3dadd( 32.3195, 82.5488, -26.2856, 0.55 ) }
    dend_24 { pt3dadd( 33.9675, 87.1911, -26.7197, 0.55 ) }
    dend_24 { pt3dadd( 34.7887, 89.4688, -26.9902, 0.55 ) }
    dend_24 { pt3dadd( 36.5317, 94.2623, -27.6948, 0.55 ) }
    dend_24 { pt3dadd( 37.5985, 97.1967, -28.2023, 0.55 ) }
    dend_24 { pt3dadd( 38.8836, 100.75, -28.9442, 0.55 ) }
    dend_24 { pt3dadd( 40.3737, 104.65, -30.0781, 0.55 ) }
    dend_24 { pt3dadd( 41.1501, 106.393, -30.744, 0.55 ) }
    dend_24 { pt3dadd( 41.8549, 107.67, -31.3592, 0.28 ) }
    dend_24 { pt3dadd( 42.3891, 108.433, -31.797, 0.55 ) }
    dend_24 { pt3dadd( 43.3764, 109.587, -32.4993, 0.28 ) }
    dend_24 { pt3dadd( 45.3304, 111.628, -33.7417, 0.55 ) }
    dend_24 { pt3dadd( 48.5355, 114.85, -35.4751, 0.55 ) }
    dend_24 { pt3dadd( 51.091, 117.399, -36.9188, 0.55 ) }
    dend_24 { pt3dadd( 52.5616, 118.84, -37.7362, 0.55 ) }
    dend_24 { pt3dadd( 55.9808, 122.059, -39.6876, 0.55 ) }
    dend_24 { pt3dadd( 57.3497, 123.405, -40.4954, 0.55 ) }
    dend_24 { pt3dadd( 58.4959, 124.651, -41.2058, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 60.0, 126.539, -42.3302, 0.55 ) }
    dend_24 { pt3dadd( 61.2319, 128.404, -43.3472, 0.55 ) }
    dend_24 { pt3dadd( 62.4475, 130.75, -44.6568, 0.55 ) }
    dend_24 { pt3dadd( 63.4628, 133.421, -46.0755, 0.55 ) }
    dend_24 { pt3dadd( 64.506, 136.569, -47.7814, 0.55 ) }
    dend_24 { pt3dadd( 65.0353, 138.298, -48.7066, 0.55 ) }
    dend_24 { pt3dadd( 65.5084, 139.973, -49.5256, 0.55 ) }
    dend_24 { pt3dadd( 66.1466, 142.012, -50.5719, 0.55 ) }
    dend_24 { pt3dadd( 67.3506, 145.093, -52.1673, 0.55 ) }
    dend_24 { pt3dadd( 68.9946, 148.035, -53.8656, 0.55 ) }
    dend_24 { pt3dadd( 69.9528, 149.277, -54.7156, 0.55 ) }
    dend_24 { pt3dadd( 70.9002, 150.287, -55.4746, 0.55 ) }
    dend_24 { pt3dadd( 73.6957, 152.85, -57.595, 0.55 ) }
    dend_24 { pt3dadd( 74.8188, 153.774, -58.375, 0.55 ) }
    dend_24 { pt3dadd( 76.7253, 155.229, -59.6867, 0.55 ) }
    dend_24 { pt3dadd( 78.9244, 156.912, -61.1319, 0.55 ) }
    dend_24 { pt3dadd( 80.2227, 157.929, -62.0127, 0.28 ) }
    dend_24 { pt3dadd( 81.1763, 158.662, -62.709, 0.28 ) }
    dend_24 { pt3dadd( 82.2048, 159.47, -63.4993, 0.55 ) }
    dend_24 { pt3dadd( 84.9027, 161.523, -65.5646, 0.55 ) }
    dend_24 { pt3dadd( 87.708, 163.591, -67.7339, 0.55 ) }
    dend_24 { pt3dadd( 89.0676, 164.472, -68.7811, 0.83 ) }
    dend_24 { pt3dadd( 92.7423, 166.626, -72.2775, 0.55 ) }
    dend_24 { pt3dadd( 94.854, 167.684, -74.5805, 0.55 ) }
    dend_24 { pt3dadd( 96.4386, 168.451, -76.4751, 0.55 ) }
    dend_24 { pt3dadd( 98.9467, 169.57, -79.7593, 0.55 ) }
    dend_24 { pt3dadd( 102.323, 171.051, -84.3704, 0.55 ) }
    dend_24 { pt3dadd( 107.846, 173.225, -92.1238, 0.55 ) }
    dend_24 { pt3dadd( 111.987, 174.781, -98.1183, 0.55 ) }
    dend_24 { pt3dadd( 113.546, 175.321, -100.451, 0.55 ) }
    dend_24 { pt3dadd( 116.887, 176.396, -105.615, 0.55 ) }
    dend_24 { pt3dadd( 118.74, 176.946, -108.492, 0.55 ) }
    dend_24 { pt3dadd( 121.733, 177.94, -113.135, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 33/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 18.6439, 54.1012, -13.3454, 0.28 ) }
    dend_21 { pt3dadd( 18.178, 57.6913, -12.9578, 0.28 ) }
    dend_21 { pt3dadd( 17.9637, 59.5717, -12.7399, 0.83 ) }
    dend_21 { pt3dadd( 17.6927, 62.5373, -12.3648, 0.55 ) }
    dend_21 { pt3dadd( 17.4499, 65.4757, -11.9963, 0.55 ) }
    dend_21 { pt3dadd( 17.1617, 69.3774, -11.5504, 0.28 ) }
    dend_21 { pt3dadd( 16.9927, 71.9541, -11.2902, 0.28 ) }
    dend_21 { pt3dadd( 16.9619, 72.9421, -11.2139, 0.55 ) }
    dend_21 { pt3dadd( 16.9145, 74.98, -11.0534, 0.28 ) }
    dend_21 { pt3dadd( 16.9163, 76.1469, -10.9851, 0.55 ) }
    dend_21 { pt3dadd( 16.9585, 77.5992, -10.9264, 0.28 ) }
    dend_21 { pt3dadd( 17.0743, 79.0538, -11.0233, 0.55 ) }
    dend_21 { pt3dadd( 17.237, 81.1469, -11.2886, 0.28 ) }
    dend_21 { pt3dadd( 17.237, 81.1469, -11.2886, 0.55 ) }
    dend_21 { pt3dadd( 17.6485, 83.6756, -11.7779, 0.55 ) }
    dend_21 { pt3dadd( 18.1959, 85.9807, -12.3844, 0.83 ) }
    dend_21 { pt3dadd( 19.1083, 88.8178, -13.3185, 0.55 ) }
    dend_21 { pt3dadd( 19.6616, 90.2433, -13.8517, 0.55 ) }
    dend_21 { pt3dadd( 20.7581, 92.7903, -14.7823, 0.55 ) }
    dend_21 { pt3dadd( 21.8518, 95.1946, -15.5987, 0.28 ) }
    dend_21 { pt3dadd( 23.641, 99.0011, -16.7699, 0.83 ) }
    dend_21 { pt3dadd( 24.7714, 101.44, -17.4198, 0.28 ) }
    dend_21 { pt3dadd( 25.5793, 103.199, -17.7182, 0.55 ) }
    dend_21 { pt3dadd( 26.8961, 106.149, -18.1106, 0.28 ) }
    dend_21 { pt3dadd( 27.461, 107.535, -18.2144, 0.55 ) }
    dend_21 { pt3dadd( 28.2874, 109.945, -18.1718, 0.28 ) }
    dend_21 { pt3dadd( 28.6203, 111.23, -18.0194, 0.55 ) }
    dend_21 { pt3dadd( 29.2828, 114.104, -17.6286, 0.28 ) }
    dend_21 { pt3dadd( 29.8391, 116.339, -17.2945, 0.55 ) }
    dend_21 { pt3dadd( 30.4362, 118.59, -16.9762, 0.28 ) }
    dend_21 { pt3dadd( 31.0438, 120.977, -16.6745, 0.55 ) }
    dend_21 { pt3dadd( 31.7152, 123.515, -16.4043, 0.28 ) }
    dend_21 { pt3dadd( 32.6777, 127.21, -16.1494, 0.55 ) }
    dend_21 { pt3dadd( 33.3368, 129.452, -16.0513, 0.28 ) }
    dend_21 { pt3dadd( 33.6578, 130.481, -15.9602, 0.55 ) }
    dend_21 { pt3dadd( 34.3234, 132.444, -15.7566, 0.28 ) }
    dend_21 { pt3dadd( 34.8505, 133.865, -15.6037, 0.55 ) }
    dend_21 { pt3dadd( 35.6322, 135.935, -15.3874, 0.55 ) }
    dend_21 { pt3dadd( 36.3802, 137.976, -15.0815, 0.55 ) }
    dend_21 { pt3dadd( 37.6599, 141.485, -14.3985, 0.55 ) }
    dend_21 { pt3dadd( 38.688, 144.452, -13.7099, 0.55 ) }
    dend_21 { pt3dadd( 39.7253, 147.521, -12.981, 0.55 ) }
    dend_21 { pt3dadd( 40.961, 151.474, -12.0971, 0.55 ) }
    dend_21 { pt3dadd( 42.1978, 155.662, -11.2336, 0.55 ) }
    dend_21 { pt3dadd( 42.8665, 158.052, -10.8226, 0.28 ) }
    dend_21 { pt3dadd( 43.5397, 160.282, -10.4941, 0.55 ) }
    dend_21 { pt3dadd( 44.2366, 162.55, -10.2201, 0.55 ) }
    dend_21 { pt3dadd( 44.6862, 163.964, -10.0968, 0.83 ) }
    dend_21 { pt3dadd( 45.7389, 167.365, -9.96883, 0.28 ) }
    dend_21 { pt3dadd( 46.7357, 170.362, -10.8532, 0.55 ) }
    dend_21 { pt3dadd( 47.7281, 173.091, -12.4532, 0.28 ) }
    dend_21 { pt3dadd( 48.065, 173.995, -13.188, 0.55 ) }
    dend_21 { pt3dadd( 49.1005, 176.895, -15.784, 0.55 ) }
    dend_21 { pt3dadd( 49.5938, 178.39, -17.2598, 0.55 ) }
    dend_21 { pt3dadd( 52.7393, 188.685, -28.016, 0.28 ) }
    dend_21 { pt3dadd( 53.3169, 190.742, -30.1322, 0.28 ) }
    dend_21 { pt3dadd( 53.8121, 192.667, -32.0179, 0.55 ) }
    dend_21 { pt3dadd( 54.4599, 195.167, -34.4511, 0.55 ) }
    dend_21 { pt3dadd( 54.7528, 196.309, -35.5269, 0.55 ) }
    dend_21 { pt3dadd( 55.3863, 199.025, -37.1443, 0.55 ) }
    dend_21 { pt3dadd( 55.9955, 202.466, -37.1813, 0.55 ) }
    dend_21 { pt3dadd( 56.2471, 203.962, -37.2459, 0.55 ) }
    dend_21 { pt3dadd( 62.3682, 215.445, -36.885, 0.55 ) }
    dend_21 { pt3dadd( 69.8031, 225.998, -38.0723, 0.55 ) }
    dend_21 { pt3dadd( 75.7163, 237.612, -37.951, 0.55 ) }
    dend_21 { pt3dadd( 81.6723, 249.205, -38.1179, 0.55 ) }
    dend_21 { pt3dadd( 85.7078, 261.636, -37.2587, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 91.0695, 273.172, -34.6013, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 12.3336, 15.9, -3.98338, 0.55 ) }
    dend_16 { pt3dadd( 15.1116, 17.5434, -4.59324, 0.55 ) }
    dend_16 { pt3dadd( 17.7715, 19.1091, -5.01304, 0.83 ) }
    dend_16 { pt3dadd( 20.5416, 20.761, -5.35906, 0.28 ) }
    dend_16 { pt3dadd( 22.5636, 21.9365, -5.4921, 0.55 ) }
    dend_16 { pt3dadd( 24.9349, 23.2812, -5.58136, 0.28 ) }
    dend_16 { pt3dadd( 26.7133, 24.2468, -5.67256, 0.83 ) }
    dend_16 { pt3dadd( 29.4238, 25.6392, -5.74029, 0.55 ) }
    dend_16 { pt3dadd( 31.6442, 26.7128, -5.73047, 0.83 ) }
    dend_16 { pt3dadd( 34.4928, 27.9735, -5.688, 0.28 ) }
    dend_16 { pt3dadd( 36.3604, 28.7219, -5.70534, 0.55 ) }
    dend_16 { pt3dadd( 39.6645, 29.9531, -5.81549, 0.28 ) }
    dend_16 { pt3dadd( 42.3465, 30.9302, -6.00457, 0.83 ) }
    dend_16 { pt3dadd( 44.4988, 31.709, -6.25944, 0.28 ) }
    dend_16 { pt3dadd( 47.1003, 32.6267, -6.66398, 0.55 ) }
    dend_16 { pt3dadd( 50.1385, 33.6986, -7.25037, 0.28 ) }
    dend_16 { pt3dadd( 51.465, 34.1763, -7.53152, 0.83 ) }
    dend_16 { pt3dadd( 54.4257, 35.2834, -8.17431, 0.28 ) }
    dend_16 { pt3dadd( 55.3392, 35.6271, -8.40875, 0.55 ) }
    dend_16 { pt3dadd( 58.1247, 36.7034, -9.24375, 0.83 ) }
    dend_16 { pt3dadd( 60.5038, 37.6087, -10.0033, 0.28 ) }
    dend_16 { pt3dadd( 62.2583, 38.2825, -10.6072, 0.83 ) }
    dend_16 { pt3dadd( 63.8439, 38.9323, -11.171, 0.28 ) }
    dend_16 { pt3dadd( 64.4704, 39.197, -11.3892, 0.55 ) }
    dend_16 { pt3dadd( 66.4251, 40.0827, -12.0448, 0.28 ) }
    dend_16 { pt3dadd( 68.5214, 41.1432, -12.7933, 0.83 ) }
    dend_16 { pt3dadd( 70.7494, 42.3612, -13.5558, 0.28 ) }
    dend_16 { pt3dadd( 71.6662, 42.8948, -13.8288, 0.55 ) }
    dend_16 { pt3dadd( 73.9934, 44.3071, -14.4628, 0.28 ) }
    dend_16 { pt3dadd( 75.6611, 45.4153, -14.8437, 0.55 ) }
    dend_16 { pt3dadd( 78.9948, 47.7749, -15.5211, 0.28 ) }
    dend_16 { pt3dadd( 80.1119, 48.6303, -15.7006, 0.83 ) }
    dend_16 { pt3dadd( 82.6319, 50.6229, -15.9996, 0.28 ) }
    dend_16 { pt3dadd( 84.211, 51.9296, -16.1458, 0.83 ) }
    dend_16 { pt3dadd( 88.0294, 55.3026, -16.384, 0.28 ) }
    dend_16 { pt3dadd( 89.6178, 56.7216, -16.3631, 0.83 ) }
    dend_16 { pt3dadd( 92.5334, 59.2943, -16.17, 0.28 ) }
    dend_16 { pt3dadd( 93.5126, 60.1406, -16.077, 0.55 ) }
    dend_16 { pt3dadd( 94.8728, 61.291, -15.884, 0.28 ) }
    dend_16 { pt3dadd( 95.4776, 61.7685, -15.7548, 0.55 ) }
    dend_16 { pt3dadd( 98.568, 63.9345, -14.8327, 0.28 ) }
    dend_16 { pt3dadd( 100.324, 65.1209, -14.3293, 0.55 ) }
    dend_16 { pt3dadd( 102.708, 66.7, -13.7546, 0.28 ) }
    dend_16 { pt3dadd( 103.549, 67.2208, -13.5388, 0.83 ) }
    dend_16 { pt3dadd( 107.541, 69.5597, -12.5769, 0.28 ) }
    dend_16 { pt3dadd( 109.425, 70.6377, -12.1391, 0.55 ) }
    dend_16 { pt3dadd( 112.136, 72.1992, -11.5529, 0.28 ) }
    dend_16 { pt3dadd( 114.034, 73.2821, -11.1517, 0.83 ) }
    dend_16 { pt3dadd( 118.524, 75.8099, -10.3375, 0.28 ) }
    dend_16 { pt3dadd( 121.542, 77.4503, -9.71183, 0.55 ) }
    dend_16 { pt3dadd( 123.698, 78.5967, -9.24564, 0.28 ) }
    dend_16 { pt3dadd( 124.797, 79.164, -8.97519, 0.55 ) }
    dend_16 { pt3dadd( 127.168, 80.3155, -8.30279, 0.28 ) }
    dend_16 { pt3dadd( 128.283, 80.851, -7.99536, 0.55 ) }
    dend_16 { pt3dadd( 132.718, 83.0229, -6.99281, 0.28 ) }
    dend_16 { pt3dadd( 134.461, 83.8579, -6.62625, 0.83 ) }
    dend_16 { pt3dadd( 138.529, 85.6435, -5.76586, 0.28 ) }
    dend_16 { pt3dadd( 139.846, 86.1646, -5.44981, 0.28 ) }
    dend_16 { pt3dadd( 141.203, 86.6651, -5.13632, 0.55 ) }
    dend_16 { pt3dadd( 143.178, 87.385, -4.69595, 0.28 ) }
    dend_16 { pt3dadd( 144.791, 87.9574, -4.43411, 0.55 ) }
    dend_16 { pt3dadd( 148.329, 89.0923, -3.7597, 0.28 ) }
    dend_16 { pt3dadd( 150.713, 89.7728, -3.22229, 0.83 ) }
    dend_16 { pt3dadd( 152.782, 90.3503, -2.60586, 0.28 ) }
    dend_16 { pt3dadd( 154.527, 90.7845, -1.92852, 0.55 ) }
    dend_16 { pt3dadd( 165.517, 96.7153, -3.30925, 0.55 ) }
    dend_16 { pt3dadd( 176.635, 101.68, -6.20204, 0.55 ) }
    dend_16 { pt3dadd( 188.21, 106.433, -6.63366, 0.55 ) }
    dend_16 { pt3dadd( 200.328, 108.811, -8.14418, 0.55 ) }
    dend_16 { pt3dadd( 212.034, 112.369, -10.5529, 0.55 ) }
    dend_16 { pt3dadd( 222.912, 116.695, -14.8867, 0.55 ) }
    dend_16 { pt3dadd( 233.313, 121.311, -20.0284, 0.55 ) }
    dend_16 { pt3dadd( 243.364, 123.49, -26.9938, 0.55 ) }
    dend_16 { pt3dadd( 253.706, 124.696, -33.7482, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 12.3336, 15.9, -3.98338, 0.55 ) }
    dend_13 { pt3dadd( 13.4666, 20.8777, -1.37414, 0.55 ) }
    dend_13 { pt3dadd( 15.163, 27.455, 2.02996, 0.83 ) }
    dend_13 { pt3dadd( 15.9992, 30.0768, 3.39159, 0.55 ) }
    dend_13 { pt3dadd( 16.8499, 32.754, 4.88205, 0.83 ) }
    dend_13 { pt3dadd( 18.4975, 38.0479, 8.25214, 0.83 ) }
    dend_13 { pt3dadd( 19.4044, 40.7648, 10.127, 0.55 ) }
    dend_13 { pt3dadd( 20.4524, 43.4415, 12.2001, 0.55 ) }
    dend_13 { pt3dadd( 21.2202, 45.2633, 13.9002, 0.55 ) }
    dend_13 { pt3dadd( 22.8442, 48.6623, 17.2886, 0.55 ) }
    dend_13 { pt3dadd( 24.4855, 52.3048, 21.2688, 0.55 ) }
    dend_13 { pt3dadd( 24.9865, 53.6935, 22.6338, 0.55 ) }
    dend_13 { pt3dadd( 29.6553, 64.518, 29.2533, 0.55 ) }
    dend_13 { pt3dadd( 34.5192, 75.0872, 36.1023, 0.55 ) }
    dend_13 { pt3dadd( 38.0617, 86.7134, 42.1632, 0.55 ) }
    dend_13 { pt3dadd( 41.9816, 97.9902, 48.5796, 0.55 ) }
    dend_13 { pt3dadd( 44.5779, 110.873, 52.4225, 0.55 ) }
    dend_13 { pt3dadd( 49.7764, 122.717, 56.6407, 0.55 ) }
    dend_13 { pt3dadd( 56.9097, 133.613, 60.3279, 0.55 ) }
    dend_13 { pt3dadd( 62.6934, 145.196, 64.4444, 0.55 ) }
    dend_13 { pt3dadd( 66.8876, 157.402, 68.8375, 0.55 ) }
    dend_13 { pt3dadd( 70.706, 170.029, 72.4267, 0.55 ) }
    dend_13 { pt3dadd( 72.3224, 182.776, 77.1117, 0.55 ) }
    dend_13 { pt3dadd( 72.3963, 195.882, 81.1304, 0.55 ) }
    dend_13 { pt3dadd( 71.0022, 208.802, 85.4404, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 69.629, 221.505, 90.3009, 0.55 ) }
    dend_13 { pt3dadd( 67.4238, 234.658, 93.4965, 0.55 ) }
    dend_13 { pt3dadd( 65.7722, 247.789, 97.0846, 0.55 ) }
    dend_13 { pt3dadd( 65.0914, 260.647, 101.719, 0.55 ) }
    dend_13 { pt3dadd( 64.6408, 273.535, 106.306, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 5/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.19632, 21.4852, -2.09022, 0.28 ) }
    dend_11 { pt3dadd( 1.04551, 21.6101, -1.91673, 0.28 ) }
    dend_11 { pt3dadd( 0.55399, 21.6612, -1.86109, 0.55 ) }
    dend_11 { pt3dadd( -2.00501, 21.9275, -1.57144, 0.28 ) }
    dend_11 { pt3dadd( -2.70012, 21.9999, -1.49276, 0.55 ) }
    dend_11 { pt3dadd( -5.31813, 22.2723, -1.19643, 0.28 ) }
    dend_11 { pt3dadd( -6.67107, 22.4131, -1.04329, 0.28 ) }
    dend_11 { pt3dadd( -7.21917, 22.4603, -1.00313, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.19632, 21.4852, -2.09022, 0.83 ) }
    dend_2 { pt3dadd( 2.60153, 24.7436, -1.11426, 0.83 ) }
    dend_2 { pt3dadd( 3.0767, 28.5646, 0.0301966, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 15.5679, -44.4186, 4.62467, 0.55 ) }
    dend_60 { pt3dadd( 16.897, -45.1336, 8.25851, 0.55 ) }
    dend_60 { pt3dadd( 17.7561, -45.2584, 10.4104, 0.55 ) }
    dend_60 { pt3dadd( 19.3366, -45.1127, 14.0678, 0.55 ) }
    dend_60 { pt3dadd( 20.2516, -44.8405, 16.1506, 0.55 ) }
    dend_60 { pt3dadd( 21.6645, -44.4205, 19.3669, 0.55 ) }
    dend_60 { pt3dadd( 22.8186, -44.0774, 21.9937, 0.55 ) }
    dend_60 { pt3dadd( 24.36, -43.3725, 25.1568, 0.55 ) }
    dend_60 { pt3dadd( 25.7211, -42.4688, 27.9804, 0.55 ) }
    dend_60 { pt3dadd( 28.1447, -40.4989, 32.6225, 0.55 ) }
    dend_60 { pt3dadd( 32.6166, -37.8568, 43.0848, 0.55 ) }
    dend_60 { pt3dadd( 36.0215, -34.3067, 53.712, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 28/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 15.5679, -44.4186, 4.62467, 0.55 ) }
    dend_57 { pt3dadd( 17.9311, -46.048, 4.70941, 0.55 ) }
    dend_57 { pt3dadd( 20.8178, -48.025, 4.81031, 0.28 ) }
    dend_57 { pt3dadd( 22.989, -49.5424, 4.85286, 0.83 ) }
    dend_57 { pt3dadd( 25.6315, -51.3998, 4.95082, 0.28 ) }
    dend_57 { pt3dadd( 27.8753, -53.019, 5.05937, 0.28 ) }
    dend_57 { pt3dadd( 29.1229, -53.9461, 5.12208, 0.55 ) }
    dend_57 { pt3dadd( 30.6473, -55.2261, 5.21574, 0.28 ) }
    dend_57 { pt3dadd( 31.1662, -55.7146, 5.29132, 0.55 ) }
    dend_57 { pt3dadd( 32.9711, -57.5022, 5.69283, 0.28 ) }
    dend_57 { pt3dadd( 33.4123, -57.9543, 5.79947, 0.83 ) }
    dend_57 { pt3dadd( 34.4653, -59.1227, 6.16623, 0.28 ) }
    dend_57 { pt3dadd( 35.2004, -59.9471, 6.46331, 0.55 ) }
    dend_57 { pt3dadd( 37.2738, -62.3167, 7.37698, 0.28 ) }
    dend_57 { pt3dadd( 37.8358, -62.9393, 7.63834, 0.55 ) }
    dend_57 { pt3dadd( 39.1498, -64.396, 8.25439, 0.28 ) }
    dend_57 { pt3dadd( 40.0709, -65.3464, 8.71677, 0.55 ) }
    dend_57 { pt3dadd( 41.7339, -66.9508, 9.65938, 0.28 ) }
    dend_57 { pt3dadd( 42.5959, -67.6946, 10.2794, 0.55 ) }
    dend_57 { pt3dadd( 44.1989, -69.0203, 11.4801, 0.28 ) }
    dend_57 { pt3dadd( 44.7942, -69.4678, 11.9184, 0.55 ) }
    dend_57 { pt3dadd( 46.5311, -70.7162, 13.1398, 0.28 ) }
    dend_57 { pt3dadd( 47.5275, -71.3801, 13.7782, 0.55 ) }
    dend_57 { pt3dadd( 52.0393, -74.2397, 16.214, 0.28 ) }
    dend_57 { pt3dadd( 53.7314, -75.1251, 16.9071, 0.55 ) }
    dend_57 { pt3dadd( 55.3618, -75.8372, 17.3388, 0.28 ) }
    dend_57 { pt3dadd( 56.8621, -76.3683, 17.4919, 0.55 ) }
    dend_57 { pt3dadd( 59.2787, -77.0044, 17.3619, 0.28 ) }
    dend_57 { pt3dadd( 60.8742, -77.3641, 17.1298, 0.55 ) }
    dend_57 { pt3dadd( 63.8803, -77.827, 16.3555, 0.28 ) }
    dend_57 { pt3dadd( 65.6003, -78.0173, 15.9852, 0.55 ) }
    dend_57 { pt3dadd( 68.0373, -78.2318, 15.4625, 0.28 ) }
    dend_57 { pt3dadd( 69.5335, -78.2501, 15.1038, 0.55 ) }
    dend_57 { pt3dadd( 79.5569, -83.2029, 14.9429, 0.55 ) }
    dend_57 { pt3dadd( 89.0953, -88.811, 16.7804, 0.55 ) }
    dend_57 { pt3dadd( 99.3103, -93.3175, 16.7894, 0.55 ) }
    dend_57 { pt3dadd( 109.752, -96.709, 18.637, 0.55 ) }
    dend_57 { pt3dadd( 119.729, -100.752, 21.5652, 0.55 ) }
    dend_57 { pt3dadd( 129.514, -103.091, 26.2855, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -40.9537, -69.3879, -11.1651, 0.28 ) }
    dend_51 { pt3dadd( -42.1518, -69.7339, -10.1234, 0.28 ) }
    dend_51 { pt3dadd( -42.6164, -69.8851, -9.74569, 0.55 ) }
    dend_51 { pt3dadd( -45.0572, -70.4106, -7.35822, 0.28 ) }
    dend_51 { pt3dadd( -46.0344, -70.6433, -6.33438, 0.55 ) }
    dend_51 { pt3dadd( -48.9637, -71.5469, -3.13714, 0.28 ) }
    dend_51 { pt3dadd( -49.3664, -71.6979, -2.68613, 0.55 ) }
    dend_51 { pt3dadd( -50.4432, -72.2338, -1.37677, 0.55 ) }
    dend_51 { pt3dadd( -53.2019, -73.9023, 2.31746, 0.55 ) }
    dend_51 { pt3dadd( -53.9558, -74.4688, 3.40328, 0.28 ) }
    dend_51 { pt3dadd( -54.7744, -75.0326, 4.46673, 0.55 ) }
    dend_51 { pt3dadd( -55.4272, -75.4788, 5.17408, 0.28 ) }
    dend_51 { pt3dadd( -56.0444, -75.9222, 5.86309, 0.55 ) }
    dend_51 { pt3dadd( -57.1062, -76.7911, 7.07948, 0.28 ) }
    dend_51 { pt3dadd( -57.7372, -77.3634, 7.67037, 0.55 ) }
    dend_51 { pt3dadd( -59.7079, -78.7654, 9.49953, 0.28 ) }
    dend_51 { pt3dadd( -61.2191, -79.618, 10.9003, 0.55 ) }
    dend_51 { pt3dadd( -67.974, -81.414, 18.2594, 0.55 ) }
    dend_51 { pt3dadd( -74.8696, -81.0753, 25.6584, 0.55 ) }
    dend_51 { pt3dadd( -82.2168, -79.1724, 32.3597, 0.55 ) }
    dend_51 { pt3dadd( -88.9182, -78.1471, 39.872, 0.55 ) }
    dend_51 { pt3dadd( -96.2997, -78.4218, 46.7954, 0.55 ) }
    dend_51 { pt3dadd( -104.283, -78.4563, 53.0178, 0.55 ) }
    dend_51 { pt3dadd( -111.843, -80.5305, 59.4731, 0.55 ) }
    dend_51 { pt3dadd( -118.339, -80.5625, 67.2353, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 92/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -40.9537, -69.3879, -11.1651, 0.28 ) }
    dend_50 { pt3dadd( -42.2249, -70.6013, -11.2746, 0.28 ) }
    dend_50 { pt3dadd( -42.5577, -70.9005, -11.3072, 0.55 ) }
    dend_50 { pt3dadd( -43.6172, -71.8997, -11.3862, 0.28 ) }
    dend_50 { pt3dadd( -44.8043, -72.9883, -11.4642, 0.55 ) }
    dend_50 { pt3dadd( -46.9786, -74.9482, -11.5033, 0.55 ) }
    dend_50 { pt3dadd( -48.4831, -76.3046, -11.4941, 0.28 ) }
    dend_50 { pt3dadd( -50.1544, -77.7899, -11.4116, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -52.2673, -79.6993, -11.2415, 0.55 ) }
    dend_50 { pt3dadd( -54.6948, -82.0106, -10.9439, 0.55 ) }
    dend_50 { pt3dadd( -55.9919, -83.2766, -10.7473, 0.28 ) }
    dend_50 { pt3dadd( -56.6847, -83.9837, -10.6202, 0.55 ) }
    dend_50 { pt3dadd( -57.4977, -84.8536, -10.4662, 0.28 ) }
    dend_50 { pt3dadd( -58.768, -86.1872, -10.2538, 0.55 ) }
    dend_50 { pt3dadd( -59.8769, -87.3402, -10.1562, 0.28 ) }
    dend_50 { pt3dadd( -60.7922, -88.279, -10.0239, 0.55 ) }
    dend_50 { pt3dadd( -61.7108, -89.2032, -9.88026, 0.28 ) }
    dend_50 { pt3dadd( -63.3233, -90.7305, -9.59096, 0.55 ) }
    dend_50 { pt3dadd( -65.4294, -92.6115, -9.21173, 0.55 ) }
    dend_50 { pt3dadd( -66.4492, -93.4958, -9.01276, 0.55 ) }
    dend_50 { pt3dadd( -69.629, -96.204, -8.37714, 0.55 ) }
    dend_50 { pt3dadd( -71.0491, -97.4398, -8.0765, 0.55 ) }
    dend_50 { pt3dadd( -72.6062, -98.8507, -7.72829, 0.28 ) }
    dend_50 { pt3dadd( -73.8439, -100.057, -7.45856, 0.28 ) }
    dend_50 { pt3dadd( -74.7515, -101.029, -7.29406, 0.55 ) }
    dend_50 { pt3dadd( -75.5918, -102.039, -7.22052, 0.55 ) }
    dend_50 { pt3dadd( -76.4644, -103.205, -7.31951, 0.28 ) }
    dend_50 { pt3dadd( -77.112, -104.157, -7.41438, 0.55 ) }
    dend_50 { pt3dadd( -77.6624, -105.015, -7.5093, 0.28 ) }
    dend_50 { pt3dadd( -78.5593, -106.333, -7.6371, 0.55 ) }
    dend_50 { pt3dadd( -79.7166, -107.874, -7.77247, 0.55 ) }
    dend_50 { pt3dadd( -80.773, -109.217, -7.90038, 0.55 ) }
    dend_50 { pt3dadd( -82.0751, -110.793, -8.05126, 0.28 ) }
    dend_50 { pt3dadd( -83.3698, -112.232, -8.1792, 0.55 ) }
    dend_50 { pt3dadd( -84.3978, -113.299, -8.2478, 0.55 ) }
    dend_50 { pt3dadd( -85.4415, -114.281, -8.32003, 0.55 ) }
    dend_50 { pt3dadd( -86.7392, -115.427, -8.40605, 0.83 ) }
    dend_50 { pt3dadd( -92.7565, -120.813, -8.18799, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.0885, -52.2306, -4.41692, 0.83 ) }
    dend_46 { pt3dadd( 2.66804, -53.3295, -5.42288, 0.83 ) }
    dend_46 { pt3dadd( 4.39647, -54.4296, -6.49425, 0.83 ) }
    dend_46 { pt3dadd( 7.047, -55.9825, -8.09937, 0.83 ) }
    dend_46 { pt3dadd( 10.095, -57.6414, -9.90615, 0.83 ) }
    dend_46 { pt3dadd( 13.6496, -59.5154, -11.9781, 0.83 ) }
    dend_46 { pt3dadd( 16.5185, -61.0279, -13.6503, 0.83 ) }
    dend_46 { pt3dadd( 21.0232, -63.3247, -16.2919, 0.83 ) }
    dend_46 { pt3dadd( 23.0632, -64.3517, -17.494, 0.55 ) }
    dend_46 { pt3dadd( 24.9029, -65.1733, -18.5665, 0.55 ) }
    dend_46 { pt3dadd( 26.6776, -65.9437, -19.5649, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 41/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.0885, -52.2306, -4.41692, 1.11 ) }
    dend_31 { pt3dadd( -1.15891, -53.7948, -5.566, 1.11 ) }
    dend_31 { pt3dadd( -7.56644, -58.2551, -8.84212, 0.83 ) }
    dend_31 { pt3dadd( -10.0209, -59.9636, -10.0971, 0.83 ) }
    dend_31 { pt3dadd( -11.9001, -61.2715, -11.0579, 0.83 ) }
    dend_31 { pt3dadd( -14.2346, -62.8965, -12.2515, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 121.733, 177.94, -113.135, 0.55 ) }
    dend_26 { pt3dadd( 123.299, 178.14, -112.874, 0.55 ) }
    dend_26 { pt3dadd( 126.627, 178.242, -112.709, 0.55 ) }
    dend_26 { pt3dadd( 127.743, 178.255, -112.699, 0.55 ) }
    dend_26 { pt3dadd( 130.137, 178.27, -112.743, 0.55 ) }
    dend_26 { pt3dadd( 133.829, 178.316, -112.989, 0.55 ) }
    dend_26 { pt3dadd( 137.499, 178.362, -113.234, 0.55 ) }
    dend_26 { pt3dadd( 143.433, 178.345, -113.838, 0.55 ) }
    dend_26 { pt3dadd( 144.795, 178.29, -114.033, 0.83 ) }
    dend_26 { pt3dadd( 147.442, 178.158, -114.492, 0.28 ) }
    dend_26 { pt3dadd( 150.342, 178.07, -115.141, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 58/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 121.733, 177.94, -113.135, 0.55 ) }
    dend_25 { pt3dadd( 124.173, 179.367, -116.512, 0.55 ) }
    dend_25 { pt3dadd( 127.492, 181.309, -121.109, 0.55 ) }
    dend_25 { pt3dadd( 131.498, 183.653, -126.656, 0.28 ) }
    dend_25 { pt3dadd( 132.721, 184.368, -128.349, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 91.0695, 273.172, -34.6013, 0.55 ) }
    dend_23 { pt3dadd( 91.0292, 288.464, -35.4383, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 91.0695, 273.172, -34.6013, 0.55 ) }
    dend_22 { pt3dadd( 98.0897, 279.45, -34.6642, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 253.706, 124.696, -33.7482, 0.55 ) }
    dend_18 { pt3dadd( 260.284, 128.103, -31.5567, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 253.706, 124.696, -33.7482, 0.55 ) }
    dend_17 { pt3dadd( 265.803, 129.098, -40.3987, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 64.6408, 273.535, 106.306, 0.55 ) }
    dend_15 { pt3dadd( 66.6949, 283.964, 110.707, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 64.6408, 273.535, 106.306, 0.55 ) }
    dend_14 { pt3dadd( 67.3203, 284.299, 111.23, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.0767, 28.5646, 0.0301966, 0.83 ) }
    dend_6 { pt3dadd( 3.91831, 30.3781, 0.229881, 0.83 ) }
    dend_6 { pt3dadd( 4.75233, 32.4392, 0.528699, 0.83 ) }
    dend_6 { pt3dadd( 5.3416, 34.3056, 0.855934, 0.28 ) }
    dend_6 { pt3dadd( 5.54663, 35.0314, 0.961084, 1.11 ) }
    dend_6 { pt3dadd( 6.15284, 37.3095, 1.29103, 0.28 ) }
    dend_6 { pt3dadd( 6.57847, 38.9358, 1.49792, 0.83 ) }
    dend_6 { pt3dadd( 7.07936, 41.0456, 1.71749, 0.28 ) }
    dend_6 { pt3dadd( 7.60012, 43.2899, 1.94879, 0.83 ) }
    dend_6 { pt3dadd( 8.26972, 46.211, 2.28448, 0.55 ) }
    dend_6 { pt3dadd( 8.57778, 47.6189, 2.46669, 1.11 ) }
    dend_6 { pt3dadd( 9.07344, 49.925, 2.79672, 0.55 ) }
    dend_6 { pt3dadd( 9.53994, 52.0441, 3.0634, 0.83 ) }
    dend_6 { pt3dadd( 10.0164, 54.0195, 3.25482, 0.28 ) }
    dend_6 { pt3dadd( 10.4866, 55.8933, 3.41585, 0.83 ) }
    dend_6 { pt3dadd( 10.8297, 57.4627, 3.64442, 0.28 ) }
    dend_6 { pt3dadd( 10.9971, 58.3406, 3.7891, 0.55 ) }
    dend_6 { pt3dadd( 11.3046, 60.1147, 4.1072, 0.28 ) }
    dend_6 { pt3dadd( 11.5044, 61.3425, 4.31558, 0.83 ) }
    dend_6 { pt3dadd( 11.8832, 63.578, 4.64698, 0.83 ) }
    dend_6 { pt3dadd( 12.3622, 66.0817, 5.03504, 0.28 ) }
    dend_6 { pt3dadd( 12.5544, 67.3306, 5.3295, 0.55 ) }
    dend_6 { pt3dadd( 12.6644, 68.4699, 5.64302, 0.28 ) }
    dend_6 { pt3dadd( 12.724, 69.2139, 5.8629, 0.55 ) }
    dend_6 { pt3dadd( 12.8177, 70.6133, 6.24282, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( 12.8888, 71.7151, 6.48866, 0.83 ) }
    dend_6 { pt3dadd( 13.1371, 74.7976, 6.97629, 0.55 ) }
    dend_6 { pt3dadd( 13.2202, 75.923, 7.14781, 0.83 ) }
    dend_6 { pt3dadd( 13.3135, 77.4424, 7.36852, 0.55 ) }
    dend_6 { pt3dadd( 13.4389, 79.218, 7.49218, 0.55 ) }
    dend_6 { pt3dadd( 13.5731, 80.7522, 7.50358, 0.28 ) }
    dend_6 { pt3dadd( 13.6865, 81.7854, 7.47996, 0.55 ) }
    dend_6 { pt3dadd( 13.916, 83.3974, 7.37835, 0.28 ) }
    dend_6 { pt3dadd( 13.9486, 83.6435, 7.36864, 0.55 ) }
    dend_6 { pt3dadd( 14.1913, 85.8179, 7.31414, 0.28 ) }
    dend_6 { pt3dadd( 14.3866, 87.2814, 7.28745, 0.55 ) }
    dend_6 { pt3dadd( 14.5691, 88.5298, 7.32552, 0.28 ) }
    dend_6 { pt3dadd( 14.7894, 89.8817, 7.42393, 0.83 ) }
    dend_6 { pt3dadd( 15.1, 91.3568, 7.59117, 0.83 ) }
    dend_6 { pt3dadd( 15.3411, 92.405, 7.75144, 0.28 ) }
    dend_6 { pt3dadd( 15.6544, 93.6794, 8.08901, 0.55 ) }
    dend_6 { pt3dadd( 16.1121, 95.387, 8.4761, 0.28 ) }
    dend_6 { pt3dadd( 16.1816, 95.6321, 8.52173, 0.55 ) }
    dend_6 { pt3dadd( 16.7406, 97.4426, 8.81083, 0.28 ) }
    dend_6 { pt3dadd( 16.8833, 97.956, 8.89455, 0.55 ) }
    dend_6 { pt3dadd( 17.3709, 100.308, 9.17042, 0.28 ) }
    dend_6 { pt3dadd( 17.7357, 102.541, 9.41749, 0.55 ) }
    dend_6 { pt3dadd( 17.8397, 103.434, 9.50372, 0.28 ) }
    dend_6 { pt3dadd( 17.9449, 104.717, 9.64623, 0.55 ) }
    dend_6 { pt3dadd( 18.0558, 107.286, 10.0127, 0.55 ) }
    dend_6 { pt3dadd( 18.0979, 108.875, 10.2633, 0.28 ) }
    dend_6 { pt3dadd( 18.1216, 110.612, 10.5528, 0.55 ) }
    dend_6 { pt3dadd( 18.1246, 112.198, 10.9581, 0.28 ) }
    dend_6 { pt3dadd( 18.1226, 112.674, 11.0964, 0.55 ) }
    dend_6 { pt3dadd( 18.0865, 113.852, 11.4627, 0.28 ) }
    dend_6 { pt3dadd( 18.0515, 114.852, 11.7672, 0.83 ) }
    dend_6 { pt3dadd( 20.7854, 123.453, 12.9425, 0.83 ) }
    dend_6 { pt3dadd( 23.0358, 132.055, 14.8762, 0.83 ) }
    dend_6 { pt3dadd( 24.0294, 140.956, 16.6309, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 34/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.0767, 28.5646, 0.0301966, 0.55 ) }
    dend_3 { pt3dadd( 1.58639, 30.8537, 0.604382, 0.55 ) }
    dend_3 { pt3dadd( 1.28692, 31.3381, 0.721476, 0.55 ) }
    dend_3 { pt3dadd( -0.223974, 33.9342, 1.29632, 0.83 ) }
    dend_3 { pt3dadd( -1.84018, 36.8421, 1.81427, 0.55 ) }
    dend_3 { pt3dadd( -2.42041, 37.9172, 1.98221, 0.55 ) }
    dend_3 { pt3dadd( -3.173, 39.3936, 2.18555, 0.55 ) }
    dend_3 { pt3dadd( -3.96505, 41.0918, 2.30293, 0.83 ) }
    dend_3 { pt3dadd( -5.00063, 43.2795, 2.34304, 0.28 ) }
    dend_3 { pt3dadd( -5.64256, 44.7104, 2.27186, 0.55 ) }
    dend_3 { pt3dadd( -6.07261, 45.7432, 2.14919, 0.28 ) }
    dend_3 { pt3dadd( -6.79412, 47.3807, 1.92701, 0.83 ) }
    dend_3 { pt3dadd( -7.90654, 49.8091, 1.60561, 0.55 ) }
    dend_3 { pt3dadd( -8.42071, 50.9277, 1.48449, 0.55 ) }
    dend_3 { pt3dadd( -9.7443, 53.8565, 1.28834, 0.55 ) }
    dend_3 { pt3dadd( -10.4521, 55.4418, 1.16042, 0.28 ) }
    dend_3 { pt3dadd( -11.3031, 57.377, 1.116, 0.55 ) }
    dend_3 { pt3dadd( -12.0876, 59.2408, 1.06056, 0.28 ) }
    dend_3 { pt3dadd( -12.8635, 61.1773, 0.999322, 0.28 ) }
    dend_3 { pt3dadd( -13.5357, 62.8793, 0.895595, 0.55 ) }
    dend_3 { pt3dadd( -14.8151, 66.0156, 0.625376, 0.55 ) }
    dend_3 { pt3dadd( -16.37, 70.0795, 0.00940431, 0.28 ) }
    dend_3 { pt3dadd( -17.5582, 73.241, -0.527852, 0.83 ) }
    dend_3 { pt3dadd( -18.5154, 75.8094, -0.917784, 0.55 ) }
    dend_3 { pt3dadd( -19.4691, 78.3829, -1.25259, 0.55 ) }
    dend_3 { pt3dadd( -20.1109, 80.2742, -1.44767, 0.55 ) }
    dend_3 { pt3dadd( -21.0895, 83.4686, -1.64328, 0.28 ) }
    dend_3 { pt3dadd( -21.8469, 86.1656, -1.78514, 0.55 ) }
    dend_3 { pt3dadd( -22.4094, 88.451, -1.71013, 0.55 ) }
    dend_3 { pt3dadd( -22.6799, 89.7083, -1.63496, 0.28 ) }
    dend_3 { pt3dadd( -22.942, 90.8662, -1.54236, 0.83 ) }
    dend_3 { pt3dadd( -23.498, 92.9121, -1.35219, 0.28 ) }
    dend_3 { pt3dadd( -24.0969, 94.6518, -1.17455, 0.55 ) }
    dend_3 { pt3dadd( -25.1152, 97.1815, -0.99096, 0.55 ) }
    dend_3 { pt3dadd( -26.0575, 99.1408, -0.8733, 0.55 ) }
    dend_3 { pt3dadd( -26.7813, 100.419, -0.731382, 0.28 ) }
    dend_3 { pt3dadd( -27.14, 100.973, -0.651988, 0.55 ) }
    dend_3 { pt3dadd( -27.9675, 102.182, -0.389429, 0.55 ) }
    dend_3 { pt3dadd( -29.6331, 104.422, 0.161073, 0.28 ) }
    dend_3 { pt3dadd( -31.1954, 106.333, 0.666916, 0.55 ) }
    dend_3 { pt3dadd( -32.6754, 108.035, 1.01013, 0.28 ) }
    dend_3 { pt3dadd( -33.2957, 108.719, 1.15906, 0.55 ) }
    dend_3 { pt3dadd( -34.7296, 110.212, 1.5267, 0.28 ) }
    dend_3 { pt3dadd( -36.5988, 112.003, 1.9868, 0.55 ) }
    dend_3 { pt3dadd( -38.2998, 113.435, 2.33977, 0.28 ) }
    dend_3 { pt3dadd( -39.6107, 114.466, 2.60665, 0.55 ) }
    dend_3 { pt3dadd( -42.9897, 117.179, 3.42065, 0.55 ) }
    dend_3 { pt3dadd( -44.1237, 118.061, 3.72046, 0.55 ) }
    dend_3 { pt3dadd( -45.6393, 119.217, 4.12857, 0.55 ) }
    dend_3 { pt3dadd( -47.1961, 120.5, 4.56415, 0.55 ) }
    dend_3 { pt3dadd( -50.0745, 122.999, 5.50531, 0.55 ) }
    dend_3 { pt3dadd( -52.0359, 124.724, 6.22938, 0.55 ) }
    dend_3 { pt3dadd( -53.3644, 125.865, 6.57435, 0.55 ) }
    dend_3 { pt3dadd( -55.8317, 128.039, 7.20926, 0.55 ) }
    dend_3 { pt3dadd( -57.9792, 129.972, 7.7974, 0.55 ) }
    dend_3 { pt3dadd( -60.2066, 132.022, 8.42682, 0.83 ) }
    dend_3 { pt3dadd( -62.8615, 134.34, 9.11935, 0.28 ) }
    dend_3 { pt3dadd( -66.0548, 137.067, 9.65819, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 92/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 36.0215, -34.3067, 53.712, 0.55 ) }
    dend_62 { pt3dadd( 39.1013, -32.6411, 63.382, 0.55 ) }
    dend_62 { pt3dadd( 42.508, -32.489, 73.0613, 0.55 ) }
    dend_62 { pt3dadd( 45.1925, -31.5896, 82.9343, 0.55 ) }
    dend_62 { pt3dadd( 47.1728, -32.0162, 92.9919, 0.55 ) }
    dend_62 { pt3dadd( 49.9725, -31.3699, 102.849, 0.55 ) }
    dend_62 { pt3dadd( 51.3189, -29.1088, 112.807, 0.55 ) }
    dend_62 { pt3dadd( 52.6857, -26.0477, 122.571, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( 56.2499, -22.0055, 131.416, 0.55 ) }
    dend_62 { pt3dadd( 59.1376, -17.6602, 140.379, 0.55 ) }
    dend_62 { pt3dadd( 61.7212, -11.836, 148.654, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 36.0215, -34.3067, 53.712, 0.55 ) }
    dend_61 { pt3dadd( 38.9842, -32.663, 62.07, 0.55 ) }
    dend_61 { pt3dadd( 42.7499, -32.7663, 70.2289, 0.55 ) }
    dend_61 { pt3dadd( 46.461, -33.969, 78.3226, 0.55 ) }
    dend_61 { pt3dadd( 51.2881, -35.9212, 85.6583, 0.55 ) }
    dend_61 { pt3dadd( 55.592, -37.6686, 93.3558, 0.55 ) }
    dend_61 { pt3dadd( 58.9348, -39.6282, 101.467, 0.55 ) }
    dend_61 { pt3dadd( 61.0755, -41.5725, 109.974, 0.55 ) }
    dend_61 { pt3dadd( 62.6292, -42.368, 118.79, 0.55 ) }
    dend_61 { pt3dadd( 63.0199, -43.195, 127.733, 0.55 ) }
    dend_61 { pt3dadd( 62.4685, -43.5217, 136.71, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 14/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 129.514, -103.091, 26.2855, 0.55 ) }
    dend_59 { pt3dadd( 138.179, -107.993, 30.0038, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 16/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 129.514, -103.091, 26.2855, 0.55 ) }
    dend_58 { pt3dadd( 140.419, -109.843, 24.5026, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 18/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -118.339, -80.5625, 67.2353, 0.55 ) }
    dend_53 { pt3dadd( -124.783, -82.5356, 75.337, 0.55 ) }
    dend_53 { pt3dadd( -129.83, -86.1052, 83.9086, 0.55 ) }
    dend_53 { pt3dadd( -135.193, -91.2017, 91.5391, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 22/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -118.339, -80.5625, 67.2353, 0.55 ) }
    dend_52 { pt3dadd( -124.047, -81.7974, 73.9114, 0.55 ) }
    dend_52 { pt3dadd( -130.029, -83.8, 80.1705, 0.55 ) }
    dend_52 { pt3dadd( -137.295, -84.6895, 85.1779, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 26.6776, -65.9437, -19.5649, 0.55 ) }
    dend_48 { pt3dadd( 29.3095, -65.8752, -21.2154, 0.55 ) }
    dend_48 { pt3dadd( 31.522, -65.8578, -22.5642, 0.55 ) }
    dend_48 { pt3dadd( 33.9325, -65.7693, -23.9893, 0.55 ) }
    dend_48 { pt3dadd( 36.576, -65.6826, -25.4781, 0.55 ) }
    dend_48 { pt3dadd( 39.946, -65.477, -27.3107, 0.55 ) }
    dend_48 { pt3dadd( 42.4234, -65.2823, -28.6286, 0.55 ) }
    dend_48 { pt3dadd( 45.2505, -64.896, -30.1054, 0.55 ) }
    dend_48 { pt3dadd( 46.8278, -64.5856, -30.8932, 0.55 ) }
    dend_48 { pt3dadd( 50.0532, -63.6305, -32.4015, 0.55 ) }
    dend_48 { pt3dadd( 51.7042, -63.0131, -33.1075, 0.55 ) }
    dend_48 { pt3dadd( 52.9621, -62.4646, -33.6045, 0.55 ) }
    dend_48 { pt3dadd( 55.9116, -60.9947, -34.7377, 0.55 ) }
    dend_48 { pt3dadd( 57.9057, -59.8507, -35.4928, 0.83 ) }
    dend_48 { pt3dadd( 59.2249, -59.0262, -35.9805, 0.55 ) }
    dend_48 { pt3dadd( 60.977, -57.7985, -36.6045, 0.55 ) }
    dend_48 { pt3dadd( 64.7331, -54.9695, -37.9089, 0.55 ) }
    dend_48 { pt3dadd( 65.8025, -54.0977, -38.2663, 0.55 ) }
    dend_48 { pt3dadd( 66.4689, -53.4935, -38.4844, 0.83 ) }
    dend_48 { pt3dadd( 68.6166, -51.3563, -39.1704, 0.55 ) }
    dend_48 { pt3dadd( 69.9753, -49.8651, -39.5612, 0.55 ) }
    dend_48 { pt3dadd( 71.6646, -47.8325, -39.9371, 0.55 ) }
    dend_48 { pt3dadd( 73.5193, -45.3241, -40.2319, 0.55 ) }
    dend_48 { pt3dadd( 76.0153, -41.8241, -40.5034, 0.55 ) }
    dend_48 { pt3dadd( 77.0844, -40.2946, -40.5756, 0.28 ) }
    dend_48 { pt3dadd( 78.9825, -37.5512, -40.5941, 0.55 ) }
    dend_48 { pt3dadd( 80.7408, -35.0266, -40.5469, 0.28 ) }
    dend_48 { pt3dadd( 81.5687, -33.8256, -40.5048, 0.55 ) }
    dend_48 { pt3dadd( 82.6049, -32.2521, -40.4394, 0.28 ) }
    dend_48 { pt3dadd( 82.9578, -31.7135, -40.4492, 0.55 ) }
    dend_48 { pt3dadd( 84.1416, -29.9715, -40.6701, 0.55 ) }
    dend_48 { pt3dadd( 86.4433, -26.8626, -41.3956, 0.55 ) }
    dend_48 { pt3dadd( 87.8658, -25.0466, -41.946, 0.55 ) }
    dend_48 { pt3dadd( 89.1527, -23.5118, -42.4712, 0.55 ) }
    dend_48 { pt3dadd( 91.8362, -20.4173, -43.6154, 0.55 ) }
    dend_48 { pt3dadd( 94.5645, -17.272, -44.8618, 0.55 ) }
    dend_48 { pt3dadd( 96.7397, -14.7544, -45.9261, 0.55 ) }
    dend_48 { pt3dadd( 98.2033, -13.119, -46.6611, 0.55 ) }
    dend_48 { pt3dadd( 99.3011, -11.9638, -47.1968, 0.83 ) }
    dend_48 { pt3dadd( 99.9024, -11.3499, -47.4798, 0.83 ) }
    dend_48 { pt3dadd( 101.387, -9.88968, -48.1098, 0.55 ) }
    dend_48 { pt3dadd( 101.999, -9.26018, -48.3676, 0.83 ) }
    dend_48 { pt3dadd( 103.727, -7.38619, -49.104, 0.28 ) }
    dend_48 { pt3dadd( 105.209, -5.78518, -49.7144, 0.55 ) }
    dend_48 { pt3dadd( 106.165, -4.78082, -50.06, 0.55 ) }
    dend_48 { pt3dadd( 107.533, -3.35239, -50.5186, 0.55 ) }
    dend_48 { pt3dadd( 109.26, -1.59824, -51.0475, 0.28 ) }
    dend_48 { pt3dadd( 110.602, -0.27104, -51.4614, 0.55 ) }
    dend_48 { pt3dadd( 112.073, 1.08417, -51.9449, 0.83 ) }
    dend_48 { pt3dadd( 113.496, 2.23831, -52.4418, 0.55 ) }
    dend_48 { pt3dadd( 115.581, 3.55843, -53.0906, 0.28 ) }
    dend_48 { pt3dadd( 118.015, 4.8355, -53.8001, 0.55 ) }
    dend_48 { pt3dadd( 119.941, 5.65838, -54.3309, 0.55 ) }
    dend_48 { pt3dadd( 122.588, 6.60001, -55.0687, 0.55 ) }
    dend_48 { pt3dadd( 125.001, 7.32647, -55.7509, 0.55 ) }
    dend_48 { pt3dadd( 128.435, 8.24951, -56.7231, 0.55 ) }
    dend_48 { pt3dadd( 130.44, 8.70961, -57.2331, 0.55 ) }
    dend_48 { pt3dadd( 133.422, 9.456, -57.9548, 0.55 ) }
    dend_48 { pt3dadd( 134.785, 9.89695, -58.2642, 0.28 ) }
    dend_48 { pt3dadd( 137.201, 10.9756, -58.7775, 0.55 ) }
    dend_48 { pt3dadd( 138.088, 11.433, -58.9791, 0.28 ) }
    dend_48 { pt3dadd( 138.871, 11.903, -59.1887, 0.83 ) }
    dend_48 { pt3dadd( 141.443, 13.3941, -59.8053, 0.55 ) }
    dend_48 { pt3dadd( 143.452, 14.7465, -60.2344, 0.28 ) }
    dend_48 { pt3dadd( 145.079, 16.0223, -60.5304, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 26.6776, -65.9437, -19.5649, 0.55 ) }
    dend_47 { pt3dadd( 28.3306, -68.0277, -20.5582, 0.55 ) }
    dend_47 { pt3dadd( 30.2004, -70.3326, -21.6137, 0.55 ) }
    dend_47 { pt3dadd( 32.6238, -73.1999, -22.584, 0.28 ) }
    dend_47 { pt3dadd( 33.6103, -74.3416, -22.9094, 0.28 ) }
    dend_47 { pt3dadd( 35.0144, -75.9073, -23.0871, 0.55 ) }
    dend_47 { pt3dadd( 36.437, -77.4604, -23.1524, 0.28 ) }
    dend_47 { pt3dadd( 38.2501, -79.3663, -23.0913, 0.55 ) }
    dend_47 { pt3dadd( 41.2101, -82.4893, -22.7557, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 42.9671, -84.2481, -22.4519, 0.55 ) }
    dend_47 { pt3dadd( 47.4646, -88.5522, -21.6319, 0.55 ) }
    dend_47 { pt3dadd( 50.2277, -91.2153, -21.1444, 0.55 ) }
    dend_47 { pt3dadd( 51.9171, -92.8055, -20.9152, 0.28 ) }
    dend_47 { pt3dadd( 52.6835, -93.532, -20.8229, 0.55 ) }
    dend_47 { pt3dadd( 55.8416, -96.5485, -20.5978, 0.28 ) }
    dend_47 { pt3dadd( 57.2397, -97.9145, -20.472, 0.55 ) }
    dend_47 { pt3dadd( 59.7822, -100.443, -20.3019, 0.55 ) }
    dend_47 { pt3dadd( 62.2005, -102.814, -20.0178, 0.55 ) }
    dend_47 { pt3dadd( 64.6965, -105.321, -19.6546, 0.28 ) }
    dend_47 { pt3dadd( 65.3007, -105.936, -19.567, 0.55 ) }
    dend_47 { pt3dadd( 68.0938, -108.962, -19.0631, 0.28 ) }
    dend_47 { pt3dadd( 68.3462, -109.225, -18.9989, 0.55 ) }
    dend_47 { pt3dadd( 69.9886, -110.922, -18.3694, 0.28 ) }
    dend_47 { pt3dadd( 70.7365, -111.833, -17.9841, 0.55 ) }
    dend_47 { pt3dadd( 81.6821, -120.346, -15.878, 0.55 ) }
    dend_47 { pt3dadd( 90.6524, -130.863, -12.8705, 0.55 ) }
    dend_47 { pt3dadd( 97.3164, -142.929, -9.22972, 0.55 ) }
    dend_47 { pt3dadd( 104.493, -155.154, -7.53595, 0.55 ) }
    dend_47 { pt3dadd( 112.945, -166.328, -5.25708, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_31 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -14.2346, -62.8965, -12.2515, 0.55 ) }
    dend_45 { pt3dadd( -15.9851, -62.3249, -12.9794, 0.55 ) }
    dend_45 { pt3dadd( -19.8419, -61.0619, -14.4669, 0.55 ) }
    dend_45 { pt3dadd( -25.421, -58.9394, -16.3658, 0.28 ) }
    dend_45 { pt3dadd( -26.9572, -58.3549, -16.8887, 0.83 ) }
    dend_45 { pt3dadd( -32.0584, -56.4142, -18.625, 0.55 ) }
    dend_45 { pt3dadd( -36.6379, -54.6721, -20.1836, 0.55 ) }
    dend_45 { pt3dadd( -38.1337, -54.1431, -20.7597, 0.28 ) }
    dend_45 { pt3dadd( -41.0829, -53.3031, -21.9745, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -14.2346, -62.8965, -12.2515, 0.83 ) }
    dend_32 { pt3dadd( -15.3989, -65.5578, -11.5724, 0.83 ) }
    dend_32 { pt3dadd( -16.8418, -68.8559, -10.7307, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 24.0294, 140.956, 16.6309, 0.83 ) }
    dend_10 { pt3dadd( 27.0064, 151.491, 18.1691, 0.83 ) }
    dend_10 { pt3dadd( 31.439, 161.574, 18.7078, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 24.0294, 140.956, 16.6309, 0.55 ) }
    dend_7 { pt3dadd( 23.5459, 152.692, 18.3848, 0.83 ) }
    dend_7 { pt3dadd( 23.4949, 164.567, 19.1037, 0.83 ) }
    dend_7 { pt3dadd( 22.2463, 176.217, 20.9693, 0.83 ) }
    dend_7 { pt3dadd( 22.4627, 187.906, 23.0358, 0.83 ) }
    dend_7 { pt3dadd( 22.0992, 199.57, 25.1907, 0.83 ) }
    dend_7 { pt3dadd( 20.4306, 211.327, 25.5828, 0.83 ) }
    dend_7 { pt3dadd( 18.2289, 222.988, 25.1213, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 43/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -66.0548, 137.067, 9.65819, 0.28 ) }
    dend_5 { pt3dadd( -70.2837, 136.264, 10.9797, 0.28 ) }
    dend_5 { pt3dadd( -71.5691, 136.02, 11.3815, 0.28 ) }
    dend_5 { pt3dadd( -73.3035, 135.691, 11.9235, 0.55 ) }
    dend_5 { pt3dadd( -74.8946, 135.388, 12.4208, 0.28 ) }
    dend_5 { pt3dadd( -76.5123, 135.081, 12.9264, 0.28 ) }
    dend_5 { pt3dadd( -79.3932, 134.534, 13.8267, 0.83 ) }
    dend_5 { pt3dadd( -88.4695, 131.827, 16.318, 0.83 ) }
    dend_5 { pt3dadd( -97.3084, 130.029, 20.083, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -66.0548, 137.067, 9.65819, 0.28 ) }
    dend_4 { pt3dadd( -68.9456, 139.644, 10.7972, 0.28 ) }
    dend_4 { pt3dadd( -71.9585, 142.219, 12.093, 0.55 ) }
    dend_4 { pt3dadd( -74.5806, 144.508, 13.3232, 0.55 ) }
    dend_4 { pt3dadd( -75.2342, 145.075, 13.6663, 0.55 ) }
    dend_4 { pt3dadd( -76.7362, 146.471, 14.5198, 0.28 ) }
    dend_4 { pt3dadd( -78.1437, 147.781, 15.3085, 0.55 ) }
    dend_4 { pt3dadd( -79.861, 149.337, 16.446, 0.28 ) }
    dend_4 { pt3dadd( -80.9959, 150.294, 17.2461, 0.28 ) }
    dend_4 { pt3dadd( -83.2179, 152.171, 18.9422, 0.55 ) }
    dend_4 { pt3dadd( -85.5267, 154.098, 20.7634, 0.28 ) }
    dend_4 { pt3dadd( -87.7629, 155.947, 22.5878, 0.55 ) }
    dend_4 { pt3dadd( -90.718, 158.308, 24.8956, 0.28 ) }
    dend_4 { pt3dadd( -91.9018, 159.245, 25.8223, 0.55 ) }
    dend_4 { pt3dadd( -99.3809, 165.754, 32.2736, 0.55 ) }
    dend_4 { pt3dadd( -106.924, 171.402, 39.356, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.8418, -68.8559, -10.7307, 0.55 ) }
    dend_40 { pt3dadd( -16.8153, -70.5471, -11.1997, 0.55 ) }
    dend_40 { pt3dadd( -16.9034, -73.0452, -11.8071, 0.55 ) }
    dend_40 { pt3dadd( -17.138, -76.9285, -12.7445, 0.55 ) }
    dend_40 { pt3dadd( -17.6488, -81.4148, -13.6993, 0.55 ) }
    dend_40 { pt3dadd( -18.1979, -84.7572, -14.4135, 0.55 ) }
    dend_40 { pt3dadd( -18.7722, -87.2495, -14.9119, 0.55 ) }
    dend_40 { pt3dadd( -19.3455, -88.9385, -15.18, 0.55 ) }
    dend_40 { pt3dadd( -20.4652, -91.7868, -15.5679, 0.55 ) }
    dend_40 { pt3dadd( -21.9764, -95.1812, -15.9696, 0.55 ) }
    dend_40 { pt3dadd( -23.2521, -97.989, -16.3835, 0.55 ) }
    dend_40 { pt3dadd( -24.7139, -101.326, -16.9076, 0.55 ) }
    dend_40 { pt3dadd( -26.7038, -106.211, -17.8512, 0.55 ) }
    dend_40 { pt3dadd( -28.0746, -109.831, -18.6116, 0.55 ) }
    dend_40 { pt3dadd( -29.7528, -114.734, -19.661, 0.55 ) }
    dend_40 { pt3dadd( -30.9288, -118.878, -20.6311, 0.55 ) }
    dend_40 { pt3dadd( -31.558, -121.633, -21.2275, 0.55 ) }
    dend_40 { pt3dadd( -32.1116, -124.942, -21.9257, 0.55 ) }
    dend_40 { pt3dadd( -32.3399, -126.809, -22.298, 0.55 ) }
    dend_40 { pt3dadd( -32.735, -130.992, -23.0242, 0.55 ) }
    dend_40 { pt3dadd( -32.7591, -132.611, -23.2905, 0.55 ) }
    dend_40 { pt3dadd( -32.7474, -136.453, -23.7555, 0.55 ) }
    dend_40 { pt3dadd( -32.6222, -139.502, -24.1341, 0.55 ) }
    dend_40 { pt3dadd( -32.4583, -141.524, -24.3382, 0.55 ) }
    dend_40 { pt3dadd( -32.327, -142.892, -24.4737, 0.55 ) }
    dend_40 { pt3dadd( -32.0069, -144.997, -24.7246, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -16.8418, -68.8559, -10.7307, 0.55 ) }
    dend_33 { pt3dadd( -17.2647, -70.8178, -10.2167, 0.55 ) }
    dend_33 { pt3dadd( -17.7049, -73.2997, -9.65808, 0.55 ) }
    dend_33 { pt3dadd( -18.0142, -75.2141, -9.29388, 0.55 ) }
    dend_33 { pt3dadd( -18.5418, -78.6795, -8.7133, 0.55 ) }
    dend_33 { pt3dadd( -18.7826, -80.0674, -8.48696, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( -19.091, -81.7533, -8.2058, 0.55 ) }
    dend_33 { pt3dadd( -19.3694, -83.3066, -7.95562, 0.55 ) }
    dend_33 { pt3dadd( -19.9934, -86.4925, -7.40075, 0.55 ) }
    dend_33 { pt3dadd( -20.3739, -88.1366, -7.00259, 0.55 ) }
    dend_33 { pt3dadd( -20.7875, -89.8774, -6.39841, 0.55 ) }
    dend_33 { pt3dadd( -21.3997, -92.1844, -5.40343, 0.55 ) }
    dend_33 { pt3dadd( -21.9204, -94.0115, -4.46876, 0.55 ) }
    dend_33 { pt3dadd( -22.3768, -95.5471, -3.58711, 0.55 ) }
    dend_33 { pt3dadd( -22.8976, -97.3715, -2.42796, 0.55 ) }
    dend_33 { pt3dadd( -23.458, -99.6686, -0.902628, 0.55 ) }
    dend_33 { pt3dadd( -23.6285, -100.69, -0.260856, 0.55 ) }
    dend_33 { pt3dadd( -23.6922, -101.366, 0.128392, 0.83 ) }
    dend_33 { pt3dadd( -23.6852, -102.756, 0.786645, 0.83 ) }
    dend_33 { pt3dadd( -23.5852, -103.9, 1.18461, 0.83 ) }
    dend_33 { pt3dadd( -23.0805, -106.459, 1.81709, 0.55 ) }
    dend_33 { pt3dadd( -22.626, -108.273, 2.12433, 0.83 ) }
    dend_33 { pt3dadd( -22.2729, -109.503, 2.3869, 0.55 ) }
    dend_33 { pt3dadd( -21.9485, -110.649, 2.67077, 0.55 ) }
    dend_33 { pt3dadd( -21.369, -112.681, 3.24538, 0.55 ) }
    dend_33 { pt3dadd( -21.0483, -114.014, 3.6975, 0.55 ) }
    dend_33 { pt3dadd( -20.9133, -115.074, 4.12215, 0.55 ) }
    dend_33 { pt3dadd( -20.901, -117.599, 5.30303, 0.55 ) }
    dend_33 { pt3dadd( -20.9987, -118.99, 5.95767, 0.55 ) }
    dend_33 { pt3dadd( -21.1366, -120.178, 6.47291, 0.55 ) }
    dend_33 { pt3dadd( -21.3527, -122.09, 7.1876, 0.55 ) }
    dend_33 { pt3dadd( -21.6384, -124.392, 7.91124, 0.55 ) }
    dend_33 { pt3dadd( -21.8121, -125.869, 8.30805, 0.55 ) }
    dend_33 { pt3dadd( -22.0039, -127.719, 8.72241, 0.55 ) }
    dend_33 { pt3dadd( -22.352, -131.124, 9.41693, 0.55 ) }
    dend_33 { pt3dadd( -22.7049, -134.321, 9.95871, 0.55 ) }
    dend_33 { pt3dadd( -22.8528, -135.858, 10.1893, 0.55 ) }
    dend_33 { pt3dadd( -23.0548, -138.235, 10.5408, 0.55 ) }
    dend_33 { pt3dadd( -23.3905, -141.791, 11.0925, 0.83 ) }
    dend_33 { pt3dadd( -23.8476, -145.581, 11.7179, 0.83 ) }
    dend_33 { pt3dadd( -24.0706, -147.168, 11.9768, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.2289, 222.988, 25.1213, 0.83 ) }
    dend_9 { pt3dadd( 17.6979, 230.542, 25.7208, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 18.2289, 222.988, 25.1213, 0.55 ) }
    dend_8 { pt3dadd( 17.702, 230.702, 26.3098, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 39/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -32.0069, -144.997, -24.7246, 0.55 ) }
    dend_44 { pt3dadd( -31.6179, -146.404, -25.8574, 0.55 ) }
    dend_44 { pt3dadd( -31.2024, -147.827, -26.9683, 0.55 ) }
    dend_44 { pt3dadd( -30.4894, -150.31, -28.8132, 0.55 ) }
    dend_44 { pt3dadd( -29.7917, -152.706, -30.6021, 0.55 ) }
    dend_44 { pt3dadd( -29.2896, -154.3, -31.7937, 0.55 ) }
    dend_44 { pt3dadd( -28.7737, -155.835, -32.9329, 0.55 ) }
    dend_44 { pt3dadd( -27.9554, -158.412, -34.6971, 0.55 ) }
    dend_44 { pt3dadd( -27.3338, -160.291, -35.9202, 0.55 ) }
    dend_44 { pt3dadd( -27.0466, -161.173, -36.4506, 0.55 ) }
    dend_44 { pt3dadd( -26.1253, -164.053, -38.0915, 0.83 ) }
    dend_44 { pt3dadd( -25.497, -166.06, -39.2264, 0.55 ) }
    dend_44 { pt3dadd( -24.6398, -168.574, -40.6747, 0.55 ) }
    dend_44 { pt3dadd( -23.9552, -170.575, -41.8063, 0.55 ) }
    dend_44 { pt3dadd( -23.1065, -173.064, -43.1766, 0.55 ) }
    dend_44 { pt3dadd( -22.0545, -176.215, -44.8514, 0.55 ) }
    dend_44 { pt3dadd( -21.4135, -178.232, -45.9096, 0.55 ) }
    dend_44 { pt3dadd( -20.8286, -180.187, -46.9345, 0.55 ) }
    dend_44 { pt3dadd( -20.435, -181.485, -47.598, 0.55 ) }
    dend_44 { pt3dadd( -20.1414, -182.579, -48.0646, 0.28 ) }
    dend_44 { pt3dadd( -19.9515, -183.396, -48.3198, 0.55 ) }
    dend_44 { pt3dadd( -19.7734, -184.353, -48.5667, 0.28 ) }
    dend_44 { pt3dadd( -19.5902, -185.799, -48.8989, 0.55 ) }
    dend_44 { pt3dadd( -19.3481, -187.916, -49.4408, 0.28 ) }
    dend_44 { pt3dadd( -18.9903, -190.157, -50.0449, 0.55 ) }
    dend_44 { pt3dadd( -18.6306, -192.229, -50.6329, 0.55 ) }
    dend_44 { pt3dadd( -18.3663, -193.869, -51.1028, 0.55 ) }
    dend_44 { pt3dadd( -18.0068, -195.946, -51.7686, 0.55 ) }
    dend_44 { pt3dadd( -17.6408, -197.801, -52.3034, 0.55 ) }
    dend_44 { pt3dadd( -17.119, -200.744, -53.1926, 0.83 ) }
    dend_44 { pt3dadd( -16.8192, -202.356, -53.6806, 0.28 ) }
    dend_44 { pt3dadd( -16.4185, -204.747, -54.3561, 0.28 ) }
    dend_44 { pt3dadd( -16.0731, -207.09, -54.9747, 0.28 ) }
    dend_44 { pt3dadd( -15.4456, -211.746, -56.191, 0.55 ) }
    dend_44 { pt3dadd( -15.0543, -215.146, -57.0826, 1.66 ) }
    dend_44 { pt3dadd( -14.6525, -218.871, -58.0938, 0.55 ) }
    dend_44 { pt3dadd( -14.2236, -222.464, -59.0929, 0.55 ) }
    dend_44 { pt3dadd( -13.7637, -226.501, -60.2071, 0.28 ) }
    dend_44 { pt3dadd( -13.4851, -229.59, -61.0218, 0.55 ) }
    dend_44 { pt3dadd( -13.2289, -233.002, -61.8951, 0.28 ) }
    dend_44 { pt3dadd( -13.0696, -235.015, -62.3105, 0.83 ) }
    dend_44 { pt3dadd( -12.901, -237.607, -62.7744, 0.55 ) }
    dend_44 { pt3dadd( -12.7146, -240.091, -63.158, 0.55 ) }
    dend_44 { pt3dadd( -12.5998, -242.561, -63.4271, 0.83 ) }
    dend_44 { pt3dadd( -12.5483, -245.023, -63.6197, 0.28 ) }
    dend_44 { pt3dadd( -12.5483, -245.023, -63.6197, 0.55 ) }
    dend_44 { pt3dadd( -12.612, -246.605, -63.7306, 0.28 ) }
    dend_44 { pt3dadd( -12.6506, -247.207, -63.7719, 0.55 ) }
    dend_44 { pt3dadd( -12.7356, -248.904, -63.9903, 0.28 ) }
    dend_44 { pt3dadd( -12.8152, -250.405, -64.2993, 0.55 ) }
    dend_44 { pt3dadd( -13.0114, -253.137, -65.0931, 0.28 ) }
    dend_44 { pt3dadd( -13.0485, -253.794, -65.2941, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -32.0069, -144.997, -24.7246, 0.55 ) }
    dend_41 { pt3dadd( -31.8918, -146.385, -24.9123, 0.55 ) }
    dend_41 { pt3dadd( -31.8392, -147.066, -24.9902, 0.28 ) }
    dend_41 { pt3dadd( -31.7691, -147.768, -25.0776, 0.55 ) }
    dend_41 { pt3dadd( -31.5041, -149.827, -25.3794, 0.28 ) }
    dend_41 { pt3dadd( -31.4758, -150.053, -25.4301, 0.55 ) }
    dend_41 { pt3dadd( -31.2519, -151.812, -25.8977, 0.28 ) }
    dend_41 { pt3dadd( -31.1373, -152.603, -26.1393, 0.55 ) }
    dend_41 { pt3dadd( -30.9962, -153.683, -26.4877, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -30.8597, -155.128, -26.9549, 0.55 ) }
    dend_41 { pt3dadd( -30.7468, -157.124, -27.5982, 0.28 ) }
    dend_41 { pt3dadd( -30.7483, -157.609, -27.7488, 0.55 ) }
    dend_41 { pt3dadd( -30.8588, -158.718, -28.0464, 0.28 ) }
    dend_41 { pt3dadd( -30.9192, -159.196, -28.1728, 0.55 ) }
    dend_41 { pt3dadd( -31.1804, -160.536, -28.4605, 0.28 ) }
    dend_41 { pt3dadd( -31.3524, -161.185, -28.5502, 0.55 ) }
    dend_41 { pt3dadd( -31.7432, -162.473, -28.5881, 0.28 ) }
    dend_41 { pt3dadd( -32.2814, -164.035, -28.6451, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -24.0706, -147.168, 11.9768, 0.55 ) }
    dend_39 { pt3dadd( -25.0015, -148.597, 12.1254, 0.55 ) }
    dend_39 { pt3dadd( -27.3948, -152.27, 12.5076, 0.55 ) }
    dend_39 { pt3dadd( -29.9938, -156.259, 12.9227, 0.55 ) }
    dend_39 { pt3dadd( -31.779, -158.999, 13.2078, 0.55 ) }
    dend_39 { pt3dadd( -38.4306, -168.803, 15.4197, 0.55 ) }
    dend_39 { pt3dadd( -45.2166, -178.516, 17.5919, 0.55 ) }
    dend_39 { pt3dadd( -52.8719, -186.373, 22.2449, 0.55 ) }
    dend_39 { pt3dadd( -61.2816, -193.572, 26.5492, 0.55 ) }
    dend_39 { pt3dadd( -69.9207, -200.236, 31.1701, 0.55 ) }
    dend_39 { pt3dadd( -77.9214, -206.128, 37.5485, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -24.0706, -147.168, 11.9768, 0.55 ) }
    dend_34 { pt3dadd( -24.3179, -148.288, 12.3976, 0.55 ) }
    dend_34 { pt3dadd( -24.5347, -149.717, 12.8591, 0.55 ) }
    dend_34 { pt3dadd( -25.0088, -152.845, 13.8684, 0.55 ) }
    dend_34 { pt3dadd( -25.466, -155.86, 14.8419, 0.55 ) }
    dend_34 { pt3dadd( -25.7735, -157.889, 15.4967, 0.55 ) }
    dend_34 { pt3dadd( -26.0802, -159.913, 16.1497, 0.55 ) }
    dend_34 { pt3dadd( -26.431, -162.454, 17.0158, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 28/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -32.2814, -164.035, -28.6451, 0.28 ) }
    dend_43 { pt3dadd( -33.5363, -167.021, -29.0743, 0.28 ) }
    dend_43 { pt3dadd( -33.8945, -167.946, -29.2352, 0.55 ) }
    dend_43 { pt3dadd( -34.9144, -170.525, -29.688, 0.28 ) }
    dend_43 { pt3dadd( -35.3813, -171.705, -29.8953, 0.55 ) }
    dend_43 { pt3dadd( -36.4347, -174.368, -30.3629, 0.28 ) }
    dend_43 { pt3dadd( -37.1523, -176.182, -30.6815, 0.83 ) }
    dend_43 { pt3dadd( -37.8165, -178.103, -31.1209, 0.28 ) }
    dend_43 { pt3dadd( -38.2838, -179.537, -31.4726, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -32.2814, -164.035, -28.6451, 0.55 ) }
    dend_42 { pt3dadd( -31.9199, -165.602, -28.5956, 0.55 ) }
    dend_42 { pt3dadd( -31.3364, -167.79, -28.4594, 0.55 ) }
    dend_42 { pt3dadd( -30.7781, -170.224, -28.2914, 0.55 ) }
    dend_42 { pt3dadd( -30.4079, -171.887, -28.1861, 0.55 ) }
    dend_42 { pt3dadd( -30.1347, -173.152, -28.1193, 0.28 ) }
    dend_42 { pt3dadd( -29.6643, -175.561, -27.9977, 0.55 ) }
    dend_42 { pt3dadd( -29.1889, -178.086, -27.863, 0.28 ) }
    dend_42 { pt3dadd( -28.7946, -181.059, -27.8402, 0.55 ) }
    dend_42 { pt3dadd( -28.6621, -182.721, -27.8886, 0.28 ) }
    dend_42 { pt3dadd( -28.6392, -183.934, -27.9454, 0.55 ) }
    dend_42 { pt3dadd( -28.6582, -185.282, -28.0106, 0.28 ) }
    dend_42 { pt3dadd( -28.7143, -186.472, -28.0897, 0.55 ) }
    dend_42 { pt3dadd( -28.9942, -189.548, -28.4619, 0.28 ) }
    dend_42 { pt3dadd( -29.2775, -192.11, -28.8359, 0.28 ) }
    dend_42 { pt3dadd( -29.5098, -193.664, -29.0732, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -26.431, -162.454, 17.0158, 0.28 ) }
    dend_36 { pt3dadd( -24.7758, -162.902, 16.4398, 0.28 ) }
    dend_36 { pt3dadd( -24.3366, -163.021, 16.2869, 0.55 ) }
    dend_36 { pt3dadd( -23.0767, -163.362, 15.8485, 0.28 ) }
    dend_36 { pt3dadd( -22.2269, -163.592, 15.5527, 0.55 ) }
    dend_36 { pt3dadd( -20.9006, -163.952, 15.0912, 0.28 ) }
    dend_36 { pt3dadd( -20.2689, -164.123, 14.8713, 0.55 ) }
    dend_36 { pt3dadd( -13.2945, -166.71, 12.0651, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -26.431, -162.454, 17.0158, 0.55 ) }
    dend_35 { pt3dadd( -26.6748, -164.888, 17.1144, 0.55 ) }
    dend_35 { pt3dadd( -26.3113, -172.171, 17.9709, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.2945, -166.71, 12.0651, 0.55 ) }
    dend_38 { pt3dadd( -6.91125, -168.562, 10.9352, 0.55 ) }
    dend_38 { pt3dadd( -0.310228, -169.472, 10.0489, 0.55 ) }
    dend_38 { pt3dadd( 6.32101, -170.094, 9.16688, 0.55 ) }
    dend_38 { pt3dadd( 12.8402, -169.404, 7.70706, 0.55 ) }
    dend_38 { pt3dadd( 19.4849, -168.662, 7.06754, 0.55 ) }
    dend_38 { pt3dadd( 25.856, -166.867, 5.83536, 0.55 ) }
    dend_38 { pt3dadd( 32.0469, -164.16, 5.70122, 0.55 ) }
    dend_38 { pt3dadd( 37.5103, -160.078, 5.66832, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -13.2945, -166.71, 12.0651, 0.55 ) }
    dend_37 { pt3dadd( -1.78942, -169.641, 12.6333, 0.55 ) }
    dend_37 { pt3dadd( 9.4167, -172.67, 15.215, 0.55 ) }
    dend_37 { pt3dadd( 20.5816, -174.475, 18.7954, 0.55 ) }
    dend_37 { pt3dadd( 32.2076, -176.28, 20.2997, 0.55 ) }
    dend_37 { pt3dadd( 43.1731, -179.97, 23.1389, 0.55 ) }
    dend_37 { pt3dadd( 53.8271, -185.355, 24.095, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_48 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_40 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_44 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_38 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_29 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_54 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_41 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_35 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_36 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_5 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_58 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_52 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_9 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 13
    dend_20 nseg = 3
    dend_55 nseg = 7
    dend_49 nseg = 3
    dend_24 nseg = 11
    dend_21 nseg = 13
    dend_16 nseg = 13
    dend_13 nseg = 15
    dend_60 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_6 nseg = 5
    dend_3 nseg = 7
    dend_62 nseg = 5
    dend_61 nseg = 5
    dend_48 nseg = 7
    dend_47 nseg = 7
    dend_7 nseg = 5
    dend_4 nseg = 3
    dend_40 nseg = 5
    dend_33 nseg = 5
    dend_44 nseg = 5
    dend_39 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_ChC_97f4d271eb_0_0


