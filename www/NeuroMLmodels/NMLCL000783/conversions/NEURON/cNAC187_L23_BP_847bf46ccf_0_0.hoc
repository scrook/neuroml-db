// Cell: cNAC187_L23_BP_847bf46ccf_0_0
/*
{
  "id" : "cNAC187_L23_BP_847bf46ccf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.47449, 10.7418, 1.66", "-0.606631, -10.5315, 12.5359, 1.66", "-1.20428, -12.7518, 14.4724, 1.66", "-2.23066, -16.5647, 17.7981, 1.39", "-6.31258, -31.7288, 31.0242, 1.11", "-7.02865, -34.3889, 33.3444, 1.11", "-7.93556, -37.758, 36.283, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.47601, -0.778182, 1.39", "0.628124, 13.1825, 1.84279, 0.83", "0.631759, 15.0615, 2.7058, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.93556, -37.758, 36.283, 0.83", "-8.43425, -41.6008, 34.8876, 0.83", "-8.55299, -42.5158, 34.5553, 0.83", "-8.85609, -44.8514, 33.7072, 0.83", "-8.99197, -45.8985, 33.327, 0.83", "-9.28417, -48.1501, 32.5094, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.93556, -37.758, 36.283, 0.83", "-7.97981, -39.7635, 36.6156, 0.83", "-8.0209, -41.5796, 36.8877, 0.83", "-8.15752, -43.9564, 37.2124, 0.83", "-8.37124, -49.3914, 37.8001, 0.83", "-8.48593, -53.8787, 38.2123, 0.55", "-8.68587, -61.4895, 38.7351, 0.55", "-8.67198, -65.2777, 39.0283, 0.83", "-8.55116, -69.6126, 39.3673, 0.55", "-8.1279, -76.7001, 40.14, 0.55", "-7.9628, -78.7253, 40.3861, 0.55", "-7.49621, -84.2176, 41.0857, 0.55", "-6.87981, -91.1432, 42.1521, 0.55", "-6.51497, -95.2898, 42.8405, 0.55", "-6.08414, -100.81, 43.8125, 0.55", "-5.67369, -110.74, 45.6839, 0.55", "-5.61726, -115.978, 46.6539, 0.55", "-5.66668, -119.886, 47.3213, 0.55", "-5.87714, -122.592, 47.6662, 0.55", "-6.19446, -124.958, 47.919, 0.55", "-7.04674, -129.696, 48.5408, 0.55", "-7.53105, -132.066, 48.8747, 0.55", "-8.2873, -135.684, 49.5491, 0.55", "-9.31596, -140.527, 50.5395, 0.55", "-10.8884, -147.511, 52.0854, 0.55", "-12.2595, -153.799, 53.5763, 0.55", "-13.5076, -159.281, 55.0024, 0.83", "-14.7114, -164.514, 56.5629, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.631759, 15.0615, 2.7058, 0.83", "-0.587307, 22.282, -0.699199, 0.83", "-0.831281, 24.1868, -1.53634, 0.83", "-1.13736, 26.5214, -2.58627, 0.83", "-1.34749, 28.4507, -3.40202, 0.83", "-1.65263, 31.5363, -4.64326, 0.83", "-1.97736, 35.5732, -6.18669, 0.83", "-2.18153, 38.4411, -7.03333, 0.83", "-2.3864, 41.5453, -8.01215, 0.83", "-2.5817, 44.7345, -9.15797, 0.55", "-2.64497, 45.7444, -9.52699, 0.55", "-2.78371, 47.4715, -10.1633, 0.55", "-3.00683, 51.0789, -11.436, 0.55", "-3.1879, 53.695, -12.32, 0.55", "-3.58509, 60.2528, -14.5388, 0.55", "-3.82428, 63.2124, -15.6634, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.631759, 15.0615, 2.7058, 0.83", "1.4794, 17.8508, 4.03339, 0.83", "2.06625, 20.0549, 5.14733, 0.83", "2.86168, 23.5369, 7.00177, 0.83", "3.58108, 26.8951, 8.81241, 0.83", "4.40812, 31.1489, 10.8812, 0.83", "5.05003, 34.3547, 12.3487, 0.83", "5.44283, 36.7836, 13.439, 0.83", "5.86808, 39.4481, 14.5291, 0.83", "5.96314, 40.1743, 14.7737, 0.83", "7.17191, 48.5167, 17.1153, 0.83", "7.42097, 50.2901, 17.4788, 0.83", "7.77108, 52.7011, 17.8345, 0.83", "8.06439, 54.7885, 18.0859, 0.83", "8.3753, 57.2105, 18.3238, 0.83", "8.79132, 60.2687, 18.6331, 0.83", "9.14034, 63.4234, 18.9152, 0.83", "9.37215, 65.2242, 19.0883, 0.83", "9.80989, 68.0061, 19.376, 0.83", "10.1917, 70.7437, 19.6511, 0.83", "10.6535, 73.6183, 19.921, 0.83", "11.2446, 77.3756, 20.3157, 0.83", "11.5996, 79.8317, 20.6911, 0.83", "11.7589, 81.1924, 20.93, 0.83", "11.8856, 82.7339, 21.2727, 0.83", "12.0312, 85.0164, 21.9197, 0.83", "12.0313, 88.3769, 23.0468, 0.55", "12.0005, 92.7861, 24.7176, 0.55", "11.9174, 94.0863, 25.2122, 0.55", "11.7356, 96.8212, 26.2325, 0.55", "11.6342, 97.9689, 26.6333, 0.55", "11.4097, 100.123, 27.369, 0.55", "11.2475, 102.366, 28.0404, 0.55", "11.2105, 105.618, 28.8656, 0.55", "11.2028, 107.76, 29.3776, 0.55", "11.1792, 109.71, 29.7679, 0.55", "11.2192, 112.145, 30.266, 0.55", "11.4259, 114.673, 30.7801, 0.55", "11.7982, 118.117, 31.5659, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-9.28417, -48.1501, 32.5094, 0.83", "-9.91136, -50.3241, 33.3949, 0.83", "-10.3879, -52.0462, 34.0132, 0.83", "-10.9404, -54.1229, 34.6676, 0.83", "-11.3907, -55.8398, 35.149, 0.83", "-11.6644, -56.8832, 35.4416, 0.83", "-11.9906, -58.1272, 35.7904, 0.83", "-12.1814, -59.0242, 35.9827, 0.83", "-12.3887, -60.048, 36.1564, 0.83", "-12.5926, -61.3546, 36.1829, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.28417, -48.1501, 32.5094, 0.55", "-11.7906, -47.7441, 39.3673, 0.55", "-14.2858, -47.1844, 46.7676, 0.55", "-15.5533, -46.9001, 50.5267, 0.55", "-17.1498, -46.5421, 55.2614, 0.28", "-17.4135, -46.4829, 56.0436, 0.83", "-18.797, -46.1726, 60.1468, 0.28", "-19.0257, -46.0689, 60.8474, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.82428, 63.2124, -15.6634, 0.55", "-3.46808, 65.1798, -16.0281, 0.55", "-3.11679, 67.2585, -16.4702, 0.55", "-2.86209, 68.7196, -16.7675, 0.55", "-2.45204, 70.9101, -17.213, 0.83", "-2.15499, 72.4669, -17.5214, 0.55", "-1.86056, 73.9169, -17.8098, 0.55", "-1.56472, 75.273, -18.0426, 1.11", "-1.07083, 77.6263, -18.5233, 0.55", "-0.934337, 78.4163, -18.6885, 0.55", "-0.771941, 79.4133, -18.906, 1.11", "-0.581184, 80.6514, -19.1816, 0.55", "-0.471773, 81.4622, -19.3547, 1.11", "-0.148548, 83.9394, -19.8466, 0.55", "-0.0685501, 85.2508, -20.1714, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.82428, 63.2124, -15.6634, 0.28", "-5.53822, 66.786, -19.0785, 0.28", "-5.76652, 67.3188, -19.5855, 0.55", "-7.60724, 72.0208, -23.9187, 0.28", "-9.32916, 76.3938, -28.2395, 1.11", "-10.2234, 78.6612, -30.6386, 0.28", "-10.2234, 78.6612, -30.6386, 0.55", "-10.6892, 81.3804, -33.172, 0.28", "-10.7163, 82.4115, -34.0779, 1.11", "-9.2866, 86.8799, -37.2028, 0.55", "-7.04405, 90.2902, -38.7757, 0.28", "-2.79366, 95.5746, -40.7277, 1.11", "1.30225, 100.026, -41.9731, 0.28", "1.42034, 100.129, -41.9825, 0.55", "5.31715, 102.991, -41.7627, 0.28", "5.71581, 103.241, -41.6762, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.5926, -61.3546, 36.1829, 0.83", "-12.4163, -67.965, 37.9208, 0.83", "-12.1858, -73.3005, 39.6719, 0.83", "-12.0074, -75.8058, 40.4823, 0.83", "-11.8851, -77.2557, 41.0735, 0.83", "-11.617, -81.2188, 42.8154, 0.83", "-11.5255, -83.5457, 43.6897, 0.83", "-11.4456, -87.9322, 44.9221, 0.83", "-11.2666, -90.988, 45.7443, 0.83", "-10.7704, -96.2138, 46.8912, 0.83", "-10.4364, -98.8997, 47.262, 0.83", "-9.6585, -105.466, 47.5093, 0.83", "-9.12699, -111.287, 47.3729, 0.83", "-8.94021, -116.052, 46.8941, 0.83", "-9.00036, -119.476, 46.5043, 0.83", "-9.03002, -120.163, 46.4069, 0.83", "-9.29472, -124.112, 46.1062, 0.28", "-9.4121, -125.157, 46.1252, 0.83", "-9.91872, -127.828, 46.1635, 0.28", "-10.906, -132.559, 46.1782, 0.28", "-11.117, -133.577, 46.2237, 0.28", "-11.7582, -136.826, 46.3859, 0.83", "-12.2415, -139.712, 46.5443, 0.28", "-12.6041, -142.03, 46.6983, 0.83", "-12.8034, -143.898, 46.8465, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.5926, -61.3546, 36.1829, 0.55", "-18.1808, -69.6173, 33.7379, 0.55", "-20.6824, -73.1514, 32.8436, 0.55", "-26.1136, -80.6442, 31.2125, 0.55", "-28.5068, -83.8456, 30.6197, 0.55", "-30.9415, -86.9517, 30.1623, 0.28", "-32.0295, -88.3398, 29.9579, 0.55", "-34.806, -91.5289, 29.8253, 0.28", "-36.6333, -93.5994, 29.8115, 0.55", "-38.8672, -96.0031, 30.0934, 0.28", "-42.4057, -99.5947, 30.5406, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BP_847bf46ccf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.47449, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.606631, -10.5315, 12.5359, 1.66 ) }
    dend_5 { pt3dadd( -1.20428, -12.7518, 14.4724, 1.66 ) }
    dend_5 { pt3dadd( -2.23066, -16.5647, 17.7981, 1.39 ) }
    dend_5 { pt3dadd( -6.31258, -31.7288, 31.0242, 1.11 ) }
    dend_5 { pt3dadd( -7.02865, -34.3889, 33.3444, 1.11 ) }
    dend_5 { pt3dadd( -7.93556, -37.758, 36.283, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.47601, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.628124, 13.1825, 1.84279, 0.83 ) }
    dend_0 { pt3dadd( 0.631759, 15.0615, 2.7058, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.93556, -37.758, 36.283, 0.83 ) }
    dend_7 { pt3dadd( -8.43425, -41.6008, 34.8876, 0.83 ) }
    dend_7 { pt3dadd( -8.55299, -42.5158, 34.5553, 0.83 ) }
    dend_7 { pt3dadd( -8.85609, -44.8514, 33.7072, 0.83 ) }
    dend_7 { pt3dadd( -8.99197, -45.8985, 33.327, 0.83 ) }
    dend_7 { pt3dadd( -9.28417, -48.1501, 32.5094, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.93556, -37.758, 36.283, 0.83 ) }
    dend_6 { pt3dadd( -7.97981, -39.7635, 36.6156, 0.83 ) }
    dend_6 { pt3dadd( -8.0209, -41.5796, 36.8877, 0.83 ) }
    dend_6 { pt3dadd( -8.15752, -43.9564, 37.2124, 0.83 ) }
    dend_6 { pt3dadd( -8.37124, -49.3914, 37.8001, 0.83 ) }
    dend_6 { pt3dadd( -8.48593, -53.8787, 38.2123, 0.55 ) }
    dend_6 { pt3dadd( -8.68587, -61.4895, 38.7351, 0.55 ) }
    dend_6 { pt3dadd( -8.67198, -65.2777, 39.0283, 0.83 ) }
    dend_6 { pt3dadd( -8.55116, -69.6126, 39.3673, 0.55 ) }
    dend_6 { pt3dadd( -8.1279, -76.7001, 40.14, 0.55 ) }
    dend_6 { pt3dadd( -7.9628, -78.7253, 40.3861, 0.55 ) }
    dend_6 { pt3dadd( -7.49621, -84.2176, 41.0857, 0.55 ) }
    dend_6 { pt3dadd( -6.87981, -91.1432, 42.1521, 0.55 ) }
    dend_6 { pt3dadd( -6.51497, -95.2898, 42.8405, 0.55 ) }
    dend_6 { pt3dadd( -6.08414, -100.81, 43.8125, 0.55 ) }
    dend_6 { pt3dadd( -5.67369, -110.74, 45.6839, 0.55 ) }
    dend_6 { pt3dadd( -5.61726, -115.978, 46.6539, 0.55 ) }
    dend_6 { pt3dadd( -5.66668, -119.886, 47.3213, 0.55 ) }
    dend_6 { pt3dadd( -5.87714, -122.592, 47.6662, 0.55 ) }
    dend_6 { pt3dadd( -6.19446, -124.958, 47.919, 0.55 ) }
    dend_6 { pt3dadd( -7.04674, -129.696, 48.5408, 0.55 ) }
    dend_6 { pt3dadd( -7.53105, -132.066, 48.8747, 0.55 ) }
    dend_6 { pt3dadd( -8.2873, -135.684, 49.5491, 0.55 ) }
    dend_6 { pt3dadd( -9.31596, -140.527, 50.5395, 0.55 ) }
    dend_6 { pt3dadd( -10.8884, -147.511, 52.0854, 0.55 ) }
    dend_6 { pt3dadd( -12.2595, -153.799, 53.5763, 0.55 ) }
    dend_6 { pt3dadd( -13.5076, -159.281, 55.0024, 0.83 ) }
    dend_6 { pt3dadd( -14.7114, -164.514, 56.5629, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.631759, 15.0615, 2.7058, 0.83 ) }
    dend_2 { pt3dadd( -0.587307, 22.282, -0.699199, 0.83 ) }
    dend_2 { pt3dadd( -0.831281, 24.1868, -1.53634, 0.83 ) }
    dend_2 { pt3dadd( -1.13736, 26.5214, -2.58627, 0.83 ) }
    dend_2 { pt3dadd( -1.34749, 28.4507, -3.40202, 0.83 ) }
    dend_2 { pt3dadd( -1.65263, 31.5363, -4.64326, 0.83 ) }
    dend_2 { pt3dadd( -1.97736, 35.5732, -6.18669, 0.83 ) }
    dend_2 { pt3dadd( -2.18153, 38.4411, -7.03333, 0.83 ) }
    dend_2 { pt3dadd( -2.3864, 41.5453, -8.01215, 0.83 ) }
    dend_2 { pt3dadd( -2.5817, 44.7345, -9.15797, 0.55 ) }
    dend_2 { pt3dadd( -2.64497, 45.7444, -9.52699, 0.55 ) }
    dend_2 { pt3dadd( -2.78371, 47.4715, -10.1633, 0.55 ) }
    dend_2 { pt3dadd( -3.00683, 51.0789, -11.436, 0.55 ) }
    dend_2 { pt3dadd( -3.1879, 53.695, -12.32, 0.55 ) }
    dend_2 { pt3dadd( -3.58509, 60.2528, -14.5388, 0.55 ) }
    dend_2 { pt3dadd( -3.82428, 63.2124, -15.6634, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.631759, 15.0615, 2.7058, 0.83 ) }
    dend_1 { pt3dadd( 1.4794, 17.8508, 4.03339, 0.83 ) }
    dend_1 { pt3dadd( 2.06625, 20.0549, 5.14733, 0.83 ) }
    dend_1 { pt3dadd( 2.86168, 23.5369, 7.00177, 0.83 ) }
    dend_1 { pt3dadd( 3.58108, 26.8951, 8.81241, 0.83 ) }
    dend_1 { pt3dadd( 4.40812, 31.1489, 10.8812, 0.83 ) }
    dend_1 { pt3dadd( 5.05003, 34.3547, 12.3487, 0.83 ) }
    dend_1 { pt3dadd( 5.44283, 36.7836, 13.439, 0.83 ) }
    dend_1 { pt3dadd( 5.86808, 39.4481, 14.5291, 0.83 ) }
    dend_1 { pt3dadd( 5.96314, 40.1743, 14.7737, 0.83 ) }
    dend_1 { pt3dadd( 7.17191, 48.5167, 17.1153, 0.83 ) }
    dend_1 { pt3dadd( 7.42097, 50.2901, 17.4788, 0.83 ) }
    dend_1 { pt3dadd( 7.77108, 52.7011, 17.8345, 0.83 ) }
    dend_1 { pt3dadd( 8.06439, 54.7885, 18.0859, 0.83 ) }
    dend_1 { pt3dadd( 8.3753, 57.2105, 18.3238, 0.83 ) }
    dend_1 { pt3dadd( 8.79132, 60.2687, 18.6331, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.14034, 63.4234, 18.9152, 0.83 ) }
    dend_1 { pt3dadd( 9.37215, 65.2242, 19.0883, 0.83 ) }
    dend_1 { pt3dadd( 9.80989, 68.0061, 19.376, 0.83 ) }
    dend_1 { pt3dadd( 10.1917, 70.7437, 19.6511, 0.83 ) }
    dend_1 { pt3dadd( 10.6535, 73.6183, 19.921, 0.83 ) }
    dend_1 { pt3dadd( 11.2446, 77.3756, 20.3157, 0.83 ) }
    dend_1 { pt3dadd( 11.5996, 79.8317, 20.6911, 0.83 ) }
    dend_1 { pt3dadd( 11.7589, 81.1924, 20.93, 0.83 ) }
    dend_1 { pt3dadd( 11.8856, 82.7339, 21.2727, 0.83 ) }
    dend_1 { pt3dadd( 12.0312, 85.0164, 21.9197, 0.83 ) }
    dend_1 { pt3dadd( 12.0313, 88.3769, 23.0468, 0.55 ) }
    dend_1 { pt3dadd( 12.0005, 92.7861, 24.7176, 0.55 ) }
    dend_1 { pt3dadd( 11.9174, 94.0863, 25.2122, 0.55 ) }
    dend_1 { pt3dadd( 11.7356, 96.8212, 26.2325, 0.55 ) }
    dend_1 { pt3dadd( 11.6342, 97.9689, 26.6333, 0.55 ) }
    dend_1 { pt3dadd( 11.4097, 100.123, 27.369, 0.55 ) }
    dend_1 { pt3dadd( 11.2475, 102.366, 28.0404, 0.55 ) }
    dend_1 { pt3dadd( 11.2105, 105.618, 28.8656, 0.55 ) }
    dend_1 { pt3dadd( 11.2028, 107.76, 29.3776, 0.55 ) }
    dend_1 { pt3dadd( 11.1792, 109.71, 29.7679, 0.55 ) }
    dend_1 { pt3dadd( 11.2192, 112.145, 30.266, 0.55 ) }
    dend_1 { pt3dadd( 11.4259, 114.673, 30.7801, 0.55 ) }
    dend_1 { pt3dadd( 11.7982, 118.117, 31.5659, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -9.28417, -48.1501, 32.5094, 0.83 ) }
    dend_9 { pt3dadd( -9.91136, -50.3241, 33.3949, 0.83 ) }
    dend_9 { pt3dadd( -10.3879, -52.0462, 34.0132, 0.83 ) }
    dend_9 { pt3dadd( -10.9404, -54.1229, 34.6676, 0.83 ) }
    dend_9 { pt3dadd( -11.3907, -55.8398, 35.149, 0.83 ) }
    dend_9 { pt3dadd( -11.6644, -56.8832, 35.4416, 0.83 ) }
    dend_9 { pt3dadd( -11.9906, -58.1272, 35.7904, 0.83 ) }
    dend_9 { pt3dadd( -12.1814, -59.0242, 35.9827, 0.83 ) }
    dend_9 { pt3dadd( -12.3887, -60.048, 36.1564, 0.83 ) }
    dend_9 { pt3dadd( -12.5926, -61.3546, 36.1829, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.28417, -48.1501, 32.5094, 0.55 ) }
    dend_8 { pt3dadd( -11.7906, -47.7441, 39.3673, 0.55 ) }
    dend_8 { pt3dadd( -14.2858, -47.1844, 46.7676, 0.55 ) }
    dend_8 { pt3dadd( -15.5533, -46.9001, 50.5267, 0.55 ) }
    dend_8 { pt3dadd( -17.1498, -46.5421, 55.2614, 0.28 ) }
    dend_8 { pt3dadd( -17.4135, -46.4829, 56.0436, 0.83 ) }
    dend_8 { pt3dadd( -18.797, -46.1726, 60.1468, 0.28 ) }
    dend_8 { pt3dadd( -19.0257, -46.0689, 60.8474, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.82428, 63.2124, -15.6634, 0.55 ) }
    dend_4 { pt3dadd( -3.46808, 65.1798, -16.0281, 0.55 ) }
    dend_4 { pt3dadd( -3.11679, 67.2585, -16.4702, 0.55 ) }
    dend_4 { pt3dadd( -2.86209, 68.7196, -16.7675, 0.55 ) }
    dend_4 { pt3dadd( -2.45204, 70.9101, -17.213, 0.83 ) }
    dend_4 { pt3dadd( -2.15499, 72.4669, -17.5214, 0.55 ) }
    dend_4 { pt3dadd( -1.86056, 73.9169, -17.8098, 0.55 ) }
    dend_4 { pt3dadd( -1.56472, 75.273, -18.0426, 1.11 ) }
    dend_4 { pt3dadd( -1.07083, 77.6263, -18.5233, 0.55 ) }
    dend_4 { pt3dadd( -0.934337, 78.4163, -18.6885, 0.55 ) }
    dend_4 { pt3dadd( -0.771941, 79.4133, -18.906, 1.11 ) }
    dend_4 { pt3dadd( -0.581184, 80.6514, -19.1816, 0.55 ) }
    dend_4 { pt3dadd( -0.471773, 81.4622, -19.3547, 1.11 ) }
    dend_4 { pt3dadd( -0.148548, 83.9394, -19.8466, 0.55 ) }
    dend_4 { pt3dadd( -0.0685501, 85.2508, -20.1714, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.82428, 63.2124, -15.6634, 0.28 ) }
    dend_3 { pt3dadd( -5.53822, 66.786, -19.0785, 0.28 ) }
    dend_3 { pt3dadd( -5.76652, 67.3188, -19.5855, 0.55 ) }
    dend_3 { pt3dadd( -7.60724, 72.0208, -23.9187, 0.28 ) }
    dend_3 { pt3dadd( -9.32916, 76.3938, -28.2395, 1.11 ) }
    dend_3 { pt3dadd( -10.2234, 78.6612, -30.6386, 0.28 ) }
    dend_3 { pt3dadd( -10.2234, 78.6612, -30.6386, 0.55 ) }
    dend_3 { pt3dadd( -10.6892, 81.3804, -33.172, 0.28 ) }
    dend_3 { pt3dadd( -10.7163, 82.4115, -34.0779, 1.11 ) }
    dend_3 { pt3dadd( -9.2866, 86.8799, -37.2028, 0.55 ) }
    dend_3 { pt3dadd( -7.04405, 90.2902, -38.7757, 0.28 ) }
    dend_3 { pt3dadd( -2.79366, 95.5746, -40.7277, 1.11 ) }
    dend_3 { pt3dadd( 1.30225, 100.026, -41.9731, 0.28 ) }
    dend_3 { pt3dadd( 1.42034, 100.129, -41.9825, 0.55 ) }
    dend_3 { pt3dadd( 5.31715, 102.991, -41.7627, 0.28 ) }
    dend_3 { pt3dadd( 5.71581, 103.241, -41.6762, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.5926, -61.3546, 36.1829, 0.83 ) }
    dend_11 { pt3dadd( -12.4163, -67.965, 37.9208, 0.83 ) }
    dend_11 { pt3dadd( -12.1858, -73.3005, 39.6719, 0.83 ) }
    dend_11 { pt3dadd( -12.0074, -75.8058, 40.4823, 0.83 ) }
    dend_11 { pt3dadd( -11.8851, -77.2557, 41.0735, 0.83 ) }
    dend_11 { pt3dadd( -11.617, -81.2188, 42.8154, 0.83 ) }
    dend_11 { pt3dadd( -11.5255, -83.5457, 43.6897, 0.83 ) }
    dend_11 { pt3dadd( -11.4456, -87.9322, 44.9221, 0.83 ) }
    dend_11 { pt3dadd( -11.2666, -90.988, 45.7443, 0.83 ) }
    dend_11 { pt3dadd( -10.7704, -96.2138, 46.8912, 0.83 ) }
    dend_11 { pt3dadd( -10.4364, -98.8997, 47.262, 0.83 ) }
    dend_11 { pt3dadd( -9.6585, -105.466, 47.5093, 0.83 ) }
    dend_11 { pt3dadd( -9.12699, -111.287, 47.3729, 0.83 ) }
    dend_11 { pt3dadd( -8.94021, -116.052, 46.8941, 0.83 ) }
    dend_11 { pt3dadd( -9.00036, -119.476, 46.5043, 0.83 ) }
    dend_11 { pt3dadd( -9.03002, -120.163, 46.4069, 0.83 ) }
    dend_11 { pt3dadd( -9.29472, -124.112, 46.1062, 0.28 ) }
    dend_11 { pt3dadd( -9.4121, -125.157, 46.1252, 0.83 ) }
    dend_11 { pt3dadd( -9.91872, -127.828, 46.1635, 0.28 ) }
    dend_11 { pt3dadd( -10.906, -132.559, 46.1782, 0.28 ) }
    dend_11 { pt3dadd( -11.117, -133.577, 46.2237, 0.28 ) }
    dend_11 { pt3dadd( -11.7582, -136.826, 46.3859, 0.83 ) }
    dend_11 { pt3dadd( -12.2415, -139.712, 46.5443, 0.28 ) }
    dend_11 { pt3dadd( -12.6041, -142.03, 46.6983, 0.83 ) }
    dend_11 { pt3dadd( -12.8034, -143.898, 46.8465, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.5926, -61.3546, 36.1829, 0.55 ) }
    dend_10 { pt3dadd( -18.1808, -69.6173, 33.7379, 0.55 ) }
    dend_10 { pt3dadd( -20.6824, -73.1514, 32.8436, 0.55 ) }
    dend_10 { pt3dadd( -26.1136, -80.6442, 31.2125, 0.55 ) }
    dend_10 { pt3dadd( -28.5068, -83.8456, 30.6197, 0.55 ) }
    dend_10 { pt3dadd( -30.9415, -86.9517, 30.1623, 0.28 ) }
    dend_10 { pt3dadd( -32.0295, -88.3398, 29.9579, 0.55 ) }
    dend_10 { pt3dadd( -34.806, -91.5289, 29.8253, 0.28 ) }
    dend_10 { pt3dadd( -36.6333, -93.5994, 29.8115, 0.55 ) }
    dend_10 { pt3dadd( -38.8672, -96.0031, 30.0934, 0.28 ) }
    dend_10 { pt3dadd( -42.4057, -99.5947, 30.5406, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 5
    dend_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BP_847bf46ccf_0_0


