// Cell: dSTUT214_L5_NBC_4a41f068df_0_0
/*
{
  "id" : "dSTUT214_L5_NBC_4a41f068df_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.277629, -9.42436, 0.0, 2.9454", "-0.225418, -8.4907, 0.0, 4.92187", "-0.173208, -7.55704, 0.0, 6.69655", "-0.120997, -6.62338, 0.0, 8.28957", "-0.0687862, -5.68972, 0.0, 9.36061", "-0.0165755, -4.75606, 0.0, 10.2397", "0.0356352, -3.8224, 0.0, 11.0293", "0.087846, -2.88873, 0.0, 11.6457", "0.140057, -1.95507, 0.0, 12.2691", "0.192267, -1.02141, 0.0, 12.5588", "0.244478, -0.0877535, 0.0, 12.7806", "0.296689, 0.845907, 0.0, 13.0398", "0.3489, 1.77957, 0.0, 13.1732", "0.40111, 2.71323, 0.0, 13.0581", "0.453321, 3.64689, 0.0, 12.8607", "0.505532, 4.58055, 0.0, 12.1633", "0.557743, 5.51421, 0.0, 11.3807", "0.609953, 6.44787, 0.0, 10.3357", "0.662164, 7.38153, 0.0, 8.86929", "0.714375, 8.31519, 0.0, 6.73974", "0.766585, 9.24885, 0.0, 3.85991" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0596826, 8.34843, 5.51, 1.4", "-0.0596826, 8.34843, 5.51, 1.4", "-0.551427, 10.301, 5.97545, 1.47", "-0.891183, 11.7747, 6.31272, 1.47", "-1.18235, 13.2943, 6.64667, 1.55", "-1.35657, 14.4203, 6.90028, 1.55", "-1.51664, 15.6364, 7.16151, 1.55", "-1.58935, 16.4531, 7.32791, 1.55", "-1.63855, 17.534, 7.54804, 1.55", "-1.6636, 18.8104, 7.80962, 1.55", "-1.70098, 20.2928, 8.15246, 1.92", "-1.79672, 22.0537, 8.60472, 2.14", "-1.95484, 23.7981, 9.10138, 1.18", "-2.1355, 25.2247, 9.55233, 1.25", "-2.35437, 26.747, 10.0625, 1.25", "-2.6819, 28.6343, 10.7296, 1.33", "-3.0297, 30.363, 11.378, 1.47", "-3.37322, 31.8469, 12.0053, 1.77", "-3.78181, 33.3028, 12.6696, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.299673, -8.04856, 3.35, 2.29", "-0.299673, -8.04856, 3.35, 2.29", "-0.85981, -9.84365, 4.24635, 1.62", "-1.29739, -11.6331, 5.11449, 1.4", "-1.61424, -13.1791, 5.77855, 1.4", "-1.86555, -14.3235, 6.20972, 1.25", "-2.16923, -15.5683, 6.61805, 1.25", "-2.50409, -16.9307, 6.98888, 1.18", "-2.70585, -17.8265, 7.17246, 1.18", "-3.11954, -19.9615, 7.52542, 1.55", "-3.46955, -21.7892, 7.78186, 1.62", "-3.85408, -23.5726, 8.00829, 1.47", "-4.32334, -25.5221, 8.20443, 1.47", "-4.71153, -27.0329, 8.35708, 1.47", "-5.12642, -28.7355, 8.51596, 1.47", "-5.34195, -29.8704, 8.64536, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.04042, 7.30343, -5.24, 2.43", "5.04042, 7.30343, -5.24, 2.43", "6.08484, 8.0058, -5.13607, 1.55", "7.09978, 8.70457, -5.05327, 1.47", "7.81401, 9.20634, -5.00996, 1.25", "9.17415, 10.1712, -4.89138, 1.11", "10.0014, 10.7581, -4.79187, 1.25", "11.0543, 11.5165, -4.60671, 1.4", "12.263, 12.3987, -4.3221, 1.62", "13.6151, 13.3606, -3.95069, 1.03", "14.5964, 13.9984, -3.64599, 0.88", "15.5832, 14.5535, -3.29175, 1.11", "16.7159, 15.1215, -2.80172, 0.88", "17.7889, 15.6075, -2.27661, 1.47", "18.3704, 15.8498, -1.9488, 1.33", "19.4068, 16.2659, -1.33214, 1.03", "20.3848, 16.6872, -0.771502, 1.03", "21.1469, 17.0515, -0.352827, 1.18", "22.0496, 17.5518, 0.125896, 1.18", "23.2205, 18.2805, 0.708516, 1.4", "23.9548, 18.7799, 1.03269, 1.03", "24.7295, 19.3415, 1.24355, 0.81", "25.4575, 19.8581, 1.31875, 0.74", "26.2633, 20.407, 1.29181, 1.11", "27.3286, 21.0917, 1.16314, 1.11", "28.096, 21.5525, 1.01639, 1.33", "29.715, 22.471, 0.739519, 1.33", "31.1429, 23.2655, 0.561972, 0.88", "32.2916, 23.9239, 0.500718, 1.11", "32.924, 24.3002, 0.509231, 1.33", "33.8625, 24.9026, 0.605529, 1.33", "35.058, 25.7374, 0.833692, 0.96", "36.0062, 26.4308, 1.12241, 0.96", "37.0112, 27.2133, 1.50222, 1.4", "37.6737, 27.7475, 1.8016, 1.4", "38.5068, 28.4476, 2.19813, 1.4", "39.4654, 29.2699, 2.65068, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.129629, -9.36907, -2.13, 1.84", "-0.129629, -9.36907, -2.13, 1.84", "-0.524844, -10.1875, -2.03729, 1.55", "-0.803797, -10.8533, -1.97459, 1.47", "-1.23984, -12.1217, -1.83416, 1.47", "-1.55291, -13.2487, -1.7061, 1.25", "-1.70601, -13.9768, -1.6272, 1.18", "-1.82548, -14.8637, -1.53955, 1.33", "-1.89482, -15.9704, -1.44209, 1.7", "-1.88262, -17.1406, -1.35602, 1.4", "-1.81671, -18.0569, -1.29946, 1.18", "-1.66377, -19.3923, -1.21403, 1.4", "-1.46847, -20.8705, -1.11976, 1.4", "-1.32133, -21.8687, -1.06049, 1.55", "-1.14869, -22.9682, -1.01215, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.330332, 1.39443, -10.46, 3.02", "0.330332, 1.39443, -10.46, 3.02", "-1.75403, 1.32478, -10.46, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.766585, 9.24885, 0.0, 0.672037", "1.60408, 24.2255, 0.0, 0.672037", "2.44158, 39.2021, 0.0, 0.672037" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.78181, 33.3028, 12.6696, 2.21", "-3.98851, 34.7797, 13.7008, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.78181, 33.3028, 12.6696, 0.59", "-4.61198, 33.667, 13.587, 0.59", "-5.79858, 34.18, 14.7609, 0.59", "-6.64727, 34.5323, 15.5499, 0.44", "-7.91742, 35.0337, 16.67, 0.29", "-8.40796, 35.2172, 17.0728, 0.29", "-8.96633, 35.4262, 17.5307, 0.29", "-9.53311, 35.664, 17.9811, 0.44", "-10.1044, 35.9166, 18.3929, 0.66", "-10.9433, 36.3255, 19.0328, 0.66", "-11.5324, 36.6498, 19.5477, 0.44", "-12.1894, 37.0506, 20.1966, 0.44", "-12.7873, 37.4706, 20.9104, 0.66", "-13.1101, 37.7342, 21.37, 0.66", "-13.6939, 38.2643, 22.3097, 0.29", "-14.067, 38.6253, 22.9842, 0.29", "-14.7292, 39.2356, 24.1836, 0.44", "-15.3716, 39.7483, 25.2493, 0.37", "-15.9188, 40.1163, 26.0924, 0.37", "-16.4968, 40.4485, 26.8934, 0.66", "-17.1365, 40.7704, 27.6844, 1.18", "-18.0092, 41.1579, 28.6137, 1.47", "-19.0632, 41.5685, 29.5922, 0.37", "-19.7356, 41.8017, 30.1545, 0.29", "-20.5346, 42.0543, 30.7762, 0.29", "-21.3405, 42.2993, 31.37, 0.15", "-22.022, 42.5165, 31.861, 0.37", "-23.1309, 42.903, 32.6979, 0.22", "-23.8245, 43.1825, 33.214, 0.22", "-24.8149, 43.6222, 33.9625, 0.22", "-25.3401, 43.8677, 34.3611, 0.96", "-26.2781, 44.333, 35.062, 1.84", "-26.9529, 44.6956, 35.5688, 1.84", "-27.946, 45.2845, 36.3001, 0.22", "-28.4959, 45.6429, 36.6976, 0.22", "-28.9689, 45.9772, 37.0477, 0.22", "-29.4402, 46.3018, 37.3908, 0.22", "-29.7628, 46.509, 37.614, 0.22", "-29.9742, 46.6342, 37.754, 0.22", "-30.4056, 46.8769, 38.0692, 0.52", "-30.7579, 47.0863, 38.3297, 1.03", "-31.1666, 47.3581, 38.663, 1.25", "-31.8731, 47.8594, 39.2349, 0.81", "-32.4889, 48.3347, 39.7232, 0.22", "-32.8693, 48.6529, 40.0578, 0.22", "-33.329, 49.0872, 40.5404, 0.59", "-34.1072, 49.9479, 41.4517, 0.07", "-34.3327, 50.2518, 41.7417, 0.15", "-34.7955, 51.015, 42.3608, 0.15", "-35.44, 52.2752, 43.2365, 0.07", "-35.9821, 53.4517, 43.9289, 0.07", "-36.2218, 54.0474, 44.2466, 0.07", "-36.5349, 54.9271, 44.6609, 0.07", "-36.9131, 56.0842, 45.1454, 0.07", "-37.1581, 56.8901, 45.447, 0.07", "-37.3867, 57.6448, 45.6843, 0.07", "-37.6871, 58.5314, 45.9606, 0.22", "-37.8752, 59.0172, 46.1422, 0.44", "-38.2408, 59.8033, 46.4944, 0.07", "-38.7178, 60.6921, 46.9753, 0.07", "-38.9685, 61.1116, 47.23, 0.07", "-39.341, 61.6619, 47.5764, 0.37", "-39.4869, 61.8518, 47.6931, 0.37", "-39.9695, 62.4354, 48.0837, 0.07", "-40.5187, 63.0553, 48.5043, 0.07", "-40.7396, 63.3, 48.6547, 0.37", "-41.3954, 64.065, 49.0751, 1.11", "-41.7924, 64.5696, 49.3249, 0.81", "-42.5213, 65.5473, 49.7505, 0.07", "-42.9028, 66.0622, 49.9461, 0.07", "-43.3239, 66.6112, 50.143, 0.59", "-44.0714, 67.5689, 50.5042, 0.15", "-44.9449, 68.6374, 50.9321, 0.15", "-45.5679, 69.3307, 51.2389, 0.15", "-46.2726, 70.0339, 51.6025, 0.44", "-47.1324, 70.8037, 52.111, 0.15", "-47.5548, 71.1286, 52.3499, 0.15", "-48.3017, 71.6188, 52.7407, 0.74", "-49.3726, 72.2512, 53.2474, 0.07", "-50.1928, 72.708, 53.5881, 0.07", "-50.9518, 73.1304, 53.8601, 0.07", "-52.2045, 73.8263, 54.208, 0.07", "-53.1107, 74.3289, 54.366, 0.52", "-53.574, 74.5815, 54.3972, 0.52", "-54.6821, 75.1831, 54.3674, 0.07", "-55.6692, 75.7375, 54.2677, 0.37", "-56.9919, 76.4786, 54.0859, 0.07", "-58.4305, 77.265, 53.8764, 0.07", "-59.5188, 77.8436, 53.6665, 0.07", "-60.9254, 78.5777, 53.3529, 0.07", "-62.5095, 79.3943, 52.9426, 0.07", "-63.3384, 79.8077, 52.6997, 0.07", "-64.2517, 80.2606, 52.4166, 0.07", "-65.1698, 80.7215, 52.1614, 0.07", "-66.0137, 81.1473, 51.9493, 0.81" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-5.34195, -29.8704, 8.64536, 0.52", "-5.14949, -29.8342, 9.59799, 0.52", "-4.83473, -29.8089, 11.0724, 0.52", "-4.51996, -29.834, 12.5092, 0.59", "-4.19094, -29.9292, 14.0332, 0.59", "-3.90122, -30.0762, 15.369, 0.59", "-3.61379, -30.2956, 16.68, 0.59", "-3.30503, -30.6753, 18.1566, 0.59", "-3.17968, -30.9332, 18.7507, 0.59", "-3.01564, -31.3671, 19.4504, 0.59", "-2.87195, -31.7858, 20.018, 0.52", "-2.6742, -32.3798, 20.7789, 0.52", "-2.44232, -33.0417, 21.5858, 0.59", "-2.0136, -34.0576, 22.857, 0.81", "-1.51131, -35.058, 24.2396, 0.52", "-1.17915, -35.6208, 25.0836, 0.59", "-0.757372, -36.2095, 26.0492, 0.81", "-0.385428, -36.6487, 26.843, 1.11", "0.451722, -37.5041, 28.4753, 0.37", "1.03948, -38.0445, 29.5886, 0.59", "1.55956, -38.4992, 30.5554, 0.66", "2.3147, -39.0958, 31.9402, 0.37", "2.85503, -39.463, 32.9594, 0.37", "3.13815, -39.6308, 33.5819, 0.37", "3.50768, -39.8393, 34.5938, 0.37", "3.72786, -39.9893, 35.4605, 0.96", "3.92912, -40.1957, 36.6859, 0.96", "4.06602, -40.4538, 38.0524, 0.96", "4.2013, -40.969, 40.3877, 0.66", "4.22502, -41.4524, 42.3698, 0.37", "4.14495, -42.0221, 44.4396, 0.37", "3.96373, -42.606, 46.4072, 0.37", "3.85276, -42.8564, 47.2041, 0.37", "3.5808, -43.3762, 48.7871, 0.66", "3.24911, -44.01, 50.639, 0.66", "2.96893, -44.5932, 52.3142, 0.81", "2.6365, -45.3785, 54.5197, 0.88", "2.38101, -46.0987, 56.4592, 0.88", "2.17078, -46.9391, 58.6285, 0.37", "2.07101, -47.6624, 60.4222, 0.29", "2.0667, -48.1445, 61.4602, 0.29", "2.11369, -48.6676, 62.466, 0.29", "2.21819, -49.4498, 63.7889, 0.52", "2.36351, -50.4279, 65.3123, 0.96", "2.52324, -51.6197, 67.0128, 0.96", "2.63309, -52.6037, 68.3842, 0.29", "2.71527, -53.5237, 69.6555, 0.29", "2.77617, -54.4448, 70.9502, 0.29", "2.79331, -55.1355, 71.9287, 0.88", "2.80654, -55.973, 72.9903, 2.21" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-5.34195, -29.8704, 8.64536, 0.96", "-6.14593, -31.5955, 8.66482, 0.96", "-7.25481, -33.9673, 8.81671, 0.81", "-8.17725, -36.0348, 9.18911, 0.74", "-9.16292, -38.2554, 9.82733, 0.88", "-10.1995, -40.5968, 10.7008, 0.88", "-10.4981, -41.3228, 10.9972, 0.88", "-10.9051, -42.47, 11.5563, 0.66", "-11.6954, -44.858, 12.8248, 0.66", "-12.2508, -46.4223, 13.6699, 0.88", "-12.7432, -47.6899, 14.3391, 0.88", "-13.6108, -49.6705, 15.3141, 1.03", "-14.4934, -51.5984, 16.1783, 1.03", "-15.4639, -53.7373, 16.9831, 0.88", "-16.4138, -55.9006, 17.6672, 0.59", "-16.8685, -57.0162, 18.0261, 0.44", "-17.6719, -59.0625, 18.7587, 1.03", "-18.2034, -60.4481, 19.312, 1.03", "-18.6504, -61.7828, 19.8443, 1.03", "-19.2826, -63.9869, 20.7105, 0.88", "-19.8761, -66.3374, 21.5904, 0.81", "-20.5212, -69.0598, 22.5969, 1.03", "-21.0261, -71.2025, 23.3596, 1.47", "-21.5922, -73.4682, 24.1648, 1.11", "-22.1599, -75.7216, 24.9481, 0.74", "-22.561, -77.4032, 25.5092, 0.66", "-22.9333, -79.0633, 26.0473, 0.66", "-23.3871, -81.1646, 26.7184, 1.03", "-23.9767, -83.8681, 27.5672, 0.96", "-24.4757, -86.0239, 28.2118, 0.81", "-24.9539, -87.9393, 28.7336, 1.11", "-25.6288, -90.3523, 29.3391, 0.74", "-26.2709, -92.374, 29.871, 0.37", "-26.8022, -93.8641, 30.311, 0.37", "-27.3597, -95.3018, 30.7887, 0.96", "-28.0433, -96.9874, 31.3897, 1.55", "-28.5164, -98.1473, 31.8115, 1.7", "-29.5229, -100.662, 32.7349, 0.81", "-30.2151, -102.459, 33.4247, 0.74", "-30.7356, -103.917, 33.9808, 0.74", "-31.3408, -105.898, 34.6828, 0.44", "-31.8764, -108.0, 35.3425, 0.37", "-32.2995, -109.905, 35.838, 0.37", "-32.5778, -111.235, 36.0767, 0.37", "-32.9696, -113.05, 36.3027, 0.74", "-33.3708, -114.87, 36.4589, 1.03", "-33.519, -115.544, 36.5246, 1.03", "-33.8787, -117.321, 36.7197, 0.59", "-34.1183, -118.534, 36.8946, 0.59", "-34.5702, -120.669, 37.3329, 0.81", "-35.0457, -122.777, 37.9945, 0.52", "-35.418, -124.408, 38.6918, 0.96", "-35.7874, -126.158, 39.5814, 1.25", "-36.1749, -128.334, 40.8244, 0.66", "-36.5294, -130.524, 42.0903, 0.29", "-36.8641, -132.474, 43.2558, 0.29", "-37.1675, -134.001, 44.1327, 0.29", "-37.3428, -134.769, 44.5246, 0.74", "-37.7341, -136.262, 45.1815, 0.96", "-38.5843, -139.173, 46.1395, 0.22", "-39.181, -140.961, 46.526, 0.22", "-39.7197, -142.403, 46.7195, 0.52", "-40.1469, -143.445, 46.8223, 1.03", "-40.6569, -144.609, 46.9423, 1.11", "-41.3473, -146.079, 47.1188, 0.59", "-42.1404, -147.662, 47.3493, 0.22", "-42.6022, -148.557, 47.4777, 0.22", "-42.9825, -149.292, 47.599, 0.22", "-43.4597, -150.243, 47.7626, 0.44", "-44.076, -151.543, 47.9844, 0.96", "-44.7434, -153.028, 48.2265, 0.96", "-45.2584, -154.176, 48.4117, 0.44", "-46.0919, -155.988, 48.73, 0.22", "-46.5641, -157.015, 48.9381, 0.59", "-46.9583, -157.9, 49.1311, 0.59", "-47.5752, -159.385, 49.4658, 0.15", "-48.1596, -160.894, 49.8749, 0.15", "-48.7085, -162.369, 50.3997, 0.15", "-49.2184, -163.803, 50.9575, 0.52", "-49.5344, -164.677, 51.3355, 1.33", "-50.0624, -166.094, 51.9905, 1.55", "-50.7274, -167.848, 52.7899, 1.18", "-51.8194, -170.625, 53.9446, 0.37", "-52.7113, -172.745, 54.7268, 0.22", "-53.5476, -174.578, 55.3187, 0.22", "-54.4036, -176.335, 55.8225, 0.37", "-55.3868, -178.256, 56.2773, 0.96", "-56.3932, -180.153, 56.6251, 0.22", "-57.1828, -181.602, 56.8125, 0.22", "-58.1756, -183.414, 57.002, 0.22", "-58.7901, -184.576, 57.0813, 0.37", "-59.4179, -185.791, 57.1567, 0.88", "-60.3177, -187.646, 57.3699, 0.88", "-61.4074, -190.108, 57.7697, 0.22", "-61.9075, -191.346, 58.0213, 0.44", "-62.479, -192.839, 58.3691, 0.88", "-63.0013, -194.232, 58.7085, 0.37", "-64.0252, -196.945, 59.3572, 0.15", "-64.767, -198.932, 59.7923, 0.15", "-65.315, -200.457, 60.169, 0.15", "-65.5839, -201.243, 60.3761, 0.29", "-66.0631, -202.687, 60.7834, 0.96", "-66.6037, -204.378, 61.2974, 0.29", "-67.076, -205.899, 61.7887, 0.15", "-67.615, -207.731, 62.4783, 0.15", "-68.0151, -209.145, 63.0614, 0.15", "-68.46, -210.783, 63.758, 0.15", "-68.797, -212.043, 64.2879, 0.15", "-69.2319, -213.627, 64.9236, 0.29", "-69.6375, -214.954, 65.3967, 0.81", "-70.2623, -216.845, 65.9565, 1.11", "-70.8833, -218.617, 66.406, 0.29", "-71.5633, -220.531, 66.802, 0.15", "-72.1743, -222.232, 67.0796, 0.15", "-72.7726, -223.926, 67.2844, 0.15", "-73.1626, -225.063, 67.3876, 0.15", "-73.3633, -225.681, 67.4253, 0.37", "-73.6748, -226.606, 67.5078, 0.88", "-73.9594, -227.339, 67.5832, 1.11", "-74.6468, -228.824, 67.7361, 0.29", "-75.4334, -230.183, 67.8651, 0.15", "-76.0118, -231.038, 67.9298, 0.15", "-77.3202, -232.738, 67.9688, 0.15", "-78.1877, -233.754, 67.9525, 0.59", "-79.1348, -234.798, 67.8985, 0.59", "-81.4128, -237.199, 67.6496, 0.15", "-82.7701, -238.628, 67.382, 0.15", "-84.2293, -240.213, 66.9688, 0.15", "-84.6357, -240.683, 66.8049, 0.37", "-85.795, -242.125, 66.2628, 0.96", "-86.7705, -243.42, 65.7452, 0.22", "-87.6274, -244.668, 65.2358, 0.22", "-88.0597, -245.369, 65.0099, 0.22", "-88.4709, -246.132, 64.8285, 0.44", "-88.9419, -247.013, 64.6108, 0.81", "-89.6859, -248.326, 64.2642, 0.22", "-90.4398, -249.539, 63.9541, 0.29", "-91.3774, -250.954, 63.6094, 0.22", "-92.5008, -252.567, 63.1857, 0.88", "-93.9682, -254.539, 62.6334, 0.07", "-94.8011, -255.606, 62.3226, 0.07", "-95.8425, -256.873, 61.907, 0.15", "-97.1687, -258.397, 61.3616, 0.07", "-97.6321, -258.897, 61.1724, 0.29", "-98.6617, -259.967, 60.8354, 0.44", "-99.4835, -260.84, 60.6014, 0.15", "-100.559, -262.014, 60.2878, 0.15", "-101.157, -262.673, 60.0994, 0.37", "-101.87, -263.465, 59.8727, 0.44", "-102.985, -264.773, 59.5207, 0.15", "-103.611, -265.546, 59.3354, 0.15", "-104.154, -266.199, 59.2057, 0.37", "-104.624, -266.774, 59.1241, 0.52", "-105.511, -267.928, 58.949, 0.15", "-105.835, -268.38, 58.8808, 0.15", "-106.616, -269.531, 58.7136, 0.52", "-107.744, -271.288, 58.4825, 0.15", "-108.407, -272.393, 58.3355, 0.52", "-109.416, -274.219, 58.1, 0.15", "-109.714, -274.829, 58.0035, 0.37", "-109.903, -275.283, 57.9096, 0.81", "-110.116, -275.922, 57.7308, 1.03", "-110.423, -277.086, 57.3347, 0.07", "-110.784, -278.429, 56.8018, 0.15", "-111.169, -279.682, 56.1941, 0.29", "-111.539, -280.824, 55.5167, 0.15", "-111.86, -281.763, 54.853, 0.15", "-112.071, -282.378, 54.3506, 0.29", "-112.355, -283.229, 53.597, 0.37", "-112.784, -284.503, 52.3965, 0.22", "-113.187, -285.66, 51.2992, 0.22", "-113.618, -286.877, 50.1174, 0.22", "-113.854, -287.537, 49.4547, 0.22", "-114.051, -288.132, 48.81, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "39.4654, 29.2699, 2.65068, 0.59", "40.8059, 29.5139, 3.09545, 0.59", "41.5416, 29.664, 3.36809, 0.59", "42.5804, 29.8595, 3.8209, 0.59", "43.3809, 29.9705, 4.13975, 0.59", "44.0004, 30.0267, 4.34394, 0.44", "45.0569, 30.0901, 4.59335, 0.59", "46.1486, 30.1437, 4.74064, 0.59", "47.3825, 30.2063, 4.78784, 0.66", "48.6995, 30.3083, 4.70028, 0.66", "49.8454, 30.4793, 4.50652, 0.66", "51.1117, 30.7979, 4.13612, 0.52", "51.8285, 31.0568, 3.8587, 0.52", "52.452, 31.3547, 3.60279, 0.88", "53.2215, 31.7823, 3.30144, 1.03", "54.1749, 32.3638, 3.00945, 0.74", "55.4348, 33.1111, 2.78613, 0.81", "56.0724, 33.4337, 2.77147, 0.59", "57.2496, 33.9188, 2.91536, 0.52", "58.208, 34.2418, 3.18265, 0.81", "58.7161, 34.3925, 3.41651, 1.03", "59.8749, 34.7338, 4.1078, 0.59", "60.9545, 35.0802, 4.82516, 0.44", "61.8613, 35.4199, 5.43168, 0.52", "62.7592, 35.8228, 5.96717, 0.52", "63.9253, 36.4345, 6.52539, 0.59", "64.9121, 36.9985, 6.84416, 0.66", "65.884, 37.5749, 6.99734, 1.11", "66.5861, 37.99, 7.01806, 1.18", "67.9969, 38.7673, 6.92754, 0.74", "68.9483, 39.2675, 6.81937, 0.37", "69.6023, 39.6094, 6.73432, 0.37", "70.374, 40.0085, 6.63045, 0.44", "70.8722, 40.275, 6.56833, 0.44", "71.4616, 40.6109, 6.47145, 0.44", "72.3244, 41.164, 6.3021, 0.74", "73.2036, 41.7768, 6.05304, 0.96", "74.2743, 42.5493, 5.65118, 0.88", "75.0085, 43.0627, 5.32502, 0.66", "75.7702, 43.5245, 4.95049, 0.66", "76.5711, 43.9151, 4.51223, 0.37", "77.3258, 44.1826, 4.05535, 0.29", "77.9754, 44.3465, 3.6267, 0.52", "78.6033, 44.4847, 3.1951, 1.11", "79.4456, 44.6884, 2.59888, 0.59", "80.2544, 44.9691, 2.03557, 0.37", "80.8053, 45.253, 1.6507, 0.37", "81.6706, 45.8756, 1.09359, 0.88", "82.1579, 46.3098, 0.809973, 0.96", "82.9849, 47.1249, 0.399223, 0.74", "83.7852, 47.9392, 0.104517, 0.59", "84.5393, 48.6539, -0.0574921, 0.44", "85.2072, 49.2375, -0.114253, 1.03", "85.652, 49.5975, -0.132065, 1.03", "86.4766, 50.2176, -0.182112, 0.81", "86.9921, 50.6074, -0.231155, 0.88", "87.8231, 51.3251, -0.364102, 0.59", "88.6977, 52.2602, -0.550264, 0.44", "89.481, 53.3176, -0.715549, 0.44", "89.8855, 53.9743, -0.77475, 0.44", "90.3414, 54.846, -0.774523, 0.59", "90.9833, 56.1587, -0.612549, 0.74", "91.4066, 56.9847, -0.378984, 0.44", "91.9371, 57.8821, 0.0297277, 0.44", "92.4746, 58.6982, 0.511931, 0.66", "93.1501, 59.6522, 1.16108, 0.88", "93.9156, 60.6531, 1.90784, 0.88", "94.7918, 61.7243, 2.75279, 0.37", "95.5381, 62.6108, 3.40311, 0.29", "95.7225, 62.8253, 3.54358, 0.29", "96.1276, 63.2937, 3.80881, 0.29", "96.4492, 63.6421, 3.97061, 0.29", "96.7646, 63.9568, 4.08059, 0.29", "97.6054, 64.7088, 4.28321, 0.37", "98.3562, 65.2802, 4.42095, 0.74", "99.2833, 65.8909, 4.51408, 0.96", "100.147, 66.406, 4.54448, 1.18", "100.913, 66.8342, 4.54316, 1.11", "101.531, 67.1608, 4.52103, 0.88", "102.399, 67.6043, 4.48172, 0.66", "103.791, 68.3089, 4.45285, 0.44", "104.791, 68.8121, 4.49861, 0.66", "105.355, 69.1034, 4.57229, 0.44", "105.916, 69.3952, 4.70631, 0.44", "106.765, 69.8485, 5.00434, 0.74", "107.534, 70.2743, 5.35932, 1.18", "108.569, 70.8872, 5.94279, 1.11", "109.424, 71.4318, 6.43678, 0.81", "110.371, 72.0689, 6.97055, 0.44", "111.113, 72.5807, 7.379, 0.44", "111.579, 72.8992, 7.62201, 0.44", "112.225, 73.3237, 7.93107, 0.66", "113.108, 73.8815, 8.34308, 0.37", "113.563, 74.1618, 8.55425, 0.29", "114.007, 74.454, 8.76904, 0.29", "114.549, 74.8479, 9.06582, 0.29", "115.15, 75.3308, 9.41856, 0.81", "115.695, 75.8453, 9.76854, 1.03", "116.401, 76.6526, 10.2821, 0.59", "117.117, 77.6155, 10.9046, 0.52", "117.674, 78.4308, 11.4269, 0.74", "118.04, 78.9937, 11.806, 0.37", "118.723, 80.0215, 12.5283, 0.29", "119.335, 80.8909, 13.1555, 0.29", "120.174, 82.0204, 14.0313, 0.29", "120.497, 82.4253, 14.3543, 0.88", "121.05, 83.0811, 14.8647, 0.88", "121.727, 83.816, 15.4319, 0.29", "122.276, 84.3533, 15.8266, 0.22", "122.882, 84.9097, 16.1759, 0.29", "123.551, 85.4882, 16.4735, 0.74", "124.045, 85.9017, 16.6704, 0.29", "125.093, 86.7303, 17.0152, 0.22", "125.838, 87.3097, 17.243, 0.22", "126.49, 87.7865, 17.413, 0.37", "127.347, 88.367, 17.6059, 0.74", "127.958, 88.7627, 17.7568, 0.74", "128.621, 89.1899, 17.9208, 0.29", "129.435, 89.7167, 18.1317, 0.22", "130.026, 90.0874, 18.3157, 0.37", "130.775, 90.5384, 18.6071, 0.22", "131.538, 90.9721, 18.9455, 0.22", "131.926, 91.1786, 19.1399, 0.37", "132.756, 91.5901, 19.5861, 0.37", "133.625, 92.0048, 20.0883, 0.37", "134.312, 92.3564, 20.5005, 0.44", "134.787, 92.6184, 20.7923, 0.81", "135.499, 93.0487, 21.2371, 1.47", "135.937, 93.343, 21.5262, 1.62", "136.893, 94.0555, 22.1912, 0.59", "138.034, 94.975, 23.0345, 0.29", "138.758, 95.584, 23.5867, 0.22", "139.204, 95.974, 23.9412, 0.22", "139.592, 96.3232, 24.2489, 0.22", "139.976, 96.6693, 24.5493, 0.22", "140.356, 97.0043, 24.8339, 0.22", "140.889, 97.4462, 25.2385, 0.37", "141.358, 97.8078, 25.5805, 0.88", "141.756, 98.0964, 25.855, 1.25", "142.378, 98.5479, 26.2822, 1.25", "142.972, 99.002, 26.7125, 0.29", "143.562, 99.4879, 27.1717, 0.15", "144.019, 99.8762, 27.528, 0.29", "144.627, 100.387, 27.9704, 0.15", "145.006, 100.711, 28.2432, 0.15", "145.314, 100.976, 28.4509, 0.44", "146.121, 101.618, 28.8948, 0.74", "146.793, 102.126, 29.221, 0.22", "147.56, 102.674, 29.5554, 0.15", "148.106, 103.052, 29.7673, 0.66", "148.61, 103.41, 29.9237, 0.66", "149.865, 104.347, 30.2786, 0.22", "150.456, 104.825, 30.4302, 0.66", "150.935, 105.258, 30.5454, 1.18", "151.397, 105.728, 30.661, 0.96", "152.434, 106.88, 30.9336, 0.15", "152.796, 107.324, 31.0377, 0.15", "153.209, 107.88, 31.1562, 0.22", "153.682, 108.491, 31.3048, 0.07", "154.332, 109.29, 31.5782, 0.07", "154.587, 109.591, 31.7191, 0.74", "155.084, 110.139, 32.041, 1.03", "155.633, 110.714, 32.4085, 0.44", "156.469, 111.608, 33.0895, 0.15", "157.02, 112.22, 33.6321, 0.15", "157.361, 112.627, 34.043, 0.15", "157.619, 112.969, 34.4314, 0.37", "157.95, 113.444, 35.0524, 0.59", "158.518, 114.378, 36.457, 0.22", "158.78, 114.898, 37.3184, 0.44", "158.963, 115.344, 38.1311, 0.44", "159.051, 115.612, 38.665, 0.44", "159.109, 115.839, 39.1939, 0.44", "159.194, 116.165, 40.1515, 0.44", "159.22, 116.238, 40.4202, 0.44", "159.268, 116.341, 40.8247, 0.44", "159.381, 116.501, 41.5328, 0.44", "159.517, 116.639, 42.2396, 0.44", "159.907, 116.946, 44.0502, 0.22", "160.197, 117.116, 45.2527, 0.22", "160.427, 117.232, 46.205, 0.22", "160.631, 117.323, 47.0931, 0.74", "161.038, 117.467, 49.0572, 0.22", "161.336, 117.566, 50.7329, 0.52", "161.543, 117.623, 52.0469, 0.22", "161.714, 117.685, 53.2845, 0.52", "161.853, 117.766, 54.4806, 0.52", "161.939, 117.911, 55.8441, 0.29", "161.93, 118.14, 57.2443, 0.29", "161.878, 118.293, 57.875, 0.29", "161.756, 118.595, 58.7238, 0.29", "161.694, 118.8, 59.1249, 0.29", "161.603, 119.306, 59.8698, 0.29", "161.575, 119.98, 60.6977, 0.29", "161.619, 120.329, 61.1068, 0.29", "161.739, 120.783, 61.6793, 0.52", "161.977, 121.477, 62.6533, 0.22", "162.358, 122.294, 63.8074, 0.22", "162.681, 122.87, 64.6118, 0.22", "162.976, 123.373, 65.2472, 0.52", "163.508, 124.331, 66.3186, 0.52", "163.984, 125.227, 67.2953, 0.52", "164.651, 126.555, 68.6185, 0.22", "165.11, 127.504, 69.4413, 0.22", "165.587, 128.563, 70.2559, 0.22", "165.953, 129.398, 70.7996, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "39.4654, 29.2699, 2.65068, 0.81", "39.6205, 30.2217, 2.4272, 0.81", "39.8015, 31.0434, 2.11385, 0.52", "39.9685, 31.6538, 1.79262, 0.66", "40.2056, 32.4588, 1.21274, 0.44", "40.3708, 33.0902, 0.649383, 0.44", "40.51, 33.7002, 0.0274182, 0.44", "40.6119, 34.1111, -0.552295, 0.44", "40.7007, 34.4044, -1.11549, 0.44", "40.8104, 34.7453, -1.93351, 0.44", "40.8833, 34.9791, -2.55926, 0.44", "40.941, 35.1337, -2.94556, 0.44", "41.0551, 35.4235, -3.5352, 0.59", "41.2209, 35.8481, -4.15145, 0.59", "41.3081, 36.059, -4.36373, 0.59", "41.4974, 36.4952, -4.68884, 0.66", "41.656, 36.8785, -4.91454, 0.96", "41.7911, 37.2792, -5.09971, 0.96", "41.9486, 37.8681, -5.30151, 0.96", "42.1574, 38.7248, -5.51967, 0.88", "42.2896, 39.2707, -5.63004, 0.52", "42.4529, 39.8459, -5.71933, 0.29", "42.6149, 40.3349, -5.77404, 0.29", "42.7911, 40.7745, -5.80501, 0.44", "43.0052, 41.2268, -5.8127, 0.88", "43.2703, 41.7493, -5.81821, 0.66", "43.6588, 42.5365, -5.86431, 0.52", "43.8595, 42.9915, -5.92536, 0.59", "44.1584, 43.7894, -6.09791, 0.74", "44.418, 44.6691, -6.37308, 0.88", "44.5486, 45.272, -6.62278, 0.52", "44.6434, 45.914, -6.94512, 0.52", "44.7135, 46.5851, -7.34266, 0.59", "44.7691, 46.943, -7.58876, 0.59", "44.8688, 47.3674, -7.91756, 0.81", "45.0488, 47.8903, -8.33657, 0.81", "45.2893, 48.3905, -8.68123, 0.81", "45.608, 48.9144, -8.96819, 0.52", "46.1264, 49.6698, -9.2711, 0.29", "46.3861, 50.0198, -9.36807, 0.29", "46.747, 50.4544, -9.44292, 0.59", "47.3014, 51.055, -9.4864, 0.81", "47.6512, 51.4156, -9.49455, 1.03", "48.07, 51.8635, -9.47747, 0.29", "48.4381, 52.2973, -9.45324, 0.22", "48.7957, 52.7854, -9.43874, 0.22", "49.0178, 53.187, -9.45204, 0.29", "49.2712, 53.7965, -9.49913, 0.74", "49.4431, 54.319, -9.52989, 0.88", "49.5799, 54.8322, -9.55828, 0.88", "49.7056, 55.4382, -9.5807, 0.52", "49.8649, 56.411, -9.59443, 0.52", "49.9435, 57.0157, -9.59526, 0.44", "50.0289, 57.9009, -9.59898, 0.44", "50.0589, 58.5157, -9.61049, 0.44", "50.0532, 59.1087, -9.62277, 0.74", "50.0233, 59.5178, -9.62094, 0.88", "49.8961, 60.3743, -9.5882, 0.96", "49.7566, 61.1668, -9.51777, 0.29", "49.6806, 61.7184, -9.41801, 0.22", "49.6754, 62.1487, -9.2756, 0.22", "49.7828, 62.7829, -8.96898, 0.74", "49.8498, 62.9951, -8.85026, 0.74", "50.1641, 63.729, -8.42066, 0.52", "50.506, 64.4663, -8.03868, 0.44", "50.8046, 65.1344, -7.78036, 0.44", "51.06, 65.8263, -7.61037, 0.66", "51.2446, 66.5463, -7.53739, 0.66", "51.3288, 67.0675, -7.50912, 0.66", "51.3913, 67.9, -7.52296, 0.29", "51.4076, 68.4818, -7.53401, 0.29", "51.4215, 69.1279, -7.48725, 0.44", "51.4323, 69.526, -7.39922, 0.44", "51.465, 70.2165, -7.11194, 0.74", "51.4811, 70.5261, -6.94304, 1.11", "51.5133, 71.2543, -6.50233, 0.44", "51.5295, 72.0183, -6.04754, 0.74", "51.5178, 72.3852, -5.8628, 0.52", "51.4717, 72.8278, -5.70302, 0.29", "51.3865, 73.2815, -5.62231, 0.22", "51.2027, 73.9259, -5.61441, 0.59", "51.0153, 74.4402, -5.68967, 0.96", "50.7835, 74.9979, -5.80511, 0.66", "50.5008, 75.6616, -5.92007, 0.44", "50.2231, 76.3563, -5.98977, 0.44", "49.9525, 77.155, -5.94715, 0.22", "49.8493, 77.5789, -5.84783, 0.37", "49.7663, 78.2238, -5.58575, 0.59", "49.7535, 78.9277, -5.19616, 0.29", "49.7984, 79.6253, -4.74626, 0.29", "49.852, 80.3497, -4.25277, 0.37", "49.8511, 80.7019, -4.01213, 0.29", "49.7769, 81.254, -3.67305, 0.66", "49.6313, 81.7415, -3.42981, 1.11", "49.4436, 82.152, -3.27113, 1.11", "49.0237, 82.9035, -3.06369, 0.37", "48.5083, 83.7965, -2.88565, 0.22", "48.3017, 84.1608, -2.82334, 0.59", "48.0982, 84.5178, -2.77, 1.11", "47.6625, 85.3182, -2.66877, 0.29", "47.2271, 86.2191, -2.58247, 0.96", "46.9874, 86.8471, -2.56292, 0.15", "46.8867, 87.1977, -2.57305, 0.22", "46.6692, 88.0309, -2.64435, 0.07", "46.5803, 88.3791, -2.70971, 0.22", "46.5312, 88.5763, -2.7706, 0.22", "46.3993, 89.1663, -3.03753, 0.07", "46.3545, 89.4227, -3.18614, 0.22", "46.3253, 89.6908, -3.367, 0.22", "46.3209, 90.1809, -3.74822, 0.15", "46.3176, 90.4247, -3.94862, 0.29", "46.2915, 90.8901, -4.32628, 0.07", "46.2603, 91.1622, -4.5347, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.14869, -22.9682, -1.01215, 0.81", "-0.764568, -23.5853, -1.96344, 0.81", "-0.251782, -24.305, -3.13977, 0.81", "0.0769121, -24.6976, -3.82369, 0.81", "0.507459, -25.1182, -4.59685, 0.88", "0.969338, -25.4711, -5.31213, 1.18", "1.32023, -25.6773, -5.79058, 1.18", "1.62189, -25.7897, -6.14386, 1.18", "2.20207, -25.9487, -6.69237, 0.96", "2.93775, -26.1334, -7.29787, 0.96", "3.79075, -26.3412, -7.94013, 0.81", "4.88805, -26.6269, -8.68047, 0.81", "5.55533, -26.8168, -9.06672, 0.81", "6.612, -27.1359, -9.54876, 0.81", "7.58287, -27.4469, -9.84996, 0.88", "8.42693, -27.7411, -9.96501, 0.88", "9.22073, -28.05, -9.89126, 0.59", "10.0509, -28.3843, -9.61214, 0.59", "11.0359, -28.756, -9.08335, 0.59", "11.7076, -28.9823, -8.60111, 0.74", "12.3731, -29.1829, -8.04266, 0.59", "13.1891, -29.4198, -7.31865, 0.59", "13.9424, -29.6439, -6.66827, 0.88", "14.8537, -29.9262, -5.96788, 0.88", "15.7141, -30.2211, -5.41322, 1.03", "16.7021, -30.6069, -4.91499, 0.81", "17.4038, -30.9179, -4.65649, 0.66", "18.1721, -31.3178, -4.46519, 0.66", "19.0611, -31.8702, -4.26806, 0.44", "20.0832, -32.5871, -4.00214, 0.44", "20.8592, -33.1608, -3.70419, 0.66", "21.2993, -33.4956, -3.45833, 1.11", "22.1126, -34.092, -2.8064, 1.25", "23.087, -34.7709, -1.83053, 0.44", "23.8676, -35.2834, -0.964723, 0.52", "24.7319, -35.8104, 0.0404004, 0.52", "25.3729, -36.1837, 0.790769, 0.52", "26.2528, -36.7161, 1.83512, 0.59", "26.7615, -37.0443, 2.44819, 0.96", "27.2996, -37.4253, 3.10205, 1.11", "27.9219, -37.9065, 3.86957, 0.81", "28.5715, -38.4279, 4.69219, 0.52", "29.0834, -38.7983, 5.35083, 0.52", "29.2766, -38.9269, 5.59607, 0.52", "29.5712, -39.106, 5.96843, 0.52", "29.8613, -39.2681, 6.28402, 0.52", "30.4559, -39.5714, 6.7831, 0.96", "31.4379, -40.0513, 7.39622, 0.44", "32.0172, -40.3448, 7.68107, 0.81", "32.5848, -40.6547, 7.93389, 1.03", "33.683, -41.3238, 8.35671, 0.44", "34.359, -41.7708, 8.60754, 0.44", "34.8384, -42.1065, 8.79397, 0.88", "35.3131, -42.4505, 9.01237, 1.55", "35.9796, -42.9239, 9.38098, 1.55", "36.7558, -43.4789, 9.90636, 0.52", "37.656, -44.1519, 10.6307, 0.22", "38.0829, -44.4813, 11.0067, 0.22", "38.5462, -44.8459, 11.4588, 0.22", "38.906, -45.1327, 11.8348, 0.74", "39.3194, -45.4628, 12.2635, 1.18", "39.6363, -45.7168, 12.5905, 1.18", "40.4951, -46.4238, 13.3881, 0.22", "40.8776, -46.7307, 13.6977, 0.22", "41.4987, -47.216, 14.1129, 0.88", "42.3297, -47.8586, 14.591, 0.15", "42.7136, -48.1489, 14.7802, 0.96", "43.16, -48.4852, 14.9682, 1.25", "44.0882, -49.1851, 15.2504, 0.15", "45.141, -49.9783, 15.4821, 0.15", "45.5999, -50.3293, 15.5559, 0.15", "46.3805, -50.9464, 15.65, 0.15", "46.7704, -51.2632, 15.7018, 0.96", "47.47, -51.8541, 15.8146, 1.4", "47.7488, -52.0995, 15.8628, 1.33", "48.4711, -52.7527, 16.0465, 0.22", "48.8767, -53.1129, 16.1646, 0.29", "49.5112, -53.6692, 16.3713, 0.59", "50.0804, -54.1483, 16.5674, 0.59", "50.6384, -54.5828, 16.7778, 1.7", "51.1737, -54.9633, 16.9821, 0.81", "52.1501, -55.5892, 17.3595, 0.15", "52.5646, -55.8331, 17.5279, 0.44", "53.0882, -56.1174, 17.7294, 0.74", "54.1001, -56.6358, 18.1417, 0.22", "54.6846, -56.9212, 18.3872, 0.96", "55.2778, -57.1965, 18.6376, 1.25", "56.0317, -57.5428, 18.9905, 0.29", "57.0093, -57.9877, 19.4533, 0.07", "57.4894, -58.2039, 19.6785, 0.29", "58.1697, -58.5135, 19.9792, 0.74", "59.2611, -59.0223, 20.472, 0.15", "60.0155, -59.3865, 20.8546, 0.15", "60.3687, -59.5684, 21.0673, 0.15", "60.6632, -59.7349, 21.2919, 0.74", "60.8461, -59.8437, 21.4475, 0.96", "61.6413, -60.338, 22.189, 0.15", "62.1151, -60.643, 22.6445, 0.15", "62.7017, -61.0408, 23.2082, 0.88", "63.4778, -61.6046, 24.0239, 0.15", "63.6699, -61.7535, 24.2485, 0.15", "63.9768, -62.0034, 24.6005, 0.29", "64.1987, -62.1954, 24.8576, 0.29", "64.6821, -62.6182, 25.4569, 0.15", "65.1687, -63.0494, 26.1476, 0.15", "65.5776, -63.3964, 26.7931, 0.15", "65.9705, -63.7145, 27.4873, 1.03", "66.5761, -64.1681, 28.7037, 0.15", "67.0268, -64.47, 29.6761, 0.15", "67.3516, -64.6529, 30.372, 0.15", "67.7878, -64.8706, 31.3191, 0.15", "68.2214, -65.0704, 32.3175, 0.15", "68.6773, -65.2593, 33.4525, 0.15", "69.0519, -65.398, 34.4287, 0.15", "69.4087, -65.5272, 35.359, 0.15", "69.8464, -65.6829, 36.5085, 0.15", "70.3239, -65.8574, 37.807, 0.15", "70.5929, -65.9533, 38.5329, 0.15", "71.2456, -66.1882, 40.3192, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.14869, -22.9682, -1.01215, 0.96", "-1.91254, -23.8515, -1.16579, 0.96", "-2.57343, -24.8059, -1.37332, 0.74", "-3.12927, -25.8365, -1.64281, 0.74", "-3.6072, -26.9212, -1.9554, 1.03", "-3.89189, -27.6843, -2.19451, 1.18", "-4.29658, -28.8618, -2.58457, 0.81", "-4.53513, -29.7986, -2.91293, 0.81", "-4.76204, -30.7922, -3.26614, 0.88", "-4.88636, -31.3127, -3.44737, 1.25", "-5.13814, -32.2579, -3.74945, 1.25", "-5.59435, -33.8021, -4.20818, 0.96", "-5.98279, -35.0521, -4.50586, 0.74", "-6.30229, -36.1423, -4.68679, 0.74", "-6.55889, -37.1701, -4.8149, 0.96", "-6.73028, -38.1227, -4.90075, 0.74", "-6.82663, -39.2259, -4.95968, 0.74", "-6.8129, -40.8307, -4.96898, 0.96", "-6.71308, -41.9646, -4.92173, 0.74", "-6.53664, -43.0408, -4.84066, 0.81", "-6.25553, -44.295, -4.69309, 1.18", "-5.90188, -45.5832, -4.49298, 1.18", "-5.33058, -47.4172, -4.15782, 0.96", "-4.84123, -48.939, -3.8474, 0.96", "-4.48549, -50.1061, -3.57235, 1.03", "-4.12901, -51.3728, -3.22288, 0.74", "-3.85308, -52.5008, -2.88926, 0.74", "-3.67151, -53.6265, -2.52974, 1.03", "-3.63609, -54.8064, -2.14532, 0.88", "-3.80554, -56.0648, -1.74444, 0.66", "-4.00098, -56.8041, -1.51821, 0.59", "-4.25127, -57.5265, -1.3138, 0.81", "-4.76018, -58.8285, -0.977193, 0.59", "-5.17169, -59.8682, -0.754614, 0.81", "-5.46659, -60.6917, -0.645521, 0.81", "-5.76571, -61.6895, -0.613085, 0.81", "-5.99251, -62.5966, -0.652137, 1.25", "-6.21254, -63.6184, -0.766422, 1.25", "-6.51409, -65.013, -1.05678, 0.66", "-6.75658, -66.0404, -1.36303, 0.66", "-6.99298, -66.9193, -1.71209, 1.03", "-7.24692, -67.827, -2.17806, 1.33", "-7.3998, -68.5449, -2.62256, 0.88", "-7.46385, -69.4, -3.23141, 0.59", "-7.37756, -69.9578, -3.65744, 0.59", "-7.11143, -70.5416, -4.05319, 0.59", "-6.59052, -71.271, -4.48779, 0.59", "-5.76184, -72.2799, -5.01023, 0.22", "-5.32619, -72.8236, -5.26208, 0.74", "-4.91541, -73.3913, -5.51314, 1.11", "-4.32821, -74.4114, -5.97781, 0.52", "-4.03567, -75.1601, -6.339, 0.66", "-3.83296, -76.0181, -6.76256, 0.96", "-3.69095, -77.0817, -7.25715, 0.81", "-3.6064, -77.932, -7.60799, 0.59", "-3.53413, -78.8083, -7.9246, 0.59", "-3.4635, -79.8248, -8.2231, 0.44", "-3.41469, -80.9091, -8.39973, 0.74", "-3.41847, -82.1602, -8.47913, 0.74", "-3.48962, -83.1374, -8.48273, 0.81", "-3.62319, -83.9684, -8.46975, 1.03", "-3.89539, -84.9845, -8.47423, 1.03", "-4.4269, -86.4238, -8.56824, 0.59", "-4.90196, -87.5124, -8.70772, 0.44", "-5.36682, -88.492, -8.86029, 0.52", "-5.8193, -89.4114, -8.99672, 1.03", "-6.33022, -90.467, -9.10431, 0.81", "-6.78224, -91.4882, -9.12036, 0.29", "-7.17359, -92.5828, -9.01176, 0.29", "-7.37747, -93.3743, -8.81624, 0.44", "-7.52133, -94.1458, -8.5246, 0.96", "-7.67104, -95.1826, -8.05328, 1.11", "-7.81326, -96.3962, -7.49852, 0.59", "-7.9273, -97.4261, -7.05726, 0.59", "-8.08415, -98.8183, -6.55862, 0.52", "-8.15699, -99.5744, -6.37487, 0.52", "-8.24931, -100.822, -6.19924, 0.81", "-8.33096, -102.098, -6.17869, 0.88", "-8.38042, -102.835, -6.24641, 0.66", "-8.44735, -103.752, -6.44274, 0.52", "-8.50694, -104.704, -6.75888, 0.81", "-8.51969, -105.318, -7.01004, 0.52", "-8.47668, -106.203, -7.41822, 0.37", "-8.39579, -106.899, -7.75177, 0.96", "-8.19445, -108.025, -8.26793, 0.74", "-8.00882, -108.816, -8.60022, 0.96", "-7.83753, -109.457, -8.79653, 0.96", "-7.58002, -110.431, -8.93329, 0.37", "-7.42013, -111.165, -8.83408, 0.29", "-7.25984, -112.262, -8.37867, 0.59", "-7.2228, -112.707, -8.078, 0.59", "-7.1814, -113.562, -7.39129, 0.59", "-7.15336, -114.419, -6.65597, 0.96", "-7.12699, -115.421, -5.77926, 0.52", "-7.11569, -116.085, -5.21624, 0.44", "-7.11738, -116.777, -4.66163, 0.44", "-7.13639, -117.472, -4.10071, 0.88", "-7.17564, -118.194, -3.54356, 0.44", "-7.24507, -118.933, -3.01019, 0.37", "-7.37718, -119.74, -2.47968, 0.74", "-7.59914, -120.626, -1.95885, 0.22", "-7.88328, -121.484, -1.48539, 0.29", "-8.22999, -122.343, -0.99835, 0.59", "-8.69293, -123.373, -0.411164, 1.18", "-9.10968, -124.293, 0.0964575, 0.66", "-9.4305, -125.155, 0.56012, 0.37", "-9.61713, -125.899, 0.975349, 0.29", "-9.67176, -126.454, 1.31607, 0.29", "-9.64922, -126.851, 1.58796, 0.74", "-9.5718, -127.258, 1.90205, 1.11", "-9.26214, -128.41, 2.76508, 0.44", "-9.07227, -129.133, 3.2314, 0.44", "-8.97746, -129.703, 3.49514, 0.44", "-8.91598, -130.521, 3.79162, 0.29", "-8.92996, -131.35, 4.02757, 0.29", "-9.02897, -132.425, 4.27157, 0.59", "-9.18635, -133.524, 4.46523, 1.18", "-9.3997, -135.086, 4.71698, 1.4", "-9.49342, -135.9, 4.85195, 1.18", "-9.56252, -137.012, 5.00639, 0.52", "-9.57598, -137.814, 5.06423, 0.52", "-9.56211, -138.791, 5.06645, 0.96", "-9.48911, -139.922, 4.94905, 0.74", "-9.40843, -140.554, 4.80706, 0.74", "-9.23501, -141.583, 4.42627, 0.37", "-9.03756, -142.495, 3.9606, 0.44", "-8.90699, -143.038, 3.6233, 0.44", "-8.75032, -143.655, 3.20186, 0.44", "-8.58426, -144.329, 2.75221, 0.29", "-8.45874, -144.9, 2.46949, 0.29", "-8.37092, -145.443, 2.35329, 0.29", "-8.29413, -146.241, 2.43401, 0.88", "-8.25512, -147.077, 2.71616, 0.81", "-8.2336, -147.711, 3.02088, 0.22", "-8.156, -148.822, 3.60212, 0.22", "-8.03079, -149.658, 4.01943, 0.44", "-7.76661, -150.722, 4.47777, 1.11", "-7.45795, -151.561, 4.76148, 0.52", "-6.92527, -152.59, 4.95262, 0.22", "-6.25621, -153.598, 4.93551, 0.22", "-5.38627, -154.731, 4.72132, 0.22", "-4.76855, -155.503, 4.50229, 0.37", "-4.44293, -155.931, 4.36732, 0.52", "-4.04746, -156.547, 4.20412, 0.52", "-3.62168, -157.5, 4.05814, 1.11", "-3.42388, -158.321, 4.0404, 1.11", "-3.29317, -159.585, 4.13133, 0.52", "-3.25522, -160.735, 4.28368, 0.29", "-3.2587, -161.865, 4.47615, 0.52", "-3.28184, -162.914, 4.6581, 0.52", "-3.2915, -163.697, 4.75537, 0.22", "-3.29023, -164.189, 4.77088, 0.22", "-3.28616, -164.705, 4.74308, 0.59", "-3.29254, -165.399, 4.66859, 1.11", "-3.33896, -166.553, 4.50483, 1.11", "-3.44908, -167.893, 4.32387, 0.44", "-3.56016, -168.772, 4.22603, 0.44", "-3.69664, -169.689, 4.1676, 0.44", "-3.91375, -170.865, 4.15142, 0.29", "-4.06972, -171.476, 4.19057, 0.29", "-4.27733, -172.16, 4.29203, 0.88", "-4.47711, -172.798, 4.40523, 0.96", "-4.76938, -173.845, 4.57466, 0.37", "-4.96785, -174.679, 4.6952, 0.37", "-5.28042, -175.947, 4.9068, 0.37", "-5.38943, -176.317, 4.98108, 0.37", "-5.59535, -176.952, 5.12239, 1.03", "-5.74242, -177.38, 5.22049, 1.03", "-6.01063, -178.177, 5.40026, 0.52", "-6.35238, -179.515, 5.70854, 0.22", "-6.45802, -180.155, 5.87157, 0.22", "-6.5698, -180.875, 6.10619, 0.29", "-6.66516, -181.437, 6.33157, 0.59", "-6.75303, -181.906, 6.53706, 0.88", "-6.87154, -182.459, 6.7756, 0.96", "-7.05592, -183.296, 7.14017, 0.37", "-7.28174, -184.296, 7.58919, 0.22", "-7.37613, -184.789, 7.80802, 0.22", "-7.44852, -185.342, 8.04294, 0.96", "-7.51995, -186.309, 8.42383, 0.44", "-7.51635, -187.282, 8.75157, 0.22", "-7.45377, -187.906, 8.90546, 0.22", "-7.32022, -188.724, 9.05773, 0.22", "-7.26756, -189.034, 9.11038, 0.22", "-7.18338, -189.615, 9.20195, 0.74", "-7.13428, -190.31, 9.29637, 0.88", "-7.19742, -191.219, 9.377, 0.22", "-7.33544, -191.847, 9.41206, 0.22", "-7.50556, -192.34, 9.44446, 0.22", "-7.74355, -192.891, 9.49961, 0.22", "-8.01136, -193.423, 9.56797, 0.66", "-8.35257, -194.046, 9.67943, 0.74", "-8.82522, -194.871, 9.85108, 0.44", "-9.29249, -195.689, 10.0078, 0.44", "-9.88876, -196.709, 10.1601, 0.74", "-10.4796, -197.679, 10.2676, 0.96", "-11.0217, -198.542, 10.3221, 0.59", "-11.6506, -199.518, 10.3282, 0.22", "-12.1301, -200.254, 10.3514, 0.22", "-12.6321, -201.023, 10.4068, 0.22", "-12.982, -201.555, 10.4799, 0.22", "-13.1362, -201.78, 10.5334, 0.22", "-13.5499, -202.368, 10.7512, 0.88", "-14.6298, -203.925, 11.5512, 0.22", "-15.0176, -204.494, 11.8891, 0.22", "-15.2749, -204.882, 12.1294, 0.74", "-15.5819, -205.379, 12.4276, 0.96", "-16.2323, -206.539, 13.0915, 0.37", "-16.6632, -207.419, 13.5538, 0.22", "-16.9257, -208.059, 13.8174, 0.88", "-17.0441, -208.42, 13.965, 0.88", "-17.2447, -209.274, 14.3198, 0.22", "-17.301, -209.661, 14.4716, 0.22", "-17.3327, -210.045, 14.6043, 0.22", "-17.3785, -210.832, 14.836, 0.81", "-17.4053, -212.038, 15.1471, 0.29", "-17.3968, -213.039, 15.405, 0.44", "-17.3638, -213.859, 15.6027, 0.88", "-17.3125, -214.512, 15.7692, 0.88", "-17.2049, -215.311, 15.9855, 0.29", "-17.0523, -215.999, 16.1911, 0.22", "-16.8332, -216.69, 16.4182, 0.22", "-16.6137, -217.189, 16.6407, 0.22", "-16.3361, -217.734, 16.9463, 0.22", "-16.141, -218.102, 17.1895, 0.22", "-15.8965, -218.641, 17.5655, 0.74", "-15.834, -218.862, 17.7193, 0.74", "-15.6535, -220.064, 18.4724, 0.22", "-15.6441, -220.602, 18.7807, 0.22", "-15.6974, -221.045, 19.0, 0.22", "-15.868, -221.72, 19.2901, 1.11", "-16.2253, -222.6, 19.5846, 0.29", "-16.5775, -223.279, 19.7393, 0.22", "-16.9938, -223.977, 19.8022, 0.22", "-17.3602, -224.617, 19.8325, 0.44", "-17.688, -225.234, 19.8867, 0.88", "-18.1603, -226.224, 20.0565, 0.96", "-18.5361, -227.163, 20.3285, 0.29", "-18.7582, -227.816, 20.6051, 0.66", "-18.9897, -228.749, 21.0905, 0.74", "-19.1669, -229.893, 21.7622, 0.29", "-19.2168, -230.825, 22.3294, 0.66", "-19.1576, -231.953, 23.0541, 0.22", "-19.1125, -232.397, 23.3585, 0.22", "-19.0531, -232.941, 23.7426, 0.81", "-19.009, -233.355, 24.0063, 0.96", "-18.9179, -234.187, 24.4697, 0.37", "-18.8428, -235.045, 24.9031, 0.22", "-18.8335, -235.676, 25.214, 0.22", "-18.8509, -236.11, 25.446, 0.22", "-18.8689, -236.387, 25.6207, 0.66", "-18.9012, -236.788, 25.9112, 1.11", "-18.9608, -237.445, 26.409, 0.88", "-19.0567, -238.395, 27.0159, 0.22", "-19.1473, -239.284, 27.4795, 0.88", "-19.2778, -240.338, 27.9452, 0.22", "-19.3711, -240.972, 28.1775, 0.22", "-19.485, -241.586, 28.3719, 0.74", "-19.7567, -242.741, 28.7582, 0.15", "-19.9885, -243.503, 29.0001, 0.15", "-20.1504, -243.92, 29.1262, 0.66", "-20.4058, -244.503, 29.2824, 0.81", "-20.8456, -245.465, 29.5668, 0.22", "-21.2925, -246.404, 29.989, 0.22", "-21.4811, -246.804, 30.2694, 0.59", "-21.7797, -247.406, 30.8022, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.75403, 1.32478, -10.46, 1.99", "-1.68625, 2.86272, -11.8483, 1.99", "-1.69361, 4.37134, -13.1289, 1.77", "-1.79866, 5.48831, -14.0299, 1.84", "-1.96196, 6.54108, -14.8377, 1.4", "-2.20466, 7.64207, -15.6452, 1.25", "-2.50834, 8.67434, -16.3693, 1.4", "-2.85155, 9.54087, -16.9181, 1.4", "-3.4918, 10.9031, -17.6372, 1.03", "-4.11644, 12.1491, -18.1783, 1.03", "-4.86328, 13.5321, -18.7248, 1.11", "-5.68797, 14.9952, -19.2605, 0.96", "-6.57373, 16.5909, -19.8062, 0.96", "-7.3981, 18.14, -20.3188, 0.88", "-7.8942, 19.1423, -20.5971, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.75403, 1.32478, -10.46, 3.32", "-2.67928, 0.487563, -10.549, 3.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.44158, 39.2021, 0.0, 0.28953", "3.27908, 54.1787, 0.0, 0.28953", "4.11658, 69.1553, 0.0, 0.28953" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.98851, 34.7797, 13.7008, 1.7", "-4.27176, 35.7683, 14.1874, 1.7", "-4.63816, 37.0656, 14.8231, 1.03", "-5.08769, 38.6573, 15.6031, 0.74", "-5.41083, 39.8014, 16.1637, 0.74", "-5.72414, 40.9108, 16.7073, 0.74", "-5.97757, 41.8081, 17.147, 1.03", "-6.2873, 43.0095, 17.831, 1.84" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-3.98851, 34.7797, 13.7008, 0.29", "-3.84117, 35.1993, 14.3989, 0.29", "-3.52082, 35.9593, 15.5598, 0.22", "-3.24501, 36.5478, 16.3044, 0.22", "-3.04489, 36.9803, 16.818, 0.37", "-2.79558, 37.5498, 17.4636, 0.37", "-2.53706, 38.1667, 18.1565, 0.37", "-2.32153, 38.7027, 18.7237, 0.37", "-1.98787, 39.5193, 19.4986, 0.22", "-1.66959, 40.2291, 20.1502, 0.22", "-1.33724, 40.9709, 20.8265, 0.22", "-1.14524, 41.3861, 21.2129, 0.22", "-0.919648, 41.8776, 21.7123, 0.22", "-0.780244, 42.1705, 22.0599, 0.37", "-0.39643, 42.9047, 23.0309, 0.37", "-0.0877229, 43.4227, 23.7059, 0.22", "0.357742, 44.118, 24.6403, 0.44", "0.684654, 44.6324, 25.3561, 0.81", "1.0044, 45.1508, 26.0993, 0.81", "1.39557, 45.7957, 27.0477, 0.29", "1.76564, 46.4228, 27.9656, 0.22", "2.13106, 47.0405, 28.856, 0.22", "2.47792, 47.6421, 29.6512, 0.22", "2.77744, 48.1747, 30.3113, 0.22", "3.08262, 48.7078, 30.9579, 0.22", "3.43381, 49.2875, 31.7094, 0.22", "3.60388, 49.5661, 32.0999, 0.66", "3.8092, 49.882, 32.5379, 1.55", "4.35016, 50.6552, 33.628, 2.06", "5.15226, 51.7364, 35.1302, 0.22", "5.61438, 52.3536, 35.9843, 0.22", "6.03898, 52.9135, 36.7798, 0.22", "6.3759, 53.3755, 37.4316, 0.44", "6.69704, 53.8556, 38.116, 0.44", "7.04775, 54.4555, 38.9223, 0.22", "7.41663, 55.283, 39.8769, 0.22", "7.74265, 56.2056, 40.7735, 0.44", "8.00259, 57.1153, 41.5904, 0.15", "8.18878, 58.0707, 42.4363, 0.15", "8.25022, 58.5602, 42.8518, 0.15", "8.33387, 59.5472, 43.653, 0.15", "8.41542, 60.3457, 44.2398, 0.37", "8.51342, 61.0721, 44.7599, 0.59", "8.69978, 61.9576, 45.4101, 1.25", "8.94245, 62.7578, 46.039, 2.21", "9.1553, 63.2819, 46.5078, 2.21", "9.6912, 64.2958, 47.4941, 0.52", "10.2292, 65.133, 48.3556, 0.15", "10.7127, 65.7757, 48.9961, 0.15", "11.1668, 66.2963, 49.5011, 0.29", "11.565, 66.7056, 49.8877, 0.29", "12.0813, 67.2292, 50.3392, 0.07", "12.6454, 67.7999, 50.782, 0.07", "13.0801, 68.2486, 51.1034, 0.07", "13.4463, 68.6436, 51.3661, 0.88", "13.9001, 69.1569, 51.6868, 1.62", "15.1191, 70.5953, 52.5183, 0.15", "15.7226, 71.3108, 52.9387, 0.15", "16.3215, 72.024, 53.3612, 0.15", "16.7644, 72.5404, 53.6762, 0.29", "17.2561, 73.1, 54.0863, 0.29", "18.1783, 74.118, 54.9811, 0.07", "18.8816, 74.8719, 55.7468, 0.07", "19.2526, 75.2725, 56.187, 0.07", "19.7797, 75.8341, 56.8553, 0.96", "20.9335, 77.0347, 58.4085, 0.15", "21.4692, 77.5938, 59.1685, 0.15", "21.8388, 77.9796, 59.743, 0.15", "22.1137, 78.2782, 60.1509, 0.15", "22.4265, 78.6232, 60.5937, 0.37", "22.7779, 79.0288, 61.057, 0.37", "23.4913, 79.854, 61.8386, 0.15", "24.0865, 80.5622, 62.4651, 0.15", "24.6577, 81.2892, 63.1127, 0.15", "25.3089, 82.1655, 63.9, 0.15", "25.6705, 82.6685, 64.3541, 0.15", "26.2717, 83.5168, 65.115, 0.15", "26.9738, 84.5187, 65.9934, 0.07", "27.7674, 85.7089, 66.9979, 0.07", "28.5118, 86.8557, 68.0187, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-114.051, -288.132, 48.81, 0.74", "-114.431, -289.267, 48.4269, 0.74", "-114.884, -290.502, 48.0348, 0.29", "-115.563, -292.13, 47.5173, 0.07", "-116.154, -293.468, 47.0611, 0.15", "-116.536, -294.325, 46.7643, 0.52", "-116.877, -295.074, 46.4835, 0.74", "-117.168, -295.66, 46.2418, 0.88", "-117.988, -297.206, 45.6131, 0.22", "-118.516, -298.172, 45.2356, 0.22", "-119.04, -299.165, 44.8627, 0.22", "-119.583, -300.276, 44.4472, 0.15", "-119.964, -301.103, 44.1302, 0.74", "-120.497, -302.302, 43.6448, 0.88", "-120.955, -303.403, 43.1966, 0.22", "-121.451, -304.643, 42.6547, 0.15", "-121.8, -305.635, 42.1484, 0.15", "-122.026, -306.385, 41.7172, 0.29", "-122.25, -307.195, 41.1785, 0.66", "-122.559, -308.223, 40.4191, 1.03", "-123.021, -309.362, 39.4992, 0.37", "-123.646, -310.554, 38.4655, 0.22", "-124.046, -311.229, 37.8884, 0.44", "-124.45, -311.864, 37.3778, 0.74", "-125.114, -312.856, 36.6659, 1.03", "-126.313, -314.531, 35.6117, 0.29", "-127.027, -315.507, 35.1072, 0.29", "-127.678, -316.411, 34.7242, 0.74", "-128.22, -317.205, 34.4375, 0.74", "-129.2, -318.73, 33.9373, 0.29", "-130.07, -320.14, 33.5251, 0.22", "-130.556, -320.904, 33.3105, 0.22", "-131.236, -321.775, 33.0019, 0.22", "-131.83, -322.365, 32.6916, 0.29", "-132.44, -322.846, 32.3176, 0.74", "-133.235, -323.361, 31.7717, 0.96", "-134.406, -324.086, 30.9145, 0.44", "-135.705, -324.941, 29.9383, 0.22", "-136.378, -325.43, 29.4399, 0.22", "-136.992, -325.947, 29.0012, 0.22", "-137.701, -326.63, 28.5779, 0.81", "-138.44, -327.467, 28.2109, 0.44", "-139.076, -328.293, 27.9791, 0.22", "-139.615, -329.034, 27.7988, 0.37", "-139.95, -329.469, 27.6675, 0.37", "-141.025, -330.671, 27.1912, 0.22", "-141.459, -331.073, 26.97, 0.59", "-142.439, -331.855, 26.4272, 0.88", "-143.43, -332.624, 25.8091, 0.22", "-144.185, -333.234, 25.285, 0.22", "-144.697, -333.668, 24.8935, 0.22", "-145.294, -334.209, 24.3938, 0.22", "-145.899, -334.787, 23.8932, 0.66", "-146.884, -335.857, 23.0926, 0.15", "-147.225, -336.309, 22.7701, 0.15", "-147.561, -336.841, 22.4099, 0.15", "-147.708, -337.131, 22.1946, 0.15", "-147.853, -337.502, 21.9114, 0.15", "-148.113, -338.268, 21.279, 0.88", "-148.688, -339.862, 19.9358, 0.22", "-148.807, -340.143, 19.6931, 0.22", "-149.133, -340.824, 19.1162, 0.22", "-149.528, -341.586, 18.5043, 0.22", "-149.792, -342.073, 18.1556, 0.22", "-150.299, -342.965, 17.627, 0.66", "-151.085, -344.198, 17.0915, 0.29", "-151.684, -345.102, 16.7677, 0.29", "-152.206, -345.894, 16.542, 0.44", "-152.805, -346.856, 16.3094, 0.74", "-153.262, -347.672, 16.1616, 0.81", "-154.128, -349.269, 15.9503, 0.22", "-154.721, -350.272, 15.8814, 0.22", "-155.001, -350.703, 15.8609, 0.22", "-155.335, -351.201, 15.8395, 0.22", "-155.823, -351.953, 15.7712, 0.22", "-156.489, -353.043, 15.5541, 0.59", "-157.167, -354.231, 15.1399, 0.22", "-157.594, -354.98, 14.7859, 0.22", "-158.126, -355.853, 14.2378, 0.59", "-158.903, -357.054, 13.3319, 0.22", "-159.47, -357.96, 12.5586, 0.22", "-159.869, -358.666, 11.9247, 0.44", "-160.308, -359.522, 11.1762, 1.03", "-160.902, -360.718, 10.1932, 0.22", "-161.166, -361.306, 9.79072, 0.22", "-161.405, -362.009, 9.49306, 0.22", "-161.569, -362.827, 9.28858, 0.22", "-161.723, -364.084, 9.07691, 0.22", "-161.762, -364.507, 9.0225, 0.44", "-161.838, -365.557, 8.92265, 0.88", "-161.91, -366.49, 8.82695, 0.88", "-162.107, -368.404, 8.61748, 0.22", "-162.255, -369.47, 8.48698, 0.22", "-162.509, -370.914, 8.26605, 0.22", "-162.643, -371.563, 8.16791, 0.22", "-162.788, -372.109, 8.0881, 0.59", "-163.079, -373.005, 7.96234, 0.81", "-163.289, -373.551, 7.87501, 0.59", "-163.782, -374.788, 7.62092, 0.22", "-164.121, -375.592, 7.43144, 0.22", "-164.523, -376.367, 7.2357, 0.22", "-164.945, -377.031, 7.02651, 0.22", "-165.668, -378.004, 6.6576, 0.22", "-166.209, -378.67, 6.35693, 0.44", "-166.837, -379.397, 5.97159, 0.74", "-167.533, -380.254, 5.45118, 0.29", "-168.152, -381.101, 4.8747, 0.22", "-168.312, -381.329, 4.71114, 0.22", "-168.651, -381.798, 4.3463, 0.22", "-168.994, -382.274, 3.95951, 0.22", "-169.376, -382.842, 3.52825, 0.29", "-169.814, -383.6, 3.05115, 0.66", "-170.22, -384.311, 2.69214, 0.88", "-171.241, -385.956, 1.94761, 0.22", "-171.682, -386.593, 1.68999, 0.22", "-172.242, -387.311, 1.42765, 0.22", "-173.069, -388.221, 1.19842, 0.22", "-173.795, -388.941, 1.12376, 0.15", "-174.297, -389.418, 1.13757, 0.15", "-174.654, -389.754, 1.19723, 0.52", "-175.27, -390.338, 1.32173, 0.81", "-176.579, -391.724, 1.57496, 0.15", "-177.071, -392.339, 1.64076, 0.15", "-177.701, -393.357, 1.66651, 0.15", "-177.829, -393.608, 1.65344, 0.37", "-178.179, -394.409, 1.55027, 0.74", "-178.71, -395.821, 1.26658, 0.15", "-178.98, -396.635, 1.03753, 0.15", "-179.233, -397.437, 0.810474, 0.37", "-179.455, -398.196, 0.580744, 0.37", "-179.7, -399.148, 0.291153, 0.37", "-179.979, -400.375, -0.09471, 0.29", "-180.257, -401.695, -0.489606, 0.81", "-180.431, -402.69, -0.782465, 0.66", "-180.557, -403.623, -1.08916, 0.59", "-180.663, -404.631, -1.47255, 0.15", "-180.758, -405.338, -1.78136, 0.15", "-180.897, -405.998, -2.11679, 0.66", "-180.985, -406.288, -2.27822, 0.66", "-181.374, -407.351, -2.87658, 0.22", "-181.641, -408.117, -3.27436, 0.22", "-181.935, -409.051, -3.73614, 0.59", "-182.226, -410.272, -4.28459, 0.15", "-182.339, -410.885, -4.54099, 0.15", "-182.478, -411.762, -4.88251, 0.81", "-182.703, -413.552, -5.50982, 0.15", "-182.778, -414.276, -5.73234, 0.52", "-182.873, -415.399, -6.04094, 0.15", "-182.939, -415.926, -6.17806, 0.15", "-183.175, -417.106, -6.52759, 0.15", "-183.285, -417.504, -6.6618, 0.15", "-183.615, -418.451, -6.99878, 0.88", "-183.953, -419.351, -7.33874, 0.22", "-184.52, -420.736, -7.88999, 0.15", "-185.071, -422.083, -8.44553, 0.15", "-185.339, -422.724, -8.71539, 0.22", "-185.686, -423.477, -9.05879, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-114.051, -288.132, 48.81, 0.07", "-114.259, -287.758, 48.3676, 0.07", "-114.45, -287.425, 48.0185, 0.07", "-114.636, -287.123, 47.7094, 0.37", "-114.982, -286.591, 47.1944, 0.07", "-115.113, -286.396, 47.0167, 0.07", "-115.33, -286.092, 46.7407, 0.22", "-115.766, -285.538, 46.2651, 0.07", "-116.112, -285.155, 45.9419, 0.07", "-116.358, -284.912, 45.7344, 0.07", "-116.585, -284.719, 45.5721, 0.22", "-117.02, -284.388, 45.2908, 0.07", "-117.3, -284.192, 45.1138, 0.37", "-118.144, -283.649, 44.613, 0.07", "-118.423, -283.478, 44.4538, 0.22", "-119.121, -283.072, 44.0486, 0.07", "-119.413, -282.909, 43.8819, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-21.7797, -247.406, 30.8022, 0.15", "-22.2346, -248.163, 31.8851, 0.15", "-22.6486, -248.972, 32.8652, 0.15", "-22.9665, -249.678, 33.6321, 0.07", "-23.2308, -250.304, 34.3094, 0.07", "-23.4236, -250.779, 34.8151, 0.07", "-23.5582, -251.116, 35.1668, 0.37", "-23.7785, -251.765, 35.7754, 0.66", "-24.1404, -252.847, 36.7395, 0.07", "-24.3341, -253.474, 37.3339, 0.07", "-24.508, -254.064, 37.9453, 0.07", "-24.5894, -254.358, 38.2905, 0.52", "-24.721, -254.902, 38.9688, 0.88", "-24.9114, -255.894, 40.2668, 0.15", "-25.036, -256.757, 41.4116, 0.15", "-25.0865, -257.216, 42.0036, 0.15", "-25.1096, -257.828, 42.81, 0.15", "-25.0882, -258.416, 43.6026, 0.88", "-24.9604, -259.497, 45.1098, 0.07", "-24.8962, -259.845, 45.6058, 0.07", "-24.8224, -260.224, 46.1228, 0.37", "-24.6556, -261.139, 47.3271, 0.15", "-24.5641, -261.714, 48.0527, 0.37", "-24.4853, -262.521, 49.0783, 0.22", "-24.4656, -263.177, 49.8764, 0.44", "-24.4873, -263.708, 50.4948, 0.81", "-24.5797, -264.421, 51.2875, 0.29", "-24.8241, -265.276, 52.1188, 0.15", "-25.2535, -266.331, 52.9942, 0.15", "-25.6685, -267.201, 53.5805, 0.15", "-25.9469, -267.75, 53.8927, 0.81", "-26.2372, -268.343, 54.1833, 1.47", "-27.1272, -270.255, 54.9456, 0.15", "-27.7064, -271.603, 55.5011, 0.07", "-28.2795, -273.05, 56.0855, 0.07", "-28.5668, -273.81, 56.4244, 0.15", "-29.0146, -275.086, 57.0136, 0.07", "-29.2475, -275.787, 57.3415, 0.22", "-30.21, -278.74, 58.8288, 0.07", "-30.5186, -279.602, 59.2888, 0.29", "-31.2098, -281.306, 60.2341, 0.07", "-31.5993, -282.163, 60.6998, 0.07", "-32.0762, -283.089, 61.1878, 0.44", "-32.9876, -284.783, 62.0377, 0.15", "-33.7043, -286.067, 62.6218, 0.07", "-34.1185, -286.797, 62.9716, 0.07", "-34.5222, -287.509, 63.3251, 0.29", "-35.7148, -289.61, 64.4528, 0.07", "-36.3212, -290.703, 65.062, 0.07", "-36.7855, -291.56, 65.5332, 0.07", "-37.2408, -292.408, 66.0306, 0.07", "-37.6736, -293.202, 66.5021, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-21.7797, -247.406, 30.8022, 0.22", "-21.4325, -247.942, 31.2927, 0.22", "-20.8043, -248.778, 32.0813, 0.37", "-20.3658, -249.303, 32.6128, 0.15", "-20.0073, -249.713, 33.034, 0.15", "-19.8796, -249.845, 33.194, 0.37", "-19.5704, -250.158, 33.6293, 0.88", "-18.9132, -250.746, 34.6354, 0.15", "-18.6018, -251.011, 35.1808, 0.52", "-18.5105, -251.091, 35.3603, 1.03", "-17.9093, -251.648, 36.6959, 0.22", "-17.5233, -252.031, 37.6562, 0.22", "-17.4157, -252.144, 37.9495, 0.37", "-16.9996, -252.678, 39.2547, 0.22", "-16.8553, -252.902, 39.7455, 0.22", "-16.6874, -253.225, 40.3737, 0.22", "-16.5824, -253.487, 40.8044, 0.22", "-16.4737, -253.785, 41.229, 0.88", "-16.1545, -254.646, 42.278, 0.15", "-15.9816, -255.11, 42.7446, 0.22", "-15.7564, -255.701, 43.2067, 0.07", "-15.4669, -256.456, 43.6448, 0.07", "-15.1795, -257.211, 43.9053, 1.18", "-14.7339, -258.454, 44.0972, 0.07", "-14.5601, -258.988, 44.056, 0.74", "-14.1697, -260.365, 43.7651, 0.07", "-14.0807, -260.764, 43.6251, 0.44", "-13.8736, -262.187, 42.9476, 0.07", "-13.828, -262.937, 42.5579, 1.11", "-13.8547, -264.381, 41.7033, 0.07", "-13.8713, -264.711, 41.4971, 0.22", "-13.956, -265.766, 40.8185, 0.07", "-13.9922, -266.27, 40.4456, 0.07", "-14.029, -267.012, 39.7599, 0.96", "-13.9856, -267.876, 38.8337, 0.07", "-13.9219, -268.193, 38.4666, 0.07", "-13.8729, -268.356, 38.2587, 0.29", "-13.6234, -269.002, 37.3328, 0.07", "-13.39, -269.57, 36.4885, 0.07", "-13.2767, -269.86, 36.0447, 0.66", "-13.0389, -270.556, 35.0492, 0.07", "-12.8976, -271.073, 34.3832, 0.07", "-12.7552, -271.658, 33.7425, 0.07", "-12.6566, -272.064, 33.3894, 0.96", "-12.4765, -272.829, 32.7861, 0.15", "-12.3712, -273.301, 32.4328, 0.15", "-12.2472, -273.891, 32.0569, 0.74", "-11.9832, -275.042, 31.4777, 0.15", "-11.8237, -275.671, 31.2246, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.8942, 19.1423, -20.5971, 0.59", "-8.59085, 20.0489, -19.3616, 0.59", "-9.10282, 20.81, -18.4363, 0.59", "-9.61467, 21.5836, -17.553, 0.59", "-10.1578, 22.3579, -16.7096, 0.74", "-10.622, 22.973, -16.0854, 0.74", "-11.3753, 23.9028, -15.2622, 0.44", "-11.5849, 24.1442, -15.1222, 0.44", "-12.0926, 24.7034, -14.9417, 0.44", "-12.6147, 25.2349, -14.8446, 0.66", "-13.3875, 25.9265, -14.7714, 0.81", "-14.4891, 26.7853, -14.6845, 0.59", "-15.3721, 27.3936, -14.6052, 0.37", "-16.5376, 28.1806, -14.4637, 0.22", "-17.2466, 28.6665, -14.3536, 0.44", "-17.7242, 29.0165, -14.2554, 0.74", "-18.757, 29.8575, -13.988, 0.37", "-19.6762, 30.6967, -13.6924, 0.22", "-20.1037, 31.1559, -13.5642, 0.22", "-20.5913, 31.7645, -13.4362, 0.66", "-21.1785, 32.5986, -13.3215, 0.52", "-21.8708, 33.652, -13.2677, 0.81", "-22.1673, 34.1203, -13.2909, 0.81", "-22.9369, 35.301, -13.47, 0.44", "-23.7395, 36.4003, -13.7643, 0.74", "-24.5787, 37.3559, -14.172, 0.44", "-25.5736, 38.2648, -14.7539, 0.29", "-26.2932, 38.7867, -15.2323, 0.29", "-27.0628, 39.2356, -15.8012, 0.29", "-27.8545, 39.599, -16.4358, 0.88", "-28.8444, 39.9734, -17.2453, 0.59", "-29.4953, 40.2008, -17.7656, 0.59", "-30.4157, 40.5294, -18.4539, 0.29", "-31.5155, 40.9685, -19.2042, 0.74", "-31.9805, 41.1959, -19.4986, 0.74", "-32.6733, 41.6365, -19.9166, 0.29", "-33.1502, 42.0602, -20.1737, 0.22", "-33.4858, 42.4604, -20.3376, 0.22", "-33.8383, 43.0208, -20.495, 0.22", "-34.255, 43.7845, -20.6769, 0.74", "-34.6057, 44.4252, -20.8633, 0.74", "-34.9474, 45.0279, -21.0882, 0.29", "-35.2204, 45.4638, -21.2767, 0.29", "-35.6206, 46.0571, -21.5472, 0.52", "-36.0769, 46.7246, -21.8917, 0.52", "-36.7697, 47.726, -22.4596, 0.22", "-37.1769, 48.3508, -22.8451, 0.15", "-37.7577, 49.2494, -23.4162, 0.59", "-38.3382, 50.1977, -24.0065, 0.22", "-38.6313, 50.7296, -24.3265, 0.22", "-38.7157, 50.9155, -24.4272, 0.22", "-38.9755, 51.6322, -24.7748, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-7.8942, 19.1423, -20.5971, 1.03", "-7.48609, 19.6851, -20.761, 1.03", "-6.43217, 20.685, -21.0817, 0.88", "-5.55318, 21.4276, -21.3609, 0.88", "-4.93996, 21.9351, -21.575, 0.59", "-4.41448, 22.3943, -21.7703, 0.59", "-3.53213, 23.218, -22.1149, 0.96", "-2.52495, 24.1657, -22.5121, 0.52", "-1.698, 25.0395, -22.845, 0.66", "-1.37381, 25.4921, -23.0037, 0.66", "-1.01625, 26.1898, -23.2299, 0.66", "-0.833653, 26.7087, -23.3683, 0.66", "-0.615078, 27.6231, -23.5768, 1.18", "-0.39767, 28.7753, -23.8187, 0.96", "-0.283647, 29.3904, -23.9552, 0.96", "-0.0966524, 30.3027, -24.2041, 0.88", "0.161945, 31.3119, -24.5713, 1.03", "0.325315, 31.8995, -24.8206, 1.18", "0.589262, 32.7312, -25.1991, 0.74", "0.877373, 33.514, -25.5633, 0.74", "1.11694, 34.1014, -25.8476, 0.96", "1.50497, 34.9996, -26.2876, 1.11", "1.98255, 35.9766, -26.8027, 0.96", "2.7752, 37.3689, -27.5705, 0.59", "3.24136, 38.0767, -27.9618, 0.59", "3.92361, 38.9403, -28.4626, 0.74", "4.25672, 39.2936, -28.6842, 0.74", "5.01875, 39.9701, -29.1277, 0.59", "5.84299, 40.5803, -29.5608, 0.59", "6.57032, 41.0721, -29.9158, 0.59", "7.40041, 41.6691, -30.3113, 0.52", "8.00361, 42.1815, -30.6062, 0.52", "8.65661, 42.8962, -30.9972, 0.74", "8.98926, 43.4588, -31.2889, 0.88", "9.25748, 44.2257, -31.7181, 0.59", "9.42272, 45.1214, -32.2834, 0.44", "9.49369, 46.0544, -32.919, 0.59", "9.52199, 46.9366, -33.5526, 0.96", "9.58822, 48.0365, -34.3732, 0.52", "9.71004, 48.888, -35.0211, 0.52", "9.88229, 49.5293, -35.5016, 0.52", "10.3019, 50.5076, -36.221, 0.37", "10.6294, 51.0999, -36.6294, 0.37", "11.2724, 52.1517, -37.2721, 0.44", "11.7577, 52.9926, -37.7131, 0.59", "12.1232, 53.7834, -38.0622, 0.59", "12.3193, 54.3958, -38.2889, 0.59", "12.4814, 55.488, -38.6654, 0.59", "12.4823, 56.3507, -38.9903, 0.66", "12.3584, 57.4063, -39.4348, 0.74", "12.1968, 58.3793, -39.9002, 0.52", "12.0496, 59.2148, -40.3731, 0.29", "11.9544, 60.0213, -40.9782, 0.29", "12.0409, 60.5181, -41.6994, 0.44", "12.279, 60.6514, -42.3954, 0.59", "12.6859, 60.566, -43.3287, 0.29", "12.9624, 60.4105, -43.8964, 0.29", "13.3983, 60.0702, -44.76, 0.29", "13.7323, 59.779, -45.3914, 0.29", "14.0455, 59.5065, -46.0049, 0.44", "14.3403, 59.2931, -46.6584, 0.44", "14.5463, 59.2037, -47.2373, 0.52", "14.639, 59.3463, -47.7311, 0.52", "14.5671, 59.7541, -48.0821, 0.52", "14.3268, 60.4089, -48.4683, 0.66", "13.9426, 61.1952, -48.837, 0.66", "13.4695, 61.9288, -49.1116, 0.37", "12.8088, 62.6721, -49.3709, 0.37", "12.1594, 63.1772, -49.5719, 0.37", "11.6311, 63.4089, -49.7215, 0.37", "11.1981, 63.4826, -49.8421, 0.37", "10.4275, 63.4496, -50.0714, 0.29", "9.55138, 63.2186, -50.3606, 0.22", "8.83387, 62.8451, -50.6339, 0.22", "7.95209, 62.0441, -51.055, 0.66", "7.66357, 61.564, -51.2668, 0.37", "7.45929, 60.9766, -51.5398, 0.22", "7.35703, 60.2487, -51.8945, 0.22", "7.3656, 59.6721, -52.2, 0.22", "7.44791, 58.8399, -52.6535, 0.29", "7.62628, 57.7334, -53.277, 0.15", "7.80514, 56.7152, -53.8923, 0.15", "8.00011, 55.5088, -54.6762, 0.15", "8.12892, 54.6269, -55.3205, 0.15", "8.15967, 54.3523, -55.5408, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.67928, 0.487563, -10.549, 1.25", "-1.78564, -0.293672, -11.5126, 1.25", "-1.18866, -0.730206, -12.0362, 1.25", "-0.393615, -1.25262, -12.6557, 1.25", "0.0980479, -1.58547, -13.0184, 1.25", "0.74386, -2.08711, -13.4992, 1.11", "1.19227, -2.5137, -13.8608, 1.33", "1.81102, -3.27268, -14.3601, 0.81", "2.14347, -3.93528, -14.6672, 0.66", "2.29976, -4.53118, -14.8854, 0.66", "2.42109, -5.49286, -15.185, 1.03", "2.49056, -6.64592, -15.4968, 1.4", "2.53577, -7.55077, -15.7194, 1.99", "2.61795, -8.82605, -15.9945, 1.33", "2.7401, -9.77843, -16.1827, 0.96", "2.94111, -10.8903, -16.4023, 0.81", "3.1649, -11.7168, -16.5599, 0.74", "3.48476, -12.5714, -16.704, 0.96", "3.84655, -13.3101, -16.8301, 1.33", "4.21354, -13.9097, -16.9341, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.67928, 0.487563, -10.549, 1.77", "-3.84413, -0.627209, -10.8794, 1.77", "-5.0025, -1.78547, -11.2454, 1.62", "-5.9791, -2.8143, -11.6154, 1.84", "-6.6426, -3.51329, -11.8667, 2.06", "-7.83372, -4.76813, -12.3179, 1.84", "-8.9508, -5.94493, -12.7411, 1.84", "-10.0651, -7.19297, -13.2307, 1.84", "-10.932, -8.17447, -13.6591, 2.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-6.2873, 43.0095, 17.831, 0.52", "-6.14543, 44.3166, 16.9093, 0.52", "-6.09699, 45.5945, 15.9604, 0.52", "-6.1342, 46.2738, 15.4089, 0.52", "-6.24139, 47.1339, 14.6831, 0.59", "-6.36885, 47.9235, 13.9918, 0.44", "-6.47302, 48.5128, 13.4673, 0.44", "-6.61799, 49.141, 12.9006, 0.52", "-6.81932, 50.0623, 12.0713, 0.88", "-6.96077, 50.7032, 11.4673, 1.25", "-7.1473, 51.5647, 10.6537, 1.18", "-7.38002, 52.7154, 9.59486, 1.18", "-7.5733, 53.8254, 8.59739, 0.52", "-7.73655, 55.0092, 7.55866, 0.44", "-7.82983, 55.7871, 6.8836, 0.44", "-7.88884, 56.3011, 6.44742, 0.44", "-7.98972, 57.2215, 5.71596, 0.52", "-8.06123, 58.0492, 5.13247, 0.59", "-8.1155, 59.144, 4.47894, 0.66", "-8.13034, 60.0351, 4.0388, 0.66", "-8.12987, 60.9039, 3.69793, 0.96", "-8.12049, 61.8096, 3.41443, 1.18", "-8.07329, 63.2363, 3.0977, 0.96", "-8.02369, 64.2684, 2.94058, 0.44", "-7.98452, 64.9328, 2.86313, 0.29", "-7.91962, 65.7536, 2.77471, 0.29", "-7.87004, 66.1533, 2.71953, 0.29", "-7.7115, 66.8967, 2.58909, 0.59", "-7.56468, 67.3164, 2.49681, 0.96", "-7.07165, 68.3381, 2.1855, 1.25", "-6.762, 68.8651, 1.96775, 1.11", "-6.07667, 69.9525, 1.42149, 0.52", "-5.58666, 70.7824, 0.97649, 0.52", "-5.18651, 71.533, 0.573907, 0.22", "-4.77875, 72.3849, 0.114541, 0.29", "-4.43982, 73.1664, -0.338296, 0.59", "-4.15531, 73.8999, -0.827401, 1.11", "-3.85781, 74.7433, -1.46287, 1.25", "-3.52867, 75.7253, -2.31536, 0.96", "-3.28699, 76.4008, -3.05049, 0.29", "-3.06943, 76.8669, -3.77174, 0.22", "-2.87387, 77.1496, -4.50293, 0.22", "-2.73061, 77.3081, -5.19004, 0.37", "-2.6019, 77.4663, -6.21639, 0.59", "-2.56011, 77.6254, -7.44113, 0.74", "-2.58318, 77.8247, -8.73015, 0.96", "-2.61725, 78.0227, -9.79382, 1.18", "-2.65524, 78.2837, -10.9856, 1.18", "-2.68352, 78.6186, -12.3213, 1.25", "-2.6489, 79.0601, -13.7266, 1.25", "-2.53606, 79.5335, -14.8405, 0.52", "-2.38879, 79.941, -15.5708, 0.29", "-2.13282, 80.4897, -16.3288, 0.29", "-1.91123, 80.8904, -16.7494, 0.66", "-1.49992, 81.6586, -17.3123, 0.66", "-1.0286, 82.7565, -17.868, 0.52", "-0.854983, 83.4617, -18.1078, 0.59", "-0.777404, 84.2627, -18.3043, 0.74", "-0.78196, 84.7413, -18.3843, 0.74", "-0.915756, 85.878, -18.5781, 0.29", "-1.0834, 86.6802, -18.7083, 0.29", "-1.39527, 87.9036, -18.8916, 0.44", "-1.51936, 88.3788, -18.9627, 0.81", "-1.67174, 89.0204, -19.0832, 0.81", "-1.92523, 90.2932, -19.4102, 0.66", "-2.06839, 91.3888, -19.7902, 0.66", "-2.09397, 91.8372, -19.9705, 0.66", "-2.10874, 92.7173, -20.3699, 0.44", "-2.143, 93.8625, -20.9194, 0.59", "-2.192, 94.6561, -21.2956, 0.44", "-2.32304, 95.7463, -21.797, 0.52", "-2.46425, 96.4293, -22.1193, 0.52", "-2.67124, 97.1309, -22.4648, 0.44", "-2.96267, 97.9236, -22.8876, 0.81", "-3.34113, 98.8183, -23.4027, 1.03", "-3.82662, 99.8932, -24.0815, 0.66", "-4.16145, 100.594, -24.5598, 0.44", "-4.43686, 101.23, -24.9941, 0.29", "-4.66306, 101.916, -25.3993, 0.29", "-4.76982, 102.355, -25.5963, 0.29", "-4.90125, 102.997, -25.8427, 0.29", "-5.00377, 103.556, -26.013, 0.44", "-5.28333, 104.892, -26.3839, 0.74", "-5.7075, 106.585, -26.8444, 0.59", "-6.11925, 107.93, -27.2621, 0.44", "-6.4177, 108.746, -27.5848, 0.44", "-6.53387, 109.016, -27.7367, 0.59", "-6.82085, 109.578, -28.2138, 0.59", "-7.10205, 110.035, -28.7706, 0.59", "-7.41295, 110.491, -29.5137, 0.59", "-7.65931, 110.872, -30.2298, 0.74", "-7.97607, 111.478, -31.3377, 0.96", "-8.2102, 112.047, -32.2702, 1.18", "-8.40283, 112.702, -33.1734, 0.59", "-8.54194, 113.38, -33.9442, 0.59", "-8.6587, 114.171, -34.6675, 0.59", "-8.72944, 114.655, -35.013, 0.29", "-8.90314, 115.467, -35.4418, 0.22", "-9.09066, 116.031, -35.6997, 0.22", "-9.43319, 116.752, -36.011, 0.22", "-9.88105, 117.409, -36.3503, 0.22", "-10.575, 118.185, -36.8482, 0.81", "-11.4312, 118.978, -37.4612, 0.22", "-12.1795, 119.599, -38.0105, 0.37", "-12.9672, 120.186, -38.5972, 0.88", "-14.5009, 121.202, -39.7607, 0.15", "-15.3079, 121.693, -40.402, 0.15", "-15.7009, 121.919, -40.7495, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.2873, 43.0095, 17.831, 0.81", "-6.41727, 44.0422, 18.9759, 0.81", "-6.54222, 45.0153, 19.9259, 0.81", "-6.77065, 46.1114, 20.8687, 0.81", "-6.95206, 46.744, 21.3494, 0.59", "-7.17358, 47.4196, 21.8275, 0.59", "-7.39831, 48.079, 22.2551, 0.44", "-7.58632, 48.6137, 22.4958, 0.44", "-7.9708, 49.6224, 22.8595, 0.44", "-8.25596, 50.3377, 23.1068, 0.74", "-8.58827, 51.1855, 23.4658, 1.11", "-8.83007, 51.816, 23.7484, 1.11", "-9.26254, 53.0015, 24.3079, 0.52", "-9.55577, 53.9415, 24.7594, 0.66", "-9.77438, 54.8278, 25.2076, 0.96", "-9.97843, 55.7578, 25.6996, 1.33", "-10.2609, 57.0084, 26.375, 1.77" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-185.686, -423.477, -9.05879, 0.29", "-185.83, -424.669, -8.74732, 0.29", "-186.04, -425.883, -8.54336, 0.66", "-186.382, -427.565, -8.38064, 0.15", "-186.588, -428.516, -8.34154, 0.15", "-186.759, -429.131, -8.37022, 0.59", "-187.221, -430.396, -8.53481, 0.07", "-187.672, -431.193, -8.78029, 0.07", "-187.979, -431.595, -8.97189, 0.15", "-188.325, -431.995, -9.27316, 0.37", "-189.14, -432.931, -10.1408, 0.07", "-189.705, -433.564, -10.8151, 0.07", "-189.989, -433.874, -11.1728, 0.07", "-190.329, -434.233, -11.5744, 0.81", "-191.182, -435.179, -12.5896, 0.22", "-191.683, -435.805, -13.2123, 0.44", "-192.171, -436.608, -13.9051, 0.15", "-192.401, -437.079, -14.2868, 0.15", "-192.544, -437.443, -14.5624, 0.44", "-192.771, -438.043, -14.9917, 0.66", "-193.185, -439.163, -15.6779, 0.15", "-193.41, -439.901, -16.094, 0.15", "-193.52, -440.539, -16.4387, 0.15", "-193.582, -441.239, -16.836, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-185.686, -423.477, -9.05879, 0.07", "-187.22, -422.648, -8.92182, 0.07", "-188.319, -422.038, -8.87147, 0.07", "-189.34, -421.476, -8.8515, 0.07", "-189.827, -421.2, -8.85278, 0.15", "-190.699, -420.651, -8.86929, 0.07", "-191.265, -420.248, -8.88667, 0.07", "-191.74, -419.817, -8.95984, 0.22", "-192.098, -419.457, -8.97457, 0.15", "-192.315, -419.235, -8.96908, 0.15", "-193.028, -418.533, -8.94582, 0.29", "-193.651, -417.981, -8.91881, 0.07", "-194.291, -417.475, -8.8873, 0.15", "-195.731, -416.462, -8.85672, 0.07", "-196.585, -415.989, -8.86, 0.15", "-197.287, -415.719, -8.8854, 0.15", "-197.926, -415.581, -8.93053, 0.15", "-198.578, -415.55, -9.00004, 0.15", "-199.528, -415.585, -9.14049, 0.15", "-200.376, -415.71, -9.33596, 0.07", "-201.191, -415.913, -9.48262, 0.07", "-201.693, -416.076, -9.55324, 0.66", "-202.64, -416.462, -9.69884, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-11.8237, -275.671, 31.2246, 0.15", "-12.1152, -276.822, 30.1561, 0.15", "-12.3072, -277.457, 29.6692, 0.15", "-12.3771, -277.754, 29.4589, 0.15", "-12.4505, -278.087, 29.2207, 0.52", "-12.5474, -278.554, 28.9028, 0.81", "-12.8137, -279.712, 28.1151, 0.22", "-13.0102, -280.602, 27.5606, 0.22", "-13.1616, -281.234, 27.1878, 0.15", "-13.2738, -281.771, 26.8656, 0.22", "-13.3785, -282.456, 26.4186, 0.29", "-13.4326, -283.151, 25.9138, 0.22", "-13.4357, -283.573, 25.5732, 0.22", "-13.4468, -284.046, 25.1739, 0.37", "-13.4965, -284.681, 24.6311, 0.37", "-13.567, -285.521, 23.9225, 0.22", "-13.5843, -285.86, 23.6066, 0.22", "-13.5999, -286.366, 23.0995, 0.22", "-13.6233, -286.618, 22.8338, 0.22", "-13.7071, -286.987, 22.4438, 0.22", "-13.8054, -287.368, 22.0551, 0.15", "-13.9643, -288.127, 21.3118, 0.44", "-14.1277, -289.034, 20.4875, 0.22", "-14.2226, -289.577, 20.0504, 0.29", "-14.4106, -290.702, 19.2094, 0.07", "-14.5216, -291.422, 18.709, 0.66", "-14.6684, -292.431, 18.07, 0.07", "-14.7622, -293.122, 17.6768, 0.07", "-14.8309, -293.911, 17.2126, 0.29", "-14.8631, -294.752, 16.6888, 0.07", "-14.8737, -295.151, 16.43, 0.44", "-14.8965, -295.365, 16.288, 0.44", "-14.9926, -296.05, 15.8128, 0.74", "-15.0658, -297.105, 14.9442, 0.07", "-15.0564, -297.537, 14.5525, 0.22", "-14.9886, -298.121, 14.0104, 0.07", "-14.9321, -298.634, 13.5381, 0.07", "-14.8685, -299.097, 13.116, 0.66", "-14.5675, -300.372, 11.9745, 0.07", "-14.3271, -300.91, 11.4712, 0.07", "-13.9687, -301.436, 10.8853, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.8237, -275.671, 31.2246, 0.07", "-9.94914, -276.272, 30.7998, 0.07", "-9.07991, -276.516, 30.5929, 0.29", "-8.01717, -276.792, 30.3321, 0.07", "-7.12908, -277.004, 30.1097, 0.52", "-4.73483, -277.444, 29.401, 0.07", "-3.3479, -277.629, 28.9269, 0.07", "-2.80824, -277.67, 28.7268, 0.59", "-2.07531, -277.695, 28.4279, 0.74", "-1.36465, -277.674, 28.1177, 0.37", "0.483699, -277.492, 27.2187, 0.07", "1.36822, -277.291, 26.6715, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.21354, -13.9097, -16.9341, 0.59", "4.59681, -13.6671, -18.3586, 0.59", "4.89753, -13.5261, -19.4716, 0.59", "5.31022, -13.3786, -21.086, 0.52", "5.57628, -13.2963, -22.3672, 0.52", "5.73255, -13.2445, -23.2918, 0.52", "5.78818, -13.211, -23.7569, 0.52", "5.79899, -13.117, -24.5947, 0.52", "5.77447, -13.0486, -24.9731, 0.52", "5.67367, -12.7803, -25.8399, 0.66", "5.65127, -12.6262, -26.1519, 0.66", "5.71664, -12.1005, -27.0115, 0.29", "5.93286, -11.5601, -27.8269, 0.88", "6.31717, -11.1316, -28.4588, 0.37", "6.83105, -10.7734, -29.0281, 0.29", "7.35717, -10.4806, -29.4825, 0.29", "7.77962, -10.2715, -29.7961, 0.29", "8.08003, -10.1386, -29.9795, 0.44", "8.69762, -9.82058, -30.3296, 0.52", "9.25743, -9.42108, -30.6289, 0.15", "9.68794, -9.00598, -30.8263, 0.15", "10.1408, -8.47044, -30.9906, 0.15", "10.4466, -8.03152, -31.0807, 0.15", "10.7722, -7.45009, -31.1987, 0.15", "11.1171, -6.68763, -31.3424, 0.15", "11.4863, -5.82801, -31.4932, 0.29", "11.7034, -5.30825, -31.5902, 0.15", "12.0252, -4.45136, -31.7513, 0.22", "12.3976, -3.30383, -31.9776, 0.07", "12.5355, -2.82508, -32.0829, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.21354, -13.9097, -16.9341, 0.88", "4.7808, -14.6067, -17.692, 0.88", "5.25722, -15.25, -18.5654, 0.74", "5.6769, -15.8167, -19.3348, 0.88", "6.29304, -16.6487, -20.4644, 0.88", "6.79807, -17.3307, -21.3903, 0.96", "7.3498, -18.0757, -22.4018, 0.96", "7.57044, -18.4993, -23.1468, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.932, -8.17447, -13.6591, 0.81", "-11.9791, -8.70993, -13.635, 0.81", "-12.7627, -9.08107, -13.5233, 0.44", "-13.2882, -9.28027, -13.3657, 0.44", "-13.978, -9.46083, -13.0557, 0.66", "-14.4576, -9.54209, -12.7966, 0.74", "-15.1333, -9.61241, -12.4054, 0.44", "-15.8249, -9.61779, -11.943, 0.59", "-16.7158, -9.56173, -11.3308, 0.59", "-17.5899, -9.45129, -10.7453, 0.59", "-18.3238, -9.33111, -10.2581, 0.59", "-19.1224, -9.21043, -9.74143, 0.81", "-19.6901, -9.16085, -9.39721, 0.66", "-20.1347, -9.17097, -9.14956, 0.88", "-21.0662, -9.29409, -8.64641, 0.37", "-21.573, -9.39639, -8.35981, 0.44", "-22.2515, -9.55311, -7.94572, 0.59", "-23.0368, -9.72718, -7.43405, 0.44", "-23.7584, -9.84294, -6.95565, 0.44", "-24.434, -9.8767, -6.54642, 0.44", "-25.1141, -9.83108, -6.19618, 0.66", "-25.7202, -9.72711, -5.95486, 0.81", "-26.2402, -9.59615, -5.79221, 0.81", "-27.0699, -9.37017, -5.59097, 0.66", "-28.1412, -9.08657, -5.42543, 0.59", "-28.9882, -8.89916, -5.39264, 0.59", "-30.0575, -8.73701, -5.46445, 0.74", "-30.448, -8.70873, -5.52159, 0.52", "-31.2077, -8.7199, -5.67417, 0.22", "-31.9344, -8.79437, -5.8605, 0.22", "-32.6488, -8.89854, -6.08663, 0.22", "-33.1153, -8.96645, -6.24693, 0.37", "-33.6558, -9.03925, -6.4314, 0.81", "-34.1791, -9.10148, -6.60015, 0.81", "-34.8845, -9.16065, -6.80631, 0.59", "-35.7074, -9.21296, -7.0035, 0.37", "-36.3809, -9.23631, -7.14839, 0.29", "-37.0592, -9.23366, -7.3129, 0.37", "-37.5069, -9.20923, -7.4564, 0.29", "-38.234, -9.14196, -7.72858, 0.29", "-38.918, -9.05814, -8.00525, 0.81", "-39.6378, -8.96143, -8.31379, 0.52", "-40.2514, -8.86667, -8.60849, 0.52", "-41.1752, -8.70154, -9.08905, 0.37", "-41.6996, -8.58652, -9.39682, 0.66", "-42.2378, -8.44818, -9.76141, 0.66", "-43.0275, -8.22282, -10.3656, 0.44", "-43.8432, -7.98453, -11.0393, 0.81", "-44.2097, -7.8803, -11.3465, 0.81", "-44.8077, -7.71663, -11.8701, 0.37", "-45.2488, -7.61549, -12.313, 0.22", "-45.6626, -7.59094, -12.7748, 0.22", "-45.9568, -7.66255, -13.1573, 0.22", "-46.1855, -7.78536, -13.4718, 0.81", "-46.3508, -7.89595, -13.7023, 1.03", "-46.7403, -8.20312, -14.2484, 0.66", "-47.28, -8.6549, -14.9922, 0.29", "-47.9917, -9.22047, -15.9704, 0.29", "-48.4024, -9.50001, -16.5211, 0.22", "-48.7222, -9.66882, -16.9459, 0.22", "-48.9153, -9.73979, -17.196, 0.22", "-49.2378, -9.78601, -17.5952, 0.22", "-49.5979, -9.75953, -18.0192, 0.22", "-49.884, -9.70143, -18.3339, 0.22", "-50.3879, -9.59738, -18.9145, 0.22", "-50.6854, -9.52723, -19.2651, 0.66", "-51.2375, -9.37777, -19.9338, 0.66", "-51.7525, -9.23127, -20.5852, 0.15", "-52.2395, -9.11856, -21.2032, 0.15", "-52.886, -9.00263, -22.027, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.932, -8.17447, -13.6591, 1.55", "-10.104, -9.58226, -14.7003, 1.55", "-9.54158, -10.7147, -15.508, 1.4", "-9.13962, -11.7614, -16.1784, 1.33", "-8.78211, -13.0037, -16.8521, 0.96", "-8.54121, -14.1309, -17.3497, 0.88", "-8.36494, -15.2312, -17.7352, 1.4", "-8.32773, -16.1933, -17.9587, 1.47", "-8.40496, -17.9674, -18.2055, 1.03", "-8.57758, -19.5673, -18.3536, 0.96", "-8.81665, -21.3343, -18.4581, 1.03", "-9.00546, -22.8859, -18.5246, 1.03", "-9.16787, -24.5964, -18.5974, 1.11", "-9.24199, -25.8067, -18.6954, 0.88", "-9.26638, -27.3752, -18.9081, 0.88", "-9.2287, -28.4654, -19.1518, 1.11", "-9.09755, -29.9448, -19.6186, 1.11", "-8.90672, -31.1839, -20.0923, 0.96", "-8.5625, -32.6628, -20.7127, 1.03", "-8.28973, -33.5982, -21.1309, 1.11", "-7.8497, -35.0125, -21.7036, 0.96", "-7.56232, -36.0234, -22.0889, 0.88", "-7.4408, -36.514, -22.2632, 0.81", "-7.20847, -37.5216, -22.6043, 0.74", "-6.99404, -38.5397, -22.9405, 0.88", "-6.74297, -40.0009, -23.4264, 1.03", "-6.65318, -40.8681, -23.6892, 1.25", "-6.60686, -42.4351, -24.1266, 1.25", "-6.65411, -43.979, -24.5261, 1.18", "-6.73953, -45.4486, -24.9136, 1.11", "-6.84816, -46.8531, -25.2946, 1.03", "-7.02548, -48.9033, -25.8859, 0.96", "-7.18773, -50.2787, -26.2265, 0.96", "-7.36485, -51.2455, -26.4016, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-10.2609, 57.0084, 26.375, 0.29", "-11.1143, 58.1458, 27.4354, 0.29", "-11.7094, 58.9271, 28.1513, 0.22", "-12.195, 59.554, 28.7248, 0.22", "-12.4402, 59.8897, 29.0344, 0.22", "-12.6365, 60.1784, 29.3111, 0.59", "-12.9407, 60.6599, 29.7955, 1.03", "-13.1945, 61.1716, 30.3522, 1.33", "-13.5461, 61.9781, 31.1741, 0.59", "-13.7775, 62.5371, 31.7039, 0.22", "-13.9626, 63.1179, 32.1447, 0.22", "-14.128, 63.893, 32.6023, 0.22", "-14.2001, 64.4526, 32.8506, 0.74", "-14.2392, 65.2673, 33.0869, 1.84", "-14.2396, 65.9495, 33.2036, 1.84", "-14.2017, 68.0886, 33.3496, 0.22", "-14.1505, 69.3435, 33.3314, 0.22", "-14.0887, 70.0336, 33.2935, 0.22", "-13.8838, 71.4178, 33.2383, 0.22", "-13.8115, 71.7639, 33.2314, 0.44", "-13.6186, 72.481, 33.2315, 1.18", "-13.2695, 73.5494, 33.2704, 1.7", "-12.6547, 75.3684, 33.3993, 0.15", "-12.2753, 76.534, 33.5201, 0.15", "-12.1605, 76.9153, 33.5856, 0.74", "-11.9588, 77.6495, 33.7322, 1.7", "-11.9285, 77.7739, 33.7607, 1.7", "-11.7052, 79.1115, 34.0466, 0.15", "-11.6775, 79.6228, 34.1262, 0.15", "-11.6921, 80.4417, 34.2047, 0.15", "-11.7533, 81.2043, 34.243, 0.29", "-11.8064, 81.5451, 34.2462, 0.29", "-12.0333, 82.69, 34.2093, 0.07", "-12.1492, 83.2113, 34.1727, 0.22", "-12.2614, 83.7118, 34.109, 0.66", "-12.5205, 84.8466, 33.9111, 0.96", "-12.7286, 85.8256, 33.7133, 0.22", "-12.9495, 87.0262, 33.4396, 0.66", "-13.0841, 87.9596, 33.2392, 0.44", "-13.151, 88.5899, 33.1179, 0.74", "-13.1988, 89.2616, 33.0185, 1.55", "-13.2156, 90.115, 32.9511, 1.84", "-13.1973, 91.893, 33.0047, 0.22", "-13.1805, 92.8585, 33.1806, 0.22", "-13.1748, 93.1866, 33.2922, 0.59", "-13.1815, 93.8384, 33.6118, 1.25", "-13.2191, 94.5545, 34.0318, 1.62", "-13.3481, 95.9566, 34.9442, 0.22", "-13.4315, 96.6622, 35.4267, 0.22", "-13.6005, 97.7417, 36.104, 1.03", "-13.9116, 99.4224, 36.9831, 0.15", "-14.1417, 100.502, 37.4071, 0.15", "-14.2677, 101.04, 37.5448, 0.52", "-14.3846, 101.52, 37.5897, 1.03", "-14.6208, 102.49, 37.5444, 1.18", "-14.9771, 103.838, 37.3017, 0.22", "-15.1653, 104.483, 37.1029, 0.22", "-15.3881, 105.15, 36.8698, 0.22", "-15.7694, 106.16, 36.4879, 0.22", "-15.9612, 106.612, 36.3022, 0.74", "-16.3647, 107.465, 35.9374, 1.77", "-16.9218, 108.522, 35.4626, 0.22", "-17.2994, 109.186, 35.128, 0.22", "-17.6189, 109.698, 34.8269, 0.22", "-17.8186, 110.004, 34.6226, 0.22", "-18.26, 110.715, 34.1555, 0.07", "-18.633, 111.418, 33.7293, 0.07", "-18.8718, 111.93, 33.4595, 0.07", "-19.1426, 112.557, 33.1761, 0.37", "-19.4443, 113.283, 32.9156, 1.03", "-19.9331, 114.486, 32.5773, 0.52", "-20.5144, 115.934, 32.3113, 0.15", "-20.7974, 116.664, 32.2451, 0.29", "-20.999, 117.197, 32.2306, 0.96", "-21.2608, 117.894, 32.2428, 1.11", "-21.5832, 118.727, 32.2884, 0.22", "-21.9776, 119.714, 32.3864, 0.22", "-22.2574, 120.356, 32.4967, 0.37", "-22.5359, 120.962, 32.6169, 0.96", "-22.8038, 121.486, 32.7394, 0.96", "-23.2197, 122.194, 32.9178, 0.15", "-23.7558, 122.987, 33.0976, 0.22", "-24.3608, 123.78, 33.2595, 0.37", "-25.0162, 124.562, 33.4165, 0.74", "-25.844, 125.481, 33.5915, 0.22", "-26.9059, 126.585, 33.782, 0.66", "-27.783, 127.452, 33.9357, 0.07", "-28.1199, 127.782, 33.9987, 0.07", "-28.5387, 128.209, 34.0653, 0.15", "-29.0084, 128.716, 34.1194, 0.81", "-29.4929, 129.284, 34.1535, 1.25", "-30.2474, 130.228, 34.1953, 0.37", "-31.0575, 131.299, 34.2186, 0.22", "-31.8201, 132.328, 34.2034, 0.37", "-32.5828, 133.377, 34.157, 0.88", "-32.9857, 133.943, 34.117, 0.37", "-33.5261, 134.719, 34.056, 0.15", "-34.0371, 135.46, 33.9927, 0.15", "-34.4488, 136.078, 33.972, 0.37", "-34.8965, 136.787, 34.0334, 0.74", "-35.2831, 137.421, 34.1372, 0.29", "-35.9175, 138.503, 34.3866, 0.15", "-36.1103, 138.856, 34.4958, 0.44", "-36.5561, 139.713, 34.8172, 1.03", "-37.0335, 140.668, 35.2059, 0.44", "-37.4491, 141.502, 35.5761, 0.15", "-37.9181, 142.445, 36.0065, 0.74", "-38.5409, 143.771, 36.578, 0.15", "-38.7931, 144.364, 36.8218, 0.22", "-39.0145, 144.962, 37.0574, 0.81", "-39.156, 145.446, 37.2338, 0.81", "-39.3712, 146.304, 37.5298, 0.22", "-39.6524, 147.532, 37.9023, 0.15", "-39.8327, 148.379, 38.1514, 0.22", "-39.9555, 148.993, 38.3289, 0.37", "-40.1795, 150.165, 38.6648, 0.96", "-40.4626, 151.633, 39.0592, 0.15", "-40.6026, 152.307, 39.216, 0.15", "-40.742, 152.879, 39.3243, 0.15", "-40.9349, 153.553, 39.4069, 0.66", "-41.0608, 153.951, 39.4308, 0.66", "-41.4135, 154.964, 39.42, 0.07", "-41.6977, 155.781, 39.4062, 0.07", "-41.8198, 156.112, 39.412, 0.44", "-41.98, 156.528, 39.432, 0.74", "-42.169, 156.995, 39.4779, 0.96", "-42.3735, 157.483, 39.556, 0.96", "-42.8831, 158.667, 39.8134, 0.15", "-43.2499, 159.508, 40.0303, 0.15", "-43.688, 160.478, 40.2787, 0.15", "-43.925, 160.986, 40.396, 0.15", "-44.173, 161.481, 40.4928, 0.15", "-44.4319, 161.941, 40.5582, 0.37", "-44.7223, 162.375, 40.6151, 0.81", "-45.1228, 162.876, 40.6937, 1.03", "-45.7052, 163.53, 40.832, 0.37", "-46.3657, 164.219, 40.9999, 0.15", "-47.2053, 165.045, 41.2406, 0.29", "-48.4116, 166.132, 41.6263, 0.29", "-49.3297, 166.895, 41.9463, 0.15", "-49.9445, 167.381, 42.1762, 0.29", "-50.6707, 167.927, 42.4668, 0.88", "-51.5942, 168.591, 42.8519, 0.15", "-52.4749, 169.205, 43.2306, 0.15", "-53.2246, 169.715, 43.537, 0.15", "-54.0617, 170.287, 43.8845, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-10.2609, 57.0084, 26.375, 0.22", "-9.37578, 58.091, 26.6599, 0.22", "-8.81419, 58.8392, 26.7886, 0.15", "-8.28406, 59.5851, 26.9194, 0.22", "-7.8428, 60.2316, 27.054, 0.15", "-7.47326, 60.783, 27.1796, 0.37", "-7.28063, 61.0905, 27.2597, 0.37", "-6.76287, 62.0019, 27.5297, 0.15", "-6.30486, 62.8856, 27.8086, 0.15", "-6.03512, 63.4334, 27.9986, 0.66", "-5.64713, 64.2253, 28.2859, 1.03", "-5.10296, 65.3052, 28.7062, 0.15", "-4.81764, 65.8542, 28.9193, 0.15", "-4.4827, 66.4836, 29.1559, 0.15", "-4.12705, 67.1554, 29.3647, 0.59", "-3.68839, 68.001, 29.5943, 0.07", "-3.40088, 68.583, 29.7348, 0.07", "-3.13098, 69.1525, 29.8406, 0.66", "-3.03405, 69.3867, 29.8752, 0.66", "-2.82283, 69.9897, 29.9761, 0.15", "-2.65147, 70.6037, 30.0823, 0.15", "-2.57376, 70.939, 30.1395, 0.52", "-2.44246, 71.5455, 30.2277, 1.55", "-2.33358, 72.0254, 30.3102, 1.77", "-2.06239, 73.1644, 30.524, 0.74", "-1.8243, 74.0891, 30.7334, 0.15", "-1.67325, 74.6473, 30.8749, 0.15", "-1.52868, 75.1903, 31.0396, 0.22", "-1.38427, 75.8273, 31.2765, 0.22", "-1.25745, 76.4629, 31.5524, 0.37", "-1.13191, 77.1874, 31.9055, 0.52", "-1.06133, 77.6368, 32.1471, 1.47", "-0.95904, 78.2461, 32.5252, 2.06", "-0.72837, 79.4788, 33.3399, 0.29", "-0.621227, 80.0027, 33.688, 0.29", "-0.430286, 80.8632, 34.2753, 0.74", "-0.247642, 81.634, 34.7732, 0.22", "0.0571319, 82.7593, 35.4535, 0.29", "0.193869, 83.2162, 35.7033, 0.52", "0.294834, 83.5407, 35.8576, 0.22", "0.484142, 84.3235, 36.1342, 0.22", "0.621301, 85.0714, 36.3389, 0.22", "0.750064, 85.9918, 36.5317, 0.22", "0.785231, 86.397, 36.5946, 0.44", "0.821575, 87.1284, 36.7068, 1.25", "0.867065, 88.8074, 36.9687, 0.07", "0.869316, 89.7392, 37.1065, 0.07", "0.858638, 90.147, 37.1683, 0.22", "0.828272, 90.7534, 37.254, 0.96", "0.78511, 91.3668, 37.3431, 0.29", "0.699173, 92.3778, 37.4847, 0.07", "0.645196, 92.9806, 37.577, 0.07", "0.606553, 93.324, 37.6108, 0.15", "0.529108, 93.9399, 37.6468, 1.25", "0.251807, 96.0988, 37.6998, 0.15", "0.20655, 96.4367, 37.6997, 0.44", "0.113509, 97.0954, 37.6817, 0.96", "-0.0414751, 98.2114, 37.6572, 1.18", "-0.244168, 99.6898, 37.6319, 0.07", "-0.312073, 100.196, 37.6228, 0.22", "-0.396747, 100.956, 37.6175, 0.88", "-0.45622, 101.57, 37.6268, 0.44", "-0.510945, 102.333, 37.6553, 0.15", "-0.547047, 103.005, 37.7064, 0.15", "-0.571213, 103.424, 37.7358, 0.37", "-0.653399, 104.492, 37.7958, 1.55", "-0.804325, 106.211, 37.8734, 0.07", "-0.883207, 106.983, 37.9001, 0.07", "-0.947714, 107.54, 37.9071, 0.37", "-0.999409, 107.962, 37.9177, 0.37", "-1.13028, 108.941, 37.9435, 0.07", "-1.1694, 109.189, 37.9501, 0.29", "-1.28288, 109.864, 37.9823, 1.18", "-1.53203, 111.411, 38.0439, 0.07", "-1.66542, 112.423, 38.057, 0.07", "-1.6998, 112.765, 38.052, 0.07", "-1.73639, 113.196, 38.0252, 0.37", "-1.78461, 113.803, 37.967, 0.96", "-1.85744, 114.679, 37.8422, 0.07", "-1.94014, 115.467, 37.6641, 0.29", "-2.10893, 116.693, 37.2772, 0.07", "-2.29342, 117.903, 36.8329, 0.07", "-2.32129, 118.068, 36.7594, 0.44", "-2.46792, 118.872, 36.285, 1.18", "-2.64946, 119.811, 35.5427, 0.15", "-2.75466, 120.312, 35.0187, 0.15", "-2.81836, 120.574, 34.6438, 0.59", "-2.88836, 120.827, 34.1721, 0.59", "-3.06556, 121.362, 33.0423, 0.22", "-3.15801, 121.621, 32.4092, 0.22", "-3.22669, 121.84, 31.8726, 0.22", "-3.27753, 122.007, 31.4721, 0.22", "-3.39268, 122.347, 30.6853, 0.37", "-3.50991, 122.646, 30.0341, 1.03", "-3.66297, 123.012, 29.2872, 0.74", "-3.80117, 123.383, 28.5171, 0.22", "-3.91206, 123.845, 27.6003, 0.22", "-3.93267, 123.973, 27.3539, 0.22", "-3.97141, 124.254, 26.7949, 0.22", "-4.00425, 124.464, 26.3513, 0.22", "-4.07195, 124.788, 25.6729, 0.22", "-4.15241, 125.084, 25.035, 0.88", "-4.3018, 125.594, 23.905, 0.15", "-4.43518, 126.013, 22.9424, 0.15", "-4.55861, 126.405, 22.0846, 0.15", "-4.70893, 126.869, 21.1325, 0.74", "-4.89299, 127.426, 20.0188, 0.44", "-5.02974, 127.859, 19.1616, 0.44", "-5.11554, 128.22, 18.491, 0.44", "-5.20376, 128.611, 17.8139, 0.74", "-5.35384, 129.141, 16.9564, 0.22", "-5.47168, 129.439, 16.5, 0.22", "-5.61056, 129.703, 16.1189, 0.44", "-5.82678, 130.043, 15.6466, 0.44", "-6.14567, 130.493, 15.0359, 0.22", "-6.5106, 131.01, 14.4131, 0.29", "-6.87212, 131.574, 13.8735, 0.22", "-7.16861, 132.113, 13.4682, 0.22", "-7.32085, 132.454, 13.2646, 0.66", "-7.57546, 133.253, 12.9162, 0.96", "-7.84832, 134.584, 12.5061, 0.22", "-7.95687, 135.377, 12.3501, 0.37", "-8.01728, 135.944, 12.3097, 0.07", "-8.06577, 136.547, 12.3465, 0.07", "-8.1006, 137.161, 12.4393, 0.07", "-8.11746, 137.602, 12.548, 0.29", "-8.13283, 138.078, 12.6979, 0.66", "-8.15359, 138.736, 12.9283, 0.88", "-8.18685, 139.862, 13.3443, 0.15", "-8.19915, 140.44, 13.5499, 0.15", "-8.17945, 140.847, 13.691, 0.22", "-8.11887, 141.224, 13.8076, 0.22", "-7.93358, 141.88, 13.9858, 0.22", "-7.71976, 142.461, 14.1257, 0.22", "-7.491, 142.991, 14.2378, 0.81", "-6.92189, 144.25, 14.4962, 0.22", "-6.42951, 145.241, 14.6981, 0.22", "-5.92461, 146.177, 14.8927, 0.22", "-5.72434, 146.523, 14.9662, 0.37", "-5.40094, 147.04, 15.0893, 0.96", "-4.57479, 148.294, 15.4525, 0.15", "-4.08719, 149.006, 15.7006, 0.15", "-3.859, 149.345, 15.8426, 0.15", "-3.60702, 149.724, 16.0195, 0.15", "-3.18695, 150.323, 16.3263, 0.15", "-2.93899, 150.645, 16.5214, 0.29", "-2.54233, 151.114, 16.8559, 0.66", "-2.36181, 151.321, 17.0105, 0.66", "-1.71363, 152.067, 17.5495, 0.15", "-1.36365, 152.481, 17.824, 0.22", "-0.665357, 153.305, 18.3649, 0.15", "-0.239456, 153.794, 18.6678, 0.15", "0.337957, 154.439, 19.0625, 0.15", "0.667003, 154.806, 19.2734, 0.29", "1.27077, 155.482, 19.6369, 0.15", "1.61003, 155.882, 19.8261, 0.15", "1.94601, 156.303, 19.9795, 0.37", "2.48297, 157.013, 20.1964, 0.15", "2.82478, 157.486, 20.3551, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-193.582, -441.239, -16.836, 0.07", "-193.21, -440.886, -16.7977, 0.07", "-192.661, -440.314, -16.8158, 0.29", "-192.222, -439.842, -16.8802, 0.07", "-191.774, -439.356, -17.0274, 0.07", "-191.269, -438.81, -17.2814, 0.15", "-190.908, -438.415, -17.4964, 0.15", "-190.668, -438.15, -17.6892, 0.15", "-190.357, -437.78, -18.0416, 0.29", "-190.002, -437.34, -18.5439, 0.07", "-189.769, -437.042, -18.9245, 0.29", "-189.553, -436.808, -19.2542, 0.44", "-189.449, -436.718, -19.3976, 0.44", "-189.024, -436.397, -19.9947, 0.15", "-188.715, -436.161, -20.4514, 0.15", "-188.593, -436.07, -20.6242, 0.15", "-188.126, -435.731, -21.3068, 0.15", "-187.924, -435.591, -21.6294, 0.37", "-187.423, -435.236, -22.5121, 0.22", "-187.179, -435.06, -22.9595, 0.22", "-187.046, -434.952, -23.2161, 0.22", "-186.765, -434.685, -23.7772, 0.15", "-186.451, -434.365, -24.3864, 0.15", "-186.152, -434.093, -24.8904, 0.15", "-185.935, -433.928, -25.1807, 0.37", "-185.538, -433.68, -25.5572, 0.44", "-185.121, -433.419, -25.8672, 0.22", "-184.658, -433.139, -26.1323, 0.37", "-184.362, -432.968, -26.2571, 0.37", "-183.707, -432.616, -26.4676, 0.22", "-182.81, -432.161, -26.7221, 0.22", "-181.901, -431.779, -26.9175, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-193.582, -441.239, -16.836, 0.15", "-193.923, -442.094, -16.953, 0.15", "-194.248, -443.075, -16.9867, 0.29", "-194.567, -444.064, -16.9624, 0.15", "-194.926, -444.993, -16.9187, 0.15", "-195.243, -445.754, -16.877, 0.15", "-195.43, -446.187, -16.8532, 0.15", "-195.85, -447.111, -16.7638, 0.29", "-196.287, -448.129, -16.6601, 0.81", "-196.732, -449.439, -16.5318, 0.15", "-196.993, -450.473, -16.4368, 0.22", "-197.163, -451.528, -16.3441, 0.07", "-197.197, -452.637, -16.2085, 0.07", "-197.091, -453.711, -16.0078, 0.37", "-196.686, -455.259, -15.5805, 0.15", "-196.338, -456.143, -15.259, 0.15", "-196.045, -456.768, -14.9903, 0.37", "-195.293, -458.291, -14.2421, 0.15", "-194.866, -459.215, -13.7634, 0.15", "-194.607, -459.929, -13.3907, 0.15", "-194.535, -460.299, -13.2135, 0.15", "-194.472, -461.246, -12.8299, 0.37", "-194.523, -462.397, -12.4743, 0.07", "-194.688, -463.306, -12.3031, 0.07", "-194.905, -464.098, -12.2077, 0.22", "-195.313, -465.37, -12.071, 0.07", "-195.49, -465.875, -12.0278, 0.07", "-195.876, -466.832, -11.9615, 0.52", "-196.622, -468.447, -11.9116, 0.07", "-196.957, -469.085, -11.8963, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.57044, -18.4993, -23.1468, 0.44", "7.74345, -18.7979, -23.7373, 0.44", "8.34047, -19.8221, -26.087, 0.44", "8.66411, -20.316, -27.4469, 0.44", "9.13905, -20.9018, -29.3073, 0.44", "9.36244, -21.1452, -30.1617, 0.44", "9.5728, -21.3888, -31.0228, 0.44", "9.71695, -21.5962, -31.7638, 0.44", "9.849, -21.8151, -32.5869, 0.44", "10.0269, -22.1238, -33.764, 0.44", "10.3001, -22.5518, -35.3587, 0.44", "10.5799, -22.9281, -36.6354, 0.44", "11.0141, -23.4747, -38.3447, 0.44", "11.5916, -24.1593, -40.3694, 0.44", "11.8106, -24.3804, -41.0204, 0.29", "12.4457, -24.9113, -42.7114, 0.22", "12.949, -25.2466, -43.8717, 0.22", "13.3518, -25.4659, -44.7137, 0.22", "13.5832, -25.584, -45.1659, 0.22", "13.9896, -25.8341, -45.9331, 0.29", "14.6552, -26.2665, -47.1499, 0.29", "15.0754, -26.5479, -47.8857, 0.29", "15.5431, -26.7886, -48.6953, 0.29", "15.8102, -26.8638, -49.1026, 0.29", "16.273, -26.9427, -49.6908, 0.29", "17.0461, -27.0792, -50.5368, 0.29", "18.0775, -27.2864, -51.4492, 0.22", "19.5265, -27.6387, -52.6052, 0.37", "20.3313, -27.8785, -53.2437, 0.37", "20.9628, -28.1151, -53.8272, 0.22", "21.8577, -28.5524, -54.8191, 0.22", "22.342, -28.8906, -55.4698, 0.22", "22.7637, -29.3056, -56.1373, 0.29", "23.2266, -29.9295, -57.0363, 0.29", "23.5857, -30.6746, -58.1424, 0.29", "23.6779, -31.1253, -58.8721, 0.29", "23.677, -31.4937, -59.5274, 0.29", "23.6304, -31.79, -60.0827, 0.22", "23.4773, -32.323, -61.1065, 0.22", "23.2011, -33.1091, -62.4962, 0.22", "23.1332, -33.4659, -63.1034, 0.22", "23.2053, -33.9562, -63.8992, 0.22", "23.4252, -34.445, -64.6744, 0.29", "23.6065, -34.7474, -65.1288, 0.29", "23.7714, -35.0193, -65.4873, 0.29", "24.1109, -35.7831, -66.3481, 0.29", "24.3674, -36.724, -67.3236, 0.22", "24.4908, -37.5505, -68.139, 0.22", "24.5727, -38.3503, -68.9557, 0.22", "24.679, -39.0171, -69.7208, 0.22", "24.8082, -40.0624, -70.973, 0.22", "24.8255, -40.4452, -71.4411, 0.22", "24.8223, -40.8697, -72.0469, 0.22", "24.9234, -41.4751, -73.1256, 0.44", "25.48, -41.883, -74.5594, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.57044, -18.4993, -23.1468, 0.52", "8.46723, -19.1589, -23.5286, 0.52", "9.1152, -19.7487, -23.8889, 0.52", "9.59621, -20.2847, -24.2251, 0.59", "9.86236, -20.6447, -24.4389, 0.96", "10.0526, -20.9713, -24.6159, 0.96", "10.466, -21.9101, -25.0603, 0.81", "10.6496, -22.6963, -25.3739, 0.52", "10.7549, -23.4962, -25.6402, 0.52", "10.8159, -24.1614, -25.861, 0.74", "10.8995, -25.0083, -26.1589, 0.74", "11.0165, -25.9205, -26.5348, 0.66", "11.1201, -26.4809, -26.7986, 0.52", "11.3165, -27.1017, -27.1329, 0.37", "11.5854, -27.697, -27.5411, 0.66", "11.8657, -28.2191, -27.9619, 0.88", "12.152, -28.735, -28.4261, 0.88", "12.3324, -29.1151, -28.7887, 0.66", "12.5148, -29.6622, -29.2905, 0.52", "12.6433, -30.2496, -29.7729, 0.52", "12.7479, -30.8633, -30.2066, 0.59", "12.8267, -31.4518, -30.5976, 0.59", "12.9007, -32.1431, -31.0646, 0.59", "12.9453, -32.6743, -31.4533, 0.59", "12.9661, -33.1004, -31.7675, 0.66", "12.9792, -33.7415, -32.2098, 0.59", "12.9888, -34.4041, -32.6407, 0.52", "12.9991, -35.1623, -33.0741, 0.81", "12.9977, -35.9561, -33.4458, 1.03", "12.9628, -36.8037, -33.7449, 0.59", "12.8964, -37.6809, -33.943, 0.44", "12.8532, -38.1949, -33.9851, 0.59", "12.8073, -38.8531, -33.9704, 0.59", "12.7811, -39.465, -33.8887, 0.52", "12.7798, -40.2394, -33.7037, 0.52", "12.8183, -40.844, -33.51, 0.66", "12.8608, -41.2272, -33.352, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.36485, -51.2455, -26.4016, 0.59", "-7.33514, -51.5134, -26.1214, 0.59", "-7.23135, -52.1914, -25.4672, 0.52", "-7.1761, -52.5655, -25.1488, 0.52", "-7.12914, -52.9076, -24.894, 0.52", "-7.07172, -53.2947, -24.6346, 0.52", "-7.00621, -53.7981, -24.3329, 0.66", "-6.94894, -54.2252, -24.1365, 0.81", "-6.875, -54.8338, -23.9508, 0.52", "-6.82, -55.2342, -23.8683, 0.52", "-6.74085, -55.7189, -23.8173, 0.74", "-6.65017, -56.1934, -23.82, 0.44", "-6.54638, -56.7169, -23.8887, 0.59", "-6.4549, -57.1458, -23.9706, 0.81", "-6.35558, -57.5729, -24.0519, 0.66", "-6.22761, -58.1466, -24.152, 0.59", "-6.12293, -58.7041, -24.2429, 0.52", "-6.00962, -59.5032, -24.3487, 0.44", "-5.96553, -60.1378, -24.3976, 0.52", "-5.96906, -60.7076, -24.4105, 0.44", "-5.99509, -61.0994, -24.4052, 0.44", "-6.03805, -61.5603, -24.3913, 0.37", "-6.06818, -62.1123, -24.3721, 0.22", "-6.05939, -62.5354, -24.3675, 0.59", "-6.01798, -62.9022, -24.3857, 0.88", "-5.90111, -63.4866, -24.4417, 0.59", "-5.76987, -63.9791, -24.4899, 0.44", "-5.60995, -64.4989, -24.5263, 0.59", "-5.48129, -64.8729, -24.5346, 0.52", "-5.31792, -65.3157, -24.5315, 0.29", "-5.13521, -65.7657, -24.5038, 0.29", "-4.85324, -66.4181, -24.4064, 0.37", "-4.59224, -67.0115, -24.2553, 0.29", "-4.40876, -67.427, -24.106, 0.29", "-4.2859, -67.6892, -23.9894, 0.52", "-4.12382, -68.0126, -23.8257, 0.37", "-3.88697, -68.4737, -23.5857, 0.29", "-3.63891, -69.018, -23.3058, 0.37", "-3.46194, -69.5118, -23.0681, 0.66", "-3.33551, -69.9687, -22.8639, 1.03", "-3.16529, -70.6861, -22.553, 0.81", "-3.04292, -71.2551, -22.3195, 1.25", "-2.89546, -71.9391, -22.0715, 0.96", "-2.75293, -72.6103, -21.8614, 0.37", "-2.62697, -73.2792, -21.6893, 0.44", "-2.54453, -73.8307, -21.5715, 0.44", "-2.50047, -74.2669, -21.5033, 0.59", "-2.46978, -74.9334, -21.4401, 0.96", "-2.49318, -75.382, -21.4428, 0.37", "-2.59706, -75.9151, -21.4972, 0.22", "-2.71083, -76.2886, -21.559, 0.22", "-2.82188, -76.6058, -21.6235, 0.66", "-2.9743, -77.061, -21.7268, 0.74", "-3.1338, -77.6242, -21.8589, 0.37", "-3.22751, -78.1976, -21.9953, 0.44", "-3.23205, -78.6618, -22.103, 0.37", "-3.17763, -79.0928, -22.2078, 0.22", "-3.07646, -79.4668, -22.3087, 0.22", "-2.98094, -79.699, -22.3774, 0.59", "-2.82487, -80.0075, -22.4702, 0.88", "-2.61637, -80.4313, -22.5839, 0.29", "-2.52394, -80.656, -22.6334, 0.22", "-2.39612, -81.0787, -22.6928, 0.52", "-2.2807, -81.6329, -22.7344, 0.22", "-2.23881, -81.9089, -22.745, 0.22", "-2.16861, -82.4257, -22.7601, 0.29", "-2.11717, -82.7102, -22.7672, 0.29", "-2.01469, -83.1456, -22.7671, 0.22", "-1.95738, -83.3468, -22.7632, 0.74", "-1.85779, -83.648, -22.7591, 0.96", "-1.68927, -84.1311, -22.7462, 0.59", "-1.47467, -84.7086, -22.7121, 0.15", "-1.33778, -85.0846, -22.6621, 0.15", "-1.26859, -85.3011, -22.6219, 0.59", "-1.12122, -85.8657, -22.4842, 0.96", "-0.997255, -86.5205, -22.2877, 0.22", "-0.959599, -86.9027, -22.151, 0.15", "-0.951739, -87.4958, -21.9166, 0.15", "-0.952951, -87.734, -21.8139, 0.66", "-0.95291, -87.9301, -21.7168, 0.96", "-0.953311, -88.1593, -21.5948, 1.11", "-0.972848, -88.6345, -21.3541, 0.52", "-0.999671, -89.1316, -21.1127, 0.15", "-1.00813, -89.6218, -20.8762, 0.15", "-0.997485, -89.897, -20.7368, 0.15", "-0.976392, -90.1529, -20.6071, 0.59", "-0.918921, -90.6583, -20.3526, 0.96", "-0.824736, -91.3729, -20.0077, 0.22", "-0.736508, -91.898, -19.7511, 0.22", "-0.654639, -92.286, -19.5495, 0.22", "-0.575604, -92.5789, -19.3876, 0.59", "-0.421024, -92.9993, -19.1232, 1.11", "-0.250744, -93.3269, -18.8837, 0.44", "0.0449515, -93.7583, -18.5079, 0.22", "0.271095, -94.0346, -18.2375, 0.22", "0.344354, -94.1109, -18.158, 0.22", "0.493198, -94.2558, -17.9963, 0.22", "0.72162, -94.4924, -17.7295, 0.22", "0.885352, -94.6967, -17.4977, 0.22", "0.975923, -94.8497, -17.3154, 0.44", "1.10366, -95.1297, -16.9771, 0.81", "1.26022, -95.5283, -16.5005, 0.81", "1.39142, -95.9007, -16.0684, 0.66", "1.50018, -96.2204, -15.7098, 0.66", "1.71441, -96.8849, -14.9768, 0.22", "1.83706, -97.2857, -14.5332, 0.22", "1.90131, -97.5095, -14.2886, 0.66", "1.9639, -97.7648, -14.0349, 0.74", "2.08767, -98.3616, -13.5306, 0.22", "2.17943, -98.8719, -13.168, 0.15", "2.25659, -99.3914, -12.8579, 0.15", "2.33109, -99.9482, -12.5498, 0.15", "2.38277, -100.435, -12.3051, 1.18", "2.42806, -101.021, -12.036, 0.07", "2.44822, -101.58, -11.8446, 0.07", "2.44954, -101.952, -11.7597, 0.07", "2.43938, -102.166, -11.7161, 0.07", "2.40288, -102.581, -11.6047, 0.96", "2.3111, -103.351, -11.3335, 0.07", "2.21994, -103.944, -11.1085, 0.07", "2.15435, -104.325, -10.9569, 0.66", "1.93207, -105.539, -10.4559, 0.07", "1.82448, -106.173, -10.1804, 0.07", "1.73099, -106.783, -9.90129, 0.07", "1.66161, -107.311, -9.62649, 0.07", "1.6089, -107.861, -9.28314, 0.07", "1.57863, -108.223, -9.03729, 0.07", "1.53493, -108.745, -8.64556, 0.07", "1.47126, -109.357, -8.14659, 0.15", "1.36458, -110.363, -7.2449, 0.07", "1.27967, -111.087, -6.53611, 0.07", "1.23263, -111.455, -6.15522, 0.07", "1.16934, -111.935, -5.61774, 0.07", "1.12809, -112.167, -5.33521, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.36485, -51.2455, -26.4016, 0.66", "-7.43601, -52.2352, -27.0174, 0.66", "-7.51623, -53.3213, -27.5777, 0.66", "-7.54575, -54.0956, -27.9244, 0.66", "-7.54892, -54.6666, -28.1599, 0.66", "-7.51713, -55.8045, -28.6041, 0.59", "-7.43054, -56.8353, -28.9667, 0.66", "-7.28982, -57.6789, -29.1869, 0.88", "-6.98806, -58.6858, -29.3399, 0.59", "-6.48019, -59.7741, -29.3696, 0.59", "-6.06131, -60.4103, -29.3074, 0.59", "-5.31541, -61.281, -29.1006, 0.81", "-4.60011, -62.0484, -28.8352, 0.81", "-3.83598, -62.8689, -28.5064, 0.88", "-2.92926, -63.9177, -28.0482, 0.88", "-2.18643, -64.9239, -27.6251, 0.74", "-1.55953, -66.0779, -27.2358, 0.74", "-1.12225, -67.4, -26.9588, 0.74", "-0.992072, -68.1682, -26.8641, 0.81", "-0.927298, -69.1474, -26.8155, 0.81", "-0.916485, -70.4641, -26.8527, 0.74", "-0.936271, -71.8123, -27.0306, 0.74", "-0.921321, -72.9879, -27.2974, 0.74", "-0.843584, -73.8948, -27.5704, 0.81", "-0.702463, -74.6897, -27.8342, 0.81", "-0.348784, -75.9435, -28.2811, 0.59", "0.22673, -77.409, -28.8014, 0.81", "0.710024, -78.3844, -29.1405, 0.66", "1.35309, -79.549, -29.5245, 0.59", "1.83002, -80.4039, -29.8126, 0.59", "2.18784, -81.0488, -30.0108, 0.52", "2.74134, -82.1006, -30.3129, 0.88", "3.20537, -83.1203, -30.5904, 0.88", "3.65653, -84.3621, -30.9731, 0.81", "4.00005, -85.6215, -31.4008, 0.81", "4.1245, -86.2614, -31.6289, 0.88", "4.29149, -87.5776, -32.1084, 0.81", "4.38187, -88.7816, -32.5227, 0.81", "4.41774, -89.7463, -32.8025, 0.96", "4.43536, -91.0482, -33.0723, 0.74", "4.42736, -91.8341, -33.1546, 0.74", "4.38751, -92.9326, -33.1581, 0.44", "4.35122, -93.8101, -33.0567, 0.66", "4.28178, -94.8778, -32.8557, 0.59", "4.15887, -95.7686, -32.6578, 0.59", "3.96486, -96.5588, -32.4416, 0.96", "3.51038, -97.8408, -32.0334, 0.52", "3.06414, -98.8843, -31.6926, 0.52", "2.74874, -99.5778, -31.5101, 0.52", "2.33044, -100.541, -31.309, 0.52", "1.9494, -101.576, -31.1791, 0.59", "1.60763, -102.907, -31.1192, 0.52", "1.47357, -103.973, -31.1697, 0.66", "1.45481, -105.234, -31.3312, 0.74", "1.51759, -106.2, -31.5044, 1.03", "1.64863, -107.236, -31.7635, 1.03", "1.85297, -108.455, -32.1412, 0.96", "2.06048, -109.441, -32.5141, 0.66", "2.32989, -110.575, -32.963, 0.52", "2.63992, -111.781, -33.4848, 0.59", "2.90708, -112.809, -33.9956, 0.44", "3.07646, -113.462, -34.3639, 0.88", "3.34344, -114.483, -35.0331, 0.59", "3.5808, -115.289, -35.6394, 0.59", "3.89143, -116.184, -36.4218, 0.66", "4.05628, -116.703, -36.9177, 0.66", "4.17511, -117.237, -37.4208, 0.96", "4.2463, -117.874, -37.9787, 0.96", "4.25907, -118.878, -38.7133, 0.44", "4.21076, -119.758, -39.2349, 0.44", "4.11199, -120.855, -39.7261, 0.44", "4.03245, -121.678, -39.9906, 0.88", "3.91148, -122.989, -40.2496, 0.66", "3.81355, -124.356, -40.3737, 0.52", "3.80601, -125.504, -40.3881, 0.74", "3.89034, -126.261, -40.3464, 0.74", "4.10087, -127.049, -40.2563, 0.74", "4.48921, -127.955, -40.0903, 0.59", "4.87162, -128.611, -39.9377, 0.81", "5.66463, -129.818, -39.6379, 0.88", "6.39026, -130.962, -39.3702, 0.59", "6.91352, -131.914, -39.1769, 0.66", "7.43914, -133.113, -38.985, 0.66", "7.59576, -133.624, -38.9262, 0.66", "7.82514, -134.829, -38.8459, 0.52", "7.97129, -136.179, -38.8312, 0.52", "8.10125, -137.437, -38.9156, 0.74", "8.22606, -138.281, -39.0498, 0.96", "8.5221, -139.552, -39.3502, 1.18", "8.87769, -140.602, -39.6392, 0.66", "9.2007, -141.349, -39.8716, 0.66", "9.73918, -142.538, -40.2586, 0.59", "10.222, -143.753, -40.6563, 0.81", "10.6035, -145.077, -41.0822, 0.66", "10.8042, -146.384, -41.4741, 0.66", "10.8142, -147.373, -41.7411, 0.66", "10.6638, -148.65, -42.0439, 0.59", "10.3309, -149.973, -42.306, 0.52", "9.90128, -151.279, -42.5165, 0.44", "9.64543, -152.025, -42.6156, 0.44", "9.46969, -152.619, -42.6843, 0.44", "9.37614, -153.09, -42.7362, 0.44", "9.28957, -154.063, -42.8169, 0.44", "9.27824, -155.395, -42.9023, 0.52", "9.33818, -156.81, -42.9582, 0.52", "9.40375, -157.942, -42.9938, 0.59", "9.45627, -158.931, -42.9993, 0.44", "9.48909, -159.833, -42.9724, 0.44", "9.51623, -161.103, -42.8729, 0.66", "9.51527, -162.108, -42.7385, 0.66", "9.51716, -163.193, -42.5375, 0.74", "9.58037, -164.61, -42.1943, 0.52", "9.70636, -165.591, -41.8981, 0.52", "9.96994, -166.598, -41.5494, 0.66", "10.3732, -167.544, -41.2116, 0.59", "10.8469, -168.336, -40.9792, 0.44", "11.4463, -169.131, -40.8339, 0.44", "12.1854, -170.029, -40.7956, 0.44", "12.8899, -170.901, -40.8361, 0.52", "13.7086, -172.059, -40.9639, 0.88", "14.1957, -172.998, -41.084, 0.96", "14.5068, -174.032, -41.1852, 0.74", "14.6742, -175.223, -41.2386, 0.44", "14.6938, -175.896, -41.2395, 0.74", "14.6822, -176.734, -41.1826, 1.03", "14.6792, -177.785, -41.0338, 0.44", "14.7387, -178.811, -40.8866, 0.37", "14.8853, -179.471, -40.8081, 0.37", "15.1206, -180.02, -40.7811, 0.74", "15.6104, -180.859, -40.7505, 1.11", "16.099, -181.553, -40.7209, 0.74", "16.7956, -182.477, -40.6744, 0.59", "17.6729, -183.715, -40.5759, 0.52", "18.1886, -184.584, -40.4531, 0.29", "18.5998, -185.421, -40.2818, 0.29", "18.8293, -186.01, -40.1453, 0.81", "19.1235, -186.907, -39.9657, 1.11", "19.5011, -188.256, -39.7888, 0.52", "19.8415, -189.5, -39.7511, 0.44", "20.116, -190.336, -39.7961, 0.88", "20.5219, -191.313, -39.9554, 0.88", "21.1414, -192.47, -40.2562, 0.66", "21.7161, -193.297, -40.5391, 0.37", "22.4091, -194.107, -40.8816, 0.29", "22.8819, -194.616, -41.1157, 0.29", "23.2088, -194.974, -41.265, 0.74", "23.6307, -195.486, -41.42, 1.03", "24.1523, -196.309, -41.5547, 0.29", "24.5071, -197.159, -41.6562, 0.22", "24.6452, -197.74, -41.746, 0.22", "24.722, -198.216, -41.8422, 0.44", "24.8561, -199.042, -42.041, 0.66", "25.0217, -199.852, -42.276, 0.29", "25.216, -200.501, -42.5083, 0.29", "25.4453, -201.013, -42.6885, 0.29", "25.8429, -201.691, -42.9016, 0.66", "26.3493, -202.485, -43.0853, 0.37", "26.7306, -203.065, -43.1811, 0.44", "27.1265, -203.713, -43.2269, 0.37", "27.5016, -204.406, -43.1892, 0.37", "27.8492, -205.111, -43.0632, 0.74", "28.3222, -206.098, -42.7932, 1.11", "28.6366, -206.689, -42.5809, 1.11", "29.2191, -207.601, -42.1598, 0.66", "29.9708, -208.569, -41.6097, 0.44", "30.6525, -209.318, -41.1369, 0.44", "31.3368, -209.997, -40.6786, 0.29", "32.0469, -210.677, -40.2177, 0.29", "32.5908, -211.249, -39.8718, 0.29", "32.8878, -211.636, -39.7248, 0.29", "33.1581, -212.289, -39.6748, 0.59", "33.2793, -212.978, -39.742, 0.96", "33.3546, -213.829, -39.8624, 0.96", "33.4338, -214.769, -39.9959, 0.44", "33.5982, -216.034, -40.1737, 0.29", "33.772, -216.852, -40.2717, 0.29", "34.0288, -217.678, -40.342, 0.66", "34.3749, -218.535, -40.4046, 0.44", "34.7257, -219.34, -40.4658, 0.29", "35.0052, -219.992, -40.5351, 0.44", "35.2966, -220.691, -40.6109, 1.25", "35.5808, -221.394, -40.7185, 1.25", "35.958, -222.333, -40.8827, 1.03", "36.3689, -223.396, -41.0923, 0.52", "36.7644, -224.466, -41.2918, 0.29", "37.1117, -225.421, -41.4443, 0.29", "37.3067, -225.975, -41.5122, 0.29", "37.5364, -226.674, -41.5708, 0.37", "37.6641, -227.199, -41.5943, 0.29", "37.723, -227.711, -41.6243, 0.29", "37.7058, -228.187, -41.6885, 0.52", "37.6074, -228.934, -41.8609, 1.18", "37.5116, -229.558, -42.0429, 1.18", "37.3504, -230.823, -42.507, 0.81", "37.324, -231.706, -42.9346, 0.29", "37.3955, -232.283, -43.2846, 0.29", "37.5181, -232.688, -43.5664, 0.52", "37.7863, -233.237, -43.9629, 0.88", "38.204, -233.931, -44.409, 0.29", "38.7097, -234.687, -44.7664, 0.22", "39.0668, -235.271, -44.8855, 0.22", "39.3207, -235.771, -44.8914, 0.44", "39.602, -236.433, -44.7855, 0.59", "39.9561, -237.472, -44.5042, 0.29", "40.1853, -238.283, -44.2354, 0.81", "40.4053, -239.155, -43.9381, 0.81", "40.5489, -239.729, -43.7705, 0.81", "40.8471, -240.86, -43.5214, 0.29", "41.0492, -241.652, -43.4278, 0.29", "41.1964, -242.263, -43.3992, 0.88", "41.3546, -243.099, -43.4212, 1.18", "41.4979, -244.09, -43.4727, 0.52", "41.5811, -244.713, -43.5089, 0.37", "41.727, -245.632, -43.5862, 0.22", "41.8639, -246.219, -43.6277, 0.44", "42.1193, -246.993, -43.6772, 0.96", "42.5462, -247.978, -43.7763, 0.22", "42.8482, -248.544, -43.8633, 0.22", "43.2213, -249.186, -44.0022, 0.37", "43.5004, -249.68, -44.1389, 0.37", "43.8722, -250.466, -44.4229, 0.22", "44.1367, -251.198, -44.7201, 0.22", "44.3003, -251.852, -44.9894, 0.81", "44.4607, -252.712, -45.3137, 0.88", "44.6226, -253.664, -45.6258, 0.29", "44.8137, -254.609, -45.8748, 0.22", "45.0057, -255.367, -46.0314, 0.22", "45.2728, -256.204, -46.1635, 0.96", "45.572, -257.004, -46.3046, 0.81", "45.9373, -257.855, -46.4664, 0.37", "46.4355, -258.941, -46.6882, 0.22", "46.8224, -259.827, -46.8983, 0.22", "47.1867, -260.745, -47.1924, 0.22", "47.5013, -261.604, -47.5403, 0.22", "47.6253, -261.942, -47.6887, 0.59", "47.8588, -262.562, -47.9697, 1.03", "48.2351, -263.547, -48.412, 0.37", "48.5673, -264.383, -48.7348, 0.22", "48.7823, -264.919, -48.8606, 0.22", "49.1462, -265.874, -48.8757, 0.22", "49.3633, -266.503, -48.7934, 0.22", "49.525, -267.007, -48.6552, 0.22", "49.6986, -267.55, -48.4683, 0.37", "49.9585, -268.349, -48.1916, 0.22", "50.1506, -268.903, -48.0169, 0.22", "50.3137, -269.329, -47.9118, 0.74", "50.615, -269.937, -47.759, 1.03", "51.1202, -270.71, -47.5257, 0.66", "51.64, -271.37, -47.3068, 0.29", "52.0135, -271.807, -47.1502, 0.29", "52.2625, -272.094, -47.0545, 0.29", "52.673, -272.582, -46.9103, 0.29", "53.1928, -273.231, -46.7306, 0.22", "53.4269, -273.536, -46.6671, 0.22", "53.8981, -274.178, -46.578, 0.22", "54.3518, -274.816, -46.5065, 0.22", "54.9574, -275.693, -46.4071, 0.74", "55.4717, -276.486, -46.3491, 0.74", "55.9233, -277.223, -46.314, 0.74", "56.3515, -277.944, -46.2928, 0.37", "56.8759, -278.848, -46.2562, 0.37", "57.2437, -279.507, -46.2123, 0.37", "57.653, -280.249, -46.1539, 0.88", "58.1521, -281.107, -46.1328, 0.88", "58.5942, -281.819, -46.1052, 0.44", "59.1532, -282.699, -46.059, 0.22", "59.4416, -283.156, -46.0145, 0.22", "59.829, -283.795, -45.9104, 0.37", "60.4058, -284.821, -45.6259, 0.74", "60.8378, -285.85, -45.2035, 0.22", "60.9736, -286.62, -44.8243, 0.22", "60.9234, -287.058, -44.5943, 0.22", "60.7804, -287.553, -44.3361, 0.22", "60.6328, -287.944, -44.1684, 0.22", "60.3301, -288.812, -43.8377, 0.22", "60.1879, -289.378, -43.6975, 0.81", "60.1008, -290.146, -43.5609, 1.18", "60.1054, -290.697, -43.4972, 1.18", "60.2328, -291.816, -43.4286, 0.37", "60.4876, -293.158, -43.4254, 0.22", "60.7541, -294.199, -43.4776, 0.22", "60.9308, -294.835, -43.5378, 0.22", "61.1626, -295.701, -43.6859, 0.37", "61.3764, -296.57, -43.8834, 0.74", "61.5495, -297.451, -44.1435, 0.59", "61.6356, -298.24, -44.4494, 0.29", "61.6705, -299.001, -44.7501, 0.15", "61.6911, -299.878, -45.1012, 0.15", "61.7139, -300.361, -45.2757, 0.44", "61.8041, -301.212, -45.5198, 0.66", "62.0252, -302.08, -45.6678, 0.22", "62.444, -302.945, -45.623, 0.22", "62.8433, -303.521, -45.4436, 0.81", "63.4048, -304.24, -45.0779, 0.96", "63.8852, -304.851, -44.6985, 0.96", "64.341, -305.427, -44.2874, 0.44", "64.828, -306.081, -43.7931, 0.29", "65.1972, -306.687, -43.3916, 0.22", "65.4651, -307.313, -43.0928, 0.22", "65.6418, -307.981, -42.9176, 0.22", "65.708, -308.356, -42.8716, 0.22", "65.7433, -308.665, -42.8637, 0.74", "65.8029, -309.419, -42.9178, 1.03", "65.887, -310.517, -43.0649, 0.22", "65.9572, -311.265, -43.1873, 0.22", "66.0054, -311.658, -43.2567, 0.74", "66.0731, -312.128, -43.357, 0.96", "66.2008, -312.862, -43.4971, 0.29", "66.3184, -313.455, -43.5975, 0.22", "66.4165, -313.898, -43.6662, 0.22", "66.5592, -314.526, -43.7457, 0.37", "66.6892, -315.312, -43.8238, 0.22", "66.7931, -316.341, -43.8483, 0.22", "66.8178, -316.731, -43.8164, 0.22", "66.8264, -317.113, -43.7493, 0.44", "66.8291, -317.709, -43.6002, 0.88", "66.8278, -318.443, -43.3684, 0.44", "66.844, -319.447, -43.0162, 0.22", "66.8752, -320.194, -42.7843, 0.22", "66.9215, -320.949, -42.5764, 0.22", "66.9518, -321.512, -42.4467, 0.22", "66.9765, -321.928, -42.3762, 0.22", "67.0063, -322.336, -42.3453, 0.59", "67.0473, -323.105, -42.3464, 1.25", "67.0699, -324.144, -42.3866, 0.44", "67.0723, -325.073, -42.4391, 0.44", "67.0785, -325.762, -42.4621, 0.52", "67.1216, -326.914, -42.4197, 0.22", "67.1636, -327.762, -42.3383, 0.15", "67.2087, -328.535, -42.2154, 0.15", "67.225, -328.853, -42.1519, 0.37", "67.2522, -329.853, -41.9278, 1.03", "67.2454, -331.422, -41.5234, 0.22", "67.2173, -332.108, -41.3248, 0.22", "67.1973, -332.523, -41.2065, 0.22", "67.1679, -333.269, -40.9922, 0.22", "67.1155, -334.2, -40.7428, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-54.0617, 170.287, 43.8845, 0.07", "-54.6808, 171.346, 43.7752, 0.07", "-55.0823, 172.085, 43.7108, 0.66", "-55.4682, 172.838, 43.6541, 0.15", "-55.8236, 173.554, 43.6046, 0.59", "-56.1418, 174.189, 43.5595, 0.15", "-56.3926, 174.689, 43.524, 0.52", "-56.611, 175.205, 43.5028, 0.15", "-56.8273, 175.753, 43.4865, 0.29", "-57.0246, 176.276, 43.4743, 0.07", "-57.1853, 176.667, 43.4603, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-54.0617, 170.287, 43.8845, 0.22", "-54.4164, 171.034, 44.2454, 0.22", "-54.9855, 172.206, 44.5021, 0.07", "-55.2576, 172.766, 44.5166, 0.07", "-55.5811, 173.468, 44.4484, 0.29", "-55.9663, 174.356, 44.2952, 0.07", "-56.3426, 175.273, 44.1047, 0.07", "-56.5756, 175.88, 43.8889, 0.52", "-56.8912, 176.772, 43.4693, 0.07", "-57.0639, 177.316, 43.1887, 0.07", "-57.1839, 177.745, 42.9671, 0.07", "-57.2471, 178.018, 42.8415, 0.22", "-57.3717, 178.684, 42.5818, 0.44", "-57.5254, 179.74, 42.2271, 0.07", "-57.5884, 180.292, 42.0864, 0.07", "-57.6222, 180.595, 42.0323, 0.52", "-57.699, 181.26, 41.9396, 0.74", "-57.8135, 182.217, 41.8355, 0.07", "-57.897, 182.874, 41.7929, 0.07", "-57.996, 183.53, 41.7919, 0.37", "-58.1809, 184.573, 41.8405, 0.07", "-58.2881, 185.059, 41.8799, 0.22", "-58.3785, 185.371, 41.9256, 0.37", "-58.603, 185.968, 42.0753, 0.96", "-58.9948, 186.814, 42.3885, 0.15", "-59.1726, 187.137, 42.5512, 0.15", "-59.5515, 187.745, 42.9638, 0.59", "-60.1043, 188.536, 43.5865, 0.07", "-60.5283, 189.057, 44.019, 0.07", "-61.039, 189.602, 44.5068, 0.59", "-61.5959, 190.137, 44.9732, 0.15", "-62.1736, 190.673, 45.3949, 0.15", "-62.6295, 191.072, 45.6805, 0.88", "-63.4699, 191.789, 46.0832, 0.07", "-63.9801, 192.25, 46.2685, 0.07", "-64.6576, 192.922, 46.4505, 0.07", "-64.9869, 193.288, 46.5082, 0.81", "-65.3601, 193.731, 46.5652, 1.25", "-65.9536, 194.483, 46.6377, 0.22", "-66.5908, 195.33, 46.7127, 0.15", "-67.243, 196.213, 46.7717, 0.37", "-68.1536, 197.463, 46.8667, 0.07", "-68.6984, 198.22, 46.9282, 0.07", "-69.2663, 199.035, 46.9978, 0.96" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.8608, -41.2272, -33.352, 0.22", "13.7982, -41.1531, -34.0704, 0.22", "14.2513, -41.1796, -34.4129, 0.22", "14.5627, -41.2397, -34.6724, 0.22", "14.7867, -41.3163, -34.8751, 0.22", "15.0945, -41.4626, -35.1679, 0.29", "15.5313, -41.7465, -35.5987, 0.29", "15.7963, -42.0844, -35.8745, 0.29", "16.0125, -42.5317, -36.1119, 0.29", "16.1725, -42.9811, -36.2766, 0.29", "16.2537, -43.2583, -36.348, 0.52", "16.382, -43.7904, -36.461, 0.88", "16.546, -44.5876, -36.5783, 0.29", "16.7114, -45.4308, -36.6522, 0.29", "16.8487, -46.111, -36.6674, 0.52", "16.9417, -46.563, -36.6613, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "12.8608, -41.2272, -33.352, 0.15", "12.1903, -42.3501, -32.6875, 0.15", "11.8249, -42.9619, -32.3255, 0.15", "11.475, -43.5479, -31.9787, 0.15", "11.1948, -44.0171, -31.7011, 0.15", "10.8661, -44.5675, -31.3754, 0.15", "10.4472, -45.269, -30.9603, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "67.1155, -334.2, -40.7428, 0.22", "67.1123, -335.204, -39.641, 0.22", "67.1669, -335.571, -39.2996, 0.22", "67.2493, -335.961, -38.9823, 0.22", "67.448, -336.629, -38.5438, 0.22", "67.6794, -337.304, -38.1645, 0.22", "67.8133, -337.688, -37.9617, 0.37", "68.0347, -338.285, -37.7244, 1.03", "68.1177, -338.562, -37.6305, 1.03", "68.3747, -339.697, -37.2636, 0.37", "68.5017, -340.669, -36.9925, 0.29", "68.5268, -341.174, -36.8469, 0.29", "68.5117, -342.077, -36.5403, 0.59", "68.4626, -342.93, -36.2163, 0.22", "68.4269, -343.504, -35.9681, 0.52", "68.3732, -344.503, -35.4868, 0.96", "68.3667, -345.694, -34.8688, 0.22", "68.4053, -346.499, -34.4455, 0.22", "68.467, -347.035, -34.1369, 0.22", "68.5566, -347.535, -33.8338, 0.22", "68.6857, -348.06, -33.4969, 0.22", "68.8293, -348.438, -33.2051, 0.22", "69.2633, -349.194, -32.6946, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "67.1155, -334.2, -40.7428, 0.22", "67.9808, -334.241, -39.3417, 0.22", "68.5383, -334.245, -38.5647, 0.22", "68.8909, -334.22, -38.1865, 0.22", "69.4784, -334.166, -37.6144, 0.07", "69.901, -334.127, -37.2028, 0.07", "70.0902, -334.109, -37.0186, 0.07", "70.7857, -334.013, -36.4309, 0.88", "72.2333, -333.78, -35.3729, 0.15", "73.1238, -333.628, -34.7882, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-69.2663, 199.035, 46.9978, 0.07", "-70.021, 200.112, 47.8942, 0.07", "-70.4957, 200.787, 48.4856, 0.59", "-71.2957, 201.948, 49.5406, 0.15", "-71.8822, 202.795, 50.366, 0.74", "-72.4058, 203.543, 51.1383, 0.07", "-72.9145, 204.271, 51.8886, 0.07", "-73.2881, 204.768, 52.4731, 0.07", "-73.7235, 205.339, 53.1866, 0.74", "-74.3605, 206.24, 54.3299, 0.07", "-74.7378, 206.8, 55.0388, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-69.2663, 199.035, 46.9978, 0.07", "-70.1802, 199.489, 45.812, 0.07", "-70.8399, 199.923, 44.7564, 0.07", "-71.4172, 200.449, 43.5992, 0.07", "-71.601, 200.687, 43.1115, 0.29", "-71.9385, 201.204, 42.1043, 0.74", "-72.2792, 201.782, 41.0478, 0.29", "-72.5515, 202.373, 40.0844, 0.29", "-72.95, 203.18, 38.8754, 0.29", "-73.5137, 204.072, 37.626, 0.29", "-73.7601, 204.359, 37.2381, 0.74", "-74.3508, 204.833, 36.6429, 1.47", "-75.3955, 205.446, 35.9522, 0.52", "-76.5143, 205.961, 35.457, 0.22", "-77.8412, 206.48, 35.0386, 0.15", "-78.8033, 206.817, 34.7921, 0.29", "-80.262, 207.297, 34.4461, 0.07", "-80.8957, 207.493, 34.3126, 0.52", "-82.4482, 207.987, 34.0117, 0.07", "-83.5796, 208.39, 33.8422, 0.81" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.9417, -46.563, -36.6613, 0.22", "18.0676, -47.3422, -36.8232, 0.22", "18.9583, -47.9897, -37.0062, 0.22", "19.6918, -48.5303, -37.18, 0.22", "20.2906, -48.9459, -37.3609, 0.22", "21.4981, -49.7355, -37.7888, 0.22", "22.1426, -50.1283, -38.0285, 0.22", "22.7384, -50.461, -38.2882, 0.22", "23.3355, -50.7969, -38.5938, 0.22", "24.2244, -51.2956, -39.172, 0.37", "24.7284, -51.5815, -39.5497, 0.52", "25.1062, -51.8003, -39.8474, 0.29", "25.2311, -51.8827, -39.9539, 0.29", "25.7058, -52.3302, -40.4313, 0.22", "26.1083, -53.0535, -40.982, 0.22", "26.2332, -53.4347, -41.2063, 0.22", "26.3155, -53.8342, -41.4189, 0.29", "26.3622, -54.1912, -41.6026, 0.29", "26.4629, -55.1454, -42.0562, 0.15", "26.5082, -55.6372, -42.2353, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.9417, -46.563, -36.6613, 0.07", "16.9244, -46.9736, -35.8056, 0.07", "16.8976, -47.6087, -34.482, 0.07", "16.8749, -48.1458, -33.3628, 0.07", "16.864, -48.4052, -32.8222, 0.29", "16.84, -48.9727, -31.6395, 0.22", "16.8304, -49.2019, -31.1617, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "69.2633, -349.194, -32.6946, 0.07", "69.7303, -348.408, -32.0678, 0.07", "70.0991, -347.757, -31.5501, 0.07", "70.3857, -347.25, -31.1657, 0.22", "70.5214, -346.997, -30.9954, 0.22", "70.7817, -346.484, -30.6786, 0.22", "71.193, -345.671, -30.2468, 0.15", "71.4724, -345.09, -30.0327, 0.15", "71.8434, -344.334, -29.8881, 0.15", "72.11, -343.862, -29.8566, 0.37", "72.3834, -343.456, -29.8766, 0.59", "73.1573, -342.533, -30.0472, 0.15", "73.9339, -341.729, -30.3281, 0.15", "74.2586, -341.419, -30.4758, 0.15", "74.8491, -340.915, -30.7888, 0.29", "75.5226, -340.415, -31.1534, 0.15", "76.1442, -340.01, -31.4996, 0.52", "77.117, -339.439, -32.0556, 0.15", "77.6911, -339.121, -32.3697, 0.29", "78.4368, -338.696, -32.7582, 0.29", "79.1431, -338.281, -33.13, 0.15", "79.8636, -337.855, -33.519, 0.44", "80.4305, -337.5, -33.8498, 0.15", "80.8577, -337.213, -34.1292, 0.22", "81.7596, -336.528, -34.7832, 0.07", "82.239, -336.102, -35.1615, 0.59", "82.9281, -335.352, -35.8066, 0.07", "83.5572, -334.528, -36.5056, 0.37", "84.0032, -333.854, -37.0867, 0.15", "84.1692, -333.554, -37.3602, 0.44", "84.3355, -333.192, -37.7065, 0.44", "84.6879, -332.368, -38.4722, 0.07", "84.943, -331.783, -39.0103, 0.07", "85.2311, -331.186, -39.5929, 0.07", "85.5904, -330.534, -40.2565, 0.07", "85.8113, -330.186, -40.6338, 0.07", "86.2204, -329.629, -41.289, 0.37", "86.8743, -328.902, -42.2083, 0.07", "87.21, -328.58, -42.6312, 0.07", "87.8254, -328.03, -43.3554, 0.52", "88.631, -327.362, -44.2436, 0.07", "89.0436, -327.039, -44.6856, 0.07", "89.6921, -326.573, -45.3656, 0.52", "90.5156, -326.088, -46.1324, 0.15", "90.9883, -325.852, -46.5181, 0.15", "91.1173, -325.798, -46.6125, 0.15", "91.5466, -325.635, -46.8858, 0.29", "91.8835, -325.51, -47.0819, 0.29", "92.7922, -325.185, -47.5714, 0.07", "93.5557, -324.884, -47.9265, 0.07", "93.9822, -324.696, -48.1166, 0.15", "94.7679, -324.312, -48.4714, 0.07", "95.0873, -324.144, -48.6242, 0.07", "95.6326, -323.865, -48.8969, 0.29", "96.8025, -323.286, -49.5382, 0.07", "97.4323, -322.988, -49.939, 0.07", "97.8023, -322.804, -50.2255, 0.29", "98.3117, -322.521, -50.691, 0.37", "99.1894, -321.994, -51.6517, 0.07", "99.7644, -321.66, -52.3712, 0.15", "100.408, -321.335, -53.2393, 0.15", "101.029, -321.023, -54.0867, 0.15", "101.456, -320.786, -54.6459, 0.29", "101.875, -320.535, -55.205, 0.59", "102.331, -320.239, -55.8308, 0.88", "102.944, -319.903, -56.5576, 0.29", "103.596, -319.651, -57.141, 0.29", "104.37, -319.456, -57.6837, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "69.2633, -349.194, -32.6946, 0.44", "68.8284, -349.941, -32.9481, 0.44", "68.3604, -350.91, -33.1975, 0.22", "68.0018, -351.791, -33.3795, 0.66", "67.7073, -352.664, -33.5288, 0.15", "67.5064, -353.346, -33.6297, 0.15", "67.3999, -353.764, -33.67, 0.15", "67.2868, -354.473, -33.6309, 0.15", "67.2469, -354.928, -33.5385, 0.52", "67.1989, -355.712, -33.3098, 0.96", "67.1475, -356.611, -33.0095, 0.66", "67.0889, -357.463, -32.7046, 0.22", "66.9893, -358.826, -32.2336, 0.22", "66.9556, -359.378, -32.0638, 0.22", "66.9375, -359.955, -31.8997, 0.22", "66.9383, -360.378, -31.7883, 0.22", "66.9531, -360.892, -31.6877, 0.37", "66.9616, -361.597, -31.6027, 0.88", "66.946, -362.253, -31.5449, 0.52", "66.8953, -363.124, -31.4526, 0.15", "66.8266, -363.757, -31.3677, 0.15", "66.7195, -364.403, -31.2776, 0.81", "66.5213, -365.393, -31.1675, 0.15", "66.27, -366.471, -31.0759, 0.15", "66.1775, -366.849, -31.061, 0.66", "66.0355, -367.46, -31.0843, 1.03", "65.8568, -368.439, -31.2184, 0.15", "65.7683, -369.167, -31.3844, 0.15", "65.7571, -369.301, -31.4279, 0.15", "65.7123, -369.689, -31.5642, 0.59", "65.6305, -370.15, -31.7124, 0.81", "65.4356, -370.939, -31.9344, 0.22", "65.2832, -371.45, -32.056, 0.22", "64.9855, -372.302, -32.2156, 0.44", "64.6459, -373.145, -32.3691, 0.15", "64.3977, -373.656, -32.4577, 0.15", "64.1371, -374.1, -32.5307, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "64.1371, -374.1, -32.5307, 0.22", "63.9587, -375.395, -33.1386, 0.22", "63.8692, -375.904, -33.3738, 0.22", "63.7115, -376.765, -33.7529, 0.29", "63.5489, -377.623, -34.1547, 0.15", "63.4402, -378.182, -34.4491, 0.15", "63.3403, -378.738, -34.7726, 0.15", "63.2382, -379.282, -35.0961, 0.52", "63.1523, -379.953, -35.5406, 0.74", "63.1293, -381.051, -36.3646, 0.29", "63.1824, -381.738, -36.9452, 0.15", "63.2593, -382.263, -37.402, 0.15", "63.3169, -382.537, -37.6333, 0.15", "63.4728, -383.025, -38.0442, 0.37", "63.7293, -383.658, -38.5265, 0.15", "64.0141, -384.261, -38.9021, 0.15", "64.3445, -384.93, -39.2617, 0.22", "64.598, -385.445, -39.5227, 0.81", "64.8777, -386.061, -39.8444, 0.66", "65.2725, -387.063, -40.3598, 0.44", "65.4624, -387.673, -40.6724, 0.44", "65.7363, -388.676, -41.1918, 0.15", "65.8518, -389.149, -41.4486, 0.15", "66.0316, -390.043, -41.9546, 0.15", "66.1301, -390.69, -42.3269, 0.81", "66.3065, -392.084, -43.1176, 0.15", "66.3428, -392.482, -43.3376, 0.15", "66.3782, -392.905, -43.5694, 0.15", "66.4502, -393.425, -43.8508, 0.15", "66.5466, -393.819, -44.0552, 0.37", "66.8217, -394.543, -44.4592, 0.74", "67.2196, -395.36, -44.9476, 0.22", "67.5459, -395.981, -45.339, 0.22", "67.87, -396.536, -45.6934, 0.59", "68.318, -397.205, -46.1118, 0.22", "68.9606, -398.069, -46.66, 0.15", "69.2717, -398.463, -46.9068, 0.15", "69.5688, -398.85, -47.1301, 0.37", "69.9461, -399.431, -47.4357, 0.66", "70.2462, -400.122, -47.7748, 0.22", "70.3736, -400.764, -48.047, 0.15", "70.3858, -401.307, -48.2323, 0.15", "70.3509, -401.859, -48.4029, 0.29", "70.288, -402.376, -48.5559, 0.88", "70.1324, -403.454, -48.8561, 0.22", "70.0088, -404.227, -49.0314, 0.15", "69.8927, -405.029, -49.1853, 0.15", "69.8517, -405.388, -49.2491, 0.15", "69.7969, -406.113, -49.3736, 0.22", "69.7437, -407.231, -49.5899, 0.15", "69.6913, -408.713, -49.9044, 0.15", "69.6628, -409.158, -50.0072, 0.37", "69.6105, -409.81, -50.1948, 0.37", "69.5458, -410.621, -50.4657, 0.22", "69.5056, -411.51, -50.8023, 0.22", "69.5201, -412.174, -51.0866, 0.66", "69.6148, -412.907, -51.4471, 0.66", "69.856, -414.089, -52.0372, 0.15", "69.9482, -414.485, -52.245, 0.15", "70.1716, -415.339, -52.7019, 0.59", "70.3777, -416.034, -53.0793, 0.15", "70.6521, -416.857, -53.549, 0.15", "70.8727, -417.431, -53.9072, 0.44", "71.2675, -418.453, -54.6087, 0.15", "71.3934, -418.806, -54.8787, 0.15", "71.5081, -419.232, -55.2403, 0.15", "71.5757, -419.653, -55.6261, 0.37", "71.6171, -420.4, -56.3442, 0.44", "71.597, -421.174, -57.1173, 0.22", "71.5618, -421.452, -57.3788, 0.22", "71.4292, -421.983, -57.8285, 0.15", "71.2323, -422.519, -58.2214, 0.15", "71.1226, -422.748, -58.3695, 0.15", "70.8907, -423.17, -58.6063, 0.29", "70.5152, -423.851, -58.9834, 0.37", "70.1816, -424.509, -59.3474, 0.22", "69.8539, -425.299, -59.7645, 0.15", "69.5273, -426.182, -60.2212, 0.29", "69.2478, -426.984, -60.6477, 0.15", "69.0751, -427.493, -60.9251, 0.15", "68.8505, -428.154, -61.286, 0.52", "68.4787, -429.188, -61.862, 0.15", "68.2258, -429.897, -62.2829, 0.15", "67.8983, -430.85, -62.956, 0.15", "67.7044, -431.396, -63.4198, 0.52", "67.5094, -431.858, -63.8656, 0.52", "67.1362, -432.64, -64.7167, 0.15", "66.9136, -433.038, -65.2163, 0.15", "66.4272, -433.865, -66.3839, 0.15", "66.1722, -434.288, -67.0727, 0.29", "65.904, -434.771, -67.9711, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "64.1371, -374.1, -32.5307, 0.88", "63.7789, -375.138, -32.3059, 0.88", "63.3678, -376.409, -32.1104, 0.22", "63.0193, -377.635, -31.9745, 0.15", "62.762, -378.679, -31.8871, 0.15", "62.6369, -379.288, -31.8509, 0.37", "62.4898, -380.215, -31.8205, 1.03", "62.3716, -381.481, -31.8242, 0.44", "62.3554, -382.631, -31.8867, 0.15", "62.3874, -383.248, -31.9298, 0.15", "62.4616, -384.023, -31.9776, 0.37", "62.5844, -385.172, -32.0319, 0.15", "62.639, -385.848, -32.0535, 0.29", "62.6653, -387.218, -32.0927, 0.07", "62.5864, -388.363, -32.1797, 0.07", "62.4151, -389.496, -32.2841, 0.07", "62.2468, -390.165, -32.3589, 0.29", "61.8076, -391.428, -32.5354, 0.07", "61.3864, -392.395, -32.6801, 0.59", "60.7075, -393.698, -32.8686, 0.15", "60.2446, -394.514, -32.9577, 0.15", "59.5754, -395.666, -32.9837, 0.15", "59.2358, -396.287, -32.9526, 0.37", "58.6361, -397.517, -32.8001, 0.07", "58.308, -398.311, -32.6483, 0.22", "57.9807, -399.267, -32.4523, 0.07", "57.6754, -400.262, -32.2859, 0.07", "57.4167, -401.17, -32.1653, 0.59", "57.0265, -402.534, -32.0706, 0.15", "56.7213, -403.587, -32.0735, 0.74", "56.1705, -405.326, -32.2051, 0.07", "55.6874, -406.725, -32.3642, 0.07", "55.2559, -407.863, -32.5318, 0.29", "54.5911, -409.462, -32.7999, 0.07", "54.1854, -410.363, -32.9739, 0.44", "53.2844, -412.21, -33.3629, 0.07", "52.9192, -412.919, -33.5209, 0.07", "52.4011, -413.913, -33.7319, 0.37", "51.5545, -415.578, -34.0502, 0.07", "50.715, -417.292, -34.3524, 0.07", "50.2127, -418.397, -34.5391, 0.37", "49.6029, -419.931, -34.7955, 0.15", "49.1146, -421.391, -35.0509, 0.07", "48.7883, -422.467, -35.2238, 0.22", "48.5846, -423.278, -35.3395, 0.52", "48.438, -424.141, -35.4527, 0.88", "48.3328, -425.381, -35.6017, 0.44", "48.3663, -426.505, -35.746, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_NBC_4a41f068df_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.450000292725816)
    connect dend_35(0), soma_0(0.450000292725816)
    connect dend_32(0), soma_0(0.450000292725816)
    connect dend_25(0), soma_0(0.450000292725816)
    connect dend_0(0), soma_0(0.450000292725816)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.277629, -9.42436, 0.0, 2.9454 ) }
    soma_0 { pt3dadd( -0.225418, -8.4907, 0.0, 4.92187 ) }
    soma_0 { pt3dadd( -0.173208, -7.55704, 0.0, 6.69655 ) }
    soma_0 { pt3dadd( -0.120997, -6.62338, 0.0, 8.28957 ) }
    soma_0 { pt3dadd( -0.0687862, -5.68972, 0.0, 9.36061 ) }
    soma_0 { pt3dadd( -0.0165755, -4.75606, 0.0, 10.2397 ) }
    soma_0 { pt3dadd( 0.0356352, -3.8224, 0.0, 11.0293 ) }
    soma_0 { pt3dadd( 0.087846, -2.88873, 0.0, 11.6457 ) }
    soma_0 { pt3dadd( 0.140057, -1.95507, 0.0, 12.2691 ) }
    soma_0 { pt3dadd( 0.192267, -1.02141, 0.0, 12.5588 ) }
    soma_0 { pt3dadd( 0.244478, -0.0877535, 0.0, 12.7806 ) }
    soma_0 { pt3dadd( 0.296689, 0.845907, 0.0, 13.0398 ) }
    soma_0 { pt3dadd( 0.3489, 1.77957, 0.0, 13.1732 ) }
    soma_0 { pt3dadd( 0.40111, 2.71323, 0.0, 13.0581 ) }
    soma_0 { pt3dadd( 0.453321, 3.64689, 0.0, 12.8607 ) }
    soma_0 { pt3dadd( 0.505532, 4.58055, 0.0, 12.1633 ) }
    soma_0 { pt3dadd( 0.557743, 5.51421, 0.0, 11.3807 ) }
    soma_0 { pt3dadd( 0.609953, 6.44787, 0.0, 10.3357 ) }
    soma_0 { pt3dadd( 0.662164, 7.38153, 0.0, 8.86929 ) }
    soma_0 { pt3dadd( 0.714375, 8.31519, 0.0, 6.73974 ) }
    soma_0 { pt3dadd( 0.766585, 9.24885, 0.0, 3.85991 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0596826, 8.34843, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.0596826, 8.34843, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.551427, 10.301, 5.97545, 1.47 ) }
    dend_44 { pt3dadd( -0.891183, 11.7747, 6.31272, 1.47 ) }
    dend_44 { pt3dadd( -1.18235, 13.2943, 6.64667, 1.55 ) }
    dend_44 { pt3dadd( -1.35657, 14.4203, 6.90028, 1.55 ) }
    dend_44 { pt3dadd( -1.51664, 15.6364, 7.16151, 1.55 ) }
    dend_44 { pt3dadd( -1.58935, 16.4531, 7.32791, 1.55 ) }
    dend_44 { pt3dadd( -1.63855, 17.534, 7.54804, 1.55 ) }
    dend_44 { pt3dadd( -1.6636, 18.8104, 7.80962, 1.55 ) }
    dend_44 { pt3dadd( -1.70098, 20.2928, 8.15246, 1.92 ) }
    dend_44 { pt3dadd( -1.79672, 22.0537, 8.60472, 2.14 ) }
    dend_44 { pt3dadd( -1.95484, 23.7981, 9.10138, 1.18 ) }
    dend_44 { pt3dadd( -2.1355, 25.2247, 9.55233, 1.25 ) }
    dend_44 { pt3dadd( -2.35437, 26.747, 10.0625, 1.25 ) }
    dend_44 { pt3dadd( -2.6819, 28.6343, 10.7296, 1.33 ) }
    dend_44 { pt3dadd( -3.0297, 30.363, 11.378, 1.47 ) }
    dend_44 { pt3dadd( -3.37322, 31.8469, 12.0053, 1.77 ) }
    dend_44 { pt3dadd( -3.78181, 33.3028, 12.6696, 2.14 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.299673, -8.04856, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.299673, -8.04856, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.85981, -9.84365, 4.24635, 1.62 ) }
    dend_35 { pt3dadd( -1.29739, -11.6331, 5.11449, 1.4 ) }
    dend_35 { pt3dadd( -1.61424, -13.1791, 5.77855, 1.4 ) }
    dend_35 { pt3dadd( -1.86555, -14.3235, 6.20972, 1.25 ) }
    dend_35 { pt3dadd( -2.16923, -15.5683, 6.61805, 1.25 ) }
    dend_35 { pt3dadd( -2.50409, -16.9307, 6.98888, 1.18 ) }
    dend_35 { pt3dadd( -2.70585, -17.8265, 7.17246, 1.18 ) }
    dend_35 { pt3dadd( -3.11954, -19.9615, 7.52542, 1.55 ) }
    dend_35 { pt3dadd( -3.46955, -21.7892, 7.78186, 1.62 ) }
    dend_35 { pt3dadd( -3.85408, -23.5726, 8.00829, 1.47 ) }
    dend_35 { pt3dadd( -4.32334, -25.5221, 8.20443, 1.47 ) }
    dend_35 { pt3dadd( -4.71153, -27.0329, 8.35708, 1.47 ) }
    dend_35 { pt3dadd( -5.12642, -28.7355, 8.51596, 1.47 ) }
    dend_35 { pt3dadd( -5.34195, -29.8704, 8.64536, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 56/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.04042, 7.30343, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 5.04042, 7.30343, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 6.08484, 8.0058, -5.13607, 1.55 ) }
    dend_32 { pt3dadd( 7.09978, 8.70457, -5.05327, 1.47 ) }
    dend_32 { pt3dadd( 7.81401, 9.20634, -5.00996, 1.25 ) }
    dend_32 { pt3dadd( 9.17415, 10.1712, -4.89138, 1.11 ) }
    dend_32 { pt3dadd( 10.0014, 10.7581, -4.79187, 1.25 ) }
    dend_32 { pt3dadd( 11.0543, 11.5165, -4.60671, 1.4 ) }
    dend_32 { pt3dadd( 12.263, 12.3987, -4.3221, 1.62 ) }
    dend_32 { pt3dadd( 13.6151, 13.3606, -3.95069, 1.03 ) }
    dend_32 { pt3dadd( 14.5964, 13.9984, -3.64599, 0.88 ) }
    dend_32 { pt3dadd( 15.5832, 14.5535, -3.29175, 1.11 ) }
    dend_32 { pt3dadd( 16.7159, 15.1215, -2.80172, 0.88 ) }
    dend_32 { pt3dadd( 17.7889, 15.6075, -2.27661, 1.47 ) }
    dend_32 { pt3dadd( 18.3704, 15.8498, -1.9488, 1.33 ) }
    dend_32 { pt3dadd( 19.4068, 16.2659, -1.33214, 1.03 ) }
    dend_32 { pt3dadd( 20.3848, 16.6872, -0.771502, 1.03 ) }
    dend_32 { pt3dadd( 21.1469, 17.0515, -0.352827, 1.18 ) }
    dend_32 { pt3dadd( 22.0496, 17.5518, 0.125896, 1.18 ) }
    dend_32 { pt3dadd( 23.2205, 18.2805, 0.708516, 1.4 ) }
    dend_32 { pt3dadd( 23.9548, 18.7799, 1.03269, 1.03 ) }
    dend_32 { pt3dadd( 24.7295, 19.3415, 1.24355, 0.81 ) }
    dend_32 { pt3dadd( 25.4575, 19.8581, 1.31875, 0.74 ) }
    dend_32 { pt3dadd( 26.2633, 20.407, 1.29181, 1.11 ) }
    dend_32 { pt3dadd( 27.3286, 21.0917, 1.16314, 1.11 ) }
    dend_32 { pt3dadd( 28.096, 21.5525, 1.01639, 1.33 ) }
    dend_32 { pt3dadd( 29.715, 22.471, 0.739519, 1.33 ) }
    dend_32 { pt3dadd( 31.1429, 23.2655, 0.561972, 0.88 ) }
    dend_32 { pt3dadd( 32.2916, 23.9239, 0.500718, 1.11 ) }
    dend_32 { pt3dadd( 32.924, 24.3002, 0.509231, 1.33 ) }
    dend_32 { pt3dadd( 33.8625, 24.9026, 0.605529, 1.33 ) }
    dend_32 { pt3dadd( 35.058, 25.7374, 0.833692, 0.96 ) }
    dend_32 { pt3dadd( 36.0062, 26.4308, 1.12241, 0.96 ) }
    dend_32 { pt3dadd( 37.0112, 27.2133, 1.50222, 1.4 ) }
    dend_32 { pt3dadd( 37.6737, 27.7475, 1.8016, 1.4 ) }
    dend_32 { pt3dadd( 38.5068, 28.4476, 2.19813, 1.4 ) }
    dend_32 { pt3dadd( 39.4654, 29.2699, 2.65068, 1.84 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.129629, -9.36907, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.129629, -9.36907, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.524844, -10.1875, -2.03729, 1.55 ) }
    dend_25 { pt3dadd( -0.803797, -10.8533, -1.97459, 1.47 ) }
    dend_25 { pt3dadd( -1.23984, -12.1217, -1.83416, 1.47 ) }
    dend_25 { pt3dadd( -1.55291, -13.2487, -1.7061, 1.25 ) }
    dend_25 { pt3dadd( -1.70601, -13.9768, -1.6272, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -1.82548, -14.8637, -1.53955, 1.33 ) }
    dend_25 { pt3dadd( -1.89482, -15.9704, -1.44209, 1.7 ) }
    dend_25 { pt3dadd( -1.88262, -17.1406, -1.35602, 1.4 ) }
    dend_25 { pt3dadd( -1.81671, -18.0569, -1.29946, 1.18 ) }
    dend_25 { pt3dadd( -1.66377, -19.3923, -1.21403, 1.4 ) }
    dend_25 { pt3dadd( -1.46847, -20.8705, -1.11976, 1.4 ) }
    dend_25 { pt3dadd( -1.32133, -21.8687, -1.06049, 1.55 ) }
    dend_25 { pt3dadd( -1.14869, -22.9682, -1.01215, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.330332, 1.39443, -10.46, 3.02 ) }
    dend_0 { pt3dadd( 0.330332, 1.39443, -10.46, 3.02 ) }
    dend_0 { pt3dadd( -1.75403, 1.32478, -10.46, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 11/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.766585, 9.24885, 0.0, 0.672037 ) }
    axon_0 { pt3dadd( 1.60408, 24.2255, 0.0, 0.672037 ) }
    axon_0 { pt3dadd( 2.44158, 39.2021, 0.0, 0.672037 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.78181, 33.3028, 12.6696, 2.21 ) }
    dend_46 { pt3dadd( -3.98851, 34.7797, 13.7008, 2.21 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.78181, 33.3028, 12.6696, 0.59 ) }
    dend_45 { pt3dadd( -4.61198, 33.667, 13.587, 0.59 ) }
    dend_45 { pt3dadd( -5.79858, 34.18, 14.7609, 0.59 ) }
    dend_45 { pt3dadd( -6.64727, 34.5323, 15.5499, 0.44 ) }
    dend_45 { pt3dadd( -7.91742, 35.0337, 16.67, 0.29 ) }
    dend_45 { pt3dadd( -8.40796, 35.2172, 17.0728, 0.29 ) }
    dend_45 { pt3dadd( -8.96633, 35.4262, 17.5307, 0.29 ) }
    dend_45 { pt3dadd( -9.53311, 35.664, 17.9811, 0.44 ) }
    dend_45 { pt3dadd( -10.1044, 35.9166, 18.3929, 0.66 ) }
    dend_45 { pt3dadd( -10.9433, 36.3255, 19.0328, 0.66 ) }
    dend_45 { pt3dadd( -11.5324, 36.6498, 19.5477, 0.44 ) }
    dend_45 { pt3dadd( -12.1894, 37.0506, 20.1966, 0.44 ) }
    dend_45 { pt3dadd( -12.7873, 37.4706, 20.9104, 0.66 ) }
    dend_45 { pt3dadd( -13.1101, 37.7342, 21.37, 0.66 ) }
    dend_45 { pt3dadd( -13.6939, 38.2643, 22.3097, 0.29 ) }
    dend_45 { pt3dadd( -14.067, 38.6253, 22.9842, 0.29 ) }
    dend_45 { pt3dadd( -14.7292, 39.2356, 24.1836, 0.44 ) }
    dend_45 { pt3dadd( -15.3716, 39.7483, 25.2493, 0.37 ) }
    dend_45 { pt3dadd( -15.9188, 40.1163, 26.0924, 0.37 ) }
    dend_45 { pt3dadd( -16.4968, 40.4485, 26.8934, 0.66 ) }
    dend_45 { pt3dadd( -17.1365, 40.7704, 27.6844, 1.18 ) }
    dend_45 { pt3dadd( -18.0092, 41.1579, 28.6137, 1.47 ) }
    dend_45 { pt3dadd( -19.0632, 41.5685, 29.5922, 0.37 ) }
    dend_45 { pt3dadd( -19.7356, 41.8017, 30.1545, 0.29 ) }
    dend_45 { pt3dadd( -20.5346, 42.0543, 30.7762, 0.29 ) }
    dend_45 { pt3dadd( -21.3405, 42.2993, 31.37, 0.15 ) }
    dend_45 { pt3dadd( -22.022, 42.5165, 31.861, 0.37 ) }
    dend_45 { pt3dadd( -23.1309, 42.903, 32.6979, 0.22 ) }
    dend_45 { pt3dadd( -23.8245, 43.1825, 33.214, 0.22 ) }
    dend_45 { pt3dadd( -24.8149, 43.6222, 33.9625, 0.22 ) }
    dend_45 { pt3dadd( -25.3401, 43.8677, 34.3611, 0.96 ) }
    dend_45 { pt3dadd( -26.2781, 44.333, 35.062, 1.84 ) }
    dend_45 { pt3dadd( -26.9529, 44.6956, 35.5688, 1.84 ) }
    dend_45 { pt3dadd( -27.946, 45.2845, 36.3001, 0.22 ) }
    dend_45 { pt3dadd( -28.4959, 45.6429, 36.6976, 0.22 ) }
    dend_45 { pt3dadd( -28.9689, 45.9772, 37.0477, 0.22 ) }
    dend_45 { pt3dadd( -29.4402, 46.3018, 37.3908, 0.22 ) }
    dend_45 { pt3dadd( -29.7628, 46.509, 37.614, 0.22 ) }
    dend_45 { pt3dadd( -29.9742, 46.6342, 37.754, 0.22 ) }
    dend_45 { pt3dadd( -30.4056, 46.8769, 38.0692, 0.52 ) }
    dend_45 { pt3dadd( -30.7579, 47.0863, 38.3297, 1.03 ) }
    dend_45 { pt3dadd( -31.1666, 47.3581, 38.663, 1.25 ) }
    dend_45 { pt3dadd( -31.8731, 47.8594, 39.2349, 0.81 ) }
    dend_45 { pt3dadd( -32.4889, 48.3347, 39.7232, 0.22 ) }
    dend_45 { pt3dadd( -32.8693, 48.6529, 40.0578, 0.22 ) }
    dend_45 { pt3dadd( -33.329, 49.0872, 40.5404, 0.59 ) }
    dend_45 { pt3dadd( -34.1072, 49.9479, 41.4517, 0.07 ) }
    dend_45 { pt3dadd( -34.3327, 50.2518, 41.7417, 0.15 ) }
    dend_45 { pt3dadd( -34.7955, 51.015, 42.3608, 0.15 ) }
    dend_45 { pt3dadd( -35.44, 52.2752, 43.2365, 0.07 ) }
    dend_45 { pt3dadd( -35.9821, 53.4517, 43.9289, 0.07 ) }
    dend_45 { pt3dadd( -36.2218, 54.0474, 44.2466, 0.07 ) }
    dend_45 { pt3dadd( -36.5349, 54.9271, 44.6609, 0.07 ) }
    dend_45 { pt3dadd( -36.9131, 56.0842, 45.1454, 0.07 ) }
    dend_45 { pt3dadd( -37.1581, 56.8901, 45.447, 0.07 ) }
    dend_45 { pt3dadd( -37.3867, 57.6448, 45.6843, 0.07 ) }
    dend_45 { pt3dadd( -37.6871, 58.5314, 45.9606, 0.22 ) }
    dend_45 { pt3dadd( -37.8752, 59.0172, 46.1422, 0.44 ) }
    dend_45 { pt3dadd( -38.2408, 59.8033, 46.4944, 0.07 ) }
    dend_45 { pt3dadd( -38.7178, 60.6921, 46.9753, 0.07 ) }
    dend_45 { pt3dadd( -38.9685, 61.1116, 47.23, 0.07 ) }
    dend_45 { pt3dadd( -39.341, 61.6619, 47.5764, 0.37 ) }
    dend_45 { pt3dadd( -39.4869, 61.8518, 47.6931, 0.37 ) }
    dend_45 { pt3dadd( -39.9695, 62.4354, 48.0837, 0.07 ) }
    dend_45 { pt3dadd( -40.5187, 63.0553, 48.5043, 0.07 ) }
    dend_45 { pt3dadd( -40.7396, 63.3, 48.6547, 0.37 ) }
    dend_45 { pt3dadd( -41.3954, 64.065, 49.0751, 1.11 ) }
    dend_45 { pt3dadd( -41.7924, 64.5696, 49.3249, 0.81 ) }
    dend_45 { pt3dadd( -42.5213, 65.5473, 49.7505, 0.07 ) }
    dend_45 { pt3dadd( -42.9028, 66.0622, 49.9461, 0.07 ) }
    dend_45 { pt3dadd( -43.3239, 66.6112, 50.143, 0.59 ) }
    dend_45 { pt3dadd( -44.0714, 67.5689, 50.5042, 0.15 ) }
    dend_45 { pt3dadd( -44.9449, 68.6374, 50.9321, 0.15 ) }
    dend_45 { pt3dadd( -45.5679, 69.3307, 51.2389, 0.15 ) }
    dend_45 { pt3dadd( -46.2726, 70.0339, 51.6025, 0.44 ) }
    dend_45 { pt3dadd( -47.1324, 70.8037, 52.111, 0.15 ) }
    dend_45 { pt3dadd( -47.5548, 71.1286, 52.3499, 0.15 ) }
    dend_45 { pt3dadd( -48.3017, 71.6188, 52.7407, 0.74 ) }
    dend_45 { pt3dadd( -49.3726, 72.2512, 53.2474, 0.07 ) }
    dend_45 { pt3dadd( -50.1928, 72.708, 53.5881, 0.07 ) }
    dend_45 { pt3dadd( -50.9518, 73.1304, 53.8601, 0.07 ) }
    dend_45 { pt3dadd( -52.2045, 73.8263, 54.208, 0.07 ) }
    dend_45 { pt3dadd( -53.1107, 74.3289, 54.366, 0.52 ) }
    dend_45 { pt3dadd( -53.574, 74.5815, 54.3972, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -54.6821, 75.1831, 54.3674, 0.07 ) }
    dend_45 { pt3dadd( -55.6692, 75.7375, 54.2677, 0.37 ) }
    dend_45 { pt3dadd( -56.9919, 76.4786, 54.0859, 0.07 ) }
    dend_45 { pt3dadd( -58.4305, 77.265, 53.8764, 0.07 ) }
    dend_45 { pt3dadd( -59.5188, 77.8436, 53.6665, 0.07 ) }
    dend_45 { pt3dadd( -60.9254, 78.5777, 53.3529, 0.07 ) }
    dend_45 { pt3dadd( -62.5095, 79.3943, 52.9426, 0.07 ) }
    dend_45 { pt3dadd( -63.3384, 79.8077, 52.6997, 0.07 ) }
    dend_45 { pt3dadd( -64.2517, 80.2606, 52.4166, 0.07 ) }
    dend_45 { pt3dadd( -65.1698, 80.7215, 52.1614, 0.07 ) }
    dend_45 { pt3dadd( -66.0137, 81.1473, 51.9493, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -5.34195, -29.8704, 8.64536, 0.52 ) }
    dend_43 { pt3dadd( -5.14949, -29.8342, 9.59799, 0.52 ) }
    dend_43 { pt3dadd( -4.83473, -29.8089, 11.0724, 0.52 ) }
    dend_43 { pt3dadd( -4.51996, -29.834, 12.5092, 0.59 ) }
    dend_43 { pt3dadd( -4.19094, -29.9292, 14.0332, 0.59 ) }
    dend_43 { pt3dadd( -3.90122, -30.0762, 15.369, 0.59 ) }
    dend_43 { pt3dadd( -3.61379, -30.2956, 16.68, 0.59 ) }
    dend_43 { pt3dadd( -3.30503, -30.6753, 18.1566, 0.59 ) }
    dend_43 { pt3dadd( -3.17968, -30.9332, 18.7507, 0.59 ) }
    dend_43 { pt3dadd( -3.01564, -31.3671, 19.4504, 0.59 ) }
    dend_43 { pt3dadd( -2.87195, -31.7858, 20.018, 0.52 ) }
    dend_43 { pt3dadd( -2.6742, -32.3798, 20.7789, 0.52 ) }
    dend_43 { pt3dadd( -2.44232, -33.0417, 21.5858, 0.59 ) }
    dend_43 { pt3dadd( -2.0136, -34.0576, 22.857, 0.81 ) }
    dend_43 { pt3dadd( -1.51131, -35.058, 24.2396, 0.52 ) }
    dend_43 { pt3dadd( -1.17915, -35.6208, 25.0836, 0.59 ) }
    dend_43 { pt3dadd( -0.757372, -36.2095, 26.0492, 0.81 ) }
    dend_43 { pt3dadd( -0.385428, -36.6487, 26.843, 1.11 ) }
    dend_43 { pt3dadd( 0.451722, -37.5041, 28.4753, 0.37 ) }
    dend_43 { pt3dadd( 1.03948, -38.0445, 29.5886, 0.59 ) }
    dend_43 { pt3dadd( 1.55956, -38.4992, 30.5554, 0.66 ) }
    dend_43 { pt3dadd( 2.3147, -39.0958, 31.9402, 0.37 ) }
    dend_43 { pt3dadd( 2.85503, -39.463, 32.9594, 0.37 ) }
    dend_43 { pt3dadd( 3.13815, -39.6308, 33.5819, 0.37 ) }
    dend_43 { pt3dadd( 3.50768, -39.8393, 34.5938, 0.37 ) }
    dend_43 { pt3dadd( 3.72786, -39.9893, 35.4605, 0.96 ) }
    dend_43 { pt3dadd( 3.92912, -40.1957, 36.6859, 0.96 ) }
    dend_43 { pt3dadd( 4.06602, -40.4538, 38.0524, 0.96 ) }
    dend_43 { pt3dadd( 4.2013, -40.969, 40.3877, 0.66 ) }
    dend_43 { pt3dadd( 4.22502, -41.4524, 42.3698, 0.37 ) }
    dend_43 { pt3dadd( 4.14495, -42.0221, 44.4396, 0.37 ) }
    dend_43 { pt3dadd( 3.96373, -42.606, 46.4072, 0.37 ) }
    dend_43 { pt3dadd( 3.85276, -42.8564, 47.2041, 0.37 ) }
    dend_43 { pt3dadd( 3.5808, -43.3762, 48.7871, 0.66 ) }
    dend_43 { pt3dadd( 3.24911, -44.01, 50.639, 0.66 ) }
    dend_43 { pt3dadd( 2.96893, -44.5932, 52.3142, 0.81 ) }
    dend_43 { pt3dadd( 2.6365, -45.3785, 54.5197, 0.88 ) }
    dend_43 { pt3dadd( 2.38101, -46.0987, 56.4592, 0.88 ) }
    dend_43 { pt3dadd( 2.17078, -46.9391, 58.6285, 0.37 ) }
    dend_43 { pt3dadd( 2.07101, -47.6624, 60.4222, 0.29 ) }
    dend_43 { pt3dadd( 2.0667, -48.1445, 61.4602, 0.29 ) }
    dend_43 { pt3dadd( 2.11369, -48.6676, 62.466, 0.29 ) }
    dend_43 { pt3dadd( 2.21819, -49.4498, 63.7889, 0.52 ) }
    dend_43 { pt3dadd( 2.36351, -50.4279, 65.3123, 0.96 ) }
    dend_43 { pt3dadd( 2.52324, -51.6197, 67.0128, 0.96 ) }
    dend_43 { pt3dadd( 2.63309, -52.6037, 68.3842, 0.29 ) }
    dend_43 { pt3dadd( 2.71527, -53.5237, 69.6555, 0.29 ) }
    dend_43 { pt3dadd( 2.77617, -54.4448, 70.9502, 0.29 ) }
    dend_43 { pt3dadd( 2.79331, -55.1355, 71.9287, 0.88 ) }
    dend_43 { pt3dadd( 2.80654, -55.973, 72.9903, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -5.34195, -29.8704, 8.64536, 0.96 ) }
    dend_36 { pt3dadd( -6.14593, -31.5955, 8.66482, 0.96 ) }
    dend_36 { pt3dadd( -7.25481, -33.9673, 8.81671, 0.81 ) }
    dend_36 { pt3dadd( -8.17725, -36.0348, 9.18911, 0.74 ) }
    dend_36 { pt3dadd( -9.16292, -38.2554, 9.82733, 0.88 ) }
    dend_36 { pt3dadd( -10.1995, -40.5968, 10.7008, 0.88 ) }
    dend_36 { pt3dadd( -10.4981, -41.3228, 10.9972, 0.88 ) }
    dend_36 { pt3dadd( -10.9051, -42.47, 11.5563, 0.66 ) }
    dend_36 { pt3dadd( -11.6954, -44.858, 12.8248, 0.66 ) }
    dend_36 { pt3dadd( -12.2508, -46.4223, 13.6699, 0.88 ) }
    dend_36 { pt3dadd( -12.7432, -47.6899, 14.3391, 0.88 ) }
    dend_36 { pt3dadd( -13.6108, -49.6705, 15.3141, 1.03 ) }
    dend_36 { pt3dadd( -14.4934, -51.5984, 16.1783, 1.03 ) }
    dend_36 { pt3dadd( -15.4639, -53.7373, 16.9831, 0.88 ) }
    dend_36 { pt3dadd( -16.4138, -55.9006, 17.6672, 0.59 ) }
    dend_36 { pt3dadd( -16.8685, -57.0162, 18.0261, 0.44 ) }
    dend_36 { pt3dadd( -17.6719, -59.0625, 18.7587, 1.03 ) }
    dend_36 { pt3dadd( -18.2034, -60.4481, 19.312, 1.03 ) }
    dend_36 { pt3dadd( -18.6504, -61.7828, 19.8443, 1.03 ) }
    dend_36 { pt3dadd( -19.2826, -63.9869, 20.7105, 0.88 ) }
    dend_36 { pt3dadd( -19.8761, -66.3374, 21.5904, 0.81 ) }
    dend_36 { pt3dadd( -20.5212, -69.0598, 22.5969, 1.03 ) }
    dend_36 { pt3dadd( -21.0261, -71.2025, 23.3596, 1.47 ) }
    dend_36 { pt3dadd( -21.5922, -73.4682, 24.1648, 1.11 ) }
    dend_36 { pt3dadd( -22.1599, -75.7216, 24.9481, 0.74 ) }
    dend_36 { pt3dadd( -22.561, -77.4032, 25.5092, 0.66 ) }
    dend_36 { pt3dadd( -22.9333, -79.0633, 26.0473, 0.66 ) }
    dend_36 { pt3dadd( -23.3871, -81.1646, 26.7184, 1.03 ) }
    dend_36 { pt3dadd( -23.9767, -83.8681, 27.5672, 0.96 ) }
    dend_36 { pt3dadd( -24.4757, -86.0239, 28.2118, 0.81 ) }
    dend_36 { pt3dadd( -24.9539, -87.9393, 28.7336, 1.11 ) }
    dend_36 { pt3dadd( -25.6288, -90.3523, 29.3391, 0.74 ) }
    dend_36 { pt3dadd( -26.2709, -92.374, 29.871, 0.37 ) }
    dend_36 { pt3dadd( -26.8022, -93.8641, 30.311, 0.37 ) }
    dend_36 { pt3dadd( -27.3597, -95.3018, 30.7887, 0.96 ) }
    dend_36 { pt3dadd( -28.0433, -96.9874, 31.3897, 1.55 ) }
    dend_36 { pt3dadd( -28.5164, -98.1473, 31.8115, 1.7 ) }
    dend_36 { pt3dadd( -29.5229, -100.662, 32.7349, 0.81 ) }
    dend_36 { pt3dadd( -30.2151, -102.459, 33.4247, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -30.7356, -103.917, 33.9808, 0.74 ) }
    dend_36 { pt3dadd( -31.3408, -105.898, 34.6828, 0.44 ) }
    dend_36 { pt3dadd( -31.8764, -108.0, 35.3425, 0.37 ) }
    dend_36 { pt3dadd( -32.2995, -109.905, 35.838, 0.37 ) }
    dend_36 { pt3dadd( -32.5778, -111.235, 36.0767, 0.37 ) }
    dend_36 { pt3dadd( -32.9696, -113.05, 36.3027, 0.74 ) }
    dend_36 { pt3dadd( -33.3708, -114.87, 36.4589, 1.03 ) }
    dend_36 { pt3dadd( -33.519, -115.544, 36.5246, 1.03 ) }
    dend_36 { pt3dadd( -33.8787, -117.321, 36.7197, 0.59 ) }
    dend_36 { pt3dadd( -34.1183, -118.534, 36.8946, 0.59 ) }
    dend_36 { pt3dadd( -34.5702, -120.669, 37.3329, 0.81 ) }
    dend_36 { pt3dadd( -35.0457, -122.777, 37.9945, 0.52 ) }
    dend_36 { pt3dadd( -35.418, -124.408, 38.6918, 0.96 ) }
    dend_36 { pt3dadd( -35.7874, -126.158, 39.5814, 1.25 ) }
    dend_36 { pt3dadd( -36.1749, -128.334, 40.8244, 0.66 ) }
    dend_36 { pt3dadd( -36.5294, -130.524, 42.0903, 0.29 ) }
    dend_36 { pt3dadd( -36.8641, -132.474, 43.2558, 0.29 ) }
    dend_36 { pt3dadd( -37.1675, -134.001, 44.1327, 0.29 ) }
    dend_36 { pt3dadd( -37.3428, -134.769, 44.5246, 0.74 ) }
    dend_36 { pt3dadd( -37.7341, -136.262, 45.1815, 0.96 ) }
    dend_36 { pt3dadd( -38.5843, -139.173, 46.1395, 0.22 ) }
    dend_36 { pt3dadd( -39.181, -140.961, 46.526, 0.22 ) }
    dend_36 { pt3dadd( -39.7197, -142.403, 46.7195, 0.52 ) }
    dend_36 { pt3dadd( -40.1469, -143.445, 46.8223, 1.03 ) }
    dend_36 { pt3dadd( -40.6569, -144.609, 46.9423, 1.11 ) }
    dend_36 { pt3dadd( -41.3473, -146.079, 47.1188, 0.59 ) }
    dend_36 { pt3dadd( -42.1404, -147.662, 47.3493, 0.22 ) }
    dend_36 { pt3dadd( -42.6022, -148.557, 47.4777, 0.22 ) }
    dend_36 { pt3dadd( -42.9825, -149.292, 47.599, 0.22 ) }
    dend_36 { pt3dadd( -43.4597, -150.243, 47.7626, 0.44 ) }
    dend_36 { pt3dadd( -44.076, -151.543, 47.9844, 0.96 ) }
    dend_36 { pt3dadd( -44.7434, -153.028, 48.2265, 0.96 ) }
    dend_36 { pt3dadd( -45.2584, -154.176, 48.4117, 0.44 ) }
    dend_36 { pt3dadd( -46.0919, -155.988, 48.73, 0.22 ) }
    dend_36 { pt3dadd( -46.5641, -157.015, 48.9381, 0.59 ) }
    dend_36 { pt3dadd( -46.9583, -157.9, 49.1311, 0.59 ) }
    dend_36 { pt3dadd( -47.5752, -159.385, 49.4658, 0.15 ) }
    dend_36 { pt3dadd( -48.1596, -160.894, 49.8749, 0.15 ) }
    dend_36 { pt3dadd( -48.7085, -162.369, 50.3997, 0.15 ) }
    dend_36 { pt3dadd( -49.2184, -163.803, 50.9575, 0.52 ) }
    dend_36 { pt3dadd( -49.5344, -164.677, 51.3355, 1.33 ) }
    dend_36 { pt3dadd( -50.0624, -166.094, 51.9905, 1.55 ) }
    dend_36 { pt3dadd( -50.7274, -167.848, 52.7899, 1.18 ) }
    dend_36 { pt3dadd( -51.8194, -170.625, 53.9446, 0.37 ) }
    dend_36 { pt3dadd( -52.7113, -172.745, 54.7268, 0.22 ) }
    dend_36 { pt3dadd( -53.5476, -174.578, 55.3187, 0.22 ) }
    dend_36 { pt3dadd( -54.4036, -176.335, 55.8225, 0.37 ) }
    dend_36 { pt3dadd( -55.3868, -178.256, 56.2773, 0.96 ) }
    dend_36 { pt3dadd( -56.3932, -180.153, 56.6251, 0.22 ) }
    dend_36 { pt3dadd( -57.1828, -181.602, 56.8125, 0.22 ) }
    dend_36 { pt3dadd( -58.1756, -183.414, 57.002, 0.22 ) }
    dend_36 { pt3dadd( -58.7901, -184.576, 57.0813, 0.37 ) }
    dend_36 { pt3dadd( -59.4179, -185.791, 57.1567, 0.88 ) }
    dend_36 { pt3dadd( -60.3177, -187.646, 57.3699, 0.88 ) }
    dend_36 { pt3dadd( -61.4074, -190.108, 57.7697, 0.22 ) }
    dend_36 { pt3dadd( -61.9075, -191.346, 58.0213, 0.44 ) }
    dend_36 { pt3dadd( -62.479, -192.839, 58.3691, 0.88 ) }
    dend_36 { pt3dadd( -63.0013, -194.232, 58.7085, 0.37 ) }
    dend_36 { pt3dadd( -64.0252, -196.945, 59.3572, 0.15 ) }
    dend_36 { pt3dadd( -64.767, -198.932, 59.7923, 0.15 ) }
    dend_36 { pt3dadd( -65.315, -200.457, 60.169, 0.15 ) }
    dend_36 { pt3dadd( -65.5839, -201.243, 60.3761, 0.29 ) }
    dend_36 { pt3dadd( -66.0631, -202.687, 60.7834, 0.96 ) }
    dend_36 { pt3dadd( -66.6037, -204.378, 61.2974, 0.29 ) }
    dend_36 { pt3dadd( -67.076, -205.899, 61.7887, 0.15 ) }
    dend_36 { pt3dadd( -67.615, -207.731, 62.4783, 0.15 ) }
    dend_36 { pt3dadd( -68.0151, -209.145, 63.0614, 0.15 ) }
    dend_36 { pt3dadd( -68.46, -210.783, 63.758, 0.15 ) }
    dend_36 { pt3dadd( -68.797, -212.043, 64.2879, 0.15 ) }
    dend_36 { pt3dadd( -69.2319, -213.627, 64.9236, 0.29 ) }
    dend_36 { pt3dadd( -69.6375, -214.954, 65.3967, 0.81 ) }
    dend_36 { pt3dadd( -70.2623, -216.845, 65.9565, 1.11 ) }
    dend_36 { pt3dadd( -70.8833, -218.617, 66.406, 0.29 ) }
    dend_36 { pt3dadd( -71.5633, -220.531, 66.802, 0.15 ) }
    dend_36 { pt3dadd( -72.1743, -222.232, 67.0796, 0.15 ) }
    dend_36 { pt3dadd( -72.7726, -223.926, 67.2844, 0.15 ) }
    dend_36 { pt3dadd( -73.1626, -225.063, 67.3876, 0.15 ) }
    dend_36 { pt3dadd( -73.3633, -225.681, 67.4253, 0.37 ) }
    dend_36 { pt3dadd( -73.6748, -226.606, 67.5078, 0.88 ) }
    dend_36 { pt3dadd( -73.9594, -227.339, 67.5832, 1.11 ) }
    dend_36 { pt3dadd( -74.6468, -228.824, 67.7361, 0.29 ) }
    dend_36 { pt3dadd( -75.4334, -230.183, 67.8651, 0.15 ) }
    dend_36 { pt3dadd( -76.0118, -231.038, 67.9298, 0.15 ) }
    dend_36 { pt3dadd( -77.3202, -232.738, 67.9688, 0.15 ) }
    dend_36 { pt3dadd( -78.1877, -233.754, 67.9525, 0.59 ) }
    dend_36 { pt3dadd( -79.1348, -234.798, 67.8985, 0.59 ) }
    dend_36 { pt3dadd( -81.4128, -237.199, 67.6496, 0.15 ) }
    dend_36 { pt3dadd( -82.7701, -238.628, 67.382, 0.15 ) }
    dend_36 { pt3dadd( -84.2293, -240.213, 66.9688, 0.15 ) }
    dend_36 { pt3dadd( -84.6357, -240.683, 66.8049, 0.37 ) }
    dend_36 { pt3dadd( -85.795, -242.125, 66.2628, 0.96 ) }
    dend_36 { pt3dadd( -86.7705, -243.42, 65.7452, 0.22 ) }
    dend_36 { pt3dadd( -87.6274, -244.668, 65.2358, 0.22 ) }
    dend_36 { pt3dadd( -88.0597, -245.369, 65.0099, 0.22 ) }
    dend_36 { pt3dadd( -88.4709, -246.132, 64.8285, 0.44 ) }
    dend_36 { pt3dadd( -88.9419, -247.013, 64.6108, 0.81 ) }
    dend_36 { pt3dadd( -89.6859, -248.326, 64.2642, 0.22 ) }
    dend_36 { pt3dadd( -90.4398, -249.539, 63.9541, 0.29 ) }
    dend_36 { pt3dadd( -91.3774, -250.954, 63.6094, 0.22 ) }
    dend_36 { pt3dadd( -92.5008, -252.567, 63.1857, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -93.9682, -254.539, 62.6334, 0.07 ) }
    dend_36 { pt3dadd( -94.8011, -255.606, 62.3226, 0.07 ) }
    dend_36 { pt3dadd( -95.8425, -256.873, 61.907, 0.15 ) }
    dend_36 { pt3dadd( -97.1687, -258.397, 61.3616, 0.07 ) }
    dend_36 { pt3dadd( -97.6321, -258.897, 61.1724, 0.29 ) }
    dend_36 { pt3dadd( -98.6617, -259.967, 60.8354, 0.44 ) }
    dend_36 { pt3dadd( -99.4835, -260.84, 60.6014, 0.15 ) }
    dend_36 { pt3dadd( -100.559, -262.014, 60.2878, 0.15 ) }
    dend_36 { pt3dadd( -101.157, -262.673, 60.0994, 0.37 ) }
    dend_36 { pt3dadd( -101.87, -263.465, 59.8727, 0.44 ) }
    dend_36 { pt3dadd( -102.985, -264.773, 59.5207, 0.15 ) }
    dend_36 { pt3dadd( -103.611, -265.546, 59.3354, 0.15 ) }
    dend_36 { pt3dadd( -104.154, -266.199, 59.2057, 0.37 ) }
    dend_36 { pt3dadd( -104.624, -266.774, 59.1241, 0.52 ) }
    dend_36 { pt3dadd( -105.511, -267.928, 58.949, 0.15 ) }
    dend_36 { pt3dadd( -105.835, -268.38, 58.8808, 0.15 ) }
    dend_36 { pt3dadd( -106.616, -269.531, 58.7136, 0.52 ) }
    dend_36 { pt3dadd( -107.744, -271.288, 58.4825, 0.15 ) }
    dend_36 { pt3dadd( -108.407, -272.393, 58.3355, 0.52 ) }
    dend_36 { pt3dadd( -109.416, -274.219, 58.1, 0.15 ) }
    dend_36 { pt3dadd( -109.714, -274.829, 58.0035, 0.37 ) }
    dend_36 { pt3dadd( -109.903, -275.283, 57.9096, 0.81 ) }
    dend_36 { pt3dadd( -110.116, -275.922, 57.7308, 1.03 ) }
    dend_36 { pt3dadd( -110.423, -277.086, 57.3347, 0.07 ) }
    dend_36 { pt3dadd( -110.784, -278.429, 56.8018, 0.15 ) }
    dend_36 { pt3dadd( -111.169, -279.682, 56.1941, 0.29 ) }
    dend_36 { pt3dadd( -111.539, -280.824, 55.5167, 0.15 ) }
    dend_36 { pt3dadd( -111.86, -281.763, 54.853, 0.15 ) }
    dend_36 { pt3dadd( -112.071, -282.378, 54.3506, 0.29 ) }
    dend_36 { pt3dadd( -112.355, -283.229, 53.597, 0.37 ) }
    dend_36 { pt3dadd( -112.784, -284.503, 52.3965, 0.22 ) }
    dend_36 { pt3dadd( -113.187, -285.66, 51.2992, 0.22 ) }
    dend_36 { pt3dadd( -113.618, -286.877, 50.1174, 0.22 ) }
    dend_36 { pt3dadd( -113.854, -287.537, 49.4547, 0.22 ) }
    dend_36 { pt3dadd( -114.051, -288.132, 48.81, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 39.4654, 29.2699, 2.65068, 0.59 ) }
    dend_34 { pt3dadd( 40.8059, 29.5139, 3.09545, 0.59 ) }
    dend_34 { pt3dadd( 41.5416, 29.664, 3.36809, 0.59 ) }
    dend_34 { pt3dadd( 42.5804, 29.8595, 3.8209, 0.59 ) }
    dend_34 { pt3dadd( 43.3809, 29.9705, 4.13975, 0.59 ) }
    dend_34 { pt3dadd( 44.0004, 30.0267, 4.34394, 0.44 ) }
    dend_34 { pt3dadd( 45.0569, 30.0901, 4.59335, 0.59 ) }
    dend_34 { pt3dadd( 46.1486, 30.1437, 4.74064, 0.59 ) }
    dend_34 { pt3dadd( 47.3825, 30.2063, 4.78784, 0.66 ) }
    dend_34 { pt3dadd( 48.6995, 30.3083, 4.70028, 0.66 ) }
    dend_34 { pt3dadd( 49.8454, 30.4793, 4.50652, 0.66 ) }
    dend_34 { pt3dadd( 51.1117, 30.7979, 4.13612, 0.52 ) }
    dend_34 { pt3dadd( 51.8285, 31.0568, 3.8587, 0.52 ) }
    dend_34 { pt3dadd( 52.452, 31.3547, 3.60279, 0.88 ) }
    dend_34 { pt3dadd( 53.2215, 31.7823, 3.30144, 1.03 ) }
    dend_34 { pt3dadd( 54.1749, 32.3638, 3.00945, 0.74 ) }
    dend_34 { pt3dadd( 55.4348, 33.1111, 2.78613, 0.81 ) }
    dend_34 { pt3dadd( 56.0724, 33.4337, 2.77147, 0.59 ) }
    dend_34 { pt3dadd( 57.2496, 33.9188, 2.91536, 0.52 ) }
    dend_34 { pt3dadd( 58.208, 34.2418, 3.18265, 0.81 ) }
    dend_34 { pt3dadd( 58.7161, 34.3925, 3.41651, 1.03 ) }
    dend_34 { pt3dadd( 59.8749, 34.7338, 4.1078, 0.59 ) }
    dend_34 { pt3dadd( 60.9545, 35.0802, 4.82516, 0.44 ) }
    dend_34 { pt3dadd( 61.8613, 35.4199, 5.43168, 0.52 ) }
    dend_34 { pt3dadd( 62.7592, 35.8228, 5.96717, 0.52 ) }
    dend_34 { pt3dadd( 63.9253, 36.4345, 6.52539, 0.59 ) }
    dend_34 { pt3dadd( 64.9121, 36.9985, 6.84416, 0.66 ) }
    dend_34 { pt3dadd( 65.884, 37.5749, 6.99734, 1.11 ) }
    dend_34 { pt3dadd( 66.5861, 37.99, 7.01806, 1.18 ) }
    dend_34 { pt3dadd( 67.9969, 38.7673, 6.92754, 0.74 ) }
    dend_34 { pt3dadd( 68.9483, 39.2675, 6.81937, 0.37 ) }
    dend_34 { pt3dadd( 69.6023, 39.6094, 6.73432, 0.37 ) }
    dend_34 { pt3dadd( 70.374, 40.0085, 6.63045, 0.44 ) }
    dend_34 { pt3dadd( 70.8722, 40.275, 6.56833, 0.44 ) }
    dend_34 { pt3dadd( 71.4616, 40.6109, 6.47145, 0.44 ) }
    dend_34 { pt3dadd( 72.3244, 41.164, 6.3021, 0.74 ) }
    dend_34 { pt3dadd( 73.2036, 41.7768, 6.05304, 0.96 ) }
    dend_34 { pt3dadd( 74.2743, 42.5493, 5.65118, 0.88 ) }
    dend_34 { pt3dadd( 75.0085, 43.0627, 5.32502, 0.66 ) }
    dend_34 { pt3dadd( 75.7702, 43.5245, 4.95049, 0.66 ) }
    dend_34 { pt3dadd( 76.5711, 43.9151, 4.51223, 0.37 ) }
    dend_34 { pt3dadd( 77.3258, 44.1826, 4.05535, 0.29 ) }
    dend_34 { pt3dadd( 77.9754, 44.3465, 3.6267, 0.52 ) }
    dend_34 { pt3dadd( 78.6033, 44.4847, 3.1951, 1.11 ) }
    dend_34 { pt3dadd( 79.4456, 44.6884, 2.59888, 0.59 ) }
    dend_34 { pt3dadd( 80.2544, 44.9691, 2.03557, 0.37 ) }
    dend_34 { pt3dadd( 80.8053, 45.253, 1.6507, 0.37 ) }
    dend_34 { pt3dadd( 81.6706, 45.8756, 1.09359, 0.88 ) }
    dend_34 { pt3dadd( 82.1579, 46.3098, 0.809973, 0.96 ) }
    dend_34 { pt3dadd( 82.9849, 47.1249, 0.399223, 0.74 ) }
    dend_34 { pt3dadd( 83.7852, 47.9392, 0.104517, 0.59 ) }
    dend_34 { pt3dadd( 84.5393, 48.6539, -0.0574921, 0.44 ) }
    dend_34 { pt3dadd( 85.2072, 49.2375, -0.114253, 1.03 ) }
    dend_34 { pt3dadd( 85.652, 49.5975, -0.132065, 1.03 ) }
    dend_34 { pt3dadd( 86.4766, 50.2176, -0.182112, 0.81 ) }
    dend_34 { pt3dadd( 86.9921, 50.6074, -0.231155, 0.88 ) }
    dend_34 { pt3dadd( 87.8231, 51.3251, -0.364102, 0.59 ) }
    dend_34 { pt3dadd( 88.6977, 52.2602, -0.550264, 0.44 ) }
    dend_34 { pt3dadd( 89.481, 53.3176, -0.715549, 0.44 ) }
    dend_34 { pt3dadd( 89.8855, 53.9743, -0.77475, 0.44 ) }
    dend_34 { pt3dadd( 90.3414, 54.846, -0.774523, 0.59 ) }
    dend_34 { pt3dadd( 90.9833, 56.1587, -0.612549, 0.74 ) }
    dend_34 { pt3dadd( 91.4066, 56.9847, -0.378984, 0.44 ) }
    dend_34 { pt3dadd( 91.9371, 57.8821, 0.0297277, 0.44 ) }
    dend_34 { pt3dadd( 92.4746, 58.6982, 0.511931, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 93.1501, 59.6522, 1.16108, 0.88 ) }
    dend_34 { pt3dadd( 93.9156, 60.6531, 1.90784, 0.88 ) }
    dend_34 { pt3dadd( 94.7918, 61.7243, 2.75279, 0.37 ) }
    dend_34 { pt3dadd( 95.5381, 62.6108, 3.40311, 0.29 ) }
    dend_34 { pt3dadd( 95.7225, 62.8253, 3.54358, 0.29 ) }
    dend_34 { pt3dadd( 96.1276, 63.2937, 3.80881, 0.29 ) }
    dend_34 { pt3dadd( 96.4492, 63.6421, 3.97061, 0.29 ) }
    dend_34 { pt3dadd( 96.7646, 63.9568, 4.08059, 0.29 ) }
    dend_34 { pt3dadd( 97.6054, 64.7088, 4.28321, 0.37 ) }
    dend_34 { pt3dadd( 98.3562, 65.2802, 4.42095, 0.74 ) }
    dend_34 { pt3dadd( 99.2833, 65.8909, 4.51408, 0.96 ) }
    dend_34 { pt3dadd( 100.147, 66.406, 4.54448, 1.18 ) }
    dend_34 { pt3dadd( 100.913, 66.8342, 4.54316, 1.11 ) }
    dend_34 { pt3dadd( 101.531, 67.1608, 4.52103, 0.88 ) }
    dend_34 { pt3dadd( 102.399, 67.6043, 4.48172, 0.66 ) }
    dend_34 { pt3dadd( 103.791, 68.3089, 4.45285, 0.44 ) }
    dend_34 { pt3dadd( 104.791, 68.8121, 4.49861, 0.66 ) }
    dend_34 { pt3dadd( 105.355, 69.1034, 4.57229, 0.44 ) }
    dend_34 { pt3dadd( 105.916, 69.3952, 4.70631, 0.44 ) }
    dend_34 { pt3dadd( 106.765, 69.8485, 5.00434, 0.74 ) }
    dend_34 { pt3dadd( 107.534, 70.2743, 5.35932, 1.18 ) }
    dend_34 { pt3dadd( 108.569, 70.8872, 5.94279, 1.11 ) }
    dend_34 { pt3dadd( 109.424, 71.4318, 6.43678, 0.81 ) }
    dend_34 { pt3dadd( 110.371, 72.0689, 6.97055, 0.44 ) }
    dend_34 { pt3dadd( 111.113, 72.5807, 7.379, 0.44 ) }
    dend_34 { pt3dadd( 111.579, 72.8992, 7.62201, 0.44 ) }
    dend_34 { pt3dadd( 112.225, 73.3237, 7.93107, 0.66 ) }
    dend_34 { pt3dadd( 113.108, 73.8815, 8.34308, 0.37 ) }
    dend_34 { pt3dadd( 113.563, 74.1618, 8.55425, 0.29 ) }
    dend_34 { pt3dadd( 114.007, 74.454, 8.76904, 0.29 ) }
    dend_34 { pt3dadd( 114.549, 74.8479, 9.06582, 0.29 ) }
    dend_34 { pt3dadd( 115.15, 75.3308, 9.41856, 0.81 ) }
    dend_34 { pt3dadd( 115.695, 75.8453, 9.76854, 1.03 ) }
    dend_34 { pt3dadd( 116.401, 76.6526, 10.2821, 0.59 ) }
    dend_34 { pt3dadd( 117.117, 77.6155, 10.9046, 0.52 ) }
    dend_34 { pt3dadd( 117.674, 78.4308, 11.4269, 0.74 ) }
    dend_34 { pt3dadd( 118.04, 78.9937, 11.806, 0.37 ) }
    dend_34 { pt3dadd( 118.723, 80.0215, 12.5283, 0.29 ) }
    dend_34 { pt3dadd( 119.335, 80.8909, 13.1555, 0.29 ) }
    dend_34 { pt3dadd( 120.174, 82.0204, 14.0313, 0.29 ) }
    dend_34 { pt3dadd( 120.497, 82.4253, 14.3543, 0.88 ) }
    dend_34 { pt3dadd( 121.05, 83.0811, 14.8647, 0.88 ) }
    dend_34 { pt3dadd( 121.727, 83.816, 15.4319, 0.29 ) }
    dend_34 { pt3dadd( 122.276, 84.3533, 15.8266, 0.22 ) }
    dend_34 { pt3dadd( 122.882, 84.9097, 16.1759, 0.29 ) }
    dend_34 { pt3dadd( 123.551, 85.4882, 16.4735, 0.74 ) }
    dend_34 { pt3dadd( 124.045, 85.9017, 16.6704, 0.29 ) }
    dend_34 { pt3dadd( 125.093, 86.7303, 17.0152, 0.22 ) }
    dend_34 { pt3dadd( 125.838, 87.3097, 17.243, 0.22 ) }
    dend_34 { pt3dadd( 126.49, 87.7865, 17.413, 0.37 ) }
    dend_34 { pt3dadd( 127.347, 88.367, 17.6059, 0.74 ) }
    dend_34 { pt3dadd( 127.958, 88.7627, 17.7568, 0.74 ) }
    dend_34 { pt3dadd( 128.621, 89.1899, 17.9208, 0.29 ) }
    dend_34 { pt3dadd( 129.435, 89.7167, 18.1317, 0.22 ) }
    dend_34 { pt3dadd( 130.026, 90.0874, 18.3157, 0.37 ) }
    dend_34 { pt3dadd( 130.775, 90.5384, 18.6071, 0.22 ) }
    dend_34 { pt3dadd( 131.538, 90.9721, 18.9455, 0.22 ) }
    dend_34 { pt3dadd( 131.926, 91.1786, 19.1399, 0.37 ) }
    dend_34 { pt3dadd( 132.756, 91.5901, 19.5861, 0.37 ) }
    dend_34 { pt3dadd( 133.625, 92.0048, 20.0883, 0.37 ) }
    dend_34 { pt3dadd( 134.312, 92.3564, 20.5005, 0.44 ) }
    dend_34 { pt3dadd( 134.787, 92.6184, 20.7923, 0.81 ) }
    dend_34 { pt3dadd( 135.499, 93.0487, 21.2371, 1.47 ) }
    dend_34 { pt3dadd( 135.937, 93.343, 21.5262, 1.62 ) }
    dend_34 { pt3dadd( 136.893, 94.0555, 22.1912, 0.59 ) }
    dend_34 { pt3dadd( 138.034, 94.975, 23.0345, 0.29 ) }
    dend_34 { pt3dadd( 138.758, 95.584, 23.5867, 0.22 ) }
    dend_34 { pt3dadd( 139.204, 95.974, 23.9412, 0.22 ) }
    dend_34 { pt3dadd( 139.592, 96.3232, 24.2489, 0.22 ) }
    dend_34 { pt3dadd( 139.976, 96.6693, 24.5493, 0.22 ) }
    dend_34 { pt3dadd( 140.356, 97.0043, 24.8339, 0.22 ) }
    dend_34 { pt3dadd( 140.889, 97.4462, 25.2385, 0.37 ) }
    dend_34 { pt3dadd( 141.358, 97.8078, 25.5805, 0.88 ) }
    dend_34 { pt3dadd( 141.756, 98.0964, 25.855, 1.25 ) }
    dend_34 { pt3dadd( 142.378, 98.5479, 26.2822, 1.25 ) }
    dend_34 { pt3dadd( 142.972, 99.002, 26.7125, 0.29 ) }
    dend_34 { pt3dadd( 143.562, 99.4879, 27.1717, 0.15 ) }
    dend_34 { pt3dadd( 144.019, 99.8762, 27.528, 0.29 ) }
    dend_34 { pt3dadd( 144.627, 100.387, 27.9704, 0.15 ) }
    dend_34 { pt3dadd( 145.006, 100.711, 28.2432, 0.15 ) }
    dend_34 { pt3dadd( 145.314, 100.976, 28.4509, 0.44 ) }
    dend_34 { pt3dadd( 146.121, 101.618, 28.8948, 0.74 ) }
    dend_34 { pt3dadd( 146.793, 102.126, 29.221, 0.22 ) }
    dend_34 { pt3dadd( 147.56, 102.674, 29.5554, 0.15 ) }
    dend_34 { pt3dadd( 148.106, 103.052, 29.7673, 0.66 ) }
    dend_34 { pt3dadd( 148.61, 103.41, 29.9237, 0.66 ) }
    dend_34 { pt3dadd( 149.865, 104.347, 30.2786, 0.22 ) }
    dend_34 { pt3dadd( 150.456, 104.825, 30.4302, 0.66 ) }
    dend_34 { pt3dadd( 150.935, 105.258, 30.5454, 1.18 ) }
    dend_34 { pt3dadd( 151.397, 105.728, 30.661, 0.96 ) }
    dend_34 { pt3dadd( 152.434, 106.88, 30.9336, 0.15 ) }
    dend_34 { pt3dadd( 152.796, 107.324, 31.0377, 0.15 ) }
    dend_34 { pt3dadd( 153.209, 107.88, 31.1562, 0.22 ) }
    dend_34 { pt3dadd( 153.682, 108.491, 31.3048, 0.07 ) }
    dend_34 { pt3dadd( 154.332, 109.29, 31.5782, 0.07 ) }
    dend_34 { pt3dadd( 154.587, 109.591, 31.7191, 0.74 ) }
    dend_34 { pt3dadd( 155.084, 110.139, 32.041, 1.03 ) }
    dend_34 { pt3dadd( 155.633, 110.714, 32.4085, 0.44 ) }
    dend_34 { pt3dadd( 156.469, 111.608, 33.0895, 0.15 ) }
    dend_34 { pt3dadd( 157.02, 112.22, 33.6321, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_34 { pt3dadd( 157.361, 112.627, 34.043, 0.15 ) }
    dend_34 { pt3dadd( 157.619, 112.969, 34.4314, 0.37 ) }
    dend_34 { pt3dadd( 157.95, 113.444, 35.0524, 0.59 ) }
    dend_34 { pt3dadd( 158.518, 114.378, 36.457, 0.22 ) }
    dend_34 { pt3dadd( 158.78, 114.898, 37.3184, 0.44 ) }
    dend_34 { pt3dadd( 158.963, 115.344, 38.1311, 0.44 ) }
    dend_34 { pt3dadd( 159.051, 115.612, 38.665, 0.44 ) }
    dend_34 { pt3dadd( 159.109, 115.839, 39.1939, 0.44 ) }
    dend_34 { pt3dadd( 159.194, 116.165, 40.1515, 0.44 ) }
    dend_34 { pt3dadd( 159.22, 116.238, 40.4202, 0.44 ) }
    dend_34 { pt3dadd( 159.268, 116.341, 40.8247, 0.44 ) }
    dend_34 { pt3dadd( 159.381, 116.501, 41.5328, 0.44 ) }
    dend_34 { pt3dadd( 159.517, 116.639, 42.2396, 0.44 ) }
    dend_34 { pt3dadd( 159.907, 116.946, 44.0502, 0.22 ) }
    dend_34 { pt3dadd( 160.197, 117.116, 45.2527, 0.22 ) }
    dend_34 { pt3dadd( 160.427, 117.232, 46.205, 0.22 ) }
    dend_34 { pt3dadd( 160.631, 117.323, 47.0931, 0.74 ) }
    dend_34 { pt3dadd( 161.038, 117.467, 49.0572, 0.22 ) }
    dend_34 { pt3dadd( 161.336, 117.566, 50.7329, 0.52 ) }
    dend_34 { pt3dadd( 161.543, 117.623, 52.0469, 0.22 ) }
    dend_34 { pt3dadd( 161.714, 117.685, 53.2845, 0.52 ) }
    dend_34 { pt3dadd( 161.853, 117.766, 54.4806, 0.52 ) }
    dend_34 { pt3dadd( 161.939, 117.911, 55.8441, 0.29 ) }
    dend_34 { pt3dadd( 161.93, 118.14, 57.2443, 0.29 ) }
    dend_34 { pt3dadd( 161.878, 118.293, 57.875, 0.29 ) }
    dend_34 { pt3dadd( 161.756, 118.595, 58.7238, 0.29 ) }
    dend_34 { pt3dadd( 161.694, 118.8, 59.1249, 0.29 ) }
    dend_34 { pt3dadd( 161.603, 119.306, 59.8698, 0.29 ) }
    dend_34 { pt3dadd( 161.575, 119.98, 60.6977, 0.29 ) }
    dend_34 { pt3dadd( 161.619, 120.329, 61.1068, 0.29 ) }
    dend_34 { pt3dadd( 161.739, 120.783, 61.6793, 0.52 ) }
    dend_34 { pt3dadd( 161.977, 121.477, 62.6533, 0.22 ) }
    dend_34 { pt3dadd( 162.358, 122.294, 63.8074, 0.22 ) }
    dend_34 { pt3dadd( 162.681, 122.87, 64.6118, 0.22 ) }
    dend_34 { pt3dadd( 162.976, 123.373, 65.2472, 0.52 ) }
    dend_34 { pt3dadd( 163.508, 124.331, 66.3186, 0.52 ) }
    dend_34 { pt3dadd( 163.984, 125.227, 67.2953, 0.52 ) }
    dend_34 { pt3dadd( 164.651, 126.555, 68.6185, 0.22 ) }
    dend_34 { pt3dadd( 165.11, 127.504, 69.4413, 0.22 ) }
    dend_34 { pt3dadd( 165.587, 128.563, 70.2559, 0.22 ) }
    dend_34 { pt3dadd( 165.953, 129.398, 70.7996, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 39.4654, 29.2699, 2.65068, 0.81 ) }
    dend_33 { pt3dadd( 39.6205, 30.2217, 2.4272, 0.81 ) }
    dend_33 { pt3dadd( 39.8015, 31.0434, 2.11385, 0.52 ) }
    dend_33 { pt3dadd( 39.9685, 31.6538, 1.79262, 0.66 ) }
    dend_33 { pt3dadd( 40.2056, 32.4588, 1.21274, 0.44 ) }
    dend_33 { pt3dadd( 40.3708, 33.0902, 0.649383, 0.44 ) }
    dend_33 { pt3dadd( 40.51, 33.7002, 0.0274182, 0.44 ) }
    dend_33 { pt3dadd( 40.6119, 34.1111, -0.552295, 0.44 ) }
    dend_33 { pt3dadd( 40.7007, 34.4044, -1.11549, 0.44 ) }
    dend_33 { pt3dadd( 40.8104, 34.7453, -1.93351, 0.44 ) }
    dend_33 { pt3dadd( 40.8833, 34.9791, -2.55926, 0.44 ) }
    dend_33 { pt3dadd( 40.941, 35.1337, -2.94556, 0.44 ) }
    dend_33 { pt3dadd( 41.0551, 35.4235, -3.5352, 0.59 ) }
    dend_33 { pt3dadd( 41.2209, 35.8481, -4.15145, 0.59 ) }
    dend_33 { pt3dadd( 41.3081, 36.059, -4.36373, 0.59 ) }
    dend_33 { pt3dadd( 41.4974, 36.4952, -4.68884, 0.66 ) }
    dend_33 { pt3dadd( 41.656, 36.8785, -4.91454, 0.96 ) }
    dend_33 { pt3dadd( 41.7911, 37.2792, -5.09971, 0.96 ) }
    dend_33 { pt3dadd( 41.9486, 37.8681, -5.30151, 0.96 ) }
    dend_33 { pt3dadd( 42.1574, 38.7248, -5.51967, 0.88 ) }
    dend_33 { pt3dadd( 42.2896, 39.2707, -5.63004, 0.52 ) }
    dend_33 { pt3dadd( 42.4529, 39.8459, -5.71933, 0.29 ) }
    dend_33 { pt3dadd( 42.6149, 40.3349, -5.77404, 0.29 ) }
    dend_33 { pt3dadd( 42.7911, 40.7745, -5.80501, 0.44 ) }
    dend_33 { pt3dadd( 43.0052, 41.2268, -5.8127, 0.88 ) }
    dend_33 { pt3dadd( 43.2703, 41.7493, -5.81821, 0.66 ) }
    dend_33 { pt3dadd( 43.6588, 42.5365, -5.86431, 0.52 ) }
    dend_33 { pt3dadd( 43.8595, 42.9915, -5.92536, 0.59 ) }
    dend_33 { pt3dadd( 44.1584, 43.7894, -6.09791, 0.74 ) }
    dend_33 { pt3dadd( 44.418, 44.6691, -6.37308, 0.88 ) }
    dend_33 { pt3dadd( 44.5486, 45.272, -6.62278, 0.52 ) }
    dend_33 { pt3dadd( 44.6434, 45.914, -6.94512, 0.52 ) }
    dend_33 { pt3dadd( 44.7135, 46.5851, -7.34266, 0.59 ) }
    dend_33 { pt3dadd( 44.7691, 46.943, -7.58876, 0.59 ) }
    dend_33 { pt3dadd( 44.8688, 47.3674, -7.91756, 0.81 ) }
    dend_33 { pt3dadd( 45.0488, 47.8903, -8.33657, 0.81 ) }
    dend_33 { pt3dadd( 45.2893, 48.3905, -8.68123, 0.81 ) }
    dend_33 { pt3dadd( 45.608, 48.9144, -8.96819, 0.52 ) }
    dend_33 { pt3dadd( 46.1264, 49.6698, -9.2711, 0.29 ) }
    dend_33 { pt3dadd( 46.3861, 50.0198, -9.36807, 0.29 ) }
    dend_33 { pt3dadd( 46.747, 50.4544, -9.44292, 0.59 ) }
    dend_33 { pt3dadd( 47.3014, 51.055, -9.4864, 0.81 ) }
    dend_33 { pt3dadd( 47.6512, 51.4156, -9.49455, 1.03 ) }
    dend_33 { pt3dadd( 48.07, 51.8635, -9.47747, 0.29 ) }
    dend_33 { pt3dadd( 48.4381, 52.2973, -9.45324, 0.22 ) }
    dend_33 { pt3dadd( 48.7957, 52.7854, -9.43874, 0.22 ) }
    dend_33 { pt3dadd( 49.0178, 53.187, -9.45204, 0.29 ) }
    dend_33 { pt3dadd( 49.2712, 53.7965, -9.49913, 0.74 ) }
    dend_33 { pt3dadd( 49.4431, 54.319, -9.52989, 0.88 ) }
    dend_33 { pt3dadd( 49.5799, 54.8322, -9.55828, 0.88 ) }
    dend_33 { pt3dadd( 49.7056, 55.4382, -9.5807, 0.52 ) }
    dend_33 { pt3dadd( 49.8649, 56.411, -9.59443, 0.52 ) }
    dend_33 { pt3dadd( 49.9435, 57.0157, -9.59526, 0.44 ) }
    dend_33 { pt3dadd( 50.0289, 57.9009, -9.59898, 0.44 ) }
    dend_33 { pt3dadd( 50.0589, 58.5157, -9.61049, 0.44 ) }
    dend_33 { pt3dadd( 50.0532, 59.1087, -9.62277, 0.74 ) }
    dend_33 { pt3dadd( 50.0233, 59.5178, -9.62094, 0.88 ) }
    dend_33 { pt3dadd( 49.8961, 60.3743, -9.5882, 0.96 ) }
    dend_33 { pt3dadd( 49.7566, 61.1668, -9.51777, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 49.6806, 61.7184, -9.41801, 0.22 ) }
    dend_33 { pt3dadd( 49.6754, 62.1487, -9.2756, 0.22 ) }
    dend_33 { pt3dadd( 49.7828, 62.7829, -8.96898, 0.74 ) }
    dend_33 { pt3dadd( 49.8498, 62.9951, -8.85026, 0.74 ) }
    dend_33 { pt3dadd( 50.1641, 63.729, -8.42066, 0.52 ) }
    dend_33 { pt3dadd( 50.506, 64.4663, -8.03868, 0.44 ) }
    dend_33 { pt3dadd( 50.8046, 65.1344, -7.78036, 0.44 ) }
    dend_33 { pt3dadd( 51.06, 65.8263, -7.61037, 0.66 ) }
    dend_33 { pt3dadd( 51.2446, 66.5463, -7.53739, 0.66 ) }
    dend_33 { pt3dadd( 51.3288, 67.0675, -7.50912, 0.66 ) }
    dend_33 { pt3dadd( 51.3913, 67.9, -7.52296, 0.29 ) }
    dend_33 { pt3dadd( 51.4076, 68.4818, -7.53401, 0.29 ) }
    dend_33 { pt3dadd( 51.4215, 69.1279, -7.48725, 0.44 ) }
    dend_33 { pt3dadd( 51.4323, 69.526, -7.39922, 0.44 ) }
    dend_33 { pt3dadd( 51.465, 70.2165, -7.11194, 0.74 ) }
    dend_33 { pt3dadd( 51.4811, 70.5261, -6.94304, 1.11 ) }
    dend_33 { pt3dadd( 51.5133, 71.2543, -6.50233, 0.44 ) }
    dend_33 { pt3dadd( 51.5295, 72.0183, -6.04754, 0.74 ) }
    dend_33 { pt3dadd( 51.5178, 72.3852, -5.8628, 0.52 ) }
    dend_33 { pt3dadd( 51.4717, 72.8278, -5.70302, 0.29 ) }
    dend_33 { pt3dadd( 51.3865, 73.2815, -5.62231, 0.22 ) }
    dend_33 { pt3dadd( 51.2027, 73.9259, -5.61441, 0.59 ) }
    dend_33 { pt3dadd( 51.0153, 74.4402, -5.68967, 0.96 ) }
    dend_33 { pt3dadd( 50.7835, 74.9979, -5.80511, 0.66 ) }
    dend_33 { pt3dadd( 50.5008, 75.6616, -5.92007, 0.44 ) }
    dend_33 { pt3dadd( 50.2231, 76.3563, -5.98977, 0.44 ) }
    dend_33 { pt3dadd( 49.9525, 77.155, -5.94715, 0.22 ) }
    dend_33 { pt3dadd( 49.8493, 77.5789, -5.84783, 0.37 ) }
    dend_33 { pt3dadd( 49.7663, 78.2238, -5.58575, 0.59 ) }
    dend_33 { pt3dadd( 49.7535, 78.9277, -5.19616, 0.29 ) }
    dend_33 { pt3dadd( 49.7984, 79.6253, -4.74626, 0.29 ) }
    dend_33 { pt3dadd( 49.852, 80.3497, -4.25277, 0.37 ) }
    dend_33 { pt3dadd( 49.8511, 80.7019, -4.01213, 0.29 ) }
    dend_33 { pt3dadd( 49.7769, 81.254, -3.67305, 0.66 ) }
    dend_33 { pt3dadd( 49.6313, 81.7415, -3.42981, 1.11 ) }
    dend_33 { pt3dadd( 49.4436, 82.152, -3.27113, 1.11 ) }
    dend_33 { pt3dadd( 49.0237, 82.9035, -3.06369, 0.37 ) }
    dend_33 { pt3dadd( 48.5083, 83.7965, -2.88565, 0.22 ) }
    dend_33 { pt3dadd( 48.3017, 84.1608, -2.82334, 0.59 ) }
    dend_33 { pt3dadd( 48.0982, 84.5178, -2.77, 1.11 ) }
    dend_33 { pt3dadd( 47.6625, 85.3182, -2.66877, 0.29 ) }
    dend_33 { pt3dadd( 47.2271, 86.2191, -2.58247, 0.96 ) }
    dend_33 { pt3dadd( 46.9874, 86.8471, -2.56292, 0.15 ) }
    dend_33 { pt3dadd( 46.8867, 87.1977, -2.57305, 0.22 ) }
    dend_33 { pt3dadd( 46.6692, 88.0309, -2.64435, 0.07 ) }
    dend_33 { pt3dadd( 46.5803, 88.3791, -2.70971, 0.22 ) }
    dend_33 { pt3dadd( 46.5312, 88.5763, -2.7706, 0.22 ) }
    dend_33 { pt3dadd( 46.3993, 89.1663, -3.03753, 0.07 ) }
    dend_33 { pt3dadd( 46.3545, 89.4227, -3.18614, 0.22 ) }
    dend_33 { pt3dadd( 46.3253, 89.6908, -3.367, 0.22 ) }
    dend_33 { pt3dadd( 46.3209, 90.1809, -3.74822, 0.15 ) }
    dend_33 { pt3dadd( 46.3176, 90.4247, -3.94862, 0.29 ) }
    dend_33 { pt3dadd( 46.2915, 90.8901, -4.32628, 0.07 ) }
    dend_33 { pt3dadd( 46.2603, 91.1622, -4.5347, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.14869, -22.9682, -1.01215, 0.81 ) }
    dend_31 { pt3dadd( -0.764568, -23.5853, -1.96344, 0.81 ) }
    dend_31 { pt3dadd( -0.251782, -24.305, -3.13977, 0.81 ) }
    dend_31 { pt3dadd( 0.0769121, -24.6976, -3.82369, 0.81 ) }
    dend_31 { pt3dadd( 0.507459, -25.1182, -4.59685, 0.88 ) }
    dend_31 { pt3dadd( 0.969338, -25.4711, -5.31213, 1.18 ) }
    dend_31 { pt3dadd( 1.32023, -25.6773, -5.79058, 1.18 ) }
    dend_31 { pt3dadd( 1.62189, -25.7897, -6.14386, 1.18 ) }
    dend_31 { pt3dadd( 2.20207, -25.9487, -6.69237, 0.96 ) }
    dend_31 { pt3dadd( 2.93775, -26.1334, -7.29787, 0.96 ) }
    dend_31 { pt3dadd( 3.79075, -26.3412, -7.94013, 0.81 ) }
    dend_31 { pt3dadd( 4.88805, -26.6269, -8.68047, 0.81 ) }
    dend_31 { pt3dadd( 5.55533, -26.8168, -9.06672, 0.81 ) }
    dend_31 { pt3dadd( 6.612, -27.1359, -9.54876, 0.81 ) }
    dend_31 { pt3dadd( 7.58287, -27.4469, -9.84996, 0.88 ) }
    dend_31 { pt3dadd( 8.42693, -27.7411, -9.96501, 0.88 ) }
    dend_31 { pt3dadd( 9.22073, -28.05, -9.89126, 0.59 ) }
    dend_31 { pt3dadd( 10.0509, -28.3843, -9.61214, 0.59 ) }
    dend_31 { pt3dadd( 11.0359, -28.756, -9.08335, 0.59 ) }
    dend_31 { pt3dadd( 11.7076, -28.9823, -8.60111, 0.74 ) }
    dend_31 { pt3dadd( 12.3731, -29.1829, -8.04266, 0.59 ) }
    dend_31 { pt3dadd( 13.1891, -29.4198, -7.31865, 0.59 ) }
    dend_31 { pt3dadd( 13.9424, -29.6439, -6.66827, 0.88 ) }
    dend_31 { pt3dadd( 14.8537, -29.9262, -5.96788, 0.88 ) }
    dend_31 { pt3dadd( 15.7141, -30.2211, -5.41322, 1.03 ) }
    dend_31 { pt3dadd( 16.7021, -30.6069, -4.91499, 0.81 ) }
    dend_31 { pt3dadd( 17.4038, -30.9179, -4.65649, 0.66 ) }
    dend_31 { pt3dadd( 18.1721, -31.3178, -4.46519, 0.66 ) }
    dend_31 { pt3dadd( 19.0611, -31.8702, -4.26806, 0.44 ) }
    dend_31 { pt3dadd( 20.0832, -32.5871, -4.00214, 0.44 ) }
    dend_31 { pt3dadd( 20.8592, -33.1608, -3.70419, 0.66 ) }
    dend_31 { pt3dadd( 21.2993, -33.4956, -3.45833, 1.11 ) }
    dend_31 { pt3dadd( 22.1126, -34.092, -2.8064, 1.25 ) }
    dend_31 { pt3dadd( 23.087, -34.7709, -1.83053, 0.44 ) }
    dend_31 { pt3dadd( 23.8676, -35.2834, -0.964723, 0.52 ) }
    dend_31 { pt3dadd( 24.7319, -35.8104, 0.0404004, 0.52 ) }
    dend_31 { pt3dadd( 25.3729, -36.1837, 0.790769, 0.52 ) }
    dend_31 { pt3dadd( 26.2528, -36.7161, 1.83512, 0.59 ) }
    dend_31 { pt3dadd( 26.7615, -37.0443, 2.44819, 0.96 ) }
    dend_31 { pt3dadd( 27.2996, -37.4253, 3.10205, 1.11 ) }
    dend_31 { pt3dadd( 27.9219, -37.9065, 3.86957, 0.81 ) }
    dend_31 { pt3dadd( 28.5715, -38.4279, 4.69219, 0.52 ) }
    dend_31 { pt3dadd( 29.0834, -38.7983, 5.35083, 0.52 ) }
    dend_31 { pt3dadd( 29.2766, -38.9269, 5.59607, 0.52 ) }
    dend_31 { pt3dadd( 29.5712, -39.106, 5.96843, 0.52 ) }
    dend_31 { pt3dadd( 29.8613, -39.2681, 6.28402, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 30.4559, -39.5714, 6.7831, 0.96 ) }
    dend_31 { pt3dadd( 31.4379, -40.0513, 7.39622, 0.44 ) }
    dend_31 { pt3dadd( 32.0172, -40.3448, 7.68107, 0.81 ) }
    dend_31 { pt3dadd( 32.5848, -40.6547, 7.93389, 1.03 ) }
    dend_31 { pt3dadd( 33.683, -41.3238, 8.35671, 0.44 ) }
    dend_31 { pt3dadd( 34.359, -41.7708, 8.60754, 0.44 ) }
    dend_31 { pt3dadd( 34.8384, -42.1065, 8.79397, 0.88 ) }
    dend_31 { pt3dadd( 35.3131, -42.4505, 9.01237, 1.55 ) }
    dend_31 { pt3dadd( 35.9796, -42.9239, 9.38098, 1.55 ) }
    dend_31 { pt3dadd( 36.7558, -43.4789, 9.90636, 0.52 ) }
    dend_31 { pt3dadd( 37.656, -44.1519, 10.6307, 0.22 ) }
    dend_31 { pt3dadd( 38.0829, -44.4813, 11.0067, 0.22 ) }
    dend_31 { pt3dadd( 38.5462, -44.8459, 11.4588, 0.22 ) }
    dend_31 { pt3dadd( 38.906, -45.1327, 11.8348, 0.74 ) }
    dend_31 { pt3dadd( 39.3194, -45.4628, 12.2635, 1.18 ) }
    dend_31 { pt3dadd( 39.6363, -45.7168, 12.5905, 1.18 ) }
    dend_31 { pt3dadd( 40.4951, -46.4238, 13.3881, 0.22 ) }
    dend_31 { pt3dadd( 40.8776, -46.7307, 13.6977, 0.22 ) }
    dend_31 { pt3dadd( 41.4987, -47.216, 14.1129, 0.88 ) }
    dend_31 { pt3dadd( 42.3297, -47.8586, 14.591, 0.15 ) }
    dend_31 { pt3dadd( 42.7136, -48.1489, 14.7802, 0.96 ) }
    dend_31 { pt3dadd( 43.16, -48.4852, 14.9682, 1.25 ) }
    dend_31 { pt3dadd( 44.0882, -49.1851, 15.2504, 0.15 ) }
    dend_31 { pt3dadd( 45.141, -49.9783, 15.4821, 0.15 ) }
    dend_31 { pt3dadd( 45.5999, -50.3293, 15.5559, 0.15 ) }
    dend_31 { pt3dadd( 46.3805, -50.9464, 15.65, 0.15 ) }
    dend_31 { pt3dadd( 46.7704, -51.2632, 15.7018, 0.96 ) }
    dend_31 { pt3dadd( 47.47, -51.8541, 15.8146, 1.4 ) }
    dend_31 { pt3dadd( 47.7488, -52.0995, 15.8628, 1.33 ) }
    dend_31 { pt3dadd( 48.4711, -52.7527, 16.0465, 0.22 ) }
    dend_31 { pt3dadd( 48.8767, -53.1129, 16.1646, 0.29 ) }
    dend_31 { pt3dadd( 49.5112, -53.6692, 16.3713, 0.59 ) }
    dend_31 { pt3dadd( 50.0804, -54.1483, 16.5674, 0.59 ) }
    dend_31 { pt3dadd( 50.6384, -54.5828, 16.7778, 1.7 ) }
    dend_31 { pt3dadd( 51.1737, -54.9633, 16.9821, 0.81 ) }
    dend_31 { pt3dadd( 52.1501, -55.5892, 17.3595, 0.15 ) }
    dend_31 { pt3dadd( 52.5646, -55.8331, 17.5279, 0.44 ) }
    dend_31 { pt3dadd( 53.0882, -56.1174, 17.7294, 0.74 ) }
    dend_31 { pt3dadd( 54.1001, -56.6358, 18.1417, 0.22 ) }
    dend_31 { pt3dadd( 54.6846, -56.9212, 18.3872, 0.96 ) }
    dend_31 { pt3dadd( 55.2778, -57.1965, 18.6376, 1.25 ) }
    dend_31 { pt3dadd( 56.0317, -57.5428, 18.9905, 0.29 ) }
    dend_31 { pt3dadd( 57.0093, -57.9877, 19.4533, 0.07 ) }
    dend_31 { pt3dadd( 57.4894, -58.2039, 19.6785, 0.29 ) }
    dend_31 { pt3dadd( 58.1697, -58.5135, 19.9792, 0.74 ) }
    dend_31 { pt3dadd( 59.2611, -59.0223, 20.472, 0.15 ) }
    dend_31 { pt3dadd( 60.0155, -59.3865, 20.8546, 0.15 ) }
    dend_31 { pt3dadd( 60.3687, -59.5684, 21.0673, 0.15 ) }
    dend_31 { pt3dadd( 60.6632, -59.7349, 21.2919, 0.74 ) }
    dend_31 { pt3dadd( 60.8461, -59.8437, 21.4475, 0.96 ) }
    dend_31 { pt3dadd( 61.6413, -60.338, 22.189, 0.15 ) }
    dend_31 { pt3dadd( 62.1151, -60.643, 22.6445, 0.15 ) }
    dend_31 { pt3dadd( 62.7017, -61.0408, 23.2082, 0.88 ) }
    dend_31 { pt3dadd( 63.4778, -61.6046, 24.0239, 0.15 ) }
    dend_31 { pt3dadd( 63.6699, -61.7535, 24.2485, 0.15 ) }
    dend_31 { pt3dadd( 63.9768, -62.0034, 24.6005, 0.29 ) }
    dend_31 { pt3dadd( 64.1987, -62.1954, 24.8576, 0.29 ) }
    dend_31 { pt3dadd( 64.6821, -62.6182, 25.4569, 0.15 ) }
    dend_31 { pt3dadd( 65.1687, -63.0494, 26.1476, 0.15 ) }
    dend_31 { pt3dadd( 65.5776, -63.3964, 26.7931, 0.15 ) }
    dend_31 { pt3dadd( 65.9705, -63.7145, 27.4873, 1.03 ) }
    dend_31 { pt3dadd( 66.5761, -64.1681, 28.7037, 0.15 ) }
    dend_31 { pt3dadd( 67.0268, -64.47, 29.6761, 0.15 ) }
    dend_31 { pt3dadd( 67.3516, -64.6529, 30.372, 0.15 ) }
    dend_31 { pt3dadd( 67.7878, -64.8706, 31.3191, 0.15 ) }
    dend_31 { pt3dadd( 68.2214, -65.0704, 32.3175, 0.15 ) }
    dend_31 { pt3dadd( 68.6773, -65.2593, 33.4525, 0.15 ) }
    dend_31 { pt3dadd( 69.0519, -65.398, 34.4287, 0.15 ) }
    dend_31 { pt3dadd( 69.4087, -65.5272, 35.359, 0.15 ) }
    dend_31 { pt3dadd( 69.8464, -65.6829, 36.5085, 0.15 ) }
    dend_31 { pt3dadd( 70.3239, -65.8574, 37.807, 0.15 ) }
    dend_31 { pt3dadd( 70.5929, -65.9533, 38.5329, 0.15 ) }
    dend_31 { pt3dadd( 71.2456, -66.1882, 40.3192, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.14869, -22.9682, -1.01215, 0.96 ) }
    dend_26 { pt3dadd( -1.91254, -23.8515, -1.16579, 0.96 ) }
    dend_26 { pt3dadd( -2.57343, -24.8059, -1.37332, 0.74 ) }
    dend_26 { pt3dadd( -3.12927, -25.8365, -1.64281, 0.74 ) }
    dend_26 { pt3dadd( -3.6072, -26.9212, -1.9554, 1.03 ) }
    dend_26 { pt3dadd( -3.89189, -27.6843, -2.19451, 1.18 ) }
    dend_26 { pt3dadd( -4.29658, -28.8618, -2.58457, 0.81 ) }
    dend_26 { pt3dadd( -4.53513, -29.7986, -2.91293, 0.81 ) }
    dend_26 { pt3dadd( -4.76204, -30.7922, -3.26614, 0.88 ) }
    dend_26 { pt3dadd( -4.88636, -31.3127, -3.44737, 1.25 ) }
    dend_26 { pt3dadd( -5.13814, -32.2579, -3.74945, 1.25 ) }
    dend_26 { pt3dadd( -5.59435, -33.8021, -4.20818, 0.96 ) }
    dend_26 { pt3dadd( -5.98279, -35.0521, -4.50586, 0.74 ) }
    dend_26 { pt3dadd( -6.30229, -36.1423, -4.68679, 0.74 ) }
    dend_26 { pt3dadd( -6.55889, -37.1701, -4.8149, 0.96 ) }
    dend_26 { pt3dadd( -6.73028, -38.1227, -4.90075, 0.74 ) }
    dend_26 { pt3dadd( -6.82663, -39.2259, -4.95968, 0.74 ) }
    dend_26 { pt3dadd( -6.8129, -40.8307, -4.96898, 0.96 ) }
    dend_26 { pt3dadd( -6.71308, -41.9646, -4.92173, 0.74 ) }
    dend_26 { pt3dadd( -6.53664, -43.0408, -4.84066, 0.81 ) }
    dend_26 { pt3dadd( -6.25553, -44.295, -4.69309, 1.18 ) }
    dend_26 { pt3dadd( -5.90188, -45.5832, -4.49298, 1.18 ) }
    dend_26 { pt3dadd( -5.33058, -47.4172, -4.15782, 0.96 ) }
    dend_26 { pt3dadd( -4.84123, -48.939, -3.8474, 0.96 ) }
    dend_26 { pt3dadd( -4.48549, -50.1061, -3.57235, 1.03 ) }
    dend_26 { pt3dadd( -4.12901, -51.3728, -3.22288, 0.74 ) }
    dend_26 { pt3dadd( -3.85308, -52.5008, -2.88926, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -3.67151, -53.6265, -2.52974, 1.03 ) }
    dend_26 { pt3dadd( -3.63609, -54.8064, -2.14532, 0.88 ) }
    dend_26 { pt3dadd( -3.80554, -56.0648, -1.74444, 0.66 ) }
    dend_26 { pt3dadd( -4.00098, -56.8041, -1.51821, 0.59 ) }
    dend_26 { pt3dadd( -4.25127, -57.5265, -1.3138, 0.81 ) }
    dend_26 { pt3dadd( -4.76018, -58.8285, -0.977193, 0.59 ) }
    dend_26 { pt3dadd( -5.17169, -59.8682, -0.754614, 0.81 ) }
    dend_26 { pt3dadd( -5.46659, -60.6917, -0.645521, 0.81 ) }
    dend_26 { pt3dadd( -5.76571, -61.6895, -0.613085, 0.81 ) }
    dend_26 { pt3dadd( -5.99251, -62.5966, -0.652137, 1.25 ) }
    dend_26 { pt3dadd( -6.21254, -63.6184, -0.766422, 1.25 ) }
    dend_26 { pt3dadd( -6.51409, -65.013, -1.05678, 0.66 ) }
    dend_26 { pt3dadd( -6.75658, -66.0404, -1.36303, 0.66 ) }
    dend_26 { pt3dadd( -6.99298, -66.9193, -1.71209, 1.03 ) }
    dend_26 { pt3dadd( -7.24692, -67.827, -2.17806, 1.33 ) }
    dend_26 { pt3dadd( -7.3998, -68.5449, -2.62256, 0.88 ) }
    dend_26 { pt3dadd( -7.46385, -69.4, -3.23141, 0.59 ) }
    dend_26 { pt3dadd( -7.37756, -69.9578, -3.65744, 0.59 ) }
    dend_26 { pt3dadd( -7.11143, -70.5416, -4.05319, 0.59 ) }
    dend_26 { pt3dadd( -6.59052, -71.271, -4.48779, 0.59 ) }
    dend_26 { pt3dadd( -5.76184, -72.2799, -5.01023, 0.22 ) }
    dend_26 { pt3dadd( -5.32619, -72.8236, -5.26208, 0.74 ) }
    dend_26 { pt3dadd( -4.91541, -73.3913, -5.51314, 1.11 ) }
    dend_26 { pt3dadd( -4.32821, -74.4114, -5.97781, 0.52 ) }
    dend_26 { pt3dadd( -4.03567, -75.1601, -6.339, 0.66 ) }
    dend_26 { pt3dadd( -3.83296, -76.0181, -6.76256, 0.96 ) }
    dend_26 { pt3dadd( -3.69095, -77.0817, -7.25715, 0.81 ) }
    dend_26 { pt3dadd( -3.6064, -77.932, -7.60799, 0.59 ) }
    dend_26 { pt3dadd( -3.53413, -78.8083, -7.9246, 0.59 ) }
    dend_26 { pt3dadd( -3.4635, -79.8248, -8.2231, 0.44 ) }
    dend_26 { pt3dadd( -3.41469, -80.9091, -8.39973, 0.74 ) }
    dend_26 { pt3dadd( -3.41847, -82.1602, -8.47913, 0.74 ) }
    dend_26 { pt3dadd( -3.48962, -83.1374, -8.48273, 0.81 ) }
    dend_26 { pt3dadd( -3.62319, -83.9684, -8.46975, 1.03 ) }
    dend_26 { pt3dadd( -3.89539, -84.9845, -8.47423, 1.03 ) }
    dend_26 { pt3dadd( -4.4269, -86.4238, -8.56824, 0.59 ) }
    dend_26 { pt3dadd( -4.90196, -87.5124, -8.70772, 0.44 ) }
    dend_26 { pt3dadd( -5.36682, -88.492, -8.86029, 0.52 ) }
    dend_26 { pt3dadd( -5.8193, -89.4114, -8.99672, 1.03 ) }
    dend_26 { pt3dadd( -6.33022, -90.467, -9.10431, 0.81 ) }
    dend_26 { pt3dadd( -6.78224, -91.4882, -9.12036, 0.29 ) }
    dend_26 { pt3dadd( -7.17359, -92.5828, -9.01176, 0.29 ) }
    dend_26 { pt3dadd( -7.37747, -93.3743, -8.81624, 0.44 ) }
    dend_26 { pt3dadd( -7.52133, -94.1458, -8.5246, 0.96 ) }
    dend_26 { pt3dadd( -7.67104, -95.1826, -8.05328, 1.11 ) }
    dend_26 { pt3dadd( -7.81326, -96.3962, -7.49852, 0.59 ) }
    dend_26 { pt3dadd( -7.9273, -97.4261, -7.05726, 0.59 ) }
    dend_26 { pt3dadd( -8.08415, -98.8183, -6.55862, 0.52 ) }
    dend_26 { pt3dadd( -8.15699, -99.5744, -6.37487, 0.52 ) }
    dend_26 { pt3dadd( -8.24931, -100.822, -6.19924, 0.81 ) }
    dend_26 { pt3dadd( -8.33096, -102.098, -6.17869, 0.88 ) }
    dend_26 { pt3dadd( -8.38042, -102.835, -6.24641, 0.66 ) }
    dend_26 { pt3dadd( -8.44735, -103.752, -6.44274, 0.52 ) }
    dend_26 { pt3dadd( -8.50694, -104.704, -6.75888, 0.81 ) }
    dend_26 { pt3dadd( -8.51969, -105.318, -7.01004, 0.52 ) }
    dend_26 { pt3dadd( -8.47668, -106.203, -7.41822, 0.37 ) }
    dend_26 { pt3dadd( -8.39579, -106.899, -7.75177, 0.96 ) }
    dend_26 { pt3dadd( -8.19445, -108.025, -8.26793, 0.74 ) }
    dend_26 { pt3dadd( -8.00882, -108.816, -8.60022, 0.96 ) }
    dend_26 { pt3dadd( -7.83753, -109.457, -8.79653, 0.96 ) }
    dend_26 { pt3dadd( -7.58002, -110.431, -8.93329, 0.37 ) }
    dend_26 { pt3dadd( -7.42013, -111.165, -8.83408, 0.29 ) }
    dend_26 { pt3dadd( -7.25984, -112.262, -8.37867, 0.59 ) }
    dend_26 { pt3dadd( -7.2228, -112.707, -8.078, 0.59 ) }
    dend_26 { pt3dadd( -7.1814, -113.562, -7.39129, 0.59 ) }
    dend_26 { pt3dadd( -7.15336, -114.419, -6.65597, 0.96 ) }
    dend_26 { pt3dadd( -7.12699, -115.421, -5.77926, 0.52 ) }
    dend_26 { pt3dadd( -7.11569, -116.085, -5.21624, 0.44 ) }
    dend_26 { pt3dadd( -7.11738, -116.777, -4.66163, 0.44 ) }
    dend_26 { pt3dadd( -7.13639, -117.472, -4.10071, 0.88 ) }
    dend_26 { pt3dadd( -7.17564, -118.194, -3.54356, 0.44 ) }
    dend_26 { pt3dadd( -7.24507, -118.933, -3.01019, 0.37 ) }
    dend_26 { pt3dadd( -7.37718, -119.74, -2.47968, 0.74 ) }
    dend_26 { pt3dadd( -7.59914, -120.626, -1.95885, 0.22 ) }
    dend_26 { pt3dadd( -7.88328, -121.484, -1.48539, 0.29 ) }
    dend_26 { pt3dadd( -8.22999, -122.343, -0.99835, 0.59 ) }
    dend_26 { pt3dadd( -8.69293, -123.373, -0.411164, 1.18 ) }
    dend_26 { pt3dadd( -9.10968, -124.293, 0.0964575, 0.66 ) }
    dend_26 { pt3dadd( -9.4305, -125.155, 0.56012, 0.37 ) }
    dend_26 { pt3dadd( -9.61713, -125.899, 0.975349, 0.29 ) }
    dend_26 { pt3dadd( -9.67176, -126.454, 1.31607, 0.29 ) }
    dend_26 { pt3dadd( -9.64922, -126.851, 1.58796, 0.74 ) }
    dend_26 { pt3dadd( -9.5718, -127.258, 1.90205, 1.11 ) }
    dend_26 { pt3dadd( -9.26214, -128.41, 2.76508, 0.44 ) }
    dend_26 { pt3dadd( -9.07227, -129.133, 3.2314, 0.44 ) }
    dend_26 { pt3dadd( -8.97746, -129.703, 3.49514, 0.44 ) }
    dend_26 { pt3dadd( -8.91598, -130.521, 3.79162, 0.29 ) }
    dend_26 { pt3dadd( -8.92996, -131.35, 4.02757, 0.29 ) }
    dend_26 { pt3dadd( -9.02897, -132.425, 4.27157, 0.59 ) }
    dend_26 { pt3dadd( -9.18635, -133.524, 4.46523, 1.18 ) }
    dend_26 { pt3dadd( -9.3997, -135.086, 4.71698, 1.4 ) }
    dend_26 { pt3dadd( -9.49342, -135.9, 4.85195, 1.18 ) }
    dend_26 { pt3dadd( -9.56252, -137.012, 5.00639, 0.52 ) }
    dend_26 { pt3dadd( -9.57598, -137.814, 5.06423, 0.52 ) }
    dend_26 { pt3dadd( -9.56211, -138.791, 5.06645, 0.96 ) }
    dend_26 { pt3dadd( -9.48911, -139.922, 4.94905, 0.74 ) }
    dend_26 { pt3dadd( -9.40843, -140.554, 4.80706, 0.74 ) }
    dend_26 { pt3dadd( -9.23501, -141.583, 4.42627, 0.37 ) }
    dend_26 { pt3dadd( -9.03756, -142.495, 3.9606, 0.44 ) }
    dend_26 { pt3dadd( -8.90699, -143.038, 3.6233, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -8.75032, -143.655, 3.20186, 0.44 ) }
    dend_26 { pt3dadd( -8.58426, -144.329, 2.75221, 0.29 ) }
    dend_26 { pt3dadd( -8.45874, -144.9, 2.46949, 0.29 ) }
    dend_26 { pt3dadd( -8.37092, -145.443, 2.35329, 0.29 ) }
    dend_26 { pt3dadd( -8.29413, -146.241, 2.43401, 0.88 ) }
    dend_26 { pt3dadd( -8.25512, -147.077, 2.71616, 0.81 ) }
    dend_26 { pt3dadd( -8.2336, -147.711, 3.02088, 0.22 ) }
    dend_26 { pt3dadd( -8.156, -148.822, 3.60212, 0.22 ) }
    dend_26 { pt3dadd( -8.03079, -149.658, 4.01943, 0.44 ) }
    dend_26 { pt3dadd( -7.76661, -150.722, 4.47777, 1.11 ) }
    dend_26 { pt3dadd( -7.45795, -151.561, 4.76148, 0.52 ) }
    dend_26 { pt3dadd( -6.92527, -152.59, 4.95262, 0.22 ) }
    dend_26 { pt3dadd( -6.25621, -153.598, 4.93551, 0.22 ) }
    dend_26 { pt3dadd( -5.38627, -154.731, 4.72132, 0.22 ) }
    dend_26 { pt3dadd( -4.76855, -155.503, 4.50229, 0.37 ) }
    dend_26 { pt3dadd( -4.44293, -155.931, 4.36732, 0.52 ) }
    dend_26 { pt3dadd( -4.04746, -156.547, 4.20412, 0.52 ) }
    dend_26 { pt3dadd( -3.62168, -157.5, 4.05814, 1.11 ) }
    dend_26 { pt3dadd( -3.42388, -158.321, 4.0404, 1.11 ) }
    dend_26 { pt3dadd( -3.29317, -159.585, 4.13133, 0.52 ) }
    dend_26 { pt3dadd( -3.25522, -160.735, 4.28368, 0.29 ) }
    dend_26 { pt3dadd( -3.2587, -161.865, 4.47615, 0.52 ) }
    dend_26 { pt3dadd( -3.28184, -162.914, 4.6581, 0.52 ) }
    dend_26 { pt3dadd( -3.2915, -163.697, 4.75537, 0.22 ) }
    dend_26 { pt3dadd( -3.29023, -164.189, 4.77088, 0.22 ) }
    dend_26 { pt3dadd( -3.28616, -164.705, 4.74308, 0.59 ) }
    dend_26 { pt3dadd( -3.29254, -165.399, 4.66859, 1.11 ) }
    dend_26 { pt3dadd( -3.33896, -166.553, 4.50483, 1.11 ) }
    dend_26 { pt3dadd( -3.44908, -167.893, 4.32387, 0.44 ) }
    dend_26 { pt3dadd( -3.56016, -168.772, 4.22603, 0.44 ) }
    dend_26 { pt3dadd( -3.69664, -169.689, 4.1676, 0.44 ) }
    dend_26 { pt3dadd( -3.91375, -170.865, 4.15142, 0.29 ) }
    dend_26 { pt3dadd( -4.06972, -171.476, 4.19057, 0.29 ) }
    dend_26 { pt3dadd( -4.27733, -172.16, 4.29203, 0.88 ) }
    dend_26 { pt3dadd( -4.47711, -172.798, 4.40523, 0.96 ) }
    dend_26 { pt3dadd( -4.76938, -173.845, 4.57466, 0.37 ) }
    dend_26 { pt3dadd( -4.96785, -174.679, 4.6952, 0.37 ) }
    dend_26 { pt3dadd( -5.28042, -175.947, 4.9068, 0.37 ) }
    dend_26 { pt3dadd( -5.38943, -176.317, 4.98108, 0.37 ) }
    dend_26 { pt3dadd( -5.59535, -176.952, 5.12239, 1.03 ) }
    dend_26 { pt3dadd( -5.74242, -177.38, 5.22049, 1.03 ) }
    dend_26 { pt3dadd( -6.01063, -178.177, 5.40026, 0.52 ) }
    dend_26 { pt3dadd( -6.35238, -179.515, 5.70854, 0.22 ) }
    dend_26 { pt3dadd( -6.45802, -180.155, 5.87157, 0.22 ) }
    dend_26 { pt3dadd( -6.5698, -180.875, 6.10619, 0.29 ) }
    dend_26 { pt3dadd( -6.66516, -181.437, 6.33157, 0.59 ) }
    dend_26 { pt3dadd( -6.75303, -181.906, 6.53706, 0.88 ) }
    dend_26 { pt3dadd( -6.87154, -182.459, 6.7756, 0.96 ) }
    dend_26 { pt3dadd( -7.05592, -183.296, 7.14017, 0.37 ) }
    dend_26 { pt3dadd( -7.28174, -184.296, 7.58919, 0.22 ) }
    dend_26 { pt3dadd( -7.37613, -184.789, 7.80802, 0.22 ) }
    dend_26 { pt3dadd( -7.44852, -185.342, 8.04294, 0.96 ) }
    dend_26 { pt3dadd( -7.51995, -186.309, 8.42383, 0.44 ) }
    dend_26 { pt3dadd( -7.51635, -187.282, 8.75157, 0.22 ) }
    dend_26 { pt3dadd( -7.45377, -187.906, 8.90546, 0.22 ) }
    dend_26 { pt3dadd( -7.32022, -188.724, 9.05773, 0.22 ) }
    dend_26 { pt3dadd( -7.26756, -189.034, 9.11038, 0.22 ) }
    dend_26 { pt3dadd( -7.18338, -189.615, 9.20195, 0.74 ) }
    dend_26 { pt3dadd( -7.13428, -190.31, 9.29637, 0.88 ) }
    dend_26 { pt3dadd( -7.19742, -191.219, 9.377, 0.22 ) }
    dend_26 { pt3dadd( -7.33544, -191.847, 9.41206, 0.22 ) }
    dend_26 { pt3dadd( -7.50556, -192.34, 9.44446, 0.22 ) }
    dend_26 { pt3dadd( -7.74355, -192.891, 9.49961, 0.22 ) }
    dend_26 { pt3dadd( -8.01136, -193.423, 9.56797, 0.66 ) }
    dend_26 { pt3dadd( -8.35257, -194.046, 9.67943, 0.74 ) }
    dend_26 { pt3dadd( -8.82522, -194.871, 9.85108, 0.44 ) }
    dend_26 { pt3dadd( -9.29249, -195.689, 10.0078, 0.44 ) }
    dend_26 { pt3dadd( -9.88876, -196.709, 10.1601, 0.74 ) }
    dend_26 { pt3dadd( -10.4796, -197.679, 10.2676, 0.96 ) }
    dend_26 { pt3dadd( -11.0217, -198.542, 10.3221, 0.59 ) }
    dend_26 { pt3dadd( -11.6506, -199.518, 10.3282, 0.22 ) }
    dend_26 { pt3dadd( -12.1301, -200.254, 10.3514, 0.22 ) }
    dend_26 { pt3dadd( -12.6321, -201.023, 10.4068, 0.22 ) }
    dend_26 { pt3dadd( -12.982, -201.555, 10.4799, 0.22 ) }
    dend_26 { pt3dadd( -13.1362, -201.78, 10.5334, 0.22 ) }
    dend_26 { pt3dadd( -13.5499, -202.368, 10.7512, 0.88 ) }
    dend_26 { pt3dadd( -14.6298, -203.925, 11.5512, 0.22 ) }
    dend_26 { pt3dadd( -15.0176, -204.494, 11.8891, 0.22 ) }
    dend_26 { pt3dadd( -15.2749, -204.882, 12.1294, 0.74 ) }
    dend_26 { pt3dadd( -15.5819, -205.379, 12.4276, 0.96 ) }
    dend_26 { pt3dadd( -16.2323, -206.539, 13.0915, 0.37 ) }
    dend_26 { pt3dadd( -16.6632, -207.419, 13.5538, 0.22 ) }
    dend_26 { pt3dadd( -16.9257, -208.059, 13.8174, 0.88 ) }
    dend_26 { pt3dadd( -17.0441, -208.42, 13.965, 0.88 ) }
    dend_26 { pt3dadd( -17.2447, -209.274, 14.3198, 0.22 ) }
    dend_26 { pt3dadd( -17.301, -209.661, 14.4716, 0.22 ) }
    dend_26 { pt3dadd( -17.3327, -210.045, 14.6043, 0.22 ) }
    dend_26 { pt3dadd( -17.3785, -210.832, 14.836, 0.81 ) }
    dend_26 { pt3dadd( -17.4053, -212.038, 15.1471, 0.29 ) }
    dend_26 { pt3dadd( -17.3968, -213.039, 15.405, 0.44 ) }
    dend_26 { pt3dadd( -17.3638, -213.859, 15.6027, 0.88 ) }
    dend_26 { pt3dadd( -17.3125, -214.512, 15.7692, 0.88 ) }
    dend_26 { pt3dadd( -17.2049, -215.311, 15.9855, 0.29 ) }
    dend_26 { pt3dadd( -17.0523, -215.999, 16.1911, 0.22 ) }
    dend_26 { pt3dadd( -16.8332, -216.69, 16.4182, 0.22 ) }
    dend_26 { pt3dadd( -16.6137, -217.189, 16.6407, 0.22 ) }
    dend_26 { pt3dadd( -16.3361, -217.734, 16.9463, 0.22 ) }
    dend_26 { pt3dadd( -16.141, -218.102, 17.1895, 0.22 ) }
    dend_26 { pt3dadd( -15.8965, -218.641, 17.5655, 0.74 ) }
    dend_26 { pt3dadd( -15.834, -218.862, 17.7193, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( -15.6535, -220.064, 18.4724, 0.22 ) }
    dend_26 { pt3dadd( -15.6441, -220.602, 18.7807, 0.22 ) }
    dend_26 { pt3dadd( -15.6974, -221.045, 19.0, 0.22 ) }
    dend_26 { pt3dadd( -15.868, -221.72, 19.2901, 1.11 ) }
    dend_26 { pt3dadd( -16.2253, -222.6, 19.5846, 0.29 ) }
    dend_26 { pt3dadd( -16.5775, -223.279, 19.7393, 0.22 ) }
    dend_26 { pt3dadd( -16.9938, -223.977, 19.8022, 0.22 ) }
    dend_26 { pt3dadd( -17.3602, -224.617, 19.8325, 0.44 ) }
    dend_26 { pt3dadd( -17.688, -225.234, 19.8867, 0.88 ) }
    dend_26 { pt3dadd( -18.1603, -226.224, 20.0565, 0.96 ) }
    dend_26 { pt3dadd( -18.5361, -227.163, 20.3285, 0.29 ) }
    dend_26 { pt3dadd( -18.7582, -227.816, 20.6051, 0.66 ) }
    dend_26 { pt3dadd( -18.9897, -228.749, 21.0905, 0.74 ) }
    dend_26 { pt3dadd( -19.1669, -229.893, 21.7622, 0.29 ) }
    dend_26 { pt3dadd( -19.2168, -230.825, 22.3294, 0.66 ) }
    dend_26 { pt3dadd( -19.1576, -231.953, 23.0541, 0.22 ) }
    dend_26 { pt3dadd( -19.1125, -232.397, 23.3585, 0.22 ) }
    dend_26 { pt3dadd( -19.0531, -232.941, 23.7426, 0.81 ) }
    dend_26 { pt3dadd( -19.009, -233.355, 24.0063, 0.96 ) }
    dend_26 { pt3dadd( -18.9179, -234.187, 24.4697, 0.37 ) }
    dend_26 { pt3dadd( -18.8428, -235.045, 24.9031, 0.22 ) }
    dend_26 { pt3dadd( -18.8335, -235.676, 25.214, 0.22 ) }
    dend_26 { pt3dadd( -18.8509, -236.11, 25.446, 0.22 ) }
    dend_26 { pt3dadd( -18.8689, -236.387, 25.6207, 0.66 ) }
    dend_26 { pt3dadd( -18.9012, -236.788, 25.9112, 1.11 ) }
    dend_26 { pt3dadd( -18.9608, -237.445, 26.409, 0.88 ) }
    dend_26 { pt3dadd( -19.0567, -238.395, 27.0159, 0.22 ) }
    dend_26 { pt3dadd( -19.1473, -239.284, 27.4795, 0.88 ) }
    dend_26 { pt3dadd( -19.2778, -240.338, 27.9452, 0.22 ) }
    dend_26 { pt3dadd( -19.3711, -240.972, 28.1775, 0.22 ) }
    dend_26 { pt3dadd( -19.485, -241.586, 28.3719, 0.74 ) }
    dend_26 { pt3dadd( -19.7567, -242.741, 28.7582, 0.15 ) }
    dend_26 { pt3dadd( -19.9885, -243.503, 29.0001, 0.15 ) }
    dend_26 { pt3dadd( -20.1504, -243.92, 29.1262, 0.66 ) }
    dend_26 { pt3dadd( -20.4058, -244.503, 29.2824, 0.81 ) }
    dend_26 { pt3dadd( -20.8456, -245.465, 29.5668, 0.22 ) }
    dend_26 { pt3dadd( -21.2925, -246.404, 29.989, 0.22 ) }
    dend_26 { pt3dadd( -21.4811, -246.804, 30.2694, 0.59 ) }
    dend_26 { pt3dadd( -21.7797, -247.406, 30.8022, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.75403, 1.32478, -10.46, 1.99 ) }
    dend_22 { pt3dadd( -1.68625, 2.86272, -11.8483, 1.99 ) }
    dend_22 { pt3dadd( -1.69361, 4.37134, -13.1289, 1.77 ) }
    dend_22 { pt3dadd( -1.79866, 5.48831, -14.0299, 1.84 ) }
    dend_22 { pt3dadd( -1.96196, 6.54108, -14.8377, 1.4 ) }
    dend_22 { pt3dadd( -2.20466, 7.64207, -15.6452, 1.25 ) }
    dend_22 { pt3dadd( -2.50834, 8.67434, -16.3693, 1.4 ) }
    dend_22 { pt3dadd( -2.85155, 9.54087, -16.9181, 1.4 ) }
    dend_22 { pt3dadd( -3.4918, 10.9031, -17.6372, 1.03 ) }
    dend_22 { pt3dadd( -4.11644, 12.1491, -18.1783, 1.03 ) }
    dend_22 { pt3dadd( -4.86328, 13.5321, -18.7248, 1.11 ) }
    dend_22 { pt3dadd( -5.68797, 14.9952, -19.2605, 0.96 ) }
    dend_22 { pt3dadd( -6.57373, 16.5909, -19.8062, 0.96 ) }
    dend_22 { pt3dadd( -7.3981, 18.14, -20.3188, 0.88 ) }
    dend_22 { pt3dadd( -7.8942, 19.1423, -20.5971, 1.18 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.75403, 1.32478, -10.46, 3.32 ) }
    dend_1 { pt3dadd( -2.67928, 0.487563, -10.549, 3.32 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.44158, 39.2021, 0.0, 0.28953 ) }
    axon_1 { pt3dadd( 3.27908, 54.1787, 0.0, 0.28953 ) }
    axon_1 { pt3dadd( 4.11658, 69.1553, 0.0, 0.28953 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 59/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.98851, 34.7797, 13.7008, 1.7 ) }
    dend_48 { pt3dadd( -4.27176, 35.7683, 14.1874, 1.7 ) }
    dend_48 { pt3dadd( -4.63816, 37.0656, 14.8231, 1.03 ) }
    dend_48 { pt3dadd( -5.08769, 38.6573, 15.6031, 0.74 ) }
    dend_48 { pt3dadd( -5.41083, 39.8014, 16.1637, 0.74 ) }
    dend_48 { pt3dadd( -5.72414, 40.9108, 16.7073, 0.74 ) }
    dend_48 { pt3dadd( -5.97757, 41.8081, 17.147, 1.03 ) }
    dend_48 { pt3dadd( -6.2873, 43.0095, 17.831, 1.84 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -3.98851, 34.7797, 13.7008, 0.29 ) }
    dend_47 { pt3dadd( -3.84117, 35.1993, 14.3989, 0.29 ) }
    dend_47 { pt3dadd( -3.52082, 35.9593, 15.5598, 0.22 ) }
    dend_47 { pt3dadd( -3.24501, 36.5478, 16.3044, 0.22 ) }
    dend_47 { pt3dadd( -3.04489, 36.9803, 16.818, 0.37 ) }
    dend_47 { pt3dadd( -2.79558, 37.5498, 17.4636, 0.37 ) }
    dend_47 { pt3dadd( -2.53706, 38.1667, 18.1565, 0.37 ) }
    dend_47 { pt3dadd( -2.32153, 38.7027, 18.7237, 0.37 ) }
    dend_47 { pt3dadd( -1.98787, 39.5193, 19.4986, 0.22 ) }
    dend_47 { pt3dadd( -1.66959, 40.2291, 20.1502, 0.22 ) }
    dend_47 { pt3dadd( -1.33724, 40.9709, 20.8265, 0.22 ) }
    dend_47 { pt3dadd( -1.14524, 41.3861, 21.2129, 0.22 ) }
    dend_47 { pt3dadd( -0.919648, 41.8776, 21.7123, 0.22 ) }
    dend_47 { pt3dadd( -0.780244, 42.1705, 22.0599, 0.37 ) }
    dend_47 { pt3dadd( -0.39643, 42.9047, 23.0309, 0.37 ) }
    dend_47 { pt3dadd( -0.0877229, 43.4227, 23.7059, 0.22 ) }
    dend_47 { pt3dadd( 0.357742, 44.118, 24.6403, 0.44 ) }
    dend_47 { pt3dadd( 0.684654, 44.6324, 25.3561, 0.81 ) }
    dend_47 { pt3dadd( 1.0044, 45.1508, 26.0993, 0.81 ) }
    dend_47 { pt3dadd( 1.39557, 45.7957, 27.0477, 0.29 ) }
    dend_47 { pt3dadd( 1.76564, 46.4228, 27.9656, 0.22 ) }
    dend_47 { pt3dadd( 2.13106, 47.0405, 28.856, 0.22 ) }
    dend_47 { pt3dadd( 2.47792, 47.6421, 29.6512, 0.22 ) }
    dend_47 { pt3dadd( 2.77744, 48.1747, 30.3113, 0.22 ) }
    dend_47 { pt3dadd( 3.08262, 48.7078, 30.9579, 0.22 ) }
    dend_47 { pt3dadd( 3.43381, 49.2875, 31.7094, 0.22 ) }
    dend_47 { pt3dadd( 3.60388, 49.5661, 32.0999, 0.66 ) }
    dend_47 { pt3dadd( 3.8092, 49.882, 32.5379, 1.55 ) }
    dend_47 { pt3dadd( 4.35016, 50.6552, 33.628, 2.06 ) }
    dend_47 { pt3dadd( 5.15226, 51.7364, 35.1302, 0.22 ) }
    dend_47 { pt3dadd( 5.61438, 52.3536, 35.9843, 0.22 ) }
    dend_47 { pt3dadd( 6.03898, 52.9135, 36.7798, 0.22 ) }
    dend_47 { pt3dadd( 6.3759, 53.3755, 37.4316, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( 6.69704, 53.8556, 38.116, 0.44 ) }
    dend_47 { pt3dadd( 7.04775, 54.4555, 38.9223, 0.22 ) }
    dend_47 { pt3dadd( 7.41663, 55.283, 39.8769, 0.22 ) }
    dend_47 { pt3dadd( 7.74265, 56.2056, 40.7735, 0.44 ) }
    dend_47 { pt3dadd( 8.00259, 57.1153, 41.5904, 0.15 ) }
    dend_47 { pt3dadd( 8.18878, 58.0707, 42.4363, 0.15 ) }
    dend_47 { pt3dadd( 8.25022, 58.5602, 42.8518, 0.15 ) }
    dend_47 { pt3dadd( 8.33387, 59.5472, 43.653, 0.15 ) }
    dend_47 { pt3dadd( 8.41542, 60.3457, 44.2398, 0.37 ) }
    dend_47 { pt3dadd( 8.51342, 61.0721, 44.7599, 0.59 ) }
    dend_47 { pt3dadd( 8.69978, 61.9576, 45.4101, 1.25 ) }
    dend_47 { pt3dadd( 8.94245, 62.7578, 46.039, 2.21 ) }
    dend_47 { pt3dadd( 9.1553, 63.2819, 46.5078, 2.21 ) }
    dend_47 { pt3dadd( 9.6912, 64.2958, 47.4941, 0.52 ) }
    dend_47 { pt3dadd( 10.2292, 65.133, 48.3556, 0.15 ) }
    dend_47 { pt3dadd( 10.7127, 65.7757, 48.9961, 0.15 ) }
    dend_47 { pt3dadd( 11.1668, 66.2963, 49.5011, 0.29 ) }
    dend_47 { pt3dadd( 11.565, 66.7056, 49.8877, 0.29 ) }
    dend_47 { pt3dadd( 12.0813, 67.2292, 50.3392, 0.07 ) }
    dend_47 { pt3dadd( 12.6454, 67.7999, 50.782, 0.07 ) }
    dend_47 { pt3dadd( 13.0801, 68.2486, 51.1034, 0.07 ) }
    dend_47 { pt3dadd( 13.4463, 68.6436, 51.3661, 0.88 ) }
    dend_47 { pt3dadd( 13.9001, 69.1569, 51.6868, 1.62 ) }
    dend_47 { pt3dadd( 15.1191, 70.5953, 52.5183, 0.15 ) }
    dend_47 { pt3dadd( 15.7226, 71.3108, 52.9387, 0.15 ) }
    dend_47 { pt3dadd( 16.3215, 72.024, 53.3612, 0.15 ) }
    dend_47 { pt3dadd( 16.7644, 72.5404, 53.6762, 0.29 ) }
    dend_47 { pt3dadd( 17.2561, 73.1, 54.0863, 0.29 ) }
    dend_47 { pt3dadd( 18.1783, 74.118, 54.9811, 0.07 ) }
    dend_47 { pt3dadd( 18.8816, 74.8719, 55.7468, 0.07 ) }
    dend_47 { pt3dadd( 19.2526, 75.2725, 56.187, 0.07 ) }
    dend_47 { pt3dadd( 19.7797, 75.8341, 56.8553, 0.96 ) }
    dend_47 { pt3dadd( 20.9335, 77.0347, 58.4085, 0.15 ) }
    dend_47 { pt3dadd( 21.4692, 77.5938, 59.1685, 0.15 ) }
    dend_47 { pt3dadd( 21.8388, 77.9796, 59.743, 0.15 ) }
    dend_47 { pt3dadd( 22.1137, 78.2782, 60.1509, 0.15 ) }
    dend_47 { pt3dadd( 22.4265, 78.6232, 60.5937, 0.37 ) }
    dend_47 { pt3dadd( 22.7779, 79.0288, 61.057, 0.37 ) }
    dend_47 { pt3dadd( 23.4913, 79.854, 61.8386, 0.15 ) }
    dend_47 { pt3dadd( 24.0865, 80.5622, 62.4651, 0.15 ) }
    dend_47 { pt3dadd( 24.6577, 81.2892, 63.1127, 0.15 ) }
    dend_47 { pt3dadd( 25.3089, 82.1655, 63.9, 0.15 ) }
    dend_47 { pt3dadd( 25.6705, 82.6685, 64.3541, 0.15 ) }
    dend_47 { pt3dadd( 26.2717, 83.5168, 65.115, 0.15 ) }
    dend_47 { pt3dadd( 26.9738, 84.5187, 65.9934, 0.07 ) }
    dend_47 { pt3dadd( 27.7674, 85.7089, 66.9979, 0.07 ) }
    dend_47 { pt3dadd( 28.5118, 86.8557, 68.0187, 0.07 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -114.051, -288.132, 48.81, 0.74 ) }
    dend_38 { pt3dadd( -114.431, -289.267, 48.4269, 0.74 ) }
    dend_38 { pt3dadd( -114.884, -290.502, 48.0348, 0.29 ) }
    dend_38 { pt3dadd( -115.563, -292.13, 47.5173, 0.07 ) }
    dend_38 { pt3dadd( -116.154, -293.468, 47.0611, 0.15 ) }
    dend_38 { pt3dadd( -116.536, -294.325, 46.7643, 0.52 ) }
    dend_38 { pt3dadd( -116.877, -295.074, 46.4835, 0.74 ) }
    dend_38 { pt3dadd( -117.168, -295.66, 46.2418, 0.88 ) }
    dend_38 { pt3dadd( -117.988, -297.206, 45.6131, 0.22 ) }
    dend_38 { pt3dadd( -118.516, -298.172, 45.2356, 0.22 ) }
    dend_38 { pt3dadd( -119.04, -299.165, 44.8627, 0.22 ) }
    dend_38 { pt3dadd( -119.583, -300.276, 44.4472, 0.15 ) }
    dend_38 { pt3dadd( -119.964, -301.103, 44.1302, 0.74 ) }
    dend_38 { pt3dadd( -120.497, -302.302, 43.6448, 0.88 ) }
    dend_38 { pt3dadd( -120.955, -303.403, 43.1966, 0.22 ) }
    dend_38 { pt3dadd( -121.451, -304.643, 42.6547, 0.15 ) }
    dend_38 { pt3dadd( -121.8, -305.635, 42.1484, 0.15 ) }
    dend_38 { pt3dadd( -122.026, -306.385, 41.7172, 0.29 ) }
    dend_38 { pt3dadd( -122.25, -307.195, 41.1785, 0.66 ) }
    dend_38 { pt3dadd( -122.559, -308.223, 40.4191, 1.03 ) }
    dend_38 { pt3dadd( -123.021, -309.362, 39.4992, 0.37 ) }
    dend_38 { pt3dadd( -123.646, -310.554, 38.4655, 0.22 ) }
    dend_38 { pt3dadd( -124.046, -311.229, 37.8884, 0.44 ) }
    dend_38 { pt3dadd( -124.45, -311.864, 37.3778, 0.74 ) }
    dend_38 { pt3dadd( -125.114, -312.856, 36.6659, 1.03 ) }
    dend_38 { pt3dadd( -126.313, -314.531, 35.6117, 0.29 ) }
    dend_38 { pt3dadd( -127.027, -315.507, 35.1072, 0.29 ) }
    dend_38 { pt3dadd( -127.678, -316.411, 34.7242, 0.74 ) }
    dend_38 { pt3dadd( -128.22, -317.205, 34.4375, 0.74 ) }
    dend_38 { pt3dadd( -129.2, -318.73, 33.9373, 0.29 ) }
    dend_38 { pt3dadd( -130.07, -320.14, 33.5251, 0.22 ) }
    dend_38 { pt3dadd( -130.556, -320.904, 33.3105, 0.22 ) }
    dend_38 { pt3dadd( -131.236, -321.775, 33.0019, 0.22 ) }
    dend_38 { pt3dadd( -131.83, -322.365, 32.6916, 0.29 ) }
    dend_38 { pt3dadd( -132.44, -322.846, 32.3176, 0.74 ) }
    dend_38 { pt3dadd( -133.235, -323.361, 31.7717, 0.96 ) }
    dend_38 { pt3dadd( -134.406, -324.086, 30.9145, 0.44 ) }
    dend_38 { pt3dadd( -135.705, -324.941, 29.9383, 0.22 ) }
    dend_38 { pt3dadd( -136.378, -325.43, 29.4399, 0.22 ) }
    dend_38 { pt3dadd( -136.992, -325.947, 29.0012, 0.22 ) }
    dend_38 { pt3dadd( -137.701, -326.63, 28.5779, 0.81 ) }
    dend_38 { pt3dadd( -138.44, -327.467, 28.2109, 0.44 ) }
    dend_38 { pt3dadd( -139.076, -328.293, 27.9791, 0.22 ) }
    dend_38 { pt3dadd( -139.615, -329.034, 27.7988, 0.37 ) }
    dend_38 { pt3dadd( -139.95, -329.469, 27.6675, 0.37 ) }
    dend_38 { pt3dadd( -141.025, -330.671, 27.1912, 0.22 ) }
    dend_38 { pt3dadd( -141.459, -331.073, 26.97, 0.59 ) }
    dend_38 { pt3dadd( -142.439, -331.855, 26.4272, 0.88 ) }
    dend_38 { pt3dadd( -143.43, -332.624, 25.8091, 0.22 ) }
    dend_38 { pt3dadd( -144.185, -333.234, 25.285, 0.22 ) }
    dend_38 { pt3dadd( -144.697, -333.668, 24.8935, 0.22 ) }
    dend_38 { pt3dadd( -145.294, -334.209, 24.3938, 0.22 ) }
    dend_38 { pt3dadd( -145.899, -334.787, 23.8932, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( -146.884, -335.857, 23.0926, 0.15 ) }
    dend_38 { pt3dadd( -147.225, -336.309, 22.7701, 0.15 ) }
    dend_38 { pt3dadd( -147.561, -336.841, 22.4099, 0.15 ) }
    dend_38 { pt3dadd( -147.708, -337.131, 22.1946, 0.15 ) }
    dend_38 { pt3dadd( -147.853, -337.502, 21.9114, 0.15 ) }
    dend_38 { pt3dadd( -148.113, -338.268, 21.279, 0.88 ) }
    dend_38 { pt3dadd( -148.688, -339.862, 19.9358, 0.22 ) }
    dend_38 { pt3dadd( -148.807, -340.143, 19.6931, 0.22 ) }
    dend_38 { pt3dadd( -149.133, -340.824, 19.1162, 0.22 ) }
    dend_38 { pt3dadd( -149.528, -341.586, 18.5043, 0.22 ) }
    dend_38 { pt3dadd( -149.792, -342.073, 18.1556, 0.22 ) }
    dend_38 { pt3dadd( -150.299, -342.965, 17.627, 0.66 ) }
    dend_38 { pt3dadd( -151.085, -344.198, 17.0915, 0.29 ) }
    dend_38 { pt3dadd( -151.684, -345.102, 16.7677, 0.29 ) }
    dend_38 { pt3dadd( -152.206, -345.894, 16.542, 0.44 ) }
    dend_38 { pt3dadd( -152.805, -346.856, 16.3094, 0.74 ) }
    dend_38 { pt3dadd( -153.262, -347.672, 16.1616, 0.81 ) }
    dend_38 { pt3dadd( -154.128, -349.269, 15.9503, 0.22 ) }
    dend_38 { pt3dadd( -154.721, -350.272, 15.8814, 0.22 ) }
    dend_38 { pt3dadd( -155.001, -350.703, 15.8609, 0.22 ) }
    dend_38 { pt3dadd( -155.335, -351.201, 15.8395, 0.22 ) }
    dend_38 { pt3dadd( -155.823, -351.953, 15.7712, 0.22 ) }
    dend_38 { pt3dadd( -156.489, -353.043, 15.5541, 0.59 ) }
    dend_38 { pt3dadd( -157.167, -354.231, 15.1399, 0.22 ) }
    dend_38 { pt3dadd( -157.594, -354.98, 14.7859, 0.22 ) }
    dend_38 { pt3dadd( -158.126, -355.853, 14.2378, 0.59 ) }
    dend_38 { pt3dadd( -158.903, -357.054, 13.3319, 0.22 ) }
    dend_38 { pt3dadd( -159.47, -357.96, 12.5586, 0.22 ) }
    dend_38 { pt3dadd( -159.869, -358.666, 11.9247, 0.44 ) }
    dend_38 { pt3dadd( -160.308, -359.522, 11.1762, 1.03 ) }
    dend_38 { pt3dadd( -160.902, -360.718, 10.1932, 0.22 ) }
    dend_38 { pt3dadd( -161.166, -361.306, 9.79072, 0.22 ) }
    dend_38 { pt3dadd( -161.405, -362.009, 9.49306, 0.22 ) }
    dend_38 { pt3dadd( -161.569, -362.827, 9.28858, 0.22 ) }
    dend_38 { pt3dadd( -161.723, -364.084, 9.07691, 0.22 ) }
    dend_38 { pt3dadd( -161.762, -364.507, 9.0225, 0.44 ) }
    dend_38 { pt3dadd( -161.838, -365.557, 8.92265, 0.88 ) }
    dend_38 { pt3dadd( -161.91, -366.49, 8.82695, 0.88 ) }
    dend_38 { pt3dadd( -162.107, -368.404, 8.61748, 0.22 ) }
    dend_38 { pt3dadd( -162.255, -369.47, 8.48698, 0.22 ) }
    dend_38 { pt3dadd( -162.509, -370.914, 8.26605, 0.22 ) }
    dend_38 { pt3dadd( -162.643, -371.563, 8.16791, 0.22 ) }
    dend_38 { pt3dadd( -162.788, -372.109, 8.0881, 0.59 ) }
    dend_38 { pt3dadd( -163.079, -373.005, 7.96234, 0.81 ) }
    dend_38 { pt3dadd( -163.289, -373.551, 7.87501, 0.59 ) }
    dend_38 { pt3dadd( -163.782, -374.788, 7.62092, 0.22 ) }
    dend_38 { pt3dadd( -164.121, -375.592, 7.43144, 0.22 ) }
    dend_38 { pt3dadd( -164.523, -376.367, 7.2357, 0.22 ) }
    dend_38 { pt3dadd( -164.945, -377.031, 7.02651, 0.22 ) }
    dend_38 { pt3dadd( -165.668, -378.004, 6.6576, 0.22 ) }
    dend_38 { pt3dadd( -166.209, -378.67, 6.35693, 0.44 ) }
    dend_38 { pt3dadd( -166.837, -379.397, 5.97159, 0.74 ) }
    dend_38 { pt3dadd( -167.533, -380.254, 5.45118, 0.29 ) }
    dend_38 { pt3dadd( -168.152, -381.101, 4.8747, 0.22 ) }
    dend_38 { pt3dadd( -168.312, -381.329, 4.71114, 0.22 ) }
    dend_38 { pt3dadd( -168.651, -381.798, 4.3463, 0.22 ) }
    dend_38 { pt3dadd( -168.994, -382.274, 3.95951, 0.22 ) }
    dend_38 { pt3dadd( -169.376, -382.842, 3.52825, 0.29 ) }
    dend_38 { pt3dadd( -169.814, -383.6, 3.05115, 0.66 ) }
    dend_38 { pt3dadd( -170.22, -384.311, 2.69214, 0.88 ) }
    dend_38 { pt3dadd( -171.241, -385.956, 1.94761, 0.22 ) }
    dend_38 { pt3dadd( -171.682, -386.593, 1.68999, 0.22 ) }
    dend_38 { pt3dadd( -172.242, -387.311, 1.42765, 0.22 ) }
    dend_38 { pt3dadd( -173.069, -388.221, 1.19842, 0.22 ) }
    dend_38 { pt3dadd( -173.795, -388.941, 1.12376, 0.15 ) }
    dend_38 { pt3dadd( -174.297, -389.418, 1.13757, 0.15 ) }
    dend_38 { pt3dadd( -174.654, -389.754, 1.19723, 0.52 ) }
    dend_38 { pt3dadd( -175.27, -390.338, 1.32173, 0.81 ) }
    dend_38 { pt3dadd( -176.579, -391.724, 1.57496, 0.15 ) }
    dend_38 { pt3dadd( -177.071, -392.339, 1.64076, 0.15 ) }
    dend_38 { pt3dadd( -177.701, -393.357, 1.66651, 0.15 ) }
    dend_38 { pt3dadd( -177.829, -393.608, 1.65344, 0.37 ) }
    dend_38 { pt3dadd( -178.179, -394.409, 1.55027, 0.74 ) }
    dend_38 { pt3dadd( -178.71, -395.821, 1.26658, 0.15 ) }
    dend_38 { pt3dadd( -178.98, -396.635, 1.03753, 0.15 ) }
    dend_38 { pt3dadd( -179.233, -397.437, 0.810474, 0.37 ) }
    dend_38 { pt3dadd( -179.455, -398.196, 0.580744, 0.37 ) }
    dend_38 { pt3dadd( -179.7, -399.148, 0.291153, 0.37 ) }
    dend_38 { pt3dadd( -179.979, -400.375, -0.09471, 0.29 ) }
    dend_38 { pt3dadd( -180.257, -401.695, -0.489606, 0.81 ) }
    dend_38 { pt3dadd( -180.431, -402.69, -0.782465, 0.66 ) }
    dend_38 { pt3dadd( -180.557, -403.623, -1.08916, 0.59 ) }
    dend_38 { pt3dadd( -180.663, -404.631, -1.47255, 0.15 ) }
    dend_38 { pt3dadd( -180.758, -405.338, -1.78136, 0.15 ) }
    dend_38 { pt3dadd( -180.897, -405.998, -2.11679, 0.66 ) }
    dend_38 { pt3dadd( -180.985, -406.288, -2.27822, 0.66 ) }
    dend_38 { pt3dadd( -181.374, -407.351, -2.87658, 0.22 ) }
    dend_38 { pt3dadd( -181.641, -408.117, -3.27436, 0.22 ) }
    dend_38 { pt3dadd( -181.935, -409.051, -3.73614, 0.59 ) }
    dend_38 { pt3dadd( -182.226, -410.272, -4.28459, 0.15 ) }
    dend_38 { pt3dadd( -182.339, -410.885, -4.54099, 0.15 ) }
    dend_38 { pt3dadd( -182.478, -411.762, -4.88251, 0.81 ) }
    dend_38 { pt3dadd( -182.703, -413.552, -5.50982, 0.15 ) }
    dend_38 { pt3dadd( -182.778, -414.276, -5.73234, 0.52 ) }
    dend_38 { pt3dadd( -182.873, -415.399, -6.04094, 0.15 ) }
    dend_38 { pt3dadd( -182.939, -415.926, -6.17806, 0.15 ) }
    dend_38 { pt3dadd( -183.175, -417.106, -6.52759, 0.15 ) }
    dend_38 { pt3dadd( -183.285, -417.504, -6.6618, 0.15 ) }
    dend_38 { pt3dadd( -183.615, -418.451, -6.99878, 0.88 ) }
    dend_38 { pt3dadd( -183.953, -419.351, -7.33874, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -184.52, -420.736, -7.88999, 0.15 ) }
    dend_38 { pt3dadd( -185.071, -422.083, -8.44553, 0.15 ) }
    dend_38 { pt3dadd( -185.339, -422.724, -8.71539, 0.22 ) }
    dend_38 { pt3dadd( -185.686, -423.477, -9.05879, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -114.051, -288.132, 48.81, 0.07 ) }
    dend_37 { pt3dadd( -114.259, -287.758, 48.3676, 0.07 ) }
    dend_37 { pt3dadd( -114.45, -287.425, 48.0185, 0.07 ) }
    dend_37 { pt3dadd( -114.636, -287.123, 47.7094, 0.37 ) }
    dend_37 { pt3dadd( -114.982, -286.591, 47.1944, 0.07 ) }
    dend_37 { pt3dadd( -115.113, -286.396, 47.0167, 0.07 ) }
    dend_37 { pt3dadd( -115.33, -286.092, 46.7407, 0.22 ) }
    dend_37 { pt3dadd( -115.766, -285.538, 46.2651, 0.07 ) }
    dend_37 { pt3dadd( -116.112, -285.155, 45.9419, 0.07 ) }
    dend_37 { pt3dadd( -116.358, -284.912, 45.7344, 0.07 ) }
    dend_37 { pt3dadd( -116.585, -284.719, 45.5721, 0.22 ) }
    dend_37 { pt3dadd( -117.02, -284.388, 45.2908, 0.07 ) }
    dend_37 { pt3dadd( -117.3, -284.192, 45.1138, 0.37 ) }
    dend_37 { pt3dadd( -118.144, -283.649, 44.613, 0.07 ) }
    dend_37 { pt3dadd( -118.423, -283.478, 44.4538, 0.22 ) }
    dend_37 { pt3dadd( -119.121, -283.072, 44.0486, 0.07 ) }
    dend_37 { pt3dadd( -119.413, -282.909, 43.8819, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -21.7797, -247.406, 30.8022, 0.15 ) }
    dend_30 { pt3dadd( -22.2346, -248.163, 31.8851, 0.15 ) }
    dend_30 { pt3dadd( -22.6486, -248.972, 32.8652, 0.15 ) }
    dend_30 { pt3dadd( -22.9665, -249.678, 33.6321, 0.07 ) }
    dend_30 { pt3dadd( -23.2308, -250.304, 34.3094, 0.07 ) }
    dend_30 { pt3dadd( -23.4236, -250.779, 34.8151, 0.07 ) }
    dend_30 { pt3dadd( -23.5582, -251.116, 35.1668, 0.37 ) }
    dend_30 { pt3dadd( -23.7785, -251.765, 35.7754, 0.66 ) }
    dend_30 { pt3dadd( -24.1404, -252.847, 36.7395, 0.07 ) }
    dend_30 { pt3dadd( -24.3341, -253.474, 37.3339, 0.07 ) }
    dend_30 { pt3dadd( -24.508, -254.064, 37.9453, 0.07 ) }
    dend_30 { pt3dadd( -24.5894, -254.358, 38.2905, 0.52 ) }
    dend_30 { pt3dadd( -24.721, -254.902, 38.9688, 0.88 ) }
    dend_30 { pt3dadd( -24.9114, -255.894, 40.2668, 0.15 ) }
    dend_30 { pt3dadd( -25.036, -256.757, 41.4116, 0.15 ) }
    dend_30 { pt3dadd( -25.0865, -257.216, 42.0036, 0.15 ) }
    dend_30 { pt3dadd( -25.1096, -257.828, 42.81, 0.15 ) }
    dend_30 { pt3dadd( -25.0882, -258.416, 43.6026, 0.88 ) }
    dend_30 { pt3dadd( -24.9604, -259.497, 45.1098, 0.07 ) }
    dend_30 { pt3dadd( -24.8962, -259.845, 45.6058, 0.07 ) }
    dend_30 { pt3dadd( -24.8224, -260.224, 46.1228, 0.37 ) }
    dend_30 { pt3dadd( -24.6556, -261.139, 47.3271, 0.15 ) }
    dend_30 { pt3dadd( -24.5641, -261.714, 48.0527, 0.37 ) }
    dend_30 { pt3dadd( -24.4853, -262.521, 49.0783, 0.22 ) }
    dend_30 { pt3dadd( -24.4656, -263.177, 49.8764, 0.44 ) }
    dend_30 { pt3dadd( -24.4873, -263.708, 50.4948, 0.81 ) }
    dend_30 { pt3dadd( -24.5797, -264.421, 51.2875, 0.29 ) }
    dend_30 { pt3dadd( -24.8241, -265.276, 52.1188, 0.15 ) }
    dend_30 { pt3dadd( -25.2535, -266.331, 52.9942, 0.15 ) }
    dend_30 { pt3dadd( -25.6685, -267.201, 53.5805, 0.15 ) }
    dend_30 { pt3dadd( -25.9469, -267.75, 53.8927, 0.81 ) }
    dend_30 { pt3dadd( -26.2372, -268.343, 54.1833, 1.47 ) }
    dend_30 { pt3dadd( -27.1272, -270.255, 54.9456, 0.15 ) }
    dend_30 { pt3dadd( -27.7064, -271.603, 55.5011, 0.07 ) }
    dend_30 { pt3dadd( -28.2795, -273.05, 56.0855, 0.07 ) }
    dend_30 { pt3dadd( -28.5668, -273.81, 56.4244, 0.15 ) }
    dend_30 { pt3dadd( -29.0146, -275.086, 57.0136, 0.07 ) }
    dend_30 { pt3dadd( -29.2475, -275.787, 57.3415, 0.22 ) }
    dend_30 { pt3dadd( -30.21, -278.74, 58.8288, 0.07 ) }
    dend_30 { pt3dadd( -30.5186, -279.602, 59.2888, 0.29 ) }
    dend_30 { pt3dadd( -31.2098, -281.306, 60.2341, 0.07 ) }
    dend_30 { pt3dadd( -31.5993, -282.163, 60.6998, 0.07 ) }
    dend_30 { pt3dadd( -32.0762, -283.089, 61.1878, 0.44 ) }
    dend_30 { pt3dadd( -32.9876, -284.783, 62.0377, 0.15 ) }
    dend_30 { pt3dadd( -33.7043, -286.067, 62.6218, 0.07 ) }
    dend_30 { pt3dadd( -34.1185, -286.797, 62.9716, 0.07 ) }
    dend_30 { pt3dadd( -34.5222, -287.509, 63.3251, 0.29 ) }
    dend_30 { pt3dadd( -35.7148, -289.61, 64.4528, 0.07 ) }
    dend_30 { pt3dadd( -36.3212, -290.703, 65.062, 0.07 ) }
    dend_30 { pt3dadd( -36.7855, -291.56, 65.5332, 0.07 ) }
    dend_30 { pt3dadd( -37.2408, -292.408, 66.0306, 0.07 ) }
    dend_30 { pt3dadd( -37.6736, -293.202, 66.5021, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -21.7797, -247.406, 30.8022, 0.22 ) }
    dend_27 { pt3dadd( -21.4325, -247.942, 31.2927, 0.22 ) }
    dend_27 { pt3dadd( -20.8043, -248.778, 32.0813, 0.37 ) }
    dend_27 { pt3dadd( -20.3658, -249.303, 32.6128, 0.15 ) }
    dend_27 { pt3dadd( -20.0073, -249.713, 33.034, 0.15 ) }
    dend_27 { pt3dadd( -19.8796, -249.845, 33.194, 0.37 ) }
    dend_27 { pt3dadd( -19.5704, -250.158, 33.6293, 0.88 ) }
    dend_27 { pt3dadd( -18.9132, -250.746, 34.6354, 0.15 ) }
    dend_27 { pt3dadd( -18.6018, -251.011, 35.1808, 0.52 ) }
    dend_27 { pt3dadd( -18.5105, -251.091, 35.3603, 1.03 ) }
    dend_27 { pt3dadd( -17.9093, -251.648, 36.6959, 0.22 ) }
    dend_27 { pt3dadd( -17.5233, -252.031, 37.6562, 0.22 ) }
    dend_27 { pt3dadd( -17.4157, -252.144, 37.9495, 0.37 ) }
    dend_27 { pt3dadd( -16.9996, -252.678, 39.2547, 0.22 ) }
    dend_27 { pt3dadd( -16.8553, -252.902, 39.7455, 0.22 ) }
    dend_27 { pt3dadd( -16.6874, -253.225, 40.3737, 0.22 ) }
    dend_27 { pt3dadd( -16.5824, -253.487, 40.8044, 0.22 ) }
    dend_27 { pt3dadd( -16.4737, -253.785, 41.229, 0.88 ) }
    dend_27 { pt3dadd( -16.1545, -254.646, 42.278, 0.15 ) }
    dend_27 { pt3dadd( -15.9816, -255.11, 42.7446, 0.22 ) }
    dend_27 { pt3dadd( -15.7564, -255.701, 43.2067, 0.07 ) }
    dend_27 { pt3dadd( -15.4669, -256.456, 43.6448, 0.07 ) }
    dend_27 { pt3dadd( -15.1795, -257.211, 43.9053, 1.18 ) }
    dend_27 { pt3dadd( -14.7339, -258.454, 44.0972, 0.07 ) }
    dend_27 { pt3dadd( -14.5601, -258.988, 44.056, 0.74 ) }
    dend_27 { pt3dadd( -14.1697, -260.365, 43.7651, 0.07 ) }
    dend_27 { pt3dadd( -14.0807, -260.764, 43.6251, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -13.8736, -262.187, 42.9476, 0.07 ) }
    dend_27 { pt3dadd( -13.828, -262.937, 42.5579, 1.11 ) }
    dend_27 { pt3dadd( -13.8547, -264.381, 41.7033, 0.07 ) }
    dend_27 { pt3dadd( -13.8713, -264.711, 41.4971, 0.22 ) }
    dend_27 { pt3dadd( -13.956, -265.766, 40.8185, 0.07 ) }
    dend_27 { pt3dadd( -13.9922, -266.27, 40.4456, 0.07 ) }
    dend_27 { pt3dadd( -14.029, -267.012, 39.7599, 0.96 ) }
    dend_27 { pt3dadd( -13.9856, -267.876, 38.8337, 0.07 ) }
    dend_27 { pt3dadd( -13.9219, -268.193, 38.4666, 0.07 ) }
    dend_27 { pt3dadd( -13.8729, -268.356, 38.2587, 0.29 ) }
    dend_27 { pt3dadd( -13.6234, -269.002, 37.3328, 0.07 ) }
    dend_27 { pt3dadd( -13.39, -269.57, 36.4885, 0.07 ) }
    dend_27 { pt3dadd( -13.2767, -269.86, 36.0447, 0.66 ) }
    dend_27 { pt3dadd( -13.0389, -270.556, 35.0492, 0.07 ) }
    dend_27 { pt3dadd( -12.8976, -271.073, 34.3832, 0.07 ) }
    dend_27 { pt3dadd( -12.7552, -271.658, 33.7425, 0.07 ) }
    dend_27 { pt3dadd( -12.6566, -272.064, 33.3894, 0.96 ) }
    dend_27 { pt3dadd( -12.4765, -272.829, 32.7861, 0.15 ) }
    dend_27 { pt3dadd( -12.3712, -273.301, 32.4328, 0.15 ) }
    dend_27 { pt3dadd( -12.2472, -273.891, 32.0569, 0.74 ) }
    dend_27 { pt3dadd( -11.9832, -275.042, 31.4777, 0.15 ) }
    dend_27 { pt3dadd( -11.8237, -275.671, 31.2246, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.8942, 19.1423, -20.5971, 0.59 ) }
    dend_24 { pt3dadd( -8.59085, 20.0489, -19.3616, 0.59 ) }
    dend_24 { pt3dadd( -9.10282, 20.81, -18.4363, 0.59 ) }
    dend_24 { pt3dadd( -9.61467, 21.5836, -17.553, 0.59 ) }
    dend_24 { pt3dadd( -10.1578, 22.3579, -16.7096, 0.74 ) }
    dend_24 { pt3dadd( -10.622, 22.973, -16.0854, 0.74 ) }
    dend_24 { pt3dadd( -11.3753, 23.9028, -15.2622, 0.44 ) }
    dend_24 { pt3dadd( -11.5849, 24.1442, -15.1222, 0.44 ) }
    dend_24 { pt3dadd( -12.0926, 24.7034, -14.9417, 0.44 ) }
    dend_24 { pt3dadd( -12.6147, 25.2349, -14.8446, 0.66 ) }
    dend_24 { pt3dadd( -13.3875, 25.9265, -14.7714, 0.81 ) }
    dend_24 { pt3dadd( -14.4891, 26.7853, -14.6845, 0.59 ) }
    dend_24 { pt3dadd( -15.3721, 27.3936, -14.6052, 0.37 ) }
    dend_24 { pt3dadd( -16.5376, 28.1806, -14.4637, 0.22 ) }
    dend_24 { pt3dadd( -17.2466, 28.6665, -14.3536, 0.44 ) }
    dend_24 { pt3dadd( -17.7242, 29.0165, -14.2554, 0.74 ) }
    dend_24 { pt3dadd( -18.757, 29.8575, -13.988, 0.37 ) }
    dend_24 { pt3dadd( -19.6762, 30.6967, -13.6924, 0.22 ) }
    dend_24 { pt3dadd( -20.1037, 31.1559, -13.5642, 0.22 ) }
    dend_24 { pt3dadd( -20.5913, 31.7645, -13.4362, 0.66 ) }
    dend_24 { pt3dadd( -21.1785, 32.5986, -13.3215, 0.52 ) }
    dend_24 { pt3dadd( -21.8708, 33.652, -13.2677, 0.81 ) }
    dend_24 { pt3dadd( -22.1673, 34.1203, -13.2909, 0.81 ) }
    dend_24 { pt3dadd( -22.9369, 35.301, -13.47, 0.44 ) }
    dend_24 { pt3dadd( -23.7395, 36.4003, -13.7643, 0.74 ) }
    dend_24 { pt3dadd( -24.5787, 37.3559, -14.172, 0.44 ) }
    dend_24 { pt3dadd( -25.5736, 38.2648, -14.7539, 0.29 ) }
    dend_24 { pt3dadd( -26.2932, 38.7867, -15.2323, 0.29 ) }
    dend_24 { pt3dadd( -27.0628, 39.2356, -15.8012, 0.29 ) }
    dend_24 { pt3dadd( -27.8545, 39.599, -16.4358, 0.88 ) }
    dend_24 { pt3dadd( -28.8444, 39.9734, -17.2453, 0.59 ) }
    dend_24 { pt3dadd( -29.4953, 40.2008, -17.7656, 0.59 ) }
    dend_24 { pt3dadd( -30.4157, 40.5294, -18.4539, 0.29 ) }
    dend_24 { pt3dadd( -31.5155, 40.9685, -19.2042, 0.74 ) }
    dend_24 { pt3dadd( -31.9805, 41.1959, -19.4986, 0.74 ) }
    dend_24 { pt3dadd( -32.6733, 41.6365, -19.9166, 0.29 ) }
    dend_24 { pt3dadd( -33.1502, 42.0602, -20.1737, 0.22 ) }
    dend_24 { pt3dadd( -33.4858, 42.4604, -20.3376, 0.22 ) }
    dend_24 { pt3dadd( -33.8383, 43.0208, -20.495, 0.22 ) }
    dend_24 { pt3dadd( -34.255, 43.7845, -20.6769, 0.74 ) }
    dend_24 { pt3dadd( -34.6057, 44.4252, -20.8633, 0.74 ) }
    dend_24 { pt3dadd( -34.9474, 45.0279, -21.0882, 0.29 ) }
    dend_24 { pt3dadd( -35.2204, 45.4638, -21.2767, 0.29 ) }
    dend_24 { pt3dadd( -35.6206, 46.0571, -21.5472, 0.52 ) }
    dend_24 { pt3dadd( -36.0769, 46.7246, -21.8917, 0.52 ) }
    dend_24 { pt3dadd( -36.7697, 47.726, -22.4596, 0.22 ) }
    dend_24 { pt3dadd( -37.1769, 48.3508, -22.8451, 0.15 ) }
    dend_24 { pt3dadd( -37.7577, 49.2494, -23.4162, 0.59 ) }
    dend_24 { pt3dadd( -38.3382, 50.1977, -24.0065, 0.22 ) }
    dend_24 { pt3dadd( -38.6313, 50.7296, -24.3265, 0.22 ) }
    dend_24 { pt3dadd( -38.7157, 50.9155, -24.4272, 0.22 ) }
    dend_24 { pt3dadd( -38.9755, 51.6322, -24.7748, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -7.8942, 19.1423, -20.5971, 1.03 ) }
    dend_23 { pt3dadd( -7.48609, 19.6851, -20.761, 1.03 ) }
    dend_23 { pt3dadd( -6.43217, 20.685, -21.0817, 0.88 ) }
    dend_23 { pt3dadd( -5.55318, 21.4276, -21.3609, 0.88 ) }
    dend_23 { pt3dadd( -4.93996, 21.9351, -21.575, 0.59 ) }
    dend_23 { pt3dadd( -4.41448, 22.3943, -21.7703, 0.59 ) }
    dend_23 { pt3dadd( -3.53213, 23.218, -22.1149, 0.96 ) }
    dend_23 { pt3dadd( -2.52495, 24.1657, -22.5121, 0.52 ) }
    dend_23 { pt3dadd( -1.698, 25.0395, -22.845, 0.66 ) }
    dend_23 { pt3dadd( -1.37381, 25.4921, -23.0037, 0.66 ) }
    dend_23 { pt3dadd( -1.01625, 26.1898, -23.2299, 0.66 ) }
    dend_23 { pt3dadd( -0.833653, 26.7087, -23.3683, 0.66 ) }
    dend_23 { pt3dadd( -0.615078, 27.6231, -23.5768, 1.18 ) }
    dend_23 { pt3dadd( -0.39767, 28.7753, -23.8187, 0.96 ) }
    dend_23 { pt3dadd( -0.283647, 29.3904, -23.9552, 0.96 ) }
    dend_23 { pt3dadd( -0.0966524, 30.3027, -24.2041, 0.88 ) }
    dend_23 { pt3dadd( 0.161945, 31.3119, -24.5713, 1.03 ) }
    dend_23 { pt3dadd( 0.325315, 31.8995, -24.8206, 1.18 ) }
    dend_23 { pt3dadd( 0.589262, 32.7312, -25.1991, 0.74 ) }
    dend_23 { pt3dadd( 0.877373, 33.514, -25.5633, 0.74 ) }
    dend_23 { pt3dadd( 1.11694, 34.1014, -25.8476, 0.96 ) }
    dend_23 { pt3dadd( 1.50497, 34.9996, -26.2876, 1.11 ) }
    dend_23 { pt3dadd( 1.98255, 35.9766, -26.8027, 0.96 ) }
    dend_23 { pt3dadd( 2.7752, 37.3689, -27.5705, 0.59 ) }
    dend_23 { pt3dadd( 3.24136, 38.0767, -27.9618, 0.59 ) }
    dend_23 { pt3dadd( 3.92361, 38.9403, -28.4626, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( 4.25672, 39.2936, -28.6842, 0.74 ) }
    dend_23 { pt3dadd( 5.01875, 39.9701, -29.1277, 0.59 ) }
    dend_23 { pt3dadd( 5.84299, 40.5803, -29.5608, 0.59 ) }
    dend_23 { pt3dadd( 6.57032, 41.0721, -29.9158, 0.59 ) }
    dend_23 { pt3dadd( 7.40041, 41.6691, -30.3113, 0.52 ) }
    dend_23 { pt3dadd( 8.00361, 42.1815, -30.6062, 0.52 ) }
    dend_23 { pt3dadd( 8.65661, 42.8962, -30.9972, 0.74 ) }
    dend_23 { pt3dadd( 8.98926, 43.4588, -31.2889, 0.88 ) }
    dend_23 { pt3dadd( 9.25748, 44.2257, -31.7181, 0.59 ) }
    dend_23 { pt3dadd( 9.42272, 45.1214, -32.2834, 0.44 ) }
    dend_23 { pt3dadd( 9.49369, 46.0544, -32.919, 0.59 ) }
    dend_23 { pt3dadd( 9.52199, 46.9366, -33.5526, 0.96 ) }
    dend_23 { pt3dadd( 9.58822, 48.0365, -34.3732, 0.52 ) }
    dend_23 { pt3dadd( 9.71004, 48.888, -35.0211, 0.52 ) }
    dend_23 { pt3dadd( 9.88229, 49.5293, -35.5016, 0.52 ) }
    dend_23 { pt3dadd( 10.3019, 50.5076, -36.221, 0.37 ) }
    dend_23 { pt3dadd( 10.6294, 51.0999, -36.6294, 0.37 ) }
    dend_23 { pt3dadd( 11.2724, 52.1517, -37.2721, 0.44 ) }
    dend_23 { pt3dadd( 11.7577, 52.9926, -37.7131, 0.59 ) }
    dend_23 { pt3dadd( 12.1232, 53.7834, -38.0622, 0.59 ) }
    dend_23 { pt3dadd( 12.3193, 54.3958, -38.2889, 0.59 ) }
    dend_23 { pt3dadd( 12.4814, 55.488, -38.6654, 0.59 ) }
    dend_23 { pt3dadd( 12.4823, 56.3507, -38.9903, 0.66 ) }
    dend_23 { pt3dadd( 12.3584, 57.4063, -39.4348, 0.74 ) }
    dend_23 { pt3dadd( 12.1968, 58.3793, -39.9002, 0.52 ) }
    dend_23 { pt3dadd( 12.0496, 59.2148, -40.3731, 0.29 ) }
    dend_23 { pt3dadd( 11.9544, 60.0213, -40.9782, 0.29 ) }
    dend_23 { pt3dadd( 12.0409, 60.5181, -41.6994, 0.44 ) }
    dend_23 { pt3dadd( 12.279, 60.6514, -42.3954, 0.59 ) }
    dend_23 { pt3dadd( 12.6859, 60.566, -43.3287, 0.29 ) }
    dend_23 { pt3dadd( 12.9624, 60.4105, -43.8964, 0.29 ) }
    dend_23 { pt3dadd( 13.3983, 60.0702, -44.76, 0.29 ) }
    dend_23 { pt3dadd( 13.7323, 59.779, -45.3914, 0.29 ) }
    dend_23 { pt3dadd( 14.0455, 59.5065, -46.0049, 0.44 ) }
    dend_23 { pt3dadd( 14.3403, 59.2931, -46.6584, 0.44 ) }
    dend_23 { pt3dadd( 14.5463, 59.2037, -47.2373, 0.52 ) }
    dend_23 { pt3dadd( 14.639, 59.3463, -47.7311, 0.52 ) }
    dend_23 { pt3dadd( 14.5671, 59.7541, -48.0821, 0.52 ) }
    dend_23 { pt3dadd( 14.3268, 60.4089, -48.4683, 0.66 ) }
    dend_23 { pt3dadd( 13.9426, 61.1952, -48.837, 0.66 ) }
    dend_23 { pt3dadd( 13.4695, 61.9288, -49.1116, 0.37 ) }
    dend_23 { pt3dadd( 12.8088, 62.6721, -49.3709, 0.37 ) }
    dend_23 { pt3dadd( 12.1594, 63.1772, -49.5719, 0.37 ) }
    dend_23 { pt3dadd( 11.6311, 63.4089, -49.7215, 0.37 ) }
    dend_23 { pt3dadd( 11.1981, 63.4826, -49.8421, 0.37 ) }
    dend_23 { pt3dadd( 10.4275, 63.4496, -50.0714, 0.29 ) }
    dend_23 { pt3dadd( 9.55138, 63.2186, -50.3606, 0.22 ) }
    dend_23 { pt3dadd( 8.83387, 62.8451, -50.6339, 0.22 ) }
    dend_23 { pt3dadd( 7.95209, 62.0441, -51.055, 0.66 ) }
    dend_23 { pt3dadd( 7.66357, 61.564, -51.2668, 0.37 ) }
    dend_23 { pt3dadd( 7.45929, 60.9766, -51.5398, 0.22 ) }
    dend_23 { pt3dadd( 7.35703, 60.2487, -51.8945, 0.22 ) }
    dend_23 { pt3dadd( 7.3656, 59.6721, -52.2, 0.22 ) }
    dend_23 { pt3dadd( 7.44791, 58.8399, -52.6535, 0.29 ) }
    dend_23 { pt3dadd( 7.62628, 57.7334, -53.277, 0.15 ) }
    dend_23 { pt3dadd( 7.80514, 56.7152, -53.8923, 0.15 ) }
    dend_23 { pt3dadd( 8.00011, 55.5088, -54.6762, 0.15 ) }
    dend_23 { pt3dadd( 8.12892, 54.6269, -55.3205, 0.15 ) }
    dend_23 { pt3dadd( 8.15967, 54.3523, -55.5408, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.67928, 0.487563, -10.549, 1.25 ) }
    dend_13 { pt3dadd( -1.78564, -0.293672, -11.5126, 1.25 ) }
    dend_13 { pt3dadd( -1.18866, -0.730206, -12.0362, 1.25 ) }
    dend_13 { pt3dadd( -0.393615, -1.25262, -12.6557, 1.25 ) }
    dend_13 { pt3dadd( 0.0980479, -1.58547, -13.0184, 1.25 ) }
    dend_13 { pt3dadd( 0.74386, -2.08711, -13.4992, 1.11 ) }
    dend_13 { pt3dadd( 1.19227, -2.5137, -13.8608, 1.33 ) }
    dend_13 { pt3dadd( 1.81102, -3.27268, -14.3601, 0.81 ) }
    dend_13 { pt3dadd( 2.14347, -3.93528, -14.6672, 0.66 ) }
    dend_13 { pt3dadd( 2.29976, -4.53118, -14.8854, 0.66 ) }
    dend_13 { pt3dadd( 2.42109, -5.49286, -15.185, 1.03 ) }
    dend_13 { pt3dadd( 2.49056, -6.64592, -15.4968, 1.4 ) }
    dend_13 { pt3dadd( 2.53577, -7.55077, -15.7194, 1.99 ) }
    dend_13 { pt3dadd( 2.61795, -8.82605, -15.9945, 1.33 ) }
    dend_13 { pt3dadd( 2.7401, -9.77843, -16.1827, 0.96 ) }
    dend_13 { pt3dadd( 2.94111, -10.8903, -16.4023, 0.81 ) }
    dend_13 { pt3dadd( 3.1649, -11.7168, -16.5599, 0.74 ) }
    dend_13 { pt3dadd( 3.48476, -12.5714, -16.704, 0.96 ) }
    dend_13 { pt3dadd( 3.84655, -13.3101, -16.8301, 1.33 ) }
    dend_13 { pt3dadd( 4.21354, -13.9097, -16.9341, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 79/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.67928, 0.487563, -10.549, 1.77 ) }
    dend_2 { pt3dadd( -3.84413, -0.627209, -10.8794, 1.77 ) }
    dend_2 { pt3dadd( -5.0025, -1.78547, -11.2454, 1.62 ) }
    dend_2 { pt3dadd( -5.9791, -2.8143, -11.6154, 1.84 ) }
    dend_2 { pt3dadd( -6.6426, -3.51329, -11.8667, 2.06 ) }
    dend_2 { pt3dadd( -7.83372, -4.76813, -12.3179, 1.84 ) }
    dend_2 { pt3dadd( -8.9508, -5.94493, -12.7411, 1.84 ) }
    dend_2 { pt3dadd( -10.0651, -7.19297, -13.2307, 1.84 ) }
    dend_2 { pt3dadd( -10.932, -8.17447, -13.6591, 2.36 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -6.2873, 43.0095, 17.831, 0.52 ) }
    dend_56 { pt3dadd( -6.14543, 44.3166, 16.9093, 0.52 ) }
    dend_56 { pt3dadd( -6.09699, 45.5945, 15.9604, 0.52 ) }
    dend_56 { pt3dadd( -6.1342, 46.2738, 15.4089, 0.52 ) }
    dend_56 { pt3dadd( -6.24139, 47.1339, 14.6831, 0.59 ) }
    dend_56 { pt3dadd( -6.36885, 47.9235, 13.9918, 0.44 ) }
    dend_56 { pt3dadd( -6.47302, 48.5128, 13.4673, 0.44 ) }
    dend_56 { pt3dadd( -6.61799, 49.141, 12.9006, 0.52 ) }
    dend_56 { pt3dadd( -6.81932, 50.0623, 12.0713, 0.88 ) }
    dend_56 { pt3dadd( -6.96077, 50.7032, 11.4673, 1.25 ) }
    dend_56 { pt3dadd( -7.1473, 51.5647, 10.6537, 1.18 ) }
    dend_56 { pt3dadd( -7.38002, 52.7154, 9.59486, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_56 { pt3dadd( -7.5733, 53.8254, 8.59739, 0.52 ) }
    dend_56 { pt3dadd( -7.73655, 55.0092, 7.55866, 0.44 ) }
    dend_56 { pt3dadd( -7.82983, 55.7871, 6.8836, 0.44 ) }
    dend_56 { pt3dadd( -7.88884, 56.3011, 6.44742, 0.44 ) }
    dend_56 { pt3dadd( -7.98972, 57.2215, 5.71596, 0.52 ) }
    dend_56 { pt3dadd( -8.06123, 58.0492, 5.13247, 0.59 ) }
    dend_56 { pt3dadd( -8.1155, 59.144, 4.47894, 0.66 ) }
    dend_56 { pt3dadd( -8.13034, 60.0351, 4.0388, 0.66 ) }
    dend_56 { pt3dadd( -8.12987, 60.9039, 3.69793, 0.96 ) }
    dend_56 { pt3dadd( -8.12049, 61.8096, 3.41443, 1.18 ) }
    dend_56 { pt3dadd( -8.07329, 63.2363, 3.0977, 0.96 ) }
    dend_56 { pt3dadd( -8.02369, 64.2684, 2.94058, 0.44 ) }
    dend_56 { pt3dadd( -7.98452, 64.9328, 2.86313, 0.29 ) }
    dend_56 { pt3dadd( -7.91962, 65.7536, 2.77471, 0.29 ) }
    dend_56 { pt3dadd( -7.87004, 66.1533, 2.71953, 0.29 ) }
    dend_56 { pt3dadd( -7.7115, 66.8967, 2.58909, 0.59 ) }
    dend_56 { pt3dadd( -7.56468, 67.3164, 2.49681, 0.96 ) }
    dend_56 { pt3dadd( -7.07165, 68.3381, 2.1855, 1.25 ) }
    dend_56 { pt3dadd( -6.762, 68.8651, 1.96775, 1.11 ) }
    dend_56 { pt3dadd( -6.07667, 69.9525, 1.42149, 0.52 ) }
    dend_56 { pt3dadd( -5.58666, 70.7824, 0.97649, 0.52 ) }
    dend_56 { pt3dadd( -5.18651, 71.533, 0.573907, 0.22 ) }
    dend_56 { pt3dadd( -4.77875, 72.3849, 0.114541, 0.29 ) }
    dend_56 { pt3dadd( -4.43982, 73.1664, -0.338296, 0.59 ) }
    dend_56 { pt3dadd( -4.15531, 73.8999, -0.827401, 1.11 ) }
    dend_56 { pt3dadd( -3.85781, 74.7433, -1.46287, 1.25 ) }
    dend_56 { pt3dadd( -3.52867, 75.7253, -2.31536, 0.96 ) }
    dend_56 { pt3dadd( -3.28699, 76.4008, -3.05049, 0.29 ) }
    dend_56 { pt3dadd( -3.06943, 76.8669, -3.77174, 0.22 ) }
    dend_56 { pt3dadd( -2.87387, 77.1496, -4.50293, 0.22 ) }
    dend_56 { pt3dadd( -2.73061, 77.3081, -5.19004, 0.37 ) }
    dend_56 { pt3dadd( -2.6019, 77.4663, -6.21639, 0.59 ) }
    dend_56 { pt3dadd( -2.56011, 77.6254, -7.44113, 0.74 ) }
    dend_56 { pt3dadd( -2.58318, 77.8247, -8.73015, 0.96 ) }
    dend_56 { pt3dadd( -2.61725, 78.0227, -9.79382, 1.18 ) }
    dend_56 { pt3dadd( -2.65524, 78.2837, -10.9856, 1.18 ) }
    dend_56 { pt3dadd( -2.68352, 78.6186, -12.3213, 1.25 ) }
    dend_56 { pt3dadd( -2.6489, 79.0601, -13.7266, 1.25 ) }
    dend_56 { pt3dadd( -2.53606, 79.5335, -14.8405, 0.52 ) }
    dend_56 { pt3dadd( -2.38879, 79.941, -15.5708, 0.29 ) }
    dend_56 { pt3dadd( -2.13282, 80.4897, -16.3288, 0.29 ) }
    dend_56 { pt3dadd( -1.91123, 80.8904, -16.7494, 0.66 ) }
    dend_56 { pt3dadd( -1.49992, 81.6586, -17.3123, 0.66 ) }
    dend_56 { pt3dadd( -1.0286, 82.7565, -17.868, 0.52 ) }
    dend_56 { pt3dadd( -0.854983, 83.4617, -18.1078, 0.59 ) }
    dend_56 { pt3dadd( -0.777404, 84.2627, -18.3043, 0.74 ) }
    dend_56 { pt3dadd( -0.78196, 84.7413, -18.3843, 0.74 ) }
    dend_56 { pt3dadd( -0.915756, 85.878, -18.5781, 0.29 ) }
    dend_56 { pt3dadd( -1.0834, 86.6802, -18.7083, 0.29 ) }
    dend_56 { pt3dadd( -1.39527, 87.9036, -18.8916, 0.44 ) }
    dend_56 { pt3dadd( -1.51936, 88.3788, -18.9627, 0.81 ) }
    dend_56 { pt3dadd( -1.67174, 89.0204, -19.0832, 0.81 ) }
    dend_56 { pt3dadd( -1.92523, 90.2932, -19.4102, 0.66 ) }
    dend_56 { pt3dadd( -2.06839, 91.3888, -19.7902, 0.66 ) }
    dend_56 { pt3dadd( -2.09397, 91.8372, -19.9705, 0.66 ) }
    dend_56 { pt3dadd( -2.10874, 92.7173, -20.3699, 0.44 ) }
    dend_56 { pt3dadd( -2.143, 93.8625, -20.9194, 0.59 ) }
    dend_56 { pt3dadd( -2.192, 94.6561, -21.2956, 0.44 ) }
    dend_56 { pt3dadd( -2.32304, 95.7463, -21.797, 0.52 ) }
    dend_56 { pt3dadd( -2.46425, 96.4293, -22.1193, 0.52 ) }
    dend_56 { pt3dadd( -2.67124, 97.1309, -22.4648, 0.44 ) }
    dend_56 { pt3dadd( -2.96267, 97.9236, -22.8876, 0.81 ) }
    dend_56 { pt3dadd( -3.34113, 98.8183, -23.4027, 1.03 ) }
    dend_56 { pt3dadd( -3.82662, 99.8932, -24.0815, 0.66 ) }
    dend_56 { pt3dadd( -4.16145, 100.594, -24.5598, 0.44 ) }
    dend_56 { pt3dadd( -4.43686, 101.23, -24.9941, 0.29 ) }
    dend_56 { pt3dadd( -4.66306, 101.916, -25.3993, 0.29 ) }
    dend_56 { pt3dadd( -4.76982, 102.355, -25.5963, 0.29 ) }
    dend_56 { pt3dadd( -4.90125, 102.997, -25.8427, 0.29 ) }
    dend_56 { pt3dadd( -5.00377, 103.556, -26.013, 0.44 ) }
    dend_56 { pt3dadd( -5.28333, 104.892, -26.3839, 0.74 ) }
    dend_56 { pt3dadd( -5.7075, 106.585, -26.8444, 0.59 ) }
    dend_56 { pt3dadd( -6.11925, 107.93, -27.2621, 0.44 ) }
    dend_56 { pt3dadd( -6.4177, 108.746, -27.5848, 0.44 ) }
    dend_56 { pt3dadd( -6.53387, 109.016, -27.7367, 0.59 ) }
    dend_56 { pt3dadd( -6.82085, 109.578, -28.2138, 0.59 ) }
    dend_56 { pt3dadd( -7.10205, 110.035, -28.7706, 0.59 ) }
    dend_56 { pt3dadd( -7.41295, 110.491, -29.5137, 0.59 ) }
    dend_56 { pt3dadd( -7.65931, 110.872, -30.2298, 0.74 ) }
    dend_56 { pt3dadd( -7.97607, 111.478, -31.3377, 0.96 ) }
    dend_56 { pt3dadd( -8.2102, 112.047, -32.2702, 1.18 ) }
    dend_56 { pt3dadd( -8.40283, 112.702, -33.1734, 0.59 ) }
    dend_56 { pt3dadd( -8.54194, 113.38, -33.9442, 0.59 ) }
    dend_56 { pt3dadd( -8.6587, 114.171, -34.6675, 0.59 ) }
    dend_56 { pt3dadd( -8.72944, 114.655, -35.013, 0.29 ) }
    dend_56 { pt3dadd( -8.90314, 115.467, -35.4418, 0.22 ) }
    dend_56 { pt3dadd( -9.09066, 116.031, -35.6997, 0.22 ) }
    dend_56 { pt3dadd( -9.43319, 116.752, -36.011, 0.22 ) }
    dend_56 { pt3dadd( -9.88105, 117.409, -36.3503, 0.22 ) }
    dend_56 { pt3dadd( -10.575, 118.185, -36.8482, 0.81 ) }
    dend_56 { pt3dadd( -11.4312, 118.978, -37.4612, 0.22 ) }
    dend_56 { pt3dadd( -12.1795, 119.599, -38.0105, 0.37 ) }
    dend_56 { pt3dadd( -12.9672, 120.186, -38.5972, 0.88 ) }
    dend_56 { pt3dadd( -14.5009, 121.202, -39.7607, 0.15 ) }
    dend_56 { pt3dadd( -15.3079, 121.693, -40.402, 0.15 ) }
    dend_56 { pt3dadd( -15.7009, 121.919, -40.7495, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 96/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.2873, 43.0095, 17.831, 0.81 ) }
    dend_49 { pt3dadd( -6.41727, 44.0422, 18.9759, 0.81 ) }
    dend_49 { pt3dadd( -6.54222, 45.0153, 19.9259, 0.81 ) }
    dend_49 { pt3dadd( -6.77065, 46.1114, 20.8687, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_49 { pt3dadd( -6.95206, 46.744, 21.3494, 0.59 ) }
    dend_49 { pt3dadd( -7.17358, 47.4196, 21.8275, 0.59 ) }
    dend_49 { pt3dadd( -7.39831, 48.079, 22.2551, 0.44 ) }
    dend_49 { pt3dadd( -7.58632, 48.6137, 22.4958, 0.44 ) }
    dend_49 { pt3dadd( -7.9708, 49.6224, 22.8595, 0.44 ) }
    dend_49 { pt3dadd( -8.25596, 50.3377, 23.1068, 0.74 ) }
    dend_49 { pt3dadd( -8.58827, 51.1855, 23.4658, 1.11 ) }
    dend_49 { pt3dadd( -8.83007, 51.816, 23.7484, 1.11 ) }
    dend_49 { pt3dadd( -9.26254, 53.0015, 24.3079, 0.52 ) }
    dend_49 { pt3dadd( -9.55577, 53.9415, 24.7594, 0.66 ) }
    dend_49 { pt3dadd( -9.77438, 54.8278, 25.2076, 0.96 ) }
    dend_49 { pt3dadd( -9.97843, 55.7578, 25.6996, 1.33 ) }
    dend_49 { pt3dadd( -10.2609, 57.0084, 26.375, 1.77 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -185.686, -423.477, -9.05879, 0.29 ) }
    dend_40 { pt3dadd( -185.83, -424.669, -8.74732, 0.29 ) }
    dend_40 { pt3dadd( -186.04, -425.883, -8.54336, 0.66 ) }
    dend_40 { pt3dadd( -186.382, -427.565, -8.38064, 0.15 ) }
    dend_40 { pt3dadd( -186.588, -428.516, -8.34154, 0.15 ) }
    dend_40 { pt3dadd( -186.759, -429.131, -8.37022, 0.59 ) }
    dend_40 { pt3dadd( -187.221, -430.396, -8.53481, 0.07 ) }
    dend_40 { pt3dadd( -187.672, -431.193, -8.78029, 0.07 ) }
    dend_40 { pt3dadd( -187.979, -431.595, -8.97189, 0.15 ) }
    dend_40 { pt3dadd( -188.325, -431.995, -9.27316, 0.37 ) }
    dend_40 { pt3dadd( -189.14, -432.931, -10.1408, 0.07 ) }
    dend_40 { pt3dadd( -189.705, -433.564, -10.8151, 0.07 ) }
    dend_40 { pt3dadd( -189.989, -433.874, -11.1728, 0.07 ) }
    dend_40 { pt3dadd( -190.329, -434.233, -11.5744, 0.81 ) }
    dend_40 { pt3dadd( -191.182, -435.179, -12.5896, 0.22 ) }
    dend_40 { pt3dadd( -191.683, -435.805, -13.2123, 0.44 ) }
    dend_40 { pt3dadd( -192.171, -436.608, -13.9051, 0.15 ) }
    dend_40 { pt3dadd( -192.401, -437.079, -14.2868, 0.15 ) }
    dend_40 { pt3dadd( -192.544, -437.443, -14.5624, 0.44 ) }
    dend_40 { pt3dadd( -192.771, -438.043, -14.9917, 0.66 ) }
    dend_40 { pt3dadd( -193.185, -439.163, -15.6779, 0.15 ) }
    dend_40 { pt3dadd( -193.41, -439.901, -16.094, 0.15 ) }
    dend_40 { pt3dadd( -193.52, -440.539, -16.4387, 0.15 ) }
    dend_40 { pt3dadd( -193.582, -441.239, -16.836, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 37/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -185.686, -423.477, -9.05879, 0.07 ) }
    dend_39 { pt3dadd( -187.22, -422.648, -8.92182, 0.07 ) }
    dend_39 { pt3dadd( -188.319, -422.038, -8.87147, 0.07 ) }
    dend_39 { pt3dadd( -189.34, -421.476, -8.8515, 0.07 ) }
    dend_39 { pt3dadd( -189.827, -421.2, -8.85278, 0.15 ) }
    dend_39 { pt3dadd( -190.699, -420.651, -8.86929, 0.07 ) }
    dend_39 { pt3dadd( -191.265, -420.248, -8.88667, 0.07 ) }
    dend_39 { pt3dadd( -191.74, -419.817, -8.95984, 0.22 ) }
    dend_39 { pt3dadd( -192.098, -419.457, -8.97457, 0.15 ) }
    dend_39 { pt3dadd( -192.315, -419.235, -8.96908, 0.15 ) }
    dend_39 { pt3dadd( -193.028, -418.533, -8.94582, 0.29 ) }
    dend_39 { pt3dadd( -193.651, -417.981, -8.91881, 0.07 ) }
    dend_39 { pt3dadd( -194.291, -417.475, -8.8873, 0.15 ) }
    dend_39 { pt3dadd( -195.731, -416.462, -8.85672, 0.07 ) }
    dend_39 { pt3dadd( -196.585, -415.989, -8.86, 0.15 ) }
    dend_39 { pt3dadd( -197.287, -415.719, -8.8854, 0.15 ) }
    dend_39 { pt3dadd( -197.926, -415.581, -8.93053, 0.15 ) }
    dend_39 { pt3dadd( -198.578, -415.55, -9.00004, 0.15 ) }
    dend_39 { pt3dadd( -199.528, -415.585, -9.14049, 0.15 ) }
    dend_39 { pt3dadd( -200.376, -415.71, -9.33596, 0.07 ) }
    dend_39 { pt3dadd( -201.191, -415.913, -9.48262, 0.07 ) }
    dend_39 { pt3dadd( -201.693, -416.076, -9.55324, 0.66 ) }
    dend_39 { pt3dadd( -202.64, -416.462, -9.69884, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -11.8237, -275.671, 31.2246, 0.15 ) }
    dend_29 { pt3dadd( -12.1152, -276.822, 30.1561, 0.15 ) }
    dend_29 { pt3dadd( -12.3072, -277.457, 29.6692, 0.15 ) }
    dend_29 { pt3dadd( -12.3771, -277.754, 29.4589, 0.15 ) }
    dend_29 { pt3dadd( -12.4505, -278.087, 29.2207, 0.52 ) }
    dend_29 { pt3dadd( -12.5474, -278.554, 28.9028, 0.81 ) }
    dend_29 { pt3dadd( -12.8137, -279.712, 28.1151, 0.22 ) }
    dend_29 { pt3dadd( -13.0102, -280.602, 27.5606, 0.22 ) }
    dend_29 { pt3dadd( -13.1616, -281.234, 27.1878, 0.15 ) }
    dend_29 { pt3dadd( -13.2738, -281.771, 26.8656, 0.22 ) }
    dend_29 { pt3dadd( -13.3785, -282.456, 26.4186, 0.29 ) }
    dend_29 { pt3dadd( -13.4326, -283.151, 25.9138, 0.22 ) }
    dend_29 { pt3dadd( -13.4357, -283.573, 25.5732, 0.22 ) }
    dend_29 { pt3dadd( -13.4468, -284.046, 25.1739, 0.37 ) }
    dend_29 { pt3dadd( -13.4965, -284.681, 24.6311, 0.37 ) }
    dend_29 { pt3dadd( -13.567, -285.521, 23.9225, 0.22 ) }
    dend_29 { pt3dadd( -13.5843, -285.86, 23.6066, 0.22 ) }
    dend_29 { pt3dadd( -13.5999, -286.366, 23.0995, 0.22 ) }
    dend_29 { pt3dadd( -13.6233, -286.618, 22.8338, 0.22 ) }
    dend_29 { pt3dadd( -13.7071, -286.987, 22.4438, 0.22 ) }
    dend_29 { pt3dadd( -13.8054, -287.368, 22.0551, 0.15 ) }
    dend_29 { pt3dadd( -13.9643, -288.127, 21.3118, 0.44 ) }
    dend_29 { pt3dadd( -14.1277, -289.034, 20.4875, 0.22 ) }
    dend_29 { pt3dadd( -14.2226, -289.577, 20.0504, 0.29 ) }
    dend_29 { pt3dadd( -14.4106, -290.702, 19.2094, 0.07 ) }
    dend_29 { pt3dadd( -14.5216, -291.422, 18.709, 0.66 ) }
    dend_29 { pt3dadd( -14.6684, -292.431, 18.07, 0.07 ) }
    dend_29 { pt3dadd( -14.7622, -293.122, 17.6768, 0.07 ) }
    dend_29 { pt3dadd( -14.8309, -293.911, 17.2126, 0.29 ) }
    dend_29 { pt3dadd( -14.8631, -294.752, 16.6888, 0.07 ) }
    dend_29 { pt3dadd( -14.8737, -295.151, 16.43, 0.44 ) }
    dend_29 { pt3dadd( -14.8965, -295.365, 16.288, 0.44 ) }
    dend_29 { pt3dadd( -14.9926, -296.05, 15.8128, 0.74 ) }
    dend_29 { pt3dadd( -15.0658, -297.105, 14.9442, 0.07 ) }
    dend_29 { pt3dadd( -15.0564, -297.537, 14.5525, 0.22 ) }
    dend_29 { pt3dadd( -14.9886, -298.121, 14.0104, 0.07 ) }
    dend_29 { pt3dadd( -14.9321, -298.634, 13.5381, 0.07 ) }
    dend_29 { pt3dadd( -14.8685, -299.097, 13.116, 0.66 ) }
    dend_29 { pt3dadd( -14.5675, -300.372, 11.9745, 0.07 ) }
    dend_29 { pt3dadd( -14.3271, -300.91, 11.4712, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_29 { pt3dadd( -13.9687, -301.436, 10.8853, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.8237, -275.671, 31.2246, 0.07 ) }
    dend_28 { pt3dadd( -9.94914, -276.272, 30.7998, 0.07 ) }
    dend_28 { pt3dadd( -9.07991, -276.516, 30.5929, 0.29 ) }
    dend_28 { pt3dadd( -8.01717, -276.792, 30.3321, 0.07 ) }
    dend_28 { pt3dadd( -7.12908, -277.004, 30.1097, 0.52 ) }
    dend_28 { pt3dadd( -4.73483, -277.444, 29.401, 0.07 ) }
    dend_28 { pt3dadd( -3.3479, -277.629, 28.9269, 0.07 ) }
    dend_28 { pt3dadd( -2.80824, -277.67, 28.7268, 0.59 ) }
    dend_28 { pt3dadd( -2.07531, -277.695, 28.4279, 0.74 ) }
    dend_28 { pt3dadd( -1.36465, -277.674, 28.1177, 0.37 ) }
    dend_28 { pt3dadd( 0.483699, -277.492, 27.2187, 0.07 ) }
    dend_28 { pt3dadd( 1.36822, -277.291, 26.6715, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.21354, -13.9097, -16.9341, 0.59 ) }
    dend_21 { pt3dadd( 4.59681, -13.6671, -18.3586, 0.59 ) }
    dend_21 { pt3dadd( 4.89753, -13.5261, -19.4716, 0.59 ) }
    dend_21 { pt3dadd( 5.31022, -13.3786, -21.086, 0.52 ) }
    dend_21 { pt3dadd( 5.57628, -13.2963, -22.3672, 0.52 ) }
    dend_21 { pt3dadd( 5.73255, -13.2445, -23.2918, 0.52 ) }
    dend_21 { pt3dadd( 5.78818, -13.211, -23.7569, 0.52 ) }
    dend_21 { pt3dadd( 5.79899, -13.117, -24.5947, 0.52 ) }
    dend_21 { pt3dadd( 5.77447, -13.0486, -24.9731, 0.52 ) }
    dend_21 { pt3dadd( 5.67367, -12.7803, -25.8399, 0.66 ) }
    dend_21 { pt3dadd( 5.65127, -12.6262, -26.1519, 0.66 ) }
    dend_21 { pt3dadd( 5.71664, -12.1005, -27.0115, 0.29 ) }
    dend_21 { pt3dadd( 5.93286, -11.5601, -27.8269, 0.88 ) }
    dend_21 { pt3dadd( 6.31717, -11.1316, -28.4588, 0.37 ) }
    dend_21 { pt3dadd( 6.83105, -10.7734, -29.0281, 0.29 ) }
    dend_21 { pt3dadd( 7.35717, -10.4806, -29.4825, 0.29 ) }
    dend_21 { pt3dadd( 7.77962, -10.2715, -29.7961, 0.29 ) }
    dend_21 { pt3dadd( 8.08003, -10.1386, -29.9795, 0.44 ) }
    dend_21 { pt3dadd( 8.69762, -9.82058, -30.3296, 0.52 ) }
    dend_21 { pt3dadd( 9.25743, -9.42108, -30.6289, 0.15 ) }
    dend_21 { pt3dadd( 9.68794, -9.00598, -30.8263, 0.15 ) }
    dend_21 { pt3dadd( 10.1408, -8.47044, -30.9906, 0.15 ) }
    dend_21 { pt3dadd( 10.4466, -8.03152, -31.0807, 0.15 ) }
    dend_21 { pt3dadd( 10.7722, -7.45009, -31.1987, 0.15 ) }
    dend_21 { pt3dadd( 11.1171, -6.68763, -31.3424, 0.15 ) }
    dend_21 { pt3dadd( 11.4863, -5.82801, -31.4932, 0.29 ) }
    dend_21 { pt3dadd( 11.7034, -5.30825, -31.5902, 0.15 ) }
    dend_21 { pt3dadd( 12.0252, -4.45136, -31.7513, 0.22 ) }
    dend_21 { pt3dadd( 12.3976, -3.30383, -31.9776, 0.07 ) }
    dend_21 { pt3dadd( 12.5355, -2.82508, -32.0829, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.21354, -13.9097, -16.9341, 0.88 ) }
    dend_14 { pt3dadd( 4.7808, -14.6067, -17.692, 0.88 ) }
    dend_14 { pt3dadd( 5.25722, -15.25, -18.5654, 0.74 ) }
    dend_14 { pt3dadd( 5.6769, -15.8167, -19.3348, 0.88 ) }
    dend_14 { pt3dadd( 6.29304, -16.6487, -20.4644, 0.88 ) }
    dend_14 { pt3dadd( 6.79807, -17.3307, -21.3903, 0.96 ) }
    dend_14 { pt3dadd( 7.3498, -18.0757, -22.4018, 0.96 ) }
    dend_14 { pt3dadd( 7.57044, -18.4993, -23.1468, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.932, -8.17447, -13.6591, 0.81 ) }
    dend_12 { pt3dadd( -11.9791, -8.70993, -13.635, 0.81 ) }
    dend_12 { pt3dadd( -12.7627, -9.08107, -13.5233, 0.44 ) }
    dend_12 { pt3dadd( -13.2882, -9.28027, -13.3657, 0.44 ) }
    dend_12 { pt3dadd( -13.978, -9.46083, -13.0557, 0.66 ) }
    dend_12 { pt3dadd( -14.4576, -9.54209, -12.7966, 0.74 ) }
    dend_12 { pt3dadd( -15.1333, -9.61241, -12.4054, 0.44 ) }
    dend_12 { pt3dadd( -15.8249, -9.61779, -11.943, 0.59 ) }
    dend_12 { pt3dadd( -16.7158, -9.56173, -11.3308, 0.59 ) }
    dend_12 { pt3dadd( -17.5899, -9.45129, -10.7453, 0.59 ) }
    dend_12 { pt3dadd( -18.3238, -9.33111, -10.2581, 0.59 ) }
    dend_12 { pt3dadd( -19.1224, -9.21043, -9.74143, 0.81 ) }
    dend_12 { pt3dadd( -19.6901, -9.16085, -9.39721, 0.66 ) }
    dend_12 { pt3dadd( -20.1347, -9.17097, -9.14956, 0.88 ) }
    dend_12 { pt3dadd( -21.0662, -9.29409, -8.64641, 0.37 ) }
    dend_12 { pt3dadd( -21.573, -9.39639, -8.35981, 0.44 ) }
    dend_12 { pt3dadd( -22.2515, -9.55311, -7.94572, 0.59 ) }
    dend_12 { pt3dadd( -23.0368, -9.72718, -7.43405, 0.44 ) }
    dend_12 { pt3dadd( -23.7584, -9.84294, -6.95565, 0.44 ) }
    dend_12 { pt3dadd( -24.434, -9.8767, -6.54642, 0.44 ) }
    dend_12 { pt3dadd( -25.1141, -9.83108, -6.19618, 0.66 ) }
    dend_12 { pt3dadd( -25.7202, -9.72711, -5.95486, 0.81 ) }
    dend_12 { pt3dadd( -26.2402, -9.59615, -5.79221, 0.81 ) }
    dend_12 { pt3dadd( -27.0699, -9.37017, -5.59097, 0.66 ) }
    dend_12 { pt3dadd( -28.1412, -9.08657, -5.42543, 0.59 ) }
    dend_12 { pt3dadd( -28.9882, -8.89916, -5.39264, 0.59 ) }
    dend_12 { pt3dadd( -30.0575, -8.73701, -5.46445, 0.74 ) }
    dend_12 { pt3dadd( -30.448, -8.70873, -5.52159, 0.52 ) }
    dend_12 { pt3dadd( -31.2077, -8.7199, -5.67417, 0.22 ) }
    dend_12 { pt3dadd( -31.9344, -8.79437, -5.8605, 0.22 ) }
    dend_12 { pt3dadd( -32.6488, -8.89854, -6.08663, 0.22 ) }
    dend_12 { pt3dadd( -33.1153, -8.96645, -6.24693, 0.37 ) }
    dend_12 { pt3dadd( -33.6558, -9.03925, -6.4314, 0.81 ) }
    dend_12 { pt3dadd( -34.1791, -9.10148, -6.60015, 0.81 ) }
    dend_12 { pt3dadd( -34.8845, -9.16065, -6.80631, 0.59 ) }
    dend_12 { pt3dadd( -35.7074, -9.21296, -7.0035, 0.37 ) }
    dend_12 { pt3dadd( -36.3809, -9.23631, -7.14839, 0.29 ) }
    dend_12 { pt3dadd( -37.0592, -9.23366, -7.3129, 0.37 ) }
    dend_12 { pt3dadd( -37.5069, -9.20923, -7.4564, 0.29 ) }
    dend_12 { pt3dadd( -38.234, -9.14196, -7.72858, 0.29 ) }
    dend_12 { pt3dadd( -38.918, -9.05814, -8.00525, 0.81 ) }
    dend_12 { pt3dadd( -39.6378, -8.96143, -8.31379, 0.52 ) }
    dend_12 { pt3dadd( -40.2514, -8.86667, -8.60849, 0.52 ) }
    dend_12 { pt3dadd( -41.1752, -8.70154, -9.08905, 0.37 ) }
    dend_12 { pt3dadd( -41.6996, -8.58652, -9.39682, 0.66 ) }
    dend_12 { pt3dadd( -42.2378, -8.44818, -9.76141, 0.66 ) }
    dend_12 { pt3dadd( -43.0275, -8.22282, -10.3656, 0.44 ) }
    dend_12 { pt3dadd( -43.8432, -7.98453, -11.0393, 0.81 ) }
    dend_12 { pt3dadd( -44.2097, -7.8803, -11.3465, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -44.8077, -7.71663, -11.8701, 0.37 ) }
    dend_12 { pt3dadd( -45.2488, -7.61549, -12.313, 0.22 ) }
    dend_12 { pt3dadd( -45.6626, -7.59094, -12.7748, 0.22 ) }
    dend_12 { pt3dadd( -45.9568, -7.66255, -13.1573, 0.22 ) }
    dend_12 { pt3dadd( -46.1855, -7.78536, -13.4718, 0.81 ) }
    dend_12 { pt3dadd( -46.3508, -7.89595, -13.7023, 1.03 ) }
    dend_12 { pt3dadd( -46.7403, -8.20312, -14.2484, 0.66 ) }
    dend_12 { pt3dadd( -47.28, -8.6549, -14.9922, 0.29 ) }
    dend_12 { pt3dadd( -47.9917, -9.22047, -15.9704, 0.29 ) }
    dend_12 { pt3dadd( -48.4024, -9.50001, -16.5211, 0.22 ) }
    dend_12 { pt3dadd( -48.7222, -9.66882, -16.9459, 0.22 ) }
    dend_12 { pt3dadd( -48.9153, -9.73979, -17.196, 0.22 ) }
    dend_12 { pt3dadd( -49.2378, -9.78601, -17.5952, 0.22 ) }
    dend_12 { pt3dadd( -49.5979, -9.75953, -18.0192, 0.22 ) }
    dend_12 { pt3dadd( -49.884, -9.70143, -18.3339, 0.22 ) }
    dend_12 { pt3dadd( -50.3879, -9.59738, -18.9145, 0.22 ) }
    dend_12 { pt3dadd( -50.6854, -9.52723, -19.2651, 0.66 ) }
    dend_12 { pt3dadd( -51.2375, -9.37777, -19.9338, 0.66 ) }
    dend_12 { pt3dadd( -51.7525, -9.23127, -20.5852, 0.15 ) }
    dend_12 { pt3dadd( -52.2395, -9.11856, -21.2032, 0.15 ) }
    dend_12 { pt3dadd( -52.886, -9.00263, -22.027, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 21/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.932, -8.17447, -13.6591, 1.55 ) }
    dend_3 { pt3dadd( -10.104, -9.58226, -14.7003, 1.55 ) }
    dend_3 { pt3dadd( -9.54158, -10.7147, -15.508, 1.4 ) }
    dend_3 { pt3dadd( -9.13962, -11.7614, -16.1784, 1.33 ) }
    dend_3 { pt3dadd( -8.78211, -13.0037, -16.8521, 0.96 ) }
    dend_3 { pt3dadd( -8.54121, -14.1309, -17.3497, 0.88 ) }
    dend_3 { pt3dadd( -8.36494, -15.2312, -17.7352, 1.4 ) }
    dend_3 { pt3dadd( -8.32773, -16.1933, -17.9587, 1.47 ) }
    dend_3 { pt3dadd( -8.40496, -17.9674, -18.2055, 1.03 ) }
    dend_3 { pt3dadd( -8.57758, -19.5673, -18.3536, 0.96 ) }
    dend_3 { pt3dadd( -8.81665, -21.3343, -18.4581, 1.03 ) }
    dend_3 { pt3dadd( -9.00546, -22.8859, -18.5246, 1.03 ) }
    dend_3 { pt3dadd( -9.16787, -24.5964, -18.5974, 1.11 ) }
    dend_3 { pt3dadd( -9.24199, -25.8067, -18.6954, 0.88 ) }
    dend_3 { pt3dadd( -9.26638, -27.3752, -18.9081, 0.88 ) }
    dend_3 { pt3dadd( -9.2287, -28.4654, -19.1518, 1.11 ) }
    dend_3 { pt3dadd( -9.09755, -29.9448, -19.6186, 1.11 ) }
    dend_3 { pt3dadd( -8.90672, -31.1839, -20.0923, 0.96 ) }
    dend_3 { pt3dadd( -8.5625, -32.6628, -20.7127, 1.03 ) }
    dend_3 { pt3dadd( -8.28973, -33.5982, -21.1309, 1.11 ) }
    dend_3 { pt3dadd( -7.8497, -35.0125, -21.7036, 0.96 ) }
    dend_3 { pt3dadd( -7.56232, -36.0234, -22.0889, 0.88 ) }
    dend_3 { pt3dadd( -7.4408, -36.514, -22.2632, 0.81 ) }
    dend_3 { pt3dadd( -7.20847, -37.5216, -22.6043, 0.74 ) }
    dend_3 { pt3dadd( -6.99404, -38.5397, -22.9405, 0.88 ) }
    dend_3 { pt3dadd( -6.74297, -40.0009, -23.4264, 1.03 ) }
    dend_3 { pt3dadd( -6.65318, -40.8681, -23.6892, 1.25 ) }
    dend_3 { pt3dadd( -6.60686, -42.4351, -24.1266, 1.25 ) }
    dend_3 { pt3dadd( -6.65411, -43.979, -24.5261, 1.18 ) }
    dend_3 { pt3dadd( -6.73953, -45.4486, -24.9136, 1.11 ) }
    dend_3 { pt3dadd( -6.84816, -46.8531, -25.2946, 1.03 ) }
    dend_3 { pt3dadd( -7.02548, -48.9033, -25.8859, 0.96 ) }
    dend_3 { pt3dadd( -7.18773, -50.2787, -26.2265, 0.96 ) }
    dend_3 { pt3dadd( -7.36485, -51.2455, -26.4016, 1.25 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -10.2609, 57.0084, 26.375, 0.29 ) }
    dend_51 { pt3dadd( -11.1143, 58.1458, 27.4354, 0.29 ) }
    dend_51 { pt3dadd( -11.7094, 58.9271, 28.1513, 0.22 ) }
    dend_51 { pt3dadd( -12.195, 59.554, 28.7248, 0.22 ) }
    dend_51 { pt3dadd( -12.4402, 59.8897, 29.0344, 0.22 ) }
    dend_51 { pt3dadd( -12.6365, 60.1784, 29.3111, 0.59 ) }
    dend_51 { pt3dadd( -12.9407, 60.6599, 29.7955, 1.03 ) }
    dend_51 { pt3dadd( -13.1945, 61.1716, 30.3522, 1.33 ) }
    dend_51 { pt3dadd( -13.5461, 61.9781, 31.1741, 0.59 ) }
    dend_51 { pt3dadd( -13.7775, 62.5371, 31.7039, 0.22 ) }
    dend_51 { pt3dadd( -13.9626, 63.1179, 32.1447, 0.22 ) }
    dend_51 { pt3dadd( -14.128, 63.893, 32.6023, 0.22 ) }
    dend_51 { pt3dadd( -14.2001, 64.4526, 32.8506, 0.74 ) }
    dend_51 { pt3dadd( -14.2392, 65.2673, 33.0869, 1.84 ) }
    dend_51 { pt3dadd( -14.2396, 65.9495, 33.2036, 1.84 ) }
    dend_51 { pt3dadd( -14.2017, 68.0886, 33.3496, 0.22 ) }
    dend_51 { pt3dadd( -14.1505, 69.3435, 33.3314, 0.22 ) }
    dend_51 { pt3dadd( -14.0887, 70.0336, 33.2935, 0.22 ) }
    dend_51 { pt3dadd( -13.8838, 71.4178, 33.2383, 0.22 ) }
    dend_51 { pt3dadd( -13.8115, 71.7639, 33.2314, 0.44 ) }
    dend_51 { pt3dadd( -13.6186, 72.481, 33.2315, 1.18 ) }
    dend_51 { pt3dadd( -13.2695, 73.5494, 33.2704, 1.7 ) }
    dend_51 { pt3dadd( -12.6547, 75.3684, 33.3993, 0.15 ) }
    dend_51 { pt3dadd( -12.2753, 76.534, 33.5201, 0.15 ) }
    dend_51 { pt3dadd( -12.1605, 76.9153, 33.5856, 0.74 ) }
    dend_51 { pt3dadd( -11.9588, 77.6495, 33.7322, 1.7 ) }
    dend_51 { pt3dadd( -11.9285, 77.7739, 33.7607, 1.7 ) }
    dend_51 { pt3dadd( -11.7052, 79.1115, 34.0466, 0.15 ) }
    dend_51 { pt3dadd( -11.6775, 79.6228, 34.1262, 0.15 ) }
    dend_51 { pt3dadd( -11.6921, 80.4417, 34.2047, 0.15 ) }
    dend_51 { pt3dadd( -11.7533, 81.2043, 34.243, 0.29 ) }
    dend_51 { pt3dadd( -11.8064, 81.5451, 34.2462, 0.29 ) }
    dend_51 { pt3dadd( -12.0333, 82.69, 34.2093, 0.07 ) }
    dend_51 { pt3dadd( -12.1492, 83.2113, 34.1727, 0.22 ) }
    dend_51 { pt3dadd( -12.2614, 83.7118, 34.109, 0.66 ) }
    dend_51 { pt3dadd( -12.5205, 84.8466, 33.9111, 0.96 ) }
    dend_51 { pt3dadd( -12.7286, 85.8256, 33.7133, 0.22 ) }
    dend_51 { pt3dadd( -12.9495, 87.0262, 33.4396, 0.66 ) }
    dend_51 { pt3dadd( -13.0841, 87.9596, 33.2392, 0.44 ) }
    dend_51 { pt3dadd( -13.151, 88.5899, 33.1179, 0.74 ) }
    dend_51 { pt3dadd( -13.1988, 89.2616, 33.0185, 1.55 ) }
    dend_51 { pt3dadd( -13.2156, 90.115, 32.9511, 1.84 ) }
    dend_51 { pt3dadd( -13.1973, 91.893, 33.0047, 0.22 ) }
    dend_51 { pt3dadd( -13.1805, 92.8585, 33.1806, 0.22 ) }
    dend_51 { pt3dadd( -13.1748, 93.1866, 33.2922, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_51 { pt3dadd( -13.1815, 93.8384, 33.6118, 1.25 ) }
    dend_51 { pt3dadd( -13.2191, 94.5545, 34.0318, 1.62 ) }
    dend_51 { pt3dadd( -13.3481, 95.9566, 34.9442, 0.22 ) }
    dend_51 { pt3dadd( -13.4315, 96.6622, 35.4267, 0.22 ) }
    dend_51 { pt3dadd( -13.6005, 97.7417, 36.104, 1.03 ) }
    dend_51 { pt3dadd( -13.9116, 99.4224, 36.9831, 0.15 ) }
    dend_51 { pt3dadd( -14.1417, 100.502, 37.4071, 0.15 ) }
    dend_51 { pt3dadd( -14.2677, 101.04, 37.5448, 0.52 ) }
    dend_51 { pt3dadd( -14.3846, 101.52, 37.5897, 1.03 ) }
    dend_51 { pt3dadd( -14.6208, 102.49, 37.5444, 1.18 ) }
    dend_51 { pt3dadd( -14.9771, 103.838, 37.3017, 0.22 ) }
    dend_51 { pt3dadd( -15.1653, 104.483, 37.1029, 0.22 ) }
    dend_51 { pt3dadd( -15.3881, 105.15, 36.8698, 0.22 ) }
    dend_51 { pt3dadd( -15.7694, 106.16, 36.4879, 0.22 ) }
    dend_51 { pt3dadd( -15.9612, 106.612, 36.3022, 0.74 ) }
    dend_51 { pt3dadd( -16.3647, 107.465, 35.9374, 1.77 ) }
    dend_51 { pt3dadd( -16.9218, 108.522, 35.4626, 0.22 ) }
    dend_51 { pt3dadd( -17.2994, 109.186, 35.128, 0.22 ) }
    dend_51 { pt3dadd( -17.6189, 109.698, 34.8269, 0.22 ) }
    dend_51 { pt3dadd( -17.8186, 110.004, 34.6226, 0.22 ) }
    dend_51 { pt3dadd( -18.26, 110.715, 34.1555, 0.07 ) }
    dend_51 { pt3dadd( -18.633, 111.418, 33.7293, 0.07 ) }
    dend_51 { pt3dadd( -18.8718, 111.93, 33.4595, 0.07 ) }
    dend_51 { pt3dadd( -19.1426, 112.557, 33.1761, 0.37 ) }
    dend_51 { pt3dadd( -19.4443, 113.283, 32.9156, 1.03 ) }
    dend_51 { pt3dadd( -19.9331, 114.486, 32.5773, 0.52 ) }
    dend_51 { pt3dadd( -20.5144, 115.934, 32.3113, 0.15 ) }
    dend_51 { pt3dadd( -20.7974, 116.664, 32.2451, 0.29 ) }
    dend_51 { pt3dadd( -20.999, 117.197, 32.2306, 0.96 ) }
    dend_51 { pt3dadd( -21.2608, 117.894, 32.2428, 1.11 ) }
    dend_51 { pt3dadd( -21.5832, 118.727, 32.2884, 0.22 ) }
    dend_51 { pt3dadd( -21.9776, 119.714, 32.3864, 0.22 ) }
    dend_51 { pt3dadd( -22.2574, 120.356, 32.4967, 0.37 ) }
    dend_51 { pt3dadd( -22.5359, 120.962, 32.6169, 0.96 ) }
    dend_51 { pt3dadd( -22.8038, 121.486, 32.7394, 0.96 ) }
    dend_51 { pt3dadd( -23.2197, 122.194, 32.9178, 0.15 ) }
    dend_51 { pt3dadd( -23.7558, 122.987, 33.0976, 0.22 ) }
    dend_51 { pt3dadd( -24.3608, 123.78, 33.2595, 0.37 ) }
    dend_51 { pt3dadd( -25.0162, 124.562, 33.4165, 0.74 ) }
    dend_51 { pt3dadd( -25.844, 125.481, 33.5915, 0.22 ) }
    dend_51 { pt3dadd( -26.9059, 126.585, 33.782, 0.66 ) }
    dend_51 { pt3dadd( -27.783, 127.452, 33.9357, 0.07 ) }
    dend_51 { pt3dadd( -28.1199, 127.782, 33.9987, 0.07 ) }
    dend_51 { pt3dadd( -28.5387, 128.209, 34.0653, 0.15 ) }
    dend_51 { pt3dadd( -29.0084, 128.716, 34.1194, 0.81 ) }
    dend_51 { pt3dadd( -29.4929, 129.284, 34.1535, 1.25 ) }
    dend_51 { pt3dadd( -30.2474, 130.228, 34.1953, 0.37 ) }
    dend_51 { pt3dadd( -31.0575, 131.299, 34.2186, 0.22 ) }
    dend_51 { pt3dadd( -31.8201, 132.328, 34.2034, 0.37 ) }
    dend_51 { pt3dadd( -32.5828, 133.377, 34.157, 0.88 ) }
    dend_51 { pt3dadd( -32.9857, 133.943, 34.117, 0.37 ) }
    dend_51 { pt3dadd( -33.5261, 134.719, 34.056, 0.15 ) }
    dend_51 { pt3dadd( -34.0371, 135.46, 33.9927, 0.15 ) }
    dend_51 { pt3dadd( -34.4488, 136.078, 33.972, 0.37 ) }
    dend_51 { pt3dadd( -34.8965, 136.787, 34.0334, 0.74 ) }
    dend_51 { pt3dadd( -35.2831, 137.421, 34.1372, 0.29 ) }
    dend_51 { pt3dadd( -35.9175, 138.503, 34.3866, 0.15 ) }
    dend_51 { pt3dadd( -36.1103, 138.856, 34.4958, 0.44 ) }
    dend_51 { pt3dadd( -36.5561, 139.713, 34.8172, 1.03 ) }
    dend_51 { pt3dadd( -37.0335, 140.668, 35.2059, 0.44 ) }
    dend_51 { pt3dadd( -37.4491, 141.502, 35.5761, 0.15 ) }
    dend_51 { pt3dadd( -37.9181, 142.445, 36.0065, 0.74 ) }
    dend_51 { pt3dadd( -38.5409, 143.771, 36.578, 0.15 ) }
    dend_51 { pt3dadd( -38.7931, 144.364, 36.8218, 0.22 ) }
    dend_51 { pt3dadd( -39.0145, 144.962, 37.0574, 0.81 ) }
    dend_51 { pt3dadd( -39.156, 145.446, 37.2338, 0.81 ) }
    dend_51 { pt3dadd( -39.3712, 146.304, 37.5298, 0.22 ) }
    dend_51 { pt3dadd( -39.6524, 147.532, 37.9023, 0.15 ) }
    dend_51 { pt3dadd( -39.8327, 148.379, 38.1514, 0.22 ) }
    dend_51 { pt3dadd( -39.9555, 148.993, 38.3289, 0.37 ) }
    dend_51 { pt3dadd( -40.1795, 150.165, 38.6648, 0.96 ) }
    dend_51 { pt3dadd( -40.4626, 151.633, 39.0592, 0.15 ) }
    dend_51 { pt3dadd( -40.6026, 152.307, 39.216, 0.15 ) }
    dend_51 { pt3dadd( -40.742, 152.879, 39.3243, 0.15 ) }
    dend_51 { pt3dadd( -40.9349, 153.553, 39.4069, 0.66 ) }
    dend_51 { pt3dadd( -41.0608, 153.951, 39.4308, 0.66 ) }
    dend_51 { pt3dadd( -41.4135, 154.964, 39.42, 0.07 ) }
    dend_51 { pt3dadd( -41.6977, 155.781, 39.4062, 0.07 ) }
    dend_51 { pt3dadd( -41.8198, 156.112, 39.412, 0.44 ) }
    dend_51 { pt3dadd( -41.98, 156.528, 39.432, 0.74 ) }
    dend_51 { pt3dadd( -42.169, 156.995, 39.4779, 0.96 ) }
    dend_51 { pt3dadd( -42.3735, 157.483, 39.556, 0.96 ) }
    dend_51 { pt3dadd( -42.8831, 158.667, 39.8134, 0.15 ) }
    dend_51 { pt3dadd( -43.2499, 159.508, 40.0303, 0.15 ) }
    dend_51 { pt3dadd( -43.688, 160.478, 40.2787, 0.15 ) }
    dend_51 { pt3dadd( -43.925, 160.986, 40.396, 0.15 ) }
    dend_51 { pt3dadd( -44.173, 161.481, 40.4928, 0.15 ) }
    dend_51 { pt3dadd( -44.4319, 161.941, 40.5582, 0.37 ) }
    dend_51 { pt3dadd( -44.7223, 162.375, 40.6151, 0.81 ) }
    dend_51 { pt3dadd( -45.1228, 162.876, 40.6937, 1.03 ) }
    dend_51 { pt3dadd( -45.7052, 163.53, 40.832, 0.37 ) }
    dend_51 { pt3dadd( -46.3657, 164.219, 40.9999, 0.15 ) }
    dend_51 { pt3dadd( -47.2053, 165.045, 41.2406, 0.29 ) }
    dend_51 { pt3dadd( -48.4116, 166.132, 41.6263, 0.29 ) }
    dend_51 { pt3dadd( -49.3297, 166.895, 41.9463, 0.15 ) }
    dend_51 { pt3dadd( -49.9445, 167.381, 42.1762, 0.29 ) }
    dend_51 { pt3dadd( -50.6707, 167.927, 42.4668, 0.88 ) }
    dend_51 { pt3dadd( -51.5942, 168.591, 42.8519, 0.15 ) }
    dend_51 { pt3dadd( -52.4749, 169.205, 43.2306, 0.15 ) }
    dend_51 { pt3dadd( -53.2246, 169.715, 43.537, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_51 { pt3dadd( -54.0617, 170.287, 43.8845, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -10.2609, 57.0084, 26.375, 0.22 ) }
    dend_50 { pt3dadd( -9.37578, 58.091, 26.6599, 0.22 ) }
    dend_50 { pt3dadd( -8.81419, 58.8392, 26.7886, 0.15 ) }
    dend_50 { pt3dadd( -8.28406, 59.5851, 26.9194, 0.22 ) }
    dend_50 { pt3dadd( -7.8428, 60.2316, 27.054, 0.15 ) }
    dend_50 { pt3dadd( -7.47326, 60.783, 27.1796, 0.37 ) }
    dend_50 { pt3dadd( -7.28063, 61.0905, 27.2597, 0.37 ) }
    dend_50 { pt3dadd( -6.76287, 62.0019, 27.5297, 0.15 ) }
    dend_50 { pt3dadd( -6.30486, 62.8856, 27.8086, 0.15 ) }
    dend_50 { pt3dadd( -6.03512, 63.4334, 27.9986, 0.66 ) }
    dend_50 { pt3dadd( -5.64713, 64.2253, 28.2859, 1.03 ) }
    dend_50 { pt3dadd( -5.10296, 65.3052, 28.7062, 0.15 ) }
    dend_50 { pt3dadd( -4.81764, 65.8542, 28.9193, 0.15 ) }
    dend_50 { pt3dadd( -4.4827, 66.4836, 29.1559, 0.15 ) }
    dend_50 { pt3dadd( -4.12705, 67.1554, 29.3647, 0.59 ) }
    dend_50 { pt3dadd( -3.68839, 68.001, 29.5943, 0.07 ) }
    dend_50 { pt3dadd( -3.40088, 68.583, 29.7348, 0.07 ) }
    dend_50 { pt3dadd( -3.13098, 69.1525, 29.8406, 0.66 ) }
    dend_50 { pt3dadd( -3.03405, 69.3867, 29.8752, 0.66 ) }
    dend_50 { pt3dadd( -2.82283, 69.9897, 29.9761, 0.15 ) }
    dend_50 { pt3dadd( -2.65147, 70.6037, 30.0823, 0.15 ) }
    dend_50 { pt3dadd( -2.57376, 70.939, 30.1395, 0.52 ) }
    dend_50 { pt3dadd( -2.44246, 71.5455, 30.2277, 1.55 ) }
    dend_50 { pt3dadd( -2.33358, 72.0254, 30.3102, 1.77 ) }
    dend_50 { pt3dadd( -2.06239, 73.1644, 30.524, 0.74 ) }
    dend_50 { pt3dadd( -1.8243, 74.0891, 30.7334, 0.15 ) }
    dend_50 { pt3dadd( -1.67325, 74.6473, 30.8749, 0.15 ) }
    dend_50 { pt3dadd( -1.52868, 75.1903, 31.0396, 0.22 ) }
    dend_50 { pt3dadd( -1.38427, 75.8273, 31.2765, 0.22 ) }
    dend_50 { pt3dadd( -1.25745, 76.4629, 31.5524, 0.37 ) }
    dend_50 { pt3dadd( -1.13191, 77.1874, 31.9055, 0.52 ) }
    dend_50 { pt3dadd( -1.06133, 77.6368, 32.1471, 1.47 ) }
    dend_50 { pt3dadd( -0.95904, 78.2461, 32.5252, 2.06 ) }
    dend_50 { pt3dadd( -0.72837, 79.4788, 33.3399, 0.29 ) }
    dend_50 { pt3dadd( -0.621227, 80.0027, 33.688, 0.29 ) }
    dend_50 { pt3dadd( -0.430286, 80.8632, 34.2753, 0.74 ) }
    dend_50 { pt3dadd( -0.247642, 81.634, 34.7732, 0.22 ) }
    dend_50 { pt3dadd( 0.0571319, 82.7593, 35.4535, 0.29 ) }
    dend_50 { pt3dadd( 0.193869, 83.2162, 35.7033, 0.52 ) }
    dend_50 { pt3dadd( 0.294834, 83.5407, 35.8576, 0.22 ) }
    dend_50 { pt3dadd( 0.484142, 84.3235, 36.1342, 0.22 ) }
    dend_50 { pt3dadd( 0.621301, 85.0714, 36.3389, 0.22 ) }
    dend_50 { pt3dadd( 0.750064, 85.9918, 36.5317, 0.22 ) }
    dend_50 { pt3dadd( 0.785231, 86.397, 36.5946, 0.44 ) }
    dend_50 { pt3dadd( 0.821575, 87.1284, 36.7068, 1.25 ) }
    dend_50 { pt3dadd( 0.867065, 88.8074, 36.9687, 0.07 ) }
    dend_50 { pt3dadd( 0.869316, 89.7392, 37.1065, 0.07 ) }
    dend_50 { pt3dadd( 0.858638, 90.147, 37.1683, 0.22 ) }
    dend_50 { pt3dadd( 0.828272, 90.7534, 37.254, 0.96 ) }
    dend_50 { pt3dadd( 0.78511, 91.3668, 37.3431, 0.29 ) }
    dend_50 { pt3dadd( 0.699173, 92.3778, 37.4847, 0.07 ) }
    dend_50 { pt3dadd( 0.645196, 92.9806, 37.577, 0.07 ) }
    dend_50 { pt3dadd( 0.606553, 93.324, 37.6108, 0.15 ) }
    dend_50 { pt3dadd( 0.529108, 93.9399, 37.6468, 1.25 ) }
    dend_50 { pt3dadd( 0.251807, 96.0988, 37.6998, 0.15 ) }
    dend_50 { pt3dadd( 0.20655, 96.4367, 37.6997, 0.44 ) }
    dend_50 { pt3dadd( 0.113509, 97.0954, 37.6817, 0.96 ) }
    dend_50 { pt3dadd( -0.0414751, 98.2114, 37.6572, 1.18 ) }
    dend_50 { pt3dadd( -0.244168, 99.6898, 37.6319, 0.07 ) }
    dend_50 { pt3dadd( -0.312073, 100.196, 37.6228, 0.22 ) }
    dend_50 { pt3dadd( -0.396747, 100.956, 37.6175, 0.88 ) }
    dend_50 { pt3dadd( -0.45622, 101.57, 37.6268, 0.44 ) }
    dend_50 { pt3dadd( -0.510945, 102.333, 37.6553, 0.15 ) }
    dend_50 { pt3dadd( -0.547047, 103.005, 37.7064, 0.15 ) }
    dend_50 { pt3dadd( -0.571213, 103.424, 37.7358, 0.37 ) }
    dend_50 { pt3dadd( -0.653399, 104.492, 37.7958, 1.55 ) }
    dend_50 { pt3dadd( -0.804325, 106.211, 37.8734, 0.07 ) }
    dend_50 { pt3dadd( -0.883207, 106.983, 37.9001, 0.07 ) }
    dend_50 { pt3dadd( -0.947714, 107.54, 37.9071, 0.37 ) }
    dend_50 { pt3dadd( -0.999409, 107.962, 37.9177, 0.37 ) }
    dend_50 { pt3dadd( -1.13028, 108.941, 37.9435, 0.07 ) }
    dend_50 { pt3dadd( -1.1694, 109.189, 37.9501, 0.29 ) }
    dend_50 { pt3dadd( -1.28288, 109.864, 37.9823, 1.18 ) }
    dend_50 { pt3dadd( -1.53203, 111.411, 38.0439, 0.07 ) }
    dend_50 { pt3dadd( -1.66542, 112.423, 38.057, 0.07 ) }
    dend_50 { pt3dadd( -1.6998, 112.765, 38.052, 0.07 ) }
    dend_50 { pt3dadd( -1.73639, 113.196, 38.0252, 0.37 ) }
    dend_50 { pt3dadd( -1.78461, 113.803, 37.967, 0.96 ) }
    dend_50 { pt3dadd( -1.85744, 114.679, 37.8422, 0.07 ) }
    dend_50 { pt3dadd( -1.94014, 115.467, 37.6641, 0.29 ) }
    dend_50 { pt3dadd( -2.10893, 116.693, 37.2772, 0.07 ) }
    dend_50 { pt3dadd( -2.29342, 117.903, 36.8329, 0.07 ) }
    dend_50 { pt3dadd( -2.32129, 118.068, 36.7594, 0.44 ) }
    dend_50 { pt3dadd( -2.46792, 118.872, 36.285, 1.18 ) }
    dend_50 { pt3dadd( -2.64946, 119.811, 35.5427, 0.15 ) }
    dend_50 { pt3dadd( -2.75466, 120.312, 35.0187, 0.15 ) }
    dend_50 { pt3dadd( -2.81836, 120.574, 34.6438, 0.59 ) }
    dend_50 { pt3dadd( -2.88836, 120.827, 34.1721, 0.59 ) }
    dend_50 { pt3dadd( -3.06556, 121.362, 33.0423, 0.22 ) }
    dend_50 { pt3dadd( -3.15801, 121.621, 32.4092, 0.22 ) }
    dend_50 { pt3dadd( -3.22669, 121.84, 31.8726, 0.22 ) }
    dend_50 { pt3dadd( -3.27753, 122.007, 31.4721, 0.22 ) }
    dend_50 { pt3dadd( -3.39268, 122.347, 30.6853, 0.37 ) }
    dend_50 { pt3dadd( -3.50991, 122.646, 30.0341, 1.03 ) }
    dend_50 { pt3dadd( -3.66297, 123.012, 29.2872, 0.74 ) }
    dend_50 { pt3dadd( -3.80117, 123.383, 28.5171, 0.22 ) }
    dend_50 { pt3dadd( -3.91206, 123.845, 27.6003, 0.22 ) }
    dend_50 { pt3dadd( -3.93267, 123.973, 27.3539, 0.22 ) }
    dend_50 { pt3dadd( -3.97141, 124.254, 26.7949, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_50 { pt3dadd( -4.00425, 124.464, 26.3513, 0.22 ) }
    dend_50 { pt3dadd( -4.07195, 124.788, 25.6729, 0.22 ) }
    dend_50 { pt3dadd( -4.15241, 125.084, 25.035, 0.88 ) }
    dend_50 { pt3dadd( -4.3018, 125.594, 23.905, 0.15 ) }
    dend_50 { pt3dadd( -4.43518, 126.013, 22.9424, 0.15 ) }
    dend_50 { pt3dadd( -4.55861, 126.405, 22.0846, 0.15 ) }
    dend_50 { pt3dadd( -4.70893, 126.869, 21.1325, 0.74 ) }
    dend_50 { pt3dadd( -4.89299, 127.426, 20.0188, 0.44 ) }
    dend_50 { pt3dadd( -5.02974, 127.859, 19.1616, 0.44 ) }
    dend_50 { pt3dadd( -5.11554, 128.22, 18.491, 0.44 ) }
    dend_50 { pt3dadd( -5.20376, 128.611, 17.8139, 0.74 ) }
    dend_50 { pt3dadd( -5.35384, 129.141, 16.9564, 0.22 ) }
    dend_50 { pt3dadd( -5.47168, 129.439, 16.5, 0.22 ) }
    dend_50 { pt3dadd( -5.61056, 129.703, 16.1189, 0.44 ) }
    dend_50 { pt3dadd( -5.82678, 130.043, 15.6466, 0.44 ) }
    dend_50 { pt3dadd( -6.14567, 130.493, 15.0359, 0.22 ) }
    dend_50 { pt3dadd( -6.5106, 131.01, 14.4131, 0.29 ) }
    dend_50 { pt3dadd( -6.87212, 131.574, 13.8735, 0.22 ) }
    dend_50 { pt3dadd( -7.16861, 132.113, 13.4682, 0.22 ) }
    dend_50 { pt3dadd( -7.32085, 132.454, 13.2646, 0.66 ) }
    dend_50 { pt3dadd( -7.57546, 133.253, 12.9162, 0.96 ) }
    dend_50 { pt3dadd( -7.84832, 134.584, 12.5061, 0.22 ) }
    dend_50 { pt3dadd( -7.95687, 135.377, 12.3501, 0.37 ) }
    dend_50 { pt3dadd( -8.01728, 135.944, 12.3097, 0.07 ) }
    dend_50 { pt3dadd( -8.06577, 136.547, 12.3465, 0.07 ) }
    dend_50 { pt3dadd( -8.1006, 137.161, 12.4393, 0.07 ) }
    dend_50 { pt3dadd( -8.11746, 137.602, 12.548, 0.29 ) }
    dend_50 { pt3dadd( -8.13283, 138.078, 12.6979, 0.66 ) }
    dend_50 { pt3dadd( -8.15359, 138.736, 12.9283, 0.88 ) }
    dend_50 { pt3dadd( -8.18685, 139.862, 13.3443, 0.15 ) }
    dend_50 { pt3dadd( -8.19915, 140.44, 13.5499, 0.15 ) }
    dend_50 { pt3dadd( -8.17945, 140.847, 13.691, 0.22 ) }
    dend_50 { pt3dadd( -8.11887, 141.224, 13.8076, 0.22 ) }
    dend_50 { pt3dadd( -7.93358, 141.88, 13.9858, 0.22 ) }
    dend_50 { pt3dadd( -7.71976, 142.461, 14.1257, 0.22 ) }
    dend_50 { pt3dadd( -7.491, 142.991, 14.2378, 0.81 ) }
    dend_50 { pt3dadd( -6.92189, 144.25, 14.4962, 0.22 ) }
    dend_50 { pt3dadd( -6.42951, 145.241, 14.6981, 0.22 ) }
    dend_50 { pt3dadd( -5.92461, 146.177, 14.8927, 0.22 ) }
    dend_50 { pt3dadd( -5.72434, 146.523, 14.9662, 0.37 ) }
    dend_50 { pt3dadd( -5.40094, 147.04, 15.0893, 0.96 ) }
    dend_50 { pt3dadd( -4.57479, 148.294, 15.4525, 0.15 ) }
    dend_50 { pt3dadd( -4.08719, 149.006, 15.7006, 0.15 ) }
    dend_50 { pt3dadd( -3.859, 149.345, 15.8426, 0.15 ) }
    dend_50 { pt3dadd( -3.60702, 149.724, 16.0195, 0.15 ) }
    dend_50 { pt3dadd( -3.18695, 150.323, 16.3263, 0.15 ) }
    dend_50 { pt3dadd( -2.93899, 150.645, 16.5214, 0.29 ) }
    dend_50 { pt3dadd( -2.54233, 151.114, 16.8559, 0.66 ) }
    dend_50 { pt3dadd( -2.36181, 151.321, 17.0105, 0.66 ) }
    dend_50 { pt3dadd( -1.71363, 152.067, 17.5495, 0.15 ) }
    dend_50 { pt3dadd( -1.36365, 152.481, 17.824, 0.22 ) }
    dend_50 { pt3dadd( -0.665357, 153.305, 18.3649, 0.15 ) }
    dend_50 { pt3dadd( -0.239456, 153.794, 18.6678, 0.15 ) }
    dend_50 { pt3dadd( 0.337957, 154.439, 19.0625, 0.15 ) }
    dend_50 { pt3dadd( 0.667003, 154.806, 19.2734, 0.29 ) }
    dend_50 { pt3dadd( 1.27077, 155.482, 19.6369, 0.15 ) }
    dend_50 { pt3dadd( 1.61003, 155.882, 19.8261, 0.15 ) }
    dend_50 { pt3dadd( 1.94601, 156.303, 19.9795, 0.37 ) }
    dend_50 { pt3dadd( 2.48297, 157.013, 20.1964, 0.15 ) }
    dend_50 { pt3dadd( 2.82478, 157.486, 20.3551, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -193.582, -441.239, -16.836, 0.07 ) }
    dend_42 { pt3dadd( -193.21, -440.886, -16.7977, 0.07 ) }
    dend_42 { pt3dadd( -192.661, -440.314, -16.8158, 0.29 ) }
    dend_42 { pt3dadd( -192.222, -439.842, -16.8802, 0.07 ) }
    dend_42 { pt3dadd( -191.774, -439.356, -17.0274, 0.07 ) }
    dend_42 { pt3dadd( -191.269, -438.81, -17.2814, 0.15 ) }
    dend_42 { pt3dadd( -190.908, -438.415, -17.4964, 0.15 ) }
    dend_42 { pt3dadd( -190.668, -438.15, -17.6892, 0.15 ) }
    dend_42 { pt3dadd( -190.357, -437.78, -18.0416, 0.29 ) }
    dend_42 { pt3dadd( -190.002, -437.34, -18.5439, 0.07 ) }
    dend_42 { pt3dadd( -189.769, -437.042, -18.9245, 0.29 ) }
    dend_42 { pt3dadd( -189.553, -436.808, -19.2542, 0.44 ) }
    dend_42 { pt3dadd( -189.449, -436.718, -19.3976, 0.44 ) }
    dend_42 { pt3dadd( -189.024, -436.397, -19.9947, 0.15 ) }
    dend_42 { pt3dadd( -188.715, -436.161, -20.4514, 0.15 ) }
    dend_42 { pt3dadd( -188.593, -436.07, -20.6242, 0.15 ) }
    dend_42 { pt3dadd( -188.126, -435.731, -21.3068, 0.15 ) }
    dend_42 { pt3dadd( -187.924, -435.591, -21.6294, 0.37 ) }
    dend_42 { pt3dadd( -187.423, -435.236, -22.5121, 0.22 ) }
    dend_42 { pt3dadd( -187.179, -435.06, -22.9595, 0.22 ) }
    dend_42 { pt3dadd( -187.046, -434.952, -23.2161, 0.22 ) }
    dend_42 { pt3dadd( -186.765, -434.685, -23.7772, 0.15 ) }
    dend_42 { pt3dadd( -186.451, -434.365, -24.3864, 0.15 ) }
    dend_42 { pt3dadd( -186.152, -434.093, -24.8904, 0.15 ) }
    dend_42 { pt3dadd( -185.935, -433.928, -25.1807, 0.37 ) }
    dend_42 { pt3dadd( -185.538, -433.68, -25.5572, 0.44 ) }
    dend_42 { pt3dadd( -185.121, -433.419, -25.8672, 0.22 ) }
    dend_42 { pt3dadd( -184.658, -433.139, -26.1323, 0.37 ) }
    dend_42 { pt3dadd( -184.362, -432.968, -26.2571, 0.37 ) }
    dend_42 { pt3dadd( -183.707, -432.616, -26.4676, 0.22 ) }
    dend_42 { pt3dadd( -182.81, -432.161, -26.7221, 0.22 ) }
    dend_42 { pt3dadd( -181.901, -431.779, -26.9175, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -193.582, -441.239, -16.836, 0.15 ) }
    dend_41 { pt3dadd( -193.923, -442.094, -16.953, 0.15 ) }
    dend_41 { pt3dadd( -194.248, -443.075, -16.9867, 0.29 ) }
    dend_41 { pt3dadd( -194.567, -444.064, -16.9624, 0.15 ) }
    dend_41 { pt3dadd( -194.926, -444.993, -16.9187, 0.15 ) }
    dend_41 { pt3dadd( -195.243, -445.754, -16.877, 0.15 ) }
    dend_41 { pt3dadd( -195.43, -446.187, -16.8532, 0.15 ) }
    dend_41 { pt3dadd( -195.85, -447.111, -16.7638, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -196.287, -448.129, -16.6601, 0.81 ) }
    dend_41 { pt3dadd( -196.732, -449.439, -16.5318, 0.15 ) }
    dend_41 { pt3dadd( -196.993, -450.473, -16.4368, 0.22 ) }
    dend_41 { pt3dadd( -197.163, -451.528, -16.3441, 0.07 ) }
    dend_41 { pt3dadd( -197.197, -452.637, -16.2085, 0.07 ) }
    dend_41 { pt3dadd( -197.091, -453.711, -16.0078, 0.37 ) }
    dend_41 { pt3dadd( -196.686, -455.259, -15.5805, 0.15 ) }
    dend_41 { pt3dadd( -196.338, -456.143, -15.259, 0.15 ) }
    dend_41 { pt3dadd( -196.045, -456.768, -14.9903, 0.37 ) }
    dend_41 { pt3dadd( -195.293, -458.291, -14.2421, 0.15 ) }
    dend_41 { pt3dadd( -194.866, -459.215, -13.7634, 0.15 ) }
    dend_41 { pt3dadd( -194.607, -459.929, -13.3907, 0.15 ) }
    dend_41 { pt3dadd( -194.535, -460.299, -13.2135, 0.15 ) }
    dend_41 { pt3dadd( -194.472, -461.246, -12.8299, 0.37 ) }
    dend_41 { pt3dadd( -194.523, -462.397, -12.4743, 0.07 ) }
    dend_41 { pt3dadd( -194.688, -463.306, -12.3031, 0.07 ) }
    dend_41 { pt3dadd( -194.905, -464.098, -12.2077, 0.22 ) }
    dend_41 { pt3dadd( -195.313, -465.37, -12.071, 0.07 ) }
    dend_41 { pt3dadd( -195.49, -465.875, -12.0278, 0.07 ) }
    dend_41 { pt3dadd( -195.876, -466.832, -11.9615, 0.52 ) }
    dend_41 { pt3dadd( -196.622, -468.447, -11.9116, 0.07 ) }
    dend_41 { pt3dadd( -196.957, -469.085, -11.8963, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.57044, -18.4993, -23.1468, 0.44 ) }
    dend_20 { pt3dadd( 7.74345, -18.7979, -23.7373, 0.44 ) }
    dend_20 { pt3dadd( 8.34047, -19.8221, -26.087, 0.44 ) }
    dend_20 { pt3dadd( 8.66411, -20.316, -27.4469, 0.44 ) }
    dend_20 { pt3dadd( 9.13905, -20.9018, -29.3073, 0.44 ) }
    dend_20 { pt3dadd( 9.36244, -21.1452, -30.1617, 0.44 ) }
    dend_20 { pt3dadd( 9.5728, -21.3888, -31.0228, 0.44 ) }
    dend_20 { pt3dadd( 9.71695, -21.5962, -31.7638, 0.44 ) }
    dend_20 { pt3dadd( 9.849, -21.8151, -32.5869, 0.44 ) }
    dend_20 { pt3dadd( 10.0269, -22.1238, -33.764, 0.44 ) }
    dend_20 { pt3dadd( 10.3001, -22.5518, -35.3587, 0.44 ) }
    dend_20 { pt3dadd( 10.5799, -22.9281, -36.6354, 0.44 ) }
    dend_20 { pt3dadd( 11.0141, -23.4747, -38.3447, 0.44 ) }
    dend_20 { pt3dadd( 11.5916, -24.1593, -40.3694, 0.44 ) }
    dend_20 { pt3dadd( 11.8106, -24.3804, -41.0204, 0.29 ) }
    dend_20 { pt3dadd( 12.4457, -24.9113, -42.7114, 0.22 ) }
    dend_20 { pt3dadd( 12.949, -25.2466, -43.8717, 0.22 ) }
    dend_20 { pt3dadd( 13.3518, -25.4659, -44.7137, 0.22 ) }
    dend_20 { pt3dadd( 13.5832, -25.584, -45.1659, 0.22 ) }
    dend_20 { pt3dadd( 13.9896, -25.8341, -45.9331, 0.29 ) }
    dend_20 { pt3dadd( 14.6552, -26.2665, -47.1499, 0.29 ) }
    dend_20 { pt3dadd( 15.0754, -26.5479, -47.8857, 0.29 ) }
    dend_20 { pt3dadd( 15.5431, -26.7886, -48.6953, 0.29 ) }
    dend_20 { pt3dadd( 15.8102, -26.8638, -49.1026, 0.29 ) }
    dend_20 { pt3dadd( 16.273, -26.9427, -49.6908, 0.29 ) }
    dend_20 { pt3dadd( 17.0461, -27.0792, -50.5368, 0.29 ) }
    dend_20 { pt3dadd( 18.0775, -27.2864, -51.4492, 0.22 ) }
    dend_20 { pt3dadd( 19.5265, -27.6387, -52.6052, 0.37 ) }
    dend_20 { pt3dadd( 20.3313, -27.8785, -53.2437, 0.37 ) }
    dend_20 { pt3dadd( 20.9628, -28.1151, -53.8272, 0.22 ) }
    dend_20 { pt3dadd( 21.8577, -28.5524, -54.8191, 0.22 ) }
    dend_20 { pt3dadd( 22.342, -28.8906, -55.4698, 0.22 ) }
    dend_20 { pt3dadd( 22.7637, -29.3056, -56.1373, 0.29 ) }
    dend_20 { pt3dadd( 23.2266, -29.9295, -57.0363, 0.29 ) }
    dend_20 { pt3dadd( 23.5857, -30.6746, -58.1424, 0.29 ) }
    dend_20 { pt3dadd( 23.6779, -31.1253, -58.8721, 0.29 ) }
    dend_20 { pt3dadd( 23.677, -31.4937, -59.5274, 0.29 ) }
    dend_20 { pt3dadd( 23.6304, -31.79, -60.0827, 0.22 ) }
    dend_20 { pt3dadd( 23.4773, -32.323, -61.1065, 0.22 ) }
    dend_20 { pt3dadd( 23.2011, -33.1091, -62.4962, 0.22 ) }
    dend_20 { pt3dadd( 23.1332, -33.4659, -63.1034, 0.22 ) }
    dend_20 { pt3dadd( 23.2053, -33.9562, -63.8992, 0.22 ) }
    dend_20 { pt3dadd( 23.4252, -34.445, -64.6744, 0.29 ) }
    dend_20 { pt3dadd( 23.6065, -34.7474, -65.1288, 0.29 ) }
    dend_20 { pt3dadd( 23.7714, -35.0193, -65.4873, 0.29 ) }
    dend_20 { pt3dadd( 24.1109, -35.7831, -66.3481, 0.29 ) }
    dend_20 { pt3dadd( 24.3674, -36.724, -67.3236, 0.22 ) }
    dend_20 { pt3dadd( 24.4908, -37.5505, -68.139, 0.22 ) }
    dend_20 { pt3dadd( 24.5727, -38.3503, -68.9557, 0.22 ) }
    dend_20 { pt3dadd( 24.679, -39.0171, -69.7208, 0.22 ) }
    dend_20 { pt3dadd( 24.8082, -40.0624, -70.973, 0.22 ) }
    dend_20 { pt3dadd( 24.8255, -40.4452, -71.4411, 0.22 ) }
    dend_20 { pt3dadd( 24.8223, -40.8697, -72.0469, 0.22 ) }
    dend_20 { pt3dadd( 24.9234, -41.4751, -73.1256, 0.44 ) }
    dend_20 { pt3dadd( 25.48, -41.883, -74.5594, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.57044, -18.4993, -23.1468, 0.52 ) }
    dend_15 { pt3dadd( 8.46723, -19.1589, -23.5286, 0.52 ) }
    dend_15 { pt3dadd( 9.1152, -19.7487, -23.8889, 0.52 ) }
    dend_15 { pt3dadd( 9.59621, -20.2847, -24.2251, 0.59 ) }
    dend_15 { pt3dadd( 9.86236, -20.6447, -24.4389, 0.96 ) }
    dend_15 { pt3dadd( 10.0526, -20.9713, -24.6159, 0.96 ) }
    dend_15 { pt3dadd( 10.466, -21.9101, -25.0603, 0.81 ) }
    dend_15 { pt3dadd( 10.6496, -22.6963, -25.3739, 0.52 ) }
    dend_15 { pt3dadd( 10.7549, -23.4962, -25.6402, 0.52 ) }
    dend_15 { pt3dadd( 10.8159, -24.1614, -25.861, 0.74 ) }
    dend_15 { pt3dadd( 10.8995, -25.0083, -26.1589, 0.74 ) }
    dend_15 { pt3dadd( 11.0165, -25.9205, -26.5348, 0.66 ) }
    dend_15 { pt3dadd( 11.1201, -26.4809, -26.7986, 0.52 ) }
    dend_15 { pt3dadd( 11.3165, -27.1017, -27.1329, 0.37 ) }
    dend_15 { pt3dadd( 11.5854, -27.697, -27.5411, 0.66 ) }
    dend_15 { pt3dadd( 11.8657, -28.2191, -27.9619, 0.88 ) }
    dend_15 { pt3dadd( 12.152, -28.735, -28.4261, 0.88 ) }
    dend_15 { pt3dadd( 12.3324, -29.1151, -28.7887, 0.66 ) }
    dend_15 { pt3dadd( 12.5148, -29.6622, -29.2905, 0.52 ) }
    dend_15 { pt3dadd( 12.6433, -30.2496, -29.7729, 0.52 ) }
    dend_15 { pt3dadd( 12.7479, -30.8633, -30.2066, 0.59 ) }
    dend_15 { pt3dadd( 12.8267, -31.4518, -30.5976, 0.59 ) }
    dend_15 { pt3dadd( 12.9007, -32.1431, -31.0646, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( 12.9453, -32.6743, -31.4533, 0.59 ) }
    dend_15 { pt3dadd( 12.9661, -33.1004, -31.7675, 0.66 ) }
    dend_15 { pt3dadd( 12.9792, -33.7415, -32.2098, 0.59 ) }
    dend_15 { pt3dadd( 12.9888, -34.4041, -32.6407, 0.52 ) }
    dend_15 { pt3dadd( 12.9991, -35.1623, -33.0741, 0.81 ) }
    dend_15 { pt3dadd( 12.9977, -35.9561, -33.4458, 1.03 ) }
    dend_15 { pt3dadd( 12.9628, -36.8037, -33.7449, 0.59 ) }
    dend_15 { pt3dadd( 12.8964, -37.6809, -33.943, 0.44 ) }
    dend_15 { pt3dadd( 12.8532, -38.1949, -33.9851, 0.59 ) }
    dend_15 { pt3dadd( 12.8073, -38.8531, -33.9704, 0.59 ) }
    dend_15 { pt3dadd( 12.7811, -39.465, -33.8887, 0.52 ) }
    dend_15 { pt3dadd( 12.7798, -40.2394, -33.7037, 0.52 ) }
    dend_15 { pt3dadd( 12.8183, -40.844, -33.51, 0.66 ) }
    dend_15 { pt3dadd( 12.8608, -41.2272, -33.352, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.36485, -51.2455, -26.4016, 0.59 ) }
    dend_11 { pt3dadd( -7.33514, -51.5134, -26.1214, 0.59 ) }
    dend_11 { pt3dadd( -7.23135, -52.1914, -25.4672, 0.52 ) }
    dend_11 { pt3dadd( -7.1761, -52.5655, -25.1488, 0.52 ) }
    dend_11 { pt3dadd( -7.12914, -52.9076, -24.894, 0.52 ) }
    dend_11 { pt3dadd( -7.07172, -53.2947, -24.6346, 0.52 ) }
    dend_11 { pt3dadd( -7.00621, -53.7981, -24.3329, 0.66 ) }
    dend_11 { pt3dadd( -6.94894, -54.2252, -24.1365, 0.81 ) }
    dend_11 { pt3dadd( -6.875, -54.8338, -23.9508, 0.52 ) }
    dend_11 { pt3dadd( -6.82, -55.2342, -23.8683, 0.52 ) }
    dend_11 { pt3dadd( -6.74085, -55.7189, -23.8173, 0.74 ) }
    dend_11 { pt3dadd( -6.65017, -56.1934, -23.82, 0.44 ) }
    dend_11 { pt3dadd( -6.54638, -56.7169, -23.8887, 0.59 ) }
    dend_11 { pt3dadd( -6.4549, -57.1458, -23.9706, 0.81 ) }
    dend_11 { pt3dadd( -6.35558, -57.5729, -24.0519, 0.66 ) }
    dend_11 { pt3dadd( -6.22761, -58.1466, -24.152, 0.59 ) }
    dend_11 { pt3dadd( -6.12293, -58.7041, -24.2429, 0.52 ) }
    dend_11 { pt3dadd( -6.00962, -59.5032, -24.3487, 0.44 ) }
    dend_11 { pt3dadd( -5.96553, -60.1378, -24.3976, 0.52 ) }
    dend_11 { pt3dadd( -5.96906, -60.7076, -24.4105, 0.44 ) }
    dend_11 { pt3dadd( -5.99509, -61.0994, -24.4052, 0.44 ) }
    dend_11 { pt3dadd( -6.03805, -61.5603, -24.3913, 0.37 ) }
    dend_11 { pt3dadd( -6.06818, -62.1123, -24.3721, 0.22 ) }
    dend_11 { pt3dadd( -6.05939, -62.5354, -24.3675, 0.59 ) }
    dend_11 { pt3dadd( -6.01798, -62.9022, -24.3857, 0.88 ) }
    dend_11 { pt3dadd( -5.90111, -63.4866, -24.4417, 0.59 ) }
    dend_11 { pt3dadd( -5.76987, -63.9791, -24.4899, 0.44 ) }
    dend_11 { pt3dadd( -5.60995, -64.4989, -24.5263, 0.59 ) }
    dend_11 { pt3dadd( -5.48129, -64.8729, -24.5346, 0.52 ) }
    dend_11 { pt3dadd( -5.31792, -65.3157, -24.5315, 0.29 ) }
    dend_11 { pt3dadd( -5.13521, -65.7657, -24.5038, 0.29 ) }
    dend_11 { pt3dadd( -4.85324, -66.4181, -24.4064, 0.37 ) }
    dend_11 { pt3dadd( -4.59224, -67.0115, -24.2553, 0.29 ) }
    dend_11 { pt3dadd( -4.40876, -67.427, -24.106, 0.29 ) }
    dend_11 { pt3dadd( -4.2859, -67.6892, -23.9894, 0.52 ) }
    dend_11 { pt3dadd( -4.12382, -68.0126, -23.8257, 0.37 ) }
    dend_11 { pt3dadd( -3.88697, -68.4737, -23.5857, 0.29 ) }
    dend_11 { pt3dadd( -3.63891, -69.018, -23.3058, 0.37 ) }
    dend_11 { pt3dadd( -3.46194, -69.5118, -23.0681, 0.66 ) }
    dend_11 { pt3dadd( -3.33551, -69.9687, -22.8639, 1.03 ) }
    dend_11 { pt3dadd( -3.16529, -70.6861, -22.553, 0.81 ) }
    dend_11 { pt3dadd( -3.04292, -71.2551, -22.3195, 1.25 ) }
    dend_11 { pt3dadd( -2.89546, -71.9391, -22.0715, 0.96 ) }
    dend_11 { pt3dadd( -2.75293, -72.6103, -21.8614, 0.37 ) }
    dend_11 { pt3dadd( -2.62697, -73.2792, -21.6893, 0.44 ) }
    dend_11 { pt3dadd( -2.54453, -73.8307, -21.5715, 0.44 ) }
    dend_11 { pt3dadd( -2.50047, -74.2669, -21.5033, 0.59 ) }
    dend_11 { pt3dadd( -2.46978, -74.9334, -21.4401, 0.96 ) }
    dend_11 { pt3dadd( -2.49318, -75.382, -21.4428, 0.37 ) }
    dend_11 { pt3dadd( -2.59706, -75.9151, -21.4972, 0.22 ) }
    dend_11 { pt3dadd( -2.71083, -76.2886, -21.559, 0.22 ) }
    dend_11 { pt3dadd( -2.82188, -76.6058, -21.6235, 0.66 ) }
    dend_11 { pt3dadd( -2.9743, -77.061, -21.7268, 0.74 ) }
    dend_11 { pt3dadd( -3.1338, -77.6242, -21.8589, 0.37 ) }
    dend_11 { pt3dadd( -3.22751, -78.1976, -21.9953, 0.44 ) }
    dend_11 { pt3dadd( -3.23205, -78.6618, -22.103, 0.37 ) }
    dend_11 { pt3dadd( -3.17763, -79.0928, -22.2078, 0.22 ) }
    dend_11 { pt3dadd( -3.07646, -79.4668, -22.3087, 0.22 ) }
    dend_11 { pt3dadd( -2.98094, -79.699, -22.3774, 0.59 ) }
    dend_11 { pt3dadd( -2.82487, -80.0075, -22.4702, 0.88 ) }
    dend_11 { pt3dadd( -2.61637, -80.4313, -22.5839, 0.29 ) }
    dend_11 { pt3dadd( -2.52394, -80.656, -22.6334, 0.22 ) }
    dend_11 { pt3dadd( -2.39612, -81.0787, -22.6928, 0.52 ) }
    dend_11 { pt3dadd( -2.2807, -81.6329, -22.7344, 0.22 ) }
    dend_11 { pt3dadd( -2.23881, -81.9089, -22.745, 0.22 ) }
    dend_11 { pt3dadd( -2.16861, -82.4257, -22.7601, 0.29 ) }
    dend_11 { pt3dadd( -2.11717, -82.7102, -22.7672, 0.29 ) }
    dend_11 { pt3dadd( -2.01469, -83.1456, -22.7671, 0.22 ) }
    dend_11 { pt3dadd( -1.95738, -83.3468, -22.7632, 0.74 ) }
    dend_11 { pt3dadd( -1.85779, -83.648, -22.7591, 0.96 ) }
    dend_11 { pt3dadd( -1.68927, -84.1311, -22.7462, 0.59 ) }
    dend_11 { pt3dadd( -1.47467, -84.7086, -22.7121, 0.15 ) }
    dend_11 { pt3dadd( -1.33778, -85.0846, -22.6621, 0.15 ) }
    dend_11 { pt3dadd( -1.26859, -85.3011, -22.6219, 0.59 ) }
    dend_11 { pt3dadd( -1.12122, -85.8657, -22.4842, 0.96 ) }
    dend_11 { pt3dadd( -0.997255, -86.5205, -22.2877, 0.22 ) }
    dend_11 { pt3dadd( -0.959599, -86.9027, -22.151, 0.15 ) }
    dend_11 { pt3dadd( -0.951739, -87.4958, -21.9166, 0.15 ) }
    dend_11 { pt3dadd( -0.952951, -87.734, -21.8139, 0.66 ) }
    dend_11 { pt3dadd( -0.95291, -87.9301, -21.7168, 0.96 ) }
    dend_11 { pt3dadd( -0.953311, -88.1593, -21.5948, 1.11 ) }
    dend_11 { pt3dadd( -0.972848, -88.6345, -21.3541, 0.52 ) }
    dend_11 { pt3dadd( -0.999671, -89.1316, -21.1127, 0.15 ) }
    dend_11 { pt3dadd( -1.00813, -89.6218, -20.8762, 0.15 ) }
    dend_11 { pt3dadd( -0.997485, -89.897, -20.7368, 0.15 ) }
    dend_11 { pt3dadd( -0.976392, -90.1529, -20.6071, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -0.918921, -90.6583, -20.3526, 0.96 ) }
    dend_11 { pt3dadd( -0.824736, -91.3729, -20.0077, 0.22 ) }
    dend_11 { pt3dadd( -0.736508, -91.898, -19.7511, 0.22 ) }
    dend_11 { pt3dadd( -0.654639, -92.286, -19.5495, 0.22 ) }
    dend_11 { pt3dadd( -0.575604, -92.5789, -19.3876, 0.59 ) }
    dend_11 { pt3dadd( -0.421024, -92.9993, -19.1232, 1.11 ) }
    dend_11 { pt3dadd( -0.250744, -93.3269, -18.8837, 0.44 ) }
    dend_11 { pt3dadd( 0.0449515, -93.7583, -18.5079, 0.22 ) }
    dend_11 { pt3dadd( 0.271095, -94.0346, -18.2375, 0.22 ) }
    dend_11 { pt3dadd( 0.344354, -94.1109, -18.158, 0.22 ) }
    dend_11 { pt3dadd( 0.493198, -94.2558, -17.9963, 0.22 ) }
    dend_11 { pt3dadd( 0.72162, -94.4924, -17.7295, 0.22 ) }
    dend_11 { pt3dadd( 0.885352, -94.6967, -17.4977, 0.22 ) }
    dend_11 { pt3dadd( 0.975923, -94.8497, -17.3154, 0.44 ) }
    dend_11 { pt3dadd( 1.10366, -95.1297, -16.9771, 0.81 ) }
    dend_11 { pt3dadd( 1.26022, -95.5283, -16.5005, 0.81 ) }
    dend_11 { pt3dadd( 1.39142, -95.9007, -16.0684, 0.66 ) }
    dend_11 { pt3dadd( 1.50018, -96.2204, -15.7098, 0.66 ) }
    dend_11 { pt3dadd( 1.71441, -96.8849, -14.9768, 0.22 ) }
    dend_11 { pt3dadd( 1.83706, -97.2857, -14.5332, 0.22 ) }
    dend_11 { pt3dadd( 1.90131, -97.5095, -14.2886, 0.66 ) }
    dend_11 { pt3dadd( 1.9639, -97.7648, -14.0349, 0.74 ) }
    dend_11 { pt3dadd( 2.08767, -98.3616, -13.5306, 0.22 ) }
    dend_11 { pt3dadd( 2.17943, -98.8719, -13.168, 0.15 ) }
    dend_11 { pt3dadd( 2.25659, -99.3914, -12.8579, 0.15 ) }
    dend_11 { pt3dadd( 2.33109, -99.9482, -12.5498, 0.15 ) }
    dend_11 { pt3dadd( 2.38277, -100.435, -12.3051, 1.18 ) }
    dend_11 { pt3dadd( 2.42806, -101.021, -12.036, 0.07 ) }
    dend_11 { pt3dadd( 2.44822, -101.58, -11.8446, 0.07 ) }
    dend_11 { pt3dadd( 2.44954, -101.952, -11.7597, 0.07 ) }
    dend_11 { pt3dadd( 2.43938, -102.166, -11.7161, 0.07 ) }
    dend_11 { pt3dadd( 2.40288, -102.581, -11.6047, 0.96 ) }
    dend_11 { pt3dadd( 2.3111, -103.351, -11.3335, 0.07 ) }
    dend_11 { pt3dadd( 2.21994, -103.944, -11.1085, 0.07 ) }
    dend_11 { pt3dadd( 2.15435, -104.325, -10.9569, 0.66 ) }
    dend_11 { pt3dadd( 1.93207, -105.539, -10.4559, 0.07 ) }
    dend_11 { pt3dadd( 1.82448, -106.173, -10.1804, 0.07 ) }
    dend_11 { pt3dadd( 1.73099, -106.783, -9.90129, 0.07 ) }
    dend_11 { pt3dadd( 1.66161, -107.311, -9.62649, 0.07 ) }
    dend_11 { pt3dadd( 1.6089, -107.861, -9.28314, 0.07 ) }
    dend_11 { pt3dadd( 1.57863, -108.223, -9.03729, 0.07 ) }
    dend_11 { pt3dadd( 1.53493, -108.745, -8.64556, 0.07 ) }
    dend_11 { pt3dadd( 1.47126, -109.357, -8.14659, 0.15 ) }
    dend_11 { pt3dadd( 1.36458, -110.363, -7.2449, 0.07 ) }
    dend_11 { pt3dadd( 1.27967, -111.087, -6.53611, 0.07 ) }
    dend_11 { pt3dadd( 1.23263, -111.455, -6.15522, 0.07 ) }
    dend_11 { pt3dadd( 1.16934, -111.935, -5.61774, 0.07 ) }
    dend_11 { pt3dadd( 1.12809, -112.167, -5.33521, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.36485, -51.2455, -26.4016, 0.66 ) }
    dend_4 { pt3dadd( -7.43601, -52.2352, -27.0174, 0.66 ) }
    dend_4 { pt3dadd( -7.51623, -53.3213, -27.5777, 0.66 ) }
    dend_4 { pt3dadd( -7.54575, -54.0956, -27.9244, 0.66 ) }
    dend_4 { pt3dadd( -7.54892, -54.6666, -28.1599, 0.66 ) }
    dend_4 { pt3dadd( -7.51713, -55.8045, -28.6041, 0.59 ) }
    dend_4 { pt3dadd( -7.43054, -56.8353, -28.9667, 0.66 ) }
    dend_4 { pt3dadd( -7.28982, -57.6789, -29.1869, 0.88 ) }
    dend_4 { pt3dadd( -6.98806, -58.6858, -29.3399, 0.59 ) }
    dend_4 { pt3dadd( -6.48019, -59.7741, -29.3696, 0.59 ) }
    dend_4 { pt3dadd( -6.06131, -60.4103, -29.3074, 0.59 ) }
    dend_4 { pt3dadd( -5.31541, -61.281, -29.1006, 0.81 ) }
    dend_4 { pt3dadd( -4.60011, -62.0484, -28.8352, 0.81 ) }
    dend_4 { pt3dadd( -3.83598, -62.8689, -28.5064, 0.88 ) }
    dend_4 { pt3dadd( -2.92926, -63.9177, -28.0482, 0.88 ) }
    dend_4 { pt3dadd( -2.18643, -64.9239, -27.6251, 0.74 ) }
    dend_4 { pt3dadd( -1.55953, -66.0779, -27.2358, 0.74 ) }
    dend_4 { pt3dadd( -1.12225, -67.4, -26.9588, 0.74 ) }
    dend_4 { pt3dadd( -0.992072, -68.1682, -26.8641, 0.81 ) }
    dend_4 { pt3dadd( -0.927298, -69.1474, -26.8155, 0.81 ) }
    dend_4 { pt3dadd( -0.916485, -70.4641, -26.8527, 0.74 ) }
    dend_4 { pt3dadd( -0.936271, -71.8123, -27.0306, 0.74 ) }
    dend_4 { pt3dadd( -0.921321, -72.9879, -27.2974, 0.74 ) }
    dend_4 { pt3dadd( -0.843584, -73.8948, -27.5704, 0.81 ) }
    dend_4 { pt3dadd( -0.702463, -74.6897, -27.8342, 0.81 ) }
    dend_4 { pt3dadd( -0.348784, -75.9435, -28.2811, 0.59 ) }
    dend_4 { pt3dadd( 0.22673, -77.409, -28.8014, 0.81 ) }
    dend_4 { pt3dadd( 0.710024, -78.3844, -29.1405, 0.66 ) }
    dend_4 { pt3dadd( 1.35309, -79.549, -29.5245, 0.59 ) }
    dend_4 { pt3dadd( 1.83002, -80.4039, -29.8126, 0.59 ) }
    dend_4 { pt3dadd( 2.18784, -81.0488, -30.0108, 0.52 ) }
    dend_4 { pt3dadd( 2.74134, -82.1006, -30.3129, 0.88 ) }
    dend_4 { pt3dadd( 3.20537, -83.1203, -30.5904, 0.88 ) }
    dend_4 { pt3dadd( 3.65653, -84.3621, -30.9731, 0.81 ) }
    dend_4 { pt3dadd( 4.00005, -85.6215, -31.4008, 0.81 ) }
    dend_4 { pt3dadd( 4.1245, -86.2614, -31.6289, 0.88 ) }
    dend_4 { pt3dadd( 4.29149, -87.5776, -32.1084, 0.81 ) }
    dend_4 { pt3dadd( 4.38187, -88.7816, -32.5227, 0.81 ) }
    dend_4 { pt3dadd( 4.41774, -89.7463, -32.8025, 0.96 ) }
    dend_4 { pt3dadd( 4.43536, -91.0482, -33.0723, 0.74 ) }
    dend_4 { pt3dadd( 4.42736, -91.8341, -33.1546, 0.74 ) }
    dend_4 { pt3dadd( 4.38751, -92.9326, -33.1581, 0.44 ) }
    dend_4 { pt3dadd( 4.35122, -93.8101, -33.0567, 0.66 ) }
    dend_4 { pt3dadd( 4.28178, -94.8778, -32.8557, 0.59 ) }
    dend_4 { pt3dadd( 4.15887, -95.7686, -32.6578, 0.59 ) }
    dend_4 { pt3dadd( 3.96486, -96.5588, -32.4416, 0.96 ) }
    dend_4 { pt3dadd( 3.51038, -97.8408, -32.0334, 0.52 ) }
    dend_4 { pt3dadd( 3.06414, -98.8843, -31.6926, 0.52 ) }
    dend_4 { pt3dadd( 2.74874, -99.5778, -31.5101, 0.52 ) }
    dend_4 { pt3dadd( 2.33044, -100.541, -31.309, 0.52 ) }
    dend_4 { pt3dadd( 1.9494, -101.576, -31.1791, 0.59 ) }
    dend_4 { pt3dadd( 1.60763, -102.907, -31.1192, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( 1.47357, -103.973, -31.1697, 0.66 ) }
    dend_4 { pt3dadd( 1.45481, -105.234, -31.3312, 0.74 ) }
    dend_4 { pt3dadd( 1.51759, -106.2, -31.5044, 1.03 ) }
    dend_4 { pt3dadd( 1.64863, -107.236, -31.7635, 1.03 ) }
    dend_4 { pt3dadd( 1.85297, -108.455, -32.1412, 0.96 ) }
    dend_4 { pt3dadd( 2.06048, -109.441, -32.5141, 0.66 ) }
    dend_4 { pt3dadd( 2.32989, -110.575, -32.963, 0.52 ) }
    dend_4 { pt3dadd( 2.63992, -111.781, -33.4848, 0.59 ) }
    dend_4 { pt3dadd( 2.90708, -112.809, -33.9956, 0.44 ) }
    dend_4 { pt3dadd( 3.07646, -113.462, -34.3639, 0.88 ) }
    dend_4 { pt3dadd( 3.34344, -114.483, -35.0331, 0.59 ) }
    dend_4 { pt3dadd( 3.5808, -115.289, -35.6394, 0.59 ) }
    dend_4 { pt3dadd( 3.89143, -116.184, -36.4218, 0.66 ) }
    dend_4 { pt3dadd( 4.05628, -116.703, -36.9177, 0.66 ) }
    dend_4 { pt3dadd( 4.17511, -117.237, -37.4208, 0.96 ) }
    dend_4 { pt3dadd( 4.2463, -117.874, -37.9787, 0.96 ) }
    dend_4 { pt3dadd( 4.25907, -118.878, -38.7133, 0.44 ) }
    dend_4 { pt3dadd( 4.21076, -119.758, -39.2349, 0.44 ) }
    dend_4 { pt3dadd( 4.11199, -120.855, -39.7261, 0.44 ) }
    dend_4 { pt3dadd( 4.03245, -121.678, -39.9906, 0.88 ) }
    dend_4 { pt3dadd( 3.91148, -122.989, -40.2496, 0.66 ) }
    dend_4 { pt3dadd( 3.81355, -124.356, -40.3737, 0.52 ) }
    dend_4 { pt3dadd( 3.80601, -125.504, -40.3881, 0.74 ) }
    dend_4 { pt3dadd( 3.89034, -126.261, -40.3464, 0.74 ) }
    dend_4 { pt3dadd( 4.10087, -127.049, -40.2563, 0.74 ) }
    dend_4 { pt3dadd( 4.48921, -127.955, -40.0903, 0.59 ) }
    dend_4 { pt3dadd( 4.87162, -128.611, -39.9377, 0.81 ) }
    dend_4 { pt3dadd( 5.66463, -129.818, -39.6379, 0.88 ) }
    dend_4 { pt3dadd( 6.39026, -130.962, -39.3702, 0.59 ) }
    dend_4 { pt3dadd( 6.91352, -131.914, -39.1769, 0.66 ) }
    dend_4 { pt3dadd( 7.43914, -133.113, -38.985, 0.66 ) }
    dend_4 { pt3dadd( 7.59576, -133.624, -38.9262, 0.66 ) }
    dend_4 { pt3dadd( 7.82514, -134.829, -38.8459, 0.52 ) }
    dend_4 { pt3dadd( 7.97129, -136.179, -38.8312, 0.52 ) }
    dend_4 { pt3dadd( 8.10125, -137.437, -38.9156, 0.74 ) }
    dend_4 { pt3dadd( 8.22606, -138.281, -39.0498, 0.96 ) }
    dend_4 { pt3dadd( 8.5221, -139.552, -39.3502, 1.18 ) }
    dend_4 { pt3dadd( 8.87769, -140.602, -39.6392, 0.66 ) }
    dend_4 { pt3dadd( 9.2007, -141.349, -39.8716, 0.66 ) }
    dend_4 { pt3dadd( 9.73918, -142.538, -40.2586, 0.59 ) }
    dend_4 { pt3dadd( 10.222, -143.753, -40.6563, 0.81 ) }
    dend_4 { pt3dadd( 10.6035, -145.077, -41.0822, 0.66 ) }
    dend_4 { pt3dadd( 10.8042, -146.384, -41.4741, 0.66 ) }
    dend_4 { pt3dadd( 10.8142, -147.373, -41.7411, 0.66 ) }
    dend_4 { pt3dadd( 10.6638, -148.65, -42.0439, 0.59 ) }
    dend_4 { pt3dadd( 10.3309, -149.973, -42.306, 0.52 ) }
    dend_4 { pt3dadd( 9.90128, -151.279, -42.5165, 0.44 ) }
    dend_4 { pt3dadd( 9.64543, -152.025, -42.6156, 0.44 ) }
    dend_4 { pt3dadd( 9.46969, -152.619, -42.6843, 0.44 ) }
    dend_4 { pt3dadd( 9.37614, -153.09, -42.7362, 0.44 ) }
    dend_4 { pt3dadd( 9.28957, -154.063, -42.8169, 0.44 ) }
    dend_4 { pt3dadd( 9.27824, -155.395, -42.9023, 0.52 ) }
    dend_4 { pt3dadd( 9.33818, -156.81, -42.9582, 0.52 ) }
    dend_4 { pt3dadd( 9.40375, -157.942, -42.9938, 0.59 ) }
    dend_4 { pt3dadd( 9.45627, -158.931, -42.9993, 0.44 ) }
    dend_4 { pt3dadd( 9.48909, -159.833, -42.9724, 0.44 ) }
    dend_4 { pt3dadd( 9.51623, -161.103, -42.8729, 0.66 ) }
    dend_4 { pt3dadd( 9.51527, -162.108, -42.7385, 0.66 ) }
    dend_4 { pt3dadd( 9.51716, -163.193, -42.5375, 0.74 ) }
    dend_4 { pt3dadd( 9.58037, -164.61, -42.1943, 0.52 ) }
    dend_4 { pt3dadd( 9.70636, -165.591, -41.8981, 0.52 ) }
    dend_4 { pt3dadd( 9.96994, -166.598, -41.5494, 0.66 ) }
    dend_4 { pt3dadd( 10.3732, -167.544, -41.2116, 0.59 ) }
    dend_4 { pt3dadd( 10.8469, -168.336, -40.9792, 0.44 ) }
    dend_4 { pt3dadd( 11.4463, -169.131, -40.8339, 0.44 ) }
    dend_4 { pt3dadd( 12.1854, -170.029, -40.7956, 0.44 ) }
    dend_4 { pt3dadd( 12.8899, -170.901, -40.8361, 0.52 ) }
    dend_4 { pt3dadd( 13.7086, -172.059, -40.9639, 0.88 ) }
    dend_4 { pt3dadd( 14.1957, -172.998, -41.084, 0.96 ) }
    dend_4 { pt3dadd( 14.5068, -174.032, -41.1852, 0.74 ) }
    dend_4 { pt3dadd( 14.6742, -175.223, -41.2386, 0.44 ) }
    dend_4 { pt3dadd( 14.6938, -175.896, -41.2395, 0.74 ) }
    dend_4 { pt3dadd( 14.6822, -176.734, -41.1826, 1.03 ) }
    dend_4 { pt3dadd( 14.6792, -177.785, -41.0338, 0.44 ) }
    dend_4 { pt3dadd( 14.7387, -178.811, -40.8866, 0.37 ) }
    dend_4 { pt3dadd( 14.8853, -179.471, -40.8081, 0.37 ) }
    dend_4 { pt3dadd( 15.1206, -180.02, -40.7811, 0.74 ) }
    dend_4 { pt3dadd( 15.6104, -180.859, -40.7505, 1.11 ) }
    dend_4 { pt3dadd( 16.099, -181.553, -40.7209, 0.74 ) }
    dend_4 { pt3dadd( 16.7956, -182.477, -40.6744, 0.59 ) }
    dend_4 { pt3dadd( 17.6729, -183.715, -40.5759, 0.52 ) }
    dend_4 { pt3dadd( 18.1886, -184.584, -40.4531, 0.29 ) }
    dend_4 { pt3dadd( 18.5998, -185.421, -40.2818, 0.29 ) }
    dend_4 { pt3dadd( 18.8293, -186.01, -40.1453, 0.81 ) }
    dend_4 { pt3dadd( 19.1235, -186.907, -39.9657, 1.11 ) }
    dend_4 { pt3dadd( 19.5011, -188.256, -39.7888, 0.52 ) }
    dend_4 { pt3dadd( 19.8415, -189.5, -39.7511, 0.44 ) }
    dend_4 { pt3dadd( 20.116, -190.336, -39.7961, 0.88 ) }
    dend_4 { pt3dadd( 20.5219, -191.313, -39.9554, 0.88 ) }
    dend_4 { pt3dadd( 21.1414, -192.47, -40.2562, 0.66 ) }
    dend_4 { pt3dadd( 21.7161, -193.297, -40.5391, 0.37 ) }
    dend_4 { pt3dadd( 22.4091, -194.107, -40.8816, 0.29 ) }
    dend_4 { pt3dadd( 22.8819, -194.616, -41.1157, 0.29 ) }
    dend_4 { pt3dadd( 23.2088, -194.974, -41.265, 0.74 ) }
    dend_4 { pt3dadd( 23.6307, -195.486, -41.42, 1.03 ) }
    dend_4 { pt3dadd( 24.1523, -196.309, -41.5547, 0.29 ) }
    dend_4 { pt3dadd( 24.5071, -197.159, -41.6562, 0.22 ) }
    dend_4 { pt3dadd( 24.6452, -197.74, -41.746, 0.22 ) }
    dend_4 { pt3dadd( 24.722, -198.216, -41.8422, 0.44 ) }
    dend_4 { pt3dadd( 24.8561, -199.042, -42.041, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 25.0217, -199.852, -42.276, 0.29 ) }
    dend_4 { pt3dadd( 25.216, -200.501, -42.5083, 0.29 ) }
    dend_4 { pt3dadd( 25.4453, -201.013, -42.6885, 0.29 ) }
    dend_4 { pt3dadd( 25.8429, -201.691, -42.9016, 0.66 ) }
    dend_4 { pt3dadd( 26.3493, -202.485, -43.0853, 0.37 ) }
    dend_4 { pt3dadd( 26.7306, -203.065, -43.1811, 0.44 ) }
    dend_4 { pt3dadd( 27.1265, -203.713, -43.2269, 0.37 ) }
    dend_4 { pt3dadd( 27.5016, -204.406, -43.1892, 0.37 ) }
    dend_4 { pt3dadd( 27.8492, -205.111, -43.0632, 0.74 ) }
    dend_4 { pt3dadd( 28.3222, -206.098, -42.7932, 1.11 ) }
    dend_4 { pt3dadd( 28.6366, -206.689, -42.5809, 1.11 ) }
    dend_4 { pt3dadd( 29.2191, -207.601, -42.1598, 0.66 ) }
    dend_4 { pt3dadd( 29.9708, -208.569, -41.6097, 0.44 ) }
    dend_4 { pt3dadd( 30.6525, -209.318, -41.1369, 0.44 ) }
    dend_4 { pt3dadd( 31.3368, -209.997, -40.6786, 0.29 ) }
    dend_4 { pt3dadd( 32.0469, -210.677, -40.2177, 0.29 ) }
    dend_4 { pt3dadd( 32.5908, -211.249, -39.8718, 0.29 ) }
    dend_4 { pt3dadd( 32.8878, -211.636, -39.7248, 0.29 ) }
    dend_4 { pt3dadd( 33.1581, -212.289, -39.6748, 0.59 ) }
    dend_4 { pt3dadd( 33.2793, -212.978, -39.742, 0.96 ) }
    dend_4 { pt3dadd( 33.3546, -213.829, -39.8624, 0.96 ) }
    dend_4 { pt3dadd( 33.4338, -214.769, -39.9959, 0.44 ) }
    dend_4 { pt3dadd( 33.5982, -216.034, -40.1737, 0.29 ) }
    dend_4 { pt3dadd( 33.772, -216.852, -40.2717, 0.29 ) }
    dend_4 { pt3dadd( 34.0288, -217.678, -40.342, 0.66 ) }
    dend_4 { pt3dadd( 34.3749, -218.535, -40.4046, 0.44 ) }
    dend_4 { pt3dadd( 34.7257, -219.34, -40.4658, 0.29 ) }
    dend_4 { pt3dadd( 35.0052, -219.992, -40.5351, 0.44 ) }
    dend_4 { pt3dadd( 35.2966, -220.691, -40.6109, 1.25 ) }
    dend_4 { pt3dadd( 35.5808, -221.394, -40.7185, 1.25 ) }
    dend_4 { pt3dadd( 35.958, -222.333, -40.8827, 1.03 ) }
    dend_4 { pt3dadd( 36.3689, -223.396, -41.0923, 0.52 ) }
    dend_4 { pt3dadd( 36.7644, -224.466, -41.2918, 0.29 ) }
    dend_4 { pt3dadd( 37.1117, -225.421, -41.4443, 0.29 ) }
    dend_4 { pt3dadd( 37.3067, -225.975, -41.5122, 0.29 ) }
    dend_4 { pt3dadd( 37.5364, -226.674, -41.5708, 0.37 ) }
    dend_4 { pt3dadd( 37.6641, -227.199, -41.5943, 0.29 ) }
    dend_4 { pt3dadd( 37.723, -227.711, -41.6243, 0.29 ) }
    dend_4 { pt3dadd( 37.7058, -228.187, -41.6885, 0.52 ) }
    dend_4 { pt3dadd( 37.6074, -228.934, -41.8609, 1.18 ) }
    dend_4 { pt3dadd( 37.5116, -229.558, -42.0429, 1.18 ) }
    dend_4 { pt3dadd( 37.3504, -230.823, -42.507, 0.81 ) }
    dend_4 { pt3dadd( 37.324, -231.706, -42.9346, 0.29 ) }
    dend_4 { pt3dadd( 37.3955, -232.283, -43.2846, 0.29 ) }
    dend_4 { pt3dadd( 37.5181, -232.688, -43.5664, 0.52 ) }
    dend_4 { pt3dadd( 37.7863, -233.237, -43.9629, 0.88 ) }
    dend_4 { pt3dadd( 38.204, -233.931, -44.409, 0.29 ) }
    dend_4 { pt3dadd( 38.7097, -234.687, -44.7664, 0.22 ) }
    dend_4 { pt3dadd( 39.0668, -235.271, -44.8855, 0.22 ) }
    dend_4 { pt3dadd( 39.3207, -235.771, -44.8914, 0.44 ) }
    dend_4 { pt3dadd( 39.602, -236.433, -44.7855, 0.59 ) }
    dend_4 { pt3dadd( 39.9561, -237.472, -44.5042, 0.29 ) }
    dend_4 { pt3dadd( 40.1853, -238.283, -44.2354, 0.81 ) }
    dend_4 { pt3dadd( 40.4053, -239.155, -43.9381, 0.81 ) }
    dend_4 { pt3dadd( 40.5489, -239.729, -43.7705, 0.81 ) }
    dend_4 { pt3dadd( 40.8471, -240.86, -43.5214, 0.29 ) }
    dend_4 { pt3dadd( 41.0492, -241.652, -43.4278, 0.29 ) }
    dend_4 { pt3dadd( 41.1964, -242.263, -43.3992, 0.88 ) }
    dend_4 { pt3dadd( 41.3546, -243.099, -43.4212, 1.18 ) }
    dend_4 { pt3dadd( 41.4979, -244.09, -43.4727, 0.52 ) }
    dend_4 { pt3dadd( 41.5811, -244.713, -43.5089, 0.37 ) }
    dend_4 { pt3dadd( 41.727, -245.632, -43.5862, 0.22 ) }
    dend_4 { pt3dadd( 41.8639, -246.219, -43.6277, 0.44 ) }
    dend_4 { pt3dadd( 42.1193, -246.993, -43.6772, 0.96 ) }
    dend_4 { pt3dadd( 42.5462, -247.978, -43.7763, 0.22 ) }
    dend_4 { pt3dadd( 42.8482, -248.544, -43.8633, 0.22 ) }
    dend_4 { pt3dadd( 43.2213, -249.186, -44.0022, 0.37 ) }
    dend_4 { pt3dadd( 43.5004, -249.68, -44.1389, 0.37 ) }
    dend_4 { pt3dadd( 43.8722, -250.466, -44.4229, 0.22 ) }
    dend_4 { pt3dadd( 44.1367, -251.198, -44.7201, 0.22 ) }
    dend_4 { pt3dadd( 44.3003, -251.852, -44.9894, 0.81 ) }
    dend_4 { pt3dadd( 44.4607, -252.712, -45.3137, 0.88 ) }
    dend_4 { pt3dadd( 44.6226, -253.664, -45.6258, 0.29 ) }
    dend_4 { pt3dadd( 44.8137, -254.609, -45.8748, 0.22 ) }
    dend_4 { pt3dadd( 45.0057, -255.367, -46.0314, 0.22 ) }
    dend_4 { pt3dadd( 45.2728, -256.204, -46.1635, 0.96 ) }
    dend_4 { pt3dadd( 45.572, -257.004, -46.3046, 0.81 ) }
    dend_4 { pt3dadd( 45.9373, -257.855, -46.4664, 0.37 ) }
    dend_4 { pt3dadd( 46.4355, -258.941, -46.6882, 0.22 ) }
    dend_4 { pt3dadd( 46.8224, -259.827, -46.8983, 0.22 ) }
    dend_4 { pt3dadd( 47.1867, -260.745, -47.1924, 0.22 ) }
    dend_4 { pt3dadd( 47.5013, -261.604, -47.5403, 0.22 ) }
    dend_4 { pt3dadd( 47.6253, -261.942, -47.6887, 0.59 ) }
    dend_4 { pt3dadd( 47.8588, -262.562, -47.9697, 1.03 ) }
    dend_4 { pt3dadd( 48.2351, -263.547, -48.412, 0.37 ) }
    dend_4 { pt3dadd( 48.5673, -264.383, -48.7348, 0.22 ) }
    dend_4 { pt3dadd( 48.7823, -264.919, -48.8606, 0.22 ) }
    dend_4 { pt3dadd( 49.1462, -265.874, -48.8757, 0.22 ) }
    dend_4 { pt3dadd( 49.3633, -266.503, -48.7934, 0.22 ) }
    dend_4 { pt3dadd( 49.525, -267.007, -48.6552, 0.22 ) }
    dend_4 { pt3dadd( 49.6986, -267.55, -48.4683, 0.37 ) }
    dend_4 { pt3dadd( 49.9585, -268.349, -48.1916, 0.22 ) }
    dend_4 { pt3dadd( 50.1506, -268.903, -48.0169, 0.22 ) }
    dend_4 { pt3dadd( 50.3137, -269.329, -47.9118, 0.74 ) }
    dend_4 { pt3dadd( 50.615, -269.937, -47.759, 1.03 ) }
    dend_4 { pt3dadd( 51.1202, -270.71, -47.5257, 0.66 ) }
    dend_4 { pt3dadd( 51.64, -271.37, -47.3068, 0.29 ) }
    dend_4 { pt3dadd( 52.0135, -271.807, -47.1502, 0.29 ) }
    dend_4 { pt3dadd( 52.2625, -272.094, -47.0545, 0.29 ) }
    dend_4 { pt3dadd( 52.673, -272.582, -46.9103, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_4 { pt3dadd( 53.1928, -273.231, -46.7306, 0.22 ) }
    dend_4 { pt3dadd( 53.4269, -273.536, -46.6671, 0.22 ) }
    dend_4 { pt3dadd( 53.8981, -274.178, -46.578, 0.22 ) }
    dend_4 { pt3dadd( 54.3518, -274.816, -46.5065, 0.22 ) }
    dend_4 { pt3dadd( 54.9574, -275.693, -46.4071, 0.74 ) }
    dend_4 { pt3dadd( 55.4717, -276.486, -46.3491, 0.74 ) }
    dend_4 { pt3dadd( 55.9233, -277.223, -46.314, 0.74 ) }
    dend_4 { pt3dadd( 56.3515, -277.944, -46.2928, 0.37 ) }
    dend_4 { pt3dadd( 56.8759, -278.848, -46.2562, 0.37 ) }
    dend_4 { pt3dadd( 57.2437, -279.507, -46.2123, 0.37 ) }
    dend_4 { pt3dadd( 57.653, -280.249, -46.1539, 0.88 ) }
    dend_4 { pt3dadd( 58.1521, -281.107, -46.1328, 0.88 ) }
    dend_4 { pt3dadd( 58.5942, -281.819, -46.1052, 0.44 ) }
    dend_4 { pt3dadd( 59.1532, -282.699, -46.059, 0.22 ) }
    dend_4 { pt3dadd( 59.4416, -283.156, -46.0145, 0.22 ) }
    dend_4 { pt3dadd( 59.829, -283.795, -45.9104, 0.37 ) }
    dend_4 { pt3dadd( 60.4058, -284.821, -45.6259, 0.74 ) }
    dend_4 { pt3dadd( 60.8378, -285.85, -45.2035, 0.22 ) }
    dend_4 { pt3dadd( 60.9736, -286.62, -44.8243, 0.22 ) }
    dend_4 { pt3dadd( 60.9234, -287.058, -44.5943, 0.22 ) }
    dend_4 { pt3dadd( 60.7804, -287.553, -44.3361, 0.22 ) }
    dend_4 { pt3dadd( 60.6328, -287.944, -44.1684, 0.22 ) }
    dend_4 { pt3dadd( 60.3301, -288.812, -43.8377, 0.22 ) }
    dend_4 { pt3dadd( 60.1879, -289.378, -43.6975, 0.81 ) }
    dend_4 { pt3dadd( 60.1008, -290.146, -43.5609, 1.18 ) }
    dend_4 { pt3dadd( 60.1054, -290.697, -43.4972, 1.18 ) }
    dend_4 { pt3dadd( 60.2328, -291.816, -43.4286, 0.37 ) }
    dend_4 { pt3dadd( 60.4876, -293.158, -43.4254, 0.22 ) }
    dend_4 { pt3dadd( 60.7541, -294.199, -43.4776, 0.22 ) }
    dend_4 { pt3dadd( 60.9308, -294.835, -43.5378, 0.22 ) }
    dend_4 { pt3dadd( 61.1626, -295.701, -43.6859, 0.37 ) }
    dend_4 { pt3dadd( 61.3764, -296.57, -43.8834, 0.74 ) }
    dend_4 { pt3dadd( 61.5495, -297.451, -44.1435, 0.59 ) }
    dend_4 { pt3dadd( 61.6356, -298.24, -44.4494, 0.29 ) }
    dend_4 { pt3dadd( 61.6705, -299.001, -44.7501, 0.15 ) }
    dend_4 { pt3dadd( 61.6911, -299.878, -45.1012, 0.15 ) }
    dend_4 { pt3dadd( 61.7139, -300.361, -45.2757, 0.44 ) }
    dend_4 { pt3dadd( 61.8041, -301.212, -45.5198, 0.66 ) }
    dend_4 { pt3dadd( 62.0252, -302.08, -45.6678, 0.22 ) }
    dend_4 { pt3dadd( 62.444, -302.945, -45.623, 0.22 ) }
    dend_4 { pt3dadd( 62.8433, -303.521, -45.4436, 0.81 ) }
    dend_4 { pt3dadd( 63.4048, -304.24, -45.0779, 0.96 ) }
    dend_4 { pt3dadd( 63.8852, -304.851, -44.6985, 0.96 ) }
    dend_4 { pt3dadd( 64.341, -305.427, -44.2874, 0.44 ) }
    dend_4 { pt3dadd( 64.828, -306.081, -43.7931, 0.29 ) }
    dend_4 { pt3dadd( 65.1972, -306.687, -43.3916, 0.22 ) }
    dend_4 { pt3dadd( 65.4651, -307.313, -43.0928, 0.22 ) }
    dend_4 { pt3dadd( 65.6418, -307.981, -42.9176, 0.22 ) }
    dend_4 { pt3dadd( 65.708, -308.356, -42.8716, 0.22 ) }
    dend_4 { pt3dadd( 65.7433, -308.665, -42.8637, 0.74 ) }
    dend_4 { pt3dadd( 65.8029, -309.419, -42.9178, 1.03 ) }
    dend_4 { pt3dadd( 65.887, -310.517, -43.0649, 0.22 ) }
    dend_4 { pt3dadd( 65.9572, -311.265, -43.1873, 0.22 ) }
    dend_4 { pt3dadd( 66.0054, -311.658, -43.2567, 0.74 ) }
    dend_4 { pt3dadd( 66.0731, -312.128, -43.357, 0.96 ) }
    dend_4 { pt3dadd( 66.2008, -312.862, -43.4971, 0.29 ) }
    dend_4 { pt3dadd( 66.3184, -313.455, -43.5975, 0.22 ) }
    dend_4 { pt3dadd( 66.4165, -313.898, -43.6662, 0.22 ) }
    dend_4 { pt3dadd( 66.5592, -314.526, -43.7457, 0.37 ) }
    dend_4 { pt3dadd( 66.6892, -315.312, -43.8238, 0.22 ) }
    dend_4 { pt3dadd( 66.7931, -316.341, -43.8483, 0.22 ) }
    dend_4 { pt3dadd( 66.8178, -316.731, -43.8164, 0.22 ) }
    dend_4 { pt3dadd( 66.8264, -317.113, -43.7493, 0.44 ) }
    dend_4 { pt3dadd( 66.8291, -317.709, -43.6002, 0.88 ) }
    dend_4 { pt3dadd( 66.8278, -318.443, -43.3684, 0.44 ) }
    dend_4 { pt3dadd( 66.844, -319.447, -43.0162, 0.22 ) }
    dend_4 { pt3dadd( 66.8752, -320.194, -42.7843, 0.22 ) }
    dend_4 { pt3dadd( 66.9215, -320.949, -42.5764, 0.22 ) }
    dend_4 { pt3dadd( 66.9518, -321.512, -42.4467, 0.22 ) }
    dend_4 { pt3dadd( 66.9765, -321.928, -42.3762, 0.22 ) }
    dend_4 { pt3dadd( 67.0063, -322.336, -42.3453, 0.59 ) }
    dend_4 { pt3dadd( 67.0473, -323.105, -42.3464, 1.25 ) }
    dend_4 { pt3dadd( 67.0699, -324.144, -42.3866, 0.44 ) }
    dend_4 { pt3dadd( 67.0723, -325.073, -42.4391, 0.44 ) }
    dend_4 { pt3dadd( 67.0785, -325.762, -42.4621, 0.52 ) }
    dend_4 { pt3dadd( 67.1216, -326.914, -42.4197, 0.22 ) }
    dend_4 { pt3dadd( 67.1636, -327.762, -42.3383, 0.15 ) }
    dend_4 { pt3dadd( 67.2087, -328.535, -42.2154, 0.15 ) }
    dend_4 { pt3dadd( 67.225, -328.853, -42.1519, 0.37 ) }
    dend_4 { pt3dadd( 67.2522, -329.853, -41.9278, 1.03 ) }
    dend_4 { pt3dadd( 67.2454, -331.422, -41.5234, 0.22 ) }
    dend_4 { pt3dadd( 67.2173, -332.108, -41.3248, 0.22 ) }
    dend_4 { pt3dadd( 67.1973, -332.523, -41.2065, 0.22 ) }
    dend_4 { pt3dadd( 67.1679, -333.269, -40.9922, 0.22 ) }
    dend_4 { pt3dadd( 67.1155, -334.2, -40.7428, 1.47 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -54.0617, 170.287, 43.8845, 0.07 ) }
    dend_55 { pt3dadd( -54.6808, 171.346, 43.7752, 0.07 ) }
    dend_55 { pt3dadd( -55.0823, 172.085, 43.7108, 0.66 ) }
    dend_55 { pt3dadd( -55.4682, 172.838, 43.6541, 0.15 ) }
    dend_55 { pt3dadd( -55.8236, 173.554, 43.6046, 0.59 ) }
    dend_55 { pt3dadd( -56.1418, 174.189, 43.5595, 0.15 ) }
    dend_55 { pt3dadd( -56.3926, 174.689, 43.524, 0.52 ) }
    dend_55 { pt3dadd( -56.611, 175.205, 43.5028, 0.15 ) }
    dend_55 { pt3dadd( -56.8273, 175.753, 43.4865, 0.29 ) }
    dend_55 { pt3dadd( -57.0246, 176.276, 43.4743, 0.07 ) }
    dend_55 { pt3dadd( -57.1853, 176.667, 43.4603, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 96/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -54.0617, 170.287, 43.8845, 0.22 ) }
    dend_52 { pt3dadd( -54.4164, 171.034, 44.2454, 0.22 ) }
    dend_52 { pt3dadd( -54.9855, 172.206, 44.5021, 0.07 ) }
    dend_52 { pt3dadd( -55.2576, 172.766, 44.5166, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_52 { pt3dadd( -55.5811, 173.468, 44.4484, 0.29 ) }
    dend_52 { pt3dadd( -55.9663, 174.356, 44.2952, 0.07 ) }
    dend_52 { pt3dadd( -56.3426, 175.273, 44.1047, 0.07 ) }
    dend_52 { pt3dadd( -56.5756, 175.88, 43.8889, 0.52 ) }
    dend_52 { pt3dadd( -56.8912, 176.772, 43.4693, 0.07 ) }
    dend_52 { pt3dadd( -57.0639, 177.316, 43.1887, 0.07 ) }
    dend_52 { pt3dadd( -57.1839, 177.745, 42.9671, 0.07 ) }
    dend_52 { pt3dadd( -57.2471, 178.018, 42.8415, 0.22 ) }
    dend_52 { pt3dadd( -57.3717, 178.684, 42.5818, 0.44 ) }
    dend_52 { pt3dadd( -57.5254, 179.74, 42.2271, 0.07 ) }
    dend_52 { pt3dadd( -57.5884, 180.292, 42.0864, 0.07 ) }
    dend_52 { pt3dadd( -57.6222, 180.595, 42.0323, 0.52 ) }
    dend_52 { pt3dadd( -57.699, 181.26, 41.9396, 0.74 ) }
    dend_52 { pt3dadd( -57.8135, 182.217, 41.8355, 0.07 ) }
    dend_52 { pt3dadd( -57.897, 182.874, 41.7929, 0.07 ) }
    dend_52 { pt3dadd( -57.996, 183.53, 41.7919, 0.37 ) }
    dend_52 { pt3dadd( -58.1809, 184.573, 41.8405, 0.07 ) }
    dend_52 { pt3dadd( -58.2881, 185.059, 41.8799, 0.22 ) }
    dend_52 { pt3dadd( -58.3785, 185.371, 41.9256, 0.37 ) }
    dend_52 { pt3dadd( -58.603, 185.968, 42.0753, 0.96 ) }
    dend_52 { pt3dadd( -58.9948, 186.814, 42.3885, 0.15 ) }
    dend_52 { pt3dadd( -59.1726, 187.137, 42.5512, 0.15 ) }
    dend_52 { pt3dadd( -59.5515, 187.745, 42.9638, 0.59 ) }
    dend_52 { pt3dadd( -60.1043, 188.536, 43.5865, 0.07 ) }
    dend_52 { pt3dadd( -60.5283, 189.057, 44.019, 0.07 ) }
    dend_52 { pt3dadd( -61.039, 189.602, 44.5068, 0.59 ) }
    dend_52 { pt3dadd( -61.5959, 190.137, 44.9732, 0.15 ) }
    dend_52 { pt3dadd( -62.1736, 190.673, 45.3949, 0.15 ) }
    dend_52 { pt3dadd( -62.6295, 191.072, 45.6805, 0.88 ) }
    dend_52 { pt3dadd( -63.4699, 191.789, 46.0832, 0.07 ) }
    dend_52 { pt3dadd( -63.9801, 192.25, 46.2685, 0.07 ) }
    dend_52 { pt3dadd( -64.6576, 192.922, 46.4505, 0.07 ) }
    dend_52 { pt3dadd( -64.9869, 193.288, 46.5082, 0.81 ) }
    dend_52 { pt3dadd( -65.3601, 193.731, 46.5652, 1.25 ) }
    dend_52 { pt3dadd( -65.9536, 194.483, 46.6377, 0.22 ) }
    dend_52 { pt3dadd( -66.5908, 195.33, 46.7127, 0.15 ) }
    dend_52 { pt3dadd( -67.243, 196.213, 46.7717, 0.37 ) }
    dend_52 { pt3dadd( -68.1536, 197.463, 46.8667, 0.07 ) }
    dend_52 { pt3dadd( -68.6984, 198.22, 46.9282, 0.07 ) }
    dend_52 { pt3dadd( -69.2663, 199.035, 46.9978, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 40/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.8608, -41.2272, -33.352, 0.22 ) }
    dend_17 { pt3dadd( 13.7982, -41.1531, -34.0704, 0.22 ) }
    dend_17 { pt3dadd( 14.2513, -41.1796, -34.4129, 0.22 ) }
    dend_17 { pt3dadd( 14.5627, -41.2397, -34.6724, 0.22 ) }
    dend_17 { pt3dadd( 14.7867, -41.3163, -34.8751, 0.22 ) }
    dend_17 { pt3dadd( 15.0945, -41.4626, -35.1679, 0.29 ) }
    dend_17 { pt3dadd( 15.5313, -41.7465, -35.5987, 0.29 ) }
    dend_17 { pt3dadd( 15.7963, -42.0844, -35.8745, 0.29 ) }
    dend_17 { pt3dadd( 16.0125, -42.5317, -36.1119, 0.29 ) }
    dend_17 { pt3dadd( 16.1725, -42.9811, -36.2766, 0.29 ) }
    dend_17 { pt3dadd( 16.2537, -43.2583, -36.348, 0.52 ) }
    dend_17 { pt3dadd( 16.382, -43.7904, -36.461, 0.88 ) }
    dend_17 { pt3dadd( 16.546, -44.5876, -36.5783, 0.29 ) }
    dend_17 { pt3dadd( 16.7114, -45.4308, -36.6522, 0.29 ) }
    dend_17 { pt3dadd( 16.8487, -46.111, -36.6674, 0.52 ) }
    dend_17 { pt3dadd( 16.9417, -46.563, -36.6613, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 12.8608, -41.2272, -33.352, 0.15 ) }
    dend_16 { pt3dadd( 12.1903, -42.3501, -32.6875, 0.15 ) }
    dend_16 { pt3dadd( 11.8249, -42.9619, -32.3255, 0.15 ) }
    dend_16 { pt3dadd( 11.475, -43.5479, -31.9787, 0.15 ) }
    dend_16 { pt3dadd( 11.1948, -44.0171, -31.7011, 0.15 ) }
    dend_16 { pt3dadd( 10.8661, -44.5675, -31.3754, 0.15 ) }
    dend_16 { pt3dadd( 10.4472, -45.269, -30.9603, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 67.1155, -334.2, -40.7428, 0.22 ) }
    dend_6 { pt3dadd( 67.1123, -335.204, -39.641, 0.22 ) }
    dend_6 { pt3dadd( 67.1669, -335.571, -39.2996, 0.22 ) }
    dend_6 { pt3dadd( 67.2493, -335.961, -38.9823, 0.22 ) }
    dend_6 { pt3dadd( 67.448, -336.629, -38.5438, 0.22 ) }
    dend_6 { pt3dadd( 67.6794, -337.304, -38.1645, 0.22 ) }
    dend_6 { pt3dadd( 67.8133, -337.688, -37.9617, 0.37 ) }
    dend_6 { pt3dadd( 68.0347, -338.285, -37.7244, 1.03 ) }
    dend_6 { pt3dadd( 68.1177, -338.562, -37.6305, 1.03 ) }
    dend_6 { pt3dadd( 68.3747, -339.697, -37.2636, 0.37 ) }
    dend_6 { pt3dadd( 68.5017, -340.669, -36.9925, 0.29 ) }
    dend_6 { pt3dadd( 68.5268, -341.174, -36.8469, 0.29 ) }
    dend_6 { pt3dadd( 68.5117, -342.077, -36.5403, 0.59 ) }
    dend_6 { pt3dadd( 68.4626, -342.93, -36.2163, 0.22 ) }
    dend_6 { pt3dadd( 68.4269, -343.504, -35.9681, 0.52 ) }
    dend_6 { pt3dadd( 68.3732, -344.503, -35.4868, 0.96 ) }
    dend_6 { pt3dadd( 68.3667, -345.694, -34.8688, 0.22 ) }
    dend_6 { pt3dadd( 68.4053, -346.499, -34.4455, 0.22 ) }
    dend_6 { pt3dadd( 68.467, -347.035, -34.1369, 0.22 ) }
    dend_6 { pt3dadd( 68.5566, -347.535, -33.8338, 0.22 ) }
    dend_6 { pt3dadd( 68.6857, -348.06, -33.4969, 0.22 ) }
    dend_6 { pt3dadd( 68.8293, -348.438, -33.2051, 0.22 ) }
    dend_6 { pt3dadd( 69.2633, -349.194, -32.6946, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 67.1155, -334.2, -40.7428, 0.22 ) }
    dend_5 { pt3dadd( 67.9808, -334.241, -39.3417, 0.22 ) }
    dend_5 { pt3dadd( 68.5383, -334.245, -38.5647, 0.22 ) }
    dend_5 { pt3dadd( 68.8909, -334.22, -38.1865, 0.22 ) }
    dend_5 { pt3dadd( 69.4784, -334.166, -37.6144, 0.07 ) }
    dend_5 { pt3dadd( 69.901, -334.127, -37.2028, 0.07 ) }
    dend_5 { pt3dadd( 70.0902, -334.109, -37.0186, 0.07 ) }
    dend_5 { pt3dadd( 70.7857, -334.013, -36.4309, 0.88 ) }
    dend_5 { pt3dadd( 72.2333, -333.78, -35.3729, 0.15 ) }
    dend_5 { pt3dadd( 73.1238, -333.628, -34.7882, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -69.2663, 199.035, 46.9978, 0.07 ) }
    dend_54 { pt3dadd( -70.021, 200.112, 47.8942, 0.07 ) }
    dend_54 { pt3dadd( -70.4957, 200.787, 48.4856, 0.59 ) }
    dend_54 { pt3dadd( -71.2957, 201.948, 49.5406, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( -71.8822, 202.795, 50.366, 0.74 ) }
    dend_54 { pt3dadd( -72.4058, 203.543, 51.1383, 0.07 ) }
    dend_54 { pt3dadd( -72.9145, 204.271, 51.8886, 0.07 ) }
    dend_54 { pt3dadd( -73.2881, 204.768, 52.4731, 0.07 ) }
    dend_54 { pt3dadd( -73.7235, 205.339, 53.1866, 0.74 ) }
    dend_54 { pt3dadd( -74.3605, 206.24, 54.3299, 0.07 ) }
    dend_54 { pt3dadd( -74.7378, 206.8, 55.0388, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -69.2663, 199.035, 46.9978, 0.07 ) }
    dend_53 { pt3dadd( -70.1802, 199.489, 45.812, 0.07 ) }
    dend_53 { pt3dadd( -70.8399, 199.923, 44.7564, 0.07 ) }
    dend_53 { pt3dadd( -71.4172, 200.449, 43.5992, 0.07 ) }
    dend_53 { pt3dadd( -71.601, 200.687, 43.1115, 0.29 ) }
    dend_53 { pt3dadd( -71.9385, 201.204, 42.1043, 0.74 ) }
    dend_53 { pt3dadd( -72.2792, 201.782, 41.0478, 0.29 ) }
    dend_53 { pt3dadd( -72.5515, 202.373, 40.0844, 0.29 ) }
    dend_53 { pt3dadd( -72.95, 203.18, 38.8754, 0.29 ) }
    dend_53 { pt3dadd( -73.5137, 204.072, 37.626, 0.29 ) }
    dend_53 { pt3dadd( -73.7601, 204.359, 37.2381, 0.74 ) }
    dend_53 { pt3dadd( -74.3508, 204.833, 36.6429, 1.47 ) }
    dend_53 { pt3dadd( -75.3955, 205.446, 35.9522, 0.52 ) }
    dend_53 { pt3dadd( -76.5143, 205.961, 35.457, 0.22 ) }
    dend_53 { pt3dadd( -77.8412, 206.48, 35.0386, 0.15 ) }
    dend_53 { pt3dadd( -78.8033, 206.817, 34.7921, 0.29 ) }
    dend_53 { pt3dadd( -80.262, 207.297, 34.4461, 0.07 ) }
    dend_53 { pt3dadd( -80.8957, 207.493, 34.3126, 0.52 ) }
    dend_53 { pt3dadd( -82.4482, 207.987, 34.0117, 0.07 ) }
    dend_53 { pt3dadd( -83.5796, 208.39, 33.8422, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.9417, -46.563, -36.6613, 0.22 ) }
    dend_19 { pt3dadd( 18.0676, -47.3422, -36.8232, 0.22 ) }
    dend_19 { pt3dadd( 18.9583, -47.9897, -37.0062, 0.22 ) }
    dend_19 { pt3dadd( 19.6918, -48.5303, -37.18, 0.22 ) }
    dend_19 { pt3dadd( 20.2906, -48.9459, -37.3609, 0.22 ) }
    dend_19 { pt3dadd( 21.4981, -49.7355, -37.7888, 0.22 ) }
    dend_19 { pt3dadd( 22.1426, -50.1283, -38.0285, 0.22 ) }
    dend_19 { pt3dadd( 22.7384, -50.461, -38.2882, 0.22 ) }
    dend_19 { pt3dadd( 23.3355, -50.7969, -38.5938, 0.22 ) }
    dend_19 { pt3dadd( 24.2244, -51.2956, -39.172, 0.37 ) }
    dend_19 { pt3dadd( 24.7284, -51.5815, -39.5497, 0.52 ) }
    dend_19 { pt3dadd( 25.1062, -51.8003, -39.8474, 0.29 ) }
    dend_19 { pt3dadd( 25.2311, -51.8827, -39.9539, 0.29 ) }
    dend_19 { pt3dadd( 25.7058, -52.3302, -40.4313, 0.22 ) }
    dend_19 { pt3dadd( 26.1083, -53.0535, -40.982, 0.22 ) }
    dend_19 { pt3dadd( 26.2332, -53.4347, -41.2063, 0.22 ) }
    dend_19 { pt3dadd( 26.3155, -53.8342, -41.4189, 0.29 ) }
    dend_19 { pt3dadd( 26.3622, -54.1912, -41.6026, 0.29 ) }
    dend_19 { pt3dadd( 26.4629, -55.1454, -42.0562, 0.15 ) }
    dend_19 { pt3dadd( 26.5082, -55.6372, -42.2353, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.9417, -46.563, -36.6613, 0.07 ) }
    dend_18 { pt3dadd( 16.9244, -46.9736, -35.8056, 0.07 ) }
    dend_18 { pt3dadd( 16.8976, -47.6087, -34.482, 0.07 ) }
    dend_18 { pt3dadd( 16.8749, -48.1458, -33.3628, 0.07 ) }
    dend_18 { pt3dadd( 16.864, -48.4052, -32.8222, 0.29 ) }
    dend_18 { pt3dadd( 16.84, -48.9727, -31.6395, 0.22 ) }
    dend_18 { pt3dadd( 16.8304, -49.2019, -31.1617, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 54/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 69.2633, -349.194, -32.6946, 0.07 ) }
    dend_10 { pt3dadd( 69.7303, -348.408, -32.0678, 0.07 ) }
    dend_10 { pt3dadd( 70.0991, -347.757, -31.5501, 0.07 ) }
    dend_10 { pt3dadd( 70.3857, -347.25, -31.1657, 0.22 ) }
    dend_10 { pt3dadd( 70.5214, -346.997, -30.9954, 0.22 ) }
    dend_10 { pt3dadd( 70.7817, -346.484, -30.6786, 0.22 ) }
    dend_10 { pt3dadd( 71.193, -345.671, -30.2468, 0.15 ) }
    dend_10 { pt3dadd( 71.4724, -345.09, -30.0327, 0.15 ) }
    dend_10 { pt3dadd( 71.8434, -344.334, -29.8881, 0.15 ) }
    dend_10 { pt3dadd( 72.11, -343.862, -29.8566, 0.37 ) }
    dend_10 { pt3dadd( 72.3834, -343.456, -29.8766, 0.59 ) }
    dend_10 { pt3dadd( 73.1573, -342.533, -30.0472, 0.15 ) }
    dend_10 { pt3dadd( 73.9339, -341.729, -30.3281, 0.15 ) }
    dend_10 { pt3dadd( 74.2586, -341.419, -30.4758, 0.15 ) }
    dend_10 { pt3dadd( 74.8491, -340.915, -30.7888, 0.29 ) }
    dend_10 { pt3dadd( 75.5226, -340.415, -31.1534, 0.15 ) }
    dend_10 { pt3dadd( 76.1442, -340.01, -31.4996, 0.52 ) }
    dend_10 { pt3dadd( 77.117, -339.439, -32.0556, 0.15 ) }
    dend_10 { pt3dadd( 77.6911, -339.121, -32.3697, 0.29 ) }
    dend_10 { pt3dadd( 78.4368, -338.696, -32.7582, 0.29 ) }
    dend_10 { pt3dadd( 79.1431, -338.281, -33.13, 0.15 ) }
    dend_10 { pt3dadd( 79.8636, -337.855, -33.519, 0.44 ) }
    dend_10 { pt3dadd( 80.4305, -337.5, -33.8498, 0.15 ) }
    dend_10 { pt3dadd( 80.8577, -337.213, -34.1292, 0.22 ) }
    dend_10 { pt3dadd( 81.7596, -336.528, -34.7832, 0.07 ) }
    dend_10 { pt3dadd( 82.239, -336.102, -35.1615, 0.59 ) }
    dend_10 { pt3dadd( 82.9281, -335.352, -35.8066, 0.07 ) }
    dend_10 { pt3dadd( 83.5572, -334.528, -36.5056, 0.37 ) }
    dend_10 { pt3dadd( 84.0032, -333.854, -37.0867, 0.15 ) }
    dend_10 { pt3dadd( 84.1692, -333.554, -37.3602, 0.44 ) }
    dend_10 { pt3dadd( 84.3355, -333.192, -37.7065, 0.44 ) }
    dend_10 { pt3dadd( 84.6879, -332.368, -38.4722, 0.07 ) }
    dend_10 { pt3dadd( 84.943, -331.783, -39.0103, 0.07 ) }
    dend_10 { pt3dadd( 85.2311, -331.186, -39.5929, 0.07 ) }
    dend_10 { pt3dadd( 85.5904, -330.534, -40.2565, 0.07 ) }
    dend_10 { pt3dadd( 85.8113, -330.186, -40.6338, 0.07 ) }
    dend_10 { pt3dadd( 86.2204, -329.629, -41.289, 0.37 ) }
    dend_10 { pt3dadd( 86.8743, -328.902, -42.2083, 0.07 ) }
    dend_10 { pt3dadd( 87.21, -328.58, -42.6312, 0.07 ) }
    dend_10 { pt3dadd( 87.8254, -328.03, -43.3554, 0.52 ) }
    dend_10 { pt3dadd( 88.631, -327.362, -44.2436, 0.07 ) }
    dend_10 { pt3dadd( 89.0436, -327.039, -44.6856, 0.07 ) }
    dend_10 { pt3dadd( 89.6921, -326.573, -45.3656, 0.52 ) }
    dend_10 { pt3dadd( 90.5156, -326.088, -46.1324, 0.15 ) }
    dend_10 { pt3dadd( 90.9883, -325.852, -46.5181, 0.15 ) }
    dend_10 { pt3dadd( 91.1173, -325.798, -46.6125, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 91.5466, -325.635, -46.8858, 0.29 ) }
    dend_10 { pt3dadd( 91.8835, -325.51, -47.0819, 0.29 ) }
    dend_10 { pt3dadd( 92.7922, -325.185, -47.5714, 0.07 ) }
    dend_10 { pt3dadd( 93.5557, -324.884, -47.9265, 0.07 ) }
    dend_10 { pt3dadd( 93.9822, -324.696, -48.1166, 0.15 ) }
    dend_10 { pt3dadd( 94.7679, -324.312, -48.4714, 0.07 ) }
    dend_10 { pt3dadd( 95.0873, -324.144, -48.6242, 0.07 ) }
    dend_10 { pt3dadd( 95.6326, -323.865, -48.8969, 0.29 ) }
    dend_10 { pt3dadd( 96.8025, -323.286, -49.5382, 0.07 ) }
    dend_10 { pt3dadd( 97.4323, -322.988, -49.939, 0.07 ) }
    dend_10 { pt3dadd( 97.8023, -322.804, -50.2255, 0.29 ) }
    dend_10 { pt3dadd( 98.3117, -322.521, -50.691, 0.37 ) }
    dend_10 { pt3dadd( 99.1894, -321.994, -51.6517, 0.07 ) }
    dend_10 { pt3dadd( 99.7644, -321.66, -52.3712, 0.15 ) }
    dend_10 { pt3dadd( 100.408, -321.335, -53.2393, 0.15 ) }
    dend_10 { pt3dadd( 101.029, -321.023, -54.0867, 0.15 ) }
    dend_10 { pt3dadd( 101.456, -320.786, -54.6459, 0.29 ) }
    dend_10 { pt3dadd( 101.875, -320.535, -55.205, 0.59 ) }
    dend_10 { pt3dadd( 102.331, -320.239, -55.8308, 0.88 ) }
    dend_10 { pt3dadd( 102.944, -319.903, -56.5576, 0.29 ) }
    dend_10 { pt3dadd( 103.596, -319.651, -57.141, 0.29 ) }
    dend_10 { pt3dadd( 104.37, -319.456, -57.6837, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 22/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 69.2633, -349.194, -32.6946, 0.44 ) }
    dend_7 { pt3dadd( 68.8284, -349.941, -32.9481, 0.44 ) }
    dend_7 { pt3dadd( 68.3604, -350.91, -33.1975, 0.22 ) }
    dend_7 { pt3dadd( 68.0018, -351.791, -33.3795, 0.66 ) }
    dend_7 { pt3dadd( 67.7073, -352.664, -33.5288, 0.15 ) }
    dend_7 { pt3dadd( 67.5064, -353.346, -33.6297, 0.15 ) }
    dend_7 { pt3dadd( 67.3999, -353.764, -33.67, 0.15 ) }
    dend_7 { pt3dadd( 67.2868, -354.473, -33.6309, 0.15 ) }
    dend_7 { pt3dadd( 67.2469, -354.928, -33.5385, 0.52 ) }
    dend_7 { pt3dadd( 67.1989, -355.712, -33.3098, 0.96 ) }
    dend_7 { pt3dadd( 67.1475, -356.611, -33.0095, 0.66 ) }
    dend_7 { pt3dadd( 67.0889, -357.463, -32.7046, 0.22 ) }
    dend_7 { pt3dadd( 66.9893, -358.826, -32.2336, 0.22 ) }
    dend_7 { pt3dadd( 66.9556, -359.378, -32.0638, 0.22 ) }
    dend_7 { pt3dadd( 66.9375, -359.955, -31.8997, 0.22 ) }
    dend_7 { pt3dadd( 66.9383, -360.378, -31.7883, 0.22 ) }
    dend_7 { pt3dadd( 66.9531, -360.892, -31.6877, 0.37 ) }
    dend_7 { pt3dadd( 66.9616, -361.597, -31.6027, 0.88 ) }
    dend_7 { pt3dadd( 66.946, -362.253, -31.5449, 0.52 ) }
    dend_7 { pt3dadd( 66.8953, -363.124, -31.4526, 0.15 ) }
    dend_7 { pt3dadd( 66.8266, -363.757, -31.3677, 0.15 ) }
    dend_7 { pt3dadd( 66.7195, -364.403, -31.2776, 0.81 ) }
    dend_7 { pt3dadd( 66.5213, -365.393, -31.1675, 0.15 ) }
    dend_7 { pt3dadd( 66.27, -366.471, -31.0759, 0.15 ) }
    dend_7 { pt3dadd( 66.1775, -366.849, -31.061, 0.66 ) }
    dend_7 { pt3dadd( 66.0355, -367.46, -31.0843, 1.03 ) }
    dend_7 { pt3dadd( 65.8568, -368.439, -31.2184, 0.15 ) }
    dend_7 { pt3dadd( 65.7683, -369.167, -31.3844, 0.15 ) }
    dend_7 { pt3dadd( 65.7571, -369.301, -31.4279, 0.15 ) }
    dend_7 { pt3dadd( 65.7123, -369.689, -31.5642, 0.59 ) }
    dend_7 { pt3dadd( 65.6305, -370.15, -31.7124, 0.81 ) }
    dend_7 { pt3dadd( 65.4356, -370.939, -31.9344, 0.22 ) }
    dend_7 { pt3dadd( 65.2832, -371.45, -32.056, 0.22 ) }
    dend_7 { pt3dadd( 64.9855, -372.302, -32.2156, 0.44 ) }
    dend_7 { pt3dadd( 64.6459, -373.145, -32.3691, 0.15 ) }
    dend_7 { pt3dadd( 64.3977, -373.656, -32.4577, 0.15 ) }
    dend_7 { pt3dadd( 64.1371, -374.1, -32.5307, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 64.1371, -374.1, -32.5307, 0.22 ) }
    dend_9 { pt3dadd( 63.9587, -375.395, -33.1386, 0.22 ) }
    dend_9 { pt3dadd( 63.8692, -375.904, -33.3738, 0.22 ) }
    dend_9 { pt3dadd( 63.7115, -376.765, -33.7529, 0.29 ) }
    dend_9 { pt3dadd( 63.5489, -377.623, -34.1547, 0.15 ) }
    dend_9 { pt3dadd( 63.4402, -378.182, -34.4491, 0.15 ) }
    dend_9 { pt3dadd( 63.3403, -378.738, -34.7726, 0.15 ) }
    dend_9 { pt3dadd( 63.2382, -379.282, -35.0961, 0.52 ) }
    dend_9 { pt3dadd( 63.1523, -379.953, -35.5406, 0.74 ) }
    dend_9 { pt3dadd( 63.1293, -381.051, -36.3646, 0.29 ) }
    dend_9 { pt3dadd( 63.1824, -381.738, -36.9452, 0.15 ) }
    dend_9 { pt3dadd( 63.2593, -382.263, -37.402, 0.15 ) }
    dend_9 { pt3dadd( 63.3169, -382.537, -37.6333, 0.15 ) }
    dend_9 { pt3dadd( 63.4728, -383.025, -38.0442, 0.37 ) }
    dend_9 { pt3dadd( 63.7293, -383.658, -38.5265, 0.15 ) }
    dend_9 { pt3dadd( 64.0141, -384.261, -38.9021, 0.15 ) }
    dend_9 { pt3dadd( 64.3445, -384.93, -39.2617, 0.22 ) }
    dend_9 { pt3dadd( 64.598, -385.445, -39.5227, 0.81 ) }
    dend_9 { pt3dadd( 64.8777, -386.061, -39.8444, 0.66 ) }
    dend_9 { pt3dadd( 65.2725, -387.063, -40.3598, 0.44 ) }
    dend_9 { pt3dadd( 65.4624, -387.673, -40.6724, 0.44 ) }
    dend_9 { pt3dadd( 65.7363, -388.676, -41.1918, 0.15 ) }
    dend_9 { pt3dadd( 65.8518, -389.149, -41.4486, 0.15 ) }
    dend_9 { pt3dadd( 66.0316, -390.043, -41.9546, 0.15 ) }
    dend_9 { pt3dadd( 66.1301, -390.69, -42.3269, 0.81 ) }
    dend_9 { pt3dadd( 66.3065, -392.084, -43.1176, 0.15 ) }
    dend_9 { pt3dadd( 66.3428, -392.482, -43.3376, 0.15 ) }
    dend_9 { pt3dadd( 66.3782, -392.905, -43.5694, 0.15 ) }
    dend_9 { pt3dadd( 66.4502, -393.425, -43.8508, 0.15 ) }
    dend_9 { pt3dadd( 66.5466, -393.819, -44.0552, 0.37 ) }
    dend_9 { pt3dadd( 66.8217, -394.543, -44.4592, 0.74 ) }
    dend_9 { pt3dadd( 67.2196, -395.36, -44.9476, 0.22 ) }
    dend_9 { pt3dadd( 67.5459, -395.981, -45.339, 0.22 ) }
    dend_9 { pt3dadd( 67.87, -396.536, -45.6934, 0.59 ) }
    dend_9 { pt3dadd( 68.318, -397.205, -46.1118, 0.22 ) }
    dend_9 { pt3dadd( 68.9606, -398.069, -46.66, 0.15 ) }
    dend_9 { pt3dadd( 69.2717, -398.463, -46.9068, 0.15 ) }
    dend_9 { pt3dadd( 69.5688, -398.85, -47.1301, 0.37 ) }
    dend_9 { pt3dadd( 69.9461, -399.431, -47.4357, 0.66 ) }
    dend_9 { pt3dadd( 70.2462, -400.122, -47.7748, 0.22 ) }
    dend_9 { pt3dadd( 70.3736, -400.764, -48.047, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( 70.3858, -401.307, -48.2323, 0.15 ) }
    dend_9 { pt3dadd( 70.3509, -401.859, -48.4029, 0.29 ) }
    dend_9 { pt3dadd( 70.288, -402.376, -48.5559, 0.88 ) }
    dend_9 { pt3dadd( 70.1324, -403.454, -48.8561, 0.22 ) }
    dend_9 { pt3dadd( 70.0088, -404.227, -49.0314, 0.15 ) }
    dend_9 { pt3dadd( 69.8927, -405.029, -49.1853, 0.15 ) }
    dend_9 { pt3dadd( 69.8517, -405.388, -49.2491, 0.15 ) }
    dend_9 { pt3dadd( 69.7969, -406.113, -49.3736, 0.22 ) }
    dend_9 { pt3dadd( 69.7437, -407.231, -49.5899, 0.15 ) }
    dend_9 { pt3dadd( 69.6913, -408.713, -49.9044, 0.15 ) }
    dend_9 { pt3dadd( 69.6628, -409.158, -50.0072, 0.37 ) }
    dend_9 { pt3dadd( 69.6105, -409.81, -50.1948, 0.37 ) }
    dend_9 { pt3dadd( 69.5458, -410.621, -50.4657, 0.22 ) }
    dend_9 { pt3dadd( 69.5056, -411.51, -50.8023, 0.22 ) }
    dend_9 { pt3dadd( 69.5201, -412.174, -51.0866, 0.66 ) }
    dend_9 { pt3dadd( 69.6148, -412.907, -51.4471, 0.66 ) }
    dend_9 { pt3dadd( 69.856, -414.089, -52.0372, 0.15 ) }
    dend_9 { pt3dadd( 69.9482, -414.485, -52.245, 0.15 ) }
    dend_9 { pt3dadd( 70.1716, -415.339, -52.7019, 0.59 ) }
    dend_9 { pt3dadd( 70.3777, -416.034, -53.0793, 0.15 ) }
    dend_9 { pt3dadd( 70.6521, -416.857, -53.549, 0.15 ) }
    dend_9 { pt3dadd( 70.8727, -417.431, -53.9072, 0.44 ) }
    dend_9 { pt3dadd( 71.2675, -418.453, -54.6087, 0.15 ) }
    dend_9 { pt3dadd( 71.3934, -418.806, -54.8787, 0.15 ) }
    dend_9 { pt3dadd( 71.5081, -419.232, -55.2403, 0.15 ) }
    dend_9 { pt3dadd( 71.5757, -419.653, -55.6261, 0.37 ) }
    dend_9 { pt3dadd( 71.6171, -420.4, -56.3442, 0.44 ) }
    dend_9 { pt3dadd( 71.597, -421.174, -57.1173, 0.22 ) }
    dend_9 { pt3dadd( 71.5618, -421.452, -57.3788, 0.22 ) }
    dend_9 { pt3dadd( 71.4292, -421.983, -57.8285, 0.15 ) }
    dend_9 { pt3dadd( 71.2323, -422.519, -58.2214, 0.15 ) }
    dend_9 { pt3dadd( 71.1226, -422.748, -58.3695, 0.15 ) }
    dend_9 { pt3dadd( 70.8907, -423.17, -58.6063, 0.29 ) }
    dend_9 { pt3dadd( 70.5152, -423.851, -58.9834, 0.37 ) }
    dend_9 { pt3dadd( 70.1816, -424.509, -59.3474, 0.22 ) }
    dend_9 { pt3dadd( 69.8539, -425.299, -59.7645, 0.15 ) }
    dend_9 { pt3dadd( 69.5273, -426.182, -60.2212, 0.29 ) }
    dend_9 { pt3dadd( 69.2478, -426.984, -60.6477, 0.15 ) }
    dend_9 { pt3dadd( 69.0751, -427.493, -60.9251, 0.15 ) }
    dend_9 { pt3dadd( 68.8505, -428.154, -61.286, 0.52 ) }
    dend_9 { pt3dadd( 68.4787, -429.188, -61.862, 0.15 ) }
    dend_9 { pt3dadd( 68.2258, -429.897, -62.2829, 0.15 ) }
    dend_9 { pt3dadd( 67.8983, -430.85, -62.956, 0.15 ) }
    dend_9 { pt3dadd( 67.7044, -431.396, -63.4198, 0.52 ) }
    dend_9 { pt3dadd( 67.5094, -431.858, -63.8656, 0.52 ) }
    dend_9 { pt3dadd( 67.1362, -432.64, -64.7167, 0.15 ) }
    dend_9 { pt3dadd( 66.9136, -433.038, -65.2163, 0.15 ) }
    dend_9 { pt3dadd( 66.4272, -433.865, -66.3839, 0.15 ) }
    dend_9 { pt3dadd( 66.1722, -434.288, -67.0727, 0.29 ) }
    dend_9 { pt3dadd( 65.904, -434.771, -67.9711, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 64.1371, -374.1, -32.5307, 0.88 ) }
    dend_8 { pt3dadd( 63.7789, -375.138, -32.3059, 0.88 ) }
    dend_8 { pt3dadd( 63.3678, -376.409, -32.1104, 0.22 ) }
    dend_8 { pt3dadd( 63.0193, -377.635, -31.9745, 0.15 ) }
    dend_8 { pt3dadd( 62.762, -378.679, -31.8871, 0.15 ) }
    dend_8 { pt3dadd( 62.6369, -379.288, -31.8509, 0.37 ) }
    dend_8 { pt3dadd( 62.4898, -380.215, -31.8205, 1.03 ) }
    dend_8 { pt3dadd( 62.3716, -381.481, -31.8242, 0.44 ) }
    dend_8 { pt3dadd( 62.3554, -382.631, -31.8867, 0.15 ) }
    dend_8 { pt3dadd( 62.3874, -383.248, -31.9298, 0.15 ) }
    dend_8 { pt3dadd( 62.4616, -384.023, -31.9776, 0.37 ) }
    dend_8 { pt3dadd( 62.5844, -385.172, -32.0319, 0.15 ) }
    dend_8 { pt3dadd( 62.639, -385.848, -32.0535, 0.29 ) }
    dend_8 { pt3dadd( 62.6653, -387.218, -32.0927, 0.07 ) }
    dend_8 { pt3dadd( 62.5864, -388.363, -32.1797, 0.07 ) }
    dend_8 { pt3dadd( 62.4151, -389.496, -32.2841, 0.07 ) }
    dend_8 { pt3dadd( 62.2468, -390.165, -32.3589, 0.29 ) }
    dend_8 { pt3dadd( 61.8076, -391.428, -32.5354, 0.07 ) }
    dend_8 { pt3dadd( 61.3864, -392.395, -32.6801, 0.59 ) }
    dend_8 { pt3dadd( 60.7075, -393.698, -32.8686, 0.15 ) }
    dend_8 { pt3dadd( 60.2446, -394.514, -32.9577, 0.15 ) }
    dend_8 { pt3dadd( 59.5754, -395.666, -32.9837, 0.15 ) }
    dend_8 { pt3dadd( 59.2358, -396.287, -32.9526, 0.37 ) }
    dend_8 { pt3dadd( 58.6361, -397.517, -32.8001, 0.07 ) }
    dend_8 { pt3dadd( 58.308, -398.311, -32.6483, 0.22 ) }
    dend_8 { pt3dadd( 57.9807, -399.267, -32.4523, 0.07 ) }
    dend_8 { pt3dadd( 57.6754, -400.262, -32.2859, 0.07 ) }
    dend_8 { pt3dadd( 57.4167, -401.17, -32.1653, 0.59 ) }
    dend_8 { pt3dadd( 57.0265, -402.534, -32.0706, 0.15 ) }
    dend_8 { pt3dadd( 56.7213, -403.587, -32.0735, 0.74 ) }
    dend_8 { pt3dadd( 56.1705, -405.326, -32.2051, 0.07 ) }
    dend_8 { pt3dadd( 55.6874, -406.725, -32.3642, 0.07 ) }
    dend_8 { pt3dadd( 55.2559, -407.863, -32.5318, 0.29 ) }
    dend_8 { pt3dadd( 54.5911, -409.462, -32.7999, 0.07 ) }
    dend_8 { pt3dadd( 54.1854, -410.363, -32.9739, 0.44 ) }
    dend_8 { pt3dadd( 53.2844, -412.21, -33.3629, 0.07 ) }
    dend_8 { pt3dadd( 52.9192, -412.919, -33.5209, 0.07 ) }
    dend_8 { pt3dadd( 52.4011, -413.913, -33.7319, 0.37 ) }
    dend_8 { pt3dadd( 51.5545, -415.578, -34.0502, 0.07 ) }
    dend_8 { pt3dadd( 50.715, -417.292, -34.3524, 0.07 ) }
    dend_8 { pt3dadd( 50.2127, -418.397, -34.5391, 0.37 ) }
    dend_8 { pt3dadd( 49.6029, -419.931, -34.7955, 0.15 ) }
    dend_8 { pt3dadd( 49.1146, -421.391, -35.0509, 0.07 ) }
    dend_8 { pt3dadd( 48.7883, -422.467, -35.2238, 0.22 ) }
    dend_8 { pt3dadd( 48.5846, -423.278, -35.3395, 0.52 ) }
    dend_8 { pt3dadd( 48.438, -424.141, -35.4527, 0.88 ) }
    dend_8 { pt3dadd( 48.3328, -425.381, -35.6017, 0.44 ) }
    dend_8 { pt3dadd( 48.3663, -426.505, -35.746, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_34 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_24 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_50 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_2 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_49 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_55 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_54 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_40 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 3
    dend_36 nseg = 15
    dend_34 nseg = 11
    dend_33 nseg = 3
    dend_31 nseg = 5
    dend_26 nseg = 13
    dend_47 nseg = 5
    dend_38 nseg = 9
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_56 nseg = 5
    dend_12 nseg = 3
    dend_3 nseg = 3
    dend_51 nseg = 7
    dend_50 nseg = 7
    dend_20 nseg = 3
    dend_11 nseg = 3
    dend_4 nseg = 15
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_NBC_4a41f068df_0_0


