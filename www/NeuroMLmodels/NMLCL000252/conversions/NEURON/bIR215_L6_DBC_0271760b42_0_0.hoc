// Cell: bIR215_L6_DBC_0271760b42_0_0
/*
{
  "id" : "bIR215_L6_DBC_0271760b42_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -3.92838, -7.44048, 0.74", "-6.8285, -3.92838, -7.44048, 0.74", "-7.15856, -4.53722, -7.51185, 0.74", "-7.18689, -4.57047, -7.51621, 0.74", "-7.76572, -5.01808, -7.58012, 0.66", "-8.34343, -5.32487, -7.62619, 0.44", "-9.02453, -5.58748, -7.66568, 0.44", "-9.67288, -5.7281, -7.76509, 0.44", "-10.0945, -5.77868, -7.85435, 1.03", "-10.6223, -5.83226, -8.01732, 1.33", "-11.0948, -5.85928, -8.20246, 1.47", "-11.5649, -5.8973, -8.44566, 0.66", "-12.4647, -6.16362, -9.19548, 0.37", "-12.6615, -6.3201, -9.50185, 0.37", "-12.9281, -6.69593, -10.1314, 1.11", "-12.9401, -6.72291, -10.1725, 1.11", "-13.0094, -6.96677, -10.5086, 0.88", "-13.1055, -7.51546, -11.1885, 0.59", "-13.2043, -8.24817, -11.9842, 1.03", "-13.2214, -8.37457, -12.1292, 1.25", "-13.2294, -8.41834, -12.1781, 1.25", "-13.2733, -8.61061, -12.394, 1.25", "-13.2912, -8.66247, -12.455, 1.25", "-13.5502, -9.17387, -13.0362, 0.52", "-13.8448, -9.55834, -13.4708, 0.22", "-14.0391, -9.69654, -13.6763, 0.22", "-14.1777, -9.75383, -13.7878, 0.22", "-14.5187, -9.84153, -14.0104, 0.88", "-14.7522, -9.89678, -14.1343, 1.25", "-15.1137, -9.99008, -14.299, 1.25", "-15.8664, -10.2545, -14.6952, 0.29", "-16.0788, -10.3661, -14.837, 0.29", "-16.3902, -10.6063, -15.0884, 0.29", "-16.7284, -10.9567, -15.4002, 0.29", "-17.0584, -11.3635, -15.7395, 0.29", "-17.3681, -11.8035, -16.079, 0.52", "-17.4878, -11.9995, -16.2153, 0.52", "-17.5939, -12.1537, -16.3252, 0.29", "-17.7591, -12.3624, -16.5354, 0.29", "-17.9668, -12.5859, -16.8278, 1.25", "-18.1168, -12.7266, -17.0323, 1.47", "-18.1403, -12.748, -17.0655, 1.47", "-18.253, -12.8563, -17.2429, 1.47", "-18.9035, -13.5361, -18.4236, 0.22", "-19.0049, -13.6598, -18.6362, 0.81", "-19.1284, -13.8182, -18.8994, 0.81", "-19.1453, -13.8382, -18.9349, 0.81", "-19.3194, -14.0124, -19.2607, 0.96", "-19.715, -14.3615, -19.9751, 0.29", "-19.741, -14.3802, -20.0164, 0.29", "-19.893, -14.514, -20.2871, 0.29", "-20.3162, -15.0302, -21.13, 1.92", "-20.5332, -15.3667, -21.6001, 2.58", "-20.7404, -15.7542, -22.0838, 2.58", "-20.7552, -15.7822, -22.1144, 2.58", "-21.1707, -16.5609, -22.8766, 0.66", "-21.4964, -17.0894, -23.3517, 0.22", "-21.5652, -17.1818, -23.421, 0.81", "-21.9754, -17.6449, -23.7658, 0.22", "-22.4706, -18.1443, -24.1274, 2.58", "-22.7069, -18.3589, -24.292, 3.32", "-23.608, -19.0975, -24.8891, 0.44", "-24.0784, -19.4837, -25.2085, 1.33", "-24.4406, -19.8136, -25.4626, 1.47", "-24.8305, -20.2587, -25.7847, 0.22", "-24.8705, -20.3153, -25.8264, 0.22", "-25.1101, -20.6827, -26.093, 0.22", "-25.3434, -21.093, -26.3647, 1.69", "-25.4329, -21.2397, -26.4625, 2.06", "-26.0862, -22.1254, -27.1625, 0.22", "-26.1098, -22.1522, -27.1878, 0.22", "-26.4018, -22.4806, -27.5312, 0.22", "-26.5494, -22.6455, -27.7177, 0.88", "-26.6915, -22.8331, -27.9537, 1.11", "-27.2778, -23.6918, -29.0423, 0.22", "-27.2946, -23.7206, -29.0802, 0.22", "-27.4925, -24.1059, -29.5957, 1.84", "-27.5774, -24.3034, -29.8577, 1.99", "-27.9391, -25.2385, -31.0411, 0.29", "-28.0468, -25.5134, -31.3573, 0.29", "-28.4158, -26.2792, -32.1476, 0.29", "-28.4589, -26.356, -32.227, 0.29", "-28.7456, -26.773, -32.6583, 1.11", "-28.9028, -26.969, -32.8783, 1.47", "-29.3149, -27.4156, -33.3995, 0.29", "-29.8702, -27.9569, -34.0738, 2.43", "-30.3214, -28.3383, -34.5693, 2.43", "-31.0198, -28.8624, -35.315, 0.52", "-31.543, -29.208, -35.8652, 0.66", "-31.9657, -29.461, -36.3063, 0.22", "-32.1843, -29.577, -36.5222, 0.59", "-32.391, -29.6809, -36.7053, 0.59", "-32.8824, -29.9445, -37.0917, 0.22", "-33.229, -30.1756, -37.3554, 1.18", "-33.3834, -30.3058, -37.466, 1.33", "-34.0006, -30.9357, -37.9632, 0.37", "-34.3633, -31.3617, -38.2807, 0.22", "-34.657, -31.742, -38.5446, 0.22", "-34.994, -32.2233, -38.847, 1.55", "-35.2116, -32.5604, -39.0436, 2.06", "-35.7707, -33.507, -39.564, 0.22", "-35.8838, -33.7101, -39.6649, 0.52", "-36.0012, -33.8939, -39.7573, 0.52", "-36.3695, -34.4079, -40.0156, 0.22", "-36.5782, -34.6858, -40.1506, 0.22", "-36.8075, -34.9882, -40.3119, 1.11", "-37.004, -35.24, -40.446, 1.33", "-37.5918, -35.9564, -40.8711, 0.22", "-37.8003, -36.1939, -41.023, 1.03", "-37.9175, -36.314, -41.1072, 1.03", "-38.5494, -36.9331, -41.5488, 0.22", "-38.7799, -37.1607, -41.7044, 0.22", "-38.9784, -37.3589, -41.8341, 1.18", "-39.1637, -37.537, -41.9481, 1.4", "-39.8964, -38.2174, -42.4396, 0.22", "-40.137, -38.4338, -42.5981, 1.11", "-40.3172, -38.592, -42.7125, 1.33", "-40.4726, -38.7362, -42.8219, 1.18", "-41.0738, -39.3295, -43.2655, 0.15", "-41.586, -39.8582, -43.6513, 0.15", "-41.7833, -40.067, -43.7967, 0.81", "-41.9036, -40.199, -43.9029, 0.81", "-42.3996, -40.7589, -44.3706, 0.22", "-42.8061, -41.2348, -44.7647, 0.22", "-43.1765, -41.6835, -45.1304, 1.47", "-43.3371, -41.8714, -45.295, 1.84", "-44.2022, -42.8601, -46.3062, 0.15", "-44.413, -43.0858, -46.5665, 0.15", "-44.5416, -43.2155, -46.7392, 0.74", "-44.6027, -43.2735, -46.8242, 0.74", "-45.0887, -43.6958, -47.4949, 0.29", "-45.5231, -44.0462, -48.0709, 1.25", "-45.6922, -44.1737, -48.2748, 1.33", "-46.2357, -44.6026, -49.0499, 0.15", "-46.4021, -44.7391, -49.308, 0.74", "-46.7523, -45.0346, -49.8679, 0.22", "-46.7709, -45.0505, -49.8968, 0.22", "-46.9182, -45.1756, -50.1181, 0.88", "-47.7527, -45.8831, -51.3589, 0.22", "-47.7801, -45.9061, -51.3967, 0.22", "-47.8608, -45.9693, -51.4899, 0.22", "-48.2213, -46.2306, -51.817, 1.47", "-48.3894, -46.3436, -51.9372, 1.84", "-48.5382, -46.4405, -52.017, 1.84", "-48.7128, -46.5516, -52.0771, 1.84", "-49.4736, -47.0929, -52.522, 0.15", "-49.5219, -47.1266, -52.5565, 0.15", "-49.9119, -47.3733, -52.8651, 0.15", "-50.246, -47.585, -53.1411, 0.96", "-50.4504, -47.7229, -53.316, 0.96", "-51.5188, -48.4949, -54.2686, 0.22", "-51.7945, -48.7202, -54.5312, 0.22", "-52.1376, -49.0173, -54.8552, 0.22", "-52.5254, -49.3671, -55.2051, 1.11", "-52.7837, -49.6126, -55.4281, 1.69", "-52.868, -49.7021, -55.496, 1.69", "-53.5986, -50.6011, -56.0492, 0.22", "-53.8561, -50.957, -56.2605, 0.37", "-54.0981, -51.3044, -56.4674, 0.22", "-54.4308, -51.7619, -56.7414, 1.47", "-54.6672, -52.0665, -56.9473, 1.69", "-55.272, -52.8183, -57.4725, 0.22", "-55.7833, -53.471, -57.9195, 0.22", "-56.0389, -53.7991, -58.156, 1.4", "-56.2822, -54.1111, -58.3886, 1.84", "-57.0731, -55.0887, -59.146, 0.15", "-57.3514, -55.4159, -59.4157, 0.15", "-57.6158, -55.7102, -59.6726, 1.18", "-57.7599, -55.87, -59.8178, 1.18", "-57.7805, -55.8936, -59.8386, 1.18", "-58.4267, -56.686, -60.4937, 0.22", "-58.7283, -57.0971, -60.7784, 1.25", "-59.1581, -57.6895, -61.1998, 0.15", "-59.3325, -57.9056, -61.3672, 0.88", "-59.4232, -58.0118, -61.4499, 1.03", "-59.7063, -58.3306, -61.6912, 0.15", "-60.03, -58.6793, -61.9399, 0.15", "-60.2912, -58.9337, -62.1456, 0.74", "-60.7867, -59.3752, -62.5312, 0.22", "-61.2134, -59.7567, -62.8627, 0.22", "-61.596, -60.1008, -63.1589, 1.99", "-61.7689, -60.261, -63.292, 2.28", "-62.7286, -61.215, -64.0197, 0.22", "-62.8605, -61.3655, -64.1214, 0.52", "-63.2952, -61.8985, -64.4394, 0.15", "-63.3208, -61.9293, -64.4577, 0.15", "-63.5226, -62.1598, -64.5846, 0.81", "-63.546, -62.1863, -64.5965, 0.81", "-64.2013, -62.923, -64.8321, 0.22", "-64.6822, -63.4689, -65.0397, 0.22", "-64.7147, -63.5043, -65.0544, 0.22", "-65.175, -64.0263, -65.2684, 0.22", "-65.4964, -64.3966, -65.4401, 0.81", "-65.5258, -64.4328, -65.457, 0.81", "-66.0159, -65.0921, -65.7854, 0.22", "-66.3006, -65.4805, -65.9895, 1.47", "-66.404, -65.6185, -66.061, 1.77", "-67.1908, -66.6432, -66.5941, 0.22", "-67.4233, -66.9257, -66.7439, 0.52", "-67.954, -67.5323, -67.0566, 0.22", "-68.6053, -68.2259, -67.4006, 0.22", "-68.9406, -68.5707, -67.5772, 1.18", "-69.0424, -68.6741, -67.6292, 1.4", "-69.8324, -69.4988, -68.0879, 0.15", "-70.0114, -69.6915, -68.205, 0.66", "-70.8921, -70.6786, -68.8362, 0.15", "-71.3139, -71.1706, -69.1839, 1.69", "-71.4438, -71.3244, -69.297, 1.84", "-72.3871, -72.4884, -70.163, 0.22", "-72.562, -72.7191, -70.3414, 0.66", "-72.5859, -72.7538, -70.3708, 0.66", "-72.8224, -73.118, -70.7083, 0.15", "-72.9254, -73.2663, -70.8501, 0.59", "-72.9585, -73.3114, -70.8942, 0.59", "-73.3585, -73.8339, -71.3909, 0.22", "-73.722, -74.2969, -71.8589, 1.33", "-74.1024, -74.7922, -72.3672, 0.15", "-74.2745, -75.033, -72.6175, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.26762, -8.94048, 1.18", "4.32723, 6.19415, -8.62922, 1.18", "4.37364, 7.49158, -8.22154, 1.47", "4.40129, 8.50123, -8.01772, 1.92", "4.41656, 9.86738, -7.89666, 0.81", "4.4119, 11.002, -7.89853, 0.81", "4.40077, 11.7269, -7.95564, 0.74", "4.39488, 11.8454, -7.99192, 0.74", "4.26656, 13.1993, -8.71314, 0.74", "4.18321, 13.9442, -9.2821, 1.11", "4.13743, 14.3906, -9.72969, 1.11", "4.09067, 15.0399, -10.4595, 1.11", "4.07326, 16.2366, -11.761, 1.25", "4.07455, 16.2804, -11.8068, 1.25", "4.18336, 17.3546, -12.8694, 1.03", "4.37653, 18.5452, -13.9824, 0.52", "4.65015, 19.7675, -15.0334, 0.52", "4.88863, 20.5885, -15.6603, 0.81", "4.90732, 20.6403, -15.6904, 0.81", "5.16148, 21.2622, -15.9878, 1.18", "5.2981, 21.5173, -16.0528, 1.18", "5.51052, 21.8388, -16.0544, 1.18", "5.55405, 21.8984, -16.0487, 1.18", "5.71042, 22.1255, -16.0327, 1.4", "5.79407, 22.2751, -16.0211, 1.4", "6.03885, 22.8333, -15.9747, 1.4", "6.23392, 23.4152, -15.9194, 0.88", "6.42323, 24.331, -15.8242, 0.52", "6.46277, 25.1771, -15.8167, 0.37", "6.38471, 26.0727, -15.9239, 0.37", "6.30892, 26.4716, -16.0126, 0.29", "6.10362, 27.1805, -16.2448, 0.29", "5.96112, 27.5953, -16.4489, 0.29", "5.52254, 28.92, -17.4721, 1.33", "5.28425, 29.6587, -18.1393, 1.92", "5.23851, 29.8423, -18.3238, 2.21", "5.21771, 29.9832, -18.4703, 2.21", "5.19164, 30.7547, -19.2904, 2.5", "5.23479, 31.7633, -20.4351, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 9.48563, -2.50048, 3.68", "1.6115, 9.48563, -2.50048, 3.68", "0.993206, 11.3413, -2.80663, 2.8", "0.951365, 11.4639, -2.83306, 2.8", "0.694346, 12.2103, -3.00499, 2.8", "0.578594, 12.5312, -3.08214, 2.8", "0.312136, 13.2535, -3.26151, 2.8", "-0.0895769, 14.2854, -3.54239, 3.02", "-0.652039, 15.6141, -3.96501, 3.02", "-0.67374, 15.6623, -3.98272, 3.02", "-1.14884, 16.6485, -4.37607, 3.02", "-1.17193, 16.6956, -4.39515, 3.02", "-1.70831, 17.7701, -4.84477, 2.87", "-2.20673, 18.8138, -5.23026, 2.87", "-2.22929, 18.8628, -5.24357, 2.87", "-2.69688, 19.9287, -5.46646, 2.73", "-3.18463, 21.0721, -5.64297, 2.58", "-3.20997, 21.1311, -5.65044, 2.58", "-3.9075, 22.7462, -5.80003, 2.36", "-4.60699, 24.323, -5.91613, 2.06", "-5.24676, 25.6954, -6.01115, 2.06", "-5.66329, 26.5724, -6.07037, 2.65", "-6.40653, 28.094, -6.16343, 2.73", "-7.01525, 29.3107, -6.24122, 2.95", "-7.58181, 30.3802, -6.32418, 3.17", "-8.10015, 31.3134, -6.41034, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -10.1699, 0.999524, 4.05", "-3.5085, -10.1699, 0.999524, 4.05", "-4.00748, -11.355, 0.999524, 3.68", "-4.48457, -12.488, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.532277", "8.20573, 24.4316, -1.24848, 0.532277", "13.1806, 38.5826, -1.24848, 0.532277" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.23479, 31.7633, -20.4351, 1.25", "5.03585, 32.3221, -21.0926, 1.25", "4.87772, 32.8787, -21.7176, 1.77", "4.8449, 33.0147, -21.8679, 1.84", "4.79502, 33.7571, -22.7783, 0.22", "4.86422, 34.2802, -23.4939, 1.33", "4.87337, 34.307, -23.5369, 1.33", "4.95403, 34.4362, -23.7732, 1.77", "4.9848, 34.473, -23.8437, 1.77", "5.57028, 35.0465, -25.0167, 1.18", "6.03256, 35.4207, -25.8393, 1.4", "6.71619, 35.8928, -27.0835, 0.29", "6.73539, 35.9056, -27.1197, 0.29", "7.29976, 36.2822, -28.2037, 1.55", "7.36705, 36.3323, -28.3413, 1.84", "7.38635, 36.3505, -28.3836, 1.84", "8.20661, 37.3456, -30.3244, 0.52", "8.22338, 37.3734, -30.3642, 0.52", "8.30928, 37.5538, -30.5756, 0.74", "8.82243, 38.8799, -31.9021, 1.47", "9.03108, 39.5307, -32.4387, 0.29", "9.1984, 40.1742, -32.8597, 1.69", "9.48382, 41.6618, -33.6654, 0.15", "9.55307, 42.1122, -33.911, 0.66", "9.55802, 42.1542, -33.9342, 0.66", "9.63076, 42.9618, -34.4027, 0.15", "9.67498, 43.533, -34.7815, 1.69", "9.76104, 45.2012, -35.966, 0.22", "9.77397, 45.6113, -36.2887, 0.59", "9.80538, 46.4916, -37.0289, 1.92", "9.85581, 47.8597, -38.2314, 0.15", "9.8585, 47.9319, -38.2983, 0.15", "9.88164, 48.2603, -38.6113, 0.37", "9.93491, 48.7663, -39.1157, 0.22", "10.0216, 49.3017, -39.719, 1.11", "10.0271, 49.3338, -39.7584, 1.11", "10.0629, 49.5528, -40.0399, 1.25", "10.2119, 50.4432, -41.2304, 0.22", "10.308, 51.0461, -42.0486, 0.96", "10.3852, 51.7138, -42.9163, 0.15", "10.4363, 52.2756, -43.6023, 1.18", "10.4417, 52.3852, -43.7266, 1.47", "10.4409, 53.191, -44.5313, 0.22", "10.4201, 53.4274, -44.7197, 0.44", "10.3533, 53.8942, -45.0139, 0.15", "10.2205, 54.5306, -45.3513, 1.11", "10.1533, 54.8034, -45.4815, 1.47", "9.86876, 55.9629, -45.9582, 0.22", "9.75322, 56.4243, -46.1191, 0.74", "9.58121, 57.1313, -46.357, 0.15", "9.45541, 57.6816, -46.5344, 1.11", "9.40153, 57.9172, -46.6057, 1.55", "8.93422, 60.016, -47.2115, 0.15", "8.82797, 60.5006, -47.3387, 0.66", "8.78132, 60.7375, -47.4005, 0.66", "8.53721, 62.1259, -47.7569, 0.15", "8.46402, 62.5665, -47.8639, 0.37", "8.45411, 62.625, -47.8783, 0.37", "8.40266, 62.8693, -47.9394, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.23479, 31.7633, -20.4351, 0.37", "5.64, 33.3576, -20.5419, 0.37", "5.90567, 34.7761, -20.6574, 0.37", "6.06098, 36.0231, -20.7734, 0.37", "6.06484, 36.1075, -20.7823, 0.37", "6.03611, 36.7001, -20.8541, 0.37", "6.02862, 36.7723, -20.8667, 0.37", "5.7726, 37.6044, -21.1159, 0.66", "5.62942, 37.891, -21.2291, 0.81", "5.39812, 38.3683, -21.4241, 0.81", "5.19231, 38.8908, -21.617, 0.37", "4.94005, 39.729, -21.8744, 0.29", "4.9246, 39.7996, -21.8928, 0.29", "4.78943, 40.6752, -22.0884, 0.29", "4.62614, 42.0982, -22.3543, 1.84", "4.58173, 42.6442, -22.435, 2.36", "4.51171, 43.8867, -22.573, 1.55", "4.43925, 45.3185, -22.6815, 1.92", "4.42481, 45.8773, -22.717, 2.5", "4.43868, 46.7704, -22.7706, 1.99", "4.50435, 48.0605, -22.8378, 0.22", "4.54748, 48.8929, -22.8936, 0.22", "4.57147, 49.4757, -22.937, 0.88", "4.57828, 49.967, -22.9824, 0.59", "4.56491, 50.8657, -23.0807, 0.29", "4.52275, 51.8646, -23.2027, 0.29", "4.45338, 53.0276, -23.3512, 0.29", "4.38652, 54.0481, -23.4875, 0.29", "4.31535, 55.1426, -23.6287, 1.18", "4.27884, 55.7987, -23.6987, 1.84", "4.259, 56.4587, -23.7537, 1.4", "4.27163, 57.1801, -23.8046, 0.88", "4.33517, 58.4472, -23.8842, 0.29", "4.40438, 59.5501, -23.9444, 0.29", "4.534, 61.3517, -24.0161, 2.14", "4.58543, 62.0822, -24.0448, 3.09", "4.63042, 62.7706, -24.0701, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.10015, 31.3134, -6.41034, 1.62", "-8.49862, 33.1514, -6.80483, 1.62", "-8.50527, 33.2182, -6.81464, 1.62", "-8.59907, 34.1598, -6.95291, 1.62", "-8.61919, 34.3618, -6.98258, 1.62", "-8.71018, 35.2752, -7.11671, 1.62", "-8.71613, 35.335, -7.12549, 1.62", "-8.62881, 36.8066, -7.13652, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.10015, 31.3134, -6.41034, 0.66", "-6.23789, 34.2689, -5.27649, 0.66", "-5.56498, 35.2385, -5.16159, 0.59", "-4.92148, 36.1239, -5.15412, 1.03", "-4.80049, 36.2945, -5.16433, 1.03", "-4.53319, 36.7046, -5.20481, 1.18", "-3.60814, 38.3469, -5.42864, 0.81", "-3.03455, 39.4651, -5.79053, 0.66", "-2.99479, 39.5582, -5.82234, 0.66", "-2.64012, 40.6289, -6.09868, 0.66", "-2.32458, 41.8635, -6.31299, 0.88", "-2.03589, 43.5515, -6.46762, 1.4", "-1.99503, 43.9828, -6.47088, 1.77", "-1.94856, 44.9298, -6.42806, 2.14", "-1.88045, 46.7627, -6.14814, 1.77", "-1.78722, 47.954, -5.75086, 1.25", "-1.66665, 48.91, -5.27726, 1.03", "-1.49071, 49.6955, -4.73288, 0.81", "-1.18588, 50.6825, -3.90483, 0.81", "-0.535987, 52.1454, -2.39398, 0.59", "0.3399, 53.5048, -0.692963, 0.59", "0.384815, 53.5587, -0.609303, 0.59", "1.0692, 54.185, 0.599115, 1.77", "1.10944, 54.2116, 0.665283, 1.77", "1.55576, 54.383, 1.29964, 1.92", "1.62034, 54.3886, 1.37046, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.48457, -12.488, 0.999524, 0.37", "-6.04974, -13.2758, 0.522028, 0.37", "-6.99503, -13.9502, 0.437434, 0.37", "-8.16382, -15.1539, 0.742125, 0.37", "-8.5714, -15.8499, 1.17535, 0.66", "-8.76501, -16.2897, 1.53205, 0.96", "-8.78969, -16.3427, 1.59009, 0.96", "-9.26625, -17.835, 3.73328, 0.59", "-9.27586, -17.8679, 3.79266, 0.59", "-9.44694, -18.2397, 4.68691, 1.25", "-9.52999, -18.3292, 4.94738, 1.25", "-10.2292, -18.8135, 6.38775, 0.59", "-10.5787, -19.0246, 6.90508, 0.96", "-10.6394, -19.0567, 6.96729, 0.96", "-11.1695, -19.4717, 7.61696, 0.96", "-11.5667, -19.9522, 8.20985, 0.59", "-11.8179, -20.5345, 8.79969, 0.29", "-11.9243, -21.2521, 9.43341, 0.29", "-11.9865, -21.8981, 10.0354, 1.11", "-12.1114, -23.149, 11.2552, 0.22", "-12.1479, -23.4565, 11.5654, 1.25", "-12.2768, -23.942, 12.0915, 1.55", "-12.3274, -24.0321, 12.1966, 1.55", "-13.2474, -24.8179, 13.1947, 0.59", "-13.5964, -25.041, 13.4548, 0.74", "-14.1904, -25.3631, 13.7968, 0.74", "-15.0247, -25.815, 14.2579, 0.59", "-15.1463, -25.8974, 14.3296, 0.59", "-15.8646, -26.7173, 14.8744, 0.59", "-16.0325, -27.2626, 15.1882, 1.11", "-16.0891, -27.6912, 15.4673, 1.18", "-16.096, -27.7855, 15.5328, 1.18", "-16.2154, -28.8084, 16.3218, 0.59", "-16.4098, -29.6242, 17.02, 0.59", "-16.8298, -30.4306, 17.8254, 0.44", "-17.304, -30.8388, 18.3964, 0.74", "-17.7848, -31.0297, 18.8018, 0.88", "-18.8555, -31.2363, 19.5215, 0.44", "-19.4497, -31.2675, 19.8223, 0.44", "-20.1832, -31.275, 20.1189, 0.44", "-20.25, -31.2777, 20.1375, 0.44", "-21.1022, -31.3909, 20.3136, 0.88", "-21.1932, -31.4124, 20.3312, 0.88", "-22.2045, -31.7244, 20.4723, 1.18", "-22.69, -31.9038, 20.5278, 1.11", "-23.4423, -32.2036, 20.5896, 0.59", "-24.1495, -32.5032, 20.6231, 0.44", "-24.2123, -32.5313, 20.6232, 0.44", "-25.1613, -33.0354, 20.6227, 0.66", "-25.7909, -33.4768, 20.6261, 0.37", "-26.164, -33.8527, 20.6387, 1.03", "-26.355, -34.1762, 20.6558, 1.03", "-26.3982, -34.3129, 20.6641, 1.03", "-26.6708, -35.5593, 20.7471, 0.37", "-26.728, -36.2848, 20.8071, 0.44", "-26.7213, -36.8535, 20.8628, 0.74", "-26.6864, -37.3197, 20.9146, 0.88", "-26.6003, -38.1716, 21.0238, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.48457, -12.488, 0.999524, 3.09", "-4.4903, -12.5116, 0.999304, 3.09", "-4.65381, -13.188, 1.00928, 2.8", "-4.87128, -14.0927, 1.02622, 2.43", "-5.0465, -14.8216, 1.03987, 2.43", "-5.05443, -14.8546, 1.04048, 2.43", "-5.30527, -15.8981, 1.06002, 2.43", "-5.4406, -16.4643, 1.07574, 2.87", "-5.55225, -16.9271, 1.09878, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.15", "18.1555, 52.7336, -1.24848, 0.15", "23.1303, 66.8846, -1.24848, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.63042, 62.7706, -24.0701, 0.29", "5.21164, 64.0223, -24.2986, 0.29", "5.48785, 64.4935, -24.417, 0.29", "5.78342, 64.9814, -24.5589, 0.37", "5.81173, 65.0277, -24.5734, 0.37", "6.01851, 65.3904, -24.6901, 0.37", "6.03771, 65.4256, -24.7018, 0.37", "6.29014, 65.9642, -24.9326, 0.22", "6.41907, 66.2717, -25.0934, 0.44", "6.42903, 66.3135, -25.1201, 0.44", "6.48639, 66.662, -25.3473, 0.66", "6.49244, 66.6974, -25.3683, 0.66", "6.59354, 67.1242, -25.6217, 0.96", "6.60875, 67.1711, -25.6633, 0.96", "6.82179, 67.7728, -26.2546, 0.22", "6.83567, 67.8123, -26.2946, 0.22", "7.03871, 68.3737, -26.8555, 1.92", "7.25428, 68.8953, -27.3718, 2.36", "8.02106, 70.5516, -28.9927, 0.44", "8.14175, 70.7993, -29.2313, 0.44", "8.23123, 70.9746, -29.3959, 0.44", "8.4211, 71.3571, -29.7332, 0.22", "8.65577, 71.8486, -30.1278, 0.22", "8.92643, 72.4037, -30.5035, 0.74", "8.95102, 72.4487, -30.5298, 0.74", "9.02461, 72.5783, -30.6175, 0.74", "9.40814, 73.2427, -31.1303, 0.22", "9.71423, 73.8165, -31.605, 1.33", "9.94981, 74.3092, -32.0149, 1.77", "10.3725, 75.2533, -32.7958, 0.22", "10.5507, 75.6539, -33.117, 0.22", "10.7898, 76.1907, -33.5294, 0.22", "11.0648, 76.7981, -33.9759, 1.92", "11.1706, 77.04, -34.1389, 2.28", "11.8235, 78.5132, -35.0053, 0.22", "12.0789, 79.0656, -35.2894, 0.22", "12.2648, 79.432, -35.4617, 0.88", "12.3153, 79.5193, -35.4965, 0.88", "12.3745, 79.6052, -35.5263, 0.88", "13.0049, 80.4036, -35.7936, 0.22", "13.4579, 80.9149, -35.9618, 0.22", "13.5146, 80.982, -35.9867, 0.22", "13.9933, 81.5616, -36.2161, 1.33", "14.1877, 81.807, -36.3138, 2.06", "14.4887, 82.2036, -36.4867, 2.06", "15.1952, 83.1927, -36.9367, 0.15", "15.3826, 83.4601, -37.063, 0.74", "15.4093, 83.498, -37.0804, 0.74", "15.5414, 83.6939, -37.1699, 0.74", "15.961, 84.3321, -37.4361, 0.22", "16.1811, 84.6705, -37.5556, 0.59", "16.2072, 84.7104, -37.5682, 0.59", "16.6692, 85.3857, -37.8347, 0.15", "17.0368, 85.9461, -38.0709, 1.55", "17.1291, 86.0924, -38.135, 1.92", "17.1544, 86.1331, -38.1517, 1.92", "17.2764, 86.3456, -38.2437, 1.92", "17.9167, 87.4969, -38.736, 0.22", "18.093, 87.7734, -38.8582, 0.52", "18.1201, 87.8114, -38.8748, 0.52", "18.5382, 88.3016, -39.0794, 0.22", "18.9078, 88.6945, -39.2546, 1.55", "19.1887, 88.9157, -39.3712, 1.55", "20.2196, 89.596, -39.7551, 0.15", "20.256, 89.6184, -39.7692, 0.15", "20.9786, 90.039, -40.0528, 0.15", "22.0551, 90.6216, -40.476, 2.21", "23.6599, 91.4405, -41.0757, 0.22", "23.8392, 91.5324, -41.142, 0.37", "24.5716, 91.9296, -41.3919, 0.22", "24.8314, 92.0815, -41.4738, 0.59", "25.0043, 92.1918, -41.5222, 0.59", "25.5817, 92.6008, -41.6645, 0.22", "25.8009, 92.7872, -41.7318, 0.66", "26.4084, 93.2926, -41.9452, 0.15", "26.8493, 93.6643, -42.114, 1.77", "26.9585, 93.7573, -42.1623, 1.77", "27.9914, 94.6095, -42.6551, 0.22", "28.3989, 94.9004, -42.9064, 0.74", "28.8505, 95.1804, -43.2319, 0.15", "29.1203, 95.3298, -43.4611, 0.74", "29.5655, 95.5798, -43.8732, 0.15", "29.9691, 95.8162, -44.2649, 2.14", "31.2525, 96.6533, -45.6179, 0.37", "31.7688, 97.0595, -46.2058, 1.55", "32.7138, 97.9169, -47.3585, 0.15", "33.1119, 98.3417, -47.8817, 0.15", "33.2981, 98.5744, -48.1462, 1.4", "33.8897, 99.4185, -49.0943, 0.22", "34.1837, 99.8512, -49.5877, 1.33", "34.2369, 99.9152, -49.6699, 1.62", "35.042, 100.62, -50.7165, 0.15", "35.5918, 100.984, -51.3543, 1.18", "36.5422, 101.486, -52.3536, 0.88", "37.4427, 101.858, -53.1813, 0.44", "38.2803, 102.163, -53.8702, 1.77", "39.163, 102.464, -54.483, 0.22", "39.2138, 102.48, -54.5092, 0.22", "39.5324, 102.587, -54.617, 0.66", "40.2259, 102.867, -54.7156, 0.15", "40.6997, 103.13, -54.7204, 1.11", "40.9838, 103.343, -54.714, 1.11", "41.0268, 103.38, -54.7124, 1.11", "41.5103, 103.808, -54.6993, 0.22", "41.7344, 104.0, -54.6971, 0.59", "42.3072, 104.484, -54.6984, 0.22", "42.8095, 104.899, -54.7154, 1.4", "42.8537, 104.935, -54.7169, 1.4", "42.9274, 104.994, -54.7188, 1.55", "43.8708, 105.711, -54.7331, 0.22", "43.9116, 105.741, -54.7345, 0.22", "44.0686, 105.849, -54.7413, 0.22", "44.4026, 106.068, -54.7717, 0.81", "44.4443, 106.095, -54.7771, 0.81", "44.6496, 106.241, -54.8174, 0.81", "45.6327, 106.955, -55.0491, 0.22", "45.97, 107.196, -55.1317, 0.22", "46.7127, 107.717, -55.3176, 1.55", "46.7521, 107.746, -55.3293, 1.55", "47.7243, 108.475, -55.6403, 0.22", "48.095, 108.756, -55.768, 0.22", "48.7427, 109.251, -55.9975, 1.62", "48.8655, 109.345, -56.0389, 1.99", "50.1318, 110.331, -56.4412, 0.22", "50.1759, 110.365, -56.4549, 0.22", "50.6523, 110.73, -56.5982, 0.74", "50.9415, 110.956, -56.6875, 0.74", "52.3763, 112.075, -57.1178, 0.15", "52.908, 112.483, -57.2653, 1.55", "52.9493, 112.513, -57.2741, 1.55", "53.1833, 112.686, -57.3242, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "4.63042, 62.7706, -24.0701, 0.29", "4.04474, 64.8109, -24.3819, 0.29", "3.91122, 65.3032, -24.46, 0.44", "3.63423, 66.3034, -24.6092, 0.22", "3.26996, 67.6259, -24.7995, 1.55", "3.15403, 68.0545, -24.8567, 2.21", "2.98648, 68.68, -24.9341, 1.84", "2.80353, 69.4746, -25.0225, 0.96", "2.68321, 69.988, -25.0639, 0.44", "2.66372, 70.0656, -25.0667, 0.44", "2.43099, 71.07, -25.0937, 0.29", "2.4056, 71.213, -25.0967, 0.29", "2.31071, 71.9444, -25.112, 0.29", "2.23551, 72.6681, -25.1283, 0.81", "2.20598, 73.0283, -25.1519, 1.11", "2.13893, 73.7553, -25.2327, 0.88", "2.0203, 75.2409, -25.4403, 0.22", "1.96946, 75.9668, -25.5656, 0.81", "1.93454, 76.5423, -25.6845, 0.81", "1.82852, 78.2669, -26.0754, 0.22", "1.74073, 79.5322, -26.3808, 1.84", "1.68463, 80.1923, -26.5492, 2.21", "1.62412, 80.7672, -26.7013, 2.21", "1.40911, 82.9713, -27.2446, 0.22", "1.34499, 83.7399, -27.4161, 0.81", "1.3192, 84.1039, -27.484, 0.88", "1.29258, 84.4728, -27.5423, 0.66", "1.19112, 85.568, -27.6959, 0.22", "1.036, 87.0973, -27.8723, 1.84", "0.998227, 87.5655, -27.9166, 2.21", "0.970813, 88.0347, -27.9562, 2.21", "0.890196, 90.0705, -28.109, 0.22", "0.872694, 90.7964, -28.1615, 0.88", "0.868725, 91.0178, -28.1765, 0.88", "0.844899, 92.5174, -28.2804, 0.22", "0.83555, 93.8419, -28.4098, 0.22", "0.844678, 94.5383, -28.4909, 1.33", "0.869732, 95.0879, -28.5639, 1.62", "0.879563, 95.2998, -28.5955, 1.62", "0.880051, 95.4188, -28.6192, 1.62", "0.797904, 97.3505, -29.0691, 0.22", "0.706671, 98.7658, -29.4242, 0.22", "0.624019, 99.7376, -29.6721, 1.4", "0.578717, 100.247, -29.7986, 1.69", "0.378517, 102.406, -30.3271, 0.22", "0.299426, 103.134, -30.4843, 0.96", "0.289955, 103.203, -30.4955, 0.96", "0.239358, 103.5, -30.5359, 0.81", "-0.0242537, 104.876, -30.6581, 0.22", "-0.0544928, 105.04, -30.6644, 0.22", "-0.214059, 106.0, -30.6653, 0.22", "-0.402329, 107.139, -30.6795, 1.69", "-0.463256, 107.512, -30.6879, 2.43", "-0.592877, 108.299, -30.7119, 2.36", "-0.98437, 110.834, -30.8048, 0.22", "-1.10077, 111.806, -30.868, 0.22", "-1.11373, 111.957, -30.8825, 0.22", "-1.18645, 113.199, -31.0181, 0.22", "-1.22193, 114.14, -31.132, 1.11", "-1.22437, 114.707, -31.2074, 1.4", "-1.17303, 116.325, -31.4438, 0.22", "-1.1701, 116.387, -31.4529, 0.22", "-1.14057, 116.817, -31.5052, 0.22", "-1.07724, 117.716, -31.5864, 1.55", "-1.05293, 118.179, -31.6121, 1.77", "-1.04969, 118.249, -31.6137, 1.77", "-1.03266, 118.566, -31.6108, 1.77", "-0.95071, 119.932, -31.6, 0.22", "-0.909136, 120.873, -31.5935, 0.66", "-0.899341, 121.38, -31.5901, 0.66", "-0.915742, 123.045, -31.5925, 0.22", "-0.921463, 123.197, -31.5928, 0.22", "-1.01868, 124.796, -31.5906, 0.22", "-1.1286, 125.886, -31.5701, 1.11", "-1.21821, 126.537, -31.5391, 1.99", "-1.32421, 127.092, -31.498, 1.55", "-1.67578, 128.449, -31.3519, 0.22", "-1.72796, 128.63, -31.3294, 0.22", "-2.09886, 129.73, -31.1595, 0.22", "-2.30089, 130.363, -31.0446, 0.88", "-2.36066, 130.561, -31.0082, 1.18", "-2.37707, 130.627, -30.9907, 1.18", "-2.48624, 131.254, -30.8113, 0.66", "-2.53706, 131.606, -30.713, 0.37", "-2.68175, 132.526, -30.4706, 0.22", "-2.81265, 133.203, -30.2972, 0.59", "-3.06436, 134.412, -30.0842, 0.52", "-3.21373, 135.086, -29.9944, 0.66", "-3.32688, 135.598, -29.942, 0.22", "-3.50444, 136.377, -29.8902, 1.47", "-3.59123, 136.75, -29.8836, 2.14", "-4.09534, 139.014, -29.9185, 0.22", "-4.108, 139.076, -29.922, 0.22", "-4.21786, 139.788, -29.947, 1.11", "-4.2311, 139.939, -29.9523, 1.47", "-4.23578, 140.046, -29.9556, 1.47", "-4.26405, 140.705, -29.9842, 0.81", "-4.29255, 141.25, -30.0236, 0.29", "-4.37725, 142.864, -30.1765, 0.22", "-4.42212, 143.61, -30.2634, 0.96", "-4.42977, 143.751, -30.2805, 0.96", "-4.43722, 143.901, -30.297, 0.96", "-4.47515, 145.07, -30.4064, 0.22", "-4.47601, 145.14, -30.4114, 0.22", "-4.46707, 145.857, -30.4464, 0.81", "-4.4617, 146.221, -30.4604, 0.81", "-4.44676, 147.919, -30.5037, 0.15", "-4.45697, 149.07, -30.5402, 1.18", "-4.46409, 149.391, -30.5506, 1.47", "-4.46464, 149.451, -30.5569, 1.47", "-4.4621, 149.741, -30.6112, 1.47", "-4.44329, 151.315, -31.0073, 0.22", "-4.41994, 152.196, -31.2866, 1.11", "-4.40766, 152.568, -31.4194, 1.47", "-4.29297, 154.615, -32.2602, 0.15", "-4.23028, 155.414, -32.618, 0.81", "-4.22349, 155.477, -32.6488, 0.81", "-4.17271, 155.842, -32.8419, 0.81", "-4.16449, 155.896, -32.8684, 0.81", "-4.02849, 157.164, -33.4365, 0.22", "-4.00559, 157.587, -33.5892, 0.37", "-3.99061, 158.239, -33.8, 0.22", "-3.99237, 159.044, -34.0401, 1.18", "-4.00685, 159.524, -34.1729, 1.47", "-4.09556, 161.343, -34.6407, 0.22", "-4.15056, 162.147, -34.8214, 1.03", "-4.17065, 162.424, -34.8835, 1.03", "-4.28495, 164.202, -35.2994, 0.22", "-4.32145, 164.844, -35.4478, 0.22", "-4.32463, 164.912, -35.4632, 0.22", "-4.34432, 165.727, -35.6043, 0.81", "-4.34982, 166.23, -35.6766, 0.81", "-4.3707, 167.725, -35.8424, 0.22", "-4.39597, 168.748, -35.8834, 1.11", "-4.40417, 168.968, -35.8831, 1.11", "-4.50814, 170.809, -35.7938, 0.22", "-4.56884, 171.62, -35.7231, 0.59", "-4.6927, 172.929, -35.563, 0.22", "-4.82827, 174.037, -35.3831, 1.18", "-4.88393, 174.464, -35.31, 1.62", "-5.11872, 176.082, -35.0082, 0.22", "-5.20507, 176.582, -34.9083, 0.22", "-5.30961, 177.138, -34.7886, 0.59", "-5.36404, 177.419, -34.7263, 0.59", "-5.37992, 177.498, -34.711, 0.59", "-5.56523, 178.379, -34.5255, 0.22", "-5.66648, 178.861, -34.4053, 0.52", "-5.69275, 179.006, -34.365, 0.52", "-5.70237, 179.073, -34.3448, 0.52", "-5.79479, 180.269, -34.0457, 0.22", "-5.82897, 181.191, -33.8564, 1.11", "-5.80939, 181.629, -33.7938, 1.47", "-5.7953, 181.769, -33.775, 1.47", "-5.73077, 182.261, -33.7168, 1.47", "-5.48137, 183.795, -33.5599, 0.22", "-5.46959, 183.853, -33.5558, 0.22", "-5.24284, 184.997, -33.4917, 0.22", "-5.07068, 185.973, -33.4515, 1.11", "-5.00088, 186.42, -33.4248, 1.55", "-4.93774, 186.854, -33.3934, 1.55", "-4.70732, 188.361, -33.2564, 0.22", "-4.6194, 188.929, -33.1994, 0.74", "-4.58723, 189.15, -33.1725, 0.74", "-4.30002, 191.053, -32.9194, 0.22", "-4.21586, 191.6, -32.8382, 0.74", "-3.977, 193.229, -32.5113, 0.22", "-3.95136, 193.402, -32.4681, 0.22", "-3.80322, 194.35, -32.2163, 0.74", "-3.78667, 194.461, -32.1847, 0.74", "-3.70677, 195.048, -32.007, 1.03", "-3.45265, 197.05, -31.4098, 0.15", "-3.44531, 197.12, -31.3906, 0.15", "-3.31673, 198.347, -31.1035, 0.15", "-3.25364, 198.945, -30.9841, 1.03", "-3.22074, 199.271, -30.9363, 1.03", "-3.14654, 200.246, -30.8561, 0.15", "-3.10624, 201.039, -30.8605, 1.11", "-3.09773, 201.426, -30.8701, 1.4", "-3.09878, 201.487, -30.8732, 1.4", "-3.16588, 202.915, -30.9936, 0.22", "-3.23298, 203.652, -31.0611, 0.59", "-3.24147, 203.714, -31.0672, 0.59", "-3.28022, 203.93, -31.086, 0.59", "-3.45472, 204.803, -31.1626, 0.22", "-3.59106, 205.436, -31.2188, 1.18", "-3.75138, 206.07, -31.2782, 1.84", "-3.84957, 206.43, -31.317, 1.47", "-4.41583, 208.226, -31.5275, 0.22", "-4.6577, 208.902, -31.6145, 0.22", "-4.68092, 208.956, -31.6223, 0.22", "-4.99369, 209.589, -31.7386, 0.81", "-5.23674, 210.054, -31.8377, 1.62", "-5.54389, 210.612, -31.9684, 2.28", "-5.6596, 210.821, -32.0202, 2.5", "-5.98378, 211.45, -32.1638, 2.14", "-6.79745, 213.191, -32.5393, 0.22", "-7.03941, 213.782, -32.6615, 0.59", "-7.06467, 213.859, -32.6756, 0.59", "-7.26323, 214.614, -32.7944, 0.22", "-7.38264, 215.186, -32.8591, 0.81", "-7.39763, 215.278, -32.8657, 0.81", "-7.4503, 215.643, -32.8724, 0.81", "-7.63978, 216.763, -32.8816, 0.22", "-7.75392, 217.409, -32.8847, 0.44", "-8.05136, 218.969, -32.8828, 0.15", "-8.16036, 219.545, -32.8774, 0.15", "-8.25453, 220.017, -32.8711, 0.59", "-8.31722, 220.312, -32.8645, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.62881, 36.8066, -7.13652, 1.55", "-8.18269, 38.252, -8.37961, 1.55", "-8.16102, 38.3229, -8.43306, 1.55", "-7.87123, 39.2748, -9.02503, 1.47", "-7.85756, 39.3203, -9.04806, 1.47", "-7.66678, 39.9572, -9.33419, 1.25", "-7.36223, 41.0093, -9.72931, 1.25", "-7.32962, 41.1338, -9.7527, 1.25", "-7.12027, 41.9088, -9.858, 0.81", "-6.8903, 42.7838, -9.92672, 1.18", "-6.86943, 42.8683, -9.93155, 1.18", "-6.64028, 43.8899, -9.96996, 1.84", "-6.49222, 44.6595, -9.98806, 2.14", "-6.36425, 45.4335, -10.0094, 2.14", "-6.25944, 46.3213, -10.0496, 2.14", "-6.25706, 46.3658, -10.0521, 2.14", "-6.25908, 46.8833, -10.0935, 1.77", "-6.31822, 47.842, -10.1932, 1.77", "-6.4106, 48.4951, -10.271, 1.47", "-6.60027, 49.3167, -10.3717, 1.25", "-6.86393, 50.1542, -10.4947, 1.62", "-7.09398, 50.7572, -10.596, 1.84", "-7.11625, 50.8063, -10.6055, 1.84", "-7.49561, 51.5116, -10.7796, 1.99", "-7.93096, 52.2998, -10.9904, 1.69", "-8.30728, 53.0477, -11.185, 1.47", "-8.50988, 53.5874, -11.3455, 1.33", "-8.52061, 53.6291, -11.3586, 1.33", "-8.59417, 54.3708, -11.6055, 1.11", "-8.51401, 55.137, -11.887, 0.88", "-8.3181, 55.7652, -12.1249, 0.96", "-7.91312, 56.712, -12.4503, 0.81", "-7.88154, 56.7839, -12.4721, 0.81", "-7.70212, 57.2336, -12.5928, 0.66", "-7.65803, 57.3581, -12.6219, 0.66", "-7.55116, 58.0847, -12.7742, 0.66", "-7.59116, 58.6758, -12.868, 0.96", "-7.7569, 59.3135, -12.9347, 1.69", "-7.85745, 59.6022, -12.9646, 1.99", "-7.98882, 59.8963, -13.0015, 1.99", "-8.31502, 60.5536, -13.0967, 1.84", "-8.34072, 60.5997, -13.1043, 1.84", "-8.79328, 61.3955, -13.2594, 2.06", "-8.9459, 61.6807, -13.3185, 2.21", "-9.18969, 62.1867, -13.419, 2.14", "-9.5228, 62.9417, -13.5596, 1.18", "-9.87842, 63.8311, -13.7099, 1.03", "-10.1276, 64.5025, -13.8074, 1.03", "-10.3417, 65.1274, -13.8834, 1.33", "-10.5712, 65.859, -13.9551, 2.14", "-10.7154, 66.3941, -13.9888, 2.65", "-10.8473, 66.9778, -14.0198, 2.65", "-10.9727, 67.6809, -14.0575, 2.65", "-10.9867, 67.7792, -14.0619, 2.65", "-11.0432, 68.2682, -14.0828, 2.36", "-11.0742, 68.8352, -14.1101, 2.06", "-11.0884, 69.5626, -14.1474, 1.4", "-11.0794, 70.3478, -14.1864, 0.81", "-11.0166, 71.6194, -14.2401, 0.66", "-10.9243, 72.6828, -14.2695, 0.66", "-10.7818, 73.8313, -14.2847, 1.11", "-10.7733, 73.885, -14.285, 1.11", "-10.6326, 74.5884, -14.2804, 1.55", "-10.4388, 75.4024, -14.2689, 1.84", "-10.1936, 76.327, -14.2559, 2.28", "-10.0786, 76.7564, -14.2492, 2.58", "-9.93932, 77.3084, -14.2546, 2.58", "-9.84837, 77.7096, -14.2703, 2.58", "-9.73563, 78.3601, -14.3283, 2.36", "-9.672, 78.9212, -14.409, 1.92", "-9.66843, 78.9817, -14.4196, 1.92", "-9.63728, 79.875, -14.578, 0.88", "-9.62749, 80.7454, -14.723, 0.66", "-9.62668, 81.648, -14.8803, 0.66", "-9.62541, 82.2318, -14.9917, 0.81", "-9.61033, 82.872, -15.1195, 0.74", "-9.58341, 83.5193, -15.2507, 0.59", "-9.55383, 84.1682, -15.374, 1.25", "-9.50517, 84.7866, -15.4992, 1.84", "-9.40117, 85.6555, -15.6701, 2.5", "-9.32227, 86.1775, -15.7781, 2.65", "-9.30583, 86.263, -15.8004, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.62881, 36.8066, -7.13652, 0.52", "-8.34852, 37.7776, -7.14009, 0.52", "-8.33786, 37.8255, -7.13867, 0.52", "-8.29471, 38.2984, -7.10999, 0.52", "-8.33618, 39.1832, -7.03844, 0.52", "-8.3422, 39.2312, -7.03416, 0.52", "-8.38992, 39.449, -7.01351, 0.66", "-8.42404, 39.5142, -6.99594, 0.66", "-8.66846, 39.8716, -6.89633, 0.52", "-8.88863, 40.1308, -6.81794, 0.66", "-8.92688, 40.1727, -6.80323, 0.66", "-9.1592, 40.4357, -6.69584, 0.59", "-9.51296, 40.8473, -6.5112, 0.29", "-9.80308, 41.2078, -6.3325, 0.29", "-9.85416, 41.2751, -6.29517, 0.29", "-10.1806, 41.7339, -6.02439, 0.59", "-10.4013, 42.0448, -5.84795, 0.81", "-10.4299, 42.0828, -5.8277, 0.81", "-10.6395, 42.3269, -5.71341, 0.81", "-10.6694, 42.3548, -5.70068, 0.81", "-10.977, 42.5964, -5.59556, 0.81", "-11.5183, 43.0109, -5.4325, 0.37", "-11.8837, 43.3225, -5.29045, 0.37", "-12.1717, 43.5945, -5.15033, 0.59", "-12.4055, 43.8446, -5.00745, 0.81", "-12.7714, 44.2784, -4.7321, 0.29", "-13.1164, 44.7252, -4.42785, 0.52", "-13.4778, 45.2499, -4.04919, 1.33", "-13.6332, 45.4965, -3.86646, 1.55", "-14.0762, 46.2454, -3.30132, 0.29", "-14.4251, 46.8397, -2.85271, 1.55", "-14.5128, 46.9743, -2.75904, 1.84", "-14.5638, 47.0365, -2.7233, 1.84", "-14.7224, 47.1999, -2.6687, 1.84", "-14.7527, 47.2298, -2.66567, 1.84", "-14.9931, 47.4565, -2.6987, 1.62", "-15.4871, 47.9056, -2.82806, 0.37", "-15.8988, 48.2901, -2.96911, 0.29", "-16.21, 48.6069, -3.11146, 0.59", "-16.4105, 48.8204, -3.22764, 0.59", "-16.5515, 48.9743, -3.3181, 0.59", "-16.7378, 49.1874, -3.4528, 0.52", "-17.0811, 49.6444, -3.72315, 0.29", "-17.3091, 49.9893, -3.92796, 0.74", "-17.5752, 50.4008, -4.15111, 0.66", "-17.7219, 50.626, -4.26028, 0.88", "-17.9815, 51.0202, -4.42805, 0.66", "-18.6892, 52.0575, -4.79966, 2.14", "-18.9638, 52.436, -4.90979, 2.14", "-19.5386, 53.1941, -5.09244, 0.22", "-19.8477, 53.5932, -5.16738, 0.22", "-20.1768, 54.0137, -5.22912, 0.22", "-20.5012, 54.4114, -5.24663, 0.88", "-20.6718, 54.608, -5.23141, 1.03", "-20.8836, 54.8442, -5.18933, 0.74", "-21.3932, 55.4167, -5.0523, 0.22", "-21.6997, 55.7591, -4.95041, 0.22", "-22.109, 56.2216, -4.81445, 0.22", "-22.1637, 56.2843, -4.79664, 0.22", "-22.5508, 56.7487, -4.6742, 0.22", "-23.1257, 57.4296, -4.50836, 1.69", "-23.3187, 57.6798, -4.4635, 2.21", "-23.6329, 58.1087, -4.41006, 2.21", "-23.6554, 58.1442, -4.40646, 2.21", "-24.0932, 58.9448, -4.31925, 0.22", "-24.3401, 59.4753, -4.25724, 0.22", "-24.7187, 60.3691, -4.10736, 0.22", "-24.7464, 60.4368, -4.09394, 0.22", "-25.0095, 61.073, -3.93854, 1.11", "-25.203, 61.5409, -3.82846, 1.11", "-25.373, 61.9595, -3.71907, 0.59", "-25.696, 62.7497, -3.49826, 1.69", "-25.7849, 62.9534, -3.43909, 1.77", "-26.3717, 64.2605, -3.08447, 0.22", "-26.8565, 65.3105, -2.79053, 0.22", "-27.0385, 65.7092, -2.66841, 1.03", "-27.1743, 66.0106, -2.57123, 1.03", "-27.2956, 66.2796, -2.48188, 0.81", "-27.6532, 66.9931, -2.1886, 0.22", "-28.0966, 67.7749, -1.80562, 1.11", "-28.188, 67.9164, -1.73063, 1.62", "-28.3179, 68.1091, -1.61436, 1.62", "-28.3391, 68.1395, -1.59319, 1.62", "-29.1115, 69.2301, -0.739909, 0.22", "-29.3976, 69.6264, -0.409308, 0.81", "-29.5263, 69.8019, -0.262598, 0.81", "-30.1418, 70.6489, 0.458436, 0.22", "-30.1651, 70.6823, 0.487474, 0.22", "-30.5419, 71.2531, 0.995934, 1.18", "-30.6891, 71.5368, 1.27571, 1.55", "-33.9071, 77.732, 1.91152, 1.55", "-37.1218, 83.8702, 3.0146, 1.55", "-41.2907, 89.4087, 4.41024, 1.55", "-45.2403, 94.8328, 6.67616, 1.55", "-49.4938, 99.3165, 10.2781, 1.55", "-53.5722, 104.154, 13.5606, 1.55", "-56.0626, 109.664, 17.2346, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.62034, 54.3886, 1.37046, 0.88", "1.79663, 55.0908, 4.07639, 0.88", "1.80633, 55.1194, 4.24289, 0.88", "1.86168, 55.2924, 6.16841, 0.88", "1.86283, 55.2963, 6.24648, 0.88", "2.50003, 55.4872, 10.3772, 0.59", "2.51689, 55.4928, 10.4667, 0.59", "2.80998, 55.5676, 11.7688, 1.18", "3.23947, 55.6988, 13.5337, 1.18", "3.26055, 55.706, 13.6087, 1.18", "5.29524, 56.8252, 19.7748, 0.22", "5.57444, 57.0435, 20.4635, 0.29", "6.14349, 57.5603, 21.7599, 1.11", "6.18049, 57.5997, 21.8369, 1.11", "6.61769, 58.0832, 22.6495, 1.11", "7.42155, 59.0912, 24.1204, 0.22", "7.81681, 59.9091, 24.7877, 0.59", "7.84871, 59.9628, 24.8314, 0.59", "8.06908, 60.2915, 25.0725, 1.11", "10.1558, 63.6254, 37.4558, 1.11", "8.97237, 67.1794, 49.8926, 1.11", "10.5342, 72.0116, 61.801, 1.11", "10.7386, 77.1535, 73.6682, 1.11", "11.0601, 82.9107, 85.2169, 1.11", "11.7204, 89.3062, 96.3737, 1.11", "11.5963, 96.1289, 107.268, 1.11", "12.3611, 101.88, 118.799, 1.11", "14.6444, 107.546, 130.172, 1.11", "16.5787, 113.063, 141.692, 1.11", "19.1157, 120.039, 152.172, 1.11", "21.2093, 127.562, 162.327, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.62034, 54.3886, 1.37046, 0.52", "2.29773, 55.878, 2.01064, 0.52", "2.74164, 57.1721, 2.54428, 0.52", "2.75331, 57.2361, 2.56899, 0.44", "2.82616, 58.3214, 2.94148, 0.44", "2.82627, 58.411, 2.96675, 0.44", "2.80493, 59.2567, 3.15789, 0.66", "2.79335, 59.3358, 3.17454, 0.66", "2.66365, 60.1473, 3.3647, 0.66", "2.58921, 60.8102, 3.55902, 0.44", "2.55843, 61.781, 3.94444, 0.44", "2.58689, 62.6467, 4.34712, 0.96", "2.7496, 63.88, 4.95376, 0.81", "2.78777, 64.0645, 5.04553, 0.81", "3.19457, 65.328, 5.66029, 0.66", "3.72524, 66.4896, 6.2534, 0.44", "3.81024, 66.6312, 6.3234, 0.44", "4.44535, 67.5065, 6.71166, 0.29", "4.83404, 67.9469, 6.8802, 0.29", "5.48195, 68.6277, 7.11934, 1.11", "6.40925, 69.5087, 7.40283, 1.47", "6.93841, 70.0114, 7.58052, 1.47", "6.98716, 70.0585, 7.60145, 1.47", "8.09928, 71.134, 8.18731, 0.88", "8.91962, 71.942, 8.6752, 0.52", "8.96502, 71.9884, 8.7041, 0.52", "9.61546, 72.6715, 9.0977, 0.74", "9.66133, 72.7185, 9.12474, 0.74", "10.1151, 73.1699, 9.33676, 0.74", "10.1657, 73.2174, 9.35166, 0.74", "10.6011, 73.6091, 9.42066, 0.74", "11.5783, 74.5621, 9.49041, 0.37", "12.0739, 75.1076, 9.48747, 0.37", "12.6697, 75.881, 9.45978, 0.52", "13.0993, 76.5605, 9.44994, 0.37", "13.6753, 77.6888, 9.45372, 0.74", "13.9788, 78.5465, 9.47575, 1.11", "14.1549, 79.3727, 9.50748, 0.96", "14.2405, 80.4146, 9.59539, 0.44", "14.2054, 81.6406, 9.7533, 0.44", "14.1532, 82.2335, 9.85142, 0.29", "14.0534, 83.1267, 10.0145, 0.29", "14.0465, 83.2068, 10.028, 0.29", "14.0158, 84.0563, 10.1487, 0.37", "14.0429, 85.1077, 10.2492, 0.52", "14.1401, 86.0752, 10.2768, 1.11", "14.257, 86.7425, 10.2795, 1.69", "14.354, 87.225, 10.2735, 1.77", "14.4424, 87.7884, 10.2698, 1.69", "14.5099, 88.3567, 10.2681, 1.47", "14.5204, 88.7389, 10.2725, 1.47", "14.5105, 88.8221, 10.2753, 1.47", "14.1871, 90.2858, 10.3739, 0.29", "13.9976, 90.9448, 10.4317, 0.66", "13.9749, 91.0227, 10.4419, 0.66", "13.8811, 91.3905, 10.5017, 0.37", "13.7395, 92.1728, 10.6498, 0.29", "13.6425, 93.1106, 10.836, 0.29", "13.642, 93.1906, 10.8517, 0.29", "13.7149, 94.1923, 11.0151, 1.03", "13.8154, 95.0344, 11.1278, 1.69", "13.9667, 95.9292, 11.2081, 2.14", "14.0398, 96.3368, 11.2341, 2.28", "14.1135, 96.9893, 11.2504, 1.77", "14.1495, 97.7452, 11.2397, 1.18", "14.1243, 98.534, 11.1921, 0.52", "14.0552, 99.2953, 11.1352, 0.37", "13.9673, 99.8225, 11.0671, 0.37", "13.7613, 100.921, 10.9006, 0.74", "13.6898, 101.322, 10.8274, 1.25", "13.5729, 101.98, 10.6885, 1.4", "13.4325, 102.884, 10.4781, 0.81", "13.2134, 104.706, 10.0375, 0.37", "13.1436, 105.701, 9.78395, 0.37", "13.0947, 107.309, 9.37539, 0.29", "13.0916, 108.534, 9.06068, 1.84", "13.1103, 108.992, 8.94206, 2.28", "13.177, 109.681, 8.7644, 2.14", "13.4145, 111.159, 8.4333, 0.52", "13.5729, 111.992, 8.25927, 0.74", "13.6939, 112.571, 8.16158, 0.74", "13.8645, 113.384, 8.05504, 0.22", "13.9432, 113.893, 8.00572, 0.22", "14.005, 114.923, 7.92642, 0.74", "13.9856, 115.189, 7.90846, 0.74", "13.8558, 116.062, 7.83892, 0.22", "13.7288, 116.715, 7.78155, 0.74", "13.6096, 117.258, 7.72753, 0.96", "13.3567, 118.523, 7.57916, 0.37", "13.1147, 120.06, 7.35833, 1.25", "13.0691, 120.598, 7.27302, 1.55", "13.0664, 121.021, 7.21258, 1.77", "13.0973, 121.731, 7.14185, 1.77", "13.1692, 122.673, 7.08807, 0.88", "13.2334, 123.293, 7.08243, 0.52", "13.3384, 124.266, 7.11808, 0.44", "13.4411, 125.51, 7.14552, 0.29", "13.5137, 127.035, 7.17008, 1.25", "13.5251, 127.702, 7.17936, 2.21", "13.5198, 128.158, 7.18261, 2.5", "13.4922, 129.106, 7.17626, 2.28", "13.3649, 130.707, 7.0918, 0.66", "13.2755, 131.568, 7.00477, 0.52", "13.1727, 132.497, 6.88614, 0.66", "13.0999, 133.167, 6.79314, 0.96", "13.0069, 134.016, 6.6615, 0.96", "12.7853, 136.06, 6.30899, 0.22", "12.7201, 136.909, 6.16597, 1.18", "12.7043, 137.379, 6.07144, 0.88", "12.7127, 138.011, 5.92422, 0.74", "12.7755, 138.824, 5.71641, 0.29", "12.7893, 138.901, 5.69525, 0.29", "13.0301, 139.572, 5.51044, 0.81", "13.0528, 139.647, 5.48702, 0.81", "13.1417, 140.119, 5.35216, 1.03", "13.168, 140.359, 5.28895, 1.03", "13.1683, 140.686, 5.21763, 1.03", "12.9523, 142.164, 4.90166, 0.29", "12.6627, 143.247, 4.6759, 0.29", "12.451, 143.926, 4.53793, 0.59", "12.395, 144.089, 4.5062, 0.59", "12.1964, 144.71, 4.38665, 0.37", "11.9221, 145.799, 4.18358, 0.29", "11.7361, 146.986, 3.98388, 1.11", "11.7143, 147.471, 3.9036, 1.69", "11.7293, 147.998, 3.81689, 1.84", "11.7889, 148.835, 3.68892, 1.62", "11.9375, 150.022, 3.52528, 0.74", "12.1344, 151.145, 3.40341, 0.52", "12.1501, 151.227, 3.39507, 0.52", "12.3597, 152.457, 3.28014, 0.37", "12.3717, 152.549, 3.27167, 0.37", "12.4145, 153.323, 3.21115, 1.25", "12.3828, 153.865, 3.13829, 0.96", "12.3737, 153.945, 3.1242, 0.96", "12.2758, 154.681, 2.98393, 0.74", "12.1589, 155.436, 2.80888, 0.59", "12.0555, 156.061, 2.66142, 0.74", "11.7458, 157.71, 2.28041, 0.37", "11.5425, 158.725, 2.05268, 0.74", "11.3657, 159.599, 1.8626, 0.52", "11.1029, 160.722, 1.61766, 0.29", "10.8547, 161.598, 1.42293, 0.81", "10.6507, 162.181, 1.2878, 1.18", "10.6212, 162.247, 1.27343, 1.18", "10.4614, 162.566, 1.19506, 1.18", "10.0234, 163.549, 0.959069, 1.18", "9.71239, 164.392, 0.774572, 0.44", "9.44129, 165.321, 0.57157, 0.29", "9.40126, 165.505, 0.533879, 0.29", "9.22411, 166.789, 0.297427, 0.29", "9.13973, 168.557, 0.0190193, 1.62", "9.15422, 169.165, -0.0544789, 2.65", "9.18449, 169.773, -0.10809, 2.87", "9.22893, 170.45, -0.155431, 2.36", "9.28764, 171.393, -0.210688, 1.69", "9.36169, 172.879, -0.294608, 0.52", "9.42255, 174.046, -0.361339, 0.52", "9.4428, 174.631, -0.397596, 0.81", "9.45802, 175.468, -0.457403, 0.44", "9.46902, 176.661, -0.557015, 0.44", "9.46412, 177.547, -0.639845, 0.37", "9.4646, 177.627, -0.648941, 0.37", "9.51337, 178.644, -0.797049, 0.37", "9.52713, 178.792, -0.821634, 0.37", "9.65335, 179.849, -1.0119, 1.62", "9.75268, 180.535, -1.13389, 2.36", "9.83869, 181.063, -1.22273, 2.36", "10.1366, 182.769, -1.50254, 0.29", "10.2921, 183.59, -1.63594, 0.29", "10.4602, 184.432, -1.76271, 0.37", "10.6919, 185.516, -1.91767, 0.37", "10.7763, 185.947, -1.9908, 0.59", "10.8439, 186.394, -2.08365, 0.59", "10.8503, 186.46, -2.1008, 0.59", "10.9038, 188.13, -2.58445, 0.29", "10.8908, 190.185, -3.24699, 0.29", "10.8459, 191.173, -3.60459, 0.96", "10.7748, 192.053, -3.94879, 1.18", "10.6874, 192.733, -4.22128, 0.66", "10.5696, 193.405, -4.48916, 0.44", "10.5495, 193.479, -4.51941, 0.44", "10.2981, 194.293, -4.8052, 0.22", "10.2506, 194.472, -4.84805, 0.22", "9.98433, 195.789, -5.06033, 1.47", "9.89321, 196.367, -5.12574, 2.28", "9.83158, 196.882, -5.1705, 2.58", "9.69427, 198.351, -5.25991, 0.29", "9.63669, 199.157, -5.28251, 0.22", "9.59899, 199.982, -5.29198, 0.22", "9.5786, 200.674, -5.29321, 0.22", "9.5366, 201.819, -5.28412, 1.33", "9.522, 202.128, -5.27704, 1.62", "9.4861, 202.539, -5.27467, 1.62", "9.34475, 203.463, -5.30413, 0.37", "9.1593, 204.316, -5.34917, 0.22", "9.05401, 204.751, -5.37161, 0.22", "8.93928, 205.187, -5.39269, 0.52", "8.70215, 206.144, -5.44157, 0.29", "8.34554, 207.792, -5.53446, 0.29", "8.1833, 208.703, -5.58899, 1.03", "8.12161, 209.285, -5.62752, 1.33", "8.11354, 209.542, -5.64669, 1.33", "8.1342, 210.075, -5.68727, 1.18", "8.21584, 210.843, -5.73703, 0.96", "8.30875, 211.421, -5.7842, 0.37", "8.49683, 212.436, -5.8737, 0.22", "8.66969, 213.35, -5.95383, 0.22", "8.83982, 214.303, -6.03234, 1.11", "8.9214, 214.833, -6.08712, 1.92", "8.97542, 215.27, -6.1514, 2.5", "8.98225, 215.349, -6.16618, 2.5", "8.99741, 215.842, -6.28027, 2.5", "8.98134, 216.523, -6.45891, 2.36", "8.88527, 218.13, -6.92346, 0.29", "8.81217, 218.981, -7.17723, 0.29", "8.79767, 219.114, -7.21485, 0.29", "8.68037, 219.997, -7.47223, 1.33", "8.60761, 220.511, -7.61906, 1.55", "8.59739, 220.581, -7.6376, 1.55", "8.53157, 221.084, -7.74923, 1.25", "8.49775, 221.9, -7.91192, 0.66", "8.51185, 223.427, -8.17783, 0.29", "8.56091, 224.305, -8.31477, 0.88", "8.59985, 224.757, -8.38107, 1.11", "8.66406, 225.538, -8.47942, 0.96", "8.76672, 227.101, -8.57607, 0.29", "8.83819, 228.785, -8.58776, 0.29", "8.85305, 229.878, -8.54235, 1.33", "8.84422, 230.74, -8.49992, 1.92", "8.81374, 231.69, -8.43748, 2.21", "8.66754, 234.312, -8.22307, 0.37", "8.54285, 235.812, -8.07546, 0.37", "8.41238, 237.241, -7.92884, 0.37", "8.30885, 238.287, -7.82482, 0.22", "8.19835, 239.438, -7.72237, 1.33", "8.16071, 239.857, -7.69275, 2.06", "8.10965, 240.274, -7.67141, 2.21", "7.95617, 241.27, -7.6064, 1.69", "7.66288, 242.85, -7.48375, 0.22", "7.48996, 243.675, -7.41425, 0.81", "7.38778, 244.167, -7.38258, 0.81", "7.17387, 245.433, -7.34033, 0.22", "7.06907, 246.271, -7.34359, 0.81", "7.05559, 246.46, -7.35141, 0.81", "7.04739, 247.059, -7.39994, 0.81", "7.06633, 247.569, -7.45221, 0.74", "7.17053, 248.835, -7.59953, 0.22", "7.27194, 249.779, -7.72937, 0.81", "7.31299, 250.225, -7.78994, 1.03", "7.36059, 250.899, -7.87638, 0.44", "7.41754, 252.157, -8.02381, 0.29", "7.44123, 253.218, -8.14249, 0.29", "7.43422, 254.532, -8.26958, 1.55", "7.43452, 254.94, -8.31205, 1.92", "7.43533, 255.034, -8.32256, 1.92", "7.43749, 255.452, -8.36803, 1.92", "7.41929, 258.001, -8.63847, 0.22", "7.38483, 259.189, -8.74984, 0.66", "7.3591, 259.659, -8.78418, 1.03", "7.29349, 260.364, -8.82804, 1.03", "7.18482, 261.155, -8.86308, 0.81", "7.027, 261.987, -8.88206, 0.37", "6.9399, 262.346, -8.87904, 0.37", "6.78219, 262.992, -8.8743, 0.37", "6.56555, 263.905, -8.87034, 0.29", "6.33894, 264.973, -8.87545, 0.29", "6.32581, 265.054, -8.87786, 0.29", "6.14467, 266.487, -8.93484, 0.22", "6.13611, 266.579, -8.94031, 0.22", "6.08495, 267.411, -9.00327, 0.22", "6.08283, 267.505, -9.01534, 0.22", "6.10097, 268.52, -9.19048, 1.47", "6.11625, 269.019, -9.29444, 1.84", "6.11838, 269.087, -9.30995, 1.84", "6.13609, 269.577, -9.42343, 1.84", "6.20006, 271.069, -9.77277, 0.22", "6.25156, 272.495, -10.0902, 0.22", "6.27978, 273.161, -10.2186, 0.88", "6.29107, 273.658, -10.2963, 1.18", "6.28972, 274.172, -10.3518, 0.96", "6.286, 274.255, -10.3554, 0.96", "6.18899, 275.0, -10.3062, 0.37", "6.07846, 275.62, -10.2359, 0.37", "5.98223, 276.284, -10.159, 0.37", "5.94571, 276.631, -10.1286, 0.29", "5.89964, 277.378, -10.087, 0.22", "5.88529, 277.84, -10.0736, 0.52", "5.89166, 278.797, -10.0788, 0.22", "5.92194, 279.542, -10.1116, 0.22", "5.97648, 280.217, -10.184, 1.11", "6.01722, 280.842, -10.2982, 1.47", "6.01852, 280.933, -10.3188, 1.47", "6.00288, 281.362, -10.43, 1.33", "5.98847, 281.481, -10.4627, 1.33", "5.79608, 282.534, -10.7333, 0.74", "5.56459, 283.75, -11.0523, 0.29", "5.44166, 284.436, -11.2253, 0.37", "5.43205, 284.507, -11.2423, 0.37", "5.37668, 285.087, -11.3699, 0.37", "5.3297, 285.933, -11.5404, 0.22", "5.32463, 286.935, -11.728, 1.11", "5.34889, 287.537, -11.8477, 1.4", "5.3836, 288.101, -11.9722, 1.18", "5.43187, 288.862, -12.1528, 0.44", "5.51378, 290.057, -12.4804, 0.22", "5.59927, 290.852, -12.7173, 0.74", "5.66152, 291.338, -12.8557, 1.33", "5.67086, 291.404, -12.8746, 1.33", "5.79347, 292.24, -13.0961, 1.62", "5.86472, 292.695, -13.2053, 1.62", "6.18681, 294.563, -13.603, 0.29", "6.39352, 295.804, -13.834, 0.29", "6.40448, 295.884, -13.8474, 0.29", "6.53438, 297.259, -14.0361, 0.29", "6.56045, 297.934, -14.0973, 1.03", "6.5587, 298.029, -14.1022, 1.03", "6.48931, 298.797, -14.1227, 1.18", "6.32043, 300.168, -14.1407, 0.29", "6.1836, 301.259, -14.1488, 0.29", "6.04848, 302.265, -14.149, 1.18", "5.9974, 302.7, -14.1489, 1.47", "5.92939, 303.354, -14.1476, 1.25", "5.8903, 303.888, -14.1473, 1.33", "5.84938, 305.322, -14.1496, 0.22", "5.85504, 305.498, -14.1552, 0.22", "6.01587, 306.79, -14.2201, 0.22", "6.03278, 306.882, -14.2251, 0.22", "6.23342, 307.771, -14.2732, 0.74", "6.33833, 308.196, -14.2941, 1.18", "6.44201, 308.708, -14.3073, 1.18", "6.66613, 310.23, -14.3207, 0.22", "6.67547, 310.31, -14.3204, 0.22", "6.75278, 311.139, -14.3168, 0.66", "6.78157, 311.571, -14.3401, 0.66", "6.87636, 313.077, -14.4993, 0.22", "6.9235, 313.912, -14.6169, 1.25", "6.9617, 314.645, -14.7435, 1.55", "7.01977, 315.458, -14.8981, 1.69", "7.16947, 317.1, -15.2445, 0.29", "7.3301, 318.709, -15.5961, 0.22", "7.40482, 319.4, -15.7529, 0.66", "7.46601, 319.9, -15.8626, 0.81", "7.47518, 319.979, -15.8782, 0.81", "7.66624, 321.691, -16.1532, 0.22", "7.7863, 322.697, -16.2662, 1.03", "7.81131, 322.954, -16.2973, 1.33", "7.94786, 324.5, -16.4853, 0.22", "8.00423, 325.174, -16.5653, 0.81", "8.04628, 325.756, -16.629, 1.03", "8.07529, 326.233, -16.6764, 0.74", "8.15271, 328.045, -16.8446, 0.22", "8.16416, 328.907, -16.9126, 0.44", "8.12963, 329.953, -16.9731, 0.22", "8.09113, 330.883, -17.0191, 1.11", "8.06483, 331.385, -17.0381, 1.33", "8.02352, 332.158, -17.063, 0.37", "7.97793, 333.163, -17.0859, 0.15", "7.95796, 333.919, -17.1171, 0.74", "7.96278, 334.002, -17.1248, 0.74", "7.99953, 334.338, -17.1658, 0.74", "8.18998, 335.65, -17.3517, 0.22", "8.31314, 336.384, -17.4639, 1.18", "8.40707, 336.907, -17.5498, 1.62", "8.81178, 339.262, -17.9397, 0.22", "8.93072, 340.007, -18.0608, 0.29", "8.9423, 340.089, -18.0736, 0.29", "9.06277, 341.085, -18.2161, 0.29", "9.16388, 342.052, -18.3525, 0.59", "9.19951, 342.716, -18.448, 1.11", "9.20134, 342.83, -18.4639, 1.11", "9.2233, 343.492, -18.56, 1.55", "9.24761, 344.216, -18.6634, 1.55", "9.24972, 344.284, -18.6727, 1.55", "9.3024, 346.542, -18.951, 0.22", "9.34965, 348.177, -19.1391, 0.22", "9.43322, 349.31, -19.2776, 1.4", "9.46117, 349.569, -19.3101, 1.77", "9.55639, 350.321, -19.4014, 1.4", "9.70949, 351.226, -19.5122, 0.74", "9.97285, 352.411, -19.6588, 0.29", "10.52, 354.528, -19.9524, 0.22", "10.7567, 355.369, -20.0768, 0.66", "10.8791, 355.772, -20.1409, 0.66", "11.2263, 356.792, -20.3172, 0.22", "11.2547, 356.87, -20.3289, 0.22", "11.4879, 357.544, -20.3979, 0.52", "11.5146, 357.633, -20.4009, 0.52", "11.6368, 358.044, -20.4061, 0.52", "11.8385, 358.618, -20.3775, 0.22", "12.2706, 359.68, -20.2764, 1.03", "12.5428, 360.232, -20.209, 1.62", "12.7952, 360.718, -20.1419, 1.47", "13.165, 361.415, -20.026, 1.33", "14.0648, 363.093, -19.6727, 0.22", "14.6592, 364.18, -19.4173, 1.18", "15.4335, 365.539, -19.0891, 0.22", "15.7665, 366.11, -18.9412, 0.22", "16.2231, 366.884, -18.7333, 0.81", "17.2037, 368.532, -18.2944, 0.22", "17.2424, 368.603, -18.276, 0.22", "17.5124, 369.13, -18.1289, 0.81", "17.547, 369.202, -18.1089, 0.81", "17.7228, 369.516, -18.0275, 1.11", "18.0232, 370.001, -17.9715, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-26.6003, -38.1716, 21.0238, 0.29", "-27.8114, -38.2056, 21.8499, 0.29", "-29.1644, -38.2626, 23.0281, 0.29", "-29.8321, -38.3528, 23.5698, 0.59", "-30.9242, -38.6336, 24.3443, 0.59", "-31.0363, -38.6718, 24.4081, 0.59", "-32.906, -39.3929, 25.3286, 0.59", "-32.9688, -39.4218, 25.3652, 0.59", "-33.8168, -39.9086, 25.9969, 0.37", "-34.5028, -40.377, 26.5262, 0.29", "-35.1156, -40.8258, 26.974, 0.29", "-35.1612, -40.8608, 27.0075, 0.29", "-36.2905, -41.8314, 27.8643, 0.74", "-36.5621, -42.0935, 28.1378, 1.03", "-37.1721, -42.81, 28.9646, 0.29", "-37.2369, -42.8958, 29.0599, 0.29", "-37.6226, -43.4528, 29.6124, 0.37", "-37.9151, -43.8682, 29.9581, 0.52", "-38.1649, -44.219, 30.1628, 0.52", "-38.7609, -44.7951, 30.4461, 0.29", "-39.5416, -45.2364, 30.6437, 0.29", "-40.0136, -45.4008, 30.734, 0.59", "-40.3509, -45.4729, 30.7859, 0.88", "-40.6917, -45.5325, 30.8317, 1.03", "-42.2815, -45.8075, 31.1147, 0.29", "-43.2456, -45.9716, 31.3376, 0.44", "-43.8026, -46.109, 31.5095, 0.74", "-43.9044, -46.1488, 31.5458, 0.74", "-44.4964, -46.424, 31.7802, 0.66", "-45.4731, -46.9841, 32.2321, 0.66", "-45.5273, -47.0284, 32.2651, 0.66", "-45.9472, -47.4221, 32.5268, 0.29", "-46.7965, -48.2954, 33.1018, 0.22", "-54.472, -53.2177, 39.5008, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-26.6003, -38.1716, 21.0238, 0.74", "-27.5884, -37.2583, 22.6878, 0.74", "-28.8836, -36.0962, 24.5702, 0.66", "-28.9658, -36.0224, 24.6898, 0.66", "-29.3493, -35.6784, 25.2471, 0.66", "-29.3948, -35.6375, 25.3133, 0.66", "-29.6878, -35.3746, 25.7392, 0.52", "-29.9488, -35.0511, 25.9872, 0.52", "-37.0877, -30.0122, 34.7822, 0.52", "-43.2547, -23.9238, 43.5849, 0.52", "-48.8894, -19.8171, 53.885, 0.52", "-52.2606, -14.4797, 64.5569, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.55225, -16.9271, 1.09878, 0.96", "-5.96272, -17.8924, 1.10276, 0.96", "-6.325, -18.8538, 1.11499, 0.96", "-6.35781, -18.9632, 1.11807, 0.96", "-6.48924, -19.5275, 1.12261, 0.96", "-6.68371, -20.4973, 1.1217, 1.11", "-6.87238, -21.6609, 1.08252, 1.11", "-6.87681, -21.7167, 1.08066, 1.11", "-6.91794, -22.8773, 1.03457, 1.03", "-6.93206, -23.7156, 0.992394, 1.99", "-6.93093, -23.7715, 0.988274, 1.99", "-6.8813, -24.5453, 0.889967, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.55225, -16.9271, 1.09878, 1.92", "-5.32048, -18.2702, 1.43205, 1.92", "-5.10126, -19.4793, 1.72804, 1.92", "-4.89574, -20.5795, 1.99313, 1.92", "-4.70959, -21.5997, 2.23171, 2.14", "-4.52566, -22.5569, 2.45379, 1.62", "-4.32337, -23.5167, 2.67553, 1.99", "-4.16145, -24.1624, 2.81501, 2.73", "-3.95189, -24.879, 2.97996, 2.36", "-3.69362, -25.6703, 3.1988, 1.99", "-3.32573, -26.6965, 3.52825, 1.92", "-3.08468, -27.3042, 3.75114, 2.28", "-2.83949, -27.9098, 4.00757, 2.5", "-2.61482, -28.4851, 4.28327, 2.58", "-2.28995, -29.4121, 4.79712, 1.69", "-2.27943, -29.4465, 4.81789, 1.69", "-2.10191, -30.2668, 5.31088, 1.47", "-1.95788, -31.4227, 5.97327, 1.25", "-1.93232, -32.0746, 6.31728, 1.62", "-1.9578, -32.7695, 6.64024, 1.62", "-2.03484, -33.5217, 6.93168, 1.25", "-2.18289, -34.3877, 7.21796, 1.25", "-2.41718, -35.2357, 7.4274, 1.77", "-2.59482, -35.7129, 7.49149, 1.92", "-2.82143, -36.2563, 7.52068, 1.92", "-3.0619, -36.7851, 7.51823, 2.06", "-3.37987, -37.4221, 7.49781, 1.92", "-3.7936, -38.2263, 7.4572, 1.77", "-4.23265, -39.0902, 7.40305, 1.55", "-4.75484, -40.1416, 7.3416, 1.4", "-5.16384, -40.9797, 7.31829, 1.4", "-5.49498, -41.702, 7.32299, 1.84", "-5.72385, -42.2648, 7.36609, 1.77", "-5.97497, -43.0251, 7.48466, 1.25", "-5.98724, -43.0777, 7.49713, 1.25", "-6.13404, -44.0541, 7.80083, 0.88", "-6.15439, -44.5251, 7.9726, 1.62", "-6.11365, -45.3727, 8.3003, 1.92", "-6.03386, -46.1148, 8.58148, 1.92", "-5.94363, -46.817, 8.82529, 1.77", "-5.93788, -46.8632, 8.83895, 1.77", "-5.81583, -47.8357, 9.07443, 1.62", "-5.72953, -48.6249, 9.21389, 1.33", "-5.65416, -49.3707, 9.30228, 1.18", "-5.592, -50.0842, 9.36976, 1.18", "-5.53085, -50.8949, 9.42986, 1.55", "-5.48328, -51.896, 9.46949, 1.62", "-5.47824, -52.7704, 9.47236, 2.14", "-5.49762, -53.4341, 9.46127, 2.36", "-5.52955, -54.0633, 9.44456, 2.58", "-5.55736, -54.5306, 9.43495, 3.02", "-5.63303, -55.6458, 9.44411, 2.21", "-5.69204, -56.627, 9.48648, 1.77", "-5.7354, -57.5111, 9.55757, 1.77", "-5.76343, -58.4879, 9.68128, 1.84", "-5.7663, -59.6243, 9.91435, 1.84", "-5.73683, -60.7641, 10.2377, 1.18", "-5.6576, -61.935, 10.6734, 0.96", "-5.65384, -61.9797, 10.6957, 0.96", "-5.58862, -62.7309, 11.2076, 1.33", "-5.52086, -63.4678, 11.8286, 1.84", "-5.48364, -64.0327, 12.3571, 1.84", "-5.46066, -64.5865, 12.8685, 1.77", "-5.44286, -65.6162, 13.7301, 1.69", "-5.43108, -66.6206, 14.4131, 0.74", "-5.43134, -67.2156, 14.7137, 0.74", "-5.43274, -67.9726, 14.9954, 1.18", "-5.43112, -68.6997, 15.1777, 1.47", "-5.42377, -69.4267, 15.2364, 1.62", "-5.41187, -69.9805, 15.177, 1.92", "-5.41242, -70.4253, 15.0928, 1.92", "-5.41361, -70.4658, 15.0853, 1.92", "-5.44211, -71.0001, 15.0045, 1.92", "-5.51205, -71.7691, 14.9285, 1.33", "-5.61334, -72.5267, 14.8655, 1.47", "-5.72628, -73.2947, 14.8109, 1.92", "-5.80245, -73.8595, 14.7796, 1.92", "-5.89379, -74.6171, 14.755, 1.99", "-5.97405, -75.5573, 14.7563, 1.99", "-6.01782, -76.6387, 14.7913, 1.99", "-6.01632, -76.8947, 14.81, 2.36", "-5.99235, -77.5049, 14.8614, 1.62", "-5.94941, -78.1492, 14.9241, 1.25", "-5.87693, -78.9489, 15.0102, 1.11", "-5.82181, -79.6251, 15.0825, 0.81", "-5.7728, -80.5055, 15.1817, 0.66", "-5.77422, -81.2683, 15.2574, 1.55", "-5.77661, -81.3179, 15.2618, 1.55", "-5.82046, -81.7222, 15.3256, 2.21", "-5.90969, -82.2856, 15.4446, 1.92", "-6.03729, -83.024, 15.6334, 1.62", "-6.16068, -83.7053, 15.8346, 1.4", "-6.29815, -84.4515, 16.1265, 1.4", "-6.51946, -85.619, 16.6504, 1.33", "-6.61589, -86.1904, 16.9361, 0.96", "-6.72495, -87.0479, 17.402, 0.74", "-6.72944, -87.0992, 17.4333, 0.74", "-6.75752, -88.2568, 18.208, 0.66", "-6.75321, -88.2945, 18.2385, 0.66", "-6.56172, -89.0455, 18.8883, 1.69", "-6.43689, -89.4612, 19.2635, 2.21", "-6.24372, -90.1136, 19.834, 3.02", "-6.13235, -90.5449, 20.1744, 3.02", "-5.8348, -91.9438, 21.1231, 0.52", "-5.77079, -92.4778, 21.4108, 0.52", "-5.75364, -93.1551, 21.6821, 2.36", "-5.78168, -93.8057, 21.8542, 3.09", "-5.813, -94.1234, 21.897, 3.24", "-5.90599, -94.7744, 21.935, 3.02", "-6.1632, -96.2253, 21.9113, 1.11", "-6.2852, -96.984, 21.905, 0.96", "-6.35641, -97.542, 21.9072, 1.25", "-6.42583, -98.3043, 21.9424, 1.18", "-6.45703, -98.8767, 21.9972, 0.52", "-6.45729, -98.9259, 22.0053, 0.52", "-6.40778, -99.4474, 22.1597, 1.4", "-6.39911, -99.4854, 22.1734, 1.4", "-6.16387, -100.118, 22.4284, 2.14", "-5.97158, -100.558, 22.6042, 2.14", "-5.83325, -100.879, 22.7188, 2.36", "-5.59417, -101.484, 22.9121, 1.33", "-5.33009, -102.223, 23.1056, 0.81", "-5.03716, -103.165, 23.2892, 0.81", "-4.802, -104.086, 23.4092, 0.81", "-4.59903, -105.068, 23.5203, 1.62", "-4.50742, -105.595, 23.5757, 1.92", "-4.39596, -106.405, 23.6884, 1.25", "-4.30932, -107.179, 23.821, 0.96", "-4.20896, -108.222, 24.0334, 0.96", "-4.10522, -109.119, 24.2602, 0.88", "-3.98412, -110.03, 24.5448, 1.62", "-3.816, -111.068, 24.9207, 1.84", "-3.7317, -111.622, 25.1779, 1.92", "-3.72542, -111.67, 25.2045, 1.92", "-3.6459, -112.39, 25.6319, 1.62", "-3.57142, -113.28, 26.1649, 0.59", "-3.52675, -113.976, 26.572, 0.59", "-3.44969, -115.028, 27.1333, 0.52", "-3.40517, -115.724, 27.5182, 1.69", "-3.38177, -116.173, 27.7713, 2.5", "-3.37561, -116.568, 28.0015, 2.5", "-3.36724, -117.043, 28.2785, 2.5", "-3.33882, -117.762, 28.6602, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.30583, 86.263, -15.8004, 0.59", "-10.0691, 87.0579, -16.4177, 0.59", "-10.6354, 87.7887, -16.981, 0.44", "-10.5226, 87.9329, -17.5922, 0.74", "-10.3356, 88.1728, -18.5467, 0.74", "-10.3124, 88.2097, -18.6924, 0.74", "-10.2264, 88.4111, -19.4335, 0.88", "-10.2181, 88.4281, -19.4994, 0.88", "-9.624, 89.8111, -24.7741, 1.62", "-9.51417, 90.1978, -26.2742, 1.4", "-9.47635, 90.5786, -27.8383, 0.37", "-9.49709, 90.7812, -28.6901, 0.74", "-9.64787, 91.2157, -30.4753, 0.29", "-9.76191, 91.4062, -31.1235, 1.4", "-9.95731, 91.6175, -31.663, 1.84", "-10.6078, 92.3214, -33.6688, 0.44", "-10.7064, 92.4475, -34.0105, 0.29", "-10.8628, 92.6483, -34.5814, 0.29", "-11.0198, 92.8431, -35.1157, 0.59", "-11.545, 93.5585, -37.0207, 0.44", "-11.7333, 93.8355, -37.6379, 0.22", "-11.8949, 94.0814, -38.0719, 0.74", "-12.1484, 94.5252, -38.8518, 0.15", "-12.1881, 94.5962, -38.976, 0.15", "-12.2866, 94.7731, -39.2563, 0.15", "-12.6882, 95.4732, -40.1812, 1.47", "-12.9012, 95.8364, -40.6408, 1.62", "-13.6869, 97.1593, -42.4159, 0.22", "-13.7097, 97.1987, -42.4695, 0.22", "-13.9948, 97.6577, -43.1302, 0.22", "-14.3741, 98.2285, -43.9937, 1.25", "-14.5413, 98.5029, -44.4413, 1.4", "-15.0352, 99.3725, -45.8536, 0.22", "-15.0638, 99.4324, -45.949, 0.22", "-15.3902, 100.275, -47.295, 1.47", "-15.4775, 100.541, -47.7036, 1.99", "-15.8848, 102.046, -49.8324, 0.37", "-15.9792, 102.45, -50.3515, 0.29", "-16.1306, 103.151, -51.1625, 1.18", "-16.2983, 103.963, -52.0312, 0.52", "-16.4357, 104.742, -52.7663, 1.55", "-16.4835, 105.023, -53.002, 1.84", "-16.7914, 106.71, -54.1427, 0.22", "-16.7986, 106.766, -54.1783, 0.22", "-16.8383, 107.268, -54.4551, 0.22", "-16.8115, 107.873, -54.7348, 1.4", "-16.8028, 107.943, -54.7641, 1.4", "-16.7443, 108.337, -54.9083, 1.4", "-16.4452, 109.826, -55.4103, 0.15", "-16.3111, 110.453, -55.6435, 0.74", "-15.9753, 111.909, -56.2251, 0.15", "-15.8487, 112.419, -56.4373, 0.74", "-15.777, 112.673, -56.5417, 0.88", "-15.3591, 113.947, -57.0344, 0.15", "-15.3385, 113.995, -57.0549, 0.15", "-15.1508, 114.368, -57.2368, 0.37", "-15.0784, 114.454, -57.3175, 0.37", "-14.5863, 114.84, -57.886, 0.22", "-14.163, 115.127, -58.3778, 0.59", "-13.0079, 115.761, -59.73, 1.69", "-12.8806, 115.823, -59.8841, 1.69", "-10.8627, 116.601, -62.4573, 0.22", "-10.4765, 116.707, -62.9719, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.30583, 86.263, -15.8004, 2.65", "-9.56198, 87.1632, -15.2218, 2.65", "-9.86151, 88.1924, -14.7117, 2.06", "-10.4066, 90.026, -13.9706, 1.92", "-10.4243, 90.084, -13.9502, 1.92", "-10.7638, 91.1397, -13.636, 0.74", "-11.2669, 92.6751, -13.2269, 0.52", "-11.7165, 93.885, -12.9862, 0.52", "-11.9273, 94.4638, -12.9273, 0.52", "-11.9999, 94.7103, -12.9326, 0.52", "-12.1989, 95.4876, -12.9519, 0.52", "-12.2235, 95.6088, -12.9548, 0.52", "-12.3392, 96.5115, -12.9674, 0.44", "-12.4186, 97.2279, -12.9354, 0.44", "-12.5301, 98.5964, -12.8381, 1.84", "-12.6255, 99.7153, -12.7159, 2.73", "-12.6804, 100.31, -12.6336, 3.54", "-12.7668, 101.092, -12.5134, 3.9", "-12.8509, 101.715, -12.4084, 4.05", "-12.9442, 102.301, -12.3203, 3.9", "-13.1505, 103.379, -12.1906, 3.61", "-13.3328, 104.132, -12.1202, 2.8", "-13.561, 104.973, -12.0641, 1.69", "-13.8413, 105.962, -12.007, 1.11", "-14.167, 107.073, -11.959, 0.81", "-14.3485, 107.678, -11.9475, 0.66", "-14.7161, 108.96, -11.9711, 0.52", "-15.0606, 110.078, -11.9997, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-54.472, -53.2177, 39.5008, 0.37", "-60.1299, -56.4022, 43.7742, 0.37", "-64.7057, -61.0533, 47.8638, 0.37", "-69.6153, -64.6332, 52.6948, 0.37", "-73.2088, -68.3994, 58.4608, 0.37", "-78.2982, -71.8724, 63.188, 0.37", "-83.3018, -75.0134, 68.2548, 0.37", "-88.1238, -79.5575, 72.1848, 0.37", "-94.3096, -82.8222, 75.545, 0.37", "-101.623, -84.3999, 77.7952, 0.37", "-109.097, -86.0517, 79.3294, 0.37", "-116.439, -86.5606, 82.0255, 0.37", "-123.818, -86.8434, 84.66, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-54.472, -53.2177, 39.5008, 0.29", "-62.0921, -57.3797, 44.8146, 0.37", "-68.7464, -62.1776, 50.8, 0.37", "-75.75, -67.8786, 55.3156, 0.37", "-82.9753, -74.0694, 58.574, 0.37", "-90.3181, -80.3855, 61.2361, 0.37", "-96.9517, -86.7597, 65.2864, 0.37", "-102.995, -94.0006, 68.5684, 0.37", "-108.746, -101.917, 70.1989, 0.37", "-116.232, -108.542, 70.7168, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-52.2606, -14.4797, 64.5569, 0.37", "-56.7158, -10.0818, 73.144, 0.37", "-61.9502, -5.65991, 81.2672, 0.37", "-67.8443, -0.109262, 88.0691, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-52.2606, -14.4797, 64.5569, 0.29", "-54.8348, -12.1478, 68.6623, 0.37", "-57.2264, -9.51205, 72.6814, 0.37", "-58.6778, -7.31444, 77.389, 0.37", "-59.7466, -5.55553, 82.3853, 0.37", "-61.0278, -4.42907, 87.5151, 0.37", "-62.9334, -3.21718, 92.4262, 0.37", "-65.1886, -2.07904, 97.2048, 0.37", "-67.3797, -0.799959, 101.977, 0.37", "-70.0414, 0.983296, 106.315, 0.37", "-72.8165, 2.74344, 110.591, 0.37", "-75.2777, 4.63052, 115.002, 0.37", "-77.1692, 6.11017, 119.843, 0.37", "-79.2564, 7.84196, 124.511, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.8813, -24.5453, 0.889967, 0.59", "-7.21743, -24.9639, 0.578011, 0.59", "-7.8249, -25.5014, 0.102738, 0.44", "-8.51379, -25.914, -0.441687, 0.29", "-8.89785, -26.0852, -0.716713, 0.22", "-9.37855, -26.2823, -1.04025, 0.29", "-9.96091, -26.5171, -1.41318, 0.29", "-10.7093, -26.7742, -1.83707, 0.29", "-11.5649, -27.0567, -2.31148, 0.29", "-12.2229, -27.3014, -2.67989, 0.29", "-13.07, -27.6906, -3.17723, 1.25", "-13.3214, -27.8434, -3.33287, 1.77", "-13.6977, -28.1459, -3.58021, 1.77", "-14.7308, -29.1493, -4.27497, 1.11", "-15.2889, -29.7941, -4.6726, 0.52", "-15.6597, -30.296, -4.99392, 0.37", "-16.1099, -30.9991, -5.47715, 0.37", "-16.4116, -31.5294, -5.85446, 0.37", "-16.4603, -31.6199, -5.92048, 0.37", "-16.861, -32.3691, -6.46202, 1.25", "-17.1298, -32.8205, -6.83916, 1.18", "-17.6541, -33.519, -7.49767, 0.29", "-17.9271, -33.7744, -7.76406, 0.22", "-18.3277, -34.0814, -8.06752, 0.22", "-18.6545, -34.3169, -8.26189, 0.44", "-19.0029, -34.5452, -8.41367, 0.44", "-19.3716, -34.7797, -8.52609, 0.29", "-19.7554, -35.0128, -8.63251, 0.29", "-20.3127, -35.3642, -8.86693, 0.37", "-20.7429, -35.6518, -9.08785, 0.37", "-21.2309, -35.9599, -9.3721, 0.29", "-22.1103, -36.4647, -9.94391, 1.18", "-22.7588, -36.8184, -10.3768, 1.99", "-23.3959, -37.1397, -10.8047, 2.28", "-23.7918, -37.3302, -11.063, 1.99", "-24.791, -37.8426, -11.6967, 0.59", "-25.4501, -38.2491, -12.0985, 0.37", "-25.9319, -38.6484, -12.3958, 0.37", "-26.4502, -39.1342, -12.7093, 1.11", "-26.8101, -39.484, -12.9136, 1.69", "-27.1947, -39.877, -13.1362, 1.84", "-27.7068, -40.4143, -13.4152, 1.4", "-28.5832, -41.2623, -13.8485, 0.44", "-29.0532, -41.672, -14.0769, 0.44", "-29.6468, -42.1479, -14.3468, 0.37", "-30.1745, -42.5291, -14.5791, 1.18", "-30.6346, -42.8497, -14.7751, 1.62", "-31.1133, -43.2098, -14.9688, 1.03", "-31.1599, -43.2529, -14.9898, 1.03", "-31.391, -43.5321, -15.1226, 0.88", "-31.76, -44.052, -15.3917, 0.44", "-32.1384, -44.6086, -15.6962, 0.29", "-32.4714, -45.1217, -15.9871, 0.29", "-33.0702, -46.0595, -16.5299, 1.92", "-33.4779, -46.7045, -16.8991, 2.73", "-33.8885, -47.3645, -17.2825, 2.65", "-34.6926, -48.6051, -18.0167, 0.66", "-34.7312, -48.6606, -18.0511, 0.66", "-35.3323, -49.4749, -18.5659, 0.29", "-35.6022, -49.8269, -18.7761, 0.29", "-35.9363, -50.2549, -19.0383, 0.29", "-36.3182, -50.7687, -19.3892, 0.29", "-36.6662, -51.2442, -19.7529, 1.11", "-36.7037, -51.2968, -19.7929, 1.11", "-37.0129, -51.7361, -20.12, 1.25", "-37.4112, -52.3, -20.5263, 0.96", "-38.0955, -53.364, -21.162, 0.37", "-38.1245, -53.4162, -21.1906, 0.37", "-38.4419, -54.0028, -21.4873, 0.22", "-38.6573, -54.401, -21.6714, 0.22", "-38.7214, -54.5131, -21.726, 0.66", "-39.1765, -55.2784, -22.0771, 0.52", "-39.9288, -56.5126, -22.6271, 1.77", "-40.47, -57.3892, -23.0197, 2.58", "-40.9331, -58.1208, -23.3526, 2.58", "-41.8335, -59.5174, -23.9814, 0.44", "-42.3151, -60.2372, -24.2919, 0.29", "-42.358, -60.2969, -24.3156, 0.29", "-42.691, -60.7441, -24.4527, 0.29", "-43.2001, -61.438, -24.6322, 1.47", "-43.4749, -61.8265, -24.7102, 1.84", "-43.8077, -62.3642, -24.7692, 1.47", "-44.6058, -63.7831, -24.9075, 0.29", "-44.8824, -64.3237, -24.9514, 1.11", "-45.0678, -64.7105, -24.9762, 1.25", "-45.326, -65.2908, -24.9995, 1.03", "-45.6789, -66.1128, -25.023, 0.22", "-45.911, -66.6439, -25.0287, 0.22", "-46.058, -66.9715, -25.0226, 0.59", "-46.2873, -67.4229, -25.0181, 0.74", "-46.4452, -67.6921, -25.0275, 0.37", "-46.7676, -68.1884, -25.0605, 0.22", "-47.2446, -68.8591, -25.1191, 1.55", "-47.6876, -69.4803, -25.1788, 2.21", "-47.9396, -69.8324, -25.2126, 1.84", "-48.7344, -70.9368, -25.3155, 0.22", "-49.1444, -71.4948, -25.3656, 0.22", "-49.6204, -72.1041, -25.4191, 1.11", "-49.9032, -72.4464, -25.447, 1.62", "-50.2584, -72.8491, -25.4733, 1.84", "-50.8, -73.4443, -25.5007, 1.11", "-51.1074, -73.7771, -25.5096, 0.66", "-51.9155, -74.6527, -25.5401, 0.29", "-52.352, -75.1303, -25.5597, 0.59", "-53.3759, -76.3158, -25.5907, 0.29", "-53.4191, -76.3684, -25.5914, 0.29", "-54.11, -77.2501, -25.5922, 1.18", "-54.3736, -77.5995, -25.5882, 1.55", "-54.6183, -77.9526, -25.5774, 1.55", "-55.2639, -78.9544, -25.5894, 0.52", "-55.8055, -79.8734, -25.6528, 0.37", "-55.8375, -79.9325, -25.6602, 0.37", "-56.2075, -80.6922, -25.7832, 0.37", "-56.504, -81.3367, -25.9046, 0.29", "-57.0485, -82.58, -26.172, 1.99", "-57.2856, -83.1509, -26.3102, 2.28", "-57.8227, -84.5247, -26.6287, 0.22", "-58.1474, -85.3239, -26.7961, 0.22", "-58.2981, -85.6886, -26.847, 0.74", "-58.3242, -85.7505, -26.8511, 0.74", "-58.5559, -86.307, -26.8401, 0.74", "-58.8615, -87.0642, -26.7977, 0.22", "-59.2193, -87.9205, -26.7417, 0.22", "-59.8137, -89.2916, -26.6551, 2.14", "-59.9482, -89.6022, -26.6366, 2.36", "-60.4564, -90.7275, -26.5735, 0.29", "-60.6929, -91.2196, -26.5411, 0.22", "-61.0227, -91.8438, -26.4978, 0.22", "-61.4335, -92.5728, -26.4434, 1.4", "-61.6627, -92.9656, -26.4164, 1.77", "-61.9848, -93.5309, -26.3646, 1.33", "-62.5182, -94.5752, -26.2401, 0.37", "-62.8634, -95.3263, -26.1504, 0.22", "-63.0661, -95.8418, -26.0908, 0.22", "-63.3011, -96.5127, -26.0268, 0.81", "-63.4288, -96.906, -25.9949, 0.81", "-63.7036, -97.7468, -25.9625, 0.22", "-63.8889, -98.23, -25.9786, 0.22", "-64.1317, -98.7556, -26.0163, 1.25", "-64.3469, -99.1379, -26.0551, 1.77", "-64.6041, -99.5498, -26.1037, 1.77", "-65.1712, -100.446, -26.2189, 0.44", "-65.6951, -101.259, -26.3259, 0.29", "-66.1365, -101.96, -26.4253, 1.4", "-66.397, -102.372, -26.4846, 1.77", "-66.6125, -102.727, -26.5355, 1.77", "-67.1976, -103.732, -26.6725, 0.37", "-67.6127, -104.499, -26.7625, 0.29", "-68.0473, -105.304, -26.8707, 0.22", "-68.4335, -105.962, -26.9809, 0.22", "-68.9198, -106.721, -27.1236, 1.11", "-69.1069, -106.992, -27.1785, 1.4", "-69.4908, -107.539, -27.2919, 0.59", "-69.9183, -108.173, -27.4224, 0.22", "-70.3361, -108.821, -27.55, 0.22", "-70.762, -109.468, -27.6853, 1.11", "-70.9565, -109.744, -27.7439, 1.55", "-71.2448, -110.14, -27.8286, 1.33", "-71.7366, -110.795, -27.9651, 0.59", "-72.1176, -111.33, -28.0534, 0.22", "-72.355, -111.666, -28.0928, 0.66", "-72.4802, -111.833, -28.1056, 0.66", "-72.61, -111.997, -28.111, 0.66", "-73.007, -112.493, -28.1195, 0.22", "-73.4553, -113.028, -28.0771, 0.22", "-74.0214, -113.688, -27.9818, 1.33", "-74.2724, -113.975, -27.9302, 1.62", "-74.5425, -114.277, -27.87, 1.33", "-75.4024, -115.218, -27.6691, 0.29", "-75.9514, -115.783, -27.5504, 0.29", "-76.4167, -116.2, -27.4786, 0.29", "-76.8668, -116.556, -27.4394, 0.88", "-77.181, -116.789, -27.4193, 0.88", "-77.5482, -117.043, -27.4052, 0.66", "-78.196, -117.479, -27.4023, 0.15", "-78.7541, -117.908, -27.4555, 0.15", "-79.2741, -118.335, -27.5249, 0.15", "-79.5343, -118.546, -27.57, 0.59", "-79.5904, -118.586, -27.574, 0.59", "-79.8852, -118.794, -27.5734, 0.59", "-80.3751, -119.161, -27.5414, 0.22", "-80.4367, -119.215, -27.5354, 0.22", "-81.1207, -119.827, -27.4651, 0.22", "-82.1511, -120.781, -27.3566, 1.77", "-82.5147, -121.125, -27.3175, 2.14", "-82.9798, -121.568, -27.2763, 1.47", "-83.838, -122.459, -27.236, 0.37", "-84.5323, -123.254, -27.2378, 0.22", "-84.8877, -123.74, -27.2653, 0.81", "-85.074, -124.029, -27.3042, 0.96", "-85.3661, -124.498, -27.3881, 0.96", "-85.8556, -125.348, -27.5725, 0.22", "-85.8864, -125.404, -27.5867, 0.22", "-86.1806, -126.005, -27.7474, 0.22", "-86.4974, -126.684, -27.9214, 0.22", "-86.6894, -127.154, -28.0521, 0.96", "-86.8548, -127.569, -28.1656, 1.33", "-87.0789, -128.088, -28.31, 1.11", "-87.4436, -128.849, -28.5757, 0.22", "-87.631, -129.195, -28.714, 0.59", "-88.1646, -130.137, -29.0798, 0.22", "-88.5702, -130.824, -29.3349, 1.18", "-88.8472, -131.267, -29.5097, 1.4", "-89.5356, -132.291, -29.9146, 0.22", "-89.9461, -132.842, -30.1236, 0.22", "-90.4189, -133.451, -30.3322, 1.99", "-90.79, -133.902, -30.4661, 2.5", "-91.1793, -134.38, -30.5998, 2.43", "-92.1944, -135.624, -30.8919, 0.22", "-92.5758, -136.099, -30.9706, 0.29", "-93.1071, -136.761, -31.0727, 0.22", "-93.4094, -137.15, -31.1242, 0.74", "-93.5521, -137.347, -31.1315, 0.74", "-94.039, -138.091, -31.0873, 0.15", "-94.3566, -138.706, -31.0264, 0.15", "-94.4389, -138.899, -31.013, 0.81", "-94.6874, -139.531, -31.0014, 1.33", "-94.9234, -140.165, -31.0126, 1.33", "-94.9455, -140.226, -31.0153, 1.33", "-95.2811, -141.167, -31.1483, 0.22", "-95.6329, -142.204, -31.3559, 0.22", "-95.8918, -143.023, -31.5568, 1.62", "-96.0632, -143.556, -31.7075, 1.92", "-96.2077, -144.006, -31.8457, 1.92", "-96.5802, -145.213, -32.2026, 0.22", "-96.7866, -145.904, -32.3986, 0.22", "-97.0025, -146.738, -32.648, 0.22", "-97.1779, -147.461, -32.872, 1.25", "-97.2791, -147.81, -32.9839, 1.62", "-97.4378, -148.246, -33.1136, 1.62", "-97.4939, -148.371, -33.1483, 1.62", "-98.2083, -149.741, -33.5874, 0.22", "-98.2702, -149.861, -33.6332, 0.22", "-98.6059, -150.58, -33.9291, 0.22", "-98.9597, -151.382, -34.2675, 0.22", "-99.2348, -151.984, -34.5212, 1.03", "-99.3735, -152.281, -34.6446, 1.03", "-99.8133, -153.202, -35.0147, 0.22", "-100.007, -153.623, -35.1843, 0.59", "-100.27, -154.266, -35.4336, 0.22", "-100.46, -154.739, -35.597, 0.22", "-100.698, -155.366, -35.7676, 1.25", "-100.833, -155.727, -35.8525, 1.62", "-100.874, -155.838, -35.8745, 1.62", "-101.297, -156.977, -36.1158, 0.15", "-101.554, -157.737, -36.2758, 1.25", "-101.648, -158.048, -36.3401, 1.25", "-101.96, -159.039, -36.5608, 0.22", "-101.984, -159.098, -36.5768, 0.22", "-102.231, -159.601, -36.7309, 0.74", "-102.26, -159.649, -36.7491, 0.74", "-102.415, -159.874, -36.8271, 0.74", "-103.02, -160.736, -37.0709, 0.15", "-103.499, -161.437, -37.2186, 1.11", "-103.581, -161.563, -37.2444, 1.11", "-103.622, -161.627, -37.2566, 1.11", "-104.68, -163.228, -37.5724, 0.22", "-105.009, -163.711, -37.6723, 1.03", "-105.276, -164.094, -37.7512, 1.11", "-106.101, -165.229, -38.0108, 0.22", "-106.235, -165.405, -38.056, 0.59", "-106.882, -166.202, -38.2631, 0.22", "-107.209, -166.572, -38.364, 1.33", "-107.492, -166.874, -38.433, 1.55", "-107.942, -167.316, -38.5079, 0.88", "-108.868, -168.214, -38.6022, 0.22", "-109.282, -168.619, -38.6359, 0.66", "-109.477, -168.808, -38.6745, 0.66", "-110.211, -169.503, -38.8785, 0.22", "-110.909, -170.161, -39.125, 1.62", "-111.428, -170.65, -39.3561, 2.06", "-111.876, -171.059, -39.5887, 2.06", "-113.433, -172.497, -40.454, 0.22", "-113.433, -172.497, -40.454, 0.59", "-113.536, -172.585, -40.5082, 0.59", "-114.192, -173.1, -40.8132, 0.22", "-114.853, -173.559, -41.0599, 0.22", "-115.582, -174.016, -41.247, 1.77", "-115.999, -174.257, -41.2921, 2.06", "-117.616, -175.167, -41.3675, 0.15", "-117.942, -175.339, -41.3663, 0.74", "-118.314, -175.509, -41.3258, 0.74", "-119.123, -175.85, -41.1573, 0.22", "-119.821, -176.116, -40.957, 0.22", "-120.592, -176.39, -40.6823, 1.18", "-120.966, -176.521, -40.5097, 1.55", "-122.159, -176.928, -39.9182, 0.29", "-123.04, -177.221, -39.4617, 0.22", "-123.429, -177.33, -39.2724, 0.74", "-123.748, -177.399, -39.1367, 1.03", "-124.785, -177.559, -38.7743, 0.15", "-125.11, -177.594, -38.6995, 0.37", "-125.18, -177.598, -38.6932, 0.37", "-126.291, -177.605, -38.6848, 0.22", "-127.069, -177.594, -38.7164, 1.18", "-127.62, -177.589, -38.7642, 1.55", "-128.956, -177.589, -38.9393, 0.22", "-129.592, -177.596, -39.0038, 0.22", "-130.378, -177.619, -39.058, 0.96", "-130.654, -177.629, -39.0596, 1.33", "-132.017, -177.672, -39.004, 0.22", "-132.581, -177.694, -38.9475, 0.22", "-133.611, -177.734, -38.7931, 0.96", "-133.881, -177.744, -38.7384, 1.25", "-135.643, -177.825, -38.3268, 0.22", "-136.346, -177.865, -38.1586, 0.22", "-137.688, -177.951, -37.8231, 1.84", "-137.964, -177.978, -37.7563, 2.36", "-139.777, -178.225, -37.3586, 0.22", "-140.259, -178.305, -37.2514, 0.66", "-140.991, -178.465, -37.1086, 0.22", "-141.046, -178.478, -37.0994, 0.22", "-141.794, -178.662, -37.0376, 0.96", "-142.145, -178.747, -37.0296, 0.96", "-142.21, -178.764, -37.0347, 0.96", "-143.202, -179.017, -37.1149, 0.22", "-143.268, -179.033, -37.1202, 0.22", "-144.295, -179.283, -37.2099, 0.22", "-144.369, -179.301, -37.2168, 0.22", "-145.422, -179.602, -37.2872, 0.22", "-145.496, -179.624, -37.2909, 0.22", "-145.963, -179.772, -37.3037, 1.11", "-146.44, -179.924, -37.3157, 1.4", "-146.634, -179.988, -37.3196, 1.69", "-148.492, -180.587, -37.3525, 0.22", "-148.965, -180.734, -37.3585, 0.66", "-149.186, -180.804, -37.3607, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.8813, -24.5453, 0.889967, 2.58", "-6.27241, -26.0197, 0.458827, 2.58", "-5.81519, -27.6952, -0.0823481, 1.11", "-5.49555, -29.1247, -0.52215, 0.66", "-5.26692, -30.237, -0.863897, 0.59", "-4.90127, -32.0197, -1.43477, 1.25", "-4.73721, -32.7681, -1.68198, 1.62", "-4.26859, -35.112, -2.4444, 1.11", "-3.96301, -36.5055, -2.92433, 1.33", "-3.63638, -37.7624, -3.40543, 1.92", "-3.21304, -39.0931, -3.95292, 1.99", "-2.69763, -40.4627, -4.57658, 1.33", "-2.12774, -41.9253, -5.28235, 0.96", "-1.47735, -43.5272, -6.0817, 0.96", "-1.45648, -43.5848, -6.11349, 0.96", "-1.18188, -44.5791, -6.71283, 0.74", "-0.98037, -46.0639, -7.80359, 0.52", "-1.00417, -47.0784, -8.69133, 0.52", "-1.01295, -47.1359, -8.74829, 0.52", "-1.18694, -47.9376, -9.58665, 0.88", "-1.4127, -48.9602, -10.6337, 1.18", "-1.79372, -50.6252, -12.2904, 0.59", "-2.02132, -51.6217, -13.1914, 0.59", "-2.03183, -51.6744, -13.2356, 0.59", "-2.17626, -52.5698, -13.8888, 0.59", "-2.3594, -54.0854, -14.7688, 1.55", "-2.46372, -55.2058, -15.22, 2.14", "-2.53383, -55.8533, -15.4043, 2.36", "-2.5446, -55.9194, -15.4217, 2.36", "-2.72568, -56.6241, -15.6275, 2.36", "-3.04195, -57.4194, -15.9219, 2.06", "-3.64827, -58.5584, -16.4143, 1.77", "-4.33712, -59.7233, -16.9635, 0.74", "-4.69111, -60.2825, -17.2529, 0.52", "-5.33186, -61.2195, -17.7788, 0.44", "-6.17488, -62.2912, -18.4765, 0.44", "-7.06431, -63.2745, -19.2305, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.33882, -117.762, 28.6602, 0.88", "-3.31515, -118.528, 28.6412, 0.88", "-3.24104, -119.26, 28.5968, 0.88", "-3.16536, -119.769, 28.5691, 1.18", "-3.10684, -120.099, 28.5457, 1.18", "-2.94116, -120.993, 28.482, 0.52", "-2.86605, -121.398, 28.4531, 0.52", "-2.68866, -122.192, 28.3886, 1.99", "-2.48729, -122.956, 28.3114, 3.09", "-2.34415, -123.436, 28.2558, 3.61", "-2.1722, -124.0, 28.1892, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.33882, -117.762, 28.6602, 0.74", "-2.67046, -118.597, 28.5356, 0.74", "-1.94535, -119.638, 28.4164, 0.66", "-1.58396, -120.157, 28.357, 1.11", "-1.35162, -120.491, 28.3188, 1.25", "-0.288936, -122.017, 28.1441, 0.29", "0.162725, -122.666, 28.0699, 0.29", "0.70436, -123.536, 27.9363, 0.29", "5.34782, -130.429, 27.7771, 0.29", "10.4618, -136.895, 29.0064, 0.29", "16.1697, -142.951, 29.9153, 0.29", "20.9788, -149.498, 31.7213, 0.29", "25.3759, -156.325, 33.4272, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-10.4765, 116.707, -62.9719, 0.22", "-10.9519, 115.859, -64.9116, 0.22", "-11.1297, 115.576, -65.7348, 1.18", "-11.196, 115.486, -66.0047, 1.18", "-12.1357, 114.341, -69.5521, 0.22", "-12.3426, 114.102, -70.3136, 0.22", "-13.0195, 113.321, -72.8039, 0.74", "-13.9176, 112.491, -76.0089, 0.22", "-14.2071, 112.253, -77.041, 1.03", "-14.3228, 112.162, -77.4475, 1.25", "-14.4234, 112.099, -77.7499, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-10.4765, 116.707, -62.9719, 0.52", "-9.84508, 117.824, -64.0468, 0.52", "-9.48963, 118.508, -64.6895, 0.22", "-9.04435, 119.562, -65.5879, 0.88", "-8.9825, 119.741, -65.7274, 1.03", "-8.52545, 121.305, -66.8886, 0.15", "-8.42465, 121.69, -67.1661, 0.52", "-8.40726, 121.837, -67.2613, 0.52", "-8.35501, 122.898, -67.8723, 0.15", "-8.35462, 123.376, -68.111, 0.81", "-8.3708, 124.007, -68.41, 1.11", "-8.37586, 124.059, -68.4311, 1.11", "-8.48418, 125.264, -68.9294, 0.22", "-8.52246, 125.797, -69.1647, 0.96", "-8.5351, 126.136, -69.3364, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-15.0606, 110.078, -11.9997, 0.96", "-15.1686, 110.802, -12.9972, 0.96", "-15.2797, 111.534, -13.9944, 1.03", "-15.295, 111.707, -14.2239, 1.03", "-15.3336, 112.309, -15.0093, 0.29", "-15.3498, 112.78, -15.5568, 1.25", "-15.3549, 113.106, -15.8997, 1.47", "-15.3539, 113.219, -15.9946, 1.47", "-15.3666, 114.25, -16.7058, 0.29", "-15.366, 114.344, -16.7673, 0.29", "-15.3477, 115.135, -17.2296, 0.29", "-15.3275, 115.433, -17.4099, 0.59", "-15.2679, 116.1, -17.8121, 0.44", "-15.1854, 116.946, -18.318, 2.28", "-15.1364, 117.453, -18.6161, 2.65", "-15.1106, 117.695, -18.764, 2.65", "-14.9386, 119.278, -19.7773, 0.37", "-14.8855, 119.78, -20.079, 0.29", "-14.8785, 119.844, -20.1132, 0.29", "-14.8427, 120.204, -20.275, 0.44", "-14.8312, 120.417, -20.3494, 0.44", "-14.8234, 121.05, -20.5221, 0.15", "-14.8561, 121.599, -20.6037, 0.74", "-14.8586, 121.652, -20.6131, 0.74", "-14.871, 121.975, -20.7012, 0.74", "-14.8817, 122.244, -20.7868, 0.52", "-14.9253, 122.872, -21.0049, 0.29", "-14.9979, 123.648, -21.2859, 1.18", "-15.0396, 124.012, -21.4227, 1.69", "-15.1829, 125.307, -21.9713, 0.29", "-15.2422, 125.81, -22.1959, 0.29", "-15.3717, 126.758, -22.6347, 1.77", "-15.414, 127.009, -22.759, 2.73", "-15.4546, 127.205, -22.8633, 2.73", "-15.8329, 128.823, -23.7586, 0.29", "-15.9585, 129.294, -24.0252, 0.29", "-16.0098, 129.465, -24.1305, 0.59", "-16.2025, 130.029, -24.5095, 0.22", "-16.3537, 130.415, -24.7838, 0.74", "-16.4238, 130.548, -24.8848, 1.03", "-16.4543, 130.582, -24.9154, 1.03", "-16.6492, 130.788, -25.1212, 0.81", "-16.7039, 130.851, -25.1793, 0.81", "-17.2234, 131.494, -25.6918, 0.22", "-17.4661, 131.817, -25.9254, 0.59", "-17.8689, 132.357, -26.2985, 0.22", "-17.9329, 132.443, -26.3539, 0.22", "-18.2097, 132.817, -26.5698, 0.22", "-18.5398, 133.273, -26.8007, 0.22", "-19.0025, 133.941, -27.1019, 1.62", "-19.3262, 134.427, -27.3067, 2.14", "-19.6063, 134.848, -27.4766, 2.14", "-20.3305, 135.906, -27.9116, 0.29", "-20.5632, 136.237, -28.05, 0.44", "-20.823, 136.613, -28.2063, 0.22", "-21.2229, 137.218, -28.4481, 0.22", "-21.5841, 137.801, -28.675, 1.25", "-21.7308, 138.053, -28.7728, 1.62", "-21.8042, 138.198, -28.8303, 1.84", "-22.278, 139.302, -29.2812, 0.29", "-22.6026, 140.193, -29.6418, 0.29", "-22.7724, 140.813, -29.8999, 0.74", "-22.8256, 141.064, -30.0154, 0.74", "-22.9753, 141.936, -30.4445, 0.22", "-23.0785, 142.711, -30.8391, 1.62", "-23.0819, 142.752, -30.8597, 1.62", "-23.1186, 143.315, -31.1367, 1.99", "-23.1951, 144.673, -31.7748, 0.22", "-23.1977, 144.715, -31.7937, 0.22", "-23.2591, 145.346, -32.0543, 0.22", "-23.3356, 146.035, -32.3142, 0.96", "-23.3696, 146.298, -32.4099, 1.25", "-23.5409, 147.501, -32.7823, 0.22", "-23.547, 147.545, -32.7935, 0.22", "-23.6401, 148.149, -32.9508, 0.74", "-23.6679, 148.311, -32.9929, 0.88", "-23.7494, 148.74, -33.1062, 0.29", "-23.9214, 149.569, -33.3085, 0.22", "-24.0397, 150.105, -33.4165, 0.22", "-24.1816, 150.864, -33.5203, 1.33", "-24.2245, 151.145, -33.5408, 1.92", "-24.2311, 151.19, -33.5421, 1.92", "-24.279, 151.528, -33.5417, 1.77", "-24.3314, 151.879, -33.5385, 1.69", "-24.5116, 153.079, -33.5179, 0.22", "-24.6918, 154.065, -33.4893, 0.22", "-24.8848, 154.988, -33.4637, 1.47", "-24.9788, 155.384, -33.4545, 1.99", "-25.0518, 155.647, -33.4518, 1.92", "-25.1723, 156.015, -33.4552, 1.47", "-25.662, 157.289, -33.5037, 0.22", "-25.8819, 157.801, -33.5273, 0.44", "-25.9831, 158.04, -33.5421, 0.44", "-26.2625, 158.716, -33.5923, 0.22", "-26.5667, 159.501, -33.6602, 1.18", "-26.7012, 159.877, -33.6962, 2.14", "-26.8442, 160.314, -33.7481, 1.62", "-27.2785, 161.706, -33.9184, 0.22", "-27.2936, 161.757, -33.9246, 0.22", "-27.5966, 162.879, -34.0433, 0.22", "-27.8433, 163.841, -34.1312, 0.22", "-28.0022, 164.471, -34.1682, 1.03", "-28.0572, 164.688, -34.1745, 1.62", "-28.1161, 164.904, -34.1733, 1.11", "-28.3732, 165.943, -34.102, 0.22", "-28.383, 165.987, -34.0961, 0.22", "-28.5463, 166.825, -33.9398, 1.47", "-28.596, 167.097, -33.8807, 2.06", "-28.6068, 167.156, -33.868, 2.06", "-28.843, 168.428, -33.6354, 0.22", "-28.9778, 169.134, -33.5292, 0.52", "-29.1733, 170.074, -33.4215, 0.22", "-29.3123, 170.698, -33.3705, 1.33", "-29.3873, 171.02, -33.3583, 1.33", "-29.6561, 172.116, -33.3689, 0.22", "-29.7638, 172.536, -33.4003, 0.22", "-29.9012, 173.111, -33.4598, 0.66", "-29.9514, 173.336, -33.4894, 0.66", "-30.1566, 174.402, -33.6331, 0.22", "-30.1631, 174.457, -33.64, 0.22", "-30.2084, 175.187, -33.7217, 0.22", "-30.2184, 175.879, -33.8066, 0.96", "-30.21, 176.263, -33.8552, 1.62", "-30.1974, 176.663, -33.9071, 1.4", "-30.1867, 177.933, -34.0963, 0.22", "-30.1927, 178.262, -34.1547, 0.22", "-30.2291, 179.048, -34.3129, 1.11", "-30.2378, 179.161, -34.337, 1.33", "-30.2685, 179.484, -34.4165, 1.18", "-30.4286, 180.91, -34.7825, 0.22", "-30.5159, 181.573, -34.9655, 1.03", "-30.5663, 181.943, -35.07, 1.18", "-30.5994, 182.209, -35.1558, 1.03", "-30.6985, 183.12, -35.48, 0.15", "-30.7666, 183.884, -35.7694, 0.15", "-30.8221, 184.601, -36.0445, 1.33", "-30.8562, 184.999, -36.1952, 1.55", "-30.978, 186.404, -36.7404, 0.15", "-30.9832, 186.456, -36.7599, 0.15", "-31.0647, 187.099, -36.9838, 0.15", "-31.1673, 187.835, -37.2326, 1.11", "-31.2032, 188.088, -37.3064, 1.55", "-31.3588, 189.184, -37.5758, 0.15", "-31.4557, 189.771, -37.6823, 0.74", "-31.61, 190.64, -37.8297, 0.15", "-31.6206, 190.691, -37.8379, 0.15", "-31.7298, 191.183, -37.9105, 0.15", "-31.8686, 191.773, -37.9787, 0.96", "-31.9341, 192.043, -38.0006, 0.96", "-32.2133, 193.241, -38.1054, 0.15", "-32.3239, 193.75, -38.149, 0.44", "-32.3361, 193.81, -38.1559, 0.44", "-32.4793, 194.578, -38.2668, 0.15", "-32.603, 195.319, -38.3876, 1.03", "-32.6503, 195.643, -38.4427, 1.33", "-32.704, 196.153, -38.5353, 0.59", "-32.7708, 197.009, -38.6984, 0.15", "-32.8178, 197.654, -38.8254, 0.88", "-32.8423, 198.025, -38.8997, 1.03", "-32.8677, 198.413, -38.974, 0.66", "-32.8886, 199.305, -39.1837, 0.15", "-32.8868, 200.243, -39.4299, 0.15", "-32.8842, 200.847, -39.567, 0.96", "-32.8883, 201.193, -39.6401, 1.25", "-32.8943, 201.423, -39.685, 1.25", "-32.9683, 202.856, -39.9415, 0.15", "-33.0055, 203.237, -39.9975, 0.44", "-33.1177, 204.065, -40.0958, 0.15", "-33.1812, 204.452, -40.1245, 0.74", "-33.2527, 204.84, -40.1382, 0.74", "-33.3872, 205.569, -40.1289, 0.15", "-33.5115, 206.174, -40.094, 0.88", "-33.5788, 206.555, -40.0818, 0.96", "-33.7181, 207.503, -40.0778, 0.15", "-33.793, 208.006, -40.0707, 0.29", "-33.936, 208.925, -40.0507, 0.15", "-34.0151, 209.426, -40.0343, 0.96", "-34.0781, 209.862, -40.0187, 1.18", "-34.2956, 211.346, -39.9501, 0.22", "-34.3932, 212.015, -39.9137, 0.22", "-34.418, 212.182, -39.9027, 0.22", "-34.4349, 212.298, -39.8933, 0.22", "-34.5158, 213.081, -39.8557, 0.15", "-34.5686, 213.74, -39.8504, 1.11", "-34.5888, 214.104, -39.8602, 1.77", "-34.5995, 214.389, -39.8742, 1.77", "-34.6018, 214.451, -39.8786, 1.77", "-34.6742, 216.122, -39.9953, 0.22", "-34.7113, 216.669, -40.0357, 0.15", "-34.7146, 216.715, -40.0387, 0.15", "-34.7631, 217.24, -40.0643, 0.52", "-34.7921, 217.467, -40.0736, 0.59", "-35.0056, 218.718, -40.1127, 0.15", "-35.1333, 219.372, -40.1144, 1.03", "-35.1989, 219.718, -40.1171, 1.77", "-35.2623, 220.051, -40.1225, 1.55", "-35.563, 221.479, -40.1706, 0.15", "-35.6391, 221.82, -40.1911, 0.29", "-35.7747, 222.4, -40.2441, 0.15", "-35.9292, 223.047, -40.3106, 0.15", "-35.9567, 223.159, -40.3224, 0.15", "-36.2361, 224.303, -40.4567, 0.15", "-36.4381, 225.124, -40.5577, 1.11", "-36.4512, 225.176, -40.5644, 1.11", "-36.5736, 225.634, -40.6275, 1.4", "-36.6945, 226.152, -40.7001, 0.59", "-36.8671, 226.985, -40.8133, 0.22", "-36.9808, 227.643, -40.8947, 0.22", "-37.0947, 228.347, -40.9748, 1.03", "-37.1548, 228.781, -41.0236, 1.55", "-37.3822, 230.703, -41.219, 0.15", "-37.3886, 230.758, -41.2242, 0.15", "-37.447, 231.223, -41.2552, 0.44", "-37.4828, 231.506, -41.2666, 0.44", "-37.638, 232.669, -41.2961, 0.15", "-37.7333, 233.339, -41.3087, 1.03", "-37.8005, 233.787, -41.3117, 1.62", "-38.0046, 235.221, -41.3972, 0.15", "-38.2665, 237.069, -41.5753, 0.15", "-38.372, 237.82, -41.6689, 0.15", "-38.4441, 238.332, -41.7471, 1.11", "-38.5142, 238.888, -41.8487, 1.4", "-38.7062, 240.735, -42.2262, 0.15", "-38.7545, 241.277, -42.3511, 0.15", "-38.8114, 241.931, -42.5023, 0.74", "-38.8305, 242.222, -42.5548, 0.74", "-38.833, 242.276, -42.5616, 0.74", "-38.8855, 243.756, -42.6813, 0.15", "-38.9103, 244.643, -42.6958, 1.55", "-38.913, 245.194, -42.7019, 1.92", "-38.9076, 246.819, -42.7131, 0.15", "-38.9046, 247.354, -42.7148, 0.88", "-38.9029, 247.469, -42.7148, 0.88", "-38.8911, 247.857, -42.7133, 0.88", "-38.8422, 249.032, -42.7106, 0.15", "-38.8312, 249.481, -42.7047, 0.15", "-38.8271, 249.958, -42.6892, 0.74", "-38.8261, 251.061, -42.6431, 0.15", "-38.8274, 251.114, -42.64, 0.15", "-38.8408, 251.383, -42.6196, 0.37", "-38.8965, 252.003, -42.5618, 0.22", "-38.943, 252.401, -42.5159, 0.88", "-38.9499, 252.446, -42.5101, 0.88", "-39.1402, 253.654, -42.4078, 0.15", "-39.2164, 254.167, -42.3811, 0.15", "-39.2243, 254.228, -42.3798, 0.15", "-39.3283, 255.08, -42.3894, 1.25", "-39.3509, 255.294, -42.4012, 1.25", "-39.5041, 256.717, -42.5336, 0.15", "-39.51, 256.771, -42.5408, 0.15", "-39.5635, 257.29, -42.6301, 1.18", "-39.5821, 257.45, -42.6604, 1.18", "-39.7096, 258.614, -42.9381, 0.15", "-39.8213, 259.468, -43.1944, 0.15", "-39.8554, 259.678, -43.2672, 0.44", "-40.1053, 261.127, -43.8014, 0.15", "-40.2952, 262.163, -44.2127, 1.77", "-40.4102, 262.777, -44.4747, 1.55", "-40.6002, 263.752, -44.9211, 0.22", "-40.6808, 264.158, -45.1282, 0.37", "-40.8222, 264.803, -45.4753, 0.15", "-40.833, 264.842, -45.4978, 0.15", "-40.9607, 265.281, -45.7639, 0.74", "-41.0364, 265.52, -45.8973, 0.74", "-41.2063, 266.081, -46.1852, 0.15", "-41.3197, 266.422, -46.3621, 0.66", "-41.4119, 266.675, -46.49, 1.25", "-41.838, 267.772, -47.0543, 0.15", "-41.8595, 267.825, -47.0814, 0.15", "-42.1285, 268.491, -47.4108, 0.15", "-42.3747, 269.119, -47.6961, 0.96", "-42.4853, 269.407, -47.827, 1.55", "-43.0407, 270.911, -48.4815, 0.15", "-43.0549, 270.952, -48.4973, 0.15", "-43.3005, 271.708, -48.775, 1.18", "-43.4379, 272.168, -48.9343, 0.52", "-43.6579, 272.983, -49.1861, 0.15", "-43.779, 273.456, -49.3143, 0.52", "-44.1364, 274.839, -49.6195, 0.15", "-44.2759, 275.306, -49.7155, 0.15", "-44.5149, 275.989, -49.849, 0.66", "-44.682, 276.4, -49.922, 0.96", "-44.8239, 276.701, -49.9664, 0.96", "-45.4501, 277.765, -50.092, 0.15", "-45.9336, 278.444, -50.1577, 0.52", "-46.1551, 278.733, -50.1824, 0.52", "-46.5243, 279.186, -50.2164, 0.15", "-46.9741, 279.716, -50.2531, 1.11", "-48.109, 281.009, -50.3267, 0.15", "-48.5197, 281.462, -50.3394, 1.18", "-48.8244, 281.802, -50.352, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-15.0606, 110.078, -11.9997, 0.59", "-14.9816, 110.968, -11.9724, 0.59", "-14.9414, 111.764, -11.9687, 1.18", "-14.9264, 112.532, -11.9909, 1.84", "-14.9285, 112.987, -12.0098, 2.06", "-14.9431, 113.424, -12.03, 2.06", "-14.9765, 113.981, -12.0561, 1.84", "-15.0431, 114.592, -12.0883, 1.55", "-15.2045, 115.682, -12.1534, 0.37", "-15.3285, 116.378, -12.1961, 0.37", "-15.4963, 117.228, -12.2625, 0.96", "-15.6761, 118.074, -12.3357, 1.47", "-15.7715, 118.493, -12.3719, 1.69", "-15.9137, 119.114, -12.4193, 1.55", "-16.0442, 119.678, -12.4613, 1.33", "-16.1822, 120.411, -12.5089, 0.66", "-16.3034, 121.339, -12.5747, 0.37", "-16.3866, 122.4, -12.6487, 0.29", "-16.4195, 123.308, -12.7082, 0.29", "-16.4187, 123.379, -12.7122, 0.29", "-16.3275, 124.932, -12.77, 0.29", "-16.2591, 125.677, -12.7796, 0.81", "-16.1981, 126.226, -12.7851, 0.96", "-16.1917, 126.294, -12.7854, 0.96", "-16.1692, 126.731, -12.7868, 0.96", "-16.1647, 127.83, -12.7857, 0.29", "-16.1988, 128.478, -12.785, 0.29", "-16.2719, 129.356, -12.7757, 1.47", "-16.3542, 130.201, -12.7904, 2.06", "-16.38, 130.512, -12.8005, 2.5", "-16.419, 131.01, -12.8226, 2.43", "-16.4553, 131.546, -12.8496, 2.14", "-16.4912, 132.159, -12.8834, 1.77", "-16.5377, 132.991, -12.9294, 0.66", "-16.6139, 134.254, -12.9942, 0.44", "-16.6859, 135.258, -13.038, 0.37", "-16.769, 136.195, -13.0737, 0.37", "-16.8818, 137.132, -13.1032, 1.33", "-17.0104, 137.969, -13.1261, 1.77", "-17.1585, 138.755, -13.1395, 2.28", "-17.27, 139.24, -13.1562, 2.65", "-17.3698, 139.657, -13.1743, 2.8", "-17.5122, 140.236, -13.2015, 2.5", "-17.6237, 140.723, -13.2215, 1.99", "-17.7108, 141.135, -13.2383, 1.77", "-17.8336, 141.808, -13.262, 0.81", "-17.9598, 142.725, -13.2787, 0.44", "-18.0573, 143.658, -13.2874, 0.37", "-18.1083, 144.482, -13.2815, 0.74", "-18.1263, 144.9, -13.2733, 0.74", "-18.1538, 145.513, -13.2551, 0.74", "-18.2266, 146.745, -13.2229, 0.52", "-18.2309, 146.804, -13.222, 0.44", "-18.3117, 147.732, -13.2155, 0.44", "-18.3925, 148.507, -13.2158, 0.44", "-18.5526, 149.862, -13.2237, 0.44", "-18.784, 151.502, -13.2444, 1.55", "-18.9085, 152.29, -13.2588, 2.43", "-18.9983, 152.862, -13.2675, 2.65", "-19.0749, 153.356, -13.2819, 2.87", "-19.1851, 154.076, -13.3085, 2.36", "-19.3005, 154.844, -13.3553, 1.47", "-19.378, 155.358, -13.3856, 0.96", "-19.5409, 156.373, -13.4502, 0.37", "-19.6921, 157.277, -13.507, 0.37", "-19.8812, 158.394, -13.5728, 0.29", "-20.0171, 159.258, -13.6263, 1.69", "-20.1412, 160.116, -13.7061, 2.28", "-20.2, 160.498, -13.7538, 2.73", "-20.2619, 160.857, -13.8082, 2.8", "-20.3798, 161.505, -13.9145, 1.99", "-20.5477, 162.418, -14.0883, 0.88", "-20.7782, 163.483, -14.3115, 0.29", "-20.9609, 164.199, -14.486, 0.37", "-21.1033, 164.706, -14.6104, 0.44", "-21.1907, 164.978, -14.6709, 0.59", "-21.2372, 165.111, -14.6932, 0.59", "-21.3888, 165.546, -14.7318, 0.44", "-21.5976, 166.247, -14.7439, 0.37", "-21.6139, 166.314, -14.7436, 0.37", "-21.814, 167.374, -14.7305, 0.52", "-21.9524, 168.305, -14.7111, 0.81", "-21.9987, 168.747, -14.7024, 0.81", "-22.0279, 169.204, -14.6948, 0.66", "-22.0298, 169.263, -14.6957, 0.66", "-22.0513, 169.807, -14.7275, 0.44", "-22.0863, 170.823, -14.8263, 0.37", "-22.1156, 171.776, -14.9329, 0.37", "-22.1166, 171.834, -14.9421, 0.37", "-22.1151, 172.773, -15.1422, 1.62", "-22.1082, 173.572, -15.3454, 2.65", "-22.1018, 174.034, -15.4773, 2.65", "-22.0795, 174.997, -15.7819, 1.92", "-22.0505, 176.164, -16.1626, 0.74", "-22.0414, 177.217, -16.4936, 0.37", "-22.0653, 178.146, -16.7428, 0.37", "-22.0694, 178.204, -16.7553, 0.37", "-22.152, 178.797, -16.854, 0.37", "-22.1834, 178.943, -16.8679, 0.37", "-22.4267, 179.778, -16.8615, 0.37", "-22.763, 180.781, -16.7935, 1.03", "-23.0409, 181.592, -16.7242, 1.77", "-23.1967, 182.066, -16.6847, 2.06", "-23.348, 182.542, -16.6437, 1.92", "-23.5549, 183.244, -16.5905, 1.33", "-23.6854, 183.739, -16.5618, 0.59", "-23.8797, 184.576, -16.5418, 0.37", "-23.9737, 185.089, -16.5262, 0.59", "-24.0151, 185.445, -16.5131, 0.66", "-24.0298, 185.664, -16.5047, 0.66", "-24.0556, 186.172, -16.4876, 0.37", "-24.0843, 186.681, -16.4729, 0.37", "-24.1649, 187.632, -16.4504, 0.37", "-24.2635, 188.559, -16.4325, 0.37", "-24.368, 189.42, -16.4182, 0.59", "-24.5339, 190.702, -16.399, 0.52", "-24.6397, 191.482, -16.3882, 1.33", "-24.7422, 192.22, -16.3893, 2.14", "-24.8481, 192.947, -16.4156, 2.36", "-24.9262, 193.59, -16.4585, 2.58", "-24.9614, 194.129, -16.5035, 2.36", "-24.978, 194.939, -16.5761, 1.62", "-24.9754, 195.736, -16.6524, 0.81", "-24.9579, 196.74, -16.747, 0.52", "-24.9412, 197.813, -16.835, 0.52", "-24.9327, 198.579, -16.889, 0.44", "-24.9373, 200.013, -16.9707, 0.44", "-24.9685, 201.434, -17.0254, 1.11", "-25.0105, 202.226, -17.0338, 1.84", "-25.0829, 203.003, -17.0277, 2.36", "-25.1249, 203.278, -17.0256, 2.5", "-25.2603, 203.914, -17.0242, 2.21", "-25.4196, 204.533, -17.0224, 1.55", "-25.5826, 205.093, -17.0189, 0.96", "-25.7422, 205.626, -17.0182, 0.66", "-25.9702, 206.463, -17.0178, 0.37", "-26.1439, 207.215, -17.0093, 0.66", "-26.259, 207.792, -16.9961, 0.88", "-26.4078, 208.722, -16.9645, 0.37", "-26.4784, 209.297, -16.9397, 0.37", "-26.5636, 210.233, -16.889, 0.37", "-26.6217, 211.388, -16.8178, 1.11", "-26.6223, 211.447, -16.8139, 1.11", "-26.5911, 212.251, -16.7692, 1.99", "-26.5444, 212.847, -16.743, 2.21", "-26.5011, 213.277, -16.7303, 2.36", "-26.3982, 214.274, -16.7108, 1.33", "-26.3264, 214.964, -16.7027, 0.52", "-26.2397, 215.998, -16.6975, 0.29", "-26.2142, 216.428, -16.6967, 0.59", "-26.2007, 216.789, -16.696, 0.59", "-26.1865, 217.508, -16.692, 0.44", "-26.1855, 218.165, -16.6846, 0.37", "-26.19, 218.89, -16.6682, 0.37", "-26.196, 219.703, -16.6502, 1.18", "-26.1872, 220.3, -16.644, 1.77", "-26.1626, 220.949, -16.642, 2.06", "-26.1309, 221.53, -16.6444, 1.92", "-26.0948, 222.099, -16.6508, 1.55", "-26.0605, 222.985, -16.6679, 0.37", "-26.0495, 223.952, -16.6935, 0.37", "-26.0519, 224.023, -16.6974, 0.37", "-26.1078, 224.744, -16.7497, 0.37", "-26.1154, 224.815, -16.7554, 0.37", "-26.2801, 226.168, -16.8598, 0.37", "-26.2903, 226.238, -16.8646, 0.37", "-26.4818, 227.497, -16.9672, 1.18", "-26.6001, 228.274, -17.0329, 1.62", "-26.6583, 228.7, -17.0675, 1.84", "-26.7369, 229.429, -17.1165, 1.55", "-26.782, 230.145, -17.1646, 1.11", "-26.8131, 230.853, -17.2084, 0.52", "-26.8385, 231.928, -17.2649, 0.44", "-26.8466, 232.762, -17.3119, 0.37", "-26.8477, 233.819, -17.3697, 0.37", "-26.8273, 235.232, -17.4511, 1.33", "-26.8179, 235.66, -17.4744, 1.84", "-26.8146, 235.812, -17.4811, 1.84", "-26.804, 236.243, -17.4997, 1.84", "-26.8052, 237.202, -17.5349, 1.25", "-26.8138, 237.777, -17.5602, 0.74", "-26.846, 238.713, -17.5985, 0.37", "-26.8694, 239.392, -17.6297, 0.44", "-26.895, 240.139, -17.6744, 0.44", "-26.936, 241.211, -17.749, 0.44", "-26.9757, 242.1, -17.8184, 1.03", "-27.0213, 242.896, -17.8816, 1.18", "-27.0571, 243.575, -17.9489, 0.74", "-27.0876, 244.078, -18.0045, 0.74", "-27.1426, 244.86, -18.093, 0.59", "-27.1482, 244.93, -18.1006, 0.59", "-27.2017, 245.504, -18.1471, 0.59", "-27.2997, 246.647, -18.2536, 1.47", "-27.3542, 247.361, -18.3171, 2.21", "-27.3926, 247.936, -18.3632, 2.5", "-27.4135, 248.434, -18.4002, 2.65", "-27.4274, 249.384, -18.4548, 1.55", "-27.41, 250.35, -18.4909, 0.74", "-27.3549, 251.476, -18.5234, 0.52", "-27.3489, 251.555, -18.5267, 0.52", "-27.253, 252.473, -18.5706, 0.52", "-27.0925, 253.693, -18.6398, 1.33", "-26.9636, 254.551, -18.6914, 1.4", "-26.8166, 255.458, -18.7461, 1.18", "-26.7106, 256.159, -18.8047, 0.52", "-26.6934, 256.298, -18.8198, 0.52", "-26.6147, 257.116, -18.9273, 0.52", "-26.5671, 257.79, -19.0233, 0.52", "-26.5118, 259.016, -19.1898, 0.74", "-26.491, 260.091, -19.3119, 0.96", "-26.4878, 261.216, -19.4308, 1.99", "-26.4908, 261.586, -19.4669, 2.58", "-26.4931, 262.107, -19.5077, 2.36", "-26.4889, 262.695, -19.5439, 2.14", "-26.4643, 263.556, -19.5743, 1.03", "-26.4066, 264.481, -19.5893, 0.52", "-26.3205, 265.539, -19.6022, 0.52", "-26.2328, 266.654, -19.6062, 0.52", "-26.1891, 267.251, -19.6037, 0.88", "-26.1495, 267.823, -19.5965, 0.52", "-26.0942, 268.757, -19.5754, 0.52", "-26.0661, 269.504, -19.5488, 0.52", "-26.0576, 270.708, -19.5071, 1.4", "-26.0696, 271.374, -19.4854, 1.77", "-26.0854, 271.817, -19.4695, 1.92", "-26.1048, 272.244, -19.4523, 1.62", "-26.1429, 272.977, -19.4192, 1.11", "-26.1852, 273.847, -19.3811, 0.74", "-26.2417, 275.115, -19.3417, 0.59", "-26.317, 276.632, -19.2952, 0.59", "-26.3799, 277.822, -19.259, 0.44", "-26.4052, 278.328, -19.2431, 0.66", "-26.4086, 278.4, -19.2407, 0.66", "-26.4604, 279.553, -19.2016, 1.33", "-26.5035, 280.49, -19.1689, 2.21", "-26.5358, 281.213, -19.1307, 2.73", "-26.5784, 281.892, -19.0919, 2.87", "-26.6003, 282.207, -19.0769, 3.09", "-26.6563, 282.87, -19.0562, 2.36", "-26.7374, 283.66, -19.0433, 1.25", "-26.807, 284.225, -19.0448, 0.66", "-26.9752, 285.376, -19.0846, 0.37", "-27.1259, 286.254, -19.1378, 0.66", "-27.2409, 286.901, -19.1877, 0.52", "-27.3019, 287.258, -19.2203, 0.66", "-27.4111, 287.967, -19.2907, 0.74", "-27.5136, 288.781, -19.3889, 0.81", "-27.5912, 289.64, -19.5079, 1.25", "-27.6198, 290.186, -19.5869, 1.69", "-27.6255, 290.591, -19.648, 1.69", "-27.6133, 291.387, -19.7681, 1.4", "-27.5794, 292.259, -19.8999, 1.11", "-27.5379, 292.967, -19.9932, 0.74", "-27.4762, 294.02, -20.1212, 0.59", "-27.4727, 294.099, -20.1302, 0.59", "-27.4542, 294.899, -20.2092, 0.59", "-27.4536, 294.968, -20.2139, 0.59", "-27.4792, 296.334, -20.2478, 0.59", "-27.5267, 297.193, -20.2473, 1.11", "-27.5333, 297.261, -20.2479, 1.11", "-27.6101, 297.894, -20.2551, 1.77", "-27.6948, 298.487, -20.2675, 2.06", "-27.7723, 298.981, -20.284, 2.06", "-27.8873, 299.618, -20.312, 1.77", "-27.9648, 300.055, -20.3306, 1.4", "-28.0491, 300.557, -20.351, 0.81", "-28.2394, 301.696, -20.4014, 0.59", "-28.4238, 302.846, -20.4522, 0.59", "-28.5245, 303.557, -20.4896, 0.96", "-28.5953, 304.052, -20.5185, 0.96", "-28.6175, 304.205, -20.5273, 0.96", "-28.6729, 304.592, -20.5517, 0.81", "-28.7657, 305.267, -20.5934, 0.81", "-28.9041, 306.364, -20.658, 0.37", "-29.0297, 307.44, -20.7198, 0.37", "-29.1402, 308.444, -20.7543, 0.37", "-29.2143, 309.144, -20.7637, 1.25", "-29.2799, 309.866, -20.7476, 1.77", "-29.3302, 310.461, -20.7124, 2.28", "-29.3652, 311.027, -20.6543, 2.58", "-29.3924, 311.745, -20.5648, 2.36", "-29.4166, 312.378, -20.4781, 1.92", "-29.4464, 313.158, -20.3697, 0.96", "-29.4733, 313.886, -20.2757, 0.37", "-29.519, 314.921, -20.1611, 0.37", "-29.5563, 315.653, -20.1074, 0.74", "-29.5822, 316.083, -20.0938, 0.74", "-29.6269, 316.709, -20.0896, 0.74", "-29.6774, 317.357, -20.12, 0.37", "-29.7304, 318.07, -20.1938, 0.29", "-29.7688, 318.619, -20.2809, 0.29", "-29.773, 318.687, -20.2945, 0.29", "-29.8358, 320.034, -20.6169, 0.29", "-29.8497, 320.734, -20.8066, 0.74", "-29.8463, 321.8, -21.1035, 1.84", "-29.8402, 322.196, -21.2083, 2.28", "-29.8398, 322.253, -21.2215, 2.28", "-29.8408, 322.889, -21.3513, 2.06", "-29.8522, 323.762, -21.5007, 1.25", "-29.8935, 324.779, -21.6157, 0.15", "-29.9264, 325.358, -21.6537, 0.15", "-29.9905, 326.232, -21.6862, 0.74", "-30.0217, 326.584, -21.691, 1.03", "-30.068, 327.022, -21.6874, 1.03", "-30.1275, 327.511, -21.6794, 0.74", "-30.2019, 328.199, -21.6996, 0.22", "-30.2801, 329.053, -21.7498, 0.22", "-30.391, 330.496, -21.8571, 0.88", "-30.4312, 331.072, -21.9017, 1.47", "-30.4623, 331.569, -21.9443, 1.69", "-30.521, 332.645, -22.0404, 1.03", "-30.5787, 333.741, -22.1404, 0.37", "-30.6343, 335.205, -22.2659, 0.37", "-30.6615, 336.503, -22.3782, 0.29", "-30.685, 337.836, -22.4803, 1.4", "-30.6964, 338.356, -22.5125, 1.84", "-30.714, 338.935, -22.5351, 1.69", "-30.7369, 339.728, -22.5725, 0.81", "-30.7752, 341.058, -22.6385, 0.29", "-30.8083, 342.272, -22.6949, 0.29", "-30.826, 342.911, -22.7149, 0.96", "-30.8443, 343.499, -22.7284, 1.33", "-30.8602, 344.05, -22.7325, 1.33", "-30.872, 344.538, -22.7338, 1.03", "-30.8724, 344.6, -22.7331, 1.03", "-30.8541, 345.72, -22.7259, 0.29", "-30.8255, 346.739, -22.7221, 0.29", "-30.7886, 348.017, -22.7442, 0.88", "-30.772, 348.949, -22.7736, 1.69", "-30.7687, 349.48, -22.7943, 2.36", "-30.7737, 349.773, -22.8074, 2.58", "-30.8014, 350.521, -22.8465, 2.06", "-30.8737, 352.021, -22.9182, 0.37", "-30.9353, 353.016, -22.9597, 0.37", "-31.0174, 354.101, -22.9906, 0.37", "-31.084, 354.957, -23.0087, 0.37", "-31.0891, 355.028, -23.0094, 0.37", "-31.1837, 356.683, -22.9965, 0.37", "-31.1854, 356.754, -22.9961, 0.37", "-31.1744, 357.69, -23.0081, 0.37", "-31.1481, 358.428, -23.0286, 0.96", "-31.1079, 359.269, -23.0601, 1.25", "-31.0626, 360.125, -23.0977, 0.88", "-30.9764, 361.514, -23.1696, 0.29", "-30.9688, 361.619, -23.1748, 0.29", "-30.8911, 362.487, -23.2357, 0.88", "-30.8187, 363.286, -23.2966, 1.62", "-30.7769, 363.764, -23.331, 1.99", "-30.7333, 364.249, -23.3579, 1.99", "-30.6866, 364.691, -23.3684, 1.69", "-30.5636, 365.65, -23.4076, 0.59", "-30.3834, 366.852, -23.464, 0.29", "-30.274, 367.583, -23.5134, 0.81", "-30.182, 368.221, -23.5618, 0.81", "-30.0614, 369.113, -23.6323, 0.29", "-29.9469, 370.068, -23.705, 0.29", "-29.7867, 371.513, -23.85, 0.29", "-29.6451, 372.944, -24.044, 1.25", "-29.5971, 373.486, -24.125, 1.69", "-29.5623, 373.919, -24.1916, 1.92", "-29.507, 374.688, -24.3078, 1.47", "-29.4007, 376.036, -24.4863, 0.29", "-29.3181, 376.84, -24.5897, 0.29", "-29.1786, 377.913, -24.7049, 0.88", "-29.1011, 378.429, -24.7526, 1.18", "-29.0126, 378.942, -24.7896, 0.96", "-28.8773, 379.661, -24.8172, 0.44", "-28.7122, 380.589, -24.8017, 0.29", "-28.695, 380.689, -24.8039, 0.29", "-28.5869, 381.528, -24.8546, 0.29", "-28.581, 381.598, -24.8601, 0.29", "-28.5513, 382.107, -24.91, 0.81", "-28.5351, 382.536, -24.9537, 0.81", "-28.4987, 383.305, -25.0264, 0.66", "-28.4294, 384.388, -25.121, 0.29", "-28.3502, 385.276, -25.1838, 0.29", "-28.2577, 386.149, -25.2446, 1.11", "-28.1742, 386.922, -25.2927, 1.69", "-28.125, 387.464, -25.326, 1.92", "-28.0922, 387.94, -25.351, 1.92", "-28.0406, 389.14, -25.4263, 0.74", "-28.0288, 390.086, -25.49, 0.37", "-28.0488, 391.154, -25.5597, 0.37", "-28.1005, 392.402, -25.6516, 0.29", "-28.1424, 393.133, -25.7126, 0.29", "-28.1788, 393.779, -25.7724, 0.88", "-28.1996, 394.199, -25.8113, 0.88", "-28.211, 394.73, -25.8492, 0.52", "-28.2024, 395.347, -25.8898, 0.29", "-28.1807, 395.998, -25.9259, 0.29", "-28.1639, 396.851, -25.973, 0.29", "-28.1649, 397.656, -26.013, 1.55", "-28.1705, 398.607, -26.0469, 2.58", "-28.1744, 399.06, -26.0535, 2.65", "-28.1725, 399.779, -26.0455, 2.21", "-28.1517, 400.716, -26.0284, 1.11", "-28.1174, 401.573, -26.0129, 0.52", "-28.0604, 402.613, -25.9987, 0.52", "-27.976, 403.673, -25.9851, 0.74", "-27.8734, 404.676, -25.9719, 0.88", "-27.7382, 405.646, -25.956, 1.33", "-27.727, 405.704, -25.9556, 1.33", "-27.5937, 406.262, -25.9572, 1.62", "-27.4871, 406.652, -25.9602, 1.62", "-27.4631, 406.727, -25.9601, 1.62", "-27.4018, 406.915, -25.956, 1.62", "-27.0316, 408.023, -25.9069, 0.52", "-26.7556, 408.875, -25.8671, 0.29", "-26.5068, 409.641, -25.8319, 0.29", "-26.2853, 410.418, -25.7616, 0.96", "-26.1668, 410.932, -25.6872, 1.4", "-26.1567, 410.999, -25.6746, 1.4", "-26.1306, 411.43, -25.5788, 1.4", "-26.1309, 411.512, -25.5581, 1.4", "-26.1805, 412.56, -25.2821, 1.03", "-26.2471, 413.515, -25.0327, 0.44", "-26.3293, 414.713, -24.734, 0.29", "-26.3933, 415.556, -24.5096, 0.29", "-26.4731, 416.598, -24.2353, 1.33", "-26.5162, 417.149, -24.0959, 1.84", "-26.5609, 417.713, -23.9667, 1.84", "-26.6141, 418.347, -23.8243, 1.25", "-26.7249, 419.541, -23.571, 0.37", "-26.8629, 420.861, -23.3391, 0.29", "-26.8712, 420.928, -23.3292, 0.29", "-26.9793, 421.708, -23.2255, 0.44", "-27.1301, 422.706, -23.1093, 0.52", "-27.2933, 423.686, -23.0182, 0.44", "-27.5039, 424.962, -22.9553, 0.44", "-27.7364, 426.345, -22.902, 1.11", "-27.8651, 427.133, -22.878, 1.69", "-27.9461, 427.647, -22.8671, 1.84", "-28.025, 428.201, -22.8604, 1.84", "-28.1642, 429.274, -22.8592, 0.66", "-28.2982, 430.415, -22.8741, 0.37", "-28.313, 430.554, -22.878, 0.37", "-28.4516, 431.923, -22.9094, 0.37", "-28.5434, 433.016, -22.9217, 0.96", "-28.5508, 433.159, -22.922, 0.96", "-28.5634, 433.887, -22.9133, 1.55", "-28.5373, 434.543, -22.9063, 1.84", "-28.5319, 434.612, -22.9056, 1.84", "-28.4678, 435.216, -22.9013, 1.69", "-28.3702, 436.083, -22.8971, 0.74", "-28.281, 437.007, -22.8628, 0.29", "-28.2059, 438.037, -22.7984, 0.29", "-28.2036, 438.108, -22.7926, 0.29", "-28.2063, 439.111, -22.6965, 0.29", "-28.2097, 439.179, -22.6886, 0.29", "-28.2967, 440.184, -22.5449, 0.81", "-28.3692, 440.811, -22.449, 1.47", "-28.4348, 441.311, -22.3777, 1.77", "-28.4495, 441.422, -22.3662, 1.77", "-28.5159, 441.986, -22.3265, 1.55", "-28.5317, 442.125, -22.3208, 1.55", "-28.6031, 442.788, -22.3166, 0.96", "-28.6634, 443.52, -22.3083, 0.59", "-28.7566, 444.875, -22.2625, 0.29", "-28.8106, 445.771, -22.2187, 0.29", "-28.8143, 445.842, -22.2143, 0.29", "-28.8621, 446.927, -22.1363, 0.59", "-28.8857, 447.642, -22.0756, 0.81", "-28.8953, 448.562, -21.9873, 1.25", "-28.8893, 449.013, -21.9403, 1.62", "-28.8871, 449.369, -21.9076, 1.69", "-28.885, 449.523, -21.8957, 1.69", "-28.8787, 450.044, -21.8638, 1.25", "-28.8804, 450.886, -21.8136, 0.66", "-28.884, 451.757, -21.7655, 0.66", "-28.8909, 452.774, -21.7025, 0.66", "-28.9045, 454.003, -21.6212, 0.37", "-28.9259, 454.873, -21.5626, 0.37", "-28.9528, 455.918, -21.4889, 1.62", "-28.9631, 456.496, -21.4461, 2.06", "-28.9645, 456.887, -21.4165, 2.06", "-28.9629, 457.757, -21.3526, 1.47", "-28.9561, 458.614, -21.2936, 0.81", "-28.9277, 459.58, -21.2367, 0.37", "-28.8687, 460.736, -21.1863, 0.88", "-28.8636, 460.805, -21.1832, 0.88", "-28.8191, 461.301, -21.1607, 0.88", "-28.8125, 461.362, -21.1579, 0.88", "-28.7527, 461.969, -21.138, 1.11", "-28.738, 462.143, -21.1355, 1.11", "-28.7198, 462.492, -21.112, 1.11", "-28.7166, 462.563, -21.1052, 1.11", "-28.6938, 463.137, -21.0352, 0.81", "-28.6664, 464.004, -20.9157, 0.66", "-28.6429, 464.812, -20.7941, 0.44", "-28.6067, 465.922, -20.6211, 0.29", "-28.6022, 466.03, -20.6038, 0.29", "-28.5646, 466.604, -20.5088, 0.29", "-28.5552, 466.708, -20.4917, 0.29", "-28.4905, 467.542, -20.3839, 0.81", "-28.4856, 467.632, -20.376, 0.81", "-28.4643, 468.181, -20.3269, 0.81", "-28.46, 468.392, -20.3039, 0.81", "-28.4399, 469.493, -20.1696, 0.59", "-28.4281, 470.846, -19.9965, 0.88", "-28.429, 470.985, -19.9789, 0.88", "-28.4618, 472.196, -19.7826, 1.62", "-28.4863, 472.718, -19.6863, 1.77", "-28.5297, 473.517, -19.5275, 1.4", "-28.5773, 474.303, -19.3608, 0.88", "-28.6691, 475.653, -19.0727, 0.52", "-28.7645, 476.808, -18.8502, 0.74", "-28.8441, 477.523, -18.7375, 1.33", "-28.9567, 478.274, -18.625, 1.84", "-29.0251, 478.684, -18.5692, 1.99", "-29.1189, 479.26, -18.5013, 1.99", "-29.2323, 480.019, -18.43, 1.18", "-29.3699, 481.03, -18.3652, 0.52", "-29.5568, 482.541, -18.262, 0.44", "-29.6878, 483.677, -18.1837, 1.03", "-29.7704, 484.554, -18.1232, 1.25", "-29.7989, 485.161, -18.0811, 1.55", "-29.7995, 485.232, -18.0762, 1.55", "-29.7848, 485.912, -18.0351, 1.55", "-29.7611, 486.779, -17.9961, 1.25", "-29.7535, 487.729, -17.9568, 0.74", "-29.7562, 489.496, -17.887, 0.29", "-29.7569, 489.564, -17.8844, 0.29", "-29.7858, 491.159, -17.8264, 0.29", "-29.8311, 492.461, -17.7833, 0.29", "-29.9004, 493.687, -17.7478, 1.47", "-29.9609, 494.443, -17.7292, 2.06", "-30.0162, 494.94, -17.7201, 2.36", "-30.1185, 495.816, -17.7048, 2.06", "-30.299, 497.302, -17.6803, 0.81", "-30.4852, 498.663, -17.6306, 0.81", "-30.6142, 499.535, -17.583, 0.52", "-30.7764, 500.588, -17.5076, 0.81", "-30.9298, 501.602, -17.4169, 1.03", "-30.9396, 501.67, -17.4092, 1.03", "-31.0429, 502.591, -17.2801, 1.03", "-31.0563, 502.761, -17.2483, 1.03", "-31.1051, 503.707, -17.0557, 0.88", "-31.1068, 503.816, -17.0329, 0.88", "-31.1008, 504.82, -16.835, 0.74", "-31.063, 505.939, -16.6377, 0.37", "-30.9796, 507.376, -16.4228, 1.18", "-30.9269, 508.341, -16.2892, 1.92", "-30.9006, 508.919, -16.217, 1.92", "-30.8754, 509.587, -16.1429, 1.62", "-30.8471, 510.639, -16.0462, 0.96", "-30.8288, 511.665, -15.9733, 0.74", "-30.8159, 512.899, -15.929, 0.74", "-30.8287, 513.987, -15.9003, 0.74", "-30.8321, 514.127, -15.8975, 0.74", "-30.8728, 515.196, -15.882, 0.74", "-30.8804, 515.362, -15.8817, 0.74", "-30.9269, 516.546, -15.8893, 0.74", "-30.9693, 517.852, -15.9046, 0.96", "-30.9767, 518.148, -15.9087, 0.96", "-31.0048, 519.375, -15.9221, 0.96", "-31.0264, 520.134, -15.927, 1.47", "-31.0348, 520.353, -15.927, 1.47", "-31.0848, 521.39, -15.9176, 1.69", "-31.0905, 521.488, -15.9163, 1.69", "-31.1272, 522.146, -15.9185, 1.69", "-31.163, 523.303, -15.9263, 1.11", "-31.1677, 523.823, -15.9383, 1.03", "-31.1662, 524.32, -15.9559, 1.03", "-31.1553, 525.468, -16.0066, 0.59", "-31.1315, 527.1, -16.0838, 0.44", "-31.0927, 528.85, -16.1752, 0.44", "-31.0519, 529.917, -16.228, 1.11", "-30.9909, 530.915, -16.2816, 1.69", "-30.9235, 531.637, -16.3151, 1.99", "-30.8348, 532.39, -16.3444, 1.62", "-30.8254, 532.461, -16.3459, 1.62", "-30.6678, 533.574, -16.3578, 0.88", "-30.4564, 535.061, -16.3717, 0.74", "-30.1833, 536.921, -16.4033, 0.74", "-30.1733, 536.99, -16.4046, 0.74", "-30.0049, 538.146, -16.4326, 0.74", "-29.8033, 539.606, -16.4229, 0.88", "-29.6202, 541.136, -16.3677, 0.66", "-29.6121, 541.216, -16.3621, 0.66", "-29.4961, 542.552, -16.2458, 0.66", "-29.4114, 543.604, -16.1372, 0.66", "-29.3323, 545.051, -15.9603, 1.25", "-29.3233, 545.696, -15.8695, 1.99", "-29.3394, 546.122, -15.805, 1.99", "-29.3973, 546.849, -15.7112, 1.55", "-29.4174, 546.995, -15.696, 1.55", "-29.5786, 547.909, -15.6338, 1.33", "-29.7499, 548.903, -15.6351, 1.18", "-29.8697, 549.767, -15.6407, 0.96", "-29.9409, 550.498, -15.6163, 0.96", "-29.9473, 550.647, -15.6062, 0.96", "-29.9499, 551.5, -15.5292, 0.66", "-29.9009, 552.511, -15.4138, 0.52", "-29.8275, 553.422, -15.2947, 0.52", "-29.6935, 554.743, -15.1052, 0.81", "-29.5565, 555.846, -14.9368, 1.33", "-29.5358, 555.993, -14.9123, 1.33", "-29.3994, 556.83, -14.7846, 1.77", "-29.3093, 557.349, -14.7151, 2.28", "-29.297, 557.418, -14.7123, 2.28", "-29.1946, 558.086, -14.7679, 2.28", "-29.1375, 558.521, -14.8218, 2.28", "-29.0344, 559.428, -14.9473, 1.92", "-29.0275, 559.497, -14.9578, 1.92", "-28.8964, 560.956, -15.1846, 0.81", "-28.8018, 562.42, -15.3184, 0.81", "-28.7954, 562.572, -15.3252, 0.81", "-28.7778, 563.457, -15.3188, 0.66", "-28.7782, 563.538, -15.3127, 0.66", "-28.8083, 564.58, -15.19, 0.66", "-28.8913, 565.947, -14.9349, 0.66", "-28.9038, 566.082, -14.9052, 0.66", "-29.0114, 566.859, -14.7064, 1.18", "-29.0344, 566.984, -14.6734, 1.18", "-29.1696, 567.683, -14.5093, 1.4", "-29.2109, 567.887, -14.4697, 1.4", "-29.3113, 568.393, -14.3943, 1.4", "-29.4988, 569.394, -14.2482, 1.11", "-29.7675, 570.999, -14.0281, 0.88", "-29.9562, 572.222, -13.8838, 1.03", "-30.1228, 573.431, -13.7671, 1.33", "-30.1402, 573.568, -13.7573, 1.33", "-30.1975, 574.018, -13.729, 1.33", "-30.3673, 575.339, -13.6751, 0.88", "-30.4628, 576.05, -13.6368, 0.88", "-30.6152, 577.203, -13.5567, 0.74", "-30.7128, 578.052, -13.4852, 0.74", "-30.8046, 578.981, -13.3989, 1.33", "-30.8112, 579.059, -13.3911, 1.33", "-30.859, 579.872, -13.3381, 1.92", "-30.8869, 580.508, -13.3251, 2.21", "-30.9137, 580.986, -13.3547, 2.21", "-30.9758, 581.727, -13.4514, 1.77", "-31.0679, 582.651, -13.6126, 1.18", "-31.184, 583.623, -13.7947, 0.81", "-31.3841, 585.088, -14.0909, 0.74", "-31.6093, 586.691, -14.4072, 0.66", "-31.7893, 588.06, -14.6498, 0.66", "-31.7976, 588.13, -14.6608, 0.66", "-31.8851, 589.141, -14.7792, 0.66", "-31.8882, 589.255, -14.7847, 0.66", "-31.8347, 590.742, -14.7985, 0.66", "-31.7158, 592.074, -14.7492, 0.66", "-31.7034, 592.174, -14.7433, 0.66", "-31.5405, 593.42, -14.6661, 0.66", "-31.2706, 595.286, -14.54, 0.66", "-31.2544, 595.391, -14.5328, 0.66", "-31.1654, 595.933, -14.4941, 1.25", "-31.1524, 596.011, -14.4885, 1.25", "-30.9683, 597.188, -14.4063, 1.25", "-30.9541, 597.293, -14.3994, 1.25", "-30.8183, 598.314, -14.314, 1.25", "-30.7082, 599.186, -14.2264, 0.96", "-30.6096, 600.054, -14.1164, 0.96", "-30.6038, 600.115, -14.1078, 0.96", "-30.5356, 600.997, -13.9747, 1.11", "-30.4419, 602.507, -13.7381, 0.52", "-30.3888, 603.502, -13.5799, 1.18", "-30.3201, 604.564, -13.4143, 1.92", "-30.2648, 605.275, -13.3211, 2.43", "-30.2061, 605.918, -13.2513, 2.43", "-30.127, 606.693, -13.1839, 2.43", "-29.9838, 607.995, -13.1079, 1.25", "-29.819, 609.243, -13.0691, 0.59", "-29.6261, 610.579, -13.103, 0.74", "-29.496, 611.423, -13.1582, 1.03", "-29.467, 611.627, -13.1817, 1.03", "-29.4024, 612.179, -13.274, 1.03", "-29.3373, 612.949, -13.4373, 0.59", "-29.2895, 614.103, -13.7129, 0.59", "-29.2882, 614.218, -13.7388, 0.59", "-29.2503, 615.29, -13.9579, 0.59", "-29.2242, 615.59, -13.9977, 1.03", "-29.1282, 616.356, -14.0516, 0.66", "-29.0508, 616.853, -14.0549, 0.66", "-28.8979, 617.731, -13.9827, 0.66", "-28.6958, 618.935, -13.8406, 0.59", "-28.4686, 620.356, -13.6383, 1.03", "-28.3892, 620.887, -13.5563, 1.84", "-28.3216, 621.398, -13.4746, 1.84", "-28.1764, 622.745, -13.2622, 1.18", "-28.0915, 623.819, -13.097, 0.66", "-28.066, 624.838, -12.9554, 0.66", "-28.0692, 625.015, -12.9369, 0.66", "-28.1274, 626.429, -12.8232, 0.66", "-28.1949, 627.533, -12.7632, 1.18", "-28.2556, 628.289, -12.7464, 1.18", "-28.3674, 629.5, -12.7235, 0.66", "-28.4725, 630.493, -12.7087, 0.66", "-28.5883, 631.433, -12.6998, 1.25", "-28.7031, 632.202, -12.6948, 1.99", "-28.7976, 632.774, -12.6902, 2.21", "-29.0188, 634.019, -12.683, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 27
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.06431, -63.2745, -19.2305, 0.44", "-7.3496, -63.4923, -19.207, 0.44", "-7.3751, -63.5124, -19.2045, 0.44", "-7.75088, -63.8215, -19.1618, 1.03", "-8.11247, -64.1119, -19.1217, 1.18", "-8.36708, -64.3125, -19.095, 0.59", "-8.39226, -64.3322, -19.0924, 0.59", "-8.63439, -64.5341, -19.0697, 0.22", "-8.8763, -64.7309, -19.0445, 0.22", "-9.12365, -64.9233, -19.0172, 0.59", "-9.28925, -65.0542, -18.997, 0.59", "-9.3265, -65.0873, -18.9902, 0.59", "-9.58249, -65.3348, -18.9331, 0.22", "-9.78073, -65.5466, -18.883, 1.18", "-9.96971, -65.792, -18.8285, 1.25", "-9.98761, -65.8195, -18.8227, 1.25", "-10.2885, -66.3433, -18.6899, 0.22", "-10.3728, -66.5053, -18.6469, 0.37", "-10.4204, -66.6168, -18.6126, 0.37", "-10.6466, -67.238, -18.3968, 0.22", "-10.7156, -67.4517, -18.3176, 0.22", "-10.8625, -67.9314, -18.1325, 1.47", "-10.9654, -68.3161, -17.9971, 2.21", "-11.0613, -68.7069, -17.8657, 2.21", "-11.0685, -68.7356, -17.8556, 2.21", "-11.1779, -69.2839, -17.6612, 0.74", "-11.1824, -69.3133, -17.6516, 0.74", "-11.2532, -69.9116, -17.4846, 0.22", "-11.2667, -70.0396, -17.4507, 0.59", "-11.3396, -70.6619, -17.3016, 0.22", "-11.3823, -71.0606, -17.2077, 0.22", "-11.4136, -71.4163, -17.1197, 0.22", "-11.4421, -71.718, -17.0447, 0.52", "-11.4562, -71.8555, -17.013, 0.52", "-11.5125, -72.4292, -16.9008, 0.22", "-11.5416, -72.797, -16.8434, 0.22", "-11.5823, -73.323, -16.7663, 1.55", "-11.5922, -73.6242, -16.7203, 1.69", "-11.5723, -74.4479, -16.5694, 0.22", "-11.5357, -74.8656, -16.4808, 0.22", "-11.4875, -75.1489, -16.4129, 0.52", "-11.4118, -75.4394, -16.3465, 0.52", "-11.2592, -75.8836, -16.2568, 0.22", "-11.1194, -76.2324, -16.1928, 1.4", "-10.9874, -76.5231, -16.1458, 1.69", "-10.8826, -76.757, -16.1112, 1.77", "-10.5524, -77.5304, -16.0039, 0.15", "-10.3351, -78.061, -15.9406, 0.22", "-10.1974, -78.4161, -15.9101, 0.74", "-10.0898, -78.7265, -15.8889, 0.74", "-9.96991, -79.1167, -15.8591, 0.22", "-9.9414, -79.2269, -15.8473, 0.59", "-9.90111, -79.4169, -15.8174, 0.59", "-9.89327, -79.4524, -15.8126, 0.59", "-9.76997, -80.0075, -15.7417, 0.22", "-9.70058, -80.3432, -15.713, 0.74", "-9.61385, -80.7184, -15.6926, 0.96", "-9.55013, -80.976, -15.6803, 0.66", "-9.33153, -81.8028, -15.6539, 0.29", "-9.20175, -82.26, -15.6432, 0.22", "-9.0517, -82.7506, -15.6345, 0.22", "-8.8685, -83.3593, -15.6285, 1.55", "-8.81342, -83.5418, -15.6291, 1.92", "-8.67613, -83.9986, -15.6362, 0.96", "-8.59983, -84.2612, -15.6484, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.06431, -63.2745, -19.2305, 2.43", "-7.35867, -64.9505, -20.0753, 2.43", "-7.63082, -66.5113, -20.7455, 0.96", "-7.8526, -67.6957, -21.1753, 0.52", "-8.05974, -68.7853, -21.531, 0.52", "-8.31456, -70.1486, -21.9462, 0.52", "-8.55486, -71.4799, -22.3317, 0.52", "-8.76071, -72.6933, -22.5841, 0.52", "-8.9699, -73.9597, -22.7837, 0.52", "-9.16461, -75.2211, -22.9561, 2.58", "-9.37806, -76.7352, -23.1957, 3.68", "-9.43468, -77.1146, -23.2656, 3.68", "-9.59497, -78.0297, -23.4504, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.1722, -124.0, 28.1892, 0.59", "-1.92541, -126.106, 27.9976, 0.59", "-1.83927, -127.12, 27.8822, 0.37", "-1.81926, -128.137, 27.7194, 0.37", "-1.85943, -128.831, 27.5551, 0.74", "-1.94398, -129.605, 27.3313, 0.74", "-2.04278, -130.236, 27.1201, 0.96", "-2.0643, -130.303, 27.0928, 0.96", "-2.33596, -131.035, 26.7441, 1.25", "-2.68826, -131.816, 26.4019, 0.81", "-2.71731, -131.884, 26.3824, 0.81", "-3.09169, -132.809, 26.2116, 0.59", "-3.47182, -133.92, 26.0907, 0.59", "-3.48968, -133.981, 26.0865, 0.59", "-3.79548, -135.233, 26.044, 0.44", "-4.10678, -136.608, 26.0055, 0.44", "-4.12341, -136.681, 26.0033, 0.44", "-4.41994, -137.947, 25.9501, 2.14", "-4.58951, -138.66, 25.887, 3.09", "-4.72328, -139.313, 25.8139, 3.61", "-4.80515, -140.072, 25.6787, 3.61", "-5.03865, -150.553, 23.5674, 3.61", "-4.56362, -160.574, 19.6719, 3.61", "-3.30851, -169.97, 14.4328, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.1722, -124.0, 28.1892, 0.59", "-1.0776, -125.227, 28.857, 0.59", "-0.0751708, -126.342, 29.5604, 0.37", "0.52891, -127.044, 30.3954, 0.37", "1.08956, -127.747, 31.7789, 0.37", "1.1168, -127.785, 31.8842, 0.37", "1.43357, -128.279, 33.4125, 0.74", "1.43193, -128.3, 33.5132, 0.74", "1.09107, -128.892, 36.6838, 0.74", "1.08097, -128.907, 36.7563, 0.74", "0.954779, -129.182, 37.7691, 0.74", "0.892162, -129.505, 38.5808, 0.29", "0.920192, -130.16, 39.6743, 0.29", "1.03831, -130.759, 40.4592, 0.29", "1.27671, -131.387, 41.0361, 0.29", "1.50794, -131.949, 41.5403, 0.81", "1.53706, -132.01, 41.593, 0.81", "1.85632, -132.489, 42.0238, 1.25", "2.19544, -132.811, 42.3412, 1.25", "2.70551, -133.177, 42.7839, 0.59", "7.05087, -139.344, 52.4958, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-29.0188, 634.019, -12.683, 0.44", "-30.5911, 635.941, -15.2408, 0.44", "-31.1932, 636.773, -16.2364, 0.44", "-31.5683, 637.333, -16.8623, 0.74", "-31.5896, 637.371, -16.9011, 0.74", "-31.8665, 638.003, -17.4684, 0.74", "-31.8821, 638.046, -17.5028, 0.74", "-31.9901, 638.816, -17.8282, 0.44", "-31.9874, 638.875, -17.8584, 0.44", "-31.913, 639.598, -18.2645, 0.88", "-31.864, 640.34, -18.6755, 0.96", "-31.8543, 640.763, -18.9054, 1.25", "-31.8543, 640.812, -18.9345, 1.25", "-31.9213, 641.817, -19.5513, 0.66", "-32.0427, 642.602, -20.0462, 0.37", "-32.1795, 643.137, -20.3873, 0.74", "-32.3355, 643.652, -20.7253, 0.74", "-32.5378, 644.237, -21.1073, 0.74", "-32.8745, 645.118, -21.6604, 0.29", "-33.3169, 646.119, -22.2435, 0.29", "-33.6328, 646.796, -22.6341, 0.29", "-34.0833, 647.783, -23.2055, 1.47", "-34.2505, 648.159, -23.4075, 1.69", "-34.2772, 648.214, -23.4345, 1.69", "-34.5562, 648.765, -23.7366, 1.47", "-34.5847, 648.818, -23.7661, 1.47", "-35.3427, 650.289, -24.7041, 0.22", "-35.6016, 650.819, -25.0606, 0.22", "-35.9922, 651.709, -25.6746, 0.22", "-36.3957, 652.846, -26.4335, 1.03", "-36.5323, 653.304, -26.7572, 1.4", "-36.9149, 654.738, -27.8012, 0.22", "-37.0153, 655.139, -28.1026, 0.59", "-37.1193, 655.594, -28.4496, 0.74", "-37.4234, 657.071, -29.5327, 0.29", "-37.6927, 658.128, -30.2548, 0.29", "-37.7116, 658.183, -30.2936, 0.29", "-37.9842, 658.753, -30.7044, 0.44", "-38.01, 658.808, -30.7518, 0.44", "-38.2136, 659.251, -31.1586, 0.44", "-38.5121, 659.923, -31.7822, 0.22", "-38.9176, 660.959, -32.6883, 1.92", "-38.9901, 661.167, -32.8839, 2.5", "-39.5698, 663.284, -34.9261, 0.15", "-39.6401, 663.588, -35.2203, 0.15", "-39.7881, 664.386, -36.0087, 1.4", "-39.8191, 664.569, -36.1869, 1.69", "-40.1227, 666.311, -37.8589, 0.15", "-40.2416, 666.898, -38.3978, 0.15", "-40.2832, 667.054, -38.5198, 0.15", "-40.3241, 667.191, -38.6137, 0.15", "-40.5384, 667.86, -38.9765, 0.96", "-40.6912, 668.32, -39.1878, 1.47", "-40.8114, 668.65, -39.3002, 1.62", "-41.0936, 669.387, -39.5566, 0.88", "-41.6219, 670.858, -40.0704, 0.22", "-41.792, 671.418, -40.2865, 0.22", "-41.9358, 672.0, -40.5364, 0.74", "-41.9481, 672.062, -40.5628, 0.74", "-42.037, 672.575, -40.7558, 0.74", "-42.0808, 672.841, -40.8375, 0.74", "-42.3037, 674.235, -41.1742, 0.29", "-42.3153, 674.301, -41.1882, 0.29", "-42.5571, 675.551, -41.4157, 0.29", "-42.8159, 676.815, -41.6265, 0.29", "-43.0308, 677.802, -41.7659, 0.29", "-43.2025, 678.536, -41.8425, 1.47", "-43.3051, 678.945, -41.8756, 2.06", "-43.3212, 679.009, -41.8814, 2.06", "-43.5039, 679.736, -41.9738, 1.18", "-43.9947, 681.643, -42.3064, 0.22", "-44.3388, 683.018, -42.5782, 0.22", "-44.5884, 684.11, -42.8511, 1.47", "-44.6714, 684.505, -42.9657, 1.18", "-44.9636, 686.104, -43.4884, 0.22", "-45.1319, 687.173, -43.8807, 1.11", "-45.2008, 687.741, -44.111, 1.33", "-45.388, 689.829, -45.0011, 0.22", "-45.392, 689.89, -45.0266, 0.22", "-45.4648, 691.357, -45.6165, 0.22", "-45.4667, 691.419, -45.6394, 0.22", "-45.4989, 693.002, -46.1805, 0.22", "-45.5017, 693.065, -46.2009, 0.22", "-45.5694, 693.937, -46.4173, 1.55", "-45.589, 694.076, -46.4472, 2.14", "-45.6924, 694.55, -46.531, 2.36", "-45.707, 694.604, -46.5392, 2.36", "-46.0703, 695.545, -46.6891, 1.11", "-46.6357, 696.783, -46.8962, 0.22", "-47.1681, 697.832, -47.0746, 0.22", "-47.5592, 698.56, -47.1995, 1.4", "-47.7738, 698.933, -47.2635, 1.4", "-48.839, 700.688, -47.5897, 0.22", "-49.2542, 701.322, -47.7168, 0.88", "-49.49, 701.668, -47.7931, 0.59", "-49.532, 701.732, -47.8072, 0.59", "-49.632, 701.892, -47.8393, 0.59", "-50.3045, 703.106, -48.0243, 0.22", "-50.6789, 703.866, -48.1007, 0.22", "-51.0304, 704.649, -48.1664, 1.03", "-51.1934, 705.028, -48.1937, 1.4", "-51.3864, 705.512, -48.1955, 1.4", "-51.8452, 706.799, -48.1273, 0.22", "-51.866, 706.863, -48.1204, 0.22", "-52.2909, 708.307, -47.9412, 0.22", "-52.3245, 708.436, -47.9249, 0.22", "-52.7121, 710.089, -47.718, 0.22", "-52.9175, 711.031, -47.5903, 1.33", "-52.9828, 711.348, -47.5438, 1.62", "-53.1028, 711.949, -47.4544, 0.81", "-53.3999, 713.553, -47.2128, 0.22", "-53.5797, 714.586, -47.0912, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-29.0188, 634.019, -12.683, 0.59", "-29.1256, 634.855, -12.597, 0.59", "-29.2451, 635.736, -12.4439, 0.59", "-29.3505, 636.566, -12.2747, 0.81", "-29.429, 637.218, -12.1396, 1.25", "-29.4363, 637.279, -12.127, 1.25", "-29.4838, 637.659, -12.0518, 1.11", "-29.5925, 638.447, -11.8884, 0.88", "-29.6688, 639.015, -11.7827, 0.44", "-29.7742, 639.847, -11.6543, 0.37", "-29.8016, 640.069, -11.6244, 0.37", "-29.8785, 640.675, -11.5582, 0.37", "-30.0008, 641.588, -11.4908, 1.47", "-30.0899, 642.138, -11.4699, 1.84", "-30.1287, 642.355, -11.4615, 1.84", "-30.2018, 642.794, -11.4445, 1.84", "-30.3139, 643.525, -11.4164, 1.25", "-30.4844, 644.745, -11.37, 0.66", "-30.6319, 645.851, -11.3289, 0.66", "-30.6412, 645.929, -11.3261, 0.66", "-30.7266, 646.728, -11.2994, 0.66", "-30.737, 646.846, -11.2963, 0.66", "-30.7948, 647.575, -11.2791, 0.66", "-30.7987, 647.638, -11.2779, 0.66", "-30.8334, 648.304, -11.2666, 0.66", "-30.8489, 648.504, -11.2635, 0.66", "-30.9042, 649.136, -11.2539, 0.66", "-30.9435, 649.636, -11.2462, 0.66", "-30.9465, 649.691, -11.2453, 0.66", "-30.972, 650.491, -11.2302, 0.66", "-30.972, 650.539, -11.2292, 0.66", "-30.9584, 651.322, -11.2158, 1.18", "-30.9546, 651.377, -11.2098, 1.18", "-30.876, 652.078, -11.0805, 1.33", "-30.8673, 652.142, -11.0649, 1.33", "-30.8345, 652.339, -11.0021, 1.33", "-30.8203, 652.425, -10.9728, 1.33", "-30.6382, 653.516, -10.5595, 0.81", "-30.6313, 653.562, -10.5446, 0.81", "-30.5493, 653.997, -10.4293, 0.81", "-30.5398, 654.049, -10.4175, 0.81", "-30.4237, 654.656, -10.3031, 0.96", "-30.4052, 654.747, -10.2896, 0.96", "-30.1973, 655.711, -10.2009, 0.37", "-30.0241, 656.525, -10.1353, 0.37", "-29.8997, 657.168, -10.0662, 1.33", "-29.7863, 657.754, -9.97813, 2.06", "-29.7388, 658.017, -9.91627, 2.36", "-29.6663, 658.432, -9.79685, 2.36", "-29.5626, 659.091, -9.56325, 1.62", "-29.4227, 660.106, -9.17545, 0.52", "-29.2618, 661.247, -8.71383, 0.37", "-29.1317, 662.254, -8.26896, 1.55", "-29.0688, 662.757, -8.02942, 2.21", "-29.0009, 663.28, -7.75218, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.59497, -78.0297, -23.4504, 0.44", "-9.13399, -79.3877, -22.8067, 0.44", "-8.66535, -80.7029, -22.1237, 0.22", "-8.63843, -80.7677, -22.0844, 0.22", "-8.22019, -81.7049, -21.3603, 0.22", "-7.58659, -83.0194, -20.3264, 1.47", "-7.39023, -83.411, -20.032, 1.99", "-7.3217, -83.5423, -19.9253, 1.99", "-6.77267, -84.4927, -19.1594, 1.77", "-5.87251, -85.9903, -18.0017, 0.52", "-5.17308, -87.1185, -17.1598, 0.29", "-4.6319, -87.9825, -16.5785, 0.29", "-4.59633, -88.0413, -16.5405, 0.29", "-4.06258, -88.9458, -15.9891, 1.03", "-3.55095, -89.8998, -15.4868, 1.03", "-2.8519, -91.3287, -14.856, 0.22", "-2.82838, -91.3854, -14.8317, 0.22", "-2.6118, -91.9598, -14.6059, 0.44", "-2.5908, -92.0178, -14.5824, 0.44", "-2.30672, -92.7838, -14.2481, 0.44", "-2.10772, -93.3592, -14.0248, 0.29", "-1.77659, -94.3331, -13.657, 1.55", "-1.68535, -94.5904, -13.5533, 2.21", "-1.21204, -95.7739, -13.0308, 2.21", "-0.75236, -96.8189, -12.5469, 0.44", "-0.170842, -97.9387, -11.9826, 0.29", "0.0922193, -98.3914, -11.7412, 0.52", "0.135203, -98.4602, -11.7037, 0.52", "0.458675, -98.9126, -11.4866, 0.22", "0.516269, -98.9668, -11.4672, 0.22", "0.935389, -99.2342, -11.3608, 0.22", "1.35239, -99.473, -11.2289, 0.74", "1.4273, -99.5214, -11.2023, 0.74", "1.96594, -99.9267, -10.9949, 0.74", "2.90952, -100.752, -10.6108, 0.29", "3.48491, -101.341, -10.3249, 0.29", "4.07565, -102.07, -9.98248, 1.33", "4.411, -102.525, -9.77941, 1.92", "4.58389, -102.771, -9.67605, 1.99", "4.94729, -103.317, -9.45697, 1.55", "5.62399, -104.343, -9.10284, 0.66", "6.07387, -105.008, -8.92238, 0.29", "6.80583, -106.08, -8.75135, 0.22", "7.26045, -106.782, -8.68943, 1.03", "7.60277, -107.343, -8.6729, 1.55", "8.14632, -108.289, -8.70301, 0.88", "8.59298, -109.138, -8.78747, 0.29", "9.03905, -110.078, -8.90415, 0.29", "9.49701, -111.197, -9.06581, 0.22", "9.69455, -111.715, -9.14008, 0.52", "9.7219, -111.788, -9.14685, 0.52", "9.97785, -112.467, -9.14145, 0.52", "10.2733, -113.19, -9.06436, 0.44", "10.36, -113.399, -9.01745, 0.66", "10.5777, -113.947, -8.866, 0.37", "10.8587, -114.753, -8.62076, 0.29", "11.1284, -115.726, -8.32302, 0.29", "11.1391, -115.787, -8.3024, 0.29", "11.2398, -116.742, -7.9876, 1.25", "11.2665, -117.195, -7.84994, 1.84", "11.2682, -117.613, -7.74032, 1.84", "11.2431, -118.576, -7.55527, 0.81", "11.2023, -119.702, -7.38236, 0.29", "11.1762, -120.507, -7.2865, 0.22", "11.1725, -120.616, -7.27759, 0.22", "11.125, -121.551, -7.25506, 0.22", "11.0183, -122.828, -7.31436, 1.33", "10.9471, -123.432, -7.38128, 1.99", "10.8829, -123.825, -7.44831, 2.28", "10.7576, -124.419, -7.54701, 2.28", "10.3998, -125.944, -7.78917, 0.66", "10.1596, -126.851, -7.93606, 0.22", "10.1376, -126.927, -7.94727, 0.22", "9.97913, -127.524, -8.01181, 0.22", "9.82573, -128.139, -8.05223, 0.74", "9.7285, -128.562, -8.05335, 1.03", "9.65719, -128.876, -8.02667, 1.11", "9.52486, -129.504, -7.96009, 0.44", "9.30775, -130.536, -7.87575, 0.22", "9.29183, -130.612, -7.8717, 0.22", "9.16062, -131.178, -7.85993, 0.44", "9.00411, -132.018, -7.83776, 0.29", "8.98919, -132.094, -7.83586, 0.29", "8.7011, -132.989, -7.79397, 0.29", "8.47275, -133.549, -7.7542, 0.22", "8.44217, -133.623, -7.74748, 0.22", "8.04988, -134.613, -7.59284, 0.22", "7.85066, -135.207, -7.42722, 0.22", "7.42331, -136.881, -6.84657, 2.14", "7.41169, -136.942, -6.8234, 2.14", "7.33084, -137.6, -6.56296, 1.99", "7.27758, -138.569, -6.17272, 1.69", "7.2805, -140.013, -5.57306, 0.59", "7.42143, -141.357, -5.01773, 0.22", "7.55657, -142.025, -4.76888, 0.37", "7.72132, -142.733, -4.57288, 0.37", "7.93443, -143.553, -4.43434, 0.74", "7.95604, -143.627, -4.43138, 0.74", "8.12399, -144.187, -4.47892, 1.11", "8.44817, -145.299, -4.6447, 0.59", "8.8074, -146.546, -4.85795, 0.29", "9.05753, -147.389, -5.00874, 0.29", "9.09551, -147.506, -5.0304, 0.29", "9.37455, -148.309, -5.16029, 0.29", "9.45606, -148.519, -5.18317, 0.29", "9.83051, -149.347, -5.19609, 0.29", "10.1637, -150.031, -5.15378, 1.18", "10.3685, -150.43, -5.1277, 1.47", "10.4042, -150.499, -5.12254, 1.47", "10.9575, -151.62, -5.03342, 0.44", "11.3255, -152.542, -4.96097, 0.37", "11.5047, -153.239, -4.91034, 0.81", "11.5861, -153.711, -4.88377, 0.81", "11.6717, -154.445, -4.84822, 0.59", "11.71, -154.954, -4.83092, 0.29", "11.7517, -156.086, -4.80406, 0.22", "11.7935, -157.301, -4.80859, 0.22", "11.8332, -158.012, -4.82364, 0.44", "11.8546, -158.254, -4.83125, 0.44", "11.924, -158.728, -4.84754, 0.44", "12.1136, -159.623, -4.87604, 0.29", "12.3553, -160.566, -4.89832, 1.4", "12.5443, -161.263, -4.91097, 1.69", "12.698, -161.878, -4.91636, 1.92", "12.9034, -162.74, -4.93344, 0.74", "13.0864, -163.79, -4.97284, 0.22", "13.2064, -164.824, -5.02481, 0.22", "13.2537, -165.565, -5.05992, 0.88", "13.2578, -166.13, -5.09509, 0.88", "13.2172, -167.044, -5.16035, 0.22", "13.1095, -168.184, -5.24778, 0.22", "13.0991, -168.271, -5.25409, 0.22", "12.9751, -169.077, -5.30676, 0.22", "12.7864, -170.149, -5.3281, 1.03", "12.6915, -170.619, -5.32115, 1.33", "12.6236, -170.935, -5.30439, 1.33", "12.3363, -172.343, -5.24161, 0.22", "12.1191, -173.367, -5.25781, 0.22", "11.972, -173.996, -5.31225, 0.88", "11.8649, -174.434, -5.37535, 1.11", "11.7772, -174.78, -5.44084, 0.88", "11.451, -176.137, -5.74925, 0.22", "11.1683, -177.239, -6.03917, 0.22", "11.0087, -177.858, -6.21431, 1.55", "10.8678, -178.404, -6.36457, 1.77", "10.7137, -179.005, -6.51148, 1.25", "10.4256, -180.203, -6.7512, 0.22", "10.1678, -181.417, -6.90469, 0.22", "10.1575, -181.481, -6.90991, 0.22", "10.0684, -182.56, -6.98265, 0.22", "10.0668, -182.649, -6.99184, 0.22", "10.1202, -183.633, -7.11219, 0.96", "10.1637, -184.257, -7.19641, 1.47", "10.2253, -184.933, -7.31463, 0.88", "10.2668, -185.552, -7.4434, 0.66", "10.3494, -186.968, -7.78666, 0.29", "10.3699, -187.524, -7.92815, 0.59", "10.389, -188.463, -8.18725, 0.59", "10.4092, -189.433, -8.45825, 0.29", "10.4145, -189.531, -8.48357, 0.29", "10.5324, -190.745, -8.76468, 0.29", "10.5445, -190.819, -8.77925, 0.29", "10.6738, -191.427, -8.89757, 0.74", "10.8215, -192.123, -9.02662, 0.88", "11.0049, -193.233, -9.22303, 0.22", "11.1088, -194.133, -9.37981, 0.22", "11.144, -195.136, -9.57017, 1.99", "11.129, -195.862, -9.72409, 2.43", "10.9943, -197.466, -10.0881, 0.22", "10.8675, -198.328, -10.2979, 0.44", "10.6647, -199.388, -10.5732, 0.37", "10.4211, -200.491, -10.8627, 0.22", "10.2401, -201.221, -11.0426, 1.03", "10.1426, -201.651, -11.1598, 1.25", "10.0342, -202.262, -11.3441, 0.96", "9.8658, -203.653, -11.7771, 0.15", "9.81779, -204.38, -12.001, 0.74", "9.80995, -204.917, -12.1557, 0.96", "9.83231, -206.582, -12.6118, 0.22", "9.83921, -206.74, -12.6535, 0.22", "9.92156, -207.435, -12.837, 0.22", "10.0786, -208.361, -13.0606, 0.22", "10.0919, -208.428, -13.0752, 0.22", "10.3584, -209.606, -13.3249, 2.5", "10.4704, -210.065, -13.4118, 2.73", "11.0785, -212.281, -13.857, 0.22", "11.2994, -212.947, -14.0021, 0.52", "11.5422, -213.568, -14.1407, 0.52", "12.0803, -214.845, -14.406, 0.22", "12.114, -214.913, -14.4208, 0.22", "12.4045, -215.465, -14.5429, 0.22", "12.9253, -216.389, -14.7186, 1.18", "13.1389, -216.758, -14.7856, 1.69", "13.5753, -217.521, -14.903, 1.33", "14.1628, -218.574, -15.0004, 0.22", "14.3951, -219.036, -15.0315, 0.22", "14.6865, -219.74, -15.0711, 1.47", "14.8695, -220.269, -15.0909, 1.69", "15.0323, -220.812, -15.1173, 1.69", "15.4496, -222.395, -15.1911, 0.29", "15.6234, -223.156, -15.2179, 0.29", "15.8118, -223.988, -15.2592, 1.03", "15.8414, -224.154, -15.2683, 1.33", "16.0276, -225.592, -15.3338, 0.22", "16.0684, -226.144, -15.3545, 0.22", "16.0674, -226.541, -15.3588, 1.03", "16.0574, -227.027, -15.3391, 1.03", "15.9749, -228.571, -15.2117, 0.22", "15.8779, -229.467, -15.1164, 1.33", "15.8173, -229.814, -15.0706, 1.47", "15.6777, -230.501, -15.0127, 1.55", "15.3377, -232.024, -14.9355, 0.22", "15.2111, -232.526, -14.9313, 0.22", "14.984, -233.361, -14.9592, 0.96", "14.8086, -233.979, -14.9959, 1.25", "14.3749, -235.536, -15.1492, 0.22", "14.3521, -235.62, -15.1601, 0.22", "13.9659, -237.184, -15.3621, 0.22", "13.8856, -237.536, -15.4022, 0.74", "13.8186, -237.844, -15.4352, 0.74", "13.4908, -239.4, -15.5753, 0.22", "13.2146, -240.744, -15.6504, 0.22", "12.8872, -242.5, -15.751, 0.22", "12.7991, -243.071, -15.786, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.59497, -78.0297, -23.4504, 0.66", "-10.2332, -79.5374, -23.2882, 0.66", "-10.4847, -80.0875, -23.2029, 0.52", "-10.7777, -80.6578, -23.1009, 0.88", "-10.9671, -81.0182, -23.0215, 1.03", "-11.2238, -81.5084, -22.896, 0.96", "-11.6178, -82.2672, -22.684, 0.37", "-12.0002, -83.0091, -22.4039, 0.29", "-12.176, -83.3914, -22.2554, 0.29", "-12.4745, -84.2101, -21.911, 0.29", "-12.5468, -84.4758, -21.799, 0.74", "-12.561, -84.5501, -21.7709, 0.74", "-12.5988, -84.8446, -21.6839, 0.74", "-12.6445, -85.4117, -21.5432, 0.59", "-12.7145, -86.3553, -21.3428, 0.29", "-12.8032, -87.3275, -21.1771, 0.29", "-12.8989, -88.2451, -21.0437, 0.29", "-13.0154, -89.282, -20.9074, 0.29", "-13.0992, -90.1147, -20.8368, 1.33", "-13.1056, -90.1855, -20.8345, 1.33", "-13.1574, -90.9102, -20.8503, 1.99", "-13.1639, -91.3598, -20.8686, 2.21", "-13.1581, -91.7485, -20.891, 2.21", "-13.1115, -93.0467, -20.9824, 0.29", "-13.058, -94.1195, -21.0569, 0.29", "-13.0198, -94.7433, -21.0951, 0.29", "-12.983, -95.1795, -21.1177, 0.96", "-12.9443, -95.6992, -21.1352, 1.47", "-12.9235, -96.0166, -21.1378, 1.84", "-12.8757, -96.6538, -21.1098, 0.88", "-12.8672, -96.7136, -21.1091, 0.88", "-12.7515, -97.3408, -21.1329, 0.29", "-12.6303, -97.9549, -21.1805, 0.29", "-12.6152, -98.0226, -21.1874, 0.29", "-12.4142, -98.8818, -21.2923, 0.52", "-12.1801, -99.8497, -21.4231, 0.52", "-11.9855, -100.669, -21.5285, 0.22", "-11.8324, -101.35, -21.6121, 1.47", "-11.7164, -101.92, -21.6732, 2.06", "-11.6715, -102.223, -21.6995, 2.36", "-11.6279, -102.871, -21.7359, 1.69", "-11.6428, -103.88, -21.7575, 0.74", "-11.7149, -104.791, -21.7579, 0.44", "-11.8398, -105.747, -21.7643, 0.44", "-11.9415, -106.322, -21.7726, 0.44", "-12.159, -107.435, -21.7969, 0.29", "-12.2642, -108.002, -21.8152, 0.59", "-12.3648, -108.595, -21.8399, 0.59", "-12.4452, -109.221, -21.8698, 0.29", "-12.45, -109.29, -21.8744, 0.29", "-12.4797, -110.182, -21.9521, 0.29", "-12.4739, -111.187, -22.0653, 0.29", "-12.4756, -111.309, -22.0806, 0.29", "-12.5233, -111.752, -22.1421, 0.29", "-12.5393, -111.81, -22.1531, 0.29", "-12.761, -112.355, -22.345, 0.29", "-12.784, -112.407, -22.3682, 0.29", "-13.0381, -112.991, -22.666, 0.29", "-13.3913, -113.876, -23.1336, 2.28", "-13.8366, -114.989, -23.7312, 2.65", "-14.4496, -116.565, -24.5737, 0.29", "-14.7586, -117.371, -24.9926, 0.29", "-14.9864, -117.927, -25.2765, 0.59", "-15.1025, -118.197, -25.415, 0.22", "-15.3986, -118.788, -25.7235, 0.22", "-15.6609, -119.197, -25.9633, 0.22", "-16.1672, -119.859, -26.3826, 1.03", "-16.6448, -120.433, -26.7784, 1.92", "-17.0472, -120.927, -27.1281, 2.06", "-17.4266, -121.444, -27.5106, 1.92", "-18.4248, -123.084, -28.7224, 0.29", "-18.7097, -123.65, -29.1239, 0.52", "-18.7271, -123.692, -29.152, 0.52", "-18.8753, -124.137, -29.4049, 0.52", "-19.091, -124.909, -29.7478, 0.37", "-19.2273, -125.576, -29.9447, 0.29", "-19.3292, -126.33, -30.0705, 0.29", "-19.4161, -126.93, -30.1551, 0.88", "-19.4693, -127.325, -30.207, 0.88", "-19.5689, -128.342, -30.327, 0.22", "-19.6103, -129.184, -30.4078, 1.55", "-19.6019, -129.702, -30.457, 1.84", "-19.5626, -130.167, -30.4977, 1.62", "-19.4126, -131.288, -30.6199, 0.22", "-19.2858, -132.065, -30.712, 0.22", "-19.1995, -132.555, -30.7687, 0.22", "-19.137, -133.059, -30.82, 0.74", "-19.1076, -133.506, -30.8565, 0.74", "-19.0986, -134.49, -30.9205, 0.29", "-19.1397, -135.06, -30.9395, 0.29", "-19.2644, -135.98, -30.9333, 0.29", "-19.4087, -136.866, -30.8972, 1.77", "-19.5014, -137.392, -30.8608, 2.21", "-19.5962, -137.889, -30.8122, 2.21", "-19.7759, -138.754, -30.6979, 0.74", "-19.9628, -139.564, -30.6078, 0.22", "-20.2103, -140.553, -30.5227, 0.22", "-20.342, -141.071, -30.4937, 0.88", "-20.4603, -141.561, -30.478, 1.03", "-20.4891, -141.69, -30.4776, 1.03", "-20.6782, -142.622, -30.5119, 0.22", "-20.803, -143.239, -30.553, 0.22", "-20.8285, -143.359, -30.5604, 0.22", "-20.9727, -144.047, -30.603, 0.22", "-21.076, -144.504, -30.6229, 0.22", "-21.2636, -145.26, -30.6494, 1.33", "-21.3815, -145.694, -30.6575, 1.77", "-21.5699, -146.352, -30.6535, 1.77", "-21.7164, -146.875, -30.6413, 0.88", "-22.0113, -147.922, -30.6043, 0.29", "-22.0971, -148.317, -30.587, 0.74", "-22.1842, -148.745, -30.5788, 0.74", "-22.3702, -149.756, -30.5842, 0.22", "-22.4453, -150.202, -30.5938, 0.22", "-22.4585, -150.281, -30.597, 0.22", "-22.5966, -151.09, -30.6563, 0.96", "-22.824, -152.264, -30.7539, 1.18", "-22.9, -152.598, -30.7884, 1.47", "-22.9207, -152.675, -30.7979, 1.47", "-23.0384, -153.077, -30.8381, 1.47", "-23.3491, -154.194, -30.918, 0.22", "-23.4437, -154.563, -30.9408, 0.22", "-23.5334, -155.066, -30.96, 0.74", "-23.5844, -155.309, -30.9722, 0.96", "-23.6154, -155.437, -30.9794, 0.96", "-23.6978, -155.742, -31.0017, 0.96", "-23.9334, -156.593, -31.0817, 0.22", "-24.0678, -157.11, -31.1327, 0.29", "-24.209, -157.729, -31.2433, 0.29", "-24.3073, -158.155, -31.3697, 0.29", "-24.4827, -158.918, -31.6477, 1.25", "-24.5877, -159.381, -31.841, 1.69", "-24.6649, -159.737, -32.0123, 1.69", "-24.8823, -160.784, -32.5885, 1.03", "-25.1263, -161.864, -33.2071, 0.22", "-25.2339, -162.298, -33.451, 0.22", "-25.5234, -163.379, -34.0352, 1.99", "-25.7219, -164.06, -34.3796, 2.5", "-26.1423, -165.492, -35.0091, 0.29", "-26.3425, -166.147, -35.2431, 0.22", "-26.5512, -166.84, -35.4385, 0.52", "-26.6452, -167.14, -35.5079, 0.59", "-26.9579, -168.139, -35.6634, 0.22", "-27.1976, -168.967, -35.7253, 0.22", "-27.3336, -169.47, -35.7285, 0.22", "-27.6004, -170.494, -35.7228, 1.33", "-27.74, -170.974, -35.7208, 1.69", "-27.895, -171.453, -35.7165, 1.47", "-28.1436, -172.109, -35.719, 0.52", "-28.3597, -172.618, -35.7336, 0.29", "-28.9626, -173.898, -35.7912, 0.29", "-29.4095, -174.736, -35.8518, 1.11", "-29.6727, -175.21, -35.8995, 1.47", "-30.3875, -176.434, -36.0462, 0.22", "-30.6601, -176.907, -36.1109, 1.77", "-31.0287, -177.557, -36.2107, 2.14", "-31.2472, -177.956, -36.2788, 1.69", "-31.7301, -178.955, -36.4407, 0.22", "-31.7537, -179.013, -36.4498, 0.22", "-31.9255, -179.53, -36.5272, 0.22", "-32.0899, -180.077, -36.6281, 0.52", "-32.1344, -180.243, -36.6634, 0.52", "-32.3372, -181.072, -36.847, 0.22", "-32.4552, -181.581, -36.9692, 0.22", "-32.599, -182.312, -37.1558, 1.99", "-32.7114, -182.985, -37.3419, 2.5", "-32.7992, -183.916, -37.6536, 0.81", "-32.8432, -184.528, -37.8743, 0.22", "-32.8469, -184.577, -37.892, 0.22", "-32.8787, -184.908, -38.0075, 0.52", "-32.8848, -184.957, -38.0236, 0.52", "-33.1053, -185.926, -38.3289, 0.22", "-33.3805, -186.824, -38.5924, 0.22", "-33.6517, -187.576, -38.8011, 0.22", "-33.9347, -188.238, -38.9735, 1.33", "-34.0744, -188.521, -39.0417, 1.33", "-34.6675, -189.602, -39.2855, 0.22", "-35.1458, -190.277, -39.4123, 0.22", "-35.1819, -190.319, -39.4204, 0.22", "-36.1402, -191.266, -39.5941, 2.28", "-36.4388, -191.516, -39.6347, 2.73", "-36.7368, -191.737, -39.6695, 2.73", "-38.2104, -192.665, -39.8139, 0.22", "-38.506, -192.817, -39.8509, 0.74", "-38.8107, -192.957, -39.8937, 0.96", "-39.8148, -193.332, -40.0775, 0.22", "-40.2791, -193.481, -40.1856, 1.03", "-40.5697, -193.578, -40.3131, 1.03", "-41.6933, -193.987, -41.0827, 0.22", "-41.739, -194.005, -41.1236, 0.22", "-42.3584, -194.27, -41.744, 1.4", "-42.5239, -194.344, -41.9261, 1.4", "-44.137, -195.11, -43.7439, 0.59", "-44.5068, -195.299, -44.1642, 1.03", "-45.6417, -195.938, -45.3915, 0.22", "-46.2049, -196.259, -45.9286, 0.22", "-46.2425, -196.282, -45.9604, 0.22", "-46.7115, -196.561, -46.3022, 1.11", "-47.0652, -196.76, -46.5011, 1.25", "-48.3265, -197.488, -47.1496, 0.22", "-48.741, -197.736, -47.3438, 0.66", "-49.8803, -198.429, -47.9007, 0.22", "-49.9322, -198.461, -47.9253, 0.22", "-50.283, -198.67, -48.0858, 0.96", "-50.6135, -198.852, -48.2223, 1.4", "-51.1274, -199.119, -48.4031, 0.96", "-52.0532, -199.597, -48.6778, 0.22", "-52.5697, -199.872, -48.7997, 1.62", "-52.9904, -200.104, -48.8941, 1.99", "-54.3207, -200.884, -49.1571, 0.22", "-54.7025, -201.13, -49.2274, 0.37", "-54.8986, -201.267, -49.2547, 0.37", "-55.4045, -201.636, -49.3136, 0.22", "-55.8164, -201.96, -49.369, 0.22", "-56.4092, -202.445, -49.4568, 0.52", "-57.0923, -203.019, -49.5719, 0.22", "-57.4739, -203.328, -49.6485, 0.96", "-57.8513, -203.619, -49.7566, 0.96", "-58.7829, -204.354, -50.0853, 0.22", "-59.4789, -204.91, -50.4329, 1.18", "-59.7859, -205.165, -50.6589, 1.55", "-59.8199, -205.193, -50.689, 1.55", "-60.7765, -206.033, -51.6403, 0.29", "-61.2321, -206.433, -52.1229, 0.29", "-62.1442, -207.2, -53.1168, 1.55", "-63.5404, -208.328, -54.644, 0.29", "-63.5844, -208.362, -54.6905, 0.29", "-63.9768, -208.664, -55.0904, 1.18", "-64.6723, -209.188, -55.7755, 0.22", "-65.2407, -209.607, -56.3126, 1.25", "-66.1276, -210.309, -57.1047, 0.22", "-66.2675, -210.421, -57.219, 0.74", "-66.8703, -210.93, -57.71, 0.22", "-66.9038, -210.962, -57.7376, 0.22", "-67.397, -211.49, -58.151, 1.11", "-67.741, -211.896, -58.4338, 1.47", "-68.4854, -212.835, -58.9991, 0.22", "-68.683, -213.087, -59.1429, 0.59", "-69.1388, -213.676, -59.4492, 1.18", "-69.1752, -213.723, -59.4735, 1.18", "-69.6159, -214.313, -59.7536, 1.18", "-70.4185, -215.387, -60.235, 0.22", "-70.8277, -215.977, -60.4783, 1.25", "-70.9919, -216.209, -60.5722, 1.25", "-71.6026, -217.001, -60.9076, 0.29", "-71.9577, -217.435, -61.1025, 0.96", "-72.8431, -218.54, -61.5245, 0.29", "-73.4578, -219.296, -61.7597, 0.44", "-74.1338, -220.098, -61.9599, 0.22", "-74.7889, -220.83, -62.1005, 1.18", "-75.2493, -221.29, -62.1317, 1.77", "-76.3965, -222.301, -62.0628, 0.29", "-76.8663, -222.66, -61.9609, 0.29", "-77.2216, -222.883, -61.8358, 0.29", "-77.5522, -223.048, -61.6956, 0.88", "-78.5867, -223.5, -61.2365, 0.22", "-79.2635, -223.737, -60.9783, 1.03", "-79.6296, -223.838, -60.8662, 1.03", "-80.369, -224.012, -60.6374, 0.22", "-82.3241, -224.373, -60.0577, 0.22", "-82.3855, -224.381, -60.0406, 0.22", "-83.6252, -224.425, -59.7389, 0.81", "-83.864, -224.415, -59.6904, 1.03", "-84.5646, -224.324, -59.5342, 0.22", "-85.4169, -224.139, -59.34, 0.22", "-85.4757, -224.121, -59.3223, 0.22", "-86.488, -223.822, -59.0174, 1.33", "-86.9374, -223.704, -58.895, 1.55", "-88.474, -223.396, -58.5645, 0.22", "-88.9164, -223.331, -58.4907, 0.59", "-89.6106, -223.265, -58.4276, 0.59", "-90.355, -223.224, -58.4119, 0.44", "-91.5368, -223.218, -58.4767, 0.22", "-92.2816, -223.222, -58.5533, 1.03", "-92.5517, -223.232, -58.5922, 1.03", "-93.6909, -223.265, -58.7337, 0.22", "-94.1817, -223.258, -58.7815, 0.22", "-94.236, -223.254, -58.7821, 0.22", "-95.2572, -223.091, -58.765, 0.22", "-96.182, -222.896, -58.7351, 0.22", "-96.2347, -222.883, -58.7332, 0.22", "-97.2047, -222.621, -58.7527, 1.11", "-97.5722, -222.527, -58.8088, 1.55", "-98.5878, -222.288, -59.0568, 0.22", "-99.3417, -222.149, -59.3263, 0.22", "-99.7226, -222.084, -59.4867, 0.66", "-100.826, -221.938, -59.9906, 0.22", "-101.803, -221.835, -60.4602, 1.25", "-102.173, -221.807, -60.6615, 1.47", "-103.363, -221.8, -61.3098, 0.22", "-103.419, -221.804, -61.3392, 0.22", "-103.861, -221.87, -61.5549, 1.03", "-104.539, -222.023, -61.8427, 1.33", "-106.272, -222.474, -62.5442, 0.22", "-107.575, -222.847, -63.0749, 0.22", "-108.566, -223.163, -63.4617, 0.22", "-108.929, -223.29, -63.6012, 1.03", "-109.386, -223.478, -63.7683, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-53.5797, 714.586, -47.0912, 0.88", "-54.3224, 716.307, -46.9755, 0.88", "-55.4531, 718.953, -46.8405, 0.15", "-56.0839, 720.674, -46.8886, 0.15", "-56.1486, 720.851, -46.8999, 0.15", "-56.4862, 721.776, -46.9592, 1.03", "-56.6384, 722.192, -46.9859, 1.4", "-56.7706, 722.583, -47.0423, 1.4", "-57.9294, 726.034, -47.5889, 0.22", "-58.7376, 728.609, -48.0008, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-53.5797, 714.586, -47.0912, 0.22", "-52.9147, 716.072, -46.6909, 0.22", "-52.6139, 716.752, -46.4765, 0.81", "-52.5199, 716.965, -46.4038, 1.03", "-52.369, 717.33, -46.2776, 0.81", "-51.7225, 718.948, -45.7143, 0.22", "-51.6278, 719.203, -45.6344, 0.44", "-51.4611, 719.769, -45.4608, 0.15", "-51.4504, 719.81, -45.4502, 0.15", "-51.32, 720.431, -45.3047, 1.03", "-51.3079, 720.507, -45.2893, 1.03", "-51.1588, 721.594, -45.1387, 0.15", "-51.1241, 721.856, -45.1049, 0.29", "-50.9635, 723.069, -44.9601, 0.15", "-50.9028, 723.494, -44.906, 0.66", "-50.8942, 723.551, -44.8961, 0.66", "-50.7445, 724.571, -44.6767, 0.15", "-50.6374, 725.285, -44.4839, 0.66", "-50.5397, 725.901, -44.3101, 0.22", "-50.5287, 725.958, -44.2933, 0.22", "-50.4006, 726.577, -44.0952, 0.74", "-50.3726, 726.729, -44.0416, 0.74", "-50.3628, 726.86, -43.9773, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-29.0009, 663.28, -7.75218, 0.37", "-30.7945, 664.205, -7.72965, 0.37", "-31.5719, 664.613, -7.72587, 0.37", "-31.65, 664.657, -7.71794, 0.37", "-32.3033, 665.039, -7.61489, 0.37", "-33.1344, 665.553, -7.43452, 0.88", "-33.5969, 665.851, -7.3143, 0.88", "-33.6667, 665.903, -7.2846, 0.88", "-34.6464, 666.724, -6.73348, 0.88", "-34.6894, 666.765, -6.70431, 0.88", "-35.0217, 667.155, -6.42471, 1.03", "-35.0857, 667.231, -6.37379, 1.03", "-35.414, 667.574, -6.15337, 1.03", "-35.5137, 667.67, -6.09488, 1.03", "-36.1149, 668.205, -5.79505, 0.74", "-36.9126, 668.874, -5.41483, 0.29", "-37.7149, 669.519, -5.02339, 0.29", "-38.5325, 670.2, -4.59797, 0.29", "-38.6303, 670.288, -4.53969, 0.29", "-39.105, 670.766, -4.20893, 0.22", "-39.1613, 670.834, -4.15756, 0.22", "-39.5089, 671.395, -3.69427, 0.52", "-39.6729, 672.086, -3.10071, 1.18", "-39.707, 672.659, -2.62503, 1.18", "-39.7056, 672.719, -2.57659, 1.18", "-39.6482, 673.034, -2.32138, 1.18", "-39.6342, 673.084, -2.2805, 1.18", "-39.2131, 673.869, -1.638, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-29.0009, 663.28, -7.75218, 0.52", "-28.1966, 664.608, -7.45345, 0.52", "-27.4953, 665.794, -7.15542, 0.37", "-27.4592, 665.856, -7.1393, 0.37", "-26.9909, 666.687, -6.91267, 0.37", "-26.6595, 667.284, -6.74562, 0.74", "-26.168, 668.208, -6.48338, 0.44", "-25.6198, 669.453, -6.11932, 0.37", "-25.5962, 669.509, -6.10211, 0.37", "-25.423, 669.92, -5.97246, 0.37", "-25.3956, 669.986, -5.95055, 0.37", "-24.9827, 671.091, -5.61126, 0.88", "-24.737, 671.895, -5.44091, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-58.7376, 728.609, -48.0008, 0.22", "-59.342, 727.784, -49.1482, 0.22", "-59.4984, 727.561, -49.4714, 1.25", "-60.0599, 726.743, -50.6855, 0.22", "-60.2605, 726.457, -51.1193, 0.96", "-60.8448, 725.656, -52.3509, 0.22", "-60.8684, 725.623, -52.4035, 0.22", "-61.2419, 725.05, -53.3348, 0.22", "-61.2555, 725.026, -53.3745, 0.22", "-61.3689, 724.775, -53.79, 0.74", "-61.416, 724.661, -53.9835, 0.88", "-61.7774, 723.918, -55.1803, 0.22", "-61.7918, 723.893, -55.2189, 0.22", "-62.0864, 723.337, -56.0269, 0.22", "-62.2628, 722.978, -56.5344, 0.22", "-62.2742, 722.951, -56.5722, 0.22", "-62.4816, 722.401, -57.294, 1.11", "-62.7863, 721.993, -57.7132, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-58.7376, 728.609, -48.0008, 0.96", "-58.9802, 729.29, -48.1681, 0.96", "-59.0067, 729.363, -48.1837, 0.96", "-59.1437, 729.739, -48.2581, 1.18", "-59.4131, 730.487, -48.3996, 0.88", "-60.5712, 733.75, -48.9998, 0.15", "-60.5978, 733.825, -49.0133, 0.15", "-61.2247, 735.665, -49.3473, 0.15", "-61.6161, 736.892, -49.6008, 0.96", "-61.7732, 737.429, -49.7221, 1.33", "-61.7946, 737.514, -49.7425, 1.33", "-61.8379, 737.752, -49.8011, 1.33", "-61.859, 737.89, -49.8383, 1.33", "-62.1041, 739.951, -50.4112, 0.15", "-62.1593, 740.434, -50.5347, 0.44", "-62.2154, 740.907, -50.65, 0.44", "-62.4505, 742.6, -51.0294, 0.22", "-62.4783, 742.765, -51.0631, 0.22", "-62.7704, 744.015, -51.2821, 0.81", "-63.097, 745.122, -51.4417, 0.22", "-63.143, 745.258, -51.4622, 0.22", "-63.472, 746.103, -51.5934, 1.18", "-63.657, 746.528, -51.6573, 1.33", "-64.7386, 748.658, -52.0653, 0.22", "-64.819, 748.792, -52.0957, 0.22", "-65.163, 749.313, -52.2233, 0.22", "-65.6595, 749.986, -52.4008, 1.03", "-66.0693, 750.492, -52.5488, 1.33", "-67.275, 751.876, -53.0078, 0.15", "-67.9456, 752.533, -53.2689, 0.15", "-68.0017, 752.586, -53.2911, 0.15", "-68.9072, 753.399, -53.6572, 0.15", "-68.9667, 753.448, -53.6814, 0.15", "-69.8379, 754.102, -54.0279, 1.03", "-70.3721, 754.482, -54.213, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-39.2131, 673.869, -1.638, 0.52", "-39.0472, 675.068, -2.26747, 0.52", "-39.0224, 675.328, -2.38342, 0.52", "-39.0175, 675.372, -2.40163, 0.52", "-38.9414, 675.985, -2.6473, 0.37", "-38.9347, 676.029, -2.66413, 0.37", "-38.8018, 676.665, -2.89424, 0.37", "-38.6729, 677.205, -3.03087, 1.03", "-38.5485, 677.656, -3.13843, 0.88", "-38.5334, 677.706, -3.15032, 0.88", "-38.3762, 678.216, -3.26681, 0.59", "-38.0311, 679.377, -3.59398, 0.22", "-37.8254, 680.13, -3.82551, 0.22", "-37.8136, 680.173, -3.8406, 0.22", "-37.6543, 680.784, -4.07832, 0.88", "-37.5567, 681.177, -4.231, 1.11", "-37.2703, 682.424, -4.69286, 0.29", "-37.1772, 682.83, -4.83339, 0.22", "-36.9708, 683.513, -5.07256, 0.22", "-36.9556, 683.556, -5.08662, 0.22", "-36.6, 684.495, -5.34475, 0.22", "-36.358, 685.122, -5.48528, 1.33", "-36.2393, 685.417, -5.53443, 1.33", "-35.7164, 686.701, -5.76105, 0.22", "-35.6991, 686.744, -5.76886, 0.22", "-35.387, 687.535, -5.92895, 0.22", "-35.1692, 688.08, -6.06624, 0.81", "-34.7301, 689.221, -6.35667, 0.22", "-34.529, 689.766, -6.47863, 0.81", "-34.5126, 689.81, -6.48522, 0.81", "-34.432, 690.01, -6.51517, 0.81", "-34.0462, 690.84, -6.64002, 0.22", "-33.7512, 691.433, -6.71209, 1.4", "-33.5688, 691.805, -6.73298, 1.77", "-33.2841, 692.34, -6.74094, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-39.2131, 673.869, -1.638, 0.52", "-39.5407, 674.285, -1.56583, 0.52", "-39.5719, 674.329, -1.56109, 0.52", "-39.7076, 674.535, -1.54957, 0.81", "-39.7256, 674.564, -1.54907, 0.81", "-39.8041, 674.7, -1.549, 0.59", "-40.1344, 675.296, -1.54248, 0.29", "-40.1625, 675.352, -1.54358, 0.29", "-40.3032, 675.627, -1.53419, 1.03", "-40.4455, 675.901, -1.50512, 0.96", "-40.6, 676.187, -1.45624, 0.59", "-40.7575, 676.47, -1.38018, 0.59", "-40.7836, 676.513, -1.36201, 0.59", "-40.948, 676.804, -1.21558, 0.59", "-41.0645, 677.066, -1.0513, 0.29", "-41.0712, 677.086, -1.0373, 0.29", "-41.1201, 677.268, -0.906625, 0.29", "-41.1289, 677.309, -0.87958, 0.29", "-41.1915, 677.586, -0.721978, 0.59", "-41.3044, 678.059, -0.508962, 0.22", "-41.3121, 678.085, -0.499032, 0.22", "-41.4392, 678.373, -0.419781, 0.22", "-41.4884, 678.459, -0.40489, 0.22", "-41.6619, 678.656, -0.405843, 0.22", "-41.8777, 678.752, -0.476507, 0.66", "-41.934, 678.762, -0.504628, 0.66", "-42.2454, 678.788, -0.683616, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-24.737, 671.895, -5.44091, 0.29", "-24.3097, 672.981, -5.07059, 0.29", "-24.262, 673.117, -5.0327, 0.29", "-23.9962, 673.912, -4.84102, 0.88", "-23.7762, 674.604, -4.69054, 1.25", "-23.6031, 675.167, -4.57533, 1.25", "-23.3386, 676.016, -4.41044, 0.44", "-23.056, 676.974, -4.25779, 0.29", "-22.8645, 677.616, -4.16645, 0.88", "-22.7375, 678.045, -4.12054, 1.25", "-22.7175, 678.111, -4.11625, 1.25", "-22.5543, 678.637, -4.08918, 0.96", "-22.5076, 678.783, -4.0805, 0.96", "-22.3102, 679.376, -4.04618, 0.74", "-21.919, 680.545, -3.98107, 0.29", "-21.633, 681.39, -3.93502, 0.52", "-21.5671, 681.593, -3.92454, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-24.737, 671.895, -5.44091, 0.22", "-25.7958, 672.755, -5.36373, 0.22", "-25.857, 672.802, -5.36189, 0.22", "-26.5534, 673.315, -5.35562, 0.22", "-26.6087, 673.356, -5.35512, 0.22", "-27.6505, 674.124, -5.34573, 0.22", "-27.7124, 674.17, -5.34517, 0.22", "-28.623, 674.938, -5.39564, 0.22", "-29.0206, 675.254, -5.41832, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-42.2454, 678.788, -0.683616, 0.22", "-42.1187, 679.554, -0.731671, 0.22", "-42.1294, 679.646, -0.680594, 0.22", "-42.2682, 680.039, -0.377228, 0.22", "-42.4018, 680.242, -0.164744, 0.37", "-42.686, 680.59, 0.257365, 0.37", "-42.7144, 680.617, 0.304742, 0.37", "-43.3156, 681.124, 1.42335, 1.18", "-43.5341, 681.257, 1.8033, 1.18", "-43.9142, 681.425, 2.43598, 0.96", "-44.0086, 681.453, 2.57675, 0.96", "-44.9683, 681.653, 3.87482, 0.52", "-45.017, 681.661, 3.93666, 0.52", "-45.3289, 681.718, 4.31249, 0.52", "-45.4019, 681.731, 4.40528, 0.52", "-45.8328, 681.804, 4.92689, 0.74", "-46.1752, 681.861, 5.29255, 0.88", "-46.2141, 681.867, 5.3201, 0.88", "-46.8208, 681.986, 5.7641, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-42.2454, 678.788, -0.683616, 0.22", "-42.746, 678.257, -1.25361, 0.22", "-42.7936, 678.207, -1.30788, 0.22", "-43.3944, 677.569, -1.99194, 0.22", "-43.4324, 677.529, -2.03524, 0.22", "-43.8128, 677.126, -2.46837, 0.66", "-43.9974, 676.93, -2.67861, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-21.5671, 681.593, -3.92454, 0.15", "-20.4636, 681.525, -3.41849, 0.15", "-19.7757, 681.326, -3.15812, 0.44", "-19.7148, 681.303, -3.13877, 0.44", "-19.0675, 681.023, -2.98427, 0.15", "-18.5658, 680.806, -2.87652, 0.96", "-18.0183, 680.576, -2.75723, 0.96", "-16.9533, 680.078, -2.56129, 0.22", "-16.7899, 680.002, -2.53392, 0.22", "-15.9164, 679.631, -2.39149, 0.52", "-15.3044, 679.386, -2.29302, 0.52", "-14.5564, 679.139, -2.16551, 0.59", "-14.3553, 679.094, -2.13643, 0.59", "-13.4352, 678.987, -1.99846, 0.15", "-13.3677, 678.982, -1.98838, 0.15", "-12.9717, 678.952, -1.99791, 0.15", "-12.8087, 678.939, -2.0225, 0.15", "-11.8018, 678.882, -2.24669, 0.88", "-11.3421, 678.863, -2.36349, 1.18", "-10.7626, 678.863, -2.54303, 1.18", "-8.84933, 678.91, -3.17865, 0.22", "-8.7751, 678.912, -3.20285, 0.22", "-8.39401, 678.91, -3.3158, 0.37", "-8.31684, 678.91, -3.33634, 0.37", "-7.18944, 678.929, -3.64002, 0.22", "-7.13188, 678.928, -3.65244, 0.22", "-6.37639, 678.95, -3.72471, 0.22", "-5.97558, 678.953, -3.76372, 0.74", "-5.54717, 678.942, -3.80478, 1.03", "-5.45774, 678.939, -3.8118, 1.03", "-3.77217, 678.831, -3.86924, 0.37", "-2.82598, 678.79, -3.92961, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-21.5671, 681.593, -3.92454, 0.29", "-21.2884, 682.701, -3.90188, 0.29", "-21.0843, 683.386, -3.88551, 0.29", "-21.0648, 683.444, -3.88387, 0.29", "-20.8054, 684.217, -3.86191, 0.15", "-20.5339, 685.026, -3.83894, 1.18", "-20.3803, 685.484, -3.82595, 1.77", "-20.1217, 686.119, -3.80962, 1.18", "-19.9262, 686.548, -3.79885, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-46.8208, 681.986, 5.7641, 0.59", "-47.0264, 682.841, 5.99961, 0.59", "-47.0429, 682.914, 6.01463, 0.59", "-47.1486, 683.449, 6.09513, 0.59", "-47.1597, 683.534, 6.10605, 0.59", "-47.1655, 683.886, 6.14122, 0.59", "-47.1773, 684.091, 6.25733, 0.59", "-47.239, 684.274, 6.57495, 0.29", "-47.3444, 684.499, 7.00054, 0.22", "-47.5268, 684.796, 7.56013, 0.22", "-47.739, 685.079, 8.07693, 0.74", "-48.8636, 686.396, 10.4819, 0.74", "-50.1936, 687.81, 13.0179, 0.88", "-50.7326, 688.328, 13.9435, 0.22", "-51.2712, 688.824, 14.7988, 0.22", "-51.6841, 689.208, 15.3746, 0.22", "-51.7348, 689.259, 15.4322, 0.22", "-52.0064, 689.617, 15.5792, 0.22", "-52.0503, 689.692, 15.5871, 0.22", "-52.4104, 690.434, 15.7454, 0.22", "-52.8544, 691.462, 16.0223, 0.81", "-52.8831, 691.519, 16.0359, 0.81", "-53.2794, 692.166, 16.1323, 0.96", "-53.3444, 692.265, 16.1405, 0.96", "-53.6629, 692.743, 16.1531, 0.96", "-54.135, 693.466, 16.1332, 0.44", "-54.476, 694.063, 16.1026, 0.44", "-54.9643, 695.015, 16.0601, 0.22", "-55.4036, 695.974, 16.0357, 0.37", "-55.8096, 696.92, 16.0379, 0.37", "-56.1412, 697.736, 16.0812, 0.37", "-56.531, 698.703, 16.2082, 0.22", "-56.5593, 698.772, 16.223, 0.22", "-56.8179, 699.23, 16.4154, 0.22", "-56.8998, 699.319, 16.494, 0.22", "-57.6622, 699.867, 17.3522, 0.15", "-58.0803, 700.16, 17.8878, 0.44", "-58.1171, 700.188, 17.9366, 0.44", "-59.0733, 701.087, 19.1829, 0.88", "-59.7032, 701.816, 19.9872, 0.88", "-59.8545, 702.048, 20.2001, 0.88", "-60.4012, 703.188, 21.0794, 0.37", "-60.622, 703.888, 21.5071, 0.22", "-60.7957, 704.676, 21.9131, 0.22", "-60.8221, 705.121, 22.1065, 0.59", "-60.816, 706.322, 22.6323, 0.44", "-60.8073, 706.41, 22.6821, 0.44", "-60.6072, 707.191, 23.3669, 0.29", "-60.5639, 707.257, 23.449, 0.29", "-59.8551, 707.692, 24.2469, 0.29", "-59.8092, 707.709, 24.2936, 0.29", "-59.1222, 708.039, 25.0496, 0.81", "-59.0532, 708.089, 25.1369, 0.81", "-58.6982, 708.51, 25.7052, 0.81", "-58.2557, 709.368, 26.608, 0.29", "-57.8915, 710.474, 27.5856, 0.29", "-57.5037, 712.034, 28.7464, 0.52", "-57.3359, 713.012, 29.357, 1.33", "-57.184, 714.265, 30.0834, 0.22", "-57.1527, 714.931, 30.424, 0.74", "-57.1557, 715.095, 30.4929, 0.74", "-57.1432, 716.049, 30.7575, 0.37", "-57.0811, 716.604, 30.8629, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-46.8208, 681.986, 5.7641, 0.22", "-47.6087, 682.373, 5.59798, 0.22", "-48.1149, 682.616, 5.48703, 0.15", "-48.7717, 682.924, 5.32352, 0.15", "-49.5618, 683.295, 5.12682, 0.52", "-49.9071, 683.456, 5.04086, 0.52", "-50.3895, 683.682, 4.92078, 0.52", "-50.5311, 683.746, 4.88728, 0.52", "-51.3451, 684.096, 4.70266, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-19.9262, 686.548, -3.79885, 0.22", "-18.6734, 685.347, -4.10217, 0.22", "-18.3086, 684.947, -4.18914, 0.29", "-17.6465, 684.113, -4.35156, 0.22", "-17.1058, 683.432, -4.48422, 0.44", "-16.5837, 682.775, -4.61231, 0.22", "-16.5461, 682.727, -4.62154, 0.22", "-16.3889, 682.404, -4.62428, 0.44", "-16.2729, 682.06, -4.62983, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-19.9262, 686.548, -3.79885, 0.29", "-19.8584, 686.994, -3.72575, 0.29", "-19.6633, 688.021, -3.46065, 0.29", "-19.439, 689.071, -3.1384, 0.29", "-19.4152, 689.166, -3.10662, 0.29", "-19.1205, 690.118, -2.76312, 0.29", "-19.0566, 690.296, -2.69497, 0.81", "-18.6939, 691.164, -2.34199, 0.66", "-18.674, 691.204, -2.32552, 0.66", "-18.4128, 691.686, -2.11958, 0.52", "-17.7291, 692.94, -1.62135, 0.29", "-17.3013, 693.749, -1.27681, 0.29", "-17.089, 694.192, -1.10026, 1.33", "-16.8462, 694.742, -0.900637, 1.55", "-16.8224, 694.802, -0.87945, 1.55", "-16.5759, 695.489, -0.600642, 1.25", "-16.1081, 696.919, -0.00281649, 0.37", "-15.8487, 697.769, 0.36678, 0.29", "-15.8319, 697.826, 0.393386, 0.29", "-15.5756, 698.744, 0.838057, 0.29", "-15.1218, 700.375, 1.64412, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-57.0811, 716.604, 30.8629, 0.44", "-56.7655, 715.548, 30.827, 0.44", "-56.4848, 714.609, 30.795, 0.37", "-56.29, 713.958, 30.7728, 0.22", "-56.2732, 713.901, 30.7709, 0.22", "-55.9577, 712.846, 30.7349, 0.22", "-55.9409, 712.79, 30.733, 0.22", "-54.6127, 704.668, 31.6993, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-57.0811, 716.604, 30.8629, 0.74", "-57.2487, 717.095, 30.7936, 0.74", "-57.3998, 717.778, 30.7357, 0.22", "-57.4114, 717.833, 30.7302, 0.22", "-57.5339, 718.41, 30.6915, 0.22", "-57.5723, 718.589, 30.6828, 0.22", "-57.6949, 719.164, 30.6704, 0.22", "-57.8599, 719.924, 30.6787, 1.4", "-58.065, 720.938, 30.7569, 0.29", "-58.2019, 721.598, 30.8556, 0.29", "-58.218, 721.675, 30.8721, 0.29", "-58.3953, 722.407, 31.0653, 0.29", "-58.4097, 722.458, 31.0823, 0.29", "-58.6892, 723.29, 31.4362, 0.81", "-58.8596, 723.779, 31.696, 1.11", "-58.8757, 723.827, 31.7215, 1.11", "-59.0854, 724.436, 32.0245, 1.11", "-59.1153, 724.518, 32.0632, 1.11", "-59.2724, 724.922, 32.2095, 1.11", "-59.2915, 724.964, 32.2232, 1.11", "-59.5325, 725.498, 32.3806, 0.22", "-59.7927, 726.057, 32.5462, 0.29", "-59.8167, 726.106, 32.5607, 0.29", "-60.0761, 726.632, 32.6986, 0.22", "-60.54, 727.525, 32.9013, 0.81", "-63.4611, 734.873, 33.9012, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-15.1218, 700.375, 1.64412, 1.84", "-13.933, 701.223, 1.44393, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-15.1218, 700.375, 1.64412, 0.22", "-15.1649, 701.668, 1.41912, 0.22", "-15.1798, 702.364, 1.32231, 0.22", "-15.1806, 702.405, 1.31742, 0.22", "-15.1976, 703.232, 1.23662, 0.59", "-15.2128, 704.077, 1.16462, 0.22", "-15.2203, 704.715, 1.11913, 0.66", "-15.2175, 704.763, 1.12456, 0.66", "-15.2014, 704.912, 1.15113, 0.66", "-15.1244, 705.495, 1.28694, 0.15", "-15.1175, 705.54, 1.30088, 0.15", "-15.0514, 705.937, 1.44944, 1.18", "-14.8483, 706.864, 1.8553, 0.29", "-14.7784, 707.151, 1.99016, 0.52", "-14.7666, 707.192, 2.01209, 0.52", "-14.7073, 707.363, 2.11996, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-13.933, 701.223, 1.44393, 0.15", "-13.5166, 702.598, 1.79105, 0.15", "-13.3247, 703.277, 1.94405, 0.15", "-13.1936, 703.742, 2.04857, 0.29", "-13.1472, 703.906, 2.08555, 0.29", "-13.0301, 704.321, 2.1789, 0.15", "-12.9382, 704.646, 2.25214, 0.29", "-12.9292, 704.73, 2.25293, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.933, 701.223, 1.44393, 0.29", "-13.3742, 699.893, 2.28128, 0.29", "-13.2089, 699.446, 2.56843, 0.29", "-12.9531, 698.689, 3.04488, 0.22", "-12.8569, 698.433, 3.20959, 0.52", "-12.4645, 697.411, 3.86908, 0.22", "-12.4482, 697.365, 3.89913, 0.22", "-12.3505, 697.009, 4.11732, 0.88", "-12.29, 696.786, 4.28119, 1.03", "-12.0513, 695.606, 5.24102, 0.22", "-12.0446, 695.544, 5.28947, 0.22", "-11.9795, 694.403, 6.17174, 0.22", "-11.9786, 694.357, 6.20786, 0.22", "-11.9262, 693.34, 7.04196, 0.22", "-11.8881, 692.682, 7.5967, 0.22", "-11.844, 691.917, 8.31665, 0.22", "-11.7033, 690.989, 9.27325, 0.29", "-11.6811, 690.925, 9.34476, 0.29", "-11.1131, 689.965, 10.4252, 0.15", "-11.0845, 689.931, 10.4637, 0.15", "-10.15, 689.123, 11.4022, 0.96", "-9.85094, 688.91, 11.6549, 0.96", "-8.7779, 688.175, 12.4646, 0.22", "-7.89431, 687.586, 13.102, 0.22", "-7.85033, 687.558, 13.1314, 0.22", "-6.97332, 687.02, 13.6588, 0.22", "-5.56598, 686.199, 14.3359, 0.22", "-4.95833, 685.828, 14.6423, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.9292, 704.73, 2.25293, 0.37", "-12.7249, 705.979, 2.54389, 0.37", "-12.7139, 706.05, 2.55625, 0.37", "-12.6609, 706.479, 2.6145, 0.22", "-12.5716, 707.428, 2.68917, 0.22", "-12.5415, 707.93, 2.71498, 0.66", "-12.5366, 708.013, 2.71922, 0.66", "-12.4985, 708.885, 2.69752, 0.52", "-12.4747, 709.638, 2.67615, 0.52", "-12.4703, 710.539, 2.6449, 1.33", "-12.4897, 711.29, 2.60989, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-12.9292, 704.73, 2.25293, 0.29", "-12.1097, 704.785, 2.66874, 0.29", "-12.0654, 704.792, 2.68984, 0.29", "-10.776, 705.051, 3.29102, 0.66", "-9.94511, 705.239, 3.67982, 0.15", "-9.51346, 705.338, 3.87801, 0.88", "-9.04396, 705.44, 4.07073, 0.88", "-8.32779, 705.599, 4.35411, 0.22", "-8.28152, 705.609, 4.36871, 0.22", "-7.67874, 705.735, 4.47937, 0.81", "-7.42214, 705.816, 4.51687, 0.81", "-6.58697, 706.122, 4.62846, 0.22", "-6.35813, 706.203, 4.65343, 0.96", "-6.3037, 706.223, 4.65749, 0.96", "-5.85323, 706.403, 4.67018, 0.52", "-5.09461, 706.695, 4.72018, 0.22", "-5.01728, 706.724, 4.73102, 0.22", "-4.77788, 706.803, 4.78493, 0.22", "-4.70457, 706.822, 4.80276, 0.22", "-4.00681, 706.971, 4.97931, 0.66", "-3.00087, 707.15, 5.23959, 0.15", "-2.95326, 707.156, 5.25183, 0.15", "-2.30053, 707.233, 5.3901, 0.15", "-1.82699, 707.283, 5.49689, 0.74", "-1.69052, 707.298, 5.52785, 0.74", "-1.2907, 707.351, 5.61828, 0.74", "-1.23423, 707.358, 5.62866, 0.74", "-0.362356, 707.451, 5.79016, 0.22", "0.876095, 707.542, 6.03165, 0.66", "1.18196, 707.557, 6.09627, 0.66", "1.24698, 707.559, 6.11081, 0.66", "1.7712, 707.56, 6.23894, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-12.4897, 711.29, 2.60989, 0.44", "-12.6386, 712.618, 3.31236, 0.44", "-12.6495, 713.548, 3.84381, 0.29", "-12.6141, 714.465, 4.37976, 0.29", "-12.4964, 715.909, 5.21054, 0.81", "-12.4347, 716.421, 5.49577, 1.18", "-12.3996, 716.665, 5.62821, 1.18", "-12.0386, 718.035, 6.32429, 0.15", "-11.9815, 718.181, 6.39916, 0.15", "-11.7582, 718.619, 6.6053, 0.66", "-11.5452, 719.016, 6.73077, 0.96", "-11.5149, 719.086, 6.75342, 0.96", "-11.4456, 719.318, 6.84831, 0.96", "-11.2413, 720.114, 7.28685, 0.29", "-11.2038, 720.254, 7.37632, 0.29", "-11.0337, 720.849, 7.79414, 0.29", "-10.7237, 721.904, 8.56396, 0.37", "-10.4797, 722.742, 9.18298, 0.52", "-10.1132, 724.016, 10.1442, 0.96", "-10.0916, 724.087, 10.1963, 0.96", "-9.84875, 724.797, 10.679, 1.18", "-9.76326, 725.02, 10.8086, 1.18", "-9.61621, 725.407, 10.9383, 1.18", "-9.57816, 725.517, 10.958, 1.18", "-9.2987, 726.529, 11.0627, 1.33", "-9.27569, 726.616, 11.0701, 1.33", "-9.10994, 727.261, 11.1117, 1.25", "-8.65733, 729.036, 11.2103, 0.22", "-8.40776, 730.114, 11.2614, 0.22", "-8.30021, 730.682, 11.2874, 0.59", "-8.27883, 730.806, 11.2928, 0.59", "-8.22496, 731.134, 11.3068, 0.59", "-8.09054, 732.105, 11.3445, 0.22", "-8.06232, 732.846, 11.363, 0.96", "-8.08608, 733.742, 11.393, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.4897, 711.29, 2.60989, 0.15", "-11.7562, 714.095, 2.11197, 0.15", "-11.7368, 714.208, 2.09642, 0.15", "-11.6358, 714.781, 2.02834, 0.15", "-11.6227, 714.872, 2.01908, 0.15", "-11.5591, 715.486, 1.95259, 0.59", "-11.527, 715.885, 1.91155, 0.59", "-11.4459, 718.364, 1.70971, 0.22", "-11.4369, 719.347, 1.63161, 1.25", "-11.4313, 720.042, 1.58976, 0.88", "-11.426, 721.849, 1.51284, 0.15", "-11.435, 722.612, 1.4951, 0.15", "-11.4659, 723.451, 1.49021, 0.74", "-11.5024, 724.019, 1.50167, 1.11", "-11.6154, 725.302, 1.53116, 0.15", "-11.6724, 725.974, 1.55135, 0.96", "-11.7566, 726.787, 1.58829, 1.18", "-12.0355, 729.081, 1.6701, 0.15", "-12.05, 729.184, 1.67321, 0.15", "-12.2236, 730.247, 1.68732, 0.15", "-12.2383, 730.323, 1.68658, 0.15", "-12.3461, 730.976, 1.68596, 0.52", "-12.37, 731.132, 1.6889, 0.52", "-12.4179, 731.465, 1.69454, 0.52", "-12.4257, 731.532, 1.69485, 0.52", "-12.5299, 732.639, 1.69736, 0.22", "-12.6023, 733.443, 1.69589, 1.11", "-12.6634, 734.194, 1.71753, 0.81", "-12.8169, 736.173, 1.8134, 0.15", "-12.9746, 738.273, 1.95244, 0.15", "-13.0175, 738.979, 2.02259, 1.03", "-13.0572, 739.766, 2.13912, 0.81", "-13.1172, 741.46, 2.48625, 0.22", "-13.1187, 741.525, 2.50367, 0.22", "-13.1268, 742.6, 2.90521, 0.52", "-13.1309, 743.611, 3.3603, 0.22", "-13.1355, 744.515, 3.78113, 0.74", "-13.1371, 745.028, 4.02178, 0.74", "-13.138, 745.1, 4.055, 0.74", "-13.1412, 746.591, 4.70745, 0.22", "-13.1407, 746.653, 4.73329, 0.22", "-13.1091, 747.832, 5.12316, 0.66", "-13.0858, 748.241, 5.23577, 0.66", "-13.0799, 748.306, 5.25097, 0.66", "-12.9709, 749.048, 5.38424, 0.22", "-12.6683, 750.252, 5.6152, 1.4", "-12.235, 751.661, 5.89498, 0.15", "-12.1783, 751.82, 5.9267, 0.15", "-11.8675, 752.632, 6.10053, 0.15", "-11.3797, 753.87, 6.37242, 0.15", "-10.4898, 756.043, 6.86582, 0.15", "-9.98231, 757.183, 7.1552, 1.33", "-9.76817, 757.644, 7.30752, 1.47", "-8.97907, 759.392, 7.84163, 0.22", "-8.89248, 759.593, 7.89901, 0.44", "-8.8688, 759.656, 7.91141, 0.44", "-8.55981, 760.699, 7.84449, 0.22", "-8.18381, 762.033, 7.92815, 0.88", "-7.70002, 764.095, 8.30701, 0.59", "-7.60143, 764.477, 8.42612, 0.37", "-7.3047, 765.494, 8.8329, 0.15", "-6.84953, 766.948, 9.50285, 1.62", "-5.70432, 770.225, 11.1744, 0.88", "-5.43996, 770.898, 11.5677, 1.25", "-4.92206, 772.097, 12.3956, 0.15", "-4.73377, 772.502, 12.6882, 0.66", "-4.69753, 772.573, 12.738, 0.66", "-4.03701, 773.813, 13.4561, 0.22", "-3.71898, 774.474, 13.646, 0.88", "-3.59847, 774.744, 13.7146, 0.88", "-3.56213, 774.839, 13.7371, 0.88", "-2.9163, 776.676, 14.1746, 0.22", "-2.69601, 777.335, 14.3263, 0.66", "-2.1886, 779.032, 14.6966, 0.15", "-1.9512, 779.877, 14.8737, 0.15", "-1.93421, 779.945, 14.8873, 0.15", "-1.82088, 780.504, 14.9928, 0.44", "-1.73648, 781.237, 15.1105, 0.22", "-1.71991, 781.879, 15.1905, 0.52", "-1.73872, 781.969, 15.1955, 0.52", "-1.84818, 782.296, 15.2185, 0.52", "-2.00478, 782.68, 15.2488, 0.37", "-2.05332, 782.758, 15.257, 0.37", "-2.37822, 783.092, 15.3059, 0.22", "-2.97442, 783.587, 15.3922, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-8.08608, 733.742, 11.393, 0.22", "-7.91714, 734.565, 11.6713, 0.22", "-7.83115, 734.982, 11.8207, 0.52", "-7.61466, 736.031, 12.2083, 0.29", "-7.51343, 736.519, 12.3936, 0.88", "-7.43229, 736.887, 12.5227, 1.18", "-7.37508, 737.15, 12.6063, 1.18", "-7.34482, 737.285, 12.6414, 1.18", "-7.34482, 737.285, 12.6414, 1.18", "-7.33766, 737.319, 12.646, 1.18", "-7.20152, 737.994, 12.722, 0.22", "-7.08296, 738.405, 12.7848, 0.44", "-6.8816, 739.0, 12.9001, 0.59", "-6.76268, 739.282, 12.9619, 1.11", "-6.62384, 739.568, 13.0296, 1.11", "-6.60697, 739.598, 13.0377, 1.11", "-5.9627, 740.54, 13.3295, 0.22", "-5.93588, 740.571, 13.3389, 0.22", "-5.5507, 740.979, 13.4462, 0.22", "-5.33943, 741.201, 13.5102, 0.74", "-5.31024, 741.232, 13.5193, 0.74", "-5.07796, 741.501, 13.5973, 0.52", "-4.73155, 741.971, 13.7273, 0.22", "-4.48351, 742.369, 13.8746, 0.74", "-4.11628, 743.076, 14.1994, 1.25", "-4.09621, 743.123, 14.2226, 1.25", "-4.03889, 743.291, 14.3098, 1.11", "-3.92755, 743.654, 14.5343, 0.52", "-3.74695, 744.192, 14.9053, 0.15", "-3.73277, 744.225, 14.9305, 0.15", "-3.5321, 744.479, 15.1646, 0.15", "-3.48622, 744.516, 15.2075, 0.15", "-2.89131, 744.891, 15.7684, 0.44", "-2.64608, 745.02, 15.9951, 0.66", "-2.61483, 745.034, 16.0214, 0.66", "-1.84446, 745.338, 16.6635, 0.22", "-1.81196, 745.349, 16.6903, 0.22", "-1.00821, 745.632, 17.3707, 1.33", "-0.91157, 745.67, 17.4628, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-8.08608, 733.742, 11.393, 0.15", "-6.75087, 734.924, 11.7664, 0.15", "-6.28342, 735.323, 11.9161, 0.15", "-6.17522, 735.411, 11.9534, 0.15", "-5.65803, 735.816, 12.1379, 0.44", "-5.54382, 735.902, 12.1804, 0.44", "-4.79526, 736.453, 12.461, 0.22", "-4.41525, 736.726, 12.6185, 0.44", "-3.89617, 737.047, 12.8261, 0.15", "-3.84091, 737.079, 12.8476, 0.15", "-3.28813, 737.368, 13.0576, 0.66", "-3.23134, 737.396, 13.0786, 0.66", "-2.47157, 737.737, 13.3467, 0.22", "-1.8491, 738.02, 13.5526, 0.88", "-1.78174, 738.05, 13.5744, 0.88", "-1.60046, 738.128, 13.6319, 1.11", "-1.47983, 738.176, 13.6683, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.91157, 745.67, 17.4628, 0.29", "-0.426428, 746.849, 18.4182, 0.29", "-0.402076, 746.898, 18.451, 0.29", "-0.0143624, 747.588, 18.8667, 0.29", "0.0373349, 747.666, 18.9071, 0.29", "0.392957, 748.2, 19.1488, 0.74", "0.421954, 748.244, 19.1668, 0.74", "0.770457, 748.78, 19.4026, 0.74", "0.832599, 748.875, 19.4587, 0.74", "1.24484, 749.486, 19.8611, 0.15", "1.44253, 749.77, 20.0505, 0.15", "1.46769, 749.808, 20.0767, 0.15", "2.28913, 751.101, 20.9605, 0.15", "2.53204, 751.531, 21.2493, 1.11", "2.74163, 751.958, 21.5143, 1.25", "3.19801, 752.958, 22.1044, 0.22", "3.46712, 753.554, 22.4283, 0.22", "3.48529, 753.598, 22.449, 0.22", "3.71545, 754.249, 22.6383, 0.29", "3.91624, 754.904, 22.7986, 0.74", "4.0563, 755.366, 22.9135, 1.11", "4.07634, 755.424, 22.9268, 1.11", "4.3612, 756.055, 23.0527, 0.66", "4.75452, 756.833, 23.1925, 0.22", "5.04026, 757.294, 23.2607, 0.15", "5.43448, 757.847, 23.3257, 1.11", "5.8095, 758.358, 23.3677, 1.69", "5.84303, 758.398, 23.3716, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-0.91157, 745.67, 17.4628, 0.29", "-1.85396, 746.592, 17.8594, 0.29", "-2.10868, 746.834, 17.9583, 0.29", "-2.82565, 747.495, 18.243, 0.15", "-2.97918, 747.633, 18.3049, 0.15", "-3.47102, 748.092, 18.5086, 0.29", "-4.22848, 748.812, 18.8243, 0.15", "-4.32222, 748.905, 18.8577, 0.15", "-5.08526, 749.746, 19.1119, 0.15", "-5.15345, 749.838, 19.1292, 0.15", "-5.56623, 750.468, 19.2184, 0.15", "-5.66399, 750.653, 19.2302, 0.15", "-6.23845, 751.894, 19.2356, 0.15", "-6.27885, 751.991, 19.2329, 0.15", "-6.67644, 753.165, 19.1062, 0.15", "-6.69956, 753.239, 19.096, 0.15", "-6.86847, 753.853, 18.9777, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "5.84303, 758.398, 23.3716, 0.52", "6.27161, 759.539, 24.4602, 0.52", "6.56152, 760.632, 25.4785, 0.29", "6.61476, 761.021, 25.795, 0.96", "6.65556, 761.501, 26.1635, 1.11", "6.66008, 761.582, 26.2265, 1.11", "6.6885, 762.26, 26.7673, 0.81", "6.66017, 762.995, 27.3138, 1.11", "6.62706, 764.036, 28.0036, 0.37", "6.6279, 764.079, 28.0313, 0.37", "6.71823, 765.053, 28.6044, 0.29", "6.72882, 765.104, 28.633, 0.29", "7.03258, 765.75, 29.0176, 0.81", "7.27242, 766.083, 29.2344, 1.03", "7.30779, 766.124, 29.2631, 1.03", "7.62978, 766.483, 29.5108, 0.96", "8.46314, 767.387, 30.112, 0.66", "9.27022, 768.286, 30.6868, 0.52", "9.89082, 769.023, 31.143, 0.44", "10.1884, 769.414, 31.3744, 0.44", "10.4646, 769.753, 31.6029, 0.37", "10.5481, 769.846, 31.6705, 0.37", "11.1739, 770.461, 32.1238, 0.37", "11.7768, 771.069, 32.5606, 0.22", "12.621, 771.862, 33.1573, 1.4", "13.8736, 772.946, 34.0666, 0.29", "14.2737, 773.259, 34.3681, 0.96", "14.6018, 773.484, 34.6246, 0.96", "19.8681, 779.031, 38.6117, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.84303, 758.398, 23.3716, 0.22", "4.91371, 760.152, 23.7787, 0.22", "4.08969, 761.708, 24.1397, 0.22", "4.0058, 761.866, 24.1764, 0.22", "3.28364, 763.229, 24.4927, 0.22", "-0.542094, 773.942, 28.0616, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_DBC_0271760b42_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -3.92838, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -3.92838, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.15856, -4.53722, -7.51185, 0.74 ) }
    dend_75 { pt3dadd( -7.18689, -4.57047, -7.51621, 0.74 ) }
    dend_75 { pt3dadd( -7.76572, -5.01808, -7.58012, 0.66 ) }
    dend_75 { pt3dadd( -8.34343, -5.32487, -7.62619, 0.44 ) }
    dend_75 { pt3dadd( -9.02453, -5.58748, -7.66568, 0.44 ) }
    dend_75 { pt3dadd( -9.67288, -5.7281, -7.76509, 0.44 ) }
    dend_75 { pt3dadd( -10.0945, -5.77868, -7.85435, 1.03 ) }
    dend_75 { pt3dadd( -10.6223, -5.83226, -8.01732, 1.33 ) }
    dend_75 { pt3dadd( -11.0948, -5.85928, -8.20246, 1.47 ) }
    dend_75 { pt3dadd( -11.5649, -5.8973, -8.44566, 0.66 ) }
    dend_75 { pt3dadd( -12.4647, -6.16362, -9.19548, 0.37 ) }
    dend_75 { pt3dadd( -12.6615, -6.3201, -9.50185, 0.37 ) }
    dend_75 { pt3dadd( -12.9281, -6.69593, -10.1314, 1.11 ) }
    dend_75 { pt3dadd( -12.9401, -6.72291, -10.1725, 1.11 ) }
    dend_75 { pt3dadd( -13.0094, -6.96677, -10.5086, 0.88 ) }
    dend_75 { pt3dadd( -13.1055, -7.51546, -11.1885, 0.59 ) }
    dend_75 { pt3dadd( -13.2043, -8.24817, -11.9842, 1.03 ) }
    dend_75 { pt3dadd( -13.2214, -8.37457, -12.1292, 1.25 ) }
    dend_75 { pt3dadd( -13.2294, -8.41834, -12.1781, 1.25 ) }
    dend_75 { pt3dadd( -13.2733, -8.61061, -12.394, 1.25 ) }
    dend_75 { pt3dadd( -13.2912, -8.66247, -12.455, 1.25 ) }
    dend_75 { pt3dadd( -13.5502, -9.17387, -13.0362, 0.52 ) }
    dend_75 { pt3dadd( -13.8448, -9.55834, -13.4708, 0.22 ) }
    dend_75 { pt3dadd( -14.0391, -9.69654, -13.6763, 0.22 ) }
    dend_75 { pt3dadd( -14.1777, -9.75383, -13.7878, 0.22 ) }
    dend_75 { pt3dadd( -14.5187, -9.84153, -14.0104, 0.88 ) }
    dend_75 { pt3dadd( -14.7522, -9.89678, -14.1343, 1.25 ) }
    dend_75 { pt3dadd( -15.1137, -9.99008, -14.299, 1.25 ) }
    dend_75 { pt3dadd( -15.8664, -10.2545, -14.6952, 0.29 ) }
    dend_75 { pt3dadd( -16.0788, -10.3661, -14.837, 0.29 ) }
    dend_75 { pt3dadd( -16.3902, -10.6063, -15.0884, 0.29 ) }
    dend_75 { pt3dadd( -16.7284, -10.9567, -15.4002, 0.29 ) }
    dend_75 { pt3dadd( -17.0584, -11.3635, -15.7395, 0.29 ) }
    dend_75 { pt3dadd( -17.3681, -11.8035, -16.079, 0.52 ) }
    dend_75 { pt3dadd( -17.4878, -11.9995, -16.2153, 0.52 ) }
    dend_75 { pt3dadd( -17.5939, -12.1537, -16.3252, 0.29 ) }
    dend_75 { pt3dadd( -17.7591, -12.3624, -16.5354, 0.29 ) }
    dend_75 { pt3dadd( -17.9668, -12.5859, -16.8278, 1.25 ) }
    dend_75 { pt3dadd( -18.1168, -12.7266, -17.0323, 1.47 ) }
    dend_75 { pt3dadd( -18.1403, -12.748, -17.0655, 1.47 ) }
    dend_75 { pt3dadd( -18.253, -12.8563, -17.2429, 1.47 ) }
    dend_75 { pt3dadd( -18.9035, -13.5361, -18.4236, 0.22 ) }
    dend_75 { pt3dadd( -19.0049, -13.6598, -18.6362, 0.81 ) }
    dend_75 { pt3dadd( -19.1284, -13.8182, -18.8994, 0.81 ) }
    dend_75 { pt3dadd( -19.1453, -13.8382, -18.9349, 0.81 ) }
    dend_75 { pt3dadd( -19.3194, -14.0124, -19.2607, 0.96 ) }
    dend_75 { pt3dadd( -19.715, -14.3615, -19.9751, 0.29 ) }
    dend_75 { pt3dadd( -19.741, -14.3802, -20.0164, 0.29 ) }
    dend_75 { pt3dadd( -19.893, -14.514, -20.2871, 0.29 ) }
    dend_75 { pt3dadd( -20.3162, -15.0302, -21.13, 1.92 ) }
    dend_75 { pt3dadd( -20.5332, -15.3667, -21.6001, 2.58 ) }
    dend_75 { pt3dadd( -20.7404, -15.7542, -22.0838, 2.58 ) }
    dend_75 { pt3dadd( -20.7552, -15.7822, -22.1144, 2.58 ) }
    dend_75 { pt3dadd( -21.1707, -16.5609, -22.8766, 0.66 ) }
    dend_75 { pt3dadd( -21.4964, -17.0894, -23.3517, 0.22 ) }
    dend_75 { pt3dadd( -21.5652, -17.1818, -23.421, 0.81 ) }
    dend_75 { pt3dadd( -21.9754, -17.6449, -23.7658, 0.22 ) }
    dend_75 { pt3dadd( -22.4706, -18.1443, -24.1274, 2.58 ) }
    dend_75 { pt3dadd( -22.7069, -18.3589, -24.292, 3.32 ) }
    dend_75 { pt3dadd( -23.608, -19.0975, -24.8891, 0.44 ) }
    dend_75 { pt3dadd( -24.0784, -19.4837, -25.2085, 1.33 ) }
    dend_75 { pt3dadd( -24.4406, -19.8136, -25.4626, 1.47 ) }
    dend_75 { pt3dadd( -24.8305, -20.2587, -25.7847, 0.22 ) }
    dend_75 { pt3dadd( -24.8705, -20.3153, -25.8264, 0.22 ) }
    dend_75 { pt3dadd( -25.1101, -20.6827, -26.093, 0.22 ) }
    dend_75 { pt3dadd( -25.3434, -21.093, -26.3647, 1.69 ) }
    dend_75 { pt3dadd( -25.4329, -21.2397, -26.4625, 2.06 ) }
    dend_75 { pt3dadd( -26.0862, -22.1254, -27.1625, 0.22 ) }
    dend_75 { pt3dadd( -26.1098, -22.1522, -27.1878, 0.22 ) }
    dend_75 { pt3dadd( -26.4018, -22.4806, -27.5312, 0.22 ) }
    dend_75 { pt3dadd( -26.5494, -22.6455, -27.7177, 0.88 ) }
    dend_75 { pt3dadd( -26.6915, -22.8331, -27.9537, 1.11 ) }
    dend_75 { pt3dadd( -27.2778, -23.6918, -29.0423, 0.22 ) }
    dend_75 { pt3dadd( -27.2946, -23.7206, -29.0802, 0.22 ) }
    dend_75 { pt3dadd( -27.4925, -24.1059, -29.5957, 1.84 ) }
    dend_75 { pt3dadd( -27.5774, -24.3034, -29.8577, 1.99 ) }
    dend_75 { pt3dadd( -27.9391, -25.2385, -31.0411, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -28.0468, -25.5134, -31.3573, 0.29 ) }
    dend_75 { pt3dadd( -28.4158, -26.2792, -32.1476, 0.29 ) }
    dend_75 { pt3dadd( -28.4589, -26.356, -32.227, 0.29 ) }
    dend_75 { pt3dadd( -28.7456, -26.773, -32.6583, 1.11 ) }
    dend_75 { pt3dadd( -28.9028, -26.969, -32.8783, 1.47 ) }
    dend_75 { pt3dadd( -29.3149, -27.4156, -33.3995, 0.29 ) }
    dend_75 { pt3dadd( -29.8702, -27.9569, -34.0738, 2.43 ) }
    dend_75 { pt3dadd( -30.3214, -28.3383, -34.5693, 2.43 ) }
    dend_75 { pt3dadd( -31.0198, -28.8624, -35.315, 0.52 ) }
    dend_75 { pt3dadd( -31.543, -29.208, -35.8652, 0.66 ) }
    dend_75 { pt3dadd( -31.9657, -29.461, -36.3063, 0.22 ) }
    dend_75 { pt3dadd( -32.1843, -29.577, -36.5222, 0.59 ) }
    dend_75 { pt3dadd( -32.391, -29.6809, -36.7053, 0.59 ) }
    dend_75 { pt3dadd( -32.8824, -29.9445, -37.0917, 0.22 ) }
    dend_75 { pt3dadd( -33.229, -30.1756, -37.3554, 1.18 ) }
    dend_75 { pt3dadd( -33.3834, -30.3058, -37.466, 1.33 ) }
    dend_75 { pt3dadd( -34.0006, -30.9357, -37.9632, 0.37 ) }
    dend_75 { pt3dadd( -34.3633, -31.3617, -38.2807, 0.22 ) }
    dend_75 { pt3dadd( -34.657, -31.742, -38.5446, 0.22 ) }
    dend_75 { pt3dadd( -34.994, -32.2233, -38.847, 1.55 ) }
    dend_75 { pt3dadd( -35.2116, -32.5604, -39.0436, 2.06 ) }
    dend_75 { pt3dadd( -35.7707, -33.507, -39.564, 0.22 ) }
    dend_75 { pt3dadd( -35.8838, -33.7101, -39.6649, 0.52 ) }
    dend_75 { pt3dadd( -36.0012, -33.8939, -39.7573, 0.52 ) }
    dend_75 { pt3dadd( -36.3695, -34.4079, -40.0156, 0.22 ) }
    dend_75 { pt3dadd( -36.5782, -34.6858, -40.1506, 0.22 ) }
    dend_75 { pt3dadd( -36.8075, -34.9882, -40.3119, 1.11 ) }
    dend_75 { pt3dadd( -37.004, -35.24, -40.446, 1.33 ) }
    dend_75 { pt3dadd( -37.5918, -35.9564, -40.8711, 0.22 ) }
    dend_75 { pt3dadd( -37.8003, -36.1939, -41.023, 1.03 ) }
    dend_75 { pt3dadd( -37.9175, -36.314, -41.1072, 1.03 ) }
    dend_75 { pt3dadd( -38.5494, -36.9331, -41.5488, 0.22 ) }
    dend_75 { pt3dadd( -38.7799, -37.1607, -41.7044, 0.22 ) }
    dend_75 { pt3dadd( -38.9784, -37.3589, -41.8341, 1.18 ) }
    dend_75 { pt3dadd( -39.1637, -37.537, -41.9481, 1.4 ) }
    dend_75 { pt3dadd( -39.8964, -38.2174, -42.4396, 0.22 ) }
    dend_75 { pt3dadd( -40.137, -38.4338, -42.5981, 1.11 ) }
    dend_75 { pt3dadd( -40.3172, -38.592, -42.7125, 1.33 ) }
    dend_75 { pt3dadd( -40.4726, -38.7362, -42.8219, 1.18 ) }
    dend_75 { pt3dadd( -41.0738, -39.3295, -43.2655, 0.15 ) }
    dend_75 { pt3dadd( -41.586, -39.8582, -43.6513, 0.15 ) }
    dend_75 { pt3dadd( -41.7833, -40.067, -43.7967, 0.81 ) }
    dend_75 { pt3dadd( -41.9036, -40.199, -43.9029, 0.81 ) }
    dend_75 { pt3dadd( -42.3996, -40.7589, -44.3706, 0.22 ) }
    dend_75 { pt3dadd( -42.8061, -41.2348, -44.7647, 0.22 ) }
    dend_75 { pt3dadd( -43.1765, -41.6835, -45.1304, 1.47 ) }
    dend_75 { pt3dadd( -43.3371, -41.8714, -45.295, 1.84 ) }
    dend_75 { pt3dadd( -44.2022, -42.8601, -46.3062, 0.15 ) }
    dend_75 { pt3dadd( -44.413, -43.0858, -46.5665, 0.15 ) }
    dend_75 { pt3dadd( -44.5416, -43.2155, -46.7392, 0.74 ) }
    dend_75 { pt3dadd( -44.6027, -43.2735, -46.8242, 0.74 ) }
    dend_75 { pt3dadd( -45.0887, -43.6958, -47.4949, 0.29 ) }
    dend_75 { pt3dadd( -45.5231, -44.0462, -48.0709, 1.25 ) }
    dend_75 { pt3dadd( -45.6922, -44.1737, -48.2748, 1.33 ) }
    dend_75 { pt3dadd( -46.2357, -44.6026, -49.0499, 0.15 ) }
    dend_75 { pt3dadd( -46.4021, -44.7391, -49.308, 0.74 ) }
    dend_75 { pt3dadd( -46.7523, -45.0346, -49.8679, 0.22 ) }
    dend_75 { pt3dadd( -46.7709, -45.0505, -49.8968, 0.22 ) }
    dend_75 { pt3dadd( -46.9182, -45.1756, -50.1181, 0.88 ) }
    dend_75 { pt3dadd( -47.7527, -45.8831, -51.3589, 0.22 ) }
    dend_75 { pt3dadd( -47.7801, -45.9061, -51.3967, 0.22 ) }
    dend_75 { pt3dadd( -47.8608, -45.9693, -51.4899, 0.22 ) }
    dend_75 { pt3dadd( -48.2213, -46.2306, -51.817, 1.47 ) }
    dend_75 { pt3dadd( -48.3894, -46.3436, -51.9372, 1.84 ) }
    dend_75 { pt3dadd( -48.5382, -46.4405, -52.017, 1.84 ) }
    dend_75 { pt3dadd( -48.7128, -46.5516, -52.0771, 1.84 ) }
    dend_75 { pt3dadd( -49.4736, -47.0929, -52.522, 0.15 ) }
    dend_75 { pt3dadd( -49.5219, -47.1266, -52.5565, 0.15 ) }
    dend_75 { pt3dadd( -49.9119, -47.3733, -52.8651, 0.15 ) }
    dend_75 { pt3dadd( -50.246, -47.585, -53.1411, 0.96 ) }
    dend_75 { pt3dadd( -50.4504, -47.7229, -53.316, 0.96 ) }
    dend_75 { pt3dadd( -51.5188, -48.4949, -54.2686, 0.22 ) }
    dend_75 { pt3dadd( -51.7945, -48.7202, -54.5312, 0.22 ) }
    dend_75 { pt3dadd( -52.1376, -49.0173, -54.8552, 0.22 ) }
    dend_75 { pt3dadd( -52.5254, -49.3671, -55.2051, 1.11 ) }
    dend_75 { pt3dadd( -52.7837, -49.6126, -55.4281, 1.69 ) }
    dend_75 { pt3dadd( -52.868, -49.7021, -55.496, 1.69 ) }
    dend_75 { pt3dadd( -53.5986, -50.6011, -56.0492, 0.22 ) }
    dend_75 { pt3dadd( -53.8561, -50.957, -56.2605, 0.37 ) }
    dend_75 { pt3dadd( -54.0981, -51.3044, -56.4674, 0.22 ) }
    dend_75 { pt3dadd( -54.4308, -51.7619, -56.7414, 1.47 ) }
    dend_75 { pt3dadd( -54.6672, -52.0665, -56.9473, 1.69 ) }
    dend_75 { pt3dadd( -55.272, -52.8183, -57.4725, 0.22 ) }
    dend_75 { pt3dadd( -55.7833, -53.471, -57.9195, 0.22 ) }
    dend_75 { pt3dadd( -56.0389, -53.7991, -58.156, 1.4 ) }
    dend_75 { pt3dadd( -56.2822, -54.1111, -58.3886, 1.84 ) }
    dend_75 { pt3dadd( -57.0731, -55.0887, -59.146, 0.15 ) }
    dend_75 { pt3dadd( -57.3514, -55.4159, -59.4157, 0.15 ) }
    dend_75 { pt3dadd( -57.6158, -55.7102, -59.6726, 1.18 ) }
    dend_75 { pt3dadd( -57.7599, -55.87, -59.8178, 1.18 ) }
    dend_75 { pt3dadd( -57.7805, -55.8936, -59.8386, 1.18 ) }
    dend_75 { pt3dadd( -58.4267, -56.686, -60.4937, 0.22 ) }
    dend_75 { pt3dadd( -58.7283, -57.0971, -60.7784, 1.25 ) }
    dend_75 { pt3dadd( -59.1581, -57.6895, -61.1998, 0.15 ) }
    dend_75 { pt3dadd( -59.3325, -57.9056, -61.3672, 0.88 ) }
    dend_75 { pt3dadd( -59.4232, -58.0118, -61.4499, 1.03 ) }
    dend_75 { pt3dadd( -59.7063, -58.3306, -61.6912, 0.15 ) }
    dend_75 { pt3dadd( -60.03, -58.6793, -61.9399, 0.15 ) }
    dend_75 { pt3dadd( -60.2912, -58.9337, -62.1456, 0.74 ) }
    dend_75 { pt3dadd( -60.7867, -59.3752, -62.5312, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -61.2134, -59.7567, -62.8627, 0.22 ) }
    dend_75 { pt3dadd( -61.596, -60.1008, -63.1589, 1.99 ) }
    dend_75 { pt3dadd( -61.7689, -60.261, -63.292, 2.28 ) }
    dend_75 { pt3dadd( -62.7286, -61.215, -64.0197, 0.22 ) }
    dend_75 { pt3dadd( -62.8605, -61.3655, -64.1214, 0.52 ) }
    dend_75 { pt3dadd( -63.2952, -61.8985, -64.4394, 0.15 ) }
    dend_75 { pt3dadd( -63.3208, -61.9293, -64.4577, 0.15 ) }
    dend_75 { pt3dadd( -63.5226, -62.1598, -64.5846, 0.81 ) }
    dend_75 { pt3dadd( -63.546, -62.1863, -64.5965, 0.81 ) }
    dend_75 { pt3dadd( -64.2013, -62.923, -64.8321, 0.22 ) }
    dend_75 { pt3dadd( -64.6822, -63.4689, -65.0397, 0.22 ) }
    dend_75 { pt3dadd( -64.7147, -63.5043, -65.0544, 0.22 ) }
    dend_75 { pt3dadd( -65.175, -64.0263, -65.2684, 0.22 ) }
    dend_75 { pt3dadd( -65.4964, -64.3966, -65.4401, 0.81 ) }
    dend_75 { pt3dadd( -65.5258, -64.4328, -65.457, 0.81 ) }
    dend_75 { pt3dadd( -66.0159, -65.0921, -65.7854, 0.22 ) }
    dend_75 { pt3dadd( -66.3006, -65.4805, -65.9895, 1.47 ) }
    dend_75 { pt3dadd( -66.404, -65.6185, -66.061, 1.77 ) }
    dend_75 { pt3dadd( -67.1908, -66.6432, -66.5941, 0.22 ) }
    dend_75 { pt3dadd( -67.4233, -66.9257, -66.7439, 0.52 ) }
    dend_75 { pt3dadd( -67.954, -67.5323, -67.0566, 0.22 ) }
    dend_75 { pt3dadd( -68.6053, -68.2259, -67.4006, 0.22 ) }
    dend_75 { pt3dadd( -68.9406, -68.5707, -67.5772, 1.18 ) }
    dend_75 { pt3dadd( -69.0424, -68.6741, -67.6292, 1.4 ) }
    dend_75 { pt3dadd( -69.8324, -69.4988, -68.0879, 0.15 ) }
    dend_75 { pt3dadd( -70.0114, -69.6915, -68.205, 0.66 ) }
    dend_75 { pt3dadd( -70.8921, -70.6786, -68.8362, 0.15 ) }
    dend_75 { pt3dadd( -71.3139, -71.1706, -69.1839, 1.69 ) }
    dend_75 { pt3dadd( -71.4438, -71.3244, -69.297, 1.84 ) }
    dend_75 { pt3dadd( -72.3871, -72.4884, -70.163, 0.22 ) }
    dend_75 { pt3dadd( -72.562, -72.7191, -70.3414, 0.66 ) }
    dend_75 { pt3dadd( -72.5859, -72.7538, -70.3708, 0.66 ) }
    dend_75 { pt3dadd( -72.8224, -73.118, -70.7083, 0.15 ) }
    dend_75 { pt3dadd( -72.9254, -73.2663, -70.8501, 0.59 ) }
    dend_75 { pt3dadd( -72.9585, -73.3114, -70.8942, 0.59 ) }
    dend_75 { pt3dadd( -73.3585, -73.8339, -71.3909, 0.22 ) }
    dend_75 { pt3dadd( -73.722, -74.2969, -71.8589, 1.33 ) }
    dend_75 { pt3dadd( -74.1024, -74.7922, -72.3672, 0.15 ) }
    dend_75 { pt3dadd( -74.2745, -75.033, -72.6175, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.26762, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.32723, 6.19415, -8.62922, 1.18 ) }
    dend_70 { pt3dadd( 4.37364, 7.49158, -8.22154, 1.47 ) }
    dend_70 { pt3dadd( 4.40129, 8.50123, -8.01772, 1.92 ) }
    dend_70 { pt3dadd( 4.41656, 9.86738, -7.89666, 0.81 ) }
    dend_70 { pt3dadd( 4.4119, 11.002, -7.89853, 0.81 ) }
    dend_70 { pt3dadd( 4.40077, 11.7269, -7.95564, 0.74 ) }
    dend_70 { pt3dadd( 4.39488, 11.8454, -7.99192, 0.74 ) }
    dend_70 { pt3dadd( 4.26656, 13.1993, -8.71314, 0.74 ) }
    dend_70 { pt3dadd( 4.18321, 13.9442, -9.2821, 1.11 ) }
    dend_70 { pt3dadd( 4.13743, 14.3906, -9.72969, 1.11 ) }
    dend_70 { pt3dadd( 4.09067, 15.0399, -10.4595, 1.11 ) }
    dend_70 { pt3dadd( 4.07326, 16.2366, -11.761, 1.25 ) }
    dend_70 { pt3dadd( 4.07455, 16.2804, -11.8068, 1.25 ) }
    dend_70 { pt3dadd( 4.18336, 17.3546, -12.8694, 1.03 ) }
    dend_70 { pt3dadd( 4.37653, 18.5452, -13.9824, 0.52 ) }
    dend_70 { pt3dadd( 4.65015, 19.7675, -15.0334, 0.52 ) }
    dend_70 { pt3dadd( 4.88863, 20.5885, -15.6603, 0.81 ) }
    dend_70 { pt3dadd( 4.90732, 20.6403, -15.6904, 0.81 ) }
    dend_70 { pt3dadd( 5.16148, 21.2622, -15.9878, 1.18 ) }
    dend_70 { pt3dadd( 5.2981, 21.5173, -16.0528, 1.18 ) }
    dend_70 { pt3dadd( 5.51052, 21.8388, -16.0544, 1.18 ) }
    dend_70 { pt3dadd( 5.55405, 21.8984, -16.0487, 1.18 ) }
    dend_70 { pt3dadd( 5.71042, 22.1255, -16.0327, 1.4 ) }
    dend_70 { pt3dadd( 5.79407, 22.2751, -16.0211, 1.4 ) }
    dend_70 { pt3dadd( 6.03885, 22.8333, -15.9747, 1.4 ) }
    dend_70 { pt3dadd( 6.23392, 23.4152, -15.9194, 0.88 ) }
    dend_70 { pt3dadd( 6.42323, 24.331, -15.8242, 0.52 ) }
    dend_70 { pt3dadd( 6.46277, 25.1771, -15.8167, 0.37 ) }
    dend_70 { pt3dadd( 6.38471, 26.0727, -15.9239, 0.37 ) }
    dend_70 { pt3dadd( 6.30892, 26.4716, -16.0126, 0.29 ) }
    dend_70 { pt3dadd( 6.10362, 27.1805, -16.2448, 0.29 ) }
    dend_70 { pt3dadd( 5.96112, 27.5953, -16.4489, 0.29 ) }
    dend_70 { pt3dadd( 5.52254, 28.92, -17.4721, 1.33 ) }
    dend_70 { pt3dadd( 5.28425, 29.6587, -18.1393, 1.92 ) }
    dend_70 { pt3dadd( 5.23851, 29.8423, -18.3238, 2.21 ) }
    dend_70 { pt3dadd( 5.21771, 29.9832, -18.4703, 2.21 ) }
    dend_70 { pt3dadd( 5.19164, 30.7547, -19.2904, 2.5 ) }
    dend_70 { pt3dadd( 5.23479, 31.7633, -20.4351, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 9.48563, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 9.48563, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 0.993206, 11.3413, -2.80663, 2.8 ) }
    dend_21 { pt3dadd( 0.951365, 11.4639, -2.83306, 2.8 ) }
    dend_21 { pt3dadd( 0.694346, 12.2103, -3.00499, 2.8 ) }
    dend_21 { pt3dadd( 0.578594, 12.5312, -3.08214, 2.8 ) }
    dend_21 { pt3dadd( 0.312136, 13.2535, -3.26151, 2.8 ) }
    dend_21 { pt3dadd( -0.0895769, 14.2854, -3.54239, 3.02 ) }
    dend_21 { pt3dadd( -0.652039, 15.6141, -3.96501, 3.02 ) }
    dend_21 { pt3dadd( -0.67374, 15.6623, -3.98272, 3.02 ) }
    dend_21 { pt3dadd( -1.14884, 16.6485, -4.37607, 3.02 ) }
    dend_21 { pt3dadd( -1.17193, 16.6956, -4.39515, 3.02 ) }
    dend_21 { pt3dadd( -1.70831, 17.7701, -4.84477, 2.87 ) }
    dend_21 { pt3dadd( -2.20673, 18.8138, -5.23026, 2.87 ) }
    dend_21 { pt3dadd( -2.22929, 18.8628, -5.24357, 2.87 ) }
    dend_21 { pt3dadd( -2.69688, 19.9287, -5.46646, 2.73 ) }
    dend_21 { pt3dadd( -3.18463, 21.0721, -5.64297, 2.58 ) }
    dend_21 { pt3dadd( -3.20997, 21.1311, -5.65044, 2.58 ) }
    dend_21 { pt3dadd( -3.9075, 22.7462, -5.80003, 2.36 ) }
    dend_21 { pt3dadd( -4.60699, 24.323, -5.91613, 2.06 ) }
    dend_21 { pt3dadd( -5.24676, 25.6954, -6.01115, 2.06 ) }
    dend_21 { pt3dadd( -5.66329, 26.5724, -6.07037, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -6.40653, 28.094, -6.16343, 2.73 ) }
    dend_21 { pt3dadd( -7.01525, 29.3107, -6.24122, 2.95 ) }
    dend_21 { pt3dadd( -7.58181, 30.3802, -6.32418, 3.17 ) }
    dend_21 { pt3dadd( -8.10015, 31.3134, -6.41034, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -10.1699, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -10.1699, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.00748, -11.355, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -4.48457, -12.488, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.532277 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.532277 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532277 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.23479, 31.7633, -20.4351, 1.25 ) }
    dend_74 { pt3dadd( 5.03585, 32.3221, -21.0926, 1.25 ) }
    dend_74 { pt3dadd( 4.87772, 32.8787, -21.7176, 1.77 ) }
    dend_74 { pt3dadd( 4.8449, 33.0147, -21.8679, 1.84 ) }
    dend_74 { pt3dadd( 4.79502, 33.7571, -22.7783, 0.22 ) }
    dend_74 { pt3dadd( 4.86422, 34.2802, -23.4939, 1.33 ) }
    dend_74 { pt3dadd( 4.87337, 34.307, -23.5369, 1.33 ) }
    dend_74 { pt3dadd( 4.95403, 34.4362, -23.7732, 1.77 ) }
    dend_74 { pt3dadd( 4.9848, 34.473, -23.8437, 1.77 ) }
    dend_74 { pt3dadd( 5.57028, 35.0465, -25.0167, 1.18 ) }
    dend_74 { pt3dadd( 6.03256, 35.4207, -25.8393, 1.4 ) }
    dend_74 { pt3dadd( 6.71619, 35.8928, -27.0835, 0.29 ) }
    dend_74 { pt3dadd( 6.73539, 35.9056, -27.1197, 0.29 ) }
    dend_74 { pt3dadd( 7.29976, 36.2822, -28.2037, 1.55 ) }
    dend_74 { pt3dadd( 7.36705, 36.3323, -28.3413, 1.84 ) }
    dend_74 { pt3dadd( 7.38635, 36.3505, -28.3836, 1.84 ) }
    dend_74 { pt3dadd( 8.20661, 37.3456, -30.3244, 0.52 ) }
    dend_74 { pt3dadd( 8.22338, 37.3734, -30.3642, 0.52 ) }
    dend_74 { pt3dadd( 8.30928, 37.5538, -30.5756, 0.74 ) }
    dend_74 { pt3dadd( 8.82243, 38.8799, -31.9021, 1.47 ) }
    dend_74 { pt3dadd( 9.03108, 39.5307, -32.4387, 0.29 ) }
    dend_74 { pt3dadd( 9.1984, 40.1742, -32.8597, 1.69 ) }
    dend_74 { pt3dadd( 9.48382, 41.6618, -33.6654, 0.15 ) }
    dend_74 { pt3dadd( 9.55307, 42.1122, -33.911, 0.66 ) }
    dend_74 { pt3dadd( 9.55802, 42.1542, -33.9342, 0.66 ) }
    dend_74 { pt3dadd( 9.63076, 42.9618, -34.4027, 0.15 ) }
    dend_74 { pt3dadd( 9.67498, 43.533, -34.7815, 1.69 ) }
    dend_74 { pt3dadd( 9.76104, 45.2012, -35.966, 0.22 ) }
    dend_74 { pt3dadd( 9.77397, 45.6113, -36.2887, 0.59 ) }
    dend_74 { pt3dadd( 9.80538, 46.4916, -37.0289, 1.92 ) }
    dend_74 { pt3dadd( 9.85581, 47.8597, -38.2314, 0.15 ) }
    dend_74 { pt3dadd( 9.8585, 47.9319, -38.2983, 0.15 ) }
    dend_74 { pt3dadd( 9.88164, 48.2603, -38.6113, 0.37 ) }
    dend_74 { pt3dadd( 9.93491, 48.7663, -39.1157, 0.22 ) }
    dend_74 { pt3dadd( 10.0216, 49.3017, -39.719, 1.11 ) }
    dend_74 { pt3dadd( 10.0271, 49.3338, -39.7584, 1.11 ) }
    dend_74 { pt3dadd( 10.0629, 49.5528, -40.0399, 1.25 ) }
    dend_74 { pt3dadd( 10.2119, 50.4432, -41.2304, 0.22 ) }
    dend_74 { pt3dadd( 10.308, 51.0461, -42.0486, 0.96 ) }
    dend_74 { pt3dadd( 10.3852, 51.7138, -42.9163, 0.15 ) }
    dend_74 { pt3dadd( 10.4363, 52.2756, -43.6023, 1.18 ) }
    dend_74 { pt3dadd( 10.4417, 52.3852, -43.7266, 1.47 ) }
    dend_74 { pt3dadd( 10.4409, 53.191, -44.5313, 0.22 ) }
    dend_74 { pt3dadd( 10.4201, 53.4274, -44.7197, 0.44 ) }
    dend_74 { pt3dadd( 10.3533, 53.8942, -45.0139, 0.15 ) }
    dend_74 { pt3dadd( 10.2205, 54.5306, -45.3513, 1.11 ) }
    dend_74 { pt3dadd( 10.1533, 54.8034, -45.4815, 1.47 ) }
    dend_74 { pt3dadd( 9.86876, 55.9629, -45.9582, 0.22 ) }
    dend_74 { pt3dadd( 9.75322, 56.4243, -46.1191, 0.74 ) }
    dend_74 { pt3dadd( 9.58121, 57.1313, -46.357, 0.15 ) }
    dend_74 { pt3dadd( 9.45541, 57.6816, -46.5344, 1.11 ) }
    dend_74 { pt3dadd( 9.40153, 57.9172, -46.6057, 1.55 ) }
    dend_74 { pt3dadd( 8.93422, 60.016, -47.2115, 0.15 ) }
    dend_74 { pt3dadd( 8.82797, 60.5006, -47.3387, 0.66 ) }
    dend_74 { pt3dadd( 8.78132, 60.7375, -47.4005, 0.66 ) }
    dend_74 { pt3dadd( 8.53721, 62.1259, -47.7569, 0.15 ) }
    dend_74 { pt3dadd( 8.46402, 62.5665, -47.8639, 0.37 ) }
    dend_74 { pt3dadd( 8.45411, 62.625, -47.8783, 0.37 ) }
    dend_74 { pt3dadd( 8.40266, 62.8693, -47.9394, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.23479, 31.7633, -20.4351, 0.37 ) }
    dend_71 { pt3dadd( 5.64, 33.3576, -20.5419, 0.37 ) }
    dend_71 { pt3dadd( 5.90567, 34.7761, -20.6574, 0.37 ) }
    dend_71 { pt3dadd( 6.06098, 36.0231, -20.7734, 0.37 ) }
    dend_71 { pt3dadd( 6.06484, 36.1075, -20.7823, 0.37 ) }
    dend_71 { pt3dadd( 6.03611, 36.7001, -20.8541, 0.37 ) }
    dend_71 { pt3dadd( 6.02862, 36.7723, -20.8667, 0.37 ) }
    dend_71 { pt3dadd( 5.7726, 37.6044, -21.1159, 0.66 ) }
    dend_71 { pt3dadd( 5.62942, 37.891, -21.2291, 0.81 ) }
    dend_71 { pt3dadd( 5.39812, 38.3683, -21.4241, 0.81 ) }
    dend_71 { pt3dadd( 5.19231, 38.8908, -21.617, 0.37 ) }
    dend_71 { pt3dadd( 4.94005, 39.729, -21.8744, 0.29 ) }
    dend_71 { pt3dadd( 4.9246, 39.7996, -21.8928, 0.29 ) }
    dend_71 { pt3dadd( 4.78943, 40.6752, -22.0884, 0.29 ) }
    dend_71 { pt3dadd( 4.62614, 42.0982, -22.3543, 1.84 ) }
    dend_71 { pt3dadd( 4.58173, 42.6442, -22.435, 2.36 ) }
    dend_71 { pt3dadd( 4.51171, 43.8867, -22.573, 1.55 ) }
    dend_71 { pt3dadd( 4.43925, 45.3185, -22.6815, 1.92 ) }
    dend_71 { pt3dadd( 4.42481, 45.8773, -22.717, 2.5 ) }
    dend_71 { pt3dadd( 4.43868, 46.7704, -22.7706, 1.99 ) }
    dend_71 { pt3dadd( 4.50435, 48.0605, -22.8378, 0.22 ) }
    dend_71 { pt3dadd( 4.54748, 48.8929, -22.8936, 0.22 ) }
    dend_71 { pt3dadd( 4.57147, 49.4757, -22.937, 0.88 ) }
    dend_71 { pt3dadd( 4.57828, 49.967, -22.9824, 0.59 ) }
    dend_71 { pt3dadd( 4.56491, 50.8657, -23.0807, 0.29 ) }
    dend_71 { pt3dadd( 4.52275, 51.8646, -23.2027, 0.29 ) }
    dend_71 { pt3dadd( 4.45338, 53.0276, -23.3512, 0.29 ) }
    dend_71 { pt3dadd( 4.38652, 54.0481, -23.4875, 0.29 ) }
    dend_71 { pt3dadd( 4.31535, 55.1426, -23.6287, 1.18 ) }
    dend_71 { pt3dadd( 4.27884, 55.7987, -23.6987, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 4.259, 56.4587, -23.7537, 1.4 ) }
    dend_71 { pt3dadd( 4.27163, 57.1801, -23.8046, 0.88 ) }
    dend_71 { pt3dadd( 4.33517, 58.4472, -23.8842, 0.29 ) }
    dend_71 { pt3dadd( 4.40438, 59.5501, -23.9444, 0.29 ) }
    dend_71 { pt3dadd( 4.534, 61.3517, -24.0161, 2.14 ) }
    dend_71 { pt3dadd( 4.58543, 62.0822, -24.0448, 3.09 ) }
    dend_71 { pt3dadd( 4.63042, 62.7706, -24.0701, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.10015, 31.3134, -6.41034, 1.62 ) }
    dend_25 { pt3dadd( -8.49862, 33.1514, -6.80483, 1.62 ) }
    dend_25 { pt3dadd( -8.50527, 33.2182, -6.81464, 1.62 ) }
    dend_25 { pt3dadd( -8.59907, 34.1598, -6.95291, 1.62 ) }
    dend_25 { pt3dadd( -8.61919, 34.3618, -6.98258, 1.62 ) }
    dend_25 { pt3dadd( -8.71018, 35.2752, -7.11671, 1.62 ) }
    dend_25 { pt3dadd( -8.71613, 35.335, -7.12549, 1.62 ) }
    dend_25 { pt3dadd( -8.62881, 36.8066, -7.13652, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.10015, 31.3134, -6.41034, 0.66 ) }
    dend_22 { pt3dadd( -6.23789, 34.2689, -5.27649, 0.66 ) }
    dend_22 { pt3dadd( -5.56498, 35.2385, -5.16159, 0.59 ) }
    dend_22 { pt3dadd( -4.92148, 36.1239, -5.15412, 1.03 ) }
    dend_22 { pt3dadd( -4.80049, 36.2945, -5.16433, 1.03 ) }
    dend_22 { pt3dadd( -4.53319, 36.7046, -5.20481, 1.18 ) }
    dend_22 { pt3dadd( -3.60814, 38.3469, -5.42864, 0.81 ) }
    dend_22 { pt3dadd( -3.03455, 39.4651, -5.79053, 0.66 ) }
    dend_22 { pt3dadd( -2.99479, 39.5582, -5.82234, 0.66 ) }
    dend_22 { pt3dadd( -2.64012, 40.6289, -6.09868, 0.66 ) }
    dend_22 { pt3dadd( -2.32458, 41.8635, -6.31299, 0.88 ) }
    dend_22 { pt3dadd( -2.03589, 43.5515, -6.46762, 1.4 ) }
    dend_22 { pt3dadd( -1.99503, 43.9828, -6.47088, 1.77 ) }
    dend_22 { pt3dadd( -1.94856, 44.9298, -6.42806, 2.14 ) }
    dend_22 { pt3dadd( -1.88045, 46.7627, -6.14814, 1.77 ) }
    dend_22 { pt3dadd( -1.78722, 47.954, -5.75086, 1.25 ) }
    dend_22 { pt3dadd( -1.66665, 48.91, -5.27726, 1.03 ) }
    dend_22 { pt3dadd( -1.49071, 49.6955, -4.73288, 0.81 ) }
    dend_22 { pt3dadd( -1.18588, 50.6825, -3.90483, 0.81 ) }
    dend_22 { pt3dadd( -0.535987, 52.1454, -2.39398, 0.59 ) }
    dend_22 { pt3dadd( 0.3399, 53.5048, -0.692963, 0.59 ) }
    dend_22 { pt3dadd( 0.384815, 53.5587, -0.609303, 0.59 ) }
    dend_22 { pt3dadd( 1.0692, 54.185, 0.599115, 1.77 ) }
    dend_22 { pt3dadd( 1.10944, 54.2116, 0.665283, 1.77 ) }
    dend_22 { pt3dadd( 1.55576, 54.383, 1.29964, 1.92 ) }
    dend_22 { pt3dadd( 1.62034, 54.3886, 1.37046, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.48457, -12.488, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.04974, -13.2758, 0.522028, 0.37 ) }
    dend_14 { pt3dadd( -6.99503, -13.9502, 0.437434, 0.37 ) }
    dend_14 { pt3dadd( -8.16382, -15.1539, 0.742125, 0.37 ) }
    dend_14 { pt3dadd( -8.5714, -15.8499, 1.17535, 0.66 ) }
    dend_14 { pt3dadd( -8.76501, -16.2897, 1.53205, 0.96 ) }
    dend_14 { pt3dadd( -8.78969, -16.3427, 1.59009, 0.96 ) }
    dend_14 { pt3dadd( -9.26625, -17.835, 3.73328, 0.59 ) }
    dend_14 { pt3dadd( -9.27586, -17.8679, 3.79266, 0.59 ) }
    dend_14 { pt3dadd( -9.44694, -18.2397, 4.68691, 1.25 ) }
    dend_14 { pt3dadd( -9.52999, -18.3292, 4.94738, 1.25 ) }
    dend_14 { pt3dadd( -10.2292, -18.8135, 6.38775, 0.59 ) }
    dend_14 { pt3dadd( -10.5787, -19.0246, 6.90508, 0.96 ) }
    dend_14 { pt3dadd( -10.6394, -19.0567, 6.96729, 0.96 ) }
    dend_14 { pt3dadd( -11.1695, -19.4717, 7.61696, 0.96 ) }
    dend_14 { pt3dadd( -11.5667, -19.9522, 8.20985, 0.59 ) }
    dend_14 { pt3dadd( -11.8179, -20.5345, 8.79969, 0.29 ) }
    dend_14 { pt3dadd( -11.9243, -21.2521, 9.43341, 0.29 ) }
    dend_14 { pt3dadd( -11.9865, -21.8981, 10.0354, 1.11 ) }
    dend_14 { pt3dadd( -12.1114, -23.149, 11.2552, 0.22 ) }
    dend_14 { pt3dadd( -12.1479, -23.4565, 11.5654, 1.25 ) }
    dend_14 { pt3dadd( -12.2768, -23.942, 12.0915, 1.55 ) }
    dend_14 { pt3dadd( -12.3274, -24.0321, 12.1966, 1.55 ) }
    dend_14 { pt3dadd( -13.2474, -24.8179, 13.1947, 0.59 ) }
    dend_14 { pt3dadd( -13.5964, -25.041, 13.4548, 0.74 ) }
    dend_14 { pt3dadd( -14.1904, -25.3631, 13.7968, 0.74 ) }
    dend_14 { pt3dadd( -15.0247, -25.815, 14.2579, 0.59 ) }
    dend_14 { pt3dadd( -15.1463, -25.8974, 14.3296, 0.59 ) }
    dend_14 { pt3dadd( -15.8646, -26.7173, 14.8744, 0.59 ) }
    dend_14 { pt3dadd( -16.0325, -27.2626, 15.1882, 1.11 ) }
    dend_14 { pt3dadd( -16.0891, -27.6912, 15.4673, 1.18 ) }
    dend_14 { pt3dadd( -16.096, -27.7855, 15.5328, 1.18 ) }
    dend_14 { pt3dadd( -16.2154, -28.8084, 16.3218, 0.59 ) }
    dend_14 { pt3dadd( -16.4098, -29.6242, 17.02, 0.59 ) }
    dend_14 { pt3dadd( -16.8298, -30.4306, 17.8254, 0.44 ) }
    dend_14 { pt3dadd( -17.304, -30.8388, 18.3964, 0.74 ) }
    dend_14 { pt3dadd( -17.7848, -31.0297, 18.8018, 0.88 ) }
    dend_14 { pt3dadd( -18.8555, -31.2363, 19.5215, 0.44 ) }
    dend_14 { pt3dadd( -19.4497, -31.2675, 19.8223, 0.44 ) }
    dend_14 { pt3dadd( -20.1832, -31.275, 20.1189, 0.44 ) }
    dend_14 { pt3dadd( -20.25, -31.2777, 20.1375, 0.44 ) }
    dend_14 { pt3dadd( -21.1022, -31.3909, 20.3136, 0.88 ) }
    dend_14 { pt3dadd( -21.1932, -31.4124, 20.3312, 0.88 ) }
    dend_14 { pt3dadd( -22.2045, -31.7244, 20.4723, 1.18 ) }
    dend_14 { pt3dadd( -22.69, -31.9038, 20.5278, 1.11 ) }
    dend_14 { pt3dadd( -23.4423, -32.2036, 20.5896, 0.59 ) }
    dend_14 { pt3dadd( -24.1495, -32.5032, 20.6231, 0.44 ) }
    dend_14 { pt3dadd( -24.2123, -32.5313, 20.6232, 0.44 ) }
    dend_14 { pt3dadd( -25.1613, -33.0354, 20.6227, 0.66 ) }
    dend_14 { pt3dadd( -25.7909, -33.4768, 20.6261, 0.37 ) }
    dend_14 { pt3dadd( -26.164, -33.8527, 20.6387, 1.03 ) }
    dend_14 { pt3dadd( -26.355, -34.1762, 20.6558, 1.03 ) }
    dend_14 { pt3dadd( -26.3982, -34.3129, 20.6641, 1.03 ) }
    dend_14 { pt3dadd( -26.6708, -35.5593, 20.7471, 0.37 ) }
    dend_14 { pt3dadd( -26.728, -36.2848, 20.8071, 0.44 ) }
    dend_14 { pt3dadd( -26.7213, -36.8535, 20.8628, 0.74 ) }
    dend_14 { pt3dadd( -26.6864, -37.3197, 20.9146, 0.88 ) }
    dend_14 { pt3dadd( -26.6003, -38.1716, 21.0238, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.48457, -12.488, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -4.4903, -12.5116, 0.999304, 3.09 ) }
    dend_1 { pt3dadd( -4.65381, -13.188, 1.00928, 2.8 ) }
    dend_1 { pt3dadd( -4.87128, -14.0927, 1.02622, 2.43 ) }
    dend_1 { pt3dadd( -5.0465, -14.8216, 1.03987, 2.43 ) }
    dend_1 { pt3dadd( -5.05443, -14.8546, 1.04048, 2.43 ) }
    dend_1 { pt3dadd( -5.30527, -15.8981, 1.06002, 2.43 ) }
    dend_1 { pt3dadd( -5.4406, -16.4643, 1.07574, 2.87 ) }
    dend_1 { pt3dadd( -5.55225, -16.9271, 1.09878, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.63042, 62.7706, -24.0701, 0.29 ) }
    dend_73 { pt3dadd( 5.21164, 64.0223, -24.2986, 0.29 ) }
    dend_73 { pt3dadd( 5.48785, 64.4935, -24.417, 0.29 ) }
    dend_73 { pt3dadd( 5.78342, 64.9814, -24.5589, 0.37 ) }
    dend_73 { pt3dadd( 5.81173, 65.0277, -24.5734, 0.37 ) }
    dend_73 { pt3dadd( 6.01851, 65.3904, -24.6901, 0.37 ) }
    dend_73 { pt3dadd( 6.03771, 65.4256, -24.7018, 0.37 ) }
    dend_73 { pt3dadd( 6.29014, 65.9642, -24.9326, 0.22 ) }
    dend_73 { pt3dadd( 6.41907, 66.2717, -25.0934, 0.44 ) }
    dend_73 { pt3dadd( 6.42903, 66.3135, -25.1201, 0.44 ) }
    dend_73 { pt3dadd( 6.48639, 66.662, -25.3473, 0.66 ) }
    dend_73 { pt3dadd( 6.49244, 66.6974, -25.3683, 0.66 ) }
    dend_73 { pt3dadd( 6.59354, 67.1242, -25.6217, 0.96 ) }
    dend_73 { pt3dadd( 6.60875, 67.1711, -25.6633, 0.96 ) }
    dend_73 { pt3dadd( 6.82179, 67.7728, -26.2546, 0.22 ) }
    dend_73 { pt3dadd( 6.83567, 67.8123, -26.2946, 0.22 ) }
    dend_73 { pt3dadd( 7.03871, 68.3737, -26.8555, 1.92 ) }
    dend_73 { pt3dadd( 7.25428, 68.8953, -27.3718, 2.36 ) }
    dend_73 { pt3dadd( 8.02106, 70.5516, -28.9927, 0.44 ) }
    dend_73 { pt3dadd( 8.14175, 70.7993, -29.2313, 0.44 ) }
    dend_73 { pt3dadd( 8.23123, 70.9746, -29.3959, 0.44 ) }
    dend_73 { pt3dadd( 8.4211, 71.3571, -29.7332, 0.22 ) }
    dend_73 { pt3dadd( 8.65577, 71.8486, -30.1278, 0.22 ) }
    dend_73 { pt3dadd( 8.92643, 72.4037, -30.5035, 0.74 ) }
    dend_73 { pt3dadd( 8.95102, 72.4487, -30.5298, 0.74 ) }
    dend_73 { pt3dadd( 9.02461, 72.5783, -30.6175, 0.74 ) }
    dend_73 { pt3dadd( 9.40814, 73.2427, -31.1303, 0.22 ) }
    dend_73 { pt3dadd( 9.71423, 73.8165, -31.605, 1.33 ) }
    dend_73 { pt3dadd( 9.94981, 74.3092, -32.0149, 1.77 ) }
    dend_73 { pt3dadd( 10.3725, 75.2533, -32.7958, 0.22 ) }
    dend_73 { pt3dadd( 10.5507, 75.6539, -33.117, 0.22 ) }
    dend_73 { pt3dadd( 10.7898, 76.1907, -33.5294, 0.22 ) }
    dend_73 { pt3dadd( 11.0648, 76.7981, -33.9759, 1.92 ) }
    dend_73 { pt3dadd( 11.1706, 77.04, -34.1389, 2.28 ) }
    dend_73 { pt3dadd( 11.8235, 78.5132, -35.0053, 0.22 ) }
    dend_73 { pt3dadd( 12.0789, 79.0656, -35.2894, 0.22 ) }
    dend_73 { pt3dadd( 12.2648, 79.432, -35.4617, 0.88 ) }
    dend_73 { pt3dadd( 12.3153, 79.5193, -35.4965, 0.88 ) }
    dend_73 { pt3dadd( 12.3745, 79.6052, -35.5263, 0.88 ) }
    dend_73 { pt3dadd( 13.0049, 80.4036, -35.7936, 0.22 ) }
    dend_73 { pt3dadd( 13.4579, 80.9149, -35.9618, 0.22 ) }
    dend_73 { pt3dadd( 13.5146, 80.982, -35.9867, 0.22 ) }
    dend_73 { pt3dadd( 13.9933, 81.5616, -36.2161, 1.33 ) }
    dend_73 { pt3dadd( 14.1877, 81.807, -36.3138, 2.06 ) }
    dend_73 { pt3dadd( 14.4887, 82.2036, -36.4867, 2.06 ) }
    dend_73 { pt3dadd( 15.1952, 83.1927, -36.9367, 0.15 ) }
    dend_73 { pt3dadd( 15.3826, 83.4601, -37.063, 0.74 ) }
    dend_73 { pt3dadd( 15.4093, 83.498, -37.0804, 0.74 ) }
    dend_73 { pt3dadd( 15.5414, 83.6939, -37.1699, 0.74 ) }
    dend_73 { pt3dadd( 15.961, 84.3321, -37.4361, 0.22 ) }
    dend_73 { pt3dadd( 16.1811, 84.6705, -37.5556, 0.59 ) }
    dend_73 { pt3dadd( 16.2072, 84.7104, -37.5682, 0.59 ) }
    dend_73 { pt3dadd( 16.6692, 85.3857, -37.8347, 0.15 ) }
    dend_73 { pt3dadd( 17.0368, 85.9461, -38.0709, 1.55 ) }
    dend_73 { pt3dadd( 17.1291, 86.0924, -38.135, 1.92 ) }
    dend_73 { pt3dadd( 17.1544, 86.1331, -38.1517, 1.92 ) }
    dend_73 { pt3dadd( 17.2764, 86.3456, -38.2437, 1.92 ) }
    dend_73 { pt3dadd( 17.9167, 87.4969, -38.736, 0.22 ) }
    dend_73 { pt3dadd( 18.093, 87.7734, -38.8582, 0.52 ) }
    dend_73 { pt3dadd( 18.1201, 87.8114, -38.8748, 0.52 ) }
    dend_73 { pt3dadd( 18.5382, 88.3016, -39.0794, 0.22 ) }
    dend_73 { pt3dadd( 18.9078, 88.6945, -39.2546, 1.55 ) }
    dend_73 { pt3dadd( 19.1887, 88.9157, -39.3712, 1.55 ) }
    dend_73 { pt3dadd( 20.2196, 89.596, -39.7551, 0.15 ) }
    dend_73 { pt3dadd( 20.256, 89.6184, -39.7692, 0.15 ) }
    dend_73 { pt3dadd( 20.9786, 90.039, -40.0528, 0.15 ) }
    dend_73 { pt3dadd( 22.0551, 90.6216, -40.476, 2.21 ) }
    dend_73 { pt3dadd( 23.6599, 91.4405, -41.0757, 0.22 ) }
    dend_73 { pt3dadd( 23.8392, 91.5324, -41.142, 0.37 ) }
    dend_73 { pt3dadd( 24.5716, 91.9296, -41.3919, 0.22 ) }
    dend_73 { pt3dadd( 24.8314, 92.0815, -41.4738, 0.59 ) }
    dend_73 { pt3dadd( 25.0043, 92.1918, -41.5222, 0.59 ) }
    dend_73 { pt3dadd( 25.5817, 92.6008, -41.6645, 0.22 ) }
    dend_73 { pt3dadd( 25.8009, 92.7872, -41.7318, 0.66 ) }
    dend_73 { pt3dadd( 26.4084, 93.2926, -41.9452, 0.15 ) }
    dend_73 { pt3dadd( 26.8493, 93.6643, -42.114, 1.77 ) }
    dend_73 { pt3dadd( 26.9585, 93.7573, -42.1623, 1.77 ) }
    dend_73 { pt3dadd( 27.9914, 94.6095, -42.6551, 0.22 ) }
    dend_73 { pt3dadd( 28.3989, 94.9004, -42.9064, 0.74 ) }
    dend_73 { pt3dadd( 28.8505, 95.1804, -43.2319, 0.15 ) }
    dend_73 { pt3dadd( 29.1203, 95.3298, -43.4611, 0.74 ) }
    dend_73 { pt3dadd( 29.5655, 95.5798, -43.8732, 0.15 ) }
    dend_73 { pt3dadd( 29.9691, 95.8162, -44.2649, 2.14 ) }
    dend_73 { pt3dadd( 31.2525, 96.6533, -45.6179, 0.37 ) }
    dend_73 { pt3dadd( 31.7688, 97.0595, -46.2058, 1.55 ) }
    dend_73 { pt3dadd( 32.7138, 97.9169, -47.3585, 0.15 ) }
    dend_73 { pt3dadd( 33.1119, 98.3417, -47.8817, 0.15 ) }
    dend_73 { pt3dadd( 33.2981, 98.5744, -48.1462, 1.4 ) }
    dend_73 { pt3dadd( 33.8897, 99.4185, -49.0943, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 34.1837, 99.8512, -49.5877, 1.33 ) }
    dend_73 { pt3dadd( 34.2369, 99.9152, -49.6699, 1.62 ) }
    dend_73 { pt3dadd( 35.042, 100.62, -50.7165, 0.15 ) }
    dend_73 { pt3dadd( 35.5918, 100.984, -51.3543, 1.18 ) }
    dend_73 { pt3dadd( 36.5422, 101.486, -52.3536, 0.88 ) }
    dend_73 { pt3dadd( 37.4427, 101.858, -53.1813, 0.44 ) }
    dend_73 { pt3dadd( 38.2803, 102.163, -53.8702, 1.77 ) }
    dend_73 { pt3dadd( 39.163, 102.464, -54.483, 0.22 ) }
    dend_73 { pt3dadd( 39.2138, 102.48, -54.5092, 0.22 ) }
    dend_73 { pt3dadd( 39.5324, 102.587, -54.617, 0.66 ) }
    dend_73 { pt3dadd( 40.2259, 102.867, -54.7156, 0.15 ) }
    dend_73 { pt3dadd( 40.6997, 103.13, -54.7204, 1.11 ) }
    dend_73 { pt3dadd( 40.9838, 103.343, -54.714, 1.11 ) }
    dend_73 { pt3dadd( 41.0268, 103.38, -54.7124, 1.11 ) }
    dend_73 { pt3dadd( 41.5103, 103.808, -54.6993, 0.22 ) }
    dend_73 { pt3dadd( 41.7344, 104.0, -54.6971, 0.59 ) }
    dend_73 { pt3dadd( 42.3072, 104.484, -54.6984, 0.22 ) }
    dend_73 { pt3dadd( 42.8095, 104.899, -54.7154, 1.4 ) }
    dend_73 { pt3dadd( 42.8537, 104.935, -54.7169, 1.4 ) }
    dend_73 { pt3dadd( 42.9274, 104.994, -54.7188, 1.55 ) }
    dend_73 { pt3dadd( 43.8708, 105.711, -54.7331, 0.22 ) }
    dend_73 { pt3dadd( 43.9116, 105.741, -54.7345, 0.22 ) }
    dend_73 { pt3dadd( 44.0686, 105.849, -54.7413, 0.22 ) }
    dend_73 { pt3dadd( 44.4026, 106.068, -54.7717, 0.81 ) }
    dend_73 { pt3dadd( 44.4443, 106.095, -54.7771, 0.81 ) }
    dend_73 { pt3dadd( 44.6496, 106.241, -54.8174, 0.81 ) }
    dend_73 { pt3dadd( 45.6327, 106.955, -55.0491, 0.22 ) }
    dend_73 { pt3dadd( 45.97, 107.196, -55.1317, 0.22 ) }
    dend_73 { pt3dadd( 46.7127, 107.717, -55.3176, 1.55 ) }
    dend_73 { pt3dadd( 46.7521, 107.746, -55.3293, 1.55 ) }
    dend_73 { pt3dadd( 47.7243, 108.475, -55.6403, 0.22 ) }
    dend_73 { pt3dadd( 48.095, 108.756, -55.768, 0.22 ) }
    dend_73 { pt3dadd( 48.7427, 109.251, -55.9975, 1.62 ) }
    dend_73 { pt3dadd( 48.8655, 109.345, -56.0389, 1.99 ) }
    dend_73 { pt3dadd( 50.1318, 110.331, -56.4412, 0.22 ) }
    dend_73 { pt3dadd( 50.1759, 110.365, -56.4549, 0.22 ) }
    dend_73 { pt3dadd( 50.6523, 110.73, -56.5982, 0.74 ) }
    dend_73 { pt3dadd( 50.9415, 110.956, -56.6875, 0.74 ) }
    dend_73 { pt3dadd( 52.3763, 112.075, -57.1178, 0.15 ) }
    dend_73 { pt3dadd( 52.908, 112.483, -57.2653, 1.55 ) }
    dend_73 { pt3dadd( 52.9493, 112.513, -57.2741, 1.55 ) }
    dend_73 { pt3dadd( 53.1833, 112.686, -57.3242, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 4.63042, 62.7706, -24.0701, 0.29 ) }
    dend_72 { pt3dadd( 4.04474, 64.8109, -24.3819, 0.29 ) }
    dend_72 { pt3dadd( 3.91122, 65.3032, -24.46, 0.44 ) }
    dend_72 { pt3dadd( 3.63423, 66.3034, -24.6092, 0.22 ) }
    dend_72 { pt3dadd( 3.26996, 67.6259, -24.7995, 1.55 ) }
    dend_72 { pt3dadd( 3.15403, 68.0545, -24.8567, 2.21 ) }
    dend_72 { pt3dadd( 2.98648, 68.68, -24.9341, 1.84 ) }
    dend_72 { pt3dadd( 2.80353, 69.4746, -25.0225, 0.96 ) }
    dend_72 { pt3dadd( 2.68321, 69.988, -25.0639, 0.44 ) }
    dend_72 { pt3dadd( 2.66372, 70.0656, -25.0667, 0.44 ) }
    dend_72 { pt3dadd( 2.43099, 71.07, -25.0937, 0.29 ) }
    dend_72 { pt3dadd( 2.4056, 71.213, -25.0967, 0.29 ) }
    dend_72 { pt3dadd( 2.31071, 71.9444, -25.112, 0.29 ) }
    dend_72 { pt3dadd( 2.23551, 72.6681, -25.1283, 0.81 ) }
    dend_72 { pt3dadd( 2.20598, 73.0283, -25.1519, 1.11 ) }
    dend_72 { pt3dadd( 2.13893, 73.7553, -25.2327, 0.88 ) }
    dend_72 { pt3dadd( 2.0203, 75.2409, -25.4403, 0.22 ) }
    dend_72 { pt3dadd( 1.96946, 75.9668, -25.5656, 0.81 ) }
    dend_72 { pt3dadd( 1.93454, 76.5423, -25.6845, 0.81 ) }
    dend_72 { pt3dadd( 1.82852, 78.2669, -26.0754, 0.22 ) }
    dend_72 { pt3dadd( 1.74073, 79.5322, -26.3808, 1.84 ) }
    dend_72 { pt3dadd( 1.68463, 80.1923, -26.5492, 2.21 ) }
    dend_72 { pt3dadd( 1.62412, 80.7672, -26.7013, 2.21 ) }
    dend_72 { pt3dadd( 1.40911, 82.9713, -27.2446, 0.22 ) }
    dend_72 { pt3dadd( 1.34499, 83.7399, -27.4161, 0.81 ) }
    dend_72 { pt3dadd( 1.3192, 84.1039, -27.484, 0.88 ) }
    dend_72 { pt3dadd( 1.29258, 84.4728, -27.5423, 0.66 ) }
    dend_72 { pt3dadd( 1.19112, 85.568, -27.6959, 0.22 ) }
    dend_72 { pt3dadd( 1.036, 87.0973, -27.8723, 1.84 ) }
    dend_72 { pt3dadd( 0.998227, 87.5655, -27.9166, 2.21 ) }
    dend_72 { pt3dadd( 0.970813, 88.0347, -27.9562, 2.21 ) }
    dend_72 { pt3dadd( 0.890196, 90.0705, -28.109, 0.22 ) }
    dend_72 { pt3dadd( 0.872694, 90.7964, -28.1615, 0.88 ) }
    dend_72 { pt3dadd( 0.868725, 91.0178, -28.1765, 0.88 ) }
    dend_72 { pt3dadd( 0.844899, 92.5174, -28.2804, 0.22 ) }
    dend_72 { pt3dadd( 0.83555, 93.8419, -28.4098, 0.22 ) }
    dend_72 { pt3dadd( 0.844678, 94.5383, -28.4909, 1.33 ) }
    dend_72 { pt3dadd( 0.869732, 95.0879, -28.5639, 1.62 ) }
    dend_72 { pt3dadd( 0.879563, 95.2998, -28.5955, 1.62 ) }
    dend_72 { pt3dadd( 0.880051, 95.4188, -28.6192, 1.62 ) }
    dend_72 { pt3dadd( 0.797904, 97.3505, -29.0691, 0.22 ) }
    dend_72 { pt3dadd( 0.706671, 98.7658, -29.4242, 0.22 ) }
    dend_72 { pt3dadd( 0.624019, 99.7376, -29.6721, 1.4 ) }
    dend_72 { pt3dadd( 0.578717, 100.247, -29.7986, 1.69 ) }
    dend_72 { pt3dadd( 0.378517, 102.406, -30.3271, 0.22 ) }
    dend_72 { pt3dadd( 0.299426, 103.134, -30.4843, 0.96 ) }
    dend_72 { pt3dadd( 0.289955, 103.203, -30.4955, 0.96 ) }
    dend_72 { pt3dadd( 0.239358, 103.5, -30.5359, 0.81 ) }
    dend_72 { pt3dadd( -0.0242537, 104.876, -30.6581, 0.22 ) }
    dend_72 { pt3dadd( -0.0544928, 105.04, -30.6644, 0.22 ) }
    dend_72 { pt3dadd( -0.214059, 106.0, -30.6653, 0.22 ) }
    dend_72 { pt3dadd( -0.402329, 107.139, -30.6795, 1.69 ) }
    dend_72 { pt3dadd( -0.463256, 107.512, -30.6879, 2.43 ) }
    dend_72 { pt3dadd( -0.592877, 108.299, -30.7119, 2.36 ) }
    dend_72 { pt3dadd( -0.98437, 110.834, -30.8048, 0.22 ) }
    dend_72 { pt3dadd( -1.10077, 111.806, -30.868, 0.22 ) }
    dend_72 { pt3dadd( -1.11373, 111.957, -30.8825, 0.22 ) }
    dend_72 { pt3dadd( -1.18645, 113.199, -31.0181, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( -1.22193, 114.14, -31.132, 1.11 ) }
    dend_72 { pt3dadd( -1.22437, 114.707, -31.2074, 1.4 ) }
    dend_72 { pt3dadd( -1.17303, 116.325, -31.4438, 0.22 ) }
    dend_72 { pt3dadd( -1.1701, 116.387, -31.4529, 0.22 ) }
    dend_72 { pt3dadd( -1.14057, 116.817, -31.5052, 0.22 ) }
    dend_72 { pt3dadd( -1.07724, 117.716, -31.5864, 1.55 ) }
    dend_72 { pt3dadd( -1.05293, 118.179, -31.6121, 1.77 ) }
    dend_72 { pt3dadd( -1.04969, 118.249, -31.6137, 1.77 ) }
    dend_72 { pt3dadd( -1.03266, 118.566, -31.6108, 1.77 ) }
    dend_72 { pt3dadd( -0.95071, 119.932, -31.6, 0.22 ) }
    dend_72 { pt3dadd( -0.909136, 120.873, -31.5935, 0.66 ) }
    dend_72 { pt3dadd( -0.899341, 121.38, -31.5901, 0.66 ) }
    dend_72 { pt3dadd( -0.915742, 123.045, -31.5925, 0.22 ) }
    dend_72 { pt3dadd( -0.921463, 123.197, -31.5928, 0.22 ) }
    dend_72 { pt3dadd( -1.01868, 124.796, -31.5906, 0.22 ) }
    dend_72 { pt3dadd( -1.1286, 125.886, -31.5701, 1.11 ) }
    dend_72 { pt3dadd( -1.21821, 126.537, -31.5391, 1.99 ) }
    dend_72 { pt3dadd( -1.32421, 127.092, -31.498, 1.55 ) }
    dend_72 { pt3dadd( -1.67578, 128.449, -31.3519, 0.22 ) }
    dend_72 { pt3dadd( -1.72796, 128.63, -31.3294, 0.22 ) }
    dend_72 { pt3dadd( -2.09886, 129.73, -31.1595, 0.22 ) }
    dend_72 { pt3dadd( -2.30089, 130.363, -31.0446, 0.88 ) }
    dend_72 { pt3dadd( -2.36066, 130.561, -31.0082, 1.18 ) }
    dend_72 { pt3dadd( -2.37707, 130.627, -30.9907, 1.18 ) }
    dend_72 { pt3dadd( -2.48624, 131.254, -30.8113, 0.66 ) }
    dend_72 { pt3dadd( -2.53706, 131.606, -30.713, 0.37 ) }
    dend_72 { pt3dadd( -2.68175, 132.526, -30.4706, 0.22 ) }
    dend_72 { pt3dadd( -2.81265, 133.203, -30.2972, 0.59 ) }
    dend_72 { pt3dadd( -3.06436, 134.412, -30.0842, 0.52 ) }
    dend_72 { pt3dadd( -3.21373, 135.086, -29.9944, 0.66 ) }
    dend_72 { pt3dadd( -3.32688, 135.598, -29.942, 0.22 ) }
    dend_72 { pt3dadd( -3.50444, 136.377, -29.8902, 1.47 ) }
    dend_72 { pt3dadd( -3.59123, 136.75, -29.8836, 2.14 ) }
    dend_72 { pt3dadd( -4.09534, 139.014, -29.9185, 0.22 ) }
    dend_72 { pt3dadd( -4.108, 139.076, -29.922, 0.22 ) }
    dend_72 { pt3dadd( -4.21786, 139.788, -29.947, 1.11 ) }
    dend_72 { pt3dadd( -4.2311, 139.939, -29.9523, 1.47 ) }
    dend_72 { pt3dadd( -4.23578, 140.046, -29.9556, 1.47 ) }
    dend_72 { pt3dadd( -4.26405, 140.705, -29.9842, 0.81 ) }
    dend_72 { pt3dadd( -4.29255, 141.25, -30.0236, 0.29 ) }
    dend_72 { pt3dadd( -4.37725, 142.864, -30.1765, 0.22 ) }
    dend_72 { pt3dadd( -4.42212, 143.61, -30.2634, 0.96 ) }
    dend_72 { pt3dadd( -4.42977, 143.751, -30.2805, 0.96 ) }
    dend_72 { pt3dadd( -4.43722, 143.901, -30.297, 0.96 ) }
    dend_72 { pt3dadd( -4.47515, 145.07, -30.4064, 0.22 ) }
    dend_72 { pt3dadd( -4.47601, 145.14, -30.4114, 0.22 ) }
    dend_72 { pt3dadd( -4.46707, 145.857, -30.4464, 0.81 ) }
    dend_72 { pt3dadd( -4.4617, 146.221, -30.4604, 0.81 ) }
    dend_72 { pt3dadd( -4.44676, 147.919, -30.5037, 0.15 ) }
    dend_72 { pt3dadd( -4.45697, 149.07, -30.5402, 1.18 ) }
    dend_72 { pt3dadd( -4.46409, 149.391, -30.5506, 1.47 ) }
    dend_72 { pt3dadd( -4.46464, 149.451, -30.5569, 1.47 ) }
    dend_72 { pt3dadd( -4.4621, 149.741, -30.6112, 1.47 ) }
    dend_72 { pt3dadd( -4.44329, 151.315, -31.0073, 0.22 ) }
    dend_72 { pt3dadd( -4.41994, 152.196, -31.2866, 1.11 ) }
    dend_72 { pt3dadd( -4.40766, 152.568, -31.4194, 1.47 ) }
    dend_72 { pt3dadd( -4.29297, 154.615, -32.2602, 0.15 ) }
    dend_72 { pt3dadd( -4.23028, 155.414, -32.618, 0.81 ) }
    dend_72 { pt3dadd( -4.22349, 155.477, -32.6488, 0.81 ) }
    dend_72 { pt3dadd( -4.17271, 155.842, -32.8419, 0.81 ) }
    dend_72 { pt3dadd( -4.16449, 155.896, -32.8684, 0.81 ) }
    dend_72 { pt3dadd( -4.02849, 157.164, -33.4365, 0.22 ) }
    dend_72 { pt3dadd( -4.00559, 157.587, -33.5892, 0.37 ) }
    dend_72 { pt3dadd( -3.99061, 158.239, -33.8, 0.22 ) }
    dend_72 { pt3dadd( -3.99237, 159.044, -34.0401, 1.18 ) }
    dend_72 { pt3dadd( -4.00685, 159.524, -34.1729, 1.47 ) }
    dend_72 { pt3dadd( -4.09556, 161.343, -34.6407, 0.22 ) }
    dend_72 { pt3dadd( -4.15056, 162.147, -34.8214, 1.03 ) }
    dend_72 { pt3dadd( -4.17065, 162.424, -34.8835, 1.03 ) }
    dend_72 { pt3dadd( -4.28495, 164.202, -35.2994, 0.22 ) }
    dend_72 { pt3dadd( -4.32145, 164.844, -35.4478, 0.22 ) }
    dend_72 { pt3dadd( -4.32463, 164.912, -35.4632, 0.22 ) }
    dend_72 { pt3dadd( -4.34432, 165.727, -35.6043, 0.81 ) }
    dend_72 { pt3dadd( -4.34982, 166.23, -35.6766, 0.81 ) }
    dend_72 { pt3dadd( -4.3707, 167.725, -35.8424, 0.22 ) }
    dend_72 { pt3dadd( -4.39597, 168.748, -35.8834, 1.11 ) }
    dend_72 { pt3dadd( -4.40417, 168.968, -35.8831, 1.11 ) }
    dend_72 { pt3dadd( -4.50814, 170.809, -35.7938, 0.22 ) }
    dend_72 { pt3dadd( -4.56884, 171.62, -35.7231, 0.59 ) }
    dend_72 { pt3dadd( -4.6927, 172.929, -35.563, 0.22 ) }
    dend_72 { pt3dadd( -4.82827, 174.037, -35.3831, 1.18 ) }
    dend_72 { pt3dadd( -4.88393, 174.464, -35.31, 1.62 ) }
    dend_72 { pt3dadd( -5.11872, 176.082, -35.0082, 0.22 ) }
    dend_72 { pt3dadd( -5.20507, 176.582, -34.9083, 0.22 ) }
    dend_72 { pt3dadd( -5.30961, 177.138, -34.7886, 0.59 ) }
    dend_72 { pt3dadd( -5.36404, 177.419, -34.7263, 0.59 ) }
    dend_72 { pt3dadd( -5.37992, 177.498, -34.711, 0.59 ) }
    dend_72 { pt3dadd( -5.56523, 178.379, -34.5255, 0.22 ) }
    dend_72 { pt3dadd( -5.66648, 178.861, -34.4053, 0.52 ) }
    dend_72 { pt3dadd( -5.69275, 179.006, -34.365, 0.52 ) }
    dend_72 { pt3dadd( -5.70237, 179.073, -34.3448, 0.52 ) }
    dend_72 { pt3dadd( -5.79479, 180.269, -34.0457, 0.22 ) }
    dend_72 { pt3dadd( -5.82897, 181.191, -33.8564, 1.11 ) }
    dend_72 { pt3dadd( -5.80939, 181.629, -33.7938, 1.47 ) }
    dend_72 { pt3dadd( -5.7953, 181.769, -33.775, 1.47 ) }
    dend_72 { pt3dadd( -5.73077, 182.261, -33.7168, 1.47 ) }
    dend_72 { pt3dadd( -5.48137, 183.795, -33.5599, 0.22 ) }
    dend_72 { pt3dadd( -5.46959, 183.853, -33.5558, 0.22 ) }
    dend_72 { pt3dadd( -5.24284, 184.997, -33.4917, 0.22 ) }
    dend_72 { pt3dadd( -5.07068, 185.973, -33.4515, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( -5.00088, 186.42, -33.4248, 1.55 ) }
    dend_72 { pt3dadd( -4.93774, 186.854, -33.3934, 1.55 ) }
    dend_72 { pt3dadd( -4.70732, 188.361, -33.2564, 0.22 ) }
    dend_72 { pt3dadd( -4.6194, 188.929, -33.1994, 0.74 ) }
    dend_72 { pt3dadd( -4.58723, 189.15, -33.1725, 0.74 ) }
    dend_72 { pt3dadd( -4.30002, 191.053, -32.9194, 0.22 ) }
    dend_72 { pt3dadd( -4.21586, 191.6, -32.8382, 0.74 ) }
    dend_72 { pt3dadd( -3.977, 193.229, -32.5113, 0.22 ) }
    dend_72 { pt3dadd( -3.95136, 193.402, -32.4681, 0.22 ) }
    dend_72 { pt3dadd( -3.80322, 194.35, -32.2163, 0.74 ) }
    dend_72 { pt3dadd( -3.78667, 194.461, -32.1847, 0.74 ) }
    dend_72 { pt3dadd( -3.70677, 195.048, -32.007, 1.03 ) }
    dend_72 { pt3dadd( -3.45265, 197.05, -31.4098, 0.15 ) }
    dend_72 { pt3dadd( -3.44531, 197.12, -31.3906, 0.15 ) }
    dend_72 { pt3dadd( -3.31673, 198.347, -31.1035, 0.15 ) }
    dend_72 { pt3dadd( -3.25364, 198.945, -30.9841, 1.03 ) }
    dend_72 { pt3dadd( -3.22074, 199.271, -30.9363, 1.03 ) }
    dend_72 { pt3dadd( -3.14654, 200.246, -30.8561, 0.15 ) }
    dend_72 { pt3dadd( -3.10624, 201.039, -30.8605, 1.11 ) }
    dend_72 { pt3dadd( -3.09773, 201.426, -30.8701, 1.4 ) }
    dend_72 { pt3dadd( -3.09878, 201.487, -30.8732, 1.4 ) }
    dend_72 { pt3dadd( -3.16588, 202.915, -30.9936, 0.22 ) }
    dend_72 { pt3dadd( -3.23298, 203.652, -31.0611, 0.59 ) }
    dend_72 { pt3dadd( -3.24147, 203.714, -31.0672, 0.59 ) }
    dend_72 { pt3dadd( -3.28022, 203.93, -31.086, 0.59 ) }
    dend_72 { pt3dadd( -3.45472, 204.803, -31.1626, 0.22 ) }
    dend_72 { pt3dadd( -3.59106, 205.436, -31.2188, 1.18 ) }
    dend_72 { pt3dadd( -3.75138, 206.07, -31.2782, 1.84 ) }
    dend_72 { pt3dadd( -3.84957, 206.43, -31.317, 1.47 ) }
    dend_72 { pt3dadd( -4.41583, 208.226, -31.5275, 0.22 ) }
    dend_72 { pt3dadd( -4.6577, 208.902, -31.6145, 0.22 ) }
    dend_72 { pt3dadd( -4.68092, 208.956, -31.6223, 0.22 ) }
    dend_72 { pt3dadd( -4.99369, 209.589, -31.7386, 0.81 ) }
    dend_72 { pt3dadd( -5.23674, 210.054, -31.8377, 1.62 ) }
    dend_72 { pt3dadd( -5.54389, 210.612, -31.9684, 2.28 ) }
    dend_72 { pt3dadd( -5.6596, 210.821, -32.0202, 2.5 ) }
    dend_72 { pt3dadd( -5.98378, 211.45, -32.1638, 2.14 ) }
    dend_72 { pt3dadd( -6.79745, 213.191, -32.5393, 0.22 ) }
    dend_72 { pt3dadd( -7.03941, 213.782, -32.6615, 0.59 ) }
    dend_72 { pt3dadd( -7.06467, 213.859, -32.6756, 0.59 ) }
    dend_72 { pt3dadd( -7.26323, 214.614, -32.7944, 0.22 ) }
    dend_72 { pt3dadd( -7.38264, 215.186, -32.8591, 0.81 ) }
    dend_72 { pt3dadd( -7.39763, 215.278, -32.8657, 0.81 ) }
    dend_72 { pt3dadd( -7.4503, 215.643, -32.8724, 0.81 ) }
    dend_72 { pt3dadd( -7.63978, 216.763, -32.8816, 0.22 ) }
    dend_72 { pt3dadd( -7.75392, 217.409, -32.8847, 0.44 ) }
    dend_72 { pt3dadd( -8.05136, 218.969, -32.8828, 0.15 ) }
    dend_72 { pt3dadd( -8.16036, 219.545, -32.8774, 0.15 ) }
    dend_72 { pt3dadd( -8.25453, 220.017, -32.8711, 0.59 ) }
    dend_72 { pt3dadd( -8.31722, 220.312, -32.8645, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.62881, 36.8066, -7.13652, 1.55 ) }
    dend_27 { pt3dadd( -8.18269, 38.252, -8.37961, 1.55 ) }
    dend_27 { pt3dadd( -8.16102, 38.3229, -8.43306, 1.55 ) }
    dend_27 { pt3dadd( -7.87123, 39.2748, -9.02503, 1.47 ) }
    dend_27 { pt3dadd( -7.85756, 39.3203, -9.04806, 1.47 ) }
    dend_27 { pt3dadd( -7.66678, 39.9572, -9.33419, 1.25 ) }
    dend_27 { pt3dadd( -7.36223, 41.0093, -9.72931, 1.25 ) }
    dend_27 { pt3dadd( -7.32962, 41.1338, -9.7527, 1.25 ) }
    dend_27 { pt3dadd( -7.12027, 41.9088, -9.858, 0.81 ) }
    dend_27 { pt3dadd( -6.8903, 42.7838, -9.92672, 1.18 ) }
    dend_27 { pt3dadd( -6.86943, 42.8683, -9.93155, 1.18 ) }
    dend_27 { pt3dadd( -6.64028, 43.8899, -9.96996, 1.84 ) }
    dend_27 { pt3dadd( -6.49222, 44.6595, -9.98806, 2.14 ) }
    dend_27 { pt3dadd( -6.36425, 45.4335, -10.0094, 2.14 ) }
    dend_27 { pt3dadd( -6.25944, 46.3213, -10.0496, 2.14 ) }
    dend_27 { pt3dadd( -6.25706, 46.3658, -10.0521, 2.14 ) }
    dend_27 { pt3dadd( -6.25908, 46.8833, -10.0935, 1.77 ) }
    dend_27 { pt3dadd( -6.31822, 47.842, -10.1932, 1.77 ) }
    dend_27 { pt3dadd( -6.4106, 48.4951, -10.271, 1.47 ) }
    dend_27 { pt3dadd( -6.60027, 49.3167, -10.3717, 1.25 ) }
    dend_27 { pt3dadd( -6.86393, 50.1542, -10.4947, 1.62 ) }
    dend_27 { pt3dadd( -7.09398, 50.7572, -10.596, 1.84 ) }
    dend_27 { pt3dadd( -7.11625, 50.8063, -10.6055, 1.84 ) }
    dend_27 { pt3dadd( -7.49561, 51.5116, -10.7796, 1.99 ) }
    dend_27 { pt3dadd( -7.93096, 52.2998, -10.9904, 1.69 ) }
    dend_27 { pt3dadd( -8.30728, 53.0477, -11.185, 1.47 ) }
    dend_27 { pt3dadd( -8.50988, 53.5874, -11.3455, 1.33 ) }
    dend_27 { pt3dadd( -8.52061, 53.6291, -11.3586, 1.33 ) }
    dend_27 { pt3dadd( -8.59417, 54.3708, -11.6055, 1.11 ) }
    dend_27 { pt3dadd( -8.51401, 55.137, -11.887, 0.88 ) }
    dend_27 { pt3dadd( -8.3181, 55.7652, -12.1249, 0.96 ) }
    dend_27 { pt3dadd( -7.91312, 56.712, -12.4503, 0.81 ) }
    dend_27 { pt3dadd( -7.88154, 56.7839, -12.4721, 0.81 ) }
    dend_27 { pt3dadd( -7.70212, 57.2336, -12.5928, 0.66 ) }
    dend_27 { pt3dadd( -7.65803, 57.3581, -12.6219, 0.66 ) }
    dend_27 { pt3dadd( -7.55116, 58.0847, -12.7742, 0.66 ) }
    dend_27 { pt3dadd( -7.59116, 58.6758, -12.868, 0.96 ) }
    dend_27 { pt3dadd( -7.7569, 59.3135, -12.9347, 1.69 ) }
    dend_27 { pt3dadd( -7.85745, 59.6022, -12.9646, 1.99 ) }
    dend_27 { pt3dadd( -7.98882, 59.8963, -13.0015, 1.99 ) }
    dend_27 { pt3dadd( -8.31502, 60.5536, -13.0967, 1.84 ) }
    dend_27 { pt3dadd( -8.34072, 60.5997, -13.1043, 1.84 ) }
    dend_27 { pt3dadd( -8.79328, 61.3955, -13.2594, 2.06 ) }
    dend_27 { pt3dadd( -8.9459, 61.6807, -13.3185, 2.21 ) }
    dend_27 { pt3dadd( -9.18969, 62.1867, -13.419, 2.14 ) }
    dend_27 { pt3dadd( -9.5228, 62.9417, -13.5596, 1.18 ) }
    dend_27 { pt3dadd( -9.87842, 63.8311, -13.7099, 1.03 ) }
    dend_27 { pt3dadd( -10.1276, 64.5025, -13.8074, 1.03 ) }
    dend_27 { pt3dadd( -10.3417, 65.1274, -13.8834, 1.33 ) }
    dend_27 { pt3dadd( -10.5712, 65.859, -13.9551, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -10.7154, 66.3941, -13.9888, 2.65 ) }
    dend_27 { pt3dadd( -10.8473, 66.9778, -14.0198, 2.65 ) }
    dend_27 { pt3dadd( -10.9727, 67.6809, -14.0575, 2.65 ) }
    dend_27 { pt3dadd( -10.9867, 67.7792, -14.0619, 2.65 ) }
    dend_27 { pt3dadd( -11.0432, 68.2682, -14.0828, 2.36 ) }
    dend_27 { pt3dadd( -11.0742, 68.8352, -14.1101, 2.06 ) }
    dend_27 { pt3dadd( -11.0884, 69.5626, -14.1474, 1.4 ) }
    dend_27 { pt3dadd( -11.0794, 70.3478, -14.1864, 0.81 ) }
    dend_27 { pt3dadd( -11.0166, 71.6194, -14.2401, 0.66 ) }
    dend_27 { pt3dadd( -10.9243, 72.6828, -14.2695, 0.66 ) }
    dend_27 { pt3dadd( -10.7818, 73.8313, -14.2847, 1.11 ) }
    dend_27 { pt3dadd( -10.7733, 73.885, -14.285, 1.11 ) }
    dend_27 { pt3dadd( -10.6326, 74.5884, -14.2804, 1.55 ) }
    dend_27 { pt3dadd( -10.4388, 75.4024, -14.2689, 1.84 ) }
    dend_27 { pt3dadd( -10.1936, 76.327, -14.2559, 2.28 ) }
    dend_27 { pt3dadd( -10.0786, 76.7564, -14.2492, 2.58 ) }
    dend_27 { pt3dadd( -9.93932, 77.3084, -14.2546, 2.58 ) }
    dend_27 { pt3dadd( -9.84837, 77.7096, -14.2703, 2.58 ) }
    dend_27 { pt3dadd( -9.73563, 78.3601, -14.3283, 2.36 ) }
    dend_27 { pt3dadd( -9.672, 78.9212, -14.409, 1.92 ) }
    dend_27 { pt3dadd( -9.66843, 78.9817, -14.4196, 1.92 ) }
    dend_27 { pt3dadd( -9.63728, 79.875, -14.578, 0.88 ) }
    dend_27 { pt3dadd( -9.62749, 80.7454, -14.723, 0.66 ) }
    dend_27 { pt3dadd( -9.62668, 81.648, -14.8803, 0.66 ) }
    dend_27 { pt3dadd( -9.62541, 82.2318, -14.9917, 0.81 ) }
    dend_27 { pt3dadd( -9.61033, 82.872, -15.1195, 0.74 ) }
    dend_27 { pt3dadd( -9.58341, 83.5193, -15.2507, 0.59 ) }
    dend_27 { pt3dadd( -9.55383, 84.1682, -15.374, 1.25 ) }
    dend_27 { pt3dadd( -9.50517, 84.7866, -15.4992, 1.84 ) }
    dend_27 { pt3dadd( -9.40117, 85.6555, -15.6701, 2.5 ) }
    dend_27 { pt3dadd( -9.32227, 86.1775, -15.7781, 2.65 ) }
    dend_27 { pt3dadd( -9.30583, 86.263, -15.8004, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.62881, 36.8066, -7.13652, 0.52 ) }
    dend_26 { pt3dadd( -8.34852, 37.7776, -7.14009, 0.52 ) }
    dend_26 { pt3dadd( -8.33786, 37.8255, -7.13867, 0.52 ) }
    dend_26 { pt3dadd( -8.29471, 38.2984, -7.10999, 0.52 ) }
    dend_26 { pt3dadd( -8.33618, 39.1832, -7.03844, 0.52 ) }
    dend_26 { pt3dadd( -8.3422, 39.2312, -7.03416, 0.52 ) }
    dend_26 { pt3dadd( -8.38992, 39.449, -7.01351, 0.66 ) }
    dend_26 { pt3dadd( -8.42404, 39.5142, -6.99594, 0.66 ) }
    dend_26 { pt3dadd( -8.66846, 39.8716, -6.89633, 0.52 ) }
    dend_26 { pt3dadd( -8.88863, 40.1308, -6.81794, 0.66 ) }
    dend_26 { pt3dadd( -8.92688, 40.1727, -6.80323, 0.66 ) }
    dend_26 { pt3dadd( -9.1592, 40.4357, -6.69584, 0.59 ) }
    dend_26 { pt3dadd( -9.51296, 40.8473, -6.5112, 0.29 ) }
    dend_26 { pt3dadd( -9.80308, 41.2078, -6.3325, 0.29 ) }
    dend_26 { pt3dadd( -9.85416, 41.2751, -6.29517, 0.29 ) }
    dend_26 { pt3dadd( -10.1806, 41.7339, -6.02439, 0.59 ) }
    dend_26 { pt3dadd( -10.4013, 42.0448, -5.84795, 0.81 ) }
    dend_26 { pt3dadd( -10.4299, 42.0828, -5.8277, 0.81 ) }
    dend_26 { pt3dadd( -10.6395, 42.3269, -5.71341, 0.81 ) }
    dend_26 { pt3dadd( -10.6694, 42.3548, -5.70068, 0.81 ) }
    dend_26 { pt3dadd( -10.977, 42.5964, -5.59556, 0.81 ) }
    dend_26 { pt3dadd( -11.5183, 43.0109, -5.4325, 0.37 ) }
    dend_26 { pt3dadd( -11.8837, 43.3225, -5.29045, 0.37 ) }
    dend_26 { pt3dadd( -12.1717, 43.5945, -5.15033, 0.59 ) }
    dend_26 { pt3dadd( -12.4055, 43.8446, -5.00745, 0.81 ) }
    dend_26 { pt3dadd( -12.7714, 44.2784, -4.7321, 0.29 ) }
    dend_26 { pt3dadd( -13.1164, 44.7252, -4.42785, 0.52 ) }
    dend_26 { pt3dadd( -13.4778, 45.2499, -4.04919, 1.33 ) }
    dend_26 { pt3dadd( -13.6332, 45.4965, -3.86646, 1.55 ) }
    dend_26 { pt3dadd( -14.0762, 46.2454, -3.30132, 0.29 ) }
    dend_26 { pt3dadd( -14.4251, 46.8397, -2.85271, 1.55 ) }
    dend_26 { pt3dadd( -14.5128, 46.9743, -2.75904, 1.84 ) }
    dend_26 { pt3dadd( -14.5638, 47.0365, -2.7233, 1.84 ) }
    dend_26 { pt3dadd( -14.7224, 47.1999, -2.6687, 1.84 ) }
    dend_26 { pt3dadd( -14.7527, 47.2298, -2.66567, 1.84 ) }
    dend_26 { pt3dadd( -14.9931, 47.4565, -2.6987, 1.62 ) }
    dend_26 { pt3dadd( -15.4871, 47.9056, -2.82806, 0.37 ) }
    dend_26 { pt3dadd( -15.8988, 48.2901, -2.96911, 0.29 ) }
    dend_26 { pt3dadd( -16.21, 48.6069, -3.11146, 0.59 ) }
    dend_26 { pt3dadd( -16.4105, 48.8204, -3.22764, 0.59 ) }
    dend_26 { pt3dadd( -16.5515, 48.9743, -3.3181, 0.59 ) }
    dend_26 { pt3dadd( -16.7378, 49.1874, -3.4528, 0.52 ) }
    dend_26 { pt3dadd( -17.0811, 49.6444, -3.72315, 0.29 ) }
    dend_26 { pt3dadd( -17.3091, 49.9893, -3.92796, 0.74 ) }
    dend_26 { pt3dadd( -17.5752, 50.4008, -4.15111, 0.66 ) }
    dend_26 { pt3dadd( -17.7219, 50.626, -4.26028, 0.88 ) }
    dend_26 { pt3dadd( -17.9815, 51.0202, -4.42805, 0.66 ) }
    dend_26 { pt3dadd( -18.6892, 52.0575, -4.79966, 2.14 ) }
    dend_26 { pt3dadd( -18.9638, 52.436, -4.90979, 2.14 ) }
    dend_26 { pt3dadd( -19.5386, 53.1941, -5.09244, 0.22 ) }
    dend_26 { pt3dadd( -19.8477, 53.5932, -5.16738, 0.22 ) }
    dend_26 { pt3dadd( -20.1768, 54.0137, -5.22912, 0.22 ) }
    dend_26 { pt3dadd( -20.5012, 54.4114, -5.24663, 0.88 ) }
    dend_26 { pt3dadd( -20.6718, 54.608, -5.23141, 1.03 ) }
    dend_26 { pt3dadd( -20.8836, 54.8442, -5.18933, 0.74 ) }
    dend_26 { pt3dadd( -21.3932, 55.4167, -5.0523, 0.22 ) }
    dend_26 { pt3dadd( -21.6997, 55.7591, -4.95041, 0.22 ) }
    dend_26 { pt3dadd( -22.109, 56.2216, -4.81445, 0.22 ) }
    dend_26 { pt3dadd( -22.1637, 56.2843, -4.79664, 0.22 ) }
    dend_26 { pt3dadd( -22.5508, 56.7487, -4.6742, 0.22 ) }
    dend_26 { pt3dadd( -23.1257, 57.4296, -4.50836, 1.69 ) }
    dend_26 { pt3dadd( -23.3187, 57.6798, -4.4635, 2.21 ) }
    dend_26 { pt3dadd( -23.6329, 58.1087, -4.41006, 2.21 ) }
    dend_26 { pt3dadd( -23.6554, 58.1442, -4.40646, 2.21 ) }
    dend_26 { pt3dadd( -24.0932, 58.9448, -4.31925, 0.22 ) }
    dend_26 { pt3dadd( -24.3401, 59.4753, -4.25724, 0.22 ) }
    dend_26 { pt3dadd( -24.7187, 60.3691, -4.10736, 0.22 ) }
    dend_26 { pt3dadd( -24.7464, 60.4368, -4.09394, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -25.0095, 61.073, -3.93854, 1.11 ) }
    dend_26 { pt3dadd( -25.203, 61.5409, -3.82846, 1.11 ) }
    dend_26 { pt3dadd( -25.373, 61.9595, -3.71907, 0.59 ) }
    dend_26 { pt3dadd( -25.696, 62.7497, -3.49826, 1.69 ) }
    dend_26 { pt3dadd( -25.7849, 62.9534, -3.43909, 1.77 ) }
    dend_26 { pt3dadd( -26.3717, 64.2605, -3.08447, 0.22 ) }
    dend_26 { pt3dadd( -26.8565, 65.3105, -2.79053, 0.22 ) }
    dend_26 { pt3dadd( -27.0385, 65.7092, -2.66841, 1.03 ) }
    dend_26 { pt3dadd( -27.1743, 66.0106, -2.57123, 1.03 ) }
    dend_26 { pt3dadd( -27.2956, 66.2796, -2.48188, 0.81 ) }
    dend_26 { pt3dadd( -27.6532, 66.9931, -2.1886, 0.22 ) }
    dend_26 { pt3dadd( -28.0966, 67.7749, -1.80562, 1.11 ) }
    dend_26 { pt3dadd( -28.188, 67.9164, -1.73063, 1.62 ) }
    dend_26 { pt3dadd( -28.3179, 68.1091, -1.61436, 1.62 ) }
    dend_26 { pt3dadd( -28.3391, 68.1395, -1.59319, 1.62 ) }
    dend_26 { pt3dadd( -29.1115, 69.2301, -0.739909, 0.22 ) }
    dend_26 { pt3dadd( -29.3976, 69.6264, -0.409308, 0.81 ) }
    dend_26 { pt3dadd( -29.5263, 69.8019, -0.262598, 0.81 ) }
    dend_26 { pt3dadd( -30.1418, 70.6489, 0.458436, 0.22 ) }
    dend_26 { pt3dadd( -30.1651, 70.6823, 0.487474, 0.22 ) }
    dend_26 { pt3dadd( -30.5419, 71.2531, 0.995934, 1.18 ) }
    dend_26 { pt3dadd( -30.6891, 71.5368, 1.27571, 1.55 ) }
    dend_26 { pt3dadd( -33.9071, 77.732, 1.91152, 1.55 ) }
    dend_26 { pt3dadd( -37.1218, 83.8702, 3.0146, 1.55 ) }
    dend_26 { pt3dadd( -41.2907, 89.4087, 4.41024, 1.55 ) }
    dend_26 { pt3dadd( -45.2403, 94.8328, 6.67616, 1.55 ) }
    dend_26 { pt3dadd( -49.4938, 99.3165, 10.2781, 1.55 ) }
    dend_26 { pt3dadd( -53.5722, 104.154, 13.5606, 1.55 ) }
    dend_26 { pt3dadd( -56.0626, 109.664, 17.2346, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.62034, 54.3886, 1.37046, 0.88 ) }
    dend_24 { pt3dadd( 1.79663, 55.0908, 4.07639, 0.88 ) }
    dend_24 { pt3dadd( 1.80633, 55.1194, 4.24289, 0.88 ) }
    dend_24 { pt3dadd( 1.86168, 55.2924, 6.16841, 0.88 ) }
    dend_24 { pt3dadd( 1.86283, 55.2963, 6.24648, 0.88 ) }
    dend_24 { pt3dadd( 2.50003, 55.4872, 10.3772, 0.59 ) }
    dend_24 { pt3dadd( 2.51689, 55.4928, 10.4667, 0.59 ) }
    dend_24 { pt3dadd( 2.80998, 55.5676, 11.7688, 1.18 ) }
    dend_24 { pt3dadd( 3.23947, 55.6988, 13.5337, 1.18 ) }
    dend_24 { pt3dadd( 3.26055, 55.706, 13.6087, 1.18 ) }
    dend_24 { pt3dadd( 5.29524, 56.8252, 19.7748, 0.22 ) }
    dend_24 { pt3dadd( 5.57444, 57.0435, 20.4635, 0.29 ) }
    dend_24 { pt3dadd( 6.14349, 57.5603, 21.7599, 1.11 ) }
    dend_24 { pt3dadd( 6.18049, 57.5997, 21.8369, 1.11 ) }
    dend_24 { pt3dadd( 6.61769, 58.0832, 22.6495, 1.11 ) }
    dend_24 { pt3dadd( 7.42155, 59.0912, 24.1204, 0.22 ) }
    dend_24 { pt3dadd( 7.81681, 59.9091, 24.7877, 0.59 ) }
    dend_24 { pt3dadd( 7.84871, 59.9628, 24.8314, 0.59 ) }
    dend_24 { pt3dadd( 8.06908, 60.2915, 25.0725, 1.11 ) }
    dend_24 { pt3dadd( 10.1558, 63.6254, 37.4558, 1.11 ) }
    dend_24 { pt3dadd( 8.97237, 67.1794, 49.8926, 1.11 ) }
    dend_24 { pt3dadd( 10.5342, 72.0116, 61.801, 1.11 ) }
    dend_24 { pt3dadd( 10.7386, 77.1535, 73.6682, 1.11 ) }
    dend_24 { pt3dadd( 11.0601, 82.9107, 85.2169, 1.11 ) }
    dend_24 { pt3dadd( 11.7204, 89.3062, 96.3737, 1.11 ) }
    dend_24 { pt3dadd( 11.5963, 96.1289, 107.268, 1.11 ) }
    dend_24 { pt3dadd( 12.3611, 101.88, 118.799, 1.11 ) }
    dend_24 { pt3dadd( 14.6444, 107.546, 130.172, 1.11 ) }
    dend_24 { pt3dadd( 16.5787, 113.063, 141.692, 1.11 ) }
    dend_24 { pt3dadd( 19.1157, 120.039, 152.172, 1.11 ) }
    dend_24 { pt3dadd( 21.2093, 127.562, 162.327, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.62034, 54.3886, 1.37046, 0.52 ) }
    dend_23 { pt3dadd( 2.29773, 55.878, 2.01064, 0.52 ) }
    dend_23 { pt3dadd( 2.74164, 57.1721, 2.54428, 0.52 ) }
    dend_23 { pt3dadd( 2.75331, 57.2361, 2.56899, 0.44 ) }
    dend_23 { pt3dadd( 2.82616, 58.3214, 2.94148, 0.44 ) }
    dend_23 { pt3dadd( 2.82627, 58.411, 2.96675, 0.44 ) }
    dend_23 { pt3dadd( 2.80493, 59.2567, 3.15789, 0.66 ) }
    dend_23 { pt3dadd( 2.79335, 59.3358, 3.17454, 0.66 ) }
    dend_23 { pt3dadd( 2.66365, 60.1473, 3.3647, 0.66 ) }
    dend_23 { pt3dadd( 2.58921, 60.8102, 3.55902, 0.44 ) }
    dend_23 { pt3dadd( 2.55843, 61.781, 3.94444, 0.44 ) }
    dend_23 { pt3dadd( 2.58689, 62.6467, 4.34712, 0.96 ) }
    dend_23 { pt3dadd( 2.7496, 63.88, 4.95376, 0.81 ) }
    dend_23 { pt3dadd( 2.78777, 64.0645, 5.04553, 0.81 ) }
    dend_23 { pt3dadd( 3.19457, 65.328, 5.66029, 0.66 ) }
    dend_23 { pt3dadd( 3.72524, 66.4896, 6.2534, 0.44 ) }
    dend_23 { pt3dadd( 3.81024, 66.6312, 6.3234, 0.44 ) }
    dend_23 { pt3dadd( 4.44535, 67.5065, 6.71166, 0.29 ) }
    dend_23 { pt3dadd( 4.83404, 67.9469, 6.8802, 0.29 ) }
    dend_23 { pt3dadd( 5.48195, 68.6277, 7.11934, 1.11 ) }
    dend_23 { pt3dadd( 6.40925, 69.5087, 7.40283, 1.47 ) }
    dend_23 { pt3dadd( 6.93841, 70.0114, 7.58052, 1.47 ) }
    dend_23 { pt3dadd( 6.98716, 70.0585, 7.60145, 1.47 ) }
    dend_23 { pt3dadd( 8.09928, 71.134, 8.18731, 0.88 ) }
    dend_23 { pt3dadd( 8.91962, 71.942, 8.6752, 0.52 ) }
    dend_23 { pt3dadd( 8.96502, 71.9884, 8.7041, 0.52 ) }
    dend_23 { pt3dadd( 9.61546, 72.6715, 9.0977, 0.74 ) }
    dend_23 { pt3dadd( 9.66133, 72.7185, 9.12474, 0.74 ) }
    dend_23 { pt3dadd( 10.1151, 73.1699, 9.33676, 0.74 ) }
    dend_23 { pt3dadd( 10.1657, 73.2174, 9.35166, 0.74 ) }
    dend_23 { pt3dadd( 10.6011, 73.6091, 9.42066, 0.74 ) }
    dend_23 { pt3dadd( 11.5783, 74.5621, 9.49041, 0.37 ) }
    dend_23 { pt3dadd( 12.0739, 75.1076, 9.48747, 0.37 ) }
    dend_23 { pt3dadd( 12.6697, 75.881, 9.45978, 0.52 ) }
    dend_23 { pt3dadd( 13.0993, 76.5605, 9.44994, 0.37 ) }
    dend_23 { pt3dadd( 13.6753, 77.6888, 9.45372, 0.74 ) }
    dend_23 { pt3dadd( 13.9788, 78.5465, 9.47575, 1.11 ) }
    dend_23 { pt3dadd( 14.1549, 79.3727, 9.50748, 0.96 ) }
    dend_23 { pt3dadd( 14.2405, 80.4146, 9.59539, 0.44 ) }
    dend_23 { pt3dadd( 14.2054, 81.6406, 9.7533, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 14.1532, 82.2335, 9.85142, 0.29 ) }
    dend_23 { pt3dadd( 14.0534, 83.1267, 10.0145, 0.29 ) }
    dend_23 { pt3dadd( 14.0465, 83.2068, 10.028, 0.29 ) }
    dend_23 { pt3dadd( 14.0158, 84.0563, 10.1487, 0.37 ) }
    dend_23 { pt3dadd( 14.0429, 85.1077, 10.2492, 0.52 ) }
    dend_23 { pt3dadd( 14.1401, 86.0752, 10.2768, 1.11 ) }
    dend_23 { pt3dadd( 14.257, 86.7425, 10.2795, 1.69 ) }
    dend_23 { pt3dadd( 14.354, 87.225, 10.2735, 1.77 ) }
    dend_23 { pt3dadd( 14.4424, 87.7884, 10.2698, 1.69 ) }
    dend_23 { pt3dadd( 14.5099, 88.3567, 10.2681, 1.47 ) }
    dend_23 { pt3dadd( 14.5204, 88.7389, 10.2725, 1.47 ) }
    dend_23 { pt3dadd( 14.5105, 88.8221, 10.2753, 1.47 ) }
    dend_23 { pt3dadd( 14.1871, 90.2858, 10.3739, 0.29 ) }
    dend_23 { pt3dadd( 13.9976, 90.9448, 10.4317, 0.66 ) }
    dend_23 { pt3dadd( 13.9749, 91.0227, 10.4419, 0.66 ) }
    dend_23 { pt3dadd( 13.8811, 91.3905, 10.5017, 0.37 ) }
    dend_23 { pt3dadd( 13.7395, 92.1728, 10.6498, 0.29 ) }
    dend_23 { pt3dadd( 13.6425, 93.1106, 10.836, 0.29 ) }
    dend_23 { pt3dadd( 13.642, 93.1906, 10.8517, 0.29 ) }
    dend_23 { pt3dadd( 13.7149, 94.1923, 11.0151, 1.03 ) }
    dend_23 { pt3dadd( 13.8154, 95.0344, 11.1278, 1.69 ) }
    dend_23 { pt3dadd( 13.9667, 95.9292, 11.2081, 2.14 ) }
    dend_23 { pt3dadd( 14.0398, 96.3368, 11.2341, 2.28 ) }
    dend_23 { pt3dadd( 14.1135, 96.9893, 11.2504, 1.77 ) }
    dend_23 { pt3dadd( 14.1495, 97.7452, 11.2397, 1.18 ) }
    dend_23 { pt3dadd( 14.1243, 98.534, 11.1921, 0.52 ) }
    dend_23 { pt3dadd( 14.0552, 99.2953, 11.1352, 0.37 ) }
    dend_23 { pt3dadd( 13.9673, 99.8225, 11.0671, 0.37 ) }
    dend_23 { pt3dadd( 13.7613, 100.921, 10.9006, 0.74 ) }
    dend_23 { pt3dadd( 13.6898, 101.322, 10.8274, 1.25 ) }
    dend_23 { pt3dadd( 13.5729, 101.98, 10.6885, 1.4 ) }
    dend_23 { pt3dadd( 13.4325, 102.884, 10.4781, 0.81 ) }
    dend_23 { pt3dadd( 13.2134, 104.706, 10.0375, 0.37 ) }
    dend_23 { pt3dadd( 13.1436, 105.701, 9.78395, 0.37 ) }
    dend_23 { pt3dadd( 13.0947, 107.309, 9.37539, 0.29 ) }
    dend_23 { pt3dadd( 13.0916, 108.534, 9.06068, 1.84 ) }
    dend_23 { pt3dadd( 13.1103, 108.992, 8.94206, 2.28 ) }
    dend_23 { pt3dadd( 13.177, 109.681, 8.7644, 2.14 ) }
    dend_23 { pt3dadd( 13.4145, 111.159, 8.4333, 0.52 ) }
    dend_23 { pt3dadd( 13.5729, 111.992, 8.25927, 0.74 ) }
    dend_23 { pt3dadd( 13.6939, 112.571, 8.16158, 0.74 ) }
    dend_23 { pt3dadd( 13.8645, 113.384, 8.05504, 0.22 ) }
    dend_23 { pt3dadd( 13.9432, 113.893, 8.00572, 0.22 ) }
    dend_23 { pt3dadd( 14.005, 114.923, 7.92642, 0.74 ) }
    dend_23 { pt3dadd( 13.9856, 115.189, 7.90846, 0.74 ) }
    dend_23 { pt3dadd( 13.8558, 116.062, 7.83892, 0.22 ) }
    dend_23 { pt3dadd( 13.7288, 116.715, 7.78155, 0.74 ) }
    dend_23 { pt3dadd( 13.6096, 117.258, 7.72753, 0.96 ) }
    dend_23 { pt3dadd( 13.3567, 118.523, 7.57916, 0.37 ) }
    dend_23 { pt3dadd( 13.1147, 120.06, 7.35833, 1.25 ) }
    dend_23 { pt3dadd( 13.0691, 120.598, 7.27302, 1.55 ) }
    dend_23 { pt3dadd( 13.0664, 121.021, 7.21258, 1.77 ) }
    dend_23 { pt3dadd( 13.0973, 121.731, 7.14185, 1.77 ) }
    dend_23 { pt3dadd( 13.1692, 122.673, 7.08807, 0.88 ) }
    dend_23 { pt3dadd( 13.2334, 123.293, 7.08243, 0.52 ) }
    dend_23 { pt3dadd( 13.3384, 124.266, 7.11808, 0.44 ) }
    dend_23 { pt3dadd( 13.4411, 125.51, 7.14552, 0.29 ) }
    dend_23 { pt3dadd( 13.5137, 127.035, 7.17008, 1.25 ) }
    dend_23 { pt3dadd( 13.5251, 127.702, 7.17936, 2.21 ) }
    dend_23 { pt3dadd( 13.5198, 128.158, 7.18261, 2.5 ) }
    dend_23 { pt3dadd( 13.4922, 129.106, 7.17626, 2.28 ) }
    dend_23 { pt3dadd( 13.3649, 130.707, 7.0918, 0.66 ) }
    dend_23 { pt3dadd( 13.2755, 131.568, 7.00477, 0.52 ) }
    dend_23 { pt3dadd( 13.1727, 132.497, 6.88614, 0.66 ) }
    dend_23 { pt3dadd( 13.0999, 133.167, 6.79314, 0.96 ) }
    dend_23 { pt3dadd( 13.0069, 134.016, 6.6615, 0.96 ) }
    dend_23 { pt3dadd( 12.7853, 136.06, 6.30899, 0.22 ) }
    dend_23 { pt3dadd( 12.7201, 136.909, 6.16597, 1.18 ) }
    dend_23 { pt3dadd( 12.7043, 137.379, 6.07144, 0.88 ) }
    dend_23 { pt3dadd( 12.7127, 138.011, 5.92422, 0.74 ) }
    dend_23 { pt3dadd( 12.7755, 138.824, 5.71641, 0.29 ) }
    dend_23 { pt3dadd( 12.7893, 138.901, 5.69525, 0.29 ) }
    dend_23 { pt3dadd( 13.0301, 139.572, 5.51044, 0.81 ) }
    dend_23 { pt3dadd( 13.0528, 139.647, 5.48702, 0.81 ) }
    dend_23 { pt3dadd( 13.1417, 140.119, 5.35216, 1.03 ) }
    dend_23 { pt3dadd( 13.168, 140.359, 5.28895, 1.03 ) }
    dend_23 { pt3dadd( 13.1683, 140.686, 5.21763, 1.03 ) }
    dend_23 { pt3dadd( 12.9523, 142.164, 4.90166, 0.29 ) }
    dend_23 { pt3dadd( 12.6627, 143.247, 4.6759, 0.29 ) }
    dend_23 { pt3dadd( 12.451, 143.926, 4.53793, 0.59 ) }
    dend_23 { pt3dadd( 12.395, 144.089, 4.5062, 0.59 ) }
    dend_23 { pt3dadd( 12.1964, 144.71, 4.38665, 0.37 ) }
    dend_23 { pt3dadd( 11.9221, 145.799, 4.18358, 0.29 ) }
    dend_23 { pt3dadd( 11.7361, 146.986, 3.98388, 1.11 ) }
    dend_23 { pt3dadd( 11.7143, 147.471, 3.9036, 1.69 ) }
    dend_23 { pt3dadd( 11.7293, 147.998, 3.81689, 1.84 ) }
    dend_23 { pt3dadd( 11.7889, 148.835, 3.68892, 1.62 ) }
    dend_23 { pt3dadd( 11.9375, 150.022, 3.52528, 0.74 ) }
    dend_23 { pt3dadd( 12.1344, 151.145, 3.40341, 0.52 ) }
    dend_23 { pt3dadd( 12.1501, 151.227, 3.39507, 0.52 ) }
    dend_23 { pt3dadd( 12.3597, 152.457, 3.28014, 0.37 ) }
    dend_23 { pt3dadd( 12.3717, 152.549, 3.27167, 0.37 ) }
    dend_23 { pt3dadd( 12.4145, 153.323, 3.21115, 1.25 ) }
    dend_23 { pt3dadd( 12.3828, 153.865, 3.13829, 0.96 ) }
    dend_23 { pt3dadd( 12.3737, 153.945, 3.1242, 0.96 ) }
    dend_23 { pt3dadd( 12.2758, 154.681, 2.98393, 0.74 ) }
    dend_23 { pt3dadd( 12.1589, 155.436, 2.80888, 0.59 ) }
    dend_23 { pt3dadd( 12.0555, 156.061, 2.66142, 0.74 ) }
    dend_23 { pt3dadd( 11.7458, 157.71, 2.28041, 0.37 ) }
    dend_23 { pt3dadd( 11.5425, 158.725, 2.05268, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 11.3657, 159.599, 1.8626, 0.52 ) }
    dend_23 { pt3dadd( 11.1029, 160.722, 1.61766, 0.29 ) }
    dend_23 { pt3dadd( 10.8547, 161.598, 1.42293, 0.81 ) }
    dend_23 { pt3dadd( 10.6507, 162.181, 1.2878, 1.18 ) }
    dend_23 { pt3dadd( 10.6212, 162.247, 1.27343, 1.18 ) }
    dend_23 { pt3dadd( 10.4614, 162.566, 1.19506, 1.18 ) }
    dend_23 { pt3dadd( 10.0234, 163.549, 0.959069, 1.18 ) }
    dend_23 { pt3dadd( 9.71239, 164.392, 0.774572, 0.44 ) }
    dend_23 { pt3dadd( 9.44129, 165.321, 0.57157, 0.29 ) }
    dend_23 { pt3dadd( 9.40126, 165.505, 0.533879, 0.29 ) }
    dend_23 { pt3dadd( 9.22411, 166.789, 0.297427, 0.29 ) }
    dend_23 { pt3dadd( 9.13973, 168.557, 0.0190193, 1.62 ) }
    dend_23 { pt3dadd( 9.15422, 169.165, -0.0544789, 2.65 ) }
    dend_23 { pt3dadd( 9.18449, 169.773, -0.10809, 2.87 ) }
    dend_23 { pt3dadd( 9.22893, 170.45, -0.155431, 2.36 ) }
    dend_23 { pt3dadd( 9.28764, 171.393, -0.210688, 1.69 ) }
    dend_23 { pt3dadd( 9.36169, 172.879, -0.294608, 0.52 ) }
    dend_23 { pt3dadd( 9.42255, 174.046, -0.361339, 0.52 ) }
    dend_23 { pt3dadd( 9.4428, 174.631, -0.397596, 0.81 ) }
    dend_23 { pt3dadd( 9.45802, 175.468, -0.457403, 0.44 ) }
    dend_23 { pt3dadd( 9.46902, 176.661, -0.557015, 0.44 ) }
    dend_23 { pt3dadd( 9.46412, 177.547, -0.639845, 0.37 ) }
    dend_23 { pt3dadd( 9.4646, 177.627, -0.648941, 0.37 ) }
    dend_23 { pt3dadd( 9.51337, 178.644, -0.797049, 0.37 ) }
    dend_23 { pt3dadd( 9.52713, 178.792, -0.821634, 0.37 ) }
    dend_23 { pt3dadd( 9.65335, 179.849, -1.0119, 1.62 ) }
    dend_23 { pt3dadd( 9.75268, 180.535, -1.13389, 2.36 ) }
    dend_23 { pt3dadd( 9.83869, 181.063, -1.22273, 2.36 ) }
    dend_23 { pt3dadd( 10.1366, 182.769, -1.50254, 0.29 ) }
    dend_23 { pt3dadd( 10.2921, 183.59, -1.63594, 0.29 ) }
    dend_23 { pt3dadd( 10.4602, 184.432, -1.76271, 0.37 ) }
    dend_23 { pt3dadd( 10.6919, 185.516, -1.91767, 0.37 ) }
    dend_23 { pt3dadd( 10.7763, 185.947, -1.9908, 0.59 ) }
    dend_23 { pt3dadd( 10.8439, 186.394, -2.08365, 0.59 ) }
    dend_23 { pt3dadd( 10.8503, 186.46, -2.1008, 0.59 ) }
    dend_23 { pt3dadd( 10.9038, 188.13, -2.58445, 0.29 ) }
    dend_23 { pt3dadd( 10.8908, 190.185, -3.24699, 0.29 ) }
    dend_23 { pt3dadd( 10.8459, 191.173, -3.60459, 0.96 ) }
    dend_23 { pt3dadd( 10.7748, 192.053, -3.94879, 1.18 ) }
    dend_23 { pt3dadd( 10.6874, 192.733, -4.22128, 0.66 ) }
    dend_23 { pt3dadd( 10.5696, 193.405, -4.48916, 0.44 ) }
    dend_23 { pt3dadd( 10.5495, 193.479, -4.51941, 0.44 ) }
    dend_23 { pt3dadd( 10.2981, 194.293, -4.8052, 0.22 ) }
    dend_23 { pt3dadd( 10.2506, 194.472, -4.84805, 0.22 ) }
    dend_23 { pt3dadd( 9.98433, 195.789, -5.06033, 1.47 ) }
    dend_23 { pt3dadd( 9.89321, 196.367, -5.12574, 2.28 ) }
    dend_23 { pt3dadd( 9.83158, 196.882, -5.1705, 2.58 ) }
    dend_23 { pt3dadd( 9.69427, 198.351, -5.25991, 0.29 ) }
    dend_23 { pt3dadd( 9.63669, 199.157, -5.28251, 0.22 ) }
    dend_23 { pt3dadd( 9.59899, 199.982, -5.29198, 0.22 ) }
    dend_23 { pt3dadd( 9.5786, 200.674, -5.29321, 0.22 ) }
    dend_23 { pt3dadd( 9.5366, 201.819, -5.28412, 1.33 ) }
    dend_23 { pt3dadd( 9.522, 202.128, -5.27704, 1.62 ) }
    dend_23 { pt3dadd( 9.4861, 202.539, -5.27467, 1.62 ) }
    dend_23 { pt3dadd( 9.34475, 203.463, -5.30413, 0.37 ) }
    dend_23 { pt3dadd( 9.1593, 204.316, -5.34917, 0.22 ) }
    dend_23 { pt3dadd( 9.05401, 204.751, -5.37161, 0.22 ) }
    dend_23 { pt3dadd( 8.93928, 205.187, -5.39269, 0.52 ) }
    dend_23 { pt3dadd( 8.70215, 206.144, -5.44157, 0.29 ) }
    dend_23 { pt3dadd( 8.34554, 207.792, -5.53446, 0.29 ) }
    dend_23 { pt3dadd( 8.1833, 208.703, -5.58899, 1.03 ) }
    dend_23 { pt3dadd( 8.12161, 209.285, -5.62752, 1.33 ) }
    dend_23 { pt3dadd( 8.11354, 209.542, -5.64669, 1.33 ) }
    dend_23 { pt3dadd( 8.1342, 210.075, -5.68727, 1.18 ) }
    dend_23 { pt3dadd( 8.21584, 210.843, -5.73703, 0.96 ) }
    dend_23 { pt3dadd( 8.30875, 211.421, -5.7842, 0.37 ) }
    dend_23 { pt3dadd( 8.49683, 212.436, -5.8737, 0.22 ) }
    dend_23 { pt3dadd( 8.66969, 213.35, -5.95383, 0.22 ) }
    dend_23 { pt3dadd( 8.83982, 214.303, -6.03234, 1.11 ) }
    dend_23 { pt3dadd( 8.9214, 214.833, -6.08712, 1.92 ) }
    dend_23 { pt3dadd( 8.97542, 215.27, -6.1514, 2.5 ) }
    dend_23 { pt3dadd( 8.98225, 215.349, -6.16618, 2.5 ) }
    dend_23 { pt3dadd( 8.99741, 215.842, -6.28027, 2.5 ) }
    dend_23 { pt3dadd( 8.98134, 216.523, -6.45891, 2.36 ) }
    dend_23 { pt3dadd( 8.88527, 218.13, -6.92346, 0.29 ) }
    dend_23 { pt3dadd( 8.81217, 218.981, -7.17723, 0.29 ) }
    dend_23 { pt3dadd( 8.79767, 219.114, -7.21485, 0.29 ) }
    dend_23 { pt3dadd( 8.68037, 219.997, -7.47223, 1.33 ) }
    dend_23 { pt3dadd( 8.60761, 220.511, -7.61906, 1.55 ) }
    dend_23 { pt3dadd( 8.59739, 220.581, -7.6376, 1.55 ) }
    dend_23 { pt3dadd( 8.53157, 221.084, -7.74923, 1.25 ) }
    dend_23 { pt3dadd( 8.49775, 221.9, -7.91192, 0.66 ) }
    dend_23 { pt3dadd( 8.51185, 223.427, -8.17783, 0.29 ) }
    dend_23 { pt3dadd( 8.56091, 224.305, -8.31477, 0.88 ) }
    dend_23 { pt3dadd( 8.59985, 224.757, -8.38107, 1.11 ) }
    dend_23 { pt3dadd( 8.66406, 225.538, -8.47942, 0.96 ) }
    dend_23 { pt3dadd( 8.76672, 227.101, -8.57607, 0.29 ) }
    dend_23 { pt3dadd( 8.83819, 228.785, -8.58776, 0.29 ) }
    dend_23 { pt3dadd( 8.85305, 229.878, -8.54235, 1.33 ) }
    dend_23 { pt3dadd( 8.84422, 230.74, -8.49992, 1.92 ) }
    dend_23 { pt3dadd( 8.81374, 231.69, -8.43748, 2.21 ) }
    dend_23 { pt3dadd( 8.66754, 234.312, -8.22307, 0.37 ) }
    dend_23 { pt3dadd( 8.54285, 235.812, -8.07546, 0.37 ) }
    dend_23 { pt3dadd( 8.41238, 237.241, -7.92884, 0.37 ) }
    dend_23 { pt3dadd( 8.30885, 238.287, -7.82482, 0.22 ) }
    dend_23 { pt3dadd( 8.19835, 239.438, -7.72237, 1.33 ) }
    dend_23 { pt3dadd( 8.16071, 239.857, -7.69275, 2.06 ) }
    dend_23 { pt3dadd( 8.10965, 240.274, -7.67141, 2.21 ) }
    dend_23 { pt3dadd( 7.95617, 241.27, -7.6064, 1.69 ) }
    dend_23 { pt3dadd( 7.66288, 242.85, -7.48375, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 7.48996, 243.675, -7.41425, 0.81 ) }
    dend_23 { pt3dadd( 7.38778, 244.167, -7.38258, 0.81 ) }
    dend_23 { pt3dadd( 7.17387, 245.433, -7.34033, 0.22 ) }
    dend_23 { pt3dadd( 7.06907, 246.271, -7.34359, 0.81 ) }
    dend_23 { pt3dadd( 7.05559, 246.46, -7.35141, 0.81 ) }
    dend_23 { pt3dadd( 7.04739, 247.059, -7.39994, 0.81 ) }
    dend_23 { pt3dadd( 7.06633, 247.569, -7.45221, 0.74 ) }
    dend_23 { pt3dadd( 7.17053, 248.835, -7.59953, 0.22 ) }
    dend_23 { pt3dadd( 7.27194, 249.779, -7.72937, 0.81 ) }
    dend_23 { pt3dadd( 7.31299, 250.225, -7.78994, 1.03 ) }
    dend_23 { pt3dadd( 7.36059, 250.899, -7.87638, 0.44 ) }
    dend_23 { pt3dadd( 7.41754, 252.157, -8.02381, 0.29 ) }
    dend_23 { pt3dadd( 7.44123, 253.218, -8.14249, 0.29 ) }
    dend_23 { pt3dadd( 7.43422, 254.532, -8.26958, 1.55 ) }
    dend_23 { pt3dadd( 7.43452, 254.94, -8.31205, 1.92 ) }
    dend_23 { pt3dadd( 7.43533, 255.034, -8.32256, 1.92 ) }
    dend_23 { pt3dadd( 7.43749, 255.452, -8.36803, 1.92 ) }
    dend_23 { pt3dadd( 7.41929, 258.001, -8.63847, 0.22 ) }
    dend_23 { pt3dadd( 7.38483, 259.189, -8.74984, 0.66 ) }
    dend_23 { pt3dadd( 7.3591, 259.659, -8.78418, 1.03 ) }
    dend_23 { pt3dadd( 7.29349, 260.364, -8.82804, 1.03 ) }
    dend_23 { pt3dadd( 7.18482, 261.155, -8.86308, 0.81 ) }
    dend_23 { pt3dadd( 7.027, 261.987, -8.88206, 0.37 ) }
    dend_23 { pt3dadd( 6.9399, 262.346, -8.87904, 0.37 ) }
    dend_23 { pt3dadd( 6.78219, 262.992, -8.8743, 0.37 ) }
    dend_23 { pt3dadd( 6.56555, 263.905, -8.87034, 0.29 ) }
    dend_23 { pt3dadd( 6.33894, 264.973, -8.87545, 0.29 ) }
    dend_23 { pt3dadd( 6.32581, 265.054, -8.87786, 0.29 ) }
    dend_23 { pt3dadd( 6.14467, 266.487, -8.93484, 0.22 ) }
    dend_23 { pt3dadd( 6.13611, 266.579, -8.94031, 0.22 ) }
    dend_23 { pt3dadd( 6.08495, 267.411, -9.00327, 0.22 ) }
    dend_23 { pt3dadd( 6.08283, 267.505, -9.01534, 0.22 ) }
    dend_23 { pt3dadd( 6.10097, 268.52, -9.19048, 1.47 ) }
    dend_23 { pt3dadd( 6.11625, 269.019, -9.29444, 1.84 ) }
    dend_23 { pt3dadd( 6.11838, 269.087, -9.30995, 1.84 ) }
    dend_23 { pt3dadd( 6.13609, 269.577, -9.42343, 1.84 ) }
    dend_23 { pt3dadd( 6.20006, 271.069, -9.77277, 0.22 ) }
    dend_23 { pt3dadd( 6.25156, 272.495, -10.0902, 0.22 ) }
    dend_23 { pt3dadd( 6.27978, 273.161, -10.2186, 0.88 ) }
    dend_23 { pt3dadd( 6.29107, 273.658, -10.2963, 1.18 ) }
    dend_23 { pt3dadd( 6.28972, 274.172, -10.3518, 0.96 ) }
    dend_23 { pt3dadd( 6.286, 274.255, -10.3554, 0.96 ) }
    dend_23 { pt3dadd( 6.18899, 275.0, -10.3062, 0.37 ) }
    dend_23 { pt3dadd( 6.07846, 275.62, -10.2359, 0.37 ) }
    dend_23 { pt3dadd( 5.98223, 276.284, -10.159, 0.37 ) }
    dend_23 { pt3dadd( 5.94571, 276.631, -10.1286, 0.29 ) }
    dend_23 { pt3dadd( 5.89964, 277.378, -10.087, 0.22 ) }
    dend_23 { pt3dadd( 5.88529, 277.84, -10.0736, 0.52 ) }
    dend_23 { pt3dadd( 5.89166, 278.797, -10.0788, 0.22 ) }
    dend_23 { pt3dadd( 5.92194, 279.542, -10.1116, 0.22 ) }
    dend_23 { pt3dadd( 5.97648, 280.217, -10.184, 1.11 ) }
    dend_23 { pt3dadd( 6.01722, 280.842, -10.2982, 1.47 ) }
    dend_23 { pt3dadd( 6.01852, 280.933, -10.3188, 1.47 ) }
    dend_23 { pt3dadd( 6.00288, 281.362, -10.43, 1.33 ) }
    dend_23 { pt3dadd( 5.98847, 281.481, -10.4627, 1.33 ) }
    dend_23 { pt3dadd( 5.79608, 282.534, -10.7333, 0.74 ) }
    dend_23 { pt3dadd( 5.56459, 283.75, -11.0523, 0.29 ) }
    dend_23 { pt3dadd( 5.44166, 284.436, -11.2253, 0.37 ) }
    dend_23 { pt3dadd( 5.43205, 284.507, -11.2423, 0.37 ) }
    dend_23 { pt3dadd( 5.37668, 285.087, -11.3699, 0.37 ) }
    dend_23 { pt3dadd( 5.3297, 285.933, -11.5404, 0.22 ) }
    dend_23 { pt3dadd( 5.32463, 286.935, -11.728, 1.11 ) }
    dend_23 { pt3dadd( 5.34889, 287.537, -11.8477, 1.4 ) }
    dend_23 { pt3dadd( 5.3836, 288.101, -11.9722, 1.18 ) }
    dend_23 { pt3dadd( 5.43187, 288.862, -12.1528, 0.44 ) }
    dend_23 { pt3dadd( 5.51378, 290.057, -12.4804, 0.22 ) }
    dend_23 { pt3dadd( 5.59927, 290.852, -12.7173, 0.74 ) }
    dend_23 { pt3dadd( 5.66152, 291.338, -12.8557, 1.33 ) }
    dend_23 { pt3dadd( 5.67086, 291.404, -12.8746, 1.33 ) }
    dend_23 { pt3dadd( 5.79347, 292.24, -13.0961, 1.62 ) }
    dend_23 { pt3dadd( 5.86472, 292.695, -13.2053, 1.62 ) }
    dend_23 { pt3dadd( 6.18681, 294.563, -13.603, 0.29 ) }
    dend_23 { pt3dadd( 6.39352, 295.804, -13.834, 0.29 ) }
    dend_23 { pt3dadd( 6.40448, 295.884, -13.8474, 0.29 ) }
    dend_23 { pt3dadd( 6.53438, 297.259, -14.0361, 0.29 ) }
    dend_23 { pt3dadd( 6.56045, 297.934, -14.0973, 1.03 ) }
    dend_23 { pt3dadd( 6.5587, 298.029, -14.1022, 1.03 ) }
    dend_23 { pt3dadd( 6.48931, 298.797, -14.1227, 1.18 ) }
    dend_23 { pt3dadd( 6.32043, 300.168, -14.1407, 0.29 ) }
    dend_23 { pt3dadd( 6.1836, 301.259, -14.1488, 0.29 ) }
    dend_23 { pt3dadd( 6.04848, 302.265, -14.149, 1.18 ) }
    dend_23 { pt3dadd( 5.9974, 302.7, -14.1489, 1.47 ) }
    dend_23 { pt3dadd( 5.92939, 303.354, -14.1476, 1.25 ) }
    dend_23 { pt3dadd( 5.8903, 303.888, -14.1473, 1.33 ) }
    dend_23 { pt3dadd( 5.84938, 305.322, -14.1496, 0.22 ) }
    dend_23 { pt3dadd( 5.85504, 305.498, -14.1552, 0.22 ) }
    dend_23 { pt3dadd( 6.01587, 306.79, -14.2201, 0.22 ) }
    dend_23 { pt3dadd( 6.03278, 306.882, -14.2251, 0.22 ) }
    dend_23 { pt3dadd( 6.23342, 307.771, -14.2732, 0.74 ) }
    dend_23 { pt3dadd( 6.33833, 308.196, -14.2941, 1.18 ) }
    dend_23 { pt3dadd( 6.44201, 308.708, -14.3073, 1.18 ) }
    dend_23 { pt3dadd( 6.66613, 310.23, -14.3207, 0.22 ) }
    dend_23 { pt3dadd( 6.67547, 310.31, -14.3204, 0.22 ) }
    dend_23 { pt3dadd( 6.75278, 311.139, -14.3168, 0.66 ) }
    dend_23 { pt3dadd( 6.78157, 311.571, -14.3401, 0.66 ) }
    dend_23 { pt3dadd( 6.87636, 313.077, -14.4993, 0.22 ) }
    dend_23 { pt3dadd( 6.9235, 313.912, -14.6169, 1.25 ) }
    dend_23 { pt3dadd( 6.9617, 314.645, -14.7435, 1.55 ) }
    dend_23 { pt3dadd( 7.01977, 315.458, -14.8981, 1.69 ) }
    dend_23 { pt3dadd( 7.16947, 317.1, -15.2445, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( 7.3301, 318.709, -15.5961, 0.22 ) }
    dend_23 { pt3dadd( 7.40482, 319.4, -15.7529, 0.66 ) }
    dend_23 { pt3dadd( 7.46601, 319.9, -15.8626, 0.81 ) }
    dend_23 { pt3dadd( 7.47518, 319.979, -15.8782, 0.81 ) }
    dend_23 { pt3dadd( 7.66624, 321.691, -16.1532, 0.22 ) }
    dend_23 { pt3dadd( 7.7863, 322.697, -16.2662, 1.03 ) }
    dend_23 { pt3dadd( 7.81131, 322.954, -16.2973, 1.33 ) }
    dend_23 { pt3dadd( 7.94786, 324.5, -16.4853, 0.22 ) }
    dend_23 { pt3dadd( 8.00423, 325.174, -16.5653, 0.81 ) }
    dend_23 { pt3dadd( 8.04628, 325.756, -16.629, 1.03 ) }
    dend_23 { pt3dadd( 8.07529, 326.233, -16.6764, 0.74 ) }
    dend_23 { pt3dadd( 8.15271, 328.045, -16.8446, 0.22 ) }
    dend_23 { pt3dadd( 8.16416, 328.907, -16.9126, 0.44 ) }
    dend_23 { pt3dadd( 8.12963, 329.953, -16.9731, 0.22 ) }
    dend_23 { pt3dadd( 8.09113, 330.883, -17.0191, 1.11 ) }
    dend_23 { pt3dadd( 8.06483, 331.385, -17.0381, 1.33 ) }
    dend_23 { pt3dadd( 8.02352, 332.158, -17.063, 0.37 ) }
    dend_23 { pt3dadd( 7.97793, 333.163, -17.0859, 0.15 ) }
    dend_23 { pt3dadd( 7.95796, 333.919, -17.1171, 0.74 ) }
    dend_23 { pt3dadd( 7.96278, 334.002, -17.1248, 0.74 ) }
    dend_23 { pt3dadd( 7.99953, 334.338, -17.1658, 0.74 ) }
    dend_23 { pt3dadd( 8.18998, 335.65, -17.3517, 0.22 ) }
    dend_23 { pt3dadd( 8.31314, 336.384, -17.4639, 1.18 ) }
    dend_23 { pt3dadd( 8.40707, 336.907, -17.5498, 1.62 ) }
    dend_23 { pt3dadd( 8.81178, 339.262, -17.9397, 0.22 ) }
    dend_23 { pt3dadd( 8.93072, 340.007, -18.0608, 0.29 ) }
    dend_23 { pt3dadd( 8.9423, 340.089, -18.0736, 0.29 ) }
    dend_23 { pt3dadd( 9.06277, 341.085, -18.2161, 0.29 ) }
    dend_23 { pt3dadd( 9.16388, 342.052, -18.3525, 0.59 ) }
    dend_23 { pt3dadd( 9.19951, 342.716, -18.448, 1.11 ) }
    dend_23 { pt3dadd( 9.20134, 342.83, -18.4639, 1.11 ) }
    dend_23 { pt3dadd( 9.2233, 343.492, -18.56, 1.55 ) }
    dend_23 { pt3dadd( 9.24761, 344.216, -18.6634, 1.55 ) }
    dend_23 { pt3dadd( 9.24972, 344.284, -18.6727, 1.55 ) }
    dend_23 { pt3dadd( 9.3024, 346.542, -18.951, 0.22 ) }
    dend_23 { pt3dadd( 9.34965, 348.177, -19.1391, 0.22 ) }
    dend_23 { pt3dadd( 9.43322, 349.31, -19.2776, 1.4 ) }
    dend_23 { pt3dadd( 9.46117, 349.569, -19.3101, 1.77 ) }
    dend_23 { pt3dadd( 9.55639, 350.321, -19.4014, 1.4 ) }
    dend_23 { pt3dadd( 9.70949, 351.226, -19.5122, 0.74 ) }
    dend_23 { pt3dadd( 9.97285, 352.411, -19.6588, 0.29 ) }
    dend_23 { pt3dadd( 10.52, 354.528, -19.9524, 0.22 ) }
    dend_23 { pt3dadd( 10.7567, 355.369, -20.0768, 0.66 ) }
    dend_23 { pt3dadd( 10.8791, 355.772, -20.1409, 0.66 ) }
    dend_23 { pt3dadd( 11.2263, 356.792, -20.3172, 0.22 ) }
    dend_23 { pt3dadd( 11.2547, 356.87, -20.3289, 0.22 ) }
    dend_23 { pt3dadd( 11.4879, 357.544, -20.3979, 0.52 ) }
    dend_23 { pt3dadd( 11.5146, 357.633, -20.4009, 0.52 ) }
    dend_23 { pt3dadd( 11.6368, 358.044, -20.4061, 0.52 ) }
    dend_23 { pt3dadd( 11.8385, 358.618, -20.3775, 0.22 ) }
    dend_23 { pt3dadd( 12.2706, 359.68, -20.2764, 1.03 ) }
    dend_23 { pt3dadd( 12.5428, 360.232, -20.209, 1.62 ) }
    dend_23 { pt3dadd( 12.7952, 360.718, -20.1419, 1.47 ) }
    dend_23 { pt3dadd( 13.165, 361.415, -20.026, 1.33 ) }
    dend_23 { pt3dadd( 14.0648, 363.093, -19.6727, 0.22 ) }
    dend_23 { pt3dadd( 14.6592, 364.18, -19.4173, 1.18 ) }
    dend_23 { pt3dadd( 15.4335, 365.539, -19.0891, 0.22 ) }
    dend_23 { pt3dadd( 15.7665, 366.11, -18.9412, 0.22 ) }
    dend_23 { pt3dadd( 16.2231, 366.884, -18.7333, 0.81 ) }
    dend_23 { pt3dadd( 17.2037, 368.532, -18.2944, 0.22 ) }
    dend_23 { pt3dadd( 17.2424, 368.603, -18.276, 0.22 ) }
    dend_23 { pt3dadd( 17.5124, 369.13, -18.1289, 0.81 ) }
    dend_23 { pt3dadd( 17.547, 369.202, -18.1089, 0.81 ) }
    dend_23 { pt3dadd( 17.7228, 369.516, -18.0275, 1.11 ) }
    dend_23 { pt3dadd( 18.0232, 370.001, -17.9715, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -26.6003, -38.1716, 21.0238, 0.29 ) }
    dend_18 { pt3dadd( -27.8114, -38.2056, 21.8499, 0.29 ) }
    dend_18 { pt3dadd( -29.1644, -38.2626, 23.0281, 0.29 ) }
    dend_18 { pt3dadd( -29.8321, -38.3528, 23.5698, 0.59 ) }
    dend_18 { pt3dadd( -30.9242, -38.6336, 24.3443, 0.59 ) }
    dend_18 { pt3dadd( -31.0363, -38.6718, 24.4081, 0.59 ) }
    dend_18 { pt3dadd( -32.906, -39.3929, 25.3286, 0.59 ) }
    dend_18 { pt3dadd( -32.9688, -39.4218, 25.3652, 0.59 ) }
    dend_18 { pt3dadd( -33.8168, -39.9086, 25.9969, 0.37 ) }
    dend_18 { pt3dadd( -34.5028, -40.377, 26.5262, 0.29 ) }
    dend_18 { pt3dadd( -35.1156, -40.8258, 26.974, 0.29 ) }
    dend_18 { pt3dadd( -35.1612, -40.8608, 27.0075, 0.29 ) }
    dend_18 { pt3dadd( -36.2905, -41.8314, 27.8643, 0.74 ) }
    dend_18 { pt3dadd( -36.5621, -42.0935, 28.1378, 1.03 ) }
    dend_18 { pt3dadd( -37.1721, -42.81, 28.9646, 0.29 ) }
    dend_18 { pt3dadd( -37.2369, -42.8958, 29.0599, 0.29 ) }
    dend_18 { pt3dadd( -37.6226, -43.4528, 29.6124, 0.37 ) }
    dend_18 { pt3dadd( -37.9151, -43.8682, 29.9581, 0.52 ) }
    dend_18 { pt3dadd( -38.1649, -44.219, 30.1628, 0.52 ) }
    dend_18 { pt3dadd( -38.7609, -44.7951, 30.4461, 0.29 ) }
    dend_18 { pt3dadd( -39.5416, -45.2364, 30.6437, 0.29 ) }
    dend_18 { pt3dadd( -40.0136, -45.4008, 30.734, 0.59 ) }
    dend_18 { pt3dadd( -40.3509, -45.4729, 30.7859, 0.88 ) }
    dend_18 { pt3dadd( -40.6917, -45.5325, 30.8317, 1.03 ) }
    dend_18 { pt3dadd( -42.2815, -45.8075, 31.1147, 0.29 ) }
    dend_18 { pt3dadd( -43.2456, -45.9716, 31.3376, 0.44 ) }
    dend_18 { pt3dadd( -43.8026, -46.109, 31.5095, 0.74 ) }
    dend_18 { pt3dadd( -43.9044, -46.1488, 31.5458, 0.74 ) }
    dend_18 { pt3dadd( -44.4964, -46.424, 31.7802, 0.66 ) }
    dend_18 { pt3dadd( -45.4731, -46.9841, 32.2321, 0.66 ) }
    dend_18 { pt3dadd( -45.5273, -47.0284, 32.2651, 0.66 ) }
    dend_18 { pt3dadd( -45.9472, -47.4221, 32.5268, 0.29 ) }
    dend_18 { pt3dadd( -46.7965, -48.2954, 33.1018, 0.22 ) }
    dend_18 { pt3dadd( -54.472, -53.2177, 39.5008, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -26.6003, -38.1716, 21.0238, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -27.5884, -37.2583, 22.6878, 0.74 ) }
    dend_15 { pt3dadd( -28.8836, -36.0962, 24.5702, 0.66 ) }
    dend_15 { pt3dadd( -28.9658, -36.0224, 24.6898, 0.66 ) }
    dend_15 { pt3dadd( -29.3493, -35.6784, 25.2471, 0.66 ) }
    dend_15 { pt3dadd( -29.3948, -35.6375, 25.3133, 0.66 ) }
    dend_15 { pt3dadd( -29.6878, -35.3746, 25.7392, 0.52 ) }
    dend_15 { pt3dadd( -29.9488, -35.0511, 25.9872, 0.52 ) }
    dend_15 { pt3dadd( -37.0877, -30.0122, 34.7822, 0.52 ) }
    dend_15 { pt3dadd( -43.2547, -23.9238, 43.5849, 0.52 ) }
    dend_15 { pt3dadd( -48.8894, -19.8171, 53.885, 0.52 ) }
    dend_15 { pt3dadd( -52.2606, -14.4797, 64.5569, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.55225, -16.9271, 1.09878, 0.96 ) }
    dend_7 { pt3dadd( -5.96272, -17.8924, 1.10276, 0.96 ) }
    dend_7 { pt3dadd( -6.325, -18.8538, 1.11499, 0.96 ) }
    dend_7 { pt3dadd( -6.35781, -18.9632, 1.11807, 0.96 ) }
    dend_7 { pt3dadd( -6.48924, -19.5275, 1.12261, 0.96 ) }
    dend_7 { pt3dadd( -6.68371, -20.4973, 1.1217, 1.11 ) }
    dend_7 { pt3dadd( -6.87238, -21.6609, 1.08252, 1.11 ) }
    dend_7 { pt3dadd( -6.87681, -21.7167, 1.08066, 1.11 ) }
    dend_7 { pt3dadd( -6.91794, -22.8773, 1.03457, 1.03 ) }
    dend_7 { pt3dadd( -6.93206, -23.7156, 0.992394, 1.99 ) }
    dend_7 { pt3dadd( -6.93093, -23.7715, 0.988274, 1.99 ) }
    dend_7 { pt3dadd( -6.8813, -24.5453, 0.889967, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.55225, -16.9271, 1.09878, 1.92 ) }
    dend_2 { pt3dadd( -5.32048, -18.2702, 1.43205, 1.92 ) }
    dend_2 { pt3dadd( -5.10126, -19.4793, 1.72804, 1.92 ) }
    dend_2 { pt3dadd( -4.89574, -20.5795, 1.99313, 1.92 ) }
    dend_2 { pt3dadd( -4.70959, -21.5997, 2.23171, 2.14 ) }
    dend_2 { pt3dadd( -4.52566, -22.5569, 2.45379, 1.62 ) }
    dend_2 { pt3dadd( -4.32337, -23.5167, 2.67553, 1.99 ) }
    dend_2 { pt3dadd( -4.16145, -24.1624, 2.81501, 2.73 ) }
    dend_2 { pt3dadd( -3.95189, -24.879, 2.97996, 2.36 ) }
    dend_2 { pt3dadd( -3.69362, -25.6703, 3.1988, 1.99 ) }
    dend_2 { pt3dadd( -3.32573, -26.6965, 3.52825, 1.92 ) }
    dend_2 { pt3dadd( -3.08468, -27.3042, 3.75114, 2.28 ) }
    dend_2 { pt3dadd( -2.83949, -27.9098, 4.00757, 2.5 ) }
    dend_2 { pt3dadd( -2.61482, -28.4851, 4.28327, 2.58 ) }
    dend_2 { pt3dadd( -2.28995, -29.4121, 4.79712, 1.69 ) }
    dend_2 { pt3dadd( -2.27943, -29.4465, 4.81789, 1.69 ) }
    dend_2 { pt3dadd( -2.10191, -30.2668, 5.31088, 1.47 ) }
    dend_2 { pt3dadd( -1.95788, -31.4227, 5.97327, 1.25 ) }
    dend_2 { pt3dadd( -1.93232, -32.0746, 6.31728, 1.62 ) }
    dend_2 { pt3dadd( -1.9578, -32.7695, 6.64024, 1.62 ) }
    dend_2 { pt3dadd( -2.03484, -33.5217, 6.93168, 1.25 ) }
    dend_2 { pt3dadd( -2.18289, -34.3877, 7.21796, 1.25 ) }
    dend_2 { pt3dadd( -2.41718, -35.2357, 7.4274, 1.77 ) }
    dend_2 { pt3dadd( -2.59482, -35.7129, 7.49149, 1.92 ) }
    dend_2 { pt3dadd( -2.82143, -36.2563, 7.52068, 1.92 ) }
    dend_2 { pt3dadd( -3.0619, -36.7851, 7.51823, 2.06 ) }
    dend_2 { pt3dadd( -3.37987, -37.4221, 7.49781, 1.92 ) }
    dend_2 { pt3dadd( -3.7936, -38.2263, 7.4572, 1.77 ) }
    dend_2 { pt3dadd( -4.23265, -39.0902, 7.40305, 1.55 ) }
    dend_2 { pt3dadd( -4.75484, -40.1416, 7.3416, 1.4 ) }
    dend_2 { pt3dadd( -5.16384, -40.9797, 7.31829, 1.4 ) }
    dend_2 { pt3dadd( -5.49498, -41.702, 7.32299, 1.84 ) }
    dend_2 { pt3dadd( -5.72385, -42.2648, 7.36609, 1.77 ) }
    dend_2 { pt3dadd( -5.97497, -43.0251, 7.48466, 1.25 ) }
    dend_2 { pt3dadd( -5.98724, -43.0777, 7.49713, 1.25 ) }
    dend_2 { pt3dadd( -6.13404, -44.0541, 7.80083, 0.88 ) }
    dend_2 { pt3dadd( -6.15439, -44.5251, 7.9726, 1.62 ) }
    dend_2 { pt3dadd( -6.11365, -45.3727, 8.3003, 1.92 ) }
    dend_2 { pt3dadd( -6.03386, -46.1148, 8.58148, 1.92 ) }
    dend_2 { pt3dadd( -5.94363, -46.817, 8.82529, 1.77 ) }
    dend_2 { pt3dadd( -5.93788, -46.8632, 8.83895, 1.77 ) }
    dend_2 { pt3dadd( -5.81583, -47.8357, 9.07443, 1.62 ) }
    dend_2 { pt3dadd( -5.72953, -48.6249, 9.21389, 1.33 ) }
    dend_2 { pt3dadd( -5.65416, -49.3707, 9.30228, 1.18 ) }
    dend_2 { pt3dadd( -5.592, -50.0842, 9.36976, 1.18 ) }
    dend_2 { pt3dadd( -5.53085, -50.8949, 9.42986, 1.55 ) }
    dend_2 { pt3dadd( -5.48328, -51.896, 9.46949, 1.62 ) }
    dend_2 { pt3dadd( -5.47824, -52.7704, 9.47236, 2.14 ) }
    dend_2 { pt3dadd( -5.49762, -53.4341, 9.46127, 2.36 ) }
    dend_2 { pt3dadd( -5.52955, -54.0633, 9.44456, 2.58 ) }
    dend_2 { pt3dadd( -5.55736, -54.5306, 9.43495, 3.02 ) }
    dend_2 { pt3dadd( -5.63303, -55.6458, 9.44411, 2.21 ) }
    dend_2 { pt3dadd( -5.69204, -56.627, 9.48648, 1.77 ) }
    dend_2 { pt3dadd( -5.7354, -57.5111, 9.55757, 1.77 ) }
    dend_2 { pt3dadd( -5.76343, -58.4879, 9.68128, 1.84 ) }
    dend_2 { pt3dadd( -5.7663, -59.6243, 9.91435, 1.84 ) }
    dend_2 { pt3dadd( -5.73683, -60.7641, 10.2377, 1.18 ) }
    dend_2 { pt3dadd( -5.6576, -61.935, 10.6734, 0.96 ) }
    dend_2 { pt3dadd( -5.65384, -61.9797, 10.6957, 0.96 ) }
    dend_2 { pt3dadd( -5.58862, -62.7309, 11.2076, 1.33 ) }
    dend_2 { pt3dadd( -5.52086, -63.4678, 11.8286, 1.84 ) }
    dend_2 { pt3dadd( -5.48364, -64.0327, 12.3571, 1.84 ) }
    dend_2 { pt3dadd( -5.46066, -64.5865, 12.8685, 1.77 ) }
    dend_2 { pt3dadd( -5.44286, -65.6162, 13.7301, 1.69 ) }
    dend_2 { pt3dadd( -5.43108, -66.6206, 14.4131, 0.74 ) }
    dend_2 { pt3dadd( -5.43134, -67.2156, 14.7137, 0.74 ) }
    dend_2 { pt3dadd( -5.43274, -67.9726, 14.9954, 1.18 ) }
    dend_2 { pt3dadd( -5.43112, -68.6997, 15.1777, 1.47 ) }
    dend_2 { pt3dadd( -5.42377, -69.4267, 15.2364, 1.62 ) }
    dend_2 { pt3dadd( -5.41187, -69.9805, 15.177, 1.92 ) }
    dend_2 { pt3dadd( -5.41242, -70.4253, 15.0928, 1.92 ) }
    dend_2 { pt3dadd( -5.41361, -70.4658, 15.0853, 1.92 ) }
    dend_2 { pt3dadd( -5.44211, -71.0001, 15.0045, 1.92 ) }
    dend_2 { pt3dadd( -5.51205, -71.7691, 14.9285, 1.33 ) }
    dend_2 { pt3dadd( -5.61334, -72.5267, 14.8655, 1.47 ) }
    dend_2 { pt3dadd( -5.72628, -73.2947, 14.8109, 1.92 ) }
    dend_2 { pt3dadd( -5.80245, -73.8595, 14.7796, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -5.89379, -74.6171, 14.755, 1.99 ) }
    dend_2 { pt3dadd( -5.97405, -75.5573, 14.7563, 1.99 ) }
    dend_2 { pt3dadd( -6.01782, -76.6387, 14.7913, 1.99 ) }
    dend_2 { pt3dadd( -6.01632, -76.8947, 14.81, 2.36 ) }
    dend_2 { pt3dadd( -5.99235, -77.5049, 14.8614, 1.62 ) }
    dend_2 { pt3dadd( -5.94941, -78.1492, 14.9241, 1.25 ) }
    dend_2 { pt3dadd( -5.87693, -78.9489, 15.0102, 1.11 ) }
    dend_2 { pt3dadd( -5.82181, -79.6251, 15.0825, 0.81 ) }
    dend_2 { pt3dadd( -5.7728, -80.5055, 15.1817, 0.66 ) }
    dend_2 { pt3dadd( -5.77422, -81.2683, 15.2574, 1.55 ) }
    dend_2 { pt3dadd( -5.77661, -81.3179, 15.2618, 1.55 ) }
    dend_2 { pt3dadd( -5.82046, -81.7222, 15.3256, 2.21 ) }
    dend_2 { pt3dadd( -5.90969, -82.2856, 15.4446, 1.92 ) }
    dend_2 { pt3dadd( -6.03729, -83.024, 15.6334, 1.62 ) }
    dend_2 { pt3dadd( -6.16068, -83.7053, 15.8346, 1.4 ) }
    dend_2 { pt3dadd( -6.29815, -84.4515, 16.1265, 1.4 ) }
    dend_2 { pt3dadd( -6.51946, -85.619, 16.6504, 1.33 ) }
    dend_2 { pt3dadd( -6.61589, -86.1904, 16.9361, 0.96 ) }
    dend_2 { pt3dadd( -6.72495, -87.0479, 17.402, 0.74 ) }
    dend_2 { pt3dadd( -6.72944, -87.0992, 17.4333, 0.74 ) }
    dend_2 { pt3dadd( -6.75752, -88.2568, 18.208, 0.66 ) }
    dend_2 { pt3dadd( -6.75321, -88.2945, 18.2385, 0.66 ) }
    dend_2 { pt3dadd( -6.56172, -89.0455, 18.8883, 1.69 ) }
    dend_2 { pt3dadd( -6.43689, -89.4612, 19.2635, 2.21 ) }
    dend_2 { pt3dadd( -6.24372, -90.1136, 19.834, 3.02 ) }
    dend_2 { pt3dadd( -6.13235, -90.5449, 20.1744, 3.02 ) }
    dend_2 { pt3dadd( -5.8348, -91.9438, 21.1231, 0.52 ) }
    dend_2 { pt3dadd( -5.77079, -92.4778, 21.4108, 0.52 ) }
    dend_2 { pt3dadd( -5.75364, -93.1551, 21.6821, 2.36 ) }
    dend_2 { pt3dadd( -5.78168, -93.8057, 21.8542, 3.09 ) }
    dend_2 { pt3dadd( -5.813, -94.1234, 21.897, 3.24 ) }
    dend_2 { pt3dadd( -5.90599, -94.7744, 21.935, 3.02 ) }
    dend_2 { pt3dadd( -6.1632, -96.2253, 21.9113, 1.11 ) }
    dend_2 { pt3dadd( -6.2852, -96.984, 21.905, 0.96 ) }
    dend_2 { pt3dadd( -6.35641, -97.542, 21.9072, 1.25 ) }
    dend_2 { pt3dadd( -6.42583, -98.3043, 21.9424, 1.18 ) }
    dend_2 { pt3dadd( -6.45703, -98.8767, 21.9972, 0.52 ) }
    dend_2 { pt3dadd( -6.45729, -98.9259, 22.0053, 0.52 ) }
    dend_2 { pt3dadd( -6.40778, -99.4474, 22.1597, 1.4 ) }
    dend_2 { pt3dadd( -6.39911, -99.4854, 22.1734, 1.4 ) }
    dend_2 { pt3dadd( -6.16387, -100.118, 22.4284, 2.14 ) }
    dend_2 { pt3dadd( -5.97158, -100.558, 22.6042, 2.14 ) }
    dend_2 { pt3dadd( -5.83325, -100.879, 22.7188, 2.36 ) }
    dend_2 { pt3dadd( -5.59417, -101.484, 22.9121, 1.33 ) }
    dend_2 { pt3dadd( -5.33009, -102.223, 23.1056, 0.81 ) }
    dend_2 { pt3dadd( -5.03716, -103.165, 23.2892, 0.81 ) }
    dend_2 { pt3dadd( -4.802, -104.086, 23.4092, 0.81 ) }
    dend_2 { pt3dadd( -4.59903, -105.068, 23.5203, 1.62 ) }
    dend_2 { pt3dadd( -4.50742, -105.595, 23.5757, 1.92 ) }
    dend_2 { pt3dadd( -4.39596, -106.405, 23.6884, 1.25 ) }
    dend_2 { pt3dadd( -4.30932, -107.179, 23.821, 0.96 ) }
    dend_2 { pt3dadd( -4.20896, -108.222, 24.0334, 0.96 ) }
    dend_2 { pt3dadd( -4.10522, -109.119, 24.2602, 0.88 ) }
    dend_2 { pt3dadd( -3.98412, -110.03, 24.5448, 1.62 ) }
    dend_2 { pt3dadd( -3.816, -111.068, 24.9207, 1.84 ) }
    dend_2 { pt3dadd( -3.7317, -111.622, 25.1779, 1.92 ) }
    dend_2 { pt3dadd( -3.72542, -111.67, 25.2045, 1.92 ) }
    dend_2 { pt3dadd( -3.6459, -112.39, 25.6319, 1.62 ) }
    dend_2 { pt3dadd( -3.57142, -113.28, 26.1649, 0.59 ) }
    dend_2 { pt3dadd( -3.52675, -113.976, 26.572, 0.59 ) }
    dend_2 { pt3dadd( -3.44969, -115.028, 27.1333, 0.52 ) }
    dend_2 { pt3dadd( -3.40517, -115.724, 27.5182, 1.69 ) }
    dend_2 { pt3dadd( -3.38177, -116.173, 27.7713, 2.5 ) }
    dend_2 { pt3dadd( -3.37561, -116.568, 28.0015, 2.5 ) }
    dend_2 { pt3dadd( -3.36724, -117.043, 28.2785, 2.5 ) }
    dend_2 { pt3dadd( -3.33882, -117.762, 28.6602, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.30583, 86.263, -15.8004, 0.59 ) }
    dend_67 { pt3dadd( -10.0691, 87.0579, -16.4177, 0.59 ) }
    dend_67 { pt3dadd( -10.6354, 87.7887, -16.981, 0.44 ) }
    dend_67 { pt3dadd( -10.5226, 87.9329, -17.5922, 0.74 ) }
    dend_67 { pt3dadd( -10.3356, 88.1728, -18.5467, 0.74 ) }
    dend_67 { pt3dadd( -10.3124, 88.2097, -18.6924, 0.74 ) }
    dend_67 { pt3dadd( -10.2264, 88.4111, -19.4335, 0.88 ) }
    dend_67 { pt3dadd( -10.2181, 88.4281, -19.4994, 0.88 ) }
    dend_67 { pt3dadd( -9.624, 89.8111, -24.7741, 1.62 ) }
    dend_67 { pt3dadd( -9.51417, 90.1978, -26.2742, 1.4 ) }
    dend_67 { pt3dadd( -9.47635, 90.5786, -27.8383, 0.37 ) }
    dend_67 { pt3dadd( -9.49709, 90.7812, -28.6901, 0.74 ) }
    dend_67 { pt3dadd( -9.64787, 91.2157, -30.4753, 0.29 ) }
    dend_67 { pt3dadd( -9.76191, 91.4062, -31.1235, 1.4 ) }
    dend_67 { pt3dadd( -9.95731, 91.6175, -31.663, 1.84 ) }
    dend_67 { pt3dadd( -10.6078, 92.3214, -33.6688, 0.44 ) }
    dend_67 { pt3dadd( -10.7064, 92.4475, -34.0105, 0.29 ) }
    dend_67 { pt3dadd( -10.8628, 92.6483, -34.5814, 0.29 ) }
    dend_67 { pt3dadd( -11.0198, 92.8431, -35.1157, 0.59 ) }
    dend_67 { pt3dadd( -11.545, 93.5585, -37.0207, 0.44 ) }
    dend_67 { pt3dadd( -11.7333, 93.8355, -37.6379, 0.22 ) }
    dend_67 { pt3dadd( -11.8949, 94.0814, -38.0719, 0.74 ) }
    dend_67 { pt3dadd( -12.1484, 94.5252, -38.8518, 0.15 ) }
    dend_67 { pt3dadd( -12.1881, 94.5962, -38.976, 0.15 ) }
    dend_67 { pt3dadd( -12.2866, 94.7731, -39.2563, 0.15 ) }
    dend_67 { pt3dadd( -12.6882, 95.4732, -40.1812, 1.47 ) }
    dend_67 { pt3dadd( -12.9012, 95.8364, -40.6408, 1.62 ) }
    dend_67 { pt3dadd( -13.6869, 97.1593, -42.4159, 0.22 ) }
    dend_67 { pt3dadd( -13.7097, 97.1987, -42.4695, 0.22 ) }
    dend_67 { pt3dadd( -13.9948, 97.6577, -43.1302, 0.22 ) }
    dend_67 { pt3dadd( -14.3741, 98.2285, -43.9937, 1.25 ) }
    dend_67 { pt3dadd( -14.5413, 98.5029, -44.4413, 1.4 ) }
    dend_67 { pt3dadd( -15.0352, 99.3725, -45.8536, 0.22 ) }
    dend_67 { pt3dadd( -15.0638, 99.4324, -45.949, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -15.3902, 100.275, -47.295, 1.47 ) }
    dend_67 { pt3dadd( -15.4775, 100.541, -47.7036, 1.99 ) }
    dend_67 { pt3dadd( -15.8848, 102.046, -49.8324, 0.37 ) }
    dend_67 { pt3dadd( -15.9792, 102.45, -50.3515, 0.29 ) }
    dend_67 { pt3dadd( -16.1306, 103.151, -51.1625, 1.18 ) }
    dend_67 { pt3dadd( -16.2983, 103.963, -52.0312, 0.52 ) }
    dend_67 { pt3dadd( -16.4357, 104.742, -52.7663, 1.55 ) }
    dend_67 { pt3dadd( -16.4835, 105.023, -53.002, 1.84 ) }
    dend_67 { pt3dadd( -16.7914, 106.71, -54.1427, 0.22 ) }
    dend_67 { pt3dadd( -16.7986, 106.766, -54.1783, 0.22 ) }
    dend_67 { pt3dadd( -16.8383, 107.268, -54.4551, 0.22 ) }
    dend_67 { pt3dadd( -16.8115, 107.873, -54.7348, 1.4 ) }
    dend_67 { pt3dadd( -16.8028, 107.943, -54.7641, 1.4 ) }
    dend_67 { pt3dadd( -16.7443, 108.337, -54.9083, 1.4 ) }
    dend_67 { pt3dadd( -16.4452, 109.826, -55.4103, 0.15 ) }
    dend_67 { pt3dadd( -16.3111, 110.453, -55.6435, 0.74 ) }
    dend_67 { pt3dadd( -15.9753, 111.909, -56.2251, 0.15 ) }
    dend_67 { pt3dadd( -15.8487, 112.419, -56.4373, 0.74 ) }
    dend_67 { pt3dadd( -15.777, 112.673, -56.5417, 0.88 ) }
    dend_67 { pt3dadd( -15.3591, 113.947, -57.0344, 0.15 ) }
    dend_67 { pt3dadd( -15.3385, 113.995, -57.0549, 0.15 ) }
    dend_67 { pt3dadd( -15.1508, 114.368, -57.2368, 0.37 ) }
    dend_67 { pt3dadd( -15.0784, 114.454, -57.3175, 0.37 ) }
    dend_67 { pt3dadd( -14.5863, 114.84, -57.886, 0.22 ) }
    dend_67 { pt3dadd( -14.163, 115.127, -58.3778, 0.59 ) }
    dend_67 { pt3dadd( -13.0079, 115.761, -59.73, 1.69 ) }
    dend_67 { pt3dadd( -12.8806, 115.823, -59.8841, 1.69 ) }
    dend_67 { pt3dadd( -10.8627, 116.601, -62.4573, 0.22 ) }
    dend_67 { pt3dadd( -10.4765, 116.707, -62.9719, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.30583, 86.263, -15.8004, 2.65 ) }
    dend_28 { pt3dadd( -9.56198, 87.1632, -15.2218, 2.65 ) }
    dend_28 { pt3dadd( -9.86151, 88.1924, -14.7117, 2.06 ) }
    dend_28 { pt3dadd( -10.4066, 90.026, -13.9706, 1.92 ) }
    dend_28 { pt3dadd( -10.4243, 90.084, -13.9502, 1.92 ) }
    dend_28 { pt3dadd( -10.7638, 91.1397, -13.636, 0.74 ) }
    dend_28 { pt3dadd( -11.2669, 92.6751, -13.2269, 0.52 ) }
    dend_28 { pt3dadd( -11.7165, 93.885, -12.9862, 0.52 ) }
    dend_28 { pt3dadd( -11.9273, 94.4638, -12.9273, 0.52 ) }
    dend_28 { pt3dadd( -11.9999, 94.7103, -12.9326, 0.52 ) }
    dend_28 { pt3dadd( -12.1989, 95.4876, -12.9519, 0.52 ) }
    dend_28 { pt3dadd( -12.2235, 95.6088, -12.9548, 0.52 ) }
    dend_28 { pt3dadd( -12.3392, 96.5115, -12.9674, 0.44 ) }
    dend_28 { pt3dadd( -12.4186, 97.2279, -12.9354, 0.44 ) }
    dend_28 { pt3dadd( -12.5301, 98.5964, -12.8381, 1.84 ) }
    dend_28 { pt3dadd( -12.6255, 99.7153, -12.7159, 2.73 ) }
    dend_28 { pt3dadd( -12.6804, 100.31, -12.6336, 3.54 ) }
    dend_28 { pt3dadd( -12.7668, 101.092, -12.5134, 3.9 ) }
    dend_28 { pt3dadd( -12.8509, 101.715, -12.4084, 4.05 ) }
    dend_28 { pt3dadd( -12.9442, 102.301, -12.3203, 3.9 ) }
    dend_28 { pt3dadd( -13.1505, 103.379, -12.1906, 3.61 ) }
    dend_28 { pt3dadd( -13.3328, 104.132, -12.1202, 2.8 ) }
    dend_28 { pt3dadd( -13.561, 104.973, -12.0641, 1.69 ) }
    dend_28 { pt3dadd( -13.8413, 105.962, -12.007, 1.11 ) }
    dend_28 { pt3dadd( -14.167, 107.073, -11.959, 0.81 ) }
    dend_28 { pt3dadd( -14.3485, 107.678, -11.9475, 0.66 ) }
    dend_28 { pt3dadd( -14.7161, 108.96, -11.9711, 0.52 ) }
    dend_28 { pt3dadd( -15.0606, 110.078, -11.9997, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -54.472, -53.2177, 39.5008, 0.37 ) }
    dend_20 { pt3dadd( -60.1299, -56.4022, 43.7742, 0.37 ) }
    dend_20 { pt3dadd( -64.7057, -61.0533, 47.8638, 0.37 ) }
    dend_20 { pt3dadd( -69.6153, -64.6332, 52.6948, 0.37 ) }
    dend_20 { pt3dadd( -73.2088, -68.3994, 58.4608, 0.37 ) }
    dend_20 { pt3dadd( -78.2982, -71.8724, 63.188, 0.37 ) }
    dend_20 { pt3dadd( -83.3018, -75.0134, 68.2548, 0.37 ) }
    dend_20 { pt3dadd( -88.1238, -79.5575, 72.1848, 0.37 ) }
    dend_20 { pt3dadd( -94.3096, -82.8222, 75.545, 0.37 ) }
    dend_20 { pt3dadd( -101.623, -84.3999, 77.7952, 0.37 ) }
    dend_20 { pt3dadd( -109.097, -86.0517, 79.3294, 0.37 ) }
    dend_20 { pt3dadd( -116.439, -86.5606, 82.0255, 0.37 ) }
    dend_20 { pt3dadd( -123.818, -86.8434, 84.66, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -54.472, -53.2177, 39.5008, 0.29 ) }
    dend_19 { pt3dadd( -62.0921, -57.3797, 44.8146, 0.37 ) }
    dend_19 { pt3dadd( -68.7464, -62.1776, 50.8, 0.37 ) }
    dend_19 { pt3dadd( -75.75, -67.8786, 55.3156, 0.37 ) }
    dend_19 { pt3dadd( -82.9753, -74.0694, 58.574, 0.37 ) }
    dend_19 { pt3dadd( -90.3181, -80.3855, 61.2361, 0.37 ) }
    dend_19 { pt3dadd( -96.9517, -86.7597, 65.2864, 0.37 ) }
    dend_19 { pt3dadd( -102.995, -94.0006, 68.5684, 0.37 ) }
    dend_19 { pt3dadd( -108.746, -101.917, 70.1989, 0.37 ) }
    dend_19 { pt3dadd( -116.232, -108.542, 70.7168, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -52.2606, -14.4797, 64.5569, 0.37 ) }
    dend_17 { pt3dadd( -56.7158, -10.0818, 73.144, 0.37 ) }
    dend_17 { pt3dadd( -61.9502, -5.65991, 81.2672, 0.37 ) }
    dend_17 { pt3dadd( -67.8443, -0.109262, 88.0691, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -52.2606, -14.4797, 64.5569, 0.29 ) }
    dend_16 { pt3dadd( -54.8348, -12.1478, 68.6623, 0.37 ) }
    dend_16 { pt3dadd( -57.2264, -9.51205, 72.6814, 0.37 ) }
    dend_16 { pt3dadd( -58.6778, -7.31444, 77.389, 0.37 ) }
    dend_16 { pt3dadd( -59.7466, -5.55553, 82.3853, 0.37 ) }
    dend_16 { pt3dadd( -61.0278, -4.42907, 87.5151, 0.37 ) }
    dend_16 { pt3dadd( -62.9334, -3.21718, 92.4262, 0.37 ) }
    dend_16 { pt3dadd( -65.1886, -2.07904, 97.2048, 0.37 ) }
    dend_16 { pt3dadd( -67.3797, -0.799959, 101.977, 0.37 ) }
    dend_16 { pt3dadd( -70.0414, 0.983296, 106.315, 0.37 ) }
    dend_16 { pt3dadd( -72.8165, 2.74344, 110.591, 0.37 ) }
    dend_16 { pt3dadd( -75.2777, 4.63052, 115.002, 0.37 ) }
    dend_16 { pt3dadd( -77.1692, 6.11017, 119.843, 0.37 ) }
    dend_16 { pt3dadd( -79.2564, 7.84196, 124.511, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.8813, -24.5453, 0.889967, 0.59 ) }
    dend_13 { pt3dadd( -7.21743, -24.9639, 0.578011, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -7.8249, -25.5014, 0.102738, 0.44 ) }
    dend_13 { pt3dadd( -8.51379, -25.914, -0.441687, 0.29 ) }
    dend_13 { pt3dadd( -8.89785, -26.0852, -0.716713, 0.22 ) }
    dend_13 { pt3dadd( -9.37855, -26.2823, -1.04025, 0.29 ) }
    dend_13 { pt3dadd( -9.96091, -26.5171, -1.41318, 0.29 ) }
    dend_13 { pt3dadd( -10.7093, -26.7742, -1.83707, 0.29 ) }
    dend_13 { pt3dadd( -11.5649, -27.0567, -2.31148, 0.29 ) }
    dend_13 { pt3dadd( -12.2229, -27.3014, -2.67989, 0.29 ) }
    dend_13 { pt3dadd( -13.07, -27.6906, -3.17723, 1.25 ) }
    dend_13 { pt3dadd( -13.3214, -27.8434, -3.33287, 1.77 ) }
    dend_13 { pt3dadd( -13.6977, -28.1459, -3.58021, 1.77 ) }
    dend_13 { pt3dadd( -14.7308, -29.1493, -4.27497, 1.11 ) }
    dend_13 { pt3dadd( -15.2889, -29.7941, -4.6726, 0.52 ) }
    dend_13 { pt3dadd( -15.6597, -30.296, -4.99392, 0.37 ) }
    dend_13 { pt3dadd( -16.1099, -30.9991, -5.47715, 0.37 ) }
    dend_13 { pt3dadd( -16.4116, -31.5294, -5.85446, 0.37 ) }
    dend_13 { pt3dadd( -16.4603, -31.6199, -5.92048, 0.37 ) }
    dend_13 { pt3dadd( -16.861, -32.3691, -6.46202, 1.25 ) }
    dend_13 { pt3dadd( -17.1298, -32.8205, -6.83916, 1.18 ) }
    dend_13 { pt3dadd( -17.6541, -33.519, -7.49767, 0.29 ) }
    dend_13 { pt3dadd( -17.9271, -33.7744, -7.76406, 0.22 ) }
    dend_13 { pt3dadd( -18.3277, -34.0814, -8.06752, 0.22 ) }
    dend_13 { pt3dadd( -18.6545, -34.3169, -8.26189, 0.44 ) }
    dend_13 { pt3dadd( -19.0029, -34.5452, -8.41367, 0.44 ) }
    dend_13 { pt3dadd( -19.3716, -34.7797, -8.52609, 0.29 ) }
    dend_13 { pt3dadd( -19.7554, -35.0128, -8.63251, 0.29 ) }
    dend_13 { pt3dadd( -20.3127, -35.3642, -8.86693, 0.37 ) }
    dend_13 { pt3dadd( -20.7429, -35.6518, -9.08785, 0.37 ) }
    dend_13 { pt3dadd( -21.2309, -35.9599, -9.3721, 0.29 ) }
    dend_13 { pt3dadd( -22.1103, -36.4647, -9.94391, 1.18 ) }
    dend_13 { pt3dadd( -22.7588, -36.8184, -10.3768, 1.99 ) }
    dend_13 { pt3dadd( -23.3959, -37.1397, -10.8047, 2.28 ) }
    dend_13 { pt3dadd( -23.7918, -37.3302, -11.063, 1.99 ) }
    dend_13 { pt3dadd( -24.791, -37.8426, -11.6967, 0.59 ) }
    dend_13 { pt3dadd( -25.4501, -38.2491, -12.0985, 0.37 ) }
    dend_13 { pt3dadd( -25.9319, -38.6484, -12.3958, 0.37 ) }
    dend_13 { pt3dadd( -26.4502, -39.1342, -12.7093, 1.11 ) }
    dend_13 { pt3dadd( -26.8101, -39.484, -12.9136, 1.69 ) }
    dend_13 { pt3dadd( -27.1947, -39.877, -13.1362, 1.84 ) }
    dend_13 { pt3dadd( -27.7068, -40.4143, -13.4152, 1.4 ) }
    dend_13 { pt3dadd( -28.5832, -41.2623, -13.8485, 0.44 ) }
    dend_13 { pt3dadd( -29.0532, -41.672, -14.0769, 0.44 ) }
    dend_13 { pt3dadd( -29.6468, -42.1479, -14.3468, 0.37 ) }
    dend_13 { pt3dadd( -30.1745, -42.5291, -14.5791, 1.18 ) }
    dend_13 { pt3dadd( -30.6346, -42.8497, -14.7751, 1.62 ) }
    dend_13 { pt3dadd( -31.1133, -43.2098, -14.9688, 1.03 ) }
    dend_13 { pt3dadd( -31.1599, -43.2529, -14.9898, 1.03 ) }
    dend_13 { pt3dadd( -31.391, -43.5321, -15.1226, 0.88 ) }
    dend_13 { pt3dadd( -31.76, -44.052, -15.3917, 0.44 ) }
    dend_13 { pt3dadd( -32.1384, -44.6086, -15.6962, 0.29 ) }
    dend_13 { pt3dadd( -32.4714, -45.1217, -15.9871, 0.29 ) }
    dend_13 { pt3dadd( -33.0702, -46.0595, -16.5299, 1.92 ) }
    dend_13 { pt3dadd( -33.4779, -46.7045, -16.8991, 2.73 ) }
    dend_13 { pt3dadd( -33.8885, -47.3645, -17.2825, 2.65 ) }
    dend_13 { pt3dadd( -34.6926, -48.6051, -18.0167, 0.66 ) }
    dend_13 { pt3dadd( -34.7312, -48.6606, -18.0511, 0.66 ) }
    dend_13 { pt3dadd( -35.3323, -49.4749, -18.5659, 0.29 ) }
    dend_13 { pt3dadd( -35.6022, -49.8269, -18.7761, 0.29 ) }
    dend_13 { pt3dadd( -35.9363, -50.2549, -19.0383, 0.29 ) }
    dend_13 { pt3dadd( -36.3182, -50.7687, -19.3892, 0.29 ) }
    dend_13 { pt3dadd( -36.6662, -51.2442, -19.7529, 1.11 ) }
    dend_13 { pt3dadd( -36.7037, -51.2968, -19.7929, 1.11 ) }
    dend_13 { pt3dadd( -37.0129, -51.7361, -20.12, 1.25 ) }
    dend_13 { pt3dadd( -37.4112, -52.3, -20.5263, 0.96 ) }
    dend_13 { pt3dadd( -38.0955, -53.364, -21.162, 0.37 ) }
    dend_13 { pt3dadd( -38.1245, -53.4162, -21.1906, 0.37 ) }
    dend_13 { pt3dadd( -38.4419, -54.0028, -21.4873, 0.22 ) }
    dend_13 { pt3dadd( -38.6573, -54.401, -21.6714, 0.22 ) }
    dend_13 { pt3dadd( -38.7214, -54.5131, -21.726, 0.66 ) }
    dend_13 { pt3dadd( -39.1765, -55.2784, -22.0771, 0.52 ) }
    dend_13 { pt3dadd( -39.9288, -56.5126, -22.6271, 1.77 ) }
    dend_13 { pt3dadd( -40.47, -57.3892, -23.0197, 2.58 ) }
    dend_13 { pt3dadd( -40.9331, -58.1208, -23.3526, 2.58 ) }
    dend_13 { pt3dadd( -41.8335, -59.5174, -23.9814, 0.44 ) }
    dend_13 { pt3dadd( -42.3151, -60.2372, -24.2919, 0.29 ) }
    dend_13 { pt3dadd( -42.358, -60.2969, -24.3156, 0.29 ) }
    dend_13 { pt3dadd( -42.691, -60.7441, -24.4527, 0.29 ) }
    dend_13 { pt3dadd( -43.2001, -61.438, -24.6322, 1.47 ) }
    dend_13 { pt3dadd( -43.4749, -61.8265, -24.7102, 1.84 ) }
    dend_13 { pt3dadd( -43.8077, -62.3642, -24.7692, 1.47 ) }
    dend_13 { pt3dadd( -44.6058, -63.7831, -24.9075, 0.29 ) }
    dend_13 { pt3dadd( -44.8824, -64.3237, -24.9514, 1.11 ) }
    dend_13 { pt3dadd( -45.0678, -64.7105, -24.9762, 1.25 ) }
    dend_13 { pt3dadd( -45.326, -65.2908, -24.9995, 1.03 ) }
    dend_13 { pt3dadd( -45.6789, -66.1128, -25.023, 0.22 ) }
    dend_13 { pt3dadd( -45.911, -66.6439, -25.0287, 0.22 ) }
    dend_13 { pt3dadd( -46.058, -66.9715, -25.0226, 0.59 ) }
    dend_13 { pt3dadd( -46.2873, -67.4229, -25.0181, 0.74 ) }
    dend_13 { pt3dadd( -46.4452, -67.6921, -25.0275, 0.37 ) }
    dend_13 { pt3dadd( -46.7676, -68.1884, -25.0605, 0.22 ) }
    dend_13 { pt3dadd( -47.2446, -68.8591, -25.1191, 1.55 ) }
    dend_13 { pt3dadd( -47.6876, -69.4803, -25.1788, 2.21 ) }
    dend_13 { pt3dadd( -47.9396, -69.8324, -25.2126, 1.84 ) }
    dend_13 { pt3dadd( -48.7344, -70.9368, -25.3155, 0.22 ) }
    dend_13 { pt3dadd( -49.1444, -71.4948, -25.3656, 0.22 ) }
    dend_13 { pt3dadd( -49.6204, -72.1041, -25.4191, 1.11 ) }
    dend_13 { pt3dadd( -49.9032, -72.4464, -25.447, 1.62 ) }
    dend_13 { pt3dadd( -50.2584, -72.8491, -25.4733, 1.84 ) }
    dend_13 { pt3dadd( -50.8, -73.4443, -25.5007, 1.11 ) }
    dend_13 { pt3dadd( -51.1074, -73.7771, -25.5096, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -51.9155, -74.6527, -25.5401, 0.29 ) }
    dend_13 { pt3dadd( -52.352, -75.1303, -25.5597, 0.59 ) }
    dend_13 { pt3dadd( -53.3759, -76.3158, -25.5907, 0.29 ) }
    dend_13 { pt3dadd( -53.4191, -76.3684, -25.5914, 0.29 ) }
    dend_13 { pt3dadd( -54.11, -77.2501, -25.5922, 1.18 ) }
    dend_13 { pt3dadd( -54.3736, -77.5995, -25.5882, 1.55 ) }
    dend_13 { pt3dadd( -54.6183, -77.9526, -25.5774, 1.55 ) }
    dend_13 { pt3dadd( -55.2639, -78.9544, -25.5894, 0.52 ) }
    dend_13 { pt3dadd( -55.8055, -79.8734, -25.6528, 0.37 ) }
    dend_13 { pt3dadd( -55.8375, -79.9325, -25.6602, 0.37 ) }
    dend_13 { pt3dadd( -56.2075, -80.6922, -25.7832, 0.37 ) }
    dend_13 { pt3dadd( -56.504, -81.3367, -25.9046, 0.29 ) }
    dend_13 { pt3dadd( -57.0485, -82.58, -26.172, 1.99 ) }
    dend_13 { pt3dadd( -57.2856, -83.1509, -26.3102, 2.28 ) }
    dend_13 { pt3dadd( -57.8227, -84.5247, -26.6287, 0.22 ) }
    dend_13 { pt3dadd( -58.1474, -85.3239, -26.7961, 0.22 ) }
    dend_13 { pt3dadd( -58.2981, -85.6886, -26.847, 0.74 ) }
    dend_13 { pt3dadd( -58.3242, -85.7505, -26.8511, 0.74 ) }
    dend_13 { pt3dadd( -58.5559, -86.307, -26.8401, 0.74 ) }
    dend_13 { pt3dadd( -58.8615, -87.0642, -26.7977, 0.22 ) }
    dend_13 { pt3dadd( -59.2193, -87.9205, -26.7417, 0.22 ) }
    dend_13 { pt3dadd( -59.8137, -89.2916, -26.6551, 2.14 ) }
    dend_13 { pt3dadd( -59.9482, -89.6022, -26.6366, 2.36 ) }
    dend_13 { pt3dadd( -60.4564, -90.7275, -26.5735, 0.29 ) }
    dend_13 { pt3dadd( -60.6929, -91.2196, -26.5411, 0.22 ) }
    dend_13 { pt3dadd( -61.0227, -91.8438, -26.4978, 0.22 ) }
    dend_13 { pt3dadd( -61.4335, -92.5728, -26.4434, 1.4 ) }
    dend_13 { pt3dadd( -61.6627, -92.9656, -26.4164, 1.77 ) }
    dend_13 { pt3dadd( -61.9848, -93.5309, -26.3646, 1.33 ) }
    dend_13 { pt3dadd( -62.5182, -94.5752, -26.2401, 0.37 ) }
    dend_13 { pt3dadd( -62.8634, -95.3263, -26.1504, 0.22 ) }
    dend_13 { pt3dadd( -63.0661, -95.8418, -26.0908, 0.22 ) }
    dend_13 { pt3dadd( -63.3011, -96.5127, -26.0268, 0.81 ) }
    dend_13 { pt3dadd( -63.4288, -96.906, -25.9949, 0.81 ) }
    dend_13 { pt3dadd( -63.7036, -97.7468, -25.9625, 0.22 ) }
    dend_13 { pt3dadd( -63.8889, -98.23, -25.9786, 0.22 ) }
    dend_13 { pt3dadd( -64.1317, -98.7556, -26.0163, 1.25 ) }
    dend_13 { pt3dadd( -64.3469, -99.1379, -26.0551, 1.77 ) }
    dend_13 { pt3dadd( -64.6041, -99.5498, -26.1037, 1.77 ) }
    dend_13 { pt3dadd( -65.1712, -100.446, -26.2189, 0.44 ) }
    dend_13 { pt3dadd( -65.6951, -101.259, -26.3259, 0.29 ) }
    dend_13 { pt3dadd( -66.1365, -101.96, -26.4253, 1.4 ) }
    dend_13 { pt3dadd( -66.397, -102.372, -26.4846, 1.77 ) }
    dend_13 { pt3dadd( -66.6125, -102.727, -26.5355, 1.77 ) }
    dend_13 { pt3dadd( -67.1976, -103.732, -26.6725, 0.37 ) }
    dend_13 { pt3dadd( -67.6127, -104.499, -26.7625, 0.29 ) }
    dend_13 { pt3dadd( -68.0473, -105.304, -26.8707, 0.22 ) }
    dend_13 { pt3dadd( -68.4335, -105.962, -26.9809, 0.22 ) }
    dend_13 { pt3dadd( -68.9198, -106.721, -27.1236, 1.11 ) }
    dend_13 { pt3dadd( -69.1069, -106.992, -27.1785, 1.4 ) }
    dend_13 { pt3dadd( -69.4908, -107.539, -27.2919, 0.59 ) }
    dend_13 { pt3dadd( -69.9183, -108.173, -27.4224, 0.22 ) }
    dend_13 { pt3dadd( -70.3361, -108.821, -27.55, 0.22 ) }
    dend_13 { pt3dadd( -70.762, -109.468, -27.6853, 1.11 ) }
    dend_13 { pt3dadd( -70.9565, -109.744, -27.7439, 1.55 ) }
    dend_13 { pt3dadd( -71.2448, -110.14, -27.8286, 1.33 ) }
    dend_13 { pt3dadd( -71.7366, -110.795, -27.9651, 0.59 ) }
    dend_13 { pt3dadd( -72.1176, -111.33, -28.0534, 0.22 ) }
    dend_13 { pt3dadd( -72.355, -111.666, -28.0928, 0.66 ) }
    dend_13 { pt3dadd( -72.4802, -111.833, -28.1056, 0.66 ) }
    dend_13 { pt3dadd( -72.61, -111.997, -28.111, 0.66 ) }
    dend_13 { pt3dadd( -73.007, -112.493, -28.1195, 0.22 ) }
    dend_13 { pt3dadd( -73.4553, -113.028, -28.0771, 0.22 ) }
    dend_13 { pt3dadd( -74.0214, -113.688, -27.9818, 1.33 ) }
    dend_13 { pt3dadd( -74.2724, -113.975, -27.9302, 1.62 ) }
    dend_13 { pt3dadd( -74.5425, -114.277, -27.87, 1.33 ) }
    dend_13 { pt3dadd( -75.4024, -115.218, -27.6691, 0.29 ) }
    dend_13 { pt3dadd( -75.9514, -115.783, -27.5504, 0.29 ) }
    dend_13 { pt3dadd( -76.4167, -116.2, -27.4786, 0.29 ) }
    dend_13 { pt3dadd( -76.8668, -116.556, -27.4394, 0.88 ) }
    dend_13 { pt3dadd( -77.181, -116.789, -27.4193, 0.88 ) }
    dend_13 { pt3dadd( -77.5482, -117.043, -27.4052, 0.66 ) }
    dend_13 { pt3dadd( -78.196, -117.479, -27.4023, 0.15 ) }
    dend_13 { pt3dadd( -78.7541, -117.908, -27.4555, 0.15 ) }
    dend_13 { pt3dadd( -79.2741, -118.335, -27.5249, 0.15 ) }
    dend_13 { pt3dadd( -79.5343, -118.546, -27.57, 0.59 ) }
    dend_13 { pt3dadd( -79.5904, -118.586, -27.574, 0.59 ) }
    dend_13 { pt3dadd( -79.8852, -118.794, -27.5734, 0.59 ) }
    dend_13 { pt3dadd( -80.3751, -119.161, -27.5414, 0.22 ) }
    dend_13 { pt3dadd( -80.4367, -119.215, -27.5354, 0.22 ) }
    dend_13 { pt3dadd( -81.1207, -119.827, -27.4651, 0.22 ) }
    dend_13 { pt3dadd( -82.1511, -120.781, -27.3566, 1.77 ) }
    dend_13 { pt3dadd( -82.5147, -121.125, -27.3175, 2.14 ) }
    dend_13 { pt3dadd( -82.9798, -121.568, -27.2763, 1.47 ) }
    dend_13 { pt3dadd( -83.838, -122.459, -27.236, 0.37 ) }
    dend_13 { pt3dadd( -84.5323, -123.254, -27.2378, 0.22 ) }
    dend_13 { pt3dadd( -84.8877, -123.74, -27.2653, 0.81 ) }
    dend_13 { pt3dadd( -85.074, -124.029, -27.3042, 0.96 ) }
    dend_13 { pt3dadd( -85.3661, -124.498, -27.3881, 0.96 ) }
    dend_13 { pt3dadd( -85.8556, -125.348, -27.5725, 0.22 ) }
    dend_13 { pt3dadd( -85.8864, -125.404, -27.5867, 0.22 ) }
    dend_13 { pt3dadd( -86.1806, -126.005, -27.7474, 0.22 ) }
    dend_13 { pt3dadd( -86.4974, -126.684, -27.9214, 0.22 ) }
    dend_13 { pt3dadd( -86.6894, -127.154, -28.0521, 0.96 ) }
    dend_13 { pt3dadd( -86.8548, -127.569, -28.1656, 1.33 ) }
    dend_13 { pt3dadd( -87.0789, -128.088, -28.31, 1.11 ) }
    dend_13 { pt3dadd( -87.4436, -128.849, -28.5757, 0.22 ) }
    dend_13 { pt3dadd( -87.631, -129.195, -28.714, 0.59 ) }
    dend_13 { pt3dadd( -88.1646, -130.137, -29.0798, 0.22 ) }
    dend_13 { pt3dadd( -88.5702, -130.824, -29.3349, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -88.8472, -131.267, -29.5097, 1.4 ) }
    dend_13 { pt3dadd( -89.5356, -132.291, -29.9146, 0.22 ) }
    dend_13 { pt3dadd( -89.9461, -132.842, -30.1236, 0.22 ) }
    dend_13 { pt3dadd( -90.4189, -133.451, -30.3322, 1.99 ) }
    dend_13 { pt3dadd( -90.79, -133.902, -30.4661, 2.5 ) }
    dend_13 { pt3dadd( -91.1793, -134.38, -30.5998, 2.43 ) }
    dend_13 { pt3dadd( -92.1944, -135.624, -30.8919, 0.22 ) }
    dend_13 { pt3dadd( -92.5758, -136.099, -30.9706, 0.29 ) }
    dend_13 { pt3dadd( -93.1071, -136.761, -31.0727, 0.22 ) }
    dend_13 { pt3dadd( -93.4094, -137.15, -31.1242, 0.74 ) }
    dend_13 { pt3dadd( -93.5521, -137.347, -31.1315, 0.74 ) }
    dend_13 { pt3dadd( -94.039, -138.091, -31.0873, 0.15 ) }
    dend_13 { pt3dadd( -94.3566, -138.706, -31.0264, 0.15 ) }
    dend_13 { pt3dadd( -94.4389, -138.899, -31.013, 0.81 ) }
    dend_13 { pt3dadd( -94.6874, -139.531, -31.0014, 1.33 ) }
    dend_13 { pt3dadd( -94.9234, -140.165, -31.0126, 1.33 ) }
    dend_13 { pt3dadd( -94.9455, -140.226, -31.0153, 1.33 ) }
    dend_13 { pt3dadd( -95.2811, -141.167, -31.1483, 0.22 ) }
    dend_13 { pt3dadd( -95.6329, -142.204, -31.3559, 0.22 ) }
    dend_13 { pt3dadd( -95.8918, -143.023, -31.5568, 1.62 ) }
    dend_13 { pt3dadd( -96.0632, -143.556, -31.7075, 1.92 ) }
    dend_13 { pt3dadd( -96.2077, -144.006, -31.8457, 1.92 ) }
    dend_13 { pt3dadd( -96.5802, -145.213, -32.2026, 0.22 ) }
    dend_13 { pt3dadd( -96.7866, -145.904, -32.3986, 0.22 ) }
    dend_13 { pt3dadd( -97.0025, -146.738, -32.648, 0.22 ) }
    dend_13 { pt3dadd( -97.1779, -147.461, -32.872, 1.25 ) }
    dend_13 { pt3dadd( -97.2791, -147.81, -32.9839, 1.62 ) }
    dend_13 { pt3dadd( -97.4378, -148.246, -33.1136, 1.62 ) }
    dend_13 { pt3dadd( -97.4939, -148.371, -33.1483, 1.62 ) }
    dend_13 { pt3dadd( -98.2083, -149.741, -33.5874, 0.22 ) }
    dend_13 { pt3dadd( -98.2702, -149.861, -33.6332, 0.22 ) }
    dend_13 { pt3dadd( -98.6059, -150.58, -33.9291, 0.22 ) }
    dend_13 { pt3dadd( -98.9597, -151.382, -34.2675, 0.22 ) }
    dend_13 { pt3dadd( -99.2348, -151.984, -34.5212, 1.03 ) }
    dend_13 { pt3dadd( -99.3735, -152.281, -34.6446, 1.03 ) }
    dend_13 { pt3dadd( -99.8133, -153.202, -35.0147, 0.22 ) }
    dend_13 { pt3dadd( -100.007, -153.623, -35.1843, 0.59 ) }
    dend_13 { pt3dadd( -100.27, -154.266, -35.4336, 0.22 ) }
    dend_13 { pt3dadd( -100.46, -154.739, -35.597, 0.22 ) }
    dend_13 { pt3dadd( -100.698, -155.366, -35.7676, 1.25 ) }
    dend_13 { pt3dadd( -100.833, -155.727, -35.8525, 1.62 ) }
    dend_13 { pt3dadd( -100.874, -155.838, -35.8745, 1.62 ) }
    dend_13 { pt3dadd( -101.297, -156.977, -36.1158, 0.15 ) }
    dend_13 { pt3dadd( -101.554, -157.737, -36.2758, 1.25 ) }
    dend_13 { pt3dadd( -101.648, -158.048, -36.3401, 1.25 ) }
    dend_13 { pt3dadd( -101.96, -159.039, -36.5608, 0.22 ) }
    dend_13 { pt3dadd( -101.984, -159.098, -36.5768, 0.22 ) }
    dend_13 { pt3dadd( -102.231, -159.601, -36.7309, 0.74 ) }
    dend_13 { pt3dadd( -102.26, -159.649, -36.7491, 0.74 ) }
    dend_13 { pt3dadd( -102.415, -159.874, -36.8271, 0.74 ) }
    dend_13 { pt3dadd( -103.02, -160.736, -37.0709, 0.15 ) }
    dend_13 { pt3dadd( -103.499, -161.437, -37.2186, 1.11 ) }
    dend_13 { pt3dadd( -103.581, -161.563, -37.2444, 1.11 ) }
    dend_13 { pt3dadd( -103.622, -161.627, -37.2566, 1.11 ) }
    dend_13 { pt3dadd( -104.68, -163.228, -37.5724, 0.22 ) }
    dend_13 { pt3dadd( -105.009, -163.711, -37.6723, 1.03 ) }
    dend_13 { pt3dadd( -105.276, -164.094, -37.7512, 1.11 ) }
    dend_13 { pt3dadd( -106.101, -165.229, -38.0108, 0.22 ) }
    dend_13 { pt3dadd( -106.235, -165.405, -38.056, 0.59 ) }
    dend_13 { pt3dadd( -106.882, -166.202, -38.2631, 0.22 ) }
    dend_13 { pt3dadd( -107.209, -166.572, -38.364, 1.33 ) }
    dend_13 { pt3dadd( -107.492, -166.874, -38.433, 1.55 ) }
    dend_13 { pt3dadd( -107.942, -167.316, -38.5079, 0.88 ) }
    dend_13 { pt3dadd( -108.868, -168.214, -38.6022, 0.22 ) }
    dend_13 { pt3dadd( -109.282, -168.619, -38.6359, 0.66 ) }
    dend_13 { pt3dadd( -109.477, -168.808, -38.6745, 0.66 ) }
    dend_13 { pt3dadd( -110.211, -169.503, -38.8785, 0.22 ) }
    dend_13 { pt3dadd( -110.909, -170.161, -39.125, 1.62 ) }
    dend_13 { pt3dadd( -111.428, -170.65, -39.3561, 2.06 ) }
    dend_13 { pt3dadd( -111.876, -171.059, -39.5887, 2.06 ) }
    dend_13 { pt3dadd( -113.433, -172.497, -40.454, 0.22 ) }
    dend_13 { pt3dadd( -113.433, -172.497, -40.454, 0.59 ) }
    dend_13 { pt3dadd( -113.536, -172.585, -40.5082, 0.59 ) }
    dend_13 { pt3dadd( -114.192, -173.1, -40.8132, 0.22 ) }
    dend_13 { pt3dadd( -114.853, -173.559, -41.0599, 0.22 ) }
    dend_13 { pt3dadd( -115.582, -174.016, -41.247, 1.77 ) }
    dend_13 { pt3dadd( -115.999, -174.257, -41.2921, 2.06 ) }
    dend_13 { pt3dadd( -117.616, -175.167, -41.3675, 0.15 ) }
    dend_13 { pt3dadd( -117.942, -175.339, -41.3663, 0.74 ) }
    dend_13 { pt3dadd( -118.314, -175.509, -41.3258, 0.74 ) }
    dend_13 { pt3dadd( -119.123, -175.85, -41.1573, 0.22 ) }
    dend_13 { pt3dadd( -119.821, -176.116, -40.957, 0.22 ) }
    dend_13 { pt3dadd( -120.592, -176.39, -40.6823, 1.18 ) }
    dend_13 { pt3dadd( -120.966, -176.521, -40.5097, 1.55 ) }
    dend_13 { pt3dadd( -122.159, -176.928, -39.9182, 0.29 ) }
    dend_13 { pt3dadd( -123.04, -177.221, -39.4617, 0.22 ) }
    dend_13 { pt3dadd( -123.429, -177.33, -39.2724, 0.74 ) }
    dend_13 { pt3dadd( -123.748, -177.399, -39.1367, 1.03 ) }
    dend_13 { pt3dadd( -124.785, -177.559, -38.7743, 0.15 ) }
    dend_13 { pt3dadd( -125.11, -177.594, -38.6995, 0.37 ) }
    dend_13 { pt3dadd( -125.18, -177.598, -38.6932, 0.37 ) }
    dend_13 { pt3dadd( -126.291, -177.605, -38.6848, 0.22 ) }
    dend_13 { pt3dadd( -127.069, -177.594, -38.7164, 1.18 ) }
    dend_13 { pt3dadd( -127.62, -177.589, -38.7642, 1.55 ) }
    dend_13 { pt3dadd( -128.956, -177.589, -38.9393, 0.22 ) }
    dend_13 { pt3dadd( -129.592, -177.596, -39.0038, 0.22 ) }
    dend_13 { pt3dadd( -130.378, -177.619, -39.058, 0.96 ) }
    dend_13 { pt3dadd( -130.654, -177.629, -39.0596, 1.33 ) }
    dend_13 { pt3dadd( -132.017, -177.672, -39.004, 0.22 ) }
    dend_13 { pt3dadd( -132.581, -177.694, -38.9475, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -133.611, -177.734, -38.7931, 0.96 ) }
    dend_13 { pt3dadd( -133.881, -177.744, -38.7384, 1.25 ) }
    dend_13 { pt3dadd( -135.643, -177.825, -38.3268, 0.22 ) }
    dend_13 { pt3dadd( -136.346, -177.865, -38.1586, 0.22 ) }
    dend_13 { pt3dadd( -137.688, -177.951, -37.8231, 1.84 ) }
    dend_13 { pt3dadd( -137.964, -177.978, -37.7563, 2.36 ) }
    dend_13 { pt3dadd( -139.777, -178.225, -37.3586, 0.22 ) }
    dend_13 { pt3dadd( -140.259, -178.305, -37.2514, 0.66 ) }
    dend_13 { pt3dadd( -140.991, -178.465, -37.1086, 0.22 ) }
    dend_13 { pt3dadd( -141.046, -178.478, -37.0994, 0.22 ) }
    dend_13 { pt3dadd( -141.794, -178.662, -37.0376, 0.96 ) }
    dend_13 { pt3dadd( -142.145, -178.747, -37.0296, 0.96 ) }
    dend_13 { pt3dadd( -142.21, -178.764, -37.0347, 0.96 ) }
    dend_13 { pt3dadd( -143.202, -179.017, -37.1149, 0.22 ) }
    dend_13 { pt3dadd( -143.268, -179.033, -37.1202, 0.22 ) }
    dend_13 { pt3dadd( -144.295, -179.283, -37.2099, 0.22 ) }
    dend_13 { pt3dadd( -144.369, -179.301, -37.2168, 0.22 ) }
    dend_13 { pt3dadd( -145.422, -179.602, -37.2872, 0.22 ) }
    dend_13 { pt3dadd( -145.496, -179.624, -37.2909, 0.22 ) }
    dend_13 { pt3dadd( -145.963, -179.772, -37.3037, 1.11 ) }
    dend_13 { pt3dadd( -146.44, -179.924, -37.3157, 1.4 ) }
    dend_13 { pt3dadd( -146.634, -179.988, -37.3196, 1.69 ) }
    dend_13 { pt3dadd( -148.492, -180.587, -37.3525, 0.22 ) }
    dend_13 { pt3dadd( -148.965, -180.734, -37.3585, 0.66 ) }
    dend_13 { pt3dadd( -149.186, -180.804, -37.3607, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.8813, -24.5453, 0.889967, 2.58 ) }
    dend_8 { pt3dadd( -6.27241, -26.0197, 0.458827, 2.58 ) }
    dend_8 { pt3dadd( -5.81519, -27.6952, -0.0823481, 1.11 ) }
    dend_8 { pt3dadd( -5.49555, -29.1247, -0.52215, 0.66 ) }
    dend_8 { pt3dadd( -5.26692, -30.237, -0.863897, 0.59 ) }
    dend_8 { pt3dadd( -4.90127, -32.0197, -1.43477, 1.25 ) }
    dend_8 { pt3dadd( -4.73721, -32.7681, -1.68198, 1.62 ) }
    dend_8 { pt3dadd( -4.26859, -35.112, -2.4444, 1.11 ) }
    dend_8 { pt3dadd( -3.96301, -36.5055, -2.92433, 1.33 ) }
    dend_8 { pt3dadd( -3.63638, -37.7624, -3.40543, 1.92 ) }
    dend_8 { pt3dadd( -3.21304, -39.0931, -3.95292, 1.99 ) }
    dend_8 { pt3dadd( -2.69763, -40.4627, -4.57658, 1.33 ) }
    dend_8 { pt3dadd( -2.12774, -41.9253, -5.28235, 0.96 ) }
    dend_8 { pt3dadd( -1.47735, -43.5272, -6.0817, 0.96 ) }
    dend_8 { pt3dadd( -1.45648, -43.5848, -6.11349, 0.96 ) }
    dend_8 { pt3dadd( -1.18188, -44.5791, -6.71283, 0.74 ) }
    dend_8 { pt3dadd( -0.98037, -46.0639, -7.80359, 0.52 ) }
    dend_8 { pt3dadd( -1.00417, -47.0784, -8.69133, 0.52 ) }
    dend_8 { pt3dadd( -1.01295, -47.1359, -8.74829, 0.52 ) }
    dend_8 { pt3dadd( -1.18694, -47.9376, -9.58665, 0.88 ) }
    dend_8 { pt3dadd( -1.4127, -48.9602, -10.6337, 1.18 ) }
    dend_8 { pt3dadd( -1.79372, -50.6252, -12.2904, 0.59 ) }
    dend_8 { pt3dadd( -2.02132, -51.6217, -13.1914, 0.59 ) }
    dend_8 { pt3dadd( -2.03183, -51.6744, -13.2356, 0.59 ) }
    dend_8 { pt3dadd( -2.17626, -52.5698, -13.8888, 0.59 ) }
    dend_8 { pt3dadd( -2.3594, -54.0854, -14.7688, 1.55 ) }
    dend_8 { pt3dadd( -2.46372, -55.2058, -15.22, 2.14 ) }
    dend_8 { pt3dadd( -2.53383, -55.8533, -15.4043, 2.36 ) }
    dend_8 { pt3dadd( -2.5446, -55.9194, -15.4217, 2.36 ) }
    dend_8 { pt3dadd( -2.72568, -56.6241, -15.6275, 2.36 ) }
    dend_8 { pt3dadd( -3.04195, -57.4194, -15.9219, 2.06 ) }
    dend_8 { pt3dadd( -3.64827, -58.5584, -16.4143, 1.77 ) }
    dend_8 { pt3dadd( -4.33712, -59.7233, -16.9635, 0.74 ) }
    dend_8 { pt3dadd( -4.69111, -60.2825, -17.2529, 0.52 ) }
    dend_8 { pt3dadd( -5.33186, -61.2195, -17.7788, 0.44 ) }
    dend_8 { pt3dadd( -6.17488, -62.2912, -18.4765, 0.44 ) }
    dend_8 { pt3dadd( -7.06431, -63.2745, -19.2305, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.33882, -117.762, 28.6602, 0.88 ) }
    dend_4 { pt3dadd( -3.31515, -118.528, 28.6412, 0.88 ) }
    dend_4 { pt3dadd( -3.24104, -119.26, 28.5968, 0.88 ) }
    dend_4 { pt3dadd( -3.16536, -119.769, 28.5691, 1.18 ) }
    dend_4 { pt3dadd( -3.10684, -120.099, 28.5457, 1.18 ) }
    dend_4 { pt3dadd( -2.94116, -120.993, 28.482, 0.52 ) }
    dend_4 { pt3dadd( -2.86605, -121.398, 28.4531, 0.52 ) }
    dend_4 { pt3dadd( -2.68866, -122.192, 28.3886, 1.99 ) }
    dend_4 { pt3dadd( -2.48729, -122.956, 28.3114, 3.09 ) }
    dend_4 { pt3dadd( -2.34415, -123.436, 28.2558, 3.61 ) }
    dend_4 { pt3dadd( -2.1722, -124.0, 28.1892, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.33882, -117.762, 28.6602, 0.74 ) }
    dend_3 { pt3dadd( -2.67046, -118.597, 28.5356, 0.74 ) }
    dend_3 { pt3dadd( -1.94535, -119.638, 28.4164, 0.66 ) }
    dend_3 { pt3dadd( -1.58396, -120.157, 28.357, 1.11 ) }
    dend_3 { pt3dadd( -1.35162, -120.491, 28.3188, 1.25 ) }
    dend_3 { pt3dadd( -0.288936, -122.017, 28.1441, 0.29 ) }
    dend_3 { pt3dadd( 0.162725, -122.666, 28.0699, 0.29 ) }
    dend_3 { pt3dadd( 0.70436, -123.536, 27.9363, 0.29 ) }
    dend_3 { pt3dadd( 5.34782, -130.429, 27.7771, 0.29 ) }
    dend_3 { pt3dadd( 10.4618, -136.895, 29.0064, 0.29 ) }
    dend_3 { pt3dadd( 16.1697, -142.951, 29.9153, 0.29 ) }
    dend_3 { pt3dadd( 20.9788, -149.498, 31.7213, 0.29 ) }
    dend_3 { pt3dadd( 25.3759, -156.325, 33.4272, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -10.4765, 116.707, -62.9719, 0.22 ) }
    dend_69 { pt3dadd( -10.9519, 115.859, -64.9116, 0.22 ) }
    dend_69 { pt3dadd( -11.1297, 115.576, -65.7348, 1.18 ) }
    dend_69 { pt3dadd( -11.196, 115.486, -66.0047, 1.18 ) }
    dend_69 { pt3dadd( -12.1357, 114.341, -69.5521, 0.22 ) }
    dend_69 { pt3dadd( -12.3426, 114.102, -70.3136, 0.22 ) }
    dend_69 { pt3dadd( -13.0195, 113.321, -72.8039, 0.74 ) }
    dend_69 { pt3dadd( -13.9176, 112.491, -76.0089, 0.22 ) }
    dend_69 { pt3dadd( -14.2071, 112.253, -77.041, 1.03 ) }
    dend_69 { pt3dadd( -14.3228, 112.162, -77.4475, 1.25 ) }
    dend_69 { pt3dadd( -14.4234, 112.099, -77.7499, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -10.4765, 116.707, -62.9719, 0.52 ) }
    dend_68 { pt3dadd( -9.84508, 117.824, -64.0468, 0.52 ) }
    dend_68 { pt3dadd( -9.48963, 118.508, -64.6895, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -9.04435, 119.562, -65.5879, 0.88 ) }
    dend_68 { pt3dadd( -8.9825, 119.741, -65.7274, 1.03 ) }
    dend_68 { pt3dadd( -8.52545, 121.305, -66.8886, 0.15 ) }
    dend_68 { pt3dadd( -8.42465, 121.69, -67.1661, 0.52 ) }
    dend_68 { pt3dadd( -8.40726, 121.837, -67.2613, 0.52 ) }
    dend_68 { pt3dadd( -8.35501, 122.898, -67.8723, 0.15 ) }
    dend_68 { pt3dadd( -8.35462, 123.376, -68.111, 0.81 ) }
    dend_68 { pt3dadd( -8.3708, 124.007, -68.41, 1.11 ) }
    dend_68 { pt3dadd( -8.37586, 124.059, -68.4311, 1.11 ) }
    dend_68 { pt3dadd( -8.48418, 125.264, -68.9294, 0.22 ) }
    dend_68 { pt3dadd( -8.52246, 125.797, -69.1647, 0.96 ) }
    dend_68 { pt3dadd( -8.5351, 126.136, -69.3364, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -15.0606, 110.078, -11.9997, 0.96 ) }
    dend_66 { pt3dadd( -15.1686, 110.802, -12.9972, 0.96 ) }
    dend_66 { pt3dadd( -15.2797, 111.534, -13.9944, 1.03 ) }
    dend_66 { pt3dadd( -15.295, 111.707, -14.2239, 1.03 ) }
    dend_66 { pt3dadd( -15.3336, 112.309, -15.0093, 0.29 ) }
    dend_66 { pt3dadd( -15.3498, 112.78, -15.5568, 1.25 ) }
    dend_66 { pt3dadd( -15.3549, 113.106, -15.8997, 1.47 ) }
    dend_66 { pt3dadd( -15.3539, 113.219, -15.9946, 1.47 ) }
    dend_66 { pt3dadd( -15.3666, 114.25, -16.7058, 0.29 ) }
    dend_66 { pt3dadd( -15.366, 114.344, -16.7673, 0.29 ) }
    dend_66 { pt3dadd( -15.3477, 115.135, -17.2296, 0.29 ) }
    dend_66 { pt3dadd( -15.3275, 115.433, -17.4099, 0.59 ) }
    dend_66 { pt3dadd( -15.2679, 116.1, -17.8121, 0.44 ) }
    dend_66 { pt3dadd( -15.1854, 116.946, -18.318, 2.28 ) }
    dend_66 { pt3dadd( -15.1364, 117.453, -18.6161, 2.65 ) }
    dend_66 { pt3dadd( -15.1106, 117.695, -18.764, 2.65 ) }
    dend_66 { pt3dadd( -14.9386, 119.278, -19.7773, 0.37 ) }
    dend_66 { pt3dadd( -14.8855, 119.78, -20.079, 0.29 ) }
    dend_66 { pt3dadd( -14.8785, 119.844, -20.1132, 0.29 ) }
    dend_66 { pt3dadd( -14.8427, 120.204, -20.275, 0.44 ) }
    dend_66 { pt3dadd( -14.8312, 120.417, -20.3494, 0.44 ) }
    dend_66 { pt3dadd( -14.8234, 121.05, -20.5221, 0.15 ) }
    dend_66 { pt3dadd( -14.8561, 121.599, -20.6037, 0.74 ) }
    dend_66 { pt3dadd( -14.8586, 121.652, -20.6131, 0.74 ) }
    dend_66 { pt3dadd( -14.871, 121.975, -20.7012, 0.74 ) }
    dend_66 { pt3dadd( -14.8817, 122.244, -20.7868, 0.52 ) }
    dend_66 { pt3dadd( -14.9253, 122.872, -21.0049, 0.29 ) }
    dend_66 { pt3dadd( -14.9979, 123.648, -21.2859, 1.18 ) }
    dend_66 { pt3dadd( -15.0396, 124.012, -21.4227, 1.69 ) }
    dend_66 { pt3dadd( -15.1829, 125.307, -21.9713, 0.29 ) }
    dend_66 { pt3dadd( -15.2422, 125.81, -22.1959, 0.29 ) }
    dend_66 { pt3dadd( -15.3717, 126.758, -22.6347, 1.77 ) }
    dend_66 { pt3dadd( -15.414, 127.009, -22.759, 2.73 ) }
    dend_66 { pt3dadd( -15.4546, 127.205, -22.8633, 2.73 ) }
    dend_66 { pt3dadd( -15.8329, 128.823, -23.7586, 0.29 ) }
    dend_66 { pt3dadd( -15.9585, 129.294, -24.0252, 0.29 ) }
    dend_66 { pt3dadd( -16.0098, 129.465, -24.1305, 0.59 ) }
    dend_66 { pt3dadd( -16.2025, 130.029, -24.5095, 0.22 ) }
    dend_66 { pt3dadd( -16.3537, 130.415, -24.7838, 0.74 ) }
    dend_66 { pt3dadd( -16.4238, 130.548, -24.8848, 1.03 ) }
    dend_66 { pt3dadd( -16.4543, 130.582, -24.9154, 1.03 ) }
    dend_66 { pt3dadd( -16.6492, 130.788, -25.1212, 0.81 ) }
    dend_66 { pt3dadd( -16.7039, 130.851, -25.1793, 0.81 ) }
    dend_66 { pt3dadd( -17.2234, 131.494, -25.6918, 0.22 ) }
    dend_66 { pt3dadd( -17.4661, 131.817, -25.9254, 0.59 ) }
    dend_66 { pt3dadd( -17.8689, 132.357, -26.2985, 0.22 ) }
    dend_66 { pt3dadd( -17.9329, 132.443, -26.3539, 0.22 ) }
    dend_66 { pt3dadd( -18.2097, 132.817, -26.5698, 0.22 ) }
    dend_66 { pt3dadd( -18.5398, 133.273, -26.8007, 0.22 ) }
    dend_66 { pt3dadd( -19.0025, 133.941, -27.1019, 1.62 ) }
    dend_66 { pt3dadd( -19.3262, 134.427, -27.3067, 2.14 ) }
    dend_66 { pt3dadd( -19.6063, 134.848, -27.4766, 2.14 ) }
    dend_66 { pt3dadd( -20.3305, 135.906, -27.9116, 0.29 ) }
    dend_66 { pt3dadd( -20.5632, 136.237, -28.05, 0.44 ) }
    dend_66 { pt3dadd( -20.823, 136.613, -28.2063, 0.22 ) }
    dend_66 { pt3dadd( -21.2229, 137.218, -28.4481, 0.22 ) }
    dend_66 { pt3dadd( -21.5841, 137.801, -28.675, 1.25 ) }
    dend_66 { pt3dadd( -21.7308, 138.053, -28.7728, 1.62 ) }
    dend_66 { pt3dadd( -21.8042, 138.198, -28.8303, 1.84 ) }
    dend_66 { pt3dadd( -22.278, 139.302, -29.2812, 0.29 ) }
    dend_66 { pt3dadd( -22.6026, 140.193, -29.6418, 0.29 ) }
    dend_66 { pt3dadd( -22.7724, 140.813, -29.8999, 0.74 ) }
    dend_66 { pt3dadd( -22.8256, 141.064, -30.0154, 0.74 ) }
    dend_66 { pt3dadd( -22.9753, 141.936, -30.4445, 0.22 ) }
    dend_66 { pt3dadd( -23.0785, 142.711, -30.8391, 1.62 ) }
    dend_66 { pt3dadd( -23.0819, 142.752, -30.8597, 1.62 ) }
    dend_66 { pt3dadd( -23.1186, 143.315, -31.1367, 1.99 ) }
    dend_66 { pt3dadd( -23.1951, 144.673, -31.7748, 0.22 ) }
    dend_66 { pt3dadd( -23.1977, 144.715, -31.7937, 0.22 ) }
    dend_66 { pt3dadd( -23.2591, 145.346, -32.0543, 0.22 ) }
    dend_66 { pt3dadd( -23.3356, 146.035, -32.3142, 0.96 ) }
    dend_66 { pt3dadd( -23.3696, 146.298, -32.4099, 1.25 ) }
    dend_66 { pt3dadd( -23.5409, 147.501, -32.7823, 0.22 ) }
    dend_66 { pt3dadd( -23.547, 147.545, -32.7935, 0.22 ) }
    dend_66 { pt3dadd( -23.6401, 148.149, -32.9508, 0.74 ) }
    dend_66 { pt3dadd( -23.6679, 148.311, -32.9929, 0.88 ) }
    dend_66 { pt3dadd( -23.7494, 148.74, -33.1062, 0.29 ) }
    dend_66 { pt3dadd( -23.9214, 149.569, -33.3085, 0.22 ) }
    dend_66 { pt3dadd( -24.0397, 150.105, -33.4165, 0.22 ) }
    dend_66 { pt3dadd( -24.1816, 150.864, -33.5203, 1.33 ) }
    dend_66 { pt3dadd( -24.2245, 151.145, -33.5408, 1.92 ) }
    dend_66 { pt3dadd( -24.2311, 151.19, -33.5421, 1.92 ) }
    dend_66 { pt3dadd( -24.279, 151.528, -33.5417, 1.77 ) }
    dend_66 { pt3dadd( -24.3314, 151.879, -33.5385, 1.69 ) }
    dend_66 { pt3dadd( -24.5116, 153.079, -33.5179, 0.22 ) }
    dend_66 { pt3dadd( -24.6918, 154.065, -33.4893, 0.22 ) }
    dend_66 { pt3dadd( -24.8848, 154.988, -33.4637, 1.47 ) }
    dend_66 { pt3dadd( -24.9788, 155.384, -33.4545, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -25.0518, 155.647, -33.4518, 1.92 ) }
    dend_66 { pt3dadd( -25.1723, 156.015, -33.4552, 1.47 ) }
    dend_66 { pt3dadd( -25.662, 157.289, -33.5037, 0.22 ) }
    dend_66 { pt3dadd( -25.8819, 157.801, -33.5273, 0.44 ) }
    dend_66 { pt3dadd( -25.9831, 158.04, -33.5421, 0.44 ) }
    dend_66 { pt3dadd( -26.2625, 158.716, -33.5923, 0.22 ) }
    dend_66 { pt3dadd( -26.5667, 159.501, -33.6602, 1.18 ) }
    dend_66 { pt3dadd( -26.7012, 159.877, -33.6962, 2.14 ) }
    dend_66 { pt3dadd( -26.8442, 160.314, -33.7481, 1.62 ) }
    dend_66 { pt3dadd( -27.2785, 161.706, -33.9184, 0.22 ) }
    dend_66 { pt3dadd( -27.2936, 161.757, -33.9246, 0.22 ) }
    dend_66 { pt3dadd( -27.5966, 162.879, -34.0433, 0.22 ) }
    dend_66 { pt3dadd( -27.8433, 163.841, -34.1312, 0.22 ) }
    dend_66 { pt3dadd( -28.0022, 164.471, -34.1682, 1.03 ) }
    dend_66 { pt3dadd( -28.0572, 164.688, -34.1745, 1.62 ) }
    dend_66 { pt3dadd( -28.1161, 164.904, -34.1733, 1.11 ) }
    dend_66 { pt3dadd( -28.3732, 165.943, -34.102, 0.22 ) }
    dend_66 { pt3dadd( -28.383, 165.987, -34.0961, 0.22 ) }
    dend_66 { pt3dadd( -28.5463, 166.825, -33.9398, 1.47 ) }
    dend_66 { pt3dadd( -28.596, 167.097, -33.8807, 2.06 ) }
    dend_66 { pt3dadd( -28.6068, 167.156, -33.868, 2.06 ) }
    dend_66 { pt3dadd( -28.843, 168.428, -33.6354, 0.22 ) }
    dend_66 { pt3dadd( -28.9778, 169.134, -33.5292, 0.52 ) }
    dend_66 { pt3dadd( -29.1733, 170.074, -33.4215, 0.22 ) }
    dend_66 { pt3dadd( -29.3123, 170.698, -33.3705, 1.33 ) }
    dend_66 { pt3dadd( -29.3873, 171.02, -33.3583, 1.33 ) }
    dend_66 { pt3dadd( -29.6561, 172.116, -33.3689, 0.22 ) }
    dend_66 { pt3dadd( -29.7638, 172.536, -33.4003, 0.22 ) }
    dend_66 { pt3dadd( -29.9012, 173.111, -33.4598, 0.66 ) }
    dend_66 { pt3dadd( -29.9514, 173.336, -33.4894, 0.66 ) }
    dend_66 { pt3dadd( -30.1566, 174.402, -33.6331, 0.22 ) }
    dend_66 { pt3dadd( -30.1631, 174.457, -33.64, 0.22 ) }
    dend_66 { pt3dadd( -30.2084, 175.187, -33.7217, 0.22 ) }
    dend_66 { pt3dadd( -30.2184, 175.879, -33.8066, 0.96 ) }
    dend_66 { pt3dadd( -30.21, 176.263, -33.8552, 1.62 ) }
    dend_66 { pt3dadd( -30.1974, 176.663, -33.9071, 1.4 ) }
    dend_66 { pt3dadd( -30.1867, 177.933, -34.0963, 0.22 ) }
    dend_66 { pt3dadd( -30.1927, 178.262, -34.1547, 0.22 ) }
    dend_66 { pt3dadd( -30.2291, 179.048, -34.3129, 1.11 ) }
    dend_66 { pt3dadd( -30.2378, 179.161, -34.337, 1.33 ) }
    dend_66 { pt3dadd( -30.2685, 179.484, -34.4165, 1.18 ) }
    dend_66 { pt3dadd( -30.4286, 180.91, -34.7825, 0.22 ) }
    dend_66 { pt3dadd( -30.5159, 181.573, -34.9655, 1.03 ) }
    dend_66 { pt3dadd( -30.5663, 181.943, -35.07, 1.18 ) }
    dend_66 { pt3dadd( -30.5994, 182.209, -35.1558, 1.03 ) }
    dend_66 { pt3dadd( -30.6985, 183.12, -35.48, 0.15 ) }
    dend_66 { pt3dadd( -30.7666, 183.884, -35.7694, 0.15 ) }
    dend_66 { pt3dadd( -30.8221, 184.601, -36.0445, 1.33 ) }
    dend_66 { pt3dadd( -30.8562, 184.999, -36.1952, 1.55 ) }
    dend_66 { pt3dadd( -30.978, 186.404, -36.7404, 0.15 ) }
    dend_66 { pt3dadd( -30.9832, 186.456, -36.7599, 0.15 ) }
    dend_66 { pt3dadd( -31.0647, 187.099, -36.9838, 0.15 ) }
    dend_66 { pt3dadd( -31.1673, 187.835, -37.2326, 1.11 ) }
    dend_66 { pt3dadd( -31.2032, 188.088, -37.3064, 1.55 ) }
    dend_66 { pt3dadd( -31.3588, 189.184, -37.5758, 0.15 ) }
    dend_66 { pt3dadd( -31.4557, 189.771, -37.6823, 0.74 ) }
    dend_66 { pt3dadd( -31.61, 190.64, -37.8297, 0.15 ) }
    dend_66 { pt3dadd( -31.6206, 190.691, -37.8379, 0.15 ) }
    dend_66 { pt3dadd( -31.7298, 191.183, -37.9105, 0.15 ) }
    dend_66 { pt3dadd( -31.8686, 191.773, -37.9787, 0.96 ) }
    dend_66 { pt3dadd( -31.9341, 192.043, -38.0006, 0.96 ) }
    dend_66 { pt3dadd( -32.2133, 193.241, -38.1054, 0.15 ) }
    dend_66 { pt3dadd( -32.3239, 193.75, -38.149, 0.44 ) }
    dend_66 { pt3dadd( -32.3361, 193.81, -38.1559, 0.44 ) }
    dend_66 { pt3dadd( -32.4793, 194.578, -38.2668, 0.15 ) }
    dend_66 { pt3dadd( -32.603, 195.319, -38.3876, 1.03 ) }
    dend_66 { pt3dadd( -32.6503, 195.643, -38.4427, 1.33 ) }
    dend_66 { pt3dadd( -32.704, 196.153, -38.5353, 0.59 ) }
    dend_66 { pt3dadd( -32.7708, 197.009, -38.6984, 0.15 ) }
    dend_66 { pt3dadd( -32.8178, 197.654, -38.8254, 0.88 ) }
    dend_66 { pt3dadd( -32.8423, 198.025, -38.8997, 1.03 ) }
    dend_66 { pt3dadd( -32.8677, 198.413, -38.974, 0.66 ) }
    dend_66 { pt3dadd( -32.8886, 199.305, -39.1837, 0.15 ) }
    dend_66 { pt3dadd( -32.8868, 200.243, -39.4299, 0.15 ) }
    dend_66 { pt3dadd( -32.8842, 200.847, -39.567, 0.96 ) }
    dend_66 { pt3dadd( -32.8883, 201.193, -39.6401, 1.25 ) }
    dend_66 { pt3dadd( -32.8943, 201.423, -39.685, 1.25 ) }
    dend_66 { pt3dadd( -32.9683, 202.856, -39.9415, 0.15 ) }
    dend_66 { pt3dadd( -33.0055, 203.237, -39.9975, 0.44 ) }
    dend_66 { pt3dadd( -33.1177, 204.065, -40.0958, 0.15 ) }
    dend_66 { pt3dadd( -33.1812, 204.452, -40.1245, 0.74 ) }
    dend_66 { pt3dadd( -33.2527, 204.84, -40.1382, 0.74 ) }
    dend_66 { pt3dadd( -33.3872, 205.569, -40.1289, 0.15 ) }
    dend_66 { pt3dadd( -33.5115, 206.174, -40.094, 0.88 ) }
    dend_66 { pt3dadd( -33.5788, 206.555, -40.0818, 0.96 ) }
    dend_66 { pt3dadd( -33.7181, 207.503, -40.0778, 0.15 ) }
    dend_66 { pt3dadd( -33.793, 208.006, -40.0707, 0.29 ) }
    dend_66 { pt3dadd( -33.936, 208.925, -40.0507, 0.15 ) }
    dend_66 { pt3dadd( -34.0151, 209.426, -40.0343, 0.96 ) }
    dend_66 { pt3dadd( -34.0781, 209.862, -40.0187, 1.18 ) }
    dend_66 { pt3dadd( -34.2956, 211.346, -39.9501, 0.22 ) }
    dend_66 { pt3dadd( -34.3932, 212.015, -39.9137, 0.22 ) }
    dend_66 { pt3dadd( -34.418, 212.182, -39.9027, 0.22 ) }
    dend_66 { pt3dadd( -34.4349, 212.298, -39.8933, 0.22 ) }
    dend_66 { pt3dadd( -34.5158, 213.081, -39.8557, 0.15 ) }
    dend_66 { pt3dadd( -34.5686, 213.74, -39.8504, 1.11 ) }
    dend_66 { pt3dadd( -34.5888, 214.104, -39.8602, 1.77 ) }
    dend_66 { pt3dadd( -34.5995, 214.389, -39.8742, 1.77 ) }
    dend_66 { pt3dadd( -34.6018, 214.451, -39.8786, 1.77 ) }
    dend_66 { pt3dadd( -34.6742, 216.122, -39.9953, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -34.7113, 216.669, -40.0357, 0.15 ) }
    dend_66 { pt3dadd( -34.7146, 216.715, -40.0387, 0.15 ) }
    dend_66 { pt3dadd( -34.7631, 217.24, -40.0643, 0.52 ) }
    dend_66 { pt3dadd( -34.7921, 217.467, -40.0736, 0.59 ) }
    dend_66 { pt3dadd( -35.0056, 218.718, -40.1127, 0.15 ) }
    dend_66 { pt3dadd( -35.1333, 219.372, -40.1144, 1.03 ) }
    dend_66 { pt3dadd( -35.1989, 219.718, -40.1171, 1.77 ) }
    dend_66 { pt3dadd( -35.2623, 220.051, -40.1225, 1.55 ) }
    dend_66 { pt3dadd( -35.563, 221.479, -40.1706, 0.15 ) }
    dend_66 { pt3dadd( -35.6391, 221.82, -40.1911, 0.29 ) }
    dend_66 { pt3dadd( -35.7747, 222.4, -40.2441, 0.15 ) }
    dend_66 { pt3dadd( -35.9292, 223.047, -40.3106, 0.15 ) }
    dend_66 { pt3dadd( -35.9567, 223.159, -40.3224, 0.15 ) }
    dend_66 { pt3dadd( -36.2361, 224.303, -40.4567, 0.15 ) }
    dend_66 { pt3dadd( -36.4381, 225.124, -40.5577, 1.11 ) }
    dend_66 { pt3dadd( -36.4512, 225.176, -40.5644, 1.11 ) }
    dend_66 { pt3dadd( -36.5736, 225.634, -40.6275, 1.4 ) }
    dend_66 { pt3dadd( -36.6945, 226.152, -40.7001, 0.59 ) }
    dend_66 { pt3dadd( -36.8671, 226.985, -40.8133, 0.22 ) }
    dend_66 { pt3dadd( -36.9808, 227.643, -40.8947, 0.22 ) }
    dend_66 { pt3dadd( -37.0947, 228.347, -40.9748, 1.03 ) }
    dend_66 { pt3dadd( -37.1548, 228.781, -41.0236, 1.55 ) }
    dend_66 { pt3dadd( -37.3822, 230.703, -41.219, 0.15 ) }
    dend_66 { pt3dadd( -37.3886, 230.758, -41.2242, 0.15 ) }
    dend_66 { pt3dadd( -37.447, 231.223, -41.2552, 0.44 ) }
    dend_66 { pt3dadd( -37.4828, 231.506, -41.2666, 0.44 ) }
    dend_66 { pt3dadd( -37.638, 232.669, -41.2961, 0.15 ) }
    dend_66 { pt3dadd( -37.7333, 233.339, -41.3087, 1.03 ) }
    dend_66 { pt3dadd( -37.8005, 233.787, -41.3117, 1.62 ) }
    dend_66 { pt3dadd( -38.0046, 235.221, -41.3972, 0.15 ) }
    dend_66 { pt3dadd( -38.2665, 237.069, -41.5753, 0.15 ) }
    dend_66 { pt3dadd( -38.372, 237.82, -41.6689, 0.15 ) }
    dend_66 { pt3dadd( -38.4441, 238.332, -41.7471, 1.11 ) }
    dend_66 { pt3dadd( -38.5142, 238.888, -41.8487, 1.4 ) }
    dend_66 { pt3dadd( -38.7062, 240.735, -42.2262, 0.15 ) }
    dend_66 { pt3dadd( -38.7545, 241.277, -42.3511, 0.15 ) }
    dend_66 { pt3dadd( -38.8114, 241.931, -42.5023, 0.74 ) }
    dend_66 { pt3dadd( -38.8305, 242.222, -42.5548, 0.74 ) }
    dend_66 { pt3dadd( -38.833, 242.276, -42.5616, 0.74 ) }
    dend_66 { pt3dadd( -38.8855, 243.756, -42.6813, 0.15 ) }
    dend_66 { pt3dadd( -38.9103, 244.643, -42.6958, 1.55 ) }
    dend_66 { pt3dadd( -38.913, 245.194, -42.7019, 1.92 ) }
    dend_66 { pt3dadd( -38.9076, 246.819, -42.7131, 0.15 ) }
    dend_66 { pt3dadd( -38.9046, 247.354, -42.7148, 0.88 ) }
    dend_66 { pt3dadd( -38.9029, 247.469, -42.7148, 0.88 ) }
    dend_66 { pt3dadd( -38.8911, 247.857, -42.7133, 0.88 ) }
    dend_66 { pt3dadd( -38.8422, 249.032, -42.7106, 0.15 ) }
    dend_66 { pt3dadd( -38.8312, 249.481, -42.7047, 0.15 ) }
    dend_66 { pt3dadd( -38.8271, 249.958, -42.6892, 0.74 ) }
    dend_66 { pt3dadd( -38.8261, 251.061, -42.6431, 0.15 ) }
    dend_66 { pt3dadd( -38.8274, 251.114, -42.64, 0.15 ) }
    dend_66 { pt3dadd( -38.8408, 251.383, -42.6196, 0.37 ) }
    dend_66 { pt3dadd( -38.8965, 252.003, -42.5618, 0.22 ) }
    dend_66 { pt3dadd( -38.943, 252.401, -42.5159, 0.88 ) }
    dend_66 { pt3dadd( -38.9499, 252.446, -42.5101, 0.88 ) }
    dend_66 { pt3dadd( -39.1402, 253.654, -42.4078, 0.15 ) }
    dend_66 { pt3dadd( -39.2164, 254.167, -42.3811, 0.15 ) }
    dend_66 { pt3dadd( -39.2243, 254.228, -42.3798, 0.15 ) }
    dend_66 { pt3dadd( -39.3283, 255.08, -42.3894, 1.25 ) }
    dend_66 { pt3dadd( -39.3509, 255.294, -42.4012, 1.25 ) }
    dend_66 { pt3dadd( -39.5041, 256.717, -42.5336, 0.15 ) }
    dend_66 { pt3dadd( -39.51, 256.771, -42.5408, 0.15 ) }
    dend_66 { pt3dadd( -39.5635, 257.29, -42.6301, 1.18 ) }
    dend_66 { pt3dadd( -39.5821, 257.45, -42.6604, 1.18 ) }
    dend_66 { pt3dadd( -39.7096, 258.614, -42.9381, 0.15 ) }
    dend_66 { pt3dadd( -39.8213, 259.468, -43.1944, 0.15 ) }
    dend_66 { pt3dadd( -39.8554, 259.678, -43.2672, 0.44 ) }
    dend_66 { pt3dadd( -40.1053, 261.127, -43.8014, 0.15 ) }
    dend_66 { pt3dadd( -40.2952, 262.163, -44.2127, 1.77 ) }
    dend_66 { pt3dadd( -40.4102, 262.777, -44.4747, 1.55 ) }
    dend_66 { pt3dadd( -40.6002, 263.752, -44.9211, 0.22 ) }
    dend_66 { pt3dadd( -40.6808, 264.158, -45.1282, 0.37 ) }
    dend_66 { pt3dadd( -40.8222, 264.803, -45.4753, 0.15 ) }
    dend_66 { pt3dadd( -40.833, 264.842, -45.4978, 0.15 ) }
    dend_66 { pt3dadd( -40.9607, 265.281, -45.7639, 0.74 ) }
    dend_66 { pt3dadd( -41.0364, 265.52, -45.8973, 0.74 ) }
    dend_66 { pt3dadd( -41.2063, 266.081, -46.1852, 0.15 ) }
    dend_66 { pt3dadd( -41.3197, 266.422, -46.3621, 0.66 ) }
    dend_66 { pt3dadd( -41.4119, 266.675, -46.49, 1.25 ) }
    dend_66 { pt3dadd( -41.838, 267.772, -47.0543, 0.15 ) }
    dend_66 { pt3dadd( -41.8595, 267.825, -47.0814, 0.15 ) }
    dend_66 { pt3dadd( -42.1285, 268.491, -47.4108, 0.15 ) }
    dend_66 { pt3dadd( -42.3747, 269.119, -47.6961, 0.96 ) }
    dend_66 { pt3dadd( -42.4853, 269.407, -47.827, 1.55 ) }
    dend_66 { pt3dadd( -43.0407, 270.911, -48.4815, 0.15 ) }
    dend_66 { pt3dadd( -43.0549, 270.952, -48.4973, 0.15 ) }
    dend_66 { pt3dadd( -43.3005, 271.708, -48.775, 1.18 ) }
    dend_66 { pt3dadd( -43.4379, 272.168, -48.9343, 0.52 ) }
    dend_66 { pt3dadd( -43.6579, 272.983, -49.1861, 0.15 ) }
    dend_66 { pt3dadd( -43.779, 273.456, -49.3143, 0.52 ) }
    dend_66 { pt3dadd( -44.1364, 274.839, -49.6195, 0.15 ) }
    dend_66 { pt3dadd( -44.2759, 275.306, -49.7155, 0.15 ) }
    dend_66 { pt3dadd( -44.5149, 275.989, -49.849, 0.66 ) }
    dend_66 { pt3dadd( -44.682, 276.4, -49.922, 0.96 ) }
    dend_66 { pt3dadd( -44.8239, 276.701, -49.9664, 0.96 ) }
    dend_66 { pt3dadd( -45.4501, 277.765, -50.092, 0.15 ) }
    dend_66 { pt3dadd( -45.9336, 278.444, -50.1577, 0.52 ) }
    dend_66 { pt3dadd( -46.1551, 278.733, -50.1824, 0.52 ) }
    dend_66 { pt3dadd( -46.5243, 279.186, -50.2164, 0.15 ) }
    dend_66 { pt3dadd( -46.9741, 279.716, -50.2531, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -48.109, 281.009, -50.3267, 0.15 ) }
    dend_66 { pt3dadd( -48.5197, 281.462, -50.3394, 1.18 ) }
    dend_66 { pt3dadd( -48.8244, 281.802, -50.352, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -15.0606, 110.078, -11.9997, 0.59 ) }
    dend_29 { pt3dadd( -14.9816, 110.968, -11.9724, 0.59 ) }
    dend_29 { pt3dadd( -14.9414, 111.764, -11.9687, 1.18 ) }
    dend_29 { pt3dadd( -14.9264, 112.532, -11.9909, 1.84 ) }
    dend_29 { pt3dadd( -14.9285, 112.987, -12.0098, 2.06 ) }
    dend_29 { pt3dadd( -14.9431, 113.424, -12.03, 2.06 ) }
    dend_29 { pt3dadd( -14.9765, 113.981, -12.0561, 1.84 ) }
    dend_29 { pt3dadd( -15.0431, 114.592, -12.0883, 1.55 ) }
    dend_29 { pt3dadd( -15.2045, 115.682, -12.1534, 0.37 ) }
    dend_29 { pt3dadd( -15.3285, 116.378, -12.1961, 0.37 ) }
    dend_29 { pt3dadd( -15.4963, 117.228, -12.2625, 0.96 ) }
    dend_29 { pt3dadd( -15.6761, 118.074, -12.3357, 1.47 ) }
    dend_29 { pt3dadd( -15.7715, 118.493, -12.3719, 1.69 ) }
    dend_29 { pt3dadd( -15.9137, 119.114, -12.4193, 1.55 ) }
    dend_29 { pt3dadd( -16.0442, 119.678, -12.4613, 1.33 ) }
    dend_29 { pt3dadd( -16.1822, 120.411, -12.5089, 0.66 ) }
    dend_29 { pt3dadd( -16.3034, 121.339, -12.5747, 0.37 ) }
    dend_29 { pt3dadd( -16.3866, 122.4, -12.6487, 0.29 ) }
    dend_29 { pt3dadd( -16.4195, 123.308, -12.7082, 0.29 ) }
    dend_29 { pt3dadd( -16.4187, 123.379, -12.7122, 0.29 ) }
    dend_29 { pt3dadd( -16.3275, 124.932, -12.77, 0.29 ) }
    dend_29 { pt3dadd( -16.2591, 125.677, -12.7796, 0.81 ) }
    dend_29 { pt3dadd( -16.1981, 126.226, -12.7851, 0.96 ) }
    dend_29 { pt3dadd( -16.1917, 126.294, -12.7854, 0.96 ) }
    dend_29 { pt3dadd( -16.1692, 126.731, -12.7868, 0.96 ) }
    dend_29 { pt3dadd( -16.1647, 127.83, -12.7857, 0.29 ) }
    dend_29 { pt3dadd( -16.1988, 128.478, -12.785, 0.29 ) }
    dend_29 { pt3dadd( -16.2719, 129.356, -12.7757, 1.47 ) }
    dend_29 { pt3dadd( -16.3542, 130.201, -12.7904, 2.06 ) }
    dend_29 { pt3dadd( -16.38, 130.512, -12.8005, 2.5 ) }
    dend_29 { pt3dadd( -16.419, 131.01, -12.8226, 2.43 ) }
    dend_29 { pt3dadd( -16.4553, 131.546, -12.8496, 2.14 ) }
    dend_29 { pt3dadd( -16.4912, 132.159, -12.8834, 1.77 ) }
    dend_29 { pt3dadd( -16.5377, 132.991, -12.9294, 0.66 ) }
    dend_29 { pt3dadd( -16.6139, 134.254, -12.9942, 0.44 ) }
    dend_29 { pt3dadd( -16.6859, 135.258, -13.038, 0.37 ) }
    dend_29 { pt3dadd( -16.769, 136.195, -13.0737, 0.37 ) }
    dend_29 { pt3dadd( -16.8818, 137.132, -13.1032, 1.33 ) }
    dend_29 { pt3dadd( -17.0104, 137.969, -13.1261, 1.77 ) }
    dend_29 { pt3dadd( -17.1585, 138.755, -13.1395, 2.28 ) }
    dend_29 { pt3dadd( -17.27, 139.24, -13.1562, 2.65 ) }
    dend_29 { pt3dadd( -17.3698, 139.657, -13.1743, 2.8 ) }
    dend_29 { pt3dadd( -17.5122, 140.236, -13.2015, 2.5 ) }
    dend_29 { pt3dadd( -17.6237, 140.723, -13.2215, 1.99 ) }
    dend_29 { pt3dadd( -17.7108, 141.135, -13.2383, 1.77 ) }
    dend_29 { pt3dadd( -17.8336, 141.808, -13.262, 0.81 ) }
    dend_29 { pt3dadd( -17.9598, 142.725, -13.2787, 0.44 ) }
    dend_29 { pt3dadd( -18.0573, 143.658, -13.2874, 0.37 ) }
    dend_29 { pt3dadd( -18.1083, 144.482, -13.2815, 0.74 ) }
    dend_29 { pt3dadd( -18.1263, 144.9, -13.2733, 0.74 ) }
    dend_29 { pt3dadd( -18.1538, 145.513, -13.2551, 0.74 ) }
    dend_29 { pt3dadd( -18.2266, 146.745, -13.2229, 0.52 ) }
    dend_29 { pt3dadd( -18.2309, 146.804, -13.222, 0.44 ) }
    dend_29 { pt3dadd( -18.3117, 147.732, -13.2155, 0.44 ) }
    dend_29 { pt3dadd( -18.3925, 148.507, -13.2158, 0.44 ) }
    dend_29 { pt3dadd( -18.5526, 149.862, -13.2237, 0.44 ) }
    dend_29 { pt3dadd( -18.784, 151.502, -13.2444, 1.55 ) }
    dend_29 { pt3dadd( -18.9085, 152.29, -13.2588, 2.43 ) }
    dend_29 { pt3dadd( -18.9983, 152.862, -13.2675, 2.65 ) }
    dend_29 { pt3dadd( -19.0749, 153.356, -13.2819, 2.87 ) }
    dend_29 { pt3dadd( -19.1851, 154.076, -13.3085, 2.36 ) }
    dend_29 { pt3dadd( -19.3005, 154.844, -13.3553, 1.47 ) }
    dend_29 { pt3dadd( -19.378, 155.358, -13.3856, 0.96 ) }
    dend_29 { pt3dadd( -19.5409, 156.373, -13.4502, 0.37 ) }
    dend_29 { pt3dadd( -19.6921, 157.277, -13.507, 0.37 ) }
    dend_29 { pt3dadd( -19.8812, 158.394, -13.5728, 0.29 ) }
    dend_29 { pt3dadd( -20.0171, 159.258, -13.6263, 1.69 ) }
    dend_29 { pt3dadd( -20.1412, 160.116, -13.7061, 2.28 ) }
    dend_29 { pt3dadd( -20.2, 160.498, -13.7538, 2.73 ) }
    dend_29 { pt3dadd( -20.2619, 160.857, -13.8082, 2.8 ) }
    dend_29 { pt3dadd( -20.3798, 161.505, -13.9145, 1.99 ) }
    dend_29 { pt3dadd( -20.5477, 162.418, -14.0883, 0.88 ) }
    dend_29 { pt3dadd( -20.7782, 163.483, -14.3115, 0.29 ) }
    dend_29 { pt3dadd( -20.9609, 164.199, -14.486, 0.37 ) }
    dend_29 { pt3dadd( -21.1033, 164.706, -14.6104, 0.44 ) }
    dend_29 { pt3dadd( -21.1907, 164.978, -14.6709, 0.59 ) }
    dend_29 { pt3dadd( -21.2372, 165.111, -14.6932, 0.59 ) }
    dend_29 { pt3dadd( -21.3888, 165.546, -14.7318, 0.44 ) }
    dend_29 { pt3dadd( -21.5976, 166.247, -14.7439, 0.37 ) }
    dend_29 { pt3dadd( -21.6139, 166.314, -14.7436, 0.37 ) }
    dend_29 { pt3dadd( -21.814, 167.374, -14.7305, 0.52 ) }
    dend_29 { pt3dadd( -21.9524, 168.305, -14.7111, 0.81 ) }
    dend_29 { pt3dadd( -21.9987, 168.747, -14.7024, 0.81 ) }
    dend_29 { pt3dadd( -22.0279, 169.204, -14.6948, 0.66 ) }
    dend_29 { pt3dadd( -22.0298, 169.263, -14.6957, 0.66 ) }
    dend_29 { pt3dadd( -22.0513, 169.807, -14.7275, 0.44 ) }
    dend_29 { pt3dadd( -22.0863, 170.823, -14.8263, 0.37 ) }
    dend_29 { pt3dadd( -22.1156, 171.776, -14.9329, 0.37 ) }
    dend_29 { pt3dadd( -22.1166, 171.834, -14.9421, 0.37 ) }
    dend_29 { pt3dadd( -22.1151, 172.773, -15.1422, 1.62 ) }
    dend_29 { pt3dadd( -22.1082, 173.572, -15.3454, 2.65 ) }
    dend_29 { pt3dadd( -22.1018, 174.034, -15.4773, 2.65 ) }
    dend_29 { pt3dadd( -22.0795, 174.997, -15.7819, 1.92 ) }
    dend_29 { pt3dadd( -22.0505, 176.164, -16.1626, 0.74 ) }
    dend_29 { pt3dadd( -22.0414, 177.217, -16.4936, 0.37 ) }
    dend_29 { pt3dadd( -22.0653, 178.146, -16.7428, 0.37 ) }
    dend_29 { pt3dadd( -22.0694, 178.204, -16.7553, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -22.152, 178.797, -16.854, 0.37 ) }
    dend_29 { pt3dadd( -22.1834, 178.943, -16.8679, 0.37 ) }
    dend_29 { pt3dadd( -22.4267, 179.778, -16.8615, 0.37 ) }
    dend_29 { pt3dadd( -22.763, 180.781, -16.7935, 1.03 ) }
    dend_29 { pt3dadd( -23.0409, 181.592, -16.7242, 1.77 ) }
    dend_29 { pt3dadd( -23.1967, 182.066, -16.6847, 2.06 ) }
    dend_29 { pt3dadd( -23.348, 182.542, -16.6437, 1.92 ) }
    dend_29 { pt3dadd( -23.5549, 183.244, -16.5905, 1.33 ) }
    dend_29 { pt3dadd( -23.6854, 183.739, -16.5618, 0.59 ) }
    dend_29 { pt3dadd( -23.8797, 184.576, -16.5418, 0.37 ) }
    dend_29 { pt3dadd( -23.9737, 185.089, -16.5262, 0.59 ) }
    dend_29 { pt3dadd( -24.0151, 185.445, -16.5131, 0.66 ) }
    dend_29 { pt3dadd( -24.0298, 185.664, -16.5047, 0.66 ) }
    dend_29 { pt3dadd( -24.0556, 186.172, -16.4876, 0.37 ) }
    dend_29 { pt3dadd( -24.0843, 186.681, -16.4729, 0.37 ) }
    dend_29 { pt3dadd( -24.1649, 187.632, -16.4504, 0.37 ) }
    dend_29 { pt3dadd( -24.2635, 188.559, -16.4325, 0.37 ) }
    dend_29 { pt3dadd( -24.368, 189.42, -16.4182, 0.59 ) }
    dend_29 { pt3dadd( -24.5339, 190.702, -16.399, 0.52 ) }
    dend_29 { pt3dadd( -24.6397, 191.482, -16.3882, 1.33 ) }
    dend_29 { pt3dadd( -24.7422, 192.22, -16.3893, 2.14 ) }
    dend_29 { pt3dadd( -24.8481, 192.947, -16.4156, 2.36 ) }
    dend_29 { pt3dadd( -24.9262, 193.59, -16.4585, 2.58 ) }
    dend_29 { pt3dadd( -24.9614, 194.129, -16.5035, 2.36 ) }
    dend_29 { pt3dadd( -24.978, 194.939, -16.5761, 1.62 ) }
    dend_29 { pt3dadd( -24.9754, 195.736, -16.6524, 0.81 ) }
    dend_29 { pt3dadd( -24.9579, 196.74, -16.747, 0.52 ) }
    dend_29 { pt3dadd( -24.9412, 197.813, -16.835, 0.52 ) }
    dend_29 { pt3dadd( -24.9327, 198.579, -16.889, 0.44 ) }
    dend_29 { pt3dadd( -24.9373, 200.013, -16.9707, 0.44 ) }
    dend_29 { pt3dadd( -24.9685, 201.434, -17.0254, 1.11 ) }
    dend_29 { pt3dadd( -25.0105, 202.226, -17.0338, 1.84 ) }
    dend_29 { pt3dadd( -25.0829, 203.003, -17.0277, 2.36 ) }
    dend_29 { pt3dadd( -25.1249, 203.278, -17.0256, 2.5 ) }
    dend_29 { pt3dadd( -25.2603, 203.914, -17.0242, 2.21 ) }
    dend_29 { pt3dadd( -25.4196, 204.533, -17.0224, 1.55 ) }
    dend_29 { pt3dadd( -25.5826, 205.093, -17.0189, 0.96 ) }
    dend_29 { pt3dadd( -25.7422, 205.626, -17.0182, 0.66 ) }
    dend_29 { pt3dadd( -25.9702, 206.463, -17.0178, 0.37 ) }
    dend_29 { pt3dadd( -26.1439, 207.215, -17.0093, 0.66 ) }
    dend_29 { pt3dadd( -26.259, 207.792, -16.9961, 0.88 ) }
    dend_29 { pt3dadd( -26.4078, 208.722, -16.9645, 0.37 ) }
    dend_29 { pt3dadd( -26.4784, 209.297, -16.9397, 0.37 ) }
    dend_29 { pt3dadd( -26.5636, 210.233, -16.889, 0.37 ) }
    dend_29 { pt3dadd( -26.6217, 211.388, -16.8178, 1.11 ) }
    dend_29 { pt3dadd( -26.6223, 211.447, -16.8139, 1.11 ) }
    dend_29 { pt3dadd( -26.5911, 212.251, -16.7692, 1.99 ) }
    dend_29 { pt3dadd( -26.5444, 212.847, -16.743, 2.21 ) }
    dend_29 { pt3dadd( -26.5011, 213.277, -16.7303, 2.36 ) }
    dend_29 { pt3dadd( -26.3982, 214.274, -16.7108, 1.33 ) }
    dend_29 { pt3dadd( -26.3264, 214.964, -16.7027, 0.52 ) }
    dend_29 { pt3dadd( -26.2397, 215.998, -16.6975, 0.29 ) }
    dend_29 { pt3dadd( -26.2142, 216.428, -16.6967, 0.59 ) }
    dend_29 { pt3dadd( -26.2007, 216.789, -16.696, 0.59 ) }
    dend_29 { pt3dadd( -26.1865, 217.508, -16.692, 0.44 ) }
    dend_29 { pt3dadd( -26.1855, 218.165, -16.6846, 0.37 ) }
    dend_29 { pt3dadd( -26.19, 218.89, -16.6682, 0.37 ) }
    dend_29 { pt3dadd( -26.196, 219.703, -16.6502, 1.18 ) }
    dend_29 { pt3dadd( -26.1872, 220.3, -16.644, 1.77 ) }
    dend_29 { pt3dadd( -26.1626, 220.949, -16.642, 2.06 ) }
    dend_29 { pt3dadd( -26.1309, 221.53, -16.6444, 1.92 ) }
    dend_29 { pt3dadd( -26.0948, 222.099, -16.6508, 1.55 ) }
    dend_29 { pt3dadd( -26.0605, 222.985, -16.6679, 0.37 ) }
    dend_29 { pt3dadd( -26.0495, 223.952, -16.6935, 0.37 ) }
    dend_29 { pt3dadd( -26.0519, 224.023, -16.6974, 0.37 ) }
    dend_29 { pt3dadd( -26.1078, 224.744, -16.7497, 0.37 ) }
    dend_29 { pt3dadd( -26.1154, 224.815, -16.7554, 0.37 ) }
    dend_29 { pt3dadd( -26.2801, 226.168, -16.8598, 0.37 ) }
    dend_29 { pt3dadd( -26.2903, 226.238, -16.8646, 0.37 ) }
    dend_29 { pt3dadd( -26.4818, 227.497, -16.9672, 1.18 ) }
    dend_29 { pt3dadd( -26.6001, 228.274, -17.0329, 1.62 ) }
    dend_29 { pt3dadd( -26.6583, 228.7, -17.0675, 1.84 ) }
    dend_29 { pt3dadd( -26.7369, 229.429, -17.1165, 1.55 ) }
    dend_29 { pt3dadd( -26.782, 230.145, -17.1646, 1.11 ) }
    dend_29 { pt3dadd( -26.8131, 230.853, -17.2084, 0.52 ) }
    dend_29 { pt3dadd( -26.8385, 231.928, -17.2649, 0.44 ) }
    dend_29 { pt3dadd( -26.8466, 232.762, -17.3119, 0.37 ) }
    dend_29 { pt3dadd( -26.8477, 233.819, -17.3697, 0.37 ) }
    dend_29 { pt3dadd( -26.8273, 235.232, -17.4511, 1.33 ) }
    dend_29 { pt3dadd( -26.8179, 235.66, -17.4744, 1.84 ) }
    dend_29 { pt3dadd( -26.8146, 235.812, -17.4811, 1.84 ) }
    dend_29 { pt3dadd( -26.804, 236.243, -17.4997, 1.84 ) }
    dend_29 { pt3dadd( -26.8052, 237.202, -17.5349, 1.25 ) }
    dend_29 { pt3dadd( -26.8138, 237.777, -17.5602, 0.74 ) }
    dend_29 { pt3dadd( -26.846, 238.713, -17.5985, 0.37 ) }
    dend_29 { pt3dadd( -26.8694, 239.392, -17.6297, 0.44 ) }
    dend_29 { pt3dadd( -26.895, 240.139, -17.6744, 0.44 ) }
    dend_29 { pt3dadd( -26.936, 241.211, -17.749, 0.44 ) }
    dend_29 { pt3dadd( -26.9757, 242.1, -17.8184, 1.03 ) }
    dend_29 { pt3dadd( -27.0213, 242.896, -17.8816, 1.18 ) }
    dend_29 { pt3dadd( -27.0571, 243.575, -17.9489, 0.74 ) }
    dend_29 { pt3dadd( -27.0876, 244.078, -18.0045, 0.74 ) }
    dend_29 { pt3dadd( -27.1426, 244.86, -18.093, 0.59 ) }
    dend_29 { pt3dadd( -27.1482, 244.93, -18.1006, 0.59 ) }
    dend_29 { pt3dadd( -27.2017, 245.504, -18.1471, 0.59 ) }
    dend_29 { pt3dadd( -27.2997, 246.647, -18.2536, 1.47 ) }
    dend_29 { pt3dadd( -27.3542, 247.361, -18.3171, 2.21 ) }
    dend_29 { pt3dadd( -27.3926, 247.936, -18.3632, 2.5 ) }
    dend_29 { pt3dadd( -27.4135, 248.434, -18.4002, 2.65 ) }
    dend_29 { pt3dadd( -27.4274, 249.384, -18.4548, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -27.41, 250.35, -18.4909, 0.74 ) }
    dend_29 { pt3dadd( -27.3549, 251.476, -18.5234, 0.52 ) }
    dend_29 { pt3dadd( -27.3489, 251.555, -18.5267, 0.52 ) }
    dend_29 { pt3dadd( -27.253, 252.473, -18.5706, 0.52 ) }
    dend_29 { pt3dadd( -27.0925, 253.693, -18.6398, 1.33 ) }
    dend_29 { pt3dadd( -26.9636, 254.551, -18.6914, 1.4 ) }
    dend_29 { pt3dadd( -26.8166, 255.458, -18.7461, 1.18 ) }
    dend_29 { pt3dadd( -26.7106, 256.159, -18.8047, 0.52 ) }
    dend_29 { pt3dadd( -26.6934, 256.298, -18.8198, 0.52 ) }
    dend_29 { pt3dadd( -26.6147, 257.116, -18.9273, 0.52 ) }
    dend_29 { pt3dadd( -26.5671, 257.79, -19.0233, 0.52 ) }
    dend_29 { pt3dadd( -26.5118, 259.016, -19.1898, 0.74 ) }
    dend_29 { pt3dadd( -26.491, 260.091, -19.3119, 0.96 ) }
    dend_29 { pt3dadd( -26.4878, 261.216, -19.4308, 1.99 ) }
    dend_29 { pt3dadd( -26.4908, 261.586, -19.4669, 2.58 ) }
    dend_29 { pt3dadd( -26.4931, 262.107, -19.5077, 2.36 ) }
    dend_29 { pt3dadd( -26.4889, 262.695, -19.5439, 2.14 ) }
    dend_29 { pt3dadd( -26.4643, 263.556, -19.5743, 1.03 ) }
    dend_29 { pt3dadd( -26.4066, 264.481, -19.5893, 0.52 ) }
    dend_29 { pt3dadd( -26.3205, 265.539, -19.6022, 0.52 ) }
    dend_29 { pt3dadd( -26.2328, 266.654, -19.6062, 0.52 ) }
    dend_29 { pt3dadd( -26.1891, 267.251, -19.6037, 0.88 ) }
    dend_29 { pt3dadd( -26.1495, 267.823, -19.5965, 0.52 ) }
    dend_29 { pt3dadd( -26.0942, 268.757, -19.5754, 0.52 ) }
    dend_29 { pt3dadd( -26.0661, 269.504, -19.5488, 0.52 ) }
    dend_29 { pt3dadd( -26.0576, 270.708, -19.5071, 1.4 ) }
    dend_29 { pt3dadd( -26.0696, 271.374, -19.4854, 1.77 ) }
    dend_29 { pt3dadd( -26.0854, 271.817, -19.4695, 1.92 ) }
    dend_29 { pt3dadd( -26.1048, 272.244, -19.4523, 1.62 ) }
    dend_29 { pt3dadd( -26.1429, 272.977, -19.4192, 1.11 ) }
    dend_29 { pt3dadd( -26.1852, 273.847, -19.3811, 0.74 ) }
    dend_29 { pt3dadd( -26.2417, 275.115, -19.3417, 0.59 ) }
    dend_29 { pt3dadd( -26.317, 276.632, -19.2952, 0.59 ) }
    dend_29 { pt3dadd( -26.3799, 277.822, -19.259, 0.44 ) }
    dend_29 { pt3dadd( -26.4052, 278.328, -19.2431, 0.66 ) }
    dend_29 { pt3dadd( -26.4086, 278.4, -19.2407, 0.66 ) }
    dend_29 { pt3dadd( -26.4604, 279.553, -19.2016, 1.33 ) }
    dend_29 { pt3dadd( -26.5035, 280.49, -19.1689, 2.21 ) }
    dend_29 { pt3dadd( -26.5358, 281.213, -19.1307, 2.73 ) }
    dend_29 { pt3dadd( -26.5784, 281.892, -19.0919, 2.87 ) }
    dend_29 { pt3dadd( -26.6003, 282.207, -19.0769, 3.09 ) }
    dend_29 { pt3dadd( -26.6563, 282.87, -19.0562, 2.36 ) }
    dend_29 { pt3dadd( -26.7374, 283.66, -19.0433, 1.25 ) }
    dend_29 { pt3dadd( -26.807, 284.225, -19.0448, 0.66 ) }
    dend_29 { pt3dadd( -26.9752, 285.376, -19.0846, 0.37 ) }
    dend_29 { pt3dadd( -27.1259, 286.254, -19.1378, 0.66 ) }
    dend_29 { pt3dadd( -27.2409, 286.901, -19.1877, 0.52 ) }
    dend_29 { pt3dadd( -27.3019, 287.258, -19.2203, 0.66 ) }
    dend_29 { pt3dadd( -27.4111, 287.967, -19.2907, 0.74 ) }
    dend_29 { pt3dadd( -27.5136, 288.781, -19.3889, 0.81 ) }
    dend_29 { pt3dadd( -27.5912, 289.64, -19.5079, 1.25 ) }
    dend_29 { pt3dadd( -27.6198, 290.186, -19.5869, 1.69 ) }
    dend_29 { pt3dadd( -27.6255, 290.591, -19.648, 1.69 ) }
    dend_29 { pt3dadd( -27.6133, 291.387, -19.7681, 1.4 ) }
    dend_29 { pt3dadd( -27.5794, 292.259, -19.8999, 1.11 ) }
    dend_29 { pt3dadd( -27.5379, 292.967, -19.9932, 0.74 ) }
    dend_29 { pt3dadd( -27.4762, 294.02, -20.1212, 0.59 ) }
    dend_29 { pt3dadd( -27.4727, 294.099, -20.1302, 0.59 ) }
    dend_29 { pt3dadd( -27.4542, 294.899, -20.2092, 0.59 ) }
    dend_29 { pt3dadd( -27.4536, 294.968, -20.2139, 0.59 ) }
    dend_29 { pt3dadd( -27.4792, 296.334, -20.2478, 0.59 ) }
    dend_29 { pt3dadd( -27.5267, 297.193, -20.2473, 1.11 ) }
    dend_29 { pt3dadd( -27.5333, 297.261, -20.2479, 1.11 ) }
    dend_29 { pt3dadd( -27.6101, 297.894, -20.2551, 1.77 ) }
    dend_29 { pt3dadd( -27.6948, 298.487, -20.2675, 2.06 ) }
    dend_29 { pt3dadd( -27.7723, 298.981, -20.284, 2.06 ) }
    dend_29 { pt3dadd( -27.8873, 299.618, -20.312, 1.77 ) }
    dend_29 { pt3dadd( -27.9648, 300.055, -20.3306, 1.4 ) }
    dend_29 { pt3dadd( -28.0491, 300.557, -20.351, 0.81 ) }
    dend_29 { pt3dadd( -28.2394, 301.696, -20.4014, 0.59 ) }
    dend_29 { pt3dadd( -28.4238, 302.846, -20.4522, 0.59 ) }
    dend_29 { pt3dadd( -28.5245, 303.557, -20.4896, 0.96 ) }
    dend_29 { pt3dadd( -28.5953, 304.052, -20.5185, 0.96 ) }
    dend_29 { pt3dadd( -28.6175, 304.205, -20.5273, 0.96 ) }
    dend_29 { pt3dadd( -28.6729, 304.592, -20.5517, 0.81 ) }
    dend_29 { pt3dadd( -28.7657, 305.267, -20.5934, 0.81 ) }
    dend_29 { pt3dadd( -28.9041, 306.364, -20.658, 0.37 ) }
    dend_29 { pt3dadd( -29.0297, 307.44, -20.7198, 0.37 ) }
    dend_29 { pt3dadd( -29.1402, 308.444, -20.7543, 0.37 ) }
    dend_29 { pt3dadd( -29.2143, 309.144, -20.7637, 1.25 ) }
    dend_29 { pt3dadd( -29.2799, 309.866, -20.7476, 1.77 ) }
    dend_29 { pt3dadd( -29.3302, 310.461, -20.7124, 2.28 ) }
    dend_29 { pt3dadd( -29.3652, 311.027, -20.6543, 2.58 ) }
    dend_29 { pt3dadd( -29.3924, 311.745, -20.5648, 2.36 ) }
    dend_29 { pt3dadd( -29.4166, 312.378, -20.4781, 1.92 ) }
    dend_29 { pt3dadd( -29.4464, 313.158, -20.3697, 0.96 ) }
    dend_29 { pt3dadd( -29.4733, 313.886, -20.2757, 0.37 ) }
    dend_29 { pt3dadd( -29.519, 314.921, -20.1611, 0.37 ) }
    dend_29 { pt3dadd( -29.5563, 315.653, -20.1074, 0.74 ) }
    dend_29 { pt3dadd( -29.5822, 316.083, -20.0938, 0.74 ) }
    dend_29 { pt3dadd( -29.6269, 316.709, -20.0896, 0.74 ) }
    dend_29 { pt3dadd( -29.6774, 317.357, -20.12, 0.37 ) }
    dend_29 { pt3dadd( -29.7304, 318.07, -20.1938, 0.29 ) }
    dend_29 { pt3dadd( -29.7688, 318.619, -20.2809, 0.29 ) }
    dend_29 { pt3dadd( -29.773, 318.687, -20.2945, 0.29 ) }
    dend_29 { pt3dadd( -29.8358, 320.034, -20.6169, 0.29 ) }
    dend_29 { pt3dadd( -29.8497, 320.734, -20.8066, 0.74 ) }
    dend_29 { pt3dadd( -29.8463, 321.8, -21.1035, 1.84 ) }
    dend_29 { pt3dadd( -29.8402, 322.196, -21.2083, 2.28 ) }
    dend_29 { pt3dadd( -29.8398, 322.253, -21.2215, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -29.8408, 322.889, -21.3513, 2.06 ) }
    dend_29 { pt3dadd( -29.8522, 323.762, -21.5007, 1.25 ) }
    dend_29 { pt3dadd( -29.8935, 324.779, -21.6157, 0.15 ) }
    dend_29 { pt3dadd( -29.9264, 325.358, -21.6537, 0.15 ) }
    dend_29 { pt3dadd( -29.9905, 326.232, -21.6862, 0.74 ) }
    dend_29 { pt3dadd( -30.0217, 326.584, -21.691, 1.03 ) }
    dend_29 { pt3dadd( -30.068, 327.022, -21.6874, 1.03 ) }
    dend_29 { pt3dadd( -30.1275, 327.511, -21.6794, 0.74 ) }
    dend_29 { pt3dadd( -30.2019, 328.199, -21.6996, 0.22 ) }
    dend_29 { pt3dadd( -30.2801, 329.053, -21.7498, 0.22 ) }
    dend_29 { pt3dadd( -30.391, 330.496, -21.8571, 0.88 ) }
    dend_29 { pt3dadd( -30.4312, 331.072, -21.9017, 1.47 ) }
    dend_29 { pt3dadd( -30.4623, 331.569, -21.9443, 1.69 ) }
    dend_29 { pt3dadd( -30.521, 332.645, -22.0404, 1.03 ) }
    dend_29 { pt3dadd( -30.5787, 333.741, -22.1404, 0.37 ) }
    dend_29 { pt3dadd( -30.6343, 335.205, -22.2659, 0.37 ) }
    dend_29 { pt3dadd( -30.6615, 336.503, -22.3782, 0.29 ) }
    dend_29 { pt3dadd( -30.685, 337.836, -22.4803, 1.4 ) }
    dend_29 { pt3dadd( -30.6964, 338.356, -22.5125, 1.84 ) }
    dend_29 { pt3dadd( -30.714, 338.935, -22.5351, 1.69 ) }
    dend_29 { pt3dadd( -30.7369, 339.728, -22.5725, 0.81 ) }
    dend_29 { pt3dadd( -30.7752, 341.058, -22.6385, 0.29 ) }
    dend_29 { pt3dadd( -30.8083, 342.272, -22.6949, 0.29 ) }
    dend_29 { pt3dadd( -30.826, 342.911, -22.7149, 0.96 ) }
    dend_29 { pt3dadd( -30.8443, 343.499, -22.7284, 1.33 ) }
    dend_29 { pt3dadd( -30.8602, 344.05, -22.7325, 1.33 ) }
    dend_29 { pt3dadd( -30.872, 344.538, -22.7338, 1.03 ) }
    dend_29 { pt3dadd( -30.8724, 344.6, -22.7331, 1.03 ) }
    dend_29 { pt3dadd( -30.8541, 345.72, -22.7259, 0.29 ) }
    dend_29 { pt3dadd( -30.8255, 346.739, -22.7221, 0.29 ) }
    dend_29 { pt3dadd( -30.7886, 348.017, -22.7442, 0.88 ) }
    dend_29 { pt3dadd( -30.772, 348.949, -22.7736, 1.69 ) }
    dend_29 { pt3dadd( -30.7687, 349.48, -22.7943, 2.36 ) }
    dend_29 { pt3dadd( -30.7737, 349.773, -22.8074, 2.58 ) }
    dend_29 { pt3dadd( -30.8014, 350.521, -22.8465, 2.06 ) }
    dend_29 { pt3dadd( -30.8737, 352.021, -22.9182, 0.37 ) }
    dend_29 { pt3dadd( -30.9353, 353.016, -22.9597, 0.37 ) }
    dend_29 { pt3dadd( -31.0174, 354.101, -22.9906, 0.37 ) }
    dend_29 { pt3dadd( -31.084, 354.957, -23.0087, 0.37 ) }
    dend_29 { pt3dadd( -31.0891, 355.028, -23.0094, 0.37 ) }
    dend_29 { pt3dadd( -31.1837, 356.683, -22.9965, 0.37 ) }
    dend_29 { pt3dadd( -31.1854, 356.754, -22.9961, 0.37 ) }
    dend_29 { pt3dadd( -31.1744, 357.69, -23.0081, 0.37 ) }
    dend_29 { pt3dadd( -31.1481, 358.428, -23.0286, 0.96 ) }
    dend_29 { pt3dadd( -31.1079, 359.269, -23.0601, 1.25 ) }
    dend_29 { pt3dadd( -31.0626, 360.125, -23.0977, 0.88 ) }
    dend_29 { pt3dadd( -30.9764, 361.514, -23.1696, 0.29 ) }
    dend_29 { pt3dadd( -30.9688, 361.619, -23.1748, 0.29 ) }
    dend_29 { pt3dadd( -30.8911, 362.487, -23.2357, 0.88 ) }
    dend_29 { pt3dadd( -30.8187, 363.286, -23.2966, 1.62 ) }
    dend_29 { pt3dadd( -30.7769, 363.764, -23.331, 1.99 ) }
    dend_29 { pt3dadd( -30.7333, 364.249, -23.3579, 1.99 ) }
    dend_29 { pt3dadd( -30.6866, 364.691, -23.3684, 1.69 ) }
    dend_29 { pt3dadd( -30.5636, 365.65, -23.4076, 0.59 ) }
    dend_29 { pt3dadd( -30.3834, 366.852, -23.464, 0.29 ) }
    dend_29 { pt3dadd( -30.274, 367.583, -23.5134, 0.81 ) }
    dend_29 { pt3dadd( -30.182, 368.221, -23.5618, 0.81 ) }
    dend_29 { pt3dadd( -30.0614, 369.113, -23.6323, 0.29 ) }
    dend_29 { pt3dadd( -29.9469, 370.068, -23.705, 0.29 ) }
    dend_29 { pt3dadd( -29.7867, 371.513, -23.85, 0.29 ) }
    dend_29 { pt3dadd( -29.6451, 372.944, -24.044, 1.25 ) }
    dend_29 { pt3dadd( -29.5971, 373.486, -24.125, 1.69 ) }
    dend_29 { pt3dadd( -29.5623, 373.919, -24.1916, 1.92 ) }
    dend_29 { pt3dadd( -29.507, 374.688, -24.3078, 1.47 ) }
    dend_29 { pt3dadd( -29.4007, 376.036, -24.4863, 0.29 ) }
    dend_29 { pt3dadd( -29.3181, 376.84, -24.5897, 0.29 ) }
    dend_29 { pt3dadd( -29.1786, 377.913, -24.7049, 0.88 ) }
    dend_29 { pt3dadd( -29.1011, 378.429, -24.7526, 1.18 ) }
    dend_29 { pt3dadd( -29.0126, 378.942, -24.7896, 0.96 ) }
    dend_29 { pt3dadd( -28.8773, 379.661, -24.8172, 0.44 ) }
    dend_29 { pt3dadd( -28.7122, 380.589, -24.8017, 0.29 ) }
    dend_29 { pt3dadd( -28.695, 380.689, -24.8039, 0.29 ) }
    dend_29 { pt3dadd( -28.5869, 381.528, -24.8546, 0.29 ) }
    dend_29 { pt3dadd( -28.581, 381.598, -24.8601, 0.29 ) }
    dend_29 { pt3dadd( -28.5513, 382.107, -24.91, 0.81 ) }
    dend_29 { pt3dadd( -28.5351, 382.536, -24.9537, 0.81 ) }
    dend_29 { pt3dadd( -28.4987, 383.305, -25.0264, 0.66 ) }
    dend_29 { pt3dadd( -28.4294, 384.388, -25.121, 0.29 ) }
    dend_29 { pt3dadd( -28.3502, 385.276, -25.1838, 0.29 ) }
    dend_29 { pt3dadd( -28.2577, 386.149, -25.2446, 1.11 ) }
    dend_29 { pt3dadd( -28.1742, 386.922, -25.2927, 1.69 ) }
    dend_29 { pt3dadd( -28.125, 387.464, -25.326, 1.92 ) }
    dend_29 { pt3dadd( -28.0922, 387.94, -25.351, 1.92 ) }
    dend_29 { pt3dadd( -28.0406, 389.14, -25.4263, 0.74 ) }
    dend_29 { pt3dadd( -28.0288, 390.086, -25.49, 0.37 ) }
    dend_29 { pt3dadd( -28.0488, 391.154, -25.5597, 0.37 ) }
    dend_29 { pt3dadd( -28.1005, 392.402, -25.6516, 0.29 ) }
    dend_29 { pt3dadd( -28.1424, 393.133, -25.7126, 0.29 ) }
    dend_29 { pt3dadd( -28.1788, 393.779, -25.7724, 0.88 ) }
    dend_29 { pt3dadd( -28.1996, 394.199, -25.8113, 0.88 ) }
    dend_29 { pt3dadd( -28.211, 394.73, -25.8492, 0.52 ) }
    dend_29 { pt3dadd( -28.2024, 395.347, -25.8898, 0.29 ) }
    dend_29 { pt3dadd( -28.1807, 395.998, -25.9259, 0.29 ) }
    dend_29 { pt3dadd( -28.1639, 396.851, -25.973, 0.29 ) }
    dend_29 { pt3dadd( -28.1649, 397.656, -26.013, 1.55 ) }
    dend_29 { pt3dadd( -28.1705, 398.607, -26.0469, 2.58 ) }
    dend_29 { pt3dadd( -28.1744, 399.06, -26.0535, 2.65 ) }
    dend_29 { pt3dadd( -28.1725, 399.779, -26.0455, 2.21 ) }
    dend_29 { pt3dadd( -28.1517, 400.716, -26.0284, 1.11 ) }
    dend_29 { pt3dadd( -28.1174, 401.573, -26.0129, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -28.0604, 402.613, -25.9987, 0.52 ) }
    dend_29 { pt3dadd( -27.976, 403.673, -25.9851, 0.74 ) }
    dend_29 { pt3dadd( -27.8734, 404.676, -25.9719, 0.88 ) }
    dend_29 { pt3dadd( -27.7382, 405.646, -25.956, 1.33 ) }
    dend_29 { pt3dadd( -27.727, 405.704, -25.9556, 1.33 ) }
    dend_29 { pt3dadd( -27.5937, 406.262, -25.9572, 1.62 ) }
    dend_29 { pt3dadd( -27.4871, 406.652, -25.9602, 1.62 ) }
    dend_29 { pt3dadd( -27.4631, 406.727, -25.9601, 1.62 ) }
    dend_29 { pt3dadd( -27.4018, 406.915, -25.956, 1.62 ) }
    dend_29 { pt3dadd( -27.0316, 408.023, -25.9069, 0.52 ) }
    dend_29 { pt3dadd( -26.7556, 408.875, -25.8671, 0.29 ) }
    dend_29 { pt3dadd( -26.5068, 409.641, -25.8319, 0.29 ) }
    dend_29 { pt3dadd( -26.2853, 410.418, -25.7616, 0.96 ) }
    dend_29 { pt3dadd( -26.1668, 410.932, -25.6872, 1.4 ) }
    dend_29 { pt3dadd( -26.1567, 410.999, -25.6746, 1.4 ) }
    dend_29 { pt3dadd( -26.1306, 411.43, -25.5788, 1.4 ) }
    dend_29 { pt3dadd( -26.1309, 411.512, -25.5581, 1.4 ) }
    dend_29 { pt3dadd( -26.1805, 412.56, -25.2821, 1.03 ) }
    dend_29 { pt3dadd( -26.2471, 413.515, -25.0327, 0.44 ) }
    dend_29 { pt3dadd( -26.3293, 414.713, -24.734, 0.29 ) }
    dend_29 { pt3dadd( -26.3933, 415.556, -24.5096, 0.29 ) }
    dend_29 { pt3dadd( -26.4731, 416.598, -24.2353, 1.33 ) }
    dend_29 { pt3dadd( -26.5162, 417.149, -24.0959, 1.84 ) }
    dend_29 { pt3dadd( -26.5609, 417.713, -23.9667, 1.84 ) }
    dend_29 { pt3dadd( -26.6141, 418.347, -23.8243, 1.25 ) }
    dend_29 { pt3dadd( -26.7249, 419.541, -23.571, 0.37 ) }
    dend_29 { pt3dadd( -26.8629, 420.861, -23.3391, 0.29 ) }
    dend_29 { pt3dadd( -26.8712, 420.928, -23.3292, 0.29 ) }
    dend_29 { pt3dadd( -26.9793, 421.708, -23.2255, 0.44 ) }
    dend_29 { pt3dadd( -27.1301, 422.706, -23.1093, 0.52 ) }
    dend_29 { pt3dadd( -27.2933, 423.686, -23.0182, 0.44 ) }
    dend_29 { pt3dadd( -27.5039, 424.962, -22.9553, 0.44 ) }
    dend_29 { pt3dadd( -27.7364, 426.345, -22.902, 1.11 ) }
    dend_29 { pt3dadd( -27.8651, 427.133, -22.878, 1.69 ) }
    dend_29 { pt3dadd( -27.9461, 427.647, -22.8671, 1.84 ) }
    dend_29 { pt3dadd( -28.025, 428.201, -22.8604, 1.84 ) }
    dend_29 { pt3dadd( -28.1642, 429.274, -22.8592, 0.66 ) }
    dend_29 { pt3dadd( -28.2982, 430.415, -22.8741, 0.37 ) }
    dend_29 { pt3dadd( -28.313, 430.554, -22.878, 0.37 ) }
    dend_29 { pt3dadd( -28.4516, 431.923, -22.9094, 0.37 ) }
    dend_29 { pt3dadd( -28.5434, 433.016, -22.9217, 0.96 ) }
    dend_29 { pt3dadd( -28.5508, 433.159, -22.922, 0.96 ) }
    dend_29 { pt3dadd( -28.5634, 433.887, -22.9133, 1.55 ) }
    dend_29 { pt3dadd( -28.5373, 434.543, -22.9063, 1.84 ) }
    dend_29 { pt3dadd( -28.5319, 434.612, -22.9056, 1.84 ) }
    dend_29 { pt3dadd( -28.4678, 435.216, -22.9013, 1.69 ) }
    dend_29 { pt3dadd( -28.3702, 436.083, -22.8971, 0.74 ) }
    dend_29 { pt3dadd( -28.281, 437.007, -22.8628, 0.29 ) }
    dend_29 { pt3dadd( -28.2059, 438.037, -22.7984, 0.29 ) }
    dend_29 { pt3dadd( -28.2036, 438.108, -22.7926, 0.29 ) }
    dend_29 { pt3dadd( -28.2063, 439.111, -22.6965, 0.29 ) }
    dend_29 { pt3dadd( -28.2097, 439.179, -22.6886, 0.29 ) }
    dend_29 { pt3dadd( -28.2967, 440.184, -22.5449, 0.81 ) }
    dend_29 { pt3dadd( -28.3692, 440.811, -22.449, 1.47 ) }
    dend_29 { pt3dadd( -28.4348, 441.311, -22.3777, 1.77 ) }
    dend_29 { pt3dadd( -28.4495, 441.422, -22.3662, 1.77 ) }
    dend_29 { pt3dadd( -28.5159, 441.986, -22.3265, 1.55 ) }
    dend_29 { pt3dadd( -28.5317, 442.125, -22.3208, 1.55 ) }
    dend_29 { pt3dadd( -28.6031, 442.788, -22.3166, 0.96 ) }
    dend_29 { pt3dadd( -28.6634, 443.52, -22.3083, 0.59 ) }
    dend_29 { pt3dadd( -28.7566, 444.875, -22.2625, 0.29 ) }
    dend_29 { pt3dadd( -28.8106, 445.771, -22.2187, 0.29 ) }
    dend_29 { pt3dadd( -28.8143, 445.842, -22.2143, 0.29 ) }
    dend_29 { pt3dadd( -28.8621, 446.927, -22.1363, 0.59 ) }
    dend_29 { pt3dadd( -28.8857, 447.642, -22.0756, 0.81 ) }
    dend_29 { pt3dadd( -28.8953, 448.562, -21.9873, 1.25 ) }
    dend_29 { pt3dadd( -28.8893, 449.013, -21.9403, 1.62 ) }
    dend_29 { pt3dadd( -28.8871, 449.369, -21.9076, 1.69 ) }
    dend_29 { pt3dadd( -28.885, 449.523, -21.8957, 1.69 ) }
    dend_29 { pt3dadd( -28.8787, 450.044, -21.8638, 1.25 ) }
    dend_29 { pt3dadd( -28.8804, 450.886, -21.8136, 0.66 ) }
    dend_29 { pt3dadd( -28.884, 451.757, -21.7655, 0.66 ) }
    dend_29 { pt3dadd( -28.8909, 452.774, -21.7025, 0.66 ) }
    dend_29 { pt3dadd( -28.9045, 454.003, -21.6212, 0.37 ) }
    dend_29 { pt3dadd( -28.9259, 454.873, -21.5626, 0.37 ) }
    dend_29 { pt3dadd( -28.9528, 455.918, -21.4889, 1.62 ) }
    dend_29 { pt3dadd( -28.9631, 456.496, -21.4461, 2.06 ) }
    dend_29 { pt3dadd( -28.9645, 456.887, -21.4165, 2.06 ) }
    dend_29 { pt3dadd( -28.9629, 457.757, -21.3526, 1.47 ) }
    dend_29 { pt3dadd( -28.9561, 458.614, -21.2936, 0.81 ) }
    dend_29 { pt3dadd( -28.9277, 459.58, -21.2367, 0.37 ) }
    dend_29 { pt3dadd( -28.8687, 460.736, -21.1863, 0.88 ) }
    dend_29 { pt3dadd( -28.8636, 460.805, -21.1832, 0.88 ) }
    dend_29 { pt3dadd( -28.8191, 461.301, -21.1607, 0.88 ) }
    dend_29 { pt3dadd( -28.8125, 461.362, -21.1579, 0.88 ) }
    dend_29 { pt3dadd( -28.7527, 461.969, -21.138, 1.11 ) }
    dend_29 { pt3dadd( -28.738, 462.143, -21.1355, 1.11 ) }
    dend_29 { pt3dadd( -28.7198, 462.492, -21.112, 1.11 ) }
    dend_29 { pt3dadd( -28.7166, 462.563, -21.1052, 1.11 ) }
    dend_29 { pt3dadd( -28.6938, 463.137, -21.0352, 0.81 ) }
    dend_29 { pt3dadd( -28.6664, 464.004, -20.9157, 0.66 ) }
    dend_29 { pt3dadd( -28.6429, 464.812, -20.7941, 0.44 ) }
    dend_29 { pt3dadd( -28.6067, 465.922, -20.6211, 0.29 ) }
    dend_29 { pt3dadd( -28.6022, 466.03, -20.6038, 0.29 ) }
    dend_29 { pt3dadd( -28.5646, 466.604, -20.5088, 0.29 ) }
    dend_29 { pt3dadd( -28.5552, 466.708, -20.4917, 0.29 ) }
    dend_29 { pt3dadd( -28.4905, 467.542, -20.3839, 0.81 ) }
    dend_29 { pt3dadd( -28.4856, 467.632, -20.376, 0.81 ) }
    dend_29 { pt3dadd( -28.4643, 468.181, -20.3269, 0.81 ) }
    dend_29 { pt3dadd( -28.46, 468.392, -20.3039, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( -28.4399, 469.493, -20.1696, 0.59 ) }
    dend_29 { pt3dadd( -28.4281, 470.846, -19.9965, 0.88 ) }
    dend_29 { pt3dadd( -28.429, 470.985, -19.9789, 0.88 ) }
    dend_29 { pt3dadd( -28.4618, 472.196, -19.7826, 1.62 ) }
    dend_29 { pt3dadd( -28.4863, 472.718, -19.6863, 1.77 ) }
    dend_29 { pt3dadd( -28.5297, 473.517, -19.5275, 1.4 ) }
    dend_29 { pt3dadd( -28.5773, 474.303, -19.3608, 0.88 ) }
    dend_29 { pt3dadd( -28.6691, 475.653, -19.0727, 0.52 ) }
    dend_29 { pt3dadd( -28.7645, 476.808, -18.8502, 0.74 ) }
    dend_29 { pt3dadd( -28.8441, 477.523, -18.7375, 1.33 ) }
    dend_29 { pt3dadd( -28.9567, 478.274, -18.625, 1.84 ) }
    dend_29 { pt3dadd( -29.0251, 478.684, -18.5692, 1.99 ) }
    dend_29 { pt3dadd( -29.1189, 479.26, -18.5013, 1.99 ) }
    dend_29 { pt3dadd( -29.2323, 480.019, -18.43, 1.18 ) }
    dend_29 { pt3dadd( -29.3699, 481.03, -18.3652, 0.52 ) }
    dend_29 { pt3dadd( -29.5568, 482.541, -18.262, 0.44 ) }
    dend_29 { pt3dadd( -29.6878, 483.677, -18.1837, 1.03 ) }
    dend_29 { pt3dadd( -29.7704, 484.554, -18.1232, 1.25 ) }
    dend_29 { pt3dadd( -29.7989, 485.161, -18.0811, 1.55 ) }
    dend_29 { pt3dadd( -29.7995, 485.232, -18.0762, 1.55 ) }
    dend_29 { pt3dadd( -29.7848, 485.912, -18.0351, 1.55 ) }
    dend_29 { pt3dadd( -29.7611, 486.779, -17.9961, 1.25 ) }
    dend_29 { pt3dadd( -29.7535, 487.729, -17.9568, 0.74 ) }
    dend_29 { pt3dadd( -29.7562, 489.496, -17.887, 0.29 ) }
    dend_29 { pt3dadd( -29.7569, 489.564, -17.8844, 0.29 ) }
    dend_29 { pt3dadd( -29.7858, 491.159, -17.8264, 0.29 ) }
    dend_29 { pt3dadd( -29.8311, 492.461, -17.7833, 0.29 ) }
    dend_29 { pt3dadd( -29.9004, 493.687, -17.7478, 1.47 ) }
    dend_29 { pt3dadd( -29.9609, 494.443, -17.7292, 2.06 ) }
    dend_29 { pt3dadd( -30.0162, 494.94, -17.7201, 2.36 ) }
    dend_29 { pt3dadd( -30.1185, 495.816, -17.7048, 2.06 ) }
    dend_29 { pt3dadd( -30.299, 497.302, -17.6803, 0.81 ) }
    dend_29 { pt3dadd( -30.4852, 498.663, -17.6306, 0.81 ) }
    dend_29 { pt3dadd( -30.6142, 499.535, -17.583, 0.52 ) }
    dend_29 { pt3dadd( -30.7764, 500.588, -17.5076, 0.81 ) }
    dend_29 { pt3dadd( -30.9298, 501.602, -17.4169, 1.03 ) }
    dend_29 { pt3dadd( -30.9396, 501.67, -17.4092, 1.03 ) }
    dend_29 { pt3dadd( -31.0429, 502.591, -17.2801, 1.03 ) }
    dend_29 { pt3dadd( -31.0563, 502.761, -17.2483, 1.03 ) }
    dend_29 { pt3dadd( -31.1051, 503.707, -17.0557, 0.88 ) }
    dend_29 { pt3dadd( -31.1068, 503.816, -17.0329, 0.88 ) }
    dend_29 { pt3dadd( -31.1008, 504.82, -16.835, 0.74 ) }
    dend_29 { pt3dadd( -31.063, 505.939, -16.6377, 0.37 ) }
    dend_29 { pt3dadd( -30.9796, 507.376, -16.4228, 1.18 ) }
    dend_29 { pt3dadd( -30.9269, 508.341, -16.2892, 1.92 ) }
    dend_29 { pt3dadd( -30.9006, 508.919, -16.217, 1.92 ) }
    dend_29 { pt3dadd( -30.8754, 509.587, -16.1429, 1.62 ) }
    dend_29 { pt3dadd( -30.8471, 510.639, -16.0462, 0.96 ) }
    dend_29 { pt3dadd( -30.8288, 511.665, -15.9733, 0.74 ) }
    dend_29 { pt3dadd( -30.8159, 512.899, -15.929, 0.74 ) }
    dend_29 { pt3dadd( -30.8287, 513.987, -15.9003, 0.74 ) }
    dend_29 { pt3dadd( -30.8321, 514.127, -15.8975, 0.74 ) }
    dend_29 { pt3dadd( -30.8728, 515.196, -15.882, 0.74 ) }
    dend_29 { pt3dadd( -30.8804, 515.362, -15.8817, 0.74 ) }
    dend_29 { pt3dadd( -30.9269, 516.546, -15.8893, 0.74 ) }
    dend_29 { pt3dadd( -30.9693, 517.852, -15.9046, 0.96 ) }
    dend_29 { pt3dadd( -30.9767, 518.148, -15.9087, 0.96 ) }
    dend_29 { pt3dadd( -31.0048, 519.375, -15.9221, 0.96 ) }
    dend_29 { pt3dadd( -31.0264, 520.134, -15.927, 1.47 ) }
    dend_29 { pt3dadd( -31.0348, 520.353, -15.927, 1.47 ) }
    dend_29 { pt3dadd( -31.0848, 521.39, -15.9176, 1.69 ) }
    dend_29 { pt3dadd( -31.0905, 521.488, -15.9163, 1.69 ) }
    dend_29 { pt3dadd( -31.1272, 522.146, -15.9185, 1.69 ) }
    dend_29 { pt3dadd( -31.163, 523.303, -15.9263, 1.11 ) }
    dend_29 { pt3dadd( -31.1677, 523.823, -15.9383, 1.03 ) }
    dend_29 { pt3dadd( -31.1662, 524.32, -15.9559, 1.03 ) }
    dend_29 { pt3dadd( -31.1553, 525.468, -16.0066, 0.59 ) }
    dend_29 { pt3dadd( -31.1315, 527.1, -16.0838, 0.44 ) }
    dend_29 { pt3dadd( -31.0927, 528.85, -16.1752, 0.44 ) }
    dend_29 { pt3dadd( -31.0519, 529.917, -16.228, 1.11 ) }
    dend_29 { pt3dadd( -30.9909, 530.915, -16.2816, 1.69 ) }
    dend_29 { pt3dadd( -30.9235, 531.637, -16.3151, 1.99 ) }
    dend_29 { pt3dadd( -30.8348, 532.39, -16.3444, 1.62 ) }
    dend_29 { pt3dadd( -30.8254, 532.461, -16.3459, 1.62 ) }
    dend_29 { pt3dadd( -30.6678, 533.574, -16.3578, 0.88 ) }
    dend_29 { pt3dadd( -30.4564, 535.061, -16.3717, 0.74 ) }
    dend_29 { pt3dadd( -30.1833, 536.921, -16.4033, 0.74 ) }
    dend_29 { pt3dadd( -30.1733, 536.99, -16.4046, 0.74 ) }
    dend_29 { pt3dadd( -30.0049, 538.146, -16.4326, 0.74 ) }
    dend_29 { pt3dadd( -29.8033, 539.606, -16.4229, 0.88 ) }
    dend_29 { pt3dadd( -29.6202, 541.136, -16.3677, 0.66 ) }
    dend_29 { pt3dadd( -29.6121, 541.216, -16.3621, 0.66 ) }
    dend_29 { pt3dadd( -29.4961, 542.552, -16.2458, 0.66 ) }
    dend_29 { pt3dadd( -29.4114, 543.604, -16.1372, 0.66 ) }
    dend_29 { pt3dadd( -29.3323, 545.051, -15.9603, 1.25 ) }
    dend_29 { pt3dadd( -29.3233, 545.696, -15.8695, 1.99 ) }
    dend_29 { pt3dadd( -29.3394, 546.122, -15.805, 1.99 ) }
    dend_29 { pt3dadd( -29.3973, 546.849, -15.7112, 1.55 ) }
    dend_29 { pt3dadd( -29.4174, 546.995, -15.696, 1.55 ) }
    dend_29 { pt3dadd( -29.5786, 547.909, -15.6338, 1.33 ) }
    dend_29 { pt3dadd( -29.7499, 548.903, -15.6351, 1.18 ) }
    dend_29 { pt3dadd( -29.8697, 549.767, -15.6407, 0.96 ) }
    dend_29 { pt3dadd( -29.9409, 550.498, -15.6163, 0.96 ) }
    dend_29 { pt3dadd( -29.9473, 550.647, -15.6062, 0.96 ) }
    dend_29 { pt3dadd( -29.9499, 551.5, -15.5292, 0.66 ) }
    dend_29 { pt3dadd( -29.9009, 552.511, -15.4138, 0.52 ) }
    dend_29 { pt3dadd( -29.8275, 553.422, -15.2947, 0.52 ) }
    dend_29 { pt3dadd( -29.6935, 554.743, -15.1052, 0.81 ) }
    dend_29 { pt3dadd( -29.5565, 555.846, -14.9368, 1.33 ) }
    dend_29 { pt3dadd( -29.5358, 555.993, -14.9123, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( -29.3994, 556.83, -14.7846, 1.77 ) }
    dend_29 { pt3dadd( -29.3093, 557.349, -14.7151, 2.28 ) }
    dend_29 { pt3dadd( -29.297, 557.418, -14.7123, 2.28 ) }
    dend_29 { pt3dadd( -29.1946, 558.086, -14.7679, 2.28 ) }
    dend_29 { pt3dadd( -29.1375, 558.521, -14.8218, 2.28 ) }
    dend_29 { pt3dadd( -29.0344, 559.428, -14.9473, 1.92 ) }
    dend_29 { pt3dadd( -29.0275, 559.497, -14.9578, 1.92 ) }
    dend_29 { pt3dadd( -28.8964, 560.956, -15.1846, 0.81 ) }
    dend_29 { pt3dadd( -28.8018, 562.42, -15.3184, 0.81 ) }
    dend_29 { pt3dadd( -28.7954, 562.572, -15.3252, 0.81 ) }
    dend_29 { pt3dadd( -28.7778, 563.457, -15.3188, 0.66 ) }
    dend_29 { pt3dadd( -28.7782, 563.538, -15.3127, 0.66 ) }
    dend_29 { pt3dadd( -28.8083, 564.58, -15.19, 0.66 ) }
    dend_29 { pt3dadd( -28.8913, 565.947, -14.9349, 0.66 ) }
    dend_29 { pt3dadd( -28.9038, 566.082, -14.9052, 0.66 ) }
    dend_29 { pt3dadd( -29.0114, 566.859, -14.7064, 1.18 ) }
    dend_29 { pt3dadd( -29.0344, 566.984, -14.6734, 1.18 ) }
    dend_29 { pt3dadd( -29.1696, 567.683, -14.5093, 1.4 ) }
    dend_29 { pt3dadd( -29.2109, 567.887, -14.4697, 1.4 ) }
    dend_29 { pt3dadd( -29.3113, 568.393, -14.3943, 1.4 ) }
    dend_29 { pt3dadd( -29.4988, 569.394, -14.2482, 1.11 ) }
    dend_29 { pt3dadd( -29.7675, 570.999, -14.0281, 0.88 ) }
    dend_29 { pt3dadd( -29.9562, 572.222, -13.8838, 1.03 ) }
    dend_29 { pt3dadd( -30.1228, 573.431, -13.7671, 1.33 ) }
    dend_29 { pt3dadd( -30.1402, 573.568, -13.7573, 1.33 ) }
    dend_29 { pt3dadd( -30.1975, 574.018, -13.729, 1.33 ) }
    dend_29 { pt3dadd( -30.3673, 575.339, -13.6751, 0.88 ) }
    dend_29 { pt3dadd( -30.4628, 576.05, -13.6368, 0.88 ) }
    dend_29 { pt3dadd( -30.6152, 577.203, -13.5567, 0.74 ) }
    dend_29 { pt3dadd( -30.7128, 578.052, -13.4852, 0.74 ) }
    dend_29 { pt3dadd( -30.8046, 578.981, -13.3989, 1.33 ) }
    dend_29 { pt3dadd( -30.8112, 579.059, -13.3911, 1.33 ) }
    dend_29 { pt3dadd( -30.859, 579.872, -13.3381, 1.92 ) }
    dend_29 { pt3dadd( -30.8869, 580.508, -13.3251, 2.21 ) }
    dend_29 { pt3dadd( -30.9137, 580.986, -13.3547, 2.21 ) }
    dend_29 { pt3dadd( -30.9758, 581.727, -13.4514, 1.77 ) }
    dend_29 { pt3dadd( -31.0679, 582.651, -13.6126, 1.18 ) }
    dend_29 { pt3dadd( -31.184, 583.623, -13.7947, 0.81 ) }
    dend_29 { pt3dadd( -31.3841, 585.088, -14.0909, 0.74 ) }
    dend_29 { pt3dadd( -31.6093, 586.691, -14.4072, 0.66 ) }
    dend_29 { pt3dadd( -31.7893, 588.06, -14.6498, 0.66 ) }
    dend_29 { pt3dadd( -31.7976, 588.13, -14.6608, 0.66 ) }
    dend_29 { pt3dadd( -31.8851, 589.141, -14.7792, 0.66 ) }
    dend_29 { pt3dadd( -31.8882, 589.255, -14.7847, 0.66 ) }
    dend_29 { pt3dadd( -31.8347, 590.742, -14.7985, 0.66 ) }
    dend_29 { pt3dadd( -31.7158, 592.074, -14.7492, 0.66 ) }
    dend_29 { pt3dadd( -31.7034, 592.174, -14.7433, 0.66 ) }
    dend_29 { pt3dadd( -31.5405, 593.42, -14.6661, 0.66 ) }
    dend_29 { pt3dadd( -31.2706, 595.286, -14.54, 0.66 ) }
    dend_29 { pt3dadd( -31.2544, 595.391, -14.5328, 0.66 ) }
    dend_29 { pt3dadd( -31.1654, 595.933, -14.4941, 1.25 ) }
    dend_29 { pt3dadd( -31.1524, 596.011, -14.4885, 1.25 ) }
    dend_29 { pt3dadd( -30.9683, 597.188, -14.4063, 1.25 ) }
    dend_29 { pt3dadd( -30.9541, 597.293, -14.3994, 1.25 ) }
    dend_29 { pt3dadd( -30.8183, 598.314, -14.314, 1.25 ) }
    dend_29 { pt3dadd( -30.7082, 599.186, -14.2264, 0.96 ) }
    dend_29 { pt3dadd( -30.6096, 600.054, -14.1164, 0.96 ) }
    dend_29 { pt3dadd( -30.6038, 600.115, -14.1078, 0.96 ) }
    dend_29 { pt3dadd( -30.5356, 600.997, -13.9747, 1.11 ) }
    dend_29 { pt3dadd( -30.4419, 602.507, -13.7381, 0.52 ) }
    dend_29 { pt3dadd( -30.3888, 603.502, -13.5799, 1.18 ) }
    dend_29 { pt3dadd( -30.3201, 604.564, -13.4143, 1.92 ) }
    dend_29 { pt3dadd( -30.2648, 605.275, -13.3211, 2.43 ) }
    dend_29 { pt3dadd( -30.2061, 605.918, -13.2513, 2.43 ) }
    dend_29 { pt3dadd( -30.127, 606.693, -13.1839, 2.43 ) }
    dend_29 { pt3dadd( -29.9838, 607.995, -13.1079, 1.25 ) }
    dend_29 { pt3dadd( -29.819, 609.243, -13.0691, 0.59 ) }
    dend_29 { pt3dadd( -29.6261, 610.579, -13.103, 0.74 ) }
    dend_29 { pt3dadd( -29.496, 611.423, -13.1582, 1.03 ) }
    dend_29 { pt3dadd( -29.467, 611.627, -13.1817, 1.03 ) }
    dend_29 { pt3dadd( -29.4024, 612.179, -13.274, 1.03 ) }
    dend_29 { pt3dadd( -29.3373, 612.949, -13.4373, 0.59 ) }
    dend_29 { pt3dadd( -29.2895, 614.103, -13.7129, 0.59 ) }
    dend_29 { pt3dadd( -29.2882, 614.218, -13.7388, 0.59 ) }
    dend_29 { pt3dadd( -29.2503, 615.29, -13.9579, 0.59 ) }
    dend_29 { pt3dadd( -29.2242, 615.59, -13.9977, 1.03 ) }
    dend_29 { pt3dadd( -29.1282, 616.356, -14.0516, 0.66 ) }
    dend_29 { pt3dadd( -29.0508, 616.853, -14.0549, 0.66 ) }
    dend_29 { pt3dadd( -28.8979, 617.731, -13.9827, 0.66 ) }
    dend_29 { pt3dadd( -28.6958, 618.935, -13.8406, 0.59 ) }
    dend_29 { pt3dadd( -28.4686, 620.356, -13.6383, 1.03 ) }
    dend_29 { pt3dadd( -28.3892, 620.887, -13.5563, 1.84 ) }
    dend_29 { pt3dadd( -28.3216, 621.398, -13.4746, 1.84 ) }
    dend_29 { pt3dadd( -28.1764, 622.745, -13.2622, 1.18 ) }
    dend_29 { pt3dadd( -28.0915, 623.819, -13.097, 0.66 ) }
    dend_29 { pt3dadd( -28.066, 624.838, -12.9554, 0.66 ) }
    dend_29 { pt3dadd( -28.0692, 625.015, -12.9369, 0.66 ) }
    dend_29 { pt3dadd( -28.1274, 626.429, -12.8232, 0.66 ) }
    dend_29 { pt3dadd( -28.1949, 627.533, -12.7632, 1.18 ) }
    dend_29 { pt3dadd( -28.2556, 628.289, -12.7464, 1.18 ) }
    dend_29 { pt3dadd( -28.3674, 629.5, -12.7235, 0.66 ) }
    dend_29 { pt3dadd( -28.4725, 630.493, -12.7087, 0.66 ) }
    dend_29 { pt3dadd( -28.5883, 631.433, -12.6998, 1.25 ) }
    dend_29 { pt3dadd( -28.7031, 632.202, -12.6948, 1.99 ) }
    dend_29 { pt3dadd( -28.7976, 632.774, -12.6902, 2.21 ) }
    dend_29 { pt3dadd( -29.0188, 634.019, -12.683, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.06431, -63.2745, -19.2305, 0.44 ) }
    dend_12 { pt3dadd( -7.3496, -63.4923, -19.207, 0.44 ) }
    dend_12 { pt3dadd( -7.3751, -63.5124, -19.2045, 0.44 ) }
    dend_12 { pt3dadd( -7.75088, -63.8215, -19.1618, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -8.11247, -64.1119, -19.1217, 1.18 ) }
    dend_12 { pt3dadd( -8.36708, -64.3125, -19.095, 0.59 ) }
    dend_12 { pt3dadd( -8.39226, -64.3322, -19.0924, 0.59 ) }
    dend_12 { pt3dadd( -8.63439, -64.5341, -19.0697, 0.22 ) }
    dend_12 { pt3dadd( -8.8763, -64.7309, -19.0445, 0.22 ) }
    dend_12 { pt3dadd( -9.12365, -64.9233, -19.0172, 0.59 ) }
    dend_12 { pt3dadd( -9.28925, -65.0542, -18.997, 0.59 ) }
    dend_12 { pt3dadd( -9.3265, -65.0873, -18.9902, 0.59 ) }
    dend_12 { pt3dadd( -9.58249, -65.3348, -18.9331, 0.22 ) }
    dend_12 { pt3dadd( -9.78073, -65.5466, -18.883, 1.18 ) }
    dend_12 { pt3dadd( -9.96971, -65.792, -18.8285, 1.25 ) }
    dend_12 { pt3dadd( -9.98761, -65.8195, -18.8227, 1.25 ) }
    dend_12 { pt3dadd( -10.2885, -66.3433, -18.6899, 0.22 ) }
    dend_12 { pt3dadd( -10.3728, -66.5053, -18.6469, 0.37 ) }
    dend_12 { pt3dadd( -10.4204, -66.6168, -18.6126, 0.37 ) }
    dend_12 { pt3dadd( -10.6466, -67.238, -18.3968, 0.22 ) }
    dend_12 { pt3dadd( -10.7156, -67.4517, -18.3176, 0.22 ) }
    dend_12 { pt3dadd( -10.8625, -67.9314, -18.1325, 1.47 ) }
    dend_12 { pt3dadd( -10.9654, -68.3161, -17.9971, 2.21 ) }
    dend_12 { pt3dadd( -11.0613, -68.7069, -17.8657, 2.21 ) }
    dend_12 { pt3dadd( -11.0685, -68.7356, -17.8556, 2.21 ) }
    dend_12 { pt3dadd( -11.1779, -69.2839, -17.6612, 0.74 ) }
    dend_12 { pt3dadd( -11.1824, -69.3133, -17.6516, 0.74 ) }
    dend_12 { pt3dadd( -11.2532, -69.9116, -17.4846, 0.22 ) }
    dend_12 { pt3dadd( -11.2667, -70.0396, -17.4507, 0.59 ) }
    dend_12 { pt3dadd( -11.3396, -70.6619, -17.3016, 0.22 ) }
    dend_12 { pt3dadd( -11.3823, -71.0606, -17.2077, 0.22 ) }
    dend_12 { pt3dadd( -11.4136, -71.4163, -17.1197, 0.22 ) }
    dend_12 { pt3dadd( -11.4421, -71.718, -17.0447, 0.52 ) }
    dend_12 { pt3dadd( -11.4562, -71.8555, -17.013, 0.52 ) }
    dend_12 { pt3dadd( -11.5125, -72.4292, -16.9008, 0.22 ) }
    dend_12 { pt3dadd( -11.5416, -72.797, -16.8434, 0.22 ) }
    dend_12 { pt3dadd( -11.5823, -73.323, -16.7663, 1.55 ) }
    dend_12 { pt3dadd( -11.5922, -73.6242, -16.7203, 1.69 ) }
    dend_12 { pt3dadd( -11.5723, -74.4479, -16.5694, 0.22 ) }
    dend_12 { pt3dadd( -11.5357, -74.8656, -16.4808, 0.22 ) }
    dend_12 { pt3dadd( -11.4875, -75.1489, -16.4129, 0.52 ) }
    dend_12 { pt3dadd( -11.4118, -75.4394, -16.3465, 0.52 ) }
    dend_12 { pt3dadd( -11.2592, -75.8836, -16.2568, 0.22 ) }
    dend_12 { pt3dadd( -11.1194, -76.2324, -16.1928, 1.4 ) }
    dend_12 { pt3dadd( -10.9874, -76.5231, -16.1458, 1.69 ) }
    dend_12 { pt3dadd( -10.8826, -76.757, -16.1112, 1.77 ) }
    dend_12 { pt3dadd( -10.5524, -77.5304, -16.0039, 0.15 ) }
    dend_12 { pt3dadd( -10.3351, -78.061, -15.9406, 0.22 ) }
    dend_12 { pt3dadd( -10.1974, -78.4161, -15.9101, 0.74 ) }
    dend_12 { pt3dadd( -10.0898, -78.7265, -15.8889, 0.74 ) }
    dend_12 { pt3dadd( -9.96991, -79.1167, -15.8591, 0.22 ) }
    dend_12 { pt3dadd( -9.9414, -79.2269, -15.8473, 0.59 ) }
    dend_12 { pt3dadd( -9.90111, -79.4169, -15.8174, 0.59 ) }
    dend_12 { pt3dadd( -9.89327, -79.4524, -15.8126, 0.59 ) }
    dend_12 { pt3dadd( -9.76997, -80.0075, -15.7417, 0.22 ) }
    dend_12 { pt3dadd( -9.70058, -80.3432, -15.713, 0.74 ) }
    dend_12 { pt3dadd( -9.61385, -80.7184, -15.6926, 0.96 ) }
    dend_12 { pt3dadd( -9.55013, -80.976, -15.6803, 0.66 ) }
    dend_12 { pt3dadd( -9.33153, -81.8028, -15.6539, 0.29 ) }
    dend_12 { pt3dadd( -9.20175, -82.26, -15.6432, 0.22 ) }
    dend_12 { pt3dadd( -9.0517, -82.7506, -15.6345, 0.22 ) }
    dend_12 { pt3dadd( -8.8685, -83.3593, -15.6285, 1.55 ) }
    dend_12 { pt3dadd( -8.81342, -83.5418, -15.6291, 1.92 ) }
    dend_12 { pt3dadd( -8.67613, -83.9986, -15.6362, 0.96 ) }
    dend_12 { pt3dadd( -8.59983, -84.2612, -15.6484, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.06431, -63.2745, -19.2305, 2.43 ) }
    dend_9 { pt3dadd( -7.35867, -64.9505, -20.0753, 2.43 ) }
    dend_9 { pt3dadd( -7.63082, -66.5113, -20.7455, 0.96 ) }
    dend_9 { pt3dadd( -7.8526, -67.6957, -21.1753, 0.52 ) }
    dend_9 { pt3dadd( -8.05974, -68.7853, -21.531, 0.52 ) }
    dend_9 { pt3dadd( -8.31456, -70.1486, -21.9462, 0.52 ) }
    dend_9 { pt3dadd( -8.55486, -71.4799, -22.3317, 0.52 ) }
    dend_9 { pt3dadd( -8.76071, -72.6933, -22.5841, 0.52 ) }
    dend_9 { pt3dadd( -8.9699, -73.9597, -22.7837, 0.52 ) }
    dend_9 { pt3dadd( -9.16461, -75.2211, -22.9561, 2.58 ) }
    dend_9 { pt3dadd( -9.37806, -76.7352, -23.1957, 3.68 ) }
    dend_9 { pt3dadd( -9.43468, -77.1146, -23.2656, 3.68 ) }
    dend_9 { pt3dadd( -9.59497, -78.0297, -23.4504, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.1722, -124.0, 28.1892, 0.59 ) }
    dend_6 { pt3dadd( -1.92541, -126.106, 27.9976, 0.59 ) }
    dend_6 { pt3dadd( -1.83927, -127.12, 27.8822, 0.37 ) }
    dend_6 { pt3dadd( -1.81926, -128.137, 27.7194, 0.37 ) }
    dend_6 { pt3dadd( -1.85943, -128.831, 27.5551, 0.74 ) }
    dend_6 { pt3dadd( -1.94398, -129.605, 27.3313, 0.74 ) }
    dend_6 { pt3dadd( -2.04278, -130.236, 27.1201, 0.96 ) }
    dend_6 { pt3dadd( -2.0643, -130.303, 27.0928, 0.96 ) }
    dend_6 { pt3dadd( -2.33596, -131.035, 26.7441, 1.25 ) }
    dend_6 { pt3dadd( -2.68826, -131.816, 26.4019, 0.81 ) }
    dend_6 { pt3dadd( -2.71731, -131.884, 26.3824, 0.81 ) }
    dend_6 { pt3dadd( -3.09169, -132.809, 26.2116, 0.59 ) }
    dend_6 { pt3dadd( -3.47182, -133.92, 26.0907, 0.59 ) }
    dend_6 { pt3dadd( -3.48968, -133.981, 26.0865, 0.59 ) }
    dend_6 { pt3dadd( -3.79548, -135.233, 26.044, 0.44 ) }
    dend_6 { pt3dadd( -4.10678, -136.608, 26.0055, 0.44 ) }
    dend_6 { pt3dadd( -4.12341, -136.681, 26.0033, 0.44 ) }
    dend_6 { pt3dadd( -4.41994, -137.947, 25.9501, 2.14 ) }
    dend_6 { pt3dadd( -4.58951, -138.66, 25.887, 3.09 ) }
    dend_6 { pt3dadd( -4.72328, -139.313, 25.8139, 3.61 ) }
    dend_6 { pt3dadd( -4.80515, -140.072, 25.6787, 3.61 ) }
    dend_6 { pt3dadd( -5.03865, -150.553, 23.5674, 3.61 ) }
    dend_6 { pt3dadd( -4.56362, -160.574, 19.6719, 3.61 ) }
    dend_6 { pt3dadd( -3.30851, -169.97, 14.4328, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.1722, -124.0, 28.1892, 0.59 ) }
    dend_5 { pt3dadd( -1.0776, -125.227, 28.857, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( -0.0751708, -126.342, 29.5604, 0.37 ) }
    dend_5 { pt3dadd( 0.52891, -127.044, 30.3954, 0.37 ) }
    dend_5 { pt3dadd( 1.08956, -127.747, 31.7789, 0.37 ) }
    dend_5 { pt3dadd( 1.1168, -127.785, 31.8842, 0.37 ) }
    dend_5 { pt3dadd( 1.43357, -128.279, 33.4125, 0.74 ) }
    dend_5 { pt3dadd( 1.43193, -128.3, 33.5132, 0.74 ) }
    dend_5 { pt3dadd( 1.09107, -128.892, 36.6838, 0.74 ) }
    dend_5 { pt3dadd( 1.08097, -128.907, 36.7563, 0.74 ) }
    dend_5 { pt3dadd( 0.954779, -129.182, 37.7691, 0.74 ) }
    dend_5 { pt3dadd( 0.892162, -129.505, 38.5808, 0.29 ) }
    dend_5 { pt3dadd( 0.920192, -130.16, 39.6743, 0.29 ) }
    dend_5 { pt3dadd( 1.03831, -130.759, 40.4592, 0.29 ) }
    dend_5 { pt3dadd( 1.27671, -131.387, 41.0361, 0.29 ) }
    dend_5 { pt3dadd( 1.50794, -131.949, 41.5403, 0.81 ) }
    dend_5 { pt3dadd( 1.53706, -132.01, 41.593, 0.81 ) }
    dend_5 { pt3dadd( 1.85632, -132.489, 42.0238, 1.25 ) }
    dend_5 { pt3dadd( 2.19544, -132.811, 42.3412, 1.25 ) }
    dend_5 { pt3dadd( 2.70551, -133.177, 42.7839, 0.59 ) }
    dend_5 { pt3dadd( 7.05087, -139.344, 52.4958, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -29.0188, 634.019, -12.683, 0.44 ) }
    dend_61 { pt3dadd( -30.5911, 635.941, -15.2408, 0.44 ) }
    dend_61 { pt3dadd( -31.1932, 636.773, -16.2364, 0.44 ) }
    dend_61 { pt3dadd( -31.5683, 637.333, -16.8623, 0.74 ) }
    dend_61 { pt3dadd( -31.5896, 637.371, -16.9011, 0.74 ) }
    dend_61 { pt3dadd( -31.8665, 638.003, -17.4684, 0.74 ) }
    dend_61 { pt3dadd( -31.8821, 638.046, -17.5028, 0.74 ) }
    dend_61 { pt3dadd( -31.9901, 638.816, -17.8282, 0.44 ) }
    dend_61 { pt3dadd( -31.9874, 638.875, -17.8584, 0.44 ) }
    dend_61 { pt3dadd( -31.913, 639.598, -18.2645, 0.88 ) }
    dend_61 { pt3dadd( -31.864, 640.34, -18.6755, 0.96 ) }
    dend_61 { pt3dadd( -31.8543, 640.763, -18.9054, 1.25 ) }
    dend_61 { pt3dadd( -31.8543, 640.812, -18.9345, 1.25 ) }
    dend_61 { pt3dadd( -31.9213, 641.817, -19.5513, 0.66 ) }
    dend_61 { pt3dadd( -32.0427, 642.602, -20.0462, 0.37 ) }
    dend_61 { pt3dadd( -32.1795, 643.137, -20.3873, 0.74 ) }
    dend_61 { pt3dadd( -32.3355, 643.652, -20.7253, 0.74 ) }
    dend_61 { pt3dadd( -32.5378, 644.237, -21.1073, 0.74 ) }
    dend_61 { pt3dadd( -32.8745, 645.118, -21.6604, 0.29 ) }
    dend_61 { pt3dadd( -33.3169, 646.119, -22.2435, 0.29 ) }
    dend_61 { pt3dadd( -33.6328, 646.796, -22.6341, 0.29 ) }
    dend_61 { pt3dadd( -34.0833, 647.783, -23.2055, 1.47 ) }
    dend_61 { pt3dadd( -34.2505, 648.159, -23.4075, 1.69 ) }
    dend_61 { pt3dadd( -34.2772, 648.214, -23.4345, 1.69 ) }
    dend_61 { pt3dadd( -34.5562, 648.765, -23.7366, 1.47 ) }
    dend_61 { pt3dadd( -34.5847, 648.818, -23.7661, 1.47 ) }
    dend_61 { pt3dadd( -35.3427, 650.289, -24.7041, 0.22 ) }
    dend_61 { pt3dadd( -35.6016, 650.819, -25.0606, 0.22 ) }
    dend_61 { pt3dadd( -35.9922, 651.709, -25.6746, 0.22 ) }
    dend_61 { pt3dadd( -36.3957, 652.846, -26.4335, 1.03 ) }
    dend_61 { pt3dadd( -36.5323, 653.304, -26.7572, 1.4 ) }
    dend_61 { pt3dadd( -36.9149, 654.738, -27.8012, 0.22 ) }
    dend_61 { pt3dadd( -37.0153, 655.139, -28.1026, 0.59 ) }
    dend_61 { pt3dadd( -37.1193, 655.594, -28.4496, 0.74 ) }
    dend_61 { pt3dadd( -37.4234, 657.071, -29.5327, 0.29 ) }
    dend_61 { pt3dadd( -37.6927, 658.128, -30.2548, 0.29 ) }
    dend_61 { pt3dadd( -37.7116, 658.183, -30.2936, 0.29 ) }
    dend_61 { pt3dadd( -37.9842, 658.753, -30.7044, 0.44 ) }
    dend_61 { pt3dadd( -38.01, 658.808, -30.7518, 0.44 ) }
    dend_61 { pt3dadd( -38.2136, 659.251, -31.1586, 0.44 ) }
    dend_61 { pt3dadd( -38.5121, 659.923, -31.7822, 0.22 ) }
    dend_61 { pt3dadd( -38.9176, 660.959, -32.6883, 1.92 ) }
    dend_61 { pt3dadd( -38.9901, 661.167, -32.8839, 2.5 ) }
    dend_61 { pt3dadd( -39.5698, 663.284, -34.9261, 0.15 ) }
    dend_61 { pt3dadd( -39.6401, 663.588, -35.2203, 0.15 ) }
    dend_61 { pt3dadd( -39.7881, 664.386, -36.0087, 1.4 ) }
    dend_61 { pt3dadd( -39.8191, 664.569, -36.1869, 1.69 ) }
    dend_61 { pt3dadd( -40.1227, 666.311, -37.8589, 0.15 ) }
    dend_61 { pt3dadd( -40.2416, 666.898, -38.3978, 0.15 ) }
    dend_61 { pt3dadd( -40.2832, 667.054, -38.5198, 0.15 ) }
    dend_61 { pt3dadd( -40.3241, 667.191, -38.6137, 0.15 ) }
    dend_61 { pt3dadd( -40.5384, 667.86, -38.9765, 0.96 ) }
    dend_61 { pt3dadd( -40.6912, 668.32, -39.1878, 1.47 ) }
    dend_61 { pt3dadd( -40.8114, 668.65, -39.3002, 1.62 ) }
    dend_61 { pt3dadd( -41.0936, 669.387, -39.5566, 0.88 ) }
    dend_61 { pt3dadd( -41.6219, 670.858, -40.0704, 0.22 ) }
    dend_61 { pt3dadd( -41.792, 671.418, -40.2865, 0.22 ) }
    dend_61 { pt3dadd( -41.9358, 672.0, -40.5364, 0.74 ) }
    dend_61 { pt3dadd( -41.9481, 672.062, -40.5628, 0.74 ) }
    dend_61 { pt3dadd( -42.037, 672.575, -40.7558, 0.74 ) }
    dend_61 { pt3dadd( -42.0808, 672.841, -40.8375, 0.74 ) }
    dend_61 { pt3dadd( -42.3037, 674.235, -41.1742, 0.29 ) }
    dend_61 { pt3dadd( -42.3153, 674.301, -41.1882, 0.29 ) }
    dend_61 { pt3dadd( -42.5571, 675.551, -41.4157, 0.29 ) }
    dend_61 { pt3dadd( -42.8159, 676.815, -41.6265, 0.29 ) }
    dend_61 { pt3dadd( -43.0308, 677.802, -41.7659, 0.29 ) }
    dend_61 { pt3dadd( -43.2025, 678.536, -41.8425, 1.47 ) }
    dend_61 { pt3dadd( -43.3051, 678.945, -41.8756, 2.06 ) }
    dend_61 { pt3dadd( -43.3212, 679.009, -41.8814, 2.06 ) }
    dend_61 { pt3dadd( -43.5039, 679.736, -41.9738, 1.18 ) }
    dend_61 { pt3dadd( -43.9947, 681.643, -42.3064, 0.22 ) }
    dend_61 { pt3dadd( -44.3388, 683.018, -42.5782, 0.22 ) }
    dend_61 { pt3dadd( -44.5884, 684.11, -42.8511, 1.47 ) }
    dend_61 { pt3dadd( -44.6714, 684.505, -42.9657, 1.18 ) }
    dend_61 { pt3dadd( -44.9636, 686.104, -43.4884, 0.22 ) }
    dend_61 { pt3dadd( -45.1319, 687.173, -43.8807, 1.11 ) }
    dend_61 { pt3dadd( -45.2008, 687.741, -44.111, 1.33 ) }
    dend_61 { pt3dadd( -45.388, 689.829, -45.0011, 0.22 ) }
    dend_61 { pt3dadd( -45.392, 689.89, -45.0266, 0.22 ) }
    dend_61 { pt3dadd( -45.4648, 691.357, -45.6165, 0.22 ) }
    dend_61 { pt3dadd( -45.4667, 691.419, -45.6394, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( -45.4989, 693.002, -46.1805, 0.22 ) }
    dend_61 { pt3dadd( -45.5017, 693.065, -46.2009, 0.22 ) }
    dend_61 { pt3dadd( -45.5694, 693.937, -46.4173, 1.55 ) }
    dend_61 { pt3dadd( -45.589, 694.076, -46.4472, 2.14 ) }
    dend_61 { pt3dadd( -45.6924, 694.55, -46.531, 2.36 ) }
    dend_61 { pt3dadd( -45.707, 694.604, -46.5392, 2.36 ) }
    dend_61 { pt3dadd( -46.0703, 695.545, -46.6891, 1.11 ) }
    dend_61 { pt3dadd( -46.6357, 696.783, -46.8962, 0.22 ) }
    dend_61 { pt3dadd( -47.1681, 697.832, -47.0746, 0.22 ) }
    dend_61 { pt3dadd( -47.5592, 698.56, -47.1995, 1.4 ) }
    dend_61 { pt3dadd( -47.7738, 698.933, -47.2635, 1.4 ) }
    dend_61 { pt3dadd( -48.839, 700.688, -47.5897, 0.22 ) }
    dend_61 { pt3dadd( -49.2542, 701.322, -47.7168, 0.88 ) }
    dend_61 { pt3dadd( -49.49, 701.668, -47.7931, 0.59 ) }
    dend_61 { pt3dadd( -49.532, 701.732, -47.8072, 0.59 ) }
    dend_61 { pt3dadd( -49.632, 701.892, -47.8393, 0.59 ) }
    dend_61 { pt3dadd( -50.3045, 703.106, -48.0243, 0.22 ) }
    dend_61 { pt3dadd( -50.6789, 703.866, -48.1007, 0.22 ) }
    dend_61 { pt3dadd( -51.0304, 704.649, -48.1664, 1.03 ) }
    dend_61 { pt3dadd( -51.1934, 705.028, -48.1937, 1.4 ) }
    dend_61 { pt3dadd( -51.3864, 705.512, -48.1955, 1.4 ) }
    dend_61 { pt3dadd( -51.8452, 706.799, -48.1273, 0.22 ) }
    dend_61 { pt3dadd( -51.866, 706.863, -48.1204, 0.22 ) }
    dend_61 { pt3dadd( -52.2909, 708.307, -47.9412, 0.22 ) }
    dend_61 { pt3dadd( -52.3245, 708.436, -47.9249, 0.22 ) }
    dend_61 { pt3dadd( -52.7121, 710.089, -47.718, 0.22 ) }
    dend_61 { pt3dadd( -52.9175, 711.031, -47.5903, 1.33 ) }
    dend_61 { pt3dadd( -52.9828, 711.348, -47.5438, 1.62 ) }
    dend_61 { pt3dadd( -53.1028, 711.949, -47.4544, 0.81 ) }
    dend_61 { pt3dadd( -53.3999, 713.553, -47.2128, 0.22 ) }
    dend_61 { pt3dadd( -53.5797, 714.586, -47.0912, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -29.0188, 634.019, -12.683, 0.59 ) }
    dend_30 { pt3dadd( -29.1256, 634.855, -12.597, 0.59 ) }
    dend_30 { pt3dadd( -29.2451, 635.736, -12.4439, 0.59 ) }
    dend_30 { pt3dadd( -29.3505, 636.566, -12.2747, 0.81 ) }
    dend_30 { pt3dadd( -29.429, 637.218, -12.1396, 1.25 ) }
    dend_30 { pt3dadd( -29.4363, 637.279, -12.127, 1.25 ) }
    dend_30 { pt3dadd( -29.4838, 637.659, -12.0518, 1.11 ) }
    dend_30 { pt3dadd( -29.5925, 638.447, -11.8884, 0.88 ) }
    dend_30 { pt3dadd( -29.6688, 639.015, -11.7827, 0.44 ) }
    dend_30 { pt3dadd( -29.7742, 639.847, -11.6543, 0.37 ) }
    dend_30 { pt3dadd( -29.8016, 640.069, -11.6244, 0.37 ) }
    dend_30 { pt3dadd( -29.8785, 640.675, -11.5582, 0.37 ) }
    dend_30 { pt3dadd( -30.0008, 641.588, -11.4908, 1.47 ) }
    dend_30 { pt3dadd( -30.0899, 642.138, -11.4699, 1.84 ) }
    dend_30 { pt3dadd( -30.1287, 642.355, -11.4615, 1.84 ) }
    dend_30 { pt3dadd( -30.2018, 642.794, -11.4445, 1.84 ) }
    dend_30 { pt3dadd( -30.3139, 643.525, -11.4164, 1.25 ) }
    dend_30 { pt3dadd( -30.4844, 644.745, -11.37, 0.66 ) }
    dend_30 { pt3dadd( -30.6319, 645.851, -11.3289, 0.66 ) }
    dend_30 { pt3dadd( -30.6412, 645.929, -11.3261, 0.66 ) }
    dend_30 { pt3dadd( -30.7266, 646.728, -11.2994, 0.66 ) }
    dend_30 { pt3dadd( -30.737, 646.846, -11.2963, 0.66 ) }
    dend_30 { pt3dadd( -30.7948, 647.575, -11.2791, 0.66 ) }
    dend_30 { pt3dadd( -30.7987, 647.638, -11.2779, 0.66 ) }
    dend_30 { pt3dadd( -30.8334, 648.304, -11.2666, 0.66 ) }
    dend_30 { pt3dadd( -30.8489, 648.504, -11.2635, 0.66 ) }
    dend_30 { pt3dadd( -30.9042, 649.136, -11.2539, 0.66 ) }
    dend_30 { pt3dadd( -30.9435, 649.636, -11.2462, 0.66 ) }
    dend_30 { pt3dadd( -30.9465, 649.691, -11.2453, 0.66 ) }
    dend_30 { pt3dadd( -30.972, 650.491, -11.2302, 0.66 ) }
    dend_30 { pt3dadd( -30.972, 650.539, -11.2292, 0.66 ) }
    dend_30 { pt3dadd( -30.9584, 651.322, -11.2158, 1.18 ) }
    dend_30 { pt3dadd( -30.9546, 651.377, -11.2098, 1.18 ) }
    dend_30 { pt3dadd( -30.876, 652.078, -11.0805, 1.33 ) }
    dend_30 { pt3dadd( -30.8673, 652.142, -11.0649, 1.33 ) }
    dend_30 { pt3dadd( -30.8345, 652.339, -11.0021, 1.33 ) }
    dend_30 { pt3dadd( -30.8203, 652.425, -10.9728, 1.33 ) }
    dend_30 { pt3dadd( -30.6382, 653.516, -10.5595, 0.81 ) }
    dend_30 { pt3dadd( -30.6313, 653.562, -10.5446, 0.81 ) }
    dend_30 { pt3dadd( -30.5493, 653.997, -10.4293, 0.81 ) }
    dend_30 { pt3dadd( -30.5398, 654.049, -10.4175, 0.81 ) }
    dend_30 { pt3dadd( -30.4237, 654.656, -10.3031, 0.96 ) }
    dend_30 { pt3dadd( -30.4052, 654.747, -10.2896, 0.96 ) }
    dend_30 { pt3dadd( -30.1973, 655.711, -10.2009, 0.37 ) }
    dend_30 { pt3dadd( -30.0241, 656.525, -10.1353, 0.37 ) }
    dend_30 { pt3dadd( -29.8997, 657.168, -10.0662, 1.33 ) }
    dend_30 { pt3dadd( -29.7863, 657.754, -9.97813, 2.06 ) }
    dend_30 { pt3dadd( -29.7388, 658.017, -9.91627, 2.36 ) }
    dend_30 { pt3dadd( -29.6663, 658.432, -9.79685, 2.36 ) }
    dend_30 { pt3dadd( -29.5626, 659.091, -9.56325, 1.62 ) }
    dend_30 { pt3dadd( -29.4227, 660.106, -9.17545, 0.52 ) }
    dend_30 { pt3dadd( -29.2618, 661.247, -8.71383, 0.37 ) }
    dend_30 { pt3dadd( -29.1317, 662.254, -8.26896, 1.55 ) }
    dend_30 { pt3dadd( -29.0688, 662.757, -8.02942, 2.21 ) }
    dend_30 { pt3dadd( -29.0009, 663.28, -7.75218, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.59497, -78.0297, -23.4504, 0.44 ) }
    dend_11 { pt3dadd( -9.13399, -79.3877, -22.8067, 0.44 ) }
    dend_11 { pt3dadd( -8.66535, -80.7029, -22.1237, 0.22 ) }
    dend_11 { pt3dadd( -8.63843, -80.7677, -22.0844, 0.22 ) }
    dend_11 { pt3dadd( -8.22019, -81.7049, -21.3603, 0.22 ) }
    dend_11 { pt3dadd( -7.58659, -83.0194, -20.3264, 1.47 ) }
    dend_11 { pt3dadd( -7.39023, -83.411, -20.032, 1.99 ) }
    dend_11 { pt3dadd( -7.3217, -83.5423, -19.9253, 1.99 ) }
    dend_11 { pt3dadd( -6.77267, -84.4927, -19.1594, 1.77 ) }
    dend_11 { pt3dadd( -5.87251, -85.9903, -18.0017, 0.52 ) }
    dend_11 { pt3dadd( -5.17308, -87.1185, -17.1598, 0.29 ) }
    dend_11 { pt3dadd( -4.6319, -87.9825, -16.5785, 0.29 ) }
    dend_11 { pt3dadd( -4.59633, -88.0413, -16.5405, 0.29 ) }
    dend_11 { pt3dadd( -4.06258, -88.9458, -15.9891, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -3.55095, -89.8998, -15.4868, 1.03 ) }
    dend_11 { pt3dadd( -2.8519, -91.3287, -14.856, 0.22 ) }
    dend_11 { pt3dadd( -2.82838, -91.3854, -14.8317, 0.22 ) }
    dend_11 { pt3dadd( -2.6118, -91.9598, -14.6059, 0.44 ) }
    dend_11 { pt3dadd( -2.5908, -92.0178, -14.5824, 0.44 ) }
    dend_11 { pt3dadd( -2.30672, -92.7838, -14.2481, 0.44 ) }
    dend_11 { pt3dadd( -2.10772, -93.3592, -14.0248, 0.29 ) }
    dend_11 { pt3dadd( -1.77659, -94.3331, -13.657, 1.55 ) }
    dend_11 { pt3dadd( -1.68535, -94.5904, -13.5533, 2.21 ) }
    dend_11 { pt3dadd( -1.21204, -95.7739, -13.0308, 2.21 ) }
    dend_11 { pt3dadd( -0.75236, -96.8189, -12.5469, 0.44 ) }
    dend_11 { pt3dadd( -0.170842, -97.9387, -11.9826, 0.29 ) }
    dend_11 { pt3dadd( 0.0922193, -98.3914, -11.7412, 0.52 ) }
    dend_11 { pt3dadd( 0.135203, -98.4602, -11.7037, 0.52 ) }
    dend_11 { pt3dadd( 0.458675, -98.9126, -11.4866, 0.22 ) }
    dend_11 { pt3dadd( 0.516269, -98.9668, -11.4672, 0.22 ) }
    dend_11 { pt3dadd( 0.935389, -99.2342, -11.3608, 0.22 ) }
    dend_11 { pt3dadd( 1.35239, -99.473, -11.2289, 0.74 ) }
    dend_11 { pt3dadd( 1.4273, -99.5214, -11.2023, 0.74 ) }
    dend_11 { pt3dadd( 1.96594, -99.9267, -10.9949, 0.74 ) }
    dend_11 { pt3dadd( 2.90952, -100.752, -10.6108, 0.29 ) }
    dend_11 { pt3dadd( 3.48491, -101.341, -10.3249, 0.29 ) }
    dend_11 { pt3dadd( 4.07565, -102.07, -9.98248, 1.33 ) }
    dend_11 { pt3dadd( 4.411, -102.525, -9.77941, 1.92 ) }
    dend_11 { pt3dadd( 4.58389, -102.771, -9.67605, 1.99 ) }
    dend_11 { pt3dadd( 4.94729, -103.317, -9.45697, 1.55 ) }
    dend_11 { pt3dadd( 5.62399, -104.343, -9.10284, 0.66 ) }
    dend_11 { pt3dadd( 6.07387, -105.008, -8.92238, 0.29 ) }
    dend_11 { pt3dadd( 6.80583, -106.08, -8.75135, 0.22 ) }
    dend_11 { pt3dadd( 7.26045, -106.782, -8.68943, 1.03 ) }
    dend_11 { pt3dadd( 7.60277, -107.343, -8.6729, 1.55 ) }
    dend_11 { pt3dadd( 8.14632, -108.289, -8.70301, 0.88 ) }
    dend_11 { pt3dadd( 8.59298, -109.138, -8.78747, 0.29 ) }
    dend_11 { pt3dadd( 9.03905, -110.078, -8.90415, 0.29 ) }
    dend_11 { pt3dadd( 9.49701, -111.197, -9.06581, 0.22 ) }
    dend_11 { pt3dadd( 9.69455, -111.715, -9.14008, 0.52 ) }
    dend_11 { pt3dadd( 9.7219, -111.788, -9.14685, 0.52 ) }
    dend_11 { pt3dadd( 9.97785, -112.467, -9.14145, 0.52 ) }
    dend_11 { pt3dadd( 10.2733, -113.19, -9.06436, 0.44 ) }
    dend_11 { pt3dadd( 10.36, -113.399, -9.01745, 0.66 ) }
    dend_11 { pt3dadd( 10.5777, -113.947, -8.866, 0.37 ) }
    dend_11 { pt3dadd( 10.8587, -114.753, -8.62076, 0.29 ) }
    dend_11 { pt3dadd( 11.1284, -115.726, -8.32302, 0.29 ) }
    dend_11 { pt3dadd( 11.1391, -115.787, -8.3024, 0.29 ) }
    dend_11 { pt3dadd( 11.2398, -116.742, -7.9876, 1.25 ) }
    dend_11 { pt3dadd( 11.2665, -117.195, -7.84994, 1.84 ) }
    dend_11 { pt3dadd( 11.2682, -117.613, -7.74032, 1.84 ) }
    dend_11 { pt3dadd( 11.2431, -118.576, -7.55527, 0.81 ) }
    dend_11 { pt3dadd( 11.2023, -119.702, -7.38236, 0.29 ) }
    dend_11 { pt3dadd( 11.1762, -120.507, -7.2865, 0.22 ) }
    dend_11 { pt3dadd( 11.1725, -120.616, -7.27759, 0.22 ) }
    dend_11 { pt3dadd( 11.125, -121.551, -7.25506, 0.22 ) }
    dend_11 { pt3dadd( 11.0183, -122.828, -7.31436, 1.33 ) }
    dend_11 { pt3dadd( 10.9471, -123.432, -7.38128, 1.99 ) }
    dend_11 { pt3dadd( 10.8829, -123.825, -7.44831, 2.28 ) }
    dend_11 { pt3dadd( 10.7576, -124.419, -7.54701, 2.28 ) }
    dend_11 { pt3dadd( 10.3998, -125.944, -7.78917, 0.66 ) }
    dend_11 { pt3dadd( 10.1596, -126.851, -7.93606, 0.22 ) }
    dend_11 { pt3dadd( 10.1376, -126.927, -7.94727, 0.22 ) }
    dend_11 { pt3dadd( 9.97913, -127.524, -8.01181, 0.22 ) }
    dend_11 { pt3dadd( 9.82573, -128.139, -8.05223, 0.74 ) }
    dend_11 { pt3dadd( 9.7285, -128.562, -8.05335, 1.03 ) }
    dend_11 { pt3dadd( 9.65719, -128.876, -8.02667, 1.11 ) }
    dend_11 { pt3dadd( 9.52486, -129.504, -7.96009, 0.44 ) }
    dend_11 { pt3dadd( 9.30775, -130.536, -7.87575, 0.22 ) }
    dend_11 { pt3dadd( 9.29183, -130.612, -7.8717, 0.22 ) }
    dend_11 { pt3dadd( 9.16062, -131.178, -7.85993, 0.44 ) }
    dend_11 { pt3dadd( 9.00411, -132.018, -7.83776, 0.29 ) }
    dend_11 { pt3dadd( 8.98919, -132.094, -7.83586, 0.29 ) }
    dend_11 { pt3dadd( 8.7011, -132.989, -7.79397, 0.29 ) }
    dend_11 { pt3dadd( 8.47275, -133.549, -7.7542, 0.22 ) }
    dend_11 { pt3dadd( 8.44217, -133.623, -7.74748, 0.22 ) }
    dend_11 { pt3dadd( 8.04988, -134.613, -7.59284, 0.22 ) }
    dend_11 { pt3dadd( 7.85066, -135.207, -7.42722, 0.22 ) }
    dend_11 { pt3dadd( 7.42331, -136.881, -6.84657, 2.14 ) }
    dend_11 { pt3dadd( 7.41169, -136.942, -6.8234, 2.14 ) }
    dend_11 { pt3dadd( 7.33084, -137.6, -6.56296, 1.99 ) }
    dend_11 { pt3dadd( 7.27758, -138.569, -6.17272, 1.69 ) }
    dend_11 { pt3dadd( 7.2805, -140.013, -5.57306, 0.59 ) }
    dend_11 { pt3dadd( 7.42143, -141.357, -5.01773, 0.22 ) }
    dend_11 { pt3dadd( 7.55657, -142.025, -4.76888, 0.37 ) }
    dend_11 { pt3dadd( 7.72132, -142.733, -4.57288, 0.37 ) }
    dend_11 { pt3dadd( 7.93443, -143.553, -4.43434, 0.74 ) }
    dend_11 { pt3dadd( 7.95604, -143.627, -4.43138, 0.74 ) }
    dend_11 { pt3dadd( 8.12399, -144.187, -4.47892, 1.11 ) }
    dend_11 { pt3dadd( 8.44817, -145.299, -4.6447, 0.59 ) }
    dend_11 { pt3dadd( 8.8074, -146.546, -4.85795, 0.29 ) }
    dend_11 { pt3dadd( 9.05753, -147.389, -5.00874, 0.29 ) }
    dend_11 { pt3dadd( 9.09551, -147.506, -5.0304, 0.29 ) }
    dend_11 { pt3dadd( 9.37455, -148.309, -5.16029, 0.29 ) }
    dend_11 { pt3dadd( 9.45606, -148.519, -5.18317, 0.29 ) }
    dend_11 { pt3dadd( 9.83051, -149.347, -5.19609, 0.29 ) }
    dend_11 { pt3dadd( 10.1637, -150.031, -5.15378, 1.18 ) }
    dend_11 { pt3dadd( 10.3685, -150.43, -5.1277, 1.47 ) }
    dend_11 { pt3dadd( 10.4042, -150.499, -5.12254, 1.47 ) }
    dend_11 { pt3dadd( 10.9575, -151.62, -5.03342, 0.44 ) }
    dend_11 { pt3dadd( 11.3255, -152.542, -4.96097, 0.37 ) }
    dend_11 { pt3dadd( 11.5047, -153.239, -4.91034, 0.81 ) }
    dend_11 { pt3dadd( 11.5861, -153.711, -4.88377, 0.81 ) }
    dend_11 { pt3dadd( 11.6717, -154.445, -4.84822, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( 11.71, -154.954, -4.83092, 0.29 ) }
    dend_11 { pt3dadd( 11.7517, -156.086, -4.80406, 0.22 ) }
    dend_11 { pt3dadd( 11.7935, -157.301, -4.80859, 0.22 ) }
    dend_11 { pt3dadd( 11.8332, -158.012, -4.82364, 0.44 ) }
    dend_11 { pt3dadd( 11.8546, -158.254, -4.83125, 0.44 ) }
    dend_11 { pt3dadd( 11.924, -158.728, -4.84754, 0.44 ) }
    dend_11 { pt3dadd( 12.1136, -159.623, -4.87604, 0.29 ) }
    dend_11 { pt3dadd( 12.3553, -160.566, -4.89832, 1.4 ) }
    dend_11 { pt3dadd( 12.5443, -161.263, -4.91097, 1.69 ) }
    dend_11 { pt3dadd( 12.698, -161.878, -4.91636, 1.92 ) }
    dend_11 { pt3dadd( 12.9034, -162.74, -4.93344, 0.74 ) }
    dend_11 { pt3dadd( 13.0864, -163.79, -4.97284, 0.22 ) }
    dend_11 { pt3dadd( 13.2064, -164.824, -5.02481, 0.22 ) }
    dend_11 { pt3dadd( 13.2537, -165.565, -5.05992, 0.88 ) }
    dend_11 { pt3dadd( 13.2578, -166.13, -5.09509, 0.88 ) }
    dend_11 { pt3dadd( 13.2172, -167.044, -5.16035, 0.22 ) }
    dend_11 { pt3dadd( 13.1095, -168.184, -5.24778, 0.22 ) }
    dend_11 { pt3dadd( 13.0991, -168.271, -5.25409, 0.22 ) }
    dend_11 { pt3dadd( 12.9751, -169.077, -5.30676, 0.22 ) }
    dend_11 { pt3dadd( 12.7864, -170.149, -5.3281, 1.03 ) }
    dend_11 { pt3dadd( 12.6915, -170.619, -5.32115, 1.33 ) }
    dend_11 { pt3dadd( 12.6236, -170.935, -5.30439, 1.33 ) }
    dend_11 { pt3dadd( 12.3363, -172.343, -5.24161, 0.22 ) }
    dend_11 { pt3dadd( 12.1191, -173.367, -5.25781, 0.22 ) }
    dend_11 { pt3dadd( 11.972, -173.996, -5.31225, 0.88 ) }
    dend_11 { pt3dadd( 11.8649, -174.434, -5.37535, 1.11 ) }
    dend_11 { pt3dadd( 11.7772, -174.78, -5.44084, 0.88 ) }
    dend_11 { pt3dadd( 11.451, -176.137, -5.74925, 0.22 ) }
    dend_11 { pt3dadd( 11.1683, -177.239, -6.03917, 0.22 ) }
    dend_11 { pt3dadd( 11.0087, -177.858, -6.21431, 1.55 ) }
    dend_11 { pt3dadd( 10.8678, -178.404, -6.36457, 1.77 ) }
    dend_11 { pt3dadd( 10.7137, -179.005, -6.51148, 1.25 ) }
    dend_11 { pt3dadd( 10.4256, -180.203, -6.7512, 0.22 ) }
    dend_11 { pt3dadd( 10.1678, -181.417, -6.90469, 0.22 ) }
    dend_11 { pt3dadd( 10.1575, -181.481, -6.90991, 0.22 ) }
    dend_11 { pt3dadd( 10.0684, -182.56, -6.98265, 0.22 ) }
    dend_11 { pt3dadd( 10.0668, -182.649, -6.99184, 0.22 ) }
    dend_11 { pt3dadd( 10.1202, -183.633, -7.11219, 0.96 ) }
    dend_11 { pt3dadd( 10.1637, -184.257, -7.19641, 1.47 ) }
    dend_11 { pt3dadd( 10.2253, -184.933, -7.31463, 0.88 ) }
    dend_11 { pt3dadd( 10.2668, -185.552, -7.4434, 0.66 ) }
    dend_11 { pt3dadd( 10.3494, -186.968, -7.78666, 0.29 ) }
    dend_11 { pt3dadd( 10.3699, -187.524, -7.92815, 0.59 ) }
    dend_11 { pt3dadd( 10.389, -188.463, -8.18725, 0.59 ) }
    dend_11 { pt3dadd( 10.4092, -189.433, -8.45825, 0.29 ) }
    dend_11 { pt3dadd( 10.4145, -189.531, -8.48357, 0.29 ) }
    dend_11 { pt3dadd( 10.5324, -190.745, -8.76468, 0.29 ) }
    dend_11 { pt3dadd( 10.5445, -190.819, -8.77925, 0.29 ) }
    dend_11 { pt3dadd( 10.6738, -191.427, -8.89757, 0.74 ) }
    dend_11 { pt3dadd( 10.8215, -192.123, -9.02662, 0.88 ) }
    dend_11 { pt3dadd( 11.0049, -193.233, -9.22303, 0.22 ) }
    dend_11 { pt3dadd( 11.1088, -194.133, -9.37981, 0.22 ) }
    dend_11 { pt3dadd( 11.144, -195.136, -9.57017, 1.99 ) }
    dend_11 { pt3dadd( 11.129, -195.862, -9.72409, 2.43 ) }
    dend_11 { pt3dadd( 10.9943, -197.466, -10.0881, 0.22 ) }
    dend_11 { pt3dadd( 10.8675, -198.328, -10.2979, 0.44 ) }
    dend_11 { pt3dadd( 10.6647, -199.388, -10.5732, 0.37 ) }
    dend_11 { pt3dadd( 10.4211, -200.491, -10.8627, 0.22 ) }
    dend_11 { pt3dadd( 10.2401, -201.221, -11.0426, 1.03 ) }
    dend_11 { pt3dadd( 10.1426, -201.651, -11.1598, 1.25 ) }
    dend_11 { pt3dadd( 10.0342, -202.262, -11.3441, 0.96 ) }
    dend_11 { pt3dadd( 9.8658, -203.653, -11.7771, 0.15 ) }
    dend_11 { pt3dadd( 9.81779, -204.38, -12.001, 0.74 ) }
    dend_11 { pt3dadd( 9.80995, -204.917, -12.1557, 0.96 ) }
    dend_11 { pt3dadd( 9.83231, -206.582, -12.6118, 0.22 ) }
    dend_11 { pt3dadd( 9.83921, -206.74, -12.6535, 0.22 ) }
    dend_11 { pt3dadd( 9.92156, -207.435, -12.837, 0.22 ) }
    dend_11 { pt3dadd( 10.0786, -208.361, -13.0606, 0.22 ) }
    dend_11 { pt3dadd( 10.0919, -208.428, -13.0752, 0.22 ) }
    dend_11 { pt3dadd( 10.3584, -209.606, -13.3249, 2.5 ) }
    dend_11 { pt3dadd( 10.4704, -210.065, -13.4118, 2.73 ) }
    dend_11 { pt3dadd( 11.0785, -212.281, -13.857, 0.22 ) }
    dend_11 { pt3dadd( 11.2994, -212.947, -14.0021, 0.52 ) }
    dend_11 { pt3dadd( 11.5422, -213.568, -14.1407, 0.52 ) }
    dend_11 { pt3dadd( 12.0803, -214.845, -14.406, 0.22 ) }
    dend_11 { pt3dadd( 12.114, -214.913, -14.4208, 0.22 ) }
    dend_11 { pt3dadd( 12.4045, -215.465, -14.5429, 0.22 ) }
    dend_11 { pt3dadd( 12.9253, -216.389, -14.7186, 1.18 ) }
    dend_11 { pt3dadd( 13.1389, -216.758, -14.7856, 1.69 ) }
    dend_11 { pt3dadd( 13.5753, -217.521, -14.903, 1.33 ) }
    dend_11 { pt3dadd( 14.1628, -218.574, -15.0004, 0.22 ) }
    dend_11 { pt3dadd( 14.3951, -219.036, -15.0315, 0.22 ) }
    dend_11 { pt3dadd( 14.6865, -219.74, -15.0711, 1.47 ) }
    dend_11 { pt3dadd( 14.8695, -220.269, -15.0909, 1.69 ) }
    dend_11 { pt3dadd( 15.0323, -220.812, -15.1173, 1.69 ) }
    dend_11 { pt3dadd( 15.4496, -222.395, -15.1911, 0.29 ) }
    dend_11 { pt3dadd( 15.6234, -223.156, -15.2179, 0.29 ) }
    dend_11 { pt3dadd( 15.8118, -223.988, -15.2592, 1.03 ) }
    dend_11 { pt3dadd( 15.8414, -224.154, -15.2683, 1.33 ) }
    dend_11 { pt3dadd( 16.0276, -225.592, -15.3338, 0.22 ) }
    dend_11 { pt3dadd( 16.0684, -226.144, -15.3545, 0.22 ) }
    dend_11 { pt3dadd( 16.0674, -226.541, -15.3588, 1.03 ) }
    dend_11 { pt3dadd( 16.0574, -227.027, -15.3391, 1.03 ) }
    dend_11 { pt3dadd( 15.9749, -228.571, -15.2117, 0.22 ) }
    dend_11 { pt3dadd( 15.8779, -229.467, -15.1164, 1.33 ) }
    dend_11 { pt3dadd( 15.8173, -229.814, -15.0706, 1.47 ) }
    dend_11 { pt3dadd( 15.6777, -230.501, -15.0127, 1.55 ) }
    dend_11 { pt3dadd( 15.3377, -232.024, -14.9355, 0.22 ) }
    dend_11 { pt3dadd( 15.2111, -232.526, -14.9313, 0.22 ) }
    dend_11 { pt3dadd( 14.984, -233.361, -14.9592, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( 14.8086, -233.979, -14.9959, 1.25 ) }
    dend_11 { pt3dadd( 14.3749, -235.536, -15.1492, 0.22 ) }
    dend_11 { pt3dadd( 14.3521, -235.62, -15.1601, 0.22 ) }
    dend_11 { pt3dadd( 13.9659, -237.184, -15.3621, 0.22 ) }
    dend_11 { pt3dadd( 13.8856, -237.536, -15.4022, 0.74 ) }
    dend_11 { pt3dadd( 13.8186, -237.844, -15.4352, 0.74 ) }
    dend_11 { pt3dadd( 13.4908, -239.4, -15.5753, 0.22 ) }
    dend_11 { pt3dadd( 13.2146, -240.744, -15.6504, 0.22 ) }
    dend_11 { pt3dadd( 12.8872, -242.5, -15.751, 0.22 ) }
    dend_11 { pt3dadd( 12.7991, -243.071, -15.786, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.59497, -78.0297, -23.4504, 0.66 ) }
    dend_10 { pt3dadd( -10.2332, -79.5374, -23.2882, 0.66 ) }
    dend_10 { pt3dadd( -10.4847, -80.0875, -23.2029, 0.52 ) }
    dend_10 { pt3dadd( -10.7777, -80.6578, -23.1009, 0.88 ) }
    dend_10 { pt3dadd( -10.9671, -81.0182, -23.0215, 1.03 ) }
    dend_10 { pt3dadd( -11.2238, -81.5084, -22.896, 0.96 ) }
    dend_10 { pt3dadd( -11.6178, -82.2672, -22.684, 0.37 ) }
    dend_10 { pt3dadd( -12.0002, -83.0091, -22.4039, 0.29 ) }
    dend_10 { pt3dadd( -12.176, -83.3914, -22.2554, 0.29 ) }
    dend_10 { pt3dadd( -12.4745, -84.2101, -21.911, 0.29 ) }
    dend_10 { pt3dadd( -12.5468, -84.4758, -21.799, 0.74 ) }
    dend_10 { pt3dadd( -12.561, -84.5501, -21.7709, 0.74 ) }
    dend_10 { pt3dadd( -12.5988, -84.8446, -21.6839, 0.74 ) }
    dend_10 { pt3dadd( -12.6445, -85.4117, -21.5432, 0.59 ) }
    dend_10 { pt3dadd( -12.7145, -86.3553, -21.3428, 0.29 ) }
    dend_10 { pt3dadd( -12.8032, -87.3275, -21.1771, 0.29 ) }
    dend_10 { pt3dadd( -12.8989, -88.2451, -21.0437, 0.29 ) }
    dend_10 { pt3dadd( -13.0154, -89.282, -20.9074, 0.29 ) }
    dend_10 { pt3dadd( -13.0992, -90.1147, -20.8368, 1.33 ) }
    dend_10 { pt3dadd( -13.1056, -90.1855, -20.8345, 1.33 ) }
    dend_10 { pt3dadd( -13.1574, -90.9102, -20.8503, 1.99 ) }
    dend_10 { pt3dadd( -13.1639, -91.3598, -20.8686, 2.21 ) }
    dend_10 { pt3dadd( -13.1581, -91.7485, -20.891, 2.21 ) }
    dend_10 { pt3dadd( -13.1115, -93.0467, -20.9824, 0.29 ) }
    dend_10 { pt3dadd( -13.058, -94.1195, -21.0569, 0.29 ) }
    dend_10 { pt3dadd( -13.0198, -94.7433, -21.0951, 0.29 ) }
    dend_10 { pt3dadd( -12.983, -95.1795, -21.1177, 0.96 ) }
    dend_10 { pt3dadd( -12.9443, -95.6992, -21.1352, 1.47 ) }
    dend_10 { pt3dadd( -12.9235, -96.0166, -21.1378, 1.84 ) }
    dend_10 { pt3dadd( -12.8757, -96.6538, -21.1098, 0.88 ) }
    dend_10 { pt3dadd( -12.8672, -96.7136, -21.1091, 0.88 ) }
    dend_10 { pt3dadd( -12.7515, -97.3408, -21.1329, 0.29 ) }
    dend_10 { pt3dadd( -12.6303, -97.9549, -21.1805, 0.29 ) }
    dend_10 { pt3dadd( -12.6152, -98.0226, -21.1874, 0.29 ) }
    dend_10 { pt3dadd( -12.4142, -98.8818, -21.2923, 0.52 ) }
    dend_10 { pt3dadd( -12.1801, -99.8497, -21.4231, 0.52 ) }
    dend_10 { pt3dadd( -11.9855, -100.669, -21.5285, 0.22 ) }
    dend_10 { pt3dadd( -11.8324, -101.35, -21.6121, 1.47 ) }
    dend_10 { pt3dadd( -11.7164, -101.92, -21.6732, 2.06 ) }
    dend_10 { pt3dadd( -11.6715, -102.223, -21.6995, 2.36 ) }
    dend_10 { pt3dadd( -11.6279, -102.871, -21.7359, 1.69 ) }
    dend_10 { pt3dadd( -11.6428, -103.88, -21.7575, 0.74 ) }
    dend_10 { pt3dadd( -11.7149, -104.791, -21.7579, 0.44 ) }
    dend_10 { pt3dadd( -11.8398, -105.747, -21.7643, 0.44 ) }
    dend_10 { pt3dadd( -11.9415, -106.322, -21.7726, 0.44 ) }
    dend_10 { pt3dadd( -12.159, -107.435, -21.7969, 0.29 ) }
    dend_10 { pt3dadd( -12.2642, -108.002, -21.8152, 0.59 ) }
    dend_10 { pt3dadd( -12.3648, -108.595, -21.8399, 0.59 ) }
    dend_10 { pt3dadd( -12.4452, -109.221, -21.8698, 0.29 ) }
    dend_10 { pt3dadd( -12.45, -109.29, -21.8744, 0.29 ) }
    dend_10 { pt3dadd( -12.4797, -110.182, -21.9521, 0.29 ) }
    dend_10 { pt3dadd( -12.4739, -111.187, -22.0653, 0.29 ) }
    dend_10 { pt3dadd( -12.4756, -111.309, -22.0806, 0.29 ) }
    dend_10 { pt3dadd( -12.5233, -111.752, -22.1421, 0.29 ) }
    dend_10 { pt3dadd( -12.5393, -111.81, -22.1531, 0.29 ) }
    dend_10 { pt3dadd( -12.761, -112.355, -22.345, 0.29 ) }
    dend_10 { pt3dadd( -12.784, -112.407, -22.3682, 0.29 ) }
    dend_10 { pt3dadd( -13.0381, -112.991, -22.666, 0.29 ) }
    dend_10 { pt3dadd( -13.3913, -113.876, -23.1336, 2.28 ) }
    dend_10 { pt3dadd( -13.8366, -114.989, -23.7312, 2.65 ) }
    dend_10 { pt3dadd( -14.4496, -116.565, -24.5737, 0.29 ) }
    dend_10 { pt3dadd( -14.7586, -117.371, -24.9926, 0.29 ) }
    dend_10 { pt3dadd( -14.9864, -117.927, -25.2765, 0.59 ) }
    dend_10 { pt3dadd( -15.1025, -118.197, -25.415, 0.22 ) }
    dend_10 { pt3dadd( -15.3986, -118.788, -25.7235, 0.22 ) }
    dend_10 { pt3dadd( -15.6609, -119.197, -25.9633, 0.22 ) }
    dend_10 { pt3dadd( -16.1672, -119.859, -26.3826, 1.03 ) }
    dend_10 { pt3dadd( -16.6448, -120.433, -26.7784, 1.92 ) }
    dend_10 { pt3dadd( -17.0472, -120.927, -27.1281, 2.06 ) }
    dend_10 { pt3dadd( -17.4266, -121.444, -27.5106, 1.92 ) }
    dend_10 { pt3dadd( -18.4248, -123.084, -28.7224, 0.29 ) }
    dend_10 { pt3dadd( -18.7097, -123.65, -29.1239, 0.52 ) }
    dend_10 { pt3dadd( -18.7271, -123.692, -29.152, 0.52 ) }
    dend_10 { pt3dadd( -18.8753, -124.137, -29.4049, 0.52 ) }
    dend_10 { pt3dadd( -19.091, -124.909, -29.7478, 0.37 ) }
    dend_10 { pt3dadd( -19.2273, -125.576, -29.9447, 0.29 ) }
    dend_10 { pt3dadd( -19.3292, -126.33, -30.0705, 0.29 ) }
    dend_10 { pt3dadd( -19.4161, -126.93, -30.1551, 0.88 ) }
    dend_10 { pt3dadd( -19.4693, -127.325, -30.207, 0.88 ) }
    dend_10 { pt3dadd( -19.5689, -128.342, -30.327, 0.22 ) }
    dend_10 { pt3dadd( -19.6103, -129.184, -30.4078, 1.55 ) }
    dend_10 { pt3dadd( -19.6019, -129.702, -30.457, 1.84 ) }
    dend_10 { pt3dadd( -19.5626, -130.167, -30.4977, 1.62 ) }
    dend_10 { pt3dadd( -19.4126, -131.288, -30.6199, 0.22 ) }
    dend_10 { pt3dadd( -19.2858, -132.065, -30.712, 0.22 ) }
    dend_10 { pt3dadd( -19.1995, -132.555, -30.7687, 0.22 ) }
    dend_10 { pt3dadd( -19.137, -133.059, -30.82, 0.74 ) }
    dend_10 { pt3dadd( -19.1076, -133.506, -30.8565, 0.74 ) }
    dend_10 { pt3dadd( -19.0986, -134.49, -30.9205, 0.29 ) }
    dend_10 { pt3dadd( -19.1397, -135.06, -30.9395, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -19.2644, -135.98, -30.9333, 0.29 ) }
    dend_10 { pt3dadd( -19.4087, -136.866, -30.8972, 1.77 ) }
    dend_10 { pt3dadd( -19.5014, -137.392, -30.8608, 2.21 ) }
    dend_10 { pt3dadd( -19.5962, -137.889, -30.8122, 2.21 ) }
    dend_10 { pt3dadd( -19.7759, -138.754, -30.6979, 0.74 ) }
    dend_10 { pt3dadd( -19.9628, -139.564, -30.6078, 0.22 ) }
    dend_10 { pt3dadd( -20.2103, -140.553, -30.5227, 0.22 ) }
    dend_10 { pt3dadd( -20.342, -141.071, -30.4937, 0.88 ) }
    dend_10 { pt3dadd( -20.4603, -141.561, -30.478, 1.03 ) }
    dend_10 { pt3dadd( -20.4891, -141.69, -30.4776, 1.03 ) }
    dend_10 { pt3dadd( -20.6782, -142.622, -30.5119, 0.22 ) }
    dend_10 { pt3dadd( -20.803, -143.239, -30.553, 0.22 ) }
    dend_10 { pt3dadd( -20.8285, -143.359, -30.5604, 0.22 ) }
    dend_10 { pt3dadd( -20.9727, -144.047, -30.603, 0.22 ) }
    dend_10 { pt3dadd( -21.076, -144.504, -30.6229, 0.22 ) }
    dend_10 { pt3dadd( -21.2636, -145.26, -30.6494, 1.33 ) }
    dend_10 { pt3dadd( -21.3815, -145.694, -30.6575, 1.77 ) }
    dend_10 { pt3dadd( -21.5699, -146.352, -30.6535, 1.77 ) }
    dend_10 { pt3dadd( -21.7164, -146.875, -30.6413, 0.88 ) }
    dend_10 { pt3dadd( -22.0113, -147.922, -30.6043, 0.29 ) }
    dend_10 { pt3dadd( -22.0971, -148.317, -30.587, 0.74 ) }
    dend_10 { pt3dadd( -22.1842, -148.745, -30.5788, 0.74 ) }
    dend_10 { pt3dadd( -22.3702, -149.756, -30.5842, 0.22 ) }
    dend_10 { pt3dadd( -22.4453, -150.202, -30.5938, 0.22 ) }
    dend_10 { pt3dadd( -22.4585, -150.281, -30.597, 0.22 ) }
    dend_10 { pt3dadd( -22.5966, -151.09, -30.6563, 0.96 ) }
    dend_10 { pt3dadd( -22.824, -152.264, -30.7539, 1.18 ) }
    dend_10 { pt3dadd( -22.9, -152.598, -30.7884, 1.47 ) }
    dend_10 { pt3dadd( -22.9207, -152.675, -30.7979, 1.47 ) }
    dend_10 { pt3dadd( -23.0384, -153.077, -30.8381, 1.47 ) }
    dend_10 { pt3dadd( -23.3491, -154.194, -30.918, 0.22 ) }
    dend_10 { pt3dadd( -23.4437, -154.563, -30.9408, 0.22 ) }
    dend_10 { pt3dadd( -23.5334, -155.066, -30.96, 0.74 ) }
    dend_10 { pt3dadd( -23.5844, -155.309, -30.9722, 0.96 ) }
    dend_10 { pt3dadd( -23.6154, -155.437, -30.9794, 0.96 ) }
    dend_10 { pt3dadd( -23.6978, -155.742, -31.0017, 0.96 ) }
    dend_10 { pt3dadd( -23.9334, -156.593, -31.0817, 0.22 ) }
    dend_10 { pt3dadd( -24.0678, -157.11, -31.1327, 0.29 ) }
    dend_10 { pt3dadd( -24.209, -157.729, -31.2433, 0.29 ) }
    dend_10 { pt3dadd( -24.3073, -158.155, -31.3697, 0.29 ) }
    dend_10 { pt3dadd( -24.4827, -158.918, -31.6477, 1.25 ) }
    dend_10 { pt3dadd( -24.5877, -159.381, -31.841, 1.69 ) }
    dend_10 { pt3dadd( -24.6649, -159.737, -32.0123, 1.69 ) }
    dend_10 { pt3dadd( -24.8823, -160.784, -32.5885, 1.03 ) }
    dend_10 { pt3dadd( -25.1263, -161.864, -33.2071, 0.22 ) }
    dend_10 { pt3dadd( -25.2339, -162.298, -33.451, 0.22 ) }
    dend_10 { pt3dadd( -25.5234, -163.379, -34.0352, 1.99 ) }
    dend_10 { pt3dadd( -25.7219, -164.06, -34.3796, 2.5 ) }
    dend_10 { pt3dadd( -26.1423, -165.492, -35.0091, 0.29 ) }
    dend_10 { pt3dadd( -26.3425, -166.147, -35.2431, 0.22 ) }
    dend_10 { pt3dadd( -26.5512, -166.84, -35.4385, 0.52 ) }
    dend_10 { pt3dadd( -26.6452, -167.14, -35.5079, 0.59 ) }
    dend_10 { pt3dadd( -26.9579, -168.139, -35.6634, 0.22 ) }
    dend_10 { pt3dadd( -27.1976, -168.967, -35.7253, 0.22 ) }
    dend_10 { pt3dadd( -27.3336, -169.47, -35.7285, 0.22 ) }
    dend_10 { pt3dadd( -27.6004, -170.494, -35.7228, 1.33 ) }
    dend_10 { pt3dadd( -27.74, -170.974, -35.7208, 1.69 ) }
    dend_10 { pt3dadd( -27.895, -171.453, -35.7165, 1.47 ) }
    dend_10 { pt3dadd( -28.1436, -172.109, -35.719, 0.52 ) }
    dend_10 { pt3dadd( -28.3597, -172.618, -35.7336, 0.29 ) }
    dend_10 { pt3dadd( -28.9626, -173.898, -35.7912, 0.29 ) }
    dend_10 { pt3dadd( -29.4095, -174.736, -35.8518, 1.11 ) }
    dend_10 { pt3dadd( -29.6727, -175.21, -35.8995, 1.47 ) }
    dend_10 { pt3dadd( -30.3875, -176.434, -36.0462, 0.22 ) }
    dend_10 { pt3dadd( -30.6601, -176.907, -36.1109, 1.77 ) }
    dend_10 { pt3dadd( -31.0287, -177.557, -36.2107, 2.14 ) }
    dend_10 { pt3dadd( -31.2472, -177.956, -36.2788, 1.69 ) }
    dend_10 { pt3dadd( -31.7301, -178.955, -36.4407, 0.22 ) }
    dend_10 { pt3dadd( -31.7537, -179.013, -36.4498, 0.22 ) }
    dend_10 { pt3dadd( -31.9255, -179.53, -36.5272, 0.22 ) }
    dend_10 { pt3dadd( -32.0899, -180.077, -36.6281, 0.52 ) }
    dend_10 { pt3dadd( -32.1344, -180.243, -36.6634, 0.52 ) }
    dend_10 { pt3dadd( -32.3372, -181.072, -36.847, 0.22 ) }
    dend_10 { pt3dadd( -32.4552, -181.581, -36.9692, 0.22 ) }
    dend_10 { pt3dadd( -32.599, -182.312, -37.1558, 1.99 ) }
    dend_10 { pt3dadd( -32.7114, -182.985, -37.3419, 2.5 ) }
    dend_10 { pt3dadd( -32.7992, -183.916, -37.6536, 0.81 ) }
    dend_10 { pt3dadd( -32.8432, -184.528, -37.8743, 0.22 ) }
    dend_10 { pt3dadd( -32.8469, -184.577, -37.892, 0.22 ) }
    dend_10 { pt3dadd( -32.8787, -184.908, -38.0075, 0.52 ) }
    dend_10 { pt3dadd( -32.8848, -184.957, -38.0236, 0.52 ) }
    dend_10 { pt3dadd( -33.1053, -185.926, -38.3289, 0.22 ) }
    dend_10 { pt3dadd( -33.3805, -186.824, -38.5924, 0.22 ) }
    dend_10 { pt3dadd( -33.6517, -187.576, -38.8011, 0.22 ) }
    dend_10 { pt3dadd( -33.9347, -188.238, -38.9735, 1.33 ) }
    dend_10 { pt3dadd( -34.0744, -188.521, -39.0417, 1.33 ) }
    dend_10 { pt3dadd( -34.6675, -189.602, -39.2855, 0.22 ) }
    dend_10 { pt3dadd( -35.1458, -190.277, -39.4123, 0.22 ) }
    dend_10 { pt3dadd( -35.1819, -190.319, -39.4204, 0.22 ) }
    dend_10 { pt3dadd( -36.1402, -191.266, -39.5941, 2.28 ) }
    dend_10 { pt3dadd( -36.4388, -191.516, -39.6347, 2.73 ) }
    dend_10 { pt3dadd( -36.7368, -191.737, -39.6695, 2.73 ) }
    dend_10 { pt3dadd( -38.2104, -192.665, -39.8139, 0.22 ) }
    dend_10 { pt3dadd( -38.506, -192.817, -39.8509, 0.74 ) }
    dend_10 { pt3dadd( -38.8107, -192.957, -39.8937, 0.96 ) }
    dend_10 { pt3dadd( -39.8148, -193.332, -40.0775, 0.22 ) }
    dend_10 { pt3dadd( -40.2791, -193.481, -40.1856, 1.03 ) }
    dend_10 { pt3dadd( -40.5697, -193.578, -40.3131, 1.03 ) }
    dend_10 { pt3dadd( -41.6933, -193.987, -41.0827, 0.22 ) }
    dend_10 { pt3dadd( -41.739, -194.005, -41.1236, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -42.3584, -194.27, -41.744, 1.4 ) }
    dend_10 { pt3dadd( -42.5239, -194.344, -41.9261, 1.4 ) }
    dend_10 { pt3dadd( -44.137, -195.11, -43.7439, 0.59 ) }
    dend_10 { pt3dadd( -44.5068, -195.299, -44.1642, 1.03 ) }
    dend_10 { pt3dadd( -45.6417, -195.938, -45.3915, 0.22 ) }
    dend_10 { pt3dadd( -46.2049, -196.259, -45.9286, 0.22 ) }
    dend_10 { pt3dadd( -46.2425, -196.282, -45.9604, 0.22 ) }
    dend_10 { pt3dadd( -46.7115, -196.561, -46.3022, 1.11 ) }
    dend_10 { pt3dadd( -47.0652, -196.76, -46.5011, 1.25 ) }
    dend_10 { pt3dadd( -48.3265, -197.488, -47.1496, 0.22 ) }
    dend_10 { pt3dadd( -48.741, -197.736, -47.3438, 0.66 ) }
    dend_10 { pt3dadd( -49.8803, -198.429, -47.9007, 0.22 ) }
    dend_10 { pt3dadd( -49.9322, -198.461, -47.9253, 0.22 ) }
    dend_10 { pt3dadd( -50.283, -198.67, -48.0858, 0.96 ) }
    dend_10 { pt3dadd( -50.6135, -198.852, -48.2223, 1.4 ) }
    dend_10 { pt3dadd( -51.1274, -199.119, -48.4031, 0.96 ) }
    dend_10 { pt3dadd( -52.0532, -199.597, -48.6778, 0.22 ) }
    dend_10 { pt3dadd( -52.5697, -199.872, -48.7997, 1.62 ) }
    dend_10 { pt3dadd( -52.9904, -200.104, -48.8941, 1.99 ) }
    dend_10 { pt3dadd( -54.3207, -200.884, -49.1571, 0.22 ) }
    dend_10 { pt3dadd( -54.7025, -201.13, -49.2274, 0.37 ) }
    dend_10 { pt3dadd( -54.8986, -201.267, -49.2547, 0.37 ) }
    dend_10 { pt3dadd( -55.4045, -201.636, -49.3136, 0.22 ) }
    dend_10 { pt3dadd( -55.8164, -201.96, -49.369, 0.22 ) }
    dend_10 { pt3dadd( -56.4092, -202.445, -49.4568, 0.52 ) }
    dend_10 { pt3dadd( -57.0923, -203.019, -49.5719, 0.22 ) }
    dend_10 { pt3dadd( -57.4739, -203.328, -49.6485, 0.96 ) }
    dend_10 { pt3dadd( -57.8513, -203.619, -49.7566, 0.96 ) }
    dend_10 { pt3dadd( -58.7829, -204.354, -50.0853, 0.22 ) }
    dend_10 { pt3dadd( -59.4789, -204.91, -50.4329, 1.18 ) }
    dend_10 { pt3dadd( -59.7859, -205.165, -50.6589, 1.55 ) }
    dend_10 { pt3dadd( -59.8199, -205.193, -50.689, 1.55 ) }
    dend_10 { pt3dadd( -60.7765, -206.033, -51.6403, 0.29 ) }
    dend_10 { pt3dadd( -61.2321, -206.433, -52.1229, 0.29 ) }
    dend_10 { pt3dadd( -62.1442, -207.2, -53.1168, 1.55 ) }
    dend_10 { pt3dadd( -63.5404, -208.328, -54.644, 0.29 ) }
    dend_10 { pt3dadd( -63.5844, -208.362, -54.6905, 0.29 ) }
    dend_10 { pt3dadd( -63.9768, -208.664, -55.0904, 1.18 ) }
    dend_10 { pt3dadd( -64.6723, -209.188, -55.7755, 0.22 ) }
    dend_10 { pt3dadd( -65.2407, -209.607, -56.3126, 1.25 ) }
    dend_10 { pt3dadd( -66.1276, -210.309, -57.1047, 0.22 ) }
    dend_10 { pt3dadd( -66.2675, -210.421, -57.219, 0.74 ) }
    dend_10 { pt3dadd( -66.8703, -210.93, -57.71, 0.22 ) }
    dend_10 { pt3dadd( -66.9038, -210.962, -57.7376, 0.22 ) }
    dend_10 { pt3dadd( -67.397, -211.49, -58.151, 1.11 ) }
    dend_10 { pt3dadd( -67.741, -211.896, -58.4338, 1.47 ) }
    dend_10 { pt3dadd( -68.4854, -212.835, -58.9991, 0.22 ) }
    dend_10 { pt3dadd( -68.683, -213.087, -59.1429, 0.59 ) }
    dend_10 { pt3dadd( -69.1388, -213.676, -59.4492, 1.18 ) }
    dend_10 { pt3dadd( -69.1752, -213.723, -59.4735, 1.18 ) }
    dend_10 { pt3dadd( -69.6159, -214.313, -59.7536, 1.18 ) }
    dend_10 { pt3dadd( -70.4185, -215.387, -60.235, 0.22 ) }
    dend_10 { pt3dadd( -70.8277, -215.977, -60.4783, 1.25 ) }
    dend_10 { pt3dadd( -70.9919, -216.209, -60.5722, 1.25 ) }
    dend_10 { pt3dadd( -71.6026, -217.001, -60.9076, 0.29 ) }
    dend_10 { pt3dadd( -71.9577, -217.435, -61.1025, 0.96 ) }
    dend_10 { pt3dadd( -72.8431, -218.54, -61.5245, 0.29 ) }
    dend_10 { pt3dadd( -73.4578, -219.296, -61.7597, 0.44 ) }
    dend_10 { pt3dadd( -74.1338, -220.098, -61.9599, 0.22 ) }
    dend_10 { pt3dadd( -74.7889, -220.83, -62.1005, 1.18 ) }
    dend_10 { pt3dadd( -75.2493, -221.29, -62.1317, 1.77 ) }
    dend_10 { pt3dadd( -76.3965, -222.301, -62.0628, 0.29 ) }
    dend_10 { pt3dadd( -76.8663, -222.66, -61.9609, 0.29 ) }
    dend_10 { pt3dadd( -77.2216, -222.883, -61.8358, 0.29 ) }
    dend_10 { pt3dadd( -77.5522, -223.048, -61.6956, 0.88 ) }
    dend_10 { pt3dadd( -78.5867, -223.5, -61.2365, 0.22 ) }
    dend_10 { pt3dadd( -79.2635, -223.737, -60.9783, 1.03 ) }
    dend_10 { pt3dadd( -79.6296, -223.838, -60.8662, 1.03 ) }
    dend_10 { pt3dadd( -80.369, -224.012, -60.6374, 0.22 ) }
    dend_10 { pt3dadd( -82.3241, -224.373, -60.0577, 0.22 ) }
    dend_10 { pt3dadd( -82.3855, -224.381, -60.0406, 0.22 ) }
    dend_10 { pt3dadd( -83.6252, -224.425, -59.7389, 0.81 ) }
    dend_10 { pt3dadd( -83.864, -224.415, -59.6904, 1.03 ) }
    dend_10 { pt3dadd( -84.5646, -224.324, -59.5342, 0.22 ) }
    dend_10 { pt3dadd( -85.4169, -224.139, -59.34, 0.22 ) }
    dend_10 { pt3dadd( -85.4757, -224.121, -59.3223, 0.22 ) }
    dend_10 { pt3dadd( -86.488, -223.822, -59.0174, 1.33 ) }
    dend_10 { pt3dadd( -86.9374, -223.704, -58.895, 1.55 ) }
    dend_10 { pt3dadd( -88.474, -223.396, -58.5645, 0.22 ) }
    dend_10 { pt3dadd( -88.9164, -223.331, -58.4907, 0.59 ) }
    dend_10 { pt3dadd( -89.6106, -223.265, -58.4276, 0.59 ) }
    dend_10 { pt3dadd( -90.355, -223.224, -58.4119, 0.44 ) }
    dend_10 { pt3dadd( -91.5368, -223.218, -58.4767, 0.22 ) }
    dend_10 { pt3dadd( -92.2816, -223.222, -58.5533, 1.03 ) }
    dend_10 { pt3dadd( -92.5517, -223.232, -58.5922, 1.03 ) }
    dend_10 { pt3dadd( -93.6909, -223.265, -58.7337, 0.22 ) }
    dend_10 { pt3dadd( -94.1817, -223.258, -58.7815, 0.22 ) }
    dend_10 { pt3dadd( -94.236, -223.254, -58.7821, 0.22 ) }
    dend_10 { pt3dadd( -95.2572, -223.091, -58.765, 0.22 ) }
    dend_10 { pt3dadd( -96.182, -222.896, -58.7351, 0.22 ) }
    dend_10 { pt3dadd( -96.2347, -222.883, -58.7332, 0.22 ) }
    dend_10 { pt3dadd( -97.2047, -222.621, -58.7527, 1.11 ) }
    dend_10 { pt3dadd( -97.5722, -222.527, -58.8088, 1.55 ) }
    dend_10 { pt3dadd( -98.5878, -222.288, -59.0568, 0.22 ) }
    dend_10 { pt3dadd( -99.3417, -222.149, -59.3263, 0.22 ) }
    dend_10 { pt3dadd( -99.7226, -222.084, -59.4867, 0.66 ) }
    dend_10 { pt3dadd( -100.826, -221.938, -59.9906, 0.22 ) }
    dend_10 { pt3dadd( -101.803, -221.835, -60.4602, 1.25 ) }
    dend_10 { pt3dadd( -102.173, -221.807, -60.6615, 1.47 ) }
    dend_10 { pt3dadd( -103.363, -221.8, -61.3098, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -103.419, -221.804, -61.3392, 0.22 ) }
    dend_10 { pt3dadd( -103.861, -221.87, -61.5549, 1.03 ) }
    dend_10 { pt3dadd( -104.539, -222.023, -61.8427, 1.33 ) }
    dend_10 { pt3dadd( -106.272, -222.474, -62.5442, 0.22 ) }
    dend_10 { pt3dadd( -107.575, -222.847, -63.0749, 0.22 ) }
    dend_10 { pt3dadd( -108.566, -223.163, -63.4617, 0.22 ) }
    dend_10 { pt3dadd( -108.929, -223.29, -63.6012, 1.03 ) }
    dend_10 { pt3dadd( -109.386, -223.478, -63.7683, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -53.5797, 714.586, -47.0912, 0.88 ) }
    dend_63 { pt3dadd( -54.3224, 716.307, -46.9755, 0.88 ) }
    dend_63 { pt3dadd( -55.4531, 718.953, -46.8405, 0.15 ) }
    dend_63 { pt3dadd( -56.0839, 720.674, -46.8886, 0.15 ) }
    dend_63 { pt3dadd( -56.1486, 720.851, -46.8999, 0.15 ) }
    dend_63 { pt3dadd( -56.4862, 721.776, -46.9592, 1.03 ) }
    dend_63 { pt3dadd( -56.6384, 722.192, -46.9859, 1.4 ) }
    dend_63 { pt3dadd( -56.7706, 722.583, -47.0423, 1.4 ) }
    dend_63 { pt3dadd( -57.9294, 726.034, -47.5889, 0.22 ) }
    dend_63 { pt3dadd( -58.7376, 728.609, -48.0008, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -53.5797, 714.586, -47.0912, 0.22 ) }
    dend_62 { pt3dadd( -52.9147, 716.072, -46.6909, 0.22 ) }
    dend_62 { pt3dadd( -52.6139, 716.752, -46.4765, 0.81 ) }
    dend_62 { pt3dadd( -52.5199, 716.965, -46.4038, 1.03 ) }
    dend_62 { pt3dadd( -52.369, 717.33, -46.2776, 0.81 ) }
    dend_62 { pt3dadd( -51.7225, 718.948, -45.7143, 0.22 ) }
    dend_62 { pt3dadd( -51.6278, 719.203, -45.6344, 0.44 ) }
    dend_62 { pt3dadd( -51.4611, 719.769, -45.4608, 0.15 ) }
    dend_62 { pt3dadd( -51.4504, 719.81, -45.4502, 0.15 ) }
    dend_62 { pt3dadd( -51.32, 720.431, -45.3047, 1.03 ) }
    dend_62 { pt3dadd( -51.3079, 720.507, -45.2893, 1.03 ) }
    dend_62 { pt3dadd( -51.1588, 721.594, -45.1387, 0.15 ) }
    dend_62 { pt3dadd( -51.1241, 721.856, -45.1049, 0.29 ) }
    dend_62 { pt3dadd( -50.9635, 723.069, -44.9601, 0.15 ) }
    dend_62 { pt3dadd( -50.9028, 723.494, -44.906, 0.66 ) }
    dend_62 { pt3dadd( -50.8942, 723.551, -44.8961, 0.66 ) }
    dend_62 { pt3dadd( -50.7445, 724.571, -44.6767, 0.15 ) }
    dend_62 { pt3dadd( -50.6374, 725.285, -44.4839, 0.66 ) }
    dend_62 { pt3dadd( -50.5397, 725.901, -44.3101, 0.22 ) }
    dend_62 { pt3dadd( -50.5287, 725.958, -44.2933, 0.22 ) }
    dend_62 { pt3dadd( -50.4006, 726.577, -44.0952, 0.74 ) }
    dend_62 { pt3dadd( -50.3726, 726.729, -44.0416, 0.74 ) }
    dend_62 { pt3dadd( -50.3628, 726.86, -43.9773, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -29.0009, 663.28, -7.75218, 0.37 ) }
    dend_52 { pt3dadd( -30.7945, 664.205, -7.72965, 0.37 ) }
    dend_52 { pt3dadd( -31.5719, 664.613, -7.72587, 0.37 ) }
    dend_52 { pt3dadd( -31.65, 664.657, -7.71794, 0.37 ) }
    dend_52 { pt3dadd( -32.3033, 665.039, -7.61489, 0.37 ) }
    dend_52 { pt3dadd( -33.1344, 665.553, -7.43452, 0.88 ) }
    dend_52 { pt3dadd( -33.5969, 665.851, -7.3143, 0.88 ) }
    dend_52 { pt3dadd( -33.6667, 665.903, -7.2846, 0.88 ) }
    dend_52 { pt3dadd( -34.6464, 666.724, -6.73348, 0.88 ) }
    dend_52 { pt3dadd( -34.6894, 666.765, -6.70431, 0.88 ) }
    dend_52 { pt3dadd( -35.0217, 667.155, -6.42471, 1.03 ) }
    dend_52 { pt3dadd( -35.0857, 667.231, -6.37379, 1.03 ) }
    dend_52 { pt3dadd( -35.414, 667.574, -6.15337, 1.03 ) }
    dend_52 { pt3dadd( -35.5137, 667.67, -6.09488, 1.03 ) }
    dend_52 { pt3dadd( -36.1149, 668.205, -5.79505, 0.74 ) }
    dend_52 { pt3dadd( -36.9126, 668.874, -5.41483, 0.29 ) }
    dend_52 { pt3dadd( -37.7149, 669.519, -5.02339, 0.29 ) }
    dend_52 { pt3dadd( -38.5325, 670.2, -4.59797, 0.29 ) }
    dend_52 { pt3dadd( -38.6303, 670.288, -4.53969, 0.29 ) }
    dend_52 { pt3dadd( -39.105, 670.766, -4.20893, 0.22 ) }
    dend_52 { pt3dadd( -39.1613, 670.834, -4.15756, 0.22 ) }
    dend_52 { pt3dadd( -39.5089, 671.395, -3.69427, 0.52 ) }
    dend_52 { pt3dadd( -39.6729, 672.086, -3.10071, 1.18 ) }
    dend_52 { pt3dadd( -39.707, 672.659, -2.62503, 1.18 ) }
    dend_52 { pt3dadd( -39.7056, 672.719, -2.57659, 1.18 ) }
    dend_52 { pt3dadd( -39.6482, 673.034, -2.32138, 1.18 ) }
    dend_52 { pt3dadd( -39.6342, 673.084, -2.2805, 1.18 ) }
    dend_52 { pt3dadd( -39.2131, 673.869, -1.638, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -29.0009, 663.28, -7.75218, 0.52 ) }
    dend_31 { pt3dadd( -28.1966, 664.608, -7.45345, 0.52 ) }
    dend_31 { pt3dadd( -27.4953, 665.794, -7.15542, 0.37 ) }
    dend_31 { pt3dadd( -27.4592, 665.856, -7.1393, 0.37 ) }
    dend_31 { pt3dadd( -26.9909, 666.687, -6.91267, 0.37 ) }
    dend_31 { pt3dadd( -26.6595, 667.284, -6.74562, 0.74 ) }
    dend_31 { pt3dadd( -26.168, 668.208, -6.48338, 0.44 ) }
    dend_31 { pt3dadd( -25.6198, 669.453, -6.11932, 0.37 ) }
    dend_31 { pt3dadd( -25.5962, 669.509, -6.10211, 0.37 ) }
    dend_31 { pt3dadd( -25.423, 669.92, -5.97246, 0.37 ) }
    dend_31 { pt3dadd( -25.3956, 669.986, -5.95055, 0.37 ) }
    dend_31 { pt3dadd( -24.9827, 671.091, -5.61126, 0.88 ) }
    dend_31 { pt3dadd( -24.737, 671.895, -5.44091, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -58.7376, 728.609, -48.0008, 0.22 ) }
    dend_65 { pt3dadd( -59.342, 727.784, -49.1482, 0.22 ) }
    dend_65 { pt3dadd( -59.4984, 727.561, -49.4714, 1.25 ) }
    dend_65 { pt3dadd( -60.0599, 726.743, -50.6855, 0.22 ) }
    dend_65 { pt3dadd( -60.2605, 726.457, -51.1193, 0.96 ) }
    dend_65 { pt3dadd( -60.8448, 725.656, -52.3509, 0.22 ) }
    dend_65 { pt3dadd( -60.8684, 725.623, -52.4035, 0.22 ) }
    dend_65 { pt3dadd( -61.2419, 725.05, -53.3348, 0.22 ) }
    dend_65 { pt3dadd( -61.2555, 725.026, -53.3745, 0.22 ) }
    dend_65 { pt3dadd( -61.3689, 724.775, -53.79, 0.74 ) }
    dend_65 { pt3dadd( -61.416, 724.661, -53.9835, 0.88 ) }
    dend_65 { pt3dadd( -61.7774, 723.918, -55.1803, 0.22 ) }
    dend_65 { pt3dadd( -61.7918, 723.893, -55.2189, 0.22 ) }
    dend_65 { pt3dadd( -62.0864, 723.337, -56.0269, 0.22 ) }
    dend_65 { pt3dadd( -62.2628, 722.978, -56.5344, 0.22 ) }
    dend_65 { pt3dadd( -62.2742, 722.951, -56.5722, 0.22 ) }
    dend_65 { pt3dadd( -62.4816, 722.401, -57.294, 1.11 ) }
    dend_65 { pt3dadd( -62.7863, 721.993, -57.7132, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -58.7376, 728.609, -48.0008, 0.96 ) }
    dend_64 { pt3dadd( -58.9802, 729.29, -48.1681, 0.96 ) }
    dend_64 { pt3dadd( -59.0067, 729.363, -48.1837, 0.96 ) }
    dend_64 { pt3dadd( -59.1437, 729.739, -48.2581, 1.18 ) }
    dend_64 { pt3dadd( -59.4131, 730.487, -48.3996, 0.88 ) }
    dend_64 { pt3dadd( -60.5712, 733.75, -48.9998, 0.15 ) }
    dend_64 { pt3dadd( -60.5978, 733.825, -49.0133, 0.15 ) }
    dend_64 { pt3dadd( -61.2247, 735.665, -49.3473, 0.15 ) }
    dend_64 { pt3dadd( -61.6161, 736.892, -49.6008, 0.96 ) }
    dend_64 { pt3dadd( -61.7732, 737.429, -49.7221, 1.33 ) }
    dend_64 { pt3dadd( -61.7946, 737.514, -49.7425, 1.33 ) }
    dend_64 { pt3dadd( -61.8379, 737.752, -49.8011, 1.33 ) }
    dend_64 { pt3dadd( -61.859, 737.89, -49.8383, 1.33 ) }
    dend_64 { pt3dadd( -62.1041, 739.951, -50.4112, 0.15 ) }
    dend_64 { pt3dadd( -62.1593, 740.434, -50.5347, 0.44 ) }
    dend_64 { pt3dadd( -62.2154, 740.907, -50.65, 0.44 ) }
    dend_64 { pt3dadd( -62.4505, 742.6, -51.0294, 0.22 ) }
    dend_64 { pt3dadd( -62.4783, 742.765, -51.0631, 0.22 ) }
    dend_64 { pt3dadd( -62.7704, 744.015, -51.2821, 0.81 ) }
    dend_64 { pt3dadd( -63.097, 745.122, -51.4417, 0.22 ) }
    dend_64 { pt3dadd( -63.143, 745.258, -51.4622, 0.22 ) }
    dend_64 { pt3dadd( -63.472, 746.103, -51.5934, 1.18 ) }
    dend_64 { pt3dadd( -63.657, 746.528, -51.6573, 1.33 ) }
    dend_64 { pt3dadd( -64.7386, 748.658, -52.0653, 0.22 ) }
    dend_64 { pt3dadd( -64.819, 748.792, -52.0957, 0.22 ) }
    dend_64 { pt3dadd( -65.163, 749.313, -52.2233, 0.22 ) }
    dend_64 { pt3dadd( -65.6595, 749.986, -52.4008, 1.03 ) }
    dend_64 { pt3dadd( -66.0693, 750.492, -52.5488, 1.33 ) }
    dend_64 { pt3dadd( -67.275, 751.876, -53.0078, 0.15 ) }
    dend_64 { pt3dadd( -67.9456, 752.533, -53.2689, 0.15 ) }
    dend_64 { pt3dadd( -68.0017, 752.586, -53.2911, 0.15 ) }
    dend_64 { pt3dadd( -68.9072, 753.399, -53.6572, 0.15 ) }
    dend_64 { pt3dadd( -68.9667, 753.448, -53.6814, 0.15 ) }
    dend_64 { pt3dadd( -69.8379, 754.102, -54.0279, 1.03 ) }
    dend_64 { pt3dadd( -70.3721, 754.482, -54.213, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -39.2131, 673.869, -1.638, 0.52 ) }
    dend_60 { pt3dadd( -39.0472, 675.068, -2.26747, 0.52 ) }
    dend_60 { pt3dadd( -39.0224, 675.328, -2.38342, 0.52 ) }
    dend_60 { pt3dadd( -39.0175, 675.372, -2.40163, 0.52 ) }
    dend_60 { pt3dadd( -38.9414, 675.985, -2.6473, 0.37 ) }
    dend_60 { pt3dadd( -38.9347, 676.029, -2.66413, 0.37 ) }
    dend_60 { pt3dadd( -38.8018, 676.665, -2.89424, 0.37 ) }
    dend_60 { pt3dadd( -38.6729, 677.205, -3.03087, 1.03 ) }
    dend_60 { pt3dadd( -38.5485, 677.656, -3.13843, 0.88 ) }
    dend_60 { pt3dadd( -38.5334, 677.706, -3.15032, 0.88 ) }
    dend_60 { pt3dadd( -38.3762, 678.216, -3.26681, 0.59 ) }
    dend_60 { pt3dadd( -38.0311, 679.377, -3.59398, 0.22 ) }
    dend_60 { pt3dadd( -37.8254, 680.13, -3.82551, 0.22 ) }
    dend_60 { pt3dadd( -37.8136, 680.173, -3.8406, 0.22 ) }
    dend_60 { pt3dadd( -37.6543, 680.784, -4.07832, 0.88 ) }
    dend_60 { pt3dadd( -37.5567, 681.177, -4.231, 1.11 ) }
    dend_60 { pt3dadd( -37.2703, 682.424, -4.69286, 0.29 ) }
    dend_60 { pt3dadd( -37.1772, 682.83, -4.83339, 0.22 ) }
    dend_60 { pt3dadd( -36.9708, 683.513, -5.07256, 0.22 ) }
    dend_60 { pt3dadd( -36.9556, 683.556, -5.08662, 0.22 ) }
    dend_60 { pt3dadd( -36.6, 684.495, -5.34475, 0.22 ) }
    dend_60 { pt3dadd( -36.358, 685.122, -5.48528, 1.33 ) }
    dend_60 { pt3dadd( -36.2393, 685.417, -5.53443, 1.33 ) }
    dend_60 { pt3dadd( -35.7164, 686.701, -5.76105, 0.22 ) }
    dend_60 { pt3dadd( -35.6991, 686.744, -5.76886, 0.22 ) }
    dend_60 { pt3dadd( -35.387, 687.535, -5.92895, 0.22 ) }
    dend_60 { pt3dadd( -35.1692, 688.08, -6.06624, 0.81 ) }
    dend_60 { pt3dadd( -34.7301, 689.221, -6.35667, 0.22 ) }
    dend_60 { pt3dadd( -34.529, 689.766, -6.47863, 0.81 ) }
    dend_60 { pt3dadd( -34.5126, 689.81, -6.48522, 0.81 ) }
    dend_60 { pt3dadd( -34.432, 690.01, -6.51517, 0.81 ) }
    dend_60 { pt3dadd( -34.0462, 690.84, -6.64002, 0.22 ) }
    dend_60 { pt3dadd( -33.7512, 691.433, -6.71209, 1.4 ) }
    dend_60 { pt3dadd( -33.5688, 691.805, -6.73298, 1.77 ) }
    dend_60 { pt3dadd( -33.2841, 692.34, -6.74094, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -39.2131, 673.869, -1.638, 0.52 ) }
    dend_53 { pt3dadd( -39.5407, 674.285, -1.56583, 0.52 ) }
    dend_53 { pt3dadd( -39.5719, 674.329, -1.56109, 0.52 ) }
    dend_53 { pt3dadd( -39.7076, 674.535, -1.54957, 0.81 ) }
    dend_53 { pt3dadd( -39.7256, 674.564, -1.54907, 0.81 ) }
    dend_53 { pt3dadd( -39.8041, 674.7, -1.549, 0.59 ) }
    dend_53 { pt3dadd( -40.1344, 675.296, -1.54248, 0.29 ) }
    dend_53 { pt3dadd( -40.1625, 675.352, -1.54358, 0.29 ) }
    dend_53 { pt3dadd( -40.3032, 675.627, -1.53419, 1.03 ) }
    dend_53 { pt3dadd( -40.4455, 675.901, -1.50512, 0.96 ) }
    dend_53 { pt3dadd( -40.6, 676.187, -1.45624, 0.59 ) }
    dend_53 { pt3dadd( -40.7575, 676.47, -1.38018, 0.59 ) }
    dend_53 { pt3dadd( -40.7836, 676.513, -1.36201, 0.59 ) }
    dend_53 { pt3dadd( -40.948, 676.804, -1.21558, 0.59 ) }
    dend_53 { pt3dadd( -41.0645, 677.066, -1.0513, 0.29 ) }
    dend_53 { pt3dadd( -41.0712, 677.086, -1.0373, 0.29 ) }
    dend_53 { pt3dadd( -41.1201, 677.268, -0.906625, 0.29 ) }
    dend_53 { pt3dadd( -41.1289, 677.309, -0.87958, 0.29 ) }
    dend_53 { pt3dadd( -41.1915, 677.586, -0.721978, 0.59 ) }
    dend_53 { pt3dadd( -41.3044, 678.059, -0.508962, 0.22 ) }
    dend_53 { pt3dadd( -41.3121, 678.085, -0.499032, 0.22 ) }
    dend_53 { pt3dadd( -41.4392, 678.373, -0.419781, 0.22 ) }
    dend_53 { pt3dadd( -41.4884, 678.459, -0.40489, 0.22 ) }
    dend_53 { pt3dadd( -41.6619, 678.656, -0.405843, 0.22 ) }
    dend_53 { pt3dadd( -41.8777, 678.752, -0.476507, 0.66 ) }
    dend_53 { pt3dadd( -41.934, 678.762, -0.504628, 0.66 ) }
    dend_53 { pt3dadd( -42.2454, 678.788, -0.683616, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -24.737, 671.895, -5.44091, 0.29 ) }
    dend_33 { pt3dadd( -24.3097, 672.981, -5.07059, 0.29 ) }
    dend_33 { pt3dadd( -24.262, 673.117, -5.0327, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( -23.9962, 673.912, -4.84102, 0.88 ) }
    dend_33 { pt3dadd( -23.7762, 674.604, -4.69054, 1.25 ) }
    dend_33 { pt3dadd( -23.6031, 675.167, -4.57533, 1.25 ) }
    dend_33 { pt3dadd( -23.3386, 676.016, -4.41044, 0.44 ) }
    dend_33 { pt3dadd( -23.056, 676.974, -4.25779, 0.29 ) }
    dend_33 { pt3dadd( -22.8645, 677.616, -4.16645, 0.88 ) }
    dend_33 { pt3dadd( -22.7375, 678.045, -4.12054, 1.25 ) }
    dend_33 { pt3dadd( -22.7175, 678.111, -4.11625, 1.25 ) }
    dend_33 { pt3dadd( -22.5543, 678.637, -4.08918, 0.96 ) }
    dend_33 { pt3dadd( -22.5076, 678.783, -4.0805, 0.96 ) }
    dend_33 { pt3dadd( -22.3102, 679.376, -4.04618, 0.74 ) }
    dend_33 { pt3dadd( -21.919, 680.545, -3.98107, 0.29 ) }
    dend_33 { pt3dadd( -21.633, 681.39, -3.93502, 0.52 ) }
    dend_33 { pt3dadd( -21.5671, 681.593, -3.92454, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -24.737, 671.895, -5.44091, 0.22 ) }
    dend_32 { pt3dadd( -25.7958, 672.755, -5.36373, 0.22 ) }
    dend_32 { pt3dadd( -25.857, 672.802, -5.36189, 0.22 ) }
    dend_32 { pt3dadd( -26.5534, 673.315, -5.35562, 0.22 ) }
    dend_32 { pt3dadd( -26.6087, 673.356, -5.35512, 0.22 ) }
    dend_32 { pt3dadd( -27.6505, 674.124, -5.34573, 0.22 ) }
    dend_32 { pt3dadd( -27.7124, 674.17, -5.34517, 0.22 ) }
    dend_32 { pt3dadd( -28.623, 674.938, -5.39564, 0.22 ) }
    dend_32 { pt3dadd( -29.0206, 675.254, -5.41832, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -42.2454, 678.788, -0.683616, 0.22 ) }
    dend_55 { pt3dadd( -42.1187, 679.554, -0.731671, 0.22 ) }
    dend_55 { pt3dadd( -42.1294, 679.646, -0.680594, 0.22 ) }
    dend_55 { pt3dadd( -42.2682, 680.039, -0.377228, 0.22 ) }
    dend_55 { pt3dadd( -42.4018, 680.242, -0.164744, 0.37 ) }
    dend_55 { pt3dadd( -42.686, 680.59, 0.257365, 0.37 ) }
    dend_55 { pt3dadd( -42.7144, 680.617, 0.304742, 0.37 ) }
    dend_55 { pt3dadd( -43.3156, 681.124, 1.42335, 1.18 ) }
    dend_55 { pt3dadd( -43.5341, 681.257, 1.8033, 1.18 ) }
    dend_55 { pt3dadd( -43.9142, 681.425, 2.43598, 0.96 ) }
    dend_55 { pt3dadd( -44.0086, 681.453, 2.57675, 0.96 ) }
    dend_55 { pt3dadd( -44.9683, 681.653, 3.87482, 0.52 ) }
    dend_55 { pt3dadd( -45.017, 681.661, 3.93666, 0.52 ) }
    dend_55 { pt3dadd( -45.3289, 681.718, 4.31249, 0.52 ) }
    dend_55 { pt3dadd( -45.4019, 681.731, 4.40528, 0.52 ) }
    dend_55 { pt3dadd( -45.8328, 681.804, 4.92689, 0.74 ) }
    dend_55 { pt3dadd( -46.1752, 681.861, 5.29255, 0.88 ) }
    dend_55 { pt3dadd( -46.2141, 681.867, 5.3201, 0.88 ) }
    dend_55 { pt3dadd( -46.8208, 681.986, 5.7641, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -42.2454, 678.788, -0.683616, 0.22 ) }
    dend_54 { pt3dadd( -42.746, 678.257, -1.25361, 0.22 ) }
    dend_54 { pt3dadd( -42.7936, 678.207, -1.30788, 0.22 ) }
    dend_54 { pt3dadd( -43.3944, 677.569, -1.99194, 0.22 ) }
    dend_54 { pt3dadd( -43.4324, 677.529, -2.03524, 0.22 ) }
    dend_54 { pt3dadd( -43.8128, 677.126, -2.46837, 0.66 ) }
    dend_54 { pt3dadd( -43.9974, 676.93, -2.67861, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -21.5671, 681.593, -3.92454, 0.15 ) }
    dend_51 { pt3dadd( -20.4636, 681.525, -3.41849, 0.15 ) }
    dend_51 { pt3dadd( -19.7757, 681.326, -3.15812, 0.44 ) }
    dend_51 { pt3dadd( -19.7148, 681.303, -3.13877, 0.44 ) }
    dend_51 { pt3dadd( -19.0675, 681.023, -2.98427, 0.15 ) }
    dend_51 { pt3dadd( -18.5658, 680.806, -2.87652, 0.96 ) }
    dend_51 { pt3dadd( -18.0183, 680.576, -2.75723, 0.96 ) }
    dend_51 { pt3dadd( -16.9533, 680.078, -2.56129, 0.22 ) }
    dend_51 { pt3dadd( -16.7899, 680.002, -2.53392, 0.22 ) }
    dend_51 { pt3dadd( -15.9164, 679.631, -2.39149, 0.52 ) }
    dend_51 { pt3dadd( -15.3044, 679.386, -2.29302, 0.52 ) }
    dend_51 { pt3dadd( -14.5564, 679.139, -2.16551, 0.59 ) }
    dend_51 { pt3dadd( -14.3553, 679.094, -2.13643, 0.59 ) }
    dend_51 { pt3dadd( -13.4352, 678.987, -1.99846, 0.15 ) }
    dend_51 { pt3dadd( -13.3677, 678.982, -1.98838, 0.15 ) }
    dend_51 { pt3dadd( -12.9717, 678.952, -1.99791, 0.15 ) }
    dend_51 { pt3dadd( -12.8087, 678.939, -2.0225, 0.15 ) }
    dend_51 { pt3dadd( -11.8018, 678.882, -2.24669, 0.88 ) }
    dend_51 { pt3dadd( -11.3421, 678.863, -2.36349, 1.18 ) }
    dend_51 { pt3dadd( -10.7626, 678.863, -2.54303, 1.18 ) }
    dend_51 { pt3dadd( -8.84933, 678.91, -3.17865, 0.22 ) }
    dend_51 { pt3dadd( -8.7751, 678.912, -3.20285, 0.22 ) }
    dend_51 { pt3dadd( -8.39401, 678.91, -3.3158, 0.37 ) }
    dend_51 { pt3dadd( -8.31684, 678.91, -3.33634, 0.37 ) }
    dend_51 { pt3dadd( -7.18944, 678.929, -3.64002, 0.22 ) }
    dend_51 { pt3dadd( -7.13188, 678.928, -3.65244, 0.22 ) }
    dend_51 { pt3dadd( -6.37639, 678.95, -3.72471, 0.22 ) }
    dend_51 { pt3dadd( -5.97558, 678.953, -3.76372, 0.74 ) }
    dend_51 { pt3dadd( -5.54717, 678.942, -3.80478, 1.03 ) }
    dend_51 { pt3dadd( -5.45774, 678.939, -3.8118, 1.03 ) }
    dend_51 { pt3dadd( -3.77217, 678.831, -3.86924, 0.37 ) }
    dend_51 { pt3dadd( -2.82598, 678.79, -3.92961, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -21.5671, 681.593, -3.92454, 0.29 ) }
    dend_34 { pt3dadd( -21.2884, 682.701, -3.90188, 0.29 ) }
    dend_34 { pt3dadd( -21.0843, 683.386, -3.88551, 0.29 ) }
    dend_34 { pt3dadd( -21.0648, 683.444, -3.88387, 0.29 ) }
    dend_34 { pt3dadd( -20.8054, 684.217, -3.86191, 0.15 ) }
    dend_34 { pt3dadd( -20.5339, 685.026, -3.83894, 1.18 ) }
    dend_34 { pt3dadd( -20.3803, 685.484, -3.82595, 1.77 ) }
    dend_34 { pt3dadd( -20.1217, 686.119, -3.80962, 1.18 ) }
    dend_34 { pt3dadd( -19.9262, 686.548, -3.79885, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -46.8208, 681.986, 5.7641, 0.59 ) }
    dend_57 { pt3dadd( -47.0264, 682.841, 5.99961, 0.59 ) }
    dend_57 { pt3dadd( -47.0429, 682.914, 6.01463, 0.59 ) }
    dend_57 { pt3dadd( -47.1486, 683.449, 6.09513, 0.59 ) }
    dend_57 { pt3dadd( -47.1597, 683.534, 6.10605, 0.59 ) }
    dend_57 { pt3dadd( -47.1655, 683.886, 6.14122, 0.59 ) }
    dend_57 { pt3dadd( -47.1773, 684.091, 6.25733, 0.59 ) }
    dend_57 { pt3dadd( -47.239, 684.274, 6.57495, 0.29 ) }
    dend_57 { pt3dadd( -47.3444, 684.499, 7.00054, 0.22 ) }
    dend_57 { pt3dadd( -47.5268, 684.796, 7.56013, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( -47.739, 685.079, 8.07693, 0.74 ) }
    dend_57 { pt3dadd( -48.8636, 686.396, 10.4819, 0.74 ) }
    dend_57 { pt3dadd( -50.1936, 687.81, 13.0179, 0.88 ) }
    dend_57 { pt3dadd( -50.7326, 688.328, 13.9435, 0.22 ) }
    dend_57 { pt3dadd( -51.2712, 688.824, 14.7988, 0.22 ) }
    dend_57 { pt3dadd( -51.6841, 689.208, 15.3746, 0.22 ) }
    dend_57 { pt3dadd( -51.7348, 689.259, 15.4322, 0.22 ) }
    dend_57 { pt3dadd( -52.0064, 689.617, 15.5792, 0.22 ) }
    dend_57 { pt3dadd( -52.0503, 689.692, 15.5871, 0.22 ) }
    dend_57 { pt3dadd( -52.4104, 690.434, 15.7454, 0.22 ) }
    dend_57 { pt3dadd( -52.8544, 691.462, 16.0223, 0.81 ) }
    dend_57 { pt3dadd( -52.8831, 691.519, 16.0359, 0.81 ) }
    dend_57 { pt3dadd( -53.2794, 692.166, 16.1323, 0.96 ) }
    dend_57 { pt3dadd( -53.3444, 692.265, 16.1405, 0.96 ) }
    dend_57 { pt3dadd( -53.6629, 692.743, 16.1531, 0.96 ) }
    dend_57 { pt3dadd( -54.135, 693.466, 16.1332, 0.44 ) }
    dend_57 { pt3dadd( -54.476, 694.063, 16.1026, 0.44 ) }
    dend_57 { pt3dadd( -54.9643, 695.015, 16.0601, 0.22 ) }
    dend_57 { pt3dadd( -55.4036, 695.974, 16.0357, 0.37 ) }
    dend_57 { pt3dadd( -55.8096, 696.92, 16.0379, 0.37 ) }
    dend_57 { pt3dadd( -56.1412, 697.736, 16.0812, 0.37 ) }
    dend_57 { pt3dadd( -56.531, 698.703, 16.2082, 0.22 ) }
    dend_57 { pt3dadd( -56.5593, 698.772, 16.223, 0.22 ) }
    dend_57 { pt3dadd( -56.8179, 699.23, 16.4154, 0.22 ) }
    dend_57 { pt3dadd( -56.8998, 699.319, 16.494, 0.22 ) }
    dend_57 { pt3dadd( -57.6622, 699.867, 17.3522, 0.15 ) }
    dend_57 { pt3dadd( -58.0803, 700.16, 17.8878, 0.44 ) }
    dend_57 { pt3dadd( -58.1171, 700.188, 17.9366, 0.44 ) }
    dend_57 { pt3dadd( -59.0733, 701.087, 19.1829, 0.88 ) }
    dend_57 { pt3dadd( -59.7032, 701.816, 19.9872, 0.88 ) }
    dend_57 { pt3dadd( -59.8545, 702.048, 20.2001, 0.88 ) }
    dend_57 { pt3dadd( -60.4012, 703.188, 21.0794, 0.37 ) }
    dend_57 { pt3dadd( -60.622, 703.888, 21.5071, 0.22 ) }
    dend_57 { pt3dadd( -60.7957, 704.676, 21.9131, 0.22 ) }
    dend_57 { pt3dadd( -60.8221, 705.121, 22.1065, 0.59 ) }
    dend_57 { pt3dadd( -60.816, 706.322, 22.6323, 0.44 ) }
    dend_57 { pt3dadd( -60.8073, 706.41, 22.6821, 0.44 ) }
    dend_57 { pt3dadd( -60.6072, 707.191, 23.3669, 0.29 ) }
    dend_57 { pt3dadd( -60.5639, 707.257, 23.449, 0.29 ) }
    dend_57 { pt3dadd( -59.8551, 707.692, 24.2469, 0.29 ) }
    dend_57 { pt3dadd( -59.8092, 707.709, 24.2936, 0.29 ) }
    dend_57 { pt3dadd( -59.1222, 708.039, 25.0496, 0.81 ) }
    dend_57 { pt3dadd( -59.0532, 708.089, 25.1369, 0.81 ) }
    dend_57 { pt3dadd( -58.6982, 708.51, 25.7052, 0.81 ) }
    dend_57 { pt3dadd( -58.2557, 709.368, 26.608, 0.29 ) }
    dend_57 { pt3dadd( -57.8915, 710.474, 27.5856, 0.29 ) }
    dend_57 { pt3dadd( -57.5037, 712.034, 28.7464, 0.52 ) }
    dend_57 { pt3dadd( -57.3359, 713.012, 29.357, 1.33 ) }
    dend_57 { pt3dadd( -57.184, 714.265, 30.0834, 0.22 ) }
    dend_57 { pt3dadd( -57.1527, 714.931, 30.424, 0.74 ) }
    dend_57 { pt3dadd( -57.1557, 715.095, 30.4929, 0.74 ) }
    dend_57 { pt3dadd( -57.1432, 716.049, 30.7575, 0.37 ) }
    dend_57 { pt3dadd( -57.0811, 716.604, 30.8629, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -46.8208, 681.986, 5.7641, 0.22 ) }
    dend_56 { pt3dadd( -47.6087, 682.373, 5.59798, 0.22 ) }
    dend_56 { pt3dadd( -48.1149, 682.616, 5.48703, 0.15 ) }
    dend_56 { pt3dadd( -48.7717, 682.924, 5.32352, 0.15 ) }
    dend_56 { pt3dadd( -49.5618, 683.295, 5.12682, 0.52 ) }
    dend_56 { pt3dadd( -49.9071, 683.456, 5.04086, 0.52 ) }
    dend_56 { pt3dadd( -50.3895, 683.682, 4.92078, 0.52 ) }
    dend_56 { pt3dadd( -50.5311, 683.746, 4.88728, 0.52 ) }
    dend_56 { pt3dadd( -51.3451, 684.096, 4.70266, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -19.9262, 686.548, -3.79885, 0.22 ) }
    dend_50 { pt3dadd( -18.6734, 685.347, -4.10217, 0.22 ) }
    dend_50 { pt3dadd( -18.3086, 684.947, -4.18914, 0.29 ) }
    dend_50 { pt3dadd( -17.6465, 684.113, -4.35156, 0.22 ) }
    dend_50 { pt3dadd( -17.1058, 683.432, -4.48422, 0.44 ) }
    dend_50 { pt3dadd( -16.5837, 682.775, -4.61231, 0.22 ) }
    dend_50 { pt3dadd( -16.5461, 682.727, -4.62154, 0.22 ) }
    dend_50 { pt3dadd( -16.3889, 682.404, -4.62428, 0.44 ) }
    dend_50 { pt3dadd( -16.2729, 682.06, -4.62983, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -19.9262, 686.548, -3.79885, 0.29 ) }
    dend_35 { pt3dadd( -19.8584, 686.994, -3.72575, 0.29 ) }
    dend_35 { pt3dadd( -19.6633, 688.021, -3.46065, 0.29 ) }
    dend_35 { pt3dadd( -19.439, 689.071, -3.1384, 0.29 ) }
    dend_35 { pt3dadd( -19.4152, 689.166, -3.10662, 0.29 ) }
    dend_35 { pt3dadd( -19.1205, 690.118, -2.76312, 0.29 ) }
    dend_35 { pt3dadd( -19.0566, 690.296, -2.69497, 0.81 ) }
    dend_35 { pt3dadd( -18.6939, 691.164, -2.34199, 0.66 ) }
    dend_35 { pt3dadd( -18.674, 691.204, -2.32552, 0.66 ) }
    dend_35 { pt3dadd( -18.4128, 691.686, -2.11958, 0.52 ) }
    dend_35 { pt3dadd( -17.7291, 692.94, -1.62135, 0.29 ) }
    dend_35 { pt3dadd( -17.3013, 693.749, -1.27681, 0.29 ) }
    dend_35 { pt3dadd( -17.089, 694.192, -1.10026, 1.33 ) }
    dend_35 { pt3dadd( -16.8462, 694.742, -0.900637, 1.55 ) }
    dend_35 { pt3dadd( -16.8224, 694.802, -0.87945, 1.55 ) }
    dend_35 { pt3dadd( -16.5759, 695.489, -0.600642, 1.25 ) }
    dend_35 { pt3dadd( -16.1081, 696.919, -0.00281649, 0.37 ) }
    dend_35 { pt3dadd( -15.8487, 697.769, 0.36678, 0.29 ) }
    dend_35 { pt3dadd( -15.8319, 697.826, 0.393386, 0.29 ) }
    dend_35 { pt3dadd( -15.5756, 698.744, 0.838057, 0.29 ) }
    dend_35 { pt3dadd( -15.1218, 700.375, 1.64412, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -57.0811, 716.604, 30.8629, 0.44 ) }
    dend_59 { pt3dadd( -56.7655, 715.548, 30.827, 0.44 ) }
    dend_59 { pt3dadd( -56.4848, 714.609, 30.795, 0.37 ) }
    dend_59 { pt3dadd( -56.29, 713.958, 30.7728, 0.22 ) }
    dend_59 { pt3dadd( -56.2732, 713.901, 30.7709, 0.22 ) }
    dend_59 { pt3dadd( -55.9577, 712.846, 30.7349, 0.22 ) }
    dend_59 { pt3dadd( -55.9409, 712.79, 30.733, 0.22 ) }
    dend_59 { pt3dadd( -54.6127, 704.668, 31.6993, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -57.0811, 716.604, 30.8629, 0.74 ) }
    dend_58 { pt3dadd( -57.2487, 717.095, 30.7936, 0.74 ) }
    dend_58 { pt3dadd( -57.3998, 717.778, 30.7357, 0.22 ) }
    dend_58 { pt3dadd( -57.4114, 717.833, 30.7302, 0.22 ) }
    dend_58 { pt3dadd( -57.5339, 718.41, 30.6915, 0.22 ) }
    dend_58 { pt3dadd( -57.5723, 718.589, 30.6828, 0.22 ) }
    dend_58 { pt3dadd( -57.6949, 719.164, 30.6704, 0.22 ) }
    dend_58 { pt3dadd( -57.8599, 719.924, 30.6787, 1.4 ) }
    dend_58 { pt3dadd( -58.065, 720.938, 30.7569, 0.29 ) }
    dend_58 { pt3dadd( -58.2019, 721.598, 30.8556, 0.29 ) }
    dend_58 { pt3dadd( -58.218, 721.675, 30.8721, 0.29 ) }
    dend_58 { pt3dadd( -58.3953, 722.407, 31.0653, 0.29 ) }
    dend_58 { pt3dadd( -58.4097, 722.458, 31.0823, 0.29 ) }
    dend_58 { pt3dadd( -58.6892, 723.29, 31.4362, 0.81 ) }
    dend_58 { pt3dadd( -58.8596, 723.779, 31.696, 1.11 ) }
    dend_58 { pt3dadd( -58.8757, 723.827, 31.7215, 1.11 ) }
    dend_58 { pt3dadd( -59.0854, 724.436, 32.0245, 1.11 ) }
    dend_58 { pt3dadd( -59.1153, 724.518, 32.0632, 1.11 ) }
    dend_58 { pt3dadd( -59.2724, 724.922, 32.2095, 1.11 ) }
    dend_58 { pt3dadd( -59.2915, 724.964, 32.2232, 1.11 ) }
    dend_58 { pt3dadd( -59.5325, 725.498, 32.3806, 0.22 ) }
    dend_58 { pt3dadd( -59.7927, 726.057, 32.5462, 0.29 ) }
    dend_58 { pt3dadd( -59.8167, 726.106, 32.5607, 0.29 ) }
    dend_58 { pt3dadd( -60.0761, 726.632, 32.6986, 0.22 ) }
    dend_58 { pt3dadd( -60.54, 727.525, 32.9013, 0.81 ) }
    dend_58 { pt3dadd( -63.4611, 734.873, 33.9012, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -15.1218, 700.375, 1.64412, 1.84 ) }
    dend_37 { pt3dadd( -13.933, 701.223, 1.44393, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -15.1218, 700.375, 1.64412, 0.22 ) }
    dend_36 { pt3dadd( -15.1649, 701.668, 1.41912, 0.22 ) }
    dend_36 { pt3dadd( -15.1798, 702.364, 1.32231, 0.22 ) }
    dend_36 { pt3dadd( -15.1806, 702.405, 1.31742, 0.22 ) }
    dend_36 { pt3dadd( -15.1976, 703.232, 1.23662, 0.59 ) }
    dend_36 { pt3dadd( -15.2128, 704.077, 1.16462, 0.22 ) }
    dend_36 { pt3dadd( -15.2203, 704.715, 1.11913, 0.66 ) }
    dend_36 { pt3dadd( -15.2175, 704.763, 1.12456, 0.66 ) }
    dend_36 { pt3dadd( -15.2014, 704.912, 1.15113, 0.66 ) }
    dend_36 { pt3dadd( -15.1244, 705.495, 1.28694, 0.15 ) }
    dend_36 { pt3dadd( -15.1175, 705.54, 1.30088, 0.15 ) }
    dend_36 { pt3dadd( -15.0514, 705.937, 1.44944, 1.18 ) }
    dend_36 { pt3dadd( -14.8483, 706.864, 1.8553, 0.29 ) }
    dend_36 { pt3dadd( -14.7784, 707.151, 1.99016, 0.52 ) }
    dend_36 { pt3dadd( -14.7666, 707.192, 2.01209, 0.52 ) }
    dend_36 { pt3dadd( -14.7073, 707.363, 2.11996, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -13.933, 701.223, 1.44393, 0.15 ) }
    dend_39 { pt3dadd( -13.5166, 702.598, 1.79105, 0.15 ) }
    dend_39 { pt3dadd( -13.3247, 703.277, 1.94405, 0.15 ) }
    dend_39 { pt3dadd( -13.1936, 703.742, 2.04857, 0.29 ) }
    dend_39 { pt3dadd( -13.1472, 703.906, 2.08555, 0.29 ) }
    dend_39 { pt3dadd( -13.0301, 704.321, 2.1789, 0.15 ) }
    dend_39 { pt3dadd( -12.9382, 704.646, 2.25214, 0.29 ) }
    dend_39 { pt3dadd( -12.9292, 704.73, 2.25293, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.933, 701.223, 1.44393, 0.29 ) }
    dend_38 { pt3dadd( -13.3742, 699.893, 2.28128, 0.29 ) }
    dend_38 { pt3dadd( -13.2089, 699.446, 2.56843, 0.29 ) }
    dend_38 { pt3dadd( -12.9531, 698.689, 3.04488, 0.22 ) }
    dend_38 { pt3dadd( -12.8569, 698.433, 3.20959, 0.52 ) }
    dend_38 { pt3dadd( -12.4645, 697.411, 3.86908, 0.22 ) }
    dend_38 { pt3dadd( -12.4482, 697.365, 3.89913, 0.22 ) }
    dend_38 { pt3dadd( -12.3505, 697.009, 4.11732, 0.88 ) }
    dend_38 { pt3dadd( -12.29, 696.786, 4.28119, 1.03 ) }
    dend_38 { pt3dadd( -12.0513, 695.606, 5.24102, 0.22 ) }
    dend_38 { pt3dadd( -12.0446, 695.544, 5.28947, 0.22 ) }
    dend_38 { pt3dadd( -11.9795, 694.403, 6.17174, 0.22 ) }
    dend_38 { pt3dadd( -11.9786, 694.357, 6.20786, 0.22 ) }
    dend_38 { pt3dadd( -11.9262, 693.34, 7.04196, 0.22 ) }
    dend_38 { pt3dadd( -11.8881, 692.682, 7.5967, 0.22 ) }
    dend_38 { pt3dadd( -11.844, 691.917, 8.31665, 0.22 ) }
    dend_38 { pt3dadd( -11.7033, 690.989, 9.27325, 0.29 ) }
    dend_38 { pt3dadd( -11.6811, 690.925, 9.34476, 0.29 ) }
    dend_38 { pt3dadd( -11.1131, 689.965, 10.4252, 0.15 ) }
    dend_38 { pt3dadd( -11.0845, 689.931, 10.4637, 0.15 ) }
    dend_38 { pt3dadd( -10.15, 689.123, 11.4022, 0.96 ) }
    dend_38 { pt3dadd( -9.85094, 688.91, 11.6549, 0.96 ) }
    dend_38 { pt3dadd( -8.7779, 688.175, 12.4646, 0.22 ) }
    dend_38 { pt3dadd( -7.89431, 687.586, 13.102, 0.22 ) }
    dend_38 { pt3dadd( -7.85033, 687.558, 13.1314, 0.22 ) }
    dend_38 { pt3dadd( -6.97332, 687.02, 13.6588, 0.22 ) }
    dend_38 { pt3dadd( -5.56598, 686.199, 14.3359, 0.22 ) }
    dend_38 { pt3dadd( -4.95833, 685.828, 14.6423, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.9292, 704.73, 2.25293, 0.37 ) }
    dend_41 { pt3dadd( -12.7249, 705.979, 2.54389, 0.37 ) }
    dend_41 { pt3dadd( -12.7139, 706.05, 2.55625, 0.37 ) }
    dend_41 { pt3dadd( -12.6609, 706.479, 2.6145, 0.22 ) }
    dend_41 { pt3dadd( -12.5716, 707.428, 2.68917, 0.22 ) }
    dend_41 { pt3dadd( -12.5415, 707.93, 2.71498, 0.66 ) }
    dend_41 { pt3dadd( -12.5366, 708.013, 2.71922, 0.66 ) }
    dend_41 { pt3dadd( -12.4985, 708.885, 2.69752, 0.52 ) }
    dend_41 { pt3dadd( -12.4747, 709.638, 2.67615, 0.52 ) }
    dend_41 { pt3dadd( -12.4703, 710.539, 2.6449, 1.33 ) }
    dend_41 { pt3dadd( -12.4897, 711.29, 2.60989, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -12.9292, 704.73, 2.25293, 0.29 ) }
    dend_40 { pt3dadd( -12.1097, 704.785, 2.66874, 0.29 ) }
    dend_40 { pt3dadd( -12.0654, 704.792, 2.68984, 0.29 ) }
    dend_40 { pt3dadd( -10.776, 705.051, 3.29102, 0.66 ) }
    dend_40 { pt3dadd( -9.94511, 705.239, 3.67982, 0.15 ) }
    dend_40 { pt3dadd( -9.51346, 705.338, 3.87801, 0.88 ) }
    dend_40 { pt3dadd( -9.04396, 705.44, 4.07073, 0.88 ) }
    dend_40 { pt3dadd( -8.32779, 705.599, 4.35411, 0.22 ) }
    dend_40 { pt3dadd( -8.28152, 705.609, 4.36871, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( -7.67874, 705.735, 4.47937, 0.81 ) }
    dend_40 { pt3dadd( -7.42214, 705.816, 4.51687, 0.81 ) }
    dend_40 { pt3dadd( -6.58697, 706.122, 4.62846, 0.22 ) }
    dend_40 { pt3dadd( -6.35813, 706.203, 4.65343, 0.96 ) }
    dend_40 { pt3dadd( -6.3037, 706.223, 4.65749, 0.96 ) }
    dend_40 { pt3dadd( -5.85323, 706.403, 4.67018, 0.52 ) }
    dend_40 { pt3dadd( -5.09461, 706.695, 4.72018, 0.22 ) }
    dend_40 { pt3dadd( -5.01728, 706.724, 4.73102, 0.22 ) }
    dend_40 { pt3dadd( -4.77788, 706.803, 4.78493, 0.22 ) }
    dend_40 { pt3dadd( -4.70457, 706.822, 4.80276, 0.22 ) }
    dend_40 { pt3dadd( -4.00681, 706.971, 4.97931, 0.66 ) }
    dend_40 { pt3dadd( -3.00087, 707.15, 5.23959, 0.15 ) }
    dend_40 { pt3dadd( -2.95326, 707.156, 5.25183, 0.15 ) }
    dend_40 { pt3dadd( -2.30053, 707.233, 5.3901, 0.15 ) }
    dend_40 { pt3dadd( -1.82699, 707.283, 5.49689, 0.74 ) }
    dend_40 { pt3dadd( -1.69052, 707.298, 5.52785, 0.74 ) }
    dend_40 { pt3dadd( -1.2907, 707.351, 5.61828, 0.74 ) }
    dend_40 { pt3dadd( -1.23423, 707.358, 5.62866, 0.74 ) }
    dend_40 { pt3dadd( -0.362356, 707.451, 5.79016, 0.22 ) }
    dend_40 { pt3dadd( 0.876095, 707.542, 6.03165, 0.66 ) }
    dend_40 { pt3dadd( 1.18196, 707.557, 6.09627, 0.66 ) }
    dend_40 { pt3dadd( 1.24698, 707.559, 6.11081, 0.66 ) }
    dend_40 { pt3dadd( 1.7712, 707.56, 6.23894, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -12.4897, 711.29, 2.60989, 0.44 ) }
    dend_43 { pt3dadd( -12.6386, 712.618, 3.31236, 0.44 ) }
    dend_43 { pt3dadd( -12.6495, 713.548, 3.84381, 0.29 ) }
    dend_43 { pt3dadd( -12.6141, 714.465, 4.37976, 0.29 ) }
    dend_43 { pt3dadd( -12.4964, 715.909, 5.21054, 0.81 ) }
    dend_43 { pt3dadd( -12.4347, 716.421, 5.49577, 1.18 ) }
    dend_43 { pt3dadd( -12.3996, 716.665, 5.62821, 1.18 ) }
    dend_43 { pt3dadd( -12.0386, 718.035, 6.32429, 0.15 ) }
    dend_43 { pt3dadd( -11.9815, 718.181, 6.39916, 0.15 ) }
    dend_43 { pt3dadd( -11.7582, 718.619, 6.6053, 0.66 ) }
    dend_43 { pt3dadd( -11.5452, 719.016, 6.73077, 0.96 ) }
    dend_43 { pt3dadd( -11.5149, 719.086, 6.75342, 0.96 ) }
    dend_43 { pt3dadd( -11.4456, 719.318, 6.84831, 0.96 ) }
    dend_43 { pt3dadd( -11.2413, 720.114, 7.28685, 0.29 ) }
    dend_43 { pt3dadd( -11.2038, 720.254, 7.37632, 0.29 ) }
    dend_43 { pt3dadd( -11.0337, 720.849, 7.79414, 0.29 ) }
    dend_43 { pt3dadd( -10.7237, 721.904, 8.56396, 0.37 ) }
    dend_43 { pt3dadd( -10.4797, 722.742, 9.18298, 0.52 ) }
    dend_43 { pt3dadd( -10.1132, 724.016, 10.1442, 0.96 ) }
    dend_43 { pt3dadd( -10.0916, 724.087, 10.1963, 0.96 ) }
    dend_43 { pt3dadd( -9.84875, 724.797, 10.679, 1.18 ) }
    dend_43 { pt3dadd( -9.76326, 725.02, 10.8086, 1.18 ) }
    dend_43 { pt3dadd( -9.61621, 725.407, 10.9383, 1.18 ) }
    dend_43 { pt3dadd( -9.57816, 725.517, 10.958, 1.18 ) }
    dend_43 { pt3dadd( -9.2987, 726.529, 11.0627, 1.33 ) }
    dend_43 { pt3dadd( -9.27569, 726.616, 11.0701, 1.33 ) }
    dend_43 { pt3dadd( -9.10994, 727.261, 11.1117, 1.25 ) }
    dend_43 { pt3dadd( -8.65733, 729.036, 11.2103, 0.22 ) }
    dend_43 { pt3dadd( -8.40776, 730.114, 11.2614, 0.22 ) }
    dend_43 { pt3dadd( -8.30021, 730.682, 11.2874, 0.59 ) }
    dend_43 { pt3dadd( -8.27883, 730.806, 11.2928, 0.59 ) }
    dend_43 { pt3dadd( -8.22496, 731.134, 11.3068, 0.59 ) }
    dend_43 { pt3dadd( -8.09054, 732.105, 11.3445, 0.22 ) }
    dend_43 { pt3dadd( -8.06232, 732.846, 11.363, 0.96 ) }
    dend_43 { pt3dadd( -8.08608, 733.742, 11.393, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.4897, 711.29, 2.60989, 0.15 ) }
    dend_42 { pt3dadd( -11.7562, 714.095, 2.11197, 0.15 ) }
    dend_42 { pt3dadd( -11.7368, 714.208, 2.09642, 0.15 ) }
    dend_42 { pt3dadd( -11.6358, 714.781, 2.02834, 0.15 ) }
    dend_42 { pt3dadd( -11.6227, 714.872, 2.01908, 0.15 ) }
    dend_42 { pt3dadd( -11.5591, 715.486, 1.95259, 0.59 ) }
    dend_42 { pt3dadd( -11.527, 715.885, 1.91155, 0.59 ) }
    dend_42 { pt3dadd( -11.4459, 718.364, 1.70971, 0.22 ) }
    dend_42 { pt3dadd( -11.4369, 719.347, 1.63161, 1.25 ) }
    dend_42 { pt3dadd( -11.4313, 720.042, 1.58976, 0.88 ) }
    dend_42 { pt3dadd( -11.426, 721.849, 1.51284, 0.15 ) }
    dend_42 { pt3dadd( -11.435, 722.612, 1.4951, 0.15 ) }
    dend_42 { pt3dadd( -11.4659, 723.451, 1.49021, 0.74 ) }
    dend_42 { pt3dadd( -11.5024, 724.019, 1.50167, 1.11 ) }
    dend_42 { pt3dadd( -11.6154, 725.302, 1.53116, 0.15 ) }
    dend_42 { pt3dadd( -11.6724, 725.974, 1.55135, 0.96 ) }
    dend_42 { pt3dadd( -11.7566, 726.787, 1.58829, 1.18 ) }
    dend_42 { pt3dadd( -12.0355, 729.081, 1.6701, 0.15 ) }
    dend_42 { pt3dadd( -12.05, 729.184, 1.67321, 0.15 ) }
    dend_42 { pt3dadd( -12.2236, 730.247, 1.68732, 0.15 ) }
    dend_42 { pt3dadd( -12.2383, 730.323, 1.68658, 0.15 ) }
    dend_42 { pt3dadd( -12.3461, 730.976, 1.68596, 0.52 ) }
    dend_42 { pt3dadd( -12.37, 731.132, 1.6889, 0.52 ) }
    dend_42 { pt3dadd( -12.4179, 731.465, 1.69454, 0.52 ) }
    dend_42 { pt3dadd( -12.4257, 731.532, 1.69485, 0.52 ) }
    dend_42 { pt3dadd( -12.5299, 732.639, 1.69736, 0.22 ) }
    dend_42 { pt3dadd( -12.6023, 733.443, 1.69589, 1.11 ) }
    dend_42 { pt3dadd( -12.6634, 734.194, 1.71753, 0.81 ) }
    dend_42 { pt3dadd( -12.8169, 736.173, 1.8134, 0.15 ) }
    dend_42 { pt3dadd( -12.9746, 738.273, 1.95244, 0.15 ) }
    dend_42 { pt3dadd( -13.0175, 738.979, 2.02259, 1.03 ) }
    dend_42 { pt3dadd( -13.0572, 739.766, 2.13912, 0.81 ) }
    dend_42 { pt3dadd( -13.1172, 741.46, 2.48625, 0.22 ) }
    dend_42 { pt3dadd( -13.1187, 741.525, 2.50367, 0.22 ) }
    dend_42 { pt3dadd( -13.1268, 742.6, 2.90521, 0.52 ) }
    dend_42 { pt3dadd( -13.1309, 743.611, 3.3603, 0.22 ) }
    dend_42 { pt3dadd( -13.1355, 744.515, 3.78113, 0.74 ) }
    dend_42 { pt3dadd( -13.1371, 745.028, 4.02178, 0.74 ) }
    dend_42 { pt3dadd( -13.138, 745.1, 4.055, 0.74 ) }
    dend_42 { pt3dadd( -13.1412, 746.591, 4.70745, 0.22 ) }
    dend_42 { pt3dadd( -13.1407, 746.653, 4.73329, 0.22 ) }
    dend_42 { pt3dadd( -13.1091, 747.832, 5.12316, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( -13.0858, 748.241, 5.23577, 0.66 ) }
    dend_42 { pt3dadd( -13.0799, 748.306, 5.25097, 0.66 ) }
    dend_42 { pt3dadd( -12.9709, 749.048, 5.38424, 0.22 ) }
    dend_42 { pt3dadd( -12.6683, 750.252, 5.6152, 1.4 ) }
    dend_42 { pt3dadd( -12.235, 751.661, 5.89498, 0.15 ) }
    dend_42 { pt3dadd( -12.1783, 751.82, 5.9267, 0.15 ) }
    dend_42 { pt3dadd( -11.8675, 752.632, 6.10053, 0.15 ) }
    dend_42 { pt3dadd( -11.3797, 753.87, 6.37242, 0.15 ) }
    dend_42 { pt3dadd( -10.4898, 756.043, 6.86582, 0.15 ) }
    dend_42 { pt3dadd( -9.98231, 757.183, 7.1552, 1.33 ) }
    dend_42 { pt3dadd( -9.76817, 757.644, 7.30752, 1.47 ) }
    dend_42 { pt3dadd( -8.97907, 759.392, 7.84163, 0.22 ) }
    dend_42 { pt3dadd( -8.89248, 759.593, 7.89901, 0.44 ) }
    dend_42 { pt3dadd( -8.8688, 759.656, 7.91141, 0.44 ) }
    dend_42 { pt3dadd( -8.55981, 760.699, 7.84449, 0.22 ) }
    dend_42 { pt3dadd( -8.18381, 762.033, 7.92815, 0.88 ) }
    dend_42 { pt3dadd( -7.70002, 764.095, 8.30701, 0.59 ) }
    dend_42 { pt3dadd( -7.60143, 764.477, 8.42612, 0.37 ) }
    dend_42 { pt3dadd( -7.3047, 765.494, 8.8329, 0.15 ) }
    dend_42 { pt3dadd( -6.84953, 766.948, 9.50285, 1.62 ) }
    dend_42 { pt3dadd( -5.70432, 770.225, 11.1744, 0.88 ) }
    dend_42 { pt3dadd( -5.43996, 770.898, 11.5677, 1.25 ) }
    dend_42 { pt3dadd( -4.92206, 772.097, 12.3956, 0.15 ) }
    dend_42 { pt3dadd( -4.73377, 772.502, 12.6882, 0.66 ) }
    dend_42 { pt3dadd( -4.69753, 772.573, 12.738, 0.66 ) }
    dend_42 { pt3dadd( -4.03701, 773.813, 13.4561, 0.22 ) }
    dend_42 { pt3dadd( -3.71898, 774.474, 13.646, 0.88 ) }
    dend_42 { pt3dadd( -3.59847, 774.744, 13.7146, 0.88 ) }
    dend_42 { pt3dadd( -3.56213, 774.839, 13.7371, 0.88 ) }
    dend_42 { pt3dadd( -2.9163, 776.676, 14.1746, 0.22 ) }
    dend_42 { pt3dadd( -2.69601, 777.335, 14.3263, 0.66 ) }
    dend_42 { pt3dadd( -2.1886, 779.032, 14.6966, 0.15 ) }
    dend_42 { pt3dadd( -1.9512, 779.877, 14.8737, 0.15 ) }
    dend_42 { pt3dadd( -1.93421, 779.945, 14.8873, 0.15 ) }
    dend_42 { pt3dadd( -1.82088, 780.504, 14.9928, 0.44 ) }
    dend_42 { pt3dadd( -1.73648, 781.237, 15.1105, 0.22 ) }
    dend_42 { pt3dadd( -1.71991, 781.879, 15.1905, 0.52 ) }
    dend_42 { pt3dadd( -1.73872, 781.969, 15.1955, 0.52 ) }
    dend_42 { pt3dadd( -1.84818, 782.296, 15.2185, 0.52 ) }
    dend_42 { pt3dadd( -2.00478, 782.68, 15.2488, 0.37 ) }
    dend_42 { pt3dadd( -2.05332, 782.758, 15.257, 0.37 ) }
    dend_42 { pt3dadd( -2.37822, 783.092, 15.3059, 0.22 ) }
    dend_42 { pt3dadd( -2.97442, 783.587, 15.3922, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -8.08608, 733.742, 11.393, 0.22 ) }
    dend_45 { pt3dadd( -7.91714, 734.565, 11.6713, 0.22 ) }
    dend_45 { pt3dadd( -7.83115, 734.982, 11.8207, 0.52 ) }
    dend_45 { pt3dadd( -7.61466, 736.031, 12.2083, 0.29 ) }
    dend_45 { pt3dadd( -7.51343, 736.519, 12.3936, 0.88 ) }
    dend_45 { pt3dadd( -7.43229, 736.887, 12.5227, 1.18 ) }
    dend_45 { pt3dadd( -7.37508, 737.15, 12.6063, 1.18 ) }
    dend_45 { pt3dadd( -7.34482, 737.285, 12.6414, 1.18 ) }
    dend_45 { pt3dadd( -7.34482, 737.285, 12.6414, 1.18 ) }
    dend_45 { pt3dadd( -7.33766, 737.319, 12.646, 1.18 ) }
    dend_45 { pt3dadd( -7.20152, 737.994, 12.722, 0.22 ) }
    dend_45 { pt3dadd( -7.08296, 738.405, 12.7848, 0.44 ) }
    dend_45 { pt3dadd( -6.8816, 739.0, 12.9001, 0.59 ) }
    dend_45 { pt3dadd( -6.76268, 739.282, 12.9619, 1.11 ) }
    dend_45 { pt3dadd( -6.62384, 739.568, 13.0296, 1.11 ) }
    dend_45 { pt3dadd( -6.60697, 739.598, 13.0377, 1.11 ) }
    dend_45 { pt3dadd( -5.9627, 740.54, 13.3295, 0.22 ) }
    dend_45 { pt3dadd( -5.93588, 740.571, 13.3389, 0.22 ) }
    dend_45 { pt3dadd( -5.5507, 740.979, 13.4462, 0.22 ) }
    dend_45 { pt3dadd( -5.33943, 741.201, 13.5102, 0.74 ) }
    dend_45 { pt3dadd( -5.31024, 741.232, 13.5193, 0.74 ) }
    dend_45 { pt3dadd( -5.07796, 741.501, 13.5973, 0.52 ) }
    dend_45 { pt3dadd( -4.73155, 741.971, 13.7273, 0.22 ) }
    dend_45 { pt3dadd( -4.48351, 742.369, 13.8746, 0.74 ) }
    dend_45 { pt3dadd( -4.11628, 743.076, 14.1994, 1.25 ) }
    dend_45 { pt3dadd( -4.09621, 743.123, 14.2226, 1.25 ) }
    dend_45 { pt3dadd( -4.03889, 743.291, 14.3098, 1.11 ) }
    dend_45 { pt3dadd( -3.92755, 743.654, 14.5343, 0.52 ) }
    dend_45 { pt3dadd( -3.74695, 744.192, 14.9053, 0.15 ) }
    dend_45 { pt3dadd( -3.73277, 744.225, 14.9305, 0.15 ) }
    dend_45 { pt3dadd( -3.5321, 744.479, 15.1646, 0.15 ) }
    dend_45 { pt3dadd( -3.48622, 744.516, 15.2075, 0.15 ) }
    dend_45 { pt3dadd( -2.89131, 744.891, 15.7684, 0.44 ) }
    dend_45 { pt3dadd( -2.64608, 745.02, 15.9951, 0.66 ) }
    dend_45 { pt3dadd( -2.61483, 745.034, 16.0214, 0.66 ) }
    dend_45 { pt3dadd( -1.84446, 745.338, 16.6635, 0.22 ) }
    dend_45 { pt3dadd( -1.81196, 745.349, 16.6903, 0.22 ) }
    dend_45 { pt3dadd( -1.00821, 745.632, 17.3707, 1.33 ) }
    dend_45 { pt3dadd( -0.91157, 745.67, 17.4628, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -8.08608, 733.742, 11.393, 0.15 ) }
    dend_44 { pt3dadd( -6.75087, 734.924, 11.7664, 0.15 ) }
    dend_44 { pt3dadd( -6.28342, 735.323, 11.9161, 0.15 ) }
    dend_44 { pt3dadd( -6.17522, 735.411, 11.9534, 0.15 ) }
    dend_44 { pt3dadd( -5.65803, 735.816, 12.1379, 0.44 ) }
    dend_44 { pt3dadd( -5.54382, 735.902, 12.1804, 0.44 ) }
    dend_44 { pt3dadd( -4.79526, 736.453, 12.461, 0.22 ) }
    dend_44 { pt3dadd( -4.41525, 736.726, 12.6185, 0.44 ) }
    dend_44 { pt3dadd( -3.89617, 737.047, 12.8261, 0.15 ) }
    dend_44 { pt3dadd( -3.84091, 737.079, 12.8476, 0.15 ) }
    dend_44 { pt3dadd( -3.28813, 737.368, 13.0576, 0.66 ) }
    dend_44 { pt3dadd( -3.23134, 737.396, 13.0786, 0.66 ) }
    dend_44 { pt3dadd( -2.47157, 737.737, 13.3467, 0.22 ) }
    dend_44 { pt3dadd( -1.8491, 738.02, 13.5526, 0.88 ) }
    dend_44 { pt3dadd( -1.78174, 738.05, 13.5744, 0.88 ) }
    dend_44 { pt3dadd( -1.60046, 738.128, 13.6319, 1.11 ) }
    dend_44 { pt3dadd( -1.47983, 738.176, 13.6683, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.91157, 745.67, 17.4628, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( -0.426428, 746.849, 18.4182, 0.29 ) }
    dend_47 { pt3dadd( -0.402076, 746.898, 18.451, 0.29 ) }
    dend_47 { pt3dadd( -0.0143624, 747.588, 18.8667, 0.29 ) }
    dend_47 { pt3dadd( 0.0373349, 747.666, 18.9071, 0.29 ) }
    dend_47 { pt3dadd( 0.392957, 748.2, 19.1488, 0.74 ) }
    dend_47 { pt3dadd( 0.421954, 748.244, 19.1668, 0.74 ) }
    dend_47 { pt3dadd( 0.770457, 748.78, 19.4026, 0.74 ) }
    dend_47 { pt3dadd( 0.832599, 748.875, 19.4587, 0.74 ) }
    dend_47 { pt3dadd( 1.24484, 749.486, 19.8611, 0.15 ) }
    dend_47 { pt3dadd( 1.44253, 749.77, 20.0505, 0.15 ) }
    dend_47 { pt3dadd( 1.46769, 749.808, 20.0767, 0.15 ) }
    dend_47 { pt3dadd( 2.28913, 751.101, 20.9605, 0.15 ) }
    dend_47 { pt3dadd( 2.53204, 751.531, 21.2493, 1.11 ) }
    dend_47 { pt3dadd( 2.74163, 751.958, 21.5143, 1.25 ) }
    dend_47 { pt3dadd( 3.19801, 752.958, 22.1044, 0.22 ) }
    dend_47 { pt3dadd( 3.46712, 753.554, 22.4283, 0.22 ) }
    dend_47 { pt3dadd( 3.48529, 753.598, 22.449, 0.22 ) }
    dend_47 { pt3dadd( 3.71545, 754.249, 22.6383, 0.29 ) }
    dend_47 { pt3dadd( 3.91624, 754.904, 22.7986, 0.74 ) }
    dend_47 { pt3dadd( 4.0563, 755.366, 22.9135, 1.11 ) }
    dend_47 { pt3dadd( 4.07634, 755.424, 22.9268, 1.11 ) }
    dend_47 { pt3dadd( 4.3612, 756.055, 23.0527, 0.66 ) }
    dend_47 { pt3dadd( 4.75452, 756.833, 23.1925, 0.22 ) }
    dend_47 { pt3dadd( 5.04026, 757.294, 23.2607, 0.15 ) }
    dend_47 { pt3dadd( 5.43448, 757.847, 23.3257, 1.11 ) }
    dend_47 { pt3dadd( 5.8095, 758.358, 23.3677, 1.69 ) }
    dend_47 { pt3dadd( 5.84303, 758.398, 23.3716, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -0.91157, 745.67, 17.4628, 0.29 ) }
    dend_46 { pt3dadd( -1.85396, 746.592, 17.8594, 0.29 ) }
    dend_46 { pt3dadd( -2.10868, 746.834, 17.9583, 0.29 ) }
    dend_46 { pt3dadd( -2.82565, 747.495, 18.243, 0.15 ) }
    dend_46 { pt3dadd( -2.97918, 747.633, 18.3049, 0.15 ) }
    dend_46 { pt3dadd( -3.47102, 748.092, 18.5086, 0.29 ) }
    dend_46 { pt3dadd( -4.22848, 748.812, 18.8243, 0.15 ) }
    dend_46 { pt3dadd( -4.32222, 748.905, 18.8577, 0.15 ) }
    dend_46 { pt3dadd( -5.08526, 749.746, 19.1119, 0.15 ) }
    dend_46 { pt3dadd( -5.15345, 749.838, 19.1292, 0.15 ) }
    dend_46 { pt3dadd( -5.56623, 750.468, 19.2184, 0.15 ) }
    dend_46 { pt3dadd( -5.66399, 750.653, 19.2302, 0.15 ) }
    dend_46 { pt3dadd( -6.23845, 751.894, 19.2356, 0.15 ) }
    dend_46 { pt3dadd( -6.27885, 751.991, 19.2329, 0.15 ) }
    dend_46 { pt3dadd( -6.67644, 753.165, 19.1062, 0.15 ) }
    dend_46 { pt3dadd( -6.69956, 753.239, 19.096, 0.15 ) }
    dend_46 { pt3dadd( -6.86847, 753.853, 18.9777, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 5.84303, 758.398, 23.3716, 0.52 ) }
    dend_49 { pt3dadd( 6.27161, 759.539, 24.4602, 0.52 ) }
    dend_49 { pt3dadd( 6.56152, 760.632, 25.4785, 0.29 ) }
    dend_49 { pt3dadd( 6.61476, 761.021, 25.795, 0.96 ) }
    dend_49 { pt3dadd( 6.65556, 761.501, 26.1635, 1.11 ) }
    dend_49 { pt3dadd( 6.66008, 761.582, 26.2265, 1.11 ) }
    dend_49 { pt3dadd( 6.6885, 762.26, 26.7673, 0.81 ) }
    dend_49 { pt3dadd( 6.66017, 762.995, 27.3138, 1.11 ) }
    dend_49 { pt3dadd( 6.62706, 764.036, 28.0036, 0.37 ) }
    dend_49 { pt3dadd( 6.6279, 764.079, 28.0313, 0.37 ) }
    dend_49 { pt3dadd( 6.71823, 765.053, 28.6044, 0.29 ) }
    dend_49 { pt3dadd( 6.72882, 765.104, 28.633, 0.29 ) }
    dend_49 { pt3dadd( 7.03258, 765.75, 29.0176, 0.81 ) }
    dend_49 { pt3dadd( 7.27242, 766.083, 29.2344, 1.03 ) }
    dend_49 { pt3dadd( 7.30779, 766.124, 29.2631, 1.03 ) }
    dend_49 { pt3dadd( 7.62978, 766.483, 29.5108, 0.96 ) }
    dend_49 { pt3dadd( 8.46314, 767.387, 30.112, 0.66 ) }
    dend_49 { pt3dadd( 9.27022, 768.286, 30.6868, 0.52 ) }
    dend_49 { pt3dadd( 9.89082, 769.023, 31.143, 0.44 ) }
    dend_49 { pt3dadd( 10.1884, 769.414, 31.3744, 0.44 ) }
    dend_49 { pt3dadd( 10.4646, 769.753, 31.6029, 0.37 ) }
    dend_49 { pt3dadd( 10.5481, 769.846, 31.6705, 0.37 ) }
    dend_49 { pt3dadd( 11.1739, 770.461, 32.1238, 0.37 ) }
    dend_49 { pt3dadd( 11.7768, 771.069, 32.5606, 0.22 ) }
    dend_49 { pt3dadd( 12.621, 771.862, 33.1573, 1.4 ) }
    dend_49 { pt3dadd( 13.8736, 772.946, 34.0666, 0.29 ) }
    dend_49 { pt3dadd( 14.2737, 773.259, 34.3681, 0.96 ) }
    dend_49 { pt3dadd( 14.6018, 773.484, 34.6246, 0.96 ) }
    dend_49 { pt3dadd( 19.8681, 779.031, 38.6117, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.84303, 758.398, 23.3716, 0.22 ) }
    dend_48 { pt3dadd( 4.91371, 760.152, 23.7787, 0.22 ) }
    dend_48 { pt3dadd( 4.08969, 761.708, 24.1397, 0.22 ) }
    dend_48 { pt3dadd( 4.0058, 761.866, 24.1764, 0.22 ) }
    dend_48 { pt3dadd( 3.28364, 763.229, 24.4927, 0.22 ) }
    dend_48 { pt3dadd( -0.542094, 773.942, 28.0616, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 7
    dend_74 nseg = 3
    dend_14 nseg = 3
    dend_73 nseg = 5
    dend_72 nseg = 9
    dend_27 nseg = 3
    dend_26 nseg = 5
    dend_24 nseg = 9
    dend_23 nseg = 17
    dend_15 nseg = 3
    dend_2 nseg = 5
    dend_67 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_16 nseg = 3
    dend_13 nseg = 11
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_66 nseg = 9
    dend_29 nseg = 27
    dend_6 nseg = 3
    dend_61 nseg = 5
    dend_11 nseg = 9
    dend_10 nseg = 11
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_DBC_0271760b42_0_0


