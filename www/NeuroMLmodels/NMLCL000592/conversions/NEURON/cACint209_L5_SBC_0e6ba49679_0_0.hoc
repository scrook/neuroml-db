// Cell: cACint209_L5_SBC_0e6ba49679_0_0
/*
{
  "id" : "cACint209_L5_SBC_0e6ba49679_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.327285, 12.2563, -2.37682, 3.20394", "-0.32997, 10.9888, -2.12879, 5.58325", "-0.332655, 9.7213, -1.88076, 6.08709", "-0.335339, 8.45379, -1.63272, 7.22603", "-0.338024, 7.18628, -1.38469, 8.89261", "-0.340709, 5.91877, -1.13666, 10.2823", "-0.343394, 4.65126, -0.888622, 11.3086", "-0.346078, 3.38375, -0.640589, 12.3784", "-0.348763, 2.11624, -0.392555, 13.7451", "-0.351448, 0.84873, -0.144521, 14.7054", "-0.354133, -0.41878, 0.103512, 15.1673", "-0.356817, -1.68629, 0.351546, 15.492", "-0.359502, -2.9538, 0.599579, 15.6089", "-0.362187, -4.22131, 0.847613, 15.0499", "-0.364872, -5.48882, 1.09565, 14.3371", "-0.367556, -6.75633, 1.34368, 13.225", "-0.370241, -8.02384, 1.59171, 11.7728", "-0.372926, -9.29135, 1.83975, 10.2754", "-0.375611, -10.5589, 2.08778, 7.58879", "-0.378295, -11.8264, 2.33581, 5.07363", "-0.38098, -13.0939, 2.58385, 2.91986" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.63702, -11.5065, 3.2994, 4.13", "-1.63702, -11.5065, 3.2994, 4.13", "-1.53397, -12.3743, 3.60229, 4.13", "-1.3832, -13.6442, 4.04546, 3.76", "-1.14476, -15.6523, 4.74632, 3.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0870214, -4.76153, -15.4506, 1.69", "-0.00289528, -4.77687, -15.4506, 1.69", "0.258352, -4.82826, -15.4506, 1.69", "1.31212, -5.0461, -15.444, 1.69", "2.84621, -5.41944, -15.3844, 1.69", "2.95279, -5.44996, -15.3935, 1.69", "4.62988, -6.0832, -15.7657, 1.69", "4.70865, -6.12437, -15.8019, 1.69", "5.70725, -7.04279, -17.041, 1.84", "5.59417, -7.8022, -18.797, 1.84", "4.71692, -8.52413, -21.4415, 1.99", "3.8536, -9.11121, -23.7377, 1.99", "2.83097, -9.67319, -26.1242, 1.99", "1.24376, -10.3933, -29.4598, 2.14", "-0.545184, -11.0168, -32.7705, 2.43", "-3.51845, -11.7546, -37.6749, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.632978, 10.562, -5.6406, 2.58", "0.632978, 10.562, -5.6406, 2.58", "1.40715, 11.1853, -5.94898, 2.28", "2.20216, 11.8682, -6.23431, 2.21", "3.73192, 13.3677, -6.74065, 0.81", "5.47857, 15.3959, -7.28416, 0.81", "6.35228, 16.5134, -7.54343, 1.25", "7.37332, 18.0648, -7.78593, 1.99", "7.41805, 18.1569, -7.79259, 1.99", "7.83092, 19.6838, -7.76987, 2.14", "7.96189, 21.242, -7.6419, 2.14", "7.95755, 21.3441, -7.63358, 2.14", "7.78762, 23.1851, -7.53571, 1.84", "7.5503, 24.9421, -7.5684, 1.4", "7.11632, 27.3148, -7.75147, 0.81", "6.72845, 28.9109, -8.01844, 0.81", "6.13857, 30.931, -8.51151, 1.11", "6.11096, 31.0128, -8.53965, 1.11", "5.51856, 32.5273, -9.24286, 1.69", "4.82416, 34.1708, -10.1766, 1.77", "4.26909, 35.572, -11.1007, 1.18", "4.24982, 35.6448, -11.1511, 1.18", "4.16455, 36.9007, -11.9564, 0.88", "4.29974, 37.8906, -12.4942, 0.74", "4.36741, 38.0607, -12.5642, 0.74", "5.06859, 39.2417, -12.9031, 0.74", "6.09802, 40.7361, -13.1844, 0.88", "6.89066, 41.8235, -13.3321, 1.69", "7.44797, 42.5721, -13.3888, 1.92", "7.90952, 43.2316, -13.4296, 2.21", "8.38736, 43.9867, -13.4653, 1.84", "8.95035, 45.0677, -13.4945, 1.25", "9.46129, 46.3864, -13.5688, 0.81", "9.78969, 47.5733, -13.7164, 0.81", "9.94437, 48.7445, -13.9856, 1.11", "9.93723, 48.8369, -14.0298, 1.11", "9.74392, 49.6039, -14.6163, 1.11", "9.23154, 50.8966, -15.8611, 0.59", "8.97079, 51.4199, -16.4468, 0.59", "8.39044, 52.4383, -17.8027, 0.52", "7.2577, 54.281, -20.4727, 1.99", "6.7077, 55.1414, -21.7855, 3.02", "6.44535, 55.5253, -22.4262, 3.02", "6.40019, 55.5856, -22.5334, 3.02", "5.60927, 56.6342, -24.5072, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.77298, 7.82597, 1.3594, 1.47", "3.43885, 8.3463, 1.40725, 1.47", "4.79589, 9.33253, 1.65898, 1.25", "5.23672, 9.64255, 1.7575, 1.62", "6.06425, 10.1625, 1.94627, 1.92", "7.01725, 10.7232, 2.16504, 1.69", "8.44795, 11.4019, 2.57664, 0.88", "9.90668, 11.8529, 3.48216, 0.88", "9.96764, 11.8686, 3.55567, 0.88", "10.585, 12.0256, 4.66116, 0.81", "10.612, 12.0354, 4.74024, 0.81", "11.0834, 12.4603, 7.27217, 1.03", "11.3631, 13.4775, 11.6538, 1.11", "11.3078, 14.2388, 14.1192, 1.11", "11.2991, 14.277, 14.207, 1.11", "10.9697, 15.2701, 15.9595, 1.33", "10.5853, 16.3454, 17.2882, 1.99", "10.3083, 17.1039, 17.8668, 2.73", "10.1428, 17.7884, 18.2187, 2.65", "10.0195, 19.1992, 18.8805, 2.36", "10.0242, 19.2718, 18.9126, 2.36", "10.4623, 21.1784, 19.6757, 0.81", "10.9085, 22.3701, 20.151, 0.59", "11.9661, 24.5662, 20.9777, 0.44", "12.8501, 26.0304, 21.4402, 0.44", "13.7435, 27.2542, 21.6866, 1.18", "14.4766, 28.1297, 21.7965, 1.99", "15.2396, 28.9418, 21.948, 2.65", "15.6655, 29.3922, 22.0564, 2.65", "16.8539, 30.7152, 22.5068, 1.77", "17.9971, 32.031, 23.2265, 0.44", "19.1187, 33.3962, 24.1546, 0.44", "21.1053, 35.9748, 26.2718, 1.25", "21.6747, 36.7902, 27.0042, 2.43", "22.5968, 38.2572, 28.3625, 2.43", "23.305, 39.5259, 29.5972, 2.21", "23.8181, 40.5683, 30.5845, 1.25", "24.4075, 41.9254, 31.6551, 0.52", "24.8261, 42.9195, 32.2002, 0.52", "25.3366, 44.1259, 32.7174, 0.52", "25.3721, 44.209, 32.739, 0.52", "25.892, 45.3404, 32.9588, 0.88", "26.4369, 46.4351, 33.1327, 1.25", "26.9339, 47.3958, 33.2021, 1.69", "27.3057, 48.0695, 33.2649, 1.69", "27.3742, 48.1924, 33.2797, 1.69", "28.0465, 49.358, 33.4491, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.16702, 10.657, -3.0206, 1.62", "-3.16702, 10.657, -3.0206, 1.62", "-3.59075, 11.4009, -2.43264, 1.4", "-4.35664, 12.751, -1.25634, 1.4", "-4.88226, 13.6683, -0.483848, 1.4", "-5.34749, 14.4937, 0.19144, 1.69", "-6.00877, 15.6607, 1.12589, 1.99", "-6.72292, 16.915, 2.09364, 2.36", "-7.41929, 18.134, 2.98788, 3.09", "-8.11774, 19.2845, 3.74394, 3.32", "-8.76941, 20.2983, 4.29533, 3.09", "-9.36034, 21.1411, 4.61811, 2.43", "-10.1109, 22.1271, 4.73849, 1.4", "-10.5812, 22.7059, 4.71726, 1.33", "-11.3335, 23.5666, 4.53752, 1.18", "-12.0601, 24.3213, 4.25555, 1.4", "-13.0473, 25.2385, 3.68109, 1.69", "-14.1944, 26.2261, 2.79336, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.38098, -13.0939, 2.58385, 1.02029", "-0.412752, -28.0939, 2.58385, 1.02029", "-0.444525, -43.0938, 2.58385, 1.02029" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.14476, -15.6523, 4.74632, 1.99", "-0.228669, -17.0954, 4.57206, 1.99", "0.734876, -18.4934, 4.46561, 1.62", "0.786065, -18.5651, 4.46185, 1.62", "1.96385, -20.1882, 4.45722, 1.18", "2.62781, -21.1161, 4.47572, 1.18", "3.4865, -22.3468, 4.51262, 1.18", "4.70795, -24.1297, 4.61558, 1.18", "5.73035, -25.6845, 4.73651, 1.47", "6.79084, -27.421, 4.89555, 2.21", "7.69309, -28.9599, 5.07107, 2.73", "8.55197, -30.5095, 5.25806, 2.8", "9.30077, -31.9486, 5.43558, 2.95", "10.023, -33.483, 5.61367, 2.95", "10.3554, -34.2692, 5.70273, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.14476, -15.6523, 4.74632, 1.18", "-3.08692, -17.1692, 8.03788, 1.18", "-4.49915, -18.2722, 10.4313, 1.18", "-5.37127, -18.9534, 11.9094, 1.69", "-6.08564, -19.5113, 13.1201, 2.36", "-6.51551, -19.8471, 13.8486, 2.73" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.51845, -11.7546, -37.6749, 0.66", "-1.47369, -14.0538, -39.5422, 0.66", "-0.25221, -15.321, -40.516, 0.74", "0.629158, -16.1588, -41.2489, 0.74", "1.36308, -16.7964, -41.875, 0.74", "1.42213, -16.8439, -41.9262, 0.74", "2.86496, -17.9164, -43.1932, 0.52", "3.61401, -18.1824, -43.7568, 0.52", "4.5961, -18.1243, -44.7949, 0.44", "5.21657, -17.9379, -45.6297, 0.44", "5.38344, -17.8923, -45.8653, 0.44", "5.9775, -17.8144, -46.627, 0.44", "7.41893, -17.7712, -48.4562, 0.88", "7.47722, -17.7773, -48.5281, 0.88", "8.73633, -18.0478, -49.9721, 1.11", "10.4274, -18.5228, -51.8445, 1.84", "12.3444, -19.1388, -53.8667, 2.14", "15.3514, -20.2247, -56.8917, 0.29", "16.396, -20.6278, -57.8598, 0.29", "17.2031, -20.9336, -58.5337, 1.03", "17.2858, -20.9655, -58.5911, 1.03", "17.933, -21.2524, -58.9461, 1.33", "18.0087, -21.2874, -58.9872, 1.33", "18.8069, -21.6007, -59.4846, 1.18", "20.1957, -21.9941, -60.5173, 0.37", "21.1404, -22.1769, -61.336, 0.37", "22.7123, -22.346, -62.9495, 0.52", "24.7139, -22.4483, -65.3109, 0.74", "25.7492, -22.4967, -66.6243, 1.62", "26.3141, -22.5144, -67.3826, 1.92", "27.3326, -22.5187, -68.7848, 2.43", "29.0142, -22.4184, -71.0038, 1.69", "30.5457, -22.1935, -72.9879, 0.37", "31.2756, -22.0741, -73.9138, 0.37", "31.7789, -21.9999, -74.5412, 0.37", "32.4425, -21.9318, -75.3792, 1.11", "33.1942, -21.9081, -76.2208, 1.33", "35.7138, -21.8633, -78.5456, 0.22", "35.7976, -21.8633, -78.6118, 0.22", "36.6053, -21.9214, -79.2088, 0.22", "37.6339, -22.1763, -79.8905, 0.22", "38.9276, -22.659, -80.6381, 0.88", "40.2474, -23.2056, -81.3766, 1.55", "41.101, -23.4824, -82.0615, 1.77", "42.6159, -23.7681, -83.9133, 0.22", "43.5136, -23.8147, -85.4011, 0.22", "44.26, -23.7872, -86.8287, 1.47", "45.2292, -23.7254, -88.8618, 2.43", "48.1115, -23.4134, -95.2079, 1.99", "49.8347, -23.1194, -99.2829, 1.77", "51.8637, -22.6084, -104.456, 0.22", "51.8909, -22.5993, -104.53, 0.22", "52.3495, -22.4292, -105.891, 0.22", "52.7352, -22.2861, -107.097, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.51845, -11.7546, -37.6749, 1.03", "-4.75508, -13.5498, -38.3367, 1.03", "-5.49245, -15.0086, -38.7359, 0.88", "-5.52904, -15.0952, -38.7559, 0.88", "-5.90264, -16.2035, -38.9661, 0.88", "-6.09123, -17.2292, -39.2032, 1.69", "-6.18298, -18.1264, -39.4147, 1.84", "-6.1595, -18.6654, -39.5481, 1.99", "-6.156, -18.7269, -39.5644, 1.99", "-6.14871, -19.4822, -39.8108, 1.69", "-6.28604, -21.5202, -40.6559, 1.03", "-6.6022, -22.7465, -41.4496, 0.88", "-6.99064, -23.5828, -42.1513, 0.66", "-7.26602, -24.0606, -42.5961, 0.66", "-7.77179, -24.7552, -43.3249, 0.52", "-8.28818, -25.1997, -43.9348, 0.52", "-10.1163, -25.9187, -45.5375, 1.77", "-10.5843, -26.0184, -45.9663, 1.77" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.60927, 56.6342, -24.5072, 0.52", "7.14586, 57.6021, -28.3466, 0.52", "7.40597, 57.7569, -28.9671, 0.52", "7.87972, 58.1129, -30.2678, 0.37", "8.45801, 58.692, -32.0458, 1.4", "8.58105, 58.8671, -32.4822, 1.55", "9.59671, 60.7211, -36.462, 0.74", "9.70153, 61.1101, -37.1273, 0.74", "9.92471, 62.7317, -39.6422, 0.29", "9.94989, 63.5711, -40.7901, 0.29", "9.86804, 64.9793, -42.5063, 1.92", "9.78525, 65.5509, -43.1151, 2.28", "9.3513, 67.707, -45.0867, 0.22", "9.33015, 67.8252, -45.1964, 0.22", "9.2724, 68.3382, -45.6629, 0.22", "9.25735, 69.7153, -47.0647, 1.18", "9.29171, 70.254, -47.6422, 1.77", "9.52126, 72.5659, -50.0239, 0.22", "9.70633, 73.8853, -51.2916, 1.84", "9.81359, 74.5298, -51.8821, 2.21", "10.2843, 76.6696, -53.7071, 0.22", "10.3035, 76.7336, -53.7538, 0.22", "10.8325, 78.1347, -54.6231, 0.22", "10.8689, 78.2126, -54.657, 0.22", "11.4288, 79.2066, -55.0517, 0.66", "11.9607, 80.0669, -55.548, 0.88", "12.6882, 81.1944, -56.3035, 0.22", "13.3745, 82.2052, -57.1225, 1.99", "13.7302, 82.721, -57.6273, 2.5", "14.6474, 84.1732, -59.2028, 0.22", "15.9292, 86.4209, -61.8608, 0.59", "16.0626, 86.7179, -62.2309, 0.59", "16.0794, 86.7681, -62.2943, 0.59", "16.3691, 88.0289, -63.7532, 0.96", "16.4809, 88.6918, -64.4497, 1.11", "16.5698, 89.3391, -65.0355, 0.96", "16.7948, 90.7939, -66.1899, 0.22", "16.8349, 91.0048, -66.4525, 0.22", "16.9983, 91.7454, -67.6383, 0.22", "17.1439, 92.3629, -68.8706, 1.11", "17.269, 93.1322, -70.7833, 1.4", "17.3398, 93.7079, -72.416, 2.06", "17.6295, 95.9816, -79.3513, 1.18", "17.7289, 96.8333, -82.1383, 1.18", "17.8288, 97.9007, -85.9998, 1.4", "17.9039, 99.2933, -91.4392, 1.55", "17.904, 99.3118, -91.5211, 1.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.60927, 56.6342, -24.5072, 0.52", "5.73604, 58.5137, -24.2887, 0.52", "5.8338, 59.6951, -24.1609, 0.52", "5.95344, 60.9612, -24.1371, 1.18", "6.07345, 61.9901, -24.1726, 1.99", "6.1389, 62.4207, -24.199, 2.28", "6.25978, 62.9476, -24.2374, 1.84", "6.45408, 63.4643, -24.2888, 1.55", "7.01057, 64.7427, -24.4796, 0.88", "7.40428, 65.6312, -24.7009, 0.29", "7.73497, 66.405, -24.9025, 0.29", "8.14529, 67.5429, -25.2379, 0.29", "8.17714, 67.6371, -25.2705, 0.29", "8.41211, 68.4204, -25.553, 0.29", "8.81804, 70.1296, -26.152, 1.92", "8.95913, 71.1341, -26.5092, 2.21", "9.03218, 72.6612, -27.0927, 0.29", "8.99473, 73.946, -27.5981, 0.29", "8.86778, 75.0046, -28.0528, 0.29", "8.65246, 75.9109, -28.4569, 0.29", "8.20556, 77.1513, -28.9983, 1.84", "7.67751, 78.2653, -29.4913, 2.58", "7.49141, 78.5783, -29.6257, 2.5", "5.92135, 80.7946, -30.6116, 0.22", "5.06171, 81.8923, -31.1376, 0.22", "4.48978, 82.5838, -31.4684, 0.96", "4.18092, 82.9358, -31.635, 1.18", "3.89879, 83.2475, -31.7687, 1.18", "2.92029, 84.3187, -32.2205, 0.29", "2.40589, 84.8697, -32.4371, 0.29", "1.39483, 85.9715, -32.9152, 0.29", "0.0666338, 87.4376, -33.5812, 2.21", "-0.390504, 87.9531, -33.8149, 2.65" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "28.0465, 49.358, 33.4491, 0.29", "28.2902, 50.7111, 33.4556, 0.29", "28.4742, 51.6769, 33.5265, 0.59", "28.6179, 52.2699, 33.6392, 0.74", "28.8802, 53.2831, 33.8791, 0.22", "29.1316, 54.2442, 34.1229, 0.22", "29.5218, 55.7382, 34.512, 2.28", "29.6576, 56.2527, 34.6815, 2.28", "30.1464, 58.0694, 35.3191, 0.29", "30.2641, 58.4894, 35.4728, 0.29", "30.5922, 59.6346, 35.9072, 0.22", "30.6805, 59.944, 36.0144, 0.88", "30.7168, 60.063, 36.0445, 0.88", "30.8189, 60.376, 36.1016, 0.88", "30.8792, 60.5541, 36.1157, 0.88", "31.1056, 61.1388, 36.1812, 0.52", "31.2723, 61.5337, 36.291, 0.15", "31.5091, 62.1024, 36.4995, 0.15", "31.6156, 62.3918, 36.6228, 0.15", "31.8479, 63.1084, 36.945, 0.81", "31.9427, 63.4773, 37.1389, 0.96", "32.1614, 64.5947, 37.8099, 0.15", "32.1718, 64.6645, 37.856, 0.15", "32.3092, 65.5962, 38.4738, 1.55", "32.3958, 66.1041, 38.8048, 2.28", "32.7332, 67.6956, 39.8388, 0.22", "33.0207, 68.8036, 40.6015, 2.65", "33.4722, 70.3585, 41.6899, 0.29", "33.6523, 70.8973, 42.0737, 0.15", "33.7891, 71.2721, 42.3497, 0.15", "34.3869, 72.7665, 43.47, 2.58", "35.1285, 74.3553, 44.6365, 0.15", "35.289, 74.6577, 44.8593, 0.37", "35.5018, 75.0178, 45.1362, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "28.0465, 49.358, 33.4491, 0.29", "27.0519, 50.04, 34.0862, 0.29", "26.4054, 50.5677, 34.4942, 0.29", "26.0384, 50.9213, 34.7231, 0.29", "25.6971, 51.2885, 34.9338, 0.88", "25.6664, 51.3334, 34.9529, 0.88", "25.4942, 51.6721, 35.1015, 0.88", "25.4474, 51.8358, 35.1535, 0.88", "25.4209, 52.0582, 35.2235, 0.88", "25.4191, 52.1186, 35.2478, 0.88", "25.4332, 52.9339, 35.6063, 0.44", "25.4576, 53.611, 35.9046, 0.44", "25.4601, 53.6613, 35.9322, 0.44", "25.4547, 54.2778, 36.2984, 0.44", "25.412, 55.2563, 37.0056, 1.77", "25.4133, 55.6652, 37.3223, 2.65", "25.4373, 56.0341, 37.6218, 3.02", "25.6445, 57.6818, 38.9246, 0.22", "25.8498, 58.5466, 39.6401, 1.03", "26.2424, 59.7584, 40.6657, 0.29", "26.5863, 60.6042, 41.4112, 0.22", "26.8286, 61.1083, 41.8636, 1.92", "27.1161, 61.6198, 42.3061, 2.28", "28.0108, 62.9545, 43.3688, 0.22", "28.2599, 63.3196, 43.7046, 0.22", "28.7084, 64.0784, 44.5112, 1.11", "28.8243, 64.3425, 44.8411, 1.55", "28.9443, 64.6859, 45.3337, 1.84", "28.9517, 64.7167, 45.3833, 1.84", "29.1745, 66.2083, 47.9446, 0.29", "29.2299, 66.8901, 49.1828, 0.29", "29.228, 67.5204, 50.3334, 2.65", "29.1878, 68.0254, 51.2543, 2.36", "29.0481, 68.8863, 52.8052, 0.37", "29.0413, 68.9121, 52.8473, 0.37", "28.876, 69.274, 53.3188, 0.22", "28.6613, 69.6112, 53.6902, 0.66", "28.3928, 69.9826, 54.0384, 0.96", "28.1093, 70.3616, 54.3431, 0.96", "27.673, 70.9347, 54.766, 0.22", "27.3591, 71.3678, 55.1164, 0.22", "26.8348, 72.1209, 55.8069, 2.43", "26.0285, 73.2383, 57.0617, 0.22", "25.9026, 73.4106, 57.2711, 0.88", "25.7564, 73.6165, 57.5251, 1.03", "25.26, 74.3273, 58.4444, 0.66", "24.8616, 74.9801, 59.5048, 1.62", "24.6159, 75.5788, 60.5673, 1.62", "24.4901, 76.1653, 61.6154, 0.37", "24.4918, 76.4129, 62.0313, 2.06", "24.4955, 76.4397, 62.0732, 2.06", "24.8963, 78.3496, 64.6634, 1.62", "25.1188, 79.0969, 65.6396, 0.22", "25.2852, 79.5604, 66.2234, 2.06", "25.9171, 80.9937, 68.1239, 0.29", "26.0132, 81.2091, 68.404, 0.29", "26.2896, 81.8698, 69.1608, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-14.1944, 26.2261, 2.79336, 1.18", "-16.77, 27.3815, 0.516794, 1.18", "-17.3782, 27.6781, 0.0493698, 1.18", "-18.1468, 28.0735, -0.469484, 1.4", "-18.9196, 28.5009, -0.923321, 1.4", "-19.9082, 29.0929, -1.51043, 1.03", "-20.7724, 29.6551, -2.01153, 0.66", "-21.4597, 30.1772, -2.32315, 0.66", "-21.9314, 30.5823, -2.54823, 1.11", "-22.59, 31.2348, -2.82918, 0.81", "-24.0172, 32.8769, -3.35006, 0.66", "-24.6177, 33.6662, -3.50169, 0.66", "-25.062, 34.3258, -3.57462, 0.66", "-25.6826, 35.3235, -3.63174, 1.25", "-26.2967, 36.4303, -3.58911, 1.62", "-26.7945, 37.4305, -3.43823, 1.99", "-27.1302, 38.1751, -3.23781, 1.99", "-27.1926, 38.3168, -3.19909, 1.99", "-27.4738, 38.9666, -3.02829, 1.84", "-27.9221, 39.9937, -2.80446, 1.03", "-28.2855, 40.8114, -2.69068, 0.74", "-28.7061, 41.7578, -2.60046, 0.74", "-29.0221, 42.4774, -2.5441, 0.44", "-29.2547, 43.0017, -2.50909, 0.59", "-29.5603, 43.6135, -2.49376, 0.59", "-29.8945, 44.1839, -2.51095, 0.59", "-29.9382, 44.2476, -2.51477, 0.59", "-30.4532, 44.893, -2.56875, 0.44", "-30.8415, 45.3303, -2.61303, 0.29", "-31.5632, 46.0781, -2.73918, 0.29", "-32.0982, 46.645, -2.86247, 1.47", "-32.6712, 47.3014, -3.0246, 2.06", "-32.8669, 47.5773, -3.10177, 2.21", "-33.0272, 47.8909, -3.22159, 2.21", "-33.3403, 48.83, -3.63741, 1.18", "-33.5293, 49.8987, -4.1384, 0.37", "-33.5676, 50.4737, -4.42747, 0.37", "-33.5386, 51.5967, -4.98404, 0.37", "-33.4613, 52.9117, -5.64616, 1.33", "-33.4346, 53.294, -5.81838, 1.77", "-33.4298, 53.3758, -5.84928, 1.77", "-33.4287, 53.8055, -5.94934, 1.77", "-33.508, 54.7773, -5.98653, 0.81", "-33.6478, 55.8429, -5.87038, 0.29", "-33.7156, 56.7456, -5.61763, 0.74", "-33.7322, 57.3193, -5.42779, 0.74", "-33.7092, 58.7243, -4.92193, 0.37", "-33.6488, 59.6696, -4.55879, 0.37", "-33.5558, 60.4224, -4.24763, 0.37", "-33.2594, 61.9353, -3.57227, 1.4", "-33.1073, 62.5193, -3.37109, 2.06", "-33.0062, 62.8873, -3.27491, 2.5", "-32.8592, 63.4431, -3.18212, 2.5", "-32.8475, 63.5081, -3.17326, 2.5", "-32.6733, 65.7684, -2.93758, 0.44", "-32.7575, 67.1479, -2.87796, 0.37", "-32.8737, 67.8848, -2.83811, 0.37", "-32.8959, 67.977, -2.83264, 0.37", "-33.3071, 69.306, -2.77238, 0.37", "-33.3588, 69.4504, -2.77102, 0.37", "-33.643, 70.1124, -2.80977, 0.37", "-33.6633, 70.1753, -2.81689, 0.37", "-33.801, 70.8531, -3.0067, 1.47", "-33.9181, 71.6271, -3.29883, 2.21", "-33.977, 72.152, -3.53415, 2.65", "-34.0521, 72.6647, -3.77371, 2.5", "-34.3613, 74.33, -4.55993, 0.29", "-34.5605, 75.0612, -4.93707, 0.29", "-34.8119, 75.7417, -5.31187, 0.29", "-35.0365, 76.2088, -5.55102, 0.29", "-35.3251, 76.7481, -5.79589, 1.33", "-35.7219, 77.4698, -6.07112, 2.28", "-36.2209, 78.4074, -6.3361, 2.73", "-36.4786, 78.9366, -6.48263, 2.43", "-37.0522, 80.1907, -6.87357, 0.29", "-37.3042, 80.7241, -7.06624, 0.29", "-37.5217, 81.2106, -7.24892, 0.29", "-37.686, 81.6004, -7.39341, 0.29", "-38.0263, 82.5294, -7.68484, 0.88", "-38.1785, 82.917, -7.84013, 1.55", "-38.5364, 83.5809, -8.24735, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-14.1944, 26.2261, 2.79336, 0.74", "-15.8964, 26.5023, 2.45329, 0.74", "-17.3081, 26.7848, 2.17141, 0.74", "-18.5936, 27.0612, 1.92276, 0.59", "-19.3704, 27.2412, 1.78004, 0.74", "-20.5912, 27.5388, 1.56973, 0.74", "-21.5098, 27.7698, 1.42293, 1.03", "-22.7086, 28.1038, 1.25002, 1.33", "-23.6966, 28.37, 1.12266, 1.55", "-24.8931, 28.656, 0.990044, 1.4", "-26.3664, 28.9525, 0.888567, 1.25", "-28.2729, 29.3056, 0.88923, 0.74", "-29.2748, 29.4987, 0.972068, 0.96", "-30.3585, 29.7131, 1.15774, 0.96", "-31.9782, 30.0785, 1.64604, 0.52", "-33.4375, 30.4769, 2.34113, 0.52", "-34.5395, 30.8898, 3.13459, 0.88", "-35.3317, 31.2909, 3.8846, 0.59", "-35.3862, 31.325, 3.93592, 0.59", "-36.1989, 31.942, 4.68655, 0.29", "-36.755, 32.3826, 5.00648, 0.29", "-37.7508, 32.9538, 4.99016, 0.74", "-38.6008, 33.3123, 4.75876, 0.96", "-40.1939, 33.8143, 4.18774, 0.59", "-40.2943, 33.8383, 4.1457, 0.59", "-41.5351, 34.0443, 3.55341, 0.29", "-42.3491, 34.1378, 3.14435, 0.29", "-43.478, 34.1956, 2.56921, 1.62", "-44.6846, 34.1655, 2.03831, 2.43", "-45.7285, 34.083, 1.66793, 2.65", "-46.6586, 33.9848, 1.37729, 2.65", "-46.7384, 33.9764, 1.35592, 2.65", "-48.9326, 33.8082, 0.902163, 1.11", "-50.6584, 33.7583, 0.687753, 0.37", "-51.7803, 33.8117, 0.62006, 0.37", "-52.9766, 33.973, 0.629039, 0.37", "-54.0176, 34.2395, 0.770359, 0.37", "-55.2094, 34.7108, 1.11228, 0.81", "-56.1055, 35.1863, 1.52853, 1.47", "-56.7678, 35.5586, 1.91952, 1.69", "-57.1783, 35.7645, 2.1804, 1.69", "-58.9718, 36.4907, 3.34879, 0.66", "-60.3413, 36.9079, 4.2248, 0.37", "-61.2662, 37.1137, 4.80491, 0.37", "-62.9135, 37.318, 5.75167, 1.25", "-64.1482, 37.3229, 6.44783, 2.36", "-65.2316, 37.2711, 7.06593, 2.36", "-65.3133, 37.2637, 7.11764, 2.36", "-66.0192, 37.191, 7.60863, 2.21", "-67.8049, 37.0369, 9.00209, 0.37", "-69.8752, 36.8809, 10.7839, 0.59", "-71.1344, 36.8006, 11.9079, 0.37", "-73.2505, 36.6903, 13.742, 1.18", "-73.8107, 36.6664, 14.1978, 1.4", "-74.9747, 36.6213, 15.1061, 1.25", "-75.0487, 36.6176, 15.1687, 1.25", "-76.081, 36.515, 16.1307, 0.52", "-77.2185, 36.3149, 17.2169, 2.14", "-78.2699, 36.1457, 18.2546, 2.95", "-79.7244, 35.866, 19.7904, 1.92", "-81.9389, 35.4973, 22.089, 1.03", "-84.4287, 35.2047, 24.6853, 0.44", "-85.0097, 35.137, 25.3265, 0.44", "-86.6638, 34.9559, 27.1942, 0.44", "-88.6975, 34.7634, 29.4886, 2.36", "-91.045, 34.6394, 31.9467, 0.22", "-92.0871, 34.6606, 32.8632, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.444525, -43.0938, 2.58385, 0.361546", "-0.476297, -58.0938, 2.58385, 0.361546", "-0.508069, -73.0938, 2.58385, 0.361546" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "10.3554, -34.2692, 5.70273, 0.37", "11.0004, -35.0715, 4.87733, 0.37", "11.5332, -35.6317, 4.15204, 0.29", "11.8628, -35.9508, 3.69972, 0.29", "12.8512, -36.7587, 2.40666, 0.74", "12.8966, -36.7886, 2.35176, 0.74", "13.7612, -37.2618, 1.36871, 0.66", "14.5443, -37.5768, 0.425324, 0.29", "14.6038, -37.5857, 0.360152, 0.29", "15.2005, -37.5401, -0.152264, 0.29", "15.821, -37.3551, -0.484357, 0.74", "16.014, -37.2694, -0.558739, 0.74", "16.3981, -37.0763, -0.643031, 1.03", "16.5477, -37.0125, -0.663541, 1.03", "16.929, -36.9184, -0.716344, 1.03", "17.7438, -36.856, -0.82873, 0.59", "18.735, -36.9206, -0.962742, 0.22", "19.5812, -37.0659, -1.05181, 0.22", "20.1956, -37.2118, -1.10512, 0.88", "21.3576, -37.4905, -1.23413, 1.84", "21.9522, -37.643, -1.30722, 2.14", "22.7844, -37.8538, -1.39567, 2.36", "24.2381, -38.1501, -1.50334, 0.66", "25.3968, -38.2797, -1.55875, 0.59", "27.1448, -38.3359, -1.60271, 0.52", "27.2225, -38.3304, -1.60299, 0.52", "28.1318, -38.1722, -1.62749, 1.33", "29.2347, -37.8414, -1.6907, 1.77", "29.9182, -37.5676, -1.7078, 1.77", "30.1871, -37.4629, -1.70364, 1.77", "31.1187, -37.1767, -1.66305, 1.25", "32.4647, -36.8589, -1.62973, 0.52", "33.7457, -36.6471, -1.63876, 0.29", "35.0483, -36.518, -1.6591, 0.29", "36.3089, -36.4424, -1.65922, 0.22", "37.4666, -36.4288, -1.7745, 0.22", "37.5536, -36.4298, -1.79202, 0.22", "38.1084, -36.4098, -1.97621, 1.03", "38.5655, -36.3839, -2.19845, 1.47", "39.1509, -36.3206, -2.55662, 1.47", "40.997, -36.0525, -3.79597, 0.59", "41.7755, -35.9503, -4.36418, 0.22", "42.6856, -35.894, -5.00495, 0.22", "43.2966, -35.8995, -5.43221, 0.22", "43.3605, -35.9042, -5.47493, 0.22", "44.1932, -36.0372, -5.95341, 0.22", "44.2594, -36.0503, -5.99053, 0.22", "45.1682, -36.2596, -6.63776, 1.03", "45.9361, -36.4683, -7.21532, 1.62", "45.9957, -36.4815, -7.26211, 1.62", "46.2787, -36.5412, -7.47584, 1.62", "47.9985, -36.8829, -8.66856, 0.15", "48.0629, -36.8987, -8.70913, 0.15", "48.9133, -37.1682, -9.21404, 0.15", "48.9873, -37.1938, -9.25362, 0.15", "50.2926, -37.6549, -9.91101, 1.77", "51.1782, -38.0096, -10.2862, 2.73", "51.7328, -38.2385, -10.4251, 3.02", "54.7387, -39.443, -10.9416, 0.22", "55.3484, -39.6684, -10.9846, 0.22", "55.4105, -39.6898, -10.9823, 0.22", "56.9648, -40.1515, -10.6766, 0.22", "59.097, -40.6029, -9.97492, 0.22", "59.2359, -40.626, -9.91173, 0.22", "60.1627, -40.7652, -9.34864, 1.55", "61.0718, -40.9027, -8.82489, 2.21", "61.9282, -41.031, -8.37719, 1.4", "63.419, -41.2377, -7.73672, 0.22", "64.415, -41.4391, -7.35364, 0.22", "65.2469, -41.6308, -6.99779, 0.22", "65.7392, -41.7707, -6.7428, 0.44", "65.804, -41.7913, -6.70558, 0.44", "66.4587, -42.0344, -6.25824, 0.22", "67.954, -42.6503, -5.14991, 1.62", "68.5326, -42.9138, -4.71192, 2.14", "70.7247, -44.0115, -3.08072, 0.22", "71.3218, -44.3392, -2.64423, 1.47", "73.2437, -45.474, -1.28885, 1.11", "73.8299, -45.8568, -0.898856, 1.33", "75.3779, -46.9143, -0.0496191, 0.22", "76.143, -47.4318, 0.357016, 0.22", "76.5484, -47.6988, 0.552735, 1.47", "76.9435, -47.9316, 0.786505, 2.14", "77.699, -48.3295, 1.25215, 2.14", "79.5862, -49.3163, 2.55482, 0.22", "81.2034, -50.1503, 3.77264, 1.77", "81.572, -50.3482, 4.06775, 2.36", "84.2777, -51.8734, 6.41395, 0.29", "85.1478, -52.386, 7.19537, 0.29", "85.7247, -52.7557, 7.73822, 0.29", "85.7741, -52.7923, 7.78437, 0.29", "86.2504, -53.1679, 8.20333, 0.29", "87.8931, -54.4871, 9.59991, 2.28", "88.3875, -54.8754, 9.98621, 2.65", "90.2588, -56.2721, 11.4953, 0.22", "90.9425, -56.7558, 12.0387, 0.22", "92.1092, -57.5316, 12.8939, 0.96", "92.7251, -57.9014, 13.2977, 1.47", "94.8621, -59.0143, 14.42, 0.22", "95.948, -59.4724, 14.8965, 0.81", "96.0991, -59.522, 14.9475, 0.81", "97.972, -59.9768, 15.3903, 0.22", "98.9295, -60.1451, 15.4766, 0.22", "101.021, -60.4208, 15.5523, 0.22", "102.138, -60.4914, 15.4647, 0.22", "102.215, -60.4929, 15.4543, 0.22", "103.996, -60.4865, 15.155, 0.96", "105.067, -60.4166, 14.8607, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "10.3554, -34.2692, 5.70273, 1.25", "9.86925, -35.4816, 5.65401, 1.25", "9.47665, -36.7147, 5.56621, 0.81", "9.27201, -37.6855, 5.45794, 0.81", "9.15691, -38.8084, 5.30779, 0.96", "9.13903, -39.9582, 5.12384, 0.74", "9.12548, -40.83, 4.98438, 1.11", "9.18093, -41.4137, 4.84363, 1.69", "9.42964, -42.3644, 4.56667, 2.36", "9.76301, -43.0884, 4.32256, 2.65", "10.077, -43.5321, 4.15827, 2.65" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-6.51551, -19.8471, 13.8486, 0.81", "-7.17581, -18.6043, 13.9359, 0.81", "-7.67963, -17.5769, 13.9033, 0.66", "-8.17539, -16.5116, 13.832, 0.66", "-8.46925, -15.9152, 13.7547, 0.96", "-9.03286, -14.884, 13.5938, 0.44", "-9.4729, -14.1307, 13.4641, 0.44", "-10.1879, -12.9861, 13.1672, 0.59", "-10.4872, -12.6052, 13.0381, 0.59", "-11.2587, -11.9796, 12.798, 0.59", "-11.9258, -11.6826, 12.6867, 0.59", "-12.0031, -11.6692, 12.6843, 0.59", "-12.7712, -11.6566, 12.7165, 0.59", "-13.7957, -11.7358, 12.8668, 1.33", "-14.6791, -11.832, 13.0491, 1.69", "-15.5618, -11.935, 13.3093, 1.55", "-16.5633, -12.0545, 13.7534, 0.88", "-17.3399, -12.131, 14.418, 0.44", "-17.9198, -12.2038, 15.2666, 0.44", "-18.1221, -12.2585, 15.7261, 0.74", "-18.3548, -12.3943, 16.5149, 0.88", "-18.8132, -12.8035, 18.4844, 1.03", "-19.4848, -13.6081, 21.8385, 0.52", "-19.7852, -14.0387, 23.4549, 1.25", "-20.0493, -14.4919, 24.9229, 1.25", "-20.2142, -14.9649, 26.3211, 0.44", "-20.2997, -15.36, 27.3899, 0.44", "-20.3466, -15.8409, 28.8102, 0.29", "-20.2843, -16.4641, 31.1273, 1.99", "-20.2698, -16.6192, 31.7861, 1.99", "-20.2281, -17.6401, 36.4707, 1.99", "-20.228, -17.6557, 36.5475, 1.99", "-20.2206, -19.0928, 43.8485, 2.73", "-20.3194, -20.7285, 52.2222, 1.4", "-20.3632, -20.9654, 53.4557, 1.25", "-20.4526, -21.1712, 54.5815, 0.22", "-20.5613, -21.3094, 55.2981, 0.22", "-20.6208, -21.3815, 55.6136, 1.11", "-20.9331, -21.7005, 56.5843, 1.47", "-22.1892, -22.9022, 59.2311, 1.18", "-22.5109, -23.236, 60.0172, 1.99", "-23.2399, -24.0155, 61.9601, 0.22", "-23.6931, -24.5009, 63.1651, 0.22", "-23.837, -24.6456, 63.5213, 0.66", "-24.4611, -25.2379, 64.9895, 0.66", "-24.9709, -25.6336, 65.8834, 0.29", "-25.5423, -25.9981, 66.8852, 1.33", "-25.7546, -26.0397, 67.1741, 1.62", "-26.1579, -26.0533, 67.6981, 1.84" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.51551, -19.8471, 13.8486, 1.62", "-6.69962, -20.9722, 13.6223, 1.62", "-6.85629, -21.8593, 13.4354, 1.33", "-7.05437, -22.96, 13.1855, 0.88", "-7.27034, -24.2216, 12.8822, 0.74", "-7.52, -25.7255, 12.5168, 0.74", "-7.71939, -27.1222, 12.1941, 2.14", "-7.8622, -28.435, 11.9233, 2.21", "-7.94834, -30.006, 11.6963, 1.47", "-7.91436, -31.2224, 11.6092, 1.18", "-7.81021, -31.9298, 11.6249, 0.88", "-7.48193, -33.0236, 11.8246, 0.59", "-6.94915, -34.2839, 12.218, 0.59", "-6.36774, -35.4811, 12.7097, 1.18", "-6.10928, -35.9891, 12.9737, 1.47", "-5.75405, -36.7478, 13.4209, 1.11", "-5.33245, -38.0406, 14.1776, 0.74", "-5.44678, -38.7061, 14.4612, 0.44", "-6.07371, -39.4098, 14.5683, 0.44", "-6.76747, -39.9775, 14.5633, 0.52", "-7.58016, -40.5092, 14.5258, 0.52", "-8.36909, -40.9641, 14.4655, 1.18", "-9.43831, -41.5711, 14.3588, 1.92", "-10.5376, -42.2783, 14.2282, 2.5", "-11.5715, -43.0805, 14.0763, 2.36", "-12.7644, -44.1822, 13.8645, 2.06", "-13.6936, -45.1779, 13.665, 0.59", "-14.4922, -46.1166, 13.496, 0.52", "-15.2778, -47.1428, 13.3329, 0.44", "-16.0314, -48.2426, 13.1326, 1.4", "-16.6409, -49.2416, 12.9446, 1.84", "-17.267, -50.396, 12.7142, 1.84", "-17.7442, -51.3203, 12.5213, 1.69", "-18.2493, -52.3415, 12.3033, 1.18", "-18.7216, -53.3777, 12.061, 0.74", "-18.9812, -54.0352, 11.8738, 0.66", "-19.3009, -55.014, 11.5399, 0.59", "-19.5204, -55.8675, 11.1787, 0.52", "-19.6536, -56.473, 10.8726, 0.37", "-19.8796, -57.5626, 10.2836, 0.29", "-20.1052, -58.569, 9.73247, 0.29", "-20.1249, -58.6417, 9.69116, 0.29", "-20.6038, -60.0157, 8.91682, 1.77", "-21.0737, -61.1645, 8.36818, 2.36", "-21.0976, -61.2191, 8.34521, 2.36", "-21.3827, -61.8554, 8.12818, 2.58", "-21.6902, -62.5495, 7.91037, 2.58", "-22.1959, -63.6627, 7.55374, 1.84", "-22.7195, -64.8732, 7.17765, 0.81", "-23.1551, -65.9679, 6.84485, 0.52", "-23.51, -66.949, 6.5799, 0.44", "-23.9653, -68.2871, 6.26407, 0.44", "-24.3245, -69.4576, 6.06313, 0.37", "-24.5277, -70.2326, 5.99806, 0.37", "-24.6991, -70.9825, 5.99004, 0.37", "-24.9031, -72.0154, 6.07438, 0.29", "-25.0312, -72.8717, 6.18272, 0.29", "-25.1693, -74.2341, 6.48532, 1.99", "-25.2484, -75.1225, 6.75109, 2.95", "-25.3042, -75.6715, 6.94518, 2.95", "-25.4787, -77.503, 7.63616, 0.59", "-25.5467, -78.5606, 8.07155, 0.44", "-25.5969, -79.9969, 8.71684, 0.37", "-25.6013, -81.0295, 9.19853, 0.37", "-25.5292, -82.0431, 9.68115, 1.69", "-25.4465, -82.6089, 9.96296, 2.58", "-25.2651, -83.4577, 10.3965, 2.58", "-24.9533, -84.8785, 11.0971, 0.29", "-24.7527, -85.8555, 11.4994, 0.29", "-24.5087, -87.1589, 12.0675, 0.29", "-24.3386, -88.1555, 12.5249, 0.66", "-24.285, -88.5248, 12.7089, 0.74", "-24.1663, -89.4672, 13.1977, 0.29", "-24.0659, -90.362, 13.7263, 0.29", "-23.9837, -91.8447, 14.6427, 1.4", "-23.9743, -92.3366, 14.9279, 1.92", "-23.9692, -92.4027, 14.9615, 1.92", "-23.9082, -92.7663, 15.1324, 1.92", "-23.5665, -94.09, 15.6351, 0.22", "-23.544, -94.1581, 15.6565, 0.22", "-23.2312, -95.0154, 15.8964, 0.66", "-23.0953, -95.362, 15.9975, 0.81", "-22.6141, -96.4206, 16.2997, 0.22", "-22.1407, -97.3881, 16.5607, 2.14", "-21.7267, -98.1733, 16.7528, 2.58", "-20.6734, -100.026, 17.213, 0.22", "-20.1308, -100.94, 17.4451, 0.22", "-19.5032, -101.964, 17.701, 0.22", "-19.0055, -102.74, 17.8821, 0.22", "-18.4984, -103.478, 18.0576, 2.36", "-17.6929, -104.599, 18.2903, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "52.7352, -22.2861, -107.097, 0.15", "56.3017, -24.8252, -127.992, 0.15", "56.5516, -25.0268, -129.405, 1.69", "56.6783, -25.1363, -130.105, 1.92", "56.6973, -25.154, -130.202, 1.92", "57.4455, -25.8854, -133.758, 0.22", "57.6015, -26.0445, -134.432, 0.22", "58.1024, -26.7534, -135.212, 1.18", "58.1339, -26.8059, -135.273, 1.18", "58.736, -27.8499, -136.59, 0.29", "59.0108, -28.2835, -137.154, 0.59", "59.5695, -29.0962, -138.22, 0.37", "60.6101, -30.3119, -140.007, 0.74", "60.656, -30.3578, -140.082, 0.74", "61.5629, -31.3094, -141.766, 0.15", "61.9868, -31.7671, -142.682, 0.15", "62.0181, -31.8057, -142.754, 0.15", "62.2097, -32.0753, -143.233, 0.15", "62.2473, -32.142, -143.329, 0.15", "62.7363, -33.0276, -144.503, 0.15", "63.1142, -33.7304, -145.377, 1.4", "63.3772, -34.2108, -145.966, 1.69", "64.5524, -36.3218, -148.521, 0.22", "64.9611, -37.0327, -149.384, 0.22", "65.4592, -37.8887, -150.345, 0.22", "65.8356, -38.4912, -150.958, 0.96", "65.9836, -38.7463, -151.188, 0.96", "66.682, -39.8905, -152.151, 0.22", "66.7145, -39.9442, -152.189, 0.22", "67.3413, -41.0079, -152.957, 0.22", "67.9075, -42.1122, -153.655, 1.55", "68.221, -42.7008, -153.982, 1.99", "69.1217, -44.3558, -154.945, 0.29", "69.1596, -44.4219, -154.985, 0.29", "69.7028, -45.3847, -155.669, 0.29", "70.3609, -46.6734, -156.67, 0.29", "70.555, -47.1368, -157.077, 0.29", "71.1679, -48.8788, -158.905, 1.4", "71.3271, -49.4604, -159.606, 1.69", "71.7027, -51.0306, -161.638, 0.29", "71.9013, -52.136, -163.207, 0.29", "72.0536, -53.5253, -165.269, 1.47", "72.0919, -55.0512, -167.548, 1.18", "72.0068, -56.4469, -169.574, 0.22", "71.9205, -57.0249, -170.375, 0.22", "71.6492, -58.128, -171.797, 1.69", "71.4852, -58.6422, -172.403, 1.77", "70.9322, -59.98, -173.639, 0.66", "70.5738, -60.675, -174.15, 0.22", "70.0739, -61.5345, -174.717, 0.96", "69.5594, -62.415, -175.33, 0.22", "69.3424, -62.8439, -175.705, 0.15", "69.0516, -63.5864, -176.564, 0.15", "68.7737, -64.509, -177.735, 0.44", "68.5671, -65.256, -178.775, 1.33", "68.3908, -65.8987, -179.728, 1.25", "67.6906, -67.938, -183.023, 1.25", "67.1691, -69.3315, -185.429, 0.15", "66.9636, -69.8374, -186.329, 0.15", "66.6382, -70.4893, -187.534, 0.81", "66.4936, -70.7429, -187.998, 0.96", "65.7713, -71.9613, -190.046, 0.52", "65.1484, -73.0285, -191.658, 0.22", "64.868, -73.5428, -192.399, 1.18", "63.9385, -75.5499, -195.299, 0.22", "63.6629, -76.2599, -196.292, 0.96", "63.1958, -77.7357, -198.268, 0.22", "63.0945, -78.1854, -198.816, 0.52", "63.0544, -78.3601, -199.02, 0.52", "62.6958, -80.1764, -201.127, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "52.7352, -22.2861, -107.097, 1.55", "54.3174, -20.8699, -111.105, 1.55", "54.6627, -20.6079, -111.864, 1.62", "56.7498, -19.3015, -115.826, 0.22", "56.7937, -19.2781, -115.901, 0.22", "57.3391, -19.0429, -116.751, 1.33", "57.6612, -18.9256, -117.217, 1.25", "59.5404, -18.4708, -119.359, 0.22", "60.3231, -18.3277, -120.161, 1.18", "60.7405, -18.2758, -120.513, 1.33", "62.6478, -18.0623, -122.052, 0.22", "63.9906, -17.9297, -123.104, 1.84", "64.3906, -17.8819, -123.393, 1.84", "65.5928, -17.7143, -124.115, 0.29", "65.9061, -17.6619, -124.29, 0.74", "67.2165, -17.399, -124.948, 0.22", "67.3568, -17.3613, -125.009, 0.22", "67.9486, -17.1724, -125.266, 0.88", "69.3745, -16.5739, -126.075, 0.22", "69.6554, -16.4316, -126.262, 0.52", "70.1308, -16.1651, -126.61, 0.22", "71.1912, -15.5417, -127.466, 1.92", "71.6603, -15.2512, -127.866, 1.92", "73.0976, -14.2787, -129.188, 0.22", "73.3255, -14.107, -129.405, 0.88", "73.5211, -13.9622, -129.589, 0.88", "74.3396, -13.3977, -130.299, 0.22", "74.7385, -13.1389, -130.633, 0.22", "74.7837, -13.1071, -130.674, 0.22", "75.015, -12.9706, -130.87, 0.22", "75.9716, -12.4676, -131.699, 1.4", "76.1886, -12.3626, -131.882, 1.4", "77.3559, -11.8485, -132.841, 0.22", "77.8093, -11.6945, -133.191, 0.96", "78.897, -11.3965, -133.967, 0.22", "79.1962, -11.3371, -134.162, 0.22", "79.6458, -11.3061, -134.394, 0.66", "80.2979, -11.3333, -134.66, 0.66", "81.4335, -11.5234, -134.973, 0.22", "81.9832, -11.6643, -135.087, 1.11", "82.3364, -11.7842, -135.144, 1.4", "83.7463, -12.421, -135.357, 0.22", "84.362, -12.7641, -135.439, 0.22", "85.0825, -13.2362, -135.512, 0.96", "85.6753, -13.6612, -135.565, 1.47", "86.6485, -14.3938, -135.663, 0.22", "87.1655, -14.771, -135.76, 0.22", "87.2576, -14.8373, -135.786, 0.22", "87.8392, -15.2202, -135.987, 0.22", "88.6776, -15.7333, -136.317, 1.33", "89.0584, -15.9369, -136.479, 1.62", "90.4467, -16.5788, -137.1, 0.22", "91.081, -16.8531, -137.38, 0.66", "91.4525, -17.0162, -137.551, 0.66", "91.566, -17.0679, -137.607, 0.66", "92.6739, -17.5935, -138.163, 0.22", "93.465, -17.9871, -138.63, 1.11", "94.0041, -18.2691, -138.972, 1.33", "95.1628, -18.8807, -139.768, 0.22", "95.9871, -19.2946, -140.374, 1.25", "96.3327, -19.4522, -140.677, 1.33", "97.9483, -20.1463, -142.274, 0.22", "98.1465, -20.2259, -142.483, 0.44", "98.2348, -20.2573, -142.584, 0.44", "98.9458, -20.4742, -143.46, 1.18", "100.643, -20.8881, -145.63, 0.22", "101.043, -20.9644, -146.155, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.5843, -26.0184, -45.9663, 1.55", "-11.0604, -26.5, -47.2123, 1.55", "-11.4859, -26.8273, -48.2625, 0.22", "-11.6692, -26.9783, -48.7013, 0.22", "-11.9696, -27.2528, -49.5208, 2.36", "-12.1925, -27.4846, -50.2932, 2.87", "-13.1083, -28.3534, -53.7466, 0.81", "-13.1161, -28.3593, -53.7821, 0.81", "-13.2598, -28.4707, -54.7044, 0.81", "-13.3922, -28.6438, -56.4837, 2.06", "-13.3886, -28.81, -58.3424, 1.25", "-13.3064, -28.9585, -59.6915, 0.81", "-13.0481, -29.348, -62.1927, 0.96", "-13.0176, -29.4283, -62.7162, 1.47", "-12.9893, -29.5924, -63.8233, 0.22", "-12.9842, -29.6748, -64.2796, 0.22", "-12.9766, -29.8931, -65.5366, 1.4", "-12.969, -30.1504, -66.9819, 1.03", "-12.9982, -30.3858, -68.2636, 1.69", "-13.045, -30.6601, -69.7764, 1.4", "-13.0651, -30.929, -71.2849, 1.4", "-13.0007, -31.4223, -74.0106, 1.84", "-12.842, -31.8143, -76.053, 0.15", "-12.7455, -31.9743, -76.7594, 1.84", "-12.6969, -32.0438, -77.0135, 1.84", "-12.362, -32.5565, -78.5539, 0.22", "-12.2226, -32.7626, -79.1459, 1.55", "-12.1601, -32.8262, -79.3378, 1.77", "-11.8046, -33.0382, -80.3277, 0.22", "-11.6902, -33.0834, -80.6352, 0.22", "-11.41, -33.1702, -81.3522, 1.77", "-10.1063, -33.4644, -84.5446, 1.25", "-9.52818, -33.5605, -85.9028, 0.81", "-9.11547, -33.6204, -86.8452, 0.15", "-8.93099, -33.6408, -87.2552, 0.37", "-8.60316, -33.6854, -87.9275, 0.22", "-8.13671, -33.7513, -88.7544, 1.77", "-7.99124, -33.7805, -88.9642, 1.84", "-6.85958, -34.0337, -90.5795, 0.96", "-6.47824, -34.1212, -91.1055, 1.4", "-5.74243, -34.2477, -92.1322, 0.22", "-5.58914, -34.2612, -92.3384, 0.22", "-5.53046, -34.2608, -92.4061, 0.22", "-5.07572, -34.2258, -92.8509, 0.22", "-4.79923, -34.1896, -93.0296, 1.18", "-4.76185, -34.1853, -93.0488, 1.18", "-4.44452, -34.1464, -93.1892, 1.18", "-3.52981, -34.086, -93.5931, 0.29", "-3.14031, -34.069, -93.7732, 0.44", "-2.82336, -34.0536, -93.9205, 0.44", "-2.31412, -34.0261, -94.1478, 0.22", "-1.71465, -33.9915, -94.4049, 1.47", "-1.40586, -33.9763, -94.5301, 1.62", "-0.537214, -33.9354, -94.8437, 0.22", "-0.0826016, -33.9134, -95.0236, 0.22", "0.17037, -33.914, -95.1367, 0.59", "0.202699, -33.9195, -95.1532, 0.59", "0.347596, -33.9891, -95.2622, 0.59", "0.401665, -34.0426, -95.3578, 0.59", "0.567556, -34.3404, -95.864, 0.15", "0.641202, -34.5084, -96.1469, 1.18", "0.718895, -34.7082, -96.4916, 1.18", "0.899402, -35.2402, -97.4299, 0.44", "1.09479, -36.0067, -98.7656, 0.22", "1.11348, -36.1733, -99.065, 0.22", "1.09634, -36.2775, -99.2974, 0.74", "1.08041, -36.3015, -99.3652, 0.74", "0.772281, -36.5382, -100.218, 0.22", "0.623168, -36.6233, -100.554, 0.22", "0.0479269, -36.8727, -101.678, 1.47", "-0.689674, -37.1155, -102.993, 1.33", "-1.48719, -37.341, -104.36, 0.59", "-2.04488, -37.4729, -105.277, 0.44", "-2.23517, -37.5046, -105.568, 0.44", "-2.72512, -37.5663, -106.3, 0.22", "-3.03297, -37.6006, -106.704, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.5843, -26.0184, -45.9663, 2.87", "-11.2259, -26.325, -46.1998, 2.87", "-12.3491, -26.8812, -46.5277, 2.73", "-14.2626, -27.8391, -47.0082, 0.29", "-14.5127, -27.962, -47.0828, 0.29", "-15.9641, -28.6616, -47.5243, 0.29", "-17.429, -29.3259, -47.972, 1.55", "-18.1167, -29.6033, -48.1517, 2.21", "-18.4333, -29.7143, -48.2414, 2.21", "-20.5988, -30.4071, -49.0, 0.22", "-21.3362, -30.6279, -49.3328, 0.22", "-21.9911, -30.8094, -49.6937, 0.66", "-22.2517, -30.8666, -49.8452, 0.81", "-23.8079, -31.1554, -50.7213, 0.22", "-24.4294, -31.2633, -51.0373, 0.22", "-25.5432, -31.458, -51.5457, 1.84", "-26.1132, -31.568, -51.8132, 2.21", "-27.0247, -31.7861, -52.3103, 2.06", "-28.5115, -32.1943, -53.2361, 0.29", "-29.1307, -32.4056, -53.7019, 0.29", "-30.3552, -32.8977, -54.7859, 1.69", "-30.8499, -33.1325, -55.2814, 1.99", "-32.5228, -34.0425, -57.1319, 1.11", "-33.2116, -34.509, -57.9988, 1.11", "-34.2244, -35.388, -59.5104, 0.29", "-34.5332, -35.7144, -60.0412, 0.29", "-34.6169, -35.8298, -60.2166, 0.52", "-34.8122, -36.1795, -60.6986, 0.52", "-34.9532, -36.6324, -61.298, 0.22", "-34.9992, -36.9298, -61.7112, 0.22", "-35.0014, -36.968, -61.7649, 0.22", "-35.0167, -38.7046, -64.1529, 2.06", "-35.0233, -39.1724, -64.7715, 2.36", "-35.1351, -40.6581, -66.691, 0.22", "-35.1786, -41.0119, -67.169, 0.22", "-35.2338, -41.4289, -67.7059, 0.22", "-35.3197, -42.2336, -68.6693, 1.33", "-35.3754, -42.8058, -69.361, 1.47", "-35.5397, -43.9373, -70.8013, 0.22", "-35.8655, -45.049, -72.4971, 0.22", "-36.0391, -45.5516, -73.3281, 1.4", "-36.1255, -45.789, -73.7532, 1.69", "-36.6393, -47.3569, -76.7071, 0.22", "-36.8217, -47.9902, -78.011, 1.92", "-37.2763, -49.49, -81.5974, 0.29", "-37.3833, -49.7951, -82.4569, 0.29", "-37.397, -49.8391, -82.5929, 0.29", "-37.4778, -50.1757, -83.5744, 0.74", "-37.5508, -50.8042, -85.2465, 1.55", "-37.5719, -52.3424, -89.0552, 1.47", "-37.456, -53.797, -92.3306, 0.29", "-37.4291, -54.1786, -93.1731, 0.29", "-37.3826, -54.8899, -94.6306, 1.4", "-37.2974, -56.1563, -96.9578, 1.69", "-37.2525, -56.4684, -97.4559, 1.69", "-36.7518, -58.2862, -100.033, 0.22", "-36.7254, -58.364, -100.148, 0.22", "-36.5985, -58.6901, -100.674, 0.22", "-36.3869, -59.1728, -101.513, 1.47", "-35.8291, -60.4253, -103.644, 0.22", "-35.6811, -60.7418, -104.179, 1.4", "-35.1805, -61.7359, -106.03, 1.4", "-34.7755, -62.5098, -107.581, 0.22", "-34.373, -63.2925, -109.483, 1.62", "-34.3618, -63.3152, -109.546, 1.62", "-34.2813, -63.5433, -110.206, 1.62", "-34.073, -64.6544, -113.509, 0.15", "-34.0653, -64.8874, -114.223, 1.4", "-34.3127, -66.0372, -118.09, 1.11", "-34.3193, -66.0548, -118.144, 1.11", "-34.6382, -66.7006, -119.905, 0.37", "-34.8217, -66.9981, -120.575, 0.74", "-34.9578, -67.1978, -120.918, 0.88", "-35.8416, -68.5429, -122.889, 0.22", "-36.1892, -69.2188, -123.554, 1.33", "-36.4138, -69.9061, -124.091, 1.11", "-36.5991, -70.773, -124.689, 0.22", "-36.6065, -70.8278, -124.724, 0.22", "-36.6597, -71.8048, -125.237, 0.22", "-36.6036, -72.8726, -125.488, 0.22", "-36.3755, -74.4532, -125.781, 1.84" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "17.904, 99.3118, -91.5211, 0.22", "17.9638, 101.411, -91.5674, 0.22", "17.9724, 101.57, -91.5703, 0.22", "18.0745, 102.797, -91.6745, 0.22", "18.2035, 103.722, -91.8801, 0.66", "18.2313, 103.86, -91.9233, 0.66", "18.3469, 104.325, -92.1347, 0.66", "18.3722, 104.388, -92.1777, 0.66", "18.7227, 105.107, -92.7782, 0.22", "19.2682, 105.967, -93.6678, 0.88", "19.4857, 106.248, -93.9856, 0.88", "20.2411, 107.08, -94.9661, 0.29", "20.3159, 107.146, -95.0372, 0.29", "20.9769, 107.678, -95.4883, 0.29", "22.0086, 108.442, -95.9233, 1.03", "22.4887, 108.788, -96.0493, 1.25", "23.7372, 109.702, -96.2675, 0.37", "25.4097, 110.892, -96.4469, 0.22", "26.7916, 111.886, -96.5506, 0.22", "27.9587, 112.742, -96.5698, 0.81", "28.9388, 113.486, -96.4994, 0.22", "29.4006, 113.857, -96.4371, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "17.904, 99.3118, -91.5211, 0.81", "18.9938, 100.617, -92.6547, 0.81", "19.6512, 101.249, -93.2547, 0.22", "20.2031, 101.739, -93.7055, 0.22", "20.791, 102.257, -94.1544, 1.18", "21.2459, 102.645, -94.462, 1.18", "21.2976, 102.689, -94.497, 1.18", "22.4342, 103.637, -95.1292, 0.29", "22.9837, 104.05, -95.4108, 0.44", "23.2335, 104.249, -95.6594, 0.44", "23.8334, 104.818, -96.5199, 0.22", "24.1902, 105.22, -97.1661, 1.18", "24.2969, 105.448, -97.6804, 1.47", "24.3063, 105.604, -98.1157, 1.47", "24.0449, 107.06, -102.277, 0.52", "23.952, 107.288, -102.998, 0.81", "23.8681, 107.426, -103.467, 0.81", "22.6073, 109.006, -109.267, 1.11", "21.6272, 109.896, -112.882, 0.59", "21.1252, 110.218, -114.365, 0.29", "20.2399, 110.551, -116.328, 0.74", "20.1966, 110.557, -116.405, 0.74", "19.6369, 110.5, -117.064, 0.81", "18.3249, 109.941, -117.571, 0.29", "17.3705, 109.422, -117.739, 0.29", "15.9729, 108.588, -117.894, 0.29", "14.5407, 107.734, -117.938, 0.29", "13.0262, 106.829, -117.975, 0.22", "12.0816, 106.267, -117.984, 0.59", "11.8138, 106.091, -117.976, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.390504, 87.9531, -33.8149, 0.22", "-1.54998, 89.1157, -32.8386, 0.22", "-1.83562, 89.3893, -32.6377, 0.66", "-2.38438, 89.9074, -32.2926, 0.22", "-2.94428, 90.4253, -31.9655, 1.4", "-3.24569, 90.6908, -31.7904, 1.4", "-4.43157, 91.7244, -31.1075, 0.22", "-5.09402, 92.2638, -30.7862, 0.22", "-6.07004, 93.0391, -30.346, 1.47", "-6.27473, 93.2033, -30.2603, 1.84", "-7.62885, 94.3139, -29.7485, 0.22", "-7.85259, 94.5007, -29.6703, 0.52", "-8.5883, 95.1393, -29.4658, 0.15", "-9.03233, 95.5437, -29.3596, 0.88", "-9.56288, 96.0554, -29.2672, 0.22", "-10.26, 96.7678, -29.1877, 1.84", "-10.5036, 97.0272, -29.1807, 1.99", "-11.619, 98.2156, -29.1569, 0.22", "-11.9531, 98.5808, -29.1523, 1.11", "-12.2368, 98.8936, -29.1419, 1.25", "-12.9438, 99.6481, -29.086, 0.15", "-13.3263, 100.046, -29.0282, 0.44", "-13.4772, 100.199, -28.9959, 0.44", "-13.5233, 100.245, -28.9824, 0.44", "-14.2709, 100.982, -28.7069, 0.15", "-14.7567, 101.479, -28.4978, 0.15", "-14.7882, 101.514, -28.4819, 0.15", "-15.0236, 101.793, -28.3614, 0.66", "-15.3174, 102.163, -28.2256, 0.81", "-15.9196, 102.956, -27.9878, 0.15", "-16.1509, 103.274, -27.9157, 0.15", "-16.6702, 104.025, -27.7844, 1.47", "-16.9138, 104.389, -27.7316, 1.47", "-17.3657, 105.083, -27.6488, 0.22", "-17.5655, 105.4, -27.6353, 0.52", "-17.6561, 105.548, -27.6418, 0.52", "-18.022, 106.142, -27.6948, 0.15", "-18.4558, 106.834, -27.8261, 1.33", "-18.6143, 107.082, -27.8851, 1.69", "-19.1144, 107.843, -28.1144, 0.22", "-19.3659, 108.228, -28.2388, 0.59", "-19.5804, 108.554, -28.3535, 0.59", "-19.9694, 109.127, -28.5856, 0.15", "-20.6062, 110.039, -29.0062, 1.33", "-20.8719, 110.417, -29.185, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.390504, 87.9531, -33.8149, 0.29", "-1.60031, 88.9163, -34.9517, 0.29", "-2.07069, 89.2872, -35.3613, 0.52", "-2.80419, 89.8663, -35.944, 0.74", "-3.0975, 90.0967, -36.1562, 0.88", "-3.88475, 90.7299, -36.6877, 0.15", "-4.17816, 90.9791, -36.8748, 0.15", "-4.56241, 91.3467, -37.0751, 1.33", "-4.94057, 91.739, -37.2427, 1.77", "-5.67076, 92.5277, -37.4969, 0.22", "-5.97258, 92.8699, -37.5815, 0.22", "-6.36439, 93.3742, -37.6655, 0.88", "-6.53978, 93.6299, -37.7066, 0.88", "-6.94731, 94.3001, -37.8071, 0.15", "-7.19001, 94.8184, -37.8527, 0.15", "-7.32553, 95.2446, -37.8626, 0.15", "-7.5077, 96.1054, -37.8622, 2.14", "-7.53831, 96.4043, -37.855, 2.14", "-7.53742, 96.4618, -37.8524, 2.14", "-7.35716, 97.6859, -37.7686, 0.15", "-7.24525, 98.0735, -37.7429, 0.15", "-7.11723, 98.4006, -37.7384, 0.15", "-6.95735, 98.7403, -37.7488, 0.66", "-6.75278, 99.1412, -37.7943, 0.81", "-6.71285, 99.2111, -37.8093, 0.81", "-6.35656, 99.7348, -38.0691, 0.15", "-6.01219, 100.262, -38.3772, 0.88", "-5.98855, 100.299, -38.4046, 0.88", "-5.87443, 100.491, -38.5568, 0.88", "-5.82918, 100.577, -38.6237, 0.88", "-5.47808, 101.366, -39.18, 0.15", "-5.37218, 101.663, -39.3772, 0.15", "-5.19109, 102.287, -39.7663, 1.11", "-5.09192, 102.751, -40.0434, 1.11", "-4.89293, 104.094, -40.8, 0.22", "-4.85793, 104.547, -41.0719, 0.22", "-4.8525, 105.239, -41.4942, 1.47", "-4.88129, 105.746, -41.8099, 1.69", "-5.12164, 107.111, -42.9308, 0.15", "-5.23295, 107.458, -43.2972, 0.88", "-5.67915, 108.415, -44.4897, 0.22", "-5.77135, 108.584, -44.7253, 1.55", "-5.97359, 108.912, -45.2092, 1.84", "-7.10719, 110.586, -47.7724, 0.59", "-7.47159, 111.054, -48.5154, 0.22", "-7.62995, 111.257, -48.8173, 0.74", "-8.12347, 111.885, -49.6328, 0.15", "-8.42629, 112.277, -50.0801, 0.15", "-8.65521, 112.569, -50.3585, 0.81", "-8.86756, 112.819, -50.5287, 0.81", "-9.47062, 113.439, -51.0995, 0.15", "-9.74641, 113.686, -51.4462, 0.96", "-10.0118, 113.9, -51.8113, 0.96", "-10.7689, 114.473, -52.9035, 0.22", "-11.1818, 114.779, -53.5076, 1.4", "-12.077, 115.445, -54.8463, 1.69", "-13.1115, 116.232, -56.3984, 0.74", "-13.5248, 116.557, -57.0162, 0.22", "-13.7347, 116.73, -57.3089, 0.59", "-14.0734, 117.03, -57.673, 0.22", "-14.1073, 117.064, -57.6923, 0.22", "-14.489, 117.493, -57.7092, 0.22", "-14.7217, 117.784, -57.6505, 0.52", "-15.1894, 118.48, -57.4827, 0.15", "-15.6389, 119.274, -57.2643, 1.84", "-16.2088, 120.42, -56.9174, 0.15", "-16.3592, 120.751, -56.802, 0.29", "-16.3988, 120.858, -56.7628, 0.29", "-16.5784, 121.481, -56.5255, 0.15", "-16.6936, 122.024, -56.318, 0.74", "-16.7225, 122.207, -56.2579, 0.74", "-16.8639, 123.16, -55.9883, 0.22", "-17.0112, 124.014, -55.7582, 0.22", "-17.1447, 124.728, -55.5765, 1.69", "-17.2025, 125.031, -55.5066, 1.69", "-17.3351, 125.875, -55.3477, 0.22", "-17.3825, 126.241, -55.2912, 0.37", "-17.4453, 126.931, -55.221, 0.15", "-17.4589, 127.1, -55.2093, 0.37", "-17.5049, 127.719, -55.197, 0.15", "-17.5266, 128.241, -55.228, 0.74", "-17.5298, 128.347, -55.2415, 0.74", "-17.5355, 128.492, -55.2669, 0.74", "-17.5605, 129.223, -55.413, 0.15", "-17.5853, 129.741, -55.5198, 1.03", "-17.658, 130.808, -55.7094, 0.15", "-17.7374, 131.749, -55.8567, 1.99", "-17.7892, 132.138, -55.9089, 1.99", "-17.9669, 133.01, -56.0058, 0.22", "-18.118, 133.57, -56.0572, 0.81", "-18.3774, 134.341, -56.1068, 0.22", "-18.3972, 134.387, -56.1084, 0.22", "-18.6906, 134.99, -56.1375, 0.22", "-18.9864, 135.51, -56.1948, 0.22", "-19.2689, 135.952, -56.3007, 0.22", "-19.6323, 136.531, -56.5089, 0.22", "-19.8415, 136.901, -56.648, 1.03", "-19.9427, 137.106, -56.7225, 1.03", "-20.3315, 138.11, -57.0534, 0.22", "-20.6397, 138.947, -57.3299, 0.59", "-20.9175, 139.713, -57.5781, 0.22", "-21.2126, 140.605, -57.8652, 2.06", "-21.3212, 140.983, -57.9759, 1.69", "-21.5484, 142.004, -58.2348, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-38.5364, 83.5809, -8.24735, 0.22", "-39.1598, 84.7939, -8.75951, 0.22", "-39.5053, 85.3901, -9.04539, 0.66", "-39.7559, 85.8136, -9.25403, 0.81", "-40.5275, 87.0761, -9.86191, 0.22", "-41.025, 87.8566, -10.219, 0.66", "-41.3953, 88.3795, -10.4325, 0.96", "-42.3622, 89.608, -10.9033, 0.22", "-42.5917, 89.8868, -10.9969, 0.22", "-42.9054, 90.2777, -11.1061, 0.52", "-43.2343, 90.7448, -11.2115, 0.52", "-43.9978, 91.9997, -11.4625, 0.22", "-44.4775, 92.9019, -11.6487, 0.22", "-44.8598, 93.7572, -11.7728, 1.77", "-45.0505, 94.3103, -11.8186, 2.06", "-45.4967, 96.354, -11.8668, 0.22", "-45.5554, 96.8555, -11.8629, 0.59", "-45.572, 97.5797, -11.8302, 0.66", "-45.5471, 99.6031, -11.6641, 0.22", "-45.4775, 101.362, -11.4745, 0.22", "-45.3744, 103.161, -11.2482, 1.47", "-45.327, 103.819, -11.1469, 1.92", "-45.2096, 105.871, -10.861, 0.22", "-45.1859, 106.52, -10.7884, 0.22", "-45.1829, 107.339, -10.7399, 0.74", "-45.2037, 107.626, -10.7357, 0.74", "-45.3922, 108.885, -10.7338, 0.15", "-45.5895, 109.961, -10.7048, 0.15", "-45.7406, 110.671, -10.6797, 0.96", "-45.8181, 111.03, -10.6606, 1.33", "-45.8914, 111.346, -10.6423, 1.33", "-45.9112, 111.424, -10.6379, 1.33", "-46.3686, 112.865, -10.5548, 0.22", "-46.5511, 113.379, -10.5083, 0.81", "-46.7893, 113.978, -10.4423, 0.81", "-47.1632, 114.871, -10.3355, 0.22", "-47.3004, 115.175, -10.2982, 0.44", "-47.9371, 116.455, -10.1404, 0.22", "-48.1532, 116.834, -10.0919, 0.59", "-48.4565, 117.381, -9.99351, 0.59", "-48.8853, 118.185, -9.82518, 0.15", "-49.3471, 119.075, -9.61822, 0.15", "-49.7266, 119.823, -9.44136, 1.11", "-49.9628, 120.284, -9.32947, 1.62", "-50.789, 121.819, -8.95428, 0.15", "-51.0339, 122.257, -8.84202, 0.59", "-51.1461, 122.447, -8.79298, 0.59", "-51.5334, 123.13, -8.63473, 0.22", "-51.8554, 123.711, -8.51949, 0.22", "-52.033, 124.032, -8.47249, 0.59", "-52.2362, 124.397, -8.44751, 0.59", "-52.5675, 125.078, -8.4194, 0.22", "-52.9827, 126.11, -8.41439, 0.22", "-52.9827, 126.11, -8.41439, 0.66", "-53.0827, 126.641, -8.47555, 0.66", "-53.216, 127.565, -8.61067, 0.22", "-53.2947, 128.274, -8.73197, 1.4", "-53.3327, 128.701, -8.8134, 1.77", "-53.4978, 130.759, -9.23111, 0.22", "-53.5467, 131.407, -9.36509, 0.96", "-53.5873, 131.968, -9.48241, 0.96", "-53.6634, 132.951, -9.68833, 0.22", "-53.7817, 134.235, -9.9463, 0.22", "-53.8775, 135.144, -10.121, 0.88", "-53.9324, 135.638, -10.2119, 1.25", "-54.0184, 136.499, -10.3679, 0.22", "-54.0308, 136.645, -10.3915, 0.22", "-54.0337, 137.19, -10.4553, 0.22", "-53.9925, 137.645, -10.4965, 0.22", "-53.7956, 138.728, -10.5539, 0.22", "-53.6901, 139.175, -10.5711, 0.81", "-53.4869, 139.809, -10.5469, 0.81", "-53.008, 141.126, -10.4387, 0.15", "-52.6226, 142.068, -10.3313, 0.15", "-51.9977, 143.495, -10.1208, 1.4", "-51.8405, 143.85, -10.0577, 1.84", "-51.0233, 145.752, -9.70126, 0.22", "-50.9964, 145.816, -9.68925, 0.22", "-50.9001, 146.058, -9.64059, 0.22", "-50.8762, 146.123, -9.62827, 0.22", "-50.6233, 146.929, -9.50291, 0.22", "-50.3317, 147.953, -9.40198, 0.88", "-50.3081, 148.029, -9.40007, 0.88", "-50.1944, 148.336, -9.39659, 1.03", "-49.6363, 149.707, -9.39797, 0.22", "-49.0011, 151.149, -9.4238, 1.55", "-48.7067, 151.754, -9.42288, 1.92", "-47.8502, 153.466, -9.40753, 0.22", "-47.6143, 153.932, -9.39872, 0.22", "-47.4089, 154.325, -9.38805, 0.52", "-47.2155, 154.647, -9.37561, 0.52", "-46.5089, 155.759, -9.33752, 0.22", "-46.3052, 156.069, -9.3053, 0.59", "-46.1019, 156.368, -9.25463, 0.59", "-46.0344, 156.468, -9.23882, 0.59", "-45.4385, 157.322, -9.13775, 0.22", "-45.4016, 157.382, -9.13331, 0.22", "-44.8914, 158.307, -9.11639, 0.22", "-44.8671, 158.362, -9.11618, 0.22", "-44.5468, 159.353, -9.14576, 0.88", "-44.4274, 159.871, -9.17743, 1.47", "-44.2403, 161.253, -9.27931, 0.22", "-44.2357, 161.312, -9.28367, 0.22", "-44.1986, 162.543, -9.39528, 0.22", "-44.1578, 163.607, -9.52149, 0.88", "-44.1383, 163.981, -9.57999, 1.33", "-44.0509, 165.118, -9.79939, 0.15", "-44.0112, 165.541, -9.90015, 0.15", "-43.8917, 166.647, -10.1704, 0.15", "-43.6703, 168.309, -10.6018, 1.77", "-43.4215, 169.905, -11.046, 0.22", "-43.2885, 170.702, -11.2881, 0.22", "-43.1961, 171.199, -11.4645, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-38.5364, 83.5809, -8.24735, 0.22", "-39.621, 84.4325, -9.1694, 0.22", "-39.65, 84.4598, -9.20793, 0.22", "-39.8844, 84.7311, -9.59743, 0.22", "-40.1636, 85.0907, -10.1177, 1.11", "-40.4108, 85.4148, -10.613, 1.92", "-40.5926, 85.6609, -10.9757, 2.14", "-41.3568, 86.9343, -12.6683, 0.22", "-41.5263, 87.1882, -13.1035, 0.22", "-41.5446, 87.2165, -13.1565, 0.22", "-41.8086, 87.6495, -13.9963, 0.22", "-41.9228, 87.9007, -14.4589, 0.88", "-42.0229, 88.1519, -14.8945, 0.88", "-42.5307, 89.6149, -17.148, 1.25", "-42.7186, 90.1542, -17.9278, 1.62", "-42.7296, 90.1907, -17.977, 1.62", "-42.9155, 90.996, -18.9839, 0.29", "-42.9659, 91.2438, -19.275, 0.66", "-42.9725, 91.2823, -19.3123, 0.66", "-43.0539, 91.6123, -19.6224, 0.66", "-43.0652, 91.6483, -19.6613, 0.66", "-43.3054, 92.3526, -20.5109, 0.22", "-43.6219, 93.0853, -21.5228, 2.14", "-43.7403, 93.3407, -21.8878, 2.8", "-44.5384, 94.9873, -24.2874, 0.37", "-44.8474, 95.6103, -25.2091, 0.37", "-45.319, 96.5555, -26.5922, 0.96", "-45.7515, 97.474, -27.9053, 0.22", "-45.9163, 97.8535, -28.4364, 1.11", "-45.9283, 97.8858, -28.4786, 1.11", "-45.9764, 98.0772, -28.6771, 1.11", "-46.1125, 98.7693, -29.3203, 0.15", "-46.2193, 99.4416, -29.8241, 0.15", "-46.2917, 100.011, -30.2171, 0.15", "-46.4252, 100.818, -30.7801, 1.99", "-46.5404, 101.325, -31.1205, 2.21", "-46.7718, 102.127, -31.6087, 0.74", "-47.0568, 102.933, -32.0259, 0.29", "-47.0755, 102.979, -32.0453, 0.29", "-47.2423, 103.372, -32.1929, 0.52", "-47.3881, 103.712, -32.3187, 0.52", "-47.5911, 104.199, -32.5181, 0.29", "-47.7129, 104.504, -32.6648, 0.74", "-47.8977, 104.981, -33.0091, 0.96", "-48.1952, 105.787, -33.6994, 0.22", "-48.43, 106.455, -34.3374, 1.55", "-48.5552, 106.806, -34.6872, 1.99", "-48.8122, 107.323, -35.3074, 1.99", "-49.4322, 108.265, -36.5617, 0.37", "-49.611, 108.367, -36.8675, 0.37", "-49.8293, 108.433, -37.2025, 0.37", "-50.1807, 108.495, -37.6889, 0.37", "-51.3865, 108.612, -39.2071, 1.92", "-51.7395, 108.627, -39.6097, 2.43", "-56.0764, 108.656, -44.137, 0.37", "-56.4469, 108.651, -44.5128, 0.44", "-56.915, 108.64, -44.9699, 0.29", "-57.3079, 108.632, -45.3344, 0.29", "-57.6538, 108.644, -45.6171, 0.66", "-57.9136, 108.662, -45.8166, 0.88", "-58.7754, 108.718, -46.4463, 0.66", "-59.2588, 108.708, -46.8783, 0.22", "-59.7208, 108.651, -47.3478, 1.55", "-60.3147, 108.567, -47.9816, 2.36", "-61.8586, 108.31, -49.6943, 2.36", "-64.0576, 107.881, -52.2094, 0.88", "-64.7385, 107.727, -53.0132, 0.52", "-66.1054, 107.355, -54.7287, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "10.077, -43.5321, 4.15827, 0.37", "11.9468, -44.1093, 3.90137, 0.37", "12.9166, -44.492, 3.77824, 0.29", "14.0642, -45.0348, 3.69244, 0.66", "15.1136, -45.5707, 3.6469, 1.33", "15.7796, -45.9229, 3.63076, 1.62", "16.5183, -46.3198, 3.62114, 1.62", "17.5838, -47.0155, 3.62575, 0.59", "18.5982, -47.762, 3.63111, 0.37", "19.1324, -48.1937, 3.59965, 0.74", "19.5172, -48.5323, 3.52356, 0.74", "19.5689, -48.5809, 3.5045, 0.74", "20.1213, -49.1623, 3.18726, 0.29", "20.881, -50.0716, 2.68515, 0.29", "21.5549, -50.9721, 2.31595, 1.92", "22.2854, -52.0049, 2.03472, 3.09", "22.4979, -52.3073, 1.99667, 3.61", "23.1471, -53.2101, 2.01709, 3.32", "24.2782, -54.7562, 2.26211, 0.88", "25.3632, -56.1606, 2.75953, 0.44", "25.9395, -56.8587, 3.10257, 0.44", "26.6928, -57.7194, 3.61717, 1.18", "27.3772, -58.4159, 4.08925, 1.69", "27.841, -58.8001, 4.40699, 1.69", "29.5519, -59.8839, 5.46556, 0.44", "30.2356, -60.244, 5.83192, 0.66", "30.2956, -60.2738, 5.86503, 0.66", "30.9234, -60.5818, 6.19873, 0.66", "31.8145, -61.1082, 6.75799, 0.29", "32.1039, -61.394, 7.02627, 0.29", "32.1915, -62.1018, 7.5047, 0.29", "32.1436, -62.9647, 8.0692, 0.81", "32.1139, -63.3895, 8.33403, 1.03", "32.0988, -64.6515, 9.17166, 0.37", "32.1479, -65.2471, 9.56002, 0.37", "32.1761, -65.368, 9.65314, 0.37", "32.5186, -66.2078, 10.3743, 0.52", "32.8357, -66.7718, 10.8846, 0.88", "33.6089, -67.8907, 12.0041, 0.37", "34.2067, -68.6461, 12.7357, 0.29", "35.1678, -69.8049, 13.7961, 1.77", "35.6079, -70.3695, 14.3139, 2.58", "35.6642, -70.4505, 14.3908, 2.58", "36.3085, -71.5818, 15.5434, 2.58", "36.8538, -72.7091, 16.6989, 0.37", "37.3631, -73.8401, 17.8884, 0.37", "37.852, -74.9398, 18.9978, 0.66", "38.2522, -75.8162, 19.8796, 0.74", "38.8116, -76.8986, 20.9153, 0.29", "39.1151, -77.4061, 21.3926, 0.29", "39.3297, -77.6871, 21.6598, 1.11", "39.6193, -77.9947, 21.918, 1.33", "40.2509, -78.558, 22.3213, 0.88", "41.2604, -79.3888, 22.8972, 0.29", "42.3305, -80.2036, 23.4622, 0.29", "43.3486, -80.9522, 24.0187, 2.65", "43.4009, -80.9919, 24.0516, 2.65", "44.0105, -81.4766, 24.511, 3.09", "44.9735, -82.3662, 25.5822, 0.37", "45.6474, -83.0793, 26.5016, 0.15", "46.0493, -83.5478, 27.1077, 0.15", "46.7475, -84.4345, 28.2755, 2.14", "47.2994, -85.2376, 29.3225, 2.58", "48.6715, -87.5449, 32.1922, 0.44", "48.918, -88.0647, 32.8401, 0.88", "48.9916, -88.2547, 33.0794, 0.88", "49.0082, -88.3063, 33.1431, 0.88", "49.3452, -89.4916, 34.4972, 0.22", "49.5491, -90.2537, 35.304, 0.22", "49.8018, -91.2361, 36.2729, 1.55", "50.1374, -92.5154, 37.5453, 2.14", "50.5126, -94.0233, 38.9805, 0.15", "50.6241, -94.526, 39.4314, 0.81", "50.8511, -95.5776, 40.3161, 0.15", "50.9911, -96.2812, 40.8851, 1.55", "51.0562, -96.6057, 41.1283, 1.77", "51.3472, -98.1873, 42.2514, 0.15", "51.6184, -99.8875, 43.5709, 0.15", "51.6568, -100.206, 43.8736, 0.52", "51.7316, -101.266, 45.0082, 0.22", "51.7601, -102.197, 46.1188, 0.74", "51.7623, -102.412, 46.3968, 0.74", "51.7427, -103.532, 48.0641, 0.59", "51.6382, -104.803, 50.227, 0.22", "51.6084, -104.989, 50.572, 0.52", "51.5039, -105.368, 51.3822, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.077, -43.5321, 4.15827, 0.88", "9.6202, -44.4213, 4.35998, 0.88", "9.33622, -44.9784, 4.48821, 0.37", "9.03069, -45.5886, 4.64206, 0.37", "8.57092, -46.4984, 4.8586, 0.37", "8.33064, -46.9998, 4.96729, 1.47", "8.06251, -47.6021, 5.03179, 2.14", "7.95528, -47.8574, 5.04309, 2.14", "7.72007, -48.5697, 4.99924, 1.03", "7.61212, -49.1762, 4.78984, 0.44", "7.56409, -49.7809, 4.46722, 0.37", "7.51897, -50.9449, 3.71847, 1.77", "7.50221, -51.2578, 3.49945, 2.14", "7.44752, -51.808, 3.10997, 2.21", "7.1902, -53.5507, 1.90073, 0.29", "7.08739, -54.07, 1.56832, 0.29", "6.86778, -54.8354, 1.13051, 0.29", "6.60378, -55.5505, 0.800597, 0.29", "6.26851, -56.319, 0.475856, 0.29", "5.90081, -57.0087, 0.248291, 0.88", "5.69505, -57.3281, 0.198622, 1.62", "5.19474, -58.054, 0.094369, 1.99", "5.05269, -58.271, 0.0749782, 1.99" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.6929, -104.599, 18.2903, 0.29", "-16.3339, -106.001, 17.6506, 0.29", "-16.0121, -106.341, 17.5118, 0.44", "-14.9321, -107.536, 17.1288, 0.22", "-14.1094, -108.522, 16.9417, 0.22", "-14.0663, -108.576, 16.9357, 0.22", "-13.863, -108.839, 16.9187, 0.66", "-13.5942, -109.229, 16.953, 0.66", "-12.9436, -110.143, 17.1236, 0.22", "-12.2773, -111.064, 17.3847, 1.4", "-12.0002, -111.446, 17.492, 1.84", "-11.9662, -111.493, 17.5047, 1.84", "-11.1736, -112.62, 17.7935, 0.29", "-10.4806, -113.726, 18.0651, 0.29", "-10.0349, -114.575, 18.2458, 0.29", "-9.64353, -115.524, 18.4083, 1.69", "-9.49266, -116.055, 18.501, 2.28", "-9.41883, -116.489, 18.57, 2.5", "-9.38277, -118.022, 18.8591, 0.29", "-9.46023, -119.098, 19.0788, 0.29", "-9.5777, -120.171, 19.3091, 0.29", "-9.72353, -121.391, 19.5901, 2.06", "-9.82301, -122.277, 19.8063, 2.65", "-9.98363, -124.167, 20.2971, 0.29", "-10.0278, -125.081, 20.5524, 0.22", "-10.0415, -125.8, 20.7705, 0.22", "-10.0324, -126.377, 20.945, 0.88", "-10.0094, -126.791, 21.065, 1.18", "-9.97574, -127.13, 21.1655, 1.18", "-9.81024, -128.116, 21.4445, 0.22", "-9.71561, -128.583, 21.5953, 0.22", "-9.60454, -129.132, 21.8029, 0.22", "-9.49615, -129.612, 21.996, 1.25", "-9.35897, -130.064, 22.2138, 1.25", "-8.90556, -131.303, 22.8525, 0.22", "-8.57166, -131.947, 23.2071, 0.22", "-7.97544, -132.823, 23.6947, 1.11", "-7.66479, -133.2, 23.9046, 1.55", "-6.60388, -134.32, 24.5121, 0.22", "-5.84707, -134.971, 24.8472, 0.22", "-4.61215, -135.792, 25.221, 0.22", "-3.75997, -136.268, 25.4153, 1.69", "-3.41959, -136.418, 25.4582, 1.99", "-3.35271, -136.442, 25.4627, 1.99", "-1.89212, -136.832, 25.3509, 0.29", "-0.637415, -137.1, 25.1783, 0.29", "-0.567707, -137.113, 25.1642, 0.29", "0.697046, -137.351, 24.8894, 1.4", "1.36027, -137.467, 24.7284, 1.62", "3.61875, -137.823, 24.1042, 0.22", "3.68602, -137.831, 24.0805, 0.22", "4.64679, -137.91, 23.6721, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.6929, -104.599, 18.2903, 0.29", "-17.5993, -106.538, 18.6108, 0.29", "-17.5325, -107.805, 18.8169, 0.29", "-17.5019, -108.374, 18.9037, 0.74", "-17.4571, -109.402, 19.0397, 0.81", "-17.4311, -110.05, 19.1171, 1.11", "-17.3943, -110.979, 19.2143, 0.44", "-17.3648, -111.771, 19.2652, 0.29", "-17.3275, -112.738, 19.3178, 0.29", "-17.261, -114.105, 19.3805, 2.21", "-17.2191, -114.736, 19.3915, 2.73", "-17.0532, -116.48, 19.3749, 0.29", "-16.9704, -117.152, 19.347, 0.29", "-16.8508, -117.894, 19.3061, 0.81", "-16.8201, -118.043, 19.2958, 0.96", "-16.56, -119.035, 19.2352, 0.22", "-16.3091, -119.899, 19.1963, 0.22", "-16.1373, -120.436, 19.1858, 1.33", "-16.0054, -120.902, 19.2072, 1.62", "-15.989, -120.976, 19.2143, 1.62", "-15.8079, -122.033, 19.3743, 0.29", "-15.6911, -122.795, 19.53, 0.22", "-15.5796, -123.499, 19.696, 0.22", "-15.4507, -124.268, 19.8917, 1.11", "-15.3487, -124.872, 20.0527, 1.47", "-15.1967, -125.95, 20.4079, 0.22", "-15.1301, -126.688, 20.7082, 0.22", "-15.086, -127.44, 21.0567, 0.74", "-15.0927, -127.648, 21.1606, 0.74", "-15.0995, -127.706, 21.1914, 0.74", "-15.497, -129.462, 22.1983, 0.22", "-15.7964, -130.448, 22.7816, 1.99", "-15.9153, -130.786, 22.9813, 1.99", "-16.4886, -132.221, 23.8935, 0.22", "-17.0952, -133.656, 24.8451, 0.22", "-17.5526, -134.678, 25.5326, 1.84", "-17.6418, -134.867, 25.66, 1.99", "-17.7035, -134.994, 25.7489, 1.99", "-18.6116, -136.831, 27.1017, 0.22", "-18.8643, -137.35, 27.5126, 0.96", "-19.2787, -138.169, 28.1852, 0.22", "-19.4487, -138.521, 28.4831, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-36.3755, -74.4532, -125.781, 0.29", "-35.5938, -75.5832, -125.919, 0.29", "-34.7553, -76.8357, -126.099, 0.22", "-34.48, -77.2922, -126.165, 0.52", "-34.2746, -77.7005, -126.232, 0.52", "-33.864, -78.6537, -126.392, 0.22", "-33.5407, -79.4629, -126.528, 0.22", "-33.3326, -80.1581, -126.657, 0.81", "-33.1584, -80.8197, -126.782, 1.11", "-32.8804, -82.0087, -126.978, 0.22", "-32.7353, -82.7371, -127.082, 0.22", "-32.6045, -83.5657, -127.18, 0.22", "-32.5315, -84.1799, -127.26, 1.11", "-32.3797, -85.4395, -127.436, 0.22", "-32.1602, -86.9614, -127.658, 0.22", "-32.0063, -87.8382, -127.788, 1.33", "-31.9345, -88.1559, -127.849, 1.47", "-31.4829, -89.8876, -128.249, 0.22", "-31.2211, -90.6288, -128.467, 1.11", "-30.9882, -91.1372, -128.657, 1.47", "-30.7257, -91.6044, -128.862, 1.47", "-29.8148, -92.9478, -129.521, 0.15", "-29.7767, -92.9942, -129.546, 0.15", "-28.9528, -93.7094, -130.038, 0.88", "-28.9065, -93.7465, -130.069, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-36.3755, -74.4532, -125.781, 1.69", "-37.5116, -75.3522, -126.036, 1.69", "-38.7148, -76.0426, -126.4, 0.22", "-38.7747, -76.0721, -126.419, 0.22", "-39.9077, -76.595, -126.782, 0.22", "-40.8404, -77.0136, -127.137, 0.88", "-41.6879, -77.3872, -127.485, 1.11", "-43.1162, -77.8705, -128.12, 0.22", "-43.693, -78.0235, -128.38, 0.52", "-43.881, -78.0588, -128.467, 0.52", "-45.233, -78.1465, -129.2, 0.37", "-45.2932, -78.1488, -129.234, 0.29", "-45.9129, -78.1796, -129.545, 0.22", "-46.2359, -78.2058, -129.696, 0.37", "-46.9311, -78.2729, -130.066, 0.37", "-48.0452, -78.5326, -130.94, 0.29", "-48.8525, -78.8527, -131.701, 0.29", "-49.4938, -79.1915, -132.396, 0.22", "-50.3317, -79.8132, -133.464, 1.11", "-50.8785, -80.3182, -134.243, 1.33", "-52.4278, -81.8895, -136.607, 0.29", "-52.8313, -82.3637, -137.296, 0.59", "-52.8533, -82.3935, -137.342, 0.59", "-53.3788, -83.222, -138.615, 0.29", "-53.3992, -83.26, -138.668, 0.29", "-54.0368, -84.3648, -140.038, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-21.5484, 142.004, -58.2348, 0.22", "-20.717, 145.587, -62.1381, 0.22", "-20.4044, 146.793, -63.3957, 0.37", "-20.2234, 147.46, -64.0293, 0.15", "-20.06, 147.961, -64.5175, 0.44", "-19.6863, 149.1, -65.6372, 0.22", "-19.2372, 150.584, -67.1204, 1.25", "-18.7271, 152.449, -68.7634, 0.22", "-18.5218, 153.317, -69.5911, 1.03", "-18.0868, 155.486, -71.7648, 0.22", "-18.0177, 155.904, -72.1949, 0.22", "-17.8817, 157.109, -73.4078, 1.11", "-17.8653, 157.504, -73.7821, 1.4", "-17.9282, 159.332, -75.3241, 0.22", "-17.9599, 159.749, -75.6454, 0.59", "-18.1732, 161.746, -76.838, 0.22", "-18.2416, 162.476, -77.2096, 0.88", "-18.2967, 163.066, -77.426, 1.03", "-18.4764, 164.599, -77.8452, 0.22", "-18.5797, 165.379, -77.9695, 0.59", "-18.8065, 166.844, -78.124, 0.22", "-18.9548, 167.864, -78.1842, 0.22", "-19.1524, 169.624, -78.297, 1.47", "-19.1929, 170.131, -78.3267, 1.47", "-19.2275, 171.512, -78.4585, 0.22", "-19.2108, 172.203, -78.5667, 0.52", "-19.1106, 174.078, -78.9468, 0.22", "-19.0691, 174.623, -79.0757, 1.03", "-19.0374, 174.978, -79.1785, 1.03", "-18.7027, 178.792, -80.4267, 0.22", "-18.605, 179.955, -80.8232, 0.96", "-18.5604, 180.556, -81.0369, 0.96", "-18.557, 180.636, -81.0664, 0.96", "-18.4731, 182.687, -81.8763, 0.22", "-18.4244, 183.829, -82.3662, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-21.5484, 142.004, -58.2348, 0.22", "-22.2973, 142.224, -59.8852, 0.22", "-23.5189, 142.468, -62.5497, 0.15", "-24.4341, 142.604, -64.495, 1.4", "-25.183, 142.715, -66.0865, 1.4", "-26.1313, 142.855, -68.1021, 0.22", "-26.5038, 142.91, -68.8937, 0.22", "-26.9199, 142.931, -69.9194, 0.88", "-27.0555, 142.915, -70.2089, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-66.1054, 107.355, -54.7287, 0.66", "-69.1998, 106.171, -61.864, 0.66", "-69.6567, 106.098, -62.7927, 0.29", "-69.9344, 106.119, -63.2882, 0.22", "-70.4116, 106.221, -64.054, 0.22", "-70.8454, 106.35, -64.7014, 1.03", "-71.2337, 106.479, -65.2286, 1.47", "-72.2296, 107.215, -65.759, 0.88", "-73.1735, 107.857, -66.2705, 0.22", "-73.4601, 107.998, -66.4372, 0.29", "-73.5447, 108.02, -66.4819, 0.29", "-74.1889, 108.098, -66.799, 0.15", "-74.9314, 108.096, -67.1669, 0.96", "-75.6257, 108.04, -67.4838, 1.4", "-77.009, 107.88, -68.2677, 0.22", "-77.9713, 107.791, -68.9314, 0.22", "-78.7616, 107.741, -69.6715, 0.74", "-79.8234, 107.71, -70.8361, 0.22", "-80.1929, 107.709, -71.2901, 0.96", "-81.4643, 107.752, -73.0475, 1.33", "-82.0168, 107.814, -73.8508, 1.84", "-83.9658, 108.103, -76.8781, 0.88", "-84.2497, 108.144, -77.3185, 1.03", "-84.2945, 108.15, -77.3834, 1.03", "-85.8387, 108.325, -79.4886, 0.22", "-86.7215, 108.408, -80.5329, 1.33", "-88.9276, 108.546, -82.7974, 0.22", "-89.8759, 108.591, -83.5925, 1.33", "-90.9362, 108.593, -84.3788, 0.22", "-90.9865, 108.591, -84.4103, 0.22", "-92.0068, 108.437, -84.8568, 0.22", "-92.9569, 108.19, -85.1424, 1.4", "-93.5278, 108.006, -85.185, 1.84", "-94.2793, 107.69, -85.1921, 1.33", "-95.2019, 107.216, -85.1929, 0.81", "-96.0114, 106.743, -85.1922, 0.22", "-96.745, 106.203, -85.1949, 1.4", "-97.139, 105.874, -85.1954, 1.69", "-97.3793, 105.663, -85.1908, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-66.1054, 107.355, -54.7287, 0.29", "-68.413, 108.645, -57.5946, 0.29", "-69.0509, 109.049, -58.3571, 0.22", "-69.3656, 109.283, -58.7449, 0.96", "-69.5767, 109.453, -59.0091, 1.18", "-70.3855, 110.189, -60.0336, 0.22", "-70.6457, 110.444, -60.3658, 0.52", "-70.7688, 110.624, -60.4992, 0.52", "-71.5985, 111.877, -61.3245, 0.22", "-71.6289, 111.924, -61.3503, 0.22", "-72.0037, 112.543, -61.6171, 0.22", "-72.0324, 112.595, -61.6313, 0.22", "-72.7385, 113.827, -61.8361, 0.22", "-72.7693, 113.88, -61.8392, 0.22", "-73.4207, 114.975, -61.8893, 0.22", "-73.4511, 115.028, -61.8951, 0.22", "-73.7673, 115.588, -61.9845, 0.44", "-74.4285, 116.841, -62.2326, 0.15", "-75.2658, 118.561, -62.7059, 0.15", "-75.9697, 120.096, -63.1974, 0.15", "-76.4561, 121.245, -63.6216, 0.15", "-76.7751, 122.035, -63.9608, 0.88", "-76.9816, 122.587, -64.2328, 1.25", "-77.4461, 124.028, -65.0467, 0.22", "-77.5475, 124.397, -65.2736, 0.59", "-77.643, 124.796, -65.5097, 0.59", "-77.9523, 126.124, -66.262, 0.22", "-78.064, 126.62, -66.5314, 0.22", "-78.1161, 126.843, -66.6482, 0.66", "-78.2161, 127.298, -66.8618, 0.74", "-78.4484, 128.68, -67.3761, 0.15", "-78.5539, 129.522, -67.5979, 0.15", "-78.558, 129.573, -67.6063, 0.15", "-78.6009, 130.235, -67.6961, 0.52", "-78.6204, 130.804, -67.7361, 0.52", "-78.6478, 132.483, -67.7358, 0.22", "-78.6592, 133.496, -67.6447, 1.03", "-78.6784, 134.056, -67.5625, 1.03", "-78.6858, 134.125, -67.5489, 1.03", "-78.8913, 135.114, -67.2855, 0.15", "-79.0476, 135.521, -67.1608, 0.52", "-79.2599, 135.853, -67.0553, 0.52", "-79.7014, 136.442, -66.8332, 0.22", "-80.2957, 137.143, -66.5525, 0.22", "-80.6049, 137.472, -66.4244, 0.22", "-81.0068, 137.826, -66.2988, 0.59", "-81.4811, 138.245, -66.1519, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.05269, -58.271, 0.0749782, 0.37", "4.64228, -59.2536, 0.576336, 0.37", "4.49001, -59.6557, 0.850527, 0.74", "4.16661, -60.586, 1.58901, 0.22", "4.01024, -61.0469, 1.98131, 0.81", "3.92407, -61.3128, 2.22579, 0.81", "3.62669, -62.2678, 3.16062, 1.47", "3.44842, -62.9194, 3.91284, 2.06", "3.30522, -63.6666, 4.86999, 0.22", "3.27368, -63.9188, 5.20575, 0.52", "3.22328, -64.3771, 5.83233, 0.22", "3.17762, -64.8014, 6.41131, 1.77", "3.11744, -65.3197, 7.09852, 2.43", "2.92669, -66.7562, 8.95316, 0.22", "2.905, -66.9326, 9.18104, 0.59", "2.872, -67.2001, 9.51773, 0.22", "2.84953, -67.3562, 9.70412, 0.44", "2.76138, -67.8705, 10.2917, 0.15", "2.65324, -68.2764, 10.7242, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.05269, -58.271, 0.0749782, 0.29", "3.78261, -59.7503, -0.473167, 0.29", "3.16656, -60.497, -0.747884, 0.29", "2.54695, -61.2595, -1.02355, 0.29", "1.79495, -62.1809, -1.26812, 0.29", "1.08557, -63.0378, -1.44366, 0.29", "0.545157, -63.693, -1.56009, 1.77", "-0.0810783, -64.4273, -1.60546, 2.21", "-0.295494, -64.6878, -1.61386, 2.36", "-1.27135, -65.9567, -1.61854, 0.74", "-1.79751, -66.5991, -1.60934, 0.29", "-2.37815, -67.2614, -1.61658, 0.29", "-3.18767, -68.1375, -1.64631, 1.92", "-3.68705, -68.6545, -1.6825, 2.28", "-4.06473, -69.0383, -1.7457, 2.28", "-5.17348, -70.1742, -2.05362, 0.29", "-6.06707, -71.1171, -2.33505, 0.22", "-6.36783, -71.4438, -2.44349, 0.96", "-6.55662, -71.6754, -2.56864, 1.18", "-7.13791, -72.4814, -3.11593, 0.22", "-7.28409, -72.7248, -3.37787, 0.22", "-7.4222, -72.9923, -3.7433, 0.22", "-7.62896, -73.3546, -4.3088, 0.66", "-8.39653, -74.5005, -6.37748, 1.62", "-8.50491, -74.624, -6.65063, 2.14", "-9.75632, -75.6553, -9.42316, 0.37", "-10.1884, -75.9178, -10.2627, 0.37", "-10.5846, -76.0827, -10.9652, 1.47", "-11.1632, -76.2226, -11.9305, 1.47", "-12.3295, -76.355, -13.662, 0.22", "-12.9132, -76.3713, -14.472, 1.25", "-13.1902, -76.356, -14.8118, 1.84", "-14.0995, -76.2935, -15.9619, 1.84", "-16.1, -76.2262, -18.5754, 0.22", "-16.4518, -76.2249, -19.0226, 0.88", "-16.9622, -76.2523, -19.7043, 0.88", "-17.4329, -76.32, -20.3666, 0.22", "-18.2044, -76.4979, -21.4342, 0.22", "-18.7414, -76.6784, -22.1761, 1.03", "-18.9165, -76.7548, -22.4284, 1.03", "-19.807, -77.2529, -24.0905, 0.22", "-20.0592, -77.4332, -24.6398, 0.22", "-20.5344, -77.8351, -25.7923, 1.25", "-21.0032, -78.246, -26.9111, 1.18", "-21.0295, -78.2728, -26.9772, 1.18", "-21.7765, -79.2213, -29.0859, 0.22", "-21.9429, -79.504, -29.6331, 1.18", "-22.0451, -79.7429, -30.0578, 1.18", "-22.1989, -80.6445, -31.4674, 0.22", "-22.2139, -80.8646, -31.7997, 0.22", "-22.2307, -81.3601, -32.6024, 0.66", "-22.2379, -81.6021, -32.9779, 0.81", "-22.2407, -81.8083, -33.3065, 0.81", "-22.2132, -82.7738, -34.9857, 0.52", "-22.1455, -83.827, -36.7822, 0.22", "-22.1127, -84.715, -38.2772, 0.22", "-22.1077, -85.2638, -39.1888, 2.21", "-22.134, -85.8021, -40.0561, 2.28", "-22.3891, -88.0348, -43.4636, 0.22", "-22.4923, -88.539, -44.1655, 0.22", "-22.7316, -89.4947, -45.3746, 0.22", "-22.7461, -89.5349, -45.4225, 0.22", "-23.0946, -90.1629, -46.1576, 0.37", "-23.4647, -90.5857, -46.5844, 0.88", "-24.3442, -91.2864, -47.1314, 1.69", "-24.873, -91.6652, -47.4474, 2.21", "-25.7107, -92.2536, -47.9168, 2.21", "-26.4196, -92.7816, -48.3414, 1.11", "-27.0114, -93.284, -48.7401, 0.37", "-27.0505, -93.3255, -48.7692, 0.37", "-27.723, -94.2286, -49.2849, 0.37", "-27.9848, -94.6354, -49.4651, 0.74", "-28.0611, -94.7675, -49.5073, 0.74", "-28.3956, -95.3638, -49.6668, 0.66", "-28.8721, -96.1764, -49.857, 0.66", "-29.2547, -96.7855, -50.0018, 0.52", "-30.0703, -97.9861, -50.2775, 0.22", "-30.6635, -98.8554, -50.4835, 1.47", "-31.0585, -99.4881, -50.6722, 1.92", "-31.3818, -100.028, -50.8623, 2.14", "-31.8477, -100.878, -51.2166, 0.74", "-32.1422, -101.506, -51.5115, 0.29", "-32.4251, -102.22, -51.9055, 0.29", "-32.9523, -103.677, -52.7576, 0.29", "-33.1283, -104.24, -53.0728, 1.33", "-33.3388, -104.956, -53.4587, 1.33", "-33.4216, -105.235, -53.593, 1.33", "-33.7815, -106.353, -54.1524, 0.29", "-34.0035, -106.923, -54.4355, 0.29", "-34.5115, -108.025, -54.9736, 0.29", "-34.5395, -108.086, -55.0052, 0.29", "-34.8996, -108.854, -55.4057, 0.29", "-35.4084, -109.879, -55.9596, 1.18", "-35.5526, -110.163, -56.1175, 1.33", "-36.1165, -111.303, -56.7655, 0.22", "-36.1453, -111.363, -56.7991, 0.22", "-36.4044, -111.998, -57.1171, 0.88", "-36.5326, -112.392, -57.2817, 0.88", "-36.8375, -113.682, -57.6682, 0.22", "-36.984, -114.414, -57.8672, 1.33", "-37.0556, -114.774, -57.9512, 1.77", "-37.2565, -115.689, -58.1626, 0.88", "-37.4515, -116.49, -58.3448, 0.22", "-37.703, -117.346, -58.5214, 0.59", "-38.1789, -118.67, -58.7561, 0.22", "-38.561, -119.623, -58.9113, 0.22", "-38.852, -120.281, -59.0065, 1.18", "-39.0563, -120.689, -59.0588, 1.18", "-39.6153, -121.68, -59.184, 0.15", "-39.9677, -122.26, -59.2658, 0.15", "-40.4491, -123.061, -59.375, 0.88", "-40.6414, -123.384, -59.4274, 1.11", "-41.1327, -124.224, -59.7043, 0.37", "-41.5807, -125.018, -60.0814, 0.22", "-41.8653, -125.593, -60.4229, 1.18", "-42.0638, -126.02, -60.7133, 1.18", "-42.0902, -126.075, -60.7564, 1.18", "-42.9386, -127.866, -62.2344, 0.22", "-42.9797, -127.951, -62.3085, 0.37", "-43.2964, -128.601, -62.9068, 0.15", "-43.4412, -128.888, -63.1657, 0.59", "-44.0443, -130.028, -64.121, 0.22", "-44.3391, -130.586, -64.5267, 1.03", "-44.4519, -130.8, -64.6529, 1.03", "-45.1708, -132.285, -65.4125, 0.22", "-45.3299, -132.63, -65.5648, 0.52", "-45.7497, -133.607, -65.8972, 0.22", "-45.9807, -134.184, -66.0348, 1.03", "-46.1313, -134.556, -66.1, 1.03", "-46.7279, -135.965, -66.3093, 0.15", "-46.9592, -136.471, -66.3618, 0.44", "-47.3846, -137.4, -66.4759, 0.15", "-47.5904, -137.86, -66.5399, 0.88", "-47.8358, -138.476, -66.6719, 0.88", "-48.2435, -139.699, -67.0058, 0.22", "-48.5382, -140.786, -67.5461, 0.22", "-48.6136, -141.063, -67.7395, 0.66", "-48.6847, -141.316, -67.923, 0.66", "-49.1753, -142.803, -69.0824, 0.37", "-49.3701, -143.355, -69.53, 1.25", "-50.2717, -145.997, -71.6446, 0.44", "-51.2998, -149.045, -74.0427, 0.15", "-51.6728, -150.13, -74.8531, 0.96", "-52.1225, -151.458, -75.7704, 0.29", "-52.253, -151.864, -76.0146, 0.52", "-52.7437, -153.727, -77.0255, 0.22", "-52.7917, -154.08, -77.1778, 0.66", "-52.8011, -154.716, -77.4931, 0.66", "-52.8389, -156.113, -78.299, 0.15", "-52.8994, -156.97, -78.8538, 0.15", "-53.0102, -158.051, -79.6178, 1.03", "-53.0556, -158.36, -79.864, 1.03", "-53.4502, -160.658, -81.8443, 0.22", "-53.716, -161.915, -83.0444, 0.22", "-54.0408, -163.009, -84.2188, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-97.3793, 105.663, -85.1908, 0.22", "-98.411, 104.845, -85.5178, 0.22", "-98.969, 104.418, -85.6927, 0.22", "-100.03, 103.603, -85.9988, 0.59", "-101.262, 102.659, -86.321, 0.15", "-101.598, 102.4, -86.4045, 0.81", "-102.191, 101.942, -86.552, 1.11", "-103.136, 101.236, -86.7663, 0.22", "-103.71, 100.792, -86.9012, 1.03", "-104.092, 100.479, -86.9906, 1.33", "-104.173, 100.42, -86.9961, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-97.3793, 105.663, -85.1908, 0.22", "-97.994, 106.481, -84.5277, 0.22", "-98.4831, 107.289, -83.7887, 0.22", "-98.7637, 107.774, -83.3347, 1.25", "-98.7825, 107.816, -83.2965, 1.25", "-99.2523, 109.082, -82.1995, 0.15", "-99.4415, 109.656, -81.7399, 0.15", "-99.7121, 110.975, -80.7327, 0.96", "-99.7846, 111.386, -80.4483, 1.18", "-99.9539, 112.458, -79.7298, 0.15", "-99.9611, 112.508, -79.6968, 0.15", "-100.049, 113.309, -79.1873, 0.15", "-100.206, 114.797, -78.2865, 0.15", "-100.329, 115.482, -77.9472, 0.66", "-100.389, 115.747, -77.8059, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-54.0408, -163.009, -84.2188, 0.22", "-55.9297, -163.202, -86.3876, 0.22", "-56.8274, -163.284, -87.313, 0.22", "-57.226, -163.345, -87.8033, 1.03", "-57.413, -163.377, -88.0331, 1.33", "-59.1956, -163.701, -90.2304, 0.22", "-60.4943, -163.91, -91.8635, 0.22", "-60.907, -163.962, -92.3843, 0.88", "-62.6405, -164.193, -94.7388, 0.22", "-63.675, -164.326, -96.0794, 0.22", "-63.7178, -164.334, -96.1284, 0.22", "-65.1162, -164.636, -97.5127, 0.22", "-65.1992, -164.659, -97.5909, 0.22", "-66.509, -165.087, -98.6585, 0.22", "-67.9369, -165.698, -99.649, 0.22", "-69.5011, -166.645, -100.75, 0.22", "-69.5543, -166.684, -100.786, 0.22", "-70.1588, -167.241, -101.166, 0.74", "-70.4844, -167.616, -101.387, 0.74", "-71.4896, -169.357, -102.302, 0.22", "-71.9857, -170.54, -102.937, 0.22", "-72.1576, -170.976, -103.171, 0.29", "-72.2403, -171.181, -103.267, 0.37", "-72.788, -172.563, -103.895, 0.15", "-73.7448, -174.965, -104.917, 0.15", "-73.7714, -175.03, -104.942, 0.15", "-74.6393, -176.949, -105.682, 0.15", "-76.64, -180.911, -107.164, 0.15", "-77.3674, -182.25, -107.674, 0.44", "-77.9811, -183.315, -108.069, 0.15", "-79.576, -185.95, -109.007, 0.15", "-80.5274, -187.508, -109.573, 0.37", "-81.4771, -189.017, -110.149, 0.15", "-82.5974, -190.52, -110.746, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-54.0408, -163.009, -84.2188, 0.22", "-54.3099, -165.295, -84.4452, 0.22", "-54.5308, -167.743, -84.7032, 0.22", "-54.7811, -170.515, -84.9954, 0.22", "-54.8463, -171.238, -85.0716, 1.33", "-54.9479, -172.363, -85.1901, 1.33", "-55.0907, -173.945, -85.3569, 0.22", "-55.1204, -174.331, -85.4018, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-104.173, 100.42, -86.9961, 0.22", "-105.474, 99.4128, -87.3709, 0.22", "-105.993, 99.0104, -87.5206, 0.59", "-106.827, 98.3644, -87.7609, 0.22", "-107.308, 97.9913, -87.8996, 0.66", "-107.369, 97.9441, -87.9172, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-104.173, 100.42, -86.9961, 0.15", "-103.566, 99.5391, -87.2544, 0.15", "-103.144, 98.9278, -87.4337, 0.29", "-102.97, 98.6751, -87.5078, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-55.1204, -174.331, -85.4018, 0.29", "-53.9947, -175.363, -85.7768, 0.29", "-53.1987, -176.093, -86.042, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-55.1204, -174.331, -85.4018, 0.22", "-56.1303, -175.395, -85.9529, 0.22", "-56.662, -175.986, -86.2492, 0.44", "-57.3159, -176.9, -86.6523, 0.15", "-58.0713, -178.023, -87.1318, 0.15", "-58.2825, -178.347, -87.2654, 0.81", "-58.4212, -178.566, -87.3523, 0.81", "-59.7724, -180.791, -88.1996, 0.15", "-61.3927, -183.778, -89.2341, 0.15", "-61.3927, -183.778, -89.2341, 0.37", "-61.6916, -184.482, -89.4549, 0.15", "-61.8288, -184.829, -89.5554, 0.81", "-61.9732, -185.227, -89.6627, 0.81", "-62.3107, -186.388, -89.9184, 0.15", "-62.4259, -186.798, -89.9921, 0.44", "-62.4749, -187.0, -90.0443, 0.44", "-62.6155, -187.646, -90.2352, 0.15", "-62.6812, -187.907, -90.3076, 0.66", "-62.7033, -187.985, -90.3282, 0.66", "-62.8176, -188.37, -90.4264, 0.66", "-63.5131, -190.753, -91.0386, 0.15", "-63.6618, -191.266, -91.1714, 0.44", "-64.5694, -194.459, -91.9951, 0.15", "-65.4243, -197.453, -92.7585, 0.15", "-65.4525, -197.55, -92.7825, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "axon_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_SBC_0e6ba49679_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, axon_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_52
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999992178869266)
    connect dend_23(0), soma_0(0.4999992178869266)
    connect dend_14(0), soma_0(0.4999992178869266)
    connect dend_11(0), soma_0(0.4999992178869266)
    connect dend_0(0), soma_0(0.4999992178869266)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.327285, 12.2563, -2.37682, 3.20394 ) }
    soma_0 { pt3dadd( -0.32997, 10.9888, -2.12879, 5.58325 ) }
    soma_0 { pt3dadd( -0.332655, 9.7213, -1.88076, 6.08709 ) }
    soma_0 { pt3dadd( -0.335339, 8.45379, -1.63272, 7.22603 ) }
    soma_0 { pt3dadd( -0.338024, 7.18628, -1.38469, 8.89261 ) }
    soma_0 { pt3dadd( -0.340709, 5.91877, -1.13666, 10.2823 ) }
    soma_0 { pt3dadd( -0.343394, 4.65126, -0.888622, 11.3086 ) }
    soma_0 { pt3dadd( -0.346078, 3.38375, -0.640589, 12.3784 ) }
    soma_0 { pt3dadd( -0.348763, 2.11624, -0.392555, 13.7451 ) }
    soma_0 { pt3dadd( -0.351448, 0.84873, -0.144521, 14.7054 ) }
    soma_0 { pt3dadd( -0.354133, -0.41878, 0.103512, 15.1673 ) }
    soma_0 { pt3dadd( -0.356817, -1.68629, 0.351546, 15.492 ) }
    soma_0 { pt3dadd( -0.359502, -2.9538, 0.599579, 15.6089 ) }
    soma_0 { pt3dadd( -0.362187, -4.22131, 0.847613, 15.0499 ) }
    soma_0 { pt3dadd( -0.364872, -5.48882, 1.09565, 14.3371 ) }
    soma_0 { pt3dadd( -0.367556, -6.75633, 1.34368, 13.225 ) }
    soma_0 { pt3dadd( -0.370241, -8.02384, 1.59171, 11.7728 ) }
    soma_0 { pt3dadd( -0.372926, -9.29135, 1.83975, 10.2754 ) }
    soma_0 { pt3dadd( -0.375611, -10.5589, 2.08778, 7.58879 ) }
    soma_0 { pt3dadd( -0.378295, -11.8264, 2.33581, 5.07363 ) }
    soma_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 2.91986 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.63702, -11.5065, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.63702, -11.5065, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.53397, -12.3743, 3.60229, 4.13 ) }
    dend_32 { pt3dadd( -1.3832, -13.6442, 4.04546, 3.76 ) }
    dend_32 { pt3dadd( -1.14476, -15.6523, 4.74632, 3.68 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0870214, -4.76153, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( -0.00289528, -4.77687, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.258352, -4.82826, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 1.31212, -5.0461, -15.444, 1.69 ) }
    dend_23 { pt3dadd( 2.84621, -5.41944, -15.3844, 1.69 ) }
    dend_23 { pt3dadd( 2.95279, -5.44996, -15.3935, 1.69 ) }
    dend_23 { pt3dadd( 4.62988, -6.0832, -15.7657, 1.69 ) }
    dend_23 { pt3dadd( 4.70865, -6.12437, -15.8019, 1.69 ) }
    dend_23 { pt3dadd( 5.70725, -7.04279, -17.041, 1.84 ) }
    dend_23 { pt3dadd( 5.59417, -7.8022, -18.797, 1.84 ) }
    dend_23 { pt3dadd( 4.71692, -8.52413, -21.4415, 1.99 ) }
    dend_23 { pt3dadd( 3.8536, -9.11121, -23.7377, 1.99 ) }
    dend_23 { pt3dadd( 2.83097, -9.67319, -26.1242, 1.99 ) }
    dend_23 { pt3dadd( 1.24376, -10.3933, -29.4598, 2.14 ) }
    dend_23 { pt3dadd( -0.545184, -11.0168, -32.7705, 2.43 ) }
    dend_23 { pt3dadd( -3.51845, -11.7546, -37.6749, 2.87 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.632978, 10.562, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.632978, 10.562, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 1.40715, 11.1853, -5.94898, 2.28 ) }
    dend_14 { pt3dadd( 2.20216, 11.8682, -6.23431, 2.21 ) }
    dend_14 { pt3dadd( 3.73192, 13.3677, -6.74065, 0.81 ) }
    dend_14 { pt3dadd( 5.47857, 15.3959, -7.28416, 0.81 ) }
    dend_14 { pt3dadd( 6.35228, 16.5134, -7.54343, 1.25 ) }
    dend_14 { pt3dadd( 7.37332, 18.0648, -7.78593, 1.99 ) }
    dend_14 { pt3dadd( 7.41805, 18.1569, -7.79259, 1.99 ) }
    dend_14 { pt3dadd( 7.83092, 19.6838, -7.76987, 2.14 ) }
    dend_14 { pt3dadd( 7.96189, 21.242, -7.6419, 2.14 ) }
    dend_14 { pt3dadd( 7.95755, 21.3441, -7.63358, 2.14 ) }
    dend_14 { pt3dadd( 7.78762, 23.1851, -7.53571, 1.84 ) }
    dend_14 { pt3dadd( 7.5503, 24.9421, -7.5684, 1.4 ) }
    dend_14 { pt3dadd( 7.11632, 27.3148, -7.75147, 0.81 ) }
    dend_14 { pt3dadd( 6.72845, 28.9109, -8.01844, 0.81 ) }
    dend_14 { pt3dadd( 6.13857, 30.931, -8.51151, 1.11 ) }
    dend_14 { pt3dadd( 6.11096, 31.0128, -8.53965, 1.11 ) }
    dend_14 { pt3dadd( 5.51856, 32.5273, -9.24286, 1.69 ) }
    dend_14 { pt3dadd( 4.82416, 34.1708, -10.1766, 1.77 ) }
    dend_14 { pt3dadd( 4.26909, 35.572, -11.1007, 1.18 ) }
    dend_14 { pt3dadd( 4.24982, 35.6448, -11.1511, 1.18 ) }
    dend_14 { pt3dadd( 4.16455, 36.9007, -11.9564, 0.88 ) }
    dend_14 { pt3dadd( 4.29974, 37.8906, -12.4942, 0.74 ) }
    dend_14 { pt3dadd( 4.36741, 38.0607, -12.5642, 0.74 ) }
    dend_14 { pt3dadd( 5.06859, 39.2417, -12.9031, 0.74 ) }
    dend_14 { pt3dadd( 6.09802, 40.7361, -13.1844, 0.88 ) }
    dend_14 { pt3dadd( 6.89066, 41.8235, -13.3321, 1.69 ) }
    dend_14 { pt3dadd( 7.44797, 42.5721, -13.3888, 1.92 ) }
    dend_14 { pt3dadd( 7.90952, 43.2316, -13.4296, 2.21 ) }
    dend_14 { pt3dadd( 8.38736, 43.9867, -13.4653, 1.84 ) }
    dend_14 { pt3dadd( 8.95035, 45.0677, -13.4945, 1.25 ) }
    dend_14 { pt3dadd( 9.46129, 46.3864, -13.5688, 0.81 ) }
    dend_14 { pt3dadd( 9.78969, 47.5733, -13.7164, 0.81 ) }
    dend_14 { pt3dadd( 9.94437, 48.7445, -13.9856, 1.11 ) }
    dend_14 { pt3dadd( 9.93723, 48.8369, -14.0298, 1.11 ) }
    dend_14 { pt3dadd( 9.74392, 49.6039, -14.6163, 1.11 ) }
    dend_14 { pt3dadd( 9.23154, 50.8966, -15.8611, 0.59 ) }
    dend_14 { pt3dadd( 8.97079, 51.4199, -16.4468, 0.59 ) }
    dend_14 { pt3dadd( 8.39044, 52.4383, -17.8027, 0.52 ) }
    dend_14 { pt3dadd( 7.2577, 54.281, -20.4727, 1.99 ) }
    dend_14 { pt3dadd( 6.7077, 55.1414, -21.7855, 3.02 ) }
    dend_14 { pt3dadd( 6.44535, 55.5253, -22.4262, 3.02 ) }
    dend_14 { pt3dadd( 6.40019, 55.5856, -22.5334, 3.02 ) }
    dend_14 { pt3dadd( 5.60927, 56.6342, -24.5072, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.77298, 7.82597, 1.3594, 1.47 ) }
    dend_11 { pt3dadd( 3.43885, 8.3463, 1.40725, 1.47 ) }
    dend_11 { pt3dadd( 4.79589, 9.33253, 1.65898, 1.25 ) }
    dend_11 { pt3dadd( 5.23672, 9.64255, 1.7575, 1.62 ) }
    dend_11 { pt3dadd( 6.06425, 10.1625, 1.94627, 1.92 ) }
    dend_11 { pt3dadd( 7.01725, 10.7232, 2.16504, 1.69 ) }
    dend_11 { pt3dadd( 8.44795, 11.4019, 2.57664, 0.88 ) }
    dend_11 { pt3dadd( 9.90668, 11.8529, 3.48216, 0.88 ) }
    dend_11 { pt3dadd( 9.96764, 11.8686, 3.55567, 0.88 ) }
    dend_11 { pt3dadd( 10.585, 12.0256, 4.66116, 0.81 ) }
    dend_11 { pt3dadd( 10.612, 12.0354, 4.74024, 0.81 ) }
    dend_11 { pt3dadd( 11.0834, 12.4603, 7.27217, 1.03 ) }
    dend_11 { pt3dadd( 11.3631, 13.4775, 11.6538, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 11.3078, 14.2388, 14.1192, 1.11 ) }
    dend_11 { pt3dadd( 11.2991, 14.277, 14.207, 1.11 ) }
    dend_11 { pt3dadd( 10.9697, 15.2701, 15.9595, 1.33 ) }
    dend_11 { pt3dadd( 10.5853, 16.3454, 17.2882, 1.99 ) }
    dend_11 { pt3dadd( 10.3083, 17.1039, 17.8668, 2.73 ) }
    dend_11 { pt3dadd( 10.1428, 17.7884, 18.2187, 2.65 ) }
    dend_11 { pt3dadd( 10.0195, 19.1992, 18.8805, 2.36 ) }
    dend_11 { pt3dadd( 10.0242, 19.2718, 18.9126, 2.36 ) }
    dend_11 { pt3dadd( 10.4623, 21.1784, 19.6757, 0.81 ) }
    dend_11 { pt3dadd( 10.9085, 22.3701, 20.151, 0.59 ) }
    dend_11 { pt3dadd( 11.9661, 24.5662, 20.9777, 0.44 ) }
    dend_11 { pt3dadd( 12.8501, 26.0304, 21.4402, 0.44 ) }
    dend_11 { pt3dadd( 13.7435, 27.2542, 21.6866, 1.18 ) }
    dend_11 { pt3dadd( 14.4766, 28.1297, 21.7965, 1.99 ) }
    dend_11 { pt3dadd( 15.2396, 28.9418, 21.948, 2.65 ) }
    dend_11 { pt3dadd( 15.6655, 29.3922, 22.0564, 2.65 ) }
    dend_11 { pt3dadd( 16.8539, 30.7152, 22.5068, 1.77 ) }
    dend_11 { pt3dadd( 17.9971, 32.031, 23.2265, 0.44 ) }
    dend_11 { pt3dadd( 19.1187, 33.3962, 24.1546, 0.44 ) }
    dend_11 { pt3dadd( 21.1053, 35.9748, 26.2718, 1.25 ) }
    dend_11 { pt3dadd( 21.6747, 36.7902, 27.0042, 2.43 ) }
    dend_11 { pt3dadd( 22.5968, 38.2572, 28.3625, 2.43 ) }
    dend_11 { pt3dadd( 23.305, 39.5259, 29.5972, 2.21 ) }
    dend_11 { pt3dadd( 23.8181, 40.5683, 30.5845, 1.25 ) }
    dend_11 { pt3dadd( 24.4075, 41.9254, 31.6551, 0.52 ) }
    dend_11 { pt3dadd( 24.8261, 42.9195, 32.2002, 0.52 ) }
    dend_11 { pt3dadd( 25.3366, 44.1259, 32.7174, 0.52 ) }
    dend_11 { pt3dadd( 25.3721, 44.209, 32.739, 0.52 ) }
    dend_11 { pt3dadd( 25.892, 45.3404, 32.9588, 0.88 ) }
    dend_11 { pt3dadd( 26.4369, 46.4351, 33.1327, 1.25 ) }
    dend_11 { pt3dadd( 26.9339, 47.3958, 33.2021, 1.69 ) }
    dend_11 { pt3dadd( 27.3057, 48.0695, 33.2649, 1.69 ) }
    dend_11 { pt3dadd( 27.3742, 48.1924, 33.2797, 1.69 ) }
    dend_11 { pt3dadd( 28.0465, 49.358, 33.4491, 1.69 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.16702, 10.657, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.16702, 10.657, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.59075, 11.4009, -2.43264, 1.4 ) }
    dend_0 { pt3dadd( -4.35664, 12.751, -1.25634, 1.4 ) }
    dend_0 { pt3dadd( -4.88226, 13.6683, -0.483848, 1.4 ) }
    dend_0 { pt3dadd( -5.34749, 14.4937, 0.19144, 1.69 ) }
    dend_0 { pt3dadd( -6.00877, 15.6607, 1.12589, 1.99 ) }
    dend_0 { pt3dadd( -6.72292, 16.915, 2.09364, 2.36 ) }
    dend_0 { pt3dadd( -7.41929, 18.134, 2.98788, 3.09 ) }
    dend_0 { pt3dadd( -8.11774, 19.2845, 3.74394, 3.32 ) }
    dend_0 { pt3dadd( -8.76941, 20.2983, 4.29533, 3.09 ) }
    dend_0 { pt3dadd( -9.36034, 21.1411, 4.61811, 2.43 ) }
    dend_0 { pt3dadd( -10.1109, 22.1271, 4.73849, 1.4 ) }
    dend_0 { pt3dadd( -10.5812, 22.7059, 4.71726, 1.33 ) }
    dend_0 { pt3dadd( -11.3335, 23.5666, 4.53752, 1.18 ) }
    dend_0 { pt3dadd( -12.0601, 24.3213, 4.25555, 1.4 ) }
    dend_0 { pt3dadd( -13.0473, 25.2385, 3.68109, 1.69 ) }
    dend_0 { pt3dadd( -14.1944, 26.2261, 2.79336, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 1.02029 ) }
    axon_0 { pt3dadd( -0.412752, -28.0939, 2.58385, 1.02029 ) }
    axon_0 { pt3dadd( -0.444525, -43.0938, 2.58385, 1.02029 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 55/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.14476, -15.6523, 4.74632, 1.99 ) }
    dend_38 { pt3dadd( -0.228669, -17.0954, 4.57206, 1.99 ) }
    dend_38 { pt3dadd( 0.734876, -18.4934, 4.46561, 1.62 ) }
    dend_38 { pt3dadd( 0.786065, -18.5651, 4.46185, 1.62 ) }
    dend_38 { pt3dadd( 1.96385, -20.1882, 4.45722, 1.18 ) }
    dend_38 { pt3dadd( 2.62781, -21.1161, 4.47572, 1.18 ) }
    dend_38 { pt3dadd( 3.4865, -22.3468, 4.51262, 1.18 ) }
    dend_38 { pt3dadd( 4.70795, -24.1297, 4.61558, 1.18 ) }
    dend_38 { pt3dadd( 5.73035, -25.6845, 4.73651, 1.47 ) }
    dend_38 { pt3dadd( 6.79084, -27.421, 4.89555, 2.21 ) }
    dend_38 { pt3dadd( 7.69309, -28.9599, 5.07107, 2.73 ) }
    dend_38 { pt3dadd( 8.55197, -30.5095, 5.25806, 2.8 ) }
    dend_38 { pt3dadd( 9.30077, -31.9486, 5.43558, 2.95 ) }
    dend_38 { pt3dadd( 10.023, -33.483, 5.61367, 2.95 ) }
    dend_38 { pt3dadd( 10.3554, -34.2692, 5.70273, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.14476, -15.6523, 4.74632, 1.18 ) }
    dend_33 { pt3dadd( -3.08692, -17.1692, 8.03788, 1.18 ) }
    dend_33 { pt3dadd( -4.49915, -18.2722, 10.4313, 1.18 ) }
    dend_33 { pt3dadd( -5.37127, -18.9534, 11.9094, 1.69 ) }
    dend_33 { pt3dadd( -6.08564, -19.5113, 13.1201, 2.36 ) }
    dend_33 { pt3dadd( -6.51551, -19.8471, 13.8486, 2.73 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.51845, -11.7546, -37.6749, 0.66 ) }
    dend_29 { pt3dadd( -1.47369, -14.0538, -39.5422, 0.66 ) }
    dend_29 { pt3dadd( -0.25221, -15.321, -40.516, 0.74 ) }
    dend_29 { pt3dadd( 0.629158, -16.1588, -41.2489, 0.74 ) }
    dend_29 { pt3dadd( 1.36308, -16.7964, -41.875, 0.74 ) }
    dend_29 { pt3dadd( 1.42213, -16.8439, -41.9262, 0.74 ) }
    dend_29 { pt3dadd( 2.86496, -17.9164, -43.1932, 0.52 ) }
    dend_29 { pt3dadd( 3.61401, -18.1824, -43.7568, 0.52 ) }
    dend_29 { pt3dadd( 4.5961, -18.1243, -44.7949, 0.44 ) }
    dend_29 { pt3dadd( 5.21657, -17.9379, -45.6297, 0.44 ) }
    dend_29 { pt3dadd( 5.38344, -17.8923, -45.8653, 0.44 ) }
    dend_29 { pt3dadd( 5.9775, -17.8144, -46.627, 0.44 ) }
    dend_29 { pt3dadd( 7.41893, -17.7712, -48.4562, 0.88 ) }
    dend_29 { pt3dadd( 7.47722, -17.7773, -48.5281, 0.88 ) }
    dend_29 { pt3dadd( 8.73633, -18.0478, -49.9721, 1.11 ) }
    dend_29 { pt3dadd( 10.4274, -18.5228, -51.8445, 1.84 ) }
    dend_29 { pt3dadd( 12.3444, -19.1388, -53.8667, 2.14 ) }
    dend_29 { pt3dadd( 15.3514, -20.2247, -56.8917, 0.29 ) }
    dend_29 { pt3dadd( 16.396, -20.6278, -57.8598, 0.29 ) }
    dend_29 { pt3dadd( 17.2031, -20.9336, -58.5337, 1.03 ) }
    dend_29 { pt3dadd( 17.2858, -20.9655, -58.5911, 1.03 ) }
    dend_29 { pt3dadd( 17.933, -21.2524, -58.9461, 1.33 ) }
    dend_29 { pt3dadd( 18.0087, -21.2874, -58.9872, 1.33 ) }
    dend_29 { pt3dadd( 18.8069, -21.6007, -59.4846, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 20.1957, -21.9941, -60.5173, 0.37 ) }
    dend_29 { pt3dadd( 21.1404, -22.1769, -61.336, 0.37 ) }
    dend_29 { pt3dadd( 22.7123, -22.346, -62.9495, 0.52 ) }
    dend_29 { pt3dadd( 24.7139, -22.4483, -65.3109, 0.74 ) }
    dend_29 { pt3dadd( 25.7492, -22.4967, -66.6243, 1.62 ) }
    dend_29 { pt3dadd( 26.3141, -22.5144, -67.3826, 1.92 ) }
    dend_29 { pt3dadd( 27.3326, -22.5187, -68.7848, 2.43 ) }
    dend_29 { pt3dadd( 29.0142, -22.4184, -71.0038, 1.69 ) }
    dend_29 { pt3dadd( 30.5457, -22.1935, -72.9879, 0.37 ) }
    dend_29 { pt3dadd( 31.2756, -22.0741, -73.9138, 0.37 ) }
    dend_29 { pt3dadd( 31.7789, -21.9999, -74.5412, 0.37 ) }
    dend_29 { pt3dadd( 32.4425, -21.9318, -75.3792, 1.11 ) }
    dend_29 { pt3dadd( 33.1942, -21.9081, -76.2208, 1.33 ) }
    dend_29 { pt3dadd( 35.7138, -21.8633, -78.5456, 0.22 ) }
    dend_29 { pt3dadd( 35.7976, -21.8633, -78.6118, 0.22 ) }
    dend_29 { pt3dadd( 36.6053, -21.9214, -79.2088, 0.22 ) }
    dend_29 { pt3dadd( 37.6339, -22.1763, -79.8905, 0.22 ) }
    dend_29 { pt3dadd( 38.9276, -22.659, -80.6381, 0.88 ) }
    dend_29 { pt3dadd( 40.2474, -23.2056, -81.3766, 1.55 ) }
    dend_29 { pt3dadd( 41.101, -23.4824, -82.0615, 1.77 ) }
    dend_29 { pt3dadd( 42.6159, -23.7681, -83.9133, 0.22 ) }
    dend_29 { pt3dadd( 43.5136, -23.8147, -85.4011, 0.22 ) }
    dend_29 { pt3dadd( 44.26, -23.7872, -86.8287, 1.47 ) }
    dend_29 { pt3dadd( 45.2292, -23.7254, -88.8618, 2.43 ) }
    dend_29 { pt3dadd( 48.1115, -23.4134, -95.2079, 1.99 ) }
    dend_29 { pt3dadd( 49.8347, -23.1194, -99.2829, 1.77 ) }
    dend_29 { pt3dadd( 51.8637, -22.6084, -104.456, 0.22 ) }
    dend_29 { pt3dadd( 51.8909, -22.5993, -104.53, 0.22 ) }
    dend_29 { pt3dadd( 52.3495, -22.4292, -105.891, 0.22 ) }
    dend_29 { pt3dadd( 52.7352, -22.2861, -107.097, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.51845, -11.7546, -37.6749, 1.03 ) }
    dend_24 { pt3dadd( -4.75508, -13.5498, -38.3367, 1.03 ) }
    dend_24 { pt3dadd( -5.49245, -15.0086, -38.7359, 0.88 ) }
    dend_24 { pt3dadd( -5.52904, -15.0952, -38.7559, 0.88 ) }
    dend_24 { pt3dadd( -5.90264, -16.2035, -38.9661, 0.88 ) }
    dend_24 { pt3dadd( -6.09123, -17.2292, -39.2032, 1.69 ) }
    dend_24 { pt3dadd( -6.18298, -18.1264, -39.4147, 1.84 ) }
    dend_24 { pt3dadd( -6.1595, -18.6654, -39.5481, 1.99 ) }
    dend_24 { pt3dadd( -6.156, -18.7269, -39.5644, 1.99 ) }
    dend_24 { pt3dadd( -6.14871, -19.4822, -39.8108, 1.69 ) }
    dend_24 { pt3dadd( -6.28604, -21.5202, -40.6559, 1.03 ) }
    dend_24 { pt3dadd( -6.6022, -22.7465, -41.4496, 0.88 ) }
    dend_24 { pt3dadd( -6.99064, -23.5828, -42.1513, 0.66 ) }
    dend_24 { pt3dadd( -7.26602, -24.0606, -42.5961, 0.66 ) }
    dend_24 { pt3dadd( -7.77179, -24.7552, -43.3249, 0.52 ) }
    dend_24 { pt3dadd( -8.28818, -25.1997, -43.9348, 0.52 ) }
    dend_24 { pt3dadd( -10.1163, -25.9187, -45.5375, 1.77 ) }
    dend_24 { pt3dadd( -10.5843, -26.0184, -45.9663, 1.77 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.60927, 56.6342, -24.5072, 0.52 ) }
    dend_20 { pt3dadd( 7.14586, 57.6021, -28.3466, 0.52 ) }
    dend_20 { pt3dadd( 7.40597, 57.7569, -28.9671, 0.52 ) }
    dend_20 { pt3dadd( 7.87972, 58.1129, -30.2678, 0.37 ) }
    dend_20 { pt3dadd( 8.45801, 58.692, -32.0458, 1.4 ) }
    dend_20 { pt3dadd( 8.58105, 58.8671, -32.4822, 1.55 ) }
    dend_20 { pt3dadd( 9.59671, 60.7211, -36.462, 0.74 ) }
    dend_20 { pt3dadd( 9.70153, 61.1101, -37.1273, 0.74 ) }
    dend_20 { pt3dadd( 9.92471, 62.7317, -39.6422, 0.29 ) }
    dend_20 { pt3dadd( 9.94989, 63.5711, -40.7901, 0.29 ) }
    dend_20 { pt3dadd( 9.86804, 64.9793, -42.5063, 1.92 ) }
    dend_20 { pt3dadd( 9.78525, 65.5509, -43.1151, 2.28 ) }
    dend_20 { pt3dadd( 9.3513, 67.707, -45.0867, 0.22 ) }
    dend_20 { pt3dadd( 9.33015, 67.8252, -45.1964, 0.22 ) }
    dend_20 { pt3dadd( 9.2724, 68.3382, -45.6629, 0.22 ) }
    dend_20 { pt3dadd( 9.25735, 69.7153, -47.0647, 1.18 ) }
    dend_20 { pt3dadd( 9.29171, 70.254, -47.6422, 1.77 ) }
    dend_20 { pt3dadd( 9.52126, 72.5659, -50.0239, 0.22 ) }
    dend_20 { pt3dadd( 9.70633, 73.8853, -51.2916, 1.84 ) }
    dend_20 { pt3dadd( 9.81359, 74.5298, -51.8821, 2.21 ) }
    dend_20 { pt3dadd( 10.2843, 76.6696, -53.7071, 0.22 ) }
    dend_20 { pt3dadd( 10.3035, 76.7336, -53.7538, 0.22 ) }
    dend_20 { pt3dadd( 10.8325, 78.1347, -54.6231, 0.22 ) }
    dend_20 { pt3dadd( 10.8689, 78.2126, -54.657, 0.22 ) }
    dend_20 { pt3dadd( 11.4288, 79.2066, -55.0517, 0.66 ) }
    dend_20 { pt3dadd( 11.9607, 80.0669, -55.548, 0.88 ) }
    dend_20 { pt3dadd( 12.6882, 81.1944, -56.3035, 0.22 ) }
    dend_20 { pt3dadd( 13.3745, 82.2052, -57.1225, 1.99 ) }
    dend_20 { pt3dadd( 13.7302, 82.721, -57.6273, 2.5 ) }
    dend_20 { pt3dadd( 14.6474, 84.1732, -59.2028, 0.22 ) }
    dend_20 { pt3dadd( 15.9292, 86.4209, -61.8608, 0.59 ) }
    dend_20 { pt3dadd( 16.0626, 86.7179, -62.2309, 0.59 ) }
    dend_20 { pt3dadd( 16.0794, 86.7681, -62.2943, 0.59 ) }
    dend_20 { pt3dadd( 16.3691, 88.0289, -63.7532, 0.96 ) }
    dend_20 { pt3dadd( 16.4809, 88.6918, -64.4497, 1.11 ) }
    dend_20 { pt3dadd( 16.5698, 89.3391, -65.0355, 0.96 ) }
    dend_20 { pt3dadd( 16.7948, 90.7939, -66.1899, 0.22 ) }
    dend_20 { pt3dadd( 16.8349, 91.0048, -66.4525, 0.22 ) }
    dend_20 { pt3dadd( 16.9983, 91.7454, -67.6383, 0.22 ) }
    dend_20 { pt3dadd( 17.1439, 92.3629, -68.8706, 1.11 ) }
    dend_20 { pt3dadd( 17.269, 93.1322, -70.7833, 1.4 ) }
    dend_20 { pt3dadd( 17.3398, 93.7079, -72.416, 2.06 ) }
    dend_20 { pt3dadd( 17.6295, 95.9816, -79.3513, 1.18 ) }
    dend_20 { pt3dadd( 17.7289, 96.8333, -82.1383, 1.18 ) }
    dend_20 { pt3dadd( 17.8288, 97.9007, -85.9998, 1.4 ) }
    dend_20 { pt3dadd( 17.9039, 99.2933, -91.4392, 1.55 ) }
    dend_20 { pt3dadd( 17.904, 99.3118, -91.5211, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.60927, 56.6342, -24.5072, 0.52 ) }
    dend_15 { pt3dadd( 5.73604, 58.5137, -24.2887, 0.52 ) }
    dend_15 { pt3dadd( 5.8338, 59.6951, -24.1609, 0.52 ) }
    dend_15 { pt3dadd( 5.95344, 60.9612, -24.1371, 1.18 ) }
    dend_15 { pt3dadd( 6.07345, 61.9901, -24.1726, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 6.1389, 62.4207, -24.199, 2.28 ) }
    dend_15 { pt3dadd( 6.25978, 62.9476, -24.2374, 1.84 ) }
    dend_15 { pt3dadd( 6.45408, 63.4643, -24.2888, 1.55 ) }
    dend_15 { pt3dadd( 7.01057, 64.7427, -24.4796, 0.88 ) }
    dend_15 { pt3dadd( 7.40428, 65.6312, -24.7009, 0.29 ) }
    dend_15 { pt3dadd( 7.73497, 66.405, -24.9025, 0.29 ) }
    dend_15 { pt3dadd( 8.14529, 67.5429, -25.2379, 0.29 ) }
    dend_15 { pt3dadd( 8.17714, 67.6371, -25.2705, 0.29 ) }
    dend_15 { pt3dadd( 8.41211, 68.4204, -25.553, 0.29 ) }
    dend_15 { pt3dadd( 8.81804, 70.1296, -26.152, 1.92 ) }
    dend_15 { pt3dadd( 8.95913, 71.1341, -26.5092, 2.21 ) }
    dend_15 { pt3dadd( 9.03218, 72.6612, -27.0927, 0.29 ) }
    dend_15 { pt3dadd( 8.99473, 73.946, -27.5981, 0.29 ) }
    dend_15 { pt3dadd( 8.86778, 75.0046, -28.0528, 0.29 ) }
    dend_15 { pt3dadd( 8.65246, 75.9109, -28.4569, 0.29 ) }
    dend_15 { pt3dadd( 8.20556, 77.1513, -28.9983, 1.84 ) }
    dend_15 { pt3dadd( 7.67751, 78.2653, -29.4913, 2.58 ) }
    dend_15 { pt3dadd( 7.49141, 78.5783, -29.6257, 2.5 ) }
    dend_15 { pt3dadd( 5.92135, 80.7946, -30.6116, 0.22 ) }
    dend_15 { pt3dadd( 5.06171, 81.8923, -31.1376, 0.22 ) }
    dend_15 { pt3dadd( 4.48978, 82.5838, -31.4684, 0.96 ) }
    dend_15 { pt3dadd( 4.18092, 82.9358, -31.635, 1.18 ) }
    dend_15 { pt3dadd( 3.89879, 83.2475, -31.7687, 1.18 ) }
    dend_15 { pt3dadd( 2.92029, 84.3187, -32.2205, 0.29 ) }
    dend_15 { pt3dadd( 2.40589, 84.8697, -32.4371, 0.29 ) }
    dend_15 { pt3dadd( 1.39483, 85.9715, -32.9152, 0.29 ) }
    dend_15 { pt3dadd( 0.0666338, 87.4376, -33.5812, 2.21 ) }
    dend_15 { pt3dadd( -0.390504, 87.9531, -33.8149, 2.65 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 28/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 28.0465, 49.358, 33.4491, 0.29 ) }
    dend_13 { pt3dadd( 28.2902, 50.7111, 33.4556, 0.29 ) }
    dend_13 { pt3dadd( 28.4742, 51.6769, 33.5265, 0.59 ) }
    dend_13 { pt3dadd( 28.6179, 52.2699, 33.6392, 0.74 ) }
    dend_13 { pt3dadd( 28.8802, 53.2831, 33.8791, 0.22 ) }
    dend_13 { pt3dadd( 29.1316, 54.2442, 34.1229, 0.22 ) }
    dend_13 { pt3dadd( 29.5218, 55.7382, 34.512, 2.28 ) }
    dend_13 { pt3dadd( 29.6576, 56.2527, 34.6815, 2.28 ) }
    dend_13 { pt3dadd( 30.1464, 58.0694, 35.3191, 0.29 ) }
    dend_13 { pt3dadd( 30.2641, 58.4894, 35.4728, 0.29 ) }
    dend_13 { pt3dadd( 30.5922, 59.6346, 35.9072, 0.22 ) }
    dend_13 { pt3dadd( 30.6805, 59.944, 36.0144, 0.88 ) }
    dend_13 { pt3dadd( 30.7168, 60.063, 36.0445, 0.88 ) }
    dend_13 { pt3dadd( 30.8189, 60.376, 36.1016, 0.88 ) }
    dend_13 { pt3dadd( 30.8792, 60.5541, 36.1157, 0.88 ) }
    dend_13 { pt3dadd( 31.1056, 61.1388, 36.1812, 0.52 ) }
    dend_13 { pt3dadd( 31.2723, 61.5337, 36.291, 0.15 ) }
    dend_13 { pt3dadd( 31.5091, 62.1024, 36.4995, 0.15 ) }
    dend_13 { pt3dadd( 31.6156, 62.3918, 36.6228, 0.15 ) }
    dend_13 { pt3dadd( 31.8479, 63.1084, 36.945, 0.81 ) }
    dend_13 { pt3dadd( 31.9427, 63.4773, 37.1389, 0.96 ) }
    dend_13 { pt3dadd( 32.1614, 64.5947, 37.8099, 0.15 ) }
    dend_13 { pt3dadd( 32.1718, 64.6645, 37.856, 0.15 ) }
    dend_13 { pt3dadd( 32.3092, 65.5962, 38.4738, 1.55 ) }
    dend_13 { pt3dadd( 32.3958, 66.1041, 38.8048, 2.28 ) }
    dend_13 { pt3dadd( 32.7332, 67.6956, 39.8388, 0.22 ) }
    dend_13 { pt3dadd( 33.0207, 68.8036, 40.6015, 2.65 ) }
    dend_13 { pt3dadd( 33.4722, 70.3585, 41.6899, 0.29 ) }
    dend_13 { pt3dadd( 33.6523, 70.8973, 42.0737, 0.15 ) }
    dend_13 { pt3dadd( 33.7891, 71.2721, 42.3497, 0.15 ) }
    dend_13 { pt3dadd( 34.3869, 72.7665, 43.47, 2.58 ) }
    dend_13 { pt3dadd( 35.1285, 74.3553, 44.6365, 0.15 ) }
    dend_13 { pt3dadd( 35.289, 74.6577, 44.8593, 0.37 ) }
    dend_13 { pt3dadd( 35.5018, 75.0178, 45.1362, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 28.0465, 49.358, 33.4491, 0.29 ) }
    dend_12 { pt3dadd( 27.0519, 50.04, 34.0862, 0.29 ) }
    dend_12 { pt3dadd( 26.4054, 50.5677, 34.4942, 0.29 ) }
    dend_12 { pt3dadd( 26.0384, 50.9213, 34.7231, 0.29 ) }
    dend_12 { pt3dadd( 25.6971, 51.2885, 34.9338, 0.88 ) }
    dend_12 { pt3dadd( 25.6664, 51.3334, 34.9529, 0.88 ) }
    dend_12 { pt3dadd( 25.4942, 51.6721, 35.1015, 0.88 ) }
    dend_12 { pt3dadd( 25.4474, 51.8358, 35.1535, 0.88 ) }
    dend_12 { pt3dadd( 25.4209, 52.0582, 35.2235, 0.88 ) }
    dend_12 { pt3dadd( 25.4191, 52.1186, 35.2478, 0.88 ) }
    dend_12 { pt3dadd( 25.4332, 52.9339, 35.6063, 0.44 ) }
    dend_12 { pt3dadd( 25.4576, 53.611, 35.9046, 0.44 ) }
    dend_12 { pt3dadd( 25.4601, 53.6613, 35.9322, 0.44 ) }
    dend_12 { pt3dadd( 25.4547, 54.2778, 36.2984, 0.44 ) }
    dend_12 { pt3dadd( 25.412, 55.2563, 37.0056, 1.77 ) }
    dend_12 { pt3dadd( 25.4133, 55.6652, 37.3223, 2.65 ) }
    dend_12 { pt3dadd( 25.4373, 56.0341, 37.6218, 3.02 ) }
    dend_12 { pt3dadd( 25.6445, 57.6818, 38.9246, 0.22 ) }
    dend_12 { pt3dadd( 25.8498, 58.5466, 39.6401, 1.03 ) }
    dend_12 { pt3dadd( 26.2424, 59.7584, 40.6657, 0.29 ) }
    dend_12 { pt3dadd( 26.5863, 60.6042, 41.4112, 0.22 ) }
    dend_12 { pt3dadd( 26.8286, 61.1083, 41.8636, 1.92 ) }
    dend_12 { pt3dadd( 27.1161, 61.6198, 42.3061, 2.28 ) }
    dend_12 { pt3dadd( 28.0108, 62.9545, 43.3688, 0.22 ) }
    dend_12 { pt3dadd( 28.2599, 63.3196, 43.7046, 0.22 ) }
    dend_12 { pt3dadd( 28.7084, 64.0784, 44.5112, 1.11 ) }
    dend_12 { pt3dadd( 28.8243, 64.3425, 44.8411, 1.55 ) }
    dend_12 { pt3dadd( 28.9443, 64.6859, 45.3337, 1.84 ) }
    dend_12 { pt3dadd( 28.9517, 64.7167, 45.3833, 1.84 ) }
    dend_12 { pt3dadd( 29.1745, 66.2083, 47.9446, 0.29 ) }
    dend_12 { pt3dadd( 29.2299, 66.8901, 49.1828, 0.29 ) }
    dend_12 { pt3dadd( 29.228, 67.5204, 50.3334, 2.65 ) }
    dend_12 { pt3dadd( 29.1878, 68.0254, 51.2543, 2.36 ) }
    dend_12 { pt3dadd( 29.0481, 68.8863, 52.8052, 0.37 ) }
    dend_12 { pt3dadd( 29.0413, 68.9121, 52.8473, 0.37 ) }
    dend_12 { pt3dadd( 28.876, 69.274, 53.3188, 0.22 ) }
    dend_12 { pt3dadd( 28.6613, 69.6112, 53.6902, 0.66 ) }
    dend_12 { pt3dadd( 28.3928, 69.9826, 54.0384, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 28.1093, 70.3616, 54.3431, 0.96 ) }
    dend_12 { pt3dadd( 27.673, 70.9347, 54.766, 0.22 ) }
    dend_12 { pt3dadd( 27.3591, 71.3678, 55.1164, 0.22 ) }
    dend_12 { pt3dadd( 26.8348, 72.1209, 55.8069, 2.43 ) }
    dend_12 { pt3dadd( 26.0285, 73.2383, 57.0617, 0.22 ) }
    dend_12 { pt3dadd( 25.9026, 73.4106, 57.2711, 0.88 ) }
    dend_12 { pt3dadd( 25.7564, 73.6165, 57.5251, 1.03 ) }
    dend_12 { pt3dadd( 25.26, 74.3273, 58.4444, 0.66 ) }
    dend_12 { pt3dadd( 24.8616, 74.9801, 59.5048, 1.62 ) }
    dend_12 { pt3dadd( 24.6159, 75.5788, 60.5673, 1.62 ) }
    dend_12 { pt3dadd( 24.4901, 76.1653, 61.6154, 0.37 ) }
    dend_12 { pt3dadd( 24.4918, 76.4129, 62.0313, 2.06 ) }
    dend_12 { pt3dadd( 24.4955, 76.4397, 62.0732, 2.06 ) }
    dend_12 { pt3dadd( 24.8963, 78.3496, 64.6634, 1.62 ) }
    dend_12 { pt3dadd( 25.1188, 79.0969, 65.6396, 0.22 ) }
    dend_12 { pt3dadd( 25.2852, 79.5604, 66.2234, 2.06 ) }
    dend_12 { pt3dadd( 25.9171, 80.9937, 68.1239, 0.29 ) }
    dend_12 { pt3dadd( 26.0132, 81.2091, 68.404, 0.29 ) }
    dend_12 { pt3dadd( 26.2896, 81.8698, 69.1608, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -14.1944, 26.2261, 2.79336, 1.18 ) }
    dend_2 { pt3dadd( -16.77, 27.3815, 0.516794, 1.18 ) }
    dend_2 { pt3dadd( -17.3782, 27.6781, 0.0493698, 1.18 ) }
    dend_2 { pt3dadd( -18.1468, 28.0735, -0.469484, 1.4 ) }
    dend_2 { pt3dadd( -18.9196, 28.5009, -0.923321, 1.4 ) }
    dend_2 { pt3dadd( -19.9082, 29.0929, -1.51043, 1.03 ) }
    dend_2 { pt3dadd( -20.7724, 29.6551, -2.01153, 0.66 ) }
    dend_2 { pt3dadd( -21.4597, 30.1772, -2.32315, 0.66 ) }
    dend_2 { pt3dadd( -21.9314, 30.5823, -2.54823, 1.11 ) }
    dend_2 { pt3dadd( -22.59, 31.2348, -2.82918, 0.81 ) }
    dend_2 { pt3dadd( -24.0172, 32.8769, -3.35006, 0.66 ) }
    dend_2 { pt3dadd( -24.6177, 33.6662, -3.50169, 0.66 ) }
    dend_2 { pt3dadd( -25.062, 34.3258, -3.57462, 0.66 ) }
    dend_2 { pt3dadd( -25.6826, 35.3235, -3.63174, 1.25 ) }
    dend_2 { pt3dadd( -26.2967, 36.4303, -3.58911, 1.62 ) }
    dend_2 { pt3dadd( -26.7945, 37.4305, -3.43823, 1.99 ) }
    dend_2 { pt3dadd( -27.1302, 38.1751, -3.23781, 1.99 ) }
    dend_2 { pt3dadd( -27.1926, 38.3168, -3.19909, 1.99 ) }
    dend_2 { pt3dadd( -27.4738, 38.9666, -3.02829, 1.84 ) }
    dend_2 { pt3dadd( -27.9221, 39.9937, -2.80446, 1.03 ) }
    dend_2 { pt3dadd( -28.2855, 40.8114, -2.69068, 0.74 ) }
    dend_2 { pt3dadd( -28.7061, 41.7578, -2.60046, 0.74 ) }
    dend_2 { pt3dadd( -29.0221, 42.4774, -2.5441, 0.44 ) }
    dend_2 { pt3dadd( -29.2547, 43.0017, -2.50909, 0.59 ) }
    dend_2 { pt3dadd( -29.5603, 43.6135, -2.49376, 0.59 ) }
    dend_2 { pt3dadd( -29.8945, 44.1839, -2.51095, 0.59 ) }
    dend_2 { pt3dadd( -29.9382, 44.2476, -2.51477, 0.59 ) }
    dend_2 { pt3dadd( -30.4532, 44.893, -2.56875, 0.44 ) }
    dend_2 { pt3dadd( -30.8415, 45.3303, -2.61303, 0.29 ) }
    dend_2 { pt3dadd( -31.5632, 46.0781, -2.73918, 0.29 ) }
    dend_2 { pt3dadd( -32.0982, 46.645, -2.86247, 1.47 ) }
    dend_2 { pt3dadd( -32.6712, 47.3014, -3.0246, 2.06 ) }
    dend_2 { pt3dadd( -32.8669, 47.5773, -3.10177, 2.21 ) }
    dend_2 { pt3dadd( -33.0272, 47.8909, -3.22159, 2.21 ) }
    dend_2 { pt3dadd( -33.3403, 48.83, -3.63741, 1.18 ) }
    dend_2 { pt3dadd( -33.5293, 49.8987, -4.1384, 0.37 ) }
    dend_2 { pt3dadd( -33.5676, 50.4737, -4.42747, 0.37 ) }
    dend_2 { pt3dadd( -33.5386, 51.5967, -4.98404, 0.37 ) }
    dend_2 { pt3dadd( -33.4613, 52.9117, -5.64616, 1.33 ) }
    dend_2 { pt3dadd( -33.4346, 53.294, -5.81838, 1.77 ) }
    dend_2 { pt3dadd( -33.4298, 53.3758, -5.84928, 1.77 ) }
    dend_2 { pt3dadd( -33.4287, 53.8055, -5.94934, 1.77 ) }
    dend_2 { pt3dadd( -33.508, 54.7773, -5.98653, 0.81 ) }
    dend_2 { pt3dadd( -33.6478, 55.8429, -5.87038, 0.29 ) }
    dend_2 { pt3dadd( -33.7156, 56.7456, -5.61763, 0.74 ) }
    dend_2 { pt3dadd( -33.7322, 57.3193, -5.42779, 0.74 ) }
    dend_2 { pt3dadd( -33.7092, 58.7243, -4.92193, 0.37 ) }
    dend_2 { pt3dadd( -33.6488, 59.6696, -4.55879, 0.37 ) }
    dend_2 { pt3dadd( -33.5558, 60.4224, -4.24763, 0.37 ) }
    dend_2 { pt3dadd( -33.2594, 61.9353, -3.57227, 1.4 ) }
    dend_2 { pt3dadd( -33.1073, 62.5193, -3.37109, 2.06 ) }
    dend_2 { pt3dadd( -33.0062, 62.8873, -3.27491, 2.5 ) }
    dend_2 { pt3dadd( -32.8592, 63.4431, -3.18212, 2.5 ) }
    dend_2 { pt3dadd( -32.8475, 63.5081, -3.17326, 2.5 ) }
    dend_2 { pt3dadd( -32.6733, 65.7684, -2.93758, 0.44 ) }
    dend_2 { pt3dadd( -32.7575, 67.1479, -2.87796, 0.37 ) }
    dend_2 { pt3dadd( -32.8737, 67.8848, -2.83811, 0.37 ) }
    dend_2 { pt3dadd( -32.8959, 67.977, -2.83264, 0.37 ) }
    dend_2 { pt3dadd( -33.3071, 69.306, -2.77238, 0.37 ) }
    dend_2 { pt3dadd( -33.3588, 69.4504, -2.77102, 0.37 ) }
    dend_2 { pt3dadd( -33.643, 70.1124, -2.80977, 0.37 ) }
    dend_2 { pt3dadd( -33.6633, 70.1753, -2.81689, 0.37 ) }
    dend_2 { pt3dadd( -33.801, 70.8531, -3.0067, 1.47 ) }
    dend_2 { pt3dadd( -33.9181, 71.6271, -3.29883, 2.21 ) }
    dend_2 { pt3dadd( -33.977, 72.152, -3.53415, 2.65 ) }
    dend_2 { pt3dadd( -34.0521, 72.6647, -3.77371, 2.5 ) }
    dend_2 { pt3dadd( -34.3613, 74.33, -4.55993, 0.29 ) }
    dend_2 { pt3dadd( -34.5605, 75.0612, -4.93707, 0.29 ) }
    dend_2 { pt3dadd( -34.8119, 75.7417, -5.31187, 0.29 ) }
    dend_2 { pt3dadd( -35.0365, 76.2088, -5.55102, 0.29 ) }
    dend_2 { pt3dadd( -35.3251, 76.7481, -5.79589, 1.33 ) }
    dend_2 { pt3dadd( -35.7219, 77.4698, -6.07112, 2.28 ) }
    dend_2 { pt3dadd( -36.2209, 78.4074, -6.3361, 2.73 ) }
    dend_2 { pt3dadd( -36.4786, 78.9366, -6.48263, 2.43 ) }
    dend_2 { pt3dadd( -37.0522, 80.1907, -6.87357, 0.29 ) }
    dend_2 { pt3dadd( -37.3042, 80.7241, -7.06624, 0.29 ) }
    dend_2 { pt3dadd( -37.5217, 81.2106, -7.24892, 0.29 ) }
    dend_2 { pt3dadd( -37.686, 81.6004, -7.39341, 0.29 ) }
    dend_2 { pt3dadd( -38.0263, 82.5294, -7.68484, 0.88 ) }
    dend_2 { pt3dadd( -38.1785, 82.917, -7.84013, 1.55 ) }
    dend_2 { pt3dadd( -38.5364, 83.5809, -8.24735, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -14.1944, 26.2261, 2.79336, 0.74 ) }
    dend_1 { pt3dadd( -15.8964, 26.5023, 2.45329, 0.74 ) }
    dend_1 { pt3dadd( -17.3081, 26.7848, 2.17141, 0.74 ) }
    dend_1 { pt3dadd( -18.5936, 27.0612, 1.92276, 0.59 ) }
    dend_1 { pt3dadd( -19.3704, 27.2412, 1.78004, 0.74 ) }
    dend_1 { pt3dadd( -20.5912, 27.5388, 1.56973, 0.74 ) }
    dend_1 { pt3dadd( -21.5098, 27.7698, 1.42293, 1.03 ) }
    dend_1 { pt3dadd( -22.7086, 28.1038, 1.25002, 1.33 ) }
    dend_1 { pt3dadd( -23.6966, 28.37, 1.12266, 1.55 ) }
    dend_1 { pt3dadd( -24.8931, 28.656, 0.990044, 1.4 ) }
    dend_1 { pt3dadd( -26.3664, 28.9525, 0.888567, 1.25 ) }
    dend_1 { pt3dadd( -28.2729, 29.3056, 0.88923, 0.74 ) }
    dend_1 { pt3dadd( -29.2748, 29.4987, 0.972068, 0.96 ) }
    dend_1 { pt3dadd( -30.3585, 29.7131, 1.15774, 0.96 ) }
    dend_1 { pt3dadd( -31.9782, 30.0785, 1.64604, 0.52 ) }
    dend_1 { pt3dadd( -33.4375, 30.4769, 2.34113, 0.52 ) }
    dend_1 { pt3dadd( -34.5395, 30.8898, 3.13459, 0.88 ) }
    dend_1 { pt3dadd( -35.3317, 31.2909, 3.8846, 0.59 ) }
    dend_1 { pt3dadd( -35.3862, 31.325, 3.93592, 0.59 ) }
    dend_1 { pt3dadd( -36.1989, 31.942, 4.68655, 0.29 ) }
    dend_1 { pt3dadd( -36.755, 32.3826, 5.00648, 0.29 ) }
    dend_1 { pt3dadd( -37.7508, 32.9538, 4.99016, 0.74 ) }
    dend_1 { pt3dadd( -38.6008, 33.3123, 4.75876, 0.96 ) }
    dend_1 { pt3dadd( -40.1939, 33.8143, 4.18774, 0.59 ) }
    dend_1 { pt3dadd( -40.2943, 33.8383, 4.1457, 0.59 ) }
    dend_1 { pt3dadd( -41.5351, 34.0443, 3.55341, 0.29 ) }
    dend_1 { pt3dadd( -42.3491, 34.1378, 3.14435, 0.29 ) }
    dend_1 { pt3dadd( -43.478, 34.1956, 2.56921, 1.62 ) }
    dend_1 { pt3dadd( -44.6846, 34.1655, 2.03831, 2.43 ) }
    dend_1 { pt3dadd( -45.7285, 34.083, 1.66793, 2.65 ) }
    dend_1 { pt3dadd( -46.6586, 33.9848, 1.37729, 2.65 ) }
    dend_1 { pt3dadd( -46.7384, 33.9764, 1.35592, 2.65 ) }
    dend_1 { pt3dadd( -48.9326, 33.8082, 0.902163, 1.11 ) }
    dend_1 { pt3dadd( -50.6584, 33.7583, 0.687753, 0.37 ) }
    dend_1 { pt3dadd( -51.7803, 33.8117, 0.62006, 0.37 ) }
    dend_1 { pt3dadd( -52.9766, 33.973, 0.629039, 0.37 ) }
    dend_1 { pt3dadd( -54.0176, 34.2395, 0.770359, 0.37 ) }
    dend_1 { pt3dadd( -55.2094, 34.7108, 1.11228, 0.81 ) }
    dend_1 { pt3dadd( -56.1055, 35.1863, 1.52853, 1.47 ) }
    dend_1 { pt3dadd( -56.7678, 35.5586, 1.91952, 1.69 ) }
    dend_1 { pt3dadd( -57.1783, 35.7645, 2.1804, 1.69 ) }
    dend_1 { pt3dadd( -58.9718, 36.4907, 3.34879, 0.66 ) }
    dend_1 { pt3dadd( -60.3413, 36.9079, 4.2248, 0.37 ) }
    dend_1 { pt3dadd( -61.2662, 37.1137, 4.80491, 0.37 ) }
    dend_1 { pt3dadd( -62.9135, 37.318, 5.75167, 1.25 ) }
    dend_1 { pt3dadd( -64.1482, 37.3229, 6.44783, 2.36 ) }
    dend_1 { pt3dadd( -65.2316, 37.2711, 7.06593, 2.36 ) }
    dend_1 { pt3dadd( -65.3133, 37.2637, 7.11764, 2.36 ) }
    dend_1 { pt3dadd( -66.0192, 37.191, 7.60863, 2.21 ) }
    dend_1 { pt3dadd( -67.8049, 37.0369, 9.00209, 0.37 ) }
    dend_1 { pt3dadd( -69.8752, 36.8809, 10.7839, 0.59 ) }
    dend_1 { pt3dadd( -71.1344, 36.8006, 11.9079, 0.37 ) }
    dend_1 { pt3dadd( -73.2505, 36.6903, 13.742, 1.18 ) }
    dend_1 { pt3dadd( -73.8107, 36.6664, 14.1978, 1.4 ) }
    dend_1 { pt3dadd( -74.9747, 36.6213, 15.1061, 1.25 ) }
    dend_1 { pt3dadd( -75.0487, 36.6176, 15.1687, 1.25 ) }
    dend_1 { pt3dadd( -76.081, 36.515, 16.1307, 0.52 ) }
    dend_1 { pt3dadd( -77.2185, 36.3149, 17.2169, 2.14 ) }
    dend_1 { pt3dadd( -78.2699, 36.1457, 18.2546, 2.95 ) }
    dend_1 { pt3dadd( -79.7244, 35.866, 19.7904, 1.92 ) }
    dend_1 { pt3dadd( -81.9389, 35.4973, 22.089, 1.03 ) }
    dend_1 { pt3dadd( -84.4287, 35.2047, 24.6853, 0.44 ) }
    dend_1 { pt3dadd( -85.0097, 35.137, 25.3265, 0.44 ) }
    dend_1 { pt3dadd( -86.6638, 34.9559, 27.1942, 0.44 ) }
    dend_1 { pt3dadd( -88.6975, 34.7634, 29.4886, 2.36 ) }
    dend_1 { pt3dadd( -91.045, 34.6394, 31.9467, 0.22 ) }
    dend_1 { pt3dadd( -92.0871, 34.6606, 32.8632, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.444525, -43.0938, 2.58385, 0.361546 ) }
    axon_1 { pt3dadd( -0.476297, -58.0938, 2.58385, 0.361546 ) }
    axon_1 { pt3dadd( -0.508069, -73.0938, 2.58385, 0.361546 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 10.3554, -34.2692, 5.70273, 0.37 ) }
    dend_48 { pt3dadd( 11.0004, -35.0715, 4.87733, 0.37 ) }
    dend_48 { pt3dadd( 11.5332, -35.6317, 4.15204, 0.29 ) }
    dend_48 { pt3dadd( 11.8628, -35.9508, 3.69972, 0.29 ) }
    dend_48 { pt3dadd( 12.8512, -36.7587, 2.40666, 0.74 ) }
    dend_48 { pt3dadd( 12.8966, -36.7886, 2.35176, 0.74 ) }
    dend_48 { pt3dadd( 13.7612, -37.2618, 1.36871, 0.66 ) }
    dend_48 { pt3dadd( 14.5443, -37.5768, 0.425324, 0.29 ) }
    dend_48 { pt3dadd( 14.6038, -37.5857, 0.360152, 0.29 ) }
    dend_48 { pt3dadd( 15.2005, -37.5401, -0.152264, 0.29 ) }
    dend_48 { pt3dadd( 15.821, -37.3551, -0.484357, 0.74 ) }
    dend_48 { pt3dadd( 16.014, -37.2694, -0.558739, 0.74 ) }
    dend_48 { pt3dadd( 16.3981, -37.0763, -0.643031, 1.03 ) }
    dend_48 { pt3dadd( 16.5477, -37.0125, -0.663541, 1.03 ) }
    dend_48 { pt3dadd( 16.929, -36.9184, -0.716344, 1.03 ) }
    dend_48 { pt3dadd( 17.7438, -36.856, -0.82873, 0.59 ) }
    dend_48 { pt3dadd( 18.735, -36.9206, -0.962742, 0.22 ) }
    dend_48 { pt3dadd( 19.5812, -37.0659, -1.05181, 0.22 ) }
    dend_48 { pt3dadd( 20.1956, -37.2118, -1.10512, 0.88 ) }
    dend_48 { pt3dadd( 21.3576, -37.4905, -1.23413, 1.84 ) }
    dend_48 { pt3dadd( 21.9522, -37.643, -1.30722, 2.14 ) }
    dend_48 { pt3dadd( 22.7844, -37.8538, -1.39567, 2.36 ) }
    dend_48 { pt3dadd( 24.2381, -38.1501, -1.50334, 0.66 ) }
    dend_48 { pt3dadd( 25.3968, -38.2797, -1.55875, 0.59 ) }
    dend_48 { pt3dadd( 27.1448, -38.3359, -1.60271, 0.52 ) }
    dend_48 { pt3dadd( 27.2225, -38.3304, -1.60299, 0.52 ) }
    dend_48 { pt3dadd( 28.1318, -38.1722, -1.62749, 1.33 ) }
    dend_48 { pt3dadd( 29.2347, -37.8414, -1.6907, 1.77 ) }
    dend_48 { pt3dadd( 29.9182, -37.5676, -1.7078, 1.77 ) }
    dend_48 { pt3dadd( 30.1871, -37.4629, -1.70364, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 31.1187, -37.1767, -1.66305, 1.25 ) }
    dend_48 { pt3dadd( 32.4647, -36.8589, -1.62973, 0.52 ) }
    dend_48 { pt3dadd( 33.7457, -36.6471, -1.63876, 0.29 ) }
    dend_48 { pt3dadd( 35.0483, -36.518, -1.6591, 0.29 ) }
    dend_48 { pt3dadd( 36.3089, -36.4424, -1.65922, 0.22 ) }
    dend_48 { pt3dadd( 37.4666, -36.4288, -1.7745, 0.22 ) }
    dend_48 { pt3dadd( 37.5536, -36.4298, -1.79202, 0.22 ) }
    dend_48 { pt3dadd( 38.1084, -36.4098, -1.97621, 1.03 ) }
    dend_48 { pt3dadd( 38.5655, -36.3839, -2.19845, 1.47 ) }
    dend_48 { pt3dadd( 39.1509, -36.3206, -2.55662, 1.47 ) }
    dend_48 { pt3dadd( 40.997, -36.0525, -3.79597, 0.59 ) }
    dend_48 { pt3dadd( 41.7755, -35.9503, -4.36418, 0.22 ) }
    dend_48 { pt3dadd( 42.6856, -35.894, -5.00495, 0.22 ) }
    dend_48 { pt3dadd( 43.2966, -35.8995, -5.43221, 0.22 ) }
    dend_48 { pt3dadd( 43.3605, -35.9042, -5.47493, 0.22 ) }
    dend_48 { pt3dadd( 44.1932, -36.0372, -5.95341, 0.22 ) }
    dend_48 { pt3dadd( 44.2594, -36.0503, -5.99053, 0.22 ) }
    dend_48 { pt3dadd( 45.1682, -36.2596, -6.63776, 1.03 ) }
    dend_48 { pt3dadd( 45.9361, -36.4683, -7.21532, 1.62 ) }
    dend_48 { pt3dadd( 45.9957, -36.4815, -7.26211, 1.62 ) }
    dend_48 { pt3dadd( 46.2787, -36.5412, -7.47584, 1.62 ) }
    dend_48 { pt3dadd( 47.9985, -36.8829, -8.66856, 0.15 ) }
    dend_48 { pt3dadd( 48.0629, -36.8987, -8.70913, 0.15 ) }
    dend_48 { pt3dadd( 48.9133, -37.1682, -9.21404, 0.15 ) }
    dend_48 { pt3dadd( 48.9873, -37.1938, -9.25362, 0.15 ) }
    dend_48 { pt3dadd( 50.2926, -37.6549, -9.91101, 1.77 ) }
    dend_48 { pt3dadd( 51.1782, -38.0096, -10.2862, 2.73 ) }
    dend_48 { pt3dadd( 51.7328, -38.2385, -10.4251, 3.02 ) }
    dend_48 { pt3dadd( 54.7387, -39.443, -10.9416, 0.22 ) }
    dend_48 { pt3dadd( 55.3484, -39.6684, -10.9846, 0.22 ) }
    dend_48 { pt3dadd( 55.4105, -39.6898, -10.9823, 0.22 ) }
    dend_48 { pt3dadd( 56.9648, -40.1515, -10.6766, 0.22 ) }
    dend_48 { pt3dadd( 59.097, -40.6029, -9.97492, 0.22 ) }
    dend_48 { pt3dadd( 59.2359, -40.626, -9.91173, 0.22 ) }
    dend_48 { pt3dadd( 60.1627, -40.7652, -9.34864, 1.55 ) }
    dend_48 { pt3dadd( 61.0718, -40.9027, -8.82489, 2.21 ) }
    dend_48 { pt3dadd( 61.9282, -41.031, -8.37719, 1.4 ) }
    dend_48 { pt3dadd( 63.419, -41.2377, -7.73672, 0.22 ) }
    dend_48 { pt3dadd( 64.415, -41.4391, -7.35364, 0.22 ) }
    dend_48 { pt3dadd( 65.2469, -41.6308, -6.99779, 0.22 ) }
    dend_48 { pt3dadd( 65.7392, -41.7707, -6.7428, 0.44 ) }
    dend_48 { pt3dadd( 65.804, -41.7913, -6.70558, 0.44 ) }
    dend_48 { pt3dadd( 66.4587, -42.0344, -6.25824, 0.22 ) }
    dend_48 { pt3dadd( 67.954, -42.6503, -5.14991, 1.62 ) }
    dend_48 { pt3dadd( 68.5326, -42.9138, -4.71192, 2.14 ) }
    dend_48 { pt3dadd( 70.7247, -44.0115, -3.08072, 0.22 ) }
    dend_48 { pt3dadd( 71.3218, -44.3392, -2.64423, 1.47 ) }
    dend_48 { pt3dadd( 73.2437, -45.474, -1.28885, 1.11 ) }
    dend_48 { pt3dadd( 73.8299, -45.8568, -0.898856, 1.33 ) }
    dend_48 { pt3dadd( 75.3779, -46.9143, -0.0496191, 0.22 ) }
    dend_48 { pt3dadd( 76.143, -47.4318, 0.357016, 0.22 ) }
    dend_48 { pt3dadd( 76.5484, -47.6988, 0.552735, 1.47 ) }
    dend_48 { pt3dadd( 76.9435, -47.9316, 0.786505, 2.14 ) }
    dend_48 { pt3dadd( 77.699, -48.3295, 1.25215, 2.14 ) }
    dend_48 { pt3dadd( 79.5862, -49.3163, 2.55482, 0.22 ) }
    dend_48 { pt3dadd( 81.2034, -50.1503, 3.77264, 1.77 ) }
    dend_48 { pt3dadd( 81.572, -50.3482, 4.06775, 2.36 ) }
    dend_48 { pt3dadd( 84.2777, -51.8734, 6.41395, 0.29 ) }
    dend_48 { pt3dadd( 85.1478, -52.386, 7.19537, 0.29 ) }
    dend_48 { pt3dadd( 85.7247, -52.7557, 7.73822, 0.29 ) }
    dend_48 { pt3dadd( 85.7741, -52.7923, 7.78437, 0.29 ) }
    dend_48 { pt3dadd( 86.2504, -53.1679, 8.20333, 0.29 ) }
    dend_48 { pt3dadd( 87.8931, -54.4871, 9.59991, 2.28 ) }
    dend_48 { pt3dadd( 88.3875, -54.8754, 9.98621, 2.65 ) }
    dend_48 { pt3dadd( 90.2588, -56.2721, 11.4953, 0.22 ) }
    dend_48 { pt3dadd( 90.9425, -56.7558, 12.0387, 0.22 ) }
    dend_48 { pt3dadd( 92.1092, -57.5316, 12.8939, 0.96 ) }
    dend_48 { pt3dadd( 92.7251, -57.9014, 13.2977, 1.47 ) }
    dend_48 { pt3dadd( 94.8621, -59.0143, 14.42, 0.22 ) }
    dend_48 { pt3dadd( 95.948, -59.4724, 14.8965, 0.81 ) }
    dend_48 { pt3dadd( 96.0991, -59.522, 14.9475, 0.81 ) }
    dend_48 { pt3dadd( 97.972, -59.9768, 15.3903, 0.22 ) }
    dend_48 { pt3dadd( 98.9295, -60.1451, 15.4766, 0.22 ) }
    dend_48 { pt3dadd( 101.021, -60.4208, 15.5523, 0.22 ) }
    dend_48 { pt3dadd( 102.138, -60.4914, 15.4647, 0.22 ) }
    dend_48 { pt3dadd( 102.215, -60.4929, 15.4543, 0.22 ) }
    dend_48 { pt3dadd( 103.996, -60.4865, 15.155, 0.96 ) }
    dend_48 { pt3dadd( 105.067, -60.4166, 14.8607, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 10.3554, -34.2692, 5.70273, 1.25 ) }
    dend_39 { pt3dadd( 9.86925, -35.4816, 5.65401, 1.25 ) }
    dend_39 { pt3dadd( 9.47665, -36.7147, 5.56621, 0.81 ) }
    dend_39 { pt3dadd( 9.27201, -37.6855, 5.45794, 0.81 ) }
    dend_39 { pt3dadd( 9.15691, -38.8084, 5.30779, 0.96 ) }
    dend_39 { pt3dadd( 9.13903, -39.9582, 5.12384, 0.74 ) }
    dend_39 { pt3dadd( 9.12548, -40.83, 4.98438, 1.11 ) }
    dend_39 { pt3dadd( 9.18093, -41.4137, 4.84363, 1.69 ) }
    dend_39 { pt3dadd( 9.42964, -42.3644, 4.56667, 2.36 ) }
    dend_39 { pt3dadd( 9.76301, -43.0884, 4.32256, 2.65 ) }
    dend_39 { pt3dadd( 10.077, -43.5321, 4.15827, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -6.51551, -19.8471, 13.8486, 0.81 ) }
    dend_37 { pt3dadd( -7.17581, -18.6043, 13.9359, 0.81 ) }
    dend_37 { pt3dadd( -7.67963, -17.5769, 13.9033, 0.66 ) }
    dend_37 { pt3dadd( -8.17539, -16.5116, 13.832, 0.66 ) }
    dend_37 { pt3dadd( -8.46925, -15.9152, 13.7547, 0.96 ) }
    dend_37 { pt3dadd( -9.03286, -14.884, 13.5938, 0.44 ) }
    dend_37 { pt3dadd( -9.4729, -14.1307, 13.4641, 0.44 ) }
    dend_37 { pt3dadd( -10.1879, -12.9861, 13.1672, 0.59 ) }
    dend_37 { pt3dadd( -10.4872, -12.6052, 13.0381, 0.59 ) }
    dend_37 { pt3dadd( -11.2587, -11.9796, 12.798, 0.59 ) }
    dend_37 { pt3dadd( -11.9258, -11.6826, 12.6867, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -12.0031, -11.6692, 12.6843, 0.59 ) }
    dend_37 { pt3dadd( -12.7712, -11.6566, 12.7165, 0.59 ) }
    dend_37 { pt3dadd( -13.7957, -11.7358, 12.8668, 1.33 ) }
    dend_37 { pt3dadd( -14.6791, -11.832, 13.0491, 1.69 ) }
    dend_37 { pt3dadd( -15.5618, -11.935, 13.3093, 1.55 ) }
    dend_37 { pt3dadd( -16.5633, -12.0545, 13.7534, 0.88 ) }
    dend_37 { pt3dadd( -17.3399, -12.131, 14.418, 0.44 ) }
    dend_37 { pt3dadd( -17.9198, -12.2038, 15.2666, 0.44 ) }
    dend_37 { pt3dadd( -18.1221, -12.2585, 15.7261, 0.74 ) }
    dend_37 { pt3dadd( -18.3548, -12.3943, 16.5149, 0.88 ) }
    dend_37 { pt3dadd( -18.8132, -12.8035, 18.4844, 1.03 ) }
    dend_37 { pt3dadd( -19.4848, -13.6081, 21.8385, 0.52 ) }
    dend_37 { pt3dadd( -19.7852, -14.0387, 23.4549, 1.25 ) }
    dend_37 { pt3dadd( -20.0493, -14.4919, 24.9229, 1.25 ) }
    dend_37 { pt3dadd( -20.2142, -14.9649, 26.3211, 0.44 ) }
    dend_37 { pt3dadd( -20.2997, -15.36, 27.3899, 0.44 ) }
    dend_37 { pt3dadd( -20.3466, -15.8409, 28.8102, 0.29 ) }
    dend_37 { pt3dadd( -20.2843, -16.4641, 31.1273, 1.99 ) }
    dend_37 { pt3dadd( -20.2698, -16.6192, 31.7861, 1.99 ) }
    dend_37 { pt3dadd( -20.2281, -17.6401, 36.4707, 1.99 ) }
    dend_37 { pt3dadd( -20.228, -17.6557, 36.5475, 1.99 ) }
    dend_37 { pt3dadd( -20.2206, -19.0928, 43.8485, 2.73 ) }
    dend_37 { pt3dadd( -20.3194, -20.7285, 52.2222, 1.4 ) }
    dend_37 { pt3dadd( -20.3632, -20.9654, 53.4557, 1.25 ) }
    dend_37 { pt3dadd( -20.4526, -21.1712, 54.5815, 0.22 ) }
    dend_37 { pt3dadd( -20.5613, -21.3094, 55.2981, 0.22 ) }
    dend_37 { pt3dadd( -20.6208, -21.3815, 55.6136, 1.11 ) }
    dend_37 { pt3dadd( -20.9331, -21.7005, 56.5843, 1.47 ) }
    dend_37 { pt3dadd( -22.1892, -22.9022, 59.2311, 1.18 ) }
    dend_37 { pt3dadd( -22.5109, -23.236, 60.0172, 1.99 ) }
    dend_37 { pt3dadd( -23.2399, -24.0155, 61.9601, 0.22 ) }
    dend_37 { pt3dadd( -23.6931, -24.5009, 63.1651, 0.22 ) }
    dend_37 { pt3dadd( -23.837, -24.6456, 63.5213, 0.66 ) }
    dend_37 { pt3dadd( -24.4611, -25.2379, 64.9895, 0.66 ) }
    dend_37 { pt3dadd( -24.9709, -25.6336, 65.8834, 0.29 ) }
    dend_37 { pt3dadd( -25.5423, -25.9981, 66.8852, 1.33 ) }
    dend_37 { pt3dadd( -25.7546, -26.0397, 67.1741, 1.62 ) }
    dend_37 { pt3dadd( -26.1579, -26.0533, 67.6981, 1.84 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.51551, -19.8471, 13.8486, 1.62 ) }
    dend_34 { pt3dadd( -6.69962, -20.9722, 13.6223, 1.62 ) }
    dend_34 { pt3dadd( -6.85629, -21.8593, 13.4354, 1.33 ) }
    dend_34 { pt3dadd( -7.05437, -22.96, 13.1855, 0.88 ) }
    dend_34 { pt3dadd( -7.27034, -24.2216, 12.8822, 0.74 ) }
    dend_34 { pt3dadd( -7.52, -25.7255, 12.5168, 0.74 ) }
    dend_34 { pt3dadd( -7.71939, -27.1222, 12.1941, 2.14 ) }
    dend_34 { pt3dadd( -7.8622, -28.435, 11.9233, 2.21 ) }
    dend_34 { pt3dadd( -7.94834, -30.006, 11.6963, 1.47 ) }
    dend_34 { pt3dadd( -7.91436, -31.2224, 11.6092, 1.18 ) }
    dend_34 { pt3dadd( -7.81021, -31.9298, 11.6249, 0.88 ) }
    dend_34 { pt3dadd( -7.48193, -33.0236, 11.8246, 0.59 ) }
    dend_34 { pt3dadd( -6.94915, -34.2839, 12.218, 0.59 ) }
    dend_34 { pt3dadd( -6.36774, -35.4811, 12.7097, 1.18 ) }
    dend_34 { pt3dadd( -6.10928, -35.9891, 12.9737, 1.47 ) }
    dend_34 { pt3dadd( -5.75405, -36.7478, 13.4209, 1.11 ) }
    dend_34 { pt3dadd( -5.33245, -38.0406, 14.1776, 0.74 ) }
    dend_34 { pt3dadd( -5.44678, -38.7061, 14.4612, 0.44 ) }
    dend_34 { pt3dadd( -6.07371, -39.4098, 14.5683, 0.44 ) }
    dend_34 { pt3dadd( -6.76747, -39.9775, 14.5633, 0.52 ) }
    dend_34 { pt3dadd( -7.58016, -40.5092, 14.5258, 0.52 ) }
    dend_34 { pt3dadd( -8.36909, -40.9641, 14.4655, 1.18 ) }
    dend_34 { pt3dadd( -9.43831, -41.5711, 14.3588, 1.92 ) }
    dend_34 { pt3dadd( -10.5376, -42.2783, 14.2282, 2.5 ) }
    dend_34 { pt3dadd( -11.5715, -43.0805, 14.0763, 2.36 ) }
    dend_34 { pt3dadd( -12.7644, -44.1822, 13.8645, 2.06 ) }
    dend_34 { pt3dadd( -13.6936, -45.1779, 13.665, 0.59 ) }
    dend_34 { pt3dadd( -14.4922, -46.1166, 13.496, 0.52 ) }
    dend_34 { pt3dadd( -15.2778, -47.1428, 13.3329, 0.44 ) }
    dend_34 { pt3dadd( -16.0314, -48.2426, 13.1326, 1.4 ) }
    dend_34 { pt3dadd( -16.6409, -49.2416, 12.9446, 1.84 ) }
    dend_34 { pt3dadd( -17.267, -50.396, 12.7142, 1.84 ) }
    dend_34 { pt3dadd( -17.7442, -51.3203, 12.5213, 1.69 ) }
    dend_34 { pt3dadd( -18.2493, -52.3415, 12.3033, 1.18 ) }
    dend_34 { pt3dadd( -18.7216, -53.3777, 12.061, 0.74 ) }
    dend_34 { pt3dadd( -18.9812, -54.0352, 11.8738, 0.66 ) }
    dend_34 { pt3dadd( -19.3009, -55.014, 11.5399, 0.59 ) }
    dend_34 { pt3dadd( -19.5204, -55.8675, 11.1787, 0.52 ) }
    dend_34 { pt3dadd( -19.6536, -56.473, 10.8726, 0.37 ) }
    dend_34 { pt3dadd( -19.8796, -57.5626, 10.2836, 0.29 ) }
    dend_34 { pt3dadd( -20.1052, -58.569, 9.73247, 0.29 ) }
    dend_34 { pt3dadd( -20.1249, -58.6417, 9.69116, 0.29 ) }
    dend_34 { pt3dadd( -20.6038, -60.0157, 8.91682, 1.77 ) }
    dend_34 { pt3dadd( -21.0737, -61.1645, 8.36818, 2.36 ) }
    dend_34 { pt3dadd( -21.0976, -61.2191, 8.34521, 2.36 ) }
    dend_34 { pt3dadd( -21.3827, -61.8554, 8.12818, 2.58 ) }
    dend_34 { pt3dadd( -21.6902, -62.5495, 7.91037, 2.58 ) }
    dend_34 { pt3dadd( -22.1959, -63.6627, 7.55374, 1.84 ) }
    dend_34 { pt3dadd( -22.7195, -64.8732, 7.17765, 0.81 ) }
    dend_34 { pt3dadd( -23.1551, -65.9679, 6.84485, 0.52 ) }
    dend_34 { pt3dadd( -23.51, -66.949, 6.5799, 0.44 ) }
    dend_34 { pt3dadd( -23.9653, -68.2871, 6.26407, 0.44 ) }
    dend_34 { pt3dadd( -24.3245, -69.4576, 6.06313, 0.37 ) }
    dend_34 { pt3dadd( -24.5277, -70.2326, 5.99806, 0.37 ) }
    dend_34 { pt3dadd( -24.6991, -70.9825, 5.99004, 0.37 ) }
    dend_34 { pt3dadd( -24.9031, -72.0154, 6.07438, 0.29 ) }
    dend_34 { pt3dadd( -25.0312, -72.8717, 6.18272, 0.29 ) }
    dend_34 { pt3dadd( -25.1693, -74.2341, 6.48532, 1.99 ) }
    dend_34 { pt3dadd( -25.2484, -75.1225, 6.75109, 2.95 ) }
    dend_34 { pt3dadd( -25.3042, -75.6715, 6.94518, 2.95 ) }
    dend_34 { pt3dadd( -25.4787, -77.503, 7.63616, 0.59 ) }
    dend_34 { pt3dadd( -25.5467, -78.5606, 8.07155, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -25.5969, -79.9969, 8.71684, 0.37 ) }
    dend_34 { pt3dadd( -25.6013, -81.0295, 9.19853, 0.37 ) }
    dend_34 { pt3dadd( -25.5292, -82.0431, 9.68115, 1.69 ) }
    dend_34 { pt3dadd( -25.4465, -82.6089, 9.96296, 2.58 ) }
    dend_34 { pt3dadd( -25.2651, -83.4577, 10.3965, 2.58 ) }
    dend_34 { pt3dadd( -24.9533, -84.8785, 11.0971, 0.29 ) }
    dend_34 { pt3dadd( -24.7527, -85.8555, 11.4994, 0.29 ) }
    dend_34 { pt3dadd( -24.5087, -87.1589, 12.0675, 0.29 ) }
    dend_34 { pt3dadd( -24.3386, -88.1555, 12.5249, 0.66 ) }
    dend_34 { pt3dadd( -24.285, -88.5248, 12.7089, 0.74 ) }
    dend_34 { pt3dadd( -24.1663, -89.4672, 13.1977, 0.29 ) }
    dend_34 { pt3dadd( -24.0659, -90.362, 13.7263, 0.29 ) }
    dend_34 { pt3dadd( -23.9837, -91.8447, 14.6427, 1.4 ) }
    dend_34 { pt3dadd( -23.9743, -92.3366, 14.9279, 1.92 ) }
    dend_34 { pt3dadd( -23.9692, -92.4027, 14.9615, 1.92 ) }
    dend_34 { pt3dadd( -23.9082, -92.7663, 15.1324, 1.92 ) }
    dend_34 { pt3dadd( -23.5665, -94.09, 15.6351, 0.22 ) }
    dend_34 { pt3dadd( -23.544, -94.1581, 15.6565, 0.22 ) }
    dend_34 { pt3dadd( -23.2312, -95.0154, 15.8964, 0.66 ) }
    dend_34 { pt3dadd( -23.0953, -95.362, 15.9975, 0.81 ) }
    dend_34 { pt3dadd( -22.6141, -96.4206, 16.2997, 0.22 ) }
    dend_34 { pt3dadd( -22.1407, -97.3881, 16.5607, 2.14 ) }
    dend_34 { pt3dadd( -21.7267, -98.1733, 16.7528, 2.58 ) }
    dend_34 { pt3dadd( -20.6734, -100.026, 17.213, 0.22 ) }
    dend_34 { pt3dadd( -20.1308, -100.94, 17.4451, 0.22 ) }
    dend_34 { pt3dadd( -19.5032, -101.964, 17.701, 0.22 ) }
    dend_34 { pt3dadd( -19.0055, -102.74, 17.8821, 0.22 ) }
    dend_34 { pt3dadd( -18.4984, -103.478, 18.0576, 2.36 ) }
    dend_34 { pt3dadd( -17.6929, -104.599, 18.2903, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 52.7352, -22.2861, -107.097, 0.15 ) }
    dend_31 { pt3dadd( 56.3017, -24.8252, -127.992, 0.15 ) }
    dend_31 { pt3dadd( 56.5516, -25.0268, -129.405, 1.69 ) }
    dend_31 { pt3dadd( 56.6783, -25.1363, -130.105, 1.92 ) }
    dend_31 { pt3dadd( 56.6973, -25.154, -130.202, 1.92 ) }
    dend_31 { pt3dadd( 57.4455, -25.8854, -133.758, 0.22 ) }
    dend_31 { pt3dadd( 57.6015, -26.0445, -134.432, 0.22 ) }
    dend_31 { pt3dadd( 58.1024, -26.7534, -135.212, 1.18 ) }
    dend_31 { pt3dadd( 58.1339, -26.8059, -135.273, 1.18 ) }
    dend_31 { pt3dadd( 58.736, -27.8499, -136.59, 0.29 ) }
    dend_31 { pt3dadd( 59.0108, -28.2835, -137.154, 0.59 ) }
    dend_31 { pt3dadd( 59.5695, -29.0962, -138.22, 0.37 ) }
    dend_31 { pt3dadd( 60.6101, -30.3119, -140.007, 0.74 ) }
    dend_31 { pt3dadd( 60.656, -30.3578, -140.082, 0.74 ) }
    dend_31 { pt3dadd( 61.5629, -31.3094, -141.766, 0.15 ) }
    dend_31 { pt3dadd( 61.9868, -31.7671, -142.682, 0.15 ) }
    dend_31 { pt3dadd( 62.0181, -31.8057, -142.754, 0.15 ) }
    dend_31 { pt3dadd( 62.2097, -32.0753, -143.233, 0.15 ) }
    dend_31 { pt3dadd( 62.2473, -32.142, -143.329, 0.15 ) }
    dend_31 { pt3dadd( 62.7363, -33.0276, -144.503, 0.15 ) }
    dend_31 { pt3dadd( 63.1142, -33.7304, -145.377, 1.4 ) }
    dend_31 { pt3dadd( 63.3772, -34.2108, -145.966, 1.69 ) }
    dend_31 { pt3dadd( 64.5524, -36.3218, -148.521, 0.22 ) }
    dend_31 { pt3dadd( 64.9611, -37.0327, -149.384, 0.22 ) }
    dend_31 { pt3dadd( 65.4592, -37.8887, -150.345, 0.22 ) }
    dend_31 { pt3dadd( 65.8356, -38.4912, -150.958, 0.96 ) }
    dend_31 { pt3dadd( 65.9836, -38.7463, -151.188, 0.96 ) }
    dend_31 { pt3dadd( 66.682, -39.8905, -152.151, 0.22 ) }
    dend_31 { pt3dadd( 66.7145, -39.9442, -152.189, 0.22 ) }
    dend_31 { pt3dadd( 67.3413, -41.0079, -152.957, 0.22 ) }
    dend_31 { pt3dadd( 67.9075, -42.1122, -153.655, 1.55 ) }
    dend_31 { pt3dadd( 68.221, -42.7008, -153.982, 1.99 ) }
    dend_31 { pt3dadd( 69.1217, -44.3558, -154.945, 0.29 ) }
    dend_31 { pt3dadd( 69.1596, -44.4219, -154.985, 0.29 ) }
    dend_31 { pt3dadd( 69.7028, -45.3847, -155.669, 0.29 ) }
    dend_31 { pt3dadd( 70.3609, -46.6734, -156.67, 0.29 ) }
    dend_31 { pt3dadd( 70.555, -47.1368, -157.077, 0.29 ) }
    dend_31 { pt3dadd( 71.1679, -48.8788, -158.905, 1.4 ) }
    dend_31 { pt3dadd( 71.3271, -49.4604, -159.606, 1.69 ) }
    dend_31 { pt3dadd( 71.7027, -51.0306, -161.638, 0.29 ) }
    dend_31 { pt3dadd( 71.9013, -52.136, -163.207, 0.29 ) }
    dend_31 { pt3dadd( 72.0536, -53.5253, -165.269, 1.47 ) }
    dend_31 { pt3dadd( 72.0919, -55.0512, -167.548, 1.18 ) }
    dend_31 { pt3dadd( 72.0068, -56.4469, -169.574, 0.22 ) }
    dend_31 { pt3dadd( 71.9205, -57.0249, -170.375, 0.22 ) }
    dend_31 { pt3dadd( 71.6492, -58.128, -171.797, 1.69 ) }
    dend_31 { pt3dadd( 71.4852, -58.6422, -172.403, 1.77 ) }
    dend_31 { pt3dadd( 70.9322, -59.98, -173.639, 0.66 ) }
    dend_31 { pt3dadd( 70.5738, -60.675, -174.15, 0.22 ) }
    dend_31 { pt3dadd( 70.0739, -61.5345, -174.717, 0.96 ) }
    dend_31 { pt3dadd( 69.5594, -62.415, -175.33, 0.22 ) }
    dend_31 { pt3dadd( 69.3424, -62.8439, -175.705, 0.15 ) }
    dend_31 { pt3dadd( 69.0516, -63.5864, -176.564, 0.15 ) }
    dend_31 { pt3dadd( 68.7737, -64.509, -177.735, 0.44 ) }
    dend_31 { pt3dadd( 68.5671, -65.256, -178.775, 1.33 ) }
    dend_31 { pt3dadd( 68.3908, -65.8987, -179.728, 1.25 ) }
    dend_31 { pt3dadd( 67.6906, -67.938, -183.023, 1.25 ) }
    dend_31 { pt3dadd( 67.1691, -69.3315, -185.429, 0.15 ) }
    dend_31 { pt3dadd( 66.9636, -69.8374, -186.329, 0.15 ) }
    dend_31 { pt3dadd( 66.6382, -70.4893, -187.534, 0.81 ) }
    dend_31 { pt3dadd( 66.4936, -70.7429, -187.998, 0.96 ) }
    dend_31 { pt3dadd( 65.7713, -71.9613, -190.046, 0.52 ) }
    dend_31 { pt3dadd( 65.1484, -73.0285, -191.658, 0.22 ) }
    dend_31 { pt3dadd( 64.868, -73.5428, -192.399, 1.18 ) }
    dend_31 { pt3dadd( 63.9385, -75.5499, -195.299, 0.22 ) }
    dend_31 { pt3dadd( 63.6629, -76.2599, -196.292, 0.96 ) }
    dend_31 { pt3dadd( 63.1958, -77.7357, -198.268, 0.22 ) }
    dend_31 { pt3dadd( 63.0945, -78.1854, -198.816, 0.52 ) }
    dend_31 { pt3dadd( 63.0544, -78.3601, -199.02, 0.52 ) }
    dend_31 { pt3dadd( 62.6958, -80.1764, -201.127, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 52.7352, -22.2861, -107.097, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 54.3174, -20.8699, -111.105, 1.55 ) }
    dend_30 { pt3dadd( 54.6627, -20.6079, -111.864, 1.62 ) }
    dend_30 { pt3dadd( 56.7498, -19.3015, -115.826, 0.22 ) }
    dend_30 { pt3dadd( 56.7937, -19.2781, -115.901, 0.22 ) }
    dend_30 { pt3dadd( 57.3391, -19.0429, -116.751, 1.33 ) }
    dend_30 { pt3dadd( 57.6612, -18.9256, -117.217, 1.25 ) }
    dend_30 { pt3dadd( 59.5404, -18.4708, -119.359, 0.22 ) }
    dend_30 { pt3dadd( 60.3231, -18.3277, -120.161, 1.18 ) }
    dend_30 { pt3dadd( 60.7405, -18.2758, -120.513, 1.33 ) }
    dend_30 { pt3dadd( 62.6478, -18.0623, -122.052, 0.22 ) }
    dend_30 { pt3dadd( 63.9906, -17.9297, -123.104, 1.84 ) }
    dend_30 { pt3dadd( 64.3906, -17.8819, -123.393, 1.84 ) }
    dend_30 { pt3dadd( 65.5928, -17.7143, -124.115, 0.29 ) }
    dend_30 { pt3dadd( 65.9061, -17.6619, -124.29, 0.74 ) }
    dend_30 { pt3dadd( 67.2165, -17.399, -124.948, 0.22 ) }
    dend_30 { pt3dadd( 67.3568, -17.3613, -125.009, 0.22 ) }
    dend_30 { pt3dadd( 67.9486, -17.1724, -125.266, 0.88 ) }
    dend_30 { pt3dadd( 69.3745, -16.5739, -126.075, 0.22 ) }
    dend_30 { pt3dadd( 69.6554, -16.4316, -126.262, 0.52 ) }
    dend_30 { pt3dadd( 70.1308, -16.1651, -126.61, 0.22 ) }
    dend_30 { pt3dadd( 71.1912, -15.5417, -127.466, 1.92 ) }
    dend_30 { pt3dadd( 71.6603, -15.2512, -127.866, 1.92 ) }
    dend_30 { pt3dadd( 73.0976, -14.2787, -129.188, 0.22 ) }
    dend_30 { pt3dadd( 73.3255, -14.107, -129.405, 0.88 ) }
    dend_30 { pt3dadd( 73.5211, -13.9622, -129.589, 0.88 ) }
    dend_30 { pt3dadd( 74.3396, -13.3977, -130.299, 0.22 ) }
    dend_30 { pt3dadd( 74.7385, -13.1389, -130.633, 0.22 ) }
    dend_30 { pt3dadd( 74.7837, -13.1071, -130.674, 0.22 ) }
    dend_30 { pt3dadd( 75.015, -12.9706, -130.87, 0.22 ) }
    dend_30 { pt3dadd( 75.9716, -12.4676, -131.699, 1.4 ) }
    dend_30 { pt3dadd( 76.1886, -12.3626, -131.882, 1.4 ) }
    dend_30 { pt3dadd( 77.3559, -11.8485, -132.841, 0.22 ) }
    dend_30 { pt3dadd( 77.8093, -11.6945, -133.191, 0.96 ) }
    dend_30 { pt3dadd( 78.897, -11.3965, -133.967, 0.22 ) }
    dend_30 { pt3dadd( 79.1962, -11.3371, -134.162, 0.22 ) }
    dend_30 { pt3dadd( 79.6458, -11.3061, -134.394, 0.66 ) }
    dend_30 { pt3dadd( 80.2979, -11.3333, -134.66, 0.66 ) }
    dend_30 { pt3dadd( 81.4335, -11.5234, -134.973, 0.22 ) }
    dend_30 { pt3dadd( 81.9832, -11.6643, -135.087, 1.11 ) }
    dend_30 { pt3dadd( 82.3364, -11.7842, -135.144, 1.4 ) }
    dend_30 { pt3dadd( 83.7463, -12.421, -135.357, 0.22 ) }
    dend_30 { pt3dadd( 84.362, -12.7641, -135.439, 0.22 ) }
    dend_30 { pt3dadd( 85.0825, -13.2362, -135.512, 0.96 ) }
    dend_30 { pt3dadd( 85.6753, -13.6612, -135.565, 1.47 ) }
    dend_30 { pt3dadd( 86.6485, -14.3938, -135.663, 0.22 ) }
    dend_30 { pt3dadd( 87.1655, -14.771, -135.76, 0.22 ) }
    dend_30 { pt3dadd( 87.2576, -14.8373, -135.786, 0.22 ) }
    dend_30 { pt3dadd( 87.8392, -15.2202, -135.987, 0.22 ) }
    dend_30 { pt3dadd( 88.6776, -15.7333, -136.317, 1.33 ) }
    dend_30 { pt3dadd( 89.0584, -15.9369, -136.479, 1.62 ) }
    dend_30 { pt3dadd( 90.4467, -16.5788, -137.1, 0.22 ) }
    dend_30 { pt3dadd( 91.081, -16.8531, -137.38, 0.66 ) }
    dend_30 { pt3dadd( 91.4525, -17.0162, -137.551, 0.66 ) }
    dend_30 { pt3dadd( 91.566, -17.0679, -137.607, 0.66 ) }
    dend_30 { pt3dadd( 92.6739, -17.5935, -138.163, 0.22 ) }
    dend_30 { pt3dadd( 93.465, -17.9871, -138.63, 1.11 ) }
    dend_30 { pt3dadd( 94.0041, -18.2691, -138.972, 1.33 ) }
    dend_30 { pt3dadd( 95.1628, -18.8807, -139.768, 0.22 ) }
    dend_30 { pt3dadd( 95.9871, -19.2946, -140.374, 1.25 ) }
    dend_30 { pt3dadd( 96.3327, -19.4522, -140.677, 1.33 ) }
    dend_30 { pt3dadd( 97.9483, -20.1463, -142.274, 0.22 ) }
    dend_30 { pt3dadd( 98.1465, -20.2259, -142.483, 0.44 ) }
    dend_30 { pt3dadd( 98.2348, -20.2573, -142.584, 0.44 ) }
    dend_30 { pt3dadd( 98.9458, -20.4742, -143.46, 1.18 ) }
    dend_30 { pt3dadd( 100.643, -20.8881, -145.63, 0.22 ) }
    dend_30 { pt3dadd( 101.043, -20.9644, -146.155, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.5843, -26.0184, -45.9663, 1.55 ) }
    dend_28 { pt3dadd( -11.0604, -26.5, -47.2123, 1.55 ) }
    dend_28 { pt3dadd( -11.4859, -26.8273, -48.2625, 0.22 ) }
    dend_28 { pt3dadd( -11.6692, -26.9783, -48.7013, 0.22 ) }
    dend_28 { pt3dadd( -11.9696, -27.2528, -49.5208, 2.36 ) }
    dend_28 { pt3dadd( -12.1925, -27.4846, -50.2932, 2.87 ) }
    dend_28 { pt3dadd( -13.1083, -28.3534, -53.7466, 0.81 ) }
    dend_28 { pt3dadd( -13.1161, -28.3593, -53.7821, 0.81 ) }
    dend_28 { pt3dadd( -13.2598, -28.4707, -54.7044, 0.81 ) }
    dend_28 { pt3dadd( -13.3922, -28.6438, -56.4837, 2.06 ) }
    dend_28 { pt3dadd( -13.3886, -28.81, -58.3424, 1.25 ) }
    dend_28 { pt3dadd( -13.3064, -28.9585, -59.6915, 0.81 ) }
    dend_28 { pt3dadd( -13.0481, -29.348, -62.1927, 0.96 ) }
    dend_28 { pt3dadd( -13.0176, -29.4283, -62.7162, 1.47 ) }
    dend_28 { pt3dadd( -12.9893, -29.5924, -63.8233, 0.22 ) }
    dend_28 { pt3dadd( -12.9842, -29.6748, -64.2796, 0.22 ) }
    dend_28 { pt3dadd( -12.9766, -29.8931, -65.5366, 1.4 ) }
    dend_28 { pt3dadd( -12.969, -30.1504, -66.9819, 1.03 ) }
    dend_28 { pt3dadd( -12.9982, -30.3858, -68.2636, 1.69 ) }
    dend_28 { pt3dadd( -13.045, -30.6601, -69.7764, 1.4 ) }
    dend_28 { pt3dadd( -13.0651, -30.929, -71.2849, 1.4 ) }
    dend_28 { pt3dadd( -13.0007, -31.4223, -74.0106, 1.84 ) }
    dend_28 { pt3dadd( -12.842, -31.8143, -76.053, 0.15 ) }
    dend_28 { pt3dadd( -12.7455, -31.9743, -76.7594, 1.84 ) }
    dend_28 { pt3dadd( -12.6969, -32.0438, -77.0135, 1.84 ) }
    dend_28 { pt3dadd( -12.362, -32.5565, -78.5539, 0.22 ) }
    dend_28 { pt3dadd( -12.2226, -32.7626, -79.1459, 1.55 ) }
    dend_28 { pt3dadd( -12.1601, -32.8262, -79.3378, 1.77 ) }
    dend_28 { pt3dadd( -11.8046, -33.0382, -80.3277, 0.22 ) }
    dend_28 { pt3dadd( -11.6902, -33.0834, -80.6352, 0.22 ) }
    dend_28 { pt3dadd( -11.41, -33.1702, -81.3522, 1.77 ) }
    dend_28 { pt3dadd( -10.1063, -33.4644, -84.5446, 1.25 ) }
    dend_28 { pt3dadd( -9.52818, -33.5605, -85.9028, 0.81 ) }
    dend_28 { pt3dadd( -9.11547, -33.6204, -86.8452, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -8.93099, -33.6408, -87.2552, 0.37 ) }
    dend_28 { pt3dadd( -8.60316, -33.6854, -87.9275, 0.22 ) }
    dend_28 { pt3dadd( -8.13671, -33.7513, -88.7544, 1.77 ) }
    dend_28 { pt3dadd( -7.99124, -33.7805, -88.9642, 1.84 ) }
    dend_28 { pt3dadd( -6.85958, -34.0337, -90.5795, 0.96 ) }
    dend_28 { pt3dadd( -6.47824, -34.1212, -91.1055, 1.4 ) }
    dend_28 { pt3dadd( -5.74243, -34.2477, -92.1322, 0.22 ) }
    dend_28 { pt3dadd( -5.58914, -34.2612, -92.3384, 0.22 ) }
    dend_28 { pt3dadd( -5.53046, -34.2608, -92.4061, 0.22 ) }
    dend_28 { pt3dadd( -5.07572, -34.2258, -92.8509, 0.22 ) }
    dend_28 { pt3dadd( -4.79923, -34.1896, -93.0296, 1.18 ) }
    dend_28 { pt3dadd( -4.76185, -34.1853, -93.0488, 1.18 ) }
    dend_28 { pt3dadd( -4.44452, -34.1464, -93.1892, 1.18 ) }
    dend_28 { pt3dadd( -3.52981, -34.086, -93.5931, 0.29 ) }
    dend_28 { pt3dadd( -3.14031, -34.069, -93.7732, 0.44 ) }
    dend_28 { pt3dadd( -2.82336, -34.0536, -93.9205, 0.44 ) }
    dend_28 { pt3dadd( -2.31412, -34.0261, -94.1478, 0.22 ) }
    dend_28 { pt3dadd( -1.71465, -33.9915, -94.4049, 1.47 ) }
    dend_28 { pt3dadd( -1.40586, -33.9763, -94.5301, 1.62 ) }
    dend_28 { pt3dadd( -0.537214, -33.9354, -94.8437, 0.22 ) }
    dend_28 { pt3dadd( -0.0826016, -33.9134, -95.0236, 0.22 ) }
    dend_28 { pt3dadd( 0.17037, -33.914, -95.1367, 0.59 ) }
    dend_28 { pt3dadd( 0.202699, -33.9195, -95.1532, 0.59 ) }
    dend_28 { pt3dadd( 0.347596, -33.9891, -95.2622, 0.59 ) }
    dend_28 { pt3dadd( 0.401665, -34.0426, -95.3578, 0.59 ) }
    dend_28 { pt3dadd( 0.567556, -34.3404, -95.864, 0.15 ) }
    dend_28 { pt3dadd( 0.641202, -34.5084, -96.1469, 1.18 ) }
    dend_28 { pt3dadd( 0.718895, -34.7082, -96.4916, 1.18 ) }
    dend_28 { pt3dadd( 0.899402, -35.2402, -97.4299, 0.44 ) }
    dend_28 { pt3dadd( 1.09479, -36.0067, -98.7656, 0.22 ) }
    dend_28 { pt3dadd( 1.11348, -36.1733, -99.065, 0.22 ) }
    dend_28 { pt3dadd( 1.09634, -36.2775, -99.2974, 0.74 ) }
    dend_28 { pt3dadd( 1.08041, -36.3015, -99.3652, 0.74 ) }
    dend_28 { pt3dadd( 0.772281, -36.5382, -100.218, 0.22 ) }
    dend_28 { pt3dadd( 0.623168, -36.6233, -100.554, 0.22 ) }
    dend_28 { pt3dadd( 0.0479269, -36.8727, -101.678, 1.47 ) }
    dend_28 { pt3dadd( -0.689674, -37.1155, -102.993, 1.33 ) }
    dend_28 { pt3dadd( -1.48719, -37.341, -104.36, 0.59 ) }
    dend_28 { pt3dadd( -2.04488, -37.4729, -105.277, 0.44 ) }
    dend_28 { pt3dadd( -2.23517, -37.5046, -105.568, 0.44 ) }
    dend_28 { pt3dadd( -2.72512, -37.5663, -106.3, 0.22 ) }
    dend_28 { pt3dadd( -3.03297, -37.6006, -106.704, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.5843, -26.0184, -45.9663, 2.87 ) }
    dend_25 { pt3dadd( -11.2259, -26.325, -46.1998, 2.87 ) }
    dend_25 { pt3dadd( -12.3491, -26.8812, -46.5277, 2.73 ) }
    dend_25 { pt3dadd( -14.2626, -27.8391, -47.0082, 0.29 ) }
    dend_25 { pt3dadd( -14.5127, -27.962, -47.0828, 0.29 ) }
    dend_25 { pt3dadd( -15.9641, -28.6616, -47.5243, 0.29 ) }
    dend_25 { pt3dadd( -17.429, -29.3259, -47.972, 1.55 ) }
    dend_25 { pt3dadd( -18.1167, -29.6033, -48.1517, 2.21 ) }
    dend_25 { pt3dadd( -18.4333, -29.7143, -48.2414, 2.21 ) }
    dend_25 { pt3dadd( -20.5988, -30.4071, -49.0, 0.22 ) }
    dend_25 { pt3dadd( -21.3362, -30.6279, -49.3328, 0.22 ) }
    dend_25 { pt3dadd( -21.9911, -30.8094, -49.6937, 0.66 ) }
    dend_25 { pt3dadd( -22.2517, -30.8666, -49.8452, 0.81 ) }
    dend_25 { pt3dadd( -23.8079, -31.1554, -50.7213, 0.22 ) }
    dend_25 { pt3dadd( -24.4294, -31.2633, -51.0373, 0.22 ) }
    dend_25 { pt3dadd( -25.5432, -31.458, -51.5457, 1.84 ) }
    dend_25 { pt3dadd( -26.1132, -31.568, -51.8132, 2.21 ) }
    dend_25 { pt3dadd( -27.0247, -31.7861, -52.3103, 2.06 ) }
    dend_25 { pt3dadd( -28.5115, -32.1943, -53.2361, 0.29 ) }
    dend_25 { pt3dadd( -29.1307, -32.4056, -53.7019, 0.29 ) }
    dend_25 { pt3dadd( -30.3552, -32.8977, -54.7859, 1.69 ) }
    dend_25 { pt3dadd( -30.8499, -33.1325, -55.2814, 1.99 ) }
    dend_25 { pt3dadd( -32.5228, -34.0425, -57.1319, 1.11 ) }
    dend_25 { pt3dadd( -33.2116, -34.509, -57.9988, 1.11 ) }
    dend_25 { pt3dadd( -34.2244, -35.388, -59.5104, 0.29 ) }
    dend_25 { pt3dadd( -34.5332, -35.7144, -60.0412, 0.29 ) }
    dend_25 { pt3dadd( -34.6169, -35.8298, -60.2166, 0.52 ) }
    dend_25 { pt3dadd( -34.8122, -36.1795, -60.6986, 0.52 ) }
    dend_25 { pt3dadd( -34.9532, -36.6324, -61.298, 0.22 ) }
    dend_25 { pt3dadd( -34.9992, -36.9298, -61.7112, 0.22 ) }
    dend_25 { pt3dadd( -35.0014, -36.968, -61.7649, 0.22 ) }
    dend_25 { pt3dadd( -35.0167, -38.7046, -64.1529, 2.06 ) }
    dend_25 { pt3dadd( -35.0233, -39.1724, -64.7715, 2.36 ) }
    dend_25 { pt3dadd( -35.1351, -40.6581, -66.691, 0.22 ) }
    dend_25 { pt3dadd( -35.1786, -41.0119, -67.169, 0.22 ) }
    dend_25 { pt3dadd( -35.2338, -41.4289, -67.7059, 0.22 ) }
    dend_25 { pt3dadd( -35.3197, -42.2336, -68.6693, 1.33 ) }
    dend_25 { pt3dadd( -35.3754, -42.8058, -69.361, 1.47 ) }
    dend_25 { pt3dadd( -35.5397, -43.9373, -70.8013, 0.22 ) }
    dend_25 { pt3dadd( -35.8655, -45.049, -72.4971, 0.22 ) }
    dend_25 { pt3dadd( -36.0391, -45.5516, -73.3281, 1.4 ) }
    dend_25 { pt3dadd( -36.1255, -45.789, -73.7532, 1.69 ) }
    dend_25 { pt3dadd( -36.6393, -47.3569, -76.7071, 0.22 ) }
    dend_25 { pt3dadd( -36.8217, -47.9902, -78.011, 1.92 ) }
    dend_25 { pt3dadd( -37.2763, -49.49, -81.5974, 0.29 ) }
    dend_25 { pt3dadd( -37.3833, -49.7951, -82.4569, 0.29 ) }
    dend_25 { pt3dadd( -37.397, -49.8391, -82.5929, 0.29 ) }
    dend_25 { pt3dadd( -37.4778, -50.1757, -83.5744, 0.74 ) }
    dend_25 { pt3dadd( -37.5508, -50.8042, -85.2465, 1.55 ) }
    dend_25 { pt3dadd( -37.5719, -52.3424, -89.0552, 1.47 ) }
    dend_25 { pt3dadd( -37.456, -53.797, -92.3306, 0.29 ) }
    dend_25 { pt3dadd( -37.4291, -54.1786, -93.1731, 0.29 ) }
    dend_25 { pt3dadd( -37.3826, -54.8899, -94.6306, 1.4 ) }
    dend_25 { pt3dadd( -37.2974, -56.1563, -96.9578, 1.69 ) }
    dend_25 { pt3dadd( -37.2525, -56.4684, -97.4559, 1.69 ) }
    dend_25 { pt3dadd( -36.7518, -58.2862, -100.033, 0.22 ) }
    dend_25 { pt3dadd( -36.7254, -58.364, -100.148, 0.22 ) }
    dend_25 { pt3dadd( -36.5985, -58.6901, -100.674, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -36.3869, -59.1728, -101.513, 1.47 ) }
    dend_25 { pt3dadd( -35.8291, -60.4253, -103.644, 0.22 ) }
    dend_25 { pt3dadd( -35.6811, -60.7418, -104.179, 1.4 ) }
    dend_25 { pt3dadd( -35.1805, -61.7359, -106.03, 1.4 ) }
    dend_25 { pt3dadd( -34.7755, -62.5098, -107.581, 0.22 ) }
    dend_25 { pt3dadd( -34.373, -63.2925, -109.483, 1.62 ) }
    dend_25 { pt3dadd( -34.3618, -63.3152, -109.546, 1.62 ) }
    dend_25 { pt3dadd( -34.2813, -63.5433, -110.206, 1.62 ) }
    dend_25 { pt3dadd( -34.073, -64.6544, -113.509, 0.15 ) }
    dend_25 { pt3dadd( -34.0653, -64.8874, -114.223, 1.4 ) }
    dend_25 { pt3dadd( -34.3127, -66.0372, -118.09, 1.11 ) }
    dend_25 { pt3dadd( -34.3193, -66.0548, -118.144, 1.11 ) }
    dend_25 { pt3dadd( -34.6382, -66.7006, -119.905, 0.37 ) }
    dend_25 { pt3dadd( -34.8217, -66.9981, -120.575, 0.74 ) }
    dend_25 { pt3dadd( -34.9578, -67.1978, -120.918, 0.88 ) }
    dend_25 { pt3dadd( -35.8416, -68.5429, -122.889, 0.22 ) }
    dend_25 { pt3dadd( -36.1892, -69.2188, -123.554, 1.33 ) }
    dend_25 { pt3dadd( -36.4138, -69.9061, -124.091, 1.11 ) }
    dend_25 { pt3dadd( -36.5991, -70.773, -124.689, 0.22 ) }
    dend_25 { pt3dadd( -36.6065, -70.8278, -124.724, 0.22 ) }
    dend_25 { pt3dadd( -36.6597, -71.8048, -125.237, 0.22 ) }
    dend_25 { pt3dadd( -36.6036, -72.8726, -125.488, 0.22 ) }
    dend_25 { pt3dadd( -36.3755, -74.4532, -125.781, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 23/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 17.904, 99.3118, -91.5211, 0.22 ) }
    dend_22 { pt3dadd( 17.9638, 101.411, -91.5674, 0.22 ) }
    dend_22 { pt3dadd( 17.9724, 101.57, -91.5703, 0.22 ) }
    dend_22 { pt3dadd( 18.0745, 102.797, -91.6745, 0.22 ) }
    dend_22 { pt3dadd( 18.2035, 103.722, -91.8801, 0.66 ) }
    dend_22 { pt3dadd( 18.2313, 103.86, -91.9233, 0.66 ) }
    dend_22 { pt3dadd( 18.3469, 104.325, -92.1347, 0.66 ) }
    dend_22 { pt3dadd( 18.3722, 104.388, -92.1777, 0.66 ) }
    dend_22 { pt3dadd( 18.7227, 105.107, -92.7782, 0.22 ) }
    dend_22 { pt3dadd( 19.2682, 105.967, -93.6678, 0.88 ) }
    dend_22 { pt3dadd( 19.4857, 106.248, -93.9856, 0.88 ) }
    dend_22 { pt3dadd( 20.2411, 107.08, -94.9661, 0.29 ) }
    dend_22 { pt3dadd( 20.3159, 107.146, -95.0372, 0.29 ) }
    dend_22 { pt3dadd( 20.9769, 107.678, -95.4883, 0.29 ) }
    dend_22 { pt3dadd( 22.0086, 108.442, -95.9233, 1.03 ) }
    dend_22 { pt3dadd( 22.4887, 108.788, -96.0493, 1.25 ) }
    dend_22 { pt3dadd( 23.7372, 109.702, -96.2675, 0.37 ) }
    dend_22 { pt3dadd( 25.4097, 110.892, -96.4469, 0.22 ) }
    dend_22 { pt3dadd( 26.7916, 111.886, -96.5506, 0.22 ) }
    dend_22 { pt3dadd( 27.9587, 112.742, -96.5698, 0.81 ) }
    dend_22 { pt3dadd( 28.9388, 113.486, -96.4994, 0.22 ) }
    dend_22 { pt3dadd( 29.4006, 113.857, -96.4371, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 17.904, 99.3118, -91.5211, 0.81 ) }
    dend_21 { pt3dadd( 18.9938, 100.617, -92.6547, 0.81 ) }
    dend_21 { pt3dadd( 19.6512, 101.249, -93.2547, 0.22 ) }
    dend_21 { pt3dadd( 20.2031, 101.739, -93.7055, 0.22 ) }
    dend_21 { pt3dadd( 20.791, 102.257, -94.1544, 1.18 ) }
    dend_21 { pt3dadd( 21.2459, 102.645, -94.462, 1.18 ) }
    dend_21 { pt3dadd( 21.2976, 102.689, -94.497, 1.18 ) }
    dend_21 { pt3dadd( 22.4342, 103.637, -95.1292, 0.29 ) }
    dend_21 { pt3dadd( 22.9837, 104.05, -95.4108, 0.44 ) }
    dend_21 { pt3dadd( 23.2335, 104.249, -95.6594, 0.44 ) }
    dend_21 { pt3dadd( 23.8334, 104.818, -96.5199, 0.22 ) }
    dend_21 { pt3dadd( 24.1902, 105.22, -97.1661, 1.18 ) }
    dend_21 { pt3dadd( 24.2969, 105.448, -97.6804, 1.47 ) }
    dend_21 { pt3dadd( 24.3063, 105.604, -98.1157, 1.47 ) }
    dend_21 { pt3dadd( 24.0449, 107.06, -102.277, 0.52 ) }
    dend_21 { pt3dadd( 23.952, 107.288, -102.998, 0.81 ) }
    dend_21 { pt3dadd( 23.8681, 107.426, -103.467, 0.81 ) }
    dend_21 { pt3dadd( 22.6073, 109.006, -109.267, 1.11 ) }
    dend_21 { pt3dadd( 21.6272, 109.896, -112.882, 0.59 ) }
    dend_21 { pt3dadd( 21.1252, 110.218, -114.365, 0.29 ) }
    dend_21 { pt3dadd( 20.2399, 110.551, -116.328, 0.74 ) }
    dend_21 { pt3dadd( 20.1966, 110.557, -116.405, 0.74 ) }
    dend_21 { pt3dadd( 19.6369, 110.5, -117.064, 0.81 ) }
    dend_21 { pt3dadd( 18.3249, 109.941, -117.571, 0.29 ) }
    dend_21 { pt3dadd( 17.3705, 109.422, -117.739, 0.29 ) }
    dend_21 { pt3dadd( 15.9729, 108.588, -117.894, 0.29 ) }
    dend_21 { pt3dadd( 14.5407, 107.734, -117.938, 0.29 ) }
    dend_21 { pt3dadd( 13.0262, 106.829, -117.975, 0.22 ) }
    dend_21 { pt3dadd( 12.0816, 106.267, -117.984, 0.59 ) }
    dend_21 { pt3dadd( 11.8138, 106.091, -117.976, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.390504, 87.9531, -33.8149, 0.22 ) }
    dend_19 { pt3dadd( -1.54998, 89.1157, -32.8386, 0.22 ) }
    dend_19 { pt3dadd( -1.83562, 89.3893, -32.6377, 0.66 ) }
    dend_19 { pt3dadd( -2.38438, 89.9074, -32.2926, 0.22 ) }
    dend_19 { pt3dadd( -2.94428, 90.4253, -31.9655, 1.4 ) }
    dend_19 { pt3dadd( -3.24569, 90.6908, -31.7904, 1.4 ) }
    dend_19 { pt3dadd( -4.43157, 91.7244, -31.1075, 0.22 ) }
    dend_19 { pt3dadd( -5.09402, 92.2638, -30.7862, 0.22 ) }
    dend_19 { pt3dadd( -6.07004, 93.0391, -30.346, 1.47 ) }
    dend_19 { pt3dadd( -6.27473, 93.2033, -30.2603, 1.84 ) }
    dend_19 { pt3dadd( -7.62885, 94.3139, -29.7485, 0.22 ) }
    dend_19 { pt3dadd( -7.85259, 94.5007, -29.6703, 0.52 ) }
    dend_19 { pt3dadd( -8.5883, 95.1393, -29.4658, 0.15 ) }
    dend_19 { pt3dadd( -9.03233, 95.5437, -29.3596, 0.88 ) }
    dend_19 { pt3dadd( -9.56288, 96.0554, -29.2672, 0.22 ) }
    dend_19 { pt3dadd( -10.26, 96.7678, -29.1877, 1.84 ) }
    dend_19 { pt3dadd( -10.5036, 97.0272, -29.1807, 1.99 ) }
    dend_19 { pt3dadd( -11.619, 98.2156, -29.1569, 0.22 ) }
    dend_19 { pt3dadd( -11.9531, 98.5808, -29.1523, 1.11 ) }
    dend_19 { pt3dadd( -12.2368, 98.8936, -29.1419, 1.25 ) }
    dend_19 { pt3dadd( -12.9438, 99.6481, -29.086, 0.15 ) }
    dend_19 { pt3dadd( -13.3263, 100.046, -29.0282, 0.44 ) }
    dend_19 { pt3dadd( -13.4772, 100.199, -28.9959, 0.44 ) }
    dend_19 { pt3dadd( -13.5233, 100.245, -28.9824, 0.44 ) }
    dend_19 { pt3dadd( -14.2709, 100.982, -28.7069, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -14.7567, 101.479, -28.4978, 0.15 ) }
    dend_19 { pt3dadd( -14.7882, 101.514, -28.4819, 0.15 ) }
    dend_19 { pt3dadd( -15.0236, 101.793, -28.3614, 0.66 ) }
    dend_19 { pt3dadd( -15.3174, 102.163, -28.2256, 0.81 ) }
    dend_19 { pt3dadd( -15.9196, 102.956, -27.9878, 0.15 ) }
    dend_19 { pt3dadd( -16.1509, 103.274, -27.9157, 0.15 ) }
    dend_19 { pt3dadd( -16.6702, 104.025, -27.7844, 1.47 ) }
    dend_19 { pt3dadd( -16.9138, 104.389, -27.7316, 1.47 ) }
    dend_19 { pt3dadd( -17.3657, 105.083, -27.6488, 0.22 ) }
    dend_19 { pt3dadd( -17.5655, 105.4, -27.6353, 0.52 ) }
    dend_19 { pt3dadd( -17.6561, 105.548, -27.6418, 0.52 ) }
    dend_19 { pt3dadd( -18.022, 106.142, -27.6948, 0.15 ) }
    dend_19 { pt3dadd( -18.4558, 106.834, -27.8261, 1.33 ) }
    dend_19 { pt3dadd( -18.6143, 107.082, -27.8851, 1.69 ) }
    dend_19 { pt3dadd( -19.1144, 107.843, -28.1144, 0.22 ) }
    dend_19 { pt3dadd( -19.3659, 108.228, -28.2388, 0.59 ) }
    dend_19 { pt3dadd( -19.5804, 108.554, -28.3535, 0.59 ) }
    dend_19 { pt3dadd( -19.9694, 109.127, -28.5856, 0.15 ) }
    dend_19 { pt3dadd( -20.6062, 110.039, -29.0062, 1.33 ) }
    dend_19 { pt3dadd( -20.8719, 110.417, -29.185, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.390504, 87.9531, -33.8149, 0.29 ) }
    dend_16 { pt3dadd( -1.60031, 88.9163, -34.9517, 0.29 ) }
    dend_16 { pt3dadd( -2.07069, 89.2872, -35.3613, 0.52 ) }
    dend_16 { pt3dadd( -2.80419, 89.8663, -35.944, 0.74 ) }
    dend_16 { pt3dadd( -3.0975, 90.0967, -36.1562, 0.88 ) }
    dend_16 { pt3dadd( -3.88475, 90.7299, -36.6877, 0.15 ) }
    dend_16 { pt3dadd( -4.17816, 90.9791, -36.8748, 0.15 ) }
    dend_16 { pt3dadd( -4.56241, 91.3467, -37.0751, 1.33 ) }
    dend_16 { pt3dadd( -4.94057, 91.739, -37.2427, 1.77 ) }
    dend_16 { pt3dadd( -5.67076, 92.5277, -37.4969, 0.22 ) }
    dend_16 { pt3dadd( -5.97258, 92.8699, -37.5815, 0.22 ) }
    dend_16 { pt3dadd( -6.36439, 93.3742, -37.6655, 0.88 ) }
    dend_16 { pt3dadd( -6.53978, 93.6299, -37.7066, 0.88 ) }
    dend_16 { pt3dadd( -6.94731, 94.3001, -37.8071, 0.15 ) }
    dend_16 { pt3dadd( -7.19001, 94.8184, -37.8527, 0.15 ) }
    dend_16 { pt3dadd( -7.32553, 95.2446, -37.8626, 0.15 ) }
    dend_16 { pt3dadd( -7.5077, 96.1054, -37.8622, 2.14 ) }
    dend_16 { pt3dadd( -7.53831, 96.4043, -37.855, 2.14 ) }
    dend_16 { pt3dadd( -7.53742, 96.4618, -37.8524, 2.14 ) }
    dend_16 { pt3dadd( -7.35716, 97.6859, -37.7686, 0.15 ) }
    dend_16 { pt3dadd( -7.24525, 98.0735, -37.7429, 0.15 ) }
    dend_16 { pt3dadd( -7.11723, 98.4006, -37.7384, 0.15 ) }
    dend_16 { pt3dadd( -6.95735, 98.7403, -37.7488, 0.66 ) }
    dend_16 { pt3dadd( -6.75278, 99.1412, -37.7943, 0.81 ) }
    dend_16 { pt3dadd( -6.71285, 99.2111, -37.8093, 0.81 ) }
    dend_16 { pt3dadd( -6.35656, 99.7348, -38.0691, 0.15 ) }
    dend_16 { pt3dadd( -6.01219, 100.262, -38.3772, 0.88 ) }
    dend_16 { pt3dadd( -5.98855, 100.299, -38.4046, 0.88 ) }
    dend_16 { pt3dadd( -5.87443, 100.491, -38.5568, 0.88 ) }
    dend_16 { pt3dadd( -5.82918, 100.577, -38.6237, 0.88 ) }
    dend_16 { pt3dadd( -5.47808, 101.366, -39.18, 0.15 ) }
    dend_16 { pt3dadd( -5.37218, 101.663, -39.3772, 0.15 ) }
    dend_16 { pt3dadd( -5.19109, 102.287, -39.7663, 1.11 ) }
    dend_16 { pt3dadd( -5.09192, 102.751, -40.0434, 1.11 ) }
    dend_16 { pt3dadd( -4.89293, 104.094, -40.8, 0.22 ) }
    dend_16 { pt3dadd( -4.85793, 104.547, -41.0719, 0.22 ) }
    dend_16 { pt3dadd( -4.8525, 105.239, -41.4942, 1.47 ) }
    dend_16 { pt3dadd( -4.88129, 105.746, -41.8099, 1.69 ) }
    dend_16 { pt3dadd( -5.12164, 107.111, -42.9308, 0.15 ) }
    dend_16 { pt3dadd( -5.23295, 107.458, -43.2972, 0.88 ) }
    dend_16 { pt3dadd( -5.67915, 108.415, -44.4897, 0.22 ) }
    dend_16 { pt3dadd( -5.77135, 108.584, -44.7253, 1.55 ) }
    dend_16 { pt3dadd( -5.97359, 108.912, -45.2092, 1.84 ) }
    dend_16 { pt3dadd( -7.10719, 110.586, -47.7724, 0.59 ) }
    dend_16 { pt3dadd( -7.47159, 111.054, -48.5154, 0.22 ) }
    dend_16 { pt3dadd( -7.62995, 111.257, -48.8173, 0.74 ) }
    dend_16 { pt3dadd( -8.12347, 111.885, -49.6328, 0.15 ) }
    dend_16 { pt3dadd( -8.42629, 112.277, -50.0801, 0.15 ) }
    dend_16 { pt3dadd( -8.65521, 112.569, -50.3585, 0.81 ) }
    dend_16 { pt3dadd( -8.86756, 112.819, -50.5287, 0.81 ) }
    dend_16 { pt3dadd( -9.47062, 113.439, -51.0995, 0.15 ) }
    dend_16 { pt3dadd( -9.74641, 113.686, -51.4462, 0.96 ) }
    dend_16 { pt3dadd( -10.0118, 113.9, -51.8113, 0.96 ) }
    dend_16 { pt3dadd( -10.7689, 114.473, -52.9035, 0.22 ) }
    dend_16 { pt3dadd( -11.1818, 114.779, -53.5076, 1.4 ) }
    dend_16 { pt3dadd( -12.077, 115.445, -54.8463, 1.69 ) }
    dend_16 { pt3dadd( -13.1115, 116.232, -56.3984, 0.74 ) }
    dend_16 { pt3dadd( -13.5248, 116.557, -57.0162, 0.22 ) }
    dend_16 { pt3dadd( -13.7347, 116.73, -57.3089, 0.59 ) }
    dend_16 { pt3dadd( -14.0734, 117.03, -57.673, 0.22 ) }
    dend_16 { pt3dadd( -14.1073, 117.064, -57.6923, 0.22 ) }
    dend_16 { pt3dadd( -14.489, 117.493, -57.7092, 0.22 ) }
    dend_16 { pt3dadd( -14.7217, 117.784, -57.6505, 0.52 ) }
    dend_16 { pt3dadd( -15.1894, 118.48, -57.4827, 0.15 ) }
    dend_16 { pt3dadd( -15.6389, 119.274, -57.2643, 1.84 ) }
    dend_16 { pt3dadd( -16.2088, 120.42, -56.9174, 0.15 ) }
    dend_16 { pt3dadd( -16.3592, 120.751, -56.802, 0.29 ) }
    dend_16 { pt3dadd( -16.3988, 120.858, -56.7628, 0.29 ) }
    dend_16 { pt3dadd( -16.5784, 121.481, -56.5255, 0.15 ) }
    dend_16 { pt3dadd( -16.6936, 122.024, -56.318, 0.74 ) }
    dend_16 { pt3dadd( -16.7225, 122.207, -56.2579, 0.74 ) }
    dend_16 { pt3dadd( -16.8639, 123.16, -55.9883, 0.22 ) }
    dend_16 { pt3dadd( -17.0112, 124.014, -55.7582, 0.22 ) }
    dend_16 { pt3dadd( -17.1447, 124.728, -55.5765, 1.69 ) }
    dend_16 { pt3dadd( -17.2025, 125.031, -55.5066, 1.69 ) }
    dend_16 { pt3dadd( -17.3351, 125.875, -55.3477, 0.22 ) }
    dend_16 { pt3dadd( -17.3825, 126.241, -55.2912, 0.37 ) }
    dend_16 { pt3dadd( -17.4453, 126.931, -55.221, 0.15 ) }
    dend_16 { pt3dadd( -17.4589, 127.1, -55.2093, 0.37 ) }
    dend_16 { pt3dadd( -17.5049, 127.719, -55.197, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -17.5266, 128.241, -55.228, 0.74 ) }
    dend_16 { pt3dadd( -17.5298, 128.347, -55.2415, 0.74 ) }
    dend_16 { pt3dadd( -17.5355, 128.492, -55.2669, 0.74 ) }
    dend_16 { pt3dadd( -17.5605, 129.223, -55.413, 0.15 ) }
    dend_16 { pt3dadd( -17.5853, 129.741, -55.5198, 1.03 ) }
    dend_16 { pt3dadd( -17.658, 130.808, -55.7094, 0.15 ) }
    dend_16 { pt3dadd( -17.7374, 131.749, -55.8567, 1.99 ) }
    dend_16 { pt3dadd( -17.7892, 132.138, -55.9089, 1.99 ) }
    dend_16 { pt3dadd( -17.9669, 133.01, -56.0058, 0.22 ) }
    dend_16 { pt3dadd( -18.118, 133.57, -56.0572, 0.81 ) }
    dend_16 { pt3dadd( -18.3774, 134.341, -56.1068, 0.22 ) }
    dend_16 { pt3dadd( -18.3972, 134.387, -56.1084, 0.22 ) }
    dend_16 { pt3dadd( -18.6906, 134.99, -56.1375, 0.22 ) }
    dend_16 { pt3dadd( -18.9864, 135.51, -56.1948, 0.22 ) }
    dend_16 { pt3dadd( -19.2689, 135.952, -56.3007, 0.22 ) }
    dend_16 { pt3dadd( -19.6323, 136.531, -56.5089, 0.22 ) }
    dend_16 { pt3dadd( -19.8415, 136.901, -56.648, 1.03 ) }
    dend_16 { pt3dadd( -19.9427, 137.106, -56.7225, 1.03 ) }
    dend_16 { pt3dadd( -20.3315, 138.11, -57.0534, 0.22 ) }
    dend_16 { pt3dadd( -20.6397, 138.947, -57.3299, 0.59 ) }
    dend_16 { pt3dadd( -20.9175, 139.713, -57.5781, 0.22 ) }
    dend_16 { pt3dadd( -21.2126, 140.605, -57.8652, 2.06 ) }
    dend_16 { pt3dadd( -21.3212, 140.983, -57.9759, 1.69 ) }
    dend_16 { pt3dadd( -21.5484, 142.004, -58.2348, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -38.5364, 83.5809, -8.24735, 0.22 ) }
    dend_10 { pt3dadd( -39.1598, 84.7939, -8.75951, 0.22 ) }
    dend_10 { pt3dadd( -39.5053, 85.3901, -9.04539, 0.66 ) }
    dend_10 { pt3dadd( -39.7559, 85.8136, -9.25403, 0.81 ) }
    dend_10 { pt3dadd( -40.5275, 87.0761, -9.86191, 0.22 ) }
    dend_10 { pt3dadd( -41.025, 87.8566, -10.219, 0.66 ) }
    dend_10 { pt3dadd( -41.3953, 88.3795, -10.4325, 0.96 ) }
    dend_10 { pt3dadd( -42.3622, 89.608, -10.9033, 0.22 ) }
    dend_10 { pt3dadd( -42.5917, 89.8868, -10.9969, 0.22 ) }
    dend_10 { pt3dadd( -42.9054, 90.2777, -11.1061, 0.52 ) }
    dend_10 { pt3dadd( -43.2343, 90.7448, -11.2115, 0.52 ) }
    dend_10 { pt3dadd( -43.9978, 91.9997, -11.4625, 0.22 ) }
    dend_10 { pt3dadd( -44.4775, 92.9019, -11.6487, 0.22 ) }
    dend_10 { pt3dadd( -44.8598, 93.7572, -11.7728, 1.77 ) }
    dend_10 { pt3dadd( -45.0505, 94.3103, -11.8186, 2.06 ) }
    dend_10 { pt3dadd( -45.4967, 96.354, -11.8668, 0.22 ) }
    dend_10 { pt3dadd( -45.5554, 96.8555, -11.8629, 0.59 ) }
    dend_10 { pt3dadd( -45.572, 97.5797, -11.8302, 0.66 ) }
    dend_10 { pt3dadd( -45.5471, 99.6031, -11.6641, 0.22 ) }
    dend_10 { pt3dadd( -45.4775, 101.362, -11.4745, 0.22 ) }
    dend_10 { pt3dadd( -45.3744, 103.161, -11.2482, 1.47 ) }
    dend_10 { pt3dadd( -45.327, 103.819, -11.1469, 1.92 ) }
    dend_10 { pt3dadd( -45.2096, 105.871, -10.861, 0.22 ) }
    dend_10 { pt3dadd( -45.1859, 106.52, -10.7884, 0.22 ) }
    dend_10 { pt3dadd( -45.1829, 107.339, -10.7399, 0.74 ) }
    dend_10 { pt3dadd( -45.2037, 107.626, -10.7357, 0.74 ) }
    dend_10 { pt3dadd( -45.3922, 108.885, -10.7338, 0.15 ) }
    dend_10 { pt3dadd( -45.5895, 109.961, -10.7048, 0.15 ) }
    dend_10 { pt3dadd( -45.7406, 110.671, -10.6797, 0.96 ) }
    dend_10 { pt3dadd( -45.8181, 111.03, -10.6606, 1.33 ) }
    dend_10 { pt3dadd( -45.8914, 111.346, -10.6423, 1.33 ) }
    dend_10 { pt3dadd( -45.9112, 111.424, -10.6379, 1.33 ) }
    dend_10 { pt3dadd( -46.3686, 112.865, -10.5548, 0.22 ) }
    dend_10 { pt3dadd( -46.5511, 113.379, -10.5083, 0.81 ) }
    dend_10 { pt3dadd( -46.7893, 113.978, -10.4423, 0.81 ) }
    dend_10 { pt3dadd( -47.1632, 114.871, -10.3355, 0.22 ) }
    dend_10 { pt3dadd( -47.3004, 115.175, -10.2982, 0.44 ) }
    dend_10 { pt3dadd( -47.9371, 116.455, -10.1404, 0.22 ) }
    dend_10 { pt3dadd( -48.1532, 116.834, -10.0919, 0.59 ) }
    dend_10 { pt3dadd( -48.4565, 117.381, -9.99351, 0.59 ) }
    dend_10 { pt3dadd( -48.8853, 118.185, -9.82518, 0.15 ) }
    dend_10 { pt3dadd( -49.3471, 119.075, -9.61822, 0.15 ) }
    dend_10 { pt3dadd( -49.7266, 119.823, -9.44136, 1.11 ) }
    dend_10 { pt3dadd( -49.9628, 120.284, -9.32947, 1.62 ) }
    dend_10 { pt3dadd( -50.789, 121.819, -8.95428, 0.15 ) }
    dend_10 { pt3dadd( -51.0339, 122.257, -8.84202, 0.59 ) }
    dend_10 { pt3dadd( -51.1461, 122.447, -8.79298, 0.59 ) }
    dend_10 { pt3dadd( -51.5334, 123.13, -8.63473, 0.22 ) }
    dend_10 { pt3dadd( -51.8554, 123.711, -8.51949, 0.22 ) }
    dend_10 { pt3dadd( -52.033, 124.032, -8.47249, 0.59 ) }
    dend_10 { pt3dadd( -52.2362, 124.397, -8.44751, 0.59 ) }
    dend_10 { pt3dadd( -52.5675, 125.078, -8.4194, 0.22 ) }
    dend_10 { pt3dadd( -52.9827, 126.11, -8.41439, 0.22 ) }
    dend_10 { pt3dadd( -52.9827, 126.11, -8.41439, 0.66 ) }
    dend_10 { pt3dadd( -53.0827, 126.641, -8.47555, 0.66 ) }
    dend_10 { pt3dadd( -53.216, 127.565, -8.61067, 0.22 ) }
    dend_10 { pt3dadd( -53.2947, 128.274, -8.73197, 1.4 ) }
    dend_10 { pt3dadd( -53.3327, 128.701, -8.8134, 1.77 ) }
    dend_10 { pt3dadd( -53.4978, 130.759, -9.23111, 0.22 ) }
    dend_10 { pt3dadd( -53.5467, 131.407, -9.36509, 0.96 ) }
    dend_10 { pt3dadd( -53.5873, 131.968, -9.48241, 0.96 ) }
    dend_10 { pt3dadd( -53.6634, 132.951, -9.68833, 0.22 ) }
    dend_10 { pt3dadd( -53.7817, 134.235, -9.9463, 0.22 ) }
    dend_10 { pt3dadd( -53.8775, 135.144, -10.121, 0.88 ) }
    dend_10 { pt3dadd( -53.9324, 135.638, -10.2119, 1.25 ) }
    dend_10 { pt3dadd( -54.0184, 136.499, -10.3679, 0.22 ) }
    dend_10 { pt3dadd( -54.0308, 136.645, -10.3915, 0.22 ) }
    dend_10 { pt3dadd( -54.0337, 137.19, -10.4553, 0.22 ) }
    dend_10 { pt3dadd( -53.9925, 137.645, -10.4965, 0.22 ) }
    dend_10 { pt3dadd( -53.7956, 138.728, -10.5539, 0.22 ) }
    dend_10 { pt3dadd( -53.6901, 139.175, -10.5711, 0.81 ) }
    dend_10 { pt3dadd( -53.4869, 139.809, -10.5469, 0.81 ) }
    dend_10 { pt3dadd( -53.008, 141.126, -10.4387, 0.15 ) }
    dend_10 { pt3dadd( -52.6226, 142.068, -10.3313, 0.15 ) }
    dend_10 { pt3dadd( -51.9977, 143.495, -10.1208, 1.4 ) }
    dend_10 { pt3dadd( -51.8405, 143.85, -10.0577, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -51.0233, 145.752, -9.70126, 0.22 ) }
    dend_10 { pt3dadd( -50.9964, 145.816, -9.68925, 0.22 ) }
    dend_10 { pt3dadd( -50.9001, 146.058, -9.64059, 0.22 ) }
    dend_10 { pt3dadd( -50.8762, 146.123, -9.62827, 0.22 ) }
    dend_10 { pt3dadd( -50.6233, 146.929, -9.50291, 0.22 ) }
    dend_10 { pt3dadd( -50.3317, 147.953, -9.40198, 0.88 ) }
    dend_10 { pt3dadd( -50.3081, 148.029, -9.40007, 0.88 ) }
    dend_10 { pt3dadd( -50.1944, 148.336, -9.39659, 1.03 ) }
    dend_10 { pt3dadd( -49.6363, 149.707, -9.39797, 0.22 ) }
    dend_10 { pt3dadd( -49.0011, 151.149, -9.4238, 1.55 ) }
    dend_10 { pt3dadd( -48.7067, 151.754, -9.42288, 1.92 ) }
    dend_10 { pt3dadd( -47.8502, 153.466, -9.40753, 0.22 ) }
    dend_10 { pt3dadd( -47.6143, 153.932, -9.39872, 0.22 ) }
    dend_10 { pt3dadd( -47.4089, 154.325, -9.38805, 0.52 ) }
    dend_10 { pt3dadd( -47.2155, 154.647, -9.37561, 0.52 ) }
    dend_10 { pt3dadd( -46.5089, 155.759, -9.33752, 0.22 ) }
    dend_10 { pt3dadd( -46.3052, 156.069, -9.3053, 0.59 ) }
    dend_10 { pt3dadd( -46.1019, 156.368, -9.25463, 0.59 ) }
    dend_10 { pt3dadd( -46.0344, 156.468, -9.23882, 0.59 ) }
    dend_10 { pt3dadd( -45.4385, 157.322, -9.13775, 0.22 ) }
    dend_10 { pt3dadd( -45.4016, 157.382, -9.13331, 0.22 ) }
    dend_10 { pt3dadd( -44.8914, 158.307, -9.11639, 0.22 ) }
    dend_10 { pt3dadd( -44.8671, 158.362, -9.11618, 0.22 ) }
    dend_10 { pt3dadd( -44.5468, 159.353, -9.14576, 0.88 ) }
    dend_10 { pt3dadd( -44.4274, 159.871, -9.17743, 1.47 ) }
    dend_10 { pt3dadd( -44.2403, 161.253, -9.27931, 0.22 ) }
    dend_10 { pt3dadd( -44.2357, 161.312, -9.28367, 0.22 ) }
    dend_10 { pt3dadd( -44.1986, 162.543, -9.39528, 0.22 ) }
    dend_10 { pt3dadd( -44.1578, 163.607, -9.52149, 0.88 ) }
    dend_10 { pt3dadd( -44.1383, 163.981, -9.57999, 1.33 ) }
    dend_10 { pt3dadd( -44.0509, 165.118, -9.79939, 0.15 ) }
    dend_10 { pt3dadd( -44.0112, 165.541, -9.90015, 0.15 ) }
    dend_10 { pt3dadd( -43.8917, 166.647, -10.1704, 0.15 ) }
    dend_10 { pt3dadd( -43.6703, 168.309, -10.6018, 1.77 ) }
    dend_10 { pt3dadd( -43.4215, 169.905, -11.046, 0.22 ) }
    dend_10 { pt3dadd( -43.2885, 170.702, -11.2881, 0.22 ) }
    dend_10 { pt3dadd( -43.1961, 171.199, -11.4645, 1.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -38.5364, 83.5809, -8.24735, 0.22 ) }
    dend_3 { pt3dadd( -39.621, 84.4325, -9.1694, 0.22 ) }
    dend_3 { pt3dadd( -39.65, 84.4598, -9.20793, 0.22 ) }
    dend_3 { pt3dadd( -39.8844, 84.7311, -9.59743, 0.22 ) }
    dend_3 { pt3dadd( -40.1636, 85.0907, -10.1177, 1.11 ) }
    dend_3 { pt3dadd( -40.4108, 85.4148, -10.613, 1.92 ) }
    dend_3 { pt3dadd( -40.5926, 85.6609, -10.9757, 2.14 ) }
    dend_3 { pt3dadd( -41.3568, 86.9343, -12.6683, 0.22 ) }
    dend_3 { pt3dadd( -41.5263, 87.1882, -13.1035, 0.22 ) }
    dend_3 { pt3dadd( -41.5446, 87.2165, -13.1565, 0.22 ) }
    dend_3 { pt3dadd( -41.8086, 87.6495, -13.9963, 0.22 ) }
    dend_3 { pt3dadd( -41.9228, 87.9007, -14.4589, 0.88 ) }
    dend_3 { pt3dadd( -42.0229, 88.1519, -14.8945, 0.88 ) }
    dend_3 { pt3dadd( -42.5307, 89.6149, -17.148, 1.25 ) }
    dend_3 { pt3dadd( -42.7186, 90.1542, -17.9278, 1.62 ) }
    dend_3 { pt3dadd( -42.7296, 90.1907, -17.977, 1.62 ) }
    dend_3 { pt3dadd( -42.9155, 90.996, -18.9839, 0.29 ) }
    dend_3 { pt3dadd( -42.9659, 91.2438, -19.275, 0.66 ) }
    dend_3 { pt3dadd( -42.9725, 91.2823, -19.3123, 0.66 ) }
    dend_3 { pt3dadd( -43.0539, 91.6123, -19.6224, 0.66 ) }
    dend_3 { pt3dadd( -43.0652, 91.6483, -19.6613, 0.66 ) }
    dend_3 { pt3dadd( -43.3054, 92.3526, -20.5109, 0.22 ) }
    dend_3 { pt3dadd( -43.6219, 93.0853, -21.5228, 2.14 ) }
    dend_3 { pt3dadd( -43.7403, 93.3407, -21.8878, 2.8 ) }
    dend_3 { pt3dadd( -44.5384, 94.9873, -24.2874, 0.37 ) }
    dend_3 { pt3dadd( -44.8474, 95.6103, -25.2091, 0.37 ) }
    dend_3 { pt3dadd( -45.319, 96.5555, -26.5922, 0.96 ) }
    dend_3 { pt3dadd( -45.7515, 97.474, -27.9053, 0.22 ) }
    dend_3 { pt3dadd( -45.9163, 97.8535, -28.4364, 1.11 ) }
    dend_3 { pt3dadd( -45.9283, 97.8858, -28.4786, 1.11 ) }
    dend_3 { pt3dadd( -45.9764, 98.0772, -28.6771, 1.11 ) }
    dend_3 { pt3dadd( -46.1125, 98.7693, -29.3203, 0.15 ) }
    dend_3 { pt3dadd( -46.2193, 99.4416, -29.8241, 0.15 ) }
    dend_3 { pt3dadd( -46.2917, 100.011, -30.2171, 0.15 ) }
    dend_3 { pt3dadd( -46.4252, 100.818, -30.7801, 1.99 ) }
    dend_3 { pt3dadd( -46.5404, 101.325, -31.1205, 2.21 ) }
    dend_3 { pt3dadd( -46.7718, 102.127, -31.6087, 0.74 ) }
    dend_3 { pt3dadd( -47.0568, 102.933, -32.0259, 0.29 ) }
    dend_3 { pt3dadd( -47.0755, 102.979, -32.0453, 0.29 ) }
    dend_3 { pt3dadd( -47.2423, 103.372, -32.1929, 0.52 ) }
    dend_3 { pt3dadd( -47.3881, 103.712, -32.3187, 0.52 ) }
    dend_3 { pt3dadd( -47.5911, 104.199, -32.5181, 0.29 ) }
    dend_3 { pt3dadd( -47.7129, 104.504, -32.6648, 0.74 ) }
    dend_3 { pt3dadd( -47.8977, 104.981, -33.0091, 0.96 ) }
    dend_3 { pt3dadd( -48.1952, 105.787, -33.6994, 0.22 ) }
    dend_3 { pt3dadd( -48.43, 106.455, -34.3374, 1.55 ) }
    dend_3 { pt3dadd( -48.5552, 106.806, -34.6872, 1.99 ) }
    dend_3 { pt3dadd( -48.8122, 107.323, -35.3074, 1.99 ) }
    dend_3 { pt3dadd( -49.4322, 108.265, -36.5617, 0.37 ) }
    dend_3 { pt3dadd( -49.611, 108.367, -36.8675, 0.37 ) }
    dend_3 { pt3dadd( -49.8293, 108.433, -37.2025, 0.37 ) }
    dend_3 { pt3dadd( -50.1807, 108.495, -37.6889, 0.37 ) }
    dend_3 { pt3dadd( -51.3865, 108.612, -39.2071, 1.92 ) }
    dend_3 { pt3dadd( -51.7395, 108.627, -39.6097, 2.43 ) }
    dend_3 { pt3dadd( -56.0764, 108.656, -44.137, 0.37 ) }
    dend_3 { pt3dadd( -56.4469, 108.651, -44.5128, 0.44 ) }
    dend_3 { pt3dadd( -56.915, 108.64, -44.9699, 0.29 ) }
    dend_3 { pt3dadd( -57.3079, 108.632, -45.3344, 0.29 ) }
    dend_3 { pt3dadd( -57.6538, 108.644, -45.6171, 0.66 ) }
    dend_3 { pt3dadd( -57.9136, 108.662, -45.8166, 0.88 ) }
    dend_3 { pt3dadd( -58.7754, 108.718, -46.4463, 0.66 ) }
    dend_3 { pt3dadd( -59.2588, 108.708, -46.8783, 0.22 ) }
    dend_3 { pt3dadd( -59.7208, 108.651, -47.3478, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( -60.3147, 108.567, -47.9816, 2.36 ) }
    dend_3 { pt3dadd( -61.8586, 108.31, -49.6943, 2.36 ) }
    dend_3 { pt3dadd( -64.0576, 107.881, -52.2094, 0.88 ) }
    dend_3 { pt3dadd( -64.7385, 107.727, -53.0132, 0.52 ) }
    dend_3 { pt3dadd( -66.1054, 107.355, -54.7287, 1.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 10.077, -43.5321, 4.15827, 0.37 ) }
    dend_47 { pt3dadd( 11.9468, -44.1093, 3.90137, 0.37 ) }
    dend_47 { pt3dadd( 12.9166, -44.492, 3.77824, 0.29 ) }
    dend_47 { pt3dadd( 14.0642, -45.0348, 3.69244, 0.66 ) }
    dend_47 { pt3dadd( 15.1136, -45.5707, 3.6469, 1.33 ) }
    dend_47 { pt3dadd( 15.7796, -45.9229, 3.63076, 1.62 ) }
    dend_47 { pt3dadd( 16.5183, -46.3198, 3.62114, 1.62 ) }
    dend_47 { pt3dadd( 17.5838, -47.0155, 3.62575, 0.59 ) }
    dend_47 { pt3dadd( 18.5982, -47.762, 3.63111, 0.37 ) }
    dend_47 { pt3dadd( 19.1324, -48.1937, 3.59965, 0.74 ) }
    dend_47 { pt3dadd( 19.5172, -48.5323, 3.52356, 0.74 ) }
    dend_47 { pt3dadd( 19.5689, -48.5809, 3.5045, 0.74 ) }
    dend_47 { pt3dadd( 20.1213, -49.1623, 3.18726, 0.29 ) }
    dend_47 { pt3dadd( 20.881, -50.0716, 2.68515, 0.29 ) }
    dend_47 { pt3dadd( 21.5549, -50.9721, 2.31595, 1.92 ) }
    dend_47 { pt3dadd( 22.2854, -52.0049, 2.03472, 3.09 ) }
    dend_47 { pt3dadd( 22.4979, -52.3073, 1.99667, 3.61 ) }
    dend_47 { pt3dadd( 23.1471, -53.2101, 2.01709, 3.32 ) }
    dend_47 { pt3dadd( 24.2782, -54.7562, 2.26211, 0.88 ) }
    dend_47 { pt3dadd( 25.3632, -56.1606, 2.75953, 0.44 ) }
    dend_47 { pt3dadd( 25.9395, -56.8587, 3.10257, 0.44 ) }
    dend_47 { pt3dadd( 26.6928, -57.7194, 3.61717, 1.18 ) }
    dend_47 { pt3dadd( 27.3772, -58.4159, 4.08925, 1.69 ) }
    dend_47 { pt3dadd( 27.841, -58.8001, 4.40699, 1.69 ) }
    dend_47 { pt3dadd( 29.5519, -59.8839, 5.46556, 0.44 ) }
    dend_47 { pt3dadd( 30.2356, -60.244, 5.83192, 0.66 ) }
    dend_47 { pt3dadd( 30.2956, -60.2738, 5.86503, 0.66 ) }
    dend_47 { pt3dadd( 30.9234, -60.5818, 6.19873, 0.66 ) }
    dend_47 { pt3dadd( 31.8145, -61.1082, 6.75799, 0.29 ) }
    dend_47 { pt3dadd( 32.1039, -61.394, 7.02627, 0.29 ) }
    dend_47 { pt3dadd( 32.1915, -62.1018, 7.5047, 0.29 ) }
    dend_47 { pt3dadd( 32.1436, -62.9647, 8.0692, 0.81 ) }
    dend_47 { pt3dadd( 32.1139, -63.3895, 8.33403, 1.03 ) }
    dend_47 { pt3dadd( 32.0988, -64.6515, 9.17166, 0.37 ) }
    dend_47 { pt3dadd( 32.1479, -65.2471, 9.56002, 0.37 ) }
    dend_47 { pt3dadd( 32.1761, -65.368, 9.65314, 0.37 ) }
    dend_47 { pt3dadd( 32.5186, -66.2078, 10.3743, 0.52 ) }
    dend_47 { pt3dadd( 32.8357, -66.7718, 10.8846, 0.88 ) }
    dend_47 { pt3dadd( 33.6089, -67.8907, 12.0041, 0.37 ) }
    dend_47 { pt3dadd( 34.2067, -68.6461, 12.7357, 0.29 ) }
    dend_47 { pt3dadd( 35.1678, -69.8049, 13.7961, 1.77 ) }
    dend_47 { pt3dadd( 35.6079, -70.3695, 14.3139, 2.58 ) }
    dend_47 { pt3dadd( 35.6642, -70.4505, 14.3908, 2.58 ) }
    dend_47 { pt3dadd( 36.3085, -71.5818, 15.5434, 2.58 ) }
    dend_47 { pt3dadd( 36.8538, -72.7091, 16.6989, 0.37 ) }
    dend_47 { pt3dadd( 37.3631, -73.8401, 17.8884, 0.37 ) }
    dend_47 { pt3dadd( 37.852, -74.9398, 18.9978, 0.66 ) }
    dend_47 { pt3dadd( 38.2522, -75.8162, 19.8796, 0.74 ) }
    dend_47 { pt3dadd( 38.8116, -76.8986, 20.9153, 0.29 ) }
    dend_47 { pt3dadd( 39.1151, -77.4061, 21.3926, 0.29 ) }
    dend_47 { pt3dadd( 39.3297, -77.6871, 21.6598, 1.11 ) }
    dend_47 { pt3dadd( 39.6193, -77.9947, 21.918, 1.33 ) }
    dend_47 { pt3dadd( 40.2509, -78.558, 22.3213, 0.88 ) }
    dend_47 { pt3dadd( 41.2604, -79.3888, 22.8972, 0.29 ) }
    dend_47 { pt3dadd( 42.3305, -80.2036, 23.4622, 0.29 ) }
    dend_47 { pt3dadd( 43.3486, -80.9522, 24.0187, 2.65 ) }
    dend_47 { pt3dadd( 43.4009, -80.9919, 24.0516, 2.65 ) }
    dend_47 { pt3dadd( 44.0105, -81.4766, 24.511, 3.09 ) }
    dend_47 { pt3dadd( 44.9735, -82.3662, 25.5822, 0.37 ) }
    dend_47 { pt3dadd( 45.6474, -83.0793, 26.5016, 0.15 ) }
    dend_47 { pt3dadd( 46.0493, -83.5478, 27.1077, 0.15 ) }
    dend_47 { pt3dadd( 46.7475, -84.4345, 28.2755, 2.14 ) }
    dend_47 { pt3dadd( 47.2994, -85.2376, 29.3225, 2.58 ) }
    dend_47 { pt3dadd( 48.6715, -87.5449, 32.1922, 0.44 ) }
    dend_47 { pt3dadd( 48.918, -88.0647, 32.8401, 0.88 ) }
    dend_47 { pt3dadd( 48.9916, -88.2547, 33.0794, 0.88 ) }
    dend_47 { pt3dadd( 49.0082, -88.3063, 33.1431, 0.88 ) }
    dend_47 { pt3dadd( 49.3452, -89.4916, 34.4972, 0.22 ) }
    dend_47 { pt3dadd( 49.5491, -90.2537, 35.304, 0.22 ) }
    dend_47 { pt3dadd( 49.8018, -91.2361, 36.2729, 1.55 ) }
    dend_47 { pt3dadd( 50.1374, -92.5154, 37.5453, 2.14 ) }
    dend_47 { pt3dadd( 50.5126, -94.0233, 38.9805, 0.15 ) }
    dend_47 { pt3dadd( 50.6241, -94.526, 39.4314, 0.81 ) }
    dend_47 { pt3dadd( 50.8511, -95.5776, 40.3161, 0.15 ) }
    dend_47 { pt3dadd( 50.9911, -96.2812, 40.8851, 1.55 ) }
    dend_47 { pt3dadd( 51.0562, -96.6057, 41.1283, 1.77 ) }
    dend_47 { pt3dadd( 51.3472, -98.1873, 42.2514, 0.15 ) }
    dend_47 { pt3dadd( 51.6184, -99.8875, 43.5709, 0.15 ) }
    dend_47 { pt3dadd( 51.6568, -100.206, 43.8736, 0.52 ) }
    dend_47 { pt3dadd( 51.7316, -101.266, 45.0082, 0.22 ) }
    dend_47 { pt3dadd( 51.7601, -102.197, 46.1188, 0.74 ) }
    dend_47 { pt3dadd( 51.7623, -102.412, 46.3968, 0.74 ) }
    dend_47 { pt3dadd( 51.7427, -103.532, 48.0641, 0.59 ) }
    dend_47 { pt3dadd( 51.6382, -104.803, 50.227, 0.22 ) }
    dend_47 { pt3dadd( 51.6084, -104.989, 50.572, 0.52 ) }
    dend_47 { pt3dadd( 51.5039, -105.368, 51.3822, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.077, -43.5321, 4.15827, 0.88 ) }
    dend_40 { pt3dadd( 9.6202, -44.4213, 4.35998, 0.88 ) }
    dend_40 { pt3dadd( 9.33622, -44.9784, 4.48821, 0.37 ) }
    dend_40 { pt3dadd( 9.03069, -45.5886, 4.64206, 0.37 ) }
    dend_40 { pt3dadd( 8.57092, -46.4984, 4.8586, 0.37 ) }
    dend_40 { pt3dadd( 8.33064, -46.9998, 4.96729, 1.47 ) }
    dend_40 { pt3dadd( 8.06251, -47.6021, 5.03179, 2.14 ) }
    dend_40 { pt3dadd( 7.95528, -47.8574, 5.04309, 2.14 ) }
    dend_40 { pt3dadd( 7.72007, -48.5697, 4.99924, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 7.61212, -49.1762, 4.78984, 0.44 ) }
    dend_40 { pt3dadd( 7.56409, -49.7809, 4.46722, 0.37 ) }
    dend_40 { pt3dadd( 7.51897, -50.9449, 3.71847, 1.77 ) }
    dend_40 { pt3dadd( 7.50221, -51.2578, 3.49945, 2.14 ) }
    dend_40 { pt3dadd( 7.44752, -51.808, 3.10997, 2.21 ) }
    dend_40 { pt3dadd( 7.1902, -53.5507, 1.90073, 0.29 ) }
    dend_40 { pt3dadd( 7.08739, -54.07, 1.56832, 0.29 ) }
    dend_40 { pt3dadd( 6.86778, -54.8354, 1.13051, 0.29 ) }
    dend_40 { pt3dadd( 6.60378, -55.5505, 0.800597, 0.29 ) }
    dend_40 { pt3dadd( 6.26851, -56.319, 0.475856, 0.29 ) }
    dend_40 { pt3dadd( 5.90081, -57.0087, 0.248291, 0.88 ) }
    dend_40 { pt3dadd( 5.69505, -57.3281, 0.198622, 1.62 ) }
    dend_40 { pt3dadd( 5.19474, -58.054, 0.094369, 1.99 ) }
    dend_40 { pt3dadd( 5.05269, -58.271, 0.0749782, 1.99 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 14/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.6929, -104.599, 18.2903, 0.29 ) }
    dend_36 { pt3dadd( -16.3339, -106.001, 17.6506, 0.29 ) }
    dend_36 { pt3dadd( -16.0121, -106.341, 17.5118, 0.44 ) }
    dend_36 { pt3dadd( -14.9321, -107.536, 17.1288, 0.22 ) }
    dend_36 { pt3dadd( -14.1094, -108.522, 16.9417, 0.22 ) }
    dend_36 { pt3dadd( -14.0663, -108.576, 16.9357, 0.22 ) }
    dend_36 { pt3dadd( -13.863, -108.839, 16.9187, 0.66 ) }
    dend_36 { pt3dadd( -13.5942, -109.229, 16.953, 0.66 ) }
    dend_36 { pt3dadd( -12.9436, -110.143, 17.1236, 0.22 ) }
    dend_36 { pt3dadd( -12.2773, -111.064, 17.3847, 1.4 ) }
    dend_36 { pt3dadd( -12.0002, -111.446, 17.492, 1.84 ) }
    dend_36 { pt3dadd( -11.9662, -111.493, 17.5047, 1.84 ) }
    dend_36 { pt3dadd( -11.1736, -112.62, 17.7935, 0.29 ) }
    dend_36 { pt3dadd( -10.4806, -113.726, 18.0651, 0.29 ) }
    dend_36 { pt3dadd( -10.0349, -114.575, 18.2458, 0.29 ) }
    dend_36 { pt3dadd( -9.64353, -115.524, 18.4083, 1.69 ) }
    dend_36 { pt3dadd( -9.49266, -116.055, 18.501, 2.28 ) }
    dend_36 { pt3dadd( -9.41883, -116.489, 18.57, 2.5 ) }
    dend_36 { pt3dadd( -9.38277, -118.022, 18.8591, 0.29 ) }
    dend_36 { pt3dadd( -9.46023, -119.098, 19.0788, 0.29 ) }
    dend_36 { pt3dadd( -9.5777, -120.171, 19.3091, 0.29 ) }
    dend_36 { pt3dadd( -9.72353, -121.391, 19.5901, 2.06 ) }
    dend_36 { pt3dadd( -9.82301, -122.277, 19.8063, 2.65 ) }
    dend_36 { pt3dadd( -9.98363, -124.167, 20.2971, 0.29 ) }
    dend_36 { pt3dadd( -10.0278, -125.081, 20.5524, 0.22 ) }
    dend_36 { pt3dadd( -10.0415, -125.8, 20.7705, 0.22 ) }
    dend_36 { pt3dadd( -10.0324, -126.377, 20.945, 0.88 ) }
    dend_36 { pt3dadd( -10.0094, -126.791, 21.065, 1.18 ) }
    dend_36 { pt3dadd( -9.97574, -127.13, 21.1655, 1.18 ) }
    dend_36 { pt3dadd( -9.81024, -128.116, 21.4445, 0.22 ) }
    dend_36 { pt3dadd( -9.71561, -128.583, 21.5953, 0.22 ) }
    dend_36 { pt3dadd( -9.60454, -129.132, 21.8029, 0.22 ) }
    dend_36 { pt3dadd( -9.49615, -129.612, 21.996, 1.25 ) }
    dend_36 { pt3dadd( -9.35897, -130.064, 22.2138, 1.25 ) }
    dend_36 { pt3dadd( -8.90556, -131.303, 22.8525, 0.22 ) }
    dend_36 { pt3dadd( -8.57166, -131.947, 23.2071, 0.22 ) }
    dend_36 { pt3dadd( -7.97544, -132.823, 23.6947, 1.11 ) }
    dend_36 { pt3dadd( -7.66479, -133.2, 23.9046, 1.55 ) }
    dend_36 { pt3dadd( -6.60388, -134.32, 24.5121, 0.22 ) }
    dend_36 { pt3dadd( -5.84707, -134.971, 24.8472, 0.22 ) }
    dend_36 { pt3dadd( -4.61215, -135.792, 25.221, 0.22 ) }
    dend_36 { pt3dadd( -3.75997, -136.268, 25.4153, 1.69 ) }
    dend_36 { pt3dadd( -3.41959, -136.418, 25.4582, 1.99 ) }
    dend_36 { pt3dadd( -3.35271, -136.442, 25.4627, 1.99 ) }
    dend_36 { pt3dadd( -1.89212, -136.832, 25.3509, 0.29 ) }
    dend_36 { pt3dadd( -0.637415, -137.1, 25.1783, 0.29 ) }
    dend_36 { pt3dadd( -0.567707, -137.113, 25.1642, 0.29 ) }
    dend_36 { pt3dadd( 0.697046, -137.351, 24.8894, 1.4 ) }
    dend_36 { pt3dadd( 1.36027, -137.467, 24.7284, 1.62 ) }
    dend_36 { pt3dadd( 3.61875, -137.823, 24.1042, 0.22 ) }
    dend_36 { pt3dadd( 3.68602, -137.831, 24.0805, 0.22 ) }
    dend_36 { pt3dadd( 4.64679, -137.91, 23.6721, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.6929, -104.599, 18.2903, 0.29 ) }
    dend_35 { pt3dadd( -17.5993, -106.538, 18.6108, 0.29 ) }
    dend_35 { pt3dadd( -17.5325, -107.805, 18.8169, 0.29 ) }
    dend_35 { pt3dadd( -17.5019, -108.374, 18.9037, 0.74 ) }
    dend_35 { pt3dadd( -17.4571, -109.402, 19.0397, 0.81 ) }
    dend_35 { pt3dadd( -17.4311, -110.05, 19.1171, 1.11 ) }
    dend_35 { pt3dadd( -17.3943, -110.979, 19.2143, 0.44 ) }
    dend_35 { pt3dadd( -17.3648, -111.771, 19.2652, 0.29 ) }
    dend_35 { pt3dadd( -17.3275, -112.738, 19.3178, 0.29 ) }
    dend_35 { pt3dadd( -17.261, -114.105, 19.3805, 2.21 ) }
    dend_35 { pt3dadd( -17.2191, -114.736, 19.3915, 2.73 ) }
    dend_35 { pt3dadd( -17.0532, -116.48, 19.3749, 0.29 ) }
    dend_35 { pt3dadd( -16.9704, -117.152, 19.347, 0.29 ) }
    dend_35 { pt3dadd( -16.8508, -117.894, 19.3061, 0.81 ) }
    dend_35 { pt3dadd( -16.8201, -118.043, 19.2958, 0.96 ) }
    dend_35 { pt3dadd( -16.56, -119.035, 19.2352, 0.22 ) }
    dend_35 { pt3dadd( -16.3091, -119.899, 19.1963, 0.22 ) }
    dend_35 { pt3dadd( -16.1373, -120.436, 19.1858, 1.33 ) }
    dend_35 { pt3dadd( -16.0054, -120.902, 19.2072, 1.62 ) }
    dend_35 { pt3dadd( -15.989, -120.976, 19.2143, 1.62 ) }
    dend_35 { pt3dadd( -15.8079, -122.033, 19.3743, 0.29 ) }
    dend_35 { pt3dadd( -15.6911, -122.795, 19.53, 0.22 ) }
    dend_35 { pt3dadd( -15.5796, -123.499, 19.696, 0.22 ) }
    dend_35 { pt3dadd( -15.4507, -124.268, 19.8917, 1.11 ) }
    dend_35 { pt3dadd( -15.3487, -124.872, 20.0527, 1.47 ) }
    dend_35 { pt3dadd( -15.1967, -125.95, 20.4079, 0.22 ) }
    dend_35 { pt3dadd( -15.1301, -126.688, 20.7082, 0.22 ) }
    dend_35 { pt3dadd( -15.086, -127.44, 21.0567, 0.74 ) }
    dend_35 { pt3dadd( -15.0927, -127.648, 21.1606, 0.74 ) }
    dend_35 { pt3dadd( -15.0995, -127.706, 21.1914, 0.74 ) }
    dend_35 { pt3dadd( -15.497, -129.462, 22.1983, 0.22 ) }
    dend_35 { pt3dadd( -15.7964, -130.448, 22.7816, 1.99 ) }
    dend_35 { pt3dadd( -15.9153, -130.786, 22.9813, 1.99 ) }
    dend_35 { pt3dadd( -16.4886, -132.221, 23.8935, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( -17.0952, -133.656, 24.8451, 0.22 ) }
    dend_35 { pt3dadd( -17.5526, -134.678, 25.5326, 1.84 ) }
    dend_35 { pt3dadd( -17.6418, -134.867, 25.66, 1.99 ) }
    dend_35 { pt3dadd( -17.7035, -134.994, 25.7489, 1.99 ) }
    dend_35 { pt3dadd( -18.6116, -136.831, 27.1017, 0.22 ) }
    dend_35 { pt3dadd( -18.8643, -137.35, 27.5126, 0.96 ) }
    dend_35 { pt3dadd( -19.2787, -138.169, 28.1852, 0.22 ) }
    dend_35 { pt3dadd( -19.4487, -138.521, 28.4831, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -36.3755, -74.4532, -125.781, 0.29 ) }
    dend_27 { pt3dadd( -35.5938, -75.5832, -125.919, 0.29 ) }
    dend_27 { pt3dadd( -34.7553, -76.8357, -126.099, 0.22 ) }
    dend_27 { pt3dadd( -34.48, -77.2922, -126.165, 0.52 ) }
    dend_27 { pt3dadd( -34.2746, -77.7005, -126.232, 0.52 ) }
    dend_27 { pt3dadd( -33.864, -78.6537, -126.392, 0.22 ) }
    dend_27 { pt3dadd( -33.5407, -79.4629, -126.528, 0.22 ) }
    dend_27 { pt3dadd( -33.3326, -80.1581, -126.657, 0.81 ) }
    dend_27 { pt3dadd( -33.1584, -80.8197, -126.782, 1.11 ) }
    dend_27 { pt3dadd( -32.8804, -82.0087, -126.978, 0.22 ) }
    dend_27 { pt3dadd( -32.7353, -82.7371, -127.082, 0.22 ) }
    dend_27 { pt3dadd( -32.6045, -83.5657, -127.18, 0.22 ) }
    dend_27 { pt3dadd( -32.5315, -84.1799, -127.26, 1.11 ) }
    dend_27 { pt3dadd( -32.3797, -85.4395, -127.436, 0.22 ) }
    dend_27 { pt3dadd( -32.1602, -86.9614, -127.658, 0.22 ) }
    dend_27 { pt3dadd( -32.0063, -87.8382, -127.788, 1.33 ) }
    dend_27 { pt3dadd( -31.9345, -88.1559, -127.849, 1.47 ) }
    dend_27 { pt3dadd( -31.4829, -89.8876, -128.249, 0.22 ) }
    dend_27 { pt3dadd( -31.2211, -90.6288, -128.467, 1.11 ) }
    dend_27 { pt3dadd( -30.9882, -91.1372, -128.657, 1.47 ) }
    dend_27 { pt3dadd( -30.7257, -91.6044, -128.862, 1.47 ) }
    dend_27 { pt3dadd( -29.8148, -92.9478, -129.521, 0.15 ) }
    dend_27 { pt3dadd( -29.7767, -92.9942, -129.546, 0.15 ) }
    dend_27 { pt3dadd( -28.9528, -93.7094, -130.038, 0.88 ) }
    dend_27 { pt3dadd( -28.9065, -93.7465, -130.069, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -36.3755, -74.4532, -125.781, 1.69 ) }
    dend_26 { pt3dadd( -37.5116, -75.3522, -126.036, 1.69 ) }
    dend_26 { pt3dadd( -38.7148, -76.0426, -126.4, 0.22 ) }
    dend_26 { pt3dadd( -38.7747, -76.0721, -126.419, 0.22 ) }
    dend_26 { pt3dadd( -39.9077, -76.595, -126.782, 0.22 ) }
    dend_26 { pt3dadd( -40.8404, -77.0136, -127.137, 0.88 ) }
    dend_26 { pt3dadd( -41.6879, -77.3872, -127.485, 1.11 ) }
    dend_26 { pt3dadd( -43.1162, -77.8705, -128.12, 0.22 ) }
    dend_26 { pt3dadd( -43.693, -78.0235, -128.38, 0.52 ) }
    dend_26 { pt3dadd( -43.881, -78.0588, -128.467, 0.52 ) }
    dend_26 { pt3dadd( -45.233, -78.1465, -129.2, 0.37 ) }
    dend_26 { pt3dadd( -45.2932, -78.1488, -129.234, 0.29 ) }
    dend_26 { pt3dadd( -45.9129, -78.1796, -129.545, 0.22 ) }
    dend_26 { pt3dadd( -46.2359, -78.2058, -129.696, 0.37 ) }
    dend_26 { pt3dadd( -46.9311, -78.2729, -130.066, 0.37 ) }
    dend_26 { pt3dadd( -48.0452, -78.5326, -130.94, 0.29 ) }
    dend_26 { pt3dadd( -48.8525, -78.8527, -131.701, 0.29 ) }
    dend_26 { pt3dadd( -49.4938, -79.1915, -132.396, 0.22 ) }
    dend_26 { pt3dadd( -50.3317, -79.8132, -133.464, 1.11 ) }
    dend_26 { pt3dadd( -50.8785, -80.3182, -134.243, 1.33 ) }
    dend_26 { pt3dadd( -52.4278, -81.8895, -136.607, 0.29 ) }
    dend_26 { pt3dadd( -52.8313, -82.3637, -137.296, 0.59 ) }
    dend_26 { pt3dadd( -52.8533, -82.3935, -137.342, 0.59 ) }
    dend_26 { pt3dadd( -53.3788, -83.222, -138.615, 0.29 ) }
    dend_26 { pt3dadd( -53.3992, -83.26, -138.668, 0.29 ) }
    dend_26 { pt3dadd( -54.0368, -84.3648, -140.038, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -21.5484, 142.004, -58.2348, 0.22 ) }
    dend_18 { pt3dadd( -20.717, 145.587, -62.1381, 0.22 ) }
    dend_18 { pt3dadd( -20.4044, 146.793, -63.3957, 0.37 ) }
    dend_18 { pt3dadd( -20.2234, 147.46, -64.0293, 0.15 ) }
    dend_18 { pt3dadd( -20.06, 147.961, -64.5175, 0.44 ) }
    dend_18 { pt3dadd( -19.6863, 149.1, -65.6372, 0.22 ) }
    dend_18 { pt3dadd( -19.2372, 150.584, -67.1204, 1.25 ) }
    dend_18 { pt3dadd( -18.7271, 152.449, -68.7634, 0.22 ) }
    dend_18 { pt3dadd( -18.5218, 153.317, -69.5911, 1.03 ) }
    dend_18 { pt3dadd( -18.0868, 155.486, -71.7648, 0.22 ) }
    dend_18 { pt3dadd( -18.0177, 155.904, -72.1949, 0.22 ) }
    dend_18 { pt3dadd( -17.8817, 157.109, -73.4078, 1.11 ) }
    dend_18 { pt3dadd( -17.8653, 157.504, -73.7821, 1.4 ) }
    dend_18 { pt3dadd( -17.9282, 159.332, -75.3241, 0.22 ) }
    dend_18 { pt3dadd( -17.9599, 159.749, -75.6454, 0.59 ) }
    dend_18 { pt3dadd( -18.1732, 161.746, -76.838, 0.22 ) }
    dend_18 { pt3dadd( -18.2416, 162.476, -77.2096, 0.88 ) }
    dend_18 { pt3dadd( -18.2967, 163.066, -77.426, 1.03 ) }
    dend_18 { pt3dadd( -18.4764, 164.599, -77.8452, 0.22 ) }
    dend_18 { pt3dadd( -18.5797, 165.379, -77.9695, 0.59 ) }
    dend_18 { pt3dadd( -18.8065, 166.844, -78.124, 0.22 ) }
    dend_18 { pt3dadd( -18.9548, 167.864, -78.1842, 0.22 ) }
    dend_18 { pt3dadd( -19.1524, 169.624, -78.297, 1.47 ) }
    dend_18 { pt3dadd( -19.1929, 170.131, -78.3267, 1.47 ) }
    dend_18 { pt3dadd( -19.2275, 171.512, -78.4585, 0.22 ) }
    dend_18 { pt3dadd( -19.2108, 172.203, -78.5667, 0.52 ) }
    dend_18 { pt3dadd( -19.1106, 174.078, -78.9468, 0.22 ) }
    dend_18 { pt3dadd( -19.0691, 174.623, -79.0757, 1.03 ) }
    dend_18 { pt3dadd( -19.0374, 174.978, -79.1785, 1.03 ) }
    dend_18 { pt3dadd( -18.7027, 178.792, -80.4267, 0.22 ) }
    dend_18 { pt3dadd( -18.605, 179.955, -80.8232, 0.96 ) }
    dend_18 { pt3dadd( -18.5604, 180.556, -81.0369, 0.96 ) }
    dend_18 { pt3dadd( -18.557, 180.636, -81.0664, 0.96 ) }
    dend_18 { pt3dadd( -18.4731, 182.687, -81.8763, 0.22 ) }
    dend_18 { pt3dadd( -18.4244, 183.829, -82.3662, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -21.5484, 142.004, -58.2348, 0.22 ) }
    dend_17 { pt3dadd( -22.2973, 142.224, -59.8852, 0.22 ) }
    dend_17 { pt3dadd( -23.5189, 142.468, -62.5497, 0.15 ) }
    dend_17 { pt3dadd( -24.4341, 142.604, -64.495, 1.4 ) }
    dend_17 { pt3dadd( -25.183, 142.715, -66.0865, 1.4 ) }
    dend_17 { pt3dadd( -26.1313, 142.855, -68.1021, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -26.5038, 142.91, -68.8937, 0.22 ) }
    dend_17 { pt3dadd( -26.9199, 142.931, -69.9194, 0.88 ) }
    dend_17 { pt3dadd( -27.0555, 142.915, -70.2089, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -66.1054, 107.355, -54.7287, 0.66 ) }
    dend_5 { pt3dadd( -69.1998, 106.171, -61.864, 0.66 ) }
    dend_5 { pt3dadd( -69.6567, 106.098, -62.7927, 0.29 ) }
    dend_5 { pt3dadd( -69.9344, 106.119, -63.2882, 0.22 ) }
    dend_5 { pt3dadd( -70.4116, 106.221, -64.054, 0.22 ) }
    dend_5 { pt3dadd( -70.8454, 106.35, -64.7014, 1.03 ) }
    dend_5 { pt3dadd( -71.2337, 106.479, -65.2286, 1.47 ) }
    dend_5 { pt3dadd( -72.2296, 107.215, -65.759, 0.88 ) }
    dend_5 { pt3dadd( -73.1735, 107.857, -66.2705, 0.22 ) }
    dend_5 { pt3dadd( -73.4601, 107.998, -66.4372, 0.29 ) }
    dend_5 { pt3dadd( -73.5447, 108.02, -66.4819, 0.29 ) }
    dend_5 { pt3dadd( -74.1889, 108.098, -66.799, 0.15 ) }
    dend_5 { pt3dadd( -74.9314, 108.096, -67.1669, 0.96 ) }
    dend_5 { pt3dadd( -75.6257, 108.04, -67.4838, 1.4 ) }
    dend_5 { pt3dadd( -77.009, 107.88, -68.2677, 0.22 ) }
    dend_5 { pt3dadd( -77.9713, 107.791, -68.9314, 0.22 ) }
    dend_5 { pt3dadd( -78.7616, 107.741, -69.6715, 0.74 ) }
    dend_5 { pt3dadd( -79.8234, 107.71, -70.8361, 0.22 ) }
    dend_5 { pt3dadd( -80.1929, 107.709, -71.2901, 0.96 ) }
    dend_5 { pt3dadd( -81.4643, 107.752, -73.0475, 1.33 ) }
    dend_5 { pt3dadd( -82.0168, 107.814, -73.8508, 1.84 ) }
    dend_5 { pt3dadd( -83.9658, 108.103, -76.8781, 0.88 ) }
    dend_5 { pt3dadd( -84.2497, 108.144, -77.3185, 1.03 ) }
    dend_5 { pt3dadd( -84.2945, 108.15, -77.3834, 1.03 ) }
    dend_5 { pt3dadd( -85.8387, 108.325, -79.4886, 0.22 ) }
    dend_5 { pt3dadd( -86.7215, 108.408, -80.5329, 1.33 ) }
    dend_5 { pt3dadd( -88.9276, 108.546, -82.7974, 0.22 ) }
    dend_5 { pt3dadd( -89.8759, 108.591, -83.5925, 1.33 ) }
    dend_5 { pt3dadd( -90.9362, 108.593, -84.3788, 0.22 ) }
    dend_5 { pt3dadd( -90.9865, 108.591, -84.4103, 0.22 ) }
    dend_5 { pt3dadd( -92.0068, 108.437, -84.8568, 0.22 ) }
    dend_5 { pt3dadd( -92.9569, 108.19, -85.1424, 1.4 ) }
    dend_5 { pt3dadd( -93.5278, 108.006, -85.185, 1.84 ) }
    dend_5 { pt3dadd( -94.2793, 107.69, -85.1921, 1.33 ) }
    dend_5 { pt3dadd( -95.2019, 107.216, -85.1929, 0.81 ) }
    dend_5 { pt3dadd( -96.0114, 106.743, -85.1922, 0.22 ) }
    dend_5 { pt3dadd( -96.745, 106.203, -85.1949, 1.4 ) }
    dend_5 { pt3dadd( -97.139, 105.874, -85.1954, 1.69 ) }
    dend_5 { pt3dadd( -97.3793, 105.663, -85.1908, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -66.1054, 107.355, -54.7287, 0.29 ) }
    dend_4 { pt3dadd( -68.413, 108.645, -57.5946, 0.29 ) }
    dend_4 { pt3dadd( -69.0509, 109.049, -58.3571, 0.22 ) }
    dend_4 { pt3dadd( -69.3656, 109.283, -58.7449, 0.96 ) }
    dend_4 { pt3dadd( -69.5767, 109.453, -59.0091, 1.18 ) }
    dend_4 { pt3dadd( -70.3855, 110.189, -60.0336, 0.22 ) }
    dend_4 { pt3dadd( -70.6457, 110.444, -60.3658, 0.52 ) }
    dend_4 { pt3dadd( -70.7688, 110.624, -60.4992, 0.52 ) }
    dend_4 { pt3dadd( -71.5985, 111.877, -61.3245, 0.22 ) }
    dend_4 { pt3dadd( -71.6289, 111.924, -61.3503, 0.22 ) }
    dend_4 { pt3dadd( -72.0037, 112.543, -61.6171, 0.22 ) }
    dend_4 { pt3dadd( -72.0324, 112.595, -61.6313, 0.22 ) }
    dend_4 { pt3dadd( -72.7385, 113.827, -61.8361, 0.22 ) }
    dend_4 { pt3dadd( -72.7693, 113.88, -61.8392, 0.22 ) }
    dend_4 { pt3dadd( -73.4207, 114.975, -61.8893, 0.22 ) }
    dend_4 { pt3dadd( -73.4511, 115.028, -61.8951, 0.22 ) }
    dend_4 { pt3dadd( -73.7673, 115.588, -61.9845, 0.44 ) }
    dend_4 { pt3dadd( -74.4285, 116.841, -62.2326, 0.15 ) }
    dend_4 { pt3dadd( -75.2658, 118.561, -62.7059, 0.15 ) }
    dend_4 { pt3dadd( -75.9697, 120.096, -63.1974, 0.15 ) }
    dend_4 { pt3dadd( -76.4561, 121.245, -63.6216, 0.15 ) }
    dend_4 { pt3dadd( -76.7751, 122.035, -63.9608, 0.88 ) }
    dend_4 { pt3dadd( -76.9816, 122.587, -64.2328, 1.25 ) }
    dend_4 { pt3dadd( -77.4461, 124.028, -65.0467, 0.22 ) }
    dend_4 { pt3dadd( -77.5475, 124.397, -65.2736, 0.59 ) }
    dend_4 { pt3dadd( -77.643, 124.796, -65.5097, 0.59 ) }
    dend_4 { pt3dadd( -77.9523, 126.124, -66.262, 0.22 ) }
    dend_4 { pt3dadd( -78.064, 126.62, -66.5314, 0.22 ) }
    dend_4 { pt3dadd( -78.1161, 126.843, -66.6482, 0.66 ) }
    dend_4 { pt3dadd( -78.2161, 127.298, -66.8618, 0.74 ) }
    dend_4 { pt3dadd( -78.4484, 128.68, -67.3761, 0.15 ) }
    dend_4 { pt3dadd( -78.5539, 129.522, -67.5979, 0.15 ) }
    dend_4 { pt3dadd( -78.558, 129.573, -67.6063, 0.15 ) }
    dend_4 { pt3dadd( -78.6009, 130.235, -67.6961, 0.52 ) }
    dend_4 { pt3dadd( -78.6204, 130.804, -67.7361, 0.52 ) }
    dend_4 { pt3dadd( -78.6478, 132.483, -67.7358, 0.22 ) }
    dend_4 { pt3dadd( -78.6592, 133.496, -67.6447, 1.03 ) }
    dend_4 { pt3dadd( -78.6784, 134.056, -67.5625, 1.03 ) }
    dend_4 { pt3dadd( -78.6858, 134.125, -67.5489, 1.03 ) }
    dend_4 { pt3dadd( -78.8913, 135.114, -67.2855, 0.15 ) }
    dend_4 { pt3dadd( -79.0476, 135.521, -67.1608, 0.52 ) }
    dend_4 { pt3dadd( -79.2599, 135.853, -67.0553, 0.52 ) }
    dend_4 { pt3dadd( -79.7014, 136.442, -66.8332, 0.22 ) }
    dend_4 { pt3dadd( -80.2957, 137.143, -66.5525, 0.22 ) }
    dend_4 { pt3dadd( -80.6049, 137.472, -66.4244, 0.22 ) }
    dend_4 { pt3dadd( -81.0068, 137.826, -66.2988, 0.59 ) }
    dend_4 { pt3dadd( -81.4811, 138.245, -66.1519, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.05269, -58.271, 0.0749782, 0.37 ) }
    dend_46 { pt3dadd( 4.64228, -59.2536, 0.576336, 0.37 ) }
    dend_46 { pt3dadd( 4.49001, -59.6557, 0.850527, 0.74 ) }
    dend_46 { pt3dadd( 4.16661, -60.586, 1.58901, 0.22 ) }
    dend_46 { pt3dadd( 4.01024, -61.0469, 1.98131, 0.81 ) }
    dend_46 { pt3dadd( 3.92407, -61.3128, 2.22579, 0.81 ) }
    dend_46 { pt3dadd( 3.62669, -62.2678, 3.16062, 1.47 ) }
    dend_46 { pt3dadd( 3.44842, -62.9194, 3.91284, 2.06 ) }
    dend_46 { pt3dadd( 3.30522, -63.6666, 4.86999, 0.22 ) }
    dend_46 { pt3dadd( 3.27368, -63.9188, 5.20575, 0.52 ) }
    dend_46 { pt3dadd( 3.22328, -64.3771, 5.83233, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( 3.17762, -64.8014, 6.41131, 1.77 ) }
    dend_46 { pt3dadd( 3.11744, -65.3197, 7.09852, 2.43 ) }
    dend_46 { pt3dadd( 2.92669, -66.7562, 8.95316, 0.22 ) }
    dend_46 { pt3dadd( 2.905, -66.9326, 9.18104, 0.59 ) }
    dend_46 { pt3dadd( 2.872, -67.2001, 9.51773, 0.22 ) }
    dend_46 { pt3dadd( 2.84953, -67.3562, 9.70412, 0.44 ) }
    dend_46 { pt3dadd( 2.76138, -67.8705, 10.2917, 0.15 ) }
    dend_46 { pt3dadd( 2.65324, -68.2764, 10.7242, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 8/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.05269, -58.271, 0.0749782, 0.29 ) }
    dend_41 { pt3dadd( 3.78261, -59.7503, -0.473167, 0.29 ) }
    dend_41 { pt3dadd( 3.16656, -60.497, -0.747884, 0.29 ) }
    dend_41 { pt3dadd( 2.54695, -61.2595, -1.02355, 0.29 ) }
    dend_41 { pt3dadd( 1.79495, -62.1809, -1.26812, 0.29 ) }
    dend_41 { pt3dadd( 1.08557, -63.0378, -1.44366, 0.29 ) }
    dend_41 { pt3dadd( 0.545157, -63.693, -1.56009, 1.77 ) }
    dend_41 { pt3dadd( -0.0810783, -64.4273, -1.60546, 2.21 ) }
    dend_41 { pt3dadd( -0.295494, -64.6878, -1.61386, 2.36 ) }
    dend_41 { pt3dadd( -1.27135, -65.9567, -1.61854, 0.74 ) }
    dend_41 { pt3dadd( -1.79751, -66.5991, -1.60934, 0.29 ) }
    dend_41 { pt3dadd( -2.37815, -67.2614, -1.61658, 0.29 ) }
    dend_41 { pt3dadd( -3.18767, -68.1375, -1.64631, 1.92 ) }
    dend_41 { pt3dadd( -3.68705, -68.6545, -1.6825, 2.28 ) }
    dend_41 { pt3dadd( -4.06473, -69.0383, -1.7457, 2.28 ) }
    dend_41 { pt3dadd( -5.17348, -70.1742, -2.05362, 0.29 ) }
    dend_41 { pt3dadd( -6.06707, -71.1171, -2.33505, 0.22 ) }
    dend_41 { pt3dadd( -6.36783, -71.4438, -2.44349, 0.96 ) }
    dend_41 { pt3dadd( -6.55662, -71.6754, -2.56864, 1.18 ) }
    dend_41 { pt3dadd( -7.13791, -72.4814, -3.11593, 0.22 ) }
    dend_41 { pt3dadd( -7.28409, -72.7248, -3.37787, 0.22 ) }
    dend_41 { pt3dadd( -7.4222, -72.9923, -3.7433, 0.22 ) }
    dend_41 { pt3dadd( -7.62896, -73.3546, -4.3088, 0.66 ) }
    dend_41 { pt3dadd( -8.39653, -74.5005, -6.37748, 1.62 ) }
    dend_41 { pt3dadd( -8.50491, -74.624, -6.65063, 2.14 ) }
    dend_41 { pt3dadd( -9.75632, -75.6553, -9.42316, 0.37 ) }
    dend_41 { pt3dadd( -10.1884, -75.9178, -10.2627, 0.37 ) }
    dend_41 { pt3dadd( -10.5846, -76.0827, -10.9652, 1.47 ) }
    dend_41 { pt3dadd( -11.1632, -76.2226, -11.9305, 1.47 ) }
    dend_41 { pt3dadd( -12.3295, -76.355, -13.662, 0.22 ) }
    dend_41 { pt3dadd( -12.9132, -76.3713, -14.472, 1.25 ) }
    dend_41 { pt3dadd( -13.1902, -76.356, -14.8118, 1.84 ) }
    dend_41 { pt3dadd( -14.0995, -76.2935, -15.9619, 1.84 ) }
    dend_41 { pt3dadd( -16.1, -76.2262, -18.5754, 0.22 ) }
    dend_41 { pt3dadd( -16.4518, -76.2249, -19.0226, 0.88 ) }
    dend_41 { pt3dadd( -16.9622, -76.2523, -19.7043, 0.88 ) }
    dend_41 { pt3dadd( -17.4329, -76.32, -20.3666, 0.22 ) }
    dend_41 { pt3dadd( -18.2044, -76.4979, -21.4342, 0.22 ) }
    dend_41 { pt3dadd( -18.7414, -76.6784, -22.1761, 1.03 ) }
    dend_41 { pt3dadd( -18.9165, -76.7548, -22.4284, 1.03 ) }
    dend_41 { pt3dadd( -19.807, -77.2529, -24.0905, 0.22 ) }
    dend_41 { pt3dadd( -20.0592, -77.4332, -24.6398, 0.22 ) }
    dend_41 { pt3dadd( -20.5344, -77.8351, -25.7923, 1.25 ) }
    dend_41 { pt3dadd( -21.0032, -78.246, -26.9111, 1.18 ) }
    dend_41 { pt3dadd( -21.0295, -78.2728, -26.9772, 1.18 ) }
    dend_41 { pt3dadd( -21.7765, -79.2213, -29.0859, 0.22 ) }
    dend_41 { pt3dadd( -21.9429, -79.504, -29.6331, 1.18 ) }
    dend_41 { pt3dadd( -22.0451, -79.7429, -30.0578, 1.18 ) }
    dend_41 { pt3dadd( -22.1989, -80.6445, -31.4674, 0.22 ) }
    dend_41 { pt3dadd( -22.2139, -80.8646, -31.7997, 0.22 ) }
    dend_41 { pt3dadd( -22.2307, -81.3601, -32.6024, 0.66 ) }
    dend_41 { pt3dadd( -22.2379, -81.6021, -32.9779, 0.81 ) }
    dend_41 { pt3dadd( -22.2407, -81.8083, -33.3065, 0.81 ) }
    dend_41 { pt3dadd( -22.2132, -82.7738, -34.9857, 0.52 ) }
    dend_41 { pt3dadd( -22.1455, -83.827, -36.7822, 0.22 ) }
    dend_41 { pt3dadd( -22.1127, -84.715, -38.2772, 0.22 ) }
    dend_41 { pt3dadd( -22.1077, -85.2638, -39.1888, 2.21 ) }
    dend_41 { pt3dadd( -22.134, -85.8021, -40.0561, 2.28 ) }
    dend_41 { pt3dadd( -22.3891, -88.0348, -43.4636, 0.22 ) }
    dend_41 { pt3dadd( -22.4923, -88.539, -44.1655, 0.22 ) }
    dend_41 { pt3dadd( -22.7316, -89.4947, -45.3746, 0.22 ) }
    dend_41 { pt3dadd( -22.7461, -89.5349, -45.4225, 0.22 ) }
    dend_41 { pt3dadd( -23.0946, -90.1629, -46.1576, 0.37 ) }
    dend_41 { pt3dadd( -23.4647, -90.5857, -46.5844, 0.88 ) }
    dend_41 { pt3dadd( -24.3442, -91.2864, -47.1314, 1.69 ) }
    dend_41 { pt3dadd( -24.873, -91.6652, -47.4474, 2.21 ) }
    dend_41 { pt3dadd( -25.7107, -92.2536, -47.9168, 2.21 ) }
    dend_41 { pt3dadd( -26.4196, -92.7816, -48.3414, 1.11 ) }
    dend_41 { pt3dadd( -27.0114, -93.284, -48.7401, 0.37 ) }
    dend_41 { pt3dadd( -27.0505, -93.3255, -48.7692, 0.37 ) }
    dend_41 { pt3dadd( -27.723, -94.2286, -49.2849, 0.37 ) }
    dend_41 { pt3dadd( -27.9848, -94.6354, -49.4651, 0.74 ) }
    dend_41 { pt3dadd( -28.0611, -94.7675, -49.5073, 0.74 ) }
    dend_41 { pt3dadd( -28.3956, -95.3638, -49.6668, 0.66 ) }
    dend_41 { pt3dadd( -28.8721, -96.1764, -49.857, 0.66 ) }
    dend_41 { pt3dadd( -29.2547, -96.7855, -50.0018, 0.52 ) }
    dend_41 { pt3dadd( -30.0703, -97.9861, -50.2775, 0.22 ) }
    dend_41 { pt3dadd( -30.6635, -98.8554, -50.4835, 1.47 ) }
    dend_41 { pt3dadd( -31.0585, -99.4881, -50.6722, 1.92 ) }
    dend_41 { pt3dadd( -31.3818, -100.028, -50.8623, 2.14 ) }
    dend_41 { pt3dadd( -31.8477, -100.878, -51.2166, 0.74 ) }
    dend_41 { pt3dadd( -32.1422, -101.506, -51.5115, 0.29 ) }
    dend_41 { pt3dadd( -32.4251, -102.22, -51.9055, 0.29 ) }
    dend_41 { pt3dadd( -32.9523, -103.677, -52.7576, 0.29 ) }
    dend_41 { pt3dadd( -33.1283, -104.24, -53.0728, 1.33 ) }
    dend_41 { pt3dadd( -33.3388, -104.956, -53.4587, 1.33 ) }
    dend_41 { pt3dadd( -33.4216, -105.235, -53.593, 1.33 ) }
    dend_41 { pt3dadd( -33.7815, -106.353, -54.1524, 0.29 ) }
    dend_41 { pt3dadd( -34.0035, -106.923, -54.4355, 0.29 ) }
    dend_41 { pt3dadd( -34.5115, -108.025, -54.9736, 0.29 ) }
    dend_41 { pt3dadd( -34.5395, -108.086, -55.0052, 0.29 ) }
    dend_41 { pt3dadd( -34.8996, -108.854, -55.4057, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -35.4084, -109.879, -55.9596, 1.18 ) }
    dend_41 { pt3dadd( -35.5526, -110.163, -56.1175, 1.33 ) }
    dend_41 { pt3dadd( -36.1165, -111.303, -56.7655, 0.22 ) }
    dend_41 { pt3dadd( -36.1453, -111.363, -56.7991, 0.22 ) }
    dend_41 { pt3dadd( -36.4044, -111.998, -57.1171, 0.88 ) }
    dend_41 { pt3dadd( -36.5326, -112.392, -57.2817, 0.88 ) }
    dend_41 { pt3dadd( -36.8375, -113.682, -57.6682, 0.22 ) }
    dend_41 { pt3dadd( -36.984, -114.414, -57.8672, 1.33 ) }
    dend_41 { pt3dadd( -37.0556, -114.774, -57.9512, 1.77 ) }
    dend_41 { pt3dadd( -37.2565, -115.689, -58.1626, 0.88 ) }
    dend_41 { pt3dadd( -37.4515, -116.49, -58.3448, 0.22 ) }
    dend_41 { pt3dadd( -37.703, -117.346, -58.5214, 0.59 ) }
    dend_41 { pt3dadd( -38.1789, -118.67, -58.7561, 0.22 ) }
    dend_41 { pt3dadd( -38.561, -119.623, -58.9113, 0.22 ) }
    dend_41 { pt3dadd( -38.852, -120.281, -59.0065, 1.18 ) }
    dend_41 { pt3dadd( -39.0563, -120.689, -59.0588, 1.18 ) }
    dend_41 { pt3dadd( -39.6153, -121.68, -59.184, 0.15 ) }
    dend_41 { pt3dadd( -39.9677, -122.26, -59.2658, 0.15 ) }
    dend_41 { pt3dadd( -40.4491, -123.061, -59.375, 0.88 ) }
    dend_41 { pt3dadd( -40.6414, -123.384, -59.4274, 1.11 ) }
    dend_41 { pt3dadd( -41.1327, -124.224, -59.7043, 0.37 ) }
    dend_41 { pt3dadd( -41.5807, -125.018, -60.0814, 0.22 ) }
    dend_41 { pt3dadd( -41.8653, -125.593, -60.4229, 1.18 ) }
    dend_41 { pt3dadd( -42.0638, -126.02, -60.7133, 1.18 ) }
    dend_41 { pt3dadd( -42.0902, -126.075, -60.7564, 1.18 ) }
    dend_41 { pt3dadd( -42.9386, -127.866, -62.2344, 0.22 ) }
    dend_41 { pt3dadd( -42.9797, -127.951, -62.3085, 0.37 ) }
    dend_41 { pt3dadd( -43.2964, -128.601, -62.9068, 0.15 ) }
    dend_41 { pt3dadd( -43.4412, -128.888, -63.1657, 0.59 ) }
    dend_41 { pt3dadd( -44.0443, -130.028, -64.121, 0.22 ) }
    dend_41 { pt3dadd( -44.3391, -130.586, -64.5267, 1.03 ) }
    dend_41 { pt3dadd( -44.4519, -130.8, -64.6529, 1.03 ) }
    dend_41 { pt3dadd( -45.1708, -132.285, -65.4125, 0.22 ) }
    dend_41 { pt3dadd( -45.3299, -132.63, -65.5648, 0.52 ) }
    dend_41 { pt3dadd( -45.7497, -133.607, -65.8972, 0.22 ) }
    dend_41 { pt3dadd( -45.9807, -134.184, -66.0348, 1.03 ) }
    dend_41 { pt3dadd( -46.1313, -134.556, -66.1, 1.03 ) }
    dend_41 { pt3dadd( -46.7279, -135.965, -66.3093, 0.15 ) }
    dend_41 { pt3dadd( -46.9592, -136.471, -66.3618, 0.44 ) }
    dend_41 { pt3dadd( -47.3846, -137.4, -66.4759, 0.15 ) }
    dend_41 { pt3dadd( -47.5904, -137.86, -66.5399, 0.88 ) }
    dend_41 { pt3dadd( -47.8358, -138.476, -66.6719, 0.88 ) }
    dend_41 { pt3dadd( -48.2435, -139.699, -67.0058, 0.22 ) }
    dend_41 { pt3dadd( -48.5382, -140.786, -67.5461, 0.22 ) }
    dend_41 { pt3dadd( -48.6136, -141.063, -67.7395, 0.66 ) }
    dend_41 { pt3dadd( -48.6847, -141.316, -67.923, 0.66 ) }
    dend_41 { pt3dadd( -49.1753, -142.803, -69.0824, 0.37 ) }
    dend_41 { pt3dadd( -49.3701, -143.355, -69.53, 1.25 ) }
    dend_41 { pt3dadd( -50.2717, -145.997, -71.6446, 0.44 ) }
    dend_41 { pt3dadd( -51.2998, -149.045, -74.0427, 0.15 ) }
    dend_41 { pt3dadd( -51.6728, -150.13, -74.8531, 0.96 ) }
    dend_41 { pt3dadd( -52.1225, -151.458, -75.7704, 0.29 ) }
    dend_41 { pt3dadd( -52.253, -151.864, -76.0146, 0.52 ) }
    dend_41 { pt3dadd( -52.7437, -153.727, -77.0255, 0.22 ) }
    dend_41 { pt3dadd( -52.7917, -154.08, -77.1778, 0.66 ) }
    dend_41 { pt3dadd( -52.8011, -154.716, -77.4931, 0.66 ) }
    dend_41 { pt3dadd( -52.8389, -156.113, -78.299, 0.15 ) }
    dend_41 { pt3dadd( -52.8994, -156.97, -78.8538, 0.15 ) }
    dend_41 { pt3dadd( -53.0102, -158.051, -79.6178, 1.03 ) }
    dend_41 { pt3dadd( -53.0556, -158.36, -79.864, 1.03 ) }
    dend_41 { pt3dadd( -53.4502, -160.658, -81.8443, 0.22 ) }
    dend_41 { pt3dadd( -53.716, -161.915, -83.0444, 0.22 ) }
    dend_41 { pt3dadd( -54.0408, -163.009, -84.2188, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -97.3793, 105.663, -85.1908, 0.22 ) }
    dend_7 { pt3dadd( -98.411, 104.845, -85.5178, 0.22 ) }
    dend_7 { pt3dadd( -98.969, 104.418, -85.6927, 0.22 ) }
    dend_7 { pt3dadd( -100.03, 103.603, -85.9988, 0.59 ) }
    dend_7 { pt3dadd( -101.262, 102.659, -86.321, 0.15 ) }
    dend_7 { pt3dadd( -101.598, 102.4, -86.4045, 0.81 ) }
    dend_7 { pt3dadd( -102.191, 101.942, -86.552, 1.11 ) }
    dend_7 { pt3dadd( -103.136, 101.236, -86.7663, 0.22 ) }
    dend_7 { pt3dadd( -103.71, 100.792, -86.9012, 1.03 ) }
    dend_7 { pt3dadd( -104.092, 100.479, -86.9906, 1.33 ) }
    dend_7 { pt3dadd( -104.173, 100.42, -86.9961, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -97.3793, 105.663, -85.1908, 0.22 ) }
    dend_6 { pt3dadd( -97.994, 106.481, -84.5277, 0.22 ) }
    dend_6 { pt3dadd( -98.4831, 107.289, -83.7887, 0.22 ) }
    dend_6 { pt3dadd( -98.7637, 107.774, -83.3347, 1.25 ) }
    dend_6 { pt3dadd( -98.7825, 107.816, -83.2965, 1.25 ) }
    dend_6 { pt3dadd( -99.2523, 109.082, -82.1995, 0.15 ) }
    dend_6 { pt3dadd( -99.4415, 109.656, -81.7399, 0.15 ) }
    dend_6 { pt3dadd( -99.7121, 110.975, -80.7327, 0.96 ) }
    dend_6 { pt3dadd( -99.7846, 111.386, -80.4483, 1.18 ) }
    dend_6 { pt3dadd( -99.9539, 112.458, -79.7298, 0.15 ) }
    dend_6 { pt3dadd( -99.9611, 112.508, -79.6968, 0.15 ) }
    dend_6 { pt3dadd( -100.049, 113.309, -79.1873, 0.15 ) }
    dend_6 { pt3dadd( -100.206, 114.797, -78.2865, 0.15 ) }
    dend_6 { pt3dadd( -100.329, 115.482, -77.9472, 0.66 ) }
    dend_6 { pt3dadd( -100.389, 115.747, -77.8059, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 89/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -54.0408, -163.009, -84.2188, 0.22 ) }
    dend_45 { pt3dadd( -55.9297, -163.202, -86.3876, 0.22 ) }
    dend_45 { pt3dadd( -56.8274, -163.284, -87.313, 0.22 ) }
    dend_45 { pt3dadd( -57.226, -163.345, -87.8033, 1.03 ) }
    dend_45 { pt3dadd( -57.413, -163.377, -88.0331, 1.33 ) }
    dend_45 { pt3dadd( -59.1956, -163.701, -90.2304, 0.22 ) }
    dend_45 { pt3dadd( -60.4943, -163.91, -91.8635, 0.22 ) }
    dend_45 { pt3dadd( -60.907, -163.962, -92.3843, 0.88 ) }
    dend_45 { pt3dadd( -62.6405, -164.193, -94.7388, 0.22 ) }
    dend_45 { pt3dadd( -63.675, -164.326, -96.0794, 0.22 ) }
    dend_45 { pt3dadd( -63.7178, -164.334, -96.1284, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_45 { pt3dadd( -65.1162, -164.636, -97.5127, 0.22 ) }
    dend_45 { pt3dadd( -65.1992, -164.659, -97.5909, 0.22 ) }
    dend_45 { pt3dadd( -66.509, -165.087, -98.6585, 0.22 ) }
    dend_45 { pt3dadd( -67.9369, -165.698, -99.649, 0.22 ) }
    dend_45 { pt3dadd( -69.5011, -166.645, -100.75, 0.22 ) }
    dend_45 { pt3dadd( -69.5543, -166.684, -100.786, 0.22 ) }
    dend_45 { pt3dadd( -70.1588, -167.241, -101.166, 0.74 ) }
    dend_45 { pt3dadd( -70.4844, -167.616, -101.387, 0.74 ) }
    dend_45 { pt3dadd( -71.4896, -169.357, -102.302, 0.22 ) }
    dend_45 { pt3dadd( -71.9857, -170.54, -102.937, 0.22 ) }
    dend_45 { pt3dadd( -72.1576, -170.976, -103.171, 0.29 ) }
    dend_45 { pt3dadd( -72.2403, -171.181, -103.267, 0.37 ) }
    dend_45 { pt3dadd( -72.788, -172.563, -103.895, 0.15 ) }
    dend_45 { pt3dadd( -73.7448, -174.965, -104.917, 0.15 ) }
    dend_45 { pt3dadd( -73.7714, -175.03, -104.942, 0.15 ) }
    dend_45 { pt3dadd( -74.6393, -176.949, -105.682, 0.15 ) }
    dend_45 { pt3dadd( -76.64, -180.911, -107.164, 0.15 ) }
    dend_45 { pt3dadd( -77.3674, -182.25, -107.674, 0.44 ) }
    dend_45 { pt3dadd( -77.9811, -183.315, -108.069, 0.15 ) }
    dend_45 { pt3dadd( -79.576, -185.95, -109.007, 0.15 ) }
    dend_45 { pt3dadd( -80.5274, -187.508, -109.573, 0.37 ) }
    dend_45 { pt3dadd( -81.4771, -189.017, -110.149, 0.15 ) }
    dend_45 { pt3dadd( -82.5974, -190.52, -110.746, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -54.0408, -163.009, -84.2188, 0.22 ) }
    dend_42 { pt3dadd( -54.3099, -165.295, -84.4452, 0.22 ) }
    dend_42 { pt3dadd( -54.5308, -167.743, -84.7032, 0.22 ) }
    dend_42 { pt3dadd( -54.7811, -170.515, -84.9954, 0.22 ) }
    dend_42 { pt3dadd( -54.8463, -171.238, -85.0716, 1.33 ) }
    dend_42 { pt3dadd( -54.9479, -172.363, -85.1901, 1.33 ) }
    dend_42 { pt3dadd( -55.0907, -173.945, -85.3569, 0.22 ) }
    dend_42 { pt3dadd( -55.1204, -174.331, -85.4018, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -104.173, 100.42, -86.9961, 0.22 ) }
    dend_9 { pt3dadd( -105.474, 99.4128, -87.3709, 0.22 ) }
    dend_9 { pt3dadd( -105.993, 99.0104, -87.5206, 0.59 ) }
    dend_9 { pt3dadd( -106.827, 98.3644, -87.7609, 0.22 ) }
    dend_9 { pt3dadd( -107.308, 97.9913, -87.8996, 0.66 ) }
    dend_9 { pt3dadd( -107.369, 97.9441, -87.9172, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -104.173, 100.42, -86.9961, 0.15 ) }
    dend_8 { pt3dadd( -103.566, 99.5391, -87.2544, 0.15 ) }
    dend_8 { pt3dadd( -103.144, 98.9278, -87.4337, 0.29 ) }
    dend_8 { pt3dadd( -102.97, 98.6751, -87.5078, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -55.1204, -174.331, -85.4018, 0.29 ) }
    dend_44 { pt3dadd( -53.9947, -175.363, -85.7768, 0.29 ) }
    dend_44 { pt3dadd( -53.1987, -176.093, -86.042, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -55.1204, -174.331, -85.4018, 0.22 ) }
    dend_43 { pt3dadd( -56.1303, -175.395, -85.9529, 0.22 ) }
    dend_43 { pt3dadd( -56.662, -175.986, -86.2492, 0.44 ) }
    dend_43 { pt3dadd( -57.3159, -176.9, -86.6523, 0.15 ) }
    dend_43 { pt3dadd( -58.0713, -178.023, -87.1318, 0.15 ) }
    dend_43 { pt3dadd( -58.2825, -178.347, -87.2654, 0.81 ) }
    dend_43 { pt3dadd( -58.4212, -178.566, -87.3523, 0.81 ) }
    dend_43 { pt3dadd( -59.7724, -180.791, -88.1996, 0.15 ) }
    dend_43 { pt3dadd( -61.3927, -183.778, -89.2341, 0.15 ) }
    dend_43 { pt3dadd( -61.3927, -183.778, -89.2341, 0.37 ) }
    dend_43 { pt3dadd( -61.6916, -184.482, -89.4549, 0.15 ) }
    dend_43 { pt3dadd( -61.8288, -184.829, -89.5554, 0.81 ) }
    dend_43 { pt3dadd( -61.9732, -185.227, -89.6627, 0.81 ) }
    dend_43 { pt3dadd( -62.3107, -186.388, -89.9184, 0.15 ) }
    dend_43 { pt3dadd( -62.4259, -186.798, -89.9921, 0.44 ) }
    dend_43 { pt3dadd( -62.4749, -187.0, -90.0443, 0.44 ) }
    dend_43 { pt3dadd( -62.6155, -187.646, -90.2352, 0.15 ) }
    dend_43 { pt3dadd( -62.6812, -187.907, -90.3076, 0.66 ) }
    dend_43 { pt3dadd( -62.7033, -187.985, -90.3282, 0.66 ) }
    dend_43 { pt3dadd( -62.8176, -188.37, -90.4264, 0.66 ) }
    dend_43 { pt3dadd( -63.5131, -190.753, -91.0386, 0.15 ) }
    dend_43 { pt3dadd( -63.6618, -191.266, -91.1714, 0.44 ) }
    dend_43 { pt3dadd( -64.5694, -194.459, -91.9951, 0.15 ) }
    dend_43 { pt3dadd( -65.4243, -197.453, -92.7585, 0.15 ) }
    dend_43 { pt3dadd( -65.4525, -197.55, -92.7825, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, axon_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_5 = new SectionList()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_34 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_13 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_43 OneSecGrp_SectionRef_52.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 3
    dend_11 nseg = 3
    dend_29 nseg = 5
    dend_20 nseg = 5
    dend_12 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_48 nseg = 5
    dend_37 nseg = 3
    dend_34 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 3
    dend_28 nseg = 3
    dend_25 nseg = 5
    dend_21 nseg = 3
    dend_16 nseg = 3
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_47 nseg = 5
    dend_36 nseg = 3
    dend_18 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_41 nseg = 9
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_SBC_0e6ba49679_0_0


