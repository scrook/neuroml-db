// Cell: cACint209_L5_NBC_ac16f8ddcb_0_0
/*
{
  "id" : "cACint209_L5_NBC_ac16f8ddcb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.277629, -9.42436, 0.0, 2.9454", "-0.225418, -8.4907, 0.0, 4.92187", "-0.173208, -7.55704, 0.0, 6.69655", "-0.120997, -6.62338, 0.0, 8.28957", "-0.0687862, -5.68972, 0.0, 9.36061", "-0.0165755, -4.75606, 0.0, 10.2397", "0.0356352, -3.8224, 0.0, 11.0293", "0.087846, -2.88873, 0.0, 11.6457", "0.140057, -1.95507, 0.0, 12.2691", "0.192267, -1.02141, 0.0, 12.5588", "0.244478, -0.0877535, 0.0, 12.7806", "0.296689, 0.845907, 0.0, 13.0398", "0.3489, 1.77957, 0.0, 13.1732", "0.40111, 2.71323, 0.0, 13.0581", "0.453321, 3.64689, 0.0, 12.8607", "0.505532, 4.58055, 0.0, 12.1633", "0.557743, 5.51421, 0.0, 11.3807", "0.609953, 6.44787, 0.0, 10.3357", "0.662164, 7.38153, 0.0, 8.86929", "0.714375, 8.31519, 0.0, 6.73974", "0.766585, 9.24885, 0.0, 3.85991" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0596826, 9.24235, 5.51, 1.4", "-0.0596826, 9.24235, 5.51, 1.4", "-0.412803, 10.7921, 5.84424, 1.47", "-0.656781, 11.9617, 6.08643, 1.47", "-0.86587, 13.1679, 6.32624, 1.55", "-0.990973, 14.0615, 6.50836, 1.55", "-1.10592, 15.0267, 6.69594, 1.55", "-1.15813, 15.6749, 6.81544, 1.55", "-1.19346, 16.5329, 6.97351, 1.55", "-1.21145, 17.5459, 7.16136, 1.55", "-1.23829, 18.7224, 7.40754, 1.92", "-1.30705, 20.1201, 7.73231, 2.14", "-1.42059, 21.5046, 8.08896, 1.18", "-1.55032, 22.6369, 8.41278, 1.25", "-1.70749, 23.8451, 8.77915, 1.25", "-1.94269, 25.343, 9.25816, 1.33", "-2.19245, 26.715, 9.72378, 1.47", "-2.43912, 27.8928, 10.1742, 1.77", "-2.73253, 29.0483, 10.6513, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.299673, -8.88065, 3.35, 2.29", "-0.299673, -8.88065, 3.35, 2.29", "-0.731385, -10.4098, 4.04084, 1.62", "-1.06864, -11.9341, 4.70994, 1.4", "-1.31284, -13.2511, 5.22174, 1.4", "-1.50653, -14.226, 5.55406, 1.25", "-1.74058, -15.2864, 5.86877, 1.25", "-1.99867, -16.4469, 6.15458, 1.18", "-2.15417, -17.21, 6.29607, 1.18", "-2.47302, -19.0287, 6.5681, 1.55", "-2.74278, -20.5857, 6.76575, 1.62", "-3.03915, -22.1049, 6.94026, 1.47", "-3.40081, -23.7656, 7.09144, 1.47", "-3.70001, -25.0526, 7.20909, 1.47", "-4.01977, -26.5029, 7.33154, 1.47", "-4.18589, -27.4697, 7.43127, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.04042, 8.08735, -5.24, 2.43", "5.04042, 8.08735, -5.24, 2.43", "6.45789, 9.14094, -5.09895, 1.55", "7.83536, 10.1891, -4.98657, 1.47", "8.8047, 10.9418, -4.92779, 1.25", "10.6507, 12.3891, -4.76685, 1.11", "11.7734, 13.2695, -4.6318, 1.25", "13.2024, 14.4072, -4.38051, 1.4", "14.8427, 15.7305, -3.99424, 1.62", "16.6778, 17.1733, -3.49016, 1.03", "18.0096, 18.1301, -3.07664, 0.88", "19.349, 18.9629, -2.59586, 1.11", "20.8862, 19.8148, -1.93079, 0.88", "22.3424, 20.5438, -1.21813, 1.47", "23.1317, 20.9073, -0.773231, 1.33", "24.5382, 21.5315, 0.0636998, 1.03", "25.8656, 22.1635, 0.824584, 1.03", "26.8999, 22.7099, 1.3928, 1.18", "28.1251, 23.4604, 2.04252, 1.18", "29.7142, 24.5534, 2.83324, 1.4", "30.7107, 25.3026, 3.2732, 1.03", "31.7621, 26.145, 3.55939, 0.81", "32.7502, 26.9199, 3.66145, 0.74", "33.8439, 27.7434, 3.62489, 1.11", "35.2896, 28.7705, 3.45025, 1.11", "36.3312, 29.4617, 3.25108, 1.33", "38.5285, 30.8394, 2.87532, 1.33", "40.4664, 32.0311, 2.63436, 0.88", "42.0253, 33.0188, 2.55122, 1.11", "42.8836, 33.5833, 2.56278, 1.33", "44.1573, 34.4869, 2.69347, 1.33", "45.7798, 35.7392, 3.00313, 0.96", "47.0667, 36.7794, 3.39497, 0.96", "48.4307, 37.9532, 3.91045, 1.4", "49.3298, 38.7545, 4.31676, 1.4", "50.4605, 39.8047, 4.85493, 1.4", "51.7616, 41.0381, 5.46912, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.129629, -10.3401, -2.13, 1.84", "-0.129629, -10.3401, -2.13, 1.84", "-0.634519, -11.4958, -2.01156, 1.55", "-0.990883, -12.4358, -1.93146, 1.47", "-1.54793, -14.2268, -1.75206, 1.47", "-1.94789, -15.8181, -1.58847, 1.25", "-2.14346, -16.8461, -1.48766, 1.18", "-2.29609, -18.0985, -1.3757, 1.33", "-2.38467, -19.6611, -1.25119, 1.7", "-2.36909, -21.3134, -1.14123, 1.4", "-2.28489, -22.6073, -1.06898, 1.18", "-2.0895, -24.4927, -0.959844, 1.4", "-1.84, -26.5799, -0.839409, 1.4", "-1.65204, -27.9894, -0.76369, 1.55", "-1.43149, -29.5419, -0.701943, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.330332, 1.55635, -10.46, 3.02", "0.330332, 1.55635, -10.46, 3.02", "-1.77676, 1.47852, -10.46, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.766585, 9.24885, 0.0, 0.673133", "1.60408, 24.2255, 0.0, 0.673133", "2.44158, 39.2021, 0.0, 0.673133" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.73253, 29.0483, 10.6513, 2.21", "-2.94127, 30.4472, 11.532, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.73253, 29.0483, 10.6513, 0.59", "-3.59924, 29.4616, 11.1745, 0.59", "-4.80137, 30.0477, 11.813, 0.59", "-5.64887, 30.4542, 12.2289, 0.44", "-6.90329, 31.0399, 12.8018, 0.29", "-7.38063, 31.2572, 12.9988, 0.29", "-7.92383, 31.5047, 13.2227, 0.29", "-8.4687, 31.7798, 13.4399, 0.44", "-9.00514, 32.0697, 13.626, 0.66", "-9.79854, 32.5296, 13.929, 0.66", "-10.3698, 32.8857, 14.1958, 0.44", "-11.0233, 33.3176, 14.5544, 0.44", "-11.6461, 33.7594, 14.9814, 0.66", "-11.9988, 34.0306, 15.2726, 0.66", "-12.6611, 34.5684, 15.8881, 0.29", "-13.1021, 34.9313, 16.3412, 0.29", "-13.8887, 35.5475, 17.1457, 0.44", "-14.6331, 36.0737, 17.8445, 0.37", "-15.2564, 36.46, 18.3849, 0.37", "-15.8962, 36.8174, 18.8819, 0.66", "-16.5828, 37.1725, 19.3539, 1.18", "-17.4839, 37.6118, 19.8763, 1.47", "-18.5388, 38.0919, 20.3903, 0.37", "-19.1977, 38.3728, 20.6676, 0.29", "-19.9705, 38.6848, 20.959, 0.29", "-20.742, 38.9911, 21.2261, 0.15", "-21.3903, 39.2595, 21.4435, 0.37", "-22.4521, 39.7259, 21.8292, 0.22", "-23.1105, 40.0526, 22.0666, 0.22", "-24.0497, 40.5561, 22.4166, 0.22", "-24.5469, 40.8344, 22.6043, 0.96", "-25.4293, 41.3564, 22.9321, 1.84", "-26.0619, 41.7575, 23.1713, 1.84", "-26.9835, 42.3988, 23.5147, 0.22", "-27.4885, 42.7838, 23.7005, 0.22", "-27.9224, 43.1387, 23.8683, 0.22", "-28.3542, 43.4846, 24.0303, 0.22", "-28.648, 43.7078, 24.1313, 0.22", "-28.8399, 43.8444, 24.192, 0.22", "-29.2409, 44.111, 24.3385, 0.52", "-29.568, 44.339, 24.4612, 1.03", "-29.9531, 44.6294, 24.6296, 1.25", "-30.6145, 45.1606, 24.9191, 0.81", "-31.1843, 45.659, 25.1652, 0.22", "-31.5428, 45.989, 25.3447, 0.22", "-31.9923, 46.4321, 25.6261, 0.59", "-32.7664, 47.2963, 26.1838, 0.07", "-32.9923, 47.5965, 26.3686, 0.15", "-33.4483, 48.3403, 26.7743, 0.15", "-34.0671, 49.5573, 27.3599, 0.07", "-34.5638, 50.689, 27.8235, 0.07", "-34.779, 51.2586, 28.0414, 0.07", "-35.0496, 52.0961, 28.3308, 0.07", "-35.3626, 53.1948, 28.6724, 0.07", "-35.5563, 53.9586, 28.8868, 0.07", "-35.7248, 54.6745, 29.0522, 0.07", "-35.9471, 55.5192, 29.2358, 0.22", "-36.0957, 55.9841, 29.3541, 0.44", "-36.4001, 56.7424, 29.5753, 0.07", "-36.8169, 57.6056, 29.8739, 0.07", "-37.0413, 58.0154, 30.03, 0.07", "-37.3734, 58.5577, 30.2328, 0.37", "-37.501, 58.7469, 30.2958, 0.37", "-37.9284, 59.3315, 30.5057, 0.07", "-38.4127, 59.9565, 30.7234, 0.07", "-38.6029, 60.2039, 30.7959, 0.37", "-39.1564, 60.9743, 30.9922, 1.11", "-39.4861, 61.479, 31.1095, 0.81", "-40.0772, 62.4531, 31.3011, 0.07", "-40.3788, 62.9664, 31.3801, 0.07", "-40.7085, 63.5154, 31.4512, 0.59", "-41.2986, 64.4743, 31.5858, 0.15", "-41.9949, 65.5483, 31.7451, 0.15", "-42.499, 66.2509, 31.8565, 0.15", "-43.0817, 66.9709, 31.9915, 0.44", "-43.8195, 67.7673, 32.2032, 0.15", "-44.1842, 68.1098, 32.2958, 0.15", "-44.8291, 68.6382, 32.4302, 0.74", "-45.7462, 69.3319, 32.5768, 0.07", "-46.4386, 69.8388, 32.6501, 0.07", "-47.0674, 70.3082, 32.6836, 0.07", "-48.078, 71.0833, 32.6587, 0.07", "-48.7836, 71.6449, 32.5664, 0.52", "-49.1312, 71.9289, 32.4796, 0.52", "-49.9345, 72.6072, 32.1892, 0.07", "-50.6282, 73.2298, 31.8734, 0.37", "-51.5449, 74.0631, 31.412, 0.07", "-52.5406, 74.9516, 30.8998, 0.07", "-53.2816, 75.6096, 30.4707, 0.07", "-54.229, 76.4481, 29.8819, 0.07", "-55.2815, 77.3841, 29.173, 0.07", "-55.8259, 77.8615, 28.7789, 0.07", "-56.4219, 78.3854, 28.3323, 0.07", "-57.0283, 78.9167, 27.907, 0.07", "-57.5918, 79.4067, 27.534, 0.81" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.18589, -27.4697, 7.43127, 0.52", "-4.01388, -27.4174, 8.54256, 0.52", "-3.72764, -27.3759, 10.2637, 0.52", "-3.43859, -27.3989, 11.9418, 0.59", "-3.13649, -27.511, 13.7221, 0.59", "-2.8691, -27.6906, 15.2833, 0.59", "-2.60188, -27.9628, 16.8163, 0.59", "-2.31605, -28.4393, 18.5433, 0.59", "-2.19803, -28.7653, 19.2393, 0.59", "-2.03791, -29.3158, 20.0609, 0.59", "-1.89465, -29.8476, 20.7286, 0.52", "-1.69614, -30.6022, 21.6242, 0.52", "-1.45945, -31.4432, 22.5754, 0.59", "-1.0137, -32.7332, 24.0771, 0.81", "-0.488966, -34.0021, 25.7113, 0.52", "-0.139903, -34.7153, 26.7098, 0.59", "0.306845, -35.4601, 27.8538, 0.81", "0.702513, -36.0151, 28.7953, 1.11", "1.59898, -37.0944, 30.7344, 0.37", "2.22912, -37.7755, 32.0575, 0.59", "2.78726, -38.3481, 33.2069, 0.66", "3.59763, -39.0982, 34.8532, 0.37", "4.17501, -39.5586, 36.0634, 0.37", "4.4725, -39.7679, 36.7997, 0.37", "4.85017, -40.0267, 37.9909, 0.37", "5.06178, -40.2128, 39.0061, 0.96", "5.23363, -40.4696, 40.4354, 0.96", "5.32453, -40.7926, 42.025, 0.96", "5.36695, -41.4402, 44.7372, 0.66", "5.29839, -42.0497, 47.0347, 0.37", "5.10662, -42.7701, 49.429, 0.37", "4.80347, -43.51, 51.7, 0.37", "4.63748, -43.828, 52.6179, 0.37", "4.24854, -44.4884, 54.4388, 0.66", "3.77829, -45.2942, 56.5685, 0.66", "3.37605, -46.0354, 58.4962, 0.81", "2.8889, -47.0333, 61.0361, 0.88", "2.50359, -47.9485, 63.2719, 0.88", "2.16053, -49.0159, 65.7769, 0.37", "1.96299, -49.9341, 67.8523, 0.29", "1.9115, -50.5464, 69.0567, 0.29", "1.92168, -51.2106, 70.227, 0.29", "1.98598, -52.2044, 71.7693, 0.52", "2.09019, -53.4475, 73.5474, 0.96", "2.20528, -54.9631, 75.5329, 0.96", "2.27655, -56.2147, 77.1333, 0.29", "2.32001, -57.3852, 78.6161, 0.29", "2.33766, -58.5571, 80.1248, 0.29", "2.31751, -59.4362, 81.2634, 0.88", "2.29089, -60.5027, 82.4993, 2.21" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-4.18589, -27.4697, 7.43127, 0.96", "-4.8521, -29.0581, 7.44296, 0.96", "-5.77214, -31.2422, 7.56339, 0.81", "-6.53946, -33.1467, 7.86899, 0.74", "-7.36154, -35.1927, 8.39602, 0.88", "-8.22795, -37.3505, 9.11901, 0.88", "-8.47779, -38.0197, 9.36476, 0.88", "-8.81928, -39.0775, 9.82936, 0.66", "-9.48367, -41.2797, 10.8843, 0.66", "-9.95045, -42.7222, 11.5867, 0.88", "-10.3638, -43.891, 12.1426, 0.88", "-11.0911, -45.7168, 12.9513, 1.03", "-11.8301, -47.4937, 13.6672, 1.03", "-12.6412, -49.4649, 14.3333, 0.88", "-13.434, -51.4583, 14.8988, 0.59", "-13.8136, -52.4864, 15.1959, 0.44", "-14.4849, -54.3724, 15.803, 1.03", "-14.9296, -55.6496, 16.262, 1.03", "-15.3037, -56.8801, 16.7042, 1.03", "-15.833, -58.9123, 17.4246, 0.88", "-16.3298, -61.0796, 18.1571, 0.81", "-16.8697, -63.5899, 18.9953, 1.03", "-17.2921, -65.5657, 19.6305, 1.47", "-17.7655, -67.6548, 20.3008, 1.11", "-18.2401, -69.7324, 20.9528, 0.74", "-18.5752, -71.283, 21.4199, 0.66", "-18.8862, -72.8136, 21.8681, 0.66", "-19.2652, -74.7512, 22.4273, 1.03", "-19.7574, -77.2439, 23.1345, 0.96", "-20.1737, -79.2314, 23.6712, 0.81", "-20.5722, -80.9972, 24.1053, 1.11", "-21.1341, -83.2214, 24.6082, 0.74", "-21.6692, -85.0847, 25.0494, 0.37", "-22.1124, -86.458, 25.414, 0.37", "-22.5779, -87.783, 25.8098, 0.96", "-23.1491, -89.3366, 26.3076, 1.55", "-23.5445, -90.4056, 26.6571, 1.7", "-24.3857, -92.7233, 27.4223, 0.81", "-24.9646, -94.3791, 27.9944, 0.74", "-25.3999, -95.7233, 28.4559, 0.74", "-25.9058, -97.5498, 29.0393, 0.44", "-26.3529, -99.4876, 29.5882, 0.37", "-26.7052, -101.244, 30.0008, 0.37", "-26.936, -102.47, 30.1996, 0.37", "-27.2599, -104.143, 30.3875, 0.74", "-27.5911, -105.82, 30.5172, 1.03", "-27.7135, -106.441, 30.5717, 1.03", "-28.0105, -108.079, 30.7341, 0.59", "-28.2087, -109.198, 30.8798, 0.59", "-28.5838, -111.166, 31.2448, 0.81", "-28.9808, -113.109, 31.7959, 0.52", "-29.2933, -114.613, 32.3768, 0.96", "-29.6048, -116.228, 33.1185, 1.25", "-29.9335, -118.235, 34.1555, 0.66", "-30.2348, -120.256, 35.212, 0.29", "-30.5193, -122.056, 36.1844, 0.29", "-30.7763, -123.464, 36.9157, 0.29", "-30.924, -124.173, 37.2422, 0.74", "-31.2523, -125.55, 37.7892, 0.96", "-31.9624, -128.233, 38.5853, 0.22", "-32.4588, -129.881, 38.9053, 0.22", "-32.9061, -131.209, 39.0641, 0.52", "-33.2606, -132.169, 39.1476, 1.03", "-33.684, -133.241, 39.245, 1.11", "-34.2576, -134.595, 39.3883, 0.59", "-34.9171, -136.052, 39.5759, 0.22", "-35.3011, -136.876, 39.6802, 0.22", "-35.6175, -137.553, 39.7791, 0.22", "-36.0145, -138.43, 39.9128, 0.44", "-36.5271, -139.627, 40.0943, 0.96", "-37.0821, -140.995, 40.2926, 0.96", "-37.5102, -142.052, 40.4442, 0.44", "-38.2036, -143.722, 40.7051, 0.22", "-38.5966, -144.667, 40.8761, 0.59", "-38.9248, -145.483, 41.035, 0.59", "-39.4385, -146.851, 41.3109, 0.15", "-39.9257, -148.241, 41.6493, 0.15", "-40.3843, -149.601, 42.0845, 0.15", "-40.811, -150.923, 42.5475, 0.52", "-41.0756, -151.728, 42.8614, 1.33", "-41.5182, -153.035, 43.4054, 1.55", "-42.0755, -154.652, 44.069, 1.18", "-42.9895, -157.212, 45.0268, 0.37", "-43.7349, -159.165, 45.6747, 0.22", "-44.433, -160.855, 46.1638, 0.22", "-45.1469, -162.474, 46.5791, 0.37", "-45.9661, -164.243, 46.9527, 0.96", "-46.8037, -165.99, 47.2367, 0.22", "-47.4602, -167.324, 47.3882, 0.22", "-48.2853, -168.993, 47.5401, 0.22", "-48.7955, -170.062, 47.6025, 0.37", "-49.3166, -171.181, 47.6617, 0.88", "-50.0642, -172.889, 47.8343, 0.88", "-50.9702, -175.157, 48.1618, 0.22", "-51.3864, -176.298, 48.3692, 0.44", "-51.8622, -177.674, 48.6566, 0.88", "-52.2972, -178.957, 48.9372, 0.37", "-53.15, -181.457, 49.4735, 0.15", "-53.7674, -183.288, 49.8329, 0.15", "-54.2239, -184.693, 50.1447, 0.15", "-54.448, -185.418, 50.3163, 0.29", "-54.8475, -186.749, 50.654, 0.96", "-55.2986, -188.307, 51.0806, 0.29", "-55.6929, -189.709, 51.4886, 0.15", "-56.1439, -191.398, 52.062, 0.15", "-56.4791, -192.702, 52.5471, 0.15", "-56.8522, -194.213, 53.1269, 0.15", "-57.1347, -195.374, 53.5679, 0.15", "-57.499, -196.835, 54.0968, 0.29", "-57.8381, -198.059, 54.49, 0.81", "-58.3593, -199.802, 54.9544, 1.11", "-58.8766, -201.434, 55.3266, 0.29", "-59.4423, -203.198, 55.6538, 0.15", "-59.95, -204.765, 55.8826, 0.15", "-60.4464, -206.326, 56.0508, 0.15", "-60.7696, -207.374, 56.1352, 0.15", "-60.9357, -207.943, 56.1658, 0.37", "-61.1937, -208.795, 56.2333, 0.88", "-61.4299, -209.47, 56.2947, 1.11", "-62.0007, -210.838, 56.4185, 0.29", "-62.6545, -212.089, 56.5211, 0.15", "-63.1353, -212.876, 56.5712, 0.15", "-64.2225, -214.44, 56.5945, 0.15", "-64.9433, -215.374, 56.5746, 0.59", "-65.7302, -216.334, 56.5225, 0.59", "-67.6219, -218.541, 56.2979, 0.15", "-68.7479, -219.855, 56.0645, 0.15", "-69.9572, -221.311, 55.709, 0.15", "-70.2934, -221.743, 55.5693, 0.37", "-71.2517, -223.069, 55.1088, 0.96", "-72.0574, -224.259, 54.6701, 0.22", "-72.7643, -225.406, 54.2393, 0.22", "-73.1209, -226.051, 54.048, 0.22", "-73.4603, -226.753, 53.8942, 0.44", "-73.8488, -227.563, 53.7097, 0.81", "-74.4628, -228.771, 53.4159, 0.22", "-75.0856, -229.887, 53.1522, 0.29", "-75.8608, -231.188, 52.8584, 0.22", "-76.7898, -232.671, 52.4972, 0.88", "-78.0036, -234.484, 52.0262, 0.07", "-78.6928, -235.465, 51.761, 0.07", "-79.5544, -236.63, 51.4069, 0.15", "-80.6516, -238.03, 50.9422, 0.07", "-81.0352, -238.489, 50.7809, 0.29", "-81.8882, -239.473, 50.4921, 0.44", "-82.5693, -240.275, 50.2907, 0.15", "-83.4605, -241.354, 50.0211, 0.15", "-83.9561, -241.959, 49.8596, 0.37", "-84.5461, -242.687, 49.6652, 0.44", "-85.4701, -243.89, 49.3634, 0.15", "-85.9885, -244.6, 49.2043, 0.15", "-86.4382, -245.201, 49.0923, 0.37", "-86.8283, -245.729, 49.0208, 0.52", "-87.5633, -246.791, 48.8685, 0.15", "-87.8319, -247.206, 48.8094, 0.15", "-88.4787, -248.266, 48.6646, 0.52", "-89.4129, -249.881, 48.4642, 0.15", "-89.9615, -250.898, 48.3374, 0.52", "-90.7967, -252.579, 48.1347, 0.15", "-91.0423, -253.141, 48.0524, 0.37", "-91.198, -253.558, 47.9731, 0.81", "-91.3725, -254.146, 47.823, 1.03", "-91.622, -255.218, 47.4917, 0.07", "-91.9149, -256.454, 47.046, 0.15", "-92.2267, -257.607, 46.5376, 0.29", "-92.5264, -258.657, 45.971, 0.15", "-92.785, -259.521, 45.4159, 0.15", "-92.9555, -260.086, 44.9958, 0.29", "-93.183, -260.868, 44.3659, 0.37", "-93.5261, -262.04, 43.3626, 0.22", "-93.8496, -263.102, 42.4454, 0.22", "-94.1954, -264.221, 41.4575, 0.22", "-94.3838, -264.827, 40.9036, 0.22", "-94.5411, -265.374, 40.3649, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "51.7616, 41.0381, 5.46912, 0.59", "53.1854, 41.2378, 5.52522, 0.59", "53.9771, 41.3506, 5.58732, 0.59", "55.1172, 41.4625, 5.72422, 0.59", "55.984, 41.5229, 5.78651, 0.59", "56.6393, 41.5593, 5.78547, 0.44", "57.7221, 41.6339, 5.68625, 0.59", "58.8034, 41.7495, 5.48581, 0.59", "59.9854, 41.9363, 5.16033, 0.66", "61.2021, 42.2339, 4.71357, 0.66", "62.2244, 42.6285, 4.26393, 0.66", "63.307, 43.2653, 3.69533, 0.52", "63.9002, 43.7352, 3.35259, 0.52", "64.4143, 44.2232, 3.07545, 0.88", "65.0561, 44.8789, 2.77285, 1.03", "65.8809, 45.7057, 2.48957, 0.74", "67.0246, 46.7033, 2.24171, 0.81", "67.6342, 47.1078, 2.17332, 0.59", "68.8128, 47.6663, 2.1396, 0.52", "69.8198, 47.9807, 2.20504, 0.81", "70.3839, 48.0848, 2.30749, 1.03", "71.7234, 48.248, 2.67231, 0.59", "72.9973, 48.3951, 3.08653, 0.44", "74.0705, 48.5655, 3.46002, 0.52", "75.1142, 48.8304, 3.80569, 0.52", "76.4269, 49.3254, 4.18016, 0.59", "77.4881, 49.8605, 4.38956, 0.66", "78.4799, 50.4818, 4.47079, 1.11", "79.1661, 50.9702, 4.45354, 1.18", "80.4981, 51.9551, 4.28243, 0.74", "81.3795, 52.6168, 4.11665, 0.37", "81.9816, 53.0746, 3.99285, 0.37", "82.6909, 53.612, 3.84184, 0.44", "83.1508, 53.9656, 3.75252, 0.44", "83.6878, 54.4151, 3.63668, 0.44", "84.4672, 55.1471, 3.47207, 0.74", "85.2378, 55.977, 3.26272, 0.96", "86.144, 57.0587, 2.93725, 0.88", "86.7477, 57.8071, 2.66425, 0.66", "87.359, 58.5295, 2.31851, 0.66", "87.9828, 59.2141, 1.87439, 0.37", "88.5517, 59.7788, 1.37329, 0.29", "89.0267, 60.2147, 0.882061, 0.52", "89.4792, 60.6236, 0.38352, 1.11", "90.0811, 61.1984, -0.291257, 0.59", "90.6658, 61.8311, -0.892735, 0.37", "91.0675, 62.3553, -1.26111, 0.37", "91.7216, 63.3337, -1.71937, 0.88", "92.1035, 63.9544, -1.91416, 0.96", "92.7788, 65.054, -2.14992, 0.74", "93.4677, 66.0967, -2.28038, 0.59", "94.1539, 66.9741, -2.33045, 0.44", "94.7886, 67.6621, -2.32476, 1.03", "95.2169, 68.0826, -2.31731, 1.03", "96.0032, 68.8227, -2.3393, 0.81", "96.4889, 69.2956, -2.36694, 0.88", "97.2575, 70.1718, -2.41584, 0.59", "98.0581, 71.2945, -2.42404, 0.44", "98.7847, 72.5193, -2.3298, 0.44", "99.1733, 73.2505, -2.20883, 0.44", "99.6393, 74.1755, -1.95638, 0.59", "100.353, 75.4897, -1.42668, 0.74", "100.865, 76.2589, -0.989308, 0.44", "101.54, 77.0324, -0.406989, 0.44", "102.243, 77.692, 0.197546, 0.66", "103.138, 78.4297, 0.960694, 0.88", "104.152, 79.1804, 1.79829, 0.88", "105.307, 79.9698, 2.71486, 0.37", "106.266, 80.6478, 3.42563, 0.29", "106.497, 80.82, 3.58222, 0.29", "106.987, 81.2152, 3.88876, 0.29", "107.359, 81.5279, 4.08058, 0.29", "107.707, 81.8295, 4.21557, 0.29", "108.599, 82.5883, 4.46013, 0.37", "109.377, 83.1854, 4.59664, 0.74", "110.308, 83.8629, 4.6575, 0.96", "111.154, 84.4661, 4.64236, 1.18", "111.893, 84.9851, 4.59255, 1.11", "112.481, 85.3948, 4.52597, 0.88", "113.306, 85.9586, 4.41825, 0.66", "114.637, 86.8405, 4.27167, 0.44", "115.616, 87.4408, 4.22066, 0.66", "116.186, 87.7651, 4.23518, 0.44", "116.772, 88.062, 4.30156, 0.44", "117.691, 88.4797, 4.48712, 0.74", "118.553, 88.8344, 4.73345, 1.18", "119.751, 89.3036, 5.17135, 1.11", "120.746, 89.724, 5.56058, 0.81", "121.845, 90.2295, 5.9961, 0.44", "122.704, 90.6428, 6.33471, 0.44", "123.238, 90.9055, 6.53477, 0.44", "123.968, 91.2653, 6.78128, 0.66", "124.963, 91.7396, 7.09899, 0.37", "125.475, 91.9774, 7.25833, 0.29", "125.978, 92.224, 7.42991, 0.29", "126.605, 92.5466, 7.68519, 0.29", "127.31, 92.9397, 8.00927, 0.81", "127.963, 93.3589, 8.36311, 1.03", "128.835, 94.0153, 8.93597, 0.59", "129.76, 94.7788, 9.6681, 0.52", "130.495, 95.4217, 10.2995, 0.74", "130.991, 95.8549, 10.7569, 0.37", "131.92, 96.6339, 11.6127, 0.29", "132.744, 97.2894, 12.3393, 0.29", "133.877, 98.1186, 13.32, 0.29", "134.307, 98.4144, 13.6721, 0.88", "135.027, 98.9027, 14.2222, 0.88", "135.887, 99.459, 14.8163, 0.29", "136.559, 99.8812, 15.2168, 0.22", "137.271, 100.349, 15.5697, 0.29", "138.026, 100.871, 15.8694, 0.74", "138.576, 101.253, 16.0651, 0.29", "139.714, 102.048, 16.3977, 0.22", "140.517, 102.612, 16.6151, 0.22", "141.209, 103.088, 16.767, 0.37", "142.106, 103.682, 16.9198, 0.74", "142.749, 104.081, 17.0319, 0.74", "143.447, 104.511, 17.1526, 0.29", "144.308, 105.038, 17.3097, 0.22", "144.942, 105.394, 17.4445, 0.37", "145.765, 105.801, 17.6552, 0.22", "146.617, 106.17, 17.893, 0.22", "147.057, 106.334, 18.0262, 0.37", "148.006, 106.64, 18.3228, 0.37", "149.012, 106.929, 18.6551, 0.37", "149.813, 107.174, 18.9415, 0.44", "150.37, 107.359, 19.1539, 0.81", "151.209, 107.67, 19.4954, 1.47", "151.732, 107.885, 19.732, 1.62", "152.886, 108.407, 20.3088, 0.59", "154.284, 109.077, 21.0702, 0.29", "155.178, 109.52, 21.5794, 0.22", "155.733, 109.8, 21.912, 0.22", "156.218, 110.055, 22.2049, 0.22", "156.695, 110.31, 22.492, 0.22", "157.163, 110.56, 22.7617, 0.22", "157.82, 110.88, 23.1321, 0.37", "158.393, 111.141, 23.4337, 0.88", "158.872, 111.352, 23.6683, 1.25", "159.621, 111.682, 24.0336, 1.25", "160.345, 112.01, 24.4113, 0.29", "161.076, 112.356, 24.8292, 0.15", "161.642, 112.636, 25.1591, 0.29", "162.387, 113.017, 25.5685, 0.15", "162.849, 113.262, 25.824, 0.15", "163.22, 113.468, 26.0202, 0.44", "164.157, 114.003, 26.4273, 0.74", "164.922, 114.442, 26.7179, 0.22", "165.78, 114.928, 27.0032, 0.15", "166.382, 115.274, 27.1787, 0.66", "166.925, 115.619, 27.3121, 0.66", "168.266, 116.543, 27.6367, 0.22", "168.894, 117.021, 27.7929, 0.66", "169.403, 117.458, 27.9341, 1.18", "169.896, 117.931, 28.0984, 0.96", "171.013, 119.08, 28.5212, 0.15", "171.408, 119.519, 28.6954, 0.15", "171.86, 120.07, 28.9168, 0.22", "172.382, 120.669, 29.1689, 0.07", "173.12, 121.42, 29.5551, 0.07", "173.42, 121.686, 29.7287, 0.74", "174.02, 122.146, 30.0895, 1.03", "174.684, 122.618, 30.4845, 0.44", "175.739, 123.301, 31.196, 0.15", "176.467, 123.73, 31.7534, 0.15", "176.943, 123.99, 32.1747, 0.15", "177.332, 124.186, 32.5733, 0.37", "177.873, 124.417, 33.2044, 0.59", "178.92, 124.777, 34.6246, 0.22", "179.478, 124.936, 35.4997, 0.44", "179.942, 125.033, 36.3253, 0.44", "180.217, 125.068, 36.8661, 0.44", "180.459, 125.061, 37.394, 0.44", "180.875, 124.961, 38.3172, 0.44", "180.993, 124.915, 38.5672, 0.44", "181.178, 124.838, 38.9377, 0.44", "181.53, 124.689, 39.5671, 0.44", "181.902, 124.521, 40.1782, 0.44", "182.892, 124.05, 41.7099, 0.22", "183.577, 123.706, 42.7013, 0.22", "184.119, 123.416, 43.4784, 0.22", "184.614, 123.126, 44.1982, 0.74", "185.665, 122.424, 45.7782, 0.22", "186.514, 121.794, 47.131, 0.52", "187.154, 121.277, 48.1914, 0.22", "187.735, 120.796, 49.2007, 0.52", "188.272, 120.348, 50.1946, 0.52", "188.818, 119.882, 51.3745, 0.29", "189.29, 119.472, 52.6541, 0.29", "189.46, 119.331, 53.2685, 0.29", "189.643, 119.232, 54.1558, 0.29", "189.728, 119.248, 54.6051, 0.29", "189.914, 119.403, 55.4884, 0.29", "190.194, 119.696, 56.4976, 0.29", "190.388, 119.864, 56.9852, 0.29", "190.712, 120.071, 57.6338, 0.52", "191.293, 120.349, 58.6893, 0.22", "192.075, 120.685, 59.9066, 0.22", "192.674, 120.932, 60.74, 0.22", "193.186, 121.18, 61.407, 0.52", "194.088, 121.713, 62.5715, 0.52", "194.903, 122.22, 63.646, 0.52", "196.032, 123.023, 65.1469, 0.22", "196.782, 123.651, 66.1217, 0.22", "197.549, 124.395, 67.1349, 0.22", "198.112, 125.025, 67.854, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "51.7616, 41.0381, 5.46912, 0.81", "52.1141, 43.1042, 4.89386, 0.81", "52.5269, 44.8622, 4.15982, 0.52", "52.9091, 46.1491, 3.43997, 0.66", "53.4647, 47.813, 2.17766, 0.44", "53.8707, 49.095, 0.966535, 0.44", "54.2304, 50.3175, -0.362431, 0.44", "54.5069, 51.1066, -1.58066, 0.44", "54.7535, 51.6381, -2.74947, 0.44", "55.0714, 52.2211, -4.43658, 0.44", "55.2918, 52.6074, -5.72436, 0.44", "55.4538, 52.8685, -6.51945, 0.44", "55.7543, 53.3863, -7.73821, 0.59", "56.1642, 54.1979, -9.02495, 0.59", "56.3671, 54.6209, -9.47446, 0.59", "56.792, 55.5197, -10.1736, 0.66", "57.1432, 56.3223, -10.6679, 0.96", "57.4428, 57.1724, -11.0858, 0.96", "57.7922, 58.4368, -11.5628, 0.96", "58.2511, 60.2926, -12.1071, 0.88", "58.5386, 61.4811, -12.3964, 0.52", "58.8869, 62.7391, -12.644, 0.29", "59.2274, 63.8128, -12.8092, 0.29", "59.5933, 64.7817, -12.9175, 0.44", "60.0332, 65.7837, -12.9766, 0.88", "60.5767, 66.9415, -13.0361, 0.66", "61.3782, 68.6781, -13.203, 0.52", "61.797, 69.6748, -13.3716, 0.59", "62.4316, 71.4088, -13.805, 0.74", "62.9997, 73.3031, -14.4619, 0.88", "63.3004, 74.5889, -15.0406, 0.52", "63.5376, 75.9461, -15.7756, 0.52", "63.7338, 77.3522, -16.6692, 0.59", "63.8788, 78.0948, -17.2124, 0.59", "64.1233, 78.9672, -17.9272, 0.81", "64.5414, 80.039, -18.8296, 0.81", "65.0728, 81.0755, -19.5719, 0.81", "65.7561, 82.1764, -20.1927, 0.52", "66.8478, 83.7871, -20.8579, 0.29", "67.3881, 84.5424, -21.0765, 0.29", "68.1315, 85.4897, -21.2518, 0.59", "69.2644, 86.811, -21.3669, 0.81", "69.9768, 87.6082, -21.398, 1.03", "70.8271, 88.604, -21.3835, 0.29", "71.574, 89.5707, -21.3582, 0.22", "72.3014, 90.6558, -21.3618, 0.22", "72.7574, 91.5438, -21.4237, 0.29", "73.2833, 92.8862, -21.5813, 0.74", "73.6417, 94.0395, -21.7021, 0.88", "73.9289, 95.1726, -21.8207, 0.88", "74.1944, 96.5134, -21.9424, 0.52", "74.5324, 98.6707, -22.0976, 0.52", "74.7003, 100.014, -22.1809, 0.44", "74.8867, 101.979, -22.3112, 0.44", "74.9579, 103.342, -22.423, 0.44", "74.9569, 104.657, -22.537, 0.74", "74.9025, 105.567, -22.5979, 0.88", "74.6553, 107.477, -22.6743, 0.96", "74.3782, 109.254, -22.6666, 0.29", "74.2222, 110.501, -22.5566, 0.22", "74.2023, 111.488, -22.3345, 0.22", "74.3946, 112.961, -21.7994, 0.74", "74.5198, 113.457, -21.5844, 0.74", "75.1175, 115.177, -20.7931, 0.52", "75.7762, 116.894, -20.0952, 0.44", "76.3603, 118.431, -19.641, 0.44", "76.8673, 120.002, -19.3733, 0.66", "77.2428, 121.616, -19.3132, 0.66", "77.4177, 122.78, -19.3247, 0.66", "77.5581, 124.626, -19.47, 0.29", "77.6012, 125.916, -19.5775, 0.29", "77.6338, 127.361, -19.5783, 0.44", "77.6519, 128.265, -19.4593, 0.44", "77.6966, 129.859, -18.9799, 0.74", "77.7149, 130.583, -18.6841, 1.11", "77.742, 132.294, -17.9013, 0.44", "77.7356, 134.088, -17.0972, 0.74", "77.697, 134.943, -16.7811, 0.52", "77.5929, 135.96, -16.5305, 0.29", "77.4189, 136.986, -16.4453, 0.22", "77.057, 138.421, -16.5464, 0.59", "76.695, 139.548, -16.796, 0.96", "76.2486, 140.765, -17.1381, 0.66", "75.7011, 142.217, -17.5008, 0.44", "75.1591, 143.747, -17.7764, 0.44", "74.6204, 145.533, -17.8404, 0.22", "74.4076, 146.496, -17.7152, 0.37", "74.2208, 147.985, -17.2928, 0.59", "74.1621, 149.632, -16.6145, 0.29", "74.2134, 151.277, -15.8071, 0.29", "74.2776, 152.991, -14.915, 0.37", "74.2543, 153.824, -14.4828, 0.29", "74.0751, 155.123, -13.8904, 0.66", "73.7617, 156.259, -13.4895, 1.11", "73.3714, 157.206, -13.2522, 1.11", "72.5125, 158.923, -12.9938, 0.37", "71.466, 160.948, -12.8265, 0.22", "71.0476, 161.772, -12.7786, 0.59", "70.6365, 162.578, -12.7474, 1.11", "69.7581, 164.38, -12.712, 0.29", "68.8835, 166.403, -12.7218, 0.96", "68.4072, 167.804, -12.8033, 0.15", "68.2106, 168.582, -12.8874, 0.22", "67.7924, 170.419, -13.1801, 0.07", "67.6255, 171.18, -13.3739, 0.22", "67.5362, 171.605, -13.5317, 0.22", "67.3089, 172.86, -14.1726, 0.07", "67.2389, 173.399, -14.5155, 0.22", "67.2044, 173.956, -14.9233, 0.22", "67.2455, 174.964, -15.7654, 0.15", "67.265, 175.463, -16.206, 0.29", "67.2614, 176.417, -17.0396, 0.07", "67.226, 176.978, -17.5038, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.43149, -29.5419, -0.701943, 0.81", "-0.791006, -30.3406, -1.70202, 0.81", "0.0444037, -31.2728, -2.93069, 0.81", "0.565158, -31.7818, -3.63853, 0.81", "1.22131, -32.3276, -4.42604, 0.88", "1.90112, -32.7865, -5.141, 1.18", "2.40389, -33.0552, -5.61028, 1.18", "2.82398, -33.2027, -5.94773, 1.18", "3.60394, -33.4122, -6.44752, 0.96", "4.57356, -33.6559, -6.97858, 0.96", "5.6849, -33.93, -7.5261, 0.81", "7.09583, -34.3057, -8.13234, 0.81", "7.93988, -34.5546, -8.42795, 0.81", "9.24828, -34.9717, -8.74804, 0.81", "10.4197, -35.3773, -8.88032, 0.88", "11.4062, -35.7598, -8.82767, 0.88", "12.2943, -36.1599, -8.57035, 0.59", "13.1793, -36.592, -8.07063, 0.59", "14.1867, -37.0715, -7.25227, 0.59", "14.8474, -37.3631, -6.5555, 0.74", "15.4849, -37.6212, -5.77315, 0.59", "16.258, -37.926, -4.76911, 0.59", "16.9756, -38.2143, -3.86274, 0.88", "17.8623, -38.5779, -2.86483, 0.88", "18.7224, -38.9582, -2.04424, 1.03", "19.7398, -39.4561, -1.26006, 0.81", "20.4828, -39.8576, -0.811796, 0.66", "21.3158, -40.374, -0.425435, 0.66", "22.2842, -41.0866, -0.00568655, 0.44", "23.3887, -42.0109, 0.522097, 0.44", "24.2063, -42.7499, 1.03256, 0.66", "24.6533, -43.1808, 1.40986, 1.11", "25.4366, -43.9475, 2.3325, 1.25", "26.3333, -44.8194, 3.66015, 0.44", "27.0335, -45.4771, 4.81949, 0.52", "27.799, -46.1532, 6.15604, 0.52", "28.3658, -46.6322, 7.15283, 0.52", "29.1407, -47.3151, 8.53756, 0.59", "29.5865, -47.7362, 9.34881, 0.96", "30.0568, -48.2249, 10.2132, 1.11", "30.5977, -48.8421, 11.226, 0.81", "31.1579, -49.511, 12.3077, 0.52", "31.5972, -49.9859, 13.1718, 0.52", "31.7638, -50.1507, 13.4941, 0.52", "32.0182, -50.3804, 13.9836, 0.52", "32.28, -50.5885, 14.4073, 0.52", "32.8487, -50.9785, 15.107, 0.96", "33.8337, -51.5966, 16.0214, 0.44", "34.4314, -51.9749, 16.4731, 0.81", "35.0226, -52.3745, 16.8859, 1.03", "36.1803, -53.237, 17.609, 0.44", "36.8948, -53.8131, 18.0436, 0.44", "37.3994, -54.2455, 18.3615, 0.88", "37.8918, -54.6885, 18.715, 1.55", "38.5697, -55.2979, 19.282, 1.55", "39.3384, -56.0119, 20.052, 0.52", "40.2048, -56.8769, 21.0764, 0.22", "40.6086, -57.3003, 21.5994, 0.22", "41.0372, -57.7686, 22.2173, 0.22", "41.3646, -58.1367, 22.7255, 0.74", "41.7416, -58.5605, 23.3056, 1.18", "42.0308, -58.8867, 23.7485, 1.18", "42.834, -59.7949, 24.8478, 0.22", "43.2015, -60.1894, 25.2852, 0.22", "43.8175, -60.8137, 25.8956, 0.88", "44.6584, -61.6405, 26.6239, 0.15", "45.0538, -62.0143, 26.9242, 0.96", "45.5205, -62.4474, 27.2369, 1.25", "46.5143, -63.3493, 27.7627, 0.15", "47.6608, -64.3718, 28.2585, 0.15", "48.1664, -64.8244, 28.4436, 0.15", "49.0331, -65.6202, 28.7225, 0.15", "49.4649, -66.0286, 28.8672, 0.96", "50.2352, -66.7902, 29.15, 1.4", "50.5415, -67.1065, 29.2663, 1.33", "51.322, -67.9478, 29.6352, 0.22", "51.7571, -68.4118, 29.8592, 0.29", "52.433, -69.1282, 30.2349, 0.59", "53.0372, -69.7452, 30.5839, 0.59", "53.6257, -70.3049, 30.9466, 1.7", "54.1902, -70.7951, 31.2973, 0.81", "55.2189, -71.6017, 31.9421, 0.15", "55.654, -71.9161, 32.225, 0.44", "56.2062, -72.2827, 32.5695, 0.74", "57.2686, -72.9514, 33.2613, 0.22", "57.8808, -73.3195, 33.6693, 0.96", "58.5019, -73.6748, 34.0847, 1.25", "59.2839, -74.1215, 34.6521, 0.29", "60.2967, -74.6954, 35.3939, 0.07", "60.7945, -74.9742, 35.7557, 0.29", "61.5039, -75.3737, 36.2476, 0.74", "62.6397, -76.0299, 37.0485, 0.15", "63.4156, -76.4995, 37.6499, 0.15", "63.7715, -76.7338, 37.97, 0.15", "64.058, -76.9479, 38.2907, 0.74", "64.2324, -77.0878, 38.5085, 0.96", "64.9764, -77.7229, 39.529, 0.15", "65.4166, -78.1146, 40.1527, 0.15", "65.9615, -78.6257, 40.9248, 0.88", "66.6672, -79.3495, 42.0262, 0.15", "66.837, -79.5405, 42.3247, 0.15", "67.1094, -79.8613, 42.794, 0.29", "67.3059, -80.1076, 43.1363, 0.29", "67.7252, -80.6501, 43.9267, 0.15", "68.1282, -81.2028, 44.8223, 0.15", "68.453, -81.6474, 45.649, 0.15", "68.7491, -82.0545, 46.5277, 1.03", "69.1742, -82.634, 48.0491, 0.15", "69.4762, -83.0193, 49.2578, 0.15", "69.6951, -83.2524, 50.1232, 0.15", "69.9864, -83.5296, 51.2996, 0.15", "70.264, -83.7835, 52.5339, 0.15", "70.5374, -84.023, 53.9288, 0.15", "70.7528, -84.1982, 55.1247, 0.15", "70.9577, -84.3615, 56.2643, 0.15", "71.2074, -84.5581, 57.6718, 0.15", "71.4702, -84.7783, 59.2579, 0.15", "71.6195, -84.8993, 60.1451, 0.15", "71.9763, -85.1957, 62.3263, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.43149, -29.5419, -0.701943, 0.96", "-2.27724, -30.7122, -1.10914, 0.96", "-2.98743, -31.9782, -1.54491, 0.74", "-3.55712, -33.3471, -2.01784, 0.74", "-4.02349, -34.7887, -2.51506, 1.03", "-4.28581, -35.8035, -2.87071, 1.18", "-4.64378, -37.3699, -3.43292, 0.81", "-4.82625, -38.6168, -3.87456, 0.81", "-4.98798, -39.9397, -4.34039, 0.88", "-5.08022, -40.6326, -4.58176, 1.25", "-5.28646, -41.8902, -4.99705, 1.25", "-5.68643, -43.9441, -5.64949, 0.96", "-6.05577, -45.6055, -6.09843, 0.74", "-6.38061, -47.0533, -6.39272, 0.74", "-6.64868, -48.4179, -6.6068, 0.96", "-6.83064, -49.6825, -6.746, 0.74", "-6.93599, -51.1471, -6.82784, 0.74", "-6.93531, -53.2773, -6.80943, 0.96", "-6.84757, -54.7821, -6.70544, 0.74", "-6.68121, -56.2104, -6.53881, 0.81", "-6.41679, -57.8743, -6.25913, 1.18", "-6.08544, -59.5831, -5.89501, 1.18", "-5.55118, -62.0155, -5.29685, 0.96", "-5.10041, -64.0333, -4.75822, 0.96", "-4.78911, -65.5802, -4.30853, 1.03", "-4.50173, -67.2583, -3.77088, 0.74", "-4.30104, -68.7519, -3.27934, 0.74", "-4.21783, -70.2416, -2.78787, 1.03", "-4.3124, -71.802, -2.3132, 0.88", "-4.65036, -73.4652, -1.88342, 0.66", "-4.957, -74.4418, -1.67217, 0.59", "-5.32003, -75.3961, -1.50389, 0.81", "-6.03116, -77.1162, -1.25583, 0.59", "-6.59027, -78.4905, -1.11289, 0.81", "-6.9758, -79.58, -1.06762, 0.81", "-7.34382, -80.9022, -1.10977, 0.81", "-7.60433, -82.1054, -1.21311, 1.25", "-7.83438, -83.462, -1.39964, 1.25", "-8.10707, -85.3158, -1.81024, 0.66", "-8.30215, -86.6826, -2.22613, 0.66", "-8.47489, -87.853, -2.69194, 1.03", "-8.6311, -89.0633, -3.29829, 1.33", "-8.67494, -90.022, -3.85055, 0.88", "-8.56521, -91.1658, -4.56277, 0.59", "-8.33615, -91.9131, -5.02006, 0.59", "-7.90873, -92.6956, -5.38467, 0.59", "-7.17555, -93.6732, -5.71101, 0.59", "-6.06119, -95.0249, -6.03685, 0.22", "-5.48274, -95.7528, -6.18154, 0.74", "-4.93363, -96.5124, -6.33285, 1.11", "-4.11741, -97.8768, -6.66843, 0.52", "-3.67227, -98.8777, -6.98207, 0.66", "-3.31255, -100.024, -7.39484, 0.96", "-3.00289, -101.444, -7.90598, 0.81", "-2.80305, -102.579, -8.27222, 0.59", "-2.62861, -103.747, -8.60234, 0.59", "-2.46343, -105.101, -8.90984, 0.44", "-2.36302, -106.543, -9.08209, 0.74", "-2.35631, -108.205, -9.15591, 0.74", "-2.44863, -109.501, -9.1676, 0.81", "-2.61687, -110.603, -9.1822, 1.03", "-2.94218, -111.95, -9.25826, 1.03", "-3.54412, -113.859, -9.51393, 0.59", "-4.06225, -115.303, -9.80971, 0.44", "-4.56319, -116.603, -10.1191, 0.52", "-5.05423, -117.823, -10.4068, 1.03", "-5.62367, -119.223, -10.6776, 0.81", "-6.1536, -120.576, -10.8241, 0.29", "-6.65374, -122.025, -10.8059, 0.29", "-6.96099, -123.071, -10.6321, 0.44", "-7.22905, -124.09, -10.3282, 0.96", "-7.56403, -125.458, -9.814, 1.11", "-7.91887, -127.059, -9.19806, 0.59", "-8.2029, -128.419, -8.70742, 0.59", "-8.55886, -130.258, -8.15836, 0.52", "-8.71021, -131.259, -7.95705, 0.52", "-8.88708, -132.911, -7.76375, 0.81", "-9.00263, -134.604, -7.74619, 0.88", "-9.04673, -135.583, -7.82894, 0.66", "-9.0722, -136.802, -8.06343, 0.52", "-9.05147, -138.071, -8.43375, 0.81", "-8.99334, -138.889, -8.71917, 0.52", "-8.82376, -140.07, -9.1645, 0.37", "-8.63192, -141.0, -9.51426, 0.96", "-8.24739, -142.503, -10.0305, 0.74", "-7.93572, -143.559, -10.3441, 0.96", "-7.68219, -144.413, -10.507, 0.96", "-7.35152, -145.71, -10.5684, 0.37", "-7.20621, -146.683, -10.3914, 0.29", "-7.17781, -148.133, -9.79606, 0.59", "-7.23555, -148.719, -9.42923, 0.59", "-7.41564, -149.844, -8.60762, 0.59", "-7.62666, -150.97, -7.73394, 0.96", "-7.88623, -152.287, -6.69481, 0.52", "-8.05969, -153.161, -6.02896, 0.44", "-8.24583, -154.07, -5.37656, 0.44", "-8.45406, -154.984, -4.72231, 0.88", "-8.68484, -155.933, -4.07845, 0.44", "-8.94321, -156.906, -3.47145, 0.37", "-9.27403, -157.969, -2.88664, 0.74", "-9.70671, -159.135, -2.34042, 0.22", "-10.196, -160.266, -1.86924, 0.29", "-10.7621, -161.396, -1.40224, 0.59", "-11.4966, -162.752, -0.853576, 1.18", "-12.151, -163.962, -0.384076, 0.66", "-12.6798, -165.098, 0.0641527, 0.37", "-13.0363, -166.077, 0.497127, 0.29", "-13.2142, -166.809, 0.8829, 0.29", "-13.2791, -167.332, 1.21105, 0.74", "-13.2939, -167.867, 1.60569, 1.11", "-13.2227, -169.386, 2.72139, 0.44", "-13.1593, -170.339, 3.33296, 0.44", "-13.1398, -171.093, 3.67735, 0.44", "-13.1722, -172.174, 4.05287, 0.29", "-13.2728, -173.271, 4.33448, 0.29", "-13.4772, -174.693, 4.60215, 0.59", "-13.7335, -176.148, 4.79335, 1.18", "-14.0783, -178.216, 5.04117, 1.4", "-14.239, -179.294, 5.18025, 1.18", "-14.3807, -180.767, 5.35429, 0.52", "-14.4237, -181.83, 5.42939, 0.52", "-14.4194, -183.128, 5.45148, 0.96", "-14.3104, -184.631, 5.35622, 0.74", "-14.1789, -185.472, 5.22721, 0.74", "-13.8687, -186.844, 4.85731, 0.37", "-13.5023, -188.063, 4.39496, 0.44", "-13.25, -188.79, 4.05428, 0.44", "-12.9415, -189.617, 3.6256, 0.44", "-12.6139, -190.518, 3.16813, 0.29", "-12.3851, -191.281, 2.88948, 0.29", "-12.2526, -192.004, 2.79123, 0.29", "-12.1984, -193.063, 2.92147, 0.88", "-12.2524, -194.168, 3.27353, 0.81", "-12.3315, -195.005, 3.64305, 0.22", "-12.4391, -196.471, 4.35799, 0.22", "-12.4362, -197.575, 4.89398, 0.44", "-12.2881, -198.982, 5.52522, 1.11", "-12.0303, -200.093, 5.96489, 0.52", "-11.4859, -201.459, 6.37157, 0.22", "-10.717, -202.801, 6.58012, 0.22", "-9.65433, -204.313, 6.62627, 0.22", "-8.87805, -205.344, 6.58102, 0.37", "-8.4629, -205.917, 6.53491, 0.52", "-7.95999, -206.739, 6.48122, 0.52", "-7.43128, -208.008, 6.46232, 1.11", "-7.20588, -209.099, 6.51737, 1.11", "-7.09773, -210.776, 6.68378, 0.52", "-7.11525, -212.301, 6.89004, 0.29", "-7.19328, -213.797, 7.12928, 0.52", "-7.28981, -215.187, 7.34886, 0.52", "-7.34079, -216.225, 7.47052, 0.22", "-7.34982, -216.877, 7.49648, 0.22", "-7.34211, -217.562, 7.47356, 0.59", "-7.33368, -218.484, 7.396, 1.11", "-7.34844, -220.019, 7.20944, 1.11", "-7.43361, -221.8, 6.98557, 0.44", "-7.54109, -222.967, 6.85052, 0.44", "-7.69095, -224.183, 6.75361, 0.44", "-7.95056, -225.744, 6.68401, 0.29", "-8.15056, -226.553, 6.68918, 0.29", "-8.43098, -227.458, 6.75121, 0.88", "-8.70557, -228.302, 6.82862, 0.96", "-9.10977, -229.687, 6.94806, 0.37", "-9.3874, -230.792, 7.03742, 0.37", "-9.83102, -232.47, 7.20264, 0.37", "-9.98507, -232.959, 7.2597, 0.37", "-10.2756, -233.799, 7.36767, 1.03", "-10.482, -234.364, 7.44111, 1.03", "-10.8588, -235.418, 7.57631, 0.52", "-11.3677, -237.187, 7.84528, 0.22", "-11.5491, -238.033, 8.01037, 0.22", "-11.7614, -238.985, 8.25764, 0.29", "-11.9498, -239.726, 8.49698, 0.59", "-12.1222, -240.346, 8.71426, 0.88", "-12.3416, -241.076, 8.96135, 0.96", "-12.6805, -242.179, 9.33782, 0.37", "-13.0961, -243.498, 9.80142, 0.22", "-13.2806, -244.149, 10.0324, 0.22", "-13.4454, -244.88, 10.29, 0.96", "-13.6602, -246.157, 10.7233, 0.44", "-13.7712, -247.443, 11.119, 0.22", "-13.7547, -248.269, 11.3268, 0.22", "-13.6578, -249.353, 11.5582, 0.22", "-13.617, -249.764, 11.6407, 0.22", "-13.5552, -250.534, 11.7825, 0.74", "-13.5363, -251.455, 11.9182, 0.88", "-13.6453, -252.66, 12.0056, 0.22", "-13.8234, -253.492, 12.012, 0.22", "-14.0363, -254.145, 12.003, 0.22", "-14.3357, -254.874, 11.9997, 0.22", "-14.6736, -255.578, 12.0019, 0.66", "-15.1113, -256.401, 12.0321, 0.74", "-15.7225, -257.491, 12.0933, 0.44", "-16.3228, -258.572, 12.1388, 0.44", "-17.0733, -259.92, 12.1413, 0.74", "-17.8027, -261.203, 12.0929, 0.96", "-18.4576, -262.344, 11.9969, 0.59", "-19.199, -263.636, 11.819, 0.22", "-19.7699, -264.609, 11.7047, 0.22", "-20.3777, -265.627, 11.6211, 0.22", "-20.8121, -266.329, 11.6027, 0.22", "-21.0102, -266.626, 11.6191, 0.22", "-21.5653, -267.4, 11.7488, 0.88", "-23.0879, -269.449, 12.3559, 0.22", "-23.6509, -270.197, 12.6326, 0.22", "-24.0297, -270.707, 12.8351, 0.74", "-24.4856, -271.36, 13.0905, 0.96", "-25.463, -272.886, 13.6702, 0.37", "-26.119, -274.045, 14.0822, 0.22", "-26.5141, -274.888, 14.3139, 0.88", "-26.7023, -275.365, 14.4527, 0.88", "-27.057, -276.492, 14.8129, 0.22", "-27.1749, -277.002, 14.9768, 0.22", "-27.2581, -277.511, 15.1264, 0.22", "-27.3937, -278.551, 15.3922, 0.81", "-27.5373, -280.146, 15.7627, 0.29", "-27.6208, -281.471, 16.0795, 0.44", "-27.6547, -282.556, 16.3316, 0.88", "-27.6558, -283.422, 16.5509, 0.88", "-27.609, -284.48, 16.8479, 0.29", "-27.5054, -285.39, 17.1451, 0.22", "-27.3316, -286.306, 17.4884, 0.22", "-27.1538, -286.966, 17.8236, 0.22", "-26.9357, -287.685, 18.2742, 0.22", "-26.7913, -288.172, 18.6236, 0.22", "-26.6338, -288.883, 19.1452, 0.74", "-26.6129, -289.174, 19.3465, 0.74", "-26.6568, -290.759, 20.2946, 0.22", "-26.7501, -291.468, 20.663, 0.22", "-26.8865, -292.053, 20.9068, 0.22", "-27.184, -292.944, 21.1989, 1.11", "-27.7014, -294.104, 21.4399, 0.29", "-28.1661, -295.001, 21.5175, 0.22", "-28.6762, -295.925, 21.4688, 0.22", "-29.1174, -296.772, 21.3972, 0.44", "-29.5212, -297.588, 21.3653, 0.88", "-30.1333, -298.897, 21.427, 0.96", "-30.6656, -300.136, 21.637, 0.29", "-31.0182, -300.998, 21.8968, 0.66", "-31.4513, -302.228, 22.3996, 0.74", "-31.883, -303.735, 23.1387, 0.29", "-32.1316, -304.963, 23.7941, 0.66", "-32.3063, -306.45, 24.6696, 0.22", "-32.3559, -307.034, 25.0433, 0.22", "-32.4154, -307.751, 25.5154, 0.81", "-32.4529, -308.296, 25.8412, 0.96", "-32.5041, -309.394, 26.4196, 0.37", "-32.5647, -310.526, 26.9587, 0.22", "-32.6599, -311.359, 27.3315, 0.22", "-32.7587, -311.932, 27.6013, 0.22", "-32.8383, -312.297, 27.8021, 0.66", "-32.9726, -312.824, 28.1344, 1.11", "-33.2073, -313.689, 28.7022, 0.88", "-33.5221, -314.939, 29.3892, 0.22", "-33.7845, -316.112, 29.9109, 0.88", "-34.0956, -317.504, 30.425, 0.22", "-34.2847, -318.341, 30.6741, 0.22", "-34.4853, -319.152, 30.8725, 0.74", "-34.9359, -320.678, 31.2513, 0.15", "-35.29, -321.684, 31.4694, 0.15", "-35.5223, -322.234, 31.5704, 0.66", "-35.8743, -323.005, 31.6791, 0.81", "-36.485, -324.275, 31.8835, 0.22", "-37.1473, -325.512, 32.2447, 0.22", "-37.4595, -326.038, 32.5156, 0.59", "-37.9815, -326.827, 33.047, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.77676, 1.47852, -10.46, 1.99", "-2.00622, 2.4231, -11.1891, 1.99", "-2.27077, 3.33507, -11.8604, 1.77", "-2.5194, 3.99224, -12.333, 1.84", "-2.78788, 4.5997, -12.7564, 1.4", "-3.10679, 5.22188, -13.1798, 1.25", "-3.4461, 5.79148, -13.5596, 1.4", "-3.77784, 6.25318, -13.8471, 1.4", "-4.35338, 6.95823, -14.2212, 1.03", "-4.90121, 7.59359, -14.4996, 1.03", "-5.53783, 8.28831, -14.7795, 1.11", "-6.22983, 9.01632, -15.0528, 0.96", "-6.97763, 9.81162, -15.3293, 0.96", "-7.68502, 10.5893, -15.5877, 0.88", "-8.12347, 11.0974, -15.7249, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.77676, 1.47852, -10.46, 3.32", "-3.70795, 0.311826, -10.4663, 3.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.44158, 39.2021, 0.0, 0.289528", "3.27908, 54.1787, 0.0, 0.289528", "4.11658, 69.1553, 0.0, 0.289528" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-2.94127, 30.4472, 11.532, 1.7", "-3.13758, 31.1985, 11.8654, 1.7", "-3.39151, 32.1844, 12.3009, 1.03", "-3.70307, 33.394, 12.8353, 0.74", "-3.92702, 34.2634, 13.2194, 0.74", "-4.14417, 35.1065, 13.5919, 0.74", "-4.31982, 35.7884, 13.8931, 1.03", "-4.53529, 36.7015, 14.3622, 1.84" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.94127, 30.4472, 11.532, 0.29", "-2.91248, 30.9132, 12.2954, 0.29", "-2.78212, 31.7543, 13.5841, 0.22", "-2.61774, 32.405, 14.4301, 0.22", "-2.49192, 32.8839, 15.0168, 0.37", "-2.3338, 33.5158, 15.7547, 0.37", "-2.17286, 34.2013, 16.5449, 0.37", "-2.03438, 34.7981, 17.1936, 0.37", "-1.79771, 35.7078, 18.0917, 0.22", "-1.55814, 36.4965, 18.8563, 0.22", "-1.30699, 37.3209, 19.6505, 0.22", "-1.16208, 37.7818, 20.1045, 0.22", "-1.00181, 38.3271, 20.6844, 0.22", "-0.912598, 38.6511, 21.0824, 0.37", "-0.676468, 39.4594, 22.1899, 0.37", "-0.468843, 40.0269, 22.9696, 0.22", "-0.164784, 40.7859, 24.0521, 0.44", "0.0518577, 41.3474, 24.8777, 0.81", "0.255326, 41.9138, 25.7297, 0.81", "0.496257, 42.6185, 26.8126, 0.29", "0.721002, 43.3047, 27.8588, 0.22", "0.946402, 43.9807, 28.8755, 0.22", "1.17305, 44.6406, 29.7899, 0.22", "1.37597, 45.2258, 30.5527, 0.22", "1.5878, 45.8113, 31.3029, 0.22", "1.82689, 46.4461, 32.1728, 0.22", "1.93644, 46.7506, 32.6212, 0.66", "2.07451, 47.0952, 33.1275, 1.55", "2.44764, 47.9351, 34.3939, 2.06", "3.02106, 49.1064, 36.1526, 0.22", "3.35352, 49.7746, 37.1539, 0.22", "3.65592, 50.3803, 38.0847, 0.22", "3.89277, 50.8812, 38.8449, 0.44", "4.10765, 51.4037, 39.6357, 0.44", "4.33558, 52.0612, 40.5622, 0.22", "4.56835, 52.9788, 41.6528, 0.22", "4.77884, 54.0103, 42.6777, 0.44", "4.93877, 55.0329, 43.6056, 0.15", "5.02075, 56.1137, 44.548, 0.15", "5.03209, 56.6701, 45.0048, 0.15", "5.02216, 57.796, 45.8795, 0.15", "5.04228, 58.7063, 46.5272, 0.37", "5.08803, 59.5328, 47.1078, 0.59", "5.20852, 60.535, 47.8473, 1.25", "5.3839, 61.4343, 48.5748, 2.21", "5.54096, 62.0186, 49.1217, 2.21", "5.95363, 63.1384, 50.2891, 0.52", "6.38127, 64.0551, 51.3228, 0.15", "6.78631, 64.7536, 52.1111, 0.15", "7.18148, 65.3146, 52.7495, 0.29", "7.53658, 65.7527, 53.25, 0.29", "8.00768, 66.3131, 53.8477, 0.07", "8.53388, 66.9243, 54.449, 0.07", "8.94453, 67.4058, 54.8924, 0.07", "9.29385, 67.8312, 55.2582, 0.88", "9.72986, 68.386, 55.7075, 1.62", "10.9133, 69.9452, 56.8855, 0.15", "11.4975, 70.721, 57.4779, 0.15", "12.0764, 71.4945, 58.0712, 0.15", "12.5029, 72.0537, 58.5123, 0.29", "12.9614, 72.6581, 59.0633, 0.29", "13.7901, 73.7537, 60.2244, 0.07", "14.4012, 74.5622, 61.1944, 0.07", "14.7156, 74.9917, 61.7435, 0.07", "15.1518, 75.5928, 62.5671, 0.96", "16.0836, 76.8743, 64.4616, 0.15", "16.5076, 77.4708, 65.3811, 0.15", "16.7887, 77.8818, 66.0669, 0.15", "17.0033, 78.2013, 66.5575, 0.15", "17.2526, 78.571, 67.094, 0.37", "17.5421, 79.0076, 67.6625, 0.37", "18.1662, 79.8977, 68.6536, 0.15", "18.6945, 80.6634, 69.455, 0.15", "19.195, 81.4525, 70.2732, 0.15", "19.7587, 82.4065, 71.258, 0.15", "20.0693, 82.9549, 71.8227, 0.15", "20.5853, 83.8807, 72.768, 0.15", "21.1914, 84.9749, 73.8621, 0.07", "21.8789, 86.2783, 75.1125, 0.07", "22.5085, 87.5352, 76.367, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-94.5411, -265.374, 40.3649, 0.74", "-94.8662, -266.23, 40.0934, 0.74", "-95.2446, -267.162, 39.8192, 0.29", "-95.7997, -268.389, 39.4656, 0.07", "-96.2823, -269.396, 39.157, 0.15", "-96.5942, -270.041, 38.9566, 0.52", "-96.8741, -270.604, 38.7673, 0.74", "-97.1119, -271.042, 38.6065, 0.88", "-97.7745, -272.199, 38.1938, 0.22", "-98.1985, -272.922, 37.9483, 0.22", "-98.6187, -273.667, 37.7042, 0.22", "-99.0597, -274.501, 37.4281, 0.15", "-99.3725, -275.121, 37.2148, 0.74", "-99.8146, -276.021, 36.8856, 0.88", "-100.2, -276.847, 36.5785, 0.22", "-100.623, -277.776, 36.2048, 0.15", "-100.936, -278.518, 35.8506, 0.15", "-101.152, -279.077, 35.5455, 0.29", "-101.378, -279.678, 35.1633, 0.66", "-101.69, -280.438, 34.6284, 1.03", "-102.127, -281.275, 33.994, 0.37", "-102.689, -282.146, 33.2953, 0.22", "-103.038, -282.639, 32.9102, 0.44", "-103.382, -283.103, 32.5731, 0.74", "-103.935, -283.832, 32.1092, 1.03", "-104.906, -285.067, 31.436, 0.29", "-105.472, -285.79, 31.1214, 0.29", "-105.98, -286.463, 30.8871, 0.74", "-106.4, -287.057, 30.7126, 0.74", "-107.16, -288.2, 30.4061, 0.29", "-107.833, -289.26, 30.1539, 0.22", "-108.206, -289.834, 30.0247, 0.22", "-108.726, -290.485, 29.8463, 0.22", "-109.181, -290.919, 29.6691, 0.29", "-109.651, -291.267, 29.4539, 0.74", "-110.268, -291.631, 29.1375, 0.96", "-111.18, -292.139, 28.636, 0.44", "-112.196, -292.742, 28.0602, 0.22", "-112.723, -293.09, 27.7651, 0.22", "-113.204, -293.462, 27.5041, 0.22", "-113.752, -293.963, 27.2569, 0.81", "-114.317, -294.584, 27.0454, 0.44", "-114.798, -295.203, 26.9174, 0.22", "-115.204, -295.76, 26.8183, 0.37", "-115.458, -296.086, 26.7445, 0.37", "-116.275, -296.979, 26.4774, 0.22", "-116.606, -297.275, 26.3528, 0.59", "-117.356, -297.842, 26.047, 0.88", "-118.12, -298.396, 25.6905, 0.22", "-118.709, -298.836, 25.3812, 0.22", "-119.112, -299.148, 25.1456, 0.22", "-119.587, -299.537, 24.8397, 0.22", "-120.069, -299.955, 24.5325, 0.66", "-120.854, -300.735, 24.0372, 0.15", "-121.133, -301.067, 23.831, 0.15", "-121.413, -301.458, 23.5951, 0.15", "-121.542, -301.672, 23.4497, 0.15", "-121.679, -301.945, 23.2538, 0.15", "-121.938, -302.508, 22.8122, 0.88", "-122.506, -303.678, 21.8783, 0.22", "-122.618, -303.885, 21.7113, 0.22", "-122.917, -304.383, 21.3185, 0.22", "-123.268, -304.942, 20.9053, 0.22", "-123.496, -305.301, 20.6716, 0.22", "-123.918, -305.962, 20.3222, 0.66", "-124.542, -306.881, 19.9832, 0.29", "-125.008, -307.557, 19.7846, 0.29", "-125.409, -308.153, 19.6504, 0.44", "-125.866, -308.877, 19.5125, 0.74", "-126.214, -309.494, 19.4245, 0.81", "-126.867, -310.707, 19.3031, 0.22", "-127.305, -311.47, 19.2761, 0.22", "-127.509, -311.798, 19.2735, 0.22", "-127.753, -312.176, 19.273, 0.22", "-128.113, -312.747, 19.2458, 0.22", "-128.618, -313.57, 19.1203, 0.59", "-129.153, -314.462, 18.8558, 0.22", "-129.5, -315.02, 18.6248, 0.22", "-129.942, -315.665, 18.2654, 0.59", "-130.597, -316.545, 17.6705, 0.22", "-131.086, -317.206, 17.1575, 0.22", "-131.441, -317.721, 16.7317, 0.44", "-131.839, -318.346, 16.2247, 1.03", "-132.374, -319.223, 15.5578, 0.22", "-132.61, -319.658, 15.283, 0.22", "-132.82, -320.185, 15.0734, 0.22", "-132.971, -320.807, 14.916, 0.22", "-133.124, -321.768, 14.7348, 0.22", "-133.165, -322.091, 14.6841, 0.44", "-133.249, -322.898, 14.5806, 0.88", "-133.327, -323.613, 14.4842, 0.88", "-133.523, -325.081, 14.2825, 0.22", "-133.66, -325.897, 14.1646, 0.22", "-133.887, -327.001, 13.9798, 0.22", "-134.003, -327.496, 13.8996, 0.22", "-134.122, -327.913, 13.8373, 0.59", "-134.355, -328.595, 13.7443, 0.81", "-134.52, -329.01, 13.6835, 0.59", "-134.912, -329.949, 13.5087, 0.22", "-135.182, -330.557, 13.3802, 0.22", "-135.496, -331.142, 13.2549, 0.22", "-135.823, -331.64, 13.127, 0.22", "-136.381, -332.367, 12.9072, 0.22", "-136.799, -332.861, 12.7281, 0.44", "-137.288, -333.398, 12.497, 0.74", "-137.84, -334.028, 12.1742, 0.29", "-138.344, -334.651, 11.8051, 0.22", "-138.476, -334.819, 11.6993, 0.22", "-138.757, -335.161, 11.4629, 0.22", "-139.044, -335.509, 11.2116, 0.22", "-139.364, -335.924, 10.9299, 0.29", "-139.732, -336.485, 10.6145, 0.66", "-140.063, -337.014, 10.3793, 0.88", "-140.879, -338.24, 9.90328, 0.22", "-141.223, -338.715, 9.74484, 0.22", "-141.652, -339.251, 9.59214, 0.22", "-142.266, -339.933, 9.48209, 0.22", "-142.791, -340.474, 9.47633, 0.15", "-143.147, -340.835, 9.51837, 0.15", "-143.395, -341.092, 9.5829, 0.52", "-143.821, -341.538, 9.70894, 0.81", "-144.729, -342.599, 9.96306, 0.15", "-145.075, -343.068, 10.0345, 0.15", "-145.529, -343.846, 10.0763, 0.15", "-145.624, -344.038, 10.0703, 0.37", "-145.893, -344.647, 10.0027, 0.74", "-146.318, -345.718, 9.80436, 0.15", "-146.545, -346.334, 9.64097, 0.15", "-146.759, -346.941, 9.47759, 0.37", "-146.951, -347.515, 9.31104, 0.37", "-147.17, -348.236, 9.09765, 0.37", "-147.426, -349.164, 8.81003, 0.29", "-147.686, -350.164, 8.51241, 0.81", "-147.856, -350.919, 8.28765, 0.66", "-147.993, -351.626, 8.05095, 0.59", "-148.126, -352.388, 7.75612, 0.15", "-148.237, -352.921, 7.52379, 0.15", "-148.381, -353.416, 7.27955, 0.66", "-148.464, -353.632, 7.1653, 0.66", "-148.816, -354.424, 6.7487, 0.22", "-149.056, -354.996, 6.47021, 0.22", "-149.326, -355.695, 6.14344, 0.59", "-149.608, -356.613, 5.74497, 0.15", "-149.724, -357.075, 5.55452, 0.15", "-149.873, -357.737, 5.29736, 0.81", "-150.129, -359.092, 4.81454, 0.15", "-150.218, -359.642, 4.63918, 0.52", "-150.337, -360.495, 4.39029, 0.15", "-150.408, -360.896, 4.28103, 0.15", "-150.63, -361.791, 4.01602, 0.15", "-150.728, -362.091, 3.91856, 0.15", "-151.01, -362.805, 3.68128, 0.88", "-151.297, -363.482, 3.44474, 0.22", "-151.773, -364.521, 3.06607, 0.15", "-152.238, -365.532, 2.68432, 0.15", "-152.464, -366.012, 2.49943, 0.22", "-152.755, -366.575, 2.26737, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-94.5411, -265.374, 40.3649, 0.07", "-95.012, -264.535, 39.5719, 0.07", "-95.4324, -263.792, 38.9535, 0.07", "-95.8391, -263.116, 38.41, 0.37", "-96.5841, -261.927, 37.5123, 0.07", "-96.8646, -261.493, 37.2057, 0.07", "-97.3247, -260.815, 36.7317, 0.22", "-98.2365, -259.579, 35.9286, 0.07", "-98.953, -258.725, 35.3921, 0.07", "-99.4582, -258.182, 35.0517, 0.07", "-99.9222, -257.749, 34.7921, 0.22", "-100.804, -257.006, 34.3493, 0.07", "-101.371, -256.564, 34.0709, 0.37", "-103.081, -255.338, 33.2922, 0.07", "-103.644, -254.952, 33.0461, 0.22", "-105.056, -254.03, 32.4163, 0.07", "-105.648, -253.66, 32.158, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-37.9815, -326.827, 33.047, 0.15", "-38.9865, -327.662, 33.728, 0.15", "-39.8958, -328.56, 34.3506, 0.15", "-40.6011, -329.342, 34.8456, 0.07", "-41.2102, -330.038, 35.2928, 0.07", "-41.6609, -330.563, 35.6296, 0.07", "-41.9749, -330.937, 35.8641, 0.37", "-42.5062, -331.657, 36.2811, 0.66", "-43.3579, -332.86, 36.9376, 0.07", "-43.8592, -333.555, 37.3571, 0.07", "-44.3546, -334.206, 37.8002, 0.07", "-44.6209, -334.53, 38.0579, 0.52", "-45.1213, -335.126, 38.579, 0.88", "-46.0284, -336.206, 39.6091, 0.15", "-46.7926, -337.144, 40.5425, 0.15", "-47.1758, -337.644, 41.0341, 0.15", "-47.66, -338.306, 41.7298, 0.15", "-48.0994, -338.94, 42.4389, 0.88", "-48.8628, -340.1, 43.8359, 0.07", "-49.0957, -340.472, 44.3084, 0.07", "-49.3325, -340.877, 44.8057, 0.37", "-49.8876, -341.859, 45.9633, 0.15", "-50.2293, -342.478, 46.6569, 0.37", "-50.7543, -343.348, 47.6071, 0.22", "-51.1971, -344.058, 48.3238, 0.44", "-51.5707, -344.636, 48.8587, 0.81", "-52.1029, -345.416, 49.5083, 0.29", "-52.7822, -346.362, 50.1094, 0.15", "-53.6383, -347.541, 50.6504, 0.15", "-54.3152, -348.519, 50.9477, 0.15", "-54.722, -349.14, 51.0775, 0.81", "-55.1253, -349.812, 51.1849, 1.47", "-56.2841, -351.982, 51.4126, 0.15", "-57.0714, -353.509, 51.6165, 0.07", "-57.8691, -355.146, 51.8542, 0.07", "-58.2954, -356.005, 52.0137, 0.15", "-58.9943, -357.443, 52.3186, 0.07", "-59.3698, -358.233, 52.4975, 0.22", "-60.9985, -361.554, 53.3499, 0.07", "-61.5123, -362.524, 53.604, 0.29", "-62.6167, -364.444, 54.0887, 0.07", "-63.2014, -365.412, 54.2997, 0.07", "-63.871, -366.46, 54.4819, 0.44", "-65.1031, -368.382, 54.7569, 0.15", "-66.0231, -369.842, 54.8999, 0.07", "-66.5623, -370.673, 54.9921, 0.07", "-67.0952, -371.481, 55.0924, 0.29", "-68.7187, -373.866, 55.4582, 0.07", "-69.5649, -375.104, 55.6755, 0.07", "-70.2153, -376.075, 55.847, 0.07", "-70.8737, -377.035, 56.0452, 0.07", "-71.499, -377.934, 56.2318, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-37.9815, -326.827, 33.047, 0.22", "-37.9271, -327.528, 33.8253, 0.22", "-37.7662, -328.614, 35.1207, 0.37", "-37.6424, -329.293, 36.0013, 0.15", "-37.5328, -329.822, 36.7059, 0.15", "-37.5005, -329.992, 36.9666, 0.37", "-37.4538, -330.39, 37.6479, 0.88", "-37.4089, -331.128, 39.1765, 0.15", "-37.4328, -331.454, 39.9725, 0.52", "-37.4527, -331.553, 40.2267, 1.03", "-37.6833, -332.236, 42.0647, 0.22", "-37.8982, -332.706, 43.3549, 0.22", "-37.9749, -332.843, 43.742, 0.37", "-38.3815, -333.505, 45.4254, 0.22", "-38.547, -333.786, 46.0519, 0.22", "-38.7758, -334.197, 46.8451, 0.22", "-38.9427, -334.534, 47.3848, 0.22", "-39.101, -334.922, 47.9228, 0.88", "-39.4367, -336.047, 49.2927, 0.15", "-39.552, -336.656, 49.9273, 0.22", "-39.6071, -337.44, 50.5993, 0.07", "-39.5757, -338.445, 51.2982, 0.07", "-39.43, -339.457, 51.8081, 1.18", "-39.0643, -341.135, 52.3795, 0.07", "-38.8447, -341.863, 52.4829, 0.74", "-38.2188, -343.747, 52.5167, 0.07", "-38.0263, -344.295, 52.4519, 0.44", "-37.3399, -346.267, 51.9606, 0.07", "-37.0239, -347.31, 51.6257, 1.11", "-36.468, -349.328, 50.7957, 0.07", "-36.345, -349.79, 50.5877, 0.22", "-35.9722, -351.27, 49.8816, 0.07", "-35.7577, -351.978, 49.4954, 0.07", "-35.335, -353.026, 48.7936, 0.96", "-34.6678, -354.247, 47.8978, 0.07", "-34.3547, -354.695, 47.5716, 0.07", "-34.164, -354.924, 47.3942, 0.29", "-33.283, -355.837, 46.62, 0.07", "-32.4738, -356.64, 45.9165, 0.07", "-32.0585, -357.051, 45.5401, 0.66", "-31.1433, -358.036, 44.6878, 0.07", "-30.5491, -358.765, 44.1092, 0.07", "-29.969, -359.588, 43.5623, 0.07", "-29.6267, -360.155, 43.2791, 0.96", "-29.0283, -361.222, 42.8075, 0.15", "-28.6778, -361.88, 42.5327, 0.15", "-28.2906, -362.699, 42.2536, 0.74", "-27.6131, -364.29, 41.8864, 0.15", "-27.2682, -365.156, 41.7625, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.12347, 11.0974, -15.7249, 0.59", "-9.34037, 11.5789, -14.4825, 0.59", "-10.2811, 12.0304, -13.5439, 0.59", "-11.2229, 12.5009, -12.6476, 0.59", "-12.1903, 12.9639, -11.7975, 0.74", "-12.9845, 13.3238, -11.1746, 0.74", "-14.2206, 13.8615, -10.3655, 0.44", "-14.5466, 14.0051, -10.2339, 0.44", "-15.3071, 14.3478, -10.0812, 0.44", "-16.0591, 14.6663, -10.0191, 0.66", "-17.1197, 15.0473, -10.008, 0.81", "-18.5699, 15.4589, -10.0206, 0.59", "-19.696, 15.7029, -10.0272, 0.37", "-21.1789, 16.0032, -9.99922, 0.22", "-22.0869, 16.1902, -9.95671, 0.44", "-22.7119, 16.3368, -9.90148, 0.74", "-24.1088, 16.7348, -9.71806, 0.37", "-25.4009, 17.1768, -9.48785, 0.22", "-26.0332, 17.4563, -9.38481, 0.22", "-26.7921, 17.8671, -9.27915, 0.66", "-27.7493, 18.4739, -9.18445, 0.52", "-28.9017, 19.2742, -9.15127, 0.81", "-29.3981, 19.6413, -9.18337, 0.81", "-30.6576, 20.574, -9.39272, 0.44", "-31.8974, 21.4222, -9.733, 0.74", "-33.0918, 22.1184, -10.208, 0.44", "-34.3919, 22.7212, -10.8913, 0.29", "-35.2624, 23.0222, -11.4559, 0.29", "-36.1359, 23.2367, -12.128, 0.29", "-36.9829, 23.3605, -12.8784, 0.88", "-38.0027, 23.433, -13.8399, 0.59", "-38.6657, 23.4593, -14.4613, 0.59", "-39.6118, 23.4974, -15.2902, 0.29", "-40.7719, 23.582, -16.2025, 0.74", "-41.2844, 23.6587, -16.5611, 0.74", "-42.0982, 23.8773, -17.0658, 0.29", "-42.7182, 24.1506, -17.3717, 0.22", "-43.2042, 24.4482, -17.561, 0.22", "-43.782, 24.9064, -17.7333, 0.22", "-44.513, 25.5542, -17.9242, 0.74", "-45.1236, 26.1018, -18.1196, 0.74", "-45.7037, 26.6187, -18.3564, 0.29", "-46.1449, 26.9846, -18.5585, 0.29", "-46.7706, 27.4721, -18.8524, 0.52", "-47.4761, 28.0235, -19.2255, 0.52", "-48.5365, 28.854, -19.8395, 0.22", "-49.171, 29.3875, -20.2508, 0.15", "-50.0774, 30.1591, -20.8589, 0.59", "-51.0046, 30.9858, -21.4828, 0.22", "-51.4953, 31.4623, -21.8161, 0.22", "-51.6511, 31.6353, -21.9182, 0.22", "-52.194, 32.3248, -22.2599, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-8.12347, 11.0974, -15.7249, 1.03", "-8.03236, 12.0805, -15.7288, 1.03", "-7.53374, 14.0958, -15.6622, 0.88", "-7.05062, 15.6674, -15.6328, 0.88", "-6.70196, 16.7562, -15.6379, 0.59", "-6.41795, 17.7224, -15.6539, 0.59", "-5.97489, 19.4145, -15.6951, 0.96", "-5.47359, 21.3561, -15.7458, 0.52", "-5.12846, 23.0702, -15.7838, 0.66", "-5.0652, 23.8855, -15.82, 0.66", "-5.12549, 25.0438, -15.8987, 0.66", "-5.26671, 25.842, -15.9467, 0.66", "-5.63472, 27.1707, -16.0205, 1.18", "-6.16564, 28.8011, -16.1062, 0.96", "-6.44969, 29.6722, -16.1618, 0.96", "-6.84183, 30.9889, -16.2967, 0.88", "-7.20024, 32.5053, -16.544, 1.03", "-7.38752, 33.4066, -16.7284, 1.18", "-7.61185, 34.7111, -17.0109, 0.74", "-7.77838, 35.9672, -17.2739, 0.74", "-7.87574, 36.9282, -17.4774, 0.96", "-8.00002, 38.4136, -17.7883, 1.11", "-8.06745, 40.076, -18.1543, 0.96", "-8.03514, 42.5283, -18.6817, 0.59", "-7.95015, 43.8168, -18.9307, 0.59", "-7.71876, 45.4701, -19.2269, 0.74", "-7.5622, 46.1868, -19.3516, 0.74", "-7.12393, 47.6461, -19.5742, 0.59", "-6.57359, 49.0618, -19.772, 0.59", "-6.06055, 50.2458, -19.9187, 0.59", "-5.50248, 51.6385, -20.0692, 0.52", "-5.15108, 52.7495, -20.178, 0.52", "-4.869, 54.1694, -20.3653, 0.74", "-4.84651, 55.1632, -20.5512, 0.88", "-5.00953, 56.4049, -20.904, 0.59", "-5.34654, 57.7758, -21.4441, 0.44", "-5.79701, 59.1502, -22.098, 0.59", "-6.25812, 60.4335, -22.7696, 0.96", "-6.79298, 62.0624, -23.6353, 0.52", "-7.12811, 63.3734, -24.2985, 0.52", "-7.295, 64.4116, -24.7626, 0.52", "-7.38297, 66.0948, -25.4027, 0.37", "-7.36239, 67.1546, -25.7326, 0.37", "-7.277, 69.0539, -26.1953, 0.44", "-7.2551, 70.533, -26.4832, 0.59", "-7.34686, 71.8456, -26.7012, 0.59", "-7.52108, 72.7927, -26.8437, 0.59", "-8.04079, 74.3504, -27.1233, 0.59", "-8.58292, 75.505, -27.4198, 0.66", "-9.37165, 76.8487, -27.8817, 0.74", "-10.138, 78.0715, -28.3927, 0.52", "-10.7899, 79.1366, -28.9258, 0.29", "-11.3369, 80.2374, -29.6112, 0.29", "-11.4432, 81.1089, -30.4228, 0.44", "-11.1329, 81.6252, -31.2001, 0.59", "-10.4348, 82.0498, -32.2478, 0.29", "-9.90543, 82.1997, -32.8889, 0.29", "-9.0099, 82.3099, -33.8725, 0.29", "-8.30857, 82.3483, -34.5921, 0.29", "-7.64682, 82.391, -35.2936, 0.44", "-7.03838, 82.5056, -36.0436, 0.44", "-6.62971, 82.6936, -36.7131, 0.52", "-6.5261, 83.0691, -37.2831, 0.52", "-6.81884, 83.6226, -37.6938, 0.52", "-7.46154, 84.3796, -38.1715, 0.66", "-8.35674, 85.1988, -38.6571, 0.66", "-9.33075, 85.8684, -39.0603, 0.37", "-10.5178, 86.422, -39.5037, 0.37", "-11.5358, 86.6732, -39.901, 0.37", "-12.24, 86.653, -40.2295, 0.37", "-12.7351, 86.4927, -40.5111, 0.37", "-13.4967, 86.0095, -41.0516, 0.29", "-14.2194, 85.2297, -41.7264, 0.22", "-14.6728, 84.3742, -42.348, 0.22", "-14.9694, 82.9255, -43.2624, 0.66", "-14.8961, 82.2038, -43.6821, 0.37", "-14.6427, 81.4224, -44.1648, 0.22", "-14.1621, 80.5582, -44.7346, 0.22", "-13.6792, 79.9393, -45.1879, 0.22", "-12.9041, 79.0957, -45.8351, 0.29", "-11.7945, 78.0252, -46.699, 0.15", "-10.7487, 77.0615, -47.5412, 0.15", "-9.51643, 75.9239, -48.6133, 0.15", "-8.61533, 75.1032, -49.4906, 0.15", "-8.34072, 74.8471, -49.7915, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.70795, 0.311826, -10.4663, 1.25", "-2.88276, -1.16061, -11.7569, 1.25", "-2.29521, -2.01811, -12.4657, 1.25", "-1.48808, -3.07322, -13.3106, 1.25", "-0.990234, -3.73857, -13.8055, 1.25", "-0.356444, -4.70374, -14.4578, 1.11", "0.057244, -5.48571, -14.9429, 1.33", "0.57579, -6.80533, -15.6029, 0.81", "0.772914, -7.876, -15.9943, 0.66", "0.772063, -8.78441, -16.2596, 0.66", "0.60728, -10.2005, -16.6086, 1.03", "0.316201, -11.8685, -16.9592, 1.4", "0.0777195, -13.1731, -17.2045, 1.99", "-0.2315, -15.0167, -17.5007, 1.33", "-0.383006, -16.4148, -17.7036, 0.96", "-0.485001, -18.0681, -17.9446, 0.81", "-0.46498, -19.3239, -18.1218, 0.74", "-0.329227, -20.6535, -18.2867, 0.96", "-0.102615, -21.8338, -18.4376, 1.33", "0.175233, -22.8185, -18.5674, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.70795, 0.311826, -10.4663, 1.77", "-4.68088, -1.18376, -10.9198, 1.77", "-5.63603, -2.72623, -11.4157, 1.62", "-6.42859, -4.0832, -11.9051, 1.84", "-6.96705, -5.00512, -12.2376, 2.06", "-7.93371, -6.66018, -12.8345, 1.84", "-8.84026, -8.21235, -13.3943, 1.84", "-9.72632, -9.84219, -14.0324, 1.84", "-10.4135, -11.119, -14.5815, 2.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.53529, 36.7015, 14.3622, 0.52", "-3.89759, 37.7909, 13.9181, 0.52", "-3.31533, 38.8722, 13.4178, 0.52", "-3.0293, 39.4585, 13.0965, 0.52", "-2.69623, 40.2117, 12.6485, 0.59", "-2.40004, 40.9085, 12.2095, 0.44", "-2.18164, 41.4302, 11.8727, 0.44", "-1.96837, 41.9924, 11.4959, 0.52", "-1.6488, 42.8147, 10.9486, 0.88", "-1.41697, 43.3875, 10.5491, 1.25", "-1.10229, 44.1567, 10.0122, 1.18", "-0.681868, 45.181, 9.32012, 1.18", "-0.264905, 46.1634, 8.68037, 0.52", "0.198458, 47.2033, 8.03107, 0.44", "0.509302, 47.8841, 7.61472, 0.44", "0.712616, 48.3333, 7.34726, 0.44", "1.06072, 49.1363, 6.90365, 0.52", "1.35779, 49.8539, 6.56211, 0.59", "1.73173, 50.7945, 6.20538, 0.66", "2.02007, 51.5536, 5.98802, 0.66", "2.277, 52.2899, 5.84134, 0.96", "2.52299, 53.0548, 5.74032, 1.18", "2.88181, 54.2524, 5.68107, 0.96", "3.1238, 55.1149, 5.69265, 0.44", "3.27522, 55.6685, 5.71883, 0.29", "3.47041, 56.3496, 5.76226, 0.29", "3.58203, 56.6784, 5.78195, 0.29", "3.84423, 57.2788, 5.82462, 0.59", "4.03735, 57.6082, 5.85757, 0.96", "4.63062, 58.3879, 5.93001, 1.25", "4.9953, 58.7814, 5.94945, 1.11", "5.81589, 59.5867, 5.94144, 0.52", "6.43117, 60.2075, 5.90398, 0.52", "6.95923, 60.7764, 5.8539, 0.22", "7.52882, 61.4301, 5.77804, 0.29", "8.04023, 62.0362, 5.67404, 0.59", "8.52276, 62.6118, 5.52056, 1.11", "9.08617, 63.2799, 5.28358, 1.25", "9.77424, 64.0624, 4.92512, 0.96", "10.3151, 64.6003, 4.58377, 0.29", "10.8045, 64.9658, 4.22264, 0.22", "11.2567, 65.1808, 3.82893, 0.22", "11.6395, 65.2996, 3.43347, 0.37", "12.1435, 65.4257, 2.8033, 0.59", "12.6668, 65.5705, 2.00661, 0.74", "13.1778, 65.7612, 1.14605, 0.96", "13.5943, 65.9494, 0.433531, 1.18", "14.0668, 66.1932, -0.360992, 1.18", "14.6119, 66.4997, -1.242, 1.25", "15.2408, 66.886, -2.13625, 1.25", "15.8135, 67.2815, -2.80124, 0.52", "16.2514, 67.6099, -3.20042, 0.29", "16.7922, 68.0388, -3.56408, 0.29", "17.1588, 68.3442, -3.7268, 0.66", "17.7587, 68.9283, -3.87932, 0.66", "18.4429, 69.7795, -3.97288, 0.52", "18.7518, 70.3467, -4.00215, 0.59", "18.9942, 71.0105, -4.02888, 0.74", "19.091, 71.4154, -4.03869, 0.74", "19.2409, 72.3981, -4.11048, 0.29", "19.2957, 73.1042, -4.18416, 0.29", "19.3363, 74.1904, -4.30727, 0.44", "19.3501, 74.6129, -4.35612, 0.81", "19.3882, 75.1809, -4.4329, 0.81", "19.53, 76.3009, -4.62652, 0.66", "19.7397, 77.2533, -4.83164, 0.66", "19.8569, 77.6378, -4.91996, 0.66", "20.1279, 78.3871, -5.11076, 0.44", "20.4822, 79.3651, -5.38486, 0.59", "20.7092, 80.0471, -5.5812, 0.44", "20.973, 80.9948, -5.8643, 0.52", "21.1024, 81.5988, -6.06937, 0.52", "21.1998, 82.2301, -6.31293, 0.44", "21.2844, 82.9537, -6.63156, 0.81", "21.3617, 83.7797, -7.03543, 1.03", "21.4574, 84.7782, -7.57262, 0.66", "21.5214, 85.4327, -7.95388, 0.44", "21.5984, 86.0218, -8.28938, 0.29", "21.704, 86.6442, -8.58196, 0.29", "21.7727, 87.0353, -8.71287, 0.29", "21.8733, 87.6022, -8.86685, 0.29", "21.9516, 88.0926, -8.96663, 0.44", "22.1023, 89.2712, -9.19352, 0.74", "22.2431, 90.7761, -9.50081, 0.59", "22.3255, 91.9848, -9.80807, 0.44", "22.3703, 92.7284, -10.0594, 0.44", "22.391, 92.9778, -10.1796, 0.59", "22.4663, 93.5075, -10.5555, 0.59", "22.5609, 93.9487, -10.9931, 0.59", "22.7077, 94.3965, -11.5679, 0.59", "22.876, 94.7702, -12.1075, 0.74", "23.1814, 95.3511, -12.9166, 0.96", "23.4685, 95.8848, -13.5796, 1.18", "23.784, 96.4822, -14.1992, 0.59", "24.0871, 97.0882, -14.7071, 0.59", "24.403, 97.7853, -15.1635, 0.59", "24.5591, 98.2094, -15.3769, 0.29", "24.7267, 98.9293, -15.6537, 0.22", "24.7833, 99.4398, -15.844, 0.22", "24.7808, 100.11, -16.1134, 0.22", "24.7101, 100.746, -16.4472, 0.22", "24.5551, 101.525, -16.969, 0.81", "24.3396, 102.35, -17.6276, 0.22", "24.1461, 103.01, -18.2193, 0.37", "23.9362, 103.648, -18.8543, 0.88", "23.5172, 104.784, -20.1173, 0.15", "23.3018, 105.346, -20.8056, 0.15", "23.2085, 105.609, -21.166, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-4.53529, 36.7015, 14.3622, 0.81", "-5.00144, 37.9623, 15.5883, 0.81", "-5.38598, 39.1542, 16.6096, 0.81", "-5.85195, 40.5169, 17.5907, 0.81", "-6.14324, 41.3146, 18.0701, 0.59", "-6.46696, 42.1725, 18.5335, 0.59", "-6.77425, 43.0127, 18.9418, 0.44", "-6.98222, 43.6977, 19.1611, 0.44", "-7.36486, 44.998, 19.4686, 0.44", "-7.6442, 45.9229, 19.6702, 0.74", "-7.99878, 47.0162, 19.9796, 1.11", "-8.26397, 47.8279, 20.2282, 1.11", "-8.75249, 49.3491, 20.7341, 0.52", "-9.09276, 50.5455, 21.1651, 0.66", "-9.36459, 51.6619, 21.6196, 0.96", "-9.63368, 52.828, 22.13, 1.33", "-10.0099, 54.3972, 22.8271, 1.77" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-152.755, -366.575, 2.26737, 0.29", "-152.963, -367.523, 2.57181, 0.29", "-153.199, -368.499, 2.78781, 0.66", "-153.539, -369.863, 2.99059, 0.15", "-153.729, -370.639, 3.06481, 0.15", "-153.87, -371.147, 3.06637, 0.59", "-154.217, -372.201, 2.97175, 0.07", "-154.523, -372.879, 2.77847, 0.07", "-154.721, -373.227, 2.61612, 0.15", "-154.926, -373.584, 2.36717, 0.37", "-155.378, -374.438, 1.66665, 0.07", "-155.677, -375.023, 1.12697, 0.07", "-155.823, -375.313, 0.841685, 0.07", "-156.002, -375.648, 0.51818, 0.81", "-156.453, -376.525, -0.295065, 0.22", "-156.715, -377.1, -0.785323, 0.44", "-156.96, -377.829, -1.30706, 0.15", "-157.067, -378.255, -1.58391, 0.15", "-157.13, -378.582, -1.7771, 0.44", "-157.23, -379.119, -2.07573, 0.66", "-157.434, -380.11, -2.54856, 0.15", "-157.542, -380.758, -2.82488, 0.15", "-157.575, -381.319, -3.03563, 0.15", "-157.567, -381.936, -3.26926, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-152.755, -366.575, 2.26737, 0.07", "-154.357, -365.556, 2.3631, 0.07", "-155.504, -364.807, 2.38086, 0.07", "-156.568, -364.118, 2.36904, 0.07", "-157.076, -363.781, 2.35184, 0.15", "-157.982, -363.112, 2.3051, 0.07", "-158.569, -362.623, 2.26696, 0.07", "-159.058, -362.105, 2.17144, 0.22", "-159.426, -361.673, 2.14166, 0.15", "-159.649, -361.406, 2.13884, 0.15", "-160.384, -360.564, 2.13548, 0.29", "-161.028, -359.898, 2.14061, 0.07", "-161.692, -359.286, 2.15083, 0.15", "-163.187, -358.056, 2.13318, 0.07", "-164.077, -357.475, 2.10209, 0.15", "-164.812, -357.139, 2.05441, 0.15", "-165.483, -356.958, 1.98943, 0.15", "-166.171, -356.903, 1.90005, 0.15", "-167.174, -356.918, 1.72966, 0.15", "-168.07, -357.042, 1.50485, 0.07", "-168.935, -357.257, 1.33374, 0.07", "-169.47, -357.433, 1.24981, 0.66", "-170.48, -357.858, 1.07965, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-27.2682, -365.156, 41.7625, 0.15", "-26.3689, -366.536, 41.1021, 0.15", "-25.9834, -367.3, 40.759, 0.15", "-25.8097, -367.654, 40.6252, 0.15", "-25.6101, -368.052, 40.4788, 0.52", "-25.3426, -368.607, 40.2868, 0.81", "-24.6921, -369.988, 39.7871, 0.22", "-24.2358, -371.048, 39.4352, 0.22", "-23.9368, -371.802, 39.1847, 0.15", "-23.6699, -372.439, 38.9842, 0.22", "-23.2772, -373.249, 38.7467, 0.29", "-22.8057, -374.066, 38.529, 0.22", "-22.4732, -374.559, 38.4077, 0.22", "-22.0881, -375.112, 38.2561, 0.37", "-21.5814, -375.86, 38.0172, 0.37", "-20.9224, -376.849, 37.7013, 0.22", "-20.6231, -377.247, 37.5697, 0.22", "-20.1385, -377.841, 37.3652, 0.22", "-19.8924, -378.139, 37.2425, 0.22", "-19.5552, -378.581, 37.0167, 0.22", "-19.2258, -379.038, 36.7793, 0.15", "-18.5807, -379.944, 36.3558, 0.44", "-17.8563, -381.024, 35.9052, 0.22", "-17.4737, -381.669, 35.6657, 0.29", "-16.737, -383.004, 35.2088, 0.07", "-16.2962, -383.856, 34.9433, 0.66", "-15.7323, -385.048, 34.6097, 0.07", "-15.3841, -385.863, 34.409, 0.07", "-14.9537, -386.789, 34.208, 0.29", "-14.4481, -387.772, 34.0176, 0.07", "-14.1964, -388.238, 33.9265, 0.44", "-14.0667, -388.489, 33.8602, 0.44", "-13.6437, -389.298, 33.6169, 0.74", "-12.8284, -390.539, 33.2448, 0.07", "-12.4418, -391.042, 33.1114, 0.22", "-11.881, -391.717, 32.9757, 0.07", "-11.3934, -392.309, 32.8555, 0.07", "-10.9512, -392.843, 32.761, 0.66", "-9.69161, -394.295, 32.6266, 0.07", "-9.08501, -394.895, 32.6643, 0.07", "-8.34472, -395.468, 32.7694, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-27.2682, -365.156, 41.7625, 0.07", "-26.4309, -365.464, 42.8085, 0.07", "-26.0375, -365.58, 43.2879, 0.29", "-25.5524, -365.707, 43.87, 0.07", "-25.1448, -365.798, 44.3537, 0.52", "-23.9832, -365.949, 45.6152, 0.07", "-23.2737, -365.984, 46.3215, 0.07", "-22.989, -365.976, 46.5894, 0.59", "-22.5866, -365.941, 46.9426, 0.74", "-22.1853, -365.873, 47.2757, 0.37", "-21.089, -365.604, 48.1046, 0.07", "-20.4964, -365.392, 48.4576, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.175233, -22.8185, -18.5674, 0.59", "0.478327, -22.6707, -20.3827, 0.59", "0.704807, -22.6201, -21.798, 0.59", "0.991116, -22.6152, -23.8441, 0.52", "1.13597, -22.6387, -25.4568, 0.52", "1.19564, -22.655, -26.6152, 0.52", "1.19987, -22.6461, -27.195, 0.52", "1.10822, -22.5584, -28.2287, 0.52", "1.03779, -22.4754, -28.6932, 0.52", "0.850072, -22.1233, -29.7577, 0.66", "0.813248, -21.9244, -30.1464, 0.66", "0.889353, -21.2808, -31.2423, 0.29", "1.15715, -20.662, -32.3064, 0.88", "1.62768, -20.2355, -33.1628, 0.37", "2.2464, -19.9393, -33.9564, 0.29", "2.88133, -19.7291, -34.6069, 0.29", "3.3926, -19.5929, -35.0649, 0.29", "3.75835, -19.5154, -35.3409, 0.44", "4.52531, -19.2954, -35.8784, 0.52", "5.25047, -18.9476, -36.3504, 0.15", "5.83946, -18.5355, -36.6803, 0.15", "6.48973, -17.9688, -36.9804, 0.15", "6.95104, -17.4827, -37.1625, 0.15", "7.46664, -16.8145, -37.3906, 0.15", "8.04568, -15.9128, -37.6645, 0.15", "8.67675, -14.8897, -37.9568, 0.29", "9.04995, -14.2694, -38.1398, 0.15", "9.62171, -13.2359, -38.4377, 0.22", "10.3155, -11.8345, -38.8412, 0.07", "10.5822, -11.2449, -39.0204, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.175233, -22.8185, -18.5674, 0.88", "0.610982, -24.0794, -19.5133, 0.88", "0.964417, -25.2265, -20.6158, 0.74", "1.27577, -26.237, -21.587, 0.88", "1.73286, -27.7205, -23.0128, 0.88", "2.10753, -28.9364, -24.1814, 0.96", "2.51684, -30.2649, -25.4582, 0.96", "2.64405, -30.9799, -26.4111, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.4135, -11.119, -14.5815, 0.81", "-11.2865, -11.7578, -14.602, 0.81", "-11.9477, -12.2078, -14.531, 0.44", "-12.4021, -12.4613, -14.4065, 0.44", "-13.0153, -12.7153, -14.147, 0.66", "-13.4504, -12.8486, -13.9257, 0.74", "-14.0716, -12.9929, -13.589, 0.44", "-14.7204, -13.0755, -13.1863, 0.59", "-15.5674, -13.1196, -12.651, 0.59", "-16.407, -13.1077, -12.1384, 0.59", "-17.1164, -13.0705, -11.7116, 0.59", "-17.8861, -13.0398, -11.2597, 0.81", "-18.4266, -13.0536, -10.9603, 0.66", "-18.8411, -13.1126, -10.747, 0.88", "-19.6919, -13.337, -10.3166, 0.37", "-20.1494, -13.4943, -10.0713, 0.44", "-20.7595, -13.7249, -9.71562, 0.59", "-21.4679, -13.9849, -9.27407, 0.44", "-22.1265, -14.1801, -8.85985, 0.44", "-22.7543, -14.2884, -8.50592, 0.44", "-23.3975, -14.3178, -8.20449, 0.66", "-23.9789, -14.2803, -7.9994, 0.81", "-24.4833, -14.2061, -7.86323, 0.81", "-25.289, -14.0702, -7.699, 0.66", "-26.3249, -13.9017, -7.57349, 0.59", "-27.1347, -13.8036, -7.56491, 0.59", "-28.1409, -13.7521, -7.65933, 0.74", "-28.5023, -13.7635, -7.72278, 0.52", "-29.193, -13.8509, -7.88555, 0.22", "-29.8417, -13.9971, -8.07957, 0.22", "-30.4729, -14.171, -8.31032, 0.22", "-30.8847, -14.2843, -8.47257, 0.37", "-31.3628, -14.4097, -8.65927, 0.81", "-31.8274, -14.5231, -8.83084, 0.81", "-32.4585, -14.6518, -9.04208, 0.59", "-33.1989, -14.7858, -9.24847, 0.37", "-33.8086, -14.8764, -9.40187, 0.29", "-34.4264, -14.9416, -9.57284, 0.37", "-34.8368, -14.9616, -9.7172, 0.29", "-35.5067, -14.9663, -9.98691, 0.29", "-36.1396, -14.9501, -10.2591, 0.81", "-36.8066, -14.9244, -10.5613, 0.52", "-37.3761, -14.8899, -10.8476, 0.52", "-38.2361, -14.8152, -11.3121, 0.37", "-38.7268, -14.7512, -11.6073, 0.66", "-39.2321, -14.6649, -11.9545, 0.66", "-39.9751, -14.5151, -12.527, 0.44", "-40.7418, -14.3542, -13.1635, 0.81", "-41.0857, -14.2847, -13.4538, 0.81", "-41.645, -14.1773, -13.948, 0.37", "-42.0525, -14.1168, -14.3648, 0.22", "-42.4215, -14.1291, -14.7997, 0.22", "-42.6674, -14.2255, -15.1605, 0.22", "-42.8468, -14.3667, -15.4579, 0.81", "-42.9727, -14.4903, -15.6764, 1.03", "-43.2616, -14.8278, -16.1948, 0.66", "-43.658, -15.3215, -16.9017, 0.29", "-44.1858, -15.9427, -17.831, 0.29", "-44.4986, -16.2549, -18.3537, 0.22", "-44.7505, -16.4496, -18.756, 0.22", "-44.9078, -16.5366, -18.9924, 0.22", "-45.1833, -16.6105, -19.3688, 0.22", "-45.5046, -16.6159, -19.7674, 0.22", "-45.7668, -16.5837, -20.063, 0.22", "-46.228, -16.525, -20.6078, 0.22", "-46.5015, -16.4816, -20.9364, 0.66", "-47.0117, -16.3817, -21.5624, 0.66", "-47.4878, -16.2811, -22.1715, 0.15", "-47.9337, -16.2116, -22.7499, 0.15", "-48.5199, -16.1527, -23.5215, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.4135, -11.119, -14.5815, 1.55", "-9.95161, -12.1192, -14.9426, 1.55", "-9.63907, -12.9118, -15.2279, 1.4", "-9.42146, -13.6266, -15.4633, 1.33", "-9.2398, -14.4523, -15.6901, 0.96", "-9.13122, -15.1828, -15.844, 0.88", "-9.06685, -15.8807, -15.947, 1.4", "-9.08491, -16.4693, -15.9887, 1.47", "-9.21329, -17.5255, -15.9927, 1.03", "-9.39209, -18.4616, -15.9673, 0.96", "-9.62152, -19.4853, -15.9128, 1.03", "-9.81397, -20.3835, -15.8494, 1.03", "-10.0014, -21.3776, -15.7744, 1.11", "-10.1074, -22.0892, -15.7419, 0.88", "-10.1976, -23.0262, -15.7379, 0.88", "-10.2214, -23.6919, -15.7805, 1.11", "-10.1972, -24.6159, -15.9026, 1.11", "-10.1251, -25.4051, -16.0404, 0.96", "-9.97055, -26.3628, -16.2222, 1.03", "-9.84044, -26.9758, -16.3452, 1.11", "-9.63453, -27.899, -16.4965, 0.96", "-9.50439, -28.5542, -16.5947, 0.88", "-9.45219, -28.8693, -16.6374, 0.81", "-9.35596, -29.5133, -16.718, 0.74", "-9.27055, -30.1614, -16.7971, 0.88", "-9.17839, -31.087, -16.9182, 1.03", "-9.15825, -31.6286, -16.9826, 1.25", "-9.18832, -32.5936, -17.0911, 1.25", "-9.27135, -33.5331, -17.1909, 1.18", "-9.3716, -34.4246, -17.2939, 1.11", "-9.48101, -35.2754, -17.4008, 1.03", "-9.64748, -36.5193, -17.5776, 0.96", "-9.78805, -37.3444, -17.6708, 0.96", "-9.92726, -37.9124, -17.7086, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-10.0099, 54.3972, 22.8271, 0.29", "-11.0057, 55.7291, 23.671, 0.29", "-11.6947, 56.6452, 24.2362, 0.22", "-12.2551, 57.3812, 24.6865, 0.22", "-12.5417, 57.7736, 24.9343, 0.22", "-12.7771, 58.1094, 25.1613, 0.59", "-13.1537, 58.6662, 25.5686, 1.03", "-13.4989, 59.2497, 26.061, 1.33", "-13.981, 60.1649, 26.7968, 0.59", "-14.2922, 60.7986, 27.2718, 0.22", "-14.532, 61.4529, 27.6746, 0.22", "-14.737, 62.3192, 28.1084, 0.22", "-14.8167, 62.9409, 28.3555, 0.74", "-14.8345, 63.841, 28.6125, 1.84", "-14.7958, 64.5926, 28.7582, 1.84", "-14.5754, 66.9488, 29.0136, 0.22", "-14.3893, 68.3297, 29.0712, 0.22", "-14.2469, 69.0859, 29.0851, 0.22", "-13.8893, 70.5933, 29.1555, 0.22", "-13.7816, 70.9677, 29.1857, 0.44", "-13.5211, 71.7386, 29.2738, 1.18", "-13.0844, 72.8796, 29.4594, 1.7", "-12.3389, 74.8188, 29.8417, 0.15", "-11.8857, 76.0624, 30.1195, 0.15", "-11.7537, 76.4698, 30.2329, 0.74", "-11.5237, 77.256, 30.4656, 1.7", "-11.4895, 77.3896, 30.5076, 1.7", "-11.2142, 78.8374, 30.9101, 0.15", "-11.1562, 79.3977, 31.0195, 0.15", "-11.106, 80.3026, 31.1311, 0.15", "-11.0954, 81.151, 31.1883, 0.29", "-11.1115, 81.5333, 31.1933, 0.29", "-11.1988, 82.8236, 31.1509, 0.07", "-11.2452, 83.4129, 31.1089, 0.22", "-11.2826, 83.9794, 31.0409, 0.66", "-11.357, 85.265, 30.8336, 0.96", "-11.3988, 86.3729, 30.633, 0.22", "-11.4085, 87.7283, 30.3663, 0.66", "-11.3838, 88.7777, 30.1811, 0.44", "-11.348, 89.4835, 30.0762, 0.74", "-11.2957, 90.2325, 29.9997, 1.55", "-11.2034, 91.1783, 29.9715, 1.84", "-11.014, 93.1394, 30.1148, 0.22", "-10.9455, 94.201, 30.3361, 0.22", "-10.9367, 94.5607, 30.4614, 0.59", "-10.9637, 95.2759, 30.7998, 1.25", "-11.0418, 96.0637, 31.2297, 1.62", "-11.2727, 97.6106, 32.1433, 0.22", "-11.4133, 98.3908, 32.6203, 0.22", "-11.6511, 99.59, 33.2802, 1.03", "-12.0184, 101.465, 34.1248, 0.15", "-12.2443, 102.675, 34.5233, 0.15", "-12.3471, 103.282, 34.6478, 0.52", "-12.4214, 103.824, 34.6822, 1.03", "-12.5337, 104.922, 34.6206, 1.18", "-12.6666, 106.456, 34.3537, 0.22", "-12.7242, 107.192, 34.1412, 0.22", "-12.803, 107.958, 33.8873, 0.22", "-12.9567, 109.122, 33.4627, 0.22", "-13.0415, 109.646, 33.2526, 0.74", "-13.2377, 110.639, 32.8307, 1.77", "-13.5293, 111.877, 32.2703, 0.22", "-13.7288, 112.657, 31.8756, 0.22", "-13.8979, 113.264, 31.5218, 0.22", "-14.0005, 113.628, 31.2844, 0.22", "-14.2196, 114.469, 30.7464, 0.07", "-14.385, 115.295, 30.2664, 0.07", "-14.4854, 115.891, 29.965, 0.07", "-14.6006, 116.619, 29.6473, 0.37", "-14.7414, 117.459, 29.3481, 1.03", "-14.9901, 118.847, 28.9453, 0.52", "-15.3221, 120.516, 28.5988, 0.15", "-15.4987, 121.355, 28.4924, 0.29", "-15.6322, 121.966, 28.4489, 0.96", "-15.8138, 122.764, 28.4224, 1.11", "-16.0487, 123.719, 28.4181, 0.22", "-16.3511, 124.852, 28.4521, 0.22", "-16.5831, 125.59, 28.5128, 0.37", "-16.8205, 126.287, 28.5814, 0.96", "-17.0569, 126.893, 28.6515, 0.96", "-17.4316, 127.719, 28.7436, 0.15", "-17.9133, 128.65, 28.808, 0.22", "-18.4561, 129.59, 28.8362, 0.37", "-19.0471, 130.524, 28.8453, 0.74", "-19.7944, 131.627, 28.8309, 0.22", "-20.7514, 132.96, 28.776, 0.66", "-21.5454, 134.012, 28.7249, 0.07", "-21.8519, 134.413, 28.7089, 0.07", "-22.2278, 134.93, 28.6787, 0.15", "-22.6407, 135.541, 28.6262, 0.81", "-23.0558, 136.22, 28.5532, 1.25", "-23.6929, 137.346, 28.4317, 0.37", "-24.3649, 138.618, 28.2831, 0.22", "-24.9849, 139.84, 28.1084, 0.37", "-25.5942, 141.083, 27.9045, 0.88", "-25.9106, 141.754, 27.7825, 0.37", "-26.331, 142.671, 27.6125, 0.15", "-26.7262, 143.548, 27.4466, 0.15", "-27.0509, 144.276, 27.3432, 0.37", "-27.4236, 145.107, 27.3136, 0.74", "-27.7572, 145.848, 27.3382, 0.29", "-28.3223, 147.109, 27.4569, 0.15", "-28.5007, 147.519, 27.5264, 0.44", "-28.9285, 148.509, 27.7555, 1.03", "-29.3951, 149.609, 28.0457, 0.44", "-29.8098, 150.571, 28.3292, 0.15", "-30.2812, 151.656, 28.6614, 0.74", "-30.8994, 153.179, 29.106, 0.15", "-31.1472, 153.858, 29.3007, 0.22", "-31.3627, 154.539, 29.4962, 0.81", "-31.497, 155.086, 29.6511, 0.81", "-31.696, 156.053, 29.9193, 0.22", "-31.9409, 157.433, 30.2612, 0.15", "-32.0946, 158.384, 30.4932, 0.22", "-32.1975, 159.074, 30.6606, 0.37", "-32.3832, 160.387, 30.9802, 0.96", "-32.6109, 162.033, 31.3543, 0.15", "-32.7183, 162.79, 31.4999, 0.15", "-32.8222, 163.435, 31.5938, 0.15", "-32.9598, 164.199, 31.6532, 0.66", "-33.0455, 164.652, 31.661, 0.66", "-33.2747, 165.811, 31.6027, 0.07", "-33.458, 166.745, 31.5508, 0.07", "-33.5421, 167.124, 31.5389, 0.44", "-33.6578, 167.6, 31.5343, 0.74", "-33.8031, 168.137, 31.5492, 0.96", "-33.9699, 168.697, 31.5921, 0.96", "-34.4068, 170.057, 31.7577, 0.15", "-34.7312, 171.022, 31.907, 0.15", "-35.1193, 172.138, 32.0732, 0.15", "-35.3263, 172.722, 32.1459, 0.15", "-35.5393, 173.295, 32.1951, 0.15", "-35.7579, 173.831, 32.2094, 0.37", "-36.0071, 174.341, 32.2053, 0.81", "-36.361, 174.937, 32.1952, 1.03", "-36.8902, 175.721, 32.2002, 0.37", "-37.4989, 176.553, 32.2139, 0.15", "-38.2856, 177.554, 32.2551, 0.29", "-39.4375, 178.88, 32.348, 0.29", "-40.3283, 179.819, 32.4412, 0.15", "-40.9318, 180.42, 32.5174, 0.29", "-41.6528, 181.098, 32.6244, 0.88", "-42.5773, 181.926, 32.7741, 0.15", "-43.4642, 182.695, 32.9271, 0.15", "-44.216, 183.336, 33.0411, 0.15", "-45.0568, 184.054, 33.1738, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-10.0099, 54.3972, 22.8271, 0.22", "-9.28552, 55.2598, 23.4553, 0.22", "-8.79846, 55.8654, 23.8187, 0.15", "-8.3366, 56.474, 24.1725, 0.22", "-7.95794, 57.004, 24.4892, 0.15", "-7.64412, 57.4568, 24.7652, 0.37", "-7.48308, 57.7113, 24.9222, 0.37", "-7.05834, 58.4733, 25.394, 0.15", "-6.68641, 59.219, 25.8491, 0.15", "-6.47291, 59.6831, 26.1395, 0.66", "-6.1704, 60.354, 26.5685, 1.03", "-5.75667, 61.266, 27.1809, 0.15", "-5.5395, 61.7283, 27.4949, 0.15", "-5.28169, 62.2571, 27.8516, 0.15", "-4.99207, 62.8229, 28.1978, 0.59", "-4.62231, 63.5371, 28.6045, 0.07", "-4.37249, 64.0313, 28.8657, 0.07", "-4.12525, 64.5174, 29.0926, 0.66", "-4.03109, 64.7198, 29.174, 0.66", "-3.82235, 65.2468, 29.3792, 0.15", "-3.6445, 65.7903, 29.5753, 0.15", "-3.55926, 66.0897, 29.6762, 0.52", "-3.4066, 66.6329, 29.8435, 1.55", "-3.28658, 67.0618, 29.9876, 1.77", "-2.99855, 68.0771, 30.3479, 0.74", "-2.76403, 68.8978, 30.6747, 0.15", "-2.62236, 69.3917, 30.8863, 0.15", "-2.49614, 69.872, 31.1123, 0.22", "-2.38329, 70.4385, 31.4024, 0.22", "-2.29826, 71.0058, 31.7165, 0.37", "-2.22996, 71.6545, 32.0977, 0.52", "-2.2014, 72.0576, 32.3493, 1.47", "-2.17597, 72.602, 32.7318, 2.06", "-2.12448, 73.6986, 33.5528, 0.29", "-2.09629, 74.1632, 33.9064, 0.29", "-2.04419, 74.9235, 34.5045, 0.74", "-1.9784, 75.6033, 35.0225, 0.22", "-1.83621, 76.5905, 35.7561, 0.29", "-1.75894, 76.9898, 36.038, 0.52", "-1.69269, 77.2733, 36.2217, 0.22", "-1.53963, 77.9679, 36.5711, 0.22", "-1.40523, 78.6398, 36.8432, 0.22", "-1.24896, 79.4744, 37.118, 0.22", "-1.18865, 79.8458, 37.2143, 0.44", "-1.10004, 80.5204, 37.3773, 1.25", "-0.927313, 82.0752, 37.7417, 0.07", "-0.846312, 82.9419, 37.9298, 0.07", "-0.820355, 83.323, 38.0092, 0.22", "-0.790563, 83.8922, 38.1173, 0.96", "-0.770819, 84.47, 38.2241, 0.29", "-0.747742, 85.4247, 38.3909, 0.07", "-0.738905, 85.9943, 38.4954, 0.07", "-0.73313, 86.3203, 38.5376, 0.15", "-0.719974, 86.907, 38.5912, 1.25", "-0.651744, 88.9661, 38.7202, 0.15", "-0.639457, 89.2889, 38.7332, 0.44", "-0.612674, 89.9192, 38.743, 0.96", "-0.56747, 90.9866, 38.7653, 1.18", "-0.508133, 92.4, 38.8012, 0.07", "-0.486538, 92.8837, 38.8138, 0.22", "-0.443844, 93.6074, 38.8452, 0.88", "-0.407443, 94.1902, 38.8842, 0.44", "-0.353848, 94.9103, 38.9527, 0.15", "-0.306757, 95.5425, 39.0376, 0.15", "-0.277683, 95.9374, 39.088, 0.37", "-0.214249, 96.9456, 39.1975, 1.55", "-0.119236, 98.5736, 39.3525, 0.07", "-0.0822294, 99.3061, 39.4118, 0.07", "-0.0567846, 99.8364, 39.4424, 0.37", "-0.041636, 100.238, 39.4688, 0.37", "-0.0151866, 101.173, 39.5268, 0.07", "-0.0131877, 101.41, 39.5395, 0.29", "-0.0179801, 102.059, 39.5825, 1.18", "-0.0163863, 103.541, 39.6754, 0.07", "0.0173375, 104.508, 39.7255, 0.07", "0.0402591, 104.832, 39.7389, 0.07", "0.0819323, 105.242, 39.7423, 0.37", "0.150461, 105.817, 39.7323, 0.96", "0.261639, 106.649, 39.685, 0.07", "0.372541, 107.402, 39.5853, 0.29", "0.554288, 108.582, 39.3306, 0.07", "0.742686, 109.751, 39.0242, 0.07", "0.770994, 109.911, 38.9715, 0.44", "0.942878, 110.696, 38.6202, 1.18", "1.20427, 111.617, 38.0601, 0.15", "1.38373, 112.112, 37.6588, 0.15", "1.50775, 112.376, 37.3675, 0.59", "1.66078, 112.633, 36.998, 0.59", "2.01027, 113.185, 36.1034, 0.22", "2.20581, 113.456, 35.6012, 0.22", "2.37871, 113.682, 35.1787, 0.22", "2.5087, 113.855, 34.8639, 0.22", "2.75377, 114.207, 34.2411, 0.37", "2.94243, 114.519, 33.7193, 1.03", "3.14771, 114.902, 33.1163, 0.74", "3.37341, 115.286, 32.5009, 0.22", "3.68611, 115.755, 31.7891, 0.22", "3.7777, 115.883, 31.6014, 0.22", "3.99036, 116.163, 31.1775, 0.22", "4.15571, 116.374, 30.8393, 0.22", "4.39561, 116.702, 30.3161, 0.22", "4.60707, 117.005, 29.8175, 0.88", "4.97451, 117.529, 28.9305, 0.15", "5.28054, 117.962, 28.1714, 0.15", "5.55246, 118.366, 27.4949, 0.15", "5.84812, 118.844, 26.742, 0.74", "6.18944, 119.417, 25.8594, 0.44", "6.45671, 119.862, 25.1822, 0.44", "6.68495, 120.226, 24.6618, 0.44", "6.91794, 120.62, 24.1382, 0.74", "7.18853, 121.157, 23.4644, 0.22", "7.30571, 121.465, 23.0937, 0.22", "7.37462, 121.741, 22.7712, 0.44", "7.42806, 122.104, 22.3569, 0.44", "7.46847, 122.588, 21.8081, 0.22", "7.48735, 123.142, 21.2395, 0.29", "7.48518, 123.739, 20.7408, 0.22", "7.48044, 124.298, 20.3673, 0.22", "7.4852, 124.645, 20.1845, 0.66", "7.52796, 125.439, 19.8925, 0.96", "7.65306, 126.735, 19.5919, 0.22", "7.73677, 127.496, 19.5005, 0.37", "7.78385, 128.035, 19.4966, 0.07", "7.81712, 128.605, 19.56, 0.07", "7.842, 129.182, 19.6727, 0.07", "7.8508, 129.595, 19.7892, 0.29", "7.8506, 130.038, 19.9412, 0.66", "7.84234, 130.651, 20.1697, 0.88", "7.82198, 131.699, 20.5781, 0.15", "7.81805, 132.236, 20.7834, 0.15", "7.83831, 132.61, 20.935, 0.22", "7.89463, 132.95, 21.0797, 0.22", "8.06275, 133.529, 21.3402, 0.22", "8.25619, 134.033, 21.5747, 0.22", "8.46416, 134.489, 21.7885, 0.81", "8.98077, 135.568, 22.2996, 0.22", "9.42194, 136.41, 22.7163, 0.22", "9.86765, 137.199, 23.127, 0.22", "10.0423, 137.488, 23.2849, 0.37", "10.3169, 137.916, 23.5397, 0.96", "10.9915, 138.947, 24.2227, 0.15", "11.3735, 139.528, 24.6495, 0.15", "11.5436, 139.805, 24.87, 0.15", "11.7249, 140.115, 25.1293, 0.15", "12.018, 140.6, 25.5682, 0.15", "12.1817, 140.857, 25.8355, 0.29", "12.4287, 141.223, 26.2762, 0.66", "12.5396, 141.385, 26.4782, 0.66", "12.9433, 141.966, 27.191, 0.15", "13.1689, 142.29, 27.5639, 0.22", "13.6213, 142.936, 28.3026, 0.15", "13.9051, 143.318, 28.731, 0.15", "14.2931, 143.819, 29.2978, 0.15", "14.5194, 144.104, 29.6099, 0.29", "14.9433, 144.631, 30.1645, 0.15", "15.1898, 144.946, 30.4662, 0.15", "15.4496, 145.281, 30.7407, 0.37", "15.8804, 145.853, 31.1606, 0.15", "16.1501, 146.237, 31.4458, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-157.567, -381.936, -3.26926, 0.07", "-157.184, -381.545, -3.20497, 0.07", "-156.608, -380.914, -3.18912, 0.29", "-156.141, -380.397, -3.22794, 0.07", "-155.654, -379.874, -3.35037, 0.07", "-155.094, -379.292, -3.57728, 0.15", "-154.689, -378.874, -3.77358, 0.15", "-154.412, -378.599, -3.95457, 0.15", "-154.041, -378.219, -4.29496, 0.29", "-153.604, -377.776, -4.7857, 0.07", "-153.311, -377.48, -5.15998, 0.29", "-153.042, -377.25, -5.48063, 0.44", "-152.916, -377.164, -5.61815, 0.44", "-152.399, -376.864, -6.18813, 0.15", "-152.02, -376.645, -6.62545, 0.15", "-151.872, -376.56, -6.79048, 0.15", "-151.302, -376.249, -7.44265, 0.15", "-151.051, -376.124, -7.75202, 0.37", "-150.42, -375.813, -8.60329, 0.22", "-150.111, -375.66, -9.03593, 0.22", "-149.94, -375.564, -9.28527, 0.22", "-149.576, -375.319, -9.83391, 0.15", "-149.17, -375.019, -10.4304, 0.15", "-148.795, -374.765, -10.9193, 0.15", "-148.532, -374.61, -11.1955, 0.37", "-148.075, -374.371, -11.5413, 0.44", "-147.604, -374.114, -11.8177, 0.22", "-147.093, -373.833, -12.0441, 0.37", "-146.772, -373.657, -12.1432, 0.37", "-146.071, -373.294, -12.2941, 0.22", "-145.115, -372.823, -12.4648, 0.22", "-144.159, -372.43, -12.5695, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-157.567, -381.936, -3.26926, 0.15", "-157.792, -382.516, -3.33886, 0.15", "-158.006, -383.182, -3.35902, 0.29", "-158.214, -383.855, -3.34369, 0.15", "-158.445, -384.486, -3.31423, 0.15", "-158.649, -385.002, -3.28564, 0.15", "-158.769, -385.297, -3.26905, 0.15", "-159.036, -385.924, -3.20907, 0.29", "-159.315, -386.616, -3.1407, 0.81", "-159.601, -387.508, -3.06015, 0.15", "-159.771, -388.213, -3.0039, 0.22", "-159.885, -388.933, -2.95254, 0.07", "-159.915, -389.693, -2.88034, 0.07", "-159.855, -390.431, -2.7727, 0.37", "-159.608, -391.5, -2.54158, 0.15", "-159.392, -392.113, -2.36605, 0.15", "-159.209, -392.547, -2.21805, 0.37", "-158.736, -393.607, -1.80128, 0.15", "-158.466, -394.25, -1.53199, 0.15", "-158.301, -394.746, -1.31962, 0.15", "-158.254, -395.003, -1.21712, 0.15", "-158.213, -395.656, -0.993451, 0.37", "-158.246, -396.447, -0.785249, 0.07", "-158.352, -397.068, -0.683939, 0.07", "-158.492, -397.608, -0.626187, 0.22", "-158.755, -398.475, -0.541478, 0.07", "-158.868, -398.819, -0.514103, 0.07", "-159.116, -399.468, -0.470003, 0.52", "-159.595, -400.564, -0.430377, 0.07", "-159.809, -400.997, -0.416, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.64405, -30.9799, -26.4111, 0.44", "2.65854, -31.1517, -26.6677, 0.44", "2.6852, -31.7509, -27.6876, 0.44", "2.69617, -32.0489, -28.2798, 0.44", "2.72946, -32.4158, -29.0952, 0.44", "2.74828, -32.5724, -29.471, 0.44", "2.761, -32.7284, -29.8487, 0.44", "2.75624, -32.8591, -30.1711, 0.44", "2.73951, -32.9969, -30.5276, 0.44", "2.71105, -33.1912, -31.0368, 0.44", "2.68587, -33.4612, -31.7287, 0.44", "2.69023, -33.6976, -32.2859, 0.44", "2.71948, -34.0385, -33.0346, 0.44", "2.77935, -34.4644, -33.9248, 0.44", "2.81283, -34.6041, -34.2135, 0.29", "2.93035, -34.9505, -34.9695, 0.22", "3.04141, -35.179, -35.4941, 0.22", "3.13929, -35.3358, -35.8783, 0.22", "3.1983, -35.4212, -36.0857, 0.22", "3.30188, -35.5908, -36.437, 0.29", "3.47339, -35.8783, -36.9943, 0.29", "3.58369, -36.0628, -37.332, 0.29", "3.71077, -36.2333, -37.7062, 0.29", "3.79067, -36.2993, -37.8984, 0.29", "3.9405, -36.3855, -38.1825, 0.29", "4.201, -36.5278, -38.5981, 0.29", "4.56363, -36.7234, -39.0586, 0.22", "5.07963, -37.0236, -39.6492, 0.37", "5.36427, -37.2114, -39.9742, 0.37", "5.57893, -37.3843, -40.2631, 0.22", "5.86556, -37.683, -40.74, 0.22", "6.00699, -37.8966, -41.0437, 0.22", "6.11645, -38.1431, -41.3474, 0.29", "6.21565, -38.4992, -41.7467, 0.29", "6.24853, -38.9123, -42.2234, 0.29", "6.21026, -39.1555, -42.5289, 0.29", "6.14177, -39.3509, -42.7984, 0.29", "6.0649, -39.5058, -43.024, 0.22", "5.89502, -39.7805, -43.4355, 0.22", "5.63203, -40.1786, -43.987, 0.22", "5.53907, -40.3625, -44.2313, 0.22", "5.48517, -40.6253, -44.5624, 0.22", "5.49627, -40.8967, -44.8953, 0.29", "5.52447, -41.0669, -45.0938, 0.29", "5.55438, -41.2186, -45.2508, 0.29", "5.59658, -41.6321, -45.6198, 0.29", "5.58567, -42.1281, -46.0262, 0.22", "5.53552, -42.5556, -46.3579, 0.22", "5.46882, -42.9677, -46.6881, 0.22", "5.42313, -43.3163, -47.0024, 0.22", "5.3314, -43.8617, -47.515, 0.22", "5.28425, -44.0597, -47.7048, 0.22", "5.21575, -44.2803, -47.9508, 0.22", "5.14709, -44.6084, -48.4019, 0.44", "5.25659, -44.8832, -49.0457, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.64405, -30.9799, -26.4111, 0.52", "3.53042, -31.9896, -27.0041, 0.52", "4.1419, -32.8711, -27.5167, 0.52", "4.57188, -33.6569, -27.965, 0.59", "4.79862, -34.1749, -28.2381, 0.96", "4.95006, -34.6356, -28.4536, 0.96", "5.24937, -35.934, -28.9657, 0.81", "5.32905, -36.9914, -29.2869, 0.52", "5.33052, -38.0501, -29.533, 0.52", "5.30153, -38.9265, -29.7301, 0.74", "5.26704, -40.0447, -30.0017, 0.74", "5.24643, -41.2582, -30.3636, 0.66", "5.26152, -42.0116, -30.6313, 0.52", "5.36087, -42.8624, -30.9965, 0.37", "5.52562, -43.6984, -31.4665, 0.66", "5.70472, -44.4442, -31.9615, 0.88", "5.87985, -45.187, -32.5079, 0.88", "5.9686, -45.7316, -32.9261, 0.66", "6.01304, -46.5019, -33.4857, 0.52", "5.99835, -47.3138, -34.0052, 0.52", "5.96723, -48.1509, -34.4607, 0.59", "5.9193, -48.9481, -34.8636, 0.59", "5.83963, -49.8826, -35.341, 0.59", "5.75671, -50.6015, -35.7387, 0.59", "5.67236, -51.1762, -36.0567, 0.66", "5.53259, -52.0353, -36.4957, 0.59", "5.3904, -52.9201, -36.9188, 0.52", "5.2424, -53.9271, -37.3349, 0.81", "5.09473, -54.9717, -37.6743, 1.03", "4.92426, -56.0732, -37.917, 0.59", "4.742, -57.1983, -38.034, 0.44", "4.64953, -57.8498, -38.0174, 0.59", "4.55963, -58.6794, -37.9206, 0.59", "4.51248, -59.4467, -37.7574, 0.52", "4.51066, -60.4151, -37.4664, 0.52", "4.56712, -61.1724, -37.1933, 0.66", "4.63278, -61.6519, -36.9848, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.92726, -37.9124, -17.7086, 0.59", "-10.4494, -38.2259, -17.2742, 0.59", "-11.6683, -39.0762, -16.2061, 0.52", "-12.2913, -39.5753, -15.6746, 0.52", "-12.8207, -40.0558, -15.2405, 0.52", "-13.379, -40.6235, -14.7809, 0.52", "-14.0725, -41.3819, -14.242, 0.66", "-14.5859, -42.07, -13.8595, 0.81", "-15.2113, -43.1143, -13.4469, 0.52", "-15.5663, -43.8341, -13.218, 0.52", "-15.9209, -44.7485, -12.9866, 0.74", "-16.1873, -45.69, -12.8098, 0.44", "-16.3962, -46.7788, -12.6945, 0.59", "-16.5281, -47.6934, -12.6242, 0.81", "-16.6497, -48.6089, -12.5424, 0.66", "-16.8309, -49.8288, -12.4283, 0.59", "-17.0387, -50.9979, -12.3367, 0.52", "-17.4114, -52.6334, -12.2247, 0.44", "-17.8063, -53.8792, -12.1542, 0.52", "-18.2516, -54.9492, -12.1107, 0.44", "-18.6038, -55.6605, -12.0954, 0.44", "-19.0426, -56.4842, -12.0846, 0.37", "-19.5453, -57.4817, -12.0387, 0.22", "-19.8793, -58.2729, -11.9723, 0.59", "-20.1005, -58.9951, -11.8964, 0.88", "-20.3579, -60.1962, -11.7394, 0.59", "-20.5337, -61.2288, -11.5629, 0.44", "-20.7107, -62.3208, -11.3282, 0.59", "-20.8435, -63.1018, -11.1172, 0.52", "-21.0032, -64.0236, -10.8353, 0.29", "-21.1751, -64.9525, -10.4939, 0.29", "-21.4738, -66.268, -9.90113, 0.37", "-21.8167, -67.4214, -9.27462, 0.29", "-22.1092, -68.1979, -8.77874, 0.29", "-22.3125, -68.6758, -8.42704, 0.52", "-22.575, -69.2572, -7.95281, 0.37", "-22.9502, -70.0848, -7.26011, 0.29", "-23.4274, -71.0451, -6.49069, 0.37", "-23.8988, -71.8993, -5.88067, 0.66", "-24.3614, -72.6787, -5.38833, 1.03", "-25.1101, -73.8927, -4.6675, 0.81", "-25.7034, -74.8573, -4.13008, 1.25", "-26.376, -76.0411, -3.52608, 0.96", "-26.9978, -77.2256, -2.97938, 0.37", "-27.5915, -78.4234, -2.50506, 0.44", "-28.0774, -79.4159, -2.17506, 0.44", "-28.4571, -80.2063, -1.97569, 0.59", "-29.0313, -81.4218, -1.77522, 0.96", "-29.4161, -82.2464, -1.76006, 0.37", "-29.9032, -83.218, -1.91424, 0.22", "-30.2655, -83.8913, -2.10981, 0.22", "-30.5759, -84.4632, -2.31169, 0.66", "-30.9999, -85.2958, -2.60545, 0.74", "-31.4836, -86.3467, -2.9341, 0.37", "-31.8903, -87.4593, -3.17542, 0.44", "-32.1358, -88.4007, -3.26812, 0.37", "-32.2864, -89.3137, -3.27885, 0.22", "-32.3392, -90.1457, -3.22586, 0.22", "-32.3247, -90.6862, -3.1553, 0.59", "-32.268, -91.4229, -3.02296, 0.88", "-32.2142, -92.4216, -2.83157, 0.29", "-32.2209, -92.9323, -2.7414, 0.22", "-32.3312, -93.8408, -2.59204, 0.52", "-32.5837, -94.9741, -2.42207, 0.22", "-32.7409, -95.5219, -2.34603, 0.22", "-33.0509, -96.5389, -2.2089, 0.29", "-33.2077, -97.1056, -2.11393, 0.29", "-33.4319, -97.9792, -1.92154, 0.22", "-33.5281, -98.3862, -1.81382, 0.74", "-33.6531, -99.0049, -1.63561, 0.96", "-33.8509, -99.9977, -1.32922, 0.59", "-34.094, -101.179, -0.920569, 0.15", "-34.2899, -101.926, -0.622482, 0.15", "-34.4284, -102.342, -0.44948, 0.59", "-34.8702, -103.384, -0.00183892, 0.96", "-35.4848, -104.537, 0.499526, 0.22", "-35.9129, -105.172, 0.772389, 0.15", "-36.666, -106.113, 1.15427, 0.15", "-36.9843, -106.481, 1.31257, 0.66", "-37.2605, -106.776, 1.46064, 0.96", "-37.5944, -107.115, 1.64415, 1.11", "-38.294, -107.814, 1.98247, 0.52", "-39.0212, -108.549, 2.31414, 0.15", "-39.7144, -109.286, 2.66432, 0.15", "-40.0929, -109.704, 2.89088, 0.15", "-40.4313, -110.1, 3.11721, 0.59", "-41.0783, -110.892, 3.58403, 0.96", "-41.9593, -112.03, 4.2429, 0.22", "-42.5872, -112.875, 4.75755, 0.22", "-43.0456, -113.501, 5.17652, 0.22", "-43.3825, -113.977, 5.52934, 0.59", "-43.8553, -114.662, 6.13451, 1.11", "-44.204, -115.2, 6.71872, 0.44", "-44.6502, -115.909, 7.66551, 0.22", "-44.9276, -116.363, 8.36162, 0.22", "-44.997, -116.492, 8.57512, 0.22", "-45.1299, -116.734, 9.0079, 0.22", "-45.3684, -117.118, 9.69794, 0.22", "-45.6168, -117.428, 10.249, 0.22", "-45.8526, -117.635, 10.6284, 0.44", "-46.3362, -117.988, 11.2757, 0.81", "-47.0492, -118.478, 12.1556, 0.81", "-47.7176, -118.937, 12.9397, 0.66", "-48.2809, -119.337, 13.5914, 0.66", "-49.4512, -120.172, 14.9136, 0.22", "-50.1668, -120.67, 15.7038, 0.22", "-50.5678, -120.948, 16.1353, 0.66", "-51.0072, -121.276, 16.5796, 0.74", "-51.953, -122.097, 17.4724, 0.22", "-52.6949, -122.84, 18.1275, 0.15", "-53.3973, -123.629, 18.6952, 0.15", "-54.1306, -124.488, 19.261, 0.15", "-54.7573, -125.247, 19.705, 1.18", "-55.5022, -126.173, 20.183, 0.07", "-56.1599, -127.087, 20.5224, 0.07", "-56.5609, -127.72, 20.6766, 0.07", "-56.7981, -128.082, 20.7433, 0.07", "-57.3121, -128.753, 20.884, 0.96", "-58.3732, -129.936, 21.1949, 0.07", "-59.2355, -130.823, 21.4267, 0.07", "-59.8071, -131.385, 21.5752, 0.66", "-61.6653, -133.151, 22.0524, 0.07", "-62.6417, -134.067, 22.3314, 0.07", "-63.5869, -134.945, 22.632, 0.07", "-64.4318, -135.689, 22.9513, 0.07", "-65.3582, -136.433, 23.3849, 0.07", "-65.9865, -136.911, 23.7021, 0.07", "-66.9384, -137.573, 24.2076, 0.07", "-68.1183, -138.313, 24.8343, 0.15", "-70.1596, -139.467, 25.9671, 0.07", "-71.7129, -140.251, 26.8485, 0.07", "-72.5323, -140.632, 27.3178, 0.07", "-73.6526, -141.097, 27.9797, 0.07", "-74.2353, -141.299, 28.3143, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.92726, -37.9124, -17.7086, 0.66", "-9.9735, -38.806, -18.0485, 0.66", "-10.0634, -39.7634, -18.3455, 0.66", "-10.1264, -40.4406, -18.512, 0.66", "-10.1671, -40.9395, -18.6148, 0.66", "-10.2312, -41.9359, -18.7889, 0.59", "-10.264, -42.8413, -18.8993, 0.66", "-10.2695, -43.5802, -18.9134, 0.88", "-10.2232, -44.4653, -18.8087, 0.59", "-10.097, -45.429, -18.5396, 0.59", "-9.96838, -45.9993, -18.2852, 0.59", "-9.71758, -46.7881, -17.7935, 0.81", "-9.48533, -47.4775, -17.284, 0.81", "-9.25216, -48.2055, -16.7094, 0.88", "-9.01304, -49.1156, -15.975, 0.88", "-8.86249, -49.9683, -15.3275, 0.74", "-8.80777, -50.9231, -14.7301, 0.74", "-8.87613, -51.9983, -14.2599, 0.74", "-8.9764, -52.6128, -14.0755, 0.81", "-9.14774, -53.3918, -13.9252, 0.81", "-9.39513, -54.4452, -13.8189, 0.74", "-9.62324, -55.5459, -13.8142, 0.74", "-9.76417, -56.5338, -13.8728, 0.74", "-9.807, -57.3216, -13.9387, 0.81", "-9.78812, -58.0306, -13.9864, 0.81", "-9.66124, -59.1795, -14.0347, 0.59", "-9.40607, -60.5522, -14.031, 0.81", "-9.17204, -61.4831, -13.9876, 0.66", "-8.85569, -62.6029, -13.8979, 0.59", "-8.61819, -63.4269, -13.8344, 0.59", "-8.4466, -64.0444, -13.7744, 0.52", "-8.19362, -65.0417, -13.6735, 0.88", "-8.00155, -65.992, -13.5917, 0.88", "-7.82856, -67.1368, -13.5632, 0.81", "-7.71584, -68.2845, -13.6018, 0.81", "-7.68827, -68.8603, -13.6468, 0.88", "-7.68726, -70.0303, -13.7782, 0.81", "-7.73565, -71.0841, -13.9049, 0.81", "-7.81574, -71.9112, -13.985, 0.96", "-7.97956, -73.0003, -14.0323, 0.74", "-8.11715, -73.6384, -14.0141, 0.74", "-8.36505, -74.5027, -13.9247, 0.44", "-8.60005, -75.1716, -13.7857, 0.66", "-8.92821, -75.9654, -13.574, 0.59", "-9.25502, -76.6095, -13.4007, 0.59", "-9.61459, -77.157, -13.2508, 0.96", "-10.3094, -78.0077, -13.0199, 0.52", "-10.9284, -78.6842, -12.8538, 0.52", "-11.3379, -79.1391, -12.7795, 0.52", "-11.8764, -79.7846, -12.7041, 0.52", "-12.3814, -80.5085, -12.6556, 0.59", "-12.8974, -81.4878, -12.611, 0.52", "-13.1859, -82.3185, -12.5901, 0.66", "-13.401, -83.3471, -12.5826, 0.74", "-13.4983, -84.1586, -12.5818, 1.03", "-13.5366, -85.0566, -12.6067, 1.03", "-13.5242, -86.1356, -12.6664, 0.96", "-13.4645, -87.0308, -12.7441, 0.66", "-13.3685, -88.069, -12.8358, 0.52", "-13.2363, -89.1865, -12.9543, 0.59", "-13.1004, -90.1534, -13.0981, 0.44", "-12.9997, -90.7755, -13.2189, 0.88", "-12.8103, -91.7675, -13.4689, 0.59", "-12.6178, -92.5715, -13.7086, 0.59", "-12.3369, -93.494, -14.0304, 0.66", "-12.1705, -94.0348, -14.2505, 0.66", "-12.0353, -94.5806, -14.4906, 0.96", "-11.9345, -95.2094, -14.7746, 0.96", "-11.889, -96.1535, -15.1618, 0.44", "-11.9288, -96.9461, -15.4413, 0.44", "-12.0559, -97.895, -15.6979, 0.44", "-12.1888, -98.5851, -15.8232, 0.88", "-12.4499, -99.6535, -15.9128, 0.66", "-12.7513, -100.744, -15.8987, 0.52", "-12.9841, -101.655, -15.8002, 0.74", "-13.0952, -102.263, -15.6688, 0.74", "-13.1447, -102.91, -15.4565, 0.74", "-13.1249, -103.668, -15.118, 0.59", "-13.054, -104.229, -14.8148, 0.81", "-12.8705, -105.275, -14.2117, 0.88", "-12.7083, -106.264, -13.6605, 0.59", "-12.6174, -107.078, -13.2506, 0.66", "-12.5744, -108.089, -12.8168, 0.66", "-12.5933, -108.512, -12.6717, 0.66", "-12.7115, -109.495, -12.4189, 0.52", "-12.8928, -110.589, -12.2258, 0.52", "-13.0339, -111.628, -12.1134, 0.74", "-13.0782, -112.347, -12.076, 0.96", "-13.041, -113.47, -12.046, 1.18", "-12.9232, -114.426, -12.0082, 0.66", "-12.7842, -115.125, -11.9738, 0.66", "-12.5411, -116.245, -11.9217, 0.59", "-12.3369, -117.377, -11.8942, 0.81", "-12.2126, -118.583, -11.9116, 0.66", "-12.2161, -119.734, -11.9735, 0.66", "-12.3224, -120.573, -12.052, 0.66", "-12.5818, -121.618, -12.1846, 0.59", "-12.9851, -122.657, -12.3517, 0.52", "-13.4658, -123.654, -12.5211, 0.44", "-13.7543, -124.218, -12.6075, 0.44", "-13.9688, -124.67, -12.6595, 0.44", "-14.1093, -125.036, -12.6824, 0.44", "-14.3374, -125.807, -12.6735, 0.44", "-14.5869, -126.878, -12.6058, 0.52", "-14.8154, -128.022, -12.4846, 0.52", "-14.9896, -128.939, -12.3753, 0.59", "-15.1534, -129.734, -12.2644, 0.44", "-15.3231, -130.45, -12.1475, 0.44", "-15.595, -131.443, -11.9488, 0.66", "-15.8433, -132.213, -11.7627, 0.66", "-16.1276, -133.033, -11.5235, 0.74", "-16.4851, -134.101, -11.1353, 0.52", "-16.6973, -134.844, -10.7979, 0.52", "-16.8405, -135.622, -10.3733, 0.66", "-16.8752, -136.381, -9.91117, 0.59", "-16.7974, -137.051, -9.50866, 0.44", "-16.6083, -137.765, -9.11825, 0.44", "-16.3123, -138.607, -8.73857, 0.44", "-16.0083, -139.438, -8.42634, 0.52", "-15.658, -140.535, -8.10322, 0.88", "-15.4858, -141.394, -7.9161, 0.96", "-15.4557, -142.292, -7.771, 0.74", "-15.5684, -143.278, -7.63096, 0.44", "-15.6915, -143.815, -7.55945, 0.74", "-15.8877, -144.467, -7.44488, 1.03", "-16.1513, -145.27, -7.24547, 0.44", "-16.3678, -146.065, -7.0269, 0.37", "-16.4299, -146.6, -6.85794, 0.37", "-16.3939, -147.074, -6.70175, 0.74", "-16.2489, -147.825, -6.42309, 1.11", "-16.0751, -148.461, -6.15946, 0.74", "-15.8154, -149.315, -5.78716, 0.59", "-15.5163, -150.44, -5.28465, 0.52", "-15.3903, -151.201, -4.93233, 0.29", "-15.3433, -151.908, -4.58869, 0.29", "-15.355, -152.391, -4.35793, 0.81", "-15.4002, -153.121, -4.04529, 1.11", "-15.481, -154.226, -3.66064, 0.52", "-15.5194, -155.269, -3.39226, 0.44", "-15.492, -155.992, -3.24214, 0.88", "-15.3685, -156.874, -3.10687, 0.88", "-15.0934, -157.967, -2.97105, 0.66", "-14.7872, -158.786, -2.87142, 0.37", "-14.3794, -159.626, -2.77031, 0.29", "-14.0923, -160.164, -2.70574, 0.29", "-13.899, -160.538, -2.65225, 0.74", "-13.6721, -161.054, -2.55321, 1.03", "-13.4487, -161.831, -2.37458, 0.29", "-13.3522, -162.591, -2.23159, 0.22", "-13.349, -163.095, -2.18529, 0.22", "-13.3629, -163.506, -2.17557, 0.44", "-13.3763, -164.226, -2.17945, 0.66", "-13.3537, -164.946, -2.19766, 0.29", "-13.2804, -165.543, -2.21922, 0.29", "-13.1728, -166.027, -2.20676, 0.29", "-12.9767, -166.681, -2.13908, 0.66", "-12.7415, -167.442, -2.00143, 0.37", "-12.5746, -167.991, -1.8712, 0.44", "-12.4283, -168.589, -1.69568, 0.37", "-12.3321, -169.201, -1.46796, 0.37", "-12.2857, -169.8, -1.19017, 0.74", "-12.2602, -170.617, -0.744055, 1.11", "-12.2408, -171.103, -0.431927, 1.11", "-12.1769, -171.851, 0.147154, 0.66", "-12.0541, -172.649, 0.878662, 0.44", "-11.9084, -173.277, 1.51235, 0.44", "-11.742, -173.852, 2.13054, 0.29", "-11.5594, -174.432, 2.75986, 0.29", "-11.4276, -174.919, 3.24207, 0.29", "-11.357, -175.252, 3.48478, 0.29", "-11.3264, -175.811, 3.67894, 0.59", "-11.3636, -176.393, 3.74464, 0.96", "-11.4466, -177.106, 3.77392, 0.96", "-11.5409, -177.893, 3.80461, 0.44", "-11.6299, -178.961, 3.86798, 0.29", "-11.6482, -179.662, 3.94464, 0.29", "-11.6222, -180.379, 4.07058, 0.66", "-11.5457, -181.135, 4.23697, 0.44", "-11.456, -181.851, 4.40092, 0.29", "-11.38, -182.434, 4.51892, 0.44", "-11.3034, -183.058, 4.64145, 1.25", "-11.2221, -183.689, 4.74061, 1.25", "-11.1084, -184.537, 4.85856, 1.03", "-10.9827, -185.499, 4.97057, 0.52", "-10.8717, -186.46, 5.0842, 0.29", "-10.7849, -187.313, 5.20075, 0.29", "-10.7455, -187.802, 5.27958, 0.29", "-10.7154, -188.41, 5.3912, 0.37", "-10.7295, -188.856, 5.47256, 0.29", "-10.7844, -189.279, 5.52338, 0.29", "-10.8712, -189.665, 5.52034, 0.52", "-11.0315, -190.274, 5.44218, 1.18", "-11.1618, -190.787, 5.34665, 1.18", "-11.3732, -191.852, 5.10167, 0.81", "-11.4298, -192.632, 4.89299, 0.29", "-11.3847, -193.172, 4.74163, 0.29", "-11.2932, -193.572, 4.63763, 0.52", "-11.0966, -194.136, 4.52387, 0.88", "-10.8142, -194.853, 4.44529, 0.29", "-10.5148, -195.617, 4.46345, 0.22", "-10.3574, -196.171, 4.56996, 0.22", "-10.2882, -196.616, 4.70617, 0.44", "-10.2704, -197.173, 4.94243, 0.59", "-10.338, -198.007, 5.35802, 0.29", "-10.4382, -198.639, 5.69817, 0.81", "-10.5662, -199.313, 6.05983, 0.81", "-10.642, -199.761, 6.27866, 0.81", "-10.7549, -200.665, 6.66165, 0.29", "-10.8119, -201.312, 6.87355, 0.29", "-10.8474, -201.818, 7.00488, 0.88", "-10.9045, -202.515, 7.12819, 1.18", "-10.9934, -203.338, 7.24154, 0.52", "-11.0525, -203.854, 7.30765, 0.37", "-11.1167, -204.626, 7.39779, 0.22", "-11.1312, -205.125, 7.47644, 0.44", "-11.1025, -205.796, 7.6107, 0.96", "-10.9863, -206.677, 7.79442, 0.22", "-10.8721, -207.199, 7.9004, 0.22", "-10.7092, -207.805, 8.0051, 0.37", "-10.5794, -208.276, 8.06284, 0.37", "-10.3991, -209.026, 8.08436, 0.22", "-10.2745, -209.714, 8.053, 0.22", "-10.2105, -210.317, 7.99627, 0.81", "-10.1721, -211.093, 7.92153, 0.88", "-10.1554, -211.94, 7.86441, 0.29", "-10.1387, -212.774, 7.85917, 0.22", "-10.1136, -213.442, 7.89769, 0.22", "-10.0627, -214.182, 7.98728, 0.96", "-9.98016, -214.9, 8.07894, 0.81", "-9.85732, -215.675, 8.18568, 0.37", "-9.6742, -216.673, 8.32328, 0.22", "-9.52826, -217.49, 8.40912, 0.22", "-9.37629, -218.344, 8.43393, 0.22", "-9.22786, -219.153, 8.39926, 0.22", "-9.16546, -219.474, 8.37806, 0.59", "-9.04413, -220.065, 8.33542, 1.03", "-8.84922, -221.003, 8.27246, 0.37", "-8.69261, -221.793, 8.25865, 0.22", "-8.61734, -222.282, 8.30444, 0.22", "-8.56459, -223.111, 8.51846, 0.22", "-8.57495, -223.634, 8.71256, 0.22", "-8.61501, -224.037, 8.91166, 0.22", "-8.67086, -224.462, 9.15121, 0.37", "-8.75088, -225.09, 9.50662, 0.22", "-8.79294, -225.53, 9.74592, 0.22", "-8.80534, -225.877, 9.91593, 0.74", "-8.77871, -226.386, 10.1854, 1.03", "-8.67644, -227.047, 10.5981, 0.66", "-8.53678, -227.623, 10.9956, 0.29", "-8.42882, -228.009, 11.2772, 0.29", "-8.35312, -228.264, 11.4587, 0.29", "-8.22684, -228.699, 11.7504, 0.29", "-8.07212, -229.275, 12.1207, 0.22", "-7.99961, -229.548, 12.2772, 0.22", "-7.84605, -230.127, 12.569, 0.22", "-7.69772, -230.704, 12.8424, 0.22", "-7.50617, -231.493, 13.2125, 0.74", "-7.34445, -232.205, 13.5137, 0.74", "-7.20574, -232.868, 13.7717, 0.74", "-7.07472, -233.515, 14.0105, 0.37", "-6.92172, -234.322, 14.3118, 0.37", "-6.82576, -234.905, 14.5379, 0.37", "-6.7237, -235.559, 14.7965, 0.88", "-6.57327, -236.328, 15.0741, 0.88", "-6.43322, -236.969, 15.3212, 0.44", "-6.25569, -237.762, 15.6392, 0.22", "-6.17138, -238.169, 15.8173, 0.22", "-6.07806, -238.728, 16.0885, 0.37", "-5.99624, -239.593, 16.5857, 0.74", "-6.05636, -240.406, 17.1224, 0.22", "-6.24644, -240.967, 17.4983, 0.22", "-6.44358, -241.259, 17.6754, 0.22", "-6.72325, -241.573, 17.8432, 0.22", "-6.95537, -241.823, 17.9392, 0.22", "-7.44016, -242.388, 18.1335, 0.22", "-7.69518, -242.783, 18.23, 0.81", "-7.95325, -243.349, 18.3635, 1.18", "-8.08278, -243.774, 18.4609, 1.18", "-8.24726, -244.671, 18.6606, 0.37", "-8.35123, -245.782, 18.8845, 0.22", "-8.36815, -246.668, 19.0467, 0.22", "-8.36017, -247.217, 19.1321, 0.22", "-8.33331, -247.977, 19.2011, 0.37", "-8.30287, -248.744, 19.231, 0.74", "-8.28138, -249.527, 19.2056, 0.59", "-8.28416, -250.23, 19.1095, 0.29", "-8.31668, -250.899, 18.9955, 0.15", "-8.36589, -251.668, 18.8541, 0.15", "-8.39155, -252.09, 18.7929, 0.44", "-8.42412, -252.83, 18.7453, 0.66", "-8.40496, -253.589, 18.8107, 0.22", "-8.31703, -254.344, 19.0756, 0.22", "-8.22743, -254.84, 19.3951, 0.81", "-8.12025, -255.442, 19.9111, 0.96", "-8.04941, -255.941, 20.3963, 0.96", "-7.9983, -256.402, 20.8905, 0.44", "-7.96933, -256.913, 21.4588, 0.29", "-7.97874, -257.383, 21.9182, 0.22", "-8.02553, -257.87, 22.2744, 0.22", "-8.10086, -258.398, 22.5194, 0.22", "-8.148, -258.698, 22.6102, 0.22", "-8.18977, -258.948, 22.658, 0.74", "-8.28541, -259.569, 22.7164, 1.03", "-8.4039, -260.484, 22.7551, 0.22", "-8.46869, -261.114, 22.7712, 0.22", "-8.49381, -261.449, 22.7805, 0.74", "-8.51119, -261.854, 22.7836, 0.96", "-8.52938, -262.488, 22.8075, 0.29", "-8.53857, -262.999, 22.8405, 0.22", "-8.54078, -263.383, 22.8731, 0.22", "-8.54729, -263.923, 22.9325, 0.37", "-8.59485, -264.586, 23.0035, 0.22", "-8.72638, -265.427, 23.1242, 0.22", "-8.79934, -265.734, 23.192, 0.22", "-8.89304, -266.025, 23.2767, 0.44", "-9.06076, -266.469, 23.4344, 0.88", "-9.28625, -267.005, 23.6591, 0.44", "-9.59408, -267.734, 23.9962, 0.22", "-9.8006, -268.286, 24.2339, 0.22", "-9.99095, -268.852, 24.4619, 0.22", "-10.1274, -269.279, 24.6137, 0.22", "-10.2182, -269.599, 24.7096, 0.22", "-10.2914, -269.922, 24.7804, 0.59", "-10.4196, -270.54, 24.8688, 1.25", "-10.602, -271.376, 24.9505, 0.44", "-10.7714, -272.123, 25.0062, 0.44", "-10.8994, -272.675, 25.0596, 0.52", "-11.118, -273.588, 25.2147, 0.22", "-11.2887, -274.253, 25.366, 0.15", "-11.4556, -274.85, 25.5388, 0.15", "-11.5299, -275.092, 25.6176, 0.37", "-11.7878, -275.846, 25.8732, 1.03", "-12.2426, -277.008, 26.2913, 0.22", "-12.4652, -277.508, 26.4795, 0.22", "-12.6012, -277.809, 26.5911, 0.22", "-12.842, -278.353, 26.7951, 0.22", "-13.1471, -279.032, 27.032, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-45.0568, 184.054, 33.1738, 0.07", "-45.8834, 185.293, 33.2886, 0.07", "-46.4253, 186.162, 33.3573, 0.66", "-46.9508, 187.051, 33.4186, 0.15", "-47.4371, 187.896, 33.4727, 0.59", "-47.872, 188.647, 33.5217, 0.15", "-48.2148, 189.238, 33.5603, 0.52", "-48.5219, 189.852, 33.5852, 0.15", "-48.8302, 190.508, 33.6056, 0.29", "-49.1141, 191.135, 33.6218, 0.07", "-49.3414, 191.603, 33.6387, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-45.0568, 184.054, 33.1738, 0.22", "-45.3818, 185.169, 33.6232, 0.22", "-46.0386, 186.859, 33.964, 0.07", "-46.3985, 187.646, 33.9976, 0.07", "-46.8652, 188.617, 33.9287, 0.29", "-47.455, 189.833, 33.7515, 0.07", "-48.0517, 191.081, 33.5207, 0.07", "-48.4655, 191.892, 33.2535, 0.52", "-49.0845, 193.063, 32.7271, 0.07", "-49.4486, 193.773, 32.3682, 0.07", "-49.7164, 194.334, 32.0775, 0.07", "-49.8644, 194.692, 31.9056, 0.22", "-50.1697, 195.578, 31.5288, 0.44", "-50.5766, 196.992, 30.981, 0.07", "-50.7494, 197.741, 30.7405, 0.07", "-50.8335, 198.155, 30.636, 0.52", "-51.0101, 199.071, 30.4386, 0.74", "-51.2566, 200.393, 30.1913, 0.07", "-51.4195, 201.307, 30.058, 0.07", "-51.5834, 202.228, 29.9813, 0.37", "-51.8558, 203.7, 29.9313, 0.07", "-52.0011, 204.389, 29.9372, 0.22", "-52.1118, 204.835, 29.9746, 0.37", "-52.3593, 205.7, 30.1426, 0.96", "-52.7562, 206.944, 30.5332, 0.15", "-52.9235, 207.426, 30.7461, 0.15", "-53.2466, 208.355, 31.2928, 0.59", "-53.7026, 209.579, 32.1325, 0.07", "-54.0659, 210.388, 32.7382, 0.07", "-54.5122, 211.243, 33.4427, 0.59", "-55.0225, 212.078, 34.1433, 0.15", "-55.577, 212.906, 34.7995, 0.15", "-56.0331, 213.517, 35.2651, 0.88", "-56.925, 214.594, 35.9787, 0.07", "-57.4935, 215.273, 36.3366, 0.07", "-58.2795, 216.248, 36.7244, 0.07", "-58.6772, 216.77, 36.869, 0.81", "-59.1334, 217.4, 37.0179, 1.25", "-59.8698, 218.466, 37.2245, 0.22", "-60.6641, 219.665, 37.4357, 0.15", "-61.486, 220.912, 37.6277, 0.37", "-62.6291, 222.68, 37.9078, 0.07", "-63.3117, 223.751, 38.0793, 0.07", "-64.0227, 224.905, 38.2601, 0.96" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.63278, -61.6519, -36.9848, 0.22", "5.73036, -61.8367, -38.1574, 0.22", "6.2541, -62.0165, -38.7111, 0.22", "6.60324, -62.2037, -39.1191, 0.22", "6.84642, -62.3886, -39.4302, 0.22", "7.17193, -62.7041, -39.8721, 0.29", "7.6209, -63.2645, -40.5111, 0.29", "7.86885, -63.8479, -40.8997, 0.29", "8.04654, -64.5756, -41.2143, 0.29", "8.16552, -65.2858, -41.4194, 0.29", "8.22259, -65.7169, -41.502, 0.52", "8.30059, -66.5352, -41.6223, 0.88", "8.39183, -67.7497, -41.727, 0.29", "8.489, -69.0273, -41.7693, 0.29", "8.58294, -70.0545, -41.7453, 0.52", "8.65142, -70.736, -41.7082, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.63278, -61.6519, -36.9848, 0.15", "4.06531, -62.5402, -36.2999, 0.15", "3.75614, -63.0241, -35.9268, 0.15", "3.45999, -63.4877, -35.5693, 0.15", "3.22286, -63.8589, -35.2831, 0.15", "2.94472, -64.2943, -34.9475, 0.15", "2.59021, -64.8493, -34.5196, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-13.1471, -279.032, 27.032, 0.22", "-13.5897, -279.399, 27.4832, 0.22", "-13.7134, -279.547, 27.642, 0.22", "-13.8228, -279.712, 27.8013, 0.22", "-13.9591, -280.015, 28.0524, 0.22", "-14.0673, -280.333, 28.2914, 0.22", "-14.1243, -280.515, 28.4233, 0.37", "-14.1859, -280.81, 28.6032, 1.03", "-14.2171, -280.946, 28.6745, 1.03", "-14.3713, -281.499, 28.9353, 0.37", "-14.5256, -281.969, 29.1142, 0.29", "-14.6222, -282.207, 29.1965, 0.29", "-14.8306, -282.622, 29.3428, 0.59", "-15.05, -283.005, 29.4833, 0.22", "-15.2073, -283.259, 29.5883, 0.52", "-15.4918, -283.696, 29.792, 0.96", "-15.8223, -284.217, 30.0689, 0.22", "-16.0313, -284.574, 30.2712, 0.22", "-16.1646, -284.811, 30.4267, 0.22", "-16.2815, -285.035, 30.5873, 0.22", "-16.3964, -285.271, 30.7735, 0.22", "-16.4744, -285.441, 30.9413, 0.22", "-16.5549, -285.804, 31.2942, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-13.1471, -279.032, 27.032, 0.22", "-12.4306, -278.996, 28.5957, 0.22", "-11.9503, -278.979, 29.4718, 0.22", "-11.6276, -278.966, 29.9059, 0.22", "-11.0806, -278.945, 30.5681, 0.07", "-10.6872, -278.929, 31.0445, 0.07", "-10.511, -278.922, 31.2578, 0.07", "-9.84598, -278.884, 31.9446, 0.88", "-8.43635, -278.81, 33.2011, 0.15", "-7.56002, -278.771, 33.9055, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-64.0227, 224.905, 38.2601, 0.07", "-64.3241, 226.681, 39.4539, 0.07", "-64.4921, 227.805, 40.232, 0.59", "-64.735, 229.75, 41.5943, 0.15", "-64.8721, 231.189, 42.6441, 0.74", "-64.9655, 232.476, 43.6179, 0.07", "-65.0563, 233.726, 44.5641, 0.07", "-65.0891, 234.604, 45.3008, 0.07", "-65.1003, 235.628, 46.1932, 0.74", "-65.0546, 237.25, 47.5779, 0.07", "-65.009, 238.259, 48.4216, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-64.0227, 224.905, 38.2601, 0.07", "-65.2563, 225.225, 37.3804, 0.07", "-66.2118, 225.543, 36.5463, 0.07", "-67.1249, 225.947, 35.5809, 0.07", "-67.4547, 226.134, 35.1539, 0.29", "-68.0977, 226.551, 34.2552, 0.74", "-68.7611, 227.025, 33.3042, 0.29", "-69.333, 227.527, 32.4168, 0.29", "-70.1067, 228.228, 31.3118, 0.29", "-71.0508, 229.013, 30.2089, 0.29", "-71.4113, 229.268, 29.8869, 0.74", "-72.1647, 229.693, 29.4535, 1.47", "-73.378, 230.254, 29.052, 0.52", "-74.5973, 230.735, 28.8673, 0.22", "-75.9883, 231.231, 28.8168, 0.15", "-76.978, 231.555, 28.8381, 0.29", "-78.4688, 232.018, 28.9002, 0.07", "-79.1108, 232.208, 28.9444, 0.52", "-80.6764, 232.692, 29.0752, 0.07", "-81.8041, 233.097, 29.211, 0.81" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "8.65142, -70.736, -41.7082, 0.22", "9.48809, -71.4713, -42.1032, 0.22", "10.1354, -72.0854, -42.4528, 0.22", "10.6619, -72.5997, -42.7569, 0.22", "11.0787, -73.0018, -43.0357, 0.22", "11.8976, -73.7781, -43.648, 0.22", "12.3297, -74.1693, -43.9856, 0.22", "12.7161, -74.5089, -44.3279, 0.22", "13.0899, -74.8564, -44.7038, 0.22", "13.6096, -75.3853, -45.3529, 0.37", "13.8895, -75.6931, -45.7568, 0.52", "14.0953, -75.9293, -46.0699, 0.29", "14.1615, -76.0168, -46.1784, 0.29", "14.3987, -76.4715, -46.6316, 0.22", "14.5755, -77.1652, -47.0917, 0.22", "14.6231, -77.5196, -47.2595, 0.22", "14.6434, -77.8863, -47.4042, 0.29", "14.6434, -78.2121, -47.5206, 0.29", "14.6364, -79.0776, -47.7973, 0.15", "14.6441, -79.5175, -47.8982, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.65142, -70.736, -41.7082, 0.07", "8.67839, -71.1943, -40.6311, 0.07", "8.7201, -71.903, -38.9651, 0.07", "8.75537, -72.5024, -37.5563, 0.07", "8.77241, -72.7918, -36.8758, 0.29", "8.80968, -73.4252, -35.3872, 0.22", "8.82474, -73.681, -34.7858, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.5549, -285.804, 31.2942, 0.07", "-16.287, -284.971, 31.9548, 0.07", "-16.0786, -284.279, 32.4915, 0.07", "-15.9079, -283.744, 32.8943, 0.22", "-15.8181, -283.481, 33.0745, 0.22", "-15.6338, -282.95, 33.4093, 0.22", "-15.3093, -282.128, 33.8839, 0.15", "-15.0433, -281.561, 34.1406, 0.15", "-14.627, -280.859, 34.3725, 0.15", "-14.3111, -280.442, 34.4888, 0.37", "-13.9822, -280.106, 34.5747, 0.59", "-13.0543, -279.407, 34.75, 0.15", "-12.1019, -278.855, 34.8515, 0.15", "-11.6956, -278.658, 34.8725, 0.15", "-10.9509, -278.368, 34.8816, 0.29", "-10.1173, -278.116, 34.8936, 0.15", "-9.35746, -277.94, 34.9027, 0.52", "-8.17779, -277.732, 34.9119, 0.15", "-7.49323, -277.624, 34.9303, 0.29", "-6.61031, -277.468, 34.9685, 0.29", "-5.76894, -277.308, 35.0004, 0.15", "-4.9054, -277.145, 35.0248, 0.44", "-4.2091, -277.003, 35.0227, 0.15", "-3.66468, -276.884, 34.9951, 0.22", "-2.46453, -276.571, 34.8784, 0.07", "-1.79608, -276.352, 34.7858, 0.59", "-0.751198, -275.925, 34.5586, 0.07", "0.29123, -275.425, 34.2501, 0.37", "1.09454, -275.002, 33.9545, 0.15", "1.43366, -274.81, 33.7943, 0.44", "1.82363, -274.576, 33.5703, 0.44", "2.68036, -274.03, 33.0648, 0.07", "3.28956, -273.643, 32.7128, 0.07", "3.94945, -273.262, 32.3416, 0.07", "4.71856, -272.862, 31.9377, 0.07", "5.16305, -272.662, 31.7191, 0.07", "5.94274, -272.366, 31.3574, 0.37", "7.08594, -272.022, 30.897, 0.07", "7.63605, -271.884, 30.7047, 0.07", "8.6096, -271.659, 30.3967, 0.52", "9.84223, -271.401, 30.0458, 0.07", "10.4625, -271.284, 29.8784, 0.07", "11.4193, -271.138, 29.6311, 0.52", "12.5608, -271.034, 29.4041, 0.15", "13.1788, -271.004, 29.3213, 0.15", "13.3396, -271.003, 29.3084, 0.15", "13.8509, -271.005, 29.2992, 0.29", "14.2425, -271.007, 29.3069, 0.29", "15.2768, -271.011, 29.3601, 0.07", "16.1259, -270.973, 29.4464, 0.07", "16.6015, -270.929, 29.4992, 0.15", "17.4891, -270.814, 29.5891, 0.07", "17.8571, -270.758, 29.6176, 0.07", "18.4893, -270.672, 29.6577, 0.29", "19.8673, -270.521, 29.7012, 0.07", "20.6321, -270.468, 29.6821, 0.07", "21.1085, -270.44, 29.6294, 0.29", "21.806, -270.391, 29.4978, 0.37", "23.0939, -270.307, 29.1414, 0.07", "23.9782, -270.285, 28.8377, 0.15", "24.9855, -270.325, 28.4529, 0.15", "25.9616, -270.368, 28.0739, 0.15", "26.6278, -270.369, 27.83, 0.29", "27.2912, -270.354, 27.5805, 0.59", "28.0263, -270.32, 27.2925, 0.88", "28.9449, -270.307, 27.0028, 0.29", "29.8033, -270.35, 26.8551, 0.29", "30.7237, -270.467, 26.8092, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.5549, -285.804, 31.2942, 0.44", "-17.1029, -286.647, 30.916, 0.44", "-17.755, -287.745, 30.5567, 0.22", "-18.3023, -288.75, 30.311, 0.66", "-18.798, -289.752, 30.131, 0.15", "-19.1636, -290.54, 30.0219, 0.15", "-19.3812, -291.021, 29.9855, 0.15", "-19.7337, -291.823, 30.0683, 0.15", "-19.9593, -292.327, 30.207, 0.52", "-20.3602, -293.18, 30.5268, 0.96", "-20.8345, -294.148, 30.9341, 0.66", "-21.3038, -295.057, 31.3354, 0.22", "-22.0526, -296.515, 31.9575, 0.22", "-22.339, -297.113, 32.1917, 0.22", "-22.6146, -297.747, 32.4319, 0.22", "-22.7985, -298.219, 32.6067, 0.22", "-22.9914, -298.807, 32.7913, 0.37", "-23.2421, -299.625, 32.9843, 0.88", "-23.4891, -300.387, 33.1301, 0.52", "-23.8546, -301.385, 33.3234, 0.15", "-24.1608, -302.096, 33.4651, 0.15", "-24.5122, -302.809, 33.5936, 0.81", "-25.0715, -303.901, 33.7441, 0.15", "-25.7027, -305.089, 33.8603, 0.15", "-25.9202, -305.509, 33.8814, 0.66", "-26.2415, -306.205, 33.8715, 1.03", "-26.6611, -307.363, 33.7839, 0.15", "-26.8966, -308.258, 33.6753, 0.15", "-26.9286, -308.427, 33.6449, 0.15", "-27.029, -308.919, 33.5399, 0.59", "-27.1833, -309.49, 33.4138, 0.81", "-27.5181, -310.444, 33.201, 0.22", "-27.772, -311.048, 33.0718, 0.22", "-28.2592, -312.027, 32.8766, 0.44", "-28.7893, -312.983, 32.6642, 0.15", "-29.1552, -313.549, 32.5174, 0.15", "-29.52, -314.025, 32.37, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-29.52, -314.025, 32.37, 0.22", "-29.7168, -315.053, 32.0524, 0.22", "-29.8075, -315.454, 31.9241, 0.22", "-29.9697, -316.125, 31.7169, 0.29", "-30.1285, -316.798, 31.4937, 0.15", "-30.2249, -317.241, 31.3267, 0.15", "-30.3073, -317.69, 31.1435, 0.15", "-30.3888, -318.128, 30.9585, 0.52", "-30.4518, -318.685, 30.7137, 0.74", "-30.4545, -319.635, 30.2874, 0.29", "-30.396, -320.254, 29.9998, 0.15", "-30.3249, -320.736, 29.7828, 0.15", "-30.2785, -320.989, 29.6793, 0.15", "-30.1628, -321.45, 29.512, 0.37", "-29.9918, -322.049, 29.3436, 0.15", "-29.8259, -322.612, 29.2487, 0.15", "-29.648, -323.229, 29.1841, 0.22", "-29.516, -323.702, 29.1442, 0.81", "-29.3703, -324.264, 29.0832, 0.66", "-29.1736, -325.166, 28.9709, 0.44", "-29.0859, -325.706, 28.8878, 0.44", "-28.9646, -326.586, 28.7362, 0.15", "-28.9129, -327.002, 28.653, 0.15", "-28.8339, -327.783, 28.471, 0.15", "-28.7952, -328.343, 28.3258, 0.81", "-28.7372, -329.542, 28.0093, 0.15", "-28.7312, -329.881, 27.9183, 0.15", "-28.7274, -330.24, 27.822, 0.15", "-28.7056, -330.686, 27.7144, 0.15", "-28.6649, -331.03, 27.6512, 0.37", "-28.5207, -331.686, 27.5469, 0.74", "-28.2937, -332.447, 27.4349, 0.22", "-28.1008, -333.034, 27.3444, 0.22", "-27.9065, -333.565, 27.2703, 0.59", "-27.6385, -334.215, 27.2041, 0.22", "-27.2498, -335.067, 27.1331, 0.15", "-27.062, -335.458, 27.1083, 0.15", "-26.888, -335.838, 27.0934, 0.37", "-26.6784, -336.39, 27.069, 0.66", "-26.5293, -337.014, 27.0103, 0.22", "-26.4982, -337.558, 26.937, 0.15", "-26.5444, -337.993, 26.8745, 0.15", "-26.6261, -338.423, 26.8079, 0.29", "-26.7235, -338.819, 26.7406, 0.88", "-26.9472, -339.637, 26.6049, 0.22", "-27.1259, -340.215, 26.5293, 0.15", "-27.3114, -340.811, 26.4724, 0.15", "-27.3887, -341.079, 26.4534, 0.15", "-27.5283, -341.624, 26.4264, 0.22", "-27.7175, -342.476, 26.3789, 0.15", "-27.9493, -343.613, 26.3038, 0.15", "-28.0248, -343.953, 26.2721, 0.37", "-28.1319, -344.457, 26.1989, 0.37", "-28.255, -345.09, 26.0841, 0.22", "-28.3599, -345.797, 25.9424, 0.22", "-28.401, -346.338, 25.8291, 0.66", "-28.3844, -346.96, 25.6984, 0.66", "-28.2989, -347.979, 25.5089, 0.15", "-28.2604, -348.324, 25.4425, 0.15", "-28.1595, -349.075, 25.3012, 0.59", "-28.0604, -349.692, 25.1899, 0.15", "-27.9178, -350.432, 25.053, 0.15", "-27.7917, -350.959, 24.9469, 0.44", "-27.5486, -351.908, 24.7182, 0.15", "-27.4639, -352.24, 24.6184, 0.15", "-27.3754, -352.638, 24.4639, 0.15", "-27.3093, -353.029, 24.2793, 0.37", "-27.2328, -353.714, 23.9065, 0.44", "-27.1854, -354.417, 23.4826, 0.22", "-27.1905, -354.661, 23.3321, 0.22", "-27.2549, -355.108, 23.0566, 0.15", "-27.376, -355.535, 22.798, 0.15", "-27.4494, -355.71, 22.6922, 0.15", "-27.6129, -356.019, 22.5113, 0.29", "-27.8791, -356.518, 22.2222, 0.37", "-28.1179, -357.005, 21.952, 0.22", "-28.364, -357.6, 21.6624, 0.15", "-28.6164, -358.271, 21.3568, 0.29", "-28.8317, -358.885, 21.0769, 0.15", "-28.9636, -359.277, 20.8965, 0.15", "-29.1349, -359.786, 20.6617, 0.52", "-29.4127, -360.58, 20.2808, 0.15", "-29.595, -361.13, 20.0039, 0.15", "-29.803, -361.89, 19.5671, 0.15", "-29.9052, -362.339, 19.2653, 0.52", "-29.9969, -362.722, 18.9666, 0.52", "-30.1534, -363.379, 18.3866, 0.15", "-30.2358, -363.719, 18.0393, 0.15", "-30.3873, -364.445, 17.2282, 0.15", "-30.4442, -364.832, 16.7532, 0.29", "-30.4643, -365.297, 16.1466, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-29.52, -314.025, 32.37, 0.88", "-29.8218, -314.475, 32.5723, 0.88", "-30.1778, -315.038, 32.7822, 0.22", "-30.4978, -315.594, 32.9606, 0.15", "-30.7512, -316.077, 33.1, 0.15", "-30.8871, -316.364, 33.175, 0.37", "-31.0729, -316.811, 33.2784, 1.03", "-31.2866, -317.439, 33.4002, 0.44", "-31.4369, -318.03, 33.4851, 0.15", "-31.4977, -318.354, 33.5272, 0.15", "-31.558, -318.766, 33.5842, 0.37", "-31.6411, -319.377, 33.677, 0.15", "-31.6986, -319.732, 33.736, 0.29", "-31.8556, -320.439, 33.8555, 0.07", "-32.0352, -321.02, 33.9261, 0.07", "-32.2579, -321.583, 33.9844, 0.07", "-32.4216, -321.907, 34.0104, 0.29", "-32.789, -322.502, 34.0389, 0.07", "-33.1112, -322.947, 34.0535, 0.59", "-33.599, -323.527, 34.0731, 0.15", "-33.9226, -323.881, 34.0981, 0.15", "-34.3874, -324.368, 34.1813, 0.15", "-34.6279, -324.629, 34.2487, 0.37", "-35.0694, -325.147, 34.428, 0.07", "-35.3261, -325.484, 34.5713, 0.22", "-35.6027, -325.9, 34.7523, 0.07", "-35.8735, -326.342, 34.9237, 0.07", "-36.1108, -326.751, 35.0654, 0.59", "-36.468, -327.376, 35.2366, 0.15", "-36.7454, -327.867, 35.3319, 0.74", "-37.2256, -328.683, 35.4265, 0.07", "-37.6311, -329.339, 35.4757, 0.07", "-37.9794, -329.872, 35.4962, 0.29", "-38.4968, -330.614, 35.5074, 0.07", "-38.8032, -331.03, 35.5016, 0.44", "-39.4647, -331.875, 35.4723, 0.07", "-39.7279, -332.198, 35.4563, 0.07", "-40.0999, -332.648, 35.4387, 0.37", "-40.7128, -333.402, 35.4268, 0.07", "-41.3284, -334.179, 35.4278, 0.07", "-41.7067, -334.686, 35.4337, 0.37", "-42.1896, -335.402, 35.4457, 0.15", "-42.6049, -336.1, 35.4543, 0.07", "-42.8948, -336.617, 35.4691, 0.22", "-43.093, -337.012, 35.4886, 0.52", "-43.2702, -337.442, 35.5161, 0.88", "-43.4741, -338.074, 35.5655, 0.44", "-43.5969, -338.669, 35.6098, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "axon_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "axon_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_NBC_ac16f8ddcb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, axon_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, axon_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.450000292725816)
    connect dend_35(0), soma_0(0.450000292725816)
    connect dend_32(0), soma_0(0.450000292725816)
    connect dend_25(0), soma_0(0.450000292725816)
    connect dend_0(0), soma_0(0.450000292725816)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.277629, -9.42436, 0.0, 2.9454 ) }
    soma_0 { pt3dadd( -0.225418, -8.4907, 0.0, 4.92187 ) }
    soma_0 { pt3dadd( -0.173208, -7.55704, 0.0, 6.69655 ) }
    soma_0 { pt3dadd( -0.120997, -6.62338, 0.0, 8.28957 ) }
    soma_0 { pt3dadd( -0.0687862, -5.68972, 0.0, 9.36061 ) }
    soma_0 { pt3dadd( -0.0165755, -4.75606, 0.0, 10.2397 ) }
    soma_0 { pt3dadd( 0.0356352, -3.8224, 0.0, 11.0293 ) }
    soma_0 { pt3dadd( 0.087846, -2.88873, 0.0, 11.6457 ) }
    soma_0 { pt3dadd( 0.140057, -1.95507, 0.0, 12.2691 ) }
    soma_0 { pt3dadd( 0.192267, -1.02141, 0.0, 12.5588 ) }
    soma_0 { pt3dadd( 0.244478, -0.0877535, 0.0, 12.7806 ) }
    soma_0 { pt3dadd( 0.296689, 0.845907, 0.0, 13.0398 ) }
    soma_0 { pt3dadd( 0.3489, 1.77957, 0.0, 13.1732 ) }
    soma_0 { pt3dadd( 0.40111, 2.71323, 0.0, 13.0581 ) }
    soma_0 { pt3dadd( 0.453321, 3.64689, 0.0, 12.8607 ) }
    soma_0 { pt3dadd( 0.505532, 4.58055, 0.0, 12.1633 ) }
    soma_0 { pt3dadd( 0.557743, 5.51421, 0.0, 11.3807 ) }
    soma_0 { pt3dadd( 0.609953, 6.44787, 0.0, 10.3357 ) }
    soma_0 { pt3dadd( 0.662164, 7.38153, 0.0, 8.86929 ) }
    soma_0 { pt3dadd( 0.714375, 8.31519, 0.0, 6.73974 ) }
    soma_0 { pt3dadd( 0.766585, 9.24885, 0.0, 3.85991 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0596826, 9.24235, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.0596826, 9.24235, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.412803, 10.7921, 5.84424, 1.47 ) }
    dend_44 { pt3dadd( -0.656781, 11.9617, 6.08643, 1.47 ) }
    dend_44 { pt3dadd( -0.86587, 13.1679, 6.32624, 1.55 ) }
    dend_44 { pt3dadd( -0.990973, 14.0615, 6.50836, 1.55 ) }
    dend_44 { pt3dadd( -1.10592, 15.0267, 6.69594, 1.55 ) }
    dend_44 { pt3dadd( -1.15813, 15.6749, 6.81544, 1.55 ) }
    dend_44 { pt3dadd( -1.19346, 16.5329, 6.97351, 1.55 ) }
    dend_44 { pt3dadd( -1.21145, 17.5459, 7.16136, 1.55 ) }
    dend_44 { pt3dadd( -1.23829, 18.7224, 7.40754, 1.92 ) }
    dend_44 { pt3dadd( -1.30705, 20.1201, 7.73231, 2.14 ) }
    dend_44 { pt3dadd( -1.42059, 21.5046, 8.08896, 1.18 ) }
    dend_44 { pt3dadd( -1.55032, 22.6369, 8.41278, 1.25 ) }
    dend_44 { pt3dadd( -1.70749, 23.8451, 8.77915, 1.25 ) }
    dend_44 { pt3dadd( -1.94269, 25.343, 9.25816, 1.33 ) }
    dend_44 { pt3dadd( -2.19245, 26.715, 9.72378, 1.47 ) }
    dend_44 { pt3dadd( -2.43912, 27.8928, 10.1742, 1.77 ) }
    dend_44 { pt3dadd( -2.73253, 29.0483, 10.6513, 2.14 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.299673, -8.88065, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.299673, -8.88065, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.731385, -10.4098, 4.04084, 1.62 ) }
    dend_35 { pt3dadd( -1.06864, -11.9341, 4.70994, 1.4 ) }
    dend_35 { pt3dadd( -1.31284, -13.2511, 5.22174, 1.4 ) }
    dend_35 { pt3dadd( -1.50653, -14.226, 5.55406, 1.25 ) }
    dend_35 { pt3dadd( -1.74058, -15.2864, 5.86877, 1.25 ) }
    dend_35 { pt3dadd( -1.99867, -16.4469, 6.15458, 1.18 ) }
    dend_35 { pt3dadd( -2.15417, -17.21, 6.29607, 1.18 ) }
    dend_35 { pt3dadd( -2.47302, -19.0287, 6.5681, 1.55 ) }
    dend_35 { pt3dadd( -2.74278, -20.5857, 6.76575, 1.62 ) }
    dend_35 { pt3dadd( -3.03915, -22.1049, 6.94026, 1.47 ) }
    dend_35 { pt3dadd( -3.40081, -23.7656, 7.09144, 1.47 ) }
    dend_35 { pt3dadd( -3.70001, -25.0526, 7.20909, 1.47 ) }
    dend_35 { pt3dadd( -4.01977, -26.5029, 7.33154, 1.47 ) }
    dend_35 { pt3dadd( -4.18589, -27.4697, 7.43127, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 56/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.04042, 8.08735, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 5.04042, 8.08735, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 6.45789, 9.14094, -5.09895, 1.55 ) }
    dend_32 { pt3dadd( 7.83536, 10.1891, -4.98657, 1.47 ) }
    dend_32 { pt3dadd( 8.8047, 10.9418, -4.92779, 1.25 ) }
    dend_32 { pt3dadd( 10.6507, 12.3891, -4.76685, 1.11 ) }
    dend_32 { pt3dadd( 11.7734, 13.2695, -4.6318, 1.25 ) }
    dend_32 { pt3dadd( 13.2024, 14.4072, -4.38051, 1.4 ) }
    dend_32 { pt3dadd( 14.8427, 15.7305, -3.99424, 1.62 ) }
    dend_32 { pt3dadd( 16.6778, 17.1733, -3.49016, 1.03 ) }
    dend_32 { pt3dadd( 18.0096, 18.1301, -3.07664, 0.88 ) }
    dend_32 { pt3dadd( 19.349, 18.9629, -2.59586, 1.11 ) }
    dend_32 { pt3dadd( 20.8862, 19.8148, -1.93079, 0.88 ) }
    dend_32 { pt3dadd( 22.3424, 20.5438, -1.21813, 1.47 ) }
    dend_32 { pt3dadd( 23.1317, 20.9073, -0.773231, 1.33 ) }
    dend_32 { pt3dadd( 24.5382, 21.5315, 0.0636998, 1.03 ) }
    dend_32 { pt3dadd( 25.8656, 22.1635, 0.824584, 1.03 ) }
    dend_32 { pt3dadd( 26.8999, 22.7099, 1.3928, 1.18 ) }
    dend_32 { pt3dadd( 28.1251, 23.4604, 2.04252, 1.18 ) }
    dend_32 { pt3dadd( 29.7142, 24.5534, 2.83324, 1.4 ) }
    dend_32 { pt3dadd( 30.7107, 25.3026, 3.2732, 1.03 ) }
    dend_32 { pt3dadd( 31.7621, 26.145, 3.55939, 0.81 ) }
    dend_32 { pt3dadd( 32.7502, 26.9199, 3.66145, 0.74 ) }
    dend_32 { pt3dadd( 33.8439, 27.7434, 3.62489, 1.11 ) }
    dend_32 { pt3dadd( 35.2896, 28.7705, 3.45025, 1.11 ) }
    dend_32 { pt3dadd( 36.3312, 29.4617, 3.25108, 1.33 ) }
    dend_32 { pt3dadd( 38.5285, 30.8394, 2.87532, 1.33 ) }
    dend_32 { pt3dadd( 40.4664, 32.0311, 2.63436, 0.88 ) }
    dend_32 { pt3dadd( 42.0253, 33.0188, 2.55122, 1.11 ) }
    dend_32 { pt3dadd( 42.8836, 33.5833, 2.56278, 1.33 ) }
    dend_32 { pt3dadd( 44.1573, 34.4869, 2.69347, 1.33 ) }
    dend_32 { pt3dadd( 45.7798, 35.7392, 3.00313, 0.96 ) }
    dend_32 { pt3dadd( 47.0667, 36.7794, 3.39497, 0.96 ) }
    dend_32 { pt3dadd( 48.4307, 37.9532, 3.91045, 1.4 ) }
    dend_32 { pt3dadd( 49.3298, 38.7545, 4.31676, 1.4 ) }
    dend_32 { pt3dadd( 50.4605, 39.8047, 4.85493, 1.4 ) }
    dend_32 { pt3dadd( 51.7616, 41.0381, 5.46912, 1.84 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.129629, -10.3401, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.129629, -10.3401, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.634519, -11.4958, -2.01156, 1.55 ) }
    dend_25 { pt3dadd( -0.990883, -12.4358, -1.93146, 1.47 ) }
    dend_25 { pt3dadd( -1.54793, -14.2268, -1.75206, 1.47 ) }
    dend_25 { pt3dadd( -1.94789, -15.8181, -1.58847, 1.25 ) }
    dend_25 { pt3dadd( -2.14346, -16.8461, -1.48766, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -2.29609, -18.0985, -1.3757, 1.33 ) }
    dend_25 { pt3dadd( -2.38467, -19.6611, -1.25119, 1.7 ) }
    dend_25 { pt3dadd( -2.36909, -21.3134, -1.14123, 1.4 ) }
    dend_25 { pt3dadd( -2.28489, -22.6073, -1.06898, 1.18 ) }
    dend_25 { pt3dadd( -2.0895, -24.4927, -0.959844, 1.4 ) }
    dend_25 { pt3dadd( -1.84, -26.5799, -0.839409, 1.4 ) }
    dend_25 { pt3dadd( -1.65204, -27.9894, -0.76369, 1.55 ) }
    dend_25 { pt3dadd( -1.43149, -29.5419, -0.701943, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.330332, 1.55635, -10.46, 3.02 ) }
    dend_0 { pt3dadd( 0.330332, 1.55635, -10.46, 3.02 ) }
    dend_0 { pt3dadd( -1.77676, 1.47852, -10.46, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 11/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.766585, 9.24885, 0.0, 0.673133 ) }
    axon_0 { pt3dadd( 1.60408, 24.2255, 0.0, 0.673133 ) }
    axon_0 { pt3dadd( 2.44158, 39.2021, 0.0, 0.673133 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.73253, 29.0483, 10.6513, 2.21 ) }
    dend_46 { pt3dadd( -2.94127, 30.4472, 11.532, 2.21 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.73253, 29.0483, 10.6513, 0.59 ) }
    dend_45 { pt3dadd( -3.59924, 29.4616, 11.1745, 0.59 ) }
    dend_45 { pt3dadd( -4.80137, 30.0477, 11.813, 0.59 ) }
    dend_45 { pt3dadd( -5.64887, 30.4542, 12.2289, 0.44 ) }
    dend_45 { pt3dadd( -6.90329, 31.0399, 12.8018, 0.29 ) }
    dend_45 { pt3dadd( -7.38063, 31.2572, 12.9988, 0.29 ) }
    dend_45 { pt3dadd( -7.92383, 31.5047, 13.2227, 0.29 ) }
    dend_45 { pt3dadd( -8.4687, 31.7798, 13.4399, 0.44 ) }
    dend_45 { pt3dadd( -9.00514, 32.0697, 13.626, 0.66 ) }
    dend_45 { pt3dadd( -9.79854, 32.5296, 13.929, 0.66 ) }
    dend_45 { pt3dadd( -10.3698, 32.8857, 14.1958, 0.44 ) }
    dend_45 { pt3dadd( -11.0233, 33.3176, 14.5544, 0.44 ) }
    dend_45 { pt3dadd( -11.6461, 33.7594, 14.9814, 0.66 ) }
    dend_45 { pt3dadd( -11.9988, 34.0306, 15.2726, 0.66 ) }
    dend_45 { pt3dadd( -12.6611, 34.5684, 15.8881, 0.29 ) }
    dend_45 { pt3dadd( -13.1021, 34.9313, 16.3412, 0.29 ) }
    dend_45 { pt3dadd( -13.8887, 35.5475, 17.1457, 0.44 ) }
    dend_45 { pt3dadd( -14.6331, 36.0737, 17.8445, 0.37 ) }
    dend_45 { pt3dadd( -15.2564, 36.46, 18.3849, 0.37 ) }
    dend_45 { pt3dadd( -15.8962, 36.8174, 18.8819, 0.66 ) }
    dend_45 { pt3dadd( -16.5828, 37.1725, 19.3539, 1.18 ) }
    dend_45 { pt3dadd( -17.4839, 37.6118, 19.8763, 1.47 ) }
    dend_45 { pt3dadd( -18.5388, 38.0919, 20.3903, 0.37 ) }
    dend_45 { pt3dadd( -19.1977, 38.3728, 20.6676, 0.29 ) }
    dend_45 { pt3dadd( -19.9705, 38.6848, 20.959, 0.29 ) }
    dend_45 { pt3dadd( -20.742, 38.9911, 21.2261, 0.15 ) }
    dend_45 { pt3dadd( -21.3903, 39.2595, 21.4435, 0.37 ) }
    dend_45 { pt3dadd( -22.4521, 39.7259, 21.8292, 0.22 ) }
    dend_45 { pt3dadd( -23.1105, 40.0526, 22.0666, 0.22 ) }
    dend_45 { pt3dadd( -24.0497, 40.5561, 22.4166, 0.22 ) }
    dend_45 { pt3dadd( -24.5469, 40.8344, 22.6043, 0.96 ) }
    dend_45 { pt3dadd( -25.4293, 41.3564, 22.9321, 1.84 ) }
    dend_45 { pt3dadd( -26.0619, 41.7575, 23.1713, 1.84 ) }
    dend_45 { pt3dadd( -26.9835, 42.3988, 23.5147, 0.22 ) }
    dend_45 { pt3dadd( -27.4885, 42.7838, 23.7005, 0.22 ) }
    dend_45 { pt3dadd( -27.9224, 43.1387, 23.8683, 0.22 ) }
    dend_45 { pt3dadd( -28.3542, 43.4846, 24.0303, 0.22 ) }
    dend_45 { pt3dadd( -28.648, 43.7078, 24.1313, 0.22 ) }
    dend_45 { pt3dadd( -28.8399, 43.8444, 24.192, 0.22 ) }
    dend_45 { pt3dadd( -29.2409, 44.111, 24.3385, 0.52 ) }
    dend_45 { pt3dadd( -29.568, 44.339, 24.4612, 1.03 ) }
    dend_45 { pt3dadd( -29.9531, 44.6294, 24.6296, 1.25 ) }
    dend_45 { pt3dadd( -30.6145, 45.1606, 24.9191, 0.81 ) }
    dend_45 { pt3dadd( -31.1843, 45.659, 25.1652, 0.22 ) }
    dend_45 { pt3dadd( -31.5428, 45.989, 25.3447, 0.22 ) }
    dend_45 { pt3dadd( -31.9923, 46.4321, 25.6261, 0.59 ) }
    dend_45 { pt3dadd( -32.7664, 47.2963, 26.1838, 0.07 ) }
    dend_45 { pt3dadd( -32.9923, 47.5965, 26.3686, 0.15 ) }
    dend_45 { pt3dadd( -33.4483, 48.3403, 26.7743, 0.15 ) }
    dend_45 { pt3dadd( -34.0671, 49.5573, 27.3599, 0.07 ) }
    dend_45 { pt3dadd( -34.5638, 50.689, 27.8235, 0.07 ) }
    dend_45 { pt3dadd( -34.779, 51.2586, 28.0414, 0.07 ) }
    dend_45 { pt3dadd( -35.0496, 52.0961, 28.3308, 0.07 ) }
    dend_45 { pt3dadd( -35.3626, 53.1948, 28.6724, 0.07 ) }
    dend_45 { pt3dadd( -35.5563, 53.9586, 28.8868, 0.07 ) }
    dend_45 { pt3dadd( -35.7248, 54.6745, 29.0522, 0.07 ) }
    dend_45 { pt3dadd( -35.9471, 55.5192, 29.2358, 0.22 ) }
    dend_45 { pt3dadd( -36.0957, 55.9841, 29.3541, 0.44 ) }
    dend_45 { pt3dadd( -36.4001, 56.7424, 29.5753, 0.07 ) }
    dend_45 { pt3dadd( -36.8169, 57.6056, 29.8739, 0.07 ) }
    dend_45 { pt3dadd( -37.0413, 58.0154, 30.03, 0.07 ) }
    dend_45 { pt3dadd( -37.3734, 58.5577, 30.2328, 0.37 ) }
    dend_45 { pt3dadd( -37.501, 58.7469, 30.2958, 0.37 ) }
    dend_45 { pt3dadd( -37.9284, 59.3315, 30.5057, 0.07 ) }
    dend_45 { pt3dadd( -38.4127, 59.9565, 30.7234, 0.07 ) }
    dend_45 { pt3dadd( -38.6029, 60.2039, 30.7959, 0.37 ) }
    dend_45 { pt3dadd( -39.1564, 60.9743, 30.9922, 1.11 ) }
    dend_45 { pt3dadd( -39.4861, 61.479, 31.1095, 0.81 ) }
    dend_45 { pt3dadd( -40.0772, 62.4531, 31.3011, 0.07 ) }
    dend_45 { pt3dadd( -40.3788, 62.9664, 31.3801, 0.07 ) }
    dend_45 { pt3dadd( -40.7085, 63.5154, 31.4512, 0.59 ) }
    dend_45 { pt3dadd( -41.2986, 64.4743, 31.5858, 0.15 ) }
    dend_45 { pt3dadd( -41.9949, 65.5483, 31.7451, 0.15 ) }
    dend_45 { pt3dadd( -42.499, 66.2509, 31.8565, 0.15 ) }
    dend_45 { pt3dadd( -43.0817, 66.9709, 31.9915, 0.44 ) }
    dend_45 { pt3dadd( -43.8195, 67.7673, 32.2032, 0.15 ) }
    dend_45 { pt3dadd( -44.1842, 68.1098, 32.2958, 0.15 ) }
    dend_45 { pt3dadd( -44.8291, 68.6382, 32.4302, 0.74 ) }
    dend_45 { pt3dadd( -45.7462, 69.3319, 32.5768, 0.07 ) }
    dend_45 { pt3dadd( -46.4386, 69.8388, 32.6501, 0.07 ) }
    dend_45 { pt3dadd( -47.0674, 70.3082, 32.6836, 0.07 ) }
    dend_45 { pt3dadd( -48.078, 71.0833, 32.6587, 0.07 ) }
    dend_45 { pt3dadd( -48.7836, 71.6449, 32.5664, 0.52 ) }
    dend_45 { pt3dadd( -49.1312, 71.9289, 32.4796, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -49.9345, 72.6072, 32.1892, 0.07 ) }
    dend_45 { pt3dadd( -50.6282, 73.2298, 31.8734, 0.37 ) }
    dend_45 { pt3dadd( -51.5449, 74.0631, 31.412, 0.07 ) }
    dend_45 { pt3dadd( -52.5406, 74.9516, 30.8998, 0.07 ) }
    dend_45 { pt3dadd( -53.2816, 75.6096, 30.4707, 0.07 ) }
    dend_45 { pt3dadd( -54.229, 76.4481, 29.8819, 0.07 ) }
    dend_45 { pt3dadd( -55.2815, 77.3841, 29.173, 0.07 ) }
    dend_45 { pt3dadd( -55.8259, 77.8615, 28.7789, 0.07 ) }
    dend_45 { pt3dadd( -56.4219, 78.3854, 28.3323, 0.07 ) }
    dend_45 { pt3dadd( -57.0283, 78.9167, 27.907, 0.07 ) }
    dend_45 { pt3dadd( -57.5918, 79.4067, 27.534, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.18589, -27.4697, 7.43127, 0.52 ) }
    dend_43 { pt3dadd( -4.01388, -27.4174, 8.54256, 0.52 ) }
    dend_43 { pt3dadd( -3.72764, -27.3759, 10.2637, 0.52 ) }
    dend_43 { pt3dadd( -3.43859, -27.3989, 11.9418, 0.59 ) }
    dend_43 { pt3dadd( -3.13649, -27.511, 13.7221, 0.59 ) }
    dend_43 { pt3dadd( -2.8691, -27.6906, 15.2833, 0.59 ) }
    dend_43 { pt3dadd( -2.60188, -27.9628, 16.8163, 0.59 ) }
    dend_43 { pt3dadd( -2.31605, -28.4393, 18.5433, 0.59 ) }
    dend_43 { pt3dadd( -2.19803, -28.7653, 19.2393, 0.59 ) }
    dend_43 { pt3dadd( -2.03791, -29.3158, 20.0609, 0.59 ) }
    dend_43 { pt3dadd( -1.89465, -29.8476, 20.7286, 0.52 ) }
    dend_43 { pt3dadd( -1.69614, -30.6022, 21.6242, 0.52 ) }
    dend_43 { pt3dadd( -1.45945, -31.4432, 22.5754, 0.59 ) }
    dend_43 { pt3dadd( -1.0137, -32.7332, 24.0771, 0.81 ) }
    dend_43 { pt3dadd( -0.488966, -34.0021, 25.7113, 0.52 ) }
    dend_43 { pt3dadd( -0.139903, -34.7153, 26.7098, 0.59 ) }
    dend_43 { pt3dadd( 0.306845, -35.4601, 27.8538, 0.81 ) }
    dend_43 { pt3dadd( 0.702513, -36.0151, 28.7953, 1.11 ) }
    dend_43 { pt3dadd( 1.59898, -37.0944, 30.7344, 0.37 ) }
    dend_43 { pt3dadd( 2.22912, -37.7755, 32.0575, 0.59 ) }
    dend_43 { pt3dadd( 2.78726, -38.3481, 33.2069, 0.66 ) }
    dend_43 { pt3dadd( 3.59763, -39.0982, 34.8532, 0.37 ) }
    dend_43 { pt3dadd( 4.17501, -39.5586, 36.0634, 0.37 ) }
    dend_43 { pt3dadd( 4.4725, -39.7679, 36.7997, 0.37 ) }
    dend_43 { pt3dadd( 4.85017, -40.0267, 37.9909, 0.37 ) }
    dend_43 { pt3dadd( 5.06178, -40.2128, 39.0061, 0.96 ) }
    dend_43 { pt3dadd( 5.23363, -40.4696, 40.4354, 0.96 ) }
    dend_43 { pt3dadd( 5.32453, -40.7926, 42.025, 0.96 ) }
    dend_43 { pt3dadd( 5.36695, -41.4402, 44.7372, 0.66 ) }
    dend_43 { pt3dadd( 5.29839, -42.0497, 47.0347, 0.37 ) }
    dend_43 { pt3dadd( 5.10662, -42.7701, 49.429, 0.37 ) }
    dend_43 { pt3dadd( 4.80347, -43.51, 51.7, 0.37 ) }
    dend_43 { pt3dadd( 4.63748, -43.828, 52.6179, 0.37 ) }
    dend_43 { pt3dadd( 4.24854, -44.4884, 54.4388, 0.66 ) }
    dend_43 { pt3dadd( 3.77829, -45.2942, 56.5685, 0.66 ) }
    dend_43 { pt3dadd( 3.37605, -46.0354, 58.4962, 0.81 ) }
    dend_43 { pt3dadd( 2.8889, -47.0333, 61.0361, 0.88 ) }
    dend_43 { pt3dadd( 2.50359, -47.9485, 63.2719, 0.88 ) }
    dend_43 { pt3dadd( 2.16053, -49.0159, 65.7769, 0.37 ) }
    dend_43 { pt3dadd( 1.96299, -49.9341, 67.8523, 0.29 ) }
    dend_43 { pt3dadd( 1.9115, -50.5464, 69.0567, 0.29 ) }
    dend_43 { pt3dadd( 1.92168, -51.2106, 70.227, 0.29 ) }
    dend_43 { pt3dadd( 1.98598, -52.2044, 71.7693, 0.52 ) }
    dend_43 { pt3dadd( 2.09019, -53.4475, 73.5474, 0.96 ) }
    dend_43 { pt3dadd( 2.20528, -54.9631, 75.5329, 0.96 ) }
    dend_43 { pt3dadd( 2.27655, -56.2147, 77.1333, 0.29 ) }
    dend_43 { pt3dadd( 2.32001, -57.3852, 78.6161, 0.29 ) }
    dend_43 { pt3dadd( 2.33766, -58.5571, 80.1248, 0.29 ) }
    dend_43 { pt3dadd( 2.31751, -59.4362, 81.2634, 0.88 ) }
    dend_43 { pt3dadd( 2.29089, -60.5027, 82.4993, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -4.18589, -27.4697, 7.43127, 0.96 ) }
    dend_36 { pt3dadd( -4.8521, -29.0581, 7.44296, 0.96 ) }
    dend_36 { pt3dadd( -5.77214, -31.2422, 7.56339, 0.81 ) }
    dend_36 { pt3dadd( -6.53946, -33.1467, 7.86899, 0.74 ) }
    dend_36 { pt3dadd( -7.36154, -35.1927, 8.39602, 0.88 ) }
    dend_36 { pt3dadd( -8.22795, -37.3505, 9.11901, 0.88 ) }
    dend_36 { pt3dadd( -8.47779, -38.0197, 9.36476, 0.88 ) }
    dend_36 { pt3dadd( -8.81928, -39.0775, 9.82936, 0.66 ) }
    dend_36 { pt3dadd( -9.48367, -41.2797, 10.8843, 0.66 ) }
    dend_36 { pt3dadd( -9.95045, -42.7222, 11.5867, 0.88 ) }
    dend_36 { pt3dadd( -10.3638, -43.891, 12.1426, 0.88 ) }
    dend_36 { pt3dadd( -11.0911, -45.7168, 12.9513, 1.03 ) }
    dend_36 { pt3dadd( -11.8301, -47.4937, 13.6672, 1.03 ) }
    dend_36 { pt3dadd( -12.6412, -49.4649, 14.3333, 0.88 ) }
    dend_36 { pt3dadd( -13.434, -51.4583, 14.8988, 0.59 ) }
    dend_36 { pt3dadd( -13.8136, -52.4864, 15.1959, 0.44 ) }
    dend_36 { pt3dadd( -14.4849, -54.3724, 15.803, 1.03 ) }
    dend_36 { pt3dadd( -14.9296, -55.6496, 16.262, 1.03 ) }
    dend_36 { pt3dadd( -15.3037, -56.8801, 16.7042, 1.03 ) }
    dend_36 { pt3dadd( -15.833, -58.9123, 17.4246, 0.88 ) }
    dend_36 { pt3dadd( -16.3298, -61.0796, 18.1571, 0.81 ) }
    dend_36 { pt3dadd( -16.8697, -63.5899, 18.9953, 1.03 ) }
    dend_36 { pt3dadd( -17.2921, -65.5657, 19.6305, 1.47 ) }
    dend_36 { pt3dadd( -17.7655, -67.6548, 20.3008, 1.11 ) }
    dend_36 { pt3dadd( -18.2401, -69.7324, 20.9528, 0.74 ) }
    dend_36 { pt3dadd( -18.5752, -71.283, 21.4199, 0.66 ) }
    dend_36 { pt3dadd( -18.8862, -72.8136, 21.8681, 0.66 ) }
    dend_36 { pt3dadd( -19.2652, -74.7512, 22.4273, 1.03 ) }
    dend_36 { pt3dadd( -19.7574, -77.2439, 23.1345, 0.96 ) }
    dend_36 { pt3dadd( -20.1737, -79.2314, 23.6712, 0.81 ) }
    dend_36 { pt3dadd( -20.5722, -80.9972, 24.1053, 1.11 ) }
    dend_36 { pt3dadd( -21.1341, -83.2214, 24.6082, 0.74 ) }
    dend_36 { pt3dadd( -21.6692, -85.0847, 25.0494, 0.37 ) }
    dend_36 { pt3dadd( -22.1124, -86.458, 25.414, 0.37 ) }
    dend_36 { pt3dadd( -22.5779, -87.783, 25.8098, 0.96 ) }
    dend_36 { pt3dadd( -23.1491, -89.3366, 26.3076, 1.55 ) }
    dend_36 { pt3dadd( -23.5445, -90.4056, 26.6571, 1.7 ) }
    dend_36 { pt3dadd( -24.3857, -92.7233, 27.4223, 0.81 ) }
    dend_36 { pt3dadd( -24.9646, -94.3791, 27.9944, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -25.3999, -95.7233, 28.4559, 0.74 ) }
    dend_36 { pt3dadd( -25.9058, -97.5498, 29.0393, 0.44 ) }
    dend_36 { pt3dadd( -26.3529, -99.4876, 29.5882, 0.37 ) }
    dend_36 { pt3dadd( -26.7052, -101.244, 30.0008, 0.37 ) }
    dend_36 { pt3dadd( -26.936, -102.47, 30.1996, 0.37 ) }
    dend_36 { pt3dadd( -27.2599, -104.143, 30.3875, 0.74 ) }
    dend_36 { pt3dadd( -27.5911, -105.82, 30.5172, 1.03 ) }
    dend_36 { pt3dadd( -27.7135, -106.441, 30.5717, 1.03 ) }
    dend_36 { pt3dadd( -28.0105, -108.079, 30.7341, 0.59 ) }
    dend_36 { pt3dadd( -28.2087, -109.198, 30.8798, 0.59 ) }
    dend_36 { pt3dadd( -28.5838, -111.166, 31.2448, 0.81 ) }
    dend_36 { pt3dadd( -28.9808, -113.109, 31.7959, 0.52 ) }
    dend_36 { pt3dadd( -29.2933, -114.613, 32.3768, 0.96 ) }
    dend_36 { pt3dadd( -29.6048, -116.228, 33.1185, 1.25 ) }
    dend_36 { pt3dadd( -29.9335, -118.235, 34.1555, 0.66 ) }
    dend_36 { pt3dadd( -30.2348, -120.256, 35.212, 0.29 ) }
    dend_36 { pt3dadd( -30.5193, -122.056, 36.1844, 0.29 ) }
    dend_36 { pt3dadd( -30.7763, -123.464, 36.9157, 0.29 ) }
    dend_36 { pt3dadd( -30.924, -124.173, 37.2422, 0.74 ) }
    dend_36 { pt3dadd( -31.2523, -125.55, 37.7892, 0.96 ) }
    dend_36 { pt3dadd( -31.9624, -128.233, 38.5853, 0.22 ) }
    dend_36 { pt3dadd( -32.4588, -129.881, 38.9053, 0.22 ) }
    dend_36 { pt3dadd( -32.9061, -131.209, 39.0641, 0.52 ) }
    dend_36 { pt3dadd( -33.2606, -132.169, 39.1476, 1.03 ) }
    dend_36 { pt3dadd( -33.684, -133.241, 39.245, 1.11 ) }
    dend_36 { pt3dadd( -34.2576, -134.595, 39.3883, 0.59 ) }
    dend_36 { pt3dadd( -34.9171, -136.052, 39.5759, 0.22 ) }
    dend_36 { pt3dadd( -35.3011, -136.876, 39.6802, 0.22 ) }
    dend_36 { pt3dadd( -35.6175, -137.553, 39.7791, 0.22 ) }
    dend_36 { pt3dadd( -36.0145, -138.43, 39.9128, 0.44 ) }
    dend_36 { pt3dadd( -36.5271, -139.627, 40.0943, 0.96 ) }
    dend_36 { pt3dadd( -37.0821, -140.995, 40.2926, 0.96 ) }
    dend_36 { pt3dadd( -37.5102, -142.052, 40.4442, 0.44 ) }
    dend_36 { pt3dadd( -38.2036, -143.722, 40.7051, 0.22 ) }
    dend_36 { pt3dadd( -38.5966, -144.667, 40.8761, 0.59 ) }
    dend_36 { pt3dadd( -38.9248, -145.483, 41.035, 0.59 ) }
    dend_36 { pt3dadd( -39.4385, -146.851, 41.3109, 0.15 ) }
    dend_36 { pt3dadd( -39.9257, -148.241, 41.6493, 0.15 ) }
    dend_36 { pt3dadd( -40.3843, -149.601, 42.0845, 0.15 ) }
    dend_36 { pt3dadd( -40.811, -150.923, 42.5475, 0.52 ) }
    dend_36 { pt3dadd( -41.0756, -151.728, 42.8614, 1.33 ) }
    dend_36 { pt3dadd( -41.5182, -153.035, 43.4054, 1.55 ) }
    dend_36 { pt3dadd( -42.0755, -154.652, 44.069, 1.18 ) }
    dend_36 { pt3dadd( -42.9895, -157.212, 45.0268, 0.37 ) }
    dend_36 { pt3dadd( -43.7349, -159.165, 45.6747, 0.22 ) }
    dend_36 { pt3dadd( -44.433, -160.855, 46.1638, 0.22 ) }
    dend_36 { pt3dadd( -45.1469, -162.474, 46.5791, 0.37 ) }
    dend_36 { pt3dadd( -45.9661, -164.243, 46.9527, 0.96 ) }
    dend_36 { pt3dadd( -46.8037, -165.99, 47.2367, 0.22 ) }
    dend_36 { pt3dadd( -47.4602, -167.324, 47.3882, 0.22 ) }
    dend_36 { pt3dadd( -48.2853, -168.993, 47.5401, 0.22 ) }
    dend_36 { pt3dadd( -48.7955, -170.062, 47.6025, 0.37 ) }
    dend_36 { pt3dadd( -49.3166, -171.181, 47.6617, 0.88 ) }
    dend_36 { pt3dadd( -50.0642, -172.889, 47.8343, 0.88 ) }
    dend_36 { pt3dadd( -50.9702, -175.157, 48.1618, 0.22 ) }
    dend_36 { pt3dadd( -51.3864, -176.298, 48.3692, 0.44 ) }
    dend_36 { pt3dadd( -51.8622, -177.674, 48.6566, 0.88 ) }
    dend_36 { pt3dadd( -52.2972, -178.957, 48.9372, 0.37 ) }
    dend_36 { pt3dadd( -53.15, -181.457, 49.4735, 0.15 ) }
    dend_36 { pt3dadd( -53.7674, -183.288, 49.8329, 0.15 ) }
    dend_36 { pt3dadd( -54.2239, -184.693, 50.1447, 0.15 ) }
    dend_36 { pt3dadd( -54.448, -185.418, 50.3163, 0.29 ) }
    dend_36 { pt3dadd( -54.8475, -186.749, 50.654, 0.96 ) }
    dend_36 { pt3dadd( -55.2986, -188.307, 51.0806, 0.29 ) }
    dend_36 { pt3dadd( -55.6929, -189.709, 51.4886, 0.15 ) }
    dend_36 { pt3dadd( -56.1439, -191.398, 52.062, 0.15 ) }
    dend_36 { pt3dadd( -56.4791, -192.702, 52.5471, 0.15 ) }
    dend_36 { pt3dadd( -56.8522, -194.213, 53.1269, 0.15 ) }
    dend_36 { pt3dadd( -57.1347, -195.374, 53.5679, 0.15 ) }
    dend_36 { pt3dadd( -57.499, -196.835, 54.0968, 0.29 ) }
    dend_36 { pt3dadd( -57.8381, -198.059, 54.49, 0.81 ) }
    dend_36 { pt3dadd( -58.3593, -199.802, 54.9544, 1.11 ) }
    dend_36 { pt3dadd( -58.8766, -201.434, 55.3266, 0.29 ) }
    dend_36 { pt3dadd( -59.4423, -203.198, 55.6538, 0.15 ) }
    dend_36 { pt3dadd( -59.95, -204.765, 55.8826, 0.15 ) }
    dend_36 { pt3dadd( -60.4464, -206.326, 56.0508, 0.15 ) }
    dend_36 { pt3dadd( -60.7696, -207.374, 56.1352, 0.15 ) }
    dend_36 { pt3dadd( -60.9357, -207.943, 56.1658, 0.37 ) }
    dend_36 { pt3dadd( -61.1937, -208.795, 56.2333, 0.88 ) }
    dend_36 { pt3dadd( -61.4299, -209.47, 56.2947, 1.11 ) }
    dend_36 { pt3dadd( -62.0007, -210.838, 56.4185, 0.29 ) }
    dend_36 { pt3dadd( -62.6545, -212.089, 56.5211, 0.15 ) }
    dend_36 { pt3dadd( -63.1353, -212.876, 56.5712, 0.15 ) }
    dend_36 { pt3dadd( -64.2225, -214.44, 56.5945, 0.15 ) }
    dend_36 { pt3dadd( -64.9433, -215.374, 56.5746, 0.59 ) }
    dend_36 { pt3dadd( -65.7302, -216.334, 56.5225, 0.59 ) }
    dend_36 { pt3dadd( -67.6219, -218.541, 56.2979, 0.15 ) }
    dend_36 { pt3dadd( -68.7479, -219.855, 56.0645, 0.15 ) }
    dend_36 { pt3dadd( -69.9572, -221.311, 55.709, 0.15 ) }
    dend_36 { pt3dadd( -70.2934, -221.743, 55.5693, 0.37 ) }
    dend_36 { pt3dadd( -71.2517, -223.069, 55.1088, 0.96 ) }
    dend_36 { pt3dadd( -72.0574, -224.259, 54.6701, 0.22 ) }
    dend_36 { pt3dadd( -72.7643, -225.406, 54.2393, 0.22 ) }
    dend_36 { pt3dadd( -73.1209, -226.051, 54.048, 0.22 ) }
    dend_36 { pt3dadd( -73.4603, -226.753, 53.8942, 0.44 ) }
    dend_36 { pt3dadd( -73.8488, -227.563, 53.7097, 0.81 ) }
    dend_36 { pt3dadd( -74.4628, -228.771, 53.4159, 0.22 ) }
    dend_36 { pt3dadd( -75.0856, -229.887, 53.1522, 0.29 ) }
    dend_36 { pt3dadd( -75.8608, -231.188, 52.8584, 0.22 ) }
    dend_36 { pt3dadd( -76.7898, -232.671, 52.4972, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -78.0036, -234.484, 52.0262, 0.07 ) }
    dend_36 { pt3dadd( -78.6928, -235.465, 51.761, 0.07 ) }
    dend_36 { pt3dadd( -79.5544, -236.63, 51.4069, 0.15 ) }
    dend_36 { pt3dadd( -80.6516, -238.03, 50.9422, 0.07 ) }
    dend_36 { pt3dadd( -81.0352, -238.489, 50.7809, 0.29 ) }
    dend_36 { pt3dadd( -81.8882, -239.473, 50.4921, 0.44 ) }
    dend_36 { pt3dadd( -82.5693, -240.275, 50.2907, 0.15 ) }
    dend_36 { pt3dadd( -83.4605, -241.354, 50.0211, 0.15 ) }
    dend_36 { pt3dadd( -83.9561, -241.959, 49.8596, 0.37 ) }
    dend_36 { pt3dadd( -84.5461, -242.687, 49.6652, 0.44 ) }
    dend_36 { pt3dadd( -85.4701, -243.89, 49.3634, 0.15 ) }
    dend_36 { pt3dadd( -85.9885, -244.6, 49.2043, 0.15 ) }
    dend_36 { pt3dadd( -86.4382, -245.201, 49.0923, 0.37 ) }
    dend_36 { pt3dadd( -86.8283, -245.729, 49.0208, 0.52 ) }
    dend_36 { pt3dadd( -87.5633, -246.791, 48.8685, 0.15 ) }
    dend_36 { pt3dadd( -87.8319, -247.206, 48.8094, 0.15 ) }
    dend_36 { pt3dadd( -88.4787, -248.266, 48.6646, 0.52 ) }
    dend_36 { pt3dadd( -89.4129, -249.881, 48.4642, 0.15 ) }
    dend_36 { pt3dadd( -89.9615, -250.898, 48.3374, 0.52 ) }
    dend_36 { pt3dadd( -90.7967, -252.579, 48.1347, 0.15 ) }
    dend_36 { pt3dadd( -91.0423, -253.141, 48.0524, 0.37 ) }
    dend_36 { pt3dadd( -91.198, -253.558, 47.9731, 0.81 ) }
    dend_36 { pt3dadd( -91.3725, -254.146, 47.823, 1.03 ) }
    dend_36 { pt3dadd( -91.622, -255.218, 47.4917, 0.07 ) }
    dend_36 { pt3dadd( -91.9149, -256.454, 47.046, 0.15 ) }
    dend_36 { pt3dadd( -92.2267, -257.607, 46.5376, 0.29 ) }
    dend_36 { pt3dadd( -92.5264, -258.657, 45.971, 0.15 ) }
    dend_36 { pt3dadd( -92.785, -259.521, 45.4159, 0.15 ) }
    dend_36 { pt3dadd( -92.9555, -260.086, 44.9958, 0.29 ) }
    dend_36 { pt3dadd( -93.183, -260.868, 44.3659, 0.37 ) }
    dend_36 { pt3dadd( -93.5261, -262.04, 43.3626, 0.22 ) }
    dend_36 { pt3dadd( -93.8496, -263.102, 42.4454, 0.22 ) }
    dend_36 { pt3dadd( -94.1954, -264.221, 41.4575, 0.22 ) }
    dend_36 { pt3dadd( -94.3838, -264.827, 40.9036, 0.22 ) }
    dend_36 { pt3dadd( -94.5411, -265.374, 40.3649, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 51.7616, 41.0381, 5.46912, 0.59 ) }
    dend_34 { pt3dadd( 53.1854, 41.2378, 5.52522, 0.59 ) }
    dend_34 { pt3dadd( 53.9771, 41.3506, 5.58732, 0.59 ) }
    dend_34 { pt3dadd( 55.1172, 41.4625, 5.72422, 0.59 ) }
    dend_34 { pt3dadd( 55.984, 41.5229, 5.78651, 0.59 ) }
    dend_34 { pt3dadd( 56.6393, 41.5593, 5.78547, 0.44 ) }
    dend_34 { pt3dadd( 57.7221, 41.6339, 5.68625, 0.59 ) }
    dend_34 { pt3dadd( 58.8034, 41.7495, 5.48581, 0.59 ) }
    dend_34 { pt3dadd( 59.9854, 41.9363, 5.16033, 0.66 ) }
    dend_34 { pt3dadd( 61.2021, 42.2339, 4.71357, 0.66 ) }
    dend_34 { pt3dadd( 62.2244, 42.6285, 4.26393, 0.66 ) }
    dend_34 { pt3dadd( 63.307, 43.2653, 3.69533, 0.52 ) }
    dend_34 { pt3dadd( 63.9002, 43.7352, 3.35259, 0.52 ) }
    dend_34 { pt3dadd( 64.4143, 44.2232, 3.07545, 0.88 ) }
    dend_34 { pt3dadd( 65.0561, 44.8789, 2.77285, 1.03 ) }
    dend_34 { pt3dadd( 65.8809, 45.7057, 2.48957, 0.74 ) }
    dend_34 { pt3dadd( 67.0246, 46.7033, 2.24171, 0.81 ) }
    dend_34 { pt3dadd( 67.6342, 47.1078, 2.17332, 0.59 ) }
    dend_34 { pt3dadd( 68.8128, 47.6663, 2.1396, 0.52 ) }
    dend_34 { pt3dadd( 69.8198, 47.9807, 2.20504, 0.81 ) }
    dend_34 { pt3dadd( 70.3839, 48.0848, 2.30749, 1.03 ) }
    dend_34 { pt3dadd( 71.7234, 48.248, 2.67231, 0.59 ) }
    dend_34 { pt3dadd( 72.9973, 48.3951, 3.08653, 0.44 ) }
    dend_34 { pt3dadd( 74.0705, 48.5655, 3.46002, 0.52 ) }
    dend_34 { pt3dadd( 75.1142, 48.8304, 3.80569, 0.52 ) }
    dend_34 { pt3dadd( 76.4269, 49.3254, 4.18016, 0.59 ) }
    dend_34 { pt3dadd( 77.4881, 49.8605, 4.38956, 0.66 ) }
    dend_34 { pt3dadd( 78.4799, 50.4818, 4.47079, 1.11 ) }
    dend_34 { pt3dadd( 79.1661, 50.9702, 4.45354, 1.18 ) }
    dend_34 { pt3dadd( 80.4981, 51.9551, 4.28243, 0.74 ) }
    dend_34 { pt3dadd( 81.3795, 52.6168, 4.11665, 0.37 ) }
    dend_34 { pt3dadd( 81.9816, 53.0746, 3.99285, 0.37 ) }
    dend_34 { pt3dadd( 82.6909, 53.612, 3.84184, 0.44 ) }
    dend_34 { pt3dadd( 83.1508, 53.9656, 3.75252, 0.44 ) }
    dend_34 { pt3dadd( 83.6878, 54.4151, 3.63668, 0.44 ) }
    dend_34 { pt3dadd( 84.4672, 55.1471, 3.47207, 0.74 ) }
    dend_34 { pt3dadd( 85.2378, 55.977, 3.26272, 0.96 ) }
    dend_34 { pt3dadd( 86.144, 57.0587, 2.93725, 0.88 ) }
    dend_34 { pt3dadd( 86.7477, 57.8071, 2.66425, 0.66 ) }
    dend_34 { pt3dadd( 87.359, 58.5295, 2.31851, 0.66 ) }
    dend_34 { pt3dadd( 87.9828, 59.2141, 1.87439, 0.37 ) }
    dend_34 { pt3dadd( 88.5517, 59.7788, 1.37329, 0.29 ) }
    dend_34 { pt3dadd( 89.0267, 60.2147, 0.882061, 0.52 ) }
    dend_34 { pt3dadd( 89.4792, 60.6236, 0.38352, 1.11 ) }
    dend_34 { pt3dadd( 90.0811, 61.1984, -0.291257, 0.59 ) }
    dend_34 { pt3dadd( 90.6658, 61.8311, -0.892735, 0.37 ) }
    dend_34 { pt3dadd( 91.0675, 62.3553, -1.26111, 0.37 ) }
    dend_34 { pt3dadd( 91.7216, 63.3337, -1.71937, 0.88 ) }
    dend_34 { pt3dadd( 92.1035, 63.9544, -1.91416, 0.96 ) }
    dend_34 { pt3dadd( 92.7788, 65.054, -2.14992, 0.74 ) }
    dend_34 { pt3dadd( 93.4677, 66.0967, -2.28038, 0.59 ) }
    dend_34 { pt3dadd( 94.1539, 66.9741, -2.33045, 0.44 ) }
    dend_34 { pt3dadd( 94.7886, 67.6621, -2.32476, 1.03 ) }
    dend_34 { pt3dadd( 95.2169, 68.0826, -2.31731, 1.03 ) }
    dend_34 { pt3dadd( 96.0032, 68.8227, -2.3393, 0.81 ) }
    dend_34 { pt3dadd( 96.4889, 69.2956, -2.36694, 0.88 ) }
    dend_34 { pt3dadd( 97.2575, 70.1718, -2.41584, 0.59 ) }
    dend_34 { pt3dadd( 98.0581, 71.2945, -2.42404, 0.44 ) }
    dend_34 { pt3dadd( 98.7847, 72.5193, -2.3298, 0.44 ) }
    dend_34 { pt3dadd( 99.1733, 73.2505, -2.20883, 0.44 ) }
    dend_34 { pt3dadd( 99.6393, 74.1755, -1.95638, 0.59 ) }
    dend_34 { pt3dadd( 100.353, 75.4897, -1.42668, 0.74 ) }
    dend_34 { pt3dadd( 100.865, 76.2589, -0.989308, 0.44 ) }
    dend_34 { pt3dadd( 101.54, 77.0324, -0.406989, 0.44 ) }
    dend_34 { pt3dadd( 102.243, 77.692, 0.197546, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 103.138, 78.4297, 0.960694, 0.88 ) }
    dend_34 { pt3dadd( 104.152, 79.1804, 1.79829, 0.88 ) }
    dend_34 { pt3dadd( 105.307, 79.9698, 2.71486, 0.37 ) }
    dend_34 { pt3dadd( 106.266, 80.6478, 3.42563, 0.29 ) }
    dend_34 { pt3dadd( 106.497, 80.82, 3.58222, 0.29 ) }
    dend_34 { pt3dadd( 106.987, 81.2152, 3.88876, 0.29 ) }
    dend_34 { pt3dadd( 107.359, 81.5279, 4.08058, 0.29 ) }
    dend_34 { pt3dadd( 107.707, 81.8295, 4.21557, 0.29 ) }
    dend_34 { pt3dadd( 108.599, 82.5883, 4.46013, 0.37 ) }
    dend_34 { pt3dadd( 109.377, 83.1854, 4.59664, 0.74 ) }
    dend_34 { pt3dadd( 110.308, 83.8629, 4.6575, 0.96 ) }
    dend_34 { pt3dadd( 111.154, 84.4661, 4.64236, 1.18 ) }
    dend_34 { pt3dadd( 111.893, 84.9851, 4.59255, 1.11 ) }
    dend_34 { pt3dadd( 112.481, 85.3948, 4.52597, 0.88 ) }
    dend_34 { pt3dadd( 113.306, 85.9586, 4.41825, 0.66 ) }
    dend_34 { pt3dadd( 114.637, 86.8405, 4.27167, 0.44 ) }
    dend_34 { pt3dadd( 115.616, 87.4408, 4.22066, 0.66 ) }
    dend_34 { pt3dadd( 116.186, 87.7651, 4.23518, 0.44 ) }
    dend_34 { pt3dadd( 116.772, 88.062, 4.30156, 0.44 ) }
    dend_34 { pt3dadd( 117.691, 88.4797, 4.48712, 0.74 ) }
    dend_34 { pt3dadd( 118.553, 88.8344, 4.73345, 1.18 ) }
    dend_34 { pt3dadd( 119.751, 89.3036, 5.17135, 1.11 ) }
    dend_34 { pt3dadd( 120.746, 89.724, 5.56058, 0.81 ) }
    dend_34 { pt3dadd( 121.845, 90.2295, 5.9961, 0.44 ) }
    dend_34 { pt3dadd( 122.704, 90.6428, 6.33471, 0.44 ) }
    dend_34 { pt3dadd( 123.238, 90.9055, 6.53477, 0.44 ) }
    dend_34 { pt3dadd( 123.968, 91.2653, 6.78128, 0.66 ) }
    dend_34 { pt3dadd( 124.963, 91.7396, 7.09899, 0.37 ) }
    dend_34 { pt3dadd( 125.475, 91.9774, 7.25833, 0.29 ) }
    dend_34 { pt3dadd( 125.978, 92.224, 7.42991, 0.29 ) }
    dend_34 { pt3dadd( 126.605, 92.5466, 7.68519, 0.29 ) }
    dend_34 { pt3dadd( 127.31, 92.9397, 8.00927, 0.81 ) }
    dend_34 { pt3dadd( 127.963, 93.3589, 8.36311, 1.03 ) }
    dend_34 { pt3dadd( 128.835, 94.0153, 8.93597, 0.59 ) }
    dend_34 { pt3dadd( 129.76, 94.7788, 9.6681, 0.52 ) }
    dend_34 { pt3dadd( 130.495, 95.4217, 10.2995, 0.74 ) }
    dend_34 { pt3dadd( 130.991, 95.8549, 10.7569, 0.37 ) }
    dend_34 { pt3dadd( 131.92, 96.6339, 11.6127, 0.29 ) }
    dend_34 { pt3dadd( 132.744, 97.2894, 12.3393, 0.29 ) }
    dend_34 { pt3dadd( 133.877, 98.1186, 13.32, 0.29 ) }
    dend_34 { pt3dadd( 134.307, 98.4144, 13.6721, 0.88 ) }
    dend_34 { pt3dadd( 135.027, 98.9027, 14.2222, 0.88 ) }
    dend_34 { pt3dadd( 135.887, 99.459, 14.8163, 0.29 ) }
    dend_34 { pt3dadd( 136.559, 99.8812, 15.2168, 0.22 ) }
    dend_34 { pt3dadd( 137.271, 100.349, 15.5697, 0.29 ) }
    dend_34 { pt3dadd( 138.026, 100.871, 15.8694, 0.74 ) }
    dend_34 { pt3dadd( 138.576, 101.253, 16.0651, 0.29 ) }
    dend_34 { pt3dadd( 139.714, 102.048, 16.3977, 0.22 ) }
    dend_34 { pt3dadd( 140.517, 102.612, 16.6151, 0.22 ) }
    dend_34 { pt3dadd( 141.209, 103.088, 16.767, 0.37 ) }
    dend_34 { pt3dadd( 142.106, 103.682, 16.9198, 0.74 ) }
    dend_34 { pt3dadd( 142.749, 104.081, 17.0319, 0.74 ) }
    dend_34 { pt3dadd( 143.447, 104.511, 17.1526, 0.29 ) }
    dend_34 { pt3dadd( 144.308, 105.038, 17.3097, 0.22 ) }
    dend_34 { pt3dadd( 144.942, 105.394, 17.4445, 0.37 ) }
    dend_34 { pt3dadd( 145.765, 105.801, 17.6552, 0.22 ) }
    dend_34 { pt3dadd( 146.617, 106.17, 17.893, 0.22 ) }
    dend_34 { pt3dadd( 147.057, 106.334, 18.0262, 0.37 ) }
    dend_34 { pt3dadd( 148.006, 106.64, 18.3228, 0.37 ) }
    dend_34 { pt3dadd( 149.012, 106.929, 18.6551, 0.37 ) }
    dend_34 { pt3dadd( 149.813, 107.174, 18.9415, 0.44 ) }
    dend_34 { pt3dadd( 150.37, 107.359, 19.1539, 0.81 ) }
    dend_34 { pt3dadd( 151.209, 107.67, 19.4954, 1.47 ) }
    dend_34 { pt3dadd( 151.732, 107.885, 19.732, 1.62 ) }
    dend_34 { pt3dadd( 152.886, 108.407, 20.3088, 0.59 ) }
    dend_34 { pt3dadd( 154.284, 109.077, 21.0702, 0.29 ) }
    dend_34 { pt3dadd( 155.178, 109.52, 21.5794, 0.22 ) }
    dend_34 { pt3dadd( 155.733, 109.8, 21.912, 0.22 ) }
    dend_34 { pt3dadd( 156.218, 110.055, 22.2049, 0.22 ) }
    dend_34 { pt3dadd( 156.695, 110.31, 22.492, 0.22 ) }
    dend_34 { pt3dadd( 157.163, 110.56, 22.7617, 0.22 ) }
    dend_34 { pt3dadd( 157.82, 110.88, 23.1321, 0.37 ) }
    dend_34 { pt3dadd( 158.393, 111.141, 23.4337, 0.88 ) }
    dend_34 { pt3dadd( 158.872, 111.352, 23.6683, 1.25 ) }
    dend_34 { pt3dadd( 159.621, 111.682, 24.0336, 1.25 ) }
    dend_34 { pt3dadd( 160.345, 112.01, 24.4113, 0.29 ) }
    dend_34 { pt3dadd( 161.076, 112.356, 24.8292, 0.15 ) }
    dend_34 { pt3dadd( 161.642, 112.636, 25.1591, 0.29 ) }
    dend_34 { pt3dadd( 162.387, 113.017, 25.5685, 0.15 ) }
    dend_34 { pt3dadd( 162.849, 113.262, 25.824, 0.15 ) }
    dend_34 { pt3dadd( 163.22, 113.468, 26.0202, 0.44 ) }
    dend_34 { pt3dadd( 164.157, 114.003, 26.4273, 0.74 ) }
    dend_34 { pt3dadd( 164.922, 114.442, 26.7179, 0.22 ) }
    dend_34 { pt3dadd( 165.78, 114.928, 27.0032, 0.15 ) }
    dend_34 { pt3dadd( 166.382, 115.274, 27.1787, 0.66 ) }
    dend_34 { pt3dadd( 166.925, 115.619, 27.3121, 0.66 ) }
    dend_34 { pt3dadd( 168.266, 116.543, 27.6367, 0.22 ) }
    dend_34 { pt3dadd( 168.894, 117.021, 27.7929, 0.66 ) }
    dend_34 { pt3dadd( 169.403, 117.458, 27.9341, 1.18 ) }
    dend_34 { pt3dadd( 169.896, 117.931, 28.0984, 0.96 ) }
    dend_34 { pt3dadd( 171.013, 119.08, 28.5212, 0.15 ) }
    dend_34 { pt3dadd( 171.408, 119.519, 28.6954, 0.15 ) }
    dend_34 { pt3dadd( 171.86, 120.07, 28.9168, 0.22 ) }
    dend_34 { pt3dadd( 172.382, 120.669, 29.1689, 0.07 ) }
    dend_34 { pt3dadd( 173.12, 121.42, 29.5551, 0.07 ) }
    dend_34 { pt3dadd( 173.42, 121.686, 29.7287, 0.74 ) }
    dend_34 { pt3dadd( 174.02, 122.146, 30.0895, 1.03 ) }
    dend_34 { pt3dadd( 174.684, 122.618, 30.4845, 0.44 ) }
    dend_34 { pt3dadd( 175.739, 123.301, 31.196, 0.15 ) }
    dend_34 { pt3dadd( 176.467, 123.73, 31.7534, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_34 { pt3dadd( 176.943, 123.99, 32.1747, 0.15 ) }
    dend_34 { pt3dadd( 177.332, 124.186, 32.5733, 0.37 ) }
    dend_34 { pt3dadd( 177.873, 124.417, 33.2044, 0.59 ) }
    dend_34 { pt3dadd( 178.92, 124.777, 34.6246, 0.22 ) }
    dend_34 { pt3dadd( 179.478, 124.936, 35.4997, 0.44 ) }
    dend_34 { pt3dadd( 179.942, 125.033, 36.3253, 0.44 ) }
    dend_34 { pt3dadd( 180.217, 125.068, 36.8661, 0.44 ) }
    dend_34 { pt3dadd( 180.459, 125.061, 37.394, 0.44 ) }
    dend_34 { pt3dadd( 180.875, 124.961, 38.3172, 0.44 ) }
    dend_34 { pt3dadd( 180.993, 124.915, 38.5672, 0.44 ) }
    dend_34 { pt3dadd( 181.178, 124.838, 38.9377, 0.44 ) }
    dend_34 { pt3dadd( 181.53, 124.689, 39.5671, 0.44 ) }
    dend_34 { pt3dadd( 181.902, 124.521, 40.1782, 0.44 ) }
    dend_34 { pt3dadd( 182.892, 124.05, 41.7099, 0.22 ) }
    dend_34 { pt3dadd( 183.577, 123.706, 42.7013, 0.22 ) }
    dend_34 { pt3dadd( 184.119, 123.416, 43.4784, 0.22 ) }
    dend_34 { pt3dadd( 184.614, 123.126, 44.1982, 0.74 ) }
    dend_34 { pt3dadd( 185.665, 122.424, 45.7782, 0.22 ) }
    dend_34 { pt3dadd( 186.514, 121.794, 47.131, 0.52 ) }
    dend_34 { pt3dadd( 187.154, 121.277, 48.1914, 0.22 ) }
    dend_34 { pt3dadd( 187.735, 120.796, 49.2007, 0.52 ) }
    dend_34 { pt3dadd( 188.272, 120.348, 50.1946, 0.52 ) }
    dend_34 { pt3dadd( 188.818, 119.882, 51.3745, 0.29 ) }
    dend_34 { pt3dadd( 189.29, 119.472, 52.6541, 0.29 ) }
    dend_34 { pt3dadd( 189.46, 119.331, 53.2685, 0.29 ) }
    dend_34 { pt3dadd( 189.643, 119.232, 54.1558, 0.29 ) }
    dend_34 { pt3dadd( 189.728, 119.248, 54.6051, 0.29 ) }
    dend_34 { pt3dadd( 189.914, 119.403, 55.4884, 0.29 ) }
    dend_34 { pt3dadd( 190.194, 119.696, 56.4976, 0.29 ) }
    dend_34 { pt3dadd( 190.388, 119.864, 56.9852, 0.29 ) }
    dend_34 { pt3dadd( 190.712, 120.071, 57.6338, 0.52 ) }
    dend_34 { pt3dadd( 191.293, 120.349, 58.6893, 0.22 ) }
    dend_34 { pt3dadd( 192.075, 120.685, 59.9066, 0.22 ) }
    dend_34 { pt3dadd( 192.674, 120.932, 60.74, 0.22 ) }
    dend_34 { pt3dadd( 193.186, 121.18, 61.407, 0.52 ) }
    dend_34 { pt3dadd( 194.088, 121.713, 62.5715, 0.52 ) }
    dend_34 { pt3dadd( 194.903, 122.22, 63.646, 0.52 ) }
    dend_34 { pt3dadd( 196.032, 123.023, 65.1469, 0.22 ) }
    dend_34 { pt3dadd( 196.782, 123.651, 66.1217, 0.22 ) }
    dend_34 { pt3dadd( 197.549, 124.395, 67.1349, 0.22 ) }
    dend_34 { pt3dadd( 198.112, 125.025, 67.854, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 51.7616, 41.0381, 5.46912, 0.81 ) }
    dend_33 { pt3dadd( 52.1141, 43.1042, 4.89386, 0.81 ) }
    dend_33 { pt3dadd( 52.5269, 44.8622, 4.15982, 0.52 ) }
    dend_33 { pt3dadd( 52.9091, 46.1491, 3.43997, 0.66 ) }
    dend_33 { pt3dadd( 53.4647, 47.813, 2.17766, 0.44 ) }
    dend_33 { pt3dadd( 53.8707, 49.095, 0.966535, 0.44 ) }
    dend_33 { pt3dadd( 54.2304, 50.3175, -0.362431, 0.44 ) }
    dend_33 { pt3dadd( 54.5069, 51.1066, -1.58066, 0.44 ) }
    dend_33 { pt3dadd( 54.7535, 51.6381, -2.74947, 0.44 ) }
    dend_33 { pt3dadd( 55.0714, 52.2211, -4.43658, 0.44 ) }
    dend_33 { pt3dadd( 55.2918, 52.6074, -5.72436, 0.44 ) }
    dend_33 { pt3dadd( 55.4538, 52.8685, -6.51945, 0.44 ) }
    dend_33 { pt3dadd( 55.7543, 53.3863, -7.73821, 0.59 ) }
    dend_33 { pt3dadd( 56.1642, 54.1979, -9.02495, 0.59 ) }
    dend_33 { pt3dadd( 56.3671, 54.6209, -9.47446, 0.59 ) }
    dend_33 { pt3dadd( 56.792, 55.5197, -10.1736, 0.66 ) }
    dend_33 { pt3dadd( 57.1432, 56.3223, -10.6679, 0.96 ) }
    dend_33 { pt3dadd( 57.4428, 57.1724, -11.0858, 0.96 ) }
    dend_33 { pt3dadd( 57.7922, 58.4368, -11.5628, 0.96 ) }
    dend_33 { pt3dadd( 58.2511, 60.2926, -12.1071, 0.88 ) }
    dend_33 { pt3dadd( 58.5386, 61.4811, -12.3964, 0.52 ) }
    dend_33 { pt3dadd( 58.8869, 62.7391, -12.644, 0.29 ) }
    dend_33 { pt3dadd( 59.2274, 63.8128, -12.8092, 0.29 ) }
    dend_33 { pt3dadd( 59.5933, 64.7817, -12.9175, 0.44 ) }
    dend_33 { pt3dadd( 60.0332, 65.7837, -12.9766, 0.88 ) }
    dend_33 { pt3dadd( 60.5767, 66.9415, -13.0361, 0.66 ) }
    dend_33 { pt3dadd( 61.3782, 68.6781, -13.203, 0.52 ) }
    dend_33 { pt3dadd( 61.797, 69.6748, -13.3716, 0.59 ) }
    dend_33 { pt3dadd( 62.4316, 71.4088, -13.805, 0.74 ) }
    dend_33 { pt3dadd( 62.9997, 73.3031, -14.4619, 0.88 ) }
    dend_33 { pt3dadd( 63.3004, 74.5889, -15.0406, 0.52 ) }
    dend_33 { pt3dadd( 63.5376, 75.9461, -15.7756, 0.52 ) }
    dend_33 { pt3dadd( 63.7338, 77.3522, -16.6692, 0.59 ) }
    dend_33 { pt3dadd( 63.8788, 78.0948, -17.2124, 0.59 ) }
    dend_33 { pt3dadd( 64.1233, 78.9672, -17.9272, 0.81 ) }
    dend_33 { pt3dadd( 64.5414, 80.039, -18.8296, 0.81 ) }
    dend_33 { pt3dadd( 65.0728, 81.0755, -19.5719, 0.81 ) }
    dend_33 { pt3dadd( 65.7561, 82.1764, -20.1927, 0.52 ) }
    dend_33 { pt3dadd( 66.8478, 83.7871, -20.8579, 0.29 ) }
    dend_33 { pt3dadd( 67.3881, 84.5424, -21.0765, 0.29 ) }
    dend_33 { pt3dadd( 68.1315, 85.4897, -21.2518, 0.59 ) }
    dend_33 { pt3dadd( 69.2644, 86.811, -21.3669, 0.81 ) }
    dend_33 { pt3dadd( 69.9768, 87.6082, -21.398, 1.03 ) }
    dend_33 { pt3dadd( 70.8271, 88.604, -21.3835, 0.29 ) }
    dend_33 { pt3dadd( 71.574, 89.5707, -21.3582, 0.22 ) }
    dend_33 { pt3dadd( 72.3014, 90.6558, -21.3618, 0.22 ) }
    dend_33 { pt3dadd( 72.7574, 91.5438, -21.4237, 0.29 ) }
    dend_33 { pt3dadd( 73.2833, 92.8862, -21.5813, 0.74 ) }
    dend_33 { pt3dadd( 73.6417, 94.0395, -21.7021, 0.88 ) }
    dend_33 { pt3dadd( 73.9289, 95.1726, -21.8207, 0.88 ) }
    dend_33 { pt3dadd( 74.1944, 96.5134, -21.9424, 0.52 ) }
    dend_33 { pt3dadd( 74.5324, 98.6707, -22.0976, 0.52 ) }
    dend_33 { pt3dadd( 74.7003, 100.014, -22.1809, 0.44 ) }
    dend_33 { pt3dadd( 74.8867, 101.979, -22.3112, 0.44 ) }
    dend_33 { pt3dadd( 74.9579, 103.342, -22.423, 0.44 ) }
    dend_33 { pt3dadd( 74.9569, 104.657, -22.537, 0.74 ) }
    dend_33 { pt3dadd( 74.9025, 105.567, -22.5979, 0.88 ) }
    dend_33 { pt3dadd( 74.6553, 107.477, -22.6743, 0.96 ) }
    dend_33 { pt3dadd( 74.3782, 109.254, -22.6666, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 74.2222, 110.501, -22.5566, 0.22 ) }
    dend_33 { pt3dadd( 74.2023, 111.488, -22.3345, 0.22 ) }
    dend_33 { pt3dadd( 74.3946, 112.961, -21.7994, 0.74 ) }
    dend_33 { pt3dadd( 74.5198, 113.457, -21.5844, 0.74 ) }
    dend_33 { pt3dadd( 75.1175, 115.177, -20.7931, 0.52 ) }
    dend_33 { pt3dadd( 75.7762, 116.894, -20.0952, 0.44 ) }
    dend_33 { pt3dadd( 76.3603, 118.431, -19.641, 0.44 ) }
    dend_33 { pt3dadd( 76.8673, 120.002, -19.3733, 0.66 ) }
    dend_33 { pt3dadd( 77.2428, 121.616, -19.3132, 0.66 ) }
    dend_33 { pt3dadd( 77.4177, 122.78, -19.3247, 0.66 ) }
    dend_33 { pt3dadd( 77.5581, 124.626, -19.47, 0.29 ) }
    dend_33 { pt3dadd( 77.6012, 125.916, -19.5775, 0.29 ) }
    dend_33 { pt3dadd( 77.6338, 127.361, -19.5783, 0.44 ) }
    dend_33 { pt3dadd( 77.6519, 128.265, -19.4593, 0.44 ) }
    dend_33 { pt3dadd( 77.6966, 129.859, -18.9799, 0.74 ) }
    dend_33 { pt3dadd( 77.7149, 130.583, -18.6841, 1.11 ) }
    dend_33 { pt3dadd( 77.742, 132.294, -17.9013, 0.44 ) }
    dend_33 { pt3dadd( 77.7356, 134.088, -17.0972, 0.74 ) }
    dend_33 { pt3dadd( 77.697, 134.943, -16.7811, 0.52 ) }
    dend_33 { pt3dadd( 77.5929, 135.96, -16.5305, 0.29 ) }
    dend_33 { pt3dadd( 77.4189, 136.986, -16.4453, 0.22 ) }
    dend_33 { pt3dadd( 77.057, 138.421, -16.5464, 0.59 ) }
    dend_33 { pt3dadd( 76.695, 139.548, -16.796, 0.96 ) }
    dend_33 { pt3dadd( 76.2486, 140.765, -17.1381, 0.66 ) }
    dend_33 { pt3dadd( 75.7011, 142.217, -17.5008, 0.44 ) }
    dend_33 { pt3dadd( 75.1591, 143.747, -17.7764, 0.44 ) }
    dend_33 { pt3dadd( 74.6204, 145.533, -17.8404, 0.22 ) }
    dend_33 { pt3dadd( 74.4076, 146.496, -17.7152, 0.37 ) }
    dend_33 { pt3dadd( 74.2208, 147.985, -17.2928, 0.59 ) }
    dend_33 { pt3dadd( 74.1621, 149.632, -16.6145, 0.29 ) }
    dend_33 { pt3dadd( 74.2134, 151.277, -15.8071, 0.29 ) }
    dend_33 { pt3dadd( 74.2776, 152.991, -14.915, 0.37 ) }
    dend_33 { pt3dadd( 74.2543, 153.824, -14.4828, 0.29 ) }
    dend_33 { pt3dadd( 74.0751, 155.123, -13.8904, 0.66 ) }
    dend_33 { pt3dadd( 73.7617, 156.259, -13.4895, 1.11 ) }
    dend_33 { pt3dadd( 73.3714, 157.206, -13.2522, 1.11 ) }
    dend_33 { pt3dadd( 72.5125, 158.923, -12.9938, 0.37 ) }
    dend_33 { pt3dadd( 71.466, 160.948, -12.8265, 0.22 ) }
    dend_33 { pt3dadd( 71.0476, 161.772, -12.7786, 0.59 ) }
    dend_33 { pt3dadd( 70.6365, 162.578, -12.7474, 1.11 ) }
    dend_33 { pt3dadd( 69.7581, 164.38, -12.712, 0.29 ) }
    dend_33 { pt3dadd( 68.8835, 166.403, -12.7218, 0.96 ) }
    dend_33 { pt3dadd( 68.4072, 167.804, -12.8033, 0.15 ) }
    dend_33 { pt3dadd( 68.2106, 168.582, -12.8874, 0.22 ) }
    dend_33 { pt3dadd( 67.7924, 170.419, -13.1801, 0.07 ) }
    dend_33 { pt3dadd( 67.6255, 171.18, -13.3739, 0.22 ) }
    dend_33 { pt3dadd( 67.5362, 171.605, -13.5317, 0.22 ) }
    dend_33 { pt3dadd( 67.3089, 172.86, -14.1726, 0.07 ) }
    dend_33 { pt3dadd( 67.2389, 173.399, -14.5155, 0.22 ) }
    dend_33 { pt3dadd( 67.2044, 173.956, -14.9233, 0.22 ) }
    dend_33 { pt3dadd( 67.2455, 174.964, -15.7654, 0.15 ) }
    dend_33 { pt3dadd( 67.265, 175.463, -16.206, 0.29 ) }
    dend_33 { pt3dadd( 67.2614, 176.417, -17.0396, 0.07 ) }
    dend_33 { pt3dadd( 67.226, 176.978, -17.5038, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.43149, -29.5419, -0.701943, 0.81 ) }
    dend_31 { pt3dadd( -0.791006, -30.3406, -1.70202, 0.81 ) }
    dend_31 { pt3dadd( 0.0444037, -31.2728, -2.93069, 0.81 ) }
    dend_31 { pt3dadd( 0.565158, -31.7818, -3.63853, 0.81 ) }
    dend_31 { pt3dadd( 1.22131, -32.3276, -4.42604, 0.88 ) }
    dend_31 { pt3dadd( 1.90112, -32.7865, -5.141, 1.18 ) }
    dend_31 { pt3dadd( 2.40389, -33.0552, -5.61028, 1.18 ) }
    dend_31 { pt3dadd( 2.82398, -33.2027, -5.94773, 1.18 ) }
    dend_31 { pt3dadd( 3.60394, -33.4122, -6.44752, 0.96 ) }
    dend_31 { pt3dadd( 4.57356, -33.6559, -6.97858, 0.96 ) }
    dend_31 { pt3dadd( 5.6849, -33.93, -7.5261, 0.81 ) }
    dend_31 { pt3dadd( 7.09583, -34.3057, -8.13234, 0.81 ) }
    dend_31 { pt3dadd( 7.93988, -34.5546, -8.42795, 0.81 ) }
    dend_31 { pt3dadd( 9.24828, -34.9717, -8.74804, 0.81 ) }
    dend_31 { pt3dadd( 10.4197, -35.3773, -8.88032, 0.88 ) }
    dend_31 { pt3dadd( 11.4062, -35.7598, -8.82767, 0.88 ) }
    dend_31 { pt3dadd( 12.2943, -36.1599, -8.57035, 0.59 ) }
    dend_31 { pt3dadd( 13.1793, -36.592, -8.07063, 0.59 ) }
    dend_31 { pt3dadd( 14.1867, -37.0715, -7.25227, 0.59 ) }
    dend_31 { pt3dadd( 14.8474, -37.3631, -6.5555, 0.74 ) }
    dend_31 { pt3dadd( 15.4849, -37.6212, -5.77315, 0.59 ) }
    dend_31 { pt3dadd( 16.258, -37.926, -4.76911, 0.59 ) }
    dend_31 { pt3dadd( 16.9756, -38.2143, -3.86274, 0.88 ) }
    dend_31 { pt3dadd( 17.8623, -38.5779, -2.86483, 0.88 ) }
    dend_31 { pt3dadd( 18.7224, -38.9582, -2.04424, 1.03 ) }
    dend_31 { pt3dadd( 19.7398, -39.4561, -1.26006, 0.81 ) }
    dend_31 { pt3dadd( 20.4828, -39.8576, -0.811796, 0.66 ) }
    dend_31 { pt3dadd( 21.3158, -40.374, -0.425435, 0.66 ) }
    dend_31 { pt3dadd( 22.2842, -41.0866, -0.00568655, 0.44 ) }
    dend_31 { pt3dadd( 23.3887, -42.0109, 0.522097, 0.44 ) }
    dend_31 { pt3dadd( 24.2063, -42.7499, 1.03256, 0.66 ) }
    dend_31 { pt3dadd( 24.6533, -43.1808, 1.40986, 1.11 ) }
    dend_31 { pt3dadd( 25.4366, -43.9475, 2.3325, 1.25 ) }
    dend_31 { pt3dadd( 26.3333, -44.8194, 3.66015, 0.44 ) }
    dend_31 { pt3dadd( 27.0335, -45.4771, 4.81949, 0.52 ) }
    dend_31 { pt3dadd( 27.799, -46.1532, 6.15604, 0.52 ) }
    dend_31 { pt3dadd( 28.3658, -46.6322, 7.15283, 0.52 ) }
    dend_31 { pt3dadd( 29.1407, -47.3151, 8.53756, 0.59 ) }
    dend_31 { pt3dadd( 29.5865, -47.7362, 9.34881, 0.96 ) }
    dend_31 { pt3dadd( 30.0568, -48.2249, 10.2132, 1.11 ) }
    dend_31 { pt3dadd( 30.5977, -48.8421, 11.226, 0.81 ) }
    dend_31 { pt3dadd( 31.1579, -49.511, 12.3077, 0.52 ) }
    dend_31 { pt3dadd( 31.5972, -49.9859, 13.1718, 0.52 ) }
    dend_31 { pt3dadd( 31.7638, -50.1507, 13.4941, 0.52 ) }
    dend_31 { pt3dadd( 32.0182, -50.3804, 13.9836, 0.52 ) }
    dend_31 { pt3dadd( 32.28, -50.5885, 14.4073, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 32.8487, -50.9785, 15.107, 0.96 ) }
    dend_31 { pt3dadd( 33.8337, -51.5966, 16.0214, 0.44 ) }
    dend_31 { pt3dadd( 34.4314, -51.9749, 16.4731, 0.81 ) }
    dend_31 { pt3dadd( 35.0226, -52.3745, 16.8859, 1.03 ) }
    dend_31 { pt3dadd( 36.1803, -53.237, 17.609, 0.44 ) }
    dend_31 { pt3dadd( 36.8948, -53.8131, 18.0436, 0.44 ) }
    dend_31 { pt3dadd( 37.3994, -54.2455, 18.3615, 0.88 ) }
    dend_31 { pt3dadd( 37.8918, -54.6885, 18.715, 1.55 ) }
    dend_31 { pt3dadd( 38.5697, -55.2979, 19.282, 1.55 ) }
    dend_31 { pt3dadd( 39.3384, -56.0119, 20.052, 0.52 ) }
    dend_31 { pt3dadd( 40.2048, -56.8769, 21.0764, 0.22 ) }
    dend_31 { pt3dadd( 40.6086, -57.3003, 21.5994, 0.22 ) }
    dend_31 { pt3dadd( 41.0372, -57.7686, 22.2173, 0.22 ) }
    dend_31 { pt3dadd( 41.3646, -58.1367, 22.7255, 0.74 ) }
    dend_31 { pt3dadd( 41.7416, -58.5605, 23.3056, 1.18 ) }
    dend_31 { pt3dadd( 42.0308, -58.8867, 23.7485, 1.18 ) }
    dend_31 { pt3dadd( 42.834, -59.7949, 24.8478, 0.22 ) }
    dend_31 { pt3dadd( 43.2015, -60.1894, 25.2852, 0.22 ) }
    dend_31 { pt3dadd( 43.8175, -60.8137, 25.8956, 0.88 ) }
    dend_31 { pt3dadd( 44.6584, -61.6405, 26.6239, 0.15 ) }
    dend_31 { pt3dadd( 45.0538, -62.0143, 26.9242, 0.96 ) }
    dend_31 { pt3dadd( 45.5205, -62.4474, 27.2369, 1.25 ) }
    dend_31 { pt3dadd( 46.5143, -63.3493, 27.7627, 0.15 ) }
    dend_31 { pt3dadd( 47.6608, -64.3718, 28.2585, 0.15 ) }
    dend_31 { pt3dadd( 48.1664, -64.8244, 28.4436, 0.15 ) }
    dend_31 { pt3dadd( 49.0331, -65.6202, 28.7225, 0.15 ) }
    dend_31 { pt3dadd( 49.4649, -66.0286, 28.8672, 0.96 ) }
    dend_31 { pt3dadd( 50.2352, -66.7902, 29.15, 1.4 ) }
    dend_31 { pt3dadd( 50.5415, -67.1065, 29.2663, 1.33 ) }
    dend_31 { pt3dadd( 51.322, -67.9478, 29.6352, 0.22 ) }
    dend_31 { pt3dadd( 51.7571, -68.4118, 29.8592, 0.29 ) }
    dend_31 { pt3dadd( 52.433, -69.1282, 30.2349, 0.59 ) }
    dend_31 { pt3dadd( 53.0372, -69.7452, 30.5839, 0.59 ) }
    dend_31 { pt3dadd( 53.6257, -70.3049, 30.9466, 1.7 ) }
    dend_31 { pt3dadd( 54.1902, -70.7951, 31.2973, 0.81 ) }
    dend_31 { pt3dadd( 55.2189, -71.6017, 31.9421, 0.15 ) }
    dend_31 { pt3dadd( 55.654, -71.9161, 32.225, 0.44 ) }
    dend_31 { pt3dadd( 56.2062, -72.2827, 32.5695, 0.74 ) }
    dend_31 { pt3dadd( 57.2686, -72.9514, 33.2613, 0.22 ) }
    dend_31 { pt3dadd( 57.8808, -73.3195, 33.6693, 0.96 ) }
    dend_31 { pt3dadd( 58.5019, -73.6748, 34.0847, 1.25 ) }
    dend_31 { pt3dadd( 59.2839, -74.1215, 34.6521, 0.29 ) }
    dend_31 { pt3dadd( 60.2967, -74.6954, 35.3939, 0.07 ) }
    dend_31 { pt3dadd( 60.7945, -74.9742, 35.7557, 0.29 ) }
    dend_31 { pt3dadd( 61.5039, -75.3737, 36.2476, 0.74 ) }
    dend_31 { pt3dadd( 62.6397, -76.0299, 37.0485, 0.15 ) }
    dend_31 { pt3dadd( 63.4156, -76.4995, 37.6499, 0.15 ) }
    dend_31 { pt3dadd( 63.7715, -76.7338, 37.97, 0.15 ) }
    dend_31 { pt3dadd( 64.058, -76.9479, 38.2907, 0.74 ) }
    dend_31 { pt3dadd( 64.2324, -77.0878, 38.5085, 0.96 ) }
    dend_31 { pt3dadd( 64.9764, -77.7229, 39.529, 0.15 ) }
    dend_31 { pt3dadd( 65.4166, -78.1146, 40.1527, 0.15 ) }
    dend_31 { pt3dadd( 65.9615, -78.6257, 40.9248, 0.88 ) }
    dend_31 { pt3dadd( 66.6672, -79.3495, 42.0262, 0.15 ) }
    dend_31 { pt3dadd( 66.837, -79.5405, 42.3247, 0.15 ) }
    dend_31 { pt3dadd( 67.1094, -79.8613, 42.794, 0.29 ) }
    dend_31 { pt3dadd( 67.3059, -80.1076, 43.1363, 0.29 ) }
    dend_31 { pt3dadd( 67.7252, -80.6501, 43.9267, 0.15 ) }
    dend_31 { pt3dadd( 68.1282, -81.2028, 44.8223, 0.15 ) }
    dend_31 { pt3dadd( 68.453, -81.6474, 45.649, 0.15 ) }
    dend_31 { pt3dadd( 68.7491, -82.0545, 46.5277, 1.03 ) }
    dend_31 { pt3dadd( 69.1742, -82.634, 48.0491, 0.15 ) }
    dend_31 { pt3dadd( 69.4762, -83.0193, 49.2578, 0.15 ) }
    dend_31 { pt3dadd( 69.6951, -83.2524, 50.1232, 0.15 ) }
    dend_31 { pt3dadd( 69.9864, -83.5296, 51.2996, 0.15 ) }
    dend_31 { pt3dadd( 70.264, -83.7835, 52.5339, 0.15 ) }
    dend_31 { pt3dadd( 70.5374, -84.023, 53.9288, 0.15 ) }
    dend_31 { pt3dadd( 70.7528, -84.1982, 55.1247, 0.15 ) }
    dend_31 { pt3dadd( 70.9577, -84.3615, 56.2643, 0.15 ) }
    dend_31 { pt3dadd( 71.2074, -84.5581, 57.6718, 0.15 ) }
    dend_31 { pt3dadd( 71.4702, -84.7783, 59.2579, 0.15 ) }
    dend_31 { pt3dadd( 71.6195, -84.8993, 60.1451, 0.15 ) }
    dend_31 { pt3dadd( 71.9763, -85.1957, 62.3263, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.43149, -29.5419, -0.701943, 0.96 ) }
    dend_26 { pt3dadd( -2.27724, -30.7122, -1.10914, 0.96 ) }
    dend_26 { pt3dadd( -2.98743, -31.9782, -1.54491, 0.74 ) }
    dend_26 { pt3dadd( -3.55712, -33.3471, -2.01784, 0.74 ) }
    dend_26 { pt3dadd( -4.02349, -34.7887, -2.51506, 1.03 ) }
    dend_26 { pt3dadd( -4.28581, -35.8035, -2.87071, 1.18 ) }
    dend_26 { pt3dadd( -4.64378, -37.3699, -3.43292, 0.81 ) }
    dend_26 { pt3dadd( -4.82625, -38.6168, -3.87456, 0.81 ) }
    dend_26 { pt3dadd( -4.98798, -39.9397, -4.34039, 0.88 ) }
    dend_26 { pt3dadd( -5.08022, -40.6326, -4.58176, 1.25 ) }
    dend_26 { pt3dadd( -5.28646, -41.8902, -4.99705, 1.25 ) }
    dend_26 { pt3dadd( -5.68643, -43.9441, -5.64949, 0.96 ) }
    dend_26 { pt3dadd( -6.05577, -45.6055, -6.09843, 0.74 ) }
    dend_26 { pt3dadd( -6.38061, -47.0533, -6.39272, 0.74 ) }
    dend_26 { pt3dadd( -6.64868, -48.4179, -6.6068, 0.96 ) }
    dend_26 { pt3dadd( -6.83064, -49.6825, -6.746, 0.74 ) }
    dend_26 { pt3dadd( -6.93599, -51.1471, -6.82784, 0.74 ) }
    dend_26 { pt3dadd( -6.93531, -53.2773, -6.80943, 0.96 ) }
    dend_26 { pt3dadd( -6.84757, -54.7821, -6.70544, 0.74 ) }
    dend_26 { pt3dadd( -6.68121, -56.2104, -6.53881, 0.81 ) }
    dend_26 { pt3dadd( -6.41679, -57.8743, -6.25913, 1.18 ) }
    dend_26 { pt3dadd( -6.08544, -59.5831, -5.89501, 1.18 ) }
    dend_26 { pt3dadd( -5.55118, -62.0155, -5.29685, 0.96 ) }
    dend_26 { pt3dadd( -5.10041, -64.0333, -4.75822, 0.96 ) }
    dend_26 { pt3dadd( -4.78911, -65.5802, -4.30853, 1.03 ) }
    dend_26 { pt3dadd( -4.50173, -67.2583, -3.77088, 0.74 ) }
    dend_26 { pt3dadd( -4.30104, -68.7519, -3.27934, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -4.21783, -70.2416, -2.78787, 1.03 ) }
    dend_26 { pt3dadd( -4.3124, -71.802, -2.3132, 0.88 ) }
    dend_26 { pt3dadd( -4.65036, -73.4652, -1.88342, 0.66 ) }
    dend_26 { pt3dadd( -4.957, -74.4418, -1.67217, 0.59 ) }
    dend_26 { pt3dadd( -5.32003, -75.3961, -1.50389, 0.81 ) }
    dend_26 { pt3dadd( -6.03116, -77.1162, -1.25583, 0.59 ) }
    dend_26 { pt3dadd( -6.59027, -78.4905, -1.11289, 0.81 ) }
    dend_26 { pt3dadd( -6.9758, -79.58, -1.06762, 0.81 ) }
    dend_26 { pt3dadd( -7.34382, -80.9022, -1.10977, 0.81 ) }
    dend_26 { pt3dadd( -7.60433, -82.1054, -1.21311, 1.25 ) }
    dend_26 { pt3dadd( -7.83438, -83.462, -1.39964, 1.25 ) }
    dend_26 { pt3dadd( -8.10707, -85.3158, -1.81024, 0.66 ) }
    dend_26 { pt3dadd( -8.30215, -86.6826, -2.22613, 0.66 ) }
    dend_26 { pt3dadd( -8.47489, -87.853, -2.69194, 1.03 ) }
    dend_26 { pt3dadd( -8.6311, -89.0633, -3.29829, 1.33 ) }
    dend_26 { pt3dadd( -8.67494, -90.022, -3.85055, 0.88 ) }
    dend_26 { pt3dadd( -8.56521, -91.1658, -4.56277, 0.59 ) }
    dend_26 { pt3dadd( -8.33615, -91.9131, -5.02006, 0.59 ) }
    dend_26 { pt3dadd( -7.90873, -92.6956, -5.38467, 0.59 ) }
    dend_26 { pt3dadd( -7.17555, -93.6732, -5.71101, 0.59 ) }
    dend_26 { pt3dadd( -6.06119, -95.0249, -6.03685, 0.22 ) }
    dend_26 { pt3dadd( -5.48274, -95.7528, -6.18154, 0.74 ) }
    dend_26 { pt3dadd( -4.93363, -96.5124, -6.33285, 1.11 ) }
    dend_26 { pt3dadd( -4.11741, -97.8768, -6.66843, 0.52 ) }
    dend_26 { pt3dadd( -3.67227, -98.8777, -6.98207, 0.66 ) }
    dend_26 { pt3dadd( -3.31255, -100.024, -7.39484, 0.96 ) }
    dend_26 { pt3dadd( -3.00289, -101.444, -7.90598, 0.81 ) }
    dend_26 { pt3dadd( -2.80305, -102.579, -8.27222, 0.59 ) }
    dend_26 { pt3dadd( -2.62861, -103.747, -8.60234, 0.59 ) }
    dend_26 { pt3dadd( -2.46343, -105.101, -8.90984, 0.44 ) }
    dend_26 { pt3dadd( -2.36302, -106.543, -9.08209, 0.74 ) }
    dend_26 { pt3dadd( -2.35631, -108.205, -9.15591, 0.74 ) }
    dend_26 { pt3dadd( -2.44863, -109.501, -9.1676, 0.81 ) }
    dend_26 { pt3dadd( -2.61687, -110.603, -9.1822, 1.03 ) }
    dend_26 { pt3dadd( -2.94218, -111.95, -9.25826, 1.03 ) }
    dend_26 { pt3dadd( -3.54412, -113.859, -9.51393, 0.59 ) }
    dend_26 { pt3dadd( -4.06225, -115.303, -9.80971, 0.44 ) }
    dend_26 { pt3dadd( -4.56319, -116.603, -10.1191, 0.52 ) }
    dend_26 { pt3dadd( -5.05423, -117.823, -10.4068, 1.03 ) }
    dend_26 { pt3dadd( -5.62367, -119.223, -10.6776, 0.81 ) }
    dend_26 { pt3dadd( -6.1536, -120.576, -10.8241, 0.29 ) }
    dend_26 { pt3dadd( -6.65374, -122.025, -10.8059, 0.29 ) }
    dend_26 { pt3dadd( -6.96099, -123.071, -10.6321, 0.44 ) }
    dend_26 { pt3dadd( -7.22905, -124.09, -10.3282, 0.96 ) }
    dend_26 { pt3dadd( -7.56403, -125.458, -9.814, 1.11 ) }
    dend_26 { pt3dadd( -7.91887, -127.059, -9.19806, 0.59 ) }
    dend_26 { pt3dadd( -8.2029, -128.419, -8.70742, 0.59 ) }
    dend_26 { pt3dadd( -8.55886, -130.258, -8.15836, 0.52 ) }
    dend_26 { pt3dadd( -8.71021, -131.259, -7.95705, 0.52 ) }
    dend_26 { pt3dadd( -8.88708, -132.911, -7.76375, 0.81 ) }
    dend_26 { pt3dadd( -9.00263, -134.604, -7.74619, 0.88 ) }
    dend_26 { pt3dadd( -9.04673, -135.583, -7.82894, 0.66 ) }
    dend_26 { pt3dadd( -9.0722, -136.802, -8.06343, 0.52 ) }
    dend_26 { pt3dadd( -9.05147, -138.071, -8.43375, 0.81 ) }
    dend_26 { pt3dadd( -8.99334, -138.889, -8.71917, 0.52 ) }
    dend_26 { pt3dadd( -8.82376, -140.07, -9.1645, 0.37 ) }
    dend_26 { pt3dadd( -8.63192, -141.0, -9.51426, 0.96 ) }
    dend_26 { pt3dadd( -8.24739, -142.503, -10.0305, 0.74 ) }
    dend_26 { pt3dadd( -7.93572, -143.559, -10.3441, 0.96 ) }
    dend_26 { pt3dadd( -7.68219, -144.413, -10.507, 0.96 ) }
    dend_26 { pt3dadd( -7.35152, -145.71, -10.5684, 0.37 ) }
    dend_26 { pt3dadd( -7.20621, -146.683, -10.3914, 0.29 ) }
    dend_26 { pt3dadd( -7.17781, -148.133, -9.79606, 0.59 ) }
    dend_26 { pt3dadd( -7.23555, -148.719, -9.42923, 0.59 ) }
    dend_26 { pt3dadd( -7.41564, -149.844, -8.60762, 0.59 ) }
    dend_26 { pt3dadd( -7.62666, -150.97, -7.73394, 0.96 ) }
    dend_26 { pt3dadd( -7.88623, -152.287, -6.69481, 0.52 ) }
    dend_26 { pt3dadd( -8.05969, -153.161, -6.02896, 0.44 ) }
    dend_26 { pt3dadd( -8.24583, -154.07, -5.37656, 0.44 ) }
    dend_26 { pt3dadd( -8.45406, -154.984, -4.72231, 0.88 ) }
    dend_26 { pt3dadd( -8.68484, -155.933, -4.07845, 0.44 ) }
    dend_26 { pt3dadd( -8.94321, -156.906, -3.47145, 0.37 ) }
    dend_26 { pt3dadd( -9.27403, -157.969, -2.88664, 0.74 ) }
    dend_26 { pt3dadd( -9.70671, -159.135, -2.34042, 0.22 ) }
    dend_26 { pt3dadd( -10.196, -160.266, -1.86924, 0.29 ) }
    dend_26 { pt3dadd( -10.7621, -161.396, -1.40224, 0.59 ) }
    dend_26 { pt3dadd( -11.4966, -162.752, -0.853576, 1.18 ) }
    dend_26 { pt3dadd( -12.151, -163.962, -0.384076, 0.66 ) }
    dend_26 { pt3dadd( -12.6798, -165.098, 0.0641527, 0.37 ) }
    dend_26 { pt3dadd( -13.0363, -166.077, 0.497127, 0.29 ) }
    dend_26 { pt3dadd( -13.2142, -166.809, 0.8829, 0.29 ) }
    dend_26 { pt3dadd( -13.2791, -167.332, 1.21105, 0.74 ) }
    dend_26 { pt3dadd( -13.2939, -167.867, 1.60569, 1.11 ) }
    dend_26 { pt3dadd( -13.2227, -169.386, 2.72139, 0.44 ) }
    dend_26 { pt3dadd( -13.1593, -170.339, 3.33296, 0.44 ) }
    dend_26 { pt3dadd( -13.1398, -171.093, 3.67735, 0.44 ) }
    dend_26 { pt3dadd( -13.1722, -172.174, 4.05287, 0.29 ) }
    dend_26 { pt3dadd( -13.2728, -173.271, 4.33448, 0.29 ) }
    dend_26 { pt3dadd( -13.4772, -174.693, 4.60215, 0.59 ) }
    dend_26 { pt3dadd( -13.7335, -176.148, 4.79335, 1.18 ) }
    dend_26 { pt3dadd( -14.0783, -178.216, 5.04117, 1.4 ) }
    dend_26 { pt3dadd( -14.239, -179.294, 5.18025, 1.18 ) }
    dend_26 { pt3dadd( -14.3807, -180.767, 5.35429, 0.52 ) }
    dend_26 { pt3dadd( -14.4237, -181.83, 5.42939, 0.52 ) }
    dend_26 { pt3dadd( -14.4194, -183.128, 5.45148, 0.96 ) }
    dend_26 { pt3dadd( -14.3104, -184.631, 5.35622, 0.74 ) }
    dend_26 { pt3dadd( -14.1789, -185.472, 5.22721, 0.74 ) }
    dend_26 { pt3dadd( -13.8687, -186.844, 4.85731, 0.37 ) }
    dend_26 { pt3dadd( -13.5023, -188.063, 4.39496, 0.44 ) }
    dend_26 { pt3dadd( -13.25, -188.79, 4.05428, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -12.9415, -189.617, 3.6256, 0.44 ) }
    dend_26 { pt3dadd( -12.6139, -190.518, 3.16813, 0.29 ) }
    dend_26 { pt3dadd( -12.3851, -191.281, 2.88948, 0.29 ) }
    dend_26 { pt3dadd( -12.2526, -192.004, 2.79123, 0.29 ) }
    dend_26 { pt3dadd( -12.1984, -193.063, 2.92147, 0.88 ) }
    dend_26 { pt3dadd( -12.2524, -194.168, 3.27353, 0.81 ) }
    dend_26 { pt3dadd( -12.3315, -195.005, 3.64305, 0.22 ) }
    dend_26 { pt3dadd( -12.4391, -196.471, 4.35799, 0.22 ) }
    dend_26 { pt3dadd( -12.4362, -197.575, 4.89398, 0.44 ) }
    dend_26 { pt3dadd( -12.2881, -198.982, 5.52522, 1.11 ) }
    dend_26 { pt3dadd( -12.0303, -200.093, 5.96489, 0.52 ) }
    dend_26 { pt3dadd( -11.4859, -201.459, 6.37157, 0.22 ) }
    dend_26 { pt3dadd( -10.717, -202.801, 6.58012, 0.22 ) }
    dend_26 { pt3dadd( -9.65433, -204.313, 6.62627, 0.22 ) }
    dend_26 { pt3dadd( -8.87805, -205.344, 6.58102, 0.37 ) }
    dend_26 { pt3dadd( -8.4629, -205.917, 6.53491, 0.52 ) }
    dend_26 { pt3dadd( -7.95999, -206.739, 6.48122, 0.52 ) }
    dend_26 { pt3dadd( -7.43128, -208.008, 6.46232, 1.11 ) }
    dend_26 { pt3dadd( -7.20588, -209.099, 6.51737, 1.11 ) }
    dend_26 { pt3dadd( -7.09773, -210.776, 6.68378, 0.52 ) }
    dend_26 { pt3dadd( -7.11525, -212.301, 6.89004, 0.29 ) }
    dend_26 { pt3dadd( -7.19328, -213.797, 7.12928, 0.52 ) }
    dend_26 { pt3dadd( -7.28981, -215.187, 7.34886, 0.52 ) }
    dend_26 { pt3dadd( -7.34079, -216.225, 7.47052, 0.22 ) }
    dend_26 { pt3dadd( -7.34982, -216.877, 7.49648, 0.22 ) }
    dend_26 { pt3dadd( -7.34211, -217.562, 7.47356, 0.59 ) }
    dend_26 { pt3dadd( -7.33368, -218.484, 7.396, 1.11 ) }
    dend_26 { pt3dadd( -7.34844, -220.019, 7.20944, 1.11 ) }
    dend_26 { pt3dadd( -7.43361, -221.8, 6.98557, 0.44 ) }
    dend_26 { pt3dadd( -7.54109, -222.967, 6.85052, 0.44 ) }
    dend_26 { pt3dadd( -7.69095, -224.183, 6.75361, 0.44 ) }
    dend_26 { pt3dadd( -7.95056, -225.744, 6.68401, 0.29 ) }
    dend_26 { pt3dadd( -8.15056, -226.553, 6.68918, 0.29 ) }
    dend_26 { pt3dadd( -8.43098, -227.458, 6.75121, 0.88 ) }
    dend_26 { pt3dadd( -8.70557, -228.302, 6.82862, 0.96 ) }
    dend_26 { pt3dadd( -9.10977, -229.687, 6.94806, 0.37 ) }
    dend_26 { pt3dadd( -9.3874, -230.792, 7.03742, 0.37 ) }
    dend_26 { pt3dadd( -9.83102, -232.47, 7.20264, 0.37 ) }
    dend_26 { pt3dadd( -9.98507, -232.959, 7.2597, 0.37 ) }
    dend_26 { pt3dadd( -10.2756, -233.799, 7.36767, 1.03 ) }
    dend_26 { pt3dadd( -10.482, -234.364, 7.44111, 1.03 ) }
    dend_26 { pt3dadd( -10.8588, -235.418, 7.57631, 0.52 ) }
    dend_26 { pt3dadd( -11.3677, -237.187, 7.84528, 0.22 ) }
    dend_26 { pt3dadd( -11.5491, -238.033, 8.01037, 0.22 ) }
    dend_26 { pt3dadd( -11.7614, -238.985, 8.25764, 0.29 ) }
    dend_26 { pt3dadd( -11.9498, -239.726, 8.49698, 0.59 ) }
    dend_26 { pt3dadd( -12.1222, -240.346, 8.71426, 0.88 ) }
    dend_26 { pt3dadd( -12.3416, -241.076, 8.96135, 0.96 ) }
    dend_26 { pt3dadd( -12.6805, -242.179, 9.33782, 0.37 ) }
    dend_26 { pt3dadd( -13.0961, -243.498, 9.80142, 0.22 ) }
    dend_26 { pt3dadd( -13.2806, -244.149, 10.0324, 0.22 ) }
    dend_26 { pt3dadd( -13.4454, -244.88, 10.29, 0.96 ) }
    dend_26 { pt3dadd( -13.6602, -246.157, 10.7233, 0.44 ) }
    dend_26 { pt3dadd( -13.7712, -247.443, 11.119, 0.22 ) }
    dend_26 { pt3dadd( -13.7547, -248.269, 11.3268, 0.22 ) }
    dend_26 { pt3dadd( -13.6578, -249.353, 11.5582, 0.22 ) }
    dend_26 { pt3dadd( -13.617, -249.764, 11.6407, 0.22 ) }
    dend_26 { pt3dadd( -13.5552, -250.534, 11.7825, 0.74 ) }
    dend_26 { pt3dadd( -13.5363, -251.455, 11.9182, 0.88 ) }
    dend_26 { pt3dadd( -13.6453, -252.66, 12.0056, 0.22 ) }
    dend_26 { pt3dadd( -13.8234, -253.492, 12.012, 0.22 ) }
    dend_26 { pt3dadd( -14.0363, -254.145, 12.003, 0.22 ) }
    dend_26 { pt3dadd( -14.3357, -254.874, 11.9997, 0.22 ) }
    dend_26 { pt3dadd( -14.6736, -255.578, 12.0019, 0.66 ) }
    dend_26 { pt3dadd( -15.1113, -256.401, 12.0321, 0.74 ) }
    dend_26 { pt3dadd( -15.7225, -257.491, 12.0933, 0.44 ) }
    dend_26 { pt3dadd( -16.3228, -258.572, 12.1388, 0.44 ) }
    dend_26 { pt3dadd( -17.0733, -259.92, 12.1413, 0.74 ) }
    dend_26 { pt3dadd( -17.8027, -261.203, 12.0929, 0.96 ) }
    dend_26 { pt3dadd( -18.4576, -262.344, 11.9969, 0.59 ) }
    dend_26 { pt3dadd( -19.199, -263.636, 11.819, 0.22 ) }
    dend_26 { pt3dadd( -19.7699, -264.609, 11.7047, 0.22 ) }
    dend_26 { pt3dadd( -20.3777, -265.627, 11.6211, 0.22 ) }
    dend_26 { pt3dadd( -20.8121, -266.329, 11.6027, 0.22 ) }
    dend_26 { pt3dadd( -21.0102, -266.626, 11.6191, 0.22 ) }
    dend_26 { pt3dadd( -21.5653, -267.4, 11.7488, 0.88 ) }
    dend_26 { pt3dadd( -23.0879, -269.449, 12.3559, 0.22 ) }
    dend_26 { pt3dadd( -23.6509, -270.197, 12.6326, 0.22 ) }
    dend_26 { pt3dadd( -24.0297, -270.707, 12.8351, 0.74 ) }
    dend_26 { pt3dadd( -24.4856, -271.36, 13.0905, 0.96 ) }
    dend_26 { pt3dadd( -25.463, -272.886, 13.6702, 0.37 ) }
    dend_26 { pt3dadd( -26.119, -274.045, 14.0822, 0.22 ) }
    dend_26 { pt3dadd( -26.5141, -274.888, 14.3139, 0.88 ) }
    dend_26 { pt3dadd( -26.7023, -275.365, 14.4527, 0.88 ) }
    dend_26 { pt3dadd( -27.057, -276.492, 14.8129, 0.22 ) }
    dend_26 { pt3dadd( -27.1749, -277.002, 14.9768, 0.22 ) }
    dend_26 { pt3dadd( -27.2581, -277.511, 15.1264, 0.22 ) }
    dend_26 { pt3dadd( -27.3937, -278.551, 15.3922, 0.81 ) }
    dend_26 { pt3dadd( -27.5373, -280.146, 15.7627, 0.29 ) }
    dend_26 { pt3dadd( -27.6208, -281.471, 16.0795, 0.44 ) }
    dend_26 { pt3dadd( -27.6547, -282.556, 16.3316, 0.88 ) }
    dend_26 { pt3dadd( -27.6558, -283.422, 16.5509, 0.88 ) }
    dend_26 { pt3dadd( -27.609, -284.48, 16.8479, 0.29 ) }
    dend_26 { pt3dadd( -27.5054, -285.39, 17.1451, 0.22 ) }
    dend_26 { pt3dadd( -27.3316, -286.306, 17.4884, 0.22 ) }
    dend_26 { pt3dadd( -27.1538, -286.966, 17.8236, 0.22 ) }
    dend_26 { pt3dadd( -26.9357, -287.685, 18.2742, 0.22 ) }
    dend_26 { pt3dadd( -26.7913, -288.172, 18.6236, 0.22 ) }
    dend_26 { pt3dadd( -26.6338, -288.883, 19.1452, 0.74 ) }
    dend_26 { pt3dadd( -26.6129, -289.174, 19.3465, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( -26.6568, -290.759, 20.2946, 0.22 ) }
    dend_26 { pt3dadd( -26.7501, -291.468, 20.663, 0.22 ) }
    dend_26 { pt3dadd( -26.8865, -292.053, 20.9068, 0.22 ) }
    dend_26 { pt3dadd( -27.184, -292.944, 21.1989, 1.11 ) }
    dend_26 { pt3dadd( -27.7014, -294.104, 21.4399, 0.29 ) }
    dend_26 { pt3dadd( -28.1661, -295.001, 21.5175, 0.22 ) }
    dend_26 { pt3dadd( -28.6762, -295.925, 21.4688, 0.22 ) }
    dend_26 { pt3dadd( -29.1174, -296.772, 21.3972, 0.44 ) }
    dend_26 { pt3dadd( -29.5212, -297.588, 21.3653, 0.88 ) }
    dend_26 { pt3dadd( -30.1333, -298.897, 21.427, 0.96 ) }
    dend_26 { pt3dadd( -30.6656, -300.136, 21.637, 0.29 ) }
    dend_26 { pt3dadd( -31.0182, -300.998, 21.8968, 0.66 ) }
    dend_26 { pt3dadd( -31.4513, -302.228, 22.3996, 0.74 ) }
    dend_26 { pt3dadd( -31.883, -303.735, 23.1387, 0.29 ) }
    dend_26 { pt3dadd( -32.1316, -304.963, 23.7941, 0.66 ) }
    dend_26 { pt3dadd( -32.3063, -306.45, 24.6696, 0.22 ) }
    dend_26 { pt3dadd( -32.3559, -307.034, 25.0433, 0.22 ) }
    dend_26 { pt3dadd( -32.4154, -307.751, 25.5154, 0.81 ) }
    dend_26 { pt3dadd( -32.4529, -308.296, 25.8412, 0.96 ) }
    dend_26 { pt3dadd( -32.5041, -309.394, 26.4196, 0.37 ) }
    dend_26 { pt3dadd( -32.5647, -310.526, 26.9587, 0.22 ) }
    dend_26 { pt3dadd( -32.6599, -311.359, 27.3315, 0.22 ) }
    dend_26 { pt3dadd( -32.7587, -311.932, 27.6013, 0.22 ) }
    dend_26 { pt3dadd( -32.8383, -312.297, 27.8021, 0.66 ) }
    dend_26 { pt3dadd( -32.9726, -312.824, 28.1344, 1.11 ) }
    dend_26 { pt3dadd( -33.2073, -313.689, 28.7022, 0.88 ) }
    dend_26 { pt3dadd( -33.5221, -314.939, 29.3892, 0.22 ) }
    dend_26 { pt3dadd( -33.7845, -316.112, 29.9109, 0.88 ) }
    dend_26 { pt3dadd( -34.0956, -317.504, 30.425, 0.22 ) }
    dend_26 { pt3dadd( -34.2847, -318.341, 30.6741, 0.22 ) }
    dend_26 { pt3dadd( -34.4853, -319.152, 30.8725, 0.74 ) }
    dend_26 { pt3dadd( -34.9359, -320.678, 31.2513, 0.15 ) }
    dend_26 { pt3dadd( -35.29, -321.684, 31.4694, 0.15 ) }
    dend_26 { pt3dadd( -35.5223, -322.234, 31.5704, 0.66 ) }
    dend_26 { pt3dadd( -35.8743, -323.005, 31.6791, 0.81 ) }
    dend_26 { pt3dadd( -36.485, -324.275, 31.8835, 0.22 ) }
    dend_26 { pt3dadd( -37.1473, -325.512, 32.2447, 0.22 ) }
    dend_26 { pt3dadd( -37.4595, -326.038, 32.5156, 0.59 ) }
    dend_26 { pt3dadd( -37.9815, -326.827, 33.047, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.77676, 1.47852, -10.46, 1.99 ) }
    dend_22 { pt3dadd( -2.00622, 2.4231, -11.1891, 1.99 ) }
    dend_22 { pt3dadd( -2.27077, 3.33507, -11.8604, 1.77 ) }
    dend_22 { pt3dadd( -2.5194, 3.99224, -12.333, 1.84 ) }
    dend_22 { pt3dadd( -2.78788, 4.5997, -12.7564, 1.4 ) }
    dend_22 { pt3dadd( -3.10679, 5.22188, -13.1798, 1.25 ) }
    dend_22 { pt3dadd( -3.4461, 5.79148, -13.5596, 1.4 ) }
    dend_22 { pt3dadd( -3.77784, 6.25318, -13.8471, 1.4 ) }
    dend_22 { pt3dadd( -4.35338, 6.95823, -14.2212, 1.03 ) }
    dend_22 { pt3dadd( -4.90121, 7.59359, -14.4996, 1.03 ) }
    dend_22 { pt3dadd( -5.53783, 8.28831, -14.7795, 1.11 ) }
    dend_22 { pt3dadd( -6.22983, 9.01632, -15.0528, 0.96 ) }
    dend_22 { pt3dadd( -6.97763, 9.81162, -15.3293, 0.96 ) }
    dend_22 { pt3dadd( -7.68502, 10.5893, -15.5877, 0.88 ) }
    dend_22 { pt3dadd( -8.12347, 11.0974, -15.7249, 1.18 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.77676, 1.47852, -10.46, 3.32 ) }
    dend_1 { pt3dadd( -3.70795, 0.311826, -10.4663, 3.32 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.44158, 39.2021, 0.0, 0.289528 ) }
    axon_1 { pt3dadd( 3.27908, 54.1787, 0.0, 0.289528 ) }
    axon_1 { pt3dadd( 4.11658, 69.1553, 0.0, 0.289528 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 59/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -2.94127, 30.4472, 11.532, 1.7 ) }
    dend_48 { pt3dadd( -3.13758, 31.1985, 11.8654, 1.7 ) }
    dend_48 { pt3dadd( -3.39151, 32.1844, 12.3009, 1.03 ) }
    dend_48 { pt3dadd( -3.70307, 33.394, 12.8353, 0.74 ) }
    dend_48 { pt3dadd( -3.92702, 34.2634, 13.2194, 0.74 ) }
    dend_48 { pt3dadd( -4.14417, 35.1065, 13.5919, 0.74 ) }
    dend_48 { pt3dadd( -4.31982, 35.7884, 13.8931, 1.03 ) }
    dend_48 { pt3dadd( -4.53529, 36.7015, 14.3622, 1.84 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.94127, 30.4472, 11.532, 0.29 ) }
    dend_47 { pt3dadd( -2.91248, 30.9132, 12.2954, 0.29 ) }
    dend_47 { pt3dadd( -2.78212, 31.7543, 13.5841, 0.22 ) }
    dend_47 { pt3dadd( -2.61774, 32.405, 14.4301, 0.22 ) }
    dend_47 { pt3dadd( -2.49192, 32.8839, 15.0168, 0.37 ) }
    dend_47 { pt3dadd( -2.3338, 33.5158, 15.7547, 0.37 ) }
    dend_47 { pt3dadd( -2.17286, 34.2013, 16.5449, 0.37 ) }
    dend_47 { pt3dadd( -2.03438, 34.7981, 17.1936, 0.37 ) }
    dend_47 { pt3dadd( -1.79771, 35.7078, 18.0917, 0.22 ) }
    dend_47 { pt3dadd( -1.55814, 36.4965, 18.8563, 0.22 ) }
    dend_47 { pt3dadd( -1.30699, 37.3209, 19.6505, 0.22 ) }
    dend_47 { pt3dadd( -1.16208, 37.7818, 20.1045, 0.22 ) }
    dend_47 { pt3dadd( -1.00181, 38.3271, 20.6844, 0.22 ) }
    dend_47 { pt3dadd( -0.912598, 38.6511, 21.0824, 0.37 ) }
    dend_47 { pt3dadd( -0.676468, 39.4594, 22.1899, 0.37 ) }
    dend_47 { pt3dadd( -0.468843, 40.0269, 22.9696, 0.22 ) }
    dend_47 { pt3dadd( -0.164784, 40.7859, 24.0521, 0.44 ) }
    dend_47 { pt3dadd( 0.0518577, 41.3474, 24.8777, 0.81 ) }
    dend_47 { pt3dadd( 0.255326, 41.9138, 25.7297, 0.81 ) }
    dend_47 { pt3dadd( 0.496257, 42.6185, 26.8126, 0.29 ) }
    dend_47 { pt3dadd( 0.721002, 43.3047, 27.8588, 0.22 ) }
    dend_47 { pt3dadd( 0.946402, 43.9807, 28.8755, 0.22 ) }
    dend_47 { pt3dadd( 1.17305, 44.6406, 29.7899, 0.22 ) }
    dend_47 { pt3dadd( 1.37597, 45.2258, 30.5527, 0.22 ) }
    dend_47 { pt3dadd( 1.5878, 45.8113, 31.3029, 0.22 ) }
    dend_47 { pt3dadd( 1.82689, 46.4461, 32.1728, 0.22 ) }
    dend_47 { pt3dadd( 1.93644, 46.7506, 32.6212, 0.66 ) }
    dend_47 { pt3dadd( 2.07451, 47.0952, 33.1275, 1.55 ) }
    dend_47 { pt3dadd( 2.44764, 47.9351, 34.3939, 2.06 ) }
    dend_47 { pt3dadd( 3.02106, 49.1064, 36.1526, 0.22 ) }
    dend_47 { pt3dadd( 3.35352, 49.7746, 37.1539, 0.22 ) }
    dend_47 { pt3dadd( 3.65592, 50.3803, 38.0847, 0.22 ) }
    dend_47 { pt3dadd( 3.89277, 50.8812, 38.8449, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( 4.10765, 51.4037, 39.6357, 0.44 ) }
    dend_47 { pt3dadd( 4.33558, 52.0612, 40.5622, 0.22 ) }
    dend_47 { pt3dadd( 4.56835, 52.9788, 41.6528, 0.22 ) }
    dend_47 { pt3dadd( 4.77884, 54.0103, 42.6777, 0.44 ) }
    dend_47 { pt3dadd( 4.93877, 55.0329, 43.6056, 0.15 ) }
    dend_47 { pt3dadd( 5.02075, 56.1137, 44.548, 0.15 ) }
    dend_47 { pt3dadd( 5.03209, 56.6701, 45.0048, 0.15 ) }
    dend_47 { pt3dadd( 5.02216, 57.796, 45.8795, 0.15 ) }
    dend_47 { pt3dadd( 5.04228, 58.7063, 46.5272, 0.37 ) }
    dend_47 { pt3dadd( 5.08803, 59.5328, 47.1078, 0.59 ) }
    dend_47 { pt3dadd( 5.20852, 60.535, 47.8473, 1.25 ) }
    dend_47 { pt3dadd( 5.3839, 61.4343, 48.5748, 2.21 ) }
    dend_47 { pt3dadd( 5.54096, 62.0186, 49.1217, 2.21 ) }
    dend_47 { pt3dadd( 5.95363, 63.1384, 50.2891, 0.52 ) }
    dend_47 { pt3dadd( 6.38127, 64.0551, 51.3228, 0.15 ) }
    dend_47 { pt3dadd( 6.78631, 64.7536, 52.1111, 0.15 ) }
    dend_47 { pt3dadd( 7.18148, 65.3146, 52.7495, 0.29 ) }
    dend_47 { pt3dadd( 7.53658, 65.7527, 53.25, 0.29 ) }
    dend_47 { pt3dadd( 8.00768, 66.3131, 53.8477, 0.07 ) }
    dend_47 { pt3dadd( 8.53388, 66.9243, 54.449, 0.07 ) }
    dend_47 { pt3dadd( 8.94453, 67.4058, 54.8924, 0.07 ) }
    dend_47 { pt3dadd( 9.29385, 67.8312, 55.2582, 0.88 ) }
    dend_47 { pt3dadd( 9.72986, 68.386, 55.7075, 1.62 ) }
    dend_47 { pt3dadd( 10.9133, 69.9452, 56.8855, 0.15 ) }
    dend_47 { pt3dadd( 11.4975, 70.721, 57.4779, 0.15 ) }
    dend_47 { pt3dadd( 12.0764, 71.4945, 58.0712, 0.15 ) }
    dend_47 { pt3dadd( 12.5029, 72.0537, 58.5123, 0.29 ) }
    dend_47 { pt3dadd( 12.9614, 72.6581, 59.0633, 0.29 ) }
    dend_47 { pt3dadd( 13.7901, 73.7537, 60.2244, 0.07 ) }
    dend_47 { pt3dadd( 14.4012, 74.5622, 61.1944, 0.07 ) }
    dend_47 { pt3dadd( 14.7156, 74.9917, 61.7435, 0.07 ) }
    dend_47 { pt3dadd( 15.1518, 75.5928, 62.5671, 0.96 ) }
    dend_47 { pt3dadd( 16.0836, 76.8743, 64.4616, 0.15 ) }
    dend_47 { pt3dadd( 16.5076, 77.4708, 65.3811, 0.15 ) }
    dend_47 { pt3dadd( 16.7887, 77.8818, 66.0669, 0.15 ) }
    dend_47 { pt3dadd( 17.0033, 78.2013, 66.5575, 0.15 ) }
    dend_47 { pt3dadd( 17.2526, 78.571, 67.094, 0.37 ) }
    dend_47 { pt3dadd( 17.5421, 79.0076, 67.6625, 0.37 ) }
    dend_47 { pt3dadd( 18.1662, 79.8977, 68.6536, 0.15 ) }
    dend_47 { pt3dadd( 18.6945, 80.6634, 69.455, 0.15 ) }
    dend_47 { pt3dadd( 19.195, 81.4525, 70.2732, 0.15 ) }
    dend_47 { pt3dadd( 19.7587, 82.4065, 71.258, 0.15 ) }
    dend_47 { pt3dadd( 20.0693, 82.9549, 71.8227, 0.15 ) }
    dend_47 { pt3dadd( 20.5853, 83.8807, 72.768, 0.15 ) }
    dend_47 { pt3dadd( 21.1914, 84.9749, 73.8621, 0.07 ) }
    dend_47 { pt3dadd( 21.8789, 86.2783, 75.1125, 0.07 ) }
    dend_47 { pt3dadd( 22.5085, 87.5352, 76.367, 0.07 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -94.5411, -265.374, 40.3649, 0.74 ) }
    dend_38 { pt3dadd( -94.8662, -266.23, 40.0934, 0.74 ) }
    dend_38 { pt3dadd( -95.2446, -267.162, 39.8192, 0.29 ) }
    dend_38 { pt3dadd( -95.7997, -268.389, 39.4656, 0.07 ) }
    dend_38 { pt3dadd( -96.2823, -269.396, 39.157, 0.15 ) }
    dend_38 { pt3dadd( -96.5942, -270.041, 38.9566, 0.52 ) }
    dend_38 { pt3dadd( -96.8741, -270.604, 38.7673, 0.74 ) }
    dend_38 { pt3dadd( -97.1119, -271.042, 38.6065, 0.88 ) }
    dend_38 { pt3dadd( -97.7745, -272.199, 38.1938, 0.22 ) }
    dend_38 { pt3dadd( -98.1985, -272.922, 37.9483, 0.22 ) }
    dend_38 { pt3dadd( -98.6187, -273.667, 37.7042, 0.22 ) }
    dend_38 { pt3dadd( -99.0597, -274.501, 37.4281, 0.15 ) }
    dend_38 { pt3dadd( -99.3725, -275.121, 37.2148, 0.74 ) }
    dend_38 { pt3dadd( -99.8146, -276.021, 36.8856, 0.88 ) }
    dend_38 { pt3dadd( -100.2, -276.847, 36.5785, 0.22 ) }
    dend_38 { pt3dadd( -100.623, -277.776, 36.2048, 0.15 ) }
    dend_38 { pt3dadd( -100.936, -278.518, 35.8506, 0.15 ) }
    dend_38 { pt3dadd( -101.152, -279.077, 35.5455, 0.29 ) }
    dend_38 { pt3dadd( -101.378, -279.678, 35.1633, 0.66 ) }
    dend_38 { pt3dadd( -101.69, -280.438, 34.6284, 1.03 ) }
    dend_38 { pt3dadd( -102.127, -281.275, 33.994, 0.37 ) }
    dend_38 { pt3dadd( -102.689, -282.146, 33.2953, 0.22 ) }
    dend_38 { pt3dadd( -103.038, -282.639, 32.9102, 0.44 ) }
    dend_38 { pt3dadd( -103.382, -283.103, 32.5731, 0.74 ) }
    dend_38 { pt3dadd( -103.935, -283.832, 32.1092, 1.03 ) }
    dend_38 { pt3dadd( -104.906, -285.067, 31.436, 0.29 ) }
    dend_38 { pt3dadd( -105.472, -285.79, 31.1214, 0.29 ) }
    dend_38 { pt3dadd( -105.98, -286.463, 30.8871, 0.74 ) }
    dend_38 { pt3dadd( -106.4, -287.057, 30.7126, 0.74 ) }
    dend_38 { pt3dadd( -107.16, -288.2, 30.4061, 0.29 ) }
    dend_38 { pt3dadd( -107.833, -289.26, 30.1539, 0.22 ) }
    dend_38 { pt3dadd( -108.206, -289.834, 30.0247, 0.22 ) }
    dend_38 { pt3dadd( -108.726, -290.485, 29.8463, 0.22 ) }
    dend_38 { pt3dadd( -109.181, -290.919, 29.6691, 0.29 ) }
    dend_38 { pt3dadd( -109.651, -291.267, 29.4539, 0.74 ) }
    dend_38 { pt3dadd( -110.268, -291.631, 29.1375, 0.96 ) }
    dend_38 { pt3dadd( -111.18, -292.139, 28.636, 0.44 ) }
    dend_38 { pt3dadd( -112.196, -292.742, 28.0602, 0.22 ) }
    dend_38 { pt3dadd( -112.723, -293.09, 27.7651, 0.22 ) }
    dend_38 { pt3dadd( -113.204, -293.462, 27.5041, 0.22 ) }
    dend_38 { pt3dadd( -113.752, -293.963, 27.2569, 0.81 ) }
    dend_38 { pt3dadd( -114.317, -294.584, 27.0454, 0.44 ) }
    dend_38 { pt3dadd( -114.798, -295.203, 26.9174, 0.22 ) }
    dend_38 { pt3dadd( -115.204, -295.76, 26.8183, 0.37 ) }
    dend_38 { pt3dadd( -115.458, -296.086, 26.7445, 0.37 ) }
    dend_38 { pt3dadd( -116.275, -296.979, 26.4774, 0.22 ) }
    dend_38 { pt3dadd( -116.606, -297.275, 26.3528, 0.59 ) }
    dend_38 { pt3dadd( -117.356, -297.842, 26.047, 0.88 ) }
    dend_38 { pt3dadd( -118.12, -298.396, 25.6905, 0.22 ) }
    dend_38 { pt3dadd( -118.709, -298.836, 25.3812, 0.22 ) }
    dend_38 { pt3dadd( -119.112, -299.148, 25.1456, 0.22 ) }
    dend_38 { pt3dadd( -119.587, -299.537, 24.8397, 0.22 ) }
    dend_38 { pt3dadd( -120.069, -299.955, 24.5325, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( -120.854, -300.735, 24.0372, 0.15 ) }
    dend_38 { pt3dadd( -121.133, -301.067, 23.831, 0.15 ) }
    dend_38 { pt3dadd( -121.413, -301.458, 23.5951, 0.15 ) }
    dend_38 { pt3dadd( -121.542, -301.672, 23.4497, 0.15 ) }
    dend_38 { pt3dadd( -121.679, -301.945, 23.2538, 0.15 ) }
    dend_38 { pt3dadd( -121.938, -302.508, 22.8122, 0.88 ) }
    dend_38 { pt3dadd( -122.506, -303.678, 21.8783, 0.22 ) }
    dend_38 { pt3dadd( -122.618, -303.885, 21.7113, 0.22 ) }
    dend_38 { pt3dadd( -122.917, -304.383, 21.3185, 0.22 ) }
    dend_38 { pt3dadd( -123.268, -304.942, 20.9053, 0.22 ) }
    dend_38 { pt3dadd( -123.496, -305.301, 20.6716, 0.22 ) }
    dend_38 { pt3dadd( -123.918, -305.962, 20.3222, 0.66 ) }
    dend_38 { pt3dadd( -124.542, -306.881, 19.9832, 0.29 ) }
    dend_38 { pt3dadd( -125.008, -307.557, 19.7846, 0.29 ) }
    dend_38 { pt3dadd( -125.409, -308.153, 19.6504, 0.44 ) }
    dend_38 { pt3dadd( -125.866, -308.877, 19.5125, 0.74 ) }
    dend_38 { pt3dadd( -126.214, -309.494, 19.4245, 0.81 ) }
    dend_38 { pt3dadd( -126.867, -310.707, 19.3031, 0.22 ) }
    dend_38 { pt3dadd( -127.305, -311.47, 19.2761, 0.22 ) }
    dend_38 { pt3dadd( -127.509, -311.798, 19.2735, 0.22 ) }
    dend_38 { pt3dadd( -127.753, -312.176, 19.273, 0.22 ) }
    dend_38 { pt3dadd( -128.113, -312.747, 19.2458, 0.22 ) }
    dend_38 { pt3dadd( -128.618, -313.57, 19.1203, 0.59 ) }
    dend_38 { pt3dadd( -129.153, -314.462, 18.8558, 0.22 ) }
    dend_38 { pt3dadd( -129.5, -315.02, 18.6248, 0.22 ) }
    dend_38 { pt3dadd( -129.942, -315.665, 18.2654, 0.59 ) }
    dend_38 { pt3dadd( -130.597, -316.545, 17.6705, 0.22 ) }
    dend_38 { pt3dadd( -131.086, -317.206, 17.1575, 0.22 ) }
    dend_38 { pt3dadd( -131.441, -317.721, 16.7317, 0.44 ) }
    dend_38 { pt3dadd( -131.839, -318.346, 16.2247, 1.03 ) }
    dend_38 { pt3dadd( -132.374, -319.223, 15.5578, 0.22 ) }
    dend_38 { pt3dadd( -132.61, -319.658, 15.283, 0.22 ) }
    dend_38 { pt3dadd( -132.82, -320.185, 15.0734, 0.22 ) }
    dend_38 { pt3dadd( -132.971, -320.807, 14.916, 0.22 ) }
    dend_38 { pt3dadd( -133.124, -321.768, 14.7348, 0.22 ) }
    dend_38 { pt3dadd( -133.165, -322.091, 14.6841, 0.44 ) }
    dend_38 { pt3dadd( -133.249, -322.898, 14.5806, 0.88 ) }
    dend_38 { pt3dadd( -133.327, -323.613, 14.4842, 0.88 ) }
    dend_38 { pt3dadd( -133.523, -325.081, 14.2825, 0.22 ) }
    dend_38 { pt3dadd( -133.66, -325.897, 14.1646, 0.22 ) }
    dend_38 { pt3dadd( -133.887, -327.001, 13.9798, 0.22 ) }
    dend_38 { pt3dadd( -134.003, -327.496, 13.8996, 0.22 ) }
    dend_38 { pt3dadd( -134.122, -327.913, 13.8373, 0.59 ) }
    dend_38 { pt3dadd( -134.355, -328.595, 13.7443, 0.81 ) }
    dend_38 { pt3dadd( -134.52, -329.01, 13.6835, 0.59 ) }
    dend_38 { pt3dadd( -134.912, -329.949, 13.5087, 0.22 ) }
    dend_38 { pt3dadd( -135.182, -330.557, 13.3802, 0.22 ) }
    dend_38 { pt3dadd( -135.496, -331.142, 13.2549, 0.22 ) }
    dend_38 { pt3dadd( -135.823, -331.64, 13.127, 0.22 ) }
    dend_38 { pt3dadd( -136.381, -332.367, 12.9072, 0.22 ) }
    dend_38 { pt3dadd( -136.799, -332.861, 12.7281, 0.44 ) }
    dend_38 { pt3dadd( -137.288, -333.398, 12.497, 0.74 ) }
    dend_38 { pt3dadd( -137.84, -334.028, 12.1742, 0.29 ) }
    dend_38 { pt3dadd( -138.344, -334.651, 11.8051, 0.22 ) }
    dend_38 { pt3dadd( -138.476, -334.819, 11.6993, 0.22 ) }
    dend_38 { pt3dadd( -138.757, -335.161, 11.4629, 0.22 ) }
    dend_38 { pt3dadd( -139.044, -335.509, 11.2116, 0.22 ) }
    dend_38 { pt3dadd( -139.364, -335.924, 10.9299, 0.29 ) }
    dend_38 { pt3dadd( -139.732, -336.485, 10.6145, 0.66 ) }
    dend_38 { pt3dadd( -140.063, -337.014, 10.3793, 0.88 ) }
    dend_38 { pt3dadd( -140.879, -338.24, 9.90328, 0.22 ) }
    dend_38 { pt3dadd( -141.223, -338.715, 9.74484, 0.22 ) }
    dend_38 { pt3dadd( -141.652, -339.251, 9.59214, 0.22 ) }
    dend_38 { pt3dadd( -142.266, -339.933, 9.48209, 0.22 ) }
    dend_38 { pt3dadd( -142.791, -340.474, 9.47633, 0.15 ) }
    dend_38 { pt3dadd( -143.147, -340.835, 9.51837, 0.15 ) }
    dend_38 { pt3dadd( -143.395, -341.092, 9.5829, 0.52 ) }
    dend_38 { pt3dadd( -143.821, -341.538, 9.70894, 0.81 ) }
    dend_38 { pt3dadd( -144.729, -342.599, 9.96306, 0.15 ) }
    dend_38 { pt3dadd( -145.075, -343.068, 10.0345, 0.15 ) }
    dend_38 { pt3dadd( -145.529, -343.846, 10.0763, 0.15 ) }
    dend_38 { pt3dadd( -145.624, -344.038, 10.0703, 0.37 ) }
    dend_38 { pt3dadd( -145.893, -344.647, 10.0027, 0.74 ) }
    dend_38 { pt3dadd( -146.318, -345.718, 9.80436, 0.15 ) }
    dend_38 { pt3dadd( -146.545, -346.334, 9.64097, 0.15 ) }
    dend_38 { pt3dadd( -146.759, -346.941, 9.47759, 0.37 ) }
    dend_38 { pt3dadd( -146.951, -347.515, 9.31104, 0.37 ) }
    dend_38 { pt3dadd( -147.17, -348.236, 9.09765, 0.37 ) }
    dend_38 { pt3dadd( -147.426, -349.164, 8.81003, 0.29 ) }
    dend_38 { pt3dadd( -147.686, -350.164, 8.51241, 0.81 ) }
    dend_38 { pt3dadd( -147.856, -350.919, 8.28765, 0.66 ) }
    dend_38 { pt3dadd( -147.993, -351.626, 8.05095, 0.59 ) }
    dend_38 { pt3dadd( -148.126, -352.388, 7.75612, 0.15 ) }
    dend_38 { pt3dadd( -148.237, -352.921, 7.52379, 0.15 ) }
    dend_38 { pt3dadd( -148.381, -353.416, 7.27955, 0.66 ) }
    dend_38 { pt3dadd( -148.464, -353.632, 7.1653, 0.66 ) }
    dend_38 { pt3dadd( -148.816, -354.424, 6.7487, 0.22 ) }
    dend_38 { pt3dadd( -149.056, -354.996, 6.47021, 0.22 ) }
    dend_38 { pt3dadd( -149.326, -355.695, 6.14344, 0.59 ) }
    dend_38 { pt3dadd( -149.608, -356.613, 5.74497, 0.15 ) }
    dend_38 { pt3dadd( -149.724, -357.075, 5.55452, 0.15 ) }
    dend_38 { pt3dadd( -149.873, -357.737, 5.29736, 0.81 ) }
    dend_38 { pt3dadd( -150.129, -359.092, 4.81454, 0.15 ) }
    dend_38 { pt3dadd( -150.218, -359.642, 4.63918, 0.52 ) }
    dend_38 { pt3dadd( -150.337, -360.495, 4.39029, 0.15 ) }
    dend_38 { pt3dadd( -150.408, -360.896, 4.28103, 0.15 ) }
    dend_38 { pt3dadd( -150.63, -361.791, 4.01602, 0.15 ) }
    dend_38 { pt3dadd( -150.728, -362.091, 3.91856, 0.15 ) }
    dend_38 { pt3dadd( -151.01, -362.805, 3.68128, 0.88 ) }
    dend_38 { pt3dadd( -151.297, -363.482, 3.44474, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -151.773, -364.521, 3.06607, 0.15 ) }
    dend_38 { pt3dadd( -152.238, -365.532, 2.68432, 0.15 ) }
    dend_38 { pt3dadd( -152.464, -366.012, 2.49943, 0.22 ) }
    dend_38 { pt3dadd( -152.755, -366.575, 2.26737, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -94.5411, -265.374, 40.3649, 0.07 ) }
    dend_37 { pt3dadd( -95.012, -264.535, 39.5719, 0.07 ) }
    dend_37 { pt3dadd( -95.4324, -263.792, 38.9535, 0.07 ) }
    dend_37 { pt3dadd( -95.8391, -263.116, 38.41, 0.37 ) }
    dend_37 { pt3dadd( -96.5841, -261.927, 37.5123, 0.07 ) }
    dend_37 { pt3dadd( -96.8646, -261.493, 37.2057, 0.07 ) }
    dend_37 { pt3dadd( -97.3247, -260.815, 36.7317, 0.22 ) }
    dend_37 { pt3dadd( -98.2365, -259.579, 35.9286, 0.07 ) }
    dend_37 { pt3dadd( -98.953, -258.725, 35.3921, 0.07 ) }
    dend_37 { pt3dadd( -99.4582, -258.182, 35.0517, 0.07 ) }
    dend_37 { pt3dadd( -99.9222, -257.749, 34.7921, 0.22 ) }
    dend_37 { pt3dadd( -100.804, -257.006, 34.3493, 0.07 ) }
    dend_37 { pt3dadd( -101.371, -256.564, 34.0709, 0.37 ) }
    dend_37 { pt3dadd( -103.081, -255.338, 33.2922, 0.07 ) }
    dend_37 { pt3dadd( -103.644, -254.952, 33.0461, 0.22 ) }
    dend_37 { pt3dadd( -105.056, -254.03, 32.4163, 0.07 ) }
    dend_37 { pt3dadd( -105.648, -253.66, 32.158, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -37.9815, -326.827, 33.047, 0.15 ) }
    dend_30 { pt3dadd( -38.9865, -327.662, 33.728, 0.15 ) }
    dend_30 { pt3dadd( -39.8958, -328.56, 34.3506, 0.15 ) }
    dend_30 { pt3dadd( -40.6011, -329.342, 34.8456, 0.07 ) }
    dend_30 { pt3dadd( -41.2102, -330.038, 35.2928, 0.07 ) }
    dend_30 { pt3dadd( -41.6609, -330.563, 35.6296, 0.07 ) }
    dend_30 { pt3dadd( -41.9749, -330.937, 35.8641, 0.37 ) }
    dend_30 { pt3dadd( -42.5062, -331.657, 36.2811, 0.66 ) }
    dend_30 { pt3dadd( -43.3579, -332.86, 36.9376, 0.07 ) }
    dend_30 { pt3dadd( -43.8592, -333.555, 37.3571, 0.07 ) }
    dend_30 { pt3dadd( -44.3546, -334.206, 37.8002, 0.07 ) }
    dend_30 { pt3dadd( -44.6209, -334.53, 38.0579, 0.52 ) }
    dend_30 { pt3dadd( -45.1213, -335.126, 38.579, 0.88 ) }
    dend_30 { pt3dadd( -46.0284, -336.206, 39.6091, 0.15 ) }
    dend_30 { pt3dadd( -46.7926, -337.144, 40.5425, 0.15 ) }
    dend_30 { pt3dadd( -47.1758, -337.644, 41.0341, 0.15 ) }
    dend_30 { pt3dadd( -47.66, -338.306, 41.7298, 0.15 ) }
    dend_30 { pt3dadd( -48.0994, -338.94, 42.4389, 0.88 ) }
    dend_30 { pt3dadd( -48.8628, -340.1, 43.8359, 0.07 ) }
    dend_30 { pt3dadd( -49.0957, -340.472, 44.3084, 0.07 ) }
    dend_30 { pt3dadd( -49.3325, -340.877, 44.8057, 0.37 ) }
    dend_30 { pt3dadd( -49.8876, -341.859, 45.9633, 0.15 ) }
    dend_30 { pt3dadd( -50.2293, -342.478, 46.6569, 0.37 ) }
    dend_30 { pt3dadd( -50.7543, -343.348, 47.6071, 0.22 ) }
    dend_30 { pt3dadd( -51.1971, -344.058, 48.3238, 0.44 ) }
    dend_30 { pt3dadd( -51.5707, -344.636, 48.8587, 0.81 ) }
    dend_30 { pt3dadd( -52.1029, -345.416, 49.5083, 0.29 ) }
    dend_30 { pt3dadd( -52.7822, -346.362, 50.1094, 0.15 ) }
    dend_30 { pt3dadd( -53.6383, -347.541, 50.6504, 0.15 ) }
    dend_30 { pt3dadd( -54.3152, -348.519, 50.9477, 0.15 ) }
    dend_30 { pt3dadd( -54.722, -349.14, 51.0775, 0.81 ) }
    dend_30 { pt3dadd( -55.1253, -349.812, 51.1849, 1.47 ) }
    dend_30 { pt3dadd( -56.2841, -351.982, 51.4126, 0.15 ) }
    dend_30 { pt3dadd( -57.0714, -353.509, 51.6165, 0.07 ) }
    dend_30 { pt3dadd( -57.8691, -355.146, 51.8542, 0.07 ) }
    dend_30 { pt3dadd( -58.2954, -356.005, 52.0137, 0.15 ) }
    dend_30 { pt3dadd( -58.9943, -357.443, 52.3186, 0.07 ) }
    dend_30 { pt3dadd( -59.3698, -358.233, 52.4975, 0.22 ) }
    dend_30 { pt3dadd( -60.9985, -361.554, 53.3499, 0.07 ) }
    dend_30 { pt3dadd( -61.5123, -362.524, 53.604, 0.29 ) }
    dend_30 { pt3dadd( -62.6167, -364.444, 54.0887, 0.07 ) }
    dend_30 { pt3dadd( -63.2014, -365.412, 54.2997, 0.07 ) }
    dend_30 { pt3dadd( -63.871, -366.46, 54.4819, 0.44 ) }
    dend_30 { pt3dadd( -65.1031, -368.382, 54.7569, 0.15 ) }
    dend_30 { pt3dadd( -66.0231, -369.842, 54.8999, 0.07 ) }
    dend_30 { pt3dadd( -66.5623, -370.673, 54.9921, 0.07 ) }
    dend_30 { pt3dadd( -67.0952, -371.481, 55.0924, 0.29 ) }
    dend_30 { pt3dadd( -68.7187, -373.866, 55.4582, 0.07 ) }
    dend_30 { pt3dadd( -69.5649, -375.104, 55.6755, 0.07 ) }
    dend_30 { pt3dadd( -70.2153, -376.075, 55.847, 0.07 ) }
    dend_30 { pt3dadd( -70.8737, -377.035, 56.0452, 0.07 ) }
    dend_30 { pt3dadd( -71.499, -377.934, 56.2318, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -37.9815, -326.827, 33.047, 0.22 ) }
    dend_27 { pt3dadd( -37.9271, -327.528, 33.8253, 0.22 ) }
    dend_27 { pt3dadd( -37.7662, -328.614, 35.1207, 0.37 ) }
    dend_27 { pt3dadd( -37.6424, -329.293, 36.0013, 0.15 ) }
    dend_27 { pt3dadd( -37.5328, -329.822, 36.7059, 0.15 ) }
    dend_27 { pt3dadd( -37.5005, -329.992, 36.9666, 0.37 ) }
    dend_27 { pt3dadd( -37.4538, -330.39, 37.6479, 0.88 ) }
    dend_27 { pt3dadd( -37.4089, -331.128, 39.1765, 0.15 ) }
    dend_27 { pt3dadd( -37.4328, -331.454, 39.9725, 0.52 ) }
    dend_27 { pt3dadd( -37.4527, -331.553, 40.2267, 1.03 ) }
    dend_27 { pt3dadd( -37.6833, -332.236, 42.0647, 0.22 ) }
    dend_27 { pt3dadd( -37.8982, -332.706, 43.3549, 0.22 ) }
    dend_27 { pt3dadd( -37.9749, -332.843, 43.742, 0.37 ) }
    dend_27 { pt3dadd( -38.3815, -333.505, 45.4254, 0.22 ) }
    dend_27 { pt3dadd( -38.547, -333.786, 46.0519, 0.22 ) }
    dend_27 { pt3dadd( -38.7758, -334.197, 46.8451, 0.22 ) }
    dend_27 { pt3dadd( -38.9427, -334.534, 47.3848, 0.22 ) }
    dend_27 { pt3dadd( -39.101, -334.922, 47.9228, 0.88 ) }
    dend_27 { pt3dadd( -39.4367, -336.047, 49.2927, 0.15 ) }
    dend_27 { pt3dadd( -39.552, -336.656, 49.9273, 0.22 ) }
    dend_27 { pt3dadd( -39.6071, -337.44, 50.5993, 0.07 ) }
    dend_27 { pt3dadd( -39.5757, -338.445, 51.2982, 0.07 ) }
    dend_27 { pt3dadd( -39.43, -339.457, 51.8081, 1.18 ) }
    dend_27 { pt3dadd( -39.0643, -341.135, 52.3795, 0.07 ) }
    dend_27 { pt3dadd( -38.8447, -341.863, 52.4829, 0.74 ) }
    dend_27 { pt3dadd( -38.2188, -343.747, 52.5167, 0.07 ) }
    dend_27 { pt3dadd( -38.0263, -344.295, 52.4519, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -37.3399, -346.267, 51.9606, 0.07 ) }
    dend_27 { pt3dadd( -37.0239, -347.31, 51.6257, 1.11 ) }
    dend_27 { pt3dadd( -36.468, -349.328, 50.7957, 0.07 ) }
    dend_27 { pt3dadd( -36.345, -349.79, 50.5877, 0.22 ) }
    dend_27 { pt3dadd( -35.9722, -351.27, 49.8816, 0.07 ) }
    dend_27 { pt3dadd( -35.7577, -351.978, 49.4954, 0.07 ) }
    dend_27 { pt3dadd( -35.335, -353.026, 48.7936, 0.96 ) }
    dend_27 { pt3dadd( -34.6678, -354.247, 47.8978, 0.07 ) }
    dend_27 { pt3dadd( -34.3547, -354.695, 47.5716, 0.07 ) }
    dend_27 { pt3dadd( -34.164, -354.924, 47.3942, 0.29 ) }
    dend_27 { pt3dadd( -33.283, -355.837, 46.62, 0.07 ) }
    dend_27 { pt3dadd( -32.4738, -356.64, 45.9165, 0.07 ) }
    dend_27 { pt3dadd( -32.0585, -357.051, 45.5401, 0.66 ) }
    dend_27 { pt3dadd( -31.1433, -358.036, 44.6878, 0.07 ) }
    dend_27 { pt3dadd( -30.5491, -358.765, 44.1092, 0.07 ) }
    dend_27 { pt3dadd( -29.969, -359.588, 43.5623, 0.07 ) }
    dend_27 { pt3dadd( -29.6267, -360.155, 43.2791, 0.96 ) }
    dend_27 { pt3dadd( -29.0283, -361.222, 42.8075, 0.15 ) }
    dend_27 { pt3dadd( -28.6778, -361.88, 42.5327, 0.15 ) }
    dend_27 { pt3dadd( -28.2906, -362.699, 42.2536, 0.74 ) }
    dend_27 { pt3dadd( -27.6131, -364.29, 41.8864, 0.15 ) }
    dend_27 { pt3dadd( -27.2682, -365.156, 41.7625, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.12347, 11.0974, -15.7249, 0.59 ) }
    dend_24 { pt3dadd( -9.34037, 11.5789, -14.4825, 0.59 ) }
    dend_24 { pt3dadd( -10.2811, 12.0304, -13.5439, 0.59 ) }
    dend_24 { pt3dadd( -11.2229, 12.5009, -12.6476, 0.59 ) }
    dend_24 { pt3dadd( -12.1903, 12.9639, -11.7975, 0.74 ) }
    dend_24 { pt3dadd( -12.9845, 13.3238, -11.1746, 0.74 ) }
    dend_24 { pt3dadd( -14.2206, 13.8615, -10.3655, 0.44 ) }
    dend_24 { pt3dadd( -14.5466, 14.0051, -10.2339, 0.44 ) }
    dend_24 { pt3dadd( -15.3071, 14.3478, -10.0812, 0.44 ) }
    dend_24 { pt3dadd( -16.0591, 14.6663, -10.0191, 0.66 ) }
    dend_24 { pt3dadd( -17.1197, 15.0473, -10.008, 0.81 ) }
    dend_24 { pt3dadd( -18.5699, 15.4589, -10.0206, 0.59 ) }
    dend_24 { pt3dadd( -19.696, 15.7029, -10.0272, 0.37 ) }
    dend_24 { pt3dadd( -21.1789, 16.0032, -9.99922, 0.22 ) }
    dend_24 { pt3dadd( -22.0869, 16.1902, -9.95671, 0.44 ) }
    dend_24 { pt3dadd( -22.7119, 16.3368, -9.90148, 0.74 ) }
    dend_24 { pt3dadd( -24.1088, 16.7348, -9.71806, 0.37 ) }
    dend_24 { pt3dadd( -25.4009, 17.1768, -9.48785, 0.22 ) }
    dend_24 { pt3dadd( -26.0332, 17.4563, -9.38481, 0.22 ) }
    dend_24 { pt3dadd( -26.7921, 17.8671, -9.27915, 0.66 ) }
    dend_24 { pt3dadd( -27.7493, 18.4739, -9.18445, 0.52 ) }
    dend_24 { pt3dadd( -28.9017, 19.2742, -9.15127, 0.81 ) }
    dend_24 { pt3dadd( -29.3981, 19.6413, -9.18337, 0.81 ) }
    dend_24 { pt3dadd( -30.6576, 20.574, -9.39272, 0.44 ) }
    dend_24 { pt3dadd( -31.8974, 21.4222, -9.733, 0.74 ) }
    dend_24 { pt3dadd( -33.0918, 22.1184, -10.208, 0.44 ) }
    dend_24 { pt3dadd( -34.3919, 22.7212, -10.8913, 0.29 ) }
    dend_24 { pt3dadd( -35.2624, 23.0222, -11.4559, 0.29 ) }
    dend_24 { pt3dadd( -36.1359, 23.2367, -12.128, 0.29 ) }
    dend_24 { pt3dadd( -36.9829, 23.3605, -12.8784, 0.88 ) }
    dend_24 { pt3dadd( -38.0027, 23.433, -13.8399, 0.59 ) }
    dend_24 { pt3dadd( -38.6657, 23.4593, -14.4613, 0.59 ) }
    dend_24 { pt3dadd( -39.6118, 23.4974, -15.2902, 0.29 ) }
    dend_24 { pt3dadd( -40.7719, 23.582, -16.2025, 0.74 ) }
    dend_24 { pt3dadd( -41.2844, 23.6587, -16.5611, 0.74 ) }
    dend_24 { pt3dadd( -42.0982, 23.8773, -17.0658, 0.29 ) }
    dend_24 { pt3dadd( -42.7182, 24.1506, -17.3717, 0.22 ) }
    dend_24 { pt3dadd( -43.2042, 24.4482, -17.561, 0.22 ) }
    dend_24 { pt3dadd( -43.782, 24.9064, -17.7333, 0.22 ) }
    dend_24 { pt3dadd( -44.513, 25.5542, -17.9242, 0.74 ) }
    dend_24 { pt3dadd( -45.1236, 26.1018, -18.1196, 0.74 ) }
    dend_24 { pt3dadd( -45.7037, 26.6187, -18.3564, 0.29 ) }
    dend_24 { pt3dadd( -46.1449, 26.9846, -18.5585, 0.29 ) }
    dend_24 { pt3dadd( -46.7706, 27.4721, -18.8524, 0.52 ) }
    dend_24 { pt3dadd( -47.4761, 28.0235, -19.2255, 0.52 ) }
    dend_24 { pt3dadd( -48.5365, 28.854, -19.8395, 0.22 ) }
    dend_24 { pt3dadd( -49.171, 29.3875, -20.2508, 0.15 ) }
    dend_24 { pt3dadd( -50.0774, 30.1591, -20.8589, 0.59 ) }
    dend_24 { pt3dadd( -51.0046, 30.9858, -21.4828, 0.22 ) }
    dend_24 { pt3dadd( -51.4953, 31.4623, -21.8161, 0.22 ) }
    dend_24 { pt3dadd( -51.6511, 31.6353, -21.9182, 0.22 ) }
    dend_24 { pt3dadd( -52.194, 32.3248, -22.2599, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -8.12347, 11.0974, -15.7249, 1.03 ) }
    dend_23 { pt3dadd( -8.03236, 12.0805, -15.7288, 1.03 ) }
    dend_23 { pt3dadd( -7.53374, 14.0958, -15.6622, 0.88 ) }
    dend_23 { pt3dadd( -7.05062, 15.6674, -15.6328, 0.88 ) }
    dend_23 { pt3dadd( -6.70196, 16.7562, -15.6379, 0.59 ) }
    dend_23 { pt3dadd( -6.41795, 17.7224, -15.6539, 0.59 ) }
    dend_23 { pt3dadd( -5.97489, 19.4145, -15.6951, 0.96 ) }
    dend_23 { pt3dadd( -5.47359, 21.3561, -15.7458, 0.52 ) }
    dend_23 { pt3dadd( -5.12846, 23.0702, -15.7838, 0.66 ) }
    dend_23 { pt3dadd( -5.0652, 23.8855, -15.82, 0.66 ) }
    dend_23 { pt3dadd( -5.12549, 25.0438, -15.8987, 0.66 ) }
    dend_23 { pt3dadd( -5.26671, 25.842, -15.9467, 0.66 ) }
    dend_23 { pt3dadd( -5.63472, 27.1707, -16.0205, 1.18 ) }
    dend_23 { pt3dadd( -6.16564, 28.8011, -16.1062, 0.96 ) }
    dend_23 { pt3dadd( -6.44969, 29.6722, -16.1618, 0.96 ) }
    dend_23 { pt3dadd( -6.84183, 30.9889, -16.2967, 0.88 ) }
    dend_23 { pt3dadd( -7.20024, 32.5053, -16.544, 1.03 ) }
    dend_23 { pt3dadd( -7.38752, 33.4066, -16.7284, 1.18 ) }
    dend_23 { pt3dadd( -7.61185, 34.7111, -17.0109, 0.74 ) }
    dend_23 { pt3dadd( -7.77838, 35.9672, -17.2739, 0.74 ) }
    dend_23 { pt3dadd( -7.87574, 36.9282, -17.4774, 0.96 ) }
    dend_23 { pt3dadd( -8.00002, 38.4136, -17.7883, 1.11 ) }
    dend_23 { pt3dadd( -8.06745, 40.076, -18.1543, 0.96 ) }
    dend_23 { pt3dadd( -8.03514, 42.5283, -18.6817, 0.59 ) }
    dend_23 { pt3dadd( -7.95015, 43.8168, -18.9307, 0.59 ) }
    dend_23 { pt3dadd( -7.71876, 45.4701, -19.2269, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( -7.5622, 46.1868, -19.3516, 0.74 ) }
    dend_23 { pt3dadd( -7.12393, 47.6461, -19.5742, 0.59 ) }
    dend_23 { pt3dadd( -6.57359, 49.0618, -19.772, 0.59 ) }
    dend_23 { pt3dadd( -6.06055, 50.2458, -19.9187, 0.59 ) }
    dend_23 { pt3dadd( -5.50248, 51.6385, -20.0692, 0.52 ) }
    dend_23 { pt3dadd( -5.15108, 52.7495, -20.178, 0.52 ) }
    dend_23 { pt3dadd( -4.869, 54.1694, -20.3653, 0.74 ) }
    dend_23 { pt3dadd( -4.84651, 55.1632, -20.5512, 0.88 ) }
    dend_23 { pt3dadd( -5.00953, 56.4049, -20.904, 0.59 ) }
    dend_23 { pt3dadd( -5.34654, 57.7758, -21.4441, 0.44 ) }
    dend_23 { pt3dadd( -5.79701, 59.1502, -22.098, 0.59 ) }
    dend_23 { pt3dadd( -6.25812, 60.4335, -22.7696, 0.96 ) }
    dend_23 { pt3dadd( -6.79298, 62.0624, -23.6353, 0.52 ) }
    dend_23 { pt3dadd( -7.12811, 63.3734, -24.2985, 0.52 ) }
    dend_23 { pt3dadd( -7.295, 64.4116, -24.7626, 0.52 ) }
    dend_23 { pt3dadd( -7.38297, 66.0948, -25.4027, 0.37 ) }
    dend_23 { pt3dadd( -7.36239, 67.1546, -25.7326, 0.37 ) }
    dend_23 { pt3dadd( -7.277, 69.0539, -26.1953, 0.44 ) }
    dend_23 { pt3dadd( -7.2551, 70.533, -26.4832, 0.59 ) }
    dend_23 { pt3dadd( -7.34686, 71.8456, -26.7012, 0.59 ) }
    dend_23 { pt3dadd( -7.52108, 72.7927, -26.8437, 0.59 ) }
    dend_23 { pt3dadd( -8.04079, 74.3504, -27.1233, 0.59 ) }
    dend_23 { pt3dadd( -8.58292, 75.505, -27.4198, 0.66 ) }
    dend_23 { pt3dadd( -9.37165, 76.8487, -27.8817, 0.74 ) }
    dend_23 { pt3dadd( -10.138, 78.0715, -28.3927, 0.52 ) }
    dend_23 { pt3dadd( -10.7899, 79.1366, -28.9258, 0.29 ) }
    dend_23 { pt3dadd( -11.3369, 80.2374, -29.6112, 0.29 ) }
    dend_23 { pt3dadd( -11.4432, 81.1089, -30.4228, 0.44 ) }
    dend_23 { pt3dadd( -11.1329, 81.6252, -31.2001, 0.59 ) }
    dend_23 { pt3dadd( -10.4348, 82.0498, -32.2478, 0.29 ) }
    dend_23 { pt3dadd( -9.90543, 82.1997, -32.8889, 0.29 ) }
    dend_23 { pt3dadd( -9.0099, 82.3099, -33.8725, 0.29 ) }
    dend_23 { pt3dadd( -8.30857, 82.3483, -34.5921, 0.29 ) }
    dend_23 { pt3dadd( -7.64682, 82.391, -35.2936, 0.44 ) }
    dend_23 { pt3dadd( -7.03838, 82.5056, -36.0436, 0.44 ) }
    dend_23 { pt3dadd( -6.62971, 82.6936, -36.7131, 0.52 ) }
    dend_23 { pt3dadd( -6.5261, 83.0691, -37.2831, 0.52 ) }
    dend_23 { pt3dadd( -6.81884, 83.6226, -37.6938, 0.52 ) }
    dend_23 { pt3dadd( -7.46154, 84.3796, -38.1715, 0.66 ) }
    dend_23 { pt3dadd( -8.35674, 85.1988, -38.6571, 0.66 ) }
    dend_23 { pt3dadd( -9.33075, 85.8684, -39.0603, 0.37 ) }
    dend_23 { pt3dadd( -10.5178, 86.422, -39.5037, 0.37 ) }
    dend_23 { pt3dadd( -11.5358, 86.6732, -39.901, 0.37 ) }
    dend_23 { pt3dadd( -12.24, 86.653, -40.2295, 0.37 ) }
    dend_23 { pt3dadd( -12.7351, 86.4927, -40.5111, 0.37 ) }
    dend_23 { pt3dadd( -13.4967, 86.0095, -41.0516, 0.29 ) }
    dend_23 { pt3dadd( -14.2194, 85.2297, -41.7264, 0.22 ) }
    dend_23 { pt3dadd( -14.6728, 84.3742, -42.348, 0.22 ) }
    dend_23 { pt3dadd( -14.9694, 82.9255, -43.2624, 0.66 ) }
    dend_23 { pt3dadd( -14.8961, 82.2038, -43.6821, 0.37 ) }
    dend_23 { pt3dadd( -14.6427, 81.4224, -44.1648, 0.22 ) }
    dend_23 { pt3dadd( -14.1621, 80.5582, -44.7346, 0.22 ) }
    dend_23 { pt3dadd( -13.6792, 79.9393, -45.1879, 0.22 ) }
    dend_23 { pt3dadd( -12.9041, 79.0957, -45.8351, 0.29 ) }
    dend_23 { pt3dadd( -11.7945, 78.0252, -46.699, 0.15 ) }
    dend_23 { pt3dadd( -10.7487, 77.0615, -47.5412, 0.15 ) }
    dend_23 { pt3dadd( -9.51643, 75.9239, -48.6133, 0.15 ) }
    dend_23 { pt3dadd( -8.61533, 75.1032, -49.4906, 0.15 ) }
    dend_23 { pt3dadd( -8.34072, 74.8471, -49.7915, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.70795, 0.311826, -10.4663, 1.25 ) }
    dend_13 { pt3dadd( -2.88276, -1.16061, -11.7569, 1.25 ) }
    dend_13 { pt3dadd( -2.29521, -2.01811, -12.4657, 1.25 ) }
    dend_13 { pt3dadd( -1.48808, -3.07322, -13.3106, 1.25 ) }
    dend_13 { pt3dadd( -0.990234, -3.73857, -13.8055, 1.25 ) }
    dend_13 { pt3dadd( -0.356444, -4.70374, -14.4578, 1.11 ) }
    dend_13 { pt3dadd( 0.057244, -5.48571, -14.9429, 1.33 ) }
    dend_13 { pt3dadd( 0.57579, -6.80533, -15.6029, 0.81 ) }
    dend_13 { pt3dadd( 0.772914, -7.876, -15.9943, 0.66 ) }
    dend_13 { pt3dadd( 0.772063, -8.78441, -16.2596, 0.66 ) }
    dend_13 { pt3dadd( 0.60728, -10.2005, -16.6086, 1.03 ) }
    dend_13 { pt3dadd( 0.316201, -11.8685, -16.9592, 1.4 ) }
    dend_13 { pt3dadd( 0.0777195, -13.1731, -17.2045, 1.99 ) }
    dend_13 { pt3dadd( -0.2315, -15.0167, -17.5007, 1.33 ) }
    dend_13 { pt3dadd( -0.383006, -16.4148, -17.7036, 0.96 ) }
    dend_13 { pt3dadd( -0.485001, -18.0681, -17.9446, 0.81 ) }
    dend_13 { pt3dadd( -0.46498, -19.3239, -18.1218, 0.74 ) }
    dend_13 { pt3dadd( -0.329227, -20.6535, -18.2867, 0.96 ) }
    dend_13 { pt3dadd( -0.102615, -21.8338, -18.4376, 1.33 ) }
    dend_13 { pt3dadd( 0.175233, -22.8185, -18.5674, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 79/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.70795, 0.311826, -10.4663, 1.77 ) }
    dend_2 { pt3dadd( -4.68088, -1.18376, -10.9198, 1.77 ) }
    dend_2 { pt3dadd( -5.63603, -2.72623, -11.4157, 1.62 ) }
    dend_2 { pt3dadd( -6.42859, -4.0832, -11.9051, 1.84 ) }
    dend_2 { pt3dadd( -6.96705, -5.00512, -12.2376, 2.06 ) }
    dend_2 { pt3dadd( -7.93371, -6.66018, -12.8345, 1.84 ) }
    dend_2 { pt3dadd( -8.84026, -8.21235, -13.3943, 1.84 ) }
    dend_2 { pt3dadd( -9.72632, -9.84219, -14.0324, 1.84 ) }
    dend_2 { pt3dadd( -10.4135, -11.119, -14.5815, 2.36 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.53529, 36.7015, 14.3622, 0.52 ) }
    dend_56 { pt3dadd( -3.89759, 37.7909, 13.9181, 0.52 ) }
    dend_56 { pt3dadd( -3.31533, 38.8722, 13.4178, 0.52 ) }
    dend_56 { pt3dadd( -3.0293, 39.4585, 13.0965, 0.52 ) }
    dend_56 { pt3dadd( -2.69623, 40.2117, 12.6485, 0.59 ) }
    dend_56 { pt3dadd( -2.40004, 40.9085, 12.2095, 0.44 ) }
    dend_56 { pt3dadd( -2.18164, 41.4302, 11.8727, 0.44 ) }
    dend_56 { pt3dadd( -1.96837, 41.9924, 11.4959, 0.52 ) }
    dend_56 { pt3dadd( -1.6488, 42.8147, 10.9486, 0.88 ) }
    dend_56 { pt3dadd( -1.41697, 43.3875, 10.5491, 1.25 ) }
    dend_56 { pt3dadd( -1.10229, 44.1567, 10.0122, 1.18 ) }
    dend_56 { pt3dadd( -0.681868, 45.181, 9.32012, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_56 { pt3dadd( -0.264905, 46.1634, 8.68037, 0.52 ) }
    dend_56 { pt3dadd( 0.198458, 47.2033, 8.03107, 0.44 ) }
    dend_56 { pt3dadd( 0.509302, 47.8841, 7.61472, 0.44 ) }
    dend_56 { pt3dadd( 0.712616, 48.3333, 7.34726, 0.44 ) }
    dend_56 { pt3dadd( 1.06072, 49.1363, 6.90365, 0.52 ) }
    dend_56 { pt3dadd( 1.35779, 49.8539, 6.56211, 0.59 ) }
    dend_56 { pt3dadd( 1.73173, 50.7945, 6.20538, 0.66 ) }
    dend_56 { pt3dadd( 2.02007, 51.5536, 5.98802, 0.66 ) }
    dend_56 { pt3dadd( 2.277, 52.2899, 5.84134, 0.96 ) }
    dend_56 { pt3dadd( 2.52299, 53.0548, 5.74032, 1.18 ) }
    dend_56 { pt3dadd( 2.88181, 54.2524, 5.68107, 0.96 ) }
    dend_56 { pt3dadd( 3.1238, 55.1149, 5.69265, 0.44 ) }
    dend_56 { pt3dadd( 3.27522, 55.6685, 5.71883, 0.29 ) }
    dend_56 { pt3dadd( 3.47041, 56.3496, 5.76226, 0.29 ) }
    dend_56 { pt3dadd( 3.58203, 56.6784, 5.78195, 0.29 ) }
    dend_56 { pt3dadd( 3.84423, 57.2788, 5.82462, 0.59 ) }
    dend_56 { pt3dadd( 4.03735, 57.6082, 5.85757, 0.96 ) }
    dend_56 { pt3dadd( 4.63062, 58.3879, 5.93001, 1.25 ) }
    dend_56 { pt3dadd( 4.9953, 58.7814, 5.94945, 1.11 ) }
    dend_56 { pt3dadd( 5.81589, 59.5867, 5.94144, 0.52 ) }
    dend_56 { pt3dadd( 6.43117, 60.2075, 5.90398, 0.52 ) }
    dend_56 { pt3dadd( 6.95923, 60.7764, 5.8539, 0.22 ) }
    dend_56 { pt3dadd( 7.52882, 61.4301, 5.77804, 0.29 ) }
    dend_56 { pt3dadd( 8.04023, 62.0362, 5.67404, 0.59 ) }
    dend_56 { pt3dadd( 8.52276, 62.6118, 5.52056, 1.11 ) }
    dend_56 { pt3dadd( 9.08617, 63.2799, 5.28358, 1.25 ) }
    dend_56 { pt3dadd( 9.77424, 64.0624, 4.92512, 0.96 ) }
    dend_56 { pt3dadd( 10.3151, 64.6003, 4.58377, 0.29 ) }
    dend_56 { pt3dadd( 10.8045, 64.9658, 4.22264, 0.22 ) }
    dend_56 { pt3dadd( 11.2567, 65.1808, 3.82893, 0.22 ) }
    dend_56 { pt3dadd( 11.6395, 65.2996, 3.43347, 0.37 ) }
    dend_56 { pt3dadd( 12.1435, 65.4257, 2.8033, 0.59 ) }
    dend_56 { pt3dadd( 12.6668, 65.5705, 2.00661, 0.74 ) }
    dend_56 { pt3dadd( 13.1778, 65.7612, 1.14605, 0.96 ) }
    dend_56 { pt3dadd( 13.5943, 65.9494, 0.433531, 1.18 ) }
    dend_56 { pt3dadd( 14.0668, 66.1932, -0.360992, 1.18 ) }
    dend_56 { pt3dadd( 14.6119, 66.4997, -1.242, 1.25 ) }
    dend_56 { pt3dadd( 15.2408, 66.886, -2.13625, 1.25 ) }
    dend_56 { pt3dadd( 15.8135, 67.2815, -2.80124, 0.52 ) }
    dend_56 { pt3dadd( 16.2514, 67.6099, -3.20042, 0.29 ) }
    dend_56 { pt3dadd( 16.7922, 68.0388, -3.56408, 0.29 ) }
    dend_56 { pt3dadd( 17.1588, 68.3442, -3.7268, 0.66 ) }
    dend_56 { pt3dadd( 17.7587, 68.9283, -3.87932, 0.66 ) }
    dend_56 { pt3dadd( 18.4429, 69.7795, -3.97288, 0.52 ) }
    dend_56 { pt3dadd( 18.7518, 70.3467, -4.00215, 0.59 ) }
    dend_56 { pt3dadd( 18.9942, 71.0105, -4.02888, 0.74 ) }
    dend_56 { pt3dadd( 19.091, 71.4154, -4.03869, 0.74 ) }
    dend_56 { pt3dadd( 19.2409, 72.3981, -4.11048, 0.29 ) }
    dend_56 { pt3dadd( 19.2957, 73.1042, -4.18416, 0.29 ) }
    dend_56 { pt3dadd( 19.3363, 74.1904, -4.30727, 0.44 ) }
    dend_56 { pt3dadd( 19.3501, 74.6129, -4.35612, 0.81 ) }
    dend_56 { pt3dadd( 19.3882, 75.1809, -4.4329, 0.81 ) }
    dend_56 { pt3dadd( 19.53, 76.3009, -4.62652, 0.66 ) }
    dend_56 { pt3dadd( 19.7397, 77.2533, -4.83164, 0.66 ) }
    dend_56 { pt3dadd( 19.8569, 77.6378, -4.91996, 0.66 ) }
    dend_56 { pt3dadd( 20.1279, 78.3871, -5.11076, 0.44 ) }
    dend_56 { pt3dadd( 20.4822, 79.3651, -5.38486, 0.59 ) }
    dend_56 { pt3dadd( 20.7092, 80.0471, -5.5812, 0.44 ) }
    dend_56 { pt3dadd( 20.973, 80.9948, -5.8643, 0.52 ) }
    dend_56 { pt3dadd( 21.1024, 81.5988, -6.06937, 0.52 ) }
    dend_56 { pt3dadd( 21.1998, 82.2301, -6.31293, 0.44 ) }
    dend_56 { pt3dadd( 21.2844, 82.9537, -6.63156, 0.81 ) }
    dend_56 { pt3dadd( 21.3617, 83.7797, -7.03543, 1.03 ) }
    dend_56 { pt3dadd( 21.4574, 84.7782, -7.57262, 0.66 ) }
    dend_56 { pt3dadd( 21.5214, 85.4327, -7.95388, 0.44 ) }
    dend_56 { pt3dadd( 21.5984, 86.0218, -8.28938, 0.29 ) }
    dend_56 { pt3dadd( 21.704, 86.6442, -8.58196, 0.29 ) }
    dend_56 { pt3dadd( 21.7727, 87.0353, -8.71287, 0.29 ) }
    dend_56 { pt3dadd( 21.8733, 87.6022, -8.86685, 0.29 ) }
    dend_56 { pt3dadd( 21.9516, 88.0926, -8.96663, 0.44 ) }
    dend_56 { pt3dadd( 22.1023, 89.2712, -9.19352, 0.74 ) }
    dend_56 { pt3dadd( 22.2431, 90.7761, -9.50081, 0.59 ) }
    dend_56 { pt3dadd( 22.3255, 91.9848, -9.80807, 0.44 ) }
    dend_56 { pt3dadd( 22.3703, 92.7284, -10.0594, 0.44 ) }
    dend_56 { pt3dadd( 22.391, 92.9778, -10.1796, 0.59 ) }
    dend_56 { pt3dadd( 22.4663, 93.5075, -10.5555, 0.59 ) }
    dend_56 { pt3dadd( 22.5609, 93.9487, -10.9931, 0.59 ) }
    dend_56 { pt3dadd( 22.7077, 94.3965, -11.5679, 0.59 ) }
    dend_56 { pt3dadd( 22.876, 94.7702, -12.1075, 0.74 ) }
    dend_56 { pt3dadd( 23.1814, 95.3511, -12.9166, 0.96 ) }
    dend_56 { pt3dadd( 23.4685, 95.8848, -13.5796, 1.18 ) }
    dend_56 { pt3dadd( 23.784, 96.4822, -14.1992, 0.59 ) }
    dend_56 { pt3dadd( 24.0871, 97.0882, -14.7071, 0.59 ) }
    dend_56 { pt3dadd( 24.403, 97.7853, -15.1635, 0.59 ) }
    dend_56 { pt3dadd( 24.5591, 98.2094, -15.3769, 0.29 ) }
    dend_56 { pt3dadd( 24.7267, 98.9293, -15.6537, 0.22 ) }
    dend_56 { pt3dadd( 24.7833, 99.4398, -15.844, 0.22 ) }
    dend_56 { pt3dadd( 24.7808, 100.11, -16.1134, 0.22 ) }
    dend_56 { pt3dadd( 24.7101, 100.746, -16.4472, 0.22 ) }
    dend_56 { pt3dadd( 24.5551, 101.525, -16.969, 0.81 ) }
    dend_56 { pt3dadd( 24.3396, 102.35, -17.6276, 0.22 ) }
    dend_56 { pt3dadd( 24.1461, 103.01, -18.2193, 0.37 ) }
    dend_56 { pt3dadd( 23.9362, 103.648, -18.8543, 0.88 ) }
    dend_56 { pt3dadd( 23.5172, 104.784, -20.1173, 0.15 ) }
    dend_56 { pt3dadd( 23.3018, 105.346, -20.8056, 0.15 ) }
    dend_56 { pt3dadd( 23.2085, 105.609, -21.166, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 96/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -4.53529, 36.7015, 14.3622, 0.81 ) }
    dend_49 { pt3dadd( -5.00144, 37.9623, 15.5883, 0.81 ) }
    dend_49 { pt3dadd( -5.38598, 39.1542, 16.6096, 0.81 ) }
    dend_49 { pt3dadd( -5.85195, 40.5169, 17.5907, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_49 { pt3dadd( -6.14324, 41.3146, 18.0701, 0.59 ) }
    dend_49 { pt3dadd( -6.46696, 42.1725, 18.5335, 0.59 ) }
    dend_49 { pt3dadd( -6.77425, 43.0127, 18.9418, 0.44 ) }
    dend_49 { pt3dadd( -6.98222, 43.6977, 19.1611, 0.44 ) }
    dend_49 { pt3dadd( -7.36486, 44.998, 19.4686, 0.44 ) }
    dend_49 { pt3dadd( -7.6442, 45.9229, 19.6702, 0.74 ) }
    dend_49 { pt3dadd( -7.99878, 47.0162, 19.9796, 1.11 ) }
    dend_49 { pt3dadd( -8.26397, 47.8279, 20.2282, 1.11 ) }
    dend_49 { pt3dadd( -8.75249, 49.3491, 20.7341, 0.52 ) }
    dend_49 { pt3dadd( -9.09276, 50.5455, 21.1651, 0.66 ) }
    dend_49 { pt3dadd( -9.36459, 51.6619, 21.6196, 0.96 ) }
    dend_49 { pt3dadd( -9.63368, 52.828, 22.13, 1.33 ) }
    dend_49 { pt3dadd( -10.0099, 54.3972, 22.8271, 1.77 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -152.755, -366.575, 2.26737, 0.29 ) }
    dend_40 { pt3dadd( -152.963, -367.523, 2.57181, 0.29 ) }
    dend_40 { pt3dadd( -153.199, -368.499, 2.78781, 0.66 ) }
    dend_40 { pt3dadd( -153.539, -369.863, 2.99059, 0.15 ) }
    dend_40 { pt3dadd( -153.729, -370.639, 3.06481, 0.15 ) }
    dend_40 { pt3dadd( -153.87, -371.147, 3.06637, 0.59 ) }
    dend_40 { pt3dadd( -154.217, -372.201, 2.97175, 0.07 ) }
    dend_40 { pt3dadd( -154.523, -372.879, 2.77847, 0.07 ) }
    dend_40 { pt3dadd( -154.721, -373.227, 2.61612, 0.15 ) }
    dend_40 { pt3dadd( -154.926, -373.584, 2.36717, 0.37 ) }
    dend_40 { pt3dadd( -155.378, -374.438, 1.66665, 0.07 ) }
    dend_40 { pt3dadd( -155.677, -375.023, 1.12697, 0.07 ) }
    dend_40 { pt3dadd( -155.823, -375.313, 0.841685, 0.07 ) }
    dend_40 { pt3dadd( -156.002, -375.648, 0.51818, 0.81 ) }
    dend_40 { pt3dadd( -156.453, -376.525, -0.295065, 0.22 ) }
    dend_40 { pt3dadd( -156.715, -377.1, -0.785323, 0.44 ) }
    dend_40 { pt3dadd( -156.96, -377.829, -1.30706, 0.15 ) }
    dend_40 { pt3dadd( -157.067, -378.255, -1.58391, 0.15 ) }
    dend_40 { pt3dadd( -157.13, -378.582, -1.7771, 0.44 ) }
    dend_40 { pt3dadd( -157.23, -379.119, -2.07573, 0.66 ) }
    dend_40 { pt3dadd( -157.434, -380.11, -2.54856, 0.15 ) }
    dend_40 { pt3dadd( -157.542, -380.758, -2.82488, 0.15 ) }
    dend_40 { pt3dadd( -157.575, -381.319, -3.03563, 0.15 ) }
    dend_40 { pt3dadd( -157.567, -381.936, -3.26926, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 37/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -152.755, -366.575, 2.26737, 0.07 ) }
    dend_39 { pt3dadd( -154.357, -365.556, 2.3631, 0.07 ) }
    dend_39 { pt3dadd( -155.504, -364.807, 2.38086, 0.07 ) }
    dend_39 { pt3dadd( -156.568, -364.118, 2.36904, 0.07 ) }
    dend_39 { pt3dadd( -157.076, -363.781, 2.35184, 0.15 ) }
    dend_39 { pt3dadd( -157.982, -363.112, 2.3051, 0.07 ) }
    dend_39 { pt3dadd( -158.569, -362.623, 2.26696, 0.07 ) }
    dend_39 { pt3dadd( -159.058, -362.105, 2.17144, 0.22 ) }
    dend_39 { pt3dadd( -159.426, -361.673, 2.14166, 0.15 ) }
    dend_39 { pt3dadd( -159.649, -361.406, 2.13884, 0.15 ) }
    dend_39 { pt3dadd( -160.384, -360.564, 2.13548, 0.29 ) }
    dend_39 { pt3dadd( -161.028, -359.898, 2.14061, 0.07 ) }
    dend_39 { pt3dadd( -161.692, -359.286, 2.15083, 0.15 ) }
    dend_39 { pt3dadd( -163.187, -358.056, 2.13318, 0.07 ) }
    dend_39 { pt3dadd( -164.077, -357.475, 2.10209, 0.15 ) }
    dend_39 { pt3dadd( -164.812, -357.139, 2.05441, 0.15 ) }
    dend_39 { pt3dadd( -165.483, -356.958, 1.98943, 0.15 ) }
    dend_39 { pt3dadd( -166.171, -356.903, 1.90005, 0.15 ) }
    dend_39 { pt3dadd( -167.174, -356.918, 1.72966, 0.15 ) }
    dend_39 { pt3dadd( -168.07, -357.042, 1.50485, 0.07 ) }
    dend_39 { pt3dadd( -168.935, -357.257, 1.33374, 0.07 ) }
    dend_39 { pt3dadd( -169.47, -357.433, 1.24981, 0.66 ) }
    dend_39 { pt3dadd( -170.48, -357.858, 1.07965, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -27.2682, -365.156, 41.7625, 0.15 ) }
    dend_29 { pt3dadd( -26.3689, -366.536, 41.1021, 0.15 ) }
    dend_29 { pt3dadd( -25.9834, -367.3, 40.759, 0.15 ) }
    dend_29 { pt3dadd( -25.8097, -367.654, 40.6252, 0.15 ) }
    dend_29 { pt3dadd( -25.6101, -368.052, 40.4788, 0.52 ) }
    dend_29 { pt3dadd( -25.3426, -368.607, 40.2868, 0.81 ) }
    dend_29 { pt3dadd( -24.6921, -369.988, 39.7871, 0.22 ) }
    dend_29 { pt3dadd( -24.2358, -371.048, 39.4352, 0.22 ) }
    dend_29 { pt3dadd( -23.9368, -371.802, 39.1847, 0.15 ) }
    dend_29 { pt3dadd( -23.6699, -372.439, 38.9842, 0.22 ) }
    dend_29 { pt3dadd( -23.2772, -373.249, 38.7467, 0.29 ) }
    dend_29 { pt3dadd( -22.8057, -374.066, 38.529, 0.22 ) }
    dend_29 { pt3dadd( -22.4732, -374.559, 38.4077, 0.22 ) }
    dend_29 { pt3dadd( -22.0881, -375.112, 38.2561, 0.37 ) }
    dend_29 { pt3dadd( -21.5814, -375.86, 38.0172, 0.37 ) }
    dend_29 { pt3dadd( -20.9224, -376.849, 37.7013, 0.22 ) }
    dend_29 { pt3dadd( -20.6231, -377.247, 37.5697, 0.22 ) }
    dend_29 { pt3dadd( -20.1385, -377.841, 37.3652, 0.22 ) }
    dend_29 { pt3dadd( -19.8924, -378.139, 37.2425, 0.22 ) }
    dend_29 { pt3dadd( -19.5552, -378.581, 37.0167, 0.22 ) }
    dend_29 { pt3dadd( -19.2258, -379.038, 36.7793, 0.15 ) }
    dend_29 { pt3dadd( -18.5807, -379.944, 36.3558, 0.44 ) }
    dend_29 { pt3dadd( -17.8563, -381.024, 35.9052, 0.22 ) }
    dend_29 { pt3dadd( -17.4737, -381.669, 35.6657, 0.29 ) }
    dend_29 { pt3dadd( -16.737, -383.004, 35.2088, 0.07 ) }
    dend_29 { pt3dadd( -16.2962, -383.856, 34.9433, 0.66 ) }
    dend_29 { pt3dadd( -15.7323, -385.048, 34.6097, 0.07 ) }
    dend_29 { pt3dadd( -15.3841, -385.863, 34.409, 0.07 ) }
    dend_29 { pt3dadd( -14.9537, -386.789, 34.208, 0.29 ) }
    dend_29 { pt3dadd( -14.4481, -387.772, 34.0176, 0.07 ) }
    dend_29 { pt3dadd( -14.1964, -388.238, 33.9265, 0.44 ) }
    dend_29 { pt3dadd( -14.0667, -388.489, 33.8602, 0.44 ) }
    dend_29 { pt3dadd( -13.6437, -389.298, 33.6169, 0.74 ) }
    dend_29 { pt3dadd( -12.8284, -390.539, 33.2448, 0.07 ) }
    dend_29 { pt3dadd( -12.4418, -391.042, 33.1114, 0.22 ) }
    dend_29 { pt3dadd( -11.881, -391.717, 32.9757, 0.07 ) }
    dend_29 { pt3dadd( -11.3934, -392.309, 32.8555, 0.07 ) }
    dend_29 { pt3dadd( -10.9512, -392.843, 32.761, 0.66 ) }
    dend_29 { pt3dadd( -9.69161, -394.295, 32.6266, 0.07 ) }
    dend_29 { pt3dadd( -9.08501, -394.895, 32.6643, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_29 { pt3dadd( -8.34472, -395.468, 32.7694, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -27.2682, -365.156, 41.7625, 0.07 ) }
    dend_28 { pt3dadd( -26.4309, -365.464, 42.8085, 0.07 ) }
    dend_28 { pt3dadd( -26.0375, -365.58, 43.2879, 0.29 ) }
    dend_28 { pt3dadd( -25.5524, -365.707, 43.87, 0.07 ) }
    dend_28 { pt3dadd( -25.1448, -365.798, 44.3537, 0.52 ) }
    dend_28 { pt3dadd( -23.9832, -365.949, 45.6152, 0.07 ) }
    dend_28 { pt3dadd( -23.2737, -365.984, 46.3215, 0.07 ) }
    dend_28 { pt3dadd( -22.989, -365.976, 46.5894, 0.59 ) }
    dend_28 { pt3dadd( -22.5866, -365.941, 46.9426, 0.74 ) }
    dend_28 { pt3dadd( -22.1853, -365.873, 47.2757, 0.37 ) }
    dend_28 { pt3dadd( -21.089, -365.604, 48.1046, 0.07 ) }
    dend_28 { pt3dadd( -20.4964, -365.392, 48.4576, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.175233, -22.8185, -18.5674, 0.59 ) }
    dend_21 { pt3dadd( 0.478327, -22.6707, -20.3827, 0.59 ) }
    dend_21 { pt3dadd( 0.704807, -22.6201, -21.798, 0.59 ) }
    dend_21 { pt3dadd( 0.991116, -22.6152, -23.8441, 0.52 ) }
    dend_21 { pt3dadd( 1.13597, -22.6387, -25.4568, 0.52 ) }
    dend_21 { pt3dadd( 1.19564, -22.655, -26.6152, 0.52 ) }
    dend_21 { pt3dadd( 1.19987, -22.6461, -27.195, 0.52 ) }
    dend_21 { pt3dadd( 1.10822, -22.5584, -28.2287, 0.52 ) }
    dend_21 { pt3dadd( 1.03779, -22.4754, -28.6932, 0.52 ) }
    dend_21 { pt3dadd( 0.850072, -22.1233, -29.7577, 0.66 ) }
    dend_21 { pt3dadd( 0.813248, -21.9244, -30.1464, 0.66 ) }
    dend_21 { pt3dadd( 0.889353, -21.2808, -31.2423, 0.29 ) }
    dend_21 { pt3dadd( 1.15715, -20.662, -32.3064, 0.88 ) }
    dend_21 { pt3dadd( 1.62768, -20.2355, -33.1628, 0.37 ) }
    dend_21 { pt3dadd( 2.2464, -19.9393, -33.9564, 0.29 ) }
    dend_21 { pt3dadd( 2.88133, -19.7291, -34.6069, 0.29 ) }
    dend_21 { pt3dadd( 3.3926, -19.5929, -35.0649, 0.29 ) }
    dend_21 { pt3dadd( 3.75835, -19.5154, -35.3409, 0.44 ) }
    dend_21 { pt3dadd( 4.52531, -19.2954, -35.8784, 0.52 ) }
    dend_21 { pt3dadd( 5.25047, -18.9476, -36.3504, 0.15 ) }
    dend_21 { pt3dadd( 5.83946, -18.5355, -36.6803, 0.15 ) }
    dend_21 { pt3dadd( 6.48973, -17.9688, -36.9804, 0.15 ) }
    dend_21 { pt3dadd( 6.95104, -17.4827, -37.1625, 0.15 ) }
    dend_21 { pt3dadd( 7.46664, -16.8145, -37.3906, 0.15 ) }
    dend_21 { pt3dadd( 8.04568, -15.9128, -37.6645, 0.15 ) }
    dend_21 { pt3dadd( 8.67675, -14.8897, -37.9568, 0.29 ) }
    dend_21 { pt3dadd( 9.04995, -14.2694, -38.1398, 0.15 ) }
    dend_21 { pt3dadd( 9.62171, -13.2359, -38.4377, 0.22 ) }
    dend_21 { pt3dadd( 10.3155, -11.8345, -38.8412, 0.07 ) }
    dend_21 { pt3dadd( 10.5822, -11.2449, -39.0204, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.175233, -22.8185, -18.5674, 0.88 ) }
    dend_14 { pt3dadd( 0.610982, -24.0794, -19.5133, 0.88 ) }
    dend_14 { pt3dadd( 0.964417, -25.2265, -20.6158, 0.74 ) }
    dend_14 { pt3dadd( 1.27577, -26.237, -21.587, 0.88 ) }
    dend_14 { pt3dadd( 1.73286, -27.7205, -23.0128, 0.88 ) }
    dend_14 { pt3dadd( 2.10753, -28.9364, -24.1814, 0.96 ) }
    dend_14 { pt3dadd( 2.51684, -30.2649, -25.4582, 0.96 ) }
    dend_14 { pt3dadd( 2.64405, -30.9799, -26.4111, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.4135, -11.119, -14.5815, 0.81 ) }
    dend_12 { pt3dadd( -11.2865, -11.7578, -14.602, 0.81 ) }
    dend_12 { pt3dadd( -11.9477, -12.2078, -14.531, 0.44 ) }
    dend_12 { pt3dadd( -12.4021, -12.4613, -14.4065, 0.44 ) }
    dend_12 { pt3dadd( -13.0153, -12.7153, -14.147, 0.66 ) }
    dend_12 { pt3dadd( -13.4504, -12.8486, -13.9257, 0.74 ) }
    dend_12 { pt3dadd( -14.0716, -12.9929, -13.589, 0.44 ) }
    dend_12 { pt3dadd( -14.7204, -13.0755, -13.1863, 0.59 ) }
    dend_12 { pt3dadd( -15.5674, -13.1196, -12.651, 0.59 ) }
    dend_12 { pt3dadd( -16.407, -13.1077, -12.1384, 0.59 ) }
    dend_12 { pt3dadd( -17.1164, -13.0705, -11.7116, 0.59 ) }
    dend_12 { pt3dadd( -17.8861, -13.0398, -11.2597, 0.81 ) }
    dend_12 { pt3dadd( -18.4266, -13.0536, -10.9603, 0.66 ) }
    dend_12 { pt3dadd( -18.8411, -13.1126, -10.747, 0.88 ) }
    dend_12 { pt3dadd( -19.6919, -13.337, -10.3166, 0.37 ) }
    dend_12 { pt3dadd( -20.1494, -13.4943, -10.0713, 0.44 ) }
    dend_12 { pt3dadd( -20.7595, -13.7249, -9.71562, 0.59 ) }
    dend_12 { pt3dadd( -21.4679, -13.9849, -9.27407, 0.44 ) }
    dend_12 { pt3dadd( -22.1265, -14.1801, -8.85985, 0.44 ) }
    dend_12 { pt3dadd( -22.7543, -14.2884, -8.50592, 0.44 ) }
    dend_12 { pt3dadd( -23.3975, -14.3178, -8.20449, 0.66 ) }
    dend_12 { pt3dadd( -23.9789, -14.2803, -7.9994, 0.81 ) }
    dend_12 { pt3dadd( -24.4833, -14.2061, -7.86323, 0.81 ) }
    dend_12 { pt3dadd( -25.289, -14.0702, -7.699, 0.66 ) }
    dend_12 { pt3dadd( -26.3249, -13.9017, -7.57349, 0.59 ) }
    dend_12 { pt3dadd( -27.1347, -13.8036, -7.56491, 0.59 ) }
    dend_12 { pt3dadd( -28.1409, -13.7521, -7.65933, 0.74 ) }
    dend_12 { pt3dadd( -28.5023, -13.7635, -7.72278, 0.52 ) }
    dend_12 { pt3dadd( -29.193, -13.8509, -7.88555, 0.22 ) }
    dend_12 { pt3dadd( -29.8417, -13.9971, -8.07957, 0.22 ) }
    dend_12 { pt3dadd( -30.4729, -14.171, -8.31032, 0.22 ) }
    dend_12 { pt3dadd( -30.8847, -14.2843, -8.47257, 0.37 ) }
    dend_12 { pt3dadd( -31.3628, -14.4097, -8.65927, 0.81 ) }
    dend_12 { pt3dadd( -31.8274, -14.5231, -8.83084, 0.81 ) }
    dend_12 { pt3dadd( -32.4585, -14.6518, -9.04208, 0.59 ) }
    dend_12 { pt3dadd( -33.1989, -14.7858, -9.24847, 0.37 ) }
    dend_12 { pt3dadd( -33.8086, -14.8764, -9.40187, 0.29 ) }
    dend_12 { pt3dadd( -34.4264, -14.9416, -9.57284, 0.37 ) }
    dend_12 { pt3dadd( -34.8368, -14.9616, -9.7172, 0.29 ) }
    dend_12 { pt3dadd( -35.5067, -14.9663, -9.98691, 0.29 ) }
    dend_12 { pt3dadd( -36.1396, -14.9501, -10.2591, 0.81 ) }
    dend_12 { pt3dadd( -36.8066, -14.9244, -10.5613, 0.52 ) }
    dend_12 { pt3dadd( -37.3761, -14.8899, -10.8476, 0.52 ) }
    dend_12 { pt3dadd( -38.2361, -14.8152, -11.3121, 0.37 ) }
    dend_12 { pt3dadd( -38.7268, -14.7512, -11.6073, 0.66 ) }
    dend_12 { pt3dadd( -39.2321, -14.6649, -11.9545, 0.66 ) }
    dend_12 { pt3dadd( -39.9751, -14.5151, -12.527, 0.44 ) }
    dend_12 { pt3dadd( -40.7418, -14.3542, -13.1635, 0.81 ) }
    dend_12 { pt3dadd( -41.0857, -14.2847, -13.4538, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -41.645, -14.1773, -13.948, 0.37 ) }
    dend_12 { pt3dadd( -42.0525, -14.1168, -14.3648, 0.22 ) }
    dend_12 { pt3dadd( -42.4215, -14.1291, -14.7997, 0.22 ) }
    dend_12 { pt3dadd( -42.6674, -14.2255, -15.1605, 0.22 ) }
    dend_12 { pt3dadd( -42.8468, -14.3667, -15.4579, 0.81 ) }
    dend_12 { pt3dadd( -42.9727, -14.4903, -15.6764, 1.03 ) }
    dend_12 { pt3dadd( -43.2616, -14.8278, -16.1948, 0.66 ) }
    dend_12 { pt3dadd( -43.658, -15.3215, -16.9017, 0.29 ) }
    dend_12 { pt3dadd( -44.1858, -15.9427, -17.831, 0.29 ) }
    dend_12 { pt3dadd( -44.4986, -16.2549, -18.3537, 0.22 ) }
    dend_12 { pt3dadd( -44.7505, -16.4496, -18.756, 0.22 ) }
    dend_12 { pt3dadd( -44.9078, -16.5366, -18.9924, 0.22 ) }
    dend_12 { pt3dadd( -45.1833, -16.6105, -19.3688, 0.22 ) }
    dend_12 { pt3dadd( -45.5046, -16.6159, -19.7674, 0.22 ) }
    dend_12 { pt3dadd( -45.7668, -16.5837, -20.063, 0.22 ) }
    dend_12 { pt3dadd( -46.228, -16.525, -20.6078, 0.22 ) }
    dend_12 { pt3dadd( -46.5015, -16.4816, -20.9364, 0.66 ) }
    dend_12 { pt3dadd( -47.0117, -16.3817, -21.5624, 0.66 ) }
    dend_12 { pt3dadd( -47.4878, -16.2811, -22.1715, 0.15 ) }
    dend_12 { pt3dadd( -47.9337, -16.2116, -22.7499, 0.15 ) }
    dend_12 { pt3dadd( -48.5199, -16.1527, -23.5215, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 21/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.4135, -11.119, -14.5815, 1.55 ) }
    dend_3 { pt3dadd( -9.95161, -12.1192, -14.9426, 1.55 ) }
    dend_3 { pt3dadd( -9.63907, -12.9118, -15.2279, 1.4 ) }
    dend_3 { pt3dadd( -9.42146, -13.6266, -15.4633, 1.33 ) }
    dend_3 { pt3dadd( -9.2398, -14.4523, -15.6901, 0.96 ) }
    dend_3 { pt3dadd( -9.13122, -15.1828, -15.844, 0.88 ) }
    dend_3 { pt3dadd( -9.06685, -15.8807, -15.947, 1.4 ) }
    dend_3 { pt3dadd( -9.08491, -16.4693, -15.9887, 1.47 ) }
    dend_3 { pt3dadd( -9.21329, -17.5255, -15.9927, 1.03 ) }
    dend_3 { pt3dadd( -9.39209, -18.4616, -15.9673, 0.96 ) }
    dend_3 { pt3dadd( -9.62152, -19.4853, -15.9128, 1.03 ) }
    dend_3 { pt3dadd( -9.81397, -20.3835, -15.8494, 1.03 ) }
    dend_3 { pt3dadd( -10.0014, -21.3776, -15.7744, 1.11 ) }
    dend_3 { pt3dadd( -10.1074, -22.0892, -15.7419, 0.88 ) }
    dend_3 { pt3dadd( -10.1976, -23.0262, -15.7379, 0.88 ) }
    dend_3 { pt3dadd( -10.2214, -23.6919, -15.7805, 1.11 ) }
    dend_3 { pt3dadd( -10.1972, -24.6159, -15.9026, 1.11 ) }
    dend_3 { pt3dadd( -10.1251, -25.4051, -16.0404, 0.96 ) }
    dend_3 { pt3dadd( -9.97055, -26.3628, -16.2222, 1.03 ) }
    dend_3 { pt3dadd( -9.84044, -26.9758, -16.3452, 1.11 ) }
    dend_3 { pt3dadd( -9.63453, -27.899, -16.4965, 0.96 ) }
    dend_3 { pt3dadd( -9.50439, -28.5542, -16.5947, 0.88 ) }
    dend_3 { pt3dadd( -9.45219, -28.8693, -16.6374, 0.81 ) }
    dend_3 { pt3dadd( -9.35596, -29.5133, -16.718, 0.74 ) }
    dend_3 { pt3dadd( -9.27055, -30.1614, -16.7971, 0.88 ) }
    dend_3 { pt3dadd( -9.17839, -31.087, -16.9182, 1.03 ) }
    dend_3 { pt3dadd( -9.15825, -31.6286, -16.9826, 1.25 ) }
    dend_3 { pt3dadd( -9.18832, -32.5936, -17.0911, 1.25 ) }
    dend_3 { pt3dadd( -9.27135, -33.5331, -17.1909, 1.18 ) }
    dend_3 { pt3dadd( -9.3716, -34.4246, -17.2939, 1.11 ) }
    dend_3 { pt3dadd( -9.48101, -35.2754, -17.4008, 1.03 ) }
    dend_3 { pt3dadd( -9.64748, -36.5193, -17.5776, 0.96 ) }
    dend_3 { pt3dadd( -9.78805, -37.3444, -17.6708, 0.96 ) }
    dend_3 { pt3dadd( -9.92726, -37.9124, -17.7086, 1.25 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -10.0099, 54.3972, 22.8271, 0.29 ) }
    dend_51 { pt3dadd( -11.0057, 55.7291, 23.671, 0.29 ) }
    dend_51 { pt3dadd( -11.6947, 56.6452, 24.2362, 0.22 ) }
    dend_51 { pt3dadd( -12.2551, 57.3812, 24.6865, 0.22 ) }
    dend_51 { pt3dadd( -12.5417, 57.7736, 24.9343, 0.22 ) }
    dend_51 { pt3dadd( -12.7771, 58.1094, 25.1613, 0.59 ) }
    dend_51 { pt3dadd( -13.1537, 58.6662, 25.5686, 1.03 ) }
    dend_51 { pt3dadd( -13.4989, 59.2497, 26.061, 1.33 ) }
    dend_51 { pt3dadd( -13.981, 60.1649, 26.7968, 0.59 ) }
    dend_51 { pt3dadd( -14.2922, 60.7986, 27.2718, 0.22 ) }
    dend_51 { pt3dadd( -14.532, 61.4529, 27.6746, 0.22 ) }
    dend_51 { pt3dadd( -14.737, 62.3192, 28.1084, 0.22 ) }
    dend_51 { pt3dadd( -14.8167, 62.9409, 28.3555, 0.74 ) }
    dend_51 { pt3dadd( -14.8345, 63.841, 28.6125, 1.84 ) }
    dend_51 { pt3dadd( -14.7958, 64.5926, 28.7582, 1.84 ) }
    dend_51 { pt3dadd( -14.5754, 66.9488, 29.0136, 0.22 ) }
    dend_51 { pt3dadd( -14.3893, 68.3297, 29.0712, 0.22 ) }
    dend_51 { pt3dadd( -14.2469, 69.0859, 29.0851, 0.22 ) }
    dend_51 { pt3dadd( -13.8893, 70.5933, 29.1555, 0.22 ) }
    dend_51 { pt3dadd( -13.7816, 70.9677, 29.1857, 0.44 ) }
    dend_51 { pt3dadd( -13.5211, 71.7386, 29.2738, 1.18 ) }
    dend_51 { pt3dadd( -13.0844, 72.8796, 29.4594, 1.7 ) }
    dend_51 { pt3dadd( -12.3389, 74.8188, 29.8417, 0.15 ) }
    dend_51 { pt3dadd( -11.8857, 76.0624, 30.1195, 0.15 ) }
    dend_51 { pt3dadd( -11.7537, 76.4698, 30.2329, 0.74 ) }
    dend_51 { pt3dadd( -11.5237, 77.256, 30.4656, 1.7 ) }
    dend_51 { pt3dadd( -11.4895, 77.3896, 30.5076, 1.7 ) }
    dend_51 { pt3dadd( -11.2142, 78.8374, 30.9101, 0.15 ) }
    dend_51 { pt3dadd( -11.1562, 79.3977, 31.0195, 0.15 ) }
    dend_51 { pt3dadd( -11.106, 80.3026, 31.1311, 0.15 ) }
    dend_51 { pt3dadd( -11.0954, 81.151, 31.1883, 0.29 ) }
    dend_51 { pt3dadd( -11.1115, 81.5333, 31.1933, 0.29 ) }
    dend_51 { pt3dadd( -11.1988, 82.8236, 31.1509, 0.07 ) }
    dend_51 { pt3dadd( -11.2452, 83.4129, 31.1089, 0.22 ) }
    dend_51 { pt3dadd( -11.2826, 83.9794, 31.0409, 0.66 ) }
    dend_51 { pt3dadd( -11.357, 85.265, 30.8336, 0.96 ) }
    dend_51 { pt3dadd( -11.3988, 86.3729, 30.633, 0.22 ) }
    dend_51 { pt3dadd( -11.4085, 87.7283, 30.3663, 0.66 ) }
    dend_51 { pt3dadd( -11.3838, 88.7777, 30.1811, 0.44 ) }
    dend_51 { pt3dadd( -11.348, 89.4835, 30.0762, 0.74 ) }
    dend_51 { pt3dadd( -11.2957, 90.2325, 29.9997, 1.55 ) }
    dend_51 { pt3dadd( -11.2034, 91.1783, 29.9715, 1.84 ) }
    dend_51 { pt3dadd( -11.014, 93.1394, 30.1148, 0.22 ) }
    dend_51 { pt3dadd( -10.9455, 94.201, 30.3361, 0.22 ) }
    dend_51 { pt3dadd( -10.9367, 94.5607, 30.4614, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_51 { pt3dadd( -10.9637, 95.2759, 30.7998, 1.25 ) }
    dend_51 { pt3dadd( -11.0418, 96.0637, 31.2297, 1.62 ) }
    dend_51 { pt3dadd( -11.2727, 97.6106, 32.1433, 0.22 ) }
    dend_51 { pt3dadd( -11.4133, 98.3908, 32.6203, 0.22 ) }
    dend_51 { pt3dadd( -11.6511, 99.59, 33.2802, 1.03 ) }
    dend_51 { pt3dadd( -12.0184, 101.465, 34.1248, 0.15 ) }
    dend_51 { pt3dadd( -12.2443, 102.675, 34.5233, 0.15 ) }
    dend_51 { pt3dadd( -12.3471, 103.282, 34.6478, 0.52 ) }
    dend_51 { pt3dadd( -12.4214, 103.824, 34.6822, 1.03 ) }
    dend_51 { pt3dadd( -12.5337, 104.922, 34.6206, 1.18 ) }
    dend_51 { pt3dadd( -12.6666, 106.456, 34.3537, 0.22 ) }
    dend_51 { pt3dadd( -12.7242, 107.192, 34.1412, 0.22 ) }
    dend_51 { pt3dadd( -12.803, 107.958, 33.8873, 0.22 ) }
    dend_51 { pt3dadd( -12.9567, 109.122, 33.4627, 0.22 ) }
    dend_51 { pt3dadd( -13.0415, 109.646, 33.2526, 0.74 ) }
    dend_51 { pt3dadd( -13.2377, 110.639, 32.8307, 1.77 ) }
    dend_51 { pt3dadd( -13.5293, 111.877, 32.2703, 0.22 ) }
    dend_51 { pt3dadd( -13.7288, 112.657, 31.8756, 0.22 ) }
    dend_51 { pt3dadd( -13.8979, 113.264, 31.5218, 0.22 ) }
    dend_51 { pt3dadd( -14.0005, 113.628, 31.2844, 0.22 ) }
    dend_51 { pt3dadd( -14.2196, 114.469, 30.7464, 0.07 ) }
    dend_51 { pt3dadd( -14.385, 115.295, 30.2664, 0.07 ) }
    dend_51 { pt3dadd( -14.4854, 115.891, 29.965, 0.07 ) }
    dend_51 { pt3dadd( -14.6006, 116.619, 29.6473, 0.37 ) }
    dend_51 { pt3dadd( -14.7414, 117.459, 29.3481, 1.03 ) }
    dend_51 { pt3dadd( -14.9901, 118.847, 28.9453, 0.52 ) }
    dend_51 { pt3dadd( -15.3221, 120.516, 28.5988, 0.15 ) }
    dend_51 { pt3dadd( -15.4987, 121.355, 28.4924, 0.29 ) }
    dend_51 { pt3dadd( -15.6322, 121.966, 28.4489, 0.96 ) }
    dend_51 { pt3dadd( -15.8138, 122.764, 28.4224, 1.11 ) }
    dend_51 { pt3dadd( -16.0487, 123.719, 28.4181, 0.22 ) }
    dend_51 { pt3dadd( -16.3511, 124.852, 28.4521, 0.22 ) }
    dend_51 { pt3dadd( -16.5831, 125.59, 28.5128, 0.37 ) }
    dend_51 { pt3dadd( -16.8205, 126.287, 28.5814, 0.96 ) }
    dend_51 { pt3dadd( -17.0569, 126.893, 28.6515, 0.96 ) }
    dend_51 { pt3dadd( -17.4316, 127.719, 28.7436, 0.15 ) }
    dend_51 { pt3dadd( -17.9133, 128.65, 28.808, 0.22 ) }
    dend_51 { pt3dadd( -18.4561, 129.59, 28.8362, 0.37 ) }
    dend_51 { pt3dadd( -19.0471, 130.524, 28.8453, 0.74 ) }
    dend_51 { pt3dadd( -19.7944, 131.627, 28.8309, 0.22 ) }
    dend_51 { pt3dadd( -20.7514, 132.96, 28.776, 0.66 ) }
    dend_51 { pt3dadd( -21.5454, 134.012, 28.7249, 0.07 ) }
    dend_51 { pt3dadd( -21.8519, 134.413, 28.7089, 0.07 ) }
    dend_51 { pt3dadd( -22.2278, 134.93, 28.6787, 0.15 ) }
    dend_51 { pt3dadd( -22.6407, 135.541, 28.6262, 0.81 ) }
    dend_51 { pt3dadd( -23.0558, 136.22, 28.5532, 1.25 ) }
    dend_51 { pt3dadd( -23.6929, 137.346, 28.4317, 0.37 ) }
    dend_51 { pt3dadd( -24.3649, 138.618, 28.2831, 0.22 ) }
    dend_51 { pt3dadd( -24.9849, 139.84, 28.1084, 0.37 ) }
    dend_51 { pt3dadd( -25.5942, 141.083, 27.9045, 0.88 ) }
    dend_51 { pt3dadd( -25.9106, 141.754, 27.7825, 0.37 ) }
    dend_51 { pt3dadd( -26.331, 142.671, 27.6125, 0.15 ) }
    dend_51 { pt3dadd( -26.7262, 143.548, 27.4466, 0.15 ) }
    dend_51 { pt3dadd( -27.0509, 144.276, 27.3432, 0.37 ) }
    dend_51 { pt3dadd( -27.4236, 145.107, 27.3136, 0.74 ) }
    dend_51 { pt3dadd( -27.7572, 145.848, 27.3382, 0.29 ) }
    dend_51 { pt3dadd( -28.3223, 147.109, 27.4569, 0.15 ) }
    dend_51 { pt3dadd( -28.5007, 147.519, 27.5264, 0.44 ) }
    dend_51 { pt3dadd( -28.9285, 148.509, 27.7555, 1.03 ) }
    dend_51 { pt3dadd( -29.3951, 149.609, 28.0457, 0.44 ) }
    dend_51 { pt3dadd( -29.8098, 150.571, 28.3292, 0.15 ) }
    dend_51 { pt3dadd( -30.2812, 151.656, 28.6614, 0.74 ) }
    dend_51 { pt3dadd( -30.8994, 153.179, 29.106, 0.15 ) }
    dend_51 { pt3dadd( -31.1472, 153.858, 29.3007, 0.22 ) }
    dend_51 { pt3dadd( -31.3627, 154.539, 29.4962, 0.81 ) }
    dend_51 { pt3dadd( -31.497, 155.086, 29.6511, 0.81 ) }
    dend_51 { pt3dadd( -31.696, 156.053, 29.9193, 0.22 ) }
    dend_51 { pt3dadd( -31.9409, 157.433, 30.2612, 0.15 ) }
    dend_51 { pt3dadd( -32.0946, 158.384, 30.4932, 0.22 ) }
    dend_51 { pt3dadd( -32.1975, 159.074, 30.6606, 0.37 ) }
    dend_51 { pt3dadd( -32.3832, 160.387, 30.9802, 0.96 ) }
    dend_51 { pt3dadd( -32.6109, 162.033, 31.3543, 0.15 ) }
    dend_51 { pt3dadd( -32.7183, 162.79, 31.4999, 0.15 ) }
    dend_51 { pt3dadd( -32.8222, 163.435, 31.5938, 0.15 ) }
    dend_51 { pt3dadd( -32.9598, 164.199, 31.6532, 0.66 ) }
    dend_51 { pt3dadd( -33.0455, 164.652, 31.661, 0.66 ) }
    dend_51 { pt3dadd( -33.2747, 165.811, 31.6027, 0.07 ) }
    dend_51 { pt3dadd( -33.458, 166.745, 31.5508, 0.07 ) }
    dend_51 { pt3dadd( -33.5421, 167.124, 31.5389, 0.44 ) }
    dend_51 { pt3dadd( -33.6578, 167.6, 31.5343, 0.74 ) }
    dend_51 { pt3dadd( -33.8031, 168.137, 31.5492, 0.96 ) }
    dend_51 { pt3dadd( -33.9699, 168.697, 31.5921, 0.96 ) }
    dend_51 { pt3dadd( -34.4068, 170.057, 31.7577, 0.15 ) }
    dend_51 { pt3dadd( -34.7312, 171.022, 31.907, 0.15 ) }
    dend_51 { pt3dadd( -35.1193, 172.138, 32.0732, 0.15 ) }
    dend_51 { pt3dadd( -35.3263, 172.722, 32.1459, 0.15 ) }
    dend_51 { pt3dadd( -35.5393, 173.295, 32.1951, 0.15 ) }
    dend_51 { pt3dadd( -35.7579, 173.831, 32.2094, 0.37 ) }
    dend_51 { pt3dadd( -36.0071, 174.341, 32.2053, 0.81 ) }
    dend_51 { pt3dadd( -36.361, 174.937, 32.1952, 1.03 ) }
    dend_51 { pt3dadd( -36.8902, 175.721, 32.2002, 0.37 ) }
    dend_51 { pt3dadd( -37.4989, 176.553, 32.2139, 0.15 ) }
    dend_51 { pt3dadd( -38.2856, 177.554, 32.2551, 0.29 ) }
    dend_51 { pt3dadd( -39.4375, 178.88, 32.348, 0.29 ) }
    dend_51 { pt3dadd( -40.3283, 179.819, 32.4412, 0.15 ) }
    dend_51 { pt3dadd( -40.9318, 180.42, 32.5174, 0.29 ) }
    dend_51 { pt3dadd( -41.6528, 181.098, 32.6244, 0.88 ) }
    dend_51 { pt3dadd( -42.5773, 181.926, 32.7741, 0.15 ) }
    dend_51 { pt3dadd( -43.4642, 182.695, 32.9271, 0.15 ) }
    dend_51 { pt3dadd( -44.216, 183.336, 33.0411, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_51 { pt3dadd( -45.0568, 184.054, 33.1738, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -10.0099, 54.3972, 22.8271, 0.22 ) }
    dend_50 { pt3dadd( -9.28552, 55.2598, 23.4553, 0.22 ) }
    dend_50 { pt3dadd( -8.79846, 55.8654, 23.8187, 0.15 ) }
    dend_50 { pt3dadd( -8.3366, 56.474, 24.1725, 0.22 ) }
    dend_50 { pt3dadd( -7.95794, 57.004, 24.4892, 0.15 ) }
    dend_50 { pt3dadd( -7.64412, 57.4568, 24.7652, 0.37 ) }
    dend_50 { pt3dadd( -7.48308, 57.7113, 24.9222, 0.37 ) }
    dend_50 { pt3dadd( -7.05834, 58.4733, 25.394, 0.15 ) }
    dend_50 { pt3dadd( -6.68641, 59.219, 25.8491, 0.15 ) }
    dend_50 { pt3dadd( -6.47291, 59.6831, 26.1395, 0.66 ) }
    dend_50 { pt3dadd( -6.1704, 60.354, 26.5685, 1.03 ) }
    dend_50 { pt3dadd( -5.75667, 61.266, 27.1809, 0.15 ) }
    dend_50 { pt3dadd( -5.5395, 61.7283, 27.4949, 0.15 ) }
    dend_50 { pt3dadd( -5.28169, 62.2571, 27.8516, 0.15 ) }
    dend_50 { pt3dadd( -4.99207, 62.8229, 28.1978, 0.59 ) }
    dend_50 { pt3dadd( -4.62231, 63.5371, 28.6045, 0.07 ) }
    dend_50 { pt3dadd( -4.37249, 64.0313, 28.8657, 0.07 ) }
    dend_50 { pt3dadd( -4.12525, 64.5174, 29.0926, 0.66 ) }
    dend_50 { pt3dadd( -4.03109, 64.7198, 29.174, 0.66 ) }
    dend_50 { pt3dadd( -3.82235, 65.2468, 29.3792, 0.15 ) }
    dend_50 { pt3dadd( -3.6445, 65.7903, 29.5753, 0.15 ) }
    dend_50 { pt3dadd( -3.55926, 66.0897, 29.6762, 0.52 ) }
    dend_50 { pt3dadd( -3.4066, 66.6329, 29.8435, 1.55 ) }
    dend_50 { pt3dadd( -3.28658, 67.0618, 29.9876, 1.77 ) }
    dend_50 { pt3dadd( -2.99855, 68.0771, 30.3479, 0.74 ) }
    dend_50 { pt3dadd( -2.76403, 68.8978, 30.6747, 0.15 ) }
    dend_50 { pt3dadd( -2.62236, 69.3917, 30.8863, 0.15 ) }
    dend_50 { pt3dadd( -2.49614, 69.872, 31.1123, 0.22 ) }
    dend_50 { pt3dadd( -2.38329, 70.4385, 31.4024, 0.22 ) }
    dend_50 { pt3dadd( -2.29826, 71.0058, 31.7165, 0.37 ) }
    dend_50 { pt3dadd( -2.22996, 71.6545, 32.0977, 0.52 ) }
    dend_50 { pt3dadd( -2.2014, 72.0576, 32.3493, 1.47 ) }
    dend_50 { pt3dadd( -2.17597, 72.602, 32.7318, 2.06 ) }
    dend_50 { pt3dadd( -2.12448, 73.6986, 33.5528, 0.29 ) }
    dend_50 { pt3dadd( -2.09629, 74.1632, 33.9064, 0.29 ) }
    dend_50 { pt3dadd( -2.04419, 74.9235, 34.5045, 0.74 ) }
    dend_50 { pt3dadd( -1.9784, 75.6033, 35.0225, 0.22 ) }
    dend_50 { pt3dadd( -1.83621, 76.5905, 35.7561, 0.29 ) }
    dend_50 { pt3dadd( -1.75894, 76.9898, 36.038, 0.52 ) }
    dend_50 { pt3dadd( -1.69269, 77.2733, 36.2217, 0.22 ) }
    dend_50 { pt3dadd( -1.53963, 77.9679, 36.5711, 0.22 ) }
    dend_50 { pt3dadd( -1.40523, 78.6398, 36.8432, 0.22 ) }
    dend_50 { pt3dadd( -1.24896, 79.4744, 37.118, 0.22 ) }
    dend_50 { pt3dadd( -1.18865, 79.8458, 37.2143, 0.44 ) }
    dend_50 { pt3dadd( -1.10004, 80.5204, 37.3773, 1.25 ) }
    dend_50 { pt3dadd( -0.927313, 82.0752, 37.7417, 0.07 ) }
    dend_50 { pt3dadd( -0.846312, 82.9419, 37.9298, 0.07 ) }
    dend_50 { pt3dadd( -0.820355, 83.323, 38.0092, 0.22 ) }
    dend_50 { pt3dadd( -0.790563, 83.8922, 38.1173, 0.96 ) }
    dend_50 { pt3dadd( -0.770819, 84.47, 38.2241, 0.29 ) }
    dend_50 { pt3dadd( -0.747742, 85.4247, 38.3909, 0.07 ) }
    dend_50 { pt3dadd( -0.738905, 85.9943, 38.4954, 0.07 ) }
    dend_50 { pt3dadd( -0.73313, 86.3203, 38.5376, 0.15 ) }
    dend_50 { pt3dadd( -0.719974, 86.907, 38.5912, 1.25 ) }
    dend_50 { pt3dadd( -0.651744, 88.9661, 38.7202, 0.15 ) }
    dend_50 { pt3dadd( -0.639457, 89.2889, 38.7332, 0.44 ) }
    dend_50 { pt3dadd( -0.612674, 89.9192, 38.743, 0.96 ) }
    dend_50 { pt3dadd( -0.56747, 90.9866, 38.7653, 1.18 ) }
    dend_50 { pt3dadd( -0.508133, 92.4, 38.8012, 0.07 ) }
    dend_50 { pt3dadd( -0.486538, 92.8837, 38.8138, 0.22 ) }
    dend_50 { pt3dadd( -0.443844, 93.6074, 38.8452, 0.88 ) }
    dend_50 { pt3dadd( -0.407443, 94.1902, 38.8842, 0.44 ) }
    dend_50 { pt3dadd( -0.353848, 94.9103, 38.9527, 0.15 ) }
    dend_50 { pt3dadd( -0.306757, 95.5425, 39.0376, 0.15 ) }
    dend_50 { pt3dadd( -0.277683, 95.9374, 39.088, 0.37 ) }
    dend_50 { pt3dadd( -0.214249, 96.9456, 39.1975, 1.55 ) }
    dend_50 { pt3dadd( -0.119236, 98.5736, 39.3525, 0.07 ) }
    dend_50 { pt3dadd( -0.0822294, 99.3061, 39.4118, 0.07 ) }
    dend_50 { pt3dadd( -0.0567846, 99.8364, 39.4424, 0.37 ) }
    dend_50 { pt3dadd( -0.041636, 100.238, 39.4688, 0.37 ) }
    dend_50 { pt3dadd( -0.0151866, 101.173, 39.5268, 0.07 ) }
    dend_50 { pt3dadd( -0.0131877, 101.41, 39.5395, 0.29 ) }
    dend_50 { pt3dadd( -0.0179801, 102.059, 39.5825, 1.18 ) }
    dend_50 { pt3dadd( -0.0163863, 103.541, 39.6754, 0.07 ) }
    dend_50 { pt3dadd( 0.0173375, 104.508, 39.7255, 0.07 ) }
    dend_50 { pt3dadd( 0.0402591, 104.832, 39.7389, 0.07 ) }
    dend_50 { pt3dadd( 0.0819323, 105.242, 39.7423, 0.37 ) }
    dend_50 { pt3dadd( 0.150461, 105.817, 39.7323, 0.96 ) }
    dend_50 { pt3dadd( 0.261639, 106.649, 39.685, 0.07 ) }
    dend_50 { pt3dadd( 0.372541, 107.402, 39.5853, 0.29 ) }
    dend_50 { pt3dadd( 0.554288, 108.582, 39.3306, 0.07 ) }
    dend_50 { pt3dadd( 0.742686, 109.751, 39.0242, 0.07 ) }
    dend_50 { pt3dadd( 0.770994, 109.911, 38.9715, 0.44 ) }
    dend_50 { pt3dadd( 0.942878, 110.696, 38.6202, 1.18 ) }
    dend_50 { pt3dadd( 1.20427, 111.617, 38.0601, 0.15 ) }
    dend_50 { pt3dadd( 1.38373, 112.112, 37.6588, 0.15 ) }
    dend_50 { pt3dadd( 1.50775, 112.376, 37.3675, 0.59 ) }
    dend_50 { pt3dadd( 1.66078, 112.633, 36.998, 0.59 ) }
    dend_50 { pt3dadd( 2.01027, 113.185, 36.1034, 0.22 ) }
    dend_50 { pt3dadd( 2.20581, 113.456, 35.6012, 0.22 ) }
    dend_50 { pt3dadd( 2.37871, 113.682, 35.1787, 0.22 ) }
    dend_50 { pt3dadd( 2.5087, 113.855, 34.8639, 0.22 ) }
    dend_50 { pt3dadd( 2.75377, 114.207, 34.2411, 0.37 ) }
    dend_50 { pt3dadd( 2.94243, 114.519, 33.7193, 1.03 ) }
    dend_50 { pt3dadd( 3.14771, 114.902, 33.1163, 0.74 ) }
    dend_50 { pt3dadd( 3.37341, 115.286, 32.5009, 0.22 ) }
    dend_50 { pt3dadd( 3.68611, 115.755, 31.7891, 0.22 ) }
    dend_50 { pt3dadd( 3.7777, 115.883, 31.6014, 0.22 ) }
    dend_50 { pt3dadd( 3.99036, 116.163, 31.1775, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_50 { pt3dadd( 4.15571, 116.374, 30.8393, 0.22 ) }
    dend_50 { pt3dadd( 4.39561, 116.702, 30.3161, 0.22 ) }
    dend_50 { pt3dadd( 4.60707, 117.005, 29.8175, 0.88 ) }
    dend_50 { pt3dadd( 4.97451, 117.529, 28.9305, 0.15 ) }
    dend_50 { pt3dadd( 5.28054, 117.962, 28.1714, 0.15 ) }
    dend_50 { pt3dadd( 5.55246, 118.366, 27.4949, 0.15 ) }
    dend_50 { pt3dadd( 5.84812, 118.844, 26.742, 0.74 ) }
    dend_50 { pt3dadd( 6.18944, 119.417, 25.8594, 0.44 ) }
    dend_50 { pt3dadd( 6.45671, 119.862, 25.1822, 0.44 ) }
    dend_50 { pt3dadd( 6.68495, 120.226, 24.6618, 0.44 ) }
    dend_50 { pt3dadd( 6.91794, 120.62, 24.1382, 0.74 ) }
    dend_50 { pt3dadd( 7.18853, 121.157, 23.4644, 0.22 ) }
    dend_50 { pt3dadd( 7.30571, 121.465, 23.0937, 0.22 ) }
    dend_50 { pt3dadd( 7.37462, 121.741, 22.7712, 0.44 ) }
    dend_50 { pt3dadd( 7.42806, 122.104, 22.3569, 0.44 ) }
    dend_50 { pt3dadd( 7.46847, 122.588, 21.8081, 0.22 ) }
    dend_50 { pt3dadd( 7.48735, 123.142, 21.2395, 0.29 ) }
    dend_50 { pt3dadd( 7.48518, 123.739, 20.7408, 0.22 ) }
    dend_50 { pt3dadd( 7.48044, 124.298, 20.3673, 0.22 ) }
    dend_50 { pt3dadd( 7.4852, 124.645, 20.1845, 0.66 ) }
    dend_50 { pt3dadd( 7.52796, 125.439, 19.8925, 0.96 ) }
    dend_50 { pt3dadd( 7.65306, 126.735, 19.5919, 0.22 ) }
    dend_50 { pt3dadd( 7.73677, 127.496, 19.5005, 0.37 ) }
    dend_50 { pt3dadd( 7.78385, 128.035, 19.4966, 0.07 ) }
    dend_50 { pt3dadd( 7.81712, 128.605, 19.56, 0.07 ) }
    dend_50 { pt3dadd( 7.842, 129.182, 19.6727, 0.07 ) }
    dend_50 { pt3dadd( 7.8508, 129.595, 19.7892, 0.29 ) }
    dend_50 { pt3dadd( 7.8506, 130.038, 19.9412, 0.66 ) }
    dend_50 { pt3dadd( 7.84234, 130.651, 20.1697, 0.88 ) }
    dend_50 { pt3dadd( 7.82198, 131.699, 20.5781, 0.15 ) }
    dend_50 { pt3dadd( 7.81805, 132.236, 20.7834, 0.15 ) }
    dend_50 { pt3dadd( 7.83831, 132.61, 20.935, 0.22 ) }
    dend_50 { pt3dadd( 7.89463, 132.95, 21.0797, 0.22 ) }
    dend_50 { pt3dadd( 8.06275, 133.529, 21.3402, 0.22 ) }
    dend_50 { pt3dadd( 8.25619, 134.033, 21.5747, 0.22 ) }
    dend_50 { pt3dadd( 8.46416, 134.489, 21.7885, 0.81 ) }
    dend_50 { pt3dadd( 8.98077, 135.568, 22.2996, 0.22 ) }
    dend_50 { pt3dadd( 9.42194, 136.41, 22.7163, 0.22 ) }
    dend_50 { pt3dadd( 9.86765, 137.199, 23.127, 0.22 ) }
    dend_50 { pt3dadd( 10.0423, 137.488, 23.2849, 0.37 ) }
    dend_50 { pt3dadd( 10.3169, 137.916, 23.5397, 0.96 ) }
    dend_50 { pt3dadd( 10.9915, 138.947, 24.2227, 0.15 ) }
    dend_50 { pt3dadd( 11.3735, 139.528, 24.6495, 0.15 ) }
    dend_50 { pt3dadd( 11.5436, 139.805, 24.87, 0.15 ) }
    dend_50 { pt3dadd( 11.7249, 140.115, 25.1293, 0.15 ) }
    dend_50 { pt3dadd( 12.018, 140.6, 25.5682, 0.15 ) }
    dend_50 { pt3dadd( 12.1817, 140.857, 25.8355, 0.29 ) }
    dend_50 { pt3dadd( 12.4287, 141.223, 26.2762, 0.66 ) }
    dend_50 { pt3dadd( 12.5396, 141.385, 26.4782, 0.66 ) }
    dend_50 { pt3dadd( 12.9433, 141.966, 27.191, 0.15 ) }
    dend_50 { pt3dadd( 13.1689, 142.29, 27.5639, 0.22 ) }
    dend_50 { pt3dadd( 13.6213, 142.936, 28.3026, 0.15 ) }
    dend_50 { pt3dadd( 13.9051, 143.318, 28.731, 0.15 ) }
    dend_50 { pt3dadd( 14.2931, 143.819, 29.2978, 0.15 ) }
    dend_50 { pt3dadd( 14.5194, 144.104, 29.6099, 0.29 ) }
    dend_50 { pt3dadd( 14.9433, 144.631, 30.1645, 0.15 ) }
    dend_50 { pt3dadd( 15.1898, 144.946, 30.4662, 0.15 ) }
    dend_50 { pt3dadd( 15.4496, 145.281, 30.7407, 0.37 ) }
    dend_50 { pt3dadd( 15.8804, 145.853, 31.1606, 0.15 ) }
    dend_50 { pt3dadd( 16.1501, 146.237, 31.4458, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -157.567, -381.936, -3.26926, 0.07 ) }
    dend_42 { pt3dadd( -157.184, -381.545, -3.20497, 0.07 ) }
    dend_42 { pt3dadd( -156.608, -380.914, -3.18912, 0.29 ) }
    dend_42 { pt3dadd( -156.141, -380.397, -3.22794, 0.07 ) }
    dend_42 { pt3dadd( -155.654, -379.874, -3.35037, 0.07 ) }
    dend_42 { pt3dadd( -155.094, -379.292, -3.57728, 0.15 ) }
    dend_42 { pt3dadd( -154.689, -378.874, -3.77358, 0.15 ) }
    dend_42 { pt3dadd( -154.412, -378.599, -3.95457, 0.15 ) }
    dend_42 { pt3dadd( -154.041, -378.219, -4.29496, 0.29 ) }
    dend_42 { pt3dadd( -153.604, -377.776, -4.7857, 0.07 ) }
    dend_42 { pt3dadd( -153.311, -377.48, -5.15998, 0.29 ) }
    dend_42 { pt3dadd( -153.042, -377.25, -5.48063, 0.44 ) }
    dend_42 { pt3dadd( -152.916, -377.164, -5.61815, 0.44 ) }
    dend_42 { pt3dadd( -152.399, -376.864, -6.18813, 0.15 ) }
    dend_42 { pt3dadd( -152.02, -376.645, -6.62545, 0.15 ) }
    dend_42 { pt3dadd( -151.872, -376.56, -6.79048, 0.15 ) }
    dend_42 { pt3dadd( -151.302, -376.249, -7.44265, 0.15 ) }
    dend_42 { pt3dadd( -151.051, -376.124, -7.75202, 0.37 ) }
    dend_42 { pt3dadd( -150.42, -375.813, -8.60329, 0.22 ) }
    dend_42 { pt3dadd( -150.111, -375.66, -9.03593, 0.22 ) }
    dend_42 { pt3dadd( -149.94, -375.564, -9.28527, 0.22 ) }
    dend_42 { pt3dadd( -149.576, -375.319, -9.83391, 0.15 ) }
    dend_42 { pt3dadd( -149.17, -375.019, -10.4304, 0.15 ) }
    dend_42 { pt3dadd( -148.795, -374.765, -10.9193, 0.15 ) }
    dend_42 { pt3dadd( -148.532, -374.61, -11.1955, 0.37 ) }
    dend_42 { pt3dadd( -148.075, -374.371, -11.5413, 0.44 ) }
    dend_42 { pt3dadd( -147.604, -374.114, -11.8177, 0.22 ) }
    dend_42 { pt3dadd( -147.093, -373.833, -12.0441, 0.37 ) }
    dend_42 { pt3dadd( -146.772, -373.657, -12.1432, 0.37 ) }
    dend_42 { pt3dadd( -146.071, -373.294, -12.2941, 0.22 ) }
    dend_42 { pt3dadd( -145.115, -372.823, -12.4648, 0.22 ) }
    dend_42 { pt3dadd( -144.159, -372.43, -12.5695, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -157.567, -381.936, -3.26926, 0.15 ) }
    dend_41 { pt3dadd( -157.792, -382.516, -3.33886, 0.15 ) }
    dend_41 { pt3dadd( -158.006, -383.182, -3.35902, 0.29 ) }
    dend_41 { pt3dadd( -158.214, -383.855, -3.34369, 0.15 ) }
    dend_41 { pt3dadd( -158.445, -384.486, -3.31423, 0.15 ) }
    dend_41 { pt3dadd( -158.649, -385.002, -3.28564, 0.15 ) }
    dend_41 { pt3dadd( -158.769, -385.297, -3.26905, 0.15 ) }
    dend_41 { pt3dadd( -159.036, -385.924, -3.20907, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -159.315, -386.616, -3.1407, 0.81 ) }
    dend_41 { pt3dadd( -159.601, -387.508, -3.06015, 0.15 ) }
    dend_41 { pt3dadd( -159.771, -388.213, -3.0039, 0.22 ) }
    dend_41 { pt3dadd( -159.885, -388.933, -2.95254, 0.07 ) }
    dend_41 { pt3dadd( -159.915, -389.693, -2.88034, 0.07 ) }
    dend_41 { pt3dadd( -159.855, -390.431, -2.7727, 0.37 ) }
    dend_41 { pt3dadd( -159.608, -391.5, -2.54158, 0.15 ) }
    dend_41 { pt3dadd( -159.392, -392.113, -2.36605, 0.15 ) }
    dend_41 { pt3dadd( -159.209, -392.547, -2.21805, 0.37 ) }
    dend_41 { pt3dadd( -158.736, -393.607, -1.80128, 0.15 ) }
    dend_41 { pt3dadd( -158.466, -394.25, -1.53199, 0.15 ) }
    dend_41 { pt3dadd( -158.301, -394.746, -1.31962, 0.15 ) }
    dend_41 { pt3dadd( -158.254, -395.003, -1.21712, 0.15 ) }
    dend_41 { pt3dadd( -158.213, -395.656, -0.993451, 0.37 ) }
    dend_41 { pt3dadd( -158.246, -396.447, -0.785249, 0.07 ) }
    dend_41 { pt3dadd( -158.352, -397.068, -0.683939, 0.07 ) }
    dend_41 { pt3dadd( -158.492, -397.608, -0.626187, 0.22 ) }
    dend_41 { pt3dadd( -158.755, -398.475, -0.541478, 0.07 ) }
    dend_41 { pt3dadd( -158.868, -398.819, -0.514103, 0.07 ) }
    dend_41 { pt3dadd( -159.116, -399.468, -0.470003, 0.52 ) }
    dend_41 { pt3dadd( -159.595, -400.564, -0.430377, 0.07 ) }
    dend_41 { pt3dadd( -159.809, -400.997, -0.416, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.64405, -30.9799, -26.4111, 0.44 ) }
    dend_20 { pt3dadd( 2.65854, -31.1517, -26.6677, 0.44 ) }
    dend_20 { pt3dadd( 2.6852, -31.7509, -27.6876, 0.44 ) }
    dend_20 { pt3dadd( 2.69617, -32.0489, -28.2798, 0.44 ) }
    dend_20 { pt3dadd( 2.72946, -32.4158, -29.0952, 0.44 ) }
    dend_20 { pt3dadd( 2.74828, -32.5724, -29.471, 0.44 ) }
    dend_20 { pt3dadd( 2.761, -32.7284, -29.8487, 0.44 ) }
    dend_20 { pt3dadd( 2.75624, -32.8591, -30.1711, 0.44 ) }
    dend_20 { pt3dadd( 2.73951, -32.9969, -30.5276, 0.44 ) }
    dend_20 { pt3dadd( 2.71105, -33.1912, -31.0368, 0.44 ) }
    dend_20 { pt3dadd( 2.68587, -33.4612, -31.7287, 0.44 ) }
    dend_20 { pt3dadd( 2.69023, -33.6976, -32.2859, 0.44 ) }
    dend_20 { pt3dadd( 2.71948, -34.0385, -33.0346, 0.44 ) }
    dend_20 { pt3dadd( 2.77935, -34.4644, -33.9248, 0.44 ) }
    dend_20 { pt3dadd( 2.81283, -34.6041, -34.2135, 0.29 ) }
    dend_20 { pt3dadd( 2.93035, -34.9505, -34.9695, 0.22 ) }
    dend_20 { pt3dadd( 3.04141, -35.179, -35.4941, 0.22 ) }
    dend_20 { pt3dadd( 3.13929, -35.3358, -35.8783, 0.22 ) }
    dend_20 { pt3dadd( 3.1983, -35.4212, -36.0857, 0.22 ) }
    dend_20 { pt3dadd( 3.30188, -35.5908, -36.437, 0.29 ) }
    dend_20 { pt3dadd( 3.47339, -35.8783, -36.9943, 0.29 ) }
    dend_20 { pt3dadd( 3.58369, -36.0628, -37.332, 0.29 ) }
    dend_20 { pt3dadd( 3.71077, -36.2333, -37.7062, 0.29 ) }
    dend_20 { pt3dadd( 3.79067, -36.2993, -37.8984, 0.29 ) }
    dend_20 { pt3dadd( 3.9405, -36.3855, -38.1825, 0.29 ) }
    dend_20 { pt3dadd( 4.201, -36.5278, -38.5981, 0.29 ) }
    dend_20 { pt3dadd( 4.56363, -36.7234, -39.0586, 0.22 ) }
    dend_20 { pt3dadd( 5.07963, -37.0236, -39.6492, 0.37 ) }
    dend_20 { pt3dadd( 5.36427, -37.2114, -39.9742, 0.37 ) }
    dend_20 { pt3dadd( 5.57893, -37.3843, -40.2631, 0.22 ) }
    dend_20 { pt3dadd( 5.86556, -37.683, -40.74, 0.22 ) }
    dend_20 { pt3dadd( 6.00699, -37.8966, -41.0437, 0.22 ) }
    dend_20 { pt3dadd( 6.11645, -38.1431, -41.3474, 0.29 ) }
    dend_20 { pt3dadd( 6.21565, -38.4992, -41.7467, 0.29 ) }
    dend_20 { pt3dadd( 6.24853, -38.9123, -42.2234, 0.29 ) }
    dend_20 { pt3dadd( 6.21026, -39.1555, -42.5289, 0.29 ) }
    dend_20 { pt3dadd( 6.14177, -39.3509, -42.7984, 0.29 ) }
    dend_20 { pt3dadd( 6.0649, -39.5058, -43.024, 0.22 ) }
    dend_20 { pt3dadd( 5.89502, -39.7805, -43.4355, 0.22 ) }
    dend_20 { pt3dadd( 5.63203, -40.1786, -43.987, 0.22 ) }
    dend_20 { pt3dadd( 5.53907, -40.3625, -44.2313, 0.22 ) }
    dend_20 { pt3dadd( 5.48517, -40.6253, -44.5624, 0.22 ) }
    dend_20 { pt3dadd( 5.49627, -40.8967, -44.8953, 0.29 ) }
    dend_20 { pt3dadd( 5.52447, -41.0669, -45.0938, 0.29 ) }
    dend_20 { pt3dadd( 5.55438, -41.2186, -45.2508, 0.29 ) }
    dend_20 { pt3dadd( 5.59658, -41.6321, -45.6198, 0.29 ) }
    dend_20 { pt3dadd( 5.58567, -42.1281, -46.0262, 0.22 ) }
    dend_20 { pt3dadd( 5.53552, -42.5556, -46.3579, 0.22 ) }
    dend_20 { pt3dadd( 5.46882, -42.9677, -46.6881, 0.22 ) }
    dend_20 { pt3dadd( 5.42313, -43.3163, -47.0024, 0.22 ) }
    dend_20 { pt3dadd( 5.3314, -43.8617, -47.515, 0.22 ) }
    dend_20 { pt3dadd( 5.28425, -44.0597, -47.7048, 0.22 ) }
    dend_20 { pt3dadd( 5.21575, -44.2803, -47.9508, 0.22 ) }
    dend_20 { pt3dadd( 5.14709, -44.6084, -48.4019, 0.44 ) }
    dend_20 { pt3dadd( 5.25659, -44.8832, -49.0457, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.64405, -30.9799, -26.4111, 0.52 ) }
    dend_15 { pt3dadd( 3.53042, -31.9896, -27.0041, 0.52 ) }
    dend_15 { pt3dadd( 4.1419, -32.8711, -27.5167, 0.52 ) }
    dend_15 { pt3dadd( 4.57188, -33.6569, -27.965, 0.59 ) }
    dend_15 { pt3dadd( 4.79862, -34.1749, -28.2381, 0.96 ) }
    dend_15 { pt3dadd( 4.95006, -34.6356, -28.4536, 0.96 ) }
    dend_15 { pt3dadd( 5.24937, -35.934, -28.9657, 0.81 ) }
    dend_15 { pt3dadd( 5.32905, -36.9914, -29.2869, 0.52 ) }
    dend_15 { pt3dadd( 5.33052, -38.0501, -29.533, 0.52 ) }
    dend_15 { pt3dadd( 5.30153, -38.9265, -29.7301, 0.74 ) }
    dend_15 { pt3dadd( 5.26704, -40.0447, -30.0017, 0.74 ) }
    dend_15 { pt3dadd( 5.24643, -41.2582, -30.3636, 0.66 ) }
    dend_15 { pt3dadd( 5.26152, -42.0116, -30.6313, 0.52 ) }
    dend_15 { pt3dadd( 5.36087, -42.8624, -30.9965, 0.37 ) }
    dend_15 { pt3dadd( 5.52562, -43.6984, -31.4665, 0.66 ) }
    dend_15 { pt3dadd( 5.70472, -44.4442, -31.9615, 0.88 ) }
    dend_15 { pt3dadd( 5.87985, -45.187, -32.5079, 0.88 ) }
    dend_15 { pt3dadd( 5.9686, -45.7316, -32.9261, 0.66 ) }
    dend_15 { pt3dadd( 6.01304, -46.5019, -33.4857, 0.52 ) }
    dend_15 { pt3dadd( 5.99835, -47.3138, -34.0052, 0.52 ) }
    dend_15 { pt3dadd( 5.96723, -48.1509, -34.4607, 0.59 ) }
    dend_15 { pt3dadd( 5.9193, -48.9481, -34.8636, 0.59 ) }
    dend_15 { pt3dadd( 5.83963, -49.8826, -35.341, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( 5.75671, -50.6015, -35.7387, 0.59 ) }
    dend_15 { pt3dadd( 5.67236, -51.1762, -36.0567, 0.66 ) }
    dend_15 { pt3dadd( 5.53259, -52.0353, -36.4957, 0.59 ) }
    dend_15 { pt3dadd( 5.3904, -52.9201, -36.9188, 0.52 ) }
    dend_15 { pt3dadd( 5.2424, -53.9271, -37.3349, 0.81 ) }
    dend_15 { pt3dadd( 5.09473, -54.9717, -37.6743, 1.03 ) }
    dend_15 { pt3dadd( 4.92426, -56.0732, -37.917, 0.59 ) }
    dend_15 { pt3dadd( 4.742, -57.1983, -38.034, 0.44 ) }
    dend_15 { pt3dadd( 4.64953, -57.8498, -38.0174, 0.59 ) }
    dend_15 { pt3dadd( 4.55963, -58.6794, -37.9206, 0.59 ) }
    dend_15 { pt3dadd( 4.51248, -59.4467, -37.7574, 0.52 ) }
    dend_15 { pt3dadd( 4.51066, -60.4151, -37.4664, 0.52 ) }
    dend_15 { pt3dadd( 4.56712, -61.1724, -37.1933, 0.66 ) }
    dend_15 { pt3dadd( 4.63278, -61.6519, -36.9848, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.92726, -37.9124, -17.7086, 0.59 ) }
    dend_11 { pt3dadd( -10.4494, -38.2259, -17.2742, 0.59 ) }
    dend_11 { pt3dadd( -11.6683, -39.0762, -16.2061, 0.52 ) }
    dend_11 { pt3dadd( -12.2913, -39.5753, -15.6746, 0.52 ) }
    dend_11 { pt3dadd( -12.8207, -40.0558, -15.2405, 0.52 ) }
    dend_11 { pt3dadd( -13.379, -40.6235, -14.7809, 0.52 ) }
    dend_11 { pt3dadd( -14.0725, -41.3819, -14.242, 0.66 ) }
    dend_11 { pt3dadd( -14.5859, -42.07, -13.8595, 0.81 ) }
    dend_11 { pt3dadd( -15.2113, -43.1143, -13.4469, 0.52 ) }
    dend_11 { pt3dadd( -15.5663, -43.8341, -13.218, 0.52 ) }
    dend_11 { pt3dadd( -15.9209, -44.7485, -12.9866, 0.74 ) }
    dend_11 { pt3dadd( -16.1873, -45.69, -12.8098, 0.44 ) }
    dend_11 { pt3dadd( -16.3962, -46.7788, -12.6945, 0.59 ) }
    dend_11 { pt3dadd( -16.5281, -47.6934, -12.6242, 0.81 ) }
    dend_11 { pt3dadd( -16.6497, -48.6089, -12.5424, 0.66 ) }
    dend_11 { pt3dadd( -16.8309, -49.8288, -12.4283, 0.59 ) }
    dend_11 { pt3dadd( -17.0387, -50.9979, -12.3367, 0.52 ) }
    dend_11 { pt3dadd( -17.4114, -52.6334, -12.2247, 0.44 ) }
    dend_11 { pt3dadd( -17.8063, -53.8792, -12.1542, 0.52 ) }
    dend_11 { pt3dadd( -18.2516, -54.9492, -12.1107, 0.44 ) }
    dend_11 { pt3dadd( -18.6038, -55.6605, -12.0954, 0.44 ) }
    dend_11 { pt3dadd( -19.0426, -56.4842, -12.0846, 0.37 ) }
    dend_11 { pt3dadd( -19.5453, -57.4817, -12.0387, 0.22 ) }
    dend_11 { pt3dadd( -19.8793, -58.2729, -11.9723, 0.59 ) }
    dend_11 { pt3dadd( -20.1005, -58.9951, -11.8964, 0.88 ) }
    dend_11 { pt3dadd( -20.3579, -60.1962, -11.7394, 0.59 ) }
    dend_11 { pt3dadd( -20.5337, -61.2288, -11.5629, 0.44 ) }
    dend_11 { pt3dadd( -20.7107, -62.3208, -11.3282, 0.59 ) }
    dend_11 { pt3dadd( -20.8435, -63.1018, -11.1172, 0.52 ) }
    dend_11 { pt3dadd( -21.0032, -64.0236, -10.8353, 0.29 ) }
    dend_11 { pt3dadd( -21.1751, -64.9525, -10.4939, 0.29 ) }
    dend_11 { pt3dadd( -21.4738, -66.268, -9.90113, 0.37 ) }
    dend_11 { pt3dadd( -21.8167, -67.4214, -9.27462, 0.29 ) }
    dend_11 { pt3dadd( -22.1092, -68.1979, -8.77874, 0.29 ) }
    dend_11 { pt3dadd( -22.3125, -68.6758, -8.42704, 0.52 ) }
    dend_11 { pt3dadd( -22.575, -69.2572, -7.95281, 0.37 ) }
    dend_11 { pt3dadd( -22.9502, -70.0848, -7.26011, 0.29 ) }
    dend_11 { pt3dadd( -23.4274, -71.0451, -6.49069, 0.37 ) }
    dend_11 { pt3dadd( -23.8988, -71.8993, -5.88067, 0.66 ) }
    dend_11 { pt3dadd( -24.3614, -72.6787, -5.38833, 1.03 ) }
    dend_11 { pt3dadd( -25.1101, -73.8927, -4.6675, 0.81 ) }
    dend_11 { pt3dadd( -25.7034, -74.8573, -4.13008, 1.25 ) }
    dend_11 { pt3dadd( -26.376, -76.0411, -3.52608, 0.96 ) }
    dend_11 { pt3dadd( -26.9978, -77.2256, -2.97938, 0.37 ) }
    dend_11 { pt3dadd( -27.5915, -78.4234, -2.50506, 0.44 ) }
    dend_11 { pt3dadd( -28.0774, -79.4159, -2.17506, 0.44 ) }
    dend_11 { pt3dadd( -28.4571, -80.2063, -1.97569, 0.59 ) }
    dend_11 { pt3dadd( -29.0313, -81.4218, -1.77522, 0.96 ) }
    dend_11 { pt3dadd( -29.4161, -82.2464, -1.76006, 0.37 ) }
    dend_11 { pt3dadd( -29.9032, -83.218, -1.91424, 0.22 ) }
    dend_11 { pt3dadd( -30.2655, -83.8913, -2.10981, 0.22 ) }
    dend_11 { pt3dadd( -30.5759, -84.4632, -2.31169, 0.66 ) }
    dend_11 { pt3dadd( -30.9999, -85.2958, -2.60545, 0.74 ) }
    dend_11 { pt3dadd( -31.4836, -86.3467, -2.9341, 0.37 ) }
    dend_11 { pt3dadd( -31.8903, -87.4593, -3.17542, 0.44 ) }
    dend_11 { pt3dadd( -32.1358, -88.4007, -3.26812, 0.37 ) }
    dend_11 { pt3dadd( -32.2864, -89.3137, -3.27885, 0.22 ) }
    dend_11 { pt3dadd( -32.3392, -90.1457, -3.22586, 0.22 ) }
    dend_11 { pt3dadd( -32.3247, -90.6862, -3.1553, 0.59 ) }
    dend_11 { pt3dadd( -32.268, -91.4229, -3.02296, 0.88 ) }
    dend_11 { pt3dadd( -32.2142, -92.4216, -2.83157, 0.29 ) }
    dend_11 { pt3dadd( -32.2209, -92.9323, -2.7414, 0.22 ) }
    dend_11 { pt3dadd( -32.3312, -93.8408, -2.59204, 0.52 ) }
    dend_11 { pt3dadd( -32.5837, -94.9741, -2.42207, 0.22 ) }
    dend_11 { pt3dadd( -32.7409, -95.5219, -2.34603, 0.22 ) }
    dend_11 { pt3dadd( -33.0509, -96.5389, -2.2089, 0.29 ) }
    dend_11 { pt3dadd( -33.2077, -97.1056, -2.11393, 0.29 ) }
    dend_11 { pt3dadd( -33.4319, -97.9792, -1.92154, 0.22 ) }
    dend_11 { pt3dadd( -33.5281, -98.3862, -1.81382, 0.74 ) }
    dend_11 { pt3dadd( -33.6531, -99.0049, -1.63561, 0.96 ) }
    dend_11 { pt3dadd( -33.8509, -99.9977, -1.32922, 0.59 ) }
    dend_11 { pt3dadd( -34.094, -101.179, -0.920569, 0.15 ) }
    dend_11 { pt3dadd( -34.2899, -101.926, -0.622482, 0.15 ) }
    dend_11 { pt3dadd( -34.4284, -102.342, -0.44948, 0.59 ) }
    dend_11 { pt3dadd( -34.8702, -103.384, -0.00183892, 0.96 ) }
    dend_11 { pt3dadd( -35.4848, -104.537, 0.499526, 0.22 ) }
    dend_11 { pt3dadd( -35.9129, -105.172, 0.772389, 0.15 ) }
    dend_11 { pt3dadd( -36.666, -106.113, 1.15427, 0.15 ) }
    dend_11 { pt3dadd( -36.9843, -106.481, 1.31257, 0.66 ) }
    dend_11 { pt3dadd( -37.2605, -106.776, 1.46064, 0.96 ) }
    dend_11 { pt3dadd( -37.5944, -107.115, 1.64415, 1.11 ) }
    dend_11 { pt3dadd( -38.294, -107.814, 1.98247, 0.52 ) }
    dend_11 { pt3dadd( -39.0212, -108.549, 2.31414, 0.15 ) }
    dend_11 { pt3dadd( -39.7144, -109.286, 2.66432, 0.15 ) }
    dend_11 { pt3dadd( -40.0929, -109.704, 2.89088, 0.15 ) }
    dend_11 { pt3dadd( -40.4313, -110.1, 3.11721, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -41.0783, -110.892, 3.58403, 0.96 ) }
    dend_11 { pt3dadd( -41.9593, -112.03, 4.2429, 0.22 ) }
    dend_11 { pt3dadd( -42.5872, -112.875, 4.75755, 0.22 ) }
    dend_11 { pt3dadd( -43.0456, -113.501, 5.17652, 0.22 ) }
    dend_11 { pt3dadd( -43.3825, -113.977, 5.52934, 0.59 ) }
    dend_11 { pt3dadd( -43.8553, -114.662, 6.13451, 1.11 ) }
    dend_11 { pt3dadd( -44.204, -115.2, 6.71872, 0.44 ) }
    dend_11 { pt3dadd( -44.6502, -115.909, 7.66551, 0.22 ) }
    dend_11 { pt3dadd( -44.9276, -116.363, 8.36162, 0.22 ) }
    dend_11 { pt3dadd( -44.997, -116.492, 8.57512, 0.22 ) }
    dend_11 { pt3dadd( -45.1299, -116.734, 9.0079, 0.22 ) }
    dend_11 { pt3dadd( -45.3684, -117.118, 9.69794, 0.22 ) }
    dend_11 { pt3dadd( -45.6168, -117.428, 10.249, 0.22 ) }
    dend_11 { pt3dadd( -45.8526, -117.635, 10.6284, 0.44 ) }
    dend_11 { pt3dadd( -46.3362, -117.988, 11.2757, 0.81 ) }
    dend_11 { pt3dadd( -47.0492, -118.478, 12.1556, 0.81 ) }
    dend_11 { pt3dadd( -47.7176, -118.937, 12.9397, 0.66 ) }
    dend_11 { pt3dadd( -48.2809, -119.337, 13.5914, 0.66 ) }
    dend_11 { pt3dadd( -49.4512, -120.172, 14.9136, 0.22 ) }
    dend_11 { pt3dadd( -50.1668, -120.67, 15.7038, 0.22 ) }
    dend_11 { pt3dadd( -50.5678, -120.948, 16.1353, 0.66 ) }
    dend_11 { pt3dadd( -51.0072, -121.276, 16.5796, 0.74 ) }
    dend_11 { pt3dadd( -51.953, -122.097, 17.4724, 0.22 ) }
    dend_11 { pt3dadd( -52.6949, -122.84, 18.1275, 0.15 ) }
    dend_11 { pt3dadd( -53.3973, -123.629, 18.6952, 0.15 ) }
    dend_11 { pt3dadd( -54.1306, -124.488, 19.261, 0.15 ) }
    dend_11 { pt3dadd( -54.7573, -125.247, 19.705, 1.18 ) }
    dend_11 { pt3dadd( -55.5022, -126.173, 20.183, 0.07 ) }
    dend_11 { pt3dadd( -56.1599, -127.087, 20.5224, 0.07 ) }
    dend_11 { pt3dadd( -56.5609, -127.72, 20.6766, 0.07 ) }
    dend_11 { pt3dadd( -56.7981, -128.082, 20.7433, 0.07 ) }
    dend_11 { pt3dadd( -57.3121, -128.753, 20.884, 0.96 ) }
    dend_11 { pt3dadd( -58.3732, -129.936, 21.1949, 0.07 ) }
    dend_11 { pt3dadd( -59.2355, -130.823, 21.4267, 0.07 ) }
    dend_11 { pt3dadd( -59.8071, -131.385, 21.5752, 0.66 ) }
    dend_11 { pt3dadd( -61.6653, -133.151, 22.0524, 0.07 ) }
    dend_11 { pt3dadd( -62.6417, -134.067, 22.3314, 0.07 ) }
    dend_11 { pt3dadd( -63.5869, -134.945, 22.632, 0.07 ) }
    dend_11 { pt3dadd( -64.4318, -135.689, 22.9513, 0.07 ) }
    dend_11 { pt3dadd( -65.3582, -136.433, 23.3849, 0.07 ) }
    dend_11 { pt3dadd( -65.9865, -136.911, 23.7021, 0.07 ) }
    dend_11 { pt3dadd( -66.9384, -137.573, 24.2076, 0.07 ) }
    dend_11 { pt3dadd( -68.1183, -138.313, 24.8343, 0.15 ) }
    dend_11 { pt3dadd( -70.1596, -139.467, 25.9671, 0.07 ) }
    dend_11 { pt3dadd( -71.7129, -140.251, 26.8485, 0.07 ) }
    dend_11 { pt3dadd( -72.5323, -140.632, 27.3178, 0.07 ) }
    dend_11 { pt3dadd( -73.6526, -141.097, 27.9797, 0.07 ) }
    dend_11 { pt3dadd( -74.2353, -141.299, 28.3143, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.92726, -37.9124, -17.7086, 0.66 ) }
    dend_4 { pt3dadd( -9.9735, -38.806, -18.0485, 0.66 ) }
    dend_4 { pt3dadd( -10.0634, -39.7634, -18.3455, 0.66 ) }
    dend_4 { pt3dadd( -10.1264, -40.4406, -18.512, 0.66 ) }
    dend_4 { pt3dadd( -10.1671, -40.9395, -18.6148, 0.66 ) }
    dend_4 { pt3dadd( -10.2312, -41.9359, -18.7889, 0.59 ) }
    dend_4 { pt3dadd( -10.264, -42.8413, -18.8993, 0.66 ) }
    dend_4 { pt3dadd( -10.2695, -43.5802, -18.9134, 0.88 ) }
    dend_4 { pt3dadd( -10.2232, -44.4653, -18.8087, 0.59 ) }
    dend_4 { pt3dadd( -10.097, -45.429, -18.5396, 0.59 ) }
    dend_4 { pt3dadd( -9.96838, -45.9993, -18.2852, 0.59 ) }
    dend_4 { pt3dadd( -9.71758, -46.7881, -17.7935, 0.81 ) }
    dend_4 { pt3dadd( -9.48533, -47.4775, -17.284, 0.81 ) }
    dend_4 { pt3dadd( -9.25216, -48.2055, -16.7094, 0.88 ) }
    dend_4 { pt3dadd( -9.01304, -49.1156, -15.975, 0.88 ) }
    dend_4 { pt3dadd( -8.86249, -49.9683, -15.3275, 0.74 ) }
    dend_4 { pt3dadd( -8.80777, -50.9231, -14.7301, 0.74 ) }
    dend_4 { pt3dadd( -8.87613, -51.9983, -14.2599, 0.74 ) }
    dend_4 { pt3dadd( -8.9764, -52.6128, -14.0755, 0.81 ) }
    dend_4 { pt3dadd( -9.14774, -53.3918, -13.9252, 0.81 ) }
    dend_4 { pt3dadd( -9.39513, -54.4452, -13.8189, 0.74 ) }
    dend_4 { pt3dadd( -9.62324, -55.5459, -13.8142, 0.74 ) }
    dend_4 { pt3dadd( -9.76417, -56.5338, -13.8728, 0.74 ) }
    dend_4 { pt3dadd( -9.807, -57.3216, -13.9387, 0.81 ) }
    dend_4 { pt3dadd( -9.78812, -58.0306, -13.9864, 0.81 ) }
    dend_4 { pt3dadd( -9.66124, -59.1795, -14.0347, 0.59 ) }
    dend_4 { pt3dadd( -9.40607, -60.5522, -14.031, 0.81 ) }
    dend_4 { pt3dadd( -9.17204, -61.4831, -13.9876, 0.66 ) }
    dend_4 { pt3dadd( -8.85569, -62.6029, -13.8979, 0.59 ) }
    dend_4 { pt3dadd( -8.61819, -63.4269, -13.8344, 0.59 ) }
    dend_4 { pt3dadd( -8.4466, -64.0444, -13.7744, 0.52 ) }
    dend_4 { pt3dadd( -8.19362, -65.0417, -13.6735, 0.88 ) }
    dend_4 { pt3dadd( -8.00155, -65.992, -13.5917, 0.88 ) }
    dend_4 { pt3dadd( -7.82856, -67.1368, -13.5632, 0.81 ) }
    dend_4 { pt3dadd( -7.71584, -68.2845, -13.6018, 0.81 ) }
    dend_4 { pt3dadd( -7.68827, -68.8603, -13.6468, 0.88 ) }
    dend_4 { pt3dadd( -7.68726, -70.0303, -13.7782, 0.81 ) }
    dend_4 { pt3dadd( -7.73565, -71.0841, -13.9049, 0.81 ) }
    dend_4 { pt3dadd( -7.81574, -71.9112, -13.985, 0.96 ) }
    dend_4 { pt3dadd( -7.97956, -73.0003, -14.0323, 0.74 ) }
    dend_4 { pt3dadd( -8.11715, -73.6384, -14.0141, 0.74 ) }
    dend_4 { pt3dadd( -8.36505, -74.5027, -13.9247, 0.44 ) }
    dend_4 { pt3dadd( -8.60005, -75.1716, -13.7857, 0.66 ) }
    dend_4 { pt3dadd( -8.92821, -75.9654, -13.574, 0.59 ) }
    dend_4 { pt3dadd( -9.25502, -76.6095, -13.4007, 0.59 ) }
    dend_4 { pt3dadd( -9.61459, -77.157, -13.2508, 0.96 ) }
    dend_4 { pt3dadd( -10.3094, -78.0077, -13.0199, 0.52 ) }
    dend_4 { pt3dadd( -10.9284, -78.6842, -12.8538, 0.52 ) }
    dend_4 { pt3dadd( -11.3379, -79.1391, -12.7795, 0.52 ) }
    dend_4 { pt3dadd( -11.8764, -79.7846, -12.7041, 0.52 ) }
    dend_4 { pt3dadd( -12.3814, -80.5085, -12.6556, 0.59 ) }
    dend_4 { pt3dadd( -12.8974, -81.4878, -12.611, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( -13.1859, -82.3185, -12.5901, 0.66 ) }
    dend_4 { pt3dadd( -13.401, -83.3471, -12.5826, 0.74 ) }
    dend_4 { pt3dadd( -13.4983, -84.1586, -12.5818, 1.03 ) }
    dend_4 { pt3dadd( -13.5366, -85.0566, -12.6067, 1.03 ) }
    dend_4 { pt3dadd( -13.5242, -86.1356, -12.6664, 0.96 ) }
    dend_4 { pt3dadd( -13.4645, -87.0308, -12.7441, 0.66 ) }
    dend_4 { pt3dadd( -13.3685, -88.069, -12.8358, 0.52 ) }
    dend_4 { pt3dadd( -13.2363, -89.1865, -12.9543, 0.59 ) }
    dend_4 { pt3dadd( -13.1004, -90.1534, -13.0981, 0.44 ) }
    dend_4 { pt3dadd( -12.9997, -90.7755, -13.2189, 0.88 ) }
    dend_4 { pt3dadd( -12.8103, -91.7675, -13.4689, 0.59 ) }
    dend_4 { pt3dadd( -12.6178, -92.5715, -13.7086, 0.59 ) }
    dend_4 { pt3dadd( -12.3369, -93.494, -14.0304, 0.66 ) }
    dend_4 { pt3dadd( -12.1705, -94.0348, -14.2505, 0.66 ) }
    dend_4 { pt3dadd( -12.0353, -94.5806, -14.4906, 0.96 ) }
    dend_4 { pt3dadd( -11.9345, -95.2094, -14.7746, 0.96 ) }
    dend_4 { pt3dadd( -11.889, -96.1535, -15.1618, 0.44 ) }
    dend_4 { pt3dadd( -11.9288, -96.9461, -15.4413, 0.44 ) }
    dend_4 { pt3dadd( -12.0559, -97.895, -15.6979, 0.44 ) }
    dend_4 { pt3dadd( -12.1888, -98.5851, -15.8232, 0.88 ) }
    dend_4 { pt3dadd( -12.4499, -99.6535, -15.9128, 0.66 ) }
    dend_4 { pt3dadd( -12.7513, -100.744, -15.8987, 0.52 ) }
    dend_4 { pt3dadd( -12.9841, -101.655, -15.8002, 0.74 ) }
    dend_4 { pt3dadd( -13.0952, -102.263, -15.6688, 0.74 ) }
    dend_4 { pt3dadd( -13.1447, -102.91, -15.4565, 0.74 ) }
    dend_4 { pt3dadd( -13.1249, -103.668, -15.118, 0.59 ) }
    dend_4 { pt3dadd( -13.054, -104.229, -14.8148, 0.81 ) }
    dend_4 { pt3dadd( -12.8705, -105.275, -14.2117, 0.88 ) }
    dend_4 { pt3dadd( -12.7083, -106.264, -13.6605, 0.59 ) }
    dend_4 { pt3dadd( -12.6174, -107.078, -13.2506, 0.66 ) }
    dend_4 { pt3dadd( -12.5744, -108.089, -12.8168, 0.66 ) }
    dend_4 { pt3dadd( -12.5933, -108.512, -12.6717, 0.66 ) }
    dend_4 { pt3dadd( -12.7115, -109.495, -12.4189, 0.52 ) }
    dend_4 { pt3dadd( -12.8928, -110.589, -12.2258, 0.52 ) }
    dend_4 { pt3dadd( -13.0339, -111.628, -12.1134, 0.74 ) }
    dend_4 { pt3dadd( -13.0782, -112.347, -12.076, 0.96 ) }
    dend_4 { pt3dadd( -13.041, -113.47, -12.046, 1.18 ) }
    dend_4 { pt3dadd( -12.9232, -114.426, -12.0082, 0.66 ) }
    dend_4 { pt3dadd( -12.7842, -115.125, -11.9738, 0.66 ) }
    dend_4 { pt3dadd( -12.5411, -116.245, -11.9217, 0.59 ) }
    dend_4 { pt3dadd( -12.3369, -117.377, -11.8942, 0.81 ) }
    dend_4 { pt3dadd( -12.2126, -118.583, -11.9116, 0.66 ) }
    dend_4 { pt3dadd( -12.2161, -119.734, -11.9735, 0.66 ) }
    dend_4 { pt3dadd( -12.3224, -120.573, -12.052, 0.66 ) }
    dend_4 { pt3dadd( -12.5818, -121.618, -12.1846, 0.59 ) }
    dend_4 { pt3dadd( -12.9851, -122.657, -12.3517, 0.52 ) }
    dend_4 { pt3dadd( -13.4658, -123.654, -12.5211, 0.44 ) }
    dend_4 { pt3dadd( -13.7543, -124.218, -12.6075, 0.44 ) }
    dend_4 { pt3dadd( -13.9688, -124.67, -12.6595, 0.44 ) }
    dend_4 { pt3dadd( -14.1093, -125.036, -12.6824, 0.44 ) }
    dend_4 { pt3dadd( -14.3374, -125.807, -12.6735, 0.44 ) }
    dend_4 { pt3dadd( -14.5869, -126.878, -12.6058, 0.52 ) }
    dend_4 { pt3dadd( -14.8154, -128.022, -12.4846, 0.52 ) }
    dend_4 { pt3dadd( -14.9896, -128.939, -12.3753, 0.59 ) }
    dend_4 { pt3dadd( -15.1534, -129.734, -12.2644, 0.44 ) }
    dend_4 { pt3dadd( -15.3231, -130.45, -12.1475, 0.44 ) }
    dend_4 { pt3dadd( -15.595, -131.443, -11.9488, 0.66 ) }
    dend_4 { pt3dadd( -15.8433, -132.213, -11.7627, 0.66 ) }
    dend_4 { pt3dadd( -16.1276, -133.033, -11.5235, 0.74 ) }
    dend_4 { pt3dadd( -16.4851, -134.101, -11.1353, 0.52 ) }
    dend_4 { pt3dadd( -16.6973, -134.844, -10.7979, 0.52 ) }
    dend_4 { pt3dadd( -16.8405, -135.622, -10.3733, 0.66 ) }
    dend_4 { pt3dadd( -16.8752, -136.381, -9.91117, 0.59 ) }
    dend_4 { pt3dadd( -16.7974, -137.051, -9.50866, 0.44 ) }
    dend_4 { pt3dadd( -16.6083, -137.765, -9.11825, 0.44 ) }
    dend_4 { pt3dadd( -16.3123, -138.607, -8.73857, 0.44 ) }
    dend_4 { pt3dadd( -16.0083, -139.438, -8.42634, 0.52 ) }
    dend_4 { pt3dadd( -15.658, -140.535, -8.10322, 0.88 ) }
    dend_4 { pt3dadd( -15.4858, -141.394, -7.9161, 0.96 ) }
    dend_4 { pt3dadd( -15.4557, -142.292, -7.771, 0.74 ) }
    dend_4 { pt3dadd( -15.5684, -143.278, -7.63096, 0.44 ) }
    dend_4 { pt3dadd( -15.6915, -143.815, -7.55945, 0.74 ) }
    dend_4 { pt3dadd( -15.8877, -144.467, -7.44488, 1.03 ) }
    dend_4 { pt3dadd( -16.1513, -145.27, -7.24547, 0.44 ) }
    dend_4 { pt3dadd( -16.3678, -146.065, -7.0269, 0.37 ) }
    dend_4 { pt3dadd( -16.4299, -146.6, -6.85794, 0.37 ) }
    dend_4 { pt3dadd( -16.3939, -147.074, -6.70175, 0.74 ) }
    dend_4 { pt3dadd( -16.2489, -147.825, -6.42309, 1.11 ) }
    dend_4 { pt3dadd( -16.0751, -148.461, -6.15946, 0.74 ) }
    dend_4 { pt3dadd( -15.8154, -149.315, -5.78716, 0.59 ) }
    dend_4 { pt3dadd( -15.5163, -150.44, -5.28465, 0.52 ) }
    dend_4 { pt3dadd( -15.3903, -151.201, -4.93233, 0.29 ) }
    dend_4 { pt3dadd( -15.3433, -151.908, -4.58869, 0.29 ) }
    dend_4 { pt3dadd( -15.355, -152.391, -4.35793, 0.81 ) }
    dend_4 { pt3dadd( -15.4002, -153.121, -4.04529, 1.11 ) }
    dend_4 { pt3dadd( -15.481, -154.226, -3.66064, 0.52 ) }
    dend_4 { pt3dadd( -15.5194, -155.269, -3.39226, 0.44 ) }
    dend_4 { pt3dadd( -15.492, -155.992, -3.24214, 0.88 ) }
    dend_4 { pt3dadd( -15.3685, -156.874, -3.10687, 0.88 ) }
    dend_4 { pt3dadd( -15.0934, -157.967, -2.97105, 0.66 ) }
    dend_4 { pt3dadd( -14.7872, -158.786, -2.87142, 0.37 ) }
    dend_4 { pt3dadd( -14.3794, -159.626, -2.77031, 0.29 ) }
    dend_4 { pt3dadd( -14.0923, -160.164, -2.70574, 0.29 ) }
    dend_4 { pt3dadd( -13.899, -160.538, -2.65225, 0.74 ) }
    dend_4 { pt3dadd( -13.6721, -161.054, -2.55321, 1.03 ) }
    dend_4 { pt3dadd( -13.4487, -161.831, -2.37458, 0.29 ) }
    dend_4 { pt3dadd( -13.3522, -162.591, -2.23159, 0.22 ) }
    dend_4 { pt3dadd( -13.349, -163.095, -2.18529, 0.22 ) }
    dend_4 { pt3dadd( -13.3629, -163.506, -2.17557, 0.44 ) }
    dend_4 { pt3dadd( -13.3763, -164.226, -2.17945, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( -13.3537, -164.946, -2.19766, 0.29 ) }
    dend_4 { pt3dadd( -13.2804, -165.543, -2.21922, 0.29 ) }
    dend_4 { pt3dadd( -13.1728, -166.027, -2.20676, 0.29 ) }
    dend_4 { pt3dadd( -12.9767, -166.681, -2.13908, 0.66 ) }
    dend_4 { pt3dadd( -12.7415, -167.442, -2.00143, 0.37 ) }
    dend_4 { pt3dadd( -12.5746, -167.991, -1.8712, 0.44 ) }
    dend_4 { pt3dadd( -12.4283, -168.589, -1.69568, 0.37 ) }
    dend_4 { pt3dadd( -12.3321, -169.201, -1.46796, 0.37 ) }
    dend_4 { pt3dadd( -12.2857, -169.8, -1.19017, 0.74 ) }
    dend_4 { pt3dadd( -12.2602, -170.617, -0.744055, 1.11 ) }
    dend_4 { pt3dadd( -12.2408, -171.103, -0.431927, 1.11 ) }
    dend_4 { pt3dadd( -12.1769, -171.851, 0.147154, 0.66 ) }
    dend_4 { pt3dadd( -12.0541, -172.649, 0.878662, 0.44 ) }
    dend_4 { pt3dadd( -11.9084, -173.277, 1.51235, 0.44 ) }
    dend_4 { pt3dadd( -11.742, -173.852, 2.13054, 0.29 ) }
    dend_4 { pt3dadd( -11.5594, -174.432, 2.75986, 0.29 ) }
    dend_4 { pt3dadd( -11.4276, -174.919, 3.24207, 0.29 ) }
    dend_4 { pt3dadd( -11.357, -175.252, 3.48478, 0.29 ) }
    dend_4 { pt3dadd( -11.3264, -175.811, 3.67894, 0.59 ) }
    dend_4 { pt3dadd( -11.3636, -176.393, 3.74464, 0.96 ) }
    dend_4 { pt3dadd( -11.4466, -177.106, 3.77392, 0.96 ) }
    dend_4 { pt3dadd( -11.5409, -177.893, 3.80461, 0.44 ) }
    dend_4 { pt3dadd( -11.6299, -178.961, 3.86798, 0.29 ) }
    dend_4 { pt3dadd( -11.6482, -179.662, 3.94464, 0.29 ) }
    dend_4 { pt3dadd( -11.6222, -180.379, 4.07058, 0.66 ) }
    dend_4 { pt3dadd( -11.5457, -181.135, 4.23697, 0.44 ) }
    dend_4 { pt3dadd( -11.456, -181.851, 4.40092, 0.29 ) }
    dend_4 { pt3dadd( -11.38, -182.434, 4.51892, 0.44 ) }
    dend_4 { pt3dadd( -11.3034, -183.058, 4.64145, 1.25 ) }
    dend_4 { pt3dadd( -11.2221, -183.689, 4.74061, 1.25 ) }
    dend_4 { pt3dadd( -11.1084, -184.537, 4.85856, 1.03 ) }
    dend_4 { pt3dadd( -10.9827, -185.499, 4.97057, 0.52 ) }
    dend_4 { pt3dadd( -10.8717, -186.46, 5.0842, 0.29 ) }
    dend_4 { pt3dadd( -10.7849, -187.313, 5.20075, 0.29 ) }
    dend_4 { pt3dadd( -10.7455, -187.802, 5.27958, 0.29 ) }
    dend_4 { pt3dadd( -10.7154, -188.41, 5.3912, 0.37 ) }
    dend_4 { pt3dadd( -10.7295, -188.856, 5.47256, 0.29 ) }
    dend_4 { pt3dadd( -10.7844, -189.279, 5.52338, 0.29 ) }
    dend_4 { pt3dadd( -10.8712, -189.665, 5.52034, 0.52 ) }
    dend_4 { pt3dadd( -11.0315, -190.274, 5.44218, 1.18 ) }
    dend_4 { pt3dadd( -11.1618, -190.787, 5.34665, 1.18 ) }
    dend_4 { pt3dadd( -11.3732, -191.852, 5.10167, 0.81 ) }
    dend_4 { pt3dadd( -11.4298, -192.632, 4.89299, 0.29 ) }
    dend_4 { pt3dadd( -11.3847, -193.172, 4.74163, 0.29 ) }
    dend_4 { pt3dadd( -11.2932, -193.572, 4.63763, 0.52 ) }
    dend_4 { pt3dadd( -11.0966, -194.136, 4.52387, 0.88 ) }
    dend_4 { pt3dadd( -10.8142, -194.853, 4.44529, 0.29 ) }
    dend_4 { pt3dadd( -10.5148, -195.617, 4.46345, 0.22 ) }
    dend_4 { pt3dadd( -10.3574, -196.171, 4.56996, 0.22 ) }
    dend_4 { pt3dadd( -10.2882, -196.616, 4.70617, 0.44 ) }
    dend_4 { pt3dadd( -10.2704, -197.173, 4.94243, 0.59 ) }
    dend_4 { pt3dadd( -10.338, -198.007, 5.35802, 0.29 ) }
    dend_4 { pt3dadd( -10.4382, -198.639, 5.69817, 0.81 ) }
    dend_4 { pt3dadd( -10.5662, -199.313, 6.05983, 0.81 ) }
    dend_4 { pt3dadd( -10.642, -199.761, 6.27866, 0.81 ) }
    dend_4 { pt3dadd( -10.7549, -200.665, 6.66165, 0.29 ) }
    dend_4 { pt3dadd( -10.8119, -201.312, 6.87355, 0.29 ) }
    dend_4 { pt3dadd( -10.8474, -201.818, 7.00488, 0.88 ) }
    dend_4 { pt3dadd( -10.9045, -202.515, 7.12819, 1.18 ) }
    dend_4 { pt3dadd( -10.9934, -203.338, 7.24154, 0.52 ) }
    dend_4 { pt3dadd( -11.0525, -203.854, 7.30765, 0.37 ) }
    dend_4 { pt3dadd( -11.1167, -204.626, 7.39779, 0.22 ) }
    dend_4 { pt3dadd( -11.1312, -205.125, 7.47644, 0.44 ) }
    dend_4 { pt3dadd( -11.1025, -205.796, 7.6107, 0.96 ) }
    dend_4 { pt3dadd( -10.9863, -206.677, 7.79442, 0.22 ) }
    dend_4 { pt3dadd( -10.8721, -207.199, 7.9004, 0.22 ) }
    dend_4 { pt3dadd( -10.7092, -207.805, 8.0051, 0.37 ) }
    dend_4 { pt3dadd( -10.5794, -208.276, 8.06284, 0.37 ) }
    dend_4 { pt3dadd( -10.3991, -209.026, 8.08436, 0.22 ) }
    dend_4 { pt3dadd( -10.2745, -209.714, 8.053, 0.22 ) }
    dend_4 { pt3dadd( -10.2105, -210.317, 7.99627, 0.81 ) }
    dend_4 { pt3dadd( -10.1721, -211.093, 7.92153, 0.88 ) }
    dend_4 { pt3dadd( -10.1554, -211.94, 7.86441, 0.29 ) }
    dend_4 { pt3dadd( -10.1387, -212.774, 7.85917, 0.22 ) }
    dend_4 { pt3dadd( -10.1136, -213.442, 7.89769, 0.22 ) }
    dend_4 { pt3dadd( -10.0627, -214.182, 7.98728, 0.96 ) }
    dend_4 { pt3dadd( -9.98016, -214.9, 8.07894, 0.81 ) }
    dend_4 { pt3dadd( -9.85732, -215.675, 8.18568, 0.37 ) }
    dend_4 { pt3dadd( -9.6742, -216.673, 8.32328, 0.22 ) }
    dend_4 { pt3dadd( -9.52826, -217.49, 8.40912, 0.22 ) }
    dend_4 { pt3dadd( -9.37629, -218.344, 8.43393, 0.22 ) }
    dend_4 { pt3dadd( -9.22786, -219.153, 8.39926, 0.22 ) }
    dend_4 { pt3dadd( -9.16546, -219.474, 8.37806, 0.59 ) }
    dend_4 { pt3dadd( -9.04413, -220.065, 8.33542, 1.03 ) }
    dend_4 { pt3dadd( -8.84922, -221.003, 8.27246, 0.37 ) }
    dend_4 { pt3dadd( -8.69261, -221.793, 8.25865, 0.22 ) }
    dend_4 { pt3dadd( -8.61734, -222.282, 8.30444, 0.22 ) }
    dend_4 { pt3dadd( -8.56459, -223.111, 8.51846, 0.22 ) }
    dend_4 { pt3dadd( -8.57495, -223.634, 8.71256, 0.22 ) }
    dend_4 { pt3dadd( -8.61501, -224.037, 8.91166, 0.22 ) }
    dend_4 { pt3dadd( -8.67086, -224.462, 9.15121, 0.37 ) }
    dend_4 { pt3dadd( -8.75088, -225.09, 9.50662, 0.22 ) }
    dend_4 { pt3dadd( -8.79294, -225.53, 9.74592, 0.22 ) }
    dend_4 { pt3dadd( -8.80534, -225.877, 9.91593, 0.74 ) }
    dend_4 { pt3dadd( -8.77871, -226.386, 10.1854, 1.03 ) }
    dend_4 { pt3dadd( -8.67644, -227.047, 10.5981, 0.66 ) }
    dend_4 { pt3dadd( -8.53678, -227.623, 10.9956, 0.29 ) }
    dend_4 { pt3dadd( -8.42882, -228.009, 11.2772, 0.29 ) }
    dend_4 { pt3dadd( -8.35312, -228.264, 11.4587, 0.29 ) }
    dend_4 { pt3dadd( -8.22684, -228.699, 11.7504, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_4 { pt3dadd( -8.07212, -229.275, 12.1207, 0.22 ) }
    dend_4 { pt3dadd( -7.99961, -229.548, 12.2772, 0.22 ) }
    dend_4 { pt3dadd( -7.84605, -230.127, 12.569, 0.22 ) }
    dend_4 { pt3dadd( -7.69772, -230.704, 12.8424, 0.22 ) }
    dend_4 { pt3dadd( -7.50617, -231.493, 13.2125, 0.74 ) }
    dend_4 { pt3dadd( -7.34445, -232.205, 13.5137, 0.74 ) }
    dend_4 { pt3dadd( -7.20574, -232.868, 13.7717, 0.74 ) }
    dend_4 { pt3dadd( -7.07472, -233.515, 14.0105, 0.37 ) }
    dend_4 { pt3dadd( -6.92172, -234.322, 14.3118, 0.37 ) }
    dend_4 { pt3dadd( -6.82576, -234.905, 14.5379, 0.37 ) }
    dend_4 { pt3dadd( -6.7237, -235.559, 14.7965, 0.88 ) }
    dend_4 { pt3dadd( -6.57327, -236.328, 15.0741, 0.88 ) }
    dend_4 { pt3dadd( -6.43322, -236.969, 15.3212, 0.44 ) }
    dend_4 { pt3dadd( -6.25569, -237.762, 15.6392, 0.22 ) }
    dend_4 { pt3dadd( -6.17138, -238.169, 15.8173, 0.22 ) }
    dend_4 { pt3dadd( -6.07806, -238.728, 16.0885, 0.37 ) }
    dend_4 { pt3dadd( -5.99624, -239.593, 16.5857, 0.74 ) }
    dend_4 { pt3dadd( -6.05636, -240.406, 17.1224, 0.22 ) }
    dend_4 { pt3dadd( -6.24644, -240.967, 17.4983, 0.22 ) }
    dend_4 { pt3dadd( -6.44358, -241.259, 17.6754, 0.22 ) }
    dend_4 { pt3dadd( -6.72325, -241.573, 17.8432, 0.22 ) }
    dend_4 { pt3dadd( -6.95537, -241.823, 17.9392, 0.22 ) }
    dend_4 { pt3dadd( -7.44016, -242.388, 18.1335, 0.22 ) }
    dend_4 { pt3dadd( -7.69518, -242.783, 18.23, 0.81 ) }
    dend_4 { pt3dadd( -7.95325, -243.349, 18.3635, 1.18 ) }
    dend_4 { pt3dadd( -8.08278, -243.774, 18.4609, 1.18 ) }
    dend_4 { pt3dadd( -8.24726, -244.671, 18.6606, 0.37 ) }
    dend_4 { pt3dadd( -8.35123, -245.782, 18.8845, 0.22 ) }
    dend_4 { pt3dadd( -8.36815, -246.668, 19.0467, 0.22 ) }
    dend_4 { pt3dadd( -8.36017, -247.217, 19.1321, 0.22 ) }
    dend_4 { pt3dadd( -8.33331, -247.977, 19.2011, 0.37 ) }
    dend_4 { pt3dadd( -8.30287, -248.744, 19.231, 0.74 ) }
    dend_4 { pt3dadd( -8.28138, -249.527, 19.2056, 0.59 ) }
    dend_4 { pt3dadd( -8.28416, -250.23, 19.1095, 0.29 ) }
    dend_4 { pt3dadd( -8.31668, -250.899, 18.9955, 0.15 ) }
    dend_4 { pt3dadd( -8.36589, -251.668, 18.8541, 0.15 ) }
    dend_4 { pt3dadd( -8.39155, -252.09, 18.7929, 0.44 ) }
    dend_4 { pt3dadd( -8.42412, -252.83, 18.7453, 0.66 ) }
    dend_4 { pt3dadd( -8.40496, -253.589, 18.8107, 0.22 ) }
    dend_4 { pt3dadd( -8.31703, -254.344, 19.0756, 0.22 ) }
    dend_4 { pt3dadd( -8.22743, -254.84, 19.3951, 0.81 ) }
    dend_4 { pt3dadd( -8.12025, -255.442, 19.9111, 0.96 ) }
    dend_4 { pt3dadd( -8.04941, -255.941, 20.3963, 0.96 ) }
    dend_4 { pt3dadd( -7.9983, -256.402, 20.8905, 0.44 ) }
    dend_4 { pt3dadd( -7.96933, -256.913, 21.4588, 0.29 ) }
    dend_4 { pt3dadd( -7.97874, -257.383, 21.9182, 0.22 ) }
    dend_4 { pt3dadd( -8.02553, -257.87, 22.2744, 0.22 ) }
    dend_4 { pt3dadd( -8.10086, -258.398, 22.5194, 0.22 ) }
    dend_4 { pt3dadd( -8.148, -258.698, 22.6102, 0.22 ) }
    dend_4 { pt3dadd( -8.18977, -258.948, 22.658, 0.74 ) }
    dend_4 { pt3dadd( -8.28541, -259.569, 22.7164, 1.03 ) }
    dend_4 { pt3dadd( -8.4039, -260.484, 22.7551, 0.22 ) }
    dend_4 { pt3dadd( -8.46869, -261.114, 22.7712, 0.22 ) }
    dend_4 { pt3dadd( -8.49381, -261.449, 22.7805, 0.74 ) }
    dend_4 { pt3dadd( -8.51119, -261.854, 22.7836, 0.96 ) }
    dend_4 { pt3dadd( -8.52938, -262.488, 22.8075, 0.29 ) }
    dend_4 { pt3dadd( -8.53857, -262.999, 22.8405, 0.22 ) }
    dend_4 { pt3dadd( -8.54078, -263.383, 22.8731, 0.22 ) }
    dend_4 { pt3dadd( -8.54729, -263.923, 22.9325, 0.37 ) }
    dend_4 { pt3dadd( -8.59485, -264.586, 23.0035, 0.22 ) }
    dend_4 { pt3dadd( -8.72638, -265.427, 23.1242, 0.22 ) }
    dend_4 { pt3dadd( -8.79934, -265.734, 23.192, 0.22 ) }
    dend_4 { pt3dadd( -8.89304, -266.025, 23.2767, 0.44 ) }
    dend_4 { pt3dadd( -9.06076, -266.469, 23.4344, 0.88 ) }
    dend_4 { pt3dadd( -9.28625, -267.005, 23.6591, 0.44 ) }
    dend_4 { pt3dadd( -9.59408, -267.734, 23.9962, 0.22 ) }
    dend_4 { pt3dadd( -9.8006, -268.286, 24.2339, 0.22 ) }
    dend_4 { pt3dadd( -9.99095, -268.852, 24.4619, 0.22 ) }
    dend_4 { pt3dadd( -10.1274, -269.279, 24.6137, 0.22 ) }
    dend_4 { pt3dadd( -10.2182, -269.599, 24.7096, 0.22 ) }
    dend_4 { pt3dadd( -10.2914, -269.922, 24.7804, 0.59 ) }
    dend_4 { pt3dadd( -10.4196, -270.54, 24.8688, 1.25 ) }
    dend_4 { pt3dadd( -10.602, -271.376, 24.9505, 0.44 ) }
    dend_4 { pt3dadd( -10.7714, -272.123, 25.0062, 0.44 ) }
    dend_4 { pt3dadd( -10.8994, -272.675, 25.0596, 0.52 ) }
    dend_4 { pt3dadd( -11.118, -273.588, 25.2147, 0.22 ) }
    dend_4 { pt3dadd( -11.2887, -274.253, 25.366, 0.15 ) }
    dend_4 { pt3dadd( -11.4556, -274.85, 25.5388, 0.15 ) }
    dend_4 { pt3dadd( -11.5299, -275.092, 25.6176, 0.37 ) }
    dend_4 { pt3dadd( -11.7878, -275.846, 25.8732, 1.03 ) }
    dend_4 { pt3dadd( -12.2426, -277.008, 26.2913, 0.22 ) }
    dend_4 { pt3dadd( -12.4652, -277.508, 26.4795, 0.22 ) }
    dend_4 { pt3dadd( -12.6012, -277.809, 26.5911, 0.22 ) }
    dend_4 { pt3dadd( -12.842, -278.353, 26.7951, 0.22 ) }
    dend_4 { pt3dadd( -13.1471, -279.032, 27.032, 1.47 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -45.0568, 184.054, 33.1738, 0.07 ) }
    dend_55 { pt3dadd( -45.8834, 185.293, 33.2886, 0.07 ) }
    dend_55 { pt3dadd( -46.4253, 186.162, 33.3573, 0.66 ) }
    dend_55 { pt3dadd( -46.9508, 187.051, 33.4186, 0.15 ) }
    dend_55 { pt3dadd( -47.4371, 187.896, 33.4727, 0.59 ) }
    dend_55 { pt3dadd( -47.872, 188.647, 33.5217, 0.15 ) }
    dend_55 { pt3dadd( -48.2148, 189.238, 33.5603, 0.52 ) }
    dend_55 { pt3dadd( -48.5219, 189.852, 33.5852, 0.15 ) }
    dend_55 { pt3dadd( -48.8302, 190.508, 33.6056, 0.29 ) }
    dend_55 { pt3dadd( -49.1141, 191.135, 33.6218, 0.07 ) }
    dend_55 { pt3dadd( -49.3414, 191.603, 33.6387, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 96/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -45.0568, 184.054, 33.1738, 0.22 ) }
    dend_52 { pt3dadd( -45.3818, 185.169, 33.6232, 0.22 ) }
    dend_52 { pt3dadd( -46.0386, 186.859, 33.964, 0.07 ) }
    dend_52 { pt3dadd( -46.3985, 187.646, 33.9976, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_52 { pt3dadd( -46.8652, 188.617, 33.9287, 0.29 ) }
    dend_52 { pt3dadd( -47.455, 189.833, 33.7515, 0.07 ) }
    dend_52 { pt3dadd( -48.0517, 191.081, 33.5207, 0.07 ) }
    dend_52 { pt3dadd( -48.4655, 191.892, 33.2535, 0.52 ) }
    dend_52 { pt3dadd( -49.0845, 193.063, 32.7271, 0.07 ) }
    dend_52 { pt3dadd( -49.4486, 193.773, 32.3682, 0.07 ) }
    dend_52 { pt3dadd( -49.7164, 194.334, 32.0775, 0.07 ) }
    dend_52 { pt3dadd( -49.8644, 194.692, 31.9056, 0.22 ) }
    dend_52 { pt3dadd( -50.1697, 195.578, 31.5288, 0.44 ) }
    dend_52 { pt3dadd( -50.5766, 196.992, 30.981, 0.07 ) }
    dend_52 { pt3dadd( -50.7494, 197.741, 30.7405, 0.07 ) }
    dend_52 { pt3dadd( -50.8335, 198.155, 30.636, 0.52 ) }
    dend_52 { pt3dadd( -51.0101, 199.071, 30.4386, 0.74 ) }
    dend_52 { pt3dadd( -51.2566, 200.393, 30.1913, 0.07 ) }
    dend_52 { pt3dadd( -51.4195, 201.307, 30.058, 0.07 ) }
    dend_52 { pt3dadd( -51.5834, 202.228, 29.9813, 0.37 ) }
    dend_52 { pt3dadd( -51.8558, 203.7, 29.9313, 0.07 ) }
    dend_52 { pt3dadd( -52.0011, 204.389, 29.9372, 0.22 ) }
    dend_52 { pt3dadd( -52.1118, 204.835, 29.9746, 0.37 ) }
    dend_52 { pt3dadd( -52.3593, 205.7, 30.1426, 0.96 ) }
    dend_52 { pt3dadd( -52.7562, 206.944, 30.5332, 0.15 ) }
    dend_52 { pt3dadd( -52.9235, 207.426, 30.7461, 0.15 ) }
    dend_52 { pt3dadd( -53.2466, 208.355, 31.2928, 0.59 ) }
    dend_52 { pt3dadd( -53.7026, 209.579, 32.1325, 0.07 ) }
    dend_52 { pt3dadd( -54.0659, 210.388, 32.7382, 0.07 ) }
    dend_52 { pt3dadd( -54.5122, 211.243, 33.4427, 0.59 ) }
    dend_52 { pt3dadd( -55.0225, 212.078, 34.1433, 0.15 ) }
    dend_52 { pt3dadd( -55.577, 212.906, 34.7995, 0.15 ) }
    dend_52 { pt3dadd( -56.0331, 213.517, 35.2651, 0.88 ) }
    dend_52 { pt3dadd( -56.925, 214.594, 35.9787, 0.07 ) }
    dend_52 { pt3dadd( -57.4935, 215.273, 36.3366, 0.07 ) }
    dend_52 { pt3dadd( -58.2795, 216.248, 36.7244, 0.07 ) }
    dend_52 { pt3dadd( -58.6772, 216.77, 36.869, 0.81 ) }
    dend_52 { pt3dadd( -59.1334, 217.4, 37.0179, 1.25 ) }
    dend_52 { pt3dadd( -59.8698, 218.466, 37.2245, 0.22 ) }
    dend_52 { pt3dadd( -60.6641, 219.665, 37.4357, 0.15 ) }
    dend_52 { pt3dadd( -61.486, 220.912, 37.6277, 0.37 ) }
    dend_52 { pt3dadd( -62.6291, 222.68, 37.9078, 0.07 ) }
    dend_52 { pt3dadd( -63.3117, 223.751, 38.0793, 0.07 ) }
    dend_52 { pt3dadd( -64.0227, 224.905, 38.2601, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 40/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.63278, -61.6519, -36.9848, 0.22 ) }
    dend_17 { pt3dadd( 5.73036, -61.8367, -38.1574, 0.22 ) }
    dend_17 { pt3dadd( 6.2541, -62.0165, -38.7111, 0.22 ) }
    dend_17 { pt3dadd( 6.60324, -62.2037, -39.1191, 0.22 ) }
    dend_17 { pt3dadd( 6.84642, -62.3886, -39.4302, 0.22 ) }
    dend_17 { pt3dadd( 7.17193, -62.7041, -39.8721, 0.29 ) }
    dend_17 { pt3dadd( 7.6209, -63.2645, -40.5111, 0.29 ) }
    dend_17 { pt3dadd( 7.86885, -63.8479, -40.8997, 0.29 ) }
    dend_17 { pt3dadd( 8.04654, -64.5756, -41.2143, 0.29 ) }
    dend_17 { pt3dadd( 8.16552, -65.2858, -41.4194, 0.29 ) }
    dend_17 { pt3dadd( 8.22259, -65.7169, -41.502, 0.52 ) }
    dend_17 { pt3dadd( 8.30059, -66.5352, -41.6223, 0.88 ) }
    dend_17 { pt3dadd( 8.39183, -67.7497, -41.727, 0.29 ) }
    dend_17 { pt3dadd( 8.489, -69.0273, -41.7693, 0.29 ) }
    dend_17 { pt3dadd( 8.58294, -70.0545, -41.7453, 0.52 ) }
    dend_17 { pt3dadd( 8.65142, -70.736, -41.7082, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.63278, -61.6519, -36.9848, 0.15 ) }
    dend_16 { pt3dadd( 4.06531, -62.5402, -36.2999, 0.15 ) }
    dend_16 { pt3dadd( 3.75614, -63.0241, -35.9268, 0.15 ) }
    dend_16 { pt3dadd( 3.45999, -63.4877, -35.5693, 0.15 ) }
    dend_16 { pt3dadd( 3.22286, -63.8589, -35.2831, 0.15 ) }
    dend_16 { pt3dadd( 2.94472, -64.2943, -34.9475, 0.15 ) }
    dend_16 { pt3dadd( 2.59021, -64.8493, -34.5196, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -13.1471, -279.032, 27.032, 0.22 ) }
    dend_6 { pt3dadd( -13.5897, -279.399, 27.4832, 0.22 ) }
    dend_6 { pt3dadd( -13.7134, -279.547, 27.642, 0.22 ) }
    dend_6 { pt3dadd( -13.8228, -279.712, 27.8013, 0.22 ) }
    dend_6 { pt3dadd( -13.9591, -280.015, 28.0524, 0.22 ) }
    dend_6 { pt3dadd( -14.0673, -280.333, 28.2914, 0.22 ) }
    dend_6 { pt3dadd( -14.1243, -280.515, 28.4233, 0.37 ) }
    dend_6 { pt3dadd( -14.1859, -280.81, 28.6032, 1.03 ) }
    dend_6 { pt3dadd( -14.2171, -280.946, 28.6745, 1.03 ) }
    dend_6 { pt3dadd( -14.3713, -281.499, 28.9353, 0.37 ) }
    dend_6 { pt3dadd( -14.5256, -281.969, 29.1142, 0.29 ) }
    dend_6 { pt3dadd( -14.6222, -282.207, 29.1965, 0.29 ) }
    dend_6 { pt3dadd( -14.8306, -282.622, 29.3428, 0.59 ) }
    dend_6 { pt3dadd( -15.05, -283.005, 29.4833, 0.22 ) }
    dend_6 { pt3dadd( -15.2073, -283.259, 29.5883, 0.52 ) }
    dend_6 { pt3dadd( -15.4918, -283.696, 29.792, 0.96 ) }
    dend_6 { pt3dadd( -15.8223, -284.217, 30.0689, 0.22 ) }
    dend_6 { pt3dadd( -16.0313, -284.574, 30.2712, 0.22 ) }
    dend_6 { pt3dadd( -16.1646, -284.811, 30.4267, 0.22 ) }
    dend_6 { pt3dadd( -16.2815, -285.035, 30.5873, 0.22 ) }
    dend_6 { pt3dadd( -16.3964, -285.271, 30.7735, 0.22 ) }
    dend_6 { pt3dadd( -16.4744, -285.441, 30.9413, 0.22 ) }
    dend_6 { pt3dadd( -16.5549, -285.804, 31.2942, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -13.1471, -279.032, 27.032, 0.22 ) }
    dend_5 { pt3dadd( -12.4306, -278.996, 28.5957, 0.22 ) }
    dend_5 { pt3dadd( -11.9503, -278.979, 29.4718, 0.22 ) }
    dend_5 { pt3dadd( -11.6276, -278.966, 29.9059, 0.22 ) }
    dend_5 { pt3dadd( -11.0806, -278.945, 30.5681, 0.07 ) }
    dend_5 { pt3dadd( -10.6872, -278.929, 31.0445, 0.07 ) }
    dend_5 { pt3dadd( -10.511, -278.922, 31.2578, 0.07 ) }
    dend_5 { pt3dadd( -9.84598, -278.884, 31.9446, 0.88 ) }
    dend_5 { pt3dadd( -8.43635, -278.81, 33.2011, 0.15 ) }
    dend_5 { pt3dadd( -7.56002, -278.771, 33.9055, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -64.0227, 224.905, 38.2601, 0.07 ) }
    dend_54 { pt3dadd( -64.3241, 226.681, 39.4539, 0.07 ) }
    dend_54 { pt3dadd( -64.4921, 227.805, 40.232, 0.59 ) }
    dend_54 { pt3dadd( -64.735, 229.75, 41.5943, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( -64.8721, 231.189, 42.6441, 0.74 ) }
    dend_54 { pt3dadd( -64.9655, 232.476, 43.6179, 0.07 ) }
    dend_54 { pt3dadd( -65.0563, 233.726, 44.5641, 0.07 ) }
    dend_54 { pt3dadd( -65.0891, 234.604, 45.3008, 0.07 ) }
    dend_54 { pt3dadd( -65.1003, 235.628, 46.1932, 0.74 ) }
    dend_54 { pt3dadd( -65.0546, 237.25, 47.5779, 0.07 ) }
    dend_54 { pt3dadd( -65.009, 238.259, 48.4216, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -64.0227, 224.905, 38.2601, 0.07 ) }
    dend_53 { pt3dadd( -65.2563, 225.225, 37.3804, 0.07 ) }
    dend_53 { pt3dadd( -66.2118, 225.543, 36.5463, 0.07 ) }
    dend_53 { pt3dadd( -67.1249, 225.947, 35.5809, 0.07 ) }
    dend_53 { pt3dadd( -67.4547, 226.134, 35.1539, 0.29 ) }
    dend_53 { pt3dadd( -68.0977, 226.551, 34.2552, 0.74 ) }
    dend_53 { pt3dadd( -68.7611, 227.025, 33.3042, 0.29 ) }
    dend_53 { pt3dadd( -69.333, 227.527, 32.4168, 0.29 ) }
    dend_53 { pt3dadd( -70.1067, 228.228, 31.3118, 0.29 ) }
    dend_53 { pt3dadd( -71.0508, 229.013, 30.2089, 0.29 ) }
    dend_53 { pt3dadd( -71.4113, 229.268, 29.8869, 0.74 ) }
    dend_53 { pt3dadd( -72.1647, 229.693, 29.4535, 1.47 ) }
    dend_53 { pt3dadd( -73.378, 230.254, 29.052, 0.52 ) }
    dend_53 { pt3dadd( -74.5973, 230.735, 28.8673, 0.22 ) }
    dend_53 { pt3dadd( -75.9883, 231.231, 28.8168, 0.15 ) }
    dend_53 { pt3dadd( -76.978, 231.555, 28.8381, 0.29 ) }
    dend_53 { pt3dadd( -78.4688, 232.018, 28.9002, 0.07 ) }
    dend_53 { pt3dadd( -79.1108, 232.208, 28.9444, 0.52 ) }
    dend_53 { pt3dadd( -80.6764, 232.692, 29.0752, 0.07 ) }
    dend_53 { pt3dadd( -81.8041, 233.097, 29.211, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 8.65142, -70.736, -41.7082, 0.22 ) }
    dend_19 { pt3dadd( 9.48809, -71.4713, -42.1032, 0.22 ) }
    dend_19 { pt3dadd( 10.1354, -72.0854, -42.4528, 0.22 ) }
    dend_19 { pt3dadd( 10.6619, -72.5997, -42.7569, 0.22 ) }
    dend_19 { pt3dadd( 11.0787, -73.0018, -43.0357, 0.22 ) }
    dend_19 { pt3dadd( 11.8976, -73.7781, -43.648, 0.22 ) }
    dend_19 { pt3dadd( 12.3297, -74.1693, -43.9856, 0.22 ) }
    dend_19 { pt3dadd( 12.7161, -74.5089, -44.3279, 0.22 ) }
    dend_19 { pt3dadd( 13.0899, -74.8564, -44.7038, 0.22 ) }
    dend_19 { pt3dadd( 13.6096, -75.3853, -45.3529, 0.37 ) }
    dend_19 { pt3dadd( 13.8895, -75.6931, -45.7568, 0.52 ) }
    dend_19 { pt3dadd( 14.0953, -75.9293, -46.0699, 0.29 ) }
    dend_19 { pt3dadd( 14.1615, -76.0168, -46.1784, 0.29 ) }
    dend_19 { pt3dadd( 14.3987, -76.4715, -46.6316, 0.22 ) }
    dend_19 { pt3dadd( 14.5755, -77.1652, -47.0917, 0.22 ) }
    dend_19 { pt3dadd( 14.6231, -77.5196, -47.2595, 0.22 ) }
    dend_19 { pt3dadd( 14.6434, -77.8863, -47.4042, 0.29 ) }
    dend_19 { pt3dadd( 14.6434, -78.2121, -47.5206, 0.29 ) }
    dend_19 { pt3dadd( 14.6364, -79.0776, -47.7973, 0.15 ) }
    dend_19 { pt3dadd( 14.6441, -79.5175, -47.8982, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.65142, -70.736, -41.7082, 0.07 ) }
    dend_18 { pt3dadd( 8.67839, -71.1943, -40.6311, 0.07 ) }
    dend_18 { pt3dadd( 8.7201, -71.903, -38.9651, 0.07 ) }
    dend_18 { pt3dadd( 8.75537, -72.5024, -37.5563, 0.07 ) }
    dend_18 { pt3dadd( 8.77241, -72.7918, -36.8758, 0.29 ) }
    dend_18 { pt3dadd( 8.80968, -73.4252, -35.3872, 0.22 ) }
    dend_18 { pt3dadd( 8.82474, -73.681, -34.7858, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 54/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.5549, -285.804, 31.2942, 0.07 ) }
    dend_10 { pt3dadd( -16.287, -284.971, 31.9548, 0.07 ) }
    dend_10 { pt3dadd( -16.0786, -284.279, 32.4915, 0.07 ) }
    dend_10 { pt3dadd( -15.9079, -283.744, 32.8943, 0.22 ) }
    dend_10 { pt3dadd( -15.8181, -283.481, 33.0745, 0.22 ) }
    dend_10 { pt3dadd( -15.6338, -282.95, 33.4093, 0.22 ) }
    dend_10 { pt3dadd( -15.3093, -282.128, 33.8839, 0.15 ) }
    dend_10 { pt3dadd( -15.0433, -281.561, 34.1406, 0.15 ) }
    dend_10 { pt3dadd( -14.627, -280.859, 34.3725, 0.15 ) }
    dend_10 { pt3dadd( -14.3111, -280.442, 34.4888, 0.37 ) }
    dend_10 { pt3dadd( -13.9822, -280.106, 34.5747, 0.59 ) }
    dend_10 { pt3dadd( -13.0543, -279.407, 34.75, 0.15 ) }
    dend_10 { pt3dadd( -12.1019, -278.855, 34.8515, 0.15 ) }
    dend_10 { pt3dadd( -11.6956, -278.658, 34.8725, 0.15 ) }
    dend_10 { pt3dadd( -10.9509, -278.368, 34.8816, 0.29 ) }
    dend_10 { pt3dadd( -10.1173, -278.116, 34.8936, 0.15 ) }
    dend_10 { pt3dadd( -9.35746, -277.94, 34.9027, 0.52 ) }
    dend_10 { pt3dadd( -8.17779, -277.732, 34.9119, 0.15 ) }
    dend_10 { pt3dadd( -7.49323, -277.624, 34.9303, 0.29 ) }
    dend_10 { pt3dadd( -6.61031, -277.468, 34.9685, 0.29 ) }
    dend_10 { pt3dadd( -5.76894, -277.308, 35.0004, 0.15 ) }
    dend_10 { pt3dadd( -4.9054, -277.145, 35.0248, 0.44 ) }
    dend_10 { pt3dadd( -4.2091, -277.003, 35.0227, 0.15 ) }
    dend_10 { pt3dadd( -3.66468, -276.884, 34.9951, 0.22 ) }
    dend_10 { pt3dadd( -2.46453, -276.571, 34.8784, 0.07 ) }
    dend_10 { pt3dadd( -1.79608, -276.352, 34.7858, 0.59 ) }
    dend_10 { pt3dadd( -0.751198, -275.925, 34.5586, 0.07 ) }
    dend_10 { pt3dadd( 0.29123, -275.425, 34.2501, 0.37 ) }
    dend_10 { pt3dadd( 1.09454, -275.002, 33.9545, 0.15 ) }
    dend_10 { pt3dadd( 1.43366, -274.81, 33.7943, 0.44 ) }
    dend_10 { pt3dadd( 1.82363, -274.576, 33.5703, 0.44 ) }
    dend_10 { pt3dadd( 2.68036, -274.03, 33.0648, 0.07 ) }
    dend_10 { pt3dadd( 3.28956, -273.643, 32.7128, 0.07 ) }
    dend_10 { pt3dadd( 3.94945, -273.262, 32.3416, 0.07 ) }
    dend_10 { pt3dadd( 4.71856, -272.862, 31.9377, 0.07 ) }
    dend_10 { pt3dadd( 5.16305, -272.662, 31.7191, 0.07 ) }
    dend_10 { pt3dadd( 5.94274, -272.366, 31.3574, 0.37 ) }
    dend_10 { pt3dadd( 7.08594, -272.022, 30.897, 0.07 ) }
    dend_10 { pt3dadd( 7.63605, -271.884, 30.7047, 0.07 ) }
    dend_10 { pt3dadd( 8.6096, -271.659, 30.3967, 0.52 ) }
    dend_10 { pt3dadd( 9.84223, -271.401, 30.0458, 0.07 ) }
    dend_10 { pt3dadd( 10.4625, -271.284, 29.8784, 0.07 ) }
    dend_10 { pt3dadd( 11.4193, -271.138, 29.6311, 0.52 ) }
    dend_10 { pt3dadd( 12.5608, -271.034, 29.4041, 0.15 ) }
    dend_10 { pt3dadd( 13.1788, -271.004, 29.3213, 0.15 ) }
    dend_10 { pt3dadd( 13.3396, -271.003, 29.3084, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 13.8509, -271.005, 29.2992, 0.29 ) }
    dend_10 { pt3dadd( 14.2425, -271.007, 29.3069, 0.29 ) }
    dend_10 { pt3dadd( 15.2768, -271.011, 29.3601, 0.07 ) }
    dend_10 { pt3dadd( 16.1259, -270.973, 29.4464, 0.07 ) }
    dend_10 { pt3dadd( 16.6015, -270.929, 29.4992, 0.15 ) }
    dend_10 { pt3dadd( 17.4891, -270.814, 29.5891, 0.07 ) }
    dend_10 { pt3dadd( 17.8571, -270.758, 29.6176, 0.07 ) }
    dend_10 { pt3dadd( 18.4893, -270.672, 29.6577, 0.29 ) }
    dend_10 { pt3dadd( 19.8673, -270.521, 29.7012, 0.07 ) }
    dend_10 { pt3dadd( 20.6321, -270.468, 29.6821, 0.07 ) }
    dend_10 { pt3dadd( 21.1085, -270.44, 29.6294, 0.29 ) }
    dend_10 { pt3dadd( 21.806, -270.391, 29.4978, 0.37 ) }
    dend_10 { pt3dadd( 23.0939, -270.307, 29.1414, 0.07 ) }
    dend_10 { pt3dadd( 23.9782, -270.285, 28.8377, 0.15 ) }
    dend_10 { pt3dadd( 24.9855, -270.325, 28.4529, 0.15 ) }
    dend_10 { pt3dadd( 25.9616, -270.368, 28.0739, 0.15 ) }
    dend_10 { pt3dadd( 26.6278, -270.369, 27.83, 0.29 ) }
    dend_10 { pt3dadd( 27.2912, -270.354, 27.5805, 0.59 ) }
    dend_10 { pt3dadd( 28.0263, -270.32, 27.2925, 0.88 ) }
    dend_10 { pt3dadd( 28.9449, -270.307, 27.0028, 0.29 ) }
    dend_10 { pt3dadd( 29.8033, -270.35, 26.8551, 0.29 ) }
    dend_10 { pt3dadd( 30.7237, -270.467, 26.8092, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 22/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.5549, -285.804, 31.2942, 0.44 ) }
    dend_7 { pt3dadd( -17.1029, -286.647, 30.916, 0.44 ) }
    dend_7 { pt3dadd( -17.755, -287.745, 30.5567, 0.22 ) }
    dend_7 { pt3dadd( -18.3023, -288.75, 30.311, 0.66 ) }
    dend_7 { pt3dadd( -18.798, -289.752, 30.131, 0.15 ) }
    dend_7 { pt3dadd( -19.1636, -290.54, 30.0219, 0.15 ) }
    dend_7 { pt3dadd( -19.3812, -291.021, 29.9855, 0.15 ) }
    dend_7 { pt3dadd( -19.7337, -291.823, 30.0683, 0.15 ) }
    dend_7 { pt3dadd( -19.9593, -292.327, 30.207, 0.52 ) }
    dend_7 { pt3dadd( -20.3602, -293.18, 30.5268, 0.96 ) }
    dend_7 { pt3dadd( -20.8345, -294.148, 30.9341, 0.66 ) }
    dend_7 { pt3dadd( -21.3038, -295.057, 31.3354, 0.22 ) }
    dend_7 { pt3dadd( -22.0526, -296.515, 31.9575, 0.22 ) }
    dend_7 { pt3dadd( -22.339, -297.113, 32.1917, 0.22 ) }
    dend_7 { pt3dadd( -22.6146, -297.747, 32.4319, 0.22 ) }
    dend_7 { pt3dadd( -22.7985, -298.219, 32.6067, 0.22 ) }
    dend_7 { pt3dadd( -22.9914, -298.807, 32.7913, 0.37 ) }
    dend_7 { pt3dadd( -23.2421, -299.625, 32.9843, 0.88 ) }
    dend_7 { pt3dadd( -23.4891, -300.387, 33.1301, 0.52 ) }
    dend_7 { pt3dadd( -23.8546, -301.385, 33.3234, 0.15 ) }
    dend_7 { pt3dadd( -24.1608, -302.096, 33.4651, 0.15 ) }
    dend_7 { pt3dadd( -24.5122, -302.809, 33.5936, 0.81 ) }
    dend_7 { pt3dadd( -25.0715, -303.901, 33.7441, 0.15 ) }
    dend_7 { pt3dadd( -25.7027, -305.089, 33.8603, 0.15 ) }
    dend_7 { pt3dadd( -25.9202, -305.509, 33.8814, 0.66 ) }
    dend_7 { pt3dadd( -26.2415, -306.205, 33.8715, 1.03 ) }
    dend_7 { pt3dadd( -26.6611, -307.363, 33.7839, 0.15 ) }
    dend_7 { pt3dadd( -26.8966, -308.258, 33.6753, 0.15 ) }
    dend_7 { pt3dadd( -26.9286, -308.427, 33.6449, 0.15 ) }
    dend_7 { pt3dadd( -27.029, -308.919, 33.5399, 0.59 ) }
    dend_7 { pt3dadd( -27.1833, -309.49, 33.4138, 0.81 ) }
    dend_7 { pt3dadd( -27.5181, -310.444, 33.201, 0.22 ) }
    dend_7 { pt3dadd( -27.772, -311.048, 33.0718, 0.22 ) }
    dend_7 { pt3dadd( -28.2592, -312.027, 32.8766, 0.44 ) }
    dend_7 { pt3dadd( -28.7893, -312.983, 32.6642, 0.15 ) }
    dend_7 { pt3dadd( -29.1552, -313.549, 32.5174, 0.15 ) }
    dend_7 { pt3dadd( -29.52, -314.025, 32.37, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -29.52, -314.025, 32.37, 0.22 ) }
    dend_9 { pt3dadd( -29.7168, -315.053, 32.0524, 0.22 ) }
    dend_9 { pt3dadd( -29.8075, -315.454, 31.9241, 0.22 ) }
    dend_9 { pt3dadd( -29.9697, -316.125, 31.7169, 0.29 ) }
    dend_9 { pt3dadd( -30.1285, -316.798, 31.4937, 0.15 ) }
    dend_9 { pt3dadd( -30.2249, -317.241, 31.3267, 0.15 ) }
    dend_9 { pt3dadd( -30.3073, -317.69, 31.1435, 0.15 ) }
    dend_9 { pt3dadd( -30.3888, -318.128, 30.9585, 0.52 ) }
    dend_9 { pt3dadd( -30.4518, -318.685, 30.7137, 0.74 ) }
    dend_9 { pt3dadd( -30.4545, -319.635, 30.2874, 0.29 ) }
    dend_9 { pt3dadd( -30.396, -320.254, 29.9998, 0.15 ) }
    dend_9 { pt3dadd( -30.3249, -320.736, 29.7828, 0.15 ) }
    dend_9 { pt3dadd( -30.2785, -320.989, 29.6793, 0.15 ) }
    dend_9 { pt3dadd( -30.1628, -321.45, 29.512, 0.37 ) }
    dend_9 { pt3dadd( -29.9918, -322.049, 29.3436, 0.15 ) }
    dend_9 { pt3dadd( -29.8259, -322.612, 29.2487, 0.15 ) }
    dend_9 { pt3dadd( -29.648, -323.229, 29.1841, 0.22 ) }
    dend_9 { pt3dadd( -29.516, -323.702, 29.1442, 0.81 ) }
    dend_9 { pt3dadd( -29.3703, -324.264, 29.0832, 0.66 ) }
    dend_9 { pt3dadd( -29.1736, -325.166, 28.9709, 0.44 ) }
    dend_9 { pt3dadd( -29.0859, -325.706, 28.8878, 0.44 ) }
    dend_9 { pt3dadd( -28.9646, -326.586, 28.7362, 0.15 ) }
    dend_9 { pt3dadd( -28.9129, -327.002, 28.653, 0.15 ) }
    dend_9 { pt3dadd( -28.8339, -327.783, 28.471, 0.15 ) }
    dend_9 { pt3dadd( -28.7952, -328.343, 28.3258, 0.81 ) }
    dend_9 { pt3dadd( -28.7372, -329.542, 28.0093, 0.15 ) }
    dend_9 { pt3dadd( -28.7312, -329.881, 27.9183, 0.15 ) }
    dend_9 { pt3dadd( -28.7274, -330.24, 27.822, 0.15 ) }
    dend_9 { pt3dadd( -28.7056, -330.686, 27.7144, 0.15 ) }
    dend_9 { pt3dadd( -28.6649, -331.03, 27.6512, 0.37 ) }
    dend_9 { pt3dadd( -28.5207, -331.686, 27.5469, 0.74 ) }
    dend_9 { pt3dadd( -28.2937, -332.447, 27.4349, 0.22 ) }
    dend_9 { pt3dadd( -28.1008, -333.034, 27.3444, 0.22 ) }
    dend_9 { pt3dadd( -27.9065, -333.565, 27.2703, 0.59 ) }
    dend_9 { pt3dadd( -27.6385, -334.215, 27.2041, 0.22 ) }
    dend_9 { pt3dadd( -27.2498, -335.067, 27.1331, 0.15 ) }
    dend_9 { pt3dadd( -27.062, -335.458, 27.1083, 0.15 ) }
    dend_9 { pt3dadd( -26.888, -335.838, 27.0934, 0.37 ) }
    dend_9 { pt3dadd( -26.6784, -336.39, 27.069, 0.66 ) }
    dend_9 { pt3dadd( -26.5293, -337.014, 27.0103, 0.22 ) }
    dend_9 { pt3dadd( -26.4982, -337.558, 26.937, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -26.5444, -337.993, 26.8745, 0.15 ) }
    dend_9 { pt3dadd( -26.6261, -338.423, 26.8079, 0.29 ) }
    dend_9 { pt3dadd( -26.7235, -338.819, 26.7406, 0.88 ) }
    dend_9 { pt3dadd( -26.9472, -339.637, 26.6049, 0.22 ) }
    dend_9 { pt3dadd( -27.1259, -340.215, 26.5293, 0.15 ) }
    dend_9 { pt3dadd( -27.3114, -340.811, 26.4724, 0.15 ) }
    dend_9 { pt3dadd( -27.3887, -341.079, 26.4534, 0.15 ) }
    dend_9 { pt3dadd( -27.5283, -341.624, 26.4264, 0.22 ) }
    dend_9 { pt3dadd( -27.7175, -342.476, 26.3789, 0.15 ) }
    dend_9 { pt3dadd( -27.9493, -343.613, 26.3038, 0.15 ) }
    dend_9 { pt3dadd( -28.0248, -343.953, 26.2721, 0.37 ) }
    dend_9 { pt3dadd( -28.1319, -344.457, 26.1989, 0.37 ) }
    dend_9 { pt3dadd( -28.255, -345.09, 26.0841, 0.22 ) }
    dend_9 { pt3dadd( -28.3599, -345.797, 25.9424, 0.22 ) }
    dend_9 { pt3dadd( -28.401, -346.338, 25.8291, 0.66 ) }
    dend_9 { pt3dadd( -28.3844, -346.96, 25.6984, 0.66 ) }
    dend_9 { pt3dadd( -28.2989, -347.979, 25.5089, 0.15 ) }
    dend_9 { pt3dadd( -28.2604, -348.324, 25.4425, 0.15 ) }
    dend_9 { pt3dadd( -28.1595, -349.075, 25.3012, 0.59 ) }
    dend_9 { pt3dadd( -28.0604, -349.692, 25.1899, 0.15 ) }
    dend_9 { pt3dadd( -27.9178, -350.432, 25.053, 0.15 ) }
    dend_9 { pt3dadd( -27.7917, -350.959, 24.9469, 0.44 ) }
    dend_9 { pt3dadd( -27.5486, -351.908, 24.7182, 0.15 ) }
    dend_9 { pt3dadd( -27.4639, -352.24, 24.6184, 0.15 ) }
    dend_9 { pt3dadd( -27.3754, -352.638, 24.4639, 0.15 ) }
    dend_9 { pt3dadd( -27.3093, -353.029, 24.2793, 0.37 ) }
    dend_9 { pt3dadd( -27.2328, -353.714, 23.9065, 0.44 ) }
    dend_9 { pt3dadd( -27.1854, -354.417, 23.4826, 0.22 ) }
    dend_9 { pt3dadd( -27.1905, -354.661, 23.3321, 0.22 ) }
    dend_9 { pt3dadd( -27.2549, -355.108, 23.0566, 0.15 ) }
    dend_9 { pt3dadd( -27.376, -355.535, 22.798, 0.15 ) }
    dend_9 { pt3dadd( -27.4494, -355.71, 22.6922, 0.15 ) }
    dend_9 { pt3dadd( -27.6129, -356.019, 22.5113, 0.29 ) }
    dend_9 { pt3dadd( -27.8791, -356.518, 22.2222, 0.37 ) }
    dend_9 { pt3dadd( -28.1179, -357.005, 21.952, 0.22 ) }
    dend_9 { pt3dadd( -28.364, -357.6, 21.6624, 0.15 ) }
    dend_9 { pt3dadd( -28.6164, -358.271, 21.3568, 0.29 ) }
    dend_9 { pt3dadd( -28.8317, -358.885, 21.0769, 0.15 ) }
    dend_9 { pt3dadd( -28.9636, -359.277, 20.8965, 0.15 ) }
    dend_9 { pt3dadd( -29.1349, -359.786, 20.6617, 0.52 ) }
    dend_9 { pt3dadd( -29.4127, -360.58, 20.2808, 0.15 ) }
    dend_9 { pt3dadd( -29.595, -361.13, 20.0039, 0.15 ) }
    dend_9 { pt3dadd( -29.803, -361.89, 19.5671, 0.15 ) }
    dend_9 { pt3dadd( -29.9052, -362.339, 19.2653, 0.52 ) }
    dend_9 { pt3dadd( -29.9969, -362.722, 18.9666, 0.52 ) }
    dend_9 { pt3dadd( -30.1534, -363.379, 18.3866, 0.15 ) }
    dend_9 { pt3dadd( -30.2358, -363.719, 18.0393, 0.15 ) }
    dend_9 { pt3dadd( -30.3873, -364.445, 17.2282, 0.15 ) }
    dend_9 { pt3dadd( -30.4442, -364.832, 16.7532, 0.29 ) }
    dend_9 { pt3dadd( -30.4643, -365.297, 16.1466, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -29.52, -314.025, 32.37, 0.88 ) }
    dend_8 { pt3dadd( -29.8218, -314.475, 32.5723, 0.88 ) }
    dend_8 { pt3dadd( -30.1778, -315.038, 32.7822, 0.22 ) }
    dend_8 { pt3dadd( -30.4978, -315.594, 32.9606, 0.15 ) }
    dend_8 { pt3dadd( -30.7512, -316.077, 33.1, 0.15 ) }
    dend_8 { pt3dadd( -30.8871, -316.364, 33.175, 0.37 ) }
    dend_8 { pt3dadd( -31.0729, -316.811, 33.2784, 1.03 ) }
    dend_8 { pt3dadd( -31.2866, -317.439, 33.4002, 0.44 ) }
    dend_8 { pt3dadd( -31.4369, -318.03, 33.4851, 0.15 ) }
    dend_8 { pt3dadd( -31.4977, -318.354, 33.5272, 0.15 ) }
    dend_8 { pt3dadd( -31.558, -318.766, 33.5842, 0.37 ) }
    dend_8 { pt3dadd( -31.6411, -319.377, 33.677, 0.15 ) }
    dend_8 { pt3dadd( -31.6986, -319.732, 33.736, 0.29 ) }
    dend_8 { pt3dadd( -31.8556, -320.439, 33.8555, 0.07 ) }
    dend_8 { pt3dadd( -32.0352, -321.02, 33.9261, 0.07 ) }
    dend_8 { pt3dadd( -32.2579, -321.583, 33.9844, 0.07 ) }
    dend_8 { pt3dadd( -32.4216, -321.907, 34.0104, 0.29 ) }
    dend_8 { pt3dadd( -32.789, -322.502, 34.0389, 0.07 ) }
    dend_8 { pt3dadd( -33.1112, -322.947, 34.0535, 0.59 ) }
    dend_8 { pt3dadd( -33.599, -323.527, 34.0731, 0.15 ) }
    dend_8 { pt3dadd( -33.9226, -323.881, 34.0981, 0.15 ) }
    dend_8 { pt3dadd( -34.3874, -324.368, 34.1813, 0.15 ) }
    dend_8 { pt3dadd( -34.6279, -324.629, 34.2487, 0.37 ) }
    dend_8 { pt3dadd( -35.0694, -325.147, 34.428, 0.07 ) }
    dend_8 { pt3dadd( -35.3261, -325.484, 34.5713, 0.22 ) }
    dend_8 { pt3dadd( -35.6027, -325.9, 34.7523, 0.07 ) }
    dend_8 { pt3dadd( -35.8735, -326.342, 34.9237, 0.07 ) }
    dend_8 { pt3dadd( -36.1108, -326.751, 35.0654, 0.59 ) }
    dend_8 { pt3dadd( -36.468, -327.376, 35.2366, 0.15 ) }
    dend_8 { pt3dadd( -36.7454, -327.867, 35.3319, 0.74 ) }
    dend_8 { pt3dadd( -37.2256, -328.683, 35.4265, 0.07 ) }
    dend_8 { pt3dadd( -37.6311, -329.339, 35.4757, 0.07 ) }
    dend_8 { pt3dadd( -37.9794, -329.872, 35.4962, 0.29 ) }
    dend_8 { pt3dadd( -38.4968, -330.614, 35.5074, 0.07 ) }
    dend_8 { pt3dadd( -38.8032, -331.03, 35.5016, 0.44 ) }
    dend_8 { pt3dadd( -39.4647, -331.875, 35.4723, 0.07 ) }
    dend_8 { pt3dadd( -39.7279, -332.198, 35.4563, 0.07 ) }
    dend_8 { pt3dadd( -40.0999, -332.648, 35.4387, 0.37 ) }
    dend_8 { pt3dadd( -40.7128, -333.402, 35.4268, 0.07 ) }
    dend_8 { pt3dadd( -41.3284, -334.179, 35.4278, 0.07 ) }
    dend_8 { pt3dadd( -41.7067, -334.686, 35.4337, 0.37 ) }
    dend_8 { pt3dadd( -42.1896, -335.402, 35.4457, 0.15 ) }
    dend_8 { pt3dadd( -42.6049, -336.1, 35.4543, 0.07 ) }
    dend_8 { pt3dadd( -42.8948, -336.617, 35.4691, 0.22 ) }
    dend_8 { pt3dadd( -43.093, -337.012, 35.4886, 0.52 ) }
    dend_8 { pt3dadd( -43.2702, -337.442, 35.5161, 0.88 ) }
    dend_8 { pt3dadd( -43.4741, -338.074, 35.5655, 0.44 ) }
    dend_8 { pt3dadd( -43.5969, -338.669, 35.6098, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, axon_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, axon_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_34 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_24 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_50 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_2 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_49 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_55 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_54 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_40 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 5
    dend_36 nseg = 13
    dend_34 nseg = 11
    dend_33 nseg = 7
    dend_31 nseg = 7
    dend_26 nseg = 17
    dend_47 nseg = 5
    dend_38 nseg = 7
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_56 nseg = 5
    dend_12 nseg = 3
    dend_51 nseg = 7
    dend_50 nseg = 5
    dend_11 nseg = 7
    dend_4 nseg = 13
    dend_52 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_NBC_ac16f8ddcb_0_0


