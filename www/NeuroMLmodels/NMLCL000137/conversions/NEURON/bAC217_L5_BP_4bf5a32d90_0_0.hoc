// Cell: bAC217_L5_BP_4bf5a32d90_0_0
/*
{
  "id" : "bAC217_L5_BP_4bf5a32d90_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.07628, 2.40803, 0.83", "-3.44777, 8.43992, 2.91911, 0.83", "-6.79862, 10.9722, 3.42446, 1.11", "-8.77431, 12.4642, 3.68734, 0.83", "-10.6938, 13.9012, 3.92287, 0.83", "-11.8303, 14.7206, 4.05194, 1.11", "-15.3891, 17.2812, 4.4656, 1.11", "-21.7545, 21.6649, 5.19683, 0.83", "-24.0477, 23.184, 5.43829, 0.83", "-25.8637, 24.3512, 5.58828, 0.83", "-27.6346, 25.508, 5.71811, 0.83", "-29.0761, 26.4614, 5.78815, 0.55", "-30.1596, 27.1069, 5.85925, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.31578, -5.68197, 0.55", "4.5124, 6.05249, -6.19831, 0.55", "7.05634, 6.58904, -6.76641, 0.55", "8.53249, 6.72448, -7.51814, 0.83", "10.8688, 6.86862, -8.91453, 0.55", "11.9965, 6.9382, -9.58859, 1.38", "14.7695, 7.10928, -11.2459, 0.55", "15.9505, 7.05135, -12.0367, 0.83", "22.0597, 5.9889, -16.4799, 0.55", "22.6508, 5.84603, -16.9687, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.03197, 2.42803, 1.11", "-0.688118, -10.5636, 3.3589, 1.11", "-0.744042, -15.3745, 5.12781, 1.11", "-0.766818, -17.3338, 5.84822, 0.83", "-0.797076, -19.9368, 6.80533, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.41203, -1.26197, 1.11", "0.939099, 9.56271, -1.38726, 1.11", "1.09466, 11.4576, -1.38024, 1.11", "1.35555, 14.5486, -1.25263, 1.38", "1.37354, 14.7206, -1.24278, 1.38", "1.72974, 16.8438, -1.11653, 0.83", "2.21589, 19.0845, -0.87283, 0.83", "3.02806, 21.6036, -0.313784, 0.83", "3.47392, 22.5536, 0.00292551, 0.83", "3.90191, 23.2373, 0.291228, 1.11", "5.12579, 24.8956, 1.01816, 0.55", "6.54604, 26.6207, 1.89081, 0.83", "8.36385, 28.3811, 2.85111, 0.55", "9.27561, 29.1061, 3.27341, 0.83", "10.5612, 30.0859, 3.95096, 0.55", "12.1685, 31.3331, 4.88716, 0.55", "14.4395, 33.2158, 6.34421, 0.55", "16.9456, 35.3712, 7.95378, 0.55", "18.5589, 36.7702, 9.19259, 0.55", "20.5754, 38.5396, 10.9782, 0.55", "20.9994, 38.8936, 11.3879, 0.83", "22.1305, 39.8285, 12.5527, 0.55", "23.07, 40.555, 13.4595, 0.83", "25.255, 42.5555, 15.6181, 0.55", "26.0486, 43.2866, 16.227, 0.83", "26.7608, 43.8206, 16.6151, 0.55", "27.4497, 44.2775, 16.8923, 0.83", "28.9504, 45.1186, 17.3581, 0.83", "30.9131, 46.2671, 17.8092, 0.83", "32.1021, 47.0308, 17.9633, 0.55", "33.0125, 47.6963, 18.0859, 0.55", "35.3932, 49.4148, 18.373, 0.83", "36.9221, 50.5168, 18.4993, 0.55", "39.228, 52.1288, 18.6007, 0.55", "41.3243, 53.4741, 18.6119, 0.55", "43.1898, 54.6104, 18.573, 0.55", "45.528, 55.9359, 18.4193, 0.55", "46.9442, 56.575, 18.2795, 0.55", "47.8906, 56.9286, 18.0699, 0.55", "49.124, 57.173, 17.6846, 0.55", "50.9308, 57.2385, 16.9549, 0.55", "52.0454, 57.1337, 16.4544, 0.55", "53.6901, 56.9341, 15.8428, 0.55", "56.8698, 56.6535, 14.9689, 0.55", "59.396, 56.548, 14.4652, 0.55", "62.1019, 56.5617, 14.0933, 0.55", "63.8594, 56.6278, 13.992, 0.55", "68.4839, 57.1989, 14.0267, 0.55", "71.2572, 57.7374, 14.2487, 0.55", "73.3692, 58.2687, 14.603, 0.55", "74.6668, 58.79, 14.8661, 0.55", "76.1767, 59.5816, 15.1648, 0.55", "78.7097, 61.16, 15.4576, 0.55", "79.2801, 61.5417, 15.449, 0.55", "80.8986, 62.5591, 15.3203, 0.55", "82.3908, 63.6517, 15.197, 0.83", "83.2037, 64.2585, 15.1173, 0.55", "84.4191, 65.3067, 14.9514, 0.83", "91.0648, 70.8957, 15.7172, 0.83", "96.8395, 77.3781, 15.9595, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-30.1596, 27.1069, 5.85925, 0.55", "-32.4433, 27.7109, 5.19236, 0.55", "-34.9266, 28.3676, 4.46719, 0.55", "-37.9233, 29.1602, 3.59207, 0.55", "-40.3979, 29.8146, 2.86945, 0.83", "-42.4715, 30.3631, 2.2639, 0.55", "-46.3205, 31.381, 1.13991, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-30.1596, 27.1069, 5.85925, 0.55", "-32.0451, 27.4883, 5.55946, 0.55", "-34.0623, 27.8191, 5.43783, 0.55", "-36.3524, 28.1869, 5.35563, 0.55", "-39.6849, 28.6646, 5.53934, 0.55", "-42.4842, 28.9724, 5.88584, 0.55", "-45.4269, 29.2431, 6.37121, 0.55", "-48.2883, 29.2984, 7.13308, 0.55", "-50.7654, 29.0994, 8.00996, 0.55", "-53.8702, 28.6228, 9.41512, 0.55", "-55.2303, 28.309, 10.2045, 0.55", "-56.7025, 27.9511, 11.1178, 0.55", "-59.2954, 27.1415, 12.6023, 0.55", "-60.6646, 26.7285, 13.1812, 0.55", "-62.0988, 26.2545, 13.7767, 0.55", "-63.7956, 25.7225, 14.3167, 0.55", "-65.6369, 25.1845, 14.8562, 0.55", "-68.2619, 24.4141, 15.5693, 0.55", "-71.7505, 23.6309, 16.2256, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.6508, 5.84603, -16.9687, 0.55", "28.5612, 7.52126, -18.2436, 0.55", "31.9798, 8.27711, -19.4582, 0.55", "35.3595, 8.87298, -20.7028, 0.55", "37.6718, 9.18966, -21.5503, 0.55", "41.0537, 9.57638, -22.7612, 0.55", "48.0763, 10.2401, -25.4901, 0.55", "56.0503, 10.9301, -29.1175, 0.55", "59.928, 11.0216, -31.1396, 0.55", "62.008, 11.0173, -32.3577, 0.55", "64.2892, 11.021, -33.786, 0.55", "68.3637, 10.9173, -36.3164, 0.55", "69.8467, 10.7938, -37.2825, 0.55", "76.1253, 10.4109, -41.8589, 0.55", "80.5705, 10.2005, -45.4275, 0.55", "83.1288, 10.1259, -47.5533, 0.55", "85.6812, 10.0297, -49.6711, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.6508, 5.84603, -16.9687, 0.83", "23.9009, 6.52638, -16.9586, 0.83", "24.6151, 6.91679, -16.9848, 0.55", "25.6665, 7.51945, -17.1099, 0.83", "26.374, 7.94336, -17.2139, 0.55", "27.3508, 8.55201, -17.3416, 0.83", "28.5267, 9.30302, -17.4512, 0.55", "29.1169, 9.63761, -17.485, 0.55", "30.4687, 10.2249, -17.4801, 0.83", "31.6916, 10.6056, -17.3273, 0.55", "32.3754, 10.8072, -17.1775, 0.83", "33.4033, 11.1245, -16.8443, 0.55", "34.8823, 11.5933, -16.1774, 0.55", "36.9328, 12.1358, -15.1535, 0.55", "38.8864, 12.5766, -14.0476, 0.55", "40.4337, 12.9081, -13.145, 0.55", "42.9852, 13.4653, -11.6429, 0.55", "44.8543, 13.922, -10.4999, 0.55", "45.9866, 14.2861, -9.76292, 0.55", "48.0799, 15.1604, -8.37338, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.797076, -19.9368, 6.80533, 0.83", "-1.31579, -22.787, 6.74976, 0.83", "-1.82116, -25.5639, 6.69562, 0.83", "-2.38541, -28.6643, 6.63517, 0.83", "-2.68006, -30.2833, 6.6036, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.797076, -19.9368, 6.80533, 0.55", "-0.180409, -21.686, 8.10116, 0.55", "0.348009, -23.8319, 9.77279, 0.55", "0.59003, -26.6523, 12.0564, 0.55", "0.6032, -27.7501, 12.9705, 0.83", "0.354372, -30.5559, 15.6193, 0.55", "0.101975, -32.0071, 17.0093, 0.55", "-0.456834, -34.8301, 19.8322, 0.83", "-1.00342, -36.9285, 22.0588, 0.55", "-1.61099, -38.6623, 23.8598, 0.55", "-2.83433, -41.9475, 27.2055, 0.55", "-3.80495, -44.566, 29.8409, 0.55", "-4.54097, -46.6642, 31.986, 0.55", "-5.19264, -48.8898, 34.1979, 0.28", "-5.3821, -49.8155, 35.0869, 0.55", "-5.68105, -51.5244, 36.6314, 0.28", "-5.75173, -54.1861, 38.6357, 0.55", "-8.21141, -63.0807, 45.6829, 0.55", "-10.9574, -71.3046, 53.4449, 0.55", "-13.2794, -78.0578, 62.6946, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-46.3205, 31.381, 1.13991, 0.55", "-49.2256, 31.6571, 3.29323, 0.55", "-50.4144, 31.7217, 4.3699, 0.83", "-51.7639, 31.7456, 5.84322, 0.55", "-52.7786, 31.776, 7.07851, 0.83", "-55.4519, 31.9613, 10.2768, 0.55", "-56.4643, 32.0519, 11.4951, 0.28", "-58.1266, 32.2439, 13.6906, 0.55", "-60.3604, 32.5154, 16.6225, 0.55", "-62.072, 32.7113, 18.7563, 0.55", "-64.3727, 32.9623, 21.5213, 0.28", "-64.9851, 33.0228, 22.1551, 0.55", "-66.263, 33.1583, 23.4107, 0.28", "-67.1485, 33.2646, 24.1687, 0.55", "-68.9839, 33.4474, 25.5441, 0.28", "-70.0659, 33.4839, 26.297, 0.55", "-71.9589, 33.4018, 27.6576, 0.28", "-73.2377, 33.3318, 28.5235, 0.55", "-80.3394, 32.6845, 37.6357, 0.55", "-86.531, 31.0979, 47.2713, 0.55", "-92.341, 28.4774, 56.9033, 0.55", "-98.0856, 24.5196, 66.0804, 0.55", "-102.423, 21.2399, 76.2538, 0.55", "-107.703, 18.258, 86.0758, 0.55", "-113.206, 17.1244, 96.1853, 0.55", "-118.625, 15.093, 106.188, 0.55", "-123.845, 13.8523, 116.432, 0.55", "-128.478, 12.5226, 126.943, 0.55", "-131.846, 10.0489, 137.707, 0.55", "-135.371, 8.62216, 148.624, 0.55", "-139.008, 6.03689, 159.272, 0.55", "-141.22, 3.12143, 170.214, 0.55", "-141.487, 1.17415, 181.595, 0.55", "-141.629, -2.88294, 192.365, 0.55", "-140.115, -7.02587, 202.991, 0.55", "-139.217, -10.7288, 213.858, 0.55", "-139.576, -13.6985, 224.996, 0.55", "-142.467, -15.1185, 236.098, 0.55", "-144.268, -17.7007, 247.202, 0.55", "-143.968, -18.1985, 258.753, 0.55", "-145.591, -18.0286, 270.208, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-46.3205, 31.381, 1.13991, 0.55", "-48.1854, 31.6281, -0.521371, 0.55", "-49.7324, 31.9354, -2.45703, 0.55", "-51.235, 32.4043, -4.55005, 0.55", "-52.176, 32.698, -5.86068, 0.55", "-53.8923, 33.2336, -8.25141, 0.83", "-55.1481, 33.6255, -10.0005, 0.55", "-56.6853, 34.1424, -12.6064, 0.83", "-57.3534, 34.5694, -14.1227, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-71.7505, 23.6309, 16.2256, 0.28", "-72.6142, 22.0881, 15.849, 0.28", "-73.0264, 21.4264, 15.6277, 0.28", "-73.5611, 20.4919, 15.2811, 0.55", "-74.0017, 19.6701, 14.9849, 0.28", "-74.6515, 18.4178, 14.5509, 0.55", "-76.459, 14.7355, 13.3413, 0.28", "-77.0455, 13.4471, 12.8126, 0.55", "-77.9321, 11.4651, 11.9296, 0.28", "-78.4397, 10.2811, 11.347, 0.55", "-78.7898, 9.46571, 10.9251, 0.28", "-79.189, 8.52965, 10.4489, 0.55", "-80.3927, 5.40375, 8.94426, 0.28", "-80.7711, 4.4591, 8.45394, 0.55", "-81.4328, 3.01882, 7.54594, 0.28", "-81.9806, 2.09881, 6.87572, 0.28", "-82.476, 1.48508, 6.39832, 0.55", "-84.2128, -0.238083, 5.0928, 0.28", "-85.0226, -0.935869, 4.57471, 0.55", "-87.0038, -2.5218, 3.28444, 0.28", "-88.9892, -3.92387, 2.09512, 0.28", "-91.1512, -5.25881, 0.874532, 0.28", "-92.1441, -5.76116, 0.400593, 0.55", "-96.889, -11.4048, -2.84302, 0.55", "-102.214, -17.1823, -4.61348, 0.55", "-107.402, -22.6068, -7.5624, 0.55", "-112.709, -27.5121, -11.1764, 0.55", "-118.069, -31.8203, -15.4515, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-71.7505, 23.6309, 16.2256, 0.55", "-72.2387, 23.5939, 16.2683, 0.55", "-73.6235, 23.4845, 16.5665, 0.55", "-74.1451, 23.4294, 16.7056, 0.55", "-75.3731, 23.2634, 17.0501, 0.55", "-77.2576, 23.03, 17.4903, 0.55", "-78.2358, 22.9384, 17.7029, 0.28", "-79.7573, 22.765, 18.0031, 0.55", "-80.8856, 22.6153, 18.1851, 0.55", "-81.3622, 22.549, 18.2628, 0.28", "-84.2207, 22.15, 18.7253, 0.55", "-85.5538, 21.9069, 18.8584, 0.28", "-87.3476, 21.5763, 18.9329, 0.28", "-88.89, 21.3168, 18.9077, 0.55", "-94.9555, 21.1139, 20.1448, 0.55", "-100.843, 20.7334, 22.0266, 0.55", "-106.428, 19.7142, 24.4965, 0.55", "-111.859, 19.6884, 27.473, 0.55", "-116.563, 19.4151, 31.4939, 0.55", "-120.401, 19.4341, 36.3542, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "85.6812, 10.0297, -49.6711, 0.55", "89.2826, 10.8062, -52.8715, 0.55", "90.4366, 10.98, -53.9344, 0.55", "91.8892, 11.1605, -55.2316, 0.55", "94.5413, 11.4126, -57.7241, 0.55", "97.3371, 11.549, -60.3504, 0.55", "98.7229, 11.5299, -61.5646, 0.83", "99.8853, 11.4153, -62.6167, 0.55", "100.775, 11.2377, -63.4591, 0.83", "102.985, 10.5059, -65.5227, 0.55", "104.837, 9.75884, -67.1788, 0.55", "106.962, 8.9209, -68.9901, 0.55", "109.319, 8.02804, -71.069, 0.55", "110.91, 7.38614, -72.4852, 0.55", "112.709, 6.63947, -74.1295, 0.55", "114.261, 6.00477, -75.6597, 0.55", "115.23, 5.63723, -76.7603, 0.55", "116.538, 4.80126, -78.9924, 0.55", "117.279, 4.21663, -80.3717, 0.55", "118.005, 3.30043, -82.1735, 0.55", "119.092, 1.62316, -85.1825, 0.55", "119.327, 1.21548, -85.8508, 0.28", "122.325, -3.81177, -93.9367, 0.28", "123.282, -5.25261, -96.3169, 0.83", "126.955, -10.4673, -104.697, 0.83", "128.817, -13.0273, -108.523, 0.83", "129.681, -14.1108, -110.046, 0.55", "130.629, -15.1514, -111.526, 0.55", "133.033, -17.0136, -114.239, 0.55", "135.519, -18.5972, -116.609, 0.28", "136.191, -18.7085, -116.695, 0.55", "137.614, -18.6898, -116.45, 0.28", "138.474, -18.5791, -116.202, 0.55", "139.365, -18.4476, -115.868, 0.28", "140.422, -18.2237, -115.439, 0.55", "141.999, -17.8726, -114.989, 0.28", "143.277, -17.6414, -114.653, 0.55", "144.681, -17.3403, -114.423, 0.28", "146.602, -16.9858, -114.274, 0.55", "148.757, -16.5891, -114.249, 0.55", "150.658, -16.2646, -114.355, 0.28", "153.294, -15.8454, -114.648, 0.55", "157.867, -15.1787, -115.659, 0.55", "159.886, -14.8761, -116.374, 0.55", "160.753, -14.7463, -116.782, 0.83", "162.416, -14.5422, -117.707, 0.55", "163.567, -14.3839, -118.433, 0.83", "166.649, -13.897, -120.449, 0.55", "168.56, -13.7347, -121.681, 0.28", "169.368, -13.6794, -122.098, 0.55", "171.6, -13.6248, -122.939, 0.28", "172.392, -13.6511, -123.161, 0.55", "174.024, -13.7085, -123.356, 0.28", "175.693, -13.8092, -123.237, 0.55", "179.055, -13.9678, -122.401, 0.28", "180.606, -14.044, -121.843, 0.55", "182.927, -14.2303, -120.855, 0.28", "185.849, -14.4198, -119.517, 0.55", "187.955, -14.5205, -118.528, 0.55", "191.577, -14.5752, -116.8, 0.28", "193.059, -14.5798, -116.226, 0.55", "195.609, -14.5564, -115.544, 0.28", "198.127, -14.4235, -115.094, 0.55", "199.492, -14.2792, -115.08, 0.28", "200.702, -14.0342, -115.216, 0.55", "204.101, -13.2724, -115.981, 0.28", "206.499, -12.5884, -116.625, 0.28", "208.556, -11.8636, -117.27, 0.55", "210.823, -11.0465, -118.12, 0.28", "211.385, -10.7996, -118.328, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "85.6812, 10.0297, -49.6711, 0.55", "86.7078, 7.59456, -50.8269, 0.55", "87.3955, 5.52537, -51.6643, 0.28", "88.0187, 3.65368, -52.2756, 0.55", "89.5389, -0.285904, -53.6084, 0.28", "89.629, -0.540317, -53.7267, 0.55", "90.1393, -1.88349, -54.4512, 0.28", "90.4703, -3.03687, -55.218, 0.55", "90.757, -4.27097, -56.1443, 0.28", "91.1064, -5.97252, -57.4776, 0.55", "91.979, -10.2344, -60.7537, 0.55", "92.7368, -14.1351, -63.8011, 0.55", "93.3154, -17.258, -66.2404, 0.55", "93.8332, -20.3286, -68.5898, 0.55", "93.9638, -21.1176, -69.167, 0.28", "94.1226, -21.9473, -69.7211, 0.55", "94.4359, -23.0656, -70.393, 0.28", "95.1798, -25.0127, -71.4279, 0.55", "96.888, -28.6042, -72.849, 0.55", "97.8179, -30.5062, -73.4425, 0.28", "98.6544, -32.4714, -74.1302, 0.55", "99.632, -35.272, -75.1947, 0.28", "100.284, -37.5633, -76.1046, 0.55", "101.12, -41.0129, -77.4711, 0.28", "102.007, -44.5618, -78.7806, 0.55", "103.231, -49.732, -80.7248, 0.28", "103.826, -52.4987, -81.7695, 0.55", "104.395, -55.3457, -82.9012, 0.28", "104.875, -57.8796, -84.0437, 0.28", "105.585, -61.0729, -85.7265, 0.55", "106.428, -63.9917, -87.2188, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "48.0799, 15.1604, -8.37338, 0.55", "50.5192, 14.584, -8.24559, 0.55", "52.275, 14.1551, -8.33349, 0.55", "56.0949, 13.2404, -8.73222, 0.55", "57.7942, 12.8458, -9.07026, 0.55", "59.6426, 12.4843, -9.5185, 0.55", "62.1105, 12.0993, -10.2783, 0.55", "64.6818, 11.7097, -11.3449, 0.55", "66.0135, 11.5404, -12.0639, 0.55", "68.6799, 11.323, -13.8985, 0.55", "69.9046, 11.2468, -14.78, 0.55", "72.7607, 11.0389, -16.9406, 0.55", "74.6891, 10.8133, -18.4138, 0.55", "76.1147, 10.6153, -19.4339, 0.83", "78.3867, 10.2035, -21.0659, 0.55", "80.6107, 9.65878, -22.6114, 0.83", "82.4966, 9.08399, -23.8823, 0.55", "84.1875, 8.56619, -24.9136, 0.55", "85.1594, 8.29567, -25.431, 0.83", "87.4424, 7.62932, -26.5141, 0.28", "88.5907, 7.31971, -26.9639, 0.28", "89.6881, 6.97037, -27.48, 0.28", "90.8772, 6.62627, -28.0328, 0.28", "92.779, 6.12495, -28.9452, 0.28", "93.5478, 5.92473, -29.2861, 0.55", "95.4084, 5.40225, -29.9133, 0.55", "98.7729, 4.37254, -30.8846, 0.55", "99.706, 4.04966, -31.1209, 0.55", "100.541, 3.72268, -31.3054, 0.83", "102.376, 3.01715, -31.5429, 0.55", "103.974, 2.39828, -31.7234, 0.55", "105.485, 1.81732, -31.8851, 0.55", "106.65, 1.35894, -32.0491, 0.55", "108.474, 0.538481, -32.4398, 0.55", "110.591, -0.572497, -33.0808, 0.55", "113.815, -2.58585, -34.4344, 0.55", "115.543, -3.91505, -35.3831, 0.55", "117.003, -5.30562, -36.3756, 0.28", "117.424, -5.81288, -36.7339, 0.55", "118.313, -7.22616, -37.6864, 0.28", "119.029, -8.81086, -38.6844, 0.55", "119.653, -10.8331, -39.7267, 0.55", "120.087, -12.1854, -40.3481, 0.28", "120.25, -12.6715, -40.5448, 0.55", "120.682, -13.8857, -41.0196, 0.28", "121.285, -15.4799, -41.604, 0.55", "122.901, -19.3593, -42.9364, 0.55", "123.754, -21.3293, -43.572, 0.55", "124.551, -23.1406, -44.1404, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "48.0799, 15.1604, -8.37338, 0.55", "50.4886, 14.8478, -6.7906, 0.55", "51.259, 14.7568, -6.3226, 0.55", "54.118, 14.3289, -4.73027, 0.55", "57.3147, 13.8944, -2.89169, 0.55", "61.4164, 13.2987, -0.437559, 0.55", "62.549, 13.1374, 0.233699, 0.55", "64.577, 12.7837, 1.39803, 0.55", "66.7984, 12.4657, 2.61119, 0.55", "69.379, 12.1935, 3.93465, 0.55", "71.8126, 11.9655, 5.1994, 0.55", "73.1475, 11.9125, 5.85306, 0.55", "74.7163, 11.8917, 6.63063, 0.55", "76.6579, 11.9261, 7.576, 0.83", "79.8223, 12.07, 8.81645, 0.55", "81.9096, 12.1193, 9.52167, 0.83", "84.7972, 12.0958, 10.3711, 0.55", "85.6813, 12.0484, 10.6064, 0.55", "88.4159, 11.7938, 11.2446, 0.55", "93.2869, 11.1249, 12.1194, 0.55", "96.8413, 10.4769, 12.6265, 0.55", "99.6526, 9.8246, 13.0529, 0.55", "102.517, 8.99217, 13.5371, 0.55", "103.119, 8.80126, 13.6372, 0.28", "104.338, 8.36986, 13.8233, 0.83", "109.339, 6.5224, 14.5941, 0.55", "112.834, 5.25367, 15.07, 0.55", "115.71, 4.25849, 15.5504, 0.55", "117.429, 3.65424, 15.8516, 0.83", "118.783, 3.196, 16.0966, 0.28", "120.01, 2.78556, 16.3085, 0.55", "129.75, 1.33674, 19.9438, 0.55", "139.877, -1.07168, 21.3287, 0.55", "150.045, -2.44334, 23.5542, 0.55", "159.192, -5.78401, 27.4846, 0.55", "167.668, -10.53, 31.46, 0.55", "176.681, -15.8213, 32.1711, 0.55", "185.389, -21.4689, 30.9317, 0.55", "195.067, -25.2663, 29.5811, 0.55", "204.666, -29.4155, 28.8553, 0.55", "214.691, -32.3362, 27.8052, 0.55", "224.774, -35.2359, 28.1758, 0.55", "234.15, -39.9054, 28.5795, 0.55", "243.935, -43.1997, 30.4906, 0.55", "253.46, -45.4896, 34.2685, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.68006, -30.2833, 6.6036, 1.38", "-0.767802, -33.7064, 4.51665, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.68006, -30.2833, 6.6036, 0.55", "-3.69089, -31.3081, 6.84984, 0.55", "-4.82666, -32.6376, 7.12269, 0.55", "-5.69326, -33.5066, 7.34413, 0.55", "-6.44881, -34.2301, 7.42413, 0.55", "-8.12325, -35.7184, 7.45804, 0.55", "-9.29954, -36.7067, 7.45288, 0.55", "-10.3547, -37.5928, 7.41317, 0.55", "-13.0527, -39.7369, 7.31345, 0.55", "-16.2795, -42.2092, 7.21649, 0.55", "-18.7833, -44.076, 7.10295, 0.55", "-20.3899, -45.3055, 7.00997, 0.55", "-22.2386, -46.7885, 6.90815, 0.55", "-24.6027, -48.9435, 6.80583, 0.55", "-26.007, -50.4991, 6.77117, 0.55", "-27.7396, -52.7648, 6.8585, 0.55", "-29.1414, -54.9097, 6.97477, 0.55", "-30.6035, -57.6149, 7.11242, 0.55", "-32.0317, -60.8194, 7.29026, 0.55", "-32.8612, -63.2948, 7.42742, 0.55", "-33.1688, -64.5367, 7.55757, 0.55", "-33.6757, -67.4759, 7.98232, 0.55", "-34.0833, -70.2324, 8.44043, 0.55", "-34.3012, -73.0275, 9.0742, 0.55", "-34.4218, -74.6312, 9.52926, 0.55", "-34.7209, -79.5962, 11.111, 0.55", "-34.7438, -79.9617, 11.2345, 0.55", "-34.8289, -82.2052, 12.0352, 0.55", "-35.1442, -86.2006, 13.6057, 0.55", "-35.2764, -87.5343, 14.0534, 0.55", "-35.6208, -89.6069, 14.4076, 0.55", "-35.7715, -90.3753, 14.3568, 0.55", "-36.2846, -92.9777, 13.6639, 0.55", "-36.6088, -94.6656, 12.8338, 0.55", "-37.184, -97.3507, 10.9431, 0.55", "-37.8158, -100.643, 8.34138, 0.28", "-37.9858, -101.456, 7.58433, 0.55", "-38.2659, -102.687, 6.32605, 0.28", "-38.3122, -102.872, 6.1269, 0.55", "-38.5512, -103.887, 5.12581, 0.28", "-38.6368, -104.231, 4.87183, 0.55", "-39.0381, -106.022, 3.91109, 0.28", "-39.1965, -106.629, 3.59771, 0.55", "-39.6525, -108.384, 2.79816, 0.28", "-39.793, -108.937, 2.54791, 0.55", "-40.2862, -110.844, 1.71976, 0.28", "-40.5095, -111.722, 1.33314, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.2794, -78.0578, 62.6946, 0.55", "-16.9145, -84.5042, 68.5675, 0.55", "-21.5516, -90.1985, 74.5516, 0.55", "-25.8442, -96.487, 80.1548, 0.55", "-30.2787, -102.819, 85.593, 0.55", "-33.5824, -110.134, 90.5141, 0.55", "-36.8691, -117.141, 95.896, 0.55", "-38.7765, -125.539, 99.5838, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.2794, -78.0578, 62.6946, 0.55", "-12.8342, -84.7319, 69.3042, 0.55", "-11.9491, -92.4238, 74.5698, 0.55", "-12.5926, -100.192, 79.7502, 0.55", "-13.7484, -108.407, 84.0376, 0.55", "-14.5263, -116.585, 88.4833, 0.55", "-15.2554, -124.432, 93.5251, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-57.3534, 34.5694, -14.1227, 0.83", "-57.4042, 35.744, -15.8229, 0.83", "-57.5826, 38.6087, -19.6484, 0.55", "-57.6429, 39.8629, -21.1767, 0.83", "-57.6888, 41.2214, -22.7053, 0.55", "-57.709, 42.6534, -24.0491, 0.55", "-57.7003, 43.3892, -24.6209, 0.28", "-57.7115, 43.8929, -24.8601, 0.55", "-57.6484, 45.6384, -25.2857, 0.28", "-57.5978, 46.3931, -25.4323, 0.55", "-57.4408, 49.0289, -25.8293, 0.28", "-57.3612, 51.1216, -26.0646, 0.55", "-57.3796, 54.3856, -26.3066, 0.28", "-57.4888, 57.2504, -26.4484, 0.28", "-57.6382, 58.8469, -26.4822, 0.55", "-57.9316, 60.7251, -26.5029, 0.28", "-58.1292, 61.6155, -26.4908, 0.55", "-58.7224, 63.6806, -26.5408, 0.28", "-59.2214, 65.0336, -26.6337, 0.28", "-59.7466, 66.3521, -26.7631, 0.28", "-59.9964, 67.0522, -26.8387, 0.55", "-60.858, 69.8955, -27.2397, 0.28", "-61.7707, 73.2701, -27.7979, 0.55", "-62.0688, 74.4373, -27.9982, 0.55", "-62.3836, 75.6087, -28.1697, 0.55", "-63.1942, 78.072, -28.555, 0.55", "-63.8397, 79.6682, -28.8277, 0.28", "-64.1591, 80.2605, -28.928, 0.55", "-65.141, 81.8522, -29.1436, 0.28", "-66.2711, 83.5248, -29.435, 0.55", "-68.1557, 85.8779, -29.9198, 0.28", "-69.0667, 86.8371, -30.1396, 0.28", "-70.551, 88.1186, -30.5701, 0.55", "-72.2153, 89.4252, -31.0875, 0.28", "-72.5159, 89.6227, -31.1756, 0.55", "-73.5918, 90.2307, -31.472, 0.28", "-77.2805, 92.1398, -32.404, 0.55", "-82.4064, 94.3673, -33.8159, 0.28", "-83.3569, 94.7179, -34.12, 0.55", "-85.9657, 95.5858, -34.9816, 0.28", "-87.0639, 95.9328, -35.3681, 0.28", "-88.0229, 96.2066, -35.7417, 0.55", "-90.8359, 96.6852, -36.9853, 0.28", "-92.7993, 96.8562, -37.7682, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-57.3534, 34.5694, -14.1227, 0.55", "-57.8228, 36.1942, -14.7374, 0.55", "-58.1026, 37.1804, -15.0003, 0.28", "-58.4056, 37.9322, -14.9747, 0.55", "-59.1014, 39.6587, -14.916, 0.28", "-59.5902, 40.8714, -14.8748, 0.55", "-60.4912, 43.107, -14.7987, 0.28", "-61.0428, 44.36, -14.5284, 0.55", "-62.948, 47.5968, -12.7007, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-118.069, -31.8203, -15.4515, 0.55", "-121.776, -36.5872, -17.6298, 0.55", "-124.439, -41.8219, -20.1697, 0.55", "-126.495, -46.5774, -23.9518, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-118.069, -31.8203, -15.4515, 0.55", "-125.442, -38.3836, -22.2704, 0.55", "-131.646, -44.6371, -30.4077, 0.55", "-137.366, -50.9702, -38.8238, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-120.401, 19.4341, 36.3542, 0.55", "-125.49, 18.7606, 39.002, 0.55", "-130.688, 19.0064, 41.5025, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-120.401, 19.4341, 36.3542, 0.55", "-132.306, 18.0849, 39.1827, 0.55", "-144.077, 18.5686, 42.7661, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "106.428, -63.9917, -87.2188, 0.28", "113.221, -69.0459, -96.0361, 0.28", "113.904, -69.556, -96.7958, 0.55", "115.056, -70.4174, -98.0783, 0.28", "116.026, -71.1427, -99.1582, 0.28", "117.31, -72.1027, -100.588, 0.55", "119.003, -73.3685, -102.473, 0.55", "121.305, -74.7637, -103.131, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "106.428, -63.9917, -87.2188, 0.55", "107.158, -65.0635, -88.3263, 0.55", "107.391, -65.5355, -88.8362, 0.28", "107.749, -66.3385, -89.7372, 0.55", "108.537, -68.1076, -91.7222, 0.28", "109.083, -69.3336, -93.0978, 0.55", "110.009, -71.4108, -95.4284, 0.28", "111.103, -73.9254, -98.5097, 0.28", "111.556, -75.0744, -99.9623, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "124.551, -23.1406, -44.1404, 0.28", "126.467, -26.5603, -45.7641, 0.28", "128.838, -31.3087, -47.6033, 0.28", "130.319, -34.4625, -48.6993, 0.55", "131.239, -36.272, -49.2438, 0.28", "131.725, -37.2506, -49.5298, 0.28", "134.142, -42.0396, -50.9965, 0.55", "134.7, -43.1921, -51.2218, 0.28", "135.962, -46.3159, -51.6691, 0.55", "137.034, -48.9665, -52.1316, 0.28", "137.998, -51.1111, -52.5392, 0.55", "139.125, -53.5825, -53.1348, 0.55", "140.937, -57.2233, -54.43, 0.55", "141.372, -58.095, -54.772, 0.55", "142.906, -61.314, -56.0742, 0.28", "143.488, -62.6005, -56.6321, 0.55", "144.331, -64.2536, -57.3529, 0.28", "145.522, -66.5293, -58.4617, 0.55", "147.553, -69.7842, -60.6437, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "124.551, -23.1406, -44.1404, 0.55", "121.328, -22.9013, -43.8813, 0.55", "118.71, -22.7069, -43.6708, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.767802, -33.7064, 4.51665, 0.83", "-0.700176, -33.9238, 4.46222, 0.83", "0.204387, -35.8793, 3.99514, 0.83", "0.959291, -37.5867, 3.48058, 0.55", "1.56154, -38.9489, 3.07007, 0.55", "2.84165, -41.8442, 2.19753, 0.83", "4.39433, -45.356, 1.13919, 0.55", "5.26392, -47.2003, 0.602692, 0.83", "6.88999, -50.1603, -0.202418, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.767802, -33.7064, 4.51665, 0.55", "-2.94242, -34.2811, 2.90941, 0.55", "-5.27661, -34.898, 1.18423, 0.55", "-8.03214, -35.6263, -0.852352, 0.55", "-11.3783, -36.5106, -3.32543, 0.55", "-13.2771, -37.0124, -4.72881, 0.55", "-13.6585, -37.1132, -5.01073, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.2554, -124.432, 93.5251, 0.55", "-15.2431, -132.773, 99.802, 0.55", "-13.6225, -141.528, 105.21, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.2554, -124.432, 93.5251, 0.55", "-16.3296, -133.486, 98.8049, 0.55", "-17.7688, -142.254, 104.484, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-62.948, 47.5968, -12.7007, 0.28", "-63.9321, 48.9113, -11.4767, 0.28", "-64.2932, 49.4189, -10.9544, 0.55", "-65.3184, 50.8962, -9.41297, 0.28", "-65.841, 51.6162, -8.72368, 0.55", "-67.2827, 53.5523, -6.92545, 0.28", "-68.7479, 55.5201, -5.09779, 0.55", "-71.1523, 58.6168, -2.01945, 0.28", "-71.6645, 59.2818, -1.3641, 0.55", "-72.8086, 60.8261, 0.0103872, 0.28", "-73.257, 61.4652, 0.544805, 0.55", "-78.3254, 65.6449, 5.52324, 0.55", "-84.3181, 70.3222, 8.64437, 0.55", "-89.3353, 75.4601, 12.6303, 0.55", "-93.4189, 81.6268, 16.1253, 0.55", "-98.3927, 87.322, 19.2732, 0.55", "-103.791, 91.8799, 23.4918, 0.55", "-108.424, 96.0771, 28.8681, 0.55", "-112.062, 99.7355, 35.3207, 0.55", "-115.8, 103.801, 41.4535, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-62.948, 47.5968, -12.7007, 0.55", "-66.319, 46.2795, -10.3492, 0.55", "-68.0636, 45.5301, -9.12083, 0.28", "-69.3619, 44.9724, -8.20672, 0.55", "-70.444, 44.5076, -7.44486, 0.28", "-71.2019, 44.1821, -6.91122, 0.55", "-73.2918, 43.2843, -5.43974, 0.28", "-74.696, 42.5218, -4.63861, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-126.495, -46.5774, -23.9518, 0.55", "-128.785, -51.5284, -24.7015, 0.55", "-130.999, -56.5634, -24.8236, 0.55", "-132.741, -61.6661, -25.912, 0.55", "-135.083, -66.633, -26.2992, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-126.495, -46.5774, -23.9518, 0.55", "-129.359, -50.2929, -29.0687, 0.55", "-131.818, -53.1931, -34.901, 0.55", "-134.928, -56.7728, -39.975, 0.55", "-139.405, -59.2141, -44.724, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-137.366, -50.9702, -38.8238, 0.55", "-143.574, -50.3256, -45.8613, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-137.366, -50.9702, -38.8238, 0.55", "-140.409, -58.1318, -41.2695, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "121.305, -74.7637, -103.131, 0.28", "124.228, -75.7407, -104.319, 0.28", "125.586, -76.1945, -104.87, 0.55", "128.174, -77.0599, -105.922, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "121.305, -74.7637, -103.131, 0.55", "120.952, -76.0682, -104.922, 0.55", "120.246, -78.6774, -108.504, 0.28", "120.017, -79.5274, -109.67, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "111.556, -75.0744, -99.9623, 0.28", "112.674, -77.2266, -103.164, 0.28", "113.228, -78.2922, -104.749, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "111.556, -75.0744, -99.9623, 0.55", "110.115, -75.5599, -99.5365, 0.55", "106.094, -76.9138, -98.3492, 0.28", "105.139, -77.2355, -98.0671, 0.55", "102.527, -78.1153, -97.2955, 0.28", "100.843, -78.6825, -96.7982, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.88999, -50.1603, -0.202418, 0.83", "6.8807, -50.5373, -0.269661, 0.83", "6.87364, -55.4816, -1.03822, 0.83", "6.62777, -59.1692, -1.28373, 0.83", "6.25915, -62.7241, -1.08188, 0.83", "5.71461, -67.4557, -0.409762, 0.83", "5.00165, -72.9026, 0.60957, 0.83", "4.32952, -79.0, 2.05399, 0.83", "3.76249, -84.9344, 3.72542, 0.83", "2.55006, -92.1717, 5.7588, 0.83", "1.75445, -95.4726, 6.5632, 0.83", "1.09759, -97.9477, 7.01506, 0.83", "-0.294681, -102.683, 7.81322, 0.83", "-1.51585, -106.923, 8.26146, 0.83", "-3.94681, -115.968, 8.0485, 0.83", "-5.42191, -120.893, 7.26621, 0.83", "-6.88889, -125.416, 6.21214, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.88999, -50.1603, -0.202418, 0.55", "6.29157, -51.3765, 0.185317, 0.55", "5.87863, -52.2576, 0.536728, 0.55", "5.65768, -52.8222, 0.808323, 0.55", "5.39555, -53.7096, 1.29469, 0.55", "4.97704, -55.4706, 2.34291, 0.55", "4.7237, -56.8013, 3.28169, 0.55", "4.57911, -57.8673, 4.14239, 0.55", "4.44672, -58.9407, 5.09782, 0.55", "4.35344, -59.8298, 5.93855, 0.28", "4.32127, -60.5544, 6.73285, 0.55", "4.32801, -61.8684, 8.3721, 0.55", "4.33431, -62.6685, 9.48349, 0.55", "4.33072, -63.1162, 10.1043, 0.55", "4.2862, -63.6417, 10.8232, 0.83", "4.08629, -65.1992, 12.8598, 0.28", "4.01328, -65.7149, 13.5197, 0.55", "3.89407, -66.6491, 14.6661, 0.28", "3.86849, -66.937, 15.04, 0.55", "3.83833, -67.6171, 15.8853, 0.28", "3.80897, -68.0044, 16.337, 0.55", "3.46239, -69.2591, 17.5163, 0.55", "4.04039, -72.7212, 21.5517, 0.55", "4.96147, -76.0376, 25.653, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.6585, -37.1132, -5.01073, 0.55", "-17.0921, -37.712, -6.63477, 0.55", "-18.0871, -37.8297, -7.07759, 0.55", "-20.5629, -38.1311, -8.11951, 0.55", "-25.9122, -38.6795, -10.2273, 0.28", "-26.6945, -38.7498, -10.5033, 0.55", "-29.9328, -39.1209, -11.5606, 0.55", "-34.2578, -39.6559, -12.6858, 0.55", "-35.8977, -39.822, -13.0842, 0.28", "-37.3045, -39.8948, -13.3675, 0.28", "-39.6135, -40.0007, -13.5974, 0.55", "-42.45, -40.0131, -13.9591, 0.28", "-45.0689, -39.8357, -14.3343, 0.55", "-47.0684, -39.5629, -14.5888, 0.55", "-48.4485, -39.276, -14.7961, 0.55", "-52.5246, -38.2729, -15.4983, 0.55", "-56.7669, -36.9807, -16.1642, 0.55", "-58.4985, -36.3687, -16.4013, 0.28", "-60.1552, -35.8073, -16.6522, 0.55", "-63.5256, -34.8537, -17.1386, 0.28", "-64.6593, -34.5609, -17.2937, 0.83", "-66.7319, -34.0026, -17.4655, 0.28", "-68.1758, -33.7101, -17.4304, 0.55", "-70.2659, -33.3533, -17.3451, 0.28", "-71.0885, -33.2036, -17.2873, 0.55", "-72.5888, -32.958, -17.1095, 0.55", "-74.8044, -32.386, -16.7582, 0.55", "-76.2143, -31.9349, -16.4528, 0.28", "-77.3033, -31.4437, -16.1192, 0.55", "-78.5721, -30.7071, -15.727, 0.28", "-78.7818, -30.5685, -15.6688, 0.55", "-80.8463, -29.2177, -15.4536, 0.28", "-82.4007, -28.1966, -15.4407, 0.55", "-84.5389, -26.7051, -15.6668, 0.83", "-86.3637, -25.4271, -16.0178, 0.28", "-86.8506, -25.0965, -16.1463, 0.55", "-90.6559, -22.5923, -17.2973, 0.28", "-91.3431, -22.1587, -17.55, 0.55", "-93.3969, -20.7636, -18.3886, 0.28", "-93.9283, -20.4042, -18.608, 0.55", "-95.2637, -19.4774, -19.1009, 0.28", "-96.191, -18.8162, -19.4039, 0.55", "-98.1675, -17.3603, -19.8367, 0.28", "-99.3356, -16.5694, -20.058, 0.55", "-101.802, -15.0244, -20.4231, 0.28", "-102.538, -14.5999, -20.5229, 0.55", "-103.687, -14.0142, -20.6457, 0.28", "-104.645, -13.5238, -20.7099, 0.55", "-106.598, -12.5379, -20.742, 0.28", "-107.181, -12.2543, -20.7352, 0.55", "-111.433, -10.0858, -20.5064, 0.28", "-112.865, -9.23805, -20.3082, 0.55", "-115.34, -7.62094, -19.801, 0.28", "-116.436, -6.85112, -19.5387, 0.55", "-118.892, -5.11694, -18.7985, 0.28", "-119.782, -4.52548, -18.4888, 0.55", "-122.963, -2.70537, -17.2017, 0.28", "-124.306, -2.12471, -16.6561, 0.55", "-126.255, -1.62948, -15.8617, 0.55", "-127.451, -1.4064, -15.3465, 0.55", "-129.811, -1.03476, -14.1135, 0.28", "-132.064, -0.708427, -12.7536, 0.28", "-133.912, -0.434471, -11.5639, 0.55", "-136.008, 0.0957016, -9.8472, 0.28", "-136.939, 0.500073, -8.83942, 0.55", "-138.935, 1.92015, -6.16048, 0.28", "-139.715, 2.92286, -4.44702, 0.55", "-140.07, 3.70765, -3.14456, 0.28", "-140.296, 4.56459, -1.4456, 0.55", "-140.461, 5.67161, 0.828683, 0.28", "-140.534, 6.06048, 1.68606, 0.55", "-141.189, 7.82295, 5.84172, 0.28", "-141.425, 8.37756, 7.23505, 0.55", "-141.96, 9.5946, 10.5966, 0.28", "-142.254, 10.2396, 12.4224, 0.55", "-142.499, 10.7682, 13.9221, 0.55", "-142.816, 11.3932, 15.687, 0.28", "-143.06, 11.7226, 16.5178, 0.55", "-143.966, 12.9178, 19.1934, 0.28", "-144.402, 13.6809, 20.6147, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-13.6585, -37.1132, -5.01073, 0.55", "-13.7194, -37.2442, -6.53488, 0.55", "-13.714, -37.2214, -8.06622, 0.55", "-13.5938, -37.08, -9.96931, 0.55", "-13.414, -36.8571, -11.5112, 0.55", "-11.3704, -34.5165, -21.4755, 0.55", "-10.8973, -33.7541, -23.7276, 0.55", "-10.223, -32.4019, -27.0718, 0.55", "-9.74743, -31.3715, -29.4418, 0.55", "-9.22353, -30.2519, -31.7272, 0.28", "-8.24627, -28.368, -35.171, 0.55", "-6.52786, -25.4506, -40.1775, 0.28", "-6.48157, -25.266, -40.6676, 0.55", "-7.05436, -24.5506, -43.9677, 0.28", "-7.8303, -24.1667, -46.1233, 0.55", "-8.90988, -23.9001, -48.3844, 0.55", "-10.9335, -23.6359, -52.4302, 0.55", "-14.89, -23.1797, -60.3829, 0.55", "-17.4592, -22.9413, -65.7719, 0.55", "-18.2982, -22.8811, -67.6555, 0.55", "-23.5069, -22.4073, -80.156, 0.55", "-24.7681, -22.2402, -83.596, 0.55", "-25.3308, -22.1594, -85.5789, 0.55", "-26.2529, -22.1202, -90.3202, 0.55", "-27.8631, -22.6425, -101.849, 0.55", "-28.1774, -22.9153, -104.976, 0.28", "-28.2298, -23.1573, -106.772, 0.55", "-28.2682, -23.6216, -109.439, 0.28", "-28.2129, -23.9217, -110.538, 0.55", "-27.2967, -25.3448, -113.668, 0.28", "-25.7225, -27.3387, -115.129, 0.55", "-24.7498, -28.7444, -115.93, 0.28", "-23.7977, -30.2847, -116.531, 0.55", "-22.9433, -31.9438, -116.972, 0.28", "-22.599, -32.7876, -117.179, 0.55", "-21.7771, -34.991, -117.576, 0.28", "-21.6261, -35.6361, -117.759, 0.55", "-20.8834, -39.3159, -118.981, 0.28", "-20.6132, -41.0033, -119.765, 0.55", "-20.1363, -44.5829, -121.867, 0.28", "-19.9905, -45.8926, -122.803, 0.55", "-19.502, -50.1827, -126.205, 0.28", "-19.4014, -51.2222, -127.076, 0.55", "-19.2309, -54.4962, -129.892, 0.28", "-19.1991, -55.2653, -130.473, 0.55", "-19.1663, -57.2941, -131.954, 0.28", "-19.2002, -58.4617, -132.924, 0.55", "-19.2478, -59.6029, -133.982, 0.55", "-19.332, -61.8816, -136.079, 0.28", "-19.3549, -63.2864, -137.601, 0.55", "-19.2269, -66.7731, -142.545, 0.28", "-19.1624, -67.8927, -144.53, 0.55", "-19.0825, -68.6037, -145.894, 0.28", "-18.9656, -69.2522, -147.271, 0.55", "-18.4933, -71.0697, -151.494, 0.28", "-18.0862, -72.4886, -154.648, 0.55", "-17.1901, -75.2316, -159.802, 0.28", "-16.8999, -76.0858, -161.421, 0.55", "-16.1616, -77.6791, -164.374, 0.28", "-15.8629, -78.2093, -165.309, 0.55", "-15.1984, -79.0837, -166.645, 0.28", "-14.5343, -79.8338, -167.745, 0.55", "-12.4766, -81.739, -170.465, 0.28", "-10.0478, -83.7818, -173.538, 0.28", "-8.7154, -84.7458, -174.987, 0.28", "-7.43625, -85.6471, -176.541, 0.55", "-5.55183, -86.8362, -178.824, 0.28", "-4.69302, -87.3494, -179.818, 0.83", "-2.43119, -88.7122, -182.255, 0.28", "-1.50505, -89.3261, -183.374, 0.55", "2.34235, -92.221, -188.516, 0.28", "4.09948, -93.6783, -191.281, 0.28", "5.28059, -94.7224, -193.404, 0.55", "5.86533, -95.3419, -194.753, 0.55", "7.22164, -97.0029, -198.538, 0.28", "8.37179, -98.6839, -202.172, 0.55", "9.40209, -100.304, -205.48, 0.28", "10.2282, -101.791, -208.575, 0.55", "10.9253, -102.997, -211.125, 0.28", "11.5889, -103.867, -213.143, 0.55", "13.3779, -105.749, -217.869, 0.28", "14.35, -106.709, -220.198, 0.55", "15.8947, -108.174, -223.606, 0.28", "17.2176, -109.303, -226.349, 0.55", "20.358, -111.67, -232.782, 0.28", "21.5412, -112.471, -235.532, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.6225, -141.528, 105.21, 0.55", "-12.8466, -147.481, 108.867, 0.55", "-10.514, -153.505, 111.587, 0.55", "-9.1005, -159.541, 114.878, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.6225, -141.528, 105.21, 0.55", "-12.6505, -149.347, 111.32, 0.55", "-13.2428, -156.114, 118.673, 0.55", "-14.0426, -161.259, 127.28, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.7688, -142.254, 104.484, 0.55", "-18.0248, -148.504, 107.839, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.7688, -142.254, 104.484, 0.55", "-19.6113, -149.863, 109.725, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.88889, -125.416, 6.21214, 0.83", "-6.36053, -128.74, 6.59928, 0.83", "-5.79014, -131.556, 7.13486, 0.83", "-5.22317, -134.355, 7.66723, 0.83", "-4.68472, -137.013, 8.17281, 0.83", "-3.85494, -141.109, 8.95195, 0.83", "-3.03116, -145.175, 9.72545, 0.83", "-2.2768, -147.89, 10.5869, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.88889, -125.416, 6.21214, 0.55", "-5.27814, -128.078, 5.82716, 0.55", "-4.1079, -130.142, 5.18734, 0.55", "-3.33679, -131.659, 4.58177, 0.55", "-2.7343, -133.408, 3.70412, 0.83", "-2.22378, -135.378, 2.49368, 0.55", "-1.72443, -137.304, 1.30972, 0.83", "-1.33643, -139.376, -0.144853, 0.55", "-1.13498, -140.575, -1.10078, 0.83", "-0.704482, -144.43, -4.46797, 0.55", "-0.655822, -147.429, -7.25575, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.96147, -76.0376, 25.653, 0.55", "3.9432, -82.8836, 32.2538, 0.55", "2.05715, -88.671, 39.6769, 0.55", "-0.0601281, -93.5071, 47.7283, 0.55", "-2.63543, -97.1578, 56.2894, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.96147, -76.0376, 25.653, 0.55", "5.63577, -81.9287, 31.8416, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.2768, -147.89, 10.5869, 0.55", "-2.24894, -150.087, 11.1245, 0.55", "-2.12814, -152.897, 11.8736, 0.55", "-2.01479, -155.551, 12.566, 0.55", "-1.95938, -157.435, 13.0316, 0.55", "-1.90423, -160.794, 13.8138, 0.55", "-1.63084, -170.241, 15.752, 0.55", "-1.47515, -173.453, 16.2611, 0.55", "-1.36936, -175.715, 16.5038, 0.55", "-1.25041, -178.297, 16.5684, 0.55", "-1.21257, -180.288, 16.4426, 0.55", "-1.0059, -184.946, 15.9367, 0.55", "-0.974692, -188.473, 15.5625, 0.55", "-0.88291, -190.795, 15.3789, 0.55", "-0.630649, -196.821, 15.219, 0.55", "-0.466208, -200.875, 15.297, 0.55", "-0.194314, -206.108, 15.6929, 0.55", "0.246128, -212.061, 16.5963, 0.55", "0.74982, -216.054, 17.4263, 0.55", "1.11223, -218.418, 17.9734, 0.55", "1.40503, -220.596, 18.4763, 0.55", "1.80732, -223.353, 18.9768, 0.55", "2.64423, -229.986, 19.7403, 0.55", "3.04406, -232.557, 19.929, 0.55", "3.4183, -235.415, 20.1279, 0.55", "3.94212, -239.703, 20.4086, 0.55", "4.19412, -242.99, 20.6751, 0.55", "4.24619, -246.099, 20.91, 0.55", "4.16211, -249.054, 21.1509, 0.55", "4.03494, -251.934, 21.435, 0.55", "3.95465, -253.985, 21.6147, 0.55", "3.83072, -257.34, 21.7876, 0.55", "3.58812, -261.357, 21.6882, 0.55", "3.50465, -263.308, 21.4828, 0.55", "3.43524, -265.02, 21.1666, 0.55", "3.43382, -268.256, 20.3538, 0.55", "3.40487, -270.305, 19.7822, 0.55", "3.40957, -272.835, 19.1727, 0.55", "3.35671, -274.611, 18.8637, 0.55", "3.15511, -279.226, 18.2567, 0.55", "2.94587, -282.68, 18.068, 0.55", "2.58145, -288.031, 18.2383, 0.55", "2.46047, -291.497, 18.6743, 0.55", "2.31843, -295.136, 19.2568, 0.28", "2.23126, -296.597, 19.5571, 0.28", "2.03942, -300.15, 20.6185, 0.28", "1.86092, -303.435, 21.8697, 0.28", "2.08388, -307.815, 23.9341, 0.28", "3.6023, -317.705, 25.8693, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.2768, -147.89, 10.5869, 0.55", "-0.578511, -148.659, 11.1368, 0.55", "2.85129, -150.532, 12.5271, 0.55", "5.77757, -152.33, 13.8574, 0.28", "8.89455, -154.353, 15.3839, 0.55", "10.7327, -155.625, 16.5747, 0.28", "13.8657, -157.895, 18.9608, 0.55", "15.0853, -159.049, 20.3737, 0.28", "15.5088, -159.464, 20.9822, 0.28", "16.2506, -160.067, 22.0453, 0.55", "19.254, -162.097, 25.8915, 0.28", "20.5572, -162.901, 27.463, 0.55", "24.6598, -165.27, 31.6483, 0.28", "26.9508, -166.464, 33.7275, 0.28", "29.8536, -167.997, 36.1221, 0.55", "34.2726, -170.377, 39.2532, 0.28", "34.888, -170.696, 39.6049, 0.55", "37.967, -172.264, 41.1136, 0.28", "38.2526, -172.41, 41.2177, 0.55", "40.7214, -174.048, 42.2208, 0.28", "41.8721, -174.923, 42.7755, 0.55", "51.3849, -181.484, 47.4254, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.63543, -97.1578, 56.2894, 0.55", "-3.13174, -101.398, 67.1475, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.63543, -97.1578, 56.2894, 0.55", "-5.58816, -104.007, 64.7428, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BP_4bf5a32d90_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.07628, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.44777, 8.43992, 2.91911, 0.83 ) }
    dend_43 { pt3dadd( -6.79862, 10.9722, 3.42446, 1.11 ) }
    dend_43 { pt3dadd( -8.77431, 12.4642, 3.68734, 0.83 ) }
    dend_43 { pt3dadd( -10.6938, 13.9012, 3.92287, 0.83 ) }
    dend_43 { pt3dadd( -11.8303, 14.7206, 4.05194, 1.11 ) }
    dend_43 { pt3dadd( -15.3891, 17.2812, 4.4656, 1.11 ) }
    dend_43 { pt3dadd( -21.7545, 21.6649, 5.19683, 0.83 ) }
    dend_43 { pt3dadd( -24.0477, 23.184, 5.43829, 0.83 ) }
    dend_43 { pt3dadd( -25.8637, 24.3512, 5.58828, 0.83 ) }
    dend_43 { pt3dadd( -27.6346, 25.508, 5.71811, 0.83 ) }
    dend_43 { pt3dadd( -29.0761, 26.4614, 5.78815, 0.55 ) }
    dend_43 { pt3dadd( -30.1596, 27.1069, 5.85925, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.31578, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.5124, 6.05249, -6.19831, 0.55 ) }
    dend_28 { pt3dadd( 7.05634, 6.58904, -6.76641, 0.55 ) }
    dend_28 { pt3dadd( 8.53249, 6.72448, -7.51814, 0.83 ) }
    dend_28 { pt3dadd( 10.8688, 6.86862, -8.91453, 0.55 ) }
    dend_28 { pt3dadd( 11.9965, 6.9382, -9.58859, 1.38 ) }
    dend_28 { pt3dadd( 14.7695, 7.10928, -11.2459, 0.55 ) }
    dend_28 { pt3dadd( 15.9505, 7.05135, -12.0367, 0.83 ) }
    dend_28 { pt3dadd( 22.0597, 5.9889, -16.4799, 0.55 ) }
    dend_28 { pt3dadd( 22.6508, 5.84603, -16.9687, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.03197, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.688118, -10.5636, 3.3589, 1.11 ) }
    dend_1 { pt3dadd( -0.744042, -15.3745, 5.12781, 1.11 ) }
    dend_1 { pt3dadd( -0.766818, -17.3338, 5.84822, 0.83 ) }
    dend_1 { pt3dadd( -0.797076, -19.9368, 6.80533, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.41203, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.939099, 9.56271, -1.38726, 1.11 ) }
    dend_0 { pt3dadd( 1.09466, 11.4576, -1.38024, 1.11 ) }
    dend_0 { pt3dadd( 1.35555, 14.5486, -1.25263, 1.38 ) }
    dend_0 { pt3dadd( 1.37354, 14.7206, -1.24278, 1.38 ) }
    dend_0 { pt3dadd( 1.72974, 16.8438, -1.11653, 0.83 ) }
    dend_0 { pt3dadd( 2.21589, 19.0845, -0.87283, 0.83 ) }
    dend_0 { pt3dadd( 3.02806, 21.6036, -0.313784, 0.83 ) }
    dend_0 { pt3dadd( 3.47392, 22.5536, 0.00292551, 0.83 ) }
    dend_0 { pt3dadd( 3.90191, 23.2373, 0.291228, 1.11 ) }
    dend_0 { pt3dadd( 5.12579, 24.8956, 1.01816, 0.55 ) }
    dend_0 { pt3dadd( 6.54604, 26.6207, 1.89081, 0.83 ) }
    dend_0 { pt3dadd( 8.36385, 28.3811, 2.85111, 0.55 ) }
    dend_0 { pt3dadd( 9.27561, 29.1061, 3.27341, 0.83 ) }
    dend_0 { pt3dadd( 10.5612, 30.0859, 3.95096, 0.55 ) }
    dend_0 { pt3dadd( 12.1685, 31.3331, 4.88716, 0.55 ) }
    dend_0 { pt3dadd( 14.4395, 33.2158, 6.34421, 0.55 ) }
    dend_0 { pt3dadd( 16.9456, 35.3712, 7.95378, 0.55 ) }
    dend_0 { pt3dadd( 18.5589, 36.7702, 9.19259, 0.55 ) }
    dend_0 { pt3dadd( 20.5754, 38.5396, 10.9782, 0.55 ) }
    dend_0 { pt3dadd( 20.9994, 38.8936, 11.3879, 0.83 ) }
    dend_0 { pt3dadd( 22.1305, 39.8285, 12.5527, 0.55 ) }
    dend_0 { pt3dadd( 23.07, 40.555, 13.4595, 0.83 ) }
    dend_0 { pt3dadd( 25.255, 42.5555, 15.6181, 0.55 ) }
    dend_0 { pt3dadd( 26.0486, 43.2866, 16.227, 0.83 ) }
    dend_0 { pt3dadd( 26.7608, 43.8206, 16.6151, 0.55 ) }
    dend_0 { pt3dadd( 27.4497, 44.2775, 16.8923, 0.83 ) }
    dend_0 { pt3dadd( 28.9504, 45.1186, 17.3581, 0.83 ) }
    dend_0 { pt3dadd( 30.9131, 46.2671, 17.8092, 0.83 ) }
    dend_0 { pt3dadd( 32.1021, 47.0308, 17.9633, 0.55 ) }
    dend_0 { pt3dadd( 33.0125, 47.6963, 18.0859, 0.55 ) }
    dend_0 { pt3dadd( 35.3932, 49.4148, 18.373, 0.83 ) }
    dend_0 { pt3dadd( 36.9221, 50.5168, 18.4993, 0.55 ) }
    dend_0 { pt3dadd( 39.228, 52.1288, 18.6007, 0.55 ) }
    dend_0 { pt3dadd( 41.3243, 53.4741, 18.6119, 0.55 ) }
    dend_0 { pt3dadd( 43.1898, 54.6104, 18.573, 0.55 ) }
    dend_0 { pt3dadd( 45.528, 55.9359, 18.4193, 0.55 ) }
    dend_0 { pt3dadd( 46.9442, 56.575, 18.2795, 0.55 ) }
    dend_0 { pt3dadd( 47.8906, 56.9286, 18.0699, 0.55 ) }
    dend_0 { pt3dadd( 49.124, 57.173, 17.6846, 0.55 ) }
    dend_0 { pt3dadd( 50.9308, 57.2385, 16.9549, 0.55 ) }
    dend_0 { pt3dadd( 52.0454, 57.1337, 16.4544, 0.55 ) }
    dend_0 { pt3dadd( 53.6901, 56.9341, 15.8428, 0.55 ) }
    dend_0 { pt3dadd( 56.8698, 56.6535, 14.9689, 0.55 ) }
    dend_0 { pt3dadd( 59.396, 56.548, 14.4652, 0.55 ) }
    dend_0 { pt3dadd( 62.1019, 56.5617, 14.0933, 0.55 ) }
    dend_0 { pt3dadd( 63.8594, 56.6278, 13.992, 0.55 ) }
    dend_0 { pt3dadd( 68.4839, 57.1989, 14.0267, 0.55 ) }
    dend_0 { pt3dadd( 71.2572, 57.7374, 14.2487, 0.55 ) }
    dend_0 { pt3dadd( 73.3692, 58.2687, 14.603, 0.55 ) }
    dend_0 { pt3dadd( 74.6668, 58.79, 14.8661, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 76.1767, 59.5816, 15.1648, 0.55 ) }
    dend_0 { pt3dadd( 78.7097, 61.16, 15.4576, 0.55 ) }
    dend_0 { pt3dadd( 79.2801, 61.5417, 15.449, 0.55 ) }
    dend_0 { pt3dadd( 80.8986, 62.5591, 15.3203, 0.55 ) }
    dend_0 { pt3dadd( 82.3908, 63.6517, 15.197, 0.83 ) }
    dend_0 { pt3dadd( 83.2037, 64.2585, 15.1173, 0.55 ) }
    dend_0 { pt3dadd( 84.4191, 65.3067, 14.9514, 0.83 ) }
    dend_0 { pt3dadd( 91.0648, 70.8957, 15.7172, 0.83 ) }
    dend_0 { pt3dadd( 96.8395, 77.3781, 15.9595, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -30.1596, 27.1069, 5.85925, 0.55 ) }
    dend_55 { pt3dadd( -32.4433, 27.7109, 5.19236, 0.55 ) }
    dend_55 { pt3dadd( -34.9266, 28.3676, 4.46719, 0.55 ) }
    dend_55 { pt3dadd( -37.9233, 29.1602, 3.59207, 0.55 ) }
    dend_55 { pt3dadd( -40.3979, 29.8146, 2.86945, 0.83 ) }
    dend_55 { pt3dadd( -42.4715, 30.3631, 2.2639, 0.55 ) }
    dend_55 { pt3dadd( -46.3205, 31.381, 1.13991, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -30.1596, 27.1069, 5.85925, 0.55 ) }
    dend_44 { pt3dadd( -32.0451, 27.4883, 5.55946, 0.55 ) }
    dend_44 { pt3dadd( -34.0623, 27.8191, 5.43783, 0.55 ) }
    dend_44 { pt3dadd( -36.3524, 28.1869, 5.35563, 0.55 ) }
    dend_44 { pt3dadd( -39.6849, 28.6646, 5.53934, 0.55 ) }
    dend_44 { pt3dadd( -42.4842, 28.9724, 5.88584, 0.55 ) }
    dend_44 { pt3dadd( -45.4269, 29.2431, 6.37121, 0.55 ) }
    dend_44 { pt3dadd( -48.2883, 29.2984, 7.13308, 0.55 ) }
    dend_44 { pt3dadd( -50.7654, 29.0994, 8.00996, 0.55 ) }
    dend_44 { pt3dadd( -53.8702, 28.6228, 9.41512, 0.55 ) }
    dend_44 { pt3dadd( -55.2303, 28.309, 10.2045, 0.55 ) }
    dend_44 { pt3dadd( -56.7025, 27.9511, 11.1178, 0.55 ) }
    dend_44 { pt3dadd( -59.2954, 27.1415, 12.6023, 0.55 ) }
    dend_44 { pt3dadd( -60.6646, 26.7285, 13.1812, 0.55 ) }
    dend_44 { pt3dadd( -62.0988, 26.2545, 13.7767, 0.55 ) }
    dend_44 { pt3dadd( -63.7956, 25.7225, 14.3167, 0.55 ) }
    dend_44 { pt3dadd( -65.6369, 25.1845, 14.8562, 0.55 ) }
    dend_44 { pt3dadd( -68.2619, 24.4141, 15.5693, 0.55 ) }
    dend_44 { pt3dadd( -71.7505, 23.6309, 16.2256, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.6508, 5.84603, -16.9687, 0.55 ) }
    dend_34 { pt3dadd( 28.5612, 7.52126, -18.2436, 0.55 ) }
    dend_34 { pt3dadd( 31.9798, 8.27711, -19.4582, 0.55 ) }
    dend_34 { pt3dadd( 35.3595, 8.87298, -20.7028, 0.55 ) }
    dend_34 { pt3dadd( 37.6718, 9.18966, -21.5503, 0.55 ) }
    dend_34 { pt3dadd( 41.0537, 9.57638, -22.7612, 0.55 ) }
    dend_34 { pt3dadd( 48.0763, 10.2401, -25.4901, 0.55 ) }
    dend_34 { pt3dadd( 56.0503, 10.9301, -29.1175, 0.55 ) }
    dend_34 { pt3dadd( 59.928, 11.0216, -31.1396, 0.55 ) }
    dend_34 { pt3dadd( 62.008, 11.0173, -32.3577, 0.55 ) }
    dend_34 { pt3dadd( 64.2892, 11.021, -33.786, 0.55 ) }
    dend_34 { pt3dadd( 68.3637, 10.9173, -36.3164, 0.55 ) }
    dend_34 { pt3dadd( 69.8467, 10.7938, -37.2825, 0.55 ) }
    dend_34 { pt3dadd( 76.1253, 10.4109, -41.8589, 0.55 ) }
    dend_34 { pt3dadd( 80.5705, 10.2005, -45.4275, 0.55 ) }
    dend_34 { pt3dadd( 83.1288, 10.1259, -47.5533, 0.55 ) }
    dend_34 { pt3dadd( 85.6812, 10.0297, -49.6711, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.6508, 5.84603, -16.9687, 0.83 ) }
    dend_29 { pt3dadd( 23.9009, 6.52638, -16.9586, 0.83 ) }
    dend_29 { pt3dadd( 24.6151, 6.91679, -16.9848, 0.55 ) }
    dend_29 { pt3dadd( 25.6665, 7.51945, -17.1099, 0.83 ) }
    dend_29 { pt3dadd( 26.374, 7.94336, -17.2139, 0.55 ) }
    dend_29 { pt3dadd( 27.3508, 8.55201, -17.3416, 0.83 ) }
    dend_29 { pt3dadd( 28.5267, 9.30302, -17.4512, 0.55 ) }
    dend_29 { pt3dadd( 29.1169, 9.63761, -17.485, 0.55 ) }
    dend_29 { pt3dadd( 30.4687, 10.2249, -17.4801, 0.83 ) }
    dend_29 { pt3dadd( 31.6916, 10.6056, -17.3273, 0.55 ) }
    dend_29 { pt3dadd( 32.3754, 10.8072, -17.1775, 0.83 ) }
    dend_29 { pt3dadd( 33.4033, 11.1245, -16.8443, 0.55 ) }
    dend_29 { pt3dadd( 34.8823, 11.5933, -16.1774, 0.55 ) }
    dend_29 { pt3dadd( 36.9328, 12.1358, -15.1535, 0.55 ) }
    dend_29 { pt3dadd( 38.8864, 12.5766, -14.0476, 0.55 ) }
    dend_29 { pt3dadd( 40.4337, 12.9081, -13.145, 0.55 ) }
    dend_29 { pt3dadd( 42.9852, 13.4653, -11.6429, 0.55 ) }
    dend_29 { pt3dadd( 44.8543, 13.922, -10.4999, 0.55 ) }
    dend_29 { pt3dadd( 45.9866, 14.2861, -9.76292, 0.55 ) }
    dend_29 { pt3dadd( 48.0799, 15.1604, -8.37338, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.797076, -19.9368, 6.80533, 0.83 ) }
    dend_11 { pt3dadd( -1.31579, -22.787, 6.74976, 0.83 ) }
    dend_11 { pt3dadd( -1.82116, -25.5639, 6.69562, 0.83 ) }
    dend_11 { pt3dadd( -2.38541, -28.6643, 6.63517, 0.83 ) }
    dend_11 { pt3dadd( -2.68006, -30.2833, 6.6036, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.797076, -19.9368, 6.80533, 0.55 ) }
    dend_2 { pt3dadd( -0.180409, -21.686, 8.10116, 0.55 ) }
    dend_2 { pt3dadd( 0.348009, -23.8319, 9.77279, 0.55 ) }
    dend_2 { pt3dadd( 0.59003, -26.6523, 12.0564, 0.55 ) }
    dend_2 { pt3dadd( 0.6032, -27.7501, 12.9705, 0.83 ) }
    dend_2 { pt3dadd( 0.354372, -30.5559, 15.6193, 0.55 ) }
    dend_2 { pt3dadd( 0.101975, -32.0071, 17.0093, 0.55 ) }
    dend_2 { pt3dadd( -0.456834, -34.8301, 19.8322, 0.83 ) }
    dend_2 { pt3dadd( -1.00342, -36.9285, 22.0588, 0.55 ) }
    dend_2 { pt3dadd( -1.61099, -38.6623, 23.8598, 0.55 ) }
    dend_2 { pt3dadd( -2.83433, -41.9475, 27.2055, 0.55 ) }
    dend_2 { pt3dadd( -3.80495, -44.566, 29.8409, 0.55 ) }
    dend_2 { pt3dadd( -4.54097, -46.6642, 31.986, 0.55 ) }
    dend_2 { pt3dadd( -5.19264, -48.8898, 34.1979, 0.28 ) }
    dend_2 { pt3dadd( -5.3821, -49.8155, 35.0869, 0.55 ) }
    dend_2 { pt3dadd( -5.68105, -51.5244, 36.6314, 0.28 ) }
    dend_2 { pt3dadd( -5.75173, -54.1861, 38.6357, 0.55 ) }
    dend_2 { pt3dadd( -8.21141, -63.0807, 45.6829, 0.55 ) }
    dend_2 { pt3dadd( -10.9574, -71.3046, 53.4449, 0.55 ) }
    dend_2 { pt3dadd( -13.2794, -78.0578, 62.6946, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -46.3205, 31.381, 1.13991, 0.55 ) }
    dend_61 { pt3dadd( -49.2256, 31.6571, 3.29323, 0.55 ) }
    dend_61 { pt3dadd( -50.4144, 31.7217, 4.3699, 0.83 ) }
    dend_61 { pt3dadd( -51.7639, 31.7456, 5.84322, 0.55 ) }
    dend_61 { pt3dadd( -52.7786, 31.776, 7.07851, 0.83 ) }
    dend_61 { pt3dadd( -55.4519, 31.9613, 10.2768, 0.55 ) }
    dend_61 { pt3dadd( -56.4643, 32.0519, 11.4951, 0.28 ) }
    dend_61 { pt3dadd( -58.1266, 32.2439, 13.6906, 0.55 ) }
    dend_61 { pt3dadd( -60.3604, 32.5154, 16.6225, 0.55 ) }
    dend_61 { pt3dadd( -62.072, 32.7113, 18.7563, 0.55 ) }
    dend_61 { pt3dadd( -64.3727, 32.9623, 21.5213, 0.28 ) }
    dend_61 { pt3dadd( -64.9851, 33.0228, 22.1551, 0.55 ) }
    dend_61 { pt3dadd( -66.263, 33.1583, 23.4107, 0.28 ) }
    dend_61 { pt3dadd( -67.1485, 33.2646, 24.1687, 0.55 ) }
    dend_61 { pt3dadd( -68.9839, 33.4474, 25.5441, 0.28 ) }
    dend_61 { pt3dadd( -70.0659, 33.4839, 26.297, 0.55 ) }
    dend_61 { pt3dadd( -71.9589, 33.4018, 27.6576, 0.28 ) }
    dend_61 { pt3dadd( -73.2377, 33.3318, 28.5235, 0.55 ) }
    dend_61 { pt3dadd( -80.3394, 32.6845, 37.6357, 0.55 ) }
    dend_61 { pt3dadd( -86.531, 31.0979, 47.2713, 0.55 ) }
    dend_61 { pt3dadd( -92.341, 28.4774, 56.9033, 0.55 ) }
    dend_61 { pt3dadd( -98.0856, 24.5196, 66.0804, 0.55 ) }
    dend_61 { pt3dadd( -102.423, 21.2399, 76.2538, 0.55 ) }
    dend_61 { pt3dadd( -107.703, 18.258, 86.0758, 0.55 ) }
    dend_61 { pt3dadd( -113.206, 17.1244, 96.1853, 0.55 ) }
    dend_61 { pt3dadd( -118.625, 15.093, 106.188, 0.55 ) }
    dend_61 { pt3dadd( -123.845, 13.8523, 116.432, 0.55 ) }
    dend_61 { pt3dadd( -128.478, 12.5226, 126.943, 0.55 ) }
    dend_61 { pt3dadd( -131.846, 10.0489, 137.707, 0.55 ) }
    dend_61 { pt3dadd( -135.371, 8.62216, 148.624, 0.55 ) }
    dend_61 { pt3dadd( -139.008, 6.03689, 159.272, 0.55 ) }
    dend_61 { pt3dadd( -141.22, 3.12143, 170.214, 0.55 ) }
    dend_61 { pt3dadd( -141.487, 1.17415, 181.595, 0.55 ) }
    dend_61 { pt3dadd( -141.629, -2.88294, 192.365, 0.55 ) }
    dend_61 { pt3dadd( -140.115, -7.02587, 202.991, 0.55 ) }
    dend_61 { pt3dadd( -139.217, -10.7288, 213.858, 0.55 ) }
    dend_61 { pt3dadd( -139.576, -13.6985, 224.996, 0.55 ) }
    dend_61 { pt3dadd( -142.467, -15.1185, 236.098, 0.55 ) }
    dend_61 { pt3dadd( -144.268, -17.7007, 247.202, 0.55 ) }
    dend_61 { pt3dadd( -143.968, -18.1985, 258.753, 0.55 ) }
    dend_61 { pt3dadd( -145.591, -18.0286, 270.208, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -46.3205, 31.381, 1.13991, 0.55 ) }
    dend_56 { pt3dadd( -48.1854, 31.6281, -0.521371, 0.55 ) }
    dend_56 { pt3dadd( -49.7324, 31.9354, -2.45703, 0.55 ) }
    dend_56 { pt3dadd( -51.235, 32.4043, -4.55005, 0.55 ) }
    dend_56 { pt3dadd( -52.176, 32.698, -5.86068, 0.55 ) }
    dend_56 { pt3dadd( -53.8923, 33.2336, -8.25141, 0.83 ) }
    dend_56 { pt3dadd( -55.1481, 33.6255, -10.0005, 0.55 ) }
    dend_56 { pt3dadd( -56.6853, 34.1424, -12.6064, 0.83 ) }
    dend_56 { pt3dadd( -57.3534, 34.5694, -14.1227, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -71.7505, 23.6309, 16.2256, 0.28 ) }
    dend_48 { pt3dadd( -72.6142, 22.0881, 15.849, 0.28 ) }
    dend_48 { pt3dadd( -73.0264, 21.4264, 15.6277, 0.28 ) }
    dend_48 { pt3dadd( -73.5611, 20.4919, 15.2811, 0.55 ) }
    dend_48 { pt3dadd( -74.0017, 19.6701, 14.9849, 0.28 ) }
    dend_48 { pt3dadd( -74.6515, 18.4178, 14.5509, 0.55 ) }
    dend_48 { pt3dadd( -76.459, 14.7355, 13.3413, 0.28 ) }
    dend_48 { pt3dadd( -77.0455, 13.4471, 12.8126, 0.55 ) }
    dend_48 { pt3dadd( -77.9321, 11.4651, 11.9296, 0.28 ) }
    dend_48 { pt3dadd( -78.4397, 10.2811, 11.347, 0.55 ) }
    dend_48 { pt3dadd( -78.7898, 9.46571, 10.9251, 0.28 ) }
    dend_48 { pt3dadd( -79.189, 8.52965, 10.4489, 0.55 ) }
    dend_48 { pt3dadd( -80.3927, 5.40375, 8.94426, 0.28 ) }
    dend_48 { pt3dadd( -80.7711, 4.4591, 8.45394, 0.55 ) }
    dend_48 { pt3dadd( -81.4328, 3.01882, 7.54594, 0.28 ) }
    dend_48 { pt3dadd( -81.9806, 2.09881, 6.87572, 0.28 ) }
    dend_48 { pt3dadd( -82.476, 1.48508, 6.39832, 0.55 ) }
    dend_48 { pt3dadd( -84.2128, -0.238083, 5.0928, 0.28 ) }
    dend_48 { pt3dadd( -85.0226, -0.935869, 4.57471, 0.55 ) }
    dend_48 { pt3dadd( -87.0038, -2.5218, 3.28444, 0.28 ) }
    dend_48 { pt3dadd( -88.9892, -3.92387, 2.09512, 0.28 ) }
    dend_48 { pt3dadd( -91.1512, -5.25881, 0.874532, 0.28 ) }
    dend_48 { pt3dadd( -92.1441, -5.76116, 0.400593, 0.55 ) }
    dend_48 { pt3dadd( -96.889, -11.4048, -2.84302, 0.55 ) }
    dend_48 { pt3dadd( -102.214, -17.1823, -4.61348, 0.55 ) }
    dend_48 { pt3dadd( -107.402, -22.6068, -7.5624, 0.55 ) }
    dend_48 { pt3dadd( -112.709, -27.5121, -11.1764, 0.55 ) }
    dend_48 { pt3dadd( -118.069, -31.8203, -15.4515, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -71.7505, 23.6309, 16.2256, 0.55 ) }
    dend_45 { pt3dadd( -72.2387, 23.5939, 16.2683, 0.55 ) }
    dend_45 { pt3dadd( -73.6235, 23.4845, 16.5665, 0.55 ) }
    dend_45 { pt3dadd( -74.1451, 23.4294, 16.7056, 0.55 ) }
    dend_45 { pt3dadd( -75.3731, 23.2634, 17.0501, 0.55 ) }
    dend_45 { pt3dadd( -77.2576, 23.03, 17.4903, 0.55 ) }
    dend_45 { pt3dadd( -78.2358, 22.9384, 17.7029, 0.28 ) }
    dend_45 { pt3dadd( -79.7573, 22.765, 18.0031, 0.55 ) }
    dend_45 { pt3dadd( -80.8856, 22.6153, 18.1851, 0.55 ) }
    dend_45 { pt3dadd( -81.3622, 22.549, 18.2628, 0.28 ) }
    dend_45 { pt3dadd( -84.2207, 22.15, 18.7253, 0.55 ) }
    dend_45 { pt3dadd( -85.5538, 21.9069, 18.8584, 0.28 ) }
    dend_45 { pt3dadd( -87.3476, 21.5763, 18.9329, 0.28 ) }
    dend_45 { pt3dadd( -88.89, 21.3168, 18.9077, 0.55 ) }
    dend_45 { pt3dadd( -94.9555, 21.1139, 20.1448, 0.55 ) }
    dend_45 { pt3dadd( -100.843, 20.7334, 22.0266, 0.55 ) }
    dend_45 { pt3dadd( -106.428, 19.7142, 24.4965, 0.55 ) }
    dend_45 { pt3dadd( -111.859, 19.6884, 27.473, 0.55 ) }
    dend_45 { pt3dadd( -116.563, 19.4151, 31.4939, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -120.401, 19.4341, 36.3542, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 85.6812, 10.0297, -49.6711, 0.55 ) }
    dend_42 { pt3dadd( 89.2826, 10.8062, -52.8715, 0.55 ) }
    dend_42 { pt3dadd( 90.4366, 10.98, -53.9344, 0.55 ) }
    dend_42 { pt3dadd( 91.8892, 11.1605, -55.2316, 0.55 ) }
    dend_42 { pt3dadd( 94.5413, 11.4126, -57.7241, 0.55 ) }
    dend_42 { pt3dadd( 97.3371, 11.549, -60.3504, 0.55 ) }
    dend_42 { pt3dadd( 98.7229, 11.5299, -61.5646, 0.83 ) }
    dend_42 { pt3dadd( 99.8853, 11.4153, -62.6167, 0.55 ) }
    dend_42 { pt3dadd( 100.775, 11.2377, -63.4591, 0.83 ) }
    dend_42 { pt3dadd( 102.985, 10.5059, -65.5227, 0.55 ) }
    dend_42 { pt3dadd( 104.837, 9.75884, -67.1788, 0.55 ) }
    dend_42 { pt3dadd( 106.962, 8.9209, -68.9901, 0.55 ) }
    dend_42 { pt3dadd( 109.319, 8.02804, -71.069, 0.55 ) }
    dend_42 { pt3dadd( 110.91, 7.38614, -72.4852, 0.55 ) }
    dend_42 { pt3dadd( 112.709, 6.63947, -74.1295, 0.55 ) }
    dend_42 { pt3dadd( 114.261, 6.00477, -75.6597, 0.55 ) }
    dend_42 { pt3dadd( 115.23, 5.63723, -76.7603, 0.55 ) }
    dend_42 { pt3dadd( 116.538, 4.80126, -78.9924, 0.55 ) }
    dend_42 { pt3dadd( 117.279, 4.21663, -80.3717, 0.55 ) }
    dend_42 { pt3dadd( 118.005, 3.30043, -82.1735, 0.55 ) }
    dend_42 { pt3dadd( 119.092, 1.62316, -85.1825, 0.55 ) }
    dend_42 { pt3dadd( 119.327, 1.21548, -85.8508, 0.28 ) }
    dend_42 { pt3dadd( 122.325, -3.81177, -93.9367, 0.28 ) }
    dend_42 { pt3dadd( 123.282, -5.25261, -96.3169, 0.83 ) }
    dend_42 { pt3dadd( 126.955, -10.4673, -104.697, 0.83 ) }
    dend_42 { pt3dadd( 128.817, -13.0273, -108.523, 0.83 ) }
    dend_42 { pt3dadd( 129.681, -14.1108, -110.046, 0.55 ) }
    dend_42 { pt3dadd( 130.629, -15.1514, -111.526, 0.55 ) }
    dend_42 { pt3dadd( 133.033, -17.0136, -114.239, 0.55 ) }
    dend_42 { pt3dadd( 135.519, -18.5972, -116.609, 0.28 ) }
    dend_42 { pt3dadd( 136.191, -18.7085, -116.695, 0.55 ) }
    dend_42 { pt3dadd( 137.614, -18.6898, -116.45, 0.28 ) }
    dend_42 { pt3dadd( 138.474, -18.5791, -116.202, 0.55 ) }
    dend_42 { pt3dadd( 139.365, -18.4476, -115.868, 0.28 ) }
    dend_42 { pt3dadd( 140.422, -18.2237, -115.439, 0.55 ) }
    dend_42 { pt3dadd( 141.999, -17.8726, -114.989, 0.28 ) }
    dend_42 { pt3dadd( 143.277, -17.6414, -114.653, 0.55 ) }
    dend_42 { pt3dadd( 144.681, -17.3403, -114.423, 0.28 ) }
    dend_42 { pt3dadd( 146.602, -16.9858, -114.274, 0.55 ) }
    dend_42 { pt3dadd( 148.757, -16.5891, -114.249, 0.55 ) }
    dend_42 { pt3dadd( 150.658, -16.2646, -114.355, 0.28 ) }
    dend_42 { pt3dadd( 153.294, -15.8454, -114.648, 0.55 ) }
    dend_42 { pt3dadd( 157.867, -15.1787, -115.659, 0.55 ) }
    dend_42 { pt3dadd( 159.886, -14.8761, -116.374, 0.55 ) }
    dend_42 { pt3dadd( 160.753, -14.7463, -116.782, 0.83 ) }
    dend_42 { pt3dadd( 162.416, -14.5422, -117.707, 0.55 ) }
    dend_42 { pt3dadd( 163.567, -14.3839, -118.433, 0.83 ) }
    dend_42 { pt3dadd( 166.649, -13.897, -120.449, 0.55 ) }
    dend_42 { pt3dadd( 168.56, -13.7347, -121.681, 0.28 ) }
    dend_42 { pt3dadd( 169.368, -13.6794, -122.098, 0.55 ) }
    dend_42 { pt3dadd( 171.6, -13.6248, -122.939, 0.28 ) }
    dend_42 { pt3dadd( 172.392, -13.6511, -123.161, 0.55 ) }
    dend_42 { pt3dadd( 174.024, -13.7085, -123.356, 0.28 ) }
    dend_42 { pt3dadd( 175.693, -13.8092, -123.237, 0.55 ) }
    dend_42 { pt3dadd( 179.055, -13.9678, -122.401, 0.28 ) }
    dend_42 { pt3dadd( 180.606, -14.044, -121.843, 0.55 ) }
    dend_42 { pt3dadd( 182.927, -14.2303, -120.855, 0.28 ) }
    dend_42 { pt3dadd( 185.849, -14.4198, -119.517, 0.55 ) }
    dend_42 { pt3dadd( 187.955, -14.5205, -118.528, 0.55 ) }
    dend_42 { pt3dadd( 191.577, -14.5752, -116.8, 0.28 ) }
    dend_42 { pt3dadd( 193.059, -14.5798, -116.226, 0.55 ) }
    dend_42 { pt3dadd( 195.609, -14.5564, -115.544, 0.28 ) }
    dend_42 { pt3dadd( 198.127, -14.4235, -115.094, 0.55 ) }
    dend_42 { pt3dadd( 199.492, -14.2792, -115.08, 0.28 ) }
    dend_42 { pt3dadd( 200.702, -14.0342, -115.216, 0.55 ) }
    dend_42 { pt3dadd( 204.101, -13.2724, -115.981, 0.28 ) }
    dend_42 { pt3dadd( 206.499, -12.5884, -116.625, 0.28 ) }
    dend_42 { pt3dadd( 208.556, -11.8636, -117.27, 0.55 ) }
    dend_42 { pt3dadd( 210.823, -11.0465, -118.12, 0.28 ) }
    dend_42 { pt3dadd( 211.385, -10.7996, -118.328, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 85.6812, 10.0297, -49.6711, 0.55 ) }
    dend_35 { pt3dadd( 86.7078, 7.59456, -50.8269, 0.55 ) }
    dend_35 { pt3dadd( 87.3955, 5.52537, -51.6643, 0.28 ) }
    dend_35 { pt3dadd( 88.0187, 3.65368, -52.2756, 0.55 ) }
    dend_35 { pt3dadd( 89.5389, -0.285904, -53.6084, 0.28 ) }
    dend_35 { pt3dadd( 89.629, -0.540317, -53.7267, 0.55 ) }
    dend_35 { pt3dadd( 90.1393, -1.88349, -54.4512, 0.28 ) }
    dend_35 { pt3dadd( 90.4703, -3.03687, -55.218, 0.55 ) }
    dend_35 { pt3dadd( 90.757, -4.27097, -56.1443, 0.28 ) }
    dend_35 { pt3dadd( 91.1064, -5.97252, -57.4776, 0.55 ) }
    dend_35 { pt3dadd( 91.979, -10.2344, -60.7537, 0.55 ) }
    dend_35 { pt3dadd( 92.7368, -14.1351, -63.8011, 0.55 ) }
    dend_35 { pt3dadd( 93.3154, -17.258, -66.2404, 0.55 ) }
    dend_35 { pt3dadd( 93.8332, -20.3286, -68.5898, 0.55 ) }
    dend_35 { pt3dadd( 93.9638, -21.1176, -69.167, 0.28 ) }
    dend_35 { pt3dadd( 94.1226, -21.9473, -69.7211, 0.55 ) }
    dend_35 { pt3dadd( 94.4359, -23.0656, -70.393, 0.28 ) }
    dend_35 { pt3dadd( 95.1798, -25.0127, -71.4279, 0.55 ) }
    dend_35 { pt3dadd( 96.888, -28.6042, -72.849, 0.55 ) }
    dend_35 { pt3dadd( 97.8179, -30.5062, -73.4425, 0.28 ) }
    dend_35 { pt3dadd( 98.6544, -32.4714, -74.1302, 0.55 ) }
    dend_35 { pt3dadd( 99.632, -35.272, -75.1947, 0.28 ) }
    dend_35 { pt3dadd( 100.284, -37.5633, -76.1046, 0.55 ) }
    dend_35 { pt3dadd( 101.12, -41.0129, -77.4711, 0.28 ) }
    dend_35 { pt3dadd( 102.007, -44.5618, -78.7806, 0.55 ) }
    dend_35 { pt3dadd( 103.231, -49.732, -80.7248, 0.28 ) }
    dend_35 { pt3dadd( 103.826, -52.4987, -81.7695, 0.55 ) }
    dend_35 { pt3dadd( 104.395, -55.3457, -82.9012, 0.28 ) }
    dend_35 { pt3dadd( 104.875, -57.8796, -84.0437, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 105.585, -61.0729, -85.7265, 0.55 ) }
    dend_35 { pt3dadd( 106.428, -63.9917, -87.2188, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 48.0799, 15.1604, -8.37338, 0.55 ) }
    dend_31 { pt3dadd( 50.5192, 14.584, -8.24559, 0.55 ) }
    dend_31 { pt3dadd( 52.275, 14.1551, -8.33349, 0.55 ) }
    dend_31 { pt3dadd( 56.0949, 13.2404, -8.73222, 0.55 ) }
    dend_31 { pt3dadd( 57.7942, 12.8458, -9.07026, 0.55 ) }
    dend_31 { pt3dadd( 59.6426, 12.4843, -9.5185, 0.55 ) }
    dend_31 { pt3dadd( 62.1105, 12.0993, -10.2783, 0.55 ) }
    dend_31 { pt3dadd( 64.6818, 11.7097, -11.3449, 0.55 ) }
    dend_31 { pt3dadd( 66.0135, 11.5404, -12.0639, 0.55 ) }
    dend_31 { pt3dadd( 68.6799, 11.323, -13.8985, 0.55 ) }
    dend_31 { pt3dadd( 69.9046, 11.2468, -14.78, 0.55 ) }
    dend_31 { pt3dadd( 72.7607, 11.0389, -16.9406, 0.55 ) }
    dend_31 { pt3dadd( 74.6891, 10.8133, -18.4138, 0.55 ) }
    dend_31 { pt3dadd( 76.1147, 10.6153, -19.4339, 0.83 ) }
    dend_31 { pt3dadd( 78.3867, 10.2035, -21.0659, 0.55 ) }
    dend_31 { pt3dadd( 80.6107, 9.65878, -22.6114, 0.83 ) }
    dend_31 { pt3dadd( 82.4966, 9.08399, -23.8823, 0.55 ) }
    dend_31 { pt3dadd( 84.1875, 8.56619, -24.9136, 0.55 ) }
    dend_31 { pt3dadd( 85.1594, 8.29567, -25.431, 0.83 ) }
    dend_31 { pt3dadd( 87.4424, 7.62932, -26.5141, 0.28 ) }
    dend_31 { pt3dadd( 88.5907, 7.31971, -26.9639, 0.28 ) }
    dend_31 { pt3dadd( 89.6881, 6.97037, -27.48, 0.28 ) }
    dend_31 { pt3dadd( 90.8772, 6.62627, -28.0328, 0.28 ) }
    dend_31 { pt3dadd( 92.779, 6.12495, -28.9452, 0.28 ) }
    dend_31 { pt3dadd( 93.5478, 5.92473, -29.2861, 0.55 ) }
    dend_31 { pt3dadd( 95.4084, 5.40225, -29.9133, 0.55 ) }
    dend_31 { pt3dadd( 98.7729, 4.37254, -30.8846, 0.55 ) }
    dend_31 { pt3dadd( 99.706, 4.04966, -31.1209, 0.55 ) }
    dend_31 { pt3dadd( 100.541, 3.72268, -31.3054, 0.83 ) }
    dend_31 { pt3dadd( 102.376, 3.01715, -31.5429, 0.55 ) }
    dend_31 { pt3dadd( 103.974, 2.39828, -31.7234, 0.55 ) }
    dend_31 { pt3dadd( 105.485, 1.81732, -31.8851, 0.55 ) }
    dend_31 { pt3dadd( 106.65, 1.35894, -32.0491, 0.55 ) }
    dend_31 { pt3dadd( 108.474, 0.538481, -32.4398, 0.55 ) }
    dend_31 { pt3dadd( 110.591, -0.572497, -33.0808, 0.55 ) }
    dend_31 { pt3dadd( 113.815, -2.58585, -34.4344, 0.55 ) }
    dend_31 { pt3dadd( 115.543, -3.91505, -35.3831, 0.55 ) }
    dend_31 { pt3dadd( 117.003, -5.30562, -36.3756, 0.28 ) }
    dend_31 { pt3dadd( 117.424, -5.81288, -36.7339, 0.55 ) }
    dend_31 { pt3dadd( 118.313, -7.22616, -37.6864, 0.28 ) }
    dend_31 { pt3dadd( 119.029, -8.81086, -38.6844, 0.55 ) }
    dend_31 { pt3dadd( 119.653, -10.8331, -39.7267, 0.55 ) }
    dend_31 { pt3dadd( 120.087, -12.1854, -40.3481, 0.28 ) }
    dend_31 { pt3dadd( 120.25, -12.6715, -40.5448, 0.55 ) }
    dend_31 { pt3dadd( 120.682, -13.8857, -41.0196, 0.28 ) }
    dend_31 { pt3dadd( 121.285, -15.4799, -41.604, 0.55 ) }
    dend_31 { pt3dadd( 122.901, -19.3593, -42.9364, 0.55 ) }
    dend_31 { pt3dadd( 123.754, -21.3293, -43.572, 0.55 ) }
    dend_31 { pt3dadd( 124.551, -23.1406, -44.1404, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 48.0799, 15.1604, -8.37338, 0.55 ) }
    dend_30 { pt3dadd( 50.4886, 14.8478, -6.7906, 0.55 ) }
    dend_30 { pt3dadd( 51.259, 14.7568, -6.3226, 0.55 ) }
    dend_30 { pt3dadd( 54.118, 14.3289, -4.73027, 0.55 ) }
    dend_30 { pt3dadd( 57.3147, 13.8944, -2.89169, 0.55 ) }
    dend_30 { pt3dadd( 61.4164, 13.2987, -0.437559, 0.55 ) }
    dend_30 { pt3dadd( 62.549, 13.1374, 0.233699, 0.55 ) }
    dend_30 { pt3dadd( 64.577, 12.7837, 1.39803, 0.55 ) }
    dend_30 { pt3dadd( 66.7984, 12.4657, 2.61119, 0.55 ) }
    dend_30 { pt3dadd( 69.379, 12.1935, 3.93465, 0.55 ) }
    dend_30 { pt3dadd( 71.8126, 11.9655, 5.1994, 0.55 ) }
    dend_30 { pt3dadd( 73.1475, 11.9125, 5.85306, 0.55 ) }
    dend_30 { pt3dadd( 74.7163, 11.8917, 6.63063, 0.55 ) }
    dend_30 { pt3dadd( 76.6579, 11.9261, 7.576, 0.83 ) }
    dend_30 { pt3dadd( 79.8223, 12.07, 8.81645, 0.55 ) }
    dend_30 { pt3dadd( 81.9096, 12.1193, 9.52167, 0.83 ) }
    dend_30 { pt3dadd( 84.7972, 12.0958, 10.3711, 0.55 ) }
    dend_30 { pt3dadd( 85.6813, 12.0484, 10.6064, 0.55 ) }
    dend_30 { pt3dadd( 88.4159, 11.7938, 11.2446, 0.55 ) }
    dend_30 { pt3dadd( 93.2869, 11.1249, 12.1194, 0.55 ) }
    dend_30 { pt3dadd( 96.8413, 10.4769, 12.6265, 0.55 ) }
    dend_30 { pt3dadd( 99.6526, 9.8246, 13.0529, 0.55 ) }
    dend_30 { pt3dadd( 102.517, 8.99217, 13.5371, 0.55 ) }
    dend_30 { pt3dadd( 103.119, 8.80126, 13.6372, 0.28 ) }
    dend_30 { pt3dadd( 104.338, 8.36986, 13.8233, 0.83 ) }
    dend_30 { pt3dadd( 109.339, 6.5224, 14.5941, 0.55 ) }
    dend_30 { pt3dadd( 112.834, 5.25367, 15.07, 0.55 ) }
    dend_30 { pt3dadd( 115.71, 4.25849, 15.5504, 0.55 ) }
    dend_30 { pt3dadd( 117.429, 3.65424, 15.8516, 0.83 ) }
    dend_30 { pt3dadd( 118.783, 3.196, 16.0966, 0.28 ) }
    dend_30 { pt3dadd( 120.01, 2.78556, 16.3085, 0.55 ) }
    dend_30 { pt3dadd( 129.75, 1.33674, 19.9438, 0.55 ) }
    dend_30 { pt3dadd( 139.877, -1.07168, 21.3287, 0.55 ) }
    dend_30 { pt3dadd( 150.045, -2.44334, 23.5542, 0.55 ) }
    dend_30 { pt3dadd( 159.192, -5.78401, 27.4846, 0.55 ) }
    dend_30 { pt3dadd( 167.668, -10.53, 31.46, 0.55 ) }
    dend_30 { pt3dadd( 176.681, -15.8213, 32.1711, 0.55 ) }
    dend_30 { pt3dadd( 185.389, -21.4689, 30.9317, 0.55 ) }
    dend_30 { pt3dadd( 195.067, -25.2663, 29.5811, 0.55 ) }
    dend_30 { pt3dadd( 204.666, -29.4155, 28.8553, 0.55 ) }
    dend_30 { pt3dadd( 214.691, -32.3362, 27.8052, 0.55 ) }
    dend_30 { pt3dadd( 224.774, -35.2359, 28.1758, 0.55 ) }
    dend_30 { pt3dadd( 234.15, -39.9054, 28.5795, 0.55 ) }
    dend_30 { pt3dadd( 243.935, -43.1997, 30.4906, 0.55 ) }
    dend_30 { pt3dadd( 253.46, -45.4896, 34.2685, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.68006, -30.2833, 6.6036, 1.38 ) }
    dend_13 { pt3dadd( -0.767802, -33.7064, 4.51665, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.68006, -30.2833, 6.6036, 0.55 ) }
    dend_12 { pt3dadd( -3.69089, -31.3081, 6.84984, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.82666, -32.6376, 7.12269, 0.55 ) }
    dend_12 { pt3dadd( -5.69326, -33.5066, 7.34413, 0.55 ) }
    dend_12 { pt3dadd( -6.44881, -34.2301, 7.42413, 0.55 ) }
    dend_12 { pt3dadd( -8.12325, -35.7184, 7.45804, 0.55 ) }
    dend_12 { pt3dadd( -9.29954, -36.7067, 7.45288, 0.55 ) }
    dend_12 { pt3dadd( -10.3547, -37.5928, 7.41317, 0.55 ) }
    dend_12 { pt3dadd( -13.0527, -39.7369, 7.31345, 0.55 ) }
    dend_12 { pt3dadd( -16.2795, -42.2092, 7.21649, 0.55 ) }
    dend_12 { pt3dadd( -18.7833, -44.076, 7.10295, 0.55 ) }
    dend_12 { pt3dadd( -20.3899, -45.3055, 7.00997, 0.55 ) }
    dend_12 { pt3dadd( -22.2386, -46.7885, 6.90815, 0.55 ) }
    dend_12 { pt3dadd( -24.6027, -48.9435, 6.80583, 0.55 ) }
    dend_12 { pt3dadd( -26.007, -50.4991, 6.77117, 0.55 ) }
    dend_12 { pt3dadd( -27.7396, -52.7648, 6.8585, 0.55 ) }
    dend_12 { pt3dadd( -29.1414, -54.9097, 6.97477, 0.55 ) }
    dend_12 { pt3dadd( -30.6035, -57.6149, 7.11242, 0.55 ) }
    dend_12 { pt3dadd( -32.0317, -60.8194, 7.29026, 0.55 ) }
    dend_12 { pt3dadd( -32.8612, -63.2948, 7.42742, 0.55 ) }
    dend_12 { pt3dadd( -33.1688, -64.5367, 7.55757, 0.55 ) }
    dend_12 { pt3dadd( -33.6757, -67.4759, 7.98232, 0.55 ) }
    dend_12 { pt3dadd( -34.0833, -70.2324, 8.44043, 0.55 ) }
    dend_12 { pt3dadd( -34.3012, -73.0275, 9.0742, 0.55 ) }
    dend_12 { pt3dadd( -34.4218, -74.6312, 9.52926, 0.55 ) }
    dend_12 { pt3dadd( -34.7209, -79.5962, 11.111, 0.55 ) }
    dend_12 { pt3dadd( -34.7438, -79.9617, 11.2345, 0.55 ) }
    dend_12 { pt3dadd( -34.8289, -82.2052, 12.0352, 0.55 ) }
    dend_12 { pt3dadd( -35.1442, -86.2006, 13.6057, 0.55 ) }
    dend_12 { pt3dadd( -35.2764, -87.5343, 14.0534, 0.55 ) }
    dend_12 { pt3dadd( -35.6208, -89.6069, 14.4076, 0.55 ) }
    dend_12 { pt3dadd( -35.7715, -90.3753, 14.3568, 0.55 ) }
    dend_12 { pt3dadd( -36.2846, -92.9777, 13.6639, 0.55 ) }
    dend_12 { pt3dadd( -36.6088, -94.6656, 12.8338, 0.55 ) }
    dend_12 { pt3dadd( -37.184, -97.3507, 10.9431, 0.55 ) }
    dend_12 { pt3dadd( -37.8158, -100.643, 8.34138, 0.28 ) }
    dend_12 { pt3dadd( -37.9858, -101.456, 7.58433, 0.55 ) }
    dend_12 { pt3dadd( -38.2659, -102.687, 6.32605, 0.28 ) }
    dend_12 { pt3dadd( -38.3122, -102.872, 6.1269, 0.55 ) }
    dend_12 { pt3dadd( -38.5512, -103.887, 5.12581, 0.28 ) }
    dend_12 { pt3dadd( -38.6368, -104.231, 4.87183, 0.55 ) }
    dend_12 { pt3dadd( -39.0381, -106.022, 3.91109, 0.28 ) }
    dend_12 { pt3dadd( -39.1965, -106.629, 3.59771, 0.55 ) }
    dend_12 { pt3dadd( -39.6525, -108.384, 2.79816, 0.28 ) }
    dend_12 { pt3dadd( -39.793, -108.937, 2.54791, 0.55 ) }
    dend_12 { pt3dadd( -40.2862, -110.844, 1.71976, 0.28 ) }
    dend_12 { pt3dadd( -40.5095, -111.722, 1.33314, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.2794, -78.0578, 62.6946, 0.55 ) }
    dend_10 { pt3dadd( -16.9145, -84.5042, 68.5675, 0.55 ) }
    dend_10 { pt3dadd( -21.5516, -90.1985, 74.5516, 0.55 ) }
    dend_10 { pt3dadd( -25.8442, -96.487, 80.1548, 0.55 ) }
    dend_10 { pt3dadd( -30.2787, -102.819, 85.593, 0.55 ) }
    dend_10 { pt3dadd( -33.5824, -110.134, 90.5141, 0.55 ) }
    dend_10 { pt3dadd( -36.8691, -117.141, 95.896, 0.55 ) }
    dend_10 { pt3dadd( -38.7765, -125.539, 99.5838, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.2794, -78.0578, 62.6946, 0.55 ) }
    dend_3 { pt3dadd( -12.8342, -84.7319, 69.3042, 0.55 ) }
    dend_3 { pt3dadd( -11.9491, -92.4238, 74.5698, 0.55 ) }
    dend_3 { pt3dadd( -12.5926, -100.192, 79.7502, 0.55 ) }
    dend_3 { pt3dadd( -13.7484, -108.407, 84.0376, 0.55 ) }
    dend_3 { pt3dadd( -14.5263, -116.585, 88.4833, 0.55 ) }
    dend_3 { pt3dadd( -15.2554, -124.432, 93.5251, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -57.3534, 34.5694, -14.1227, 0.83 ) }
    dend_60 { pt3dadd( -57.4042, 35.744, -15.8229, 0.83 ) }
    dend_60 { pt3dadd( -57.5826, 38.6087, -19.6484, 0.55 ) }
    dend_60 { pt3dadd( -57.6429, 39.8629, -21.1767, 0.83 ) }
    dend_60 { pt3dadd( -57.6888, 41.2214, -22.7053, 0.55 ) }
    dend_60 { pt3dadd( -57.709, 42.6534, -24.0491, 0.55 ) }
    dend_60 { pt3dadd( -57.7003, 43.3892, -24.6209, 0.28 ) }
    dend_60 { pt3dadd( -57.7115, 43.8929, -24.8601, 0.55 ) }
    dend_60 { pt3dadd( -57.6484, 45.6384, -25.2857, 0.28 ) }
    dend_60 { pt3dadd( -57.5978, 46.3931, -25.4323, 0.55 ) }
    dend_60 { pt3dadd( -57.4408, 49.0289, -25.8293, 0.28 ) }
    dend_60 { pt3dadd( -57.3612, 51.1216, -26.0646, 0.55 ) }
    dend_60 { pt3dadd( -57.3796, 54.3856, -26.3066, 0.28 ) }
    dend_60 { pt3dadd( -57.4888, 57.2504, -26.4484, 0.28 ) }
    dend_60 { pt3dadd( -57.6382, 58.8469, -26.4822, 0.55 ) }
    dend_60 { pt3dadd( -57.9316, 60.7251, -26.5029, 0.28 ) }
    dend_60 { pt3dadd( -58.1292, 61.6155, -26.4908, 0.55 ) }
    dend_60 { pt3dadd( -58.7224, 63.6806, -26.5408, 0.28 ) }
    dend_60 { pt3dadd( -59.2214, 65.0336, -26.6337, 0.28 ) }
    dend_60 { pt3dadd( -59.7466, 66.3521, -26.7631, 0.28 ) }
    dend_60 { pt3dadd( -59.9964, 67.0522, -26.8387, 0.55 ) }
    dend_60 { pt3dadd( -60.858, 69.8955, -27.2397, 0.28 ) }
    dend_60 { pt3dadd( -61.7707, 73.2701, -27.7979, 0.55 ) }
    dend_60 { pt3dadd( -62.0688, 74.4373, -27.9982, 0.55 ) }
    dend_60 { pt3dadd( -62.3836, 75.6087, -28.1697, 0.55 ) }
    dend_60 { pt3dadd( -63.1942, 78.072, -28.555, 0.55 ) }
    dend_60 { pt3dadd( -63.8397, 79.6682, -28.8277, 0.28 ) }
    dend_60 { pt3dadd( -64.1591, 80.2605, -28.928, 0.55 ) }
    dend_60 { pt3dadd( -65.141, 81.8522, -29.1436, 0.28 ) }
    dend_60 { pt3dadd( -66.2711, 83.5248, -29.435, 0.55 ) }
    dend_60 { pt3dadd( -68.1557, 85.8779, -29.9198, 0.28 ) }
    dend_60 { pt3dadd( -69.0667, 86.8371, -30.1396, 0.28 ) }
    dend_60 { pt3dadd( -70.551, 88.1186, -30.5701, 0.55 ) }
    dend_60 { pt3dadd( -72.2153, 89.4252, -31.0875, 0.28 ) }
    dend_60 { pt3dadd( -72.5159, 89.6227, -31.1756, 0.55 ) }
    dend_60 { pt3dadd( -73.5918, 90.2307, -31.472, 0.28 ) }
    dend_60 { pt3dadd( -77.2805, 92.1398, -32.404, 0.55 ) }
    dend_60 { pt3dadd( -82.4064, 94.3673, -33.8159, 0.28 ) }
    dend_60 { pt3dadd( -83.3569, 94.7179, -34.12, 0.55 ) }
    dend_60 { pt3dadd( -85.9657, 95.5858, -34.9816, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -87.0639, 95.9328, -35.3681, 0.28 ) }
    dend_60 { pt3dadd( -88.0229, 96.2066, -35.7417, 0.55 ) }
    dend_60 { pt3dadd( -90.8359, 96.6852, -36.9853, 0.28 ) }
    dend_60 { pt3dadd( -92.7993, 96.8562, -37.7682, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -57.3534, 34.5694, -14.1227, 0.55 ) }
    dend_57 { pt3dadd( -57.8228, 36.1942, -14.7374, 0.55 ) }
    dend_57 { pt3dadd( -58.1026, 37.1804, -15.0003, 0.28 ) }
    dend_57 { pt3dadd( -58.4056, 37.9322, -14.9747, 0.55 ) }
    dend_57 { pt3dadd( -59.1014, 39.6587, -14.916, 0.28 ) }
    dend_57 { pt3dadd( -59.5902, 40.8714, -14.8748, 0.55 ) }
    dend_57 { pt3dadd( -60.4912, 43.107, -14.7987, 0.28 ) }
    dend_57 { pt3dadd( -61.0428, 44.36, -14.5284, 0.55 ) }
    dend_57 { pt3dadd( -62.948, 47.5968, -12.7007, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -118.069, -31.8203, -15.4515, 0.55 ) }
    dend_52 { pt3dadd( -121.776, -36.5872, -17.6298, 0.55 ) }
    dend_52 { pt3dadd( -124.439, -41.8219, -20.1697, 0.55 ) }
    dend_52 { pt3dadd( -126.495, -46.5774, -23.9518, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -118.069, -31.8203, -15.4515, 0.55 ) }
    dend_49 { pt3dadd( -125.442, -38.3836, -22.2704, 0.55 ) }
    dend_49 { pt3dadd( -131.646, -44.6371, -30.4077, 0.55 ) }
    dend_49 { pt3dadd( -137.366, -50.9702, -38.8238, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -120.401, 19.4341, 36.3542, 0.55 ) }
    dend_47 { pt3dadd( -125.49, 18.7606, 39.002, 0.55 ) }
    dend_47 { pt3dadd( -130.688, 19.0064, 41.5025, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -120.401, 19.4341, 36.3542, 0.55 ) }
    dend_46 { pt3dadd( -132.306, 18.0849, 39.1827, 0.55 ) }
    dend_46 { pt3dadd( -144.077, 18.5686, 42.7661, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 106.428, -63.9917, -87.2188, 0.28 ) }
    dend_39 { pt3dadd( 113.221, -69.0459, -96.0361, 0.28 ) }
    dend_39 { pt3dadd( 113.904, -69.556, -96.7958, 0.55 ) }
    dend_39 { pt3dadd( 115.056, -70.4174, -98.0783, 0.28 ) }
    dend_39 { pt3dadd( 116.026, -71.1427, -99.1582, 0.28 ) }
    dend_39 { pt3dadd( 117.31, -72.1027, -100.588, 0.55 ) }
    dend_39 { pt3dadd( 119.003, -73.3685, -102.473, 0.55 ) }
    dend_39 { pt3dadd( 121.305, -74.7637, -103.131, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 106.428, -63.9917, -87.2188, 0.55 ) }
    dend_36 { pt3dadd( 107.158, -65.0635, -88.3263, 0.55 ) }
    dend_36 { pt3dadd( 107.391, -65.5355, -88.8362, 0.28 ) }
    dend_36 { pt3dadd( 107.749, -66.3385, -89.7372, 0.55 ) }
    dend_36 { pt3dadd( 108.537, -68.1076, -91.7222, 0.28 ) }
    dend_36 { pt3dadd( 109.083, -69.3336, -93.0978, 0.55 ) }
    dend_36 { pt3dadd( 110.009, -71.4108, -95.4284, 0.28 ) }
    dend_36 { pt3dadd( 111.103, -73.9254, -98.5097, 0.28 ) }
    dend_36 { pt3dadd( 111.556, -75.0744, -99.9623, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 124.551, -23.1406, -44.1404, 0.28 ) }
    dend_33 { pt3dadd( 126.467, -26.5603, -45.7641, 0.28 ) }
    dend_33 { pt3dadd( 128.838, -31.3087, -47.6033, 0.28 ) }
    dend_33 { pt3dadd( 130.319, -34.4625, -48.6993, 0.55 ) }
    dend_33 { pt3dadd( 131.239, -36.272, -49.2438, 0.28 ) }
    dend_33 { pt3dadd( 131.725, -37.2506, -49.5298, 0.28 ) }
    dend_33 { pt3dadd( 134.142, -42.0396, -50.9965, 0.55 ) }
    dend_33 { pt3dadd( 134.7, -43.1921, -51.2218, 0.28 ) }
    dend_33 { pt3dadd( 135.962, -46.3159, -51.6691, 0.55 ) }
    dend_33 { pt3dadd( 137.034, -48.9665, -52.1316, 0.28 ) }
    dend_33 { pt3dadd( 137.998, -51.1111, -52.5392, 0.55 ) }
    dend_33 { pt3dadd( 139.125, -53.5825, -53.1348, 0.55 ) }
    dend_33 { pt3dadd( 140.937, -57.2233, -54.43, 0.55 ) }
    dend_33 { pt3dadd( 141.372, -58.095, -54.772, 0.55 ) }
    dend_33 { pt3dadd( 142.906, -61.314, -56.0742, 0.28 ) }
    dend_33 { pt3dadd( 143.488, -62.6005, -56.6321, 0.55 ) }
    dend_33 { pt3dadd( 144.331, -64.2536, -57.3529, 0.28 ) }
    dend_33 { pt3dadd( 145.522, -66.5293, -58.4617, 0.55 ) }
    dend_33 { pt3dadd( 147.553, -69.7842, -60.6437, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 124.551, -23.1406, -44.1404, 0.55 ) }
    dend_32 { pt3dadd( 121.328, -22.9013, -43.8813, 0.55 ) }
    dend_32 { pt3dadd( 118.71, -22.7069, -43.6708, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.767802, -33.7064, 4.51665, 0.83 ) }
    dend_17 { pt3dadd( -0.700176, -33.9238, 4.46222, 0.83 ) }
    dend_17 { pt3dadd( 0.204387, -35.8793, 3.99514, 0.83 ) }
    dend_17 { pt3dadd( 0.959291, -37.5867, 3.48058, 0.55 ) }
    dend_17 { pt3dadd( 1.56154, -38.9489, 3.07007, 0.55 ) }
    dend_17 { pt3dadd( 2.84165, -41.8442, 2.19753, 0.83 ) }
    dend_17 { pt3dadd( 4.39433, -45.356, 1.13919, 0.55 ) }
    dend_17 { pt3dadd( 5.26392, -47.2003, 0.602692, 0.83 ) }
    dend_17 { pt3dadd( 6.88999, -50.1603, -0.202418, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.767802, -33.7064, 4.51665, 0.55 ) }
    dend_14 { pt3dadd( -2.94242, -34.2811, 2.90941, 0.55 ) }
    dend_14 { pt3dadd( -5.27661, -34.898, 1.18423, 0.55 ) }
    dend_14 { pt3dadd( -8.03214, -35.6263, -0.852352, 0.55 ) }
    dend_14 { pt3dadd( -11.3783, -36.5106, -3.32543, 0.55 ) }
    dend_14 { pt3dadd( -13.2771, -37.0124, -4.72881, 0.55 ) }
    dend_14 { pt3dadd( -13.6585, -37.1132, -5.01073, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.2554, -124.432, 93.5251, 0.55 ) }
    dend_7 { pt3dadd( -15.2431, -132.773, 99.802, 0.55 ) }
    dend_7 { pt3dadd( -13.6225, -141.528, 105.21, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.2554, -124.432, 93.5251, 0.55 ) }
    dend_4 { pt3dadd( -16.3296, -133.486, 98.8049, 0.55 ) }
    dend_4 { pt3dadd( -17.7688, -142.254, 104.484, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -62.948, 47.5968, -12.7007, 0.28 ) }
    dend_59 { pt3dadd( -63.9321, 48.9113, -11.4767, 0.28 ) }
    dend_59 { pt3dadd( -64.2932, 49.4189, -10.9544, 0.55 ) }
    dend_59 { pt3dadd( -65.3184, 50.8962, -9.41297, 0.28 ) }
    dend_59 { pt3dadd( -65.841, 51.6162, -8.72368, 0.55 ) }
    dend_59 { pt3dadd( -67.2827, 53.5523, -6.92545, 0.28 ) }
    dend_59 { pt3dadd( -68.7479, 55.5201, -5.09779, 0.55 ) }
    dend_59 { pt3dadd( -71.1523, 58.6168, -2.01945, 0.28 ) }
    dend_59 { pt3dadd( -71.6645, 59.2818, -1.3641, 0.55 ) }
    dend_59 { pt3dadd( -72.8086, 60.8261, 0.0103872, 0.28 ) }
    dend_59 { pt3dadd( -73.257, 61.4652, 0.544805, 0.55 ) }
    dend_59 { pt3dadd( -78.3254, 65.6449, 5.52324, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -84.3181, 70.3222, 8.64437, 0.55 ) }
    dend_59 { pt3dadd( -89.3353, 75.4601, 12.6303, 0.55 ) }
    dend_59 { pt3dadd( -93.4189, 81.6268, 16.1253, 0.55 ) }
    dend_59 { pt3dadd( -98.3927, 87.322, 19.2732, 0.55 ) }
    dend_59 { pt3dadd( -103.791, 91.8799, 23.4918, 0.55 ) }
    dend_59 { pt3dadd( -108.424, 96.0771, 28.8681, 0.55 ) }
    dend_59 { pt3dadd( -112.062, 99.7355, 35.3207, 0.55 ) }
    dend_59 { pt3dadd( -115.8, 103.801, 41.4535, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -62.948, 47.5968, -12.7007, 0.55 ) }
    dend_58 { pt3dadd( -66.319, 46.2795, -10.3492, 0.55 ) }
    dend_58 { pt3dadd( -68.0636, 45.5301, -9.12083, 0.28 ) }
    dend_58 { pt3dadd( -69.3619, 44.9724, -8.20672, 0.55 ) }
    dend_58 { pt3dadd( -70.444, 44.5076, -7.44486, 0.28 ) }
    dend_58 { pt3dadd( -71.2019, 44.1821, -6.91122, 0.55 ) }
    dend_58 { pt3dadd( -73.2918, 43.2843, -5.43974, 0.28 ) }
    dend_58 { pt3dadd( -74.696, 42.5218, -4.63861, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -126.495, -46.5774, -23.9518, 0.55 ) }
    dend_54 { pt3dadd( -128.785, -51.5284, -24.7015, 0.55 ) }
    dend_54 { pt3dadd( -130.999, -56.5634, -24.8236, 0.55 ) }
    dend_54 { pt3dadd( -132.741, -61.6661, -25.912, 0.55 ) }
    dend_54 { pt3dadd( -135.083, -66.633, -26.2992, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -126.495, -46.5774, -23.9518, 0.55 ) }
    dend_53 { pt3dadd( -129.359, -50.2929, -29.0687, 0.55 ) }
    dend_53 { pt3dadd( -131.818, -53.1931, -34.901, 0.55 ) }
    dend_53 { pt3dadd( -134.928, -56.7728, -39.975, 0.55 ) }
    dend_53 { pt3dadd( -139.405, -59.2141, -44.724, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -137.366, -50.9702, -38.8238, 0.55 ) }
    dend_51 { pt3dadd( -143.574, -50.3256, -45.8613, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -137.366, -50.9702, -38.8238, 0.55 ) }
    dend_50 { pt3dadd( -140.409, -58.1318, -41.2695, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 121.305, -74.7637, -103.131, 0.28 ) }
    dend_41 { pt3dadd( 124.228, -75.7407, -104.319, 0.28 ) }
    dend_41 { pt3dadd( 125.586, -76.1945, -104.87, 0.55 ) }
    dend_41 { pt3dadd( 128.174, -77.0599, -105.922, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 121.305, -74.7637, -103.131, 0.55 ) }
    dend_40 { pt3dadd( 120.952, -76.0682, -104.922, 0.55 ) }
    dend_40 { pt3dadd( 120.246, -78.6774, -108.504, 0.28 ) }
    dend_40 { pt3dadd( 120.017, -79.5274, -109.67, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 111.556, -75.0744, -99.9623, 0.28 ) }
    dend_38 { pt3dadd( 112.674, -77.2266, -103.164, 0.28 ) }
    dend_38 { pt3dadd( 113.228, -78.2922, -104.749, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 111.556, -75.0744, -99.9623, 0.55 ) }
    dend_37 { pt3dadd( 110.115, -75.5599, -99.5365, 0.55 ) }
    dend_37 { pt3dadd( 106.094, -76.9138, -98.3492, 0.28 ) }
    dend_37 { pt3dadd( 105.139, -77.2355, -98.0671, 0.55 ) }
    dend_37 { pt3dadd( 102.527, -78.1153, -97.2955, 0.28 ) }
    dend_37 { pt3dadd( 100.843, -78.6825, -96.7982, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.88999, -50.1603, -0.202418, 0.83 ) }
    dend_23 { pt3dadd( 6.8807, -50.5373, -0.269661, 0.83 ) }
    dend_23 { pt3dadd( 6.87364, -55.4816, -1.03822, 0.83 ) }
    dend_23 { pt3dadd( 6.62777, -59.1692, -1.28373, 0.83 ) }
    dend_23 { pt3dadd( 6.25915, -62.7241, -1.08188, 0.83 ) }
    dend_23 { pt3dadd( 5.71461, -67.4557, -0.409762, 0.83 ) }
    dend_23 { pt3dadd( 5.00165, -72.9026, 0.60957, 0.83 ) }
    dend_23 { pt3dadd( 4.32952, -79.0, 2.05399, 0.83 ) }
    dend_23 { pt3dadd( 3.76249, -84.9344, 3.72542, 0.83 ) }
    dend_23 { pt3dadd( 2.55006, -92.1717, 5.7588, 0.83 ) }
    dend_23 { pt3dadd( 1.75445, -95.4726, 6.5632, 0.83 ) }
    dend_23 { pt3dadd( 1.09759, -97.9477, 7.01506, 0.83 ) }
    dend_23 { pt3dadd( -0.294681, -102.683, 7.81322, 0.83 ) }
    dend_23 { pt3dadd( -1.51585, -106.923, 8.26146, 0.83 ) }
    dend_23 { pt3dadd( -3.94681, -115.968, 8.0485, 0.83 ) }
    dend_23 { pt3dadd( -5.42191, -120.893, 7.26621, 0.83 ) }
    dend_23 { pt3dadd( -6.88889, -125.416, 6.21214, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.88999, -50.1603, -0.202418, 0.55 ) }
    dend_18 { pt3dadd( 6.29157, -51.3765, 0.185317, 0.55 ) }
    dend_18 { pt3dadd( 5.87863, -52.2576, 0.536728, 0.55 ) }
    dend_18 { pt3dadd( 5.65768, -52.8222, 0.808323, 0.55 ) }
    dend_18 { pt3dadd( 5.39555, -53.7096, 1.29469, 0.55 ) }
    dend_18 { pt3dadd( 4.97704, -55.4706, 2.34291, 0.55 ) }
    dend_18 { pt3dadd( 4.7237, -56.8013, 3.28169, 0.55 ) }
    dend_18 { pt3dadd( 4.57911, -57.8673, 4.14239, 0.55 ) }
    dend_18 { pt3dadd( 4.44672, -58.9407, 5.09782, 0.55 ) }
    dend_18 { pt3dadd( 4.35344, -59.8298, 5.93855, 0.28 ) }
    dend_18 { pt3dadd( 4.32127, -60.5544, 6.73285, 0.55 ) }
    dend_18 { pt3dadd( 4.32801, -61.8684, 8.3721, 0.55 ) }
    dend_18 { pt3dadd( 4.33431, -62.6685, 9.48349, 0.55 ) }
    dend_18 { pt3dadd( 4.33072, -63.1162, 10.1043, 0.55 ) }
    dend_18 { pt3dadd( 4.2862, -63.6417, 10.8232, 0.83 ) }
    dend_18 { pt3dadd( 4.08629, -65.1992, 12.8598, 0.28 ) }
    dend_18 { pt3dadd( 4.01328, -65.7149, 13.5197, 0.55 ) }
    dend_18 { pt3dadd( 3.89407, -66.6491, 14.6661, 0.28 ) }
    dend_18 { pt3dadd( 3.86849, -66.937, 15.04, 0.55 ) }
    dend_18 { pt3dadd( 3.83833, -67.6171, 15.8853, 0.28 ) }
    dend_18 { pt3dadd( 3.80897, -68.0044, 16.337, 0.55 ) }
    dend_18 { pt3dadd( 3.46239, -69.2591, 17.5163, 0.55 ) }
    dend_18 { pt3dadd( 4.04039, -72.7212, 21.5517, 0.55 ) }
    dend_18 { pt3dadd( 4.96147, -76.0376, 25.653, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.6585, -37.1132, -5.01073, 0.55 ) }
    dend_16 { pt3dadd( -17.0921, -37.712, -6.63477, 0.55 ) }
    dend_16 { pt3dadd( -18.0871, -37.8297, -7.07759, 0.55 ) }
    dend_16 { pt3dadd( -20.5629, -38.1311, -8.11951, 0.55 ) }
    dend_16 { pt3dadd( -25.9122, -38.6795, -10.2273, 0.28 ) }
    dend_16 { pt3dadd( -26.6945, -38.7498, -10.5033, 0.55 ) }
    dend_16 { pt3dadd( -29.9328, -39.1209, -11.5606, 0.55 ) }
    dend_16 { pt3dadd( -34.2578, -39.6559, -12.6858, 0.55 ) }
    dend_16 { pt3dadd( -35.8977, -39.822, -13.0842, 0.28 ) }
    dend_16 { pt3dadd( -37.3045, -39.8948, -13.3675, 0.28 ) }
    dend_16 { pt3dadd( -39.6135, -40.0007, -13.5974, 0.55 ) }
    dend_16 { pt3dadd( -42.45, -40.0131, -13.9591, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -45.0689, -39.8357, -14.3343, 0.55 ) }
    dend_16 { pt3dadd( -47.0684, -39.5629, -14.5888, 0.55 ) }
    dend_16 { pt3dadd( -48.4485, -39.276, -14.7961, 0.55 ) }
    dend_16 { pt3dadd( -52.5246, -38.2729, -15.4983, 0.55 ) }
    dend_16 { pt3dadd( -56.7669, -36.9807, -16.1642, 0.55 ) }
    dend_16 { pt3dadd( -58.4985, -36.3687, -16.4013, 0.28 ) }
    dend_16 { pt3dadd( -60.1552, -35.8073, -16.6522, 0.55 ) }
    dend_16 { pt3dadd( -63.5256, -34.8537, -17.1386, 0.28 ) }
    dend_16 { pt3dadd( -64.6593, -34.5609, -17.2937, 0.83 ) }
    dend_16 { pt3dadd( -66.7319, -34.0026, -17.4655, 0.28 ) }
    dend_16 { pt3dadd( -68.1758, -33.7101, -17.4304, 0.55 ) }
    dend_16 { pt3dadd( -70.2659, -33.3533, -17.3451, 0.28 ) }
    dend_16 { pt3dadd( -71.0885, -33.2036, -17.2873, 0.55 ) }
    dend_16 { pt3dadd( -72.5888, -32.958, -17.1095, 0.55 ) }
    dend_16 { pt3dadd( -74.8044, -32.386, -16.7582, 0.55 ) }
    dend_16 { pt3dadd( -76.2143, -31.9349, -16.4528, 0.28 ) }
    dend_16 { pt3dadd( -77.3033, -31.4437, -16.1192, 0.55 ) }
    dend_16 { pt3dadd( -78.5721, -30.7071, -15.727, 0.28 ) }
    dend_16 { pt3dadd( -78.7818, -30.5685, -15.6688, 0.55 ) }
    dend_16 { pt3dadd( -80.8463, -29.2177, -15.4536, 0.28 ) }
    dend_16 { pt3dadd( -82.4007, -28.1966, -15.4407, 0.55 ) }
    dend_16 { pt3dadd( -84.5389, -26.7051, -15.6668, 0.83 ) }
    dend_16 { pt3dadd( -86.3637, -25.4271, -16.0178, 0.28 ) }
    dend_16 { pt3dadd( -86.8506, -25.0965, -16.1463, 0.55 ) }
    dend_16 { pt3dadd( -90.6559, -22.5923, -17.2973, 0.28 ) }
    dend_16 { pt3dadd( -91.3431, -22.1587, -17.55, 0.55 ) }
    dend_16 { pt3dadd( -93.3969, -20.7636, -18.3886, 0.28 ) }
    dend_16 { pt3dadd( -93.9283, -20.4042, -18.608, 0.55 ) }
    dend_16 { pt3dadd( -95.2637, -19.4774, -19.1009, 0.28 ) }
    dend_16 { pt3dadd( -96.191, -18.8162, -19.4039, 0.55 ) }
    dend_16 { pt3dadd( -98.1675, -17.3603, -19.8367, 0.28 ) }
    dend_16 { pt3dadd( -99.3356, -16.5694, -20.058, 0.55 ) }
    dend_16 { pt3dadd( -101.802, -15.0244, -20.4231, 0.28 ) }
    dend_16 { pt3dadd( -102.538, -14.5999, -20.5229, 0.55 ) }
    dend_16 { pt3dadd( -103.687, -14.0142, -20.6457, 0.28 ) }
    dend_16 { pt3dadd( -104.645, -13.5238, -20.7099, 0.55 ) }
    dend_16 { pt3dadd( -106.598, -12.5379, -20.742, 0.28 ) }
    dend_16 { pt3dadd( -107.181, -12.2543, -20.7352, 0.55 ) }
    dend_16 { pt3dadd( -111.433, -10.0858, -20.5064, 0.28 ) }
    dend_16 { pt3dadd( -112.865, -9.23805, -20.3082, 0.55 ) }
    dend_16 { pt3dadd( -115.34, -7.62094, -19.801, 0.28 ) }
    dend_16 { pt3dadd( -116.436, -6.85112, -19.5387, 0.55 ) }
    dend_16 { pt3dadd( -118.892, -5.11694, -18.7985, 0.28 ) }
    dend_16 { pt3dadd( -119.782, -4.52548, -18.4888, 0.55 ) }
    dend_16 { pt3dadd( -122.963, -2.70537, -17.2017, 0.28 ) }
    dend_16 { pt3dadd( -124.306, -2.12471, -16.6561, 0.55 ) }
    dend_16 { pt3dadd( -126.255, -1.62948, -15.8617, 0.55 ) }
    dend_16 { pt3dadd( -127.451, -1.4064, -15.3465, 0.55 ) }
    dend_16 { pt3dadd( -129.811, -1.03476, -14.1135, 0.28 ) }
    dend_16 { pt3dadd( -132.064, -0.708427, -12.7536, 0.28 ) }
    dend_16 { pt3dadd( -133.912, -0.434471, -11.5639, 0.55 ) }
    dend_16 { pt3dadd( -136.008, 0.0957016, -9.8472, 0.28 ) }
    dend_16 { pt3dadd( -136.939, 0.500073, -8.83942, 0.55 ) }
    dend_16 { pt3dadd( -138.935, 1.92015, -6.16048, 0.28 ) }
    dend_16 { pt3dadd( -139.715, 2.92286, -4.44702, 0.55 ) }
    dend_16 { pt3dadd( -140.07, 3.70765, -3.14456, 0.28 ) }
    dend_16 { pt3dadd( -140.296, 4.56459, -1.4456, 0.55 ) }
    dend_16 { pt3dadd( -140.461, 5.67161, 0.828683, 0.28 ) }
    dend_16 { pt3dadd( -140.534, 6.06048, 1.68606, 0.55 ) }
    dend_16 { pt3dadd( -141.189, 7.82295, 5.84172, 0.28 ) }
    dend_16 { pt3dadd( -141.425, 8.37756, 7.23505, 0.55 ) }
    dend_16 { pt3dadd( -141.96, 9.5946, 10.5966, 0.28 ) }
    dend_16 { pt3dadd( -142.254, 10.2396, 12.4224, 0.55 ) }
    dend_16 { pt3dadd( -142.499, 10.7682, 13.9221, 0.55 ) }
    dend_16 { pt3dadd( -142.816, 11.3932, 15.687, 0.28 ) }
    dend_16 { pt3dadd( -143.06, 11.7226, 16.5178, 0.55 ) }
    dend_16 { pt3dadd( -143.966, 12.9178, 19.1934, 0.28 ) }
    dend_16 { pt3dadd( -144.402, 13.6809, 20.6147, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -13.6585, -37.1132, -5.01073, 0.55 ) }
    dend_15 { pt3dadd( -13.7194, -37.2442, -6.53488, 0.55 ) }
    dend_15 { pt3dadd( -13.714, -37.2214, -8.06622, 0.55 ) }
    dend_15 { pt3dadd( -13.5938, -37.08, -9.96931, 0.55 ) }
    dend_15 { pt3dadd( -13.414, -36.8571, -11.5112, 0.55 ) }
    dend_15 { pt3dadd( -11.3704, -34.5165, -21.4755, 0.55 ) }
    dend_15 { pt3dadd( -10.8973, -33.7541, -23.7276, 0.55 ) }
    dend_15 { pt3dadd( -10.223, -32.4019, -27.0718, 0.55 ) }
    dend_15 { pt3dadd( -9.74743, -31.3715, -29.4418, 0.55 ) }
    dend_15 { pt3dadd( -9.22353, -30.2519, -31.7272, 0.28 ) }
    dend_15 { pt3dadd( -8.24627, -28.368, -35.171, 0.55 ) }
    dend_15 { pt3dadd( -6.52786, -25.4506, -40.1775, 0.28 ) }
    dend_15 { pt3dadd( -6.48157, -25.266, -40.6676, 0.55 ) }
    dend_15 { pt3dadd( -7.05436, -24.5506, -43.9677, 0.28 ) }
    dend_15 { pt3dadd( -7.8303, -24.1667, -46.1233, 0.55 ) }
    dend_15 { pt3dadd( -8.90988, -23.9001, -48.3844, 0.55 ) }
    dend_15 { pt3dadd( -10.9335, -23.6359, -52.4302, 0.55 ) }
    dend_15 { pt3dadd( -14.89, -23.1797, -60.3829, 0.55 ) }
    dend_15 { pt3dadd( -17.4592, -22.9413, -65.7719, 0.55 ) }
    dend_15 { pt3dadd( -18.2982, -22.8811, -67.6555, 0.55 ) }
    dend_15 { pt3dadd( -23.5069, -22.4073, -80.156, 0.55 ) }
    dend_15 { pt3dadd( -24.7681, -22.2402, -83.596, 0.55 ) }
    dend_15 { pt3dadd( -25.3308, -22.1594, -85.5789, 0.55 ) }
    dend_15 { pt3dadd( -26.2529, -22.1202, -90.3202, 0.55 ) }
    dend_15 { pt3dadd( -27.8631, -22.6425, -101.849, 0.55 ) }
    dend_15 { pt3dadd( -28.1774, -22.9153, -104.976, 0.28 ) }
    dend_15 { pt3dadd( -28.2298, -23.1573, -106.772, 0.55 ) }
    dend_15 { pt3dadd( -28.2682, -23.6216, -109.439, 0.28 ) }
    dend_15 { pt3dadd( -28.2129, -23.9217, -110.538, 0.55 ) }
    dend_15 { pt3dadd( -27.2967, -25.3448, -113.668, 0.28 ) }
    dend_15 { pt3dadd( -25.7225, -27.3387, -115.129, 0.55 ) }
    dend_15 { pt3dadd( -24.7498, -28.7444, -115.93, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -23.7977, -30.2847, -116.531, 0.55 ) }
    dend_15 { pt3dadd( -22.9433, -31.9438, -116.972, 0.28 ) }
    dend_15 { pt3dadd( -22.599, -32.7876, -117.179, 0.55 ) }
    dend_15 { pt3dadd( -21.7771, -34.991, -117.576, 0.28 ) }
    dend_15 { pt3dadd( -21.6261, -35.6361, -117.759, 0.55 ) }
    dend_15 { pt3dadd( -20.8834, -39.3159, -118.981, 0.28 ) }
    dend_15 { pt3dadd( -20.6132, -41.0033, -119.765, 0.55 ) }
    dend_15 { pt3dadd( -20.1363, -44.5829, -121.867, 0.28 ) }
    dend_15 { pt3dadd( -19.9905, -45.8926, -122.803, 0.55 ) }
    dend_15 { pt3dadd( -19.502, -50.1827, -126.205, 0.28 ) }
    dend_15 { pt3dadd( -19.4014, -51.2222, -127.076, 0.55 ) }
    dend_15 { pt3dadd( -19.2309, -54.4962, -129.892, 0.28 ) }
    dend_15 { pt3dadd( -19.1991, -55.2653, -130.473, 0.55 ) }
    dend_15 { pt3dadd( -19.1663, -57.2941, -131.954, 0.28 ) }
    dend_15 { pt3dadd( -19.2002, -58.4617, -132.924, 0.55 ) }
    dend_15 { pt3dadd( -19.2478, -59.6029, -133.982, 0.55 ) }
    dend_15 { pt3dadd( -19.332, -61.8816, -136.079, 0.28 ) }
    dend_15 { pt3dadd( -19.3549, -63.2864, -137.601, 0.55 ) }
    dend_15 { pt3dadd( -19.2269, -66.7731, -142.545, 0.28 ) }
    dend_15 { pt3dadd( -19.1624, -67.8927, -144.53, 0.55 ) }
    dend_15 { pt3dadd( -19.0825, -68.6037, -145.894, 0.28 ) }
    dend_15 { pt3dadd( -18.9656, -69.2522, -147.271, 0.55 ) }
    dend_15 { pt3dadd( -18.4933, -71.0697, -151.494, 0.28 ) }
    dend_15 { pt3dadd( -18.0862, -72.4886, -154.648, 0.55 ) }
    dend_15 { pt3dadd( -17.1901, -75.2316, -159.802, 0.28 ) }
    dend_15 { pt3dadd( -16.8999, -76.0858, -161.421, 0.55 ) }
    dend_15 { pt3dadd( -16.1616, -77.6791, -164.374, 0.28 ) }
    dend_15 { pt3dadd( -15.8629, -78.2093, -165.309, 0.55 ) }
    dend_15 { pt3dadd( -15.1984, -79.0837, -166.645, 0.28 ) }
    dend_15 { pt3dadd( -14.5343, -79.8338, -167.745, 0.55 ) }
    dend_15 { pt3dadd( -12.4766, -81.739, -170.465, 0.28 ) }
    dend_15 { pt3dadd( -10.0478, -83.7818, -173.538, 0.28 ) }
    dend_15 { pt3dadd( -8.7154, -84.7458, -174.987, 0.28 ) }
    dend_15 { pt3dadd( -7.43625, -85.6471, -176.541, 0.55 ) }
    dend_15 { pt3dadd( -5.55183, -86.8362, -178.824, 0.28 ) }
    dend_15 { pt3dadd( -4.69302, -87.3494, -179.818, 0.83 ) }
    dend_15 { pt3dadd( -2.43119, -88.7122, -182.255, 0.28 ) }
    dend_15 { pt3dadd( -1.50505, -89.3261, -183.374, 0.55 ) }
    dend_15 { pt3dadd( 2.34235, -92.221, -188.516, 0.28 ) }
    dend_15 { pt3dadd( 4.09948, -93.6783, -191.281, 0.28 ) }
    dend_15 { pt3dadd( 5.28059, -94.7224, -193.404, 0.55 ) }
    dend_15 { pt3dadd( 5.86533, -95.3419, -194.753, 0.55 ) }
    dend_15 { pt3dadd( 7.22164, -97.0029, -198.538, 0.28 ) }
    dend_15 { pt3dadd( 8.37179, -98.6839, -202.172, 0.55 ) }
    dend_15 { pt3dadd( 9.40209, -100.304, -205.48, 0.28 ) }
    dend_15 { pt3dadd( 10.2282, -101.791, -208.575, 0.55 ) }
    dend_15 { pt3dadd( 10.9253, -102.997, -211.125, 0.28 ) }
    dend_15 { pt3dadd( 11.5889, -103.867, -213.143, 0.55 ) }
    dend_15 { pt3dadd( 13.3779, -105.749, -217.869, 0.28 ) }
    dend_15 { pt3dadd( 14.35, -106.709, -220.198, 0.55 ) }
    dend_15 { pt3dadd( 15.8947, -108.174, -223.606, 0.28 ) }
    dend_15 { pt3dadd( 17.2176, -109.303, -226.349, 0.55 ) }
    dend_15 { pt3dadd( 20.358, -111.67, -232.782, 0.28 ) }
    dend_15 { pt3dadd( 21.5412, -112.471, -235.532, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.6225, -141.528, 105.21, 0.55 ) }
    dend_9 { pt3dadd( -12.8466, -147.481, 108.867, 0.55 ) }
    dend_9 { pt3dadd( -10.514, -153.505, 111.587, 0.55 ) }
    dend_9 { pt3dadd( -9.1005, -159.541, 114.878, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.6225, -141.528, 105.21, 0.55 ) }
    dend_8 { pt3dadd( -12.6505, -149.347, 111.32, 0.55 ) }
    dend_8 { pt3dadd( -13.2428, -156.114, 118.673, 0.55 ) }
    dend_8 { pt3dadd( -14.0426, -161.259, 127.28, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.7688, -142.254, 104.484, 0.55 ) }
    dend_6 { pt3dadd( -18.0248, -148.504, 107.839, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.7688, -142.254, 104.484, 0.55 ) }
    dend_5 { pt3dadd( -19.6113, -149.863, 109.725, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.88889, -125.416, 6.21214, 0.83 ) }
    dend_25 { pt3dadd( -6.36053, -128.74, 6.59928, 0.83 ) }
    dend_25 { pt3dadd( -5.79014, -131.556, 7.13486, 0.83 ) }
    dend_25 { pt3dadd( -5.22317, -134.355, 7.66723, 0.83 ) }
    dend_25 { pt3dadd( -4.68472, -137.013, 8.17281, 0.83 ) }
    dend_25 { pt3dadd( -3.85494, -141.109, 8.95195, 0.83 ) }
    dend_25 { pt3dadd( -3.03116, -145.175, 9.72545, 0.83 ) }
    dend_25 { pt3dadd( -2.2768, -147.89, 10.5869, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.88889, -125.416, 6.21214, 0.55 ) }
    dend_24 { pt3dadd( -5.27814, -128.078, 5.82716, 0.55 ) }
    dend_24 { pt3dadd( -4.1079, -130.142, 5.18734, 0.55 ) }
    dend_24 { pt3dadd( -3.33679, -131.659, 4.58177, 0.55 ) }
    dend_24 { pt3dadd( -2.7343, -133.408, 3.70412, 0.83 ) }
    dend_24 { pt3dadd( -2.22378, -135.378, 2.49368, 0.55 ) }
    dend_24 { pt3dadd( -1.72443, -137.304, 1.30972, 0.83 ) }
    dend_24 { pt3dadd( -1.33643, -139.376, -0.144853, 0.55 ) }
    dend_24 { pt3dadd( -1.13498, -140.575, -1.10078, 0.83 ) }
    dend_24 { pt3dadd( -0.704482, -144.43, -4.46797, 0.55 ) }
    dend_24 { pt3dadd( -0.655822, -147.429, -7.25575, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.96147, -76.0376, 25.653, 0.55 ) }
    dend_20 { pt3dadd( 3.9432, -82.8836, 32.2538, 0.55 ) }
    dend_20 { pt3dadd( 2.05715, -88.671, 39.6769, 0.55 ) }
    dend_20 { pt3dadd( -0.0601281, -93.5071, 47.7283, 0.55 ) }
    dend_20 { pt3dadd( -2.63543, -97.1578, 56.2894, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.96147, -76.0376, 25.653, 0.55 ) }
    dend_19 { pt3dadd( 5.63577, -81.9287, 31.8416, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.2768, -147.89, 10.5869, 0.55 ) }
    dend_27 { pt3dadd( -2.24894, -150.087, 11.1245, 0.55 ) }
    dend_27 { pt3dadd( -2.12814, -152.897, 11.8736, 0.55 ) }
    dend_27 { pt3dadd( -2.01479, -155.551, 12.566, 0.55 ) }
    dend_27 { pt3dadd( -1.95938, -157.435, 13.0316, 0.55 ) }
    dend_27 { pt3dadd( -1.90423, -160.794, 13.8138, 0.55 ) }
    dend_27 { pt3dadd( -1.63084, -170.241, 15.752, 0.55 ) }
    dend_27 { pt3dadd( -1.47515, -173.453, 16.2611, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( -1.36936, -175.715, 16.5038, 0.55 ) }
    dend_27 { pt3dadd( -1.25041, -178.297, 16.5684, 0.55 ) }
    dend_27 { pt3dadd( -1.21257, -180.288, 16.4426, 0.55 ) }
    dend_27 { pt3dadd( -1.0059, -184.946, 15.9367, 0.55 ) }
    dend_27 { pt3dadd( -0.974692, -188.473, 15.5625, 0.55 ) }
    dend_27 { pt3dadd( -0.88291, -190.795, 15.3789, 0.55 ) }
    dend_27 { pt3dadd( -0.630649, -196.821, 15.219, 0.55 ) }
    dend_27 { pt3dadd( -0.466208, -200.875, 15.297, 0.55 ) }
    dend_27 { pt3dadd( -0.194314, -206.108, 15.6929, 0.55 ) }
    dend_27 { pt3dadd( 0.246128, -212.061, 16.5963, 0.55 ) }
    dend_27 { pt3dadd( 0.74982, -216.054, 17.4263, 0.55 ) }
    dend_27 { pt3dadd( 1.11223, -218.418, 17.9734, 0.55 ) }
    dend_27 { pt3dadd( 1.40503, -220.596, 18.4763, 0.55 ) }
    dend_27 { pt3dadd( 1.80732, -223.353, 18.9768, 0.55 ) }
    dend_27 { pt3dadd( 2.64423, -229.986, 19.7403, 0.55 ) }
    dend_27 { pt3dadd( 3.04406, -232.557, 19.929, 0.55 ) }
    dend_27 { pt3dadd( 3.4183, -235.415, 20.1279, 0.55 ) }
    dend_27 { pt3dadd( 3.94212, -239.703, 20.4086, 0.55 ) }
    dend_27 { pt3dadd( 4.19412, -242.99, 20.6751, 0.55 ) }
    dend_27 { pt3dadd( 4.24619, -246.099, 20.91, 0.55 ) }
    dend_27 { pt3dadd( 4.16211, -249.054, 21.1509, 0.55 ) }
    dend_27 { pt3dadd( 4.03494, -251.934, 21.435, 0.55 ) }
    dend_27 { pt3dadd( 3.95465, -253.985, 21.6147, 0.55 ) }
    dend_27 { pt3dadd( 3.83072, -257.34, 21.7876, 0.55 ) }
    dend_27 { pt3dadd( 3.58812, -261.357, 21.6882, 0.55 ) }
    dend_27 { pt3dadd( 3.50465, -263.308, 21.4828, 0.55 ) }
    dend_27 { pt3dadd( 3.43524, -265.02, 21.1666, 0.55 ) }
    dend_27 { pt3dadd( 3.43382, -268.256, 20.3538, 0.55 ) }
    dend_27 { pt3dadd( 3.40487, -270.305, 19.7822, 0.55 ) }
    dend_27 { pt3dadd( 3.40957, -272.835, 19.1727, 0.55 ) }
    dend_27 { pt3dadd( 3.35671, -274.611, 18.8637, 0.55 ) }
    dend_27 { pt3dadd( 3.15511, -279.226, 18.2567, 0.55 ) }
    dend_27 { pt3dadd( 2.94587, -282.68, 18.068, 0.55 ) }
    dend_27 { pt3dadd( 2.58145, -288.031, 18.2383, 0.55 ) }
    dend_27 { pt3dadd( 2.46047, -291.497, 18.6743, 0.55 ) }
    dend_27 { pt3dadd( 2.31843, -295.136, 19.2568, 0.28 ) }
    dend_27 { pt3dadd( 2.23126, -296.597, 19.5571, 0.28 ) }
    dend_27 { pt3dadd( 2.03942, -300.15, 20.6185, 0.28 ) }
    dend_27 { pt3dadd( 1.86092, -303.435, 21.8697, 0.28 ) }
    dend_27 { pt3dadd( 2.08388, -307.815, 23.9341, 0.28 ) }
    dend_27 { pt3dadd( 3.6023, -317.705, 25.8693, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.2768, -147.89, 10.5869, 0.55 ) }
    dend_26 { pt3dadd( -0.578511, -148.659, 11.1368, 0.55 ) }
    dend_26 { pt3dadd( 2.85129, -150.532, 12.5271, 0.55 ) }
    dend_26 { pt3dadd( 5.77757, -152.33, 13.8574, 0.28 ) }
    dend_26 { pt3dadd( 8.89455, -154.353, 15.3839, 0.55 ) }
    dend_26 { pt3dadd( 10.7327, -155.625, 16.5747, 0.28 ) }
    dend_26 { pt3dadd( 13.8657, -157.895, 18.9608, 0.55 ) }
    dend_26 { pt3dadd( 15.0853, -159.049, 20.3737, 0.28 ) }
    dend_26 { pt3dadd( 15.5088, -159.464, 20.9822, 0.28 ) }
    dend_26 { pt3dadd( 16.2506, -160.067, 22.0453, 0.55 ) }
    dend_26 { pt3dadd( 19.254, -162.097, 25.8915, 0.28 ) }
    dend_26 { pt3dadd( 20.5572, -162.901, 27.463, 0.55 ) }
    dend_26 { pt3dadd( 24.6598, -165.27, 31.6483, 0.28 ) }
    dend_26 { pt3dadd( 26.9508, -166.464, 33.7275, 0.28 ) }
    dend_26 { pt3dadd( 29.8536, -167.997, 36.1221, 0.55 ) }
    dend_26 { pt3dadd( 34.2726, -170.377, 39.2532, 0.28 ) }
    dend_26 { pt3dadd( 34.888, -170.696, 39.6049, 0.55 ) }
    dend_26 { pt3dadd( 37.967, -172.264, 41.1136, 0.28 ) }
    dend_26 { pt3dadd( 38.2526, -172.41, 41.2177, 0.55 ) }
    dend_26 { pt3dadd( 40.7214, -174.048, 42.2208, 0.28 ) }
    dend_26 { pt3dadd( 41.8721, -174.923, 42.7755, 0.55 ) }
    dend_26 { pt3dadd( 51.3849, -181.484, 47.4254, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.63543, -97.1578, 56.2894, 0.55 ) }
    dend_22 { pt3dadd( -3.13174, -101.398, 67.1475, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.63543, -97.1578, 56.2894, 0.55 ) }
    dend_21 { pt3dadd( -5.58816, -104.007, 64.7428, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_23 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 15
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BP_4bf5a32d90_0_0


