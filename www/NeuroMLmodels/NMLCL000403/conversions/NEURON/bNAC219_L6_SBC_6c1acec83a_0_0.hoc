// Cell: bNAC219_L6_SBC_6c1acec83a_0_0
/*
{
  "id" : "bNAC219_L6_SBC_6c1acec83a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.46247, 5.85861, -0.00377942, 7.43125", "-6.65141, 5.3667, -0.00311965, 9.16559", "-5.84034, 4.87478, -0.00245988, 11.1008", "-5.02928, 4.38287, -0.0018001, 12.7187", "-4.21821, 3.89095, -0.00114033, 13.407", "-3.40715, 3.39904, -4.80554E-4, 14.0331", "-2.59608, 2.90712, 1.79219E-4, 14.6433", "-1.78502, 2.41521, 8.38993E-4, 15.2536", "-0.973954, 1.92329, 0.00149877, 15.5093", "-0.162889, 1.43138, 0.00215854, 15.3073", "0.648176, 0.939463, 0.00281831, 15.1053", "1.45924, 0.447548, 0.00347809, 14.9033", "2.27031, -0.0443665, 0.00413786, 14.4818", "3.08137, -0.536281, 0.00479764, 13.7638", "3.89244, -1.0282, 0.00545741, 12.8143", "4.7035, -1.52011, 0.00611718, 11.7232", "5.51457, -2.01203, 0.00677696, 10.29", "6.32563, -2.50394, 0.00743673, 8.85677", "7.1367, -2.99586, 0.0080965, 7.04177", "7.94776, -3.48777, 0.00875628, 4.64246", "8.75883, -3.97969, 0.00941605, 2.78846" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.16814, 7.81548, -1.4503, 1.32", "-2.82886, 9.62521, -2.27293, 1.32", "-3.3278, 10.9979, -2.97889, 1.32", "-4.56229, 14.1031, -4.72441, 2.04", "-6.45293, 18.0929, -7.14447, 1.32", "-7.86351, 20.9798, -8.90628, 1.8", "-9.22557, 23.7675, -10.6075, 1.32", "-10.3732, 26.0613, -12.1325, 1.68", "-11.3758, 28.0176, -13.5567, 1.68", "-12.8575, 30.8119, -15.846, 1.08", "-13.9495, 32.5487, -17.1964, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.03186, -3.28977, -1.5003, 1.8", "7.26228, -4.13496, -2.82658, 1.8", "9.87114, -5.92701, -5.63868, 1.8", "11.6497, -7.14875, -7.55585, 1.8", "13.3208, -8.29664, -9.35715, 2.16", "16.2247, -10.2914, -12.4873, 2.4", "16.6691, -10.5966, -12.9663, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.09186, -5.14227, 5.0897, 2.64", "3.23343, -6.10828, 5.80473, 2.64", "3.46381, -7.30795, 6.63638, 2.64", "4.72486, -12.2316, 9.73595, 1.92", "5.64851, -15.1056, 11.3891, 1.92", "6.76185, -18.0388, 12.9487, 1.92", "8.13709, -21.3965, 14.609, 2.4", "8.81576, -22.8763, 15.2855, 2.4", "10.1803, -25.5756, 16.4242, 1.8", "12.0685, -28.8672, 17.512, 1.56", "14.0361, -31.992, 18.4046, 1.8", "15.2258, -33.783, 18.8101, 1.8", "15.6442, -34.3841, 18.9401, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.79815, 0.912482, -0.0303001, 5.65", "-10.1848, -0.137347, -0.0192665, 4.93", "-11.5572, -0.74103, -0.0129219, 4.81", "-14.7191, -2.13187, 0.00169575, 1.92", "-16.9222, -3.101, 0.0118811, 1.68", "-19.2637, -4.13094, 0.0227056, 1.68", "-23.7076, -6.08572, 0.0432502, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.75883, -3.97969, 0.00941605, 1.21225", "21.5843, -11.7584, 0.00941605, 1.21225", "34.4097, -19.5371, 0.00941605, 1.21225" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-13.9495, 32.5487, -17.1964, 0.6", "-14.8606, 34.473, -17.5385, 0.6", "-15.5079, 35.8028, -17.906, 0.6", "-15.961, 36.6591, -18.1953, 0.6", "-16.5839, 37.9931, -18.9028, 1.68", "-17.2094, 39.6961, -19.9654, 0.72", "-17.4458, 40.3396, -20.3669, 0.72", "-18.3845, 43.0366, -22.3125, 0.6", "-18.9786, 44.849, -23.7918, 1.44", "-19.9456, 48.0953, -26.755, 0.84", "-20.2673, 49.5008, -28.2178, 1.8" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.9495, 32.5487, -17.1964, 1.32", "-13.9311, 32.9818, -18.182, 1.32", "-13.9208, 33.7562, -19.8163, 1.32", "-13.903, 34.3192, -20.9056, 1.32", "-13.87, 34.9579, -22.0837, 0.96", "-13.838, 35.5783, -23.228, 0.96", "-13.8152, 36.0191, -24.0412, 1.2", "-13.8113, 36.5968, -25.0801, 0.48", "-13.7839, 37.2182, -26.0627, 1.32", "-13.7589, 37.6179, -26.6315, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "16.6691, -10.5966, -12.9663, 1.56", "17.3013, -11.4481, -15.1204, 1.56", "18.5093, -13.8516, -19.9908, 1.32", "18.8455, -15.3029, -22.6178, 1.32", "19.0056, -16.7852, -24.9182, 1.68", "19.0512, -17.883, -26.4437, 1.68", "19.0501, -18.8473, -27.6139, 1.68", "18.8796, -21.0192, -29.608, 1.2", "18.1268, -25.8917, -32.8664, 1.2", "17.7396, -28.0488, -34.1204, 1.56", "17.5768, -28.9765, -34.6127, 1.56", "17.2369, -31.1637, -35.7113, 1.2", "16.9844, -32.966, -36.641, 1.2", "16.6486, -36.4776, -38.4927, 1.2", "16.6071, -37.8412, -39.2063, 1.2", "16.6157, -38.8085, -39.7429, 1.56", "16.6558, -41.2563, -41.2244, 1.08", "16.6982, -43.7653, -42.8822, 2.04", "16.7105, -44.9729, -43.6692, 2.04", "16.7088, -47.1332, -44.7774, 1.32", "16.7529, -50.6806, -46.4525, 2.16" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "16.6691, -10.5966, -12.9663, 1.32", "19.8504, -11.0584, -12.6715, 1.32", "21.5259, -11.3016, -12.5162, 1.32", "24.9819, -11.8032, -12.1959, 1.32", "26.3516, -12.0019, -12.069, 1.32", "31.0639, -12.6859, -11.6322, 1.2" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "15.6442, -34.3841, 18.9401, 1.2", "16.6637, -35.0314, 19.643, 1.2", "18.1522, -35.9685, 20.692, 1.2", "19.2399, -36.6283, 21.4675, 1.2", "20.5639, -37.4043, 22.4025, 2.04", "23.0407, -38.8273, 24.1258, 1.08", "24.2891, -39.5547, 24.9919, 1.08", "25.0559, -40.0382, 25.5686, 1.08", "25.9185, -40.5774, 26.2261, 1.08", "26.646, -41.0017, 26.7096, 1.08", "27.2924, -41.3617, 27.0485, 1.08", "27.7988, -41.6146, 27.219, 1.08", "28.8946, -42.1867, 27.5823, 1.08", "29.5417, -42.5358, 27.7647, 1.08", "30.3152, -42.9723, 28.0496, 1.08", "30.9287, -43.3193, 28.3016, 1.08", "31.8415, -43.824, 28.7335, 1.08", "32.3845, -44.0933, 29.0259, 1.08", "33.9404, -44.7584, 29.9992, 1.92", "35.8992, -45.3761, 31.3869, 0.96", "36.4952, -45.4801, 31.846, 0.96", "37.8554, -45.4736, 32.9321, 0.72", "38.7527, -45.2621, 33.6303, 1.32", "39.6826, -44.8396, 34.3197, 1.32", "41.1322, -43.8949, 35.2312, 0.84", "41.55, -43.6012, 35.4157, 0.84", "42.3029, -43.0959, 35.6836, 0.84", "42.9732, -42.6951, 35.7966, 0.84", "43.4886, -42.468, 35.802, 0.84", "44.9397, -42.0213, 35.6618, 0.72", "45.8675, -41.8651, 35.4951, 0.72", "46.4719, -41.7769, 35.3655, 0.72", "47.6643, -41.6104, 35.0368, 0.72", "48.2441, -41.5475, 34.8522, 0.72", "48.5042, -41.5185, 34.7504, 0.72", "49.8153, -41.362, 34.0079, 0.96", "56.492, -43.0368, 37.6582, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "15.6442, -34.3841, 18.9401, 0.96", "15.4159, -37.2056, 19.2287, 0.96", "15.1757, -40.1754, 19.5325, 1.08", "15.0519, -41.705, 19.689, 1.08", "14.8385, -44.3436, 19.9589, 1.56", "14.6954, -46.1116, 20.1397, 1.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-23.7076, -6.08572, 0.0432502, 1.08", "-24.4888, -8.11559, 0.715166, 1.08", "-24.7665, -8.94142, 0.94466, 1.08", "-25.0885, -10.073, 1.24611, 1.08", "-25.3328, -11.1149, 1.5566, 1.08", "-25.5761, -12.4655, 1.87605, 1.08", "-25.7251, -13.4934, 2.06288, 1.32", "-25.9982, -16.3769, 2.43987, 1.8", "-26.0107, -17.1924, 2.51155, 1.8", "-25.9027, -18.7612, 2.56349, 1.56", "-25.5279, -21.3653, 2.5132, 1.44", "-25.2083, -22.9073, 2.40639, 1.44", "-24.8575, -24.3208, 2.27348, 1.56", "-24.3719, -26.1306, 2.1108, 1.32", "-23.9181, -27.9323, 1.93944, 1.32", "-23.5064, -29.6355, 1.73597, 2.04", "-23.2162, -30.9185, 1.5915, 2.04", "-22.928, -32.3259, 1.38457, 1.08", "-22.6129, -34.1495, 1.04353, 1.44", "-22.3327, -36.0051, 0.631242, 1.44", "-22.0578, -37.7027, 0.21977, 0.96", "-21.8566, -38.8547, -0.0826458, 1.56", "-21.5316, -40.5592, -0.543323, 1.56", "-21.1063, -42.4632, -1.06232, 2.16", "-20.705, -43.9215, -1.41655, 1.56", "-20.3214, -44.9636, -1.56286, 1.56", "-19.3813, -46.9489, -1.73241, 1.8", "-18.9668, -47.6854, -1.77376, 1.8", "-18.4443, -48.5183, -1.79508, 1.8", "-17.8228, -49.4557, -1.78651, 1.8", "-16.03, -52.11, -1.8365, 1.56", "-14.2525, -54.6341, -1.95441, 1.56", "-13.5548, -55.5572, -2.0391, 1.56", "-12.9641, -56.4129, -2.34094, 1.56", "-12.3168, -57.3782, -2.73926, 1.8", "-10.9361, -59.5534, -3.80554, 1.44", "-10.3631, -60.5338, -4.40033, 1.44", "-9.36399, -62.3215, -5.65678, 1.8", "-6.15732, -68.265, -10.4232, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-23.7076, -6.08572, 0.0432502, 1.56", "-25.6416, -7.24912, 1.50726, 1.56", "-27.7674, -8.52792, 3.11649, 1.32", "-29.3341, -9.47037, 4.30247, 1.32", "-31.4039, -10.7155, 5.86934, 1.68", "-33.2275, -11.8125, 7.24973, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "34.4097, -19.5371, 0.00941605, 0.119518", "47.2351, -27.3158, 0.00941605, 0.119518", "60.0606, -35.0945, 0.00941605, 0.119518" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.2673, 49.5008, -28.2178, 0.84", "-15.9414, 50.4899, -25.0666, 0.84", "-14.7603, 50.7599, -24.2062, 1.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-20.2673, 49.5008, -28.2178, 0.96", "-20.2849, 50.401, -29.2958, 0.96", "-20.2929, 51.1118, -29.9998, 0.96", "-20.2953, 52.3393, -31.264, 1.2", "-20.1794, 54.5686, -33.5889, 0.96", "-20.0936, 55.2524, -34.2465, 0.72", "-19.8747, 56.3163, -35.2157, 1.44", "-19.6506, 56.9279, -35.7688, 1.44", "-18.6435, 58.9009, -37.4938, 0.84", "-18.2201, 59.525, -38.1643, 0.72", "-17.4806, 60.426, -39.4103, 1.68", "-16.8259, 61.1371, -40.5088, 0.72", "-16.1207, 61.8104, -41.6982, 1.2", "-15.4561, 62.3938, -42.8451, 1.32", "-13.0982, 64.2602, -46.9381, 0.72", "-12.0415, 65.0764, -49.1438, 0.72" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.7589, 37.6179, -26.6315, 0.84", "-13.1047, 38.8934, -27.4027, 0.84", "-12.46, 40.0924, -28.1633, 0.84", "-12.0893, 40.7914, -28.6787, 0.84", "-11.616, 41.7009, -29.4875, 0.6", "-11.2138, 42.474, -30.1748, 0.6", "-10.6408, 43.5751, -31.1539, 1.32", "-9.97909, 44.9113, -32.4506, 0.72", "-9.23103, 46.3902, -33.9033, 1.56", "-8.33092, 48.1354, -35.7654, 0.84" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-13.7589, 37.6179, -26.6315, 0.84", "-15.4049, 40.0439, -32.9509, 0.84", "-15.714, 40.4994, -34.1374, 1.2", "-16.1501, 41.1422, -35.8118, 0.84", "-16.5423, 41.7201, -37.3172, 1.2", "-17.3058, 42.8454, -40.2485, 0.84", "-17.6939, 43.4175, -41.7387, 1.2" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "16.7529, -50.6806, -46.4525, 0.72", "14.8657, -54.5923, -47.6033, 0.72", "14.1527, -56.0034, -47.9311, 1.2", "13.639, -56.9617, -48.1232, 1.2", "12.7935, -58.3894, -48.4897, 0.6", "11.7326, -60.0166, -48.9604, 1.92", "10.5479, -61.6864, -49.544, 1.08", "8.99707, -63.5451, -50.407, 1.68", "7.91938, -64.6588, -51.0576, 1.68", "5.78863, -66.6061, -52.4436, 0.96", "4.82403, -67.3721, -53.1036, 0.96", "3.17222, -68.4933, -54.3065, 1.44", "1.22082, -69.6169, -55.7636, 0.96", "-0.172625, -70.3535, -56.895, 1.44", "-1.6762, -71.1418, -58.1513, 0.96", "-2.80762, -71.7752, -59.0924, 1.56", "-4.64514, -72.8756, -60.6473, 0.84", "-6.43878, -74.0327, -62.1398, 1.56", "-8.87967, -75.7486, -64.1808, 1.08", "-10.1653, -76.7341, -65.2677, 0.84", "-11.7403, -78.0682, -66.6401, 1.08", "-12.0885, -78.3877, -66.9472, 0.72", "-13.4426, -79.7375, -68.1701, 1.2", "-14.7965, -81.1786, -69.392, 0.6", "-15.8561, -82.2931, -70.2544, 1.08", "-17.0398, -83.5029, -71.213, 0.72", "-18.3181, -84.7375, -72.2773, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.7529, -50.6806, -46.4525, 0.48", "19.7231, -52.6119, -47.877, 0.48", "22.6466, -54.547, -49.3361, 1.32", "24.6233, -55.8886, -50.3569, 0.96", "26.0639, -56.8665, -51.1038, 1.56", "28.5652, -58.5877, -52.4179, 0.96", "30.8908, -60.2328, -53.6693, 1.68", "33.3515, -62.0195, -55.0871, 1.08", "35.2523, -63.4943, -56.2517, 1.8", "35.9703, -64.1107, -56.7153, 1.8", "38.4596, -66.4707, -58.4497, 1.08", "39.8224, -67.9591, -59.5403, 1.56", "40.7993, -69.2219, -60.4222, 1.08", "41.697, -70.6085, -61.3069, 1.56", "42.9216, -72.894, -62.6317, 1.08", "43.7112, -74.5996, -63.5581, 1.68", "44.6128, -76.8323, -64.6848, 1.2", "45.3762, -78.7467, -65.606, 1.2", "46.385, -81.2816, -66.7885, 1.8", "47.2756, -83.7185, -67.9507, 1.2", "47.7476, -85.1667, -68.8541, 1.8", "48.6796, -88.1421, -71.0047, 1.2", "49.6971, -91.3013, -73.5679, 1.68", "50.365, -93.223, -75.2476, 1.2", "51.2963, -95.8002, -77.7835, 1.68", "53.3898, -101.279, -83.6414, 1.2", "53.9266, -102.619, -85.159, 1.2", "54.3724, -103.695, -86.4447, 1.2", "55.1819, -105.58, -88.8047, 1.56", "56.8733, -109.077, -93.2271, 0.96", "57.8354, -110.724, -95.2051, 1.44", "58.6619, -112.106, -96.5863, 0.72", "59.4105, -113.462, -98.0992, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "31.0639, -12.6859, -11.6322, 0.72", "33.1517, -11.4367, -12.1419, 0.72", "34.6326, -10.3877, -12.5511, 0.72", "35.7359, -9.51143, -12.887, 0.72", "36.7518, -8.59796, -13.2613, 0.72", "37.9062, -7.43832, -13.836, 0.48", "38.221, -7.06825, -14.0541, 0.96", "39.2708, -5.51127, -15.1565, 0.6", "40.0751, -4.11808, -16.3762, 1.44", "40.8284, -2.70294, -17.8458, 0.72", "41.6137, -1.2711, -19.6983, 1.2", "42.5584, 0.452337, -22.1215, 0.6", "43.5264, 2.22804, -24.7926, 1.2", "44.2918, 3.65701, -27.161, 0.84", "44.9689, 4.92885, -29.5115, 1.68", "45.8533, 6.41731, -32.6288, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "31.0639, -12.6859, -11.6322, 0.48", "33.2241, -13.6987, -12.1348, 0.48", "34.8141, -14.6278, -12.5845, 0.96", "35.4261, -15.0621, -12.8004, 0.72", "37.6471, -16.8902, -13.6881, 1.2", "39.4898, -18.6215, -14.4886, 0.84", "41.1444, -20.3882, -15.2753, 1.68", "42.3452, -22.0248, -15.9822, 0.96", "43.3719, -23.8165, -16.7076, 1.92", "43.8599, -24.8872, -17.108, 1.92", "44.346, -26.3479, -17.5944, 0.96", "44.7713, -27.9088, -18.0272, 1.44", "44.9767, -28.756, -18.1877, 1.44", "45.5456, -30.9844, -18.4122, 0.72", "45.77, -31.7703, -18.4308, 0.72", "46.229, -33.2579, -18.3831, 1.32", "47.1208, -35.6998, -18.0059, 1.32", "47.5996, -36.7757, -17.7037, 1.32", "48.1057, -37.7465, -17.3503, 1.32", "48.4545, -38.3568, -17.0839, 1.32", "49.5204, -40.1218, -16.227, 0.72", "51.0066, -42.478, -14.9407, 1.8", "51.9607, -43.888, -14.1822, 1.8", "52.6069, -44.7761, -13.6623, 1.8" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "14.6954, -46.1116, 20.1397, 1.44", "16.852, -47.5931, 20.5018, 1.44", "18.6813, -49.0839, 20.913, 1.44", "20.0668, -50.3738, 21.2996, 1.44", "21.3795, -51.7825, 21.7448, 1.44", "22.2964, -52.8457, 22.0734, 1.44", "23.6619, -54.5458, 22.6077, 1.44", "24.4345, -55.6654, 22.9859, 1.08", "25.194, -56.8829, 23.469, 1.44", "26.5839, -59.169, 24.395, 1.08", "27.4829, -60.5603, 24.9305, 1.56", "28.6727, -62.2187, 25.5789, 0.96", "29.5554, -63.2896, 26.004, 0.96", "31.3621, -65.2806, 26.8184, 0.96", "32.666, -66.6213, 27.395, 0.96", "33.5315, -67.4665, 27.7904, 0.96", "34.3753, -68.2904, 28.1883, 0.96", "35.6292, -69.4952, 28.7866, 0.72", "36.2546, -70.126, 29.0962, 0.72", "37.3647, -71.3239, 29.6803, 0.72", "38.2355, -72.3224, 30.2678, 0.72", "38.7092, -72.8655, 30.6096, 0.72", "39.3807, -73.5761, 31.1026, 0.72", "39.8768, -74.0788, 31.4761, 0.72", "41.074, -75.1845, 32.3369, 0.72", "41.6031, -75.6194, 32.6764, 0.72", "42.4638, -76.238, 33.1919, 0.72", "43.5432, -76.9475, 33.8322, 0.72", "52.7078, -82.4426, 38.0626, 0.72" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "14.6954, -46.1116, 20.1397, 1.44", "13.4347, -46.9058, 21.234, 1.44", "11.406, -48.3274, 22.5878, 1.44", "10.2589, -49.2416, 23.22, 1.2", "9.1693, -50.2296, 23.7131, 1.2", "7.39981, -51.9456, 24.3433, 1.08", "6.46637, -52.8439, 24.6161, 1.08", "4.32155, -54.8328, 24.8957, 1.32", "3.18808, -55.8631, 24.8809, 1.32", "2.01909, -56.961, 24.8132, 0.96", "0.88791, -58.0463, 24.6734, 0.96", "-0.574367, -59.4397, 24.4547, 1.32", "-1.94407, -60.6715, 24.2518, 0.96", "-3.07745, -61.6163, 24.1459, 0.96", "-5.24679, -63.3489, 23.9641, 1.44", "-7.52548, -65.1284, 23.8146, 0.96", "-8.13689, -65.6221, 23.7829, 0.96", "-10.1396, -67.3373, 23.6911, 1.8", "-11.6197, -68.6509, 23.5171, 1.32", "-12.2485, -69.2023, 23.4276, 1.32", "-12.6913, -69.5785, 23.368, 1.32", "-13.65, -70.3749, 23.2806, 0.96", "-14.1534, -70.7866, 23.2118, 0.96", "-17.6683, -73.6562, 22.6272, 2.4", "-20.0545, -75.6187, 22.1688, 0.84", "-21.988, -77.2068, 21.7769, 2.16", "-22.7502, -77.8275, 21.6196, 2.16", "-25.588, -80.0574, 21.0527, 0.84", "-27.2224, -81.2895, 20.7937, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.15732, -68.265, -10.4232, 0.84", "-5.761, -69.1058, -10.2813, 0.84", "-5.48775, -69.6958, -10.1903, 0.96", "-5.09836, -70.6011, -10.0689, 0.72", "-4.47923, -72.1027, -9.89869, 0.72", "-3.75987, -73.9873, -9.71148, 1.08", "-3.24629, -75.4418, -9.53385, 1.08", "-3.05905, -76.0144, -9.45566, 1.08", "-2.64959, -77.4992, -9.25335, 0.6", "-2.37532, -78.7695, -9.06879, 1.32", "-2.20977, -79.9263, -8.87555, 1.32", "-2.06708, -81.2837, -8.65451, 0.72", "-2.00748, -81.8507, -8.57292, 0.72", "-1.84762, -83.0868, -8.36842, 1.2", "-1.67224, -84.1193, -8.15406, 0.48", "-1.47725, -85.05, -7.94421, 1.08", "-1.18061, -86.1946, -7.69908, 0.6", "-0.693903, -87.845, -7.40145, 1.2", "-0.0701802, -89.7507, -7.00286, 0.72", "0.48538, -91.2363, -6.628, 1.32", "0.99605, -92.4478, -6.27318, 0.72", "1.48601, -93.517, -5.89869, 1.08", "2.0133, -94.6419, -5.47168, 0.48", "2.50389, -95.6652, -5.07264, 0.48", "2.99546, -96.7284, -4.72946, 1.32", "3.27627, -97.4156, -4.51421, 1.32", "3.62415, -98.4992, -4.17141, 0.72", "3.75706, -99.4219, -3.95167, 1.32", "3.63771, -100.538, -3.97511, 0.6", "3.30574, -101.57, -4.29332, 1.56", "3.01897, -102.157, -4.58966, 1.56", "2.61482, -102.844, -5.02368, 0.72", "1.73496, -104.169, -6.01362, 1.68", "0.65326, -105.789, -7.31942, 1.2", "0.199834, -106.533, -7.93026, 1.56", "-0.273159, -107.462, -8.65339, 0.96", "-0.603736, -108.304, -9.23731, 0.96", "-0.798766, -109.078, -9.67837, 1.56", "-0.9673, -110.204, -10.1766, 1.56", "-1.14406, -111.397, -10.5316, 1.2", "-1.28089, -112.252, -10.7161, 1.2", "-1.56202, -113.736, -10.9852, 1.68", "-2.02103, -115.839, -11.3023, 0.96", "-2.306, -116.937, -11.4192, 0.96", "-3.01387, -119.338, -11.5902, 0.48", "-3.29461, -120.251, -11.6255, 1.56", "-4.0032, -122.665, -11.6559, 0.96", "-4.13608, -123.145, -11.646, 0.96", "-4.56258, -124.916, -11.4863, 1.44", "-4.71569, -126.027, -11.3444, 1.08", "-4.73561, -127.64, -11.1106, 0.72", "-4.66093, -128.829, -10.8892, 0.72", "-4.57488, -129.476, -10.7275, 0.72", "-4.33896, -130.925, -10.3505, 1.32", "-4.0435, -132.406, -9.9723, 0.72", "-3.86806, -133.289, -9.76143, 0.72", "-3.78631, -133.704, -9.61215, 0.72", "-3.68608, -134.211, -9.37746, 0.72", "-3.45329, -135.331, -8.78638, 1.2", "-3.20187, -136.495, -8.10721, 0.6", "-2.9844, -137.496, -7.43841, 1.2", "-2.43835, -139.891, -5.66633, 0.72", "-2.17733, -140.911, -4.8724, 0.72", "-1.91675, -141.795, -4.17152, 1.32", "-1.63629, -142.653, -3.49928, 0.6", "-1.24798, -143.84, -2.62182, 1.2", "-0.838624, -145.133, -1.73879, 0.72", "-0.54252, -146.155, -1.1531, 0.72", "-0.244035, -147.306, -0.45683, 1.2", "-0.00775525, -148.303, 0.168198, 0.6", "0.1549, -149.028, 0.636215, 1.2", "0.448945, -150.37, 1.5288, 0.48", "0.65452, -151.367, 2.18557, 1.44", "0.83485, -152.528, 3.00214, 0.96", "0.88459, -153.047, 3.40291, 0.96", "0.89757, -153.329, 3.61651, 0.96", "0.89994, -153.924, 4.0126, 0.96", "0.85126, -154.803, 4.46509, 0.96", "0.75148, -155.911, 4.90662, 1.68", "0.541595, -157.427, 5.55158, 0.96", "0.3692, -158.502, 6.05334, 1.32", "0.153139, -159.717, 6.68751, 0.72", "-0.0331332, -160.778, 7.30803, 0.72", "-0.167703, -161.684, 7.89471, 1.2", "-0.374605, -163.814, 9.40106, 0.6", "-0.415589, -164.492, 9.92861, 0.96", "-0.428351, -165.476, 10.8214, 0.6", "-0.424745, -166.23, 11.5736, 1.32", "-0.427961, -166.701, 12.0621, 1.32", "-0.447191, -167.055, 12.4207, 1.32", "-0.50497, -167.591, 12.8817, 1.32", "-0.658801, -168.351, 13.564, 0.96", "-0.952417, -169.422, 14.4719, 1.44", "-1.19748, -170.112, 15.0751, 1.44", "-1.50961, -170.854, 15.7401, 0.72", "-1.85234, -171.563, 16.4007, 1.2", "-2.31444, -172.432, 17.2172, 0.48", "-2.84164, -173.248, 17.9682, 1.08", "-3.39199, -174.053, 18.728, 0.6", "-3.82518, -174.663, 19.2966, 1.2", "-4.385, -175.403, 19.9872, 0.6", "-4.68119, -175.768, 20.3312, 0.6", "-5.36771, -176.546, 21.0909, 1.2", "-5.99161, -177.183, 21.7997, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.15732, -68.265, -10.4232, 0.96", "-4.96237, -69.6641, -10.3883, 0.96", "-3.76691, -71.0637, -10.3534, 0.96", "-2.3305, -72.7454, -10.3115, 2.64" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-33.2275, -11.8125, 7.24973, 1.32", "-34.3724, -11.513, 7.96336, 1.32", "-35.5722, -11.1992, 8.71114, 1.32", "-36.8693, -10.8599, 9.5196, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-33.2275, -11.8125, 7.24973, 0.96", "-34.5628, -14.424, 7.69727, 0.96", "-35.0154, -15.1163, 7.91361, 1.44", "-35.7624, -16.027, 8.33558, 1.44", "-36.3536, -16.6779, 8.70638, 1.44", "-37.1074, -17.491, 9.20032, 1.44", "-38.7778, -19.3154, 10.351, 1.68", "-40.0121, -20.5675, 11.3259, 1.2", "-41.1704, -21.7679, 12.3118, 1.2", "-41.6404, -22.2619, 12.7484, 1.2", "-42.175, -22.8738, 13.2592, 1.2", "-42.6846, -23.5285, 13.7537, 1.2", "-42.9292, -23.9643, 13.9915, 1.2", "-43.157, -24.5465, 14.2569, 1.2", "-43.3934, -25.2762, 14.556, 1.2", "-43.9874, -26.9936, 15.249, 1.56", "-44.464, -28.0469, 15.6896, 1.08", "-44.9658, -28.9353, 16.0626, 1.08", "-45.4756, -29.6261, 16.4152, 1.08", "-46.1182, -30.4241, 16.8375, 1.08", "-46.5407, -30.899, 17.0924, 1.08", "-47.791, -32.0577, 17.8393, 1.08", "-48.2152, -32.3576, 18.051, 1.08", "-49.8663, -33.2026, 18.7999, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-18.3181, -84.7375, -72.2773, 1.08", "-17.3129, -86.4607, -72.6821, 1.08", "-16.1452, -88.4624, -73.1524, 1.32" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-18.3181, -84.7375, -72.2773, 0.84", "-19.9669, -86.7627, -72.1909, 0.84", "-21.8946, -88.9042, -72.7241, 1.44", "-23.8173, -91.0401, -73.2558, 0.6", "-25.4496, -92.8535, -73.7073, 1.08", "-28.5042, -96.2469, -74.5521, 0.48", "-31.0435, -99.0678, -75.2544, 1.56", "-34.7574, -102.922, -76.8072, 0.96" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "52.6069, -44.7761, -13.6623, 0.84", "52.9785, -46.3812, -13.4217, 0.84", "53.2561, -47.6088, -13.2316, 1.44", "54.0564, -51.0148, -12.7149, 0.48", "54.7181, -53.831, -12.2878, 0.48", "55.1661, -55.7378, -11.9985, 1.44", "55.8031, -58.4487, -11.5873, 0.6", "56.0971, -59.6308, -11.4242, 0.6", "56.5069, -61.2188, -11.1948, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "52.6069, -44.7761, -13.6623, 0.6", "53.9819, -45.5252, -13.5176, 0.6", "55.6509, -46.3524, -13.2707, 1.2", "56.1878, -46.6271, -13.1736, 1.2", "57.1696, -47.1632, -12.9771, 0.6", "59.8198, -48.7167, -12.3727, 1.68", "60.8274, -49.324, -12.1158, 1.68", "62.482, -50.328, -11.6556, 0.84", "63.9862, -51.1917, -11.2116, 0.84", "65.5355, -52.0489, -10.7356, 1.44", "67.4145, -53.0964, -10.1289, 0.84", "69.638, -54.4007, -9.37464, 1.56", "72.2059, -55.9087, -8.48745, 1.08", "73.8299, -56.8386, -7.93363, 1.56", "75.9911, -58.0035, -7.19876, 2.04", "78.2286, -59.1417, -6.43261, 1.2", "80.0885, -60.0479, -5.80299, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-27.2224, -81.2895, 20.7937, 0.48", "-27.4532, -82.8235, 21.4568, 0.48", "-27.6276, -84.3741, 22.0211, 1.56", "-27.8453, -87.1238, 22.8432, 0.6", "-27.8628, -88.905, 23.2706, 1.8", "-27.8175, -90.8539, 23.653, 0.6", "-27.7702, -91.9161, 23.8298, 0.6", "-27.6616, -93.2006, 23.9683, 0.6", "-27.4636, -94.6949, 24.0865, 1.56", "-26.9984, -97.0359, 24.1484, 0.48", "-26.601, -98.6486, 24.1902, 0.48", "-26.3916, -99.4132, 24.2163, 0.48", "-25.9633, -100.921, 24.3045, 1.68", "-25.3381, -103.07, 24.5093, 1.08", "-24.9144, -104.422, 24.7027, 1.08", "-23.3981, -112.974, 24.8851, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-27.2224, -81.2895, 20.7937, 0.72", "-28.241, -81.5671, 20.5718, 0.72", "-28.8314, -81.7452, 20.4164, 1.56", "-29.3898, -81.9442, 20.2644, 0.72", "-30.223, -82.2793, 20.0193, 1.32", "-31.1514, -82.6984, 19.8379, 0.72", "-31.8779, -83.0621, 19.7467, 1.56", "-32.7732, -83.6154, 19.6714, 0.84", "-33.234, -83.9515, 19.6667, 0.84", "-34.0115, -84.6285, 19.7233, 1.92", "-35.2152, -85.8769, 19.968, 0.96", "-35.6634, -86.3937, 20.1063, 0.96", "-36.5108, -87.4655, 20.4559, 0.72", "-36.77, -87.8247, 20.5876, 1.32", "-37.2339, -88.4986, 20.8447, 0.84", "-37.6136, -89.1566, 21.0945, 1.2", "-41.5599, -91.7093, 21.2764, 1.2" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.3305, -72.7454, -10.3115, 0.96", "-3.06558, -74.5991, -10.8936, 0.96", "-3.6968, -76.439, -11.4365, 0.96", "-3.93837, -77.1691, -11.6359, 0.96", "-4.18492, -77.9252, -11.8263, 0.96", "-4.56497, -79.093, -12.0786, 0.96", "-4.76134, -79.6933, -12.1923, 0.96", "-4.8406, -80.0255, -12.2343, 0.96", "-5.02928, -80.6927, -12.2644, 0.96", "-5.15309, -81.0063, -12.2908, 0.96", "-5.54161, -81.7931, -12.4277, 0.96", "-5.85106, -82.3081, -12.5956, 0.96", "-6.34416, -83.1018, -12.9595, 0.6", "-7.01219, -84.1689, -13.5479, 1.56", "-7.89232, -85.556, -14.4267, 0.96", "-8.42376, -86.3583, -14.9873, 0.96", "-9.46439, -87.8717, -16.0895, 0.72", "-10.5295, -89.4346, -17.1933, 1.2", "-11.3436, -90.6294, -18.0029, 0.72", "-12.2311, -91.9694, -18.8333, 1.2", "-13.2761, -93.5915, -19.7242, 0.72", "-13.7726, -94.413, -20.1214, 0.72", "-15.012, -96.6208, -21.0182, 1.2", "-15.8173, -98.1006, -21.4969, 1.2", "-16.7438, -99.8553, -21.9719, 0.72", "-17.0832, -100.526, -22.1217, 0.72", "-17.8113, -101.988, -22.4048, 1.32", "-18.3214, -103.045, -22.6074, 1.32", "-19.107, -104.644, -22.9142, 0.6", "-19.6821, -105.787, -23.1567, 1.08", "-21.0885, -108.357, -23.8982, 0.6", "-21.7979, -109.554, -24.3248, 1.2", "-22.5248, -110.636, -24.743, 0.6", "-23.2933, -111.652, -25.2256, 1.2", "-24.0747, -112.602, -25.7754, 0.48", "-25.658, -114.41, -26.8894, 1.44", "-26.0332, -114.822, -27.1526, 1.44", "-27.2144, -116.131, -27.936, 0.72", "-28.6688, -117.804, -28.8078, 1.56", "-30.553, -120.163, -29.7713, 0.84", "-31.1451, -120.983, -29.981, 0.84", "-32.2484, -122.814, -30.3162, 1.56", "-32.808, -123.925, -30.5096, 1.56", "-33.6074, -125.898, -30.8686, 0.72", "-34.2374, -127.927, -31.3512, 1.2", "-34.9068, -130.348, -31.9193, 0.72", "-35.7291, -133.607, -32.8008, 1.56", "-36.1161, -135.385, -33.365, 1.08", "-36.4123, -137.132, -34.0392, 1.56", "-36.8652, -141.287, -36.0909, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.3305, -72.7454, -10.3115, 0.48", "-0.387827, -74.8288, -9.1824, 0.48", "0.469493, -75.7653, -8.64112, 0.48", "1.87236, -77.2978, -7.75541, 1.56", "2.99488, -78.524, -7.0467, 0.36", "3.38063, -78.9454, -6.80316, 0.36", "4.7835, -80.4779, -5.91744, 1.32", "5.64027, -81.3858, -5.21418, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-36.8693, -10.8599, 9.5196, 1.44", "-37.4313, -10.194, 13.6636, 1.44", "-38.1909, -9.83459, 17.0298, 1.2", "-38.6468, -9.62789, 18.6663, 1.2", "-39.0486, -9.44565, 20.109, 0.84", "-39.2455, -9.35638, 20.8159, 0.84", "-39.6786, -9.16002, 22.3705, 1.2", "-40.9419, -8.92076, 25.1101, 1.08", "-41.8392, -8.87661, 26.4025, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-36.8693, -10.8599, 9.5196, 1.92", "-37.7116, -10.3726, 10.1201, 1.92", "-38.2087, -10.0839, 10.409, 1.92", "-38.9837, -9.57893, 10.7944, 1.56", "-39.6267, -9.12394, 11.0836, 1.32", "-40.2269, -8.64274, 11.3444, 1.8", "-40.8901, -8.06821, 11.6199, 1.2", "-41.4188, -7.54214, 11.7951, 1.2", "-42.143, -6.77146, 12.0226, 0.96", "-42.4799, -6.39534, 12.1127, 0.96", "-43.0438, -5.77009, 12.2271, 1.32", "-43.5813, -5.22229, 12.3289, 1.32", "-43.9691, -4.89518, 12.3865, 1.32", "-44.439, -4.59311, 12.4347, 0.96", "-44.792, -4.44167, 12.4524, 0.96", "-45.3737, -4.2402, 12.5261, 0.96", "-46.0074, -4.08348, 12.5937, 0.96", "-47.0055, -3.89036, 12.6937, 1.44", "-47.5176, -3.80367, 12.745, 1.44", "-47.9185, -3.71835, 12.7897, 1.44", "-49.2018, -3.32334, 13.0481, 1.2" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-49.8663, -33.2026, 18.7999, 0.96", "-50.7401, -33.1008, 19.928, 0.96", "-51.944, -32.8753, 21.5513, 0.96", "-53.0341, -32.6389, 23.0239, 0.96", "-54.9422, -32.1737, 25.5436, 0.6", "-56.7142, -31.7231, 27.7916, 1.2", "-59.6426, -30.823, 31.4989, 0.72", "-60.1812, -30.5933, 32.2536, 0.72", "-60.4418, -30.4598, 32.6339, 0.72", "-61.0304, -30.0937, 33.5122, 0.72", "-61.4783, -29.6937, 34.2442, 0.72", "-62.6345, -28.3264, 36.438, 1.2", "-64.1644, -26.2557, 39.1728, 0.84", "-73.6001, -23.2085, 47.7938, 0.84" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-49.8663, -33.2026, 18.7999, 0.84", "-50.9237, -33.6877, 18.7291, 0.84", "-51.7235, -33.9755, 18.6971, 0.84", "-52.9175, -34.405, 18.6608, 0.6", "-53.7316, -34.6749, 18.6459, 0.6", "-54.8881, -35.0121, 18.6363, 0.6", "-56.1279, -35.3297, 18.6368, 0.6", "-57.2898, -35.5373, 18.6281, 0.6", "-58.2169, -35.6715, 18.6453, 0.6", "-59.1939, -35.7943, 18.709, 0.6", "-59.7397, -35.8493, 18.7504, 0.6", "-60.3933, -35.9059, 18.8051, 0.6", "-60.7901, -35.9117, 18.8376, 1.08", "-62.1236, -35.86, 18.9566, 0.72", "-63.5798, -35.7494, 19.094, 0.72", "-64.7192, -35.6674, 19.2017, 0.72", "-65.2608, -35.6316, 19.2525, 0.72", "-66.6625, -35.4699, 19.3919, 1.08", "-75.5806, -37.1101, 18.3672, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "80.0885, -60.0479, -5.80299, 0.72", "80.3728, -62.0214, -7.09063, 0.72", "80.5467, -63.229, -7.87854, 1.32" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "80.0885, -60.0479, -5.80299, 0.96", "81.6367, -61.3746, -5.44318, 0.96", "83.2121, -62.7985, -4.98482, 0.96", "85.004, -64.4884, -4.42186, 1.56", "87.1517, -66.5116, -3.77516, 0.84", "89.081, -68.3526, -3.23547, 1.32", "91.54, -70.8313, -2.42539, 0.6", "92.9646, -72.3438, -1.87511, 1.32", "94.9104, -74.4462, -1.07109, 0.72", "96.627, -76.2777, -0.358635, 0.72", "97.9161, -77.5646, 0.198589, 1.68", "101.314, -80.6107, 1.6988, 0.72", "103.403, -82.1862, 2.6432, 0.72", "104.661, -82.9556, 3.24748, 0.72", "105.962, -83.5247, 3.95794, 0.72", "107.97, -84.0697, 5.10739, 1.08", "109.467, -84.2773, 5.95906, 0.48", "111.199, -84.2101, 6.8521, 0.96", "112.602, -84.0136, 7.66252, 0.96", "114.305, -83.6791, 8.75673, 0.72", "116.29, -83.2051, 10.1391, 0.48", "124.478, -88.5997, 14.4465, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-36.8652, -141.287, -36.0909, 0.84", "-39.182, -141.487, -34.7663, 0.84", "-41.6142, -141.753, -33.5548, 0.84", "-46.987, -142.618, -31.1882, 1.32", "-51.5917, -143.555, -29.2311, 0.84", "-53.0302, -143.938, -28.6548, 0.84", "-55.7219, -144.791, -27.6104, 1.44", "-59.4717, -146.35, -26.1545, 0.96", "-61.6536, -147.676, -25.3483, 0.96", "-63.024, -149.034, -25.0052, 1.44", "-64.6006, -151.376, -24.6917, 0.96", "-65.012, -152.169, -24.5983, 0.96", "-66.0841, -154.857, -24.3313, 1.44", "-66.9693, -157.444, -24.0626, 1.08", "-68.0745, -160.422, -23.7827, 1.44", "-69.3581, -163.318, -23.3979, 0.84", "-70.1867, -164.742, -23.039, 0.84", "-70.6731, -165.496, -22.8324, 0.84", "-72.8612, -168.315, -21.8848, 1.2", "-74.0213, -169.443, -21.3195, 1.2", "-77.419, -171.442, -19.3807, 0.84", "-80.3217, -172.185, -17.4545, 0.48" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-36.8652, -141.287, -36.0909, 0.72", "-37.4731, -143.091, -35.5323, 0.72", "-38.8817, -146.697, -34.7283, 1.2", "-39.7881, -148.758, -34.4024, 0.84", "-40.8804, -151.021, -34.1621, 1.32", "-42.4649, -154.095, -33.8959, 0.72", "-43.5908, -156.186, -33.7517, 1.32", "-45.5077, -159.506, -33.6858, 0.84", "-47.325, -162.413, -33.7627, 1.32", "-49.1615, -165.265, -33.9018, 0.84", "-50.1286, -166.73, -33.9807, 0.84", "-51.9499, -169.494, -34.1435, 1.44", "-52.6122, -170.551, -34.1994, 1.44", "-54.3454, -173.638, -34.3475, 0.96", "-56.4111, -177.787, -34.5267, 1.44", "-58.1778, -181.729, -34.6519, 0.84", "-58.7844, -183.173, -34.6876, 1.32", "-59.7584, -185.57, -34.6676, 0.84", "-61.5325, -189.869, -34.3559, 1.32", "-62.6616, -192.56, -34.068, 0.84", "-64.1965, -195.996, -33.6556, 1.44", "-64.9787, -197.681, -33.4712, 0.72", "-66.6802, -201.181, -33.2776, 1.32", "-68.7767, -205.236, -33.0717, 0.6", "-70.7831, -208.894, -32.9344, 1.08", "-72.9339, -212.712, -32.8978, 0.48", "-75.2948, -216.934, -33.0791, 1.44", "-77.3131, -220.675, -33.4894, 0.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "5.64027, -81.3858, -5.21418, 0.84", "5.14677, -81.9508, -5.41646, 0.84", "4.6589, -82.4923, -5.65419, 0.96", "4.31903, -82.883, -5.83519, 0.72", "4.08098, -83.1605, -5.97063, 0.72", "3.61724, -83.7034, -6.25084, 0.72", "3.22683, -84.1623, -6.48834, 0.72", "3.0074, -84.4197, -6.62757, 0.72", "2.73478, -84.7633, -6.82126, 0.72", "2.4275, -85.1741, -7.03599, 1.08", "2.13436, -85.5597, -7.22506, 1.08", "1.99879, -85.7426, -7.2979, 1.08", "1.72186, -86.1204, -7.43397, 0.6", "1.51079, -86.3986, -7.5423, 0.6", "1.00109, -87.0142, -7.79708, 1.08", "0.608384, -87.4847, -8.00228, 1.08", "0.0173578, -88.1428, -8.30164, 0.6", "-0.370429, -88.5417, -8.49656, 0.6", "-1.10112, -89.248, -8.85081, 1.56", "-1.65045, -89.7672, -9.10721, 0.84", "-2.11685, -90.2071, -9.31452, 1.44", "-2.7347, -90.8023, -9.57025, 0.96", "-3.23109, -91.2881, -9.76261, 1.56", "-3.81273, -91.9058, -9.96826, 0.96", "-4.09727, -92.2331, -10.0471, 0.96", "-4.49463, -92.7481, -10.1524, 1.56", "-4.70523, -93.0515, -10.2072, 1.56", "-5.14375, -93.7882, -10.3337, 1.08", "-5.54372, -94.5166, -10.4512, 1.68", "-5.90873, -95.2272, -10.5599, 1.68", "-6.28578, -96.0209, -10.6764, 0.96", "-6.58233, -96.7228, -10.768, 1.56", "-6.83982, -97.3739, -10.8544, 0.96", "-7.10789, -98.1147, -10.9357, 1.8", "-7.44425, -99.1173, -11.0356, 1.2", "-7.66322, -99.8423, -11.1026, 0.72", "-7.92128, -100.787, -11.1725, 1.2", "-8.09504, -101.471, -11.2141, 0.72", "-8.27246, -102.288, -11.2609, 0.72", "-8.35389, -102.751, -11.29, 0.72", "-8.45428, -103.451, -11.3429, 1.2", "-8.51889, -103.921, -11.3782, 0.72", "-8.61339, -104.674, -11.4476, 1.2", "-8.70964, -105.449, -11.525, 0.6", "-8.78791, -105.931, -11.5797, 1.2", "-8.9707, -106.691, -11.6528, 0.6", "-9.10941, -107.146, -11.689, 0.6", "-9.33853, -107.74, -11.7367, 1.32", "-9.89012, -108.978, -11.8466, 0.72", "-10.3017, -109.806, -11.9256, 1.2", "-10.8034, -110.759, -12.0191, 0.72", "-10.9411, -111.019, -12.0436, 0.72", "-11.4119, -111.938, -12.1274, 1.32", "-11.8195, -112.78, -12.2104, 0.6", "-12.1755, -113.552, -12.293, 1.32", "-12.5887, -114.477, -12.4155, 0.6", "-13.1932, -115.865, -12.6349, 0.6", "-13.5503, -116.686, -12.7762, 1.2", "-14.2588, -118.323, -13.0744, 0.72", "-14.5149, -118.878, -13.1897, 1.2", "-14.9588, -119.816, -13.4122, 1.08", "-15.3019, -120.54, -13.6083, 0.72", "-15.5867, -121.151, -13.799, 0.72", "-15.8891, -121.832, -14.0097, 1.2", "-16.2047, -122.577, -14.2158, 0.6", "-16.5373, -123.419, -14.4313, 1.08", "-16.776, -124.062, -14.5568, 0.6", "-16.9843, -124.657, -14.6497, 1.2", "-17.4115, -125.945, -14.8001, 0.6", "-17.5982, -126.575, -14.8507, 0.6", "-17.6896, -126.97, -14.8888, 1.2", "-17.8872, -127.819, -14.9596, 0.72", "-18.016, -128.387, -14.9977, 1.2", "-18.0967, -128.788, -15.0244, 1.2", "-18.1674, -129.474, -15.098, 1.2", "-18.1907, -130.871, -15.3195, 0.72" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.64027, -81.3858, -5.21418, 0.72", "7.75278, -82.6637, -3.26979, 0.72", "8.93687, -83.3744, -2.04932, 0.72", "9.97644, -84.0798, -0.976147, 1.56", "11.1008, -84.9275, 0.170427, 0.96", "12.9442, -86.4173, 1.97317, 1.56", "14.4283, -87.6734, 3.34879, 1.56", "15.7501, -88.915, 4.48686, 0.96", "17.3904, -90.6025, 5.89835, 1.2", "18.5146, -91.9411, 6.85994, 1.2", "19.5376, -93.4343, 7.72926, 1.56", "20.3518, -94.7679, 8.34502, 1.56", "21.1882, -96.2588, 8.91904, 0.84", "22.1207, -98.0072, 9.48938, 1.44", "23.1252, -100.066, 10.1456, 0.84", "23.942, -101.974, 10.7146, 1.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-41.8392, -8.87661, 26.4025, 0.72", "-42.8639, -9.00558, 27.3966, 0.72", "-44.3824, -9.27027, 28.6096, 1.2", "-45.7486, -9.50842, 29.701, 1.2", "-46.71, -9.67601, 30.469, 0.96", "-47.5324, -9.81939, 31.1259, 0.72", "-48.9963, -10.0745, 32.2954, 0.72", "-50.1731, -10.3624, 33.2093, 1.2", "-56.2785, -11.058, 38.9306, 1.2", "-63.6842, -11.413, 42.8704, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-41.8392, -8.87661, 26.4025, 1.08", "-40.6805, -8.84136, 27.8874, 1.08", "-40.3805, -8.8275, 28.3173, 1.08", "-39.5, -8.7197, 29.5513, 0.96", "-38.7713, -8.62525, 30.5107, 0.96", "-37.6616, -8.48321, 31.8636, 1.44", "-36.101, -8.28346, 33.7663, 1.44", "-34.9623, -8.07749, 35.0936, 0.96", "-34.1755, -7.93035, 36.0405, 1.32", "-33.6392, -7.85172, 36.7344, 1.32", "-33.1424, -7.78607, 37.3672, 1.32", "-28.4532, -7.12976, 45.7214, 1.32", "-23.3654, -6.38644, 53.8311, 1.32", "-17.5299, -6.51393, 61.4603, 1.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-49.2018, -3.32334, 13.0481, 0.72", "-50.0988, -2.84165, 13.9188, 0.72", "-50.6596, -2.54049, 14.4632, 0.72", "-51.2337, -2.23223, 15.0204, 0.72", "-52.2287, -1.6979, 15.9862, 1.2", "-53.6185, -0.951577, 17.3353, 0.72", "-54.5259, -0.464327, 18.216, 1.08", "-59.5442, 1.81252, 24.0516, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-49.2018, -3.32334, 13.0481, 1.08", "-50.1387, -2.78505, 13.8783, 1.08", "-50.6488, -2.5609, 14.357, 1.08", "-51.7541, -2.17308, 15.4278, 1.2", "-52.4843, -1.92968, 16.1268, 1.2", "-52.984, -1.73135, 16.6443, 1.44", "-53.6765, -1.42743, 17.3747, 1.08", "-54.0561, -1.26403, 17.8285, 0.84", "-54.4336, -1.09124, 18.2949, 0.84", "-54.9415, -0.822717, 18.9046, 0.84", "-55.7078, -0.336464, 19.6999, 1.2", "-56.3403, 0.116982, 20.2551, 1.2", "-57.2317, 0.74122, 20.8898, 1.08", "-57.6885, 1.0154, 21.1684, 0.96", "-58.2884, 1.35445, 21.5043, 0.96", "-59.3781, 1.89207, 22.0484, 1.32", "-59.8948, 2.10655, 22.2593, 1.32", "-61.143, 2.599, 22.7098, 1.32", "-62.4175, 3.04774, 23.0747, 0.84", "-68.5824, 6.4176, 26.5693, 0.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "23.942, -101.974, 10.7146, 0.6", "26.9783, -103.321, 12.1809, 0.6", "28.9785, -104.208, 13.1469, 0.6" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "23.942, -101.974, 10.7146, 0.6", "23.2998, -104.209, 10.8179, 0.6", "23.0643, -106.25, 10.8059, 1.08", "23.0302, -107.78, 10.7869, 1.08", "23.0757, -108.992, 10.7619, 1.08", "23.1596, -110.314, 10.7413, 1.08", "23.2866, -113.187, 10.8186, 0.72", "23.4368, -115.0, 10.9773, 1.2", "23.5083, -115.971, 11.1022, 1.2", "23.5347, -116.791, 11.235, 1.2", "23.5136, -118.294, 11.5269, 0.84", "23.4841, -120.613, 11.9845, 0.6", "23.3676, -123.379, 12.6175, 1.32", "23.3041, -124.991, 12.957, 1.32", "23.3047, -126.728, 13.2197, 0.72", "23.3304, -128.048, 13.3801, 1.2", "23.4548, -131.496, 13.6741, 1.2", "23.5023, -132.424, 13.7052, 0.72", "23.6013, -134.6, 13.7236, 1.56", "23.6426, -137.425, 13.6859, 0.72", "23.5995, -139.667, 13.597, 0.72", "23.5154, -141.438, 13.4957, 1.44", "23.3839, -142.879, 13.4151, 0.84", "23.2976, -143.97, 13.3597, 0.84", "23.1812, -145.533, 13.4059, 1.44", "23.0701, -148.073, 13.6928, 0.84", "23.0736, -149.214, 13.8229, 0.84", "23.1211, -150.399, 14.0085, 1.32", "23.1885, -151.41, 14.2395, 1.32", "23.5069, -154.549, 15.1946, 0.72", "23.7245, -155.891, 15.8341, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.5299, -6.51393, 61.4603, 0.96", "-12.0626, -8.99387, 69.1971, 0.96", "-7.31611, -10.3309, 77.6512, 0.96", "-3.58858, -9.63171, 86.6507, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-17.5299, -6.51393, 61.4603, 0.84", "-10.7859, -7.18313, 70.8882, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "23.7245, -155.891, 15.8341, 0.6", "24.8964, -156.148, 16.5583, 0.6", "25.9094, -156.423, 17.2988, 0.96", "27.2347, -156.783, 18.2675, 0.6", "28.0597, -157.007, 18.8705, 0.6", "29.3828, -157.367, 19.8377, 1.2", "30.9678, -157.797, 20.9962, 0.72", "32.002, -158.155, 21.8759, 1.2" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "23.7245, -155.891, 15.8341, 0.48", "23.8499, -156.833, 16.2229, 0.48", "24.2568, -158.233, 16.4746, 1.08", "24.6829, -159.746, 16.7734, 0.6", "24.9728, -160.936, 17.0315, 0.36", "25.3368, -162.445, 17.3837, 0.36", "25.6743, -163.8, 17.6991, 0.84", "26.4335, -166.511, 18.2232, 0.6", "27.0891, -168.618, 18.5774, 0.6", "27.7106, -170.51, 18.896, 1.08", "27.9713, -171.307, 19.0634, 0.72", "28.3372, -172.422, 19.3595, 1.08", "29.0242, -174.307, 19.9419, 0.48", "29.6968, -175.893, 20.4974, 0.48", "30.0362, -176.562, 20.7154, 0.48", "30.6581, -177.685, 21.0958, 0.48", "31.1748, -178.615, 21.429, 0.48", "31.9693, -179.984, 21.9953, 1.08", "32.4245, -180.699, 22.3408, 0.48", "33.2483, -181.91, 22.9163, 1.08" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_11", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_SBC_6c1acec83a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999997377214663)
    connect dend_34(0), soma_0(0.4999997377214663)
    connect dend_27(0), soma_0(0.4999997377214663)
    connect dend_0(0), soma_0(0.4999997377214663)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.46247, 5.85861, -0.00377942, 7.43125 ) }
    soma_0 { pt3dadd( -6.65141, 5.3667, -0.00311965, 9.16559 ) }
    soma_0 { pt3dadd( -5.84034, 4.87478, -0.00245988, 11.1008 ) }
    soma_0 { pt3dadd( -5.02928, 4.38287, -0.0018001, 12.7187 ) }
    soma_0 { pt3dadd( -4.21821, 3.89095, -0.00114033, 13.407 ) }
    soma_0 { pt3dadd( -3.40715, 3.39904, -4.80554E-4, 14.0331 ) }
    soma_0 { pt3dadd( -2.59608, 2.90712, 1.79219E-4, 14.6433 ) }
    soma_0 { pt3dadd( -1.78502, 2.41521, 8.38993E-4, 15.2536 ) }
    soma_0 { pt3dadd( -0.973954, 1.92329, 0.00149877, 15.5093 ) }
    soma_0 { pt3dadd( -0.162889, 1.43138, 0.00215854, 15.3073 ) }
    soma_0 { pt3dadd( 0.648176, 0.939463, 0.00281831, 15.1053 ) }
    soma_0 { pt3dadd( 1.45924, 0.447548, 0.00347809, 14.9033 ) }
    soma_0 { pt3dadd( 2.27031, -0.0443665, 0.00413786, 14.4818 ) }
    soma_0 { pt3dadd( 3.08137, -0.536281, 0.00479764, 13.7638 ) }
    soma_0 { pt3dadd( 3.89244, -1.0282, 0.00545741, 12.8143 ) }
    soma_0 { pt3dadd( 4.7035, -1.52011, 0.00611718, 11.7232 ) }
    soma_0 { pt3dadd( 5.51457, -2.01203, 0.00677696, 10.29 ) }
    soma_0 { pt3dadd( 6.32563, -2.50394, 0.00743673, 8.85677 ) }
    soma_0 { pt3dadd( 7.1367, -2.99586, 0.0080965, 7.04177 ) }
    soma_0 { pt3dadd( 7.94776, -3.48777, 0.00875628, 4.64246 ) }
    soma_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 2.78846 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.16814, 7.81548, -1.4503, 1.32 ) }
    dend_47 { pt3dadd( -2.82886, 9.62521, -2.27293, 1.32 ) }
    dend_47 { pt3dadd( -3.3278, 10.9979, -2.97889, 1.32 ) }
    dend_47 { pt3dadd( -4.56229, 14.1031, -4.72441, 2.04 ) }
    dend_47 { pt3dadd( -6.45293, 18.0929, -7.14447, 1.32 ) }
    dend_47 { pt3dadd( -7.86351, 20.9798, -8.90628, 1.8 ) }
    dend_47 { pt3dadd( -9.22557, 23.7675, -10.6075, 1.32 ) }
    dend_47 { pt3dadd( -10.3732, 26.0613, -12.1325, 1.68 ) }
    dend_47 { pt3dadd( -11.3758, 28.0176, -13.5567, 1.68 ) }
    dend_47 { pt3dadd( -12.8575, 30.8119, -15.846, 1.08 ) }
    dend_47 { pt3dadd( -13.9495, 32.5487, -17.1964, 1.56 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.03186, -3.28977, -1.5003, 1.8 ) }
    dend_34 { pt3dadd( 7.26228, -4.13496, -2.82658, 1.8 ) }
    dend_34 { pt3dadd( 9.87114, -5.92701, -5.63868, 1.8 ) }
    dend_34 { pt3dadd( 11.6497, -7.14875, -7.55585, 1.8 ) }
    dend_34 { pt3dadd( 13.3208, -8.29664, -9.35715, 2.16 ) }
    dend_34 { pt3dadd( 16.2247, -10.2914, -12.4873, 2.4 ) }
    dend_34 { pt3dadd( 16.6691, -10.5966, -12.9663, 2.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.09186, -5.14227, 5.0897, 2.64 ) }
    dend_27 { pt3dadd( 3.23343, -6.10828, 5.80473, 2.64 ) }
    dend_27 { pt3dadd( 3.46381, -7.30795, 6.63638, 2.64 ) }
    dend_27 { pt3dadd( 4.72486, -12.2316, 9.73595, 1.92 ) }
    dend_27 { pt3dadd( 5.64851, -15.1056, 11.3891, 1.92 ) }
    dend_27 { pt3dadd( 6.76185, -18.0388, 12.9487, 1.92 ) }
    dend_27 { pt3dadd( 8.13709, -21.3965, 14.609, 2.4 ) }
    dend_27 { pt3dadd( 8.81576, -22.8763, 15.2855, 2.4 ) }
    dend_27 { pt3dadd( 10.1803, -25.5756, 16.4242, 1.8 ) }
    dend_27 { pt3dadd( 12.0685, -28.8672, 17.512, 1.56 ) }
    dend_27 { pt3dadd( 14.0361, -31.992, 18.4046, 1.8 ) }
    dend_27 { pt3dadd( 15.2258, -33.783, 18.8101, 1.8 ) }
    dend_27 { pt3dadd( 15.6442, -34.3841, 18.9401, 1.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.79815, 0.912482, -0.0303001, 5.65 ) }
    dend_0 { pt3dadd( -10.1848, -0.137347, -0.0192665, 4.93 ) }
    dend_0 { pt3dadd( -11.5572, -0.74103, -0.0129219, 4.81 ) }
    dend_0 { pt3dadd( -14.7191, -2.13187, 0.00169575, 1.92 ) }
    dend_0 { pt3dadd( -16.9222, -3.101, 0.0118811, 1.68 ) }
    dend_0 { pt3dadd( -19.2637, -4.13094, 0.0227056, 1.68 ) }
    dend_0 { pt3dadd( -23.7076, -6.08572, 0.0432502, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 1.21225 ) }
    axon_0 { pt3dadd( 21.5843, -11.7584, 0.00941605, 1.21225 ) }
    axon_0 { pt3dadd( 34.4097, -19.5371, 0.00941605, 1.21225 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 62/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -13.9495, 32.5487, -17.1964, 0.6 ) }
    dend_51 { pt3dadd( -14.8606, 34.473, -17.5385, 0.6 ) }
    dend_51 { pt3dadd( -15.5079, 35.8028, -17.906, 0.6 ) }
    dend_51 { pt3dadd( -15.961, 36.6591, -18.1953, 0.6 ) }
    dend_51 { pt3dadd( -16.5839, 37.9931, -18.9028, 1.68 ) }
    dend_51 { pt3dadd( -17.2094, 39.6961, -19.9654, 0.72 ) }
    dend_51 { pt3dadd( -17.4458, 40.3396, -20.3669, 0.72 ) }
    dend_51 { pt3dadd( -18.3845, 43.0366, -22.3125, 0.6 ) }
    dend_51 { pt3dadd( -18.9786, 44.849, -23.7918, 1.44 ) }
    dend_51 { pt3dadd( -19.9456, 48.0953, -26.755, 0.84 ) }
    dend_51 { pt3dadd( -20.2673, 49.5008, -28.2178, 1.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.9495, 32.5487, -17.1964, 1.32 ) }
    dend_48 { pt3dadd( -13.9311, 32.9818, -18.182, 1.32 ) }
    dend_48 { pt3dadd( -13.9208, 33.7562, -19.8163, 1.32 ) }
    dend_48 { pt3dadd( -13.903, 34.3192, -20.9056, 1.32 ) }
    dend_48 { pt3dadd( -13.87, 34.9579, -22.0837, 0.96 ) }
    dend_48 { pt3dadd( -13.838, 35.5783, -23.228, 0.96 ) }
    dend_48 { pt3dadd( -13.8152, 36.0191, -24.0412, 1.2 ) }
    dend_48 { pt3dadd( -13.8113, 36.5968, -25.0801, 0.48 ) }
    dend_48 { pt3dadd( -13.7839, 37.2182, -26.0627, 1.32 ) }
    dend_48 { pt3dadd( -13.7589, 37.6179, -26.6315, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 16.6691, -10.5966, -12.9663, 1.56 ) }
    dend_42 { pt3dadd( 17.3013, -11.4481, -15.1204, 1.56 ) }
    dend_42 { pt3dadd( 18.5093, -13.8516, -19.9908, 1.32 ) }
    dend_42 { pt3dadd( 18.8455, -15.3029, -22.6178, 1.32 ) }
    dend_42 { pt3dadd( 19.0056, -16.7852, -24.9182, 1.68 ) }
    dend_42 { pt3dadd( 19.0512, -17.883, -26.4437, 1.68 ) }
    dend_42 { pt3dadd( 19.0501, -18.8473, -27.6139, 1.68 ) }
    dend_42 { pt3dadd( 18.8796, -21.0192, -29.608, 1.2 ) }
    dend_42 { pt3dadd( 18.1268, -25.8917, -32.8664, 1.2 ) }
    dend_42 { pt3dadd( 17.7396, -28.0488, -34.1204, 1.56 ) }
    dend_42 { pt3dadd( 17.5768, -28.9765, -34.6127, 1.56 ) }
    dend_42 { pt3dadd( 17.2369, -31.1637, -35.7113, 1.2 ) }
    dend_42 { pt3dadd( 16.9844, -32.966, -36.641, 1.2 ) }
    dend_42 { pt3dadd( 16.6486, -36.4776, -38.4927, 1.2 ) }
    dend_42 { pt3dadd( 16.6071, -37.8412, -39.2063, 1.2 ) }
    dend_42 { pt3dadd( 16.6157, -38.8085, -39.7429, 1.56 ) }
    dend_42 { pt3dadd( 16.6558, -41.2563, -41.2244, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 16.6982, -43.7653, -42.8822, 2.04 ) }
    dend_42 { pt3dadd( 16.7105, -44.9729, -43.6692, 2.04 ) }
    dend_42 { pt3dadd( 16.7088, -47.1332, -44.7774, 1.32 ) }
    dend_42 { pt3dadd( 16.7529, -50.6806, -46.4525, 2.16 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 16.6691, -10.5966, -12.9663, 1.32 ) }
    dend_35 { pt3dadd( 19.8504, -11.0584, -12.6715, 1.32 ) }
    dend_35 { pt3dadd( 21.5259, -11.3016, -12.5162, 1.32 ) }
    dend_35 { pt3dadd( 24.9819, -11.8032, -12.1959, 1.32 ) }
    dend_35 { pt3dadd( 26.3516, -12.0019, -12.069, 1.32 ) }
    dend_35 { pt3dadd( 31.0639, -12.6859, -11.6322, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 15.6442, -34.3841, 18.9401, 1.2 ) }
    dend_33 { pt3dadd( 16.6637, -35.0314, 19.643, 1.2 ) }
    dend_33 { pt3dadd( 18.1522, -35.9685, 20.692, 1.2 ) }
    dend_33 { pt3dadd( 19.2399, -36.6283, 21.4675, 1.2 ) }
    dend_33 { pt3dadd( 20.5639, -37.4043, 22.4025, 2.04 ) }
    dend_33 { pt3dadd( 23.0407, -38.8273, 24.1258, 1.08 ) }
    dend_33 { pt3dadd( 24.2891, -39.5547, 24.9919, 1.08 ) }
    dend_33 { pt3dadd( 25.0559, -40.0382, 25.5686, 1.08 ) }
    dend_33 { pt3dadd( 25.9185, -40.5774, 26.2261, 1.08 ) }
    dend_33 { pt3dadd( 26.646, -41.0017, 26.7096, 1.08 ) }
    dend_33 { pt3dadd( 27.2924, -41.3617, 27.0485, 1.08 ) }
    dend_33 { pt3dadd( 27.7988, -41.6146, 27.219, 1.08 ) }
    dend_33 { pt3dadd( 28.8946, -42.1867, 27.5823, 1.08 ) }
    dend_33 { pt3dadd( 29.5417, -42.5358, 27.7647, 1.08 ) }
    dend_33 { pt3dadd( 30.3152, -42.9723, 28.0496, 1.08 ) }
    dend_33 { pt3dadd( 30.9287, -43.3193, 28.3016, 1.08 ) }
    dend_33 { pt3dadd( 31.8415, -43.824, 28.7335, 1.08 ) }
    dend_33 { pt3dadd( 32.3845, -44.0933, 29.0259, 1.08 ) }
    dend_33 { pt3dadd( 33.9404, -44.7584, 29.9992, 1.92 ) }
    dend_33 { pt3dadd( 35.8992, -45.3761, 31.3869, 0.96 ) }
    dend_33 { pt3dadd( 36.4952, -45.4801, 31.846, 0.96 ) }
    dend_33 { pt3dadd( 37.8554, -45.4736, 32.9321, 0.72 ) }
    dend_33 { pt3dadd( 38.7527, -45.2621, 33.6303, 1.32 ) }
    dend_33 { pt3dadd( 39.6826, -44.8396, 34.3197, 1.32 ) }
    dend_33 { pt3dadd( 41.1322, -43.8949, 35.2312, 0.84 ) }
    dend_33 { pt3dadd( 41.55, -43.6012, 35.4157, 0.84 ) }
    dend_33 { pt3dadd( 42.3029, -43.0959, 35.6836, 0.84 ) }
    dend_33 { pt3dadd( 42.9732, -42.6951, 35.7966, 0.84 ) }
    dend_33 { pt3dadd( 43.4886, -42.468, 35.802, 0.84 ) }
    dend_33 { pt3dadd( 44.9397, -42.0213, 35.6618, 0.72 ) }
    dend_33 { pt3dadd( 45.8675, -41.8651, 35.4951, 0.72 ) }
    dend_33 { pt3dadd( 46.4719, -41.7769, 35.3655, 0.72 ) }
    dend_33 { pt3dadd( 47.6643, -41.6104, 35.0368, 0.72 ) }
    dend_33 { pt3dadd( 48.2441, -41.5475, 34.8522, 0.72 ) }
    dend_33 { pt3dadd( 48.5042, -41.5185, 34.7504, 0.72 ) }
    dend_33 { pt3dadd( 49.8153, -41.362, 34.0079, 0.96 ) }
    dend_33 { pt3dadd( 56.492, -43.0368, 37.6582, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 15.6442, -34.3841, 18.9401, 0.96 ) }
    dend_28 { pt3dadd( 15.4159, -37.2056, 19.2287, 0.96 ) }
    dend_28 { pt3dadd( 15.1757, -40.1754, 19.5325, 1.08 ) }
    dend_28 { pt3dadd( 15.0519, -41.705, 19.689, 1.08 ) }
    dend_28 { pt3dadd( 14.8385, -44.3436, 19.9589, 1.56 ) }
    dend_28 { pt3dadd( 14.6954, -46.1116, 20.1397, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -23.7076, -6.08572, 0.0432502, 1.08 ) }
    dend_14 { pt3dadd( -24.4888, -8.11559, 0.715166, 1.08 ) }
    dend_14 { pt3dadd( -24.7665, -8.94142, 0.94466, 1.08 ) }
    dend_14 { pt3dadd( -25.0885, -10.073, 1.24611, 1.08 ) }
    dend_14 { pt3dadd( -25.3328, -11.1149, 1.5566, 1.08 ) }
    dend_14 { pt3dadd( -25.5761, -12.4655, 1.87605, 1.08 ) }
    dend_14 { pt3dadd( -25.7251, -13.4934, 2.06288, 1.32 ) }
    dend_14 { pt3dadd( -25.9982, -16.3769, 2.43987, 1.8 ) }
    dend_14 { pt3dadd( -26.0107, -17.1924, 2.51155, 1.8 ) }
    dend_14 { pt3dadd( -25.9027, -18.7612, 2.56349, 1.56 ) }
    dend_14 { pt3dadd( -25.5279, -21.3653, 2.5132, 1.44 ) }
    dend_14 { pt3dadd( -25.2083, -22.9073, 2.40639, 1.44 ) }
    dend_14 { pt3dadd( -24.8575, -24.3208, 2.27348, 1.56 ) }
    dend_14 { pt3dadd( -24.3719, -26.1306, 2.1108, 1.32 ) }
    dend_14 { pt3dadd( -23.9181, -27.9323, 1.93944, 1.32 ) }
    dend_14 { pt3dadd( -23.5064, -29.6355, 1.73597, 2.04 ) }
    dend_14 { pt3dadd( -23.2162, -30.9185, 1.5915, 2.04 ) }
    dend_14 { pt3dadd( -22.928, -32.3259, 1.38457, 1.08 ) }
    dend_14 { pt3dadd( -22.6129, -34.1495, 1.04353, 1.44 ) }
    dend_14 { pt3dadd( -22.3327, -36.0051, 0.631242, 1.44 ) }
    dend_14 { pt3dadd( -22.0578, -37.7027, 0.21977, 0.96 ) }
    dend_14 { pt3dadd( -21.8566, -38.8547, -0.0826458, 1.56 ) }
    dend_14 { pt3dadd( -21.5316, -40.5592, -0.543323, 1.56 ) }
    dend_14 { pt3dadd( -21.1063, -42.4632, -1.06232, 2.16 ) }
    dend_14 { pt3dadd( -20.705, -43.9215, -1.41655, 1.56 ) }
    dend_14 { pt3dadd( -20.3214, -44.9636, -1.56286, 1.56 ) }
    dend_14 { pt3dadd( -19.3813, -46.9489, -1.73241, 1.8 ) }
    dend_14 { pt3dadd( -18.9668, -47.6854, -1.77376, 1.8 ) }
    dend_14 { pt3dadd( -18.4443, -48.5183, -1.79508, 1.8 ) }
    dend_14 { pt3dadd( -17.8228, -49.4557, -1.78651, 1.8 ) }
    dend_14 { pt3dadd( -16.03, -52.11, -1.8365, 1.56 ) }
    dend_14 { pt3dadd( -14.2525, -54.6341, -1.95441, 1.56 ) }
    dend_14 { pt3dadd( -13.5548, -55.5572, -2.0391, 1.56 ) }
    dend_14 { pt3dadd( -12.9641, -56.4129, -2.34094, 1.56 ) }
    dend_14 { pt3dadd( -12.3168, -57.3782, -2.73926, 1.8 ) }
    dend_14 { pt3dadd( -10.9361, -59.5534, -3.80554, 1.44 ) }
    dend_14 { pt3dadd( -10.3631, -60.5338, -4.40033, 1.44 ) }
    dend_14 { pt3dadd( -9.36399, -62.3215, -5.65678, 1.8 ) }
    dend_14 { pt3dadd( -6.15732, -68.265, -10.4232, 1.8 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -23.7076, -6.08572, 0.0432502, 1.56 ) }
    dend_1 { pt3dadd( -25.6416, -7.24912, 1.50726, 1.56 ) }
    dend_1 { pt3dadd( -27.7674, -8.52792, 3.11649, 1.32 ) }
    dend_1 { pt3dadd( -29.3341, -9.47037, 4.30247, 1.32 ) }
    dend_1 { pt3dadd( -31.4039, -10.7155, 5.86934, 1.68 ) }
    dend_1 { pt3dadd( -33.2275, -11.8125, 7.24973, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 34.4097, -19.5371, 0.00941605, 0.119518 ) }
    axon_1 { pt3dadd( 47.2351, -27.3158, 0.00941605, 0.119518 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 60.0606, -35.0945, 0.00941605, 0.119518 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 1/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.2673, 49.5008, -28.2178, 0.84 ) }
    dend_53 { pt3dadd( -15.9414, 50.4899, -25.0666, 0.84 ) }
    dend_53 { pt3dadd( -14.7603, 50.7599, -24.2062, 1.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -20.2673, 49.5008, -28.2178, 0.96 ) }
    dend_52 { pt3dadd( -20.2849, 50.401, -29.2958, 0.96 ) }
    dend_52 { pt3dadd( -20.2929, 51.1118, -29.9998, 0.96 ) }
    dend_52 { pt3dadd( -20.2953, 52.3393, -31.264, 1.2 ) }
    dend_52 { pt3dadd( -20.1794, 54.5686, -33.5889, 0.96 ) }
    dend_52 { pt3dadd( -20.0936, 55.2524, -34.2465, 0.72 ) }
    dend_52 { pt3dadd( -19.8747, 56.3163, -35.2157, 1.44 ) }
    dend_52 { pt3dadd( -19.6506, 56.9279, -35.7688, 1.44 ) }
    dend_52 { pt3dadd( -18.6435, 58.9009, -37.4938, 0.84 ) }
    dend_52 { pt3dadd( -18.2201, 59.525, -38.1643, 0.72 ) }
    dend_52 { pt3dadd( -17.4806, 60.426, -39.4103, 1.68 ) }
    dend_52 { pt3dadd( -16.8259, 61.1371, -40.5088, 0.72 ) }
    dend_52 { pt3dadd( -16.1207, 61.8104, -41.6982, 1.2 ) }
    dend_52 { pt3dadd( -15.4561, 62.3938, -42.8451, 1.32 ) }
    dend_52 { pt3dadd( -13.0982, 64.2602, -46.9381, 0.72 ) }
    dend_52 { pt3dadd( -12.0415, 65.0764, -49.1438, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 20/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.7589, 37.6179, -26.6315, 0.84 ) }
    dend_50 { pt3dadd( -13.1047, 38.8934, -27.4027, 0.84 ) }
    dend_50 { pt3dadd( -12.46, 40.0924, -28.1633, 0.84 ) }
    dend_50 { pt3dadd( -12.0893, 40.7914, -28.6787, 0.84 ) }
    dend_50 { pt3dadd( -11.616, 41.7009, -29.4875, 0.6 ) }
    dend_50 { pt3dadd( -11.2138, 42.474, -30.1748, 0.6 ) }
    dend_50 { pt3dadd( -10.6408, 43.5751, -31.1539, 1.32 ) }
    dend_50 { pt3dadd( -9.97909, 44.9113, -32.4506, 0.72 ) }
    dend_50 { pt3dadd( -9.23103, 46.3902, -33.9033, 1.56 ) }
    dend_50 { pt3dadd( -8.33092, 48.1354, -35.7654, 0.84 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -13.7589, 37.6179, -26.6315, 0.84 ) }
    dend_49 { pt3dadd( -15.4049, 40.0439, -32.9509, 0.84 ) }
    dend_49 { pt3dadd( -15.714, 40.4994, -34.1374, 1.2 ) }
    dend_49 { pt3dadd( -16.1501, 41.1422, -35.8118, 0.84 ) }
    dend_49 { pt3dadd( -16.5423, 41.7201, -37.3172, 1.2 ) }
    dend_49 { pt3dadd( -17.3058, 42.8454, -40.2485, 0.84 ) }
    dend_49 { pt3dadd( -17.6939, 43.4175, -41.7387, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 16.7529, -50.6806, -46.4525, 0.72 ) }
    dend_44 { pt3dadd( 14.8657, -54.5923, -47.6033, 0.72 ) }
    dend_44 { pt3dadd( 14.1527, -56.0034, -47.9311, 1.2 ) }
    dend_44 { pt3dadd( 13.639, -56.9617, -48.1232, 1.2 ) }
    dend_44 { pt3dadd( 12.7935, -58.3894, -48.4897, 0.6 ) }
    dend_44 { pt3dadd( 11.7326, -60.0166, -48.9604, 1.92 ) }
    dend_44 { pt3dadd( 10.5479, -61.6864, -49.544, 1.08 ) }
    dend_44 { pt3dadd( 8.99707, -63.5451, -50.407, 1.68 ) }
    dend_44 { pt3dadd( 7.91938, -64.6588, -51.0576, 1.68 ) }
    dend_44 { pt3dadd( 5.78863, -66.6061, -52.4436, 0.96 ) }
    dend_44 { pt3dadd( 4.82403, -67.3721, -53.1036, 0.96 ) }
    dend_44 { pt3dadd( 3.17222, -68.4933, -54.3065, 1.44 ) }
    dend_44 { pt3dadd( 1.22082, -69.6169, -55.7636, 0.96 ) }
    dend_44 { pt3dadd( -0.172625, -70.3535, -56.895, 1.44 ) }
    dend_44 { pt3dadd( -1.6762, -71.1418, -58.1513, 0.96 ) }
    dend_44 { pt3dadd( -2.80762, -71.7752, -59.0924, 1.56 ) }
    dend_44 { pt3dadd( -4.64514, -72.8756, -60.6473, 0.84 ) }
    dend_44 { pt3dadd( -6.43878, -74.0327, -62.1398, 1.56 ) }
    dend_44 { pt3dadd( -8.87967, -75.7486, -64.1808, 1.08 ) }
    dend_44 { pt3dadd( -10.1653, -76.7341, -65.2677, 0.84 ) }
    dend_44 { pt3dadd( -11.7403, -78.0682, -66.6401, 1.08 ) }
    dend_44 { pt3dadd( -12.0885, -78.3877, -66.9472, 0.72 ) }
    dend_44 { pt3dadd( -13.4426, -79.7375, -68.1701, 1.2 ) }
    dend_44 { pt3dadd( -14.7965, -81.1786, -69.392, 0.6 ) }
    dend_44 { pt3dadd( -15.8561, -82.2931, -70.2544, 1.08 ) }
    dend_44 { pt3dadd( -17.0398, -83.5029, -71.213, 0.72 ) }
    dend_44 { pt3dadd( -18.3181, -84.7375, -72.2773, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.7529, -50.6806, -46.4525, 0.48 ) }
    dend_43 { pt3dadd( 19.7231, -52.6119, -47.877, 0.48 ) }
    dend_43 { pt3dadd( 22.6466, -54.547, -49.3361, 1.32 ) }
    dend_43 { pt3dadd( 24.6233, -55.8886, -50.3569, 0.96 ) }
    dend_43 { pt3dadd( 26.0639, -56.8665, -51.1038, 1.56 ) }
    dend_43 { pt3dadd( 28.5652, -58.5877, -52.4179, 0.96 ) }
    dend_43 { pt3dadd( 30.8908, -60.2328, -53.6693, 1.68 ) }
    dend_43 { pt3dadd( 33.3515, -62.0195, -55.0871, 1.08 ) }
    dend_43 { pt3dadd( 35.2523, -63.4943, -56.2517, 1.8 ) }
    dend_43 { pt3dadd( 35.9703, -64.1107, -56.7153, 1.8 ) }
    dend_43 { pt3dadd( 38.4596, -66.4707, -58.4497, 1.08 ) }
    dend_43 { pt3dadd( 39.8224, -67.9591, -59.5403, 1.56 ) }
    dend_43 { pt3dadd( 40.7993, -69.2219, -60.4222, 1.08 ) }
    dend_43 { pt3dadd( 41.697, -70.6085, -61.3069, 1.56 ) }
    dend_43 { pt3dadd( 42.9216, -72.894, -62.6317, 1.08 ) }
    dend_43 { pt3dadd( 43.7112, -74.5996, -63.5581, 1.68 ) }
    dend_43 { pt3dadd( 44.6128, -76.8323, -64.6848, 1.2 ) }
    dend_43 { pt3dadd( 45.3762, -78.7467, -65.606, 1.2 ) }
    dend_43 { pt3dadd( 46.385, -81.2816, -66.7885, 1.8 ) }
    dend_43 { pt3dadd( 47.2756, -83.7185, -67.9507, 1.2 ) }
    dend_43 { pt3dadd( 47.7476, -85.1667, -68.8541, 1.8 ) }
    dend_43 { pt3dadd( 48.6796, -88.1421, -71.0047, 1.2 ) }
    dend_43 { pt3dadd( 49.6971, -91.3013, -73.5679, 1.68 ) }
    dend_43 { pt3dadd( 50.365, -93.223, -75.2476, 1.2 ) }
    dend_43 { pt3dadd( 51.2963, -95.8002, -77.7835, 1.68 ) }
    dend_43 { pt3dadd( 53.3898, -101.279, -83.6414, 1.2 ) }
    dend_43 { pt3dadd( 53.9266, -102.619, -85.159, 1.2 ) }
    dend_43 { pt3dadd( 54.3724, -103.695, -86.4447, 1.2 ) }
    dend_43 { pt3dadd( 55.1819, -105.58, -88.8047, 1.56 ) }
    dend_43 { pt3dadd( 56.8733, -109.077, -93.2271, 0.96 ) }
    dend_43 { pt3dadd( 57.8354, -110.724, -95.2051, 1.44 ) }
    dend_43 { pt3dadd( 58.6619, -112.106, -96.5863, 0.72 ) }
    dend_43 { pt3dadd( 59.4105, -113.462, -98.0992, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 31.0639, -12.6859, -11.6322, 0.72 ) }
    dend_41 { pt3dadd( 33.1517, -11.4367, -12.1419, 0.72 ) }
    dend_41 { pt3dadd( 34.6326, -10.3877, -12.5511, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 35.7359, -9.51143, -12.887, 0.72 ) }
    dend_41 { pt3dadd( 36.7518, -8.59796, -13.2613, 0.72 ) }
    dend_41 { pt3dadd( 37.9062, -7.43832, -13.836, 0.48 ) }
    dend_41 { pt3dadd( 38.221, -7.06825, -14.0541, 0.96 ) }
    dend_41 { pt3dadd( 39.2708, -5.51127, -15.1565, 0.6 ) }
    dend_41 { pt3dadd( 40.0751, -4.11808, -16.3762, 1.44 ) }
    dend_41 { pt3dadd( 40.8284, -2.70294, -17.8458, 0.72 ) }
    dend_41 { pt3dadd( 41.6137, -1.2711, -19.6983, 1.2 ) }
    dend_41 { pt3dadd( 42.5584, 0.452337, -22.1215, 0.6 ) }
    dend_41 { pt3dadd( 43.5264, 2.22804, -24.7926, 1.2 ) }
    dend_41 { pt3dadd( 44.2918, 3.65701, -27.161, 0.84 ) }
    dend_41 { pt3dadd( 44.9689, 4.92885, -29.5115, 1.68 ) }
    dend_41 { pt3dadd( 45.8533, 6.41731, -32.6288, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 31.0639, -12.6859, -11.6322, 0.48 ) }
    dend_36 { pt3dadd( 33.2241, -13.6987, -12.1348, 0.48 ) }
    dend_36 { pt3dadd( 34.8141, -14.6278, -12.5845, 0.96 ) }
    dend_36 { pt3dadd( 35.4261, -15.0621, -12.8004, 0.72 ) }
    dend_36 { pt3dadd( 37.6471, -16.8902, -13.6881, 1.2 ) }
    dend_36 { pt3dadd( 39.4898, -18.6215, -14.4886, 0.84 ) }
    dend_36 { pt3dadd( 41.1444, -20.3882, -15.2753, 1.68 ) }
    dend_36 { pt3dadd( 42.3452, -22.0248, -15.9822, 0.96 ) }
    dend_36 { pt3dadd( 43.3719, -23.8165, -16.7076, 1.92 ) }
    dend_36 { pt3dadd( 43.8599, -24.8872, -17.108, 1.92 ) }
    dend_36 { pt3dadd( 44.346, -26.3479, -17.5944, 0.96 ) }
    dend_36 { pt3dadd( 44.7713, -27.9088, -18.0272, 1.44 ) }
    dend_36 { pt3dadd( 44.9767, -28.756, -18.1877, 1.44 ) }
    dend_36 { pt3dadd( 45.5456, -30.9844, -18.4122, 0.72 ) }
    dend_36 { pt3dadd( 45.77, -31.7703, -18.4308, 0.72 ) }
    dend_36 { pt3dadd( 46.229, -33.2579, -18.3831, 1.32 ) }
    dend_36 { pt3dadd( 47.1208, -35.6998, -18.0059, 1.32 ) }
    dend_36 { pt3dadd( 47.5996, -36.7757, -17.7037, 1.32 ) }
    dend_36 { pt3dadd( 48.1057, -37.7465, -17.3503, 1.32 ) }
    dend_36 { pt3dadd( 48.4545, -38.3568, -17.0839, 1.32 ) }
    dend_36 { pt3dadd( 49.5204, -40.1218, -16.227, 0.72 ) }
    dend_36 { pt3dadd( 51.0066, -42.478, -14.9407, 1.8 ) }
    dend_36 { pt3dadd( 51.9607, -43.888, -14.1822, 1.8 ) }
    dend_36 { pt3dadd( 52.6069, -44.7761, -13.6623, 1.8 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 14.6954, -46.1116, 20.1397, 1.44 ) }
    dend_32 { pt3dadd( 16.852, -47.5931, 20.5018, 1.44 ) }
    dend_32 { pt3dadd( 18.6813, -49.0839, 20.913, 1.44 ) }
    dend_32 { pt3dadd( 20.0668, -50.3738, 21.2996, 1.44 ) }
    dend_32 { pt3dadd( 21.3795, -51.7825, 21.7448, 1.44 ) }
    dend_32 { pt3dadd( 22.2964, -52.8457, 22.0734, 1.44 ) }
    dend_32 { pt3dadd( 23.6619, -54.5458, 22.6077, 1.44 ) }
    dend_32 { pt3dadd( 24.4345, -55.6654, 22.9859, 1.08 ) }
    dend_32 { pt3dadd( 25.194, -56.8829, 23.469, 1.44 ) }
    dend_32 { pt3dadd( 26.5839, -59.169, 24.395, 1.08 ) }
    dend_32 { pt3dadd( 27.4829, -60.5603, 24.9305, 1.56 ) }
    dend_32 { pt3dadd( 28.6727, -62.2187, 25.5789, 0.96 ) }
    dend_32 { pt3dadd( 29.5554, -63.2896, 26.004, 0.96 ) }
    dend_32 { pt3dadd( 31.3621, -65.2806, 26.8184, 0.96 ) }
    dend_32 { pt3dadd( 32.666, -66.6213, 27.395, 0.96 ) }
    dend_32 { pt3dadd( 33.5315, -67.4665, 27.7904, 0.96 ) }
    dend_32 { pt3dadd( 34.3753, -68.2904, 28.1883, 0.96 ) }
    dend_32 { pt3dadd( 35.6292, -69.4952, 28.7866, 0.72 ) }
    dend_32 { pt3dadd( 36.2546, -70.126, 29.0962, 0.72 ) }
    dend_32 { pt3dadd( 37.3647, -71.3239, 29.6803, 0.72 ) }
    dend_32 { pt3dadd( 38.2355, -72.3224, 30.2678, 0.72 ) }
    dend_32 { pt3dadd( 38.7092, -72.8655, 30.6096, 0.72 ) }
    dend_32 { pt3dadd( 39.3807, -73.5761, 31.1026, 0.72 ) }
    dend_32 { pt3dadd( 39.8768, -74.0788, 31.4761, 0.72 ) }
    dend_32 { pt3dadd( 41.074, -75.1845, 32.3369, 0.72 ) }
    dend_32 { pt3dadd( 41.6031, -75.6194, 32.6764, 0.72 ) }
    dend_32 { pt3dadd( 42.4638, -76.238, 33.1919, 0.72 ) }
    dend_32 { pt3dadd( 43.5432, -76.9475, 33.8322, 0.72 ) }
    dend_32 { pt3dadd( 52.7078, -82.4426, 38.0626, 0.72 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 14.6954, -46.1116, 20.1397, 1.44 ) }
    dend_29 { pt3dadd( 13.4347, -46.9058, 21.234, 1.44 ) }
    dend_29 { pt3dadd( 11.406, -48.3274, 22.5878, 1.44 ) }
    dend_29 { pt3dadd( 10.2589, -49.2416, 23.22, 1.2 ) }
    dend_29 { pt3dadd( 9.1693, -50.2296, 23.7131, 1.2 ) }
    dend_29 { pt3dadd( 7.39981, -51.9456, 24.3433, 1.08 ) }
    dend_29 { pt3dadd( 6.46637, -52.8439, 24.6161, 1.08 ) }
    dend_29 { pt3dadd( 4.32155, -54.8328, 24.8957, 1.32 ) }
    dend_29 { pt3dadd( 3.18808, -55.8631, 24.8809, 1.32 ) }
    dend_29 { pt3dadd( 2.01909, -56.961, 24.8132, 0.96 ) }
    dend_29 { pt3dadd( 0.88791, -58.0463, 24.6734, 0.96 ) }
    dend_29 { pt3dadd( -0.574367, -59.4397, 24.4547, 1.32 ) }
    dend_29 { pt3dadd( -1.94407, -60.6715, 24.2518, 0.96 ) }
    dend_29 { pt3dadd( -3.07745, -61.6163, 24.1459, 0.96 ) }
    dend_29 { pt3dadd( -5.24679, -63.3489, 23.9641, 1.44 ) }
    dend_29 { pt3dadd( -7.52548, -65.1284, 23.8146, 0.96 ) }
    dend_29 { pt3dadd( -8.13689, -65.6221, 23.7829, 0.96 ) }
    dend_29 { pt3dadd( -10.1396, -67.3373, 23.6911, 1.8 ) }
    dend_29 { pt3dadd( -11.6197, -68.6509, 23.5171, 1.32 ) }
    dend_29 { pt3dadd( -12.2485, -69.2023, 23.4276, 1.32 ) }
    dend_29 { pt3dadd( -12.6913, -69.5785, 23.368, 1.32 ) }
    dend_29 { pt3dadd( -13.65, -70.3749, 23.2806, 0.96 ) }
    dend_29 { pt3dadd( -14.1534, -70.7866, 23.2118, 0.96 ) }
    dend_29 { pt3dadd( -17.6683, -73.6562, 22.6272, 2.4 ) }
    dend_29 { pt3dadd( -20.0545, -75.6187, 22.1688, 0.84 ) }
    dend_29 { pt3dadd( -21.988, -77.2068, 21.7769, 2.16 ) }
    dend_29 { pt3dadd( -22.7502, -77.8275, 21.6196, 2.16 ) }
    dend_29 { pt3dadd( -25.588, -80.0574, 21.0527, 0.84 ) }
    dend_29 { pt3dadd( -27.2224, -81.2895, 20.7937, 1.32 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.15732, -68.265, -10.4232, 0.84 ) }
    dend_26 { pt3dadd( -5.761, -69.1058, -10.2813, 0.84 ) }
    dend_26 { pt3dadd( -5.48775, -69.6958, -10.1903, 0.96 ) }
    dend_26 { pt3dadd( -5.09836, -70.6011, -10.0689, 0.72 ) }
    dend_26 { pt3dadd( -4.47923, -72.1027, -9.89869, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -3.75987, -73.9873, -9.71148, 1.08 ) }
    dend_26 { pt3dadd( -3.24629, -75.4418, -9.53385, 1.08 ) }
    dend_26 { pt3dadd( -3.05905, -76.0144, -9.45566, 1.08 ) }
    dend_26 { pt3dadd( -2.64959, -77.4992, -9.25335, 0.6 ) }
    dend_26 { pt3dadd( -2.37532, -78.7695, -9.06879, 1.32 ) }
    dend_26 { pt3dadd( -2.20977, -79.9263, -8.87555, 1.32 ) }
    dend_26 { pt3dadd( -2.06708, -81.2837, -8.65451, 0.72 ) }
    dend_26 { pt3dadd( -2.00748, -81.8507, -8.57292, 0.72 ) }
    dend_26 { pt3dadd( -1.84762, -83.0868, -8.36842, 1.2 ) }
    dend_26 { pt3dadd( -1.67224, -84.1193, -8.15406, 0.48 ) }
    dend_26 { pt3dadd( -1.47725, -85.05, -7.94421, 1.08 ) }
    dend_26 { pt3dadd( -1.18061, -86.1946, -7.69908, 0.6 ) }
    dend_26 { pt3dadd( -0.693903, -87.845, -7.40145, 1.2 ) }
    dend_26 { pt3dadd( -0.0701802, -89.7507, -7.00286, 0.72 ) }
    dend_26 { pt3dadd( 0.48538, -91.2363, -6.628, 1.32 ) }
    dend_26 { pt3dadd( 0.99605, -92.4478, -6.27318, 0.72 ) }
    dend_26 { pt3dadd( 1.48601, -93.517, -5.89869, 1.08 ) }
    dend_26 { pt3dadd( 2.0133, -94.6419, -5.47168, 0.48 ) }
    dend_26 { pt3dadd( 2.50389, -95.6652, -5.07264, 0.48 ) }
    dend_26 { pt3dadd( 2.99546, -96.7284, -4.72946, 1.32 ) }
    dend_26 { pt3dadd( 3.27627, -97.4156, -4.51421, 1.32 ) }
    dend_26 { pt3dadd( 3.62415, -98.4992, -4.17141, 0.72 ) }
    dend_26 { pt3dadd( 3.75706, -99.4219, -3.95167, 1.32 ) }
    dend_26 { pt3dadd( 3.63771, -100.538, -3.97511, 0.6 ) }
    dend_26 { pt3dadd( 3.30574, -101.57, -4.29332, 1.56 ) }
    dend_26 { pt3dadd( 3.01897, -102.157, -4.58966, 1.56 ) }
    dend_26 { pt3dadd( 2.61482, -102.844, -5.02368, 0.72 ) }
    dend_26 { pt3dadd( 1.73496, -104.169, -6.01362, 1.68 ) }
    dend_26 { pt3dadd( 0.65326, -105.789, -7.31942, 1.2 ) }
    dend_26 { pt3dadd( 0.199834, -106.533, -7.93026, 1.56 ) }
    dend_26 { pt3dadd( -0.273159, -107.462, -8.65339, 0.96 ) }
    dend_26 { pt3dadd( -0.603736, -108.304, -9.23731, 0.96 ) }
    dend_26 { pt3dadd( -0.798766, -109.078, -9.67837, 1.56 ) }
    dend_26 { pt3dadd( -0.9673, -110.204, -10.1766, 1.56 ) }
    dend_26 { pt3dadd( -1.14406, -111.397, -10.5316, 1.2 ) }
    dend_26 { pt3dadd( -1.28089, -112.252, -10.7161, 1.2 ) }
    dend_26 { pt3dadd( -1.56202, -113.736, -10.9852, 1.68 ) }
    dend_26 { pt3dadd( -2.02103, -115.839, -11.3023, 0.96 ) }
    dend_26 { pt3dadd( -2.306, -116.937, -11.4192, 0.96 ) }
    dend_26 { pt3dadd( -3.01387, -119.338, -11.5902, 0.48 ) }
    dend_26 { pt3dadd( -3.29461, -120.251, -11.6255, 1.56 ) }
    dend_26 { pt3dadd( -4.0032, -122.665, -11.6559, 0.96 ) }
    dend_26 { pt3dadd( -4.13608, -123.145, -11.646, 0.96 ) }
    dend_26 { pt3dadd( -4.56258, -124.916, -11.4863, 1.44 ) }
    dend_26 { pt3dadd( -4.71569, -126.027, -11.3444, 1.08 ) }
    dend_26 { pt3dadd( -4.73561, -127.64, -11.1106, 0.72 ) }
    dend_26 { pt3dadd( -4.66093, -128.829, -10.8892, 0.72 ) }
    dend_26 { pt3dadd( -4.57488, -129.476, -10.7275, 0.72 ) }
    dend_26 { pt3dadd( -4.33896, -130.925, -10.3505, 1.32 ) }
    dend_26 { pt3dadd( -4.0435, -132.406, -9.9723, 0.72 ) }
    dend_26 { pt3dadd( -3.86806, -133.289, -9.76143, 0.72 ) }
    dend_26 { pt3dadd( -3.78631, -133.704, -9.61215, 0.72 ) }
    dend_26 { pt3dadd( -3.68608, -134.211, -9.37746, 0.72 ) }
    dend_26 { pt3dadd( -3.45329, -135.331, -8.78638, 1.2 ) }
    dend_26 { pt3dadd( -3.20187, -136.495, -8.10721, 0.6 ) }
    dend_26 { pt3dadd( -2.9844, -137.496, -7.43841, 1.2 ) }
    dend_26 { pt3dadd( -2.43835, -139.891, -5.66633, 0.72 ) }
    dend_26 { pt3dadd( -2.17733, -140.911, -4.8724, 0.72 ) }
    dend_26 { pt3dadd( -1.91675, -141.795, -4.17152, 1.32 ) }
    dend_26 { pt3dadd( -1.63629, -142.653, -3.49928, 0.6 ) }
    dend_26 { pt3dadd( -1.24798, -143.84, -2.62182, 1.2 ) }
    dend_26 { pt3dadd( -0.838624, -145.133, -1.73879, 0.72 ) }
    dend_26 { pt3dadd( -0.54252, -146.155, -1.1531, 0.72 ) }
    dend_26 { pt3dadd( -0.244035, -147.306, -0.45683, 1.2 ) }
    dend_26 { pt3dadd( -0.00775525, -148.303, 0.168198, 0.6 ) }
    dend_26 { pt3dadd( 0.1549, -149.028, 0.636215, 1.2 ) }
    dend_26 { pt3dadd( 0.448945, -150.37, 1.5288, 0.48 ) }
    dend_26 { pt3dadd( 0.65452, -151.367, 2.18557, 1.44 ) }
    dend_26 { pt3dadd( 0.83485, -152.528, 3.00214, 0.96 ) }
    dend_26 { pt3dadd( 0.88459, -153.047, 3.40291, 0.96 ) }
    dend_26 { pt3dadd( 0.89757, -153.329, 3.61651, 0.96 ) }
    dend_26 { pt3dadd( 0.89994, -153.924, 4.0126, 0.96 ) }
    dend_26 { pt3dadd( 0.85126, -154.803, 4.46509, 0.96 ) }
    dend_26 { pt3dadd( 0.75148, -155.911, 4.90662, 1.68 ) }
    dend_26 { pt3dadd( 0.541595, -157.427, 5.55158, 0.96 ) }
    dend_26 { pt3dadd( 0.3692, -158.502, 6.05334, 1.32 ) }
    dend_26 { pt3dadd( 0.153139, -159.717, 6.68751, 0.72 ) }
    dend_26 { pt3dadd( -0.0331332, -160.778, 7.30803, 0.72 ) }
    dend_26 { pt3dadd( -0.167703, -161.684, 7.89471, 1.2 ) }
    dend_26 { pt3dadd( -0.374605, -163.814, 9.40106, 0.6 ) }
    dend_26 { pt3dadd( -0.415589, -164.492, 9.92861, 0.96 ) }
    dend_26 { pt3dadd( -0.428351, -165.476, 10.8214, 0.6 ) }
    dend_26 { pt3dadd( -0.424745, -166.23, 11.5736, 1.32 ) }
    dend_26 { pt3dadd( -0.427961, -166.701, 12.0621, 1.32 ) }
    dend_26 { pt3dadd( -0.447191, -167.055, 12.4207, 1.32 ) }
    dend_26 { pt3dadd( -0.50497, -167.591, 12.8817, 1.32 ) }
    dend_26 { pt3dadd( -0.658801, -168.351, 13.564, 0.96 ) }
    dend_26 { pt3dadd( -0.952417, -169.422, 14.4719, 1.44 ) }
    dend_26 { pt3dadd( -1.19748, -170.112, 15.0751, 1.44 ) }
    dend_26 { pt3dadd( -1.50961, -170.854, 15.7401, 0.72 ) }
    dend_26 { pt3dadd( -1.85234, -171.563, 16.4007, 1.2 ) }
    dend_26 { pt3dadd( -2.31444, -172.432, 17.2172, 0.48 ) }
    dend_26 { pt3dadd( -2.84164, -173.248, 17.9682, 1.08 ) }
    dend_26 { pt3dadd( -3.39199, -174.053, 18.728, 0.6 ) }
    dend_26 { pt3dadd( -3.82518, -174.663, 19.2966, 1.2 ) }
    dend_26 { pt3dadd( -4.385, -175.403, 19.9872, 0.6 ) }
    dend_26 { pt3dadd( -4.68119, -175.768, 20.3312, 0.6 ) }
    dend_26 { pt3dadd( -5.36771, -176.546, 21.0909, 1.2 ) }
    dend_26 { pt3dadd( -5.99161, -177.183, 21.7997, 0.72 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.15732, -68.265, -10.4232, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( -4.96237, -69.6641, -10.3883, 0.96 ) }
    dend_15 { pt3dadd( -3.76691, -71.0637, -10.3534, 0.96 ) }
    dend_15 { pt3dadd( -2.3305, -72.7454, -10.3115, 2.64 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -33.2275, -11.8125, 7.24973, 1.32 ) }
    dend_5 { pt3dadd( -34.3724, -11.513, 7.96336, 1.32 ) }
    dend_5 { pt3dadd( -35.5722, -11.1992, 8.71114, 1.32 ) }
    dend_5 { pt3dadd( -36.8693, -10.8599, 9.5196, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -33.2275, -11.8125, 7.24973, 0.96 ) }
    dend_2 { pt3dadd( -34.5628, -14.424, 7.69727, 0.96 ) }
    dend_2 { pt3dadd( -35.0154, -15.1163, 7.91361, 1.44 ) }
    dend_2 { pt3dadd( -35.7624, -16.027, 8.33558, 1.44 ) }
    dend_2 { pt3dadd( -36.3536, -16.6779, 8.70638, 1.44 ) }
    dend_2 { pt3dadd( -37.1074, -17.491, 9.20032, 1.44 ) }
    dend_2 { pt3dadd( -38.7778, -19.3154, 10.351, 1.68 ) }
    dend_2 { pt3dadd( -40.0121, -20.5675, 11.3259, 1.2 ) }
    dend_2 { pt3dadd( -41.1704, -21.7679, 12.3118, 1.2 ) }
    dend_2 { pt3dadd( -41.6404, -22.2619, 12.7484, 1.2 ) }
    dend_2 { pt3dadd( -42.175, -22.8738, 13.2592, 1.2 ) }
    dend_2 { pt3dadd( -42.6846, -23.5285, 13.7537, 1.2 ) }
    dend_2 { pt3dadd( -42.9292, -23.9643, 13.9915, 1.2 ) }
    dend_2 { pt3dadd( -43.157, -24.5465, 14.2569, 1.2 ) }
    dend_2 { pt3dadd( -43.3934, -25.2762, 14.556, 1.2 ) }
    dend_2 { pt3dadd( -43.9874, -26.9936, 15.249, 1.56 ) }
    dend_2 { pt3dadd( -44.464, -28.0469, 15.6896, 1.08 ) }
    dend_2 { pt3dadd( -44.9658, -28.9353, 16.0626, 1.08 ) }
    dend_2 { pt3dadd( -45.4756, -29.6261, 16.4152, 1.08 ) }
    dend_2 { pt3dadd( -46.1182, -30.4241, 16.8375, 1.08 ) }
    dend_2 { pt3dadd( -46.5407, -30.899, 17.0924, 1.08 ) }
    dend_2 { pt3dadd( -47.791, -32.0577, 17.8393, 1.08 ) }
    dend_2 { pt3dadd( -48.2152, -32.3576, 18.051, 1.08 ) }
    dend_2 { pt3dadd( -49.8663, -33.2026, 18.7999, 1.32 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -18.3181, -84.7375, -72.2773, 1.08 ) }
    dend_46 { pt3dadd( -17.3129, -86.4607, -72.6821, 1.08 ) }
    dend_46 { pt3dadd( -16.1452, -88.4624, -73.1524, 1.32 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -18.3181, -84.7375, -72.2773, 0.84 ) }
    dend_45 { pt3dadd( -19.9669, -86.7627, -72.1909, 0.84 ) }
    dend_45 { pt3dadd( -21.8946, -88.9042, -72.7241, 1.44 ) }
    dend_45 { pt3dadd( -23.8173, -91.0401, -73.2558, 0.6 ) }
    dend_45 { pt3dadd( -25.4496, -92.8535, -73.7073, 1.08 ) }
    dend_45 { pt3dadd( -28.5042, -96.2469, -74.5521, 0.48 ) }
    dend_45 { pt3dadd( -31.0435, -99.0678, -75.2544, 1.56 ) }
    dend_45 { pt3dadd( -34.7574, -102.922, -76.8072, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 42/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 52.6069, -44.7761, -13.6623, 0.84 ) }
    dend_40 { pt3dadd( 52.9785, -46.3812, -13.4217, 0.84 ) }
    dend_40 { pt3dadd( 53.2561, -47.6088, -13.2316, 1.44 ) }
    dend_40 { pt3dadd( 54.0564, -51.0148, -12.7149, 0.48 ) }
    dend_40 { pt3dadd( 54.7181, -53.831, -12.2878, 0.48 ) }
    dend_40 { pt3dadd( 55.1661, -55.7378, -11.9985, 1.44 ) }
    dend_40 { pt3dadd( 55.8031, -58.4487, -11.5873, 0.6 ) }
    dend_40 { pt3dadd( 56.0971, -59.6308, -11.4242, 0.6 ) }
    dend_40 { pt3dadd( 56.5069, -61.2188, -11.1948, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 51/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 52.6069, -44.7761, -13.6623, 0.6 ) }
    dend_37 { pt3dadd( 53.9819, -45.5252, -13.5176, 0.6 ) }
    dend_37 { pt3dadd( 55.6509, -46.3524, -13.2707, 1.2 ) }
    dend_37 { pt3dadd( 56.1878, -46.6271, -13.1736, 1.2 ) }
    dend_37 { pt3dadd( 57.1696, -47.1632, -12.9771, 0.6 ) }
    dend_37 { pt3dadd( 59.8198, -48.7167, -12.3727, 1.68 ) }
    dend_37 { pt3dadd( 60.8274, -49.324, -12.1158, 1.68 ) }
    dend_37 { pt3dadd( 62.482, -50.328, -11.6556, 0.84 ) }
    dend_37 { pt3dadd( 63.9862, -51.1917, -11.2116, 0.84 ) }
    dend_37 { pt3dadd( 65.5355, -52.0489, -10.7356, 1.44 ) }
    dend_37 { pt3dadd( 67.4145, -53.0964, -10.1289, 0.84 ) }
    dend_37 { pt3dadd( 69.638, -54.4007, -9.37464, 1.56 ) }
    dend_37 { pt3dadd( 72.2059, -55.9087, -8.48745, 1.08 ) }
    dend_37 { pt3dadd( 73.8299, -56.8386, -7.93363, 1.56 ) }
    dend_37 { pt3dadd( 75.9911, -58.0035, -7.19876, 2.04 ) }
    dend_37 { pt3dadd( 78.2286, -59.1417, -6.43261, 1.2 ) }
    dend_37 { pt3dadd( 80.0885, -60.0479, -5.80299, 1.2 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -27.2224, -81.2895, 20.7937, 0.48 ) }
    dend_31 { pt3dadd( -27.4532, -82.8235, 21.4568, 0.48 ) }
    dend_31 { pt3dadd( -27.6276, -84.3741, 22.0211, 1.56 ) }
    dend_31 { pt3dadd( -27.8453, -87.1238, 22.8432, 0.6 ) }
    dend_31 { pt3dadd( -27.8628, -88.905, 23.2706, 1.8 ) }
    dend_31 { pt3dadd( -27.8175, -90.8539, 23.653, 0.6 ) }
    dend_31 { pt3dadd( -27.7702, -91.9161, 23.8298, 0.6 ) }
    dend_31 { pt3dadd( -27.6616, -93.2006, 23.9683, 0.6 ) }
    dend_31 { pt3dadd( -27.4636, -94.6949, 24.0865, 1.56 ) }
    dend_31 { pt3dadd( -26.9984, -97.0359, 24.1484, 0.48 ) }
    dend_31 { pt3dadd( -26.601, -98.6486, 24.1902, 0.48 ) }
    dend_31 { pt3dadd( -26.3916, -99.4132, 24.2163, 0.48 ) }
    dend_31 { pt3dadd( -25.9633, -100.921, 24.3045, 1.68 ) }
    dend_31 { pt3dadd( -25.3381, -103.07, 24.5093, 1.08 ) }
    dend_31 { pt3dadd( -24.9144, -104.422, 24.7027, 1.08 ) }
    dend_31 { pt3dadd( -23.3981, -112.974, 24.8851, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -27.2224, -81.2895, 20.7937, 0.72 ) }
    dend_30 { pt3dadd( -28.241, -81.5671, 20.5718, 0.72 ) }
    dend_30 { pt3dadd( -28.8314, -81.7452, 20.4164, 1.56 ) }
    dend_30 { pt3dadd( -29.3898, -81.9442, 20.2644, 0.72 ) }
    dend_30 { pt3dadd( -30.223, -82.2793, 20.0193, 1.32 ) }
    dend_30 { pt3dadd( -31.1514, -82.6984, 19.8379, 0.72 ) }
    dend_30 { pt3dadd( -31.8779, -83.0621, 19.7467, 1.56 ) }
    dend_30 { pt3dadd( -32.7732, -83.6154, 19.6714, 0.84 ) }
    dend_30 { pt3dadd( -33.234, -83.9515, 19.6667, 0.84 ) }
    dend_30 { pt3dadd( -34.0115, -84.6285, 19.7233, 1.92 ) }
    dend_30 { pt3dadd( -35.2152, -85.8769, 19.968, 0.96 ) }
    dend_30 { pt3dadd( -35.6634, -86.3937, 20.1063, 0.96 ) }
    dend_30 { pt3dadd( -36.5108, -87.4655, 20.4559, 0.72 ) }
    dend_30 { pt3dadd( -36.77, -87.8247, 20.5876, 1.32 ) }
    dend_30 { pt3dadd( -37.2339, -88.4986, 20.8447, 0.84 ) }
    dend_30 { pt3dadd( -37.6136, -89.1566, 21.0945, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -41.5599, -91.7093, 21.2764, 1.2 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.3305, -72.7454, -10.3115, 0.96 ) }
    dend_23 { pt3dadd( -3.06558, -74.5991, -10.8936, 0.96 ) }
    dend_23 { pt3dadd( -3.6968, -76.439, -11.4365, 0.96 ) }
    dend_23 { pt3dadd( -3.93837, -77.1691, -11.6359, 0.96 ) }
    dend_23 { pt3dadd( -4.18492, -77.9252, -11.8263, 0.96 ) }
    dend_23 { pt3dadd( -4.56497, -79.093, -12.0786, 0.96 ) }
    dend_23 { pt3dadd( -4.76134, -79.6933, -12.1923, 0.96 ) }
    dend_23 { pt3dadd( -4.8406, -80.0255, -12.2343, 0.96 ) }
    dend_23 { pt3dadd( -5.02928, -80.6927, -12.2644, 0.96 ) }
    dend_23 { pt3dadd( -5.15309, -81.0063, -12.2908, 0.96 ) }
    dend_23 { pt3dadd( -5.54161, -81.7931, -12.4277, 0.96 ) }
    dend_23 { pt3dadd( -5.85106, -82.3081, -12.5956, 0.96 ) }
    dend_23 { pt3dadd( -6.34416, -83.1018, -12.9595, 0.6 ) }
    dend_23 { pt3dadd( -7.01219, -84.1689, -13.5479, 1.56 ) }
    dend_23 { pt3dadd( -7.89232, -85.556, -14.4267, 0.96 ) }
    dend_23 { pt3dadd( -8.42376, -86.3583, -14.9873, 0.96 ) }
    dend_23 { pt3dadd( -9.46439, -87.8717, -16.0895, 0.72 ) }
    dend_23 { pt3dadd( -10.5295, -89.4346, -17.1933, 1.2 ) }
    dend_23 { pt3dadd( -11.3436, -90.6294, -18.0029, 0.72 ) }
    dend_23 { pt3dadd( -12.2311, -91.9694, -18.8333, 1.2 ) }
    dend_23 { pt3dadd( -13.2761, -93.5915, -19.7242, 0.72 ) }
    dend_23 { pt3dadd( -13.7726, -94.413, -20.1214, 0.72 ) }
    dend_23 { pt3dadd( -15.012, -96.6208, -21.0182, 1.2 ) }
    dend_23 { pt3dadd( -15.8173, -98.1006, -21.4969, 1.2 ) }
    dend_23 { pt3dadd( -16.7438, -99.8553, -21.9719, 0.72 ) }
    dend_23 { pt3dadd( -17.0832, -100.526, -22.1217, 0.72 ) }
    dend_23 { pt3dadd( -17.8113, -101.988, -22.4048, 1.32 ) }
    dend_23 { pt3dadd( -18.3214, -103.045, -22.6074, 1.32 ) }
    dend_23 { pt3dadd( -19.107, -104.644, -22.9142, 0.6 ) }
    dend_23 { pt3dadd( -19.6821, -105.787, -23.1567, 1.08 ) }
    dend_23 { pt3dadd( -21.0885, -108.357, -23.8982, 0.6 ) }
    dend_23 { pt3dadd( -21.7979, -109.554, -24.3248, 1.2 ) }
    dend_23 { pt3dadd( -22.5248, -110.636, -24.743, 0.6 ) }
    dend_23 { pt3dadd( -23.2933, -111.652, -25.2256, 1.2 ) }
    dend_23 { pt3dadd( -24.0747, -112.602, -25.7754, 0.48 ) }
    dend_23 { pt3dadd( -25.658, -114.41, -26.8894, 1.44 ) }
    dend_23 { pt3dadd( -26.0332, -114.822, -27.1526, 1.44 ) }
    dend_23 { pt3dadd( -27.2144, -116.131, -27.936, 0.72 ) }
    dend_23 { pt3dadd( -28.6688, -117.804, -28.8078, 1.56 ) }
    dend_23 { pt3dadd( -30.553, -120.163, -29.7713, 0.84 ) }
    dend_23 { pt3dadd( -31.1451, -120.983, -29.981, 0.84 ) }
    dend_23 { pt3dadd( -32.2484, -122.814, -30.3162, 1.56 ) }
    dend_23 { pt3dadd( -32.808, -123.925, -30.5096, 1.56 ) }
    dend_23 { pt3dadd( -33.6074, -125.898, -30.8686, 0.72 ) }
    dend_23 { pt3dadd( -34.2374, -127.927, -31.3512, 1.2 ) }
    dend_23 { pt3dadd( -34.9068, -130.348, -31.9193, 0.72 ) }
    dend_23 { pt3dadd( -35.7291, -133.607, -32.8008, 1.56 ) }
    dend_23 { pt3dadd( -36.1161, -135.385, -33.365, 1.08 ) }
    dend_23 { pt3dadd( -36.4123, -137.132, -34.0392, 1.56 ) }
    dend_23 { pt3dadd( -36.8652, -141.287, -36.0909, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.3305, -72.7454, -10.3115, 0.48 ) }
    dend_16 { pt3dadd( -0.387827, -74.8288, -9.1824, 0.48 ) }
    dend_16 { pt3dadd( 0.469493, -75.7653, -8.64112, 0.48 ) }
    dend_16 { pt3dadd( 1.87236, -77.2978, -7.75541, 1.56 ) }
    dend_16 { pt3dadd( 2.99488, -78.524, -7.0467, 0.36 ) }
    dend_16 { pt3dadd( 3.38063, -78.9454, -6.80316, 0.36 ) }
    dend_16 { pt3dadd( 4.7835, -80.4779, -5.91744, 1.32 ) }
    dend_16 { pt3dadd( 5.64027, -81.3858, -5.21418, 1.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -36.8693, -10.8599, 9.5196, 1.44 ) }
    dend_9 { pt3dadd( -37.4313, -10.194, 13.6636, 1.44 ) }
    dend_9 { pt3dadd( -38.1909, -9.83459, 17.0298, 1.2 ) }
    dend_9 { pt3dadd( -38.6468, -9.62789, 18.6663, 1.2 ) }
    dend_9 { pt3dadd( -39.0486, -9.44565, 20.109, 0.84 ) }
    dend_9 { pt3dadd( -39.2455, -9.35638, 20.8159, 0.84 ) }
    dend_9 { pt3dadd( -39.6786, -9.16002, 22.3705, 1.2 ) }
    dend_9 { pt3dadd( -40.9419, -8.92076, 25.1101, 1.08 ) }
    dend_9 { pt3dadd( -41.8392, -8.87661, 26.4025, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -36.8693, -10.8599, 9.5196, 1.92 ) }
    dend_6 { pt3dadd( -37.7116, -10.3726, 10.1201, 1.92 ) }
    dend_6 { pt3dadd( -38.2087, -10.0839, 10.409, 1.92 ) }
    dend_6 { pt3dadd( -38.9837, -9.57893, 10.7944, 1.56 ) }
    dend_6 { pt3dadd( -39.6267, -9.12394, 11.0836, 1.32 ) }
    dend_6 { pt3dadd( -40.2269, -8.64274, 11.3444, 1.8 ) }
    dend_6 { pt3dadd( -40.8901, -8.06821, 11.6199, 1.2 ) }
    dend_6 { pt3dadd( -41.4188, -7.54214, 11.7951, 1.2 ) }
    dend_6 { pt3dadd( -42.143, -6.77146, 12.0226, 0.96 ) }
    dend_6 { pt3dadd( -42.4799, -6.39534, 12.1127, 0.96 ) }
    dend_6 { pt3dadd( -43.0438, -5.77009, 12.2271, 1.32 ) }
    dend_6 { pt3dadd( -43.5813, -5.22229, 12.3289, 1.32 ) }
    dend_6 { pt3dadd( -43.9691, -4.89518, 12.3865, 1.32 ) }
    dend_6 { pt3dadd( -44.439, -4.59311, 12.4347, 0.96 ) }
    dend_6 { pt3dadd( -44.792, -4.44167, 12.4524, 0.96 ) }
    dend_6 { pt3dadd( -45.3737, -4.2402, 12.5261, 0.96 ) }
    dend_6 { pt3dadd( -46.0074, -4.08348, 12.5937, 0.96 ) }
    dend_6 { pt3dadd( -47.0055, -3.89036, 12.6937, 1.44 ) }
    dend_6 { pt3dadd( -47.5176, -3.80367, 12.745, 1.44 ) }
    dend_6 { pt3dadd( -47.9185, -3.71835, 12.7897, 1.44 ) }
    dend_6 { pt3dadd( -49.2018, -3.32334, 13.0481, 1.2 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -49.8663, -33.2026, 18.7999, 0.96 ) }
    dend_4 { pt3dadd( -50.7401, -33.1008, 19.928, 0.96 ) }
    dend_4 { pt3dadd( -51.944, -32.8753, 21.5513, 0.96 ) }
    dend_4 { pt3dadd( -53.0341, -32.6389, 23.0239, 0.96 ) }
    dend_4 { pt3dadd( -54.9422, -32.1737, 25.5436, 0.6 ) }
    dend_4 { pt3dadd( -56.7142, -31.7231, 27.7916, 1.2 ) }
    dend_4 { pt3dadd( -59.6426, -30.823, 31.4989, 0.72 ) }
    dend_4 { pt3dadd( -60.1812, -30.5933, 32.2536, 0.72 ) }
    dend_4 { pt3dadd( -60.4418, -30.4598, 32.6339, 0.72 ) }
    dend_4 { pt3dadd( -61.0304, -30.0937, 33.5122, 0.72 ) }
    dend_4 { pt3dadd( -61.4783, -29.6937, 34.2442, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -62.6345, -28.3264, 36.438, 1.2 ) }
    dend_4 { pt3dadd( -64.1644, -26.2557, 39.1728, 0.84 ) }
    dend_4 { pt3dadd( -73.6001, -23.2085, 47.7938, 0.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -49.8663, -33.2026, 18.7999, 0.84 ) }
    dend_3 { pt3dadd( -50.9237, -33.6877, 18.7291, 0.84 ) }
    dend_3 { pt3dadd( -51.7235, -33.9755, 18.6971, 0.84 ) }
    dend_3 { pt3dadd( -52.9175, -34.405, 18.6608, 0.6 ) }
    dend_3 { pt3dadd( -53.7316, -34.6749, 18.6459, 0.6 ) }
    dend_3 { pt3dadd( -54.8881, -35.0121, 18.6363, 0.6 ) }
    dend_3 { pt3dadd( -56.1279, -35.3297, 18.6368, 0.6 ) }
    dend_3 { pt3dadd( -57.2898, -35.5373, 18.6281, 0.6 ) }
    dend_3 { pt3dadd( -58.2169, -35.6715, 18.6453, 0.6 ) }
    dend_3 { pt3dadd( -59.1939, -35.7943, 18.709, 0.6 ) }
    dend_3 { pt3dadd( -59.7397, -35.8493, 18.7504, 0.6 ) }
    dend_3 { pt3dadd( -60.3933, -35.9059, 18.8051, 0.6 ) }
    dend_3 { pt3dadd( -60.7901, -35.9117, 18.8376, 1.08 ) }
    dend_3 { pt3dadd( -62.1236, -35.86, 18.9566, 0.72 ) }
    dend_3 { pt3dadd( -63.5798, -35.7494, 19.094, 0.72 ) }
    dend_3 { pt3dadd( -64.7192, -35.6674, 19.2017, 0.72 ) }
    dend_3 { pt3dadd( -65.2608, -35.6316, 19.2525, 0.72 ) }
    dend_3 { pt3dadd( -66.6625, -35.4699, 19.3919, 1.08 ) }
    dend_3 { pt3dadd( -75.5806, -37.1101, 18.3672, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 80.0885, -60.0479, -5.80299, 0.72 ) }
    dend_39 { pt3dadd( 80.3728, -62.0214, -7.09063, 0.72 ) }
    dend_39 { pt3dadd( 80.5467, -63.229, -7.87854, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 80.0885, -60.0479, -5.80299, 0.96 ) }
    dend_38 { pt3dadd( 81.6367, -61.3746, -5.44318, 0.96 ) }
    dend_38 { pt3dadd( 83.2121, -62.7985, -4.98482, 0.96 ) }
    dend_38 { pt3dadd( 85.004, -64.4884, -4.42186, 1.56 ) }
    dend_38 { pt3dadd( 87.1517, -66.5116, -3.77516, 0.84 ) }
    dend_38 { pt3dadd( 89.081, -68.3526, -3.23547, 1.32 ) }
    dend_38 { pt3dadd( 91.54, -70.8313, -2.42539, 0.6 ) }
    dend_38 { pt3dadd( 92.9646, -72.3438, -1.87511, 1.32 ) }
    dend_38 { pt3dadd( 94.9104, -74.4462, -1.07109, 0.72 ) }
    dend_38 { pt3dadd( 96.627, -76.2777, -0.358635, 0.72 ) }
    dend_38 { pt3dadd( 97.9161, -77.5646, 0.198589, 1.68 ) }
    dend_38 { pt3dadd( 101.314, -80.6107, 1.6988, 0.72 ) }
    dend_38 { pt3dadd( 103.403, -82.1862, 2.6432, 0.72 ) }
    dend_38 { pt3dadd( 104.661, -82.9556, 3.24748, 0.72 ) }
    dend_38 { pt3dadd( 105.962, -83.5247, 3.95794, 0.72 ) }
    dend_38 { pt3dadd( 107.97, -84.0697, 5.10739, 1.08 ) }
    dend_38 { pt3dadd( 109.467, -84.2773, 5.95906, 0.48 ) }
    dend_38 { pt3dadd( 111.199, -84.2101, 6.8521, 0.96 ) }
    dend_38 { pt3dadd( 112.602, -84.0136, 7.66252, 0.96 ) }
    dend_38 { pt3dadd( 114.305, -83.6791, 8.75673, 0.72 ) }
    dend_38 { pt3dadd( 116.29, -83.2051, 10.1391, 0.48 ) }
    dend_38 { pt3dadd( 124.478, -88.5997, 14.4465, 0.48 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -36.8652, -141.287, -36.0909, 0.84 ) }
    dend_25 { pt3dadd( -39.182, -141.487, -34.7663, 0.84 ) }
    dend_25 { pt3dadd( -41.6142, -141.753, -33.5548, 0.84 ) }
    dend_25 { pt3dadd( -46.987, -142.618, -31.1882, 1.32 ) }
    dend_25 { pt3dadd( -51.5917, -143.555, -29.2311, 0.84 ) }
    dend_25 { pt3dadd( -53.0302, -143.938, -28.6548, 0.84 ) }
    dend_25 { pt3dadd( -55.7219, -144.791, -27.6104, 1.44 ) }
    dend_25 { pt3dadd( -59.4717, -146.35, -26.1545, 0.96 ) }
    dend_25 { pt3dadd( -61.6536, -147.676, -25.3483, 0.96 ) }
    dend_25 { pt3dadd( -63.024, -149.034, -25.0052, 1.44 ) }
    dend_25 { pt3dadd( -64.6006, -151.376, -24.6917, 0.96 ) }
    dend_25 { pt3dadd( -65.012, -152.169, -24.5983, 0.96 ) }
    dend_25 { pt3dadd( -66.0841, -154.857, -24.3313, 1.44 ) }
    dend_25 { pt3dadd( -66.9693, -157.444, -24.0626, 1.08 ) }
    dend_25 { pt3dadd( -68.0745, -160.422, -23.7827, 1.44 ) }
    dend_25 { pt3dadd( -69.3581, -163.318, -23.3979, 0.84 ) }
    dend_25 { pt3dadd( -70.1867, -164.742, -23.039, 0.84 ) }
    dend_25 { pt3dadd( -70.6731, -165.496, -22.8324, 0.84 ) }
    dend_25 { pt3dadd( -72.8612, -168.315, -21.8848, 1.2 ) }
    dend_25 { pt3dadd( -74.0213, -169.443, -21.3195, 1.2 ) }
    dend_25 { pt3dadd( -77.419, -171.442, -19.3807, 0.84 ) }
    dend_25 { pt3dadd( -80.3217, -172.185, -17.4545, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -36.8652, -141.287, -36.0909, 0.72 ) }
    dend_24 { pt3dadd( -37.4731, -143.091, -35.5323, 0.72 ) }
    dend_24 { pt3dadd( -38.8817, -146.697, -34.7283, 1.2 ) }
    dend_24 { pt3dadd( -39.7881, -148.758, -34.4024, 0.84 ) }
    dend_24 { pt3dadd( -40.8804, -151.021, -34.1621, 1.32 ) }
    dend_24 { pt3dadd( -42.4649, -154.095, -33.8959, 0.72 ) }
    dend_24 { pt3dadd( -43.5908, -156.186, -33.7517, 1.32 ) }
    dend_24 { pt3dadd( -45.5077, -159.506, -33.6858, 0.84 ) }
    dend_24 { pt3dadd( -47.325, -162.413, -33.7627, 1.32 ) }
    dend_24 { pt3dadd( -49.1615, -165.265, -33.9018, 0.84 ) }
    dend_24 { pt3dadd( -50.1286, -166.73, -33.9807, 0.84 ) }
    dend_24 { pt3dadd( -51.9499, -169.494, -34.1435, 1.44 ) }
    dend_24 { pt3dadd( -52.6122, -170.551, -34.1994, 1.44 ) }
    dend_24 { pt3dadd( -54.3454, -173.638, -34.3475, 0.96 ) }
    dend_24 { pt3dadd( -56.4111, -177.787, -34.5267, 1.44 ) }
    dend_24 { pt3dadd( -58.1778, -181.729, -34.6519, 0.84 ) }
    dend_24 { pt3dadd( -58.7844, -183.173, -34.6876, 1.32 ) }
    dend_24 { pt3dadd( -59.7584, -185.57, -34.6676, 0.84 ) }
    dend_24 { pt3dadd( -61.5325, -189.869, -34.3559, 1.32 ) }
    dend_24 { pt3dadd( -62.6616, -192.56, -34.068, 0.84 ) }
    dend_24 { pt3dadd( -64.1965, -195.996, -33.6556, 1.44 ) }
    dend_24 { pt3dadd( -64.9787, -197.681, -33.4712, 0.72 ) }
    dend_24 { pt3dadd( -66.6802, -201.181, -33.2776, 1.32 ) }
    dend_24 { pt3dadd( -68.7767, -205.236, -33.0717, 0.6 ) }
    dend_24 { pt3dadd( -70.7831, -208.894, -32.9344, 1.08 ) }
    dend_24 { pt3dadd( -72.9339, -212.712, -32.8978, 0.48 ) }
    dend_24 { pt3dadd( -75.2948, -216.934, -33.0791, 1.44 ) }
    dend_24 { pt3dadd( -77.3131, -220.675, -33.4894, 0.72 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 5.64027, -81.3858, -5.21418, 0.84 ) }
    dend_22 { pt3dadd( 5.14677, -81.9508, -5.41646, 0.84 ) }
    dend_22 { pt3dadd( 4.6589, -82.4923, -5.65419, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 4.31903, -82.883, -5.83519, 0.72 ) }
    dend_22 { pt3dadd( 4.08098, -83.1605, -5.97063, 0.72 ) }
    dend_22 { pt3dadd( 3.61724, -83.7034, -6.25084, 0.72 ) }
    dend_22 { pt3dadd( 3.22683, -84.1623, -6.48834, 0.72 ) }
    dend_22 { pt3dadd( 3.0074, -84.4197, -6.62757, 0.72 ) }
    dend_22 { pt3dadd( 2.73478, -84.7633, -6.82126, 0.72 ) }
    dend_22 { pt3dadd( 2.4275, -85.1741, -7.03599, 1.08 ) }
    dend_22 { pt3dadd( 2.13436, -85.5597, -7.22506, 1.08 ) }
    dend_22 { pt3dadd( 1.99879, -85.7426, -7.2979, 1.08 ) }
    dend_22 { pt3dadd( 1.72186, -86.1204, -7.43397, 0.6 ) }
    dend_22 { pt3dadd( 1.51079, -86.3986, -7.5423, 0.6 ) }
    dend_22 { pt3dadd( 1.00109, -87.0142, -7.79708, 1.08 ) }
    dend_22 { pt3dadd( 0.608384, -87.4847, -8.00228, 1.08 ) }
    dend_22 { pt3dadd( 0.0173578, -88.1428, -8.30164, 0.6 ) }
    dend_22 { pt3dadd( -0.370429, -88.5417, -8.49656, 0.6 ) }
    dend_22 { pt3dadd( -1.10112, -89.248, -8.85081, 1.56 ) }
    dend_22 { pt3dadd( -1.65045, -89.7672, -9.10721, 0.84 ) }
    dend_22 { pt3dadd( -2.11685, -90.2071, -9.31452, 1.44 ) }
    dend_22 { pt3dadd( -2.7347, -90.8023, -9.57025, 0.96 ) }
    dend_22 { pt3dadd( -3.23109, -91.2881, -9.76261, 1.56 ) }
    dend_22 { pt3dadd( -3.81273, -91.9058, -9.96826, 0.96 ) }
    dend_22 { pt3dadd( -4.09727, -92.2331, -10.0471, 0.96 ) }
    dend_22 { pt3dadd( -4.49463, -92.7481, -10.1524, 1.56 ) }
    dend_22 { pt3dadd( -4.70523, -93.0515, -10.2072, 1.56 ) }
    dend_22 { pt3dadd( -5.14375, -93.7882, -10.3337, 1.08 ) }
    dend_22 { pt3dadd( -5.54372, -94.5166, -10.4512, 1.68 ) }
    dend_22 { pt3dadd( -5.90873, -95.2272, -10.5599, 1.68 ) }
    dend_22 { pt3dadd( -6.28578, -96.0209, -10.6764, 0.96 ) }
    dend_22 { pt3dadd( -6.58233, -96.7228, -10.768, 1.56 ) }
    dend_22 { pt3dadd( -6.83982, -97.3739, -10.8544, 0.96 ) }
    dend_22 { pt3dadd( -7.10789, -98.1147, -10.9357, 1.8 ) }
    dend_22 { pt3dadd( -7.44425, -99.1173, -11.0356, 1.2 ) }
    dend_22 { pt3dadd( -7.66322, -99.8423, -11.1026, 0.72 ) }
    dend_22 { pt3dadd( -7.92128, -100.787, -11.1725, 1.2 ) }
    dend_22 { pt3dadd( -8.09504, -101.471, -11.2141, 0.72 ) }
    dend_22 { pt3dadd( -8.27246, -102.288, -11.2609, 0.72 ) }
    dend_22 { pt3dadd( -8.35389, -102.751, -11.29, 0.72 ) }
    dend_22 { pt3dadd( -8.45428, -103.451, -11.3429, 1.2 ) }
    dend_22 { pt3dadd( -8.51889, -103.921, -11.3782, 0.72 ) }
    dend_22 { pt3dadd( -8.61339, -104.674, -11.4476, 1.2 ) }
    dend_22 { pt3dadd( -8.70964, -105.449, -11.525, 0.6 ) }
    dend_22 { pt3dadd( -8.78791, -105.931, -11.5797, 1.2 ) }
    dend_22 { pt3dadd( -8.9707, -106.691, -11.6528, 0.6 ) }
    dend_22 { pt3dadd( -9.10941, -107.146, -11.689, 0.6 ) }
    dend_22 { pt3dadd( -9.33853, -107.74, -11.7367, 1.32 ) }
    dend_22 { pt3dadd( -9.89012, -108.978, -11.8466, 0.72 ) }
    dend_22 { pt3dadd( -10.3017, -109.806, -11.9256, 1.2 ) }
    dend_22 { pt3dadd( -10.8034, -110.759, -12.0191, 0.72 ) }
    dend_22 { pt3dadd( -10.9411, -111.019, -12.0436, 0.72 ) }
    dend_22 { pt3dadd( -11.4119, -111.938, -12.1274, 1.32 ) }
    dend_22 { pt3dadd( -11.8195, -112.78, -12.2104, 0.6 ) }
    dend_22 { pt3dadd( -12.1755, -113.552, -12.293, 1.32 ) }
    dend_22 { pt3dadd( -12.5887, -114.477, -12.4155, 0.6 ) }
    dend_22 { pt3dadd( -13.1932, -115.865, -12.6349, 0.6 ) }
    dend_22 { pt3dadd( -13.5503, -116.686, -12.7762, 1.2 ) }
    dend_22 { pt3dadd( -14.2588, -118.323, -13.0744, 0.72 ) }
    dend_22 { pt3dadd( -14.5149, -118.878, -13.1897, 1.2 ) }
    dend_22 { pt3dadd( -14.9588, -119.816, -13.4122, 1.08 ) }
    dend_22 { pt3dadd( -15.3019, -120.54, -13.6083, 0.72 ) }
    dend_22 { pt3dadd( -15.5867, -121.151, -13.799, 0.72 ) }
    dend_22 { pt3dadd( -15.8891, -121.832, -14.0097, 1.2 ) }
    dend_22 { pt3dadd( -16.2047, -122.577, -14.2158, 0.6 ) }
    dend_22 { pt3dadd( -16.5373, -123.419, -14.4313, 1.08 ) }
    dend_22 { pt3dadd( -16.776, -124.062, -14.5568, 0.6 ) }
    dend_22 { pt3dadd( -16.9843, -124.657, -14.6497, 1.2 ) }
    dend_22 { pt3dadd( -17.4115, -125.945, -14.8001, 0.6 ) }
    dend_22 { pt3dadd( -17.5982, -126.575, -14.8507, 0.6 ) }
    dend_22 { pt3dadd( -17.6896, -126.97, -14.8888, 1.2 ) }
    dend_22 { pt3dadd( -17.8872, -127.819, -14.9596, 0.72 ) }
    dend_22 { pt3dadd( -18.016, -128.387, -14.9977, 1.2 ) }
    dend_22 { pt3dadd( -18.0967, -128.788, -15.0244, 1.2 ) }
    dend_22 { pt3dadd( -18.1674, -129.474, -15.098, 1.2 ) }
    dend_22 { pt3dadd( -18.1907, -130.871, -15.3195, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.64027, -81.3858, -5.21418, 0.72 ) }
    dend_17 { pt3dadd( 7.75278, -82.6637, -3.26979, 0.72 ) }
    dend_17 { pt3dadd( 8.93687, -83.3744, -2.04932, 0.72 ) }
    dend_17 { pt3dadd( 9.97644, -84.0798, -0.976147, 1.56 ) }
    dend_17 { pt3dadd( 11.1008, -84.9275, 0.170427, 0.96 ) }
    dend_17 { pt3dadd( 12.9442, -86.4173, 1.97317, 1.56 ) }
    dend_17 { pt3dadd( 14.4283, -87.6734, 3.34879, 1.56 ) }
    dend_17 { pt3dadd( 15.7501, -88.915, 4.48686, 0.96 ) }
    dend_17 { pt3dadd( 17.3904, -90.6025, 5.89835, 1.2 ) }
    dend_17 { pt3dadd( 18.5146, -91.9411, 6.85994, 1.2 ) }
    dend_17 { pt3dadd( 19.5376, -93.4343, 7.72926, 1.56 ) }
    dend_17 { pt3dadd( 20.3518, -94.7679, 8.34502, 1.56 ) }
    dend_17 { pt3dadd( 21.1882, -96.2588, 8.91904, 0.84 ) }
    dend_17 { pt3dadd( 22.1207, -98.0072, 9.48938, 1.44 ) }
    dend_17 { pt3dadd( 23.1252, -100.066, 10.1456, 0.84 ) }
    dend_17 { pt3dadd( 23.942, -101.974, 10.7146, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -41.8392, -8.87661, 26.4025, 0.72 ) }
    dend_13 { pt3dadd( -42.8639, -9.00558, 27.3966, 0.72 ) }
    dend_13 { pt3dadd( -44.3824, -9.27027, 28.6096, 1.2 ) }
    dend_13 { pt3dadd( -45.7486, -9.50842, 29.701, 1.2 ) }
    dend_13 { pt3dadd( -46.71, -9.67601, 30.469, 0.96 ) }
    dend_13 { pt3dadd( -47.5324, -9.81939, 31.1259, 0.72 ) }
    dend_13 { pt3dadd( -48.9963, -10.0745, 32.2954, 0.72 ) }
    dend_13 { pt3dadd( -50.1731, -10.3624, 33.2093, 1.2 ) }
    dend_13 { pt3dadd( -56.2785, -11.058, 38.9306, 1.2 ) }
    dend_13 { pt3dadd( -63.6842, -11.413, 42.8704, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -41.8392, -8.87661, 26.4025, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( -40.6805, -8.84136, 27.8874, 1.08 ) }
    dend_10 { pt3dadd( -40.3805, -8.8275, 28.3173, 1.08 ) }
    dend_10 { pt3dadd( -39.5, -8.7197, 29.5513, 0.96 ) }
    dend_10 { pt3dadd( -38.7713, -8.62525, 30.5107, 0.96 ) }
    dend_10 { pt3dadd( -37.6616, -8.48321, 31.8636, 1.44 ) }
    dend_10 { pt3dadd( -36.101, -8.28346, 33.7663, 1.44 ) }
    dend_10 { pt3dadd( -34.9623, -8.07749, 35.0936, 0.96 ) }
    dend_10 { pt3dadd( -34.1755, -7.93035, 36.0405, 1.32 ) }
    dend_10 { pt3dadd( -33.6392, -7.85172, 36.7344, 1.32 ) }
    dend_10 { pt3dadd( -33.1424, -7.78607, 37.3672, 1.32 ) }
    dend_10 { pt3dadd( -28.4532, -7.12976, 45.7214, 1.32 ) }
    dend_10 { pt3dadd( -23.3654, -6.38644, 53.8311, 1.32 ) }
    dend_10 { pt3dadd( -17.5299, -6.51393, 61.4603, 1.32 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -49.2018, -3.32334, 13.0481, 0.72 ) }
    dend_8 { pt3dadd( -50.0988, -2.84165, 13.9188, 0.72 ) }
    dend_8 { pt3dadd( -50.6596, -2.54049, 14.4632, 0.72 ) }
    dend_8 { pt3dadd( -51.2337, -2.23223, 15.0204, 0.72 ) }
    dend_8 { pt3dadd( -52.2287, -1.6979, 15.9862, 1.2 ) }
    dend_8 { pt3dadd( -53.6185, -0.951577, 17.3353, 0.72 ) }
    dend_8 { pt3dadd( -54.5259, -0.464327, 18.216, 1.08 ) }
    dend_8 { pt3dadd( -59.5442, 1.81252, 24.0516, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -49.2018, -3.32334, 13.0481, 1.08 ) }
    dend_7 { pt3dadd( -50.1387, -2.78505, 13.8783, 1.08 ) }
    dend_7 { pt3dadd( -50.6488, -2.5609, 14.357, 1.08 ) }
    dend_7 { pt3dadd( -51.7541, -2.17308, 15.4278, 1.2 ) }
    dend_7 { pt3dadd( -52.4843, -1.92968, 16.1268, 1.2 ) }
    dend_7 { pt3dadd( -52.984, -1.73135, 16.6443, 1.44 ) }
    dend_7 { pt3dadd( -53.6765, -1.42743, 17.3747, 1.08 ) }
    dend_7 { pt3dadd( -54.0561, -1.26403, 17.8285, 0.84 ) }
    dend_7 { pt3dadd( -54.4336, -1.09124, 18.2949, 0.84 ) }
    dend_7 { pt3dadd( -54.9415, -0.822717, 18.9046, 0.84 ) }
    dend_7 { pt3dadd( -55.7078, -0.336464, 19.6999, 1.2 ) }
    dend_7 { pt3dadd( -56.3403, 0.116982, 20.2551, 1.2 ) }
    dend_7 { pt3dadd( -57.2317, 0.74122, 20.8898, 1.08 ) }
    dend_7 { pt3dadd( -57.6885, 1.0154, 21.1684, 0.96 ) }
    dend_7 { pt3dadd( -58.2884, 1.35445, 21.5043, 0.96 ) }
    dend_7 { pt3dadd( -59.3781, 1.89207, 22.0484, 1.32 ) }
    dend_7 { pt3dadd( -59.8948, 2.10655, 22.2593, 1.32 ) }
    dend_7 { pt3dadd( -61.143, 2.599, 22.7098, 1.32 ) }
    dend_7 { pt3dadd( -62.4175, 3.04774, 23.0747, 0.84 ) }
    dend_7 { pt3dadd( -68.5824, 6.4176, 26.5693, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 23.942, -101.974, 10.7146, 0.6 ) }
    dend_21 { pt3dadd( 26.9783, -103.321, 12.1809, 0.6 ) }
    dend_21 { pt3dadd( 28.9785, -104.208, 13.1469, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 23.942, -101.974, 10.7146, 0.6 ) }
    dend_18 { pt3dadd( 23.2998, -104.209, 10.8179, 0.6 ) }
    dend_18 { pt3dadd( 23.0643, -106.25, 10.8059, 1.08 ) }
    dend_18 { pt3dadd( 23.0302, -107.78, 10.7869, 1.08 ) }
    dend_18 { pt3dadd( 23.0757, -108.992, 10.7619, 1.08 ) }
    dend_18 { pt3dadd( 23.1596, -110.314, 10.7413, 1.08 ) }
    dend_18 { pt3dadd( 23.2866, -113.187, 10.8186, 0.72 ) }
    dend_18 { pt3dadd( 23.4368, -115.0, 10.9773, 1.2 ) }
    dend_18 { pt3dadd( 23.5083, -115.971, 11.1022, 1.2 ) }
    dend_18 { pt3dadd( 23.5347, -116.791, 11.235, 1.2 ) }
    dend_18 { pt3dadd( 23.5136, -118.294, 11.5269, 0.84 ) }
    dend_18 { pt3dadd( 23.4841, -120.613, 11.9845, 0.6 ) }
    dend_18 { pt3dadd( 23.3676, -123.379, 12.6175, 1.32 ) }
    dend_18 { pt3dadd( 23.3041, -124.991, 12.957, 1.32 ) }
    dend_18 { pt3dadd( 23.3047, -126.728, 13.2197, 0.72 ) }
    dend_18 { pt3dadd( 23.3304, -128.048, 13.3801, 1.2 ) }
    dend_18 { pt3dadd( 23.4548, -131.496, 13.6741, 1.2 ) }
    dend_18 { pt3dadd( 23.5023, -132.424, 13.7052, 0.72 ) }
    dend_18 { pt3dadd( 23.6013, -134.6, 13.7236, 1.56 ) }
    dend_18 { pt3dadd( 23.6426, -137.425, 13.6859, 0.72 ) }
    dend_18 { pt3dadd( 23.5995, -139.667, 13.597, 0.72 ) }
    dend_18 { pt3dadd( 23.5154, -141.438, 13.4957, 1.44 ) }
    dend_18 { pt3dadd( 23.3839, -142.879, 13.4151, 0.84 ) }
    dend_18 { pt3dadd( 23.2976, -143.97, 13.3597, 0.84 ) }
    dend_18 { pt3dadd( 23.1812, -145.533, 13.4059, 1.44 ) }
    dend_18 { pt3dadd( 23.0701, -148.073, 13.6928, 0.84 ) }
    dend_18 { pt3dadd( 23.0736, -149.214, 13.8229, 0.84 ) }
    dend_18 { pt3dadd( 23.1211, -150.399, 14.0085, 1.32 ) }
    dend_18 { pt3dadd( 23.1885, -151.41, 14.2395, 1.32 ) }
    dend_18 { pt3dadd( 23.5069, -154.549, 15.1946, 0.72 ) }
    dend_18 { pt3dadd( 23.7245, -155.891, 15.8341, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.5299, -6.51393, 61.4603, 0.96 ) }
    dend_12 { pt3dadd( -12.0626, -8.99387, 69.1971, 0.96 ) }
    dend_12 { pt3dadd( -7.31611, -10.3309, 77.6512, 0.96 ) }
    dend_12 { pt3dadd( -3.58858, -9.63171, 86.6507, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -17.5299, -6.51393, 61.4603, 0.84 ) }
    dend_11 { pt3dadd( -10.7859, -7.18313, 70.8882, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 23.7245, -155.891, 15.8341, 0.6 ) }
    dend_20 { pt3dadd( 24.8964, -156.148, 16.5583, 0.6 ) }
    dend_20 { pt3dadd( 25.9094, -156.423, 17.2988, 0.96 ) }
    dend_20 { pt3dadd( 27.2347, -156.783, 18.2675, 0.6 ) }
    dend_20 { pt3dadd( 28.0597, -157.007, 18.8705, 0.6 ) }
    dend_20 { pt3dadd( 29.3828, -157.367, 19.8377, 1.2 ) }
    dend_20 { pt3dadd( 30.9678, -157.797, 20.9962, 0.72 ) }
    dend_20 { pt3dadd( 32.002, -158.155, 21.8759, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 23.7245, -155.891, 15.8341, 0.48 ) }
    dend_19 { pt3dadd( 23.8499, -156.833, 16.2229, 0.48 ) }
    dend_19 { pt3dadd( 24.2568, -158.233, 16.4746, 1.08 ) }
    dend_19 { pt3dadd( 24.6829, -159.746, 16.7734, 0.6 ) }
    dend_19 { pt3dadd( 24.9728, -160.936, 17.0315, 0.36 ) }
    dend_19 { pt3dadd( 25.3368, -162.445, 17.3837, 0.36 ) }
    dend_19 { pt3dadd( 25.6743, -163.8, 17.6991, 0.84 ) }
    dend_19 { pt3dadd( 26.4335, -166.511, 18.2232, 0.6 ) }
    dend_19 { pt3dadd( 27.0891, -168.618, 18.5774, 0.6 ) }
    dend_19 { pt3dadd( 27.7106, -170.51, 18.896, 1.08 ) }
    dend_19 { pt3dadd( 27.9713, -171.307, 19.0634, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 28.3372, -172.422, 19.3595, 1.08 ) }
    dend_19 { pt3dadd( 29.0242, -174.307, 19.9419, 0.48 ) }
    dend_19 { pt3dadd( 29.6968, -175.893, 20.4974, 0.48 ) }
    dend_19 { pt3dadd( 30.0362, -176.562, 20.7154, 0.48 ) }
    dend_19 { pt3dadd( 30.6581, -177.685, 21.0958, 0.48 ) }
    dend_19 { pt3dadd( 31.1748, -178.615, 21.429, 0.48 ) }
    dend_19 { pt3dadd( 31.9693, -179.984, 21.9953, 1.08 ) }
    dend_19 { pt3dadd( 32.4245, -180.699, 22.3408, 0.48 ) }
    dend_19 { pt3dadd( 33.2483, -181.91, 22.9163, 1.08 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_44 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_25 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_24 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_48 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_51 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_50 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_39 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_12 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 3
    dend_33 nseg = 3
    dend_14 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 5
    dend_36 nseg = 3
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 7
    dend_23 nseg = 5
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 3
    dend_10 nseg = 3
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_SBC_6c1acec83a_0_0


