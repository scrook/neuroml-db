// Cell: bIR215_L6_BP_de7da8c370_0_0
/*
{
  "id" : "bIR215_L6_BP_de7da8c370_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-3.73429, 8.50478, 2.9804, 0.83", "-7.48701, 11.268, 3.54636, 1.11", "-9.69963, 12.8962, 3.84077, 0.83", "-11.8493, 14.4642, 4.10455, 0.83", "-13.1221, 15.3584, 4.24909, 1.11", "-17.1077, 18.1525, 4.71236, 1.11", "-24.2365, 22.936, 5.53128, 0.83", "-26.8048, 24.5937, 5.80171, 0.83", "-28.8386, 25.8673, 5.96968, 0.83", "-30.8218, 27.1296, 6.11508, 0.83", "-32.4362, 28.17, 6.19353, 0.55", "-33.6497, 28.8745, 6.27315, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "3.89624, 5.65122, -6.01765, 0.55", "5.55012, 5.9911, -6.387, 0.55", "6.50981, 6.0769, -6.87571, 0.83", "8.0287, 6.16821, -7.78354, 0.55", "8.7619, 6.21228, -8.22176, 1.38", "10.5646, 6.32065, -9.29925, 0.55", "11.3324, 6.28395, -9.81337, 0.83", "15.3042, 5.61094, -12.702, 0.55", "15.6885, 5.52044, -13.0198, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.690378, -10.4772, 3.4304, 1.11", "-0.750597, -15.5247, 5.33516, 1.11", "-0.775122, -17.5803, 6.1109, 0.83", "-0.807705, -20.3114, 7.14151, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.87484, 9.97737, -1.51654, 1.11", "0.89075, 12.404, -1.62784, 1.11", "0.845698, 16.3706, -1.67455, 1.38", "0.845206, 16.592, -1.67175, 1.38", "0.985987, 19.3421, -1.54172, 0.83", "1.18277, 22.2657, -1.20676, 0.83", "1.50733, 25.6048, -0.332557, 0.83", "1.71387, 26.8886, 0.209449, 0.83", "1.94127, 27.8304, 0.739067, 1.11", "2.68184, 30.1409, 2.17941, 0.55", "3.53757, 32.5707, 3.90695, 0.83", "4.77551, 35.1029, 5.99554, 0.55", "5.44955, 36.1689, 6.99528, 0.83", "6.3476, 37.623, 8.50187, 0.55", "7.40808, 39.4745, 10.4827, 0.55", "8.80536, 42.2517, 13.4175, 0.55", "10.3398, 45.4153, 16.6488, 0.55", "11.189, 47.4787, 18.9545, 0.55", "12.0875, 50.0986, 22.0996, 0.55", "12.2546, 50.6286, 22.8014, 0.83", "12.6523, 52.0348, 24.7551, 0.55", "13.028, 53.1357, 26.3158, 0.83", "13.8427, 56.0937, 29.9644, 0.55", "14.2573, 57.1632, 31.0931, 0.83", "14.7469, 57.9584, 31.943, 0.55", "15.2919, 58.6458, 32.6622, 0.83", "16.5857, 59.9392, 34.0926, 0.83", "18.3813, 61.6827, 35.7806, 0.83", "19.5445, 62.818, 36.6617, 0.55", "20.4256, 63.79, 37.3319, 0.55", "22.754, 66.3021, 39.0497, 0.83", "24.2889, 67.9099, 40.0881, 0.55", "26.6686, 70.2658, 41.5603, 0.55", "28.8966, 72.25, 42.8222, 0.55", "30.9175, 73.9355, 43.8976, 0.55", "33.5298, 75.9164, 45.1397, 0.55", "35.157, 76.9055, 45.859, 0.55", "36.3293, 77.4662, 46.2184, 0.55", "37.9508, 77.9151, 46.5865, 0.55", "40.4622, 78.1915, 46.9754, 0.55", "42.0574, 78.1746, 47.176, 0.55", "44.3288, 78.1003, 47.6196, 0.55", "48.5017, 78.1088, 48.81, 0.55", "51.6778, 78.2764, 49.9554, 0.55", "54.9559, 78.6268, 51.355, 0.55", "56.9849, 78.9356, 52.4143, 0.55", "62.0873, 80.2706, 55.4922, 0.55", "64.9945, 81.3322, 57.5402, 0.55", "67.0727, 82.3059, 59.2929, 0.55", "68.303, 83.1542, 60.3976, 0.55", "69.7247, 84.3758, 61.6528, 0.55", "72.2308, 86.7305, 63.4959, 0.55", "72.8438, 87.2896, 63.8244, 0.55", "74.6591, 88.7863, 64.6473, 0.55", "76.3233, 90.3621, 65.3827, 0.83", "77.2376, 91.2345, 65.7678, 0.55", "78.6249, 92.715, 66.2747, 0.83", "85.0847, 100.731, 70.9367, 0.83", "90.854, 109.735, 74.3218, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-33.6497, 28.8745, 6.27315, 0.55", "-35.3025, 29.763, 5.3817, 0.55", "-37.0998, 30.7291, 4.41235, 0.55", "-39.2687, 31.8951, 3.24255, 0.55", "-41.0596, 32.8578, 2.27661, 0.83", "-42.5604, 33.6646, 1.46716, 0.55", "-45.3461, 35.1621, -0.0353023, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.6497, 28.8745, 6.27315, 0.55", "-36.7178, 29.3893, 5.9683, 0.55", "-39.9744, 29.8461, 5.97024, 0.55", "-43.665, 30.36, 6.06274, 0.55", "-48.9982, 31.0578, 6.68934, 0.55", "-53.4528, 31.5237, 7.53488, 0.55", "-58.1197, 31.947, 8.62413, 0.55", "-62.6174, 32.0723, 10.1737, 0.55", "-66.4778, 31.8245, 11.8946, 0.55", "-71.2737, 31.1999, 14.5704, 0.55", "-73.3509, 30.7854, 16.0339, 0.55", "-75.5921, 30.316, 17.7145, 0.55", "-79.5479, 29.1933, 20.5, 0.55", "-81.6613, 28.5961, 21.6417, 0.55", "-83.8748, 27.9045, 22.8254, 0.55", "-86.5139, 27.1095, 23.9595, 0.55", "-89.3842, 26.302, 25.1108, 0.55", "-93.4828, 25.138, 26.6629, 0.55", "-98.9713, 23.9281, 28.2288, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "15.6885, 5.52044, -13.0198, 0.55", "20.7047, 6.83981, -14.094, 0.55", "23.6003, 7.43686, -15.1231, 0.55", "26.4605, 7.90331, -16.1809, 0.55", "28.4159, 8.14744, -16.9031, 0.55", "31.2747, 8.44096, -17.9368, 0.55", "37.2079, 8.94002, -20.2674, 0.55", "43.9414, 9.46462, -23.3622, 0.55", "47.2106, 9.52392, -25.0904, 0.55", "48.9627, 9.51437, -26.1313, 0.55", "50.8841, 9.51264, -27.3509, 0.55", "54.3141, 9.41835, -29.514, 0.55", "55.561, 9.31431, -30.3413, 0.55", "60.8395, 8.99862, -34.2516, 0.55", "64.5761, 8.83161, -37.2965, 0.55", "66.7269, 8.77519, -39.1087, 0.55", "68.8723, 8.70089, -40.9146, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "15.6885, 5.52044, -13.0198, 0.83", "17.5043, 6.43884, -12.9949, 0.83", "18.5416, 6.96712, -13.0267, 0.55", "20.0688, 7.7873, -13.1973, 0.83", "21.0966, 8.36575, -13.34, 0.55", "22.5164, 9.19661, -13.5137, 0.83", "24.2263, 10.2209, -13.6586, 0.55", "25.0837, 10.6747, -13.7022, 0.55", "27.0439, 11.4596, -13.6882, 0.83", "28.8146, 11.9527, -13.4663, 0.55", "29.805, 12.2102, -13.2498, 0.83", "31.2945, 12.6132, -12.7686, 0.55", "33.4392, 13.2033, -11.8058, 0.55", "36.4109, 13.8667, -10.3312, 0.55", "39.2412, 14.3872, -8.74072, 0.55", "41.4826, 14.7737, -7.44299, 0.55", "45.1789, 15.4252, -5.28309, 0.55", "47.8881, 15.969, -3.63809, 0.55", "49.5316, 16.4195, -2.57484, 0.55", "52.5746, 17.534, -0.56447, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.807705, -20.3114, 7.14151, 0.83", "-1.09516, -23.0949, 7.02785, 0.83", "-1.37523, -25.8068, 6.91711, 0.83", "-1.68792, -28.8346, 6.79347, 0.83", "-1.8512, -30.4157, 6.72891, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.807705, -20.3114, 7.14151, 0.55", "-0.117252, -21.9646, 8.22372, 0.55", "0.534391, -23.9799, 9.66766, 0.55", "0.989715, -26.6024, 11.7261, 0.55", "1.09684, -27.6186, 12.565, 0.83", "1.16623, -30.2029, 15.0481, 0.55", "1.09179, -31.5323, 16.3728, 0.55", "0.905755, -34.1159, 19.0718, 0.83", "0.669527, -36.0301, 21.2198, 0.55", "0.323864, -37.6018, 22.9866, 0.55", "-0.409346, -40.5744, 26.2857, 0.55", "-0.995268, -42.9435, 28.8855, 0.55", "-1.42039, -44.845, 30.9921, 0.55", "-1.76382, -46.8688, 33.1451, 0.28", "-1.83708, -47.7151, 33.9973, 0.55", "-1.94275, -49.2793, 35.4725, 0.28", "-1.81521, -51.7338, 37.3294, 0.55", "-3.37369, -59.8064, 44.2538, 0.55", "-5.02707, -67.2586, 51.8901, 0.55", "-5.93462, -73.4133, 60.8258, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-45.3461, 35.1621, -0.0353023, 0.55", "-47.2163, 35.6575, 1.42059, 0.55", "-47.9791, 35.8459, 2.14961, 0.83", "-48.8411, 36.0496, 3.1473, 0.55", "-49.4857, 36.2217, 3.98078, 0.83", "-51.1804, 36.7382, 6.13091, 0.55", "-51.8212, 36.9476, 6.94823, 0.28", "-52.8666, 37.336, 8.4157, 0.55", "-54.2714, 37.8651, 10.3744, 0.55", "-55.351, 38.253, 11.8018, 0.55", "-56.8052, 38.7576, 13.6531, 0.28", "-57.195, 38.879, 14.0787, 0.55", "-58.0096, 39.1326, 14.922, 0.28", "-58.5762, 39.3066, 15.4312, 0.55", "-59.757, 39.6263, 16.3602, 0.28", "-60.4577, 39.7638, 16.8754, 0.55", "-61.689, 39.9141, 17.8173, 0.28", "-62.5227, 40.0017, 18.4195, 0.55", "-67.061, 40.6926, 24.6316, 0.55", "-71.0227, 40.7821, 31.2495, 0.55", "-74.7765, 40.1878, 37.9421, 0.55", "-78.5572, 38.6896, 44.4415, 0.55", "-81.3473, 37.6504, 51.5186, 0.55", "-84.7599, 36.8155, 58.3564, 0.55", "-88.2315, 37.2065, 65.238, 0.55", "-91.6899, 37.0061, 72.1209, 0.55", "-94.9746, 37.3268, 79.0953, 0.55", "-97.8661, 37.5866, 86.2418, 0.55", "-99.9598, 37.0736, 93.6258, 0.55", "-102.108, 37.2556, 101.028, 0.55", "-104.389, 36.673, 108.35, 0.55", "-105.729, 35.8382, 115.865, 0.55", "-105.72, 35.5769, 123.557, 0.55", "-105.737, 33.8979, 131.014, 0.55", "-104.659, 32.076, 138.351, 0.55", "-103.965, 30.5863, 145.824, 0.55", "-104.069, 29.6494, 153.44, 0.55", "-105.791, 29.8229, 160.952, 0.55", "-106.838, 29.1983, 168.541, 0.55", "-106.383, 29.8598, 176.216, 0.55", "-107.181, 31.0307, 183.809, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.3461, 35.1621, -0.0353023, 0.55", "-46.914, 35.6096, -1.76071, 0.55", "-48.1508, 36.1025, -3.70954, 0.55", "-49.3185, 36.7488, -5.79127, 0.55", "-50.0497, 37.1535, -7.09483, 0.55", "-51.3834, 37.8917, -9.47267, 0.83", "-52.3592, 38.4318, -11.2123, 0.55", "-53.504, 39.1502, -13.7765, 0.83", "-53.9483, 39.6677, -15.2383, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-98.9713, 23.9281, 28.2288, 0.28", "-99.7466, 22.674, 27.8665, 0.28", "-100.116, 22.1397, 27.6615, 0.28", "-100.599, 21.3862, 27.3412, 0.55", "-100.999, 20.7227, 27.066, 0.28", "-101.588, 19.7103, 26.6607, 0.55", "-103.231, 16.7286, 25.5226, 0.28", "-103.769, 15.6901, 25.0328, 0.55", "-104.587, 14.0954, 24.2192, 0.28", "-105.058, 13.1453, 23.6854, 0.55", "-105.384, 12.492, 23.3002, 0.28", "-105.755, 11.7415, 22.8648, 0.55", "-106.881, 9.2292, 21.4798, 0.28", "-107.235, 8.47198, 21.0313, 0.55", "-107.852, 7.32676, 20.2131, 0.28", "-108.357, 6.60163, 19.6174, 0.28", "-108.805, 6.1214, 19.1982, 0.55", "-110.359, 4.77658, 18.0623, 0.28", "-111.079, 4.23311, 17.6148, 0.55", "-112.84, 3.00565, 16.5058, 0.28", "-114.599, 1.92648, 15.4913, 0.28", "-116.508, 0.907529, 14.4586, 0.28", "-117.381, 0.527549, 14.0633, 0.55", "-121.631, -3.94276, 11.1947, 0.55", "-126.336, -8.58928, 9.59759, 0.55", "-130.953, -12.8848, 7.00466, 0.55", "-135.685, -16.7127, 3.87017, 0.55", "-140.474, -20.009, 0.198831, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-98.9713, 23.9281, 28.2288, 0.55", "-99.5654, 23.8798, 28.3311, 0.55", "-101.234, 23.7567, 28.8384, 0.55", "-101.859, 23.6967, 29.0638, 0.55", "-103.33, 23.5139, 29.6191, 0.55", "-105.595, 23.2492, 30.3609, 0.55", "-106.773, 23.1454, 30.7232, 0.28", "-108.608, 22.9437, 31.253, 0.55", "-109.971, 22.7644, 31.5984, 0.55", "-110.547, 22.6852, 31.7458, 0.28", "-114.001, 22.2076, 32.625, 0.55", "-115.618, 21.9079, 32.9404, 0.28", "-117.803, 21.4891, 33.2375, 0.28", "-119.691, 21.1487, 33.381, 0.55", "-127.014, 20.9321, 35.4881, 0.55", "-134.055, 20.5768, 38.3861, 0.55", "-140.652, 19.5282, 42.0447, 0.55", "-147.041, 19.7237, 46.1983, 0.55", "-152.433, 19.7505, 51.5869, 0.55", "-156.694, 20.2332, 57.8874, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "68.8723, 8.70089, -40.9146, 0.55", "73.5225, 10.1429, -44.6665, 0.55", "74.9886, 10.543, -45.9495, 0.55", "76.8215, 10.9844, -47.5373, 0.55", "80.1436, 11.7699, -50.6177, 0.55", "83.6043, 12.4575, -53.9289, 0.55", "85.2917, 12.6598, -55.5136, 0.83", "86.6754, 12.7402, -56.9312, 0.55", "87.7056, 12.7235, -58.1042, 0.83", "90.1718, 12.3529, -61.1321, 0.55", "92.1949, 11.8605, -63.6531, 0.55", "94.5229, 11.2708, -66.4338, 0.55", "97.1171, 10.6918, -69.58, 0.55", "98.8547, 10.2653, -71.7381, 0.55", "100.814, 9.78231, -74.2385, 0.55", "102.508, 9.43261, -76.5189, 0.55", "103.575, 9.31937, -78.095, 0.55", "104.908, 9.17973, -81.2511, 0.55", "105.627, 9.03919, -83.227, 0.55", "106.224, 8.7595, -85.8537, 0.55", "107.019, 8.1695, -90.2983, 0.55", "107.177, 8.00193, -91.3024, 0.28", "109.241, 5.83195, -103.52, 0.28", "109.953, 5.21392, -107.106, 0.83", "112.782, 2.79776, -119.843, 0.83", "114.241, 1.44868, -125.774, 0.83", "114.951, 0.806487, -128.182, 0.55", "115.778, 0.165329, -130.532, 0.55", "118.12, -1.15212, -134.902, 0.55", "120.65, -2.36623, -138.749, 0.28", "121.435, -2.63474, -138.992, 0.55", "123.176, -3.14599, -138.887, 0.28", "124.259, -3.39793, -138.659, 0.55", "125.388, -3.68087, -138.325, 0.28", "126.747, -3.95921, -137.857, 0.55", "128.783, -4.25959, -137.369, 0.28", "130.414, -4.54556, -137.034, 0.55", "132.224, -4.73851, -136.8, 0.28", "134.68, -4.97968, -136.701, 0.55", "137.436, -5.17909, -136.753, 0.55", "139.859, -5.3172, -136.959, 0.28", "143.21, -5.46777, -137.428, 0.55", "149.004, -5.53754, -138.849, 0.55", "151.565, -5.42268, -139.78, 0.55", "152.667, -5.32234, -140.296, 0.83", "154.763, -5.10524, -141.472, 0.55", "156.219, -4.89252, -142.376, 0.83", "160.14, -4.21861, -144.847, 0.55", "162.526, -3.96132, -146.429, 0.28", "163.53, -3.91989, -146.984, 0.55", "166.273, -4.06949, -148.214, 0.28", "167.23, -4.2108, -148.586, 0.55", "169.203, -4.6399, -149.052, 0.28", "171.207, -5.28591, -149.185, 0.55", "175.255, -6.84394, -148.744, 0.28", "177.12, -7.6539, -148.344, 0.55", "179.89, -9.02142, -147.608, 0.28", "183.39, -10.7434, -146.549, 0.55", "185.924, -11.9576, -145.74, 0.55", "190.32, -13.9321, -144.257, 0.28", "192.125, -14.6529, -143.794, 0.55", "195.242, -15.7035, -143.332, 0.28", "198.354, -16.5082, -143.077, 0.55", "200.066, -16.7496, -143.166, 0.28", "201.62, -16.7609, -143.357, 0.55", "206.013, -16.5185, -144.293, 0.28", "209.159, -16.1354, -145.0, 0.28", "211.902, -15.6103, -145.643, 0.55", "214.931, -14.9413, -146.501, 0.28", "215.697, -14.7289, -146.689, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "68.8723, 8.70089, -40.9146, 0.55", "69.1998, 7.45948, -42.0605, 0.55", "69.3689, 6.39788, -42.9436, 0.28", "69.5231, 5.41091, -43.658, 0.55", "69.9714, 3.3199, -45.1966, 0.28", "69.9954, 3.19156, -45.3142, 0.55", "70.1424, 2.52855, -45.9943, 0.28", "70.2042, 1.99683, -46.6575, 0.55", "70.2298, 1.45424, -47.4255, 0.28", "70.2376, 0.721176, -48.515, 0.55", "70.2557, -1.12619, -51.2073, 0.55", "70.2479, -2.80378, -53.698, 0.55", "70.2249, -4.14394, -55.6908, 0.55", "70.1721, -5.46516, -57.6199, 0.55", "70.1572, -5.80928, -58.1002, 0.28", "70.1545, -6.18292, -58.5757, 0.55", "70.2102, -6.71065, -59.1771, 0.28", "70.4258, -7.675, -60.1542, 0.55", "71.0253, -9.5779, -61.6881, 0.55", "71.3585, -10.6172, -62.4098, 0.28", "71.6285, -11.6644, -63.1935, 0.55", "71.8855, -13.1187, -64.3507, 0.28", "72.0075, -14.2858, -65.3142, 0.55", "72.1049, -16.0283, -66.7573, 0.28", "72.2211, -17.8411, -68.1873, 0.55", "72.35, -20.4684, -70.289, 0.28", "72.3839, -21.8673, -71.4139, 0.55", "72.3918, -23.2917, -72.6024, 0.28", "72.3833, -24.5323, -73.7372, 0.28", "72.4333, -26.0625, -75.3114, 0.55", "72.595, -27.4901, -76.7315, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "52.5746, 17.534, -0.56447, 0.55", "55.7555, 16.8372, -0.0272527, 0.55", "58.0609, 16.2717, 0.13254, 0.55", "63.0952, 15.0112, 0.209047, 0.55", "65.3491, 14.4245, 0.0336325, 0.55", "67.8089, 13.8506, -0.27897, 0.55", "71.1086, 13.1657, -0.930089, 0.55", "74.5711, 12.3957, -1.96416, 0.55", "76.3796, 11.9949, -2.72237, 0.55", "80.0373, 11.2433, -4.78017, 0.55", "81.7211, 10.9178, -5.78172, 0.55", "85.6567, 10.0937, -8.24354, 0.55", "88.3141, 9.42656, -9.90092, 0.55", "90.2721, 8.91176, -11.0291, 0.83", "93.3919, 7.96904, -12.8088, 0.55", "96.4393, 6.88153, -14.4454, 0.83", "99.0183, 5.82772, -15.7516, 0.55", "101.322, 4.90768, -16.7832, 0.55", "102.639, 4.43234, -17.2869, 0.83", "105.721, 3.31096, -18.292, 0.28", "107.263, 2.80353, -18.6827, 0.28", "108.744, 2.22918, -19.1521, 0.28", "110.348, 1.65177, -19.6618, 0.28", "112.917, 0.782593, -20.5269, 0.28", "113.953, 0.441499, -20.8413, 0.55", "116.443, -0.380714, -21.3384, 0.55", "120.929, -1.93229, -22.0051, 0.55", "122.17, -2.40093, -22.1373, 0.55", "123.277, -2.86117, -22.2107, 0.83", "125.695, -3.81301, -22.1602, 0.55", "127.799, -4.64071, -22.0812, 0.55", "129.788, -5.41574, -21.996, 0.55", "131.324, -6.03659, -21.9781, 0.55", "133.741, -7.17224, -22.0934, 0.55", "136.56, -8.73811, -22.4246, 0.55", "140.883, -11.6239, -23.3249, 0.55", "143.216, -13.5424, -24.0254, 0.55", "145.201, -15.5487, -24.789, 0.28", "145.778, -16.2793, -25.0725, 0.55", "147.011, -18.3026, -25.8289, 0.28", "148.017, -20.5526, -26.6123, 0.55", "148.902, -23.3637, -27.3408, 0.55", "149.507, -25.224, -27.7296, 0.28", "149.733, -25.8859, -27.8344, 0.55", "150.325, -27.535, -28.0732, 0.28", "151.146, -29.6901, -28.3333, 0.55", "153.333, -34.9118, -28.8382, 0.55", "154.483, -37.553, -29.0391, 0.55", "155.554, -39.9773, -29.2022, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "52.5746, 17.534, -0.56447, 0.55", "54.4186, 17.2732, 0.679541, 0.55", "55.0088, 17.1962, 1.04776, 0.55", "57.1995, 16.8407, 2.30525, 0.55", "59.6489, 16.477, 3.75496, 0.55", "62.7905, 15.9825, 5.68924, 0.55", "63.6581, 15.8483, 6.21834, 0.55", "65.211, 15.5585, 7.1384, 0.55", "66.9136, 15.2929, 8.09657, 0.55", "68.8933, 15.0572, 9.14111, 0.55", "70.7605, 14.8568, 10.1383, 0.55", "71.7859, 14.801, 10.6526, 0.55", "72.9914, 14.7669, 11.2632, 0.55", "74.4843, 14.7702, 12.0043, 0.83", "76.9212, 14.8388, 12.9788, 0.55", "78.5291, 14.8484, 13.5357, 0.83", "80.7535, 14.7909, 14.2112, 0.55", "81.4343, 14.7425, 14.3999, 0.55", "83.5396, 14.5104, 14.9174, 0.55", "87.2894, 13.9311, 15.6429, 0.55", "90.025, 13.3859, 16.0752, 0.55", "92.1867, 12.8492, 16.4401, 0.55", "94.3867, 12.1757, 16.8544, 0.55", "94.8489, 12.022, 16.9405, 0.28", "95.784, 11.6768, 17.1034, 0.83", "99.6211, 10.2018, 17.7791, 0.55", "102.304, 9.1872, 18.2024, 0.55", "104.511, 8.39026, 18.6179, 0.55", "105.83, 7.90694, 18.8772, 0.83", "106.869, 7.53971, 19.0872, 0.28", "107.811, 7.21048, 19.2694, 0.55", "115.29, 5.98742, 22.1752, 0.55", "123.078, 4.0078, 23.3747, 0.55", "130.902, 2.8213, 25.1959, 0.55", "137.898, 0.178681, 28.3719, 0.55", "144.358, -3.51636, 31.6127, 0.55", "151.255, -7.66724, 32.3573, 0.55", "157.931, -12.1031, 31.6065, 0.55", "165.38, -15.1554, 30.7309, 0.55", "172.757, -18.4662, 30.3446, 0.55", "180.482, -20.8574, 29.681, 0.55", "188.239, -23.2188, 30.1114, 0.55", "195.428, -26.9082, 30.6063, 0.55", "202.936, -29.5474, 32.2307, 0.55", "210.238, -31.4023, 35.2657, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.8512, -30.4157, 6.72891, 1.38", "1.17268, -33.3235, 6.20129, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.8512, -30.4157, 6.72891, 0.55", "-3.20747, -31.8723, 6.95884, 0.55", "-4.71852, -33.7502, 7.21159, 0.55", "-5.88306, -34.986, 7.42306, 0.55", "-6.88844, -36.0165, 7.45061, 0.55", "-9.10902, -38.1431, 7.31288, 0.55", "-10.6698, -39.5593, 7.176, 0.55", "-12.0661, -40.8288, 7.00453, 0.55", "-15.645, -43.9103, 6.56883, 0.55", "-19.9341, -47.4713, 6.07884, 0.55", "-23.2617, -50.1641, 5.64556, 0.55", "-25.3924, -51.9349, 5.33957, 0.55", "-27.8402, -54.0647, 4.99453, 0.55", "-30.9553, -57.1389, 4.59156, 0.55", "-32.7893, -59.3385, 4.38798, 0.55", "-35.0422, -62.5224, 4.31674, 0.55", "-36.8481, -65.5212, 4.32189, 0.55", "-38.7008, -69.283, 4.34923, 0.55", "-40.4762, -73.7193, 4.43519, 0.55", "-41.4683, -77.1281, 4.53109, 0.55", "-41.8222, -78.8317, 4.67615, 0.55", "-42.366, -82.8497, 5.20549, 0.55", "-42.7887, -86.6138, 5.79224, 0.55", "-42.9648, -90.4192, 6.64333, 0.55", "-43.0697, -92.6028, 7.259, 0.55", "-43.3101, -99.3598, 9.41316, 0.55", "-43.3298, -99.8572, 9.58137, 0.55", "-43.3785, -102.908, 10.6795, 0.55", "-43.7076, -108.352, 12.8179, 0.55", "-43.8467, -110.171, 13.4224, 0.55", "-44.2179, -113.004, 13.873, 0.55", "-44.3677, -114.054, 13.7849, 0.55", "-44.8222, -117.608, 12.7632, 0.55", "-45.0637, -119.91, 11.5732, 0.55", "-45.4683, -123.571, 8.88255, 0.55", "-45.8316, -128.055, 5.19805, 0.28", "-45.9284, -129.162, 4.12768, 0.55", "-46.0941, -130.838, 2.34911, 0.28", "-46.1237, -131.09, 2.0674, 0.55", "-46.2754, -132.474, 0.650546, 0.28", "-46.3424, -132.943, 0.288239, 0.55", "-46.6694, -135.388, -1.0916, 0.28", "-46.8126, -136.219, -1.5447, 0.55", "-47.2353, -138.621, -2.70675, 0.28", "-47.3644, -139.377, -3.07022, 0.55", "-47.825, -141.987, -4.27625, 0.28", "-48.0313, -143.188, -4.83852, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.93462, -73.4133, 60.8258, 0.55", "-8.63915, -79.1166, 66.4725, 0.55", "-12.2416, -84.1603, 72.3106, 0.55", "-15.5652, -89.7281, 77.7743, 0.55", "-19.0319, -95.336, 83.1023, 0.55", "-21.5205, -101.807, 87.8611, 0.55", "-23.953, -108.005, 93.0336, 0.55", "-25.2898, -115.429, 96.5526, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.93462, -73.4133, 60.8258, 0.55", "-4.81179, -79.9658, 67.5952, 0.55", "-3.27311, -87.5253, 72.976, 0.55", "-3.29407, -95.2276, 78.3584, 0.55", "-3.86893, -103.406, 82.8627, 0.55", "-4.05112, -111.529, 87.5064, 0.55", "-4.16386, -119.315, 92.753, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-53.9483, 39.6677, -15.2383, 0.83", "-53.7084, 41.1217, -17.2481, 0.83", "-53.2232, 44.6623, -21.7656, 0.55", "-53.0047, 46.2055, -23.5637, 0.83", "-52.7579, 47.8708, -25.3555, 0.55", "-52.4919, 49.614, -26.9166, 0.55", "-52.3446, 50.5037, -27.5727, 0.28", "-52.2806, 51.1093, -27.8388, 0.55", "-51.9785, 53.1836, -28.2611, 0.28", "-51.8236, 54.0767, -28.3959, 0.55", "-51.3184, 57.1941, -28.7291, 0.28", "-50.9804, 59.6711, -28.9013, 0.55", "-50.6388, 63.5446, -29.0325, 0.28", "-50.4591, 66.9515, -29.0715, 0.28", "-50.471, 68.8577, -29.0471, 0.55", "-50.6292, 71.1114, -29.0075, 0.28", "-50.7774, 72.1852, -28.9681, 0.55", "-51.2762, 74.6918, -28.9848, 0.28", "-51.7302, 76.3474, -29.0802, 0.28", "-52.2155, 77.9663, -29.224, 0.28", "-52.4374, 78.823, -29.3059, 0.55", "-53.1432, 82.2903, -29.7369, 0.28", "-53.8392, 86.397, -30.3372, 0.55", "-54.0579, 87.8159, -30.5518, 0.55", "-54.2995, 89.2405, -30.7329, 0.55", "-54.9846, 92.2523, -31.1587, 0.55", "-55.5717, 94.217, -31.4749, 0.28", "-55.8864, 94.9542, -31.5993, 0.55", "-56.8871, 96.9459, -31.8804, 0.28", "-58.0508, 99.0511, -32.2646, 0.55", "-60.0368, 102.046, -32.9257, 0.28", "-61.0169, 103.282, -33.2367, 0.28", "-62.6352, 104.965, -33.8454, 0.55", "-64.4596, 106.7, -34.5765, 0.28", "-64.7937, 106.967, -34.704, 0.55", "-66.0016, 107.807, -35.1424, 0.28", "-70.17, 110.476, -36.5518, 0.55", "-75.9944, 113.685, -38.6737, 0.28", "-77.0764, 114.207, -39.1216, 0.55", "-80.053, 115.531, -40.3886, 0.28", "-81.3055, 116.067, -40.9516, 0.28", "-82.3983, 116.502, -41.4886, 0.55", "-85.6221, 117.399, -43.2596, 0.28", "-87.8982, 117.829, -44.4006, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-53.9483, 39.6677, -15.2383, 0.55", "-54.2533, 41.2287, -15.487, 0.55", "-54.4571, 42.1517, -15.5417, 0.28", "-54.7403, 42.8091, -15.4069, 0.55", "-55.3905, 44.3189, -15.0975, 0.28", "-55.8472, 45.3793, -14.8801, 0.55", "-56.6891, 47.3342, -14.4793, 0.28", "-57.2507, 48.3815, -14.0679, 0.55", "-59.3685, 50.8576, -12.1294, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-140.474, -20.009, 0.198831, 0.55", "-144.478, -24.6425, -2.09779, 0.55", "-147.423, -29.7547, -4.81825, 0.55", "-149.77, -34.3453, -8.82529, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-140.474, -20.009, 0.198831, 0.55", "-146.121, -25.5622, -4.08856, 0.55", "-150.817, -31.1573, -9.34526, 0.55", "-155.14, -36.8757, -14.7707, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-156.694, 20.2332, 57.8874, 0.55", "-165.447, 19.5829, 63.7418, 0.55", "-174.545, 20.4717, 68.9888, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-156.694, 20.2332, 57.8874, 0.55", "-170.72, 18.7418, 62.5562, 0.55", "-184.573, 19.4825, 67.8968, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "72.595, -27.4901, -76.7315, 0.28", "80.9887, -32.0881, -92.017, 0.28", "81.8306, -32.6107, -93.3769, 0.55", "83.2519, -33.4929, -95.6728, 0.28", "84.4487, -34.2357, -97.6059, 0.28", "86.0329, -35.219, -100.165, 0.55", "88.1216, -36.5155, -103.539, 0.55", "91.0469, -38.7071, -105.307, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "72.595, -27.4901, -76.7315, 0.55", "73.1249, -28.3383, -77.8122, 0.55", "73.2801, -28.7218, -78.2907, 0.28", "73.5046, -29.3794, -79.1261, 0.55", "73.9992, -30.8282, -80.9663, 0.28", "74.3419, -31.8322, -82.2416, 0.55", "74.9226, -33.5332, -84.4023, 0.28", "75.5556, -35.6012, -87.2343, 0.28", "75.7975, -36.5522, -88.5578, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "155.554, -39.9773, -29.2022, 0.28", "158.322, -44.3828, -28.638, 0.28", "161.788, -50.2565, -27.4117, 0.28", "163.971, -54.0846, -26.4633, 0.55", "165.306, -56.22, -25.8324, 0.28", "166.014, -57.3704, -25.4819, 0.28", "169.53, -63.0401, -23.8387, 0.55", "170.342, -64.3238, -23.3087, 0.28", "172.226, -67.7198, -21.695, 0.55", "173.829, -70.655, -20.4127, 0.28", "175.247, -73.043, -19.4126, 0.55", "176.905, -75.875, -18.3924, 0.55", "179.552, -80.3045, -17.3314, 0.55", "180.188, -81.3857, -17.1109, 0.55", "182.45, -85.4099, -16.3359, 0.28", "183.316, -87.0452, -16.0647, 0.55", "184.548, -89.1408, -15.7226, 0.28", "186.285, -92.0983, -15.3747, 0.55", "189.199, -96.686, -15.5102, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "155.554, -39.9773, -29.2022, 0.55", "152.808, -39.6619, -29.246, 0.55", "150.577, -39.4057, -29.2815, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.17268, -33.3235, 6.20129, 0.83", "1.31933, -33.588, 6.1991, 0.83", "2.96538, -35.9144, 6.38924, 0.83", "4.42926, -37.9521, 6.40964, 0.55", "5.59713, -39.5777, 6.42592, 0.55", "8.07946, -43.0331, 6.46052, 0.83", "11.0903, -47.2241, 6.50249, 0.55", "12.7218, -49.4153, 6.58053, 0.83", "15.5703, -52.8904, 6.91361, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.17268, -33.3235, 6.20129, 0.55", "0.494851, -34.4235, 2.92544, 0.55", "-0.232719, -35.6043, -0.590788, 0.55", "-1.09162, -36.9982, -4.74172, 0.55", "-2.13461, -38.6908, -9.7823, 0.55", "-2.72647, -39.6513, -12.6426, 0.55", "-2.84536, -39.8443, -13.2172, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.16386, -119.315, 92.753, 0.55", "-3.39222, -128.511, 99.5109, 0.55", "-1.31918, -138.389, 104.79, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.16386, -119.315, 92.753, 0.55", "-4.33252, -129.117, 98.7625, 0.55", "-5.00327, -138.677, 105.158, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-59.3685, 50.8576, -12.1294, 0.28", "-61.4277, 51.8215, -10.4497, 0.28", "-62.2223, 52.1638, -9.73353, 0.55", "-64.5114, 53.146, -7.61169, 0.28", "-65.6271, 53.662, -6.6614, 0.55", "-68.648, 55.0839, -4.18877, 0.28", "-71.7182, 56.529, -1.67568, 0.55", "-76.7745, 58.6924, 2.46615, 0.28", "-77.8522, 59.1599, 3.35093, 0.55", "-80.2255, 60.3283, 5.25619, 0.28", "-81.1587, 60.8303, 6.017, 0.55", "-90.7416, 63.3877, 11.6596, 0.55", "-100.706, 67.6893, 14.9518, 0.55", "-109.89, 71.9929, 20.0007, 0.55", "-117.782, 77.783, 25.5218, 0.55", "-126.591, 83.2524, 29.9275, 0.55", "-136.295, 86.7344, 34.7309, 0.55", "-145.507, 89.0555, 41.0653, 0.55", "-153.864, 90.0302, 48.8501, 0.55", "-162.259, 91.6949, 56.4401, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-59.3685, 50.8576, -12.1294, 0.55", "-62.6861, 49.6811, -10.5044, 0.55", "-64.4077, 49.0121, -9.66056, 0.28", "-65.6888, 48.5143, -9.03258, 0.55", "-66.7565, 48.0994, -8.50919, 0.28", "-67.5044, 47.8088, -8.14258, 0.55", "-69.5666, 47.0075, -7.13169, 0.28", "-70.9407, 46.3479, -6.63616, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-149.77, -34.3453, -8.82529, 0.55", "-153.736, -41.79, -9.28848, 0.55", "-157.62, -49.2562, -8.75621, 0.55", "-160.726, -57.0376, -9.68943, 0.55", "-164.791, -64.4372, -9.58862, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-149.77, -34.3453, -8.82529, 0.55", "-152.672, -37.4251, -13.6433, 0.55", "-155.211, -39.7412, -19.1023, 0.55", "-158.339, -42.6957, -23.8652, 0.55", "-162.707, -44.6113, -28.2244, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-155.14, -36.8757, -14.7707, 0.55", "-159.904, -43.4732, -22.5452, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-155.14, -36.8757, -14.7707, 0.55", "-158.971, -44.9259, -15.7273, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "91.0469, -38.7071, -105.307, 0.28", "93.6792, -39.8257, -106.886, 0.28", "94.9019, -40.3453, -107.62, 0.55", "97.2335, -41.3361, -109.019, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "91.0469, -38.7071, -105.307, 0.55", "90.741, -39.3018, -106.232, 0.55", "90.129, -40.4914, -108.084, 0.28", "89.9296, -40.8789, -108.687, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "75.7975, -36.5522, -88.5578, 0.28", "76.4335, -38.1955, -91.9972, 0.28", "76.7484, -39.0092, -93.7002, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "75.7975, -36.5522, -88.5578, 0.55", "74.0546, -37.1611, -87.9041, 0.55", "69.1944, -38.8591, -86.0812, 0.28", "68.0398, -39.2625, -85.6482, 0.55", "64.8814, -40.366, -84.4635, 0.28", "62.8455, -41.0773, -83.6999, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.5703, -52.8904, 6.91361, 0.83", "15.6171, -53.1516, 6.88739, 0.83", "16.269, -56.5648, 6.65134, 0.83", "16.5006, -59.1306, 6.61307, 0.83", "16.5047, -61.6121, 6.81842, 0.83", "16.3513, -64.9158, 7.33506, 0.83", "16.044, -68.7248, 8.06171, 0.83", "15.6869, -72.973, 9.1087, 0.83", "15.313, -77.0961, 10.3252, 0.83", "14.5262, -82.1756, 11.6471, 0.83", "14.0504, -84.5176, 12.0971, 0.83", "13.7018, -86.2813, 12.3188, 0.83", "12.9689, -89.6695, 12.659, 0.83", "12.4111, -92.7041, 12.7999, 0.83", "11.6928, -99.1725, 12.4008, 0.83", "11.4105, -102.717, 11.7086, 0.83", "11.1832, -105.987, 10.8227, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.5703, -52.8904, 6.91361, 0.55", "14.2202, -56.1245, 6.73367, 0.55", "13.1619, -58.4732, 6.77189, 0.55", "12.4873, -59.9725, 6.95826, 0.55", "11.4863, -62.3129, 7.50806, 0.55", "9.55042, -66.9401, 8.92861, 0.55", "7.9583, -70.4424, 10.3867, 0.55", "6.60912, -73.2484, 11.8596, 0.55", "5.12585, -76.0851, 13.5335, 0.55", "3.8448, -78.438, 15.0412, 0.28", "2.69907, -80.3607, 16.5512, 0.55", "0.408381, -83.8611, 19.7766, 0.55", "-1.17307, -86.0112, 21.9592, 0.55", "-2.06947, -87.2164, 23.1663, 0.55", "-3.18067, -88.6417, 24.4965, 0.83", "-6.44274, -92.8713, 28.1455, 0.28", "-7.51132, -94.2711, 29.3148, 0.55", "-9.34014, -96.7951, 31.3623, 0.28", "-9.91747, -97.5728, 32.0511, 0.55", "-11.1609, -99.3945, 33.6577, 0.28", "-11.8417, -100.43, 34.4956, 0.55", "-14.0401, -103.816, 36.2464, 0.55", "-18.5487, -112.817, 45.1541, 0.55", "-22.5765, -121.366, 54.7555, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.84536, -39.8443, -13.2172, 0.55", "-3.1939, -41.1253, -17.5929, 0.55", "-3.32257, -41.4298, -18.8536, 0.55", "-3.70497, -42.1915, -21.9546, 0.55", "-4.67768, -43.7052, -28.5881, 0.28", "-4.85309, -43.9121, -29.541, 0.55", "-5.66931, -44.8527, -33.4235, 0.55", "-7.0574, -46.127, -38.4361, 0.55", "-7.6122, -46.5652, -40.3263, 0.28", "-8.14723, -46.8555, -41.9249, 0.28", "-9.26875, -47.2939, -44.4146, 0.55", "-10.562, -47.7047, -47.5381, 0.28", "-11.7095, -47.8709, -50.4761, 0.55", "-12.616, -47.8367, -52.7226, 0.55", "-13.2069, -47.7028, -54.3075, 0.55", "-14.8556, -47.1367, -59.0655, 0.55", "-16.634, -46.256, -64.0196, 0.55", "-17.3941, -45.796, -66.0352, 0.28", "-18.0969, -45.386, -67.9737, 0.55", "-19.5554, -44.7661, -71.8731, 0.28", "-20.0553, -44.589, -73.1754, 0.83", "-21.0847, -44.2282, -75.495, 0.28", "-21.964, -44.0728, -77.0056, 0.55", "-23.2739, -43.9215, -79.1616, 0.28", "-23.8145, -43.8489, -79.9976, 0.55", "-24.8757, -43.7413, -81.4759, 0.55", "-26.5307, -43.3332, -83.6411, 0.55", "-27.6668, -42.9657, -84.9854, 0.28", "-28.6427, -42.5083, -85.99, 0.55", "-29.7801, -41.7861, -87.1847, 0.28", "-29.9608, -41.648, -87.3887, 0.55", "-31.3703, -40.3382, -89.6024, 0.28", "-32.277, -39.3615, -91.3565, 0.55", "-33.2698, -37.9412, -93.9246, 0.83", "-33.9533, -36.7382, -96.2088, 0.28", "-34.0998, -36.4325, -96.8369, 0.55", "-35.0942, -34.1486, -101.818, 0.28", "-35.2278, -33.7618, -102.741, 0.55", "-35.5385, -32.4997, -105.562, 0.28", "-35.6163, -32.1753, -106.293, 0.55", "-35.8723, -31.3271, -108.1, 0.28", "-36.0902, -30.714, -109.336, 0.55", "-36.7746, -29.3336, -111.852, 0.28", "-37.2162, -28.5944, -113.308, 0.55", "-38.2572, -27.1678, -116.303, 0.28", "-38.5778, -26.7831, -117.185, 0.55", "-39.1144, -26.2682, -118.531, 0.28", "-39.6013, -25.8329, -119.632, 0.55", "-40.6964, -24.9518, -121.816, 0.28", "-41.0406, -24.6996, -122.457, 0.55", "-43.7337, -22.7277, -127.043, 0.28", "-44.7635, -21.9169, -128.535, 0.55", "-46.7116, -20.3256, -131.044, 0.28", "-47.6123, -19.5557, -132.142, 0.55", "-49.7878, -17.8052, -134.515, 0.28", "-50.6199, -17.2094, -135.345, 0.55", "-53.7865, -15.4008, -138.16, 0.28", "-55.1297, -14.8529, -139.317, 0.55", "-57.0884, -14.457, -140.939, 0.55", "-58.3208, -14.3043, -141.905, 0.55", "-60.978, -14.0613, -143.675, 0.28", "-63.7046, -13.8447, -145.254, 0.28", "-66.0175, -13.6527, -146.506, 0.55", "-69.0174, -13.1478, -147.75, 0.28", "-70.6008, -12.7062, -148.187, 0.55", "-74.5201, -11.0739, -148.911, 0.28", "-76.7338, -9.85812, -148.88, 0.55", "-78.2753, -8.87742, -148.614, 0.28", "-80.1509, -7.75975, -147.999, 0.55", "-82.5811, -6.29206, -147.026, 0.28", "-83.5044, -5.77291, -146.666, 0.55", "-88.1589, -3.43569, -145.211, 0.28", "-89.7295, -2.69586, -144.734, 0.55", "-93.5015, -1.04574, -143.528, 0.28", "-95.5525, -0.168324, -142.874, 0.55", "-97.2388, 0.550583, -142.34, 0.55", "-99.2408, 1.39627, -141.742, 0.28", "-100.238, 1.82263, -141.565, 0.55", "-103.518, 3.33504, -141.135, 0.28", "-105.231, 4.29184, -140.88, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.84536, -39.8443, -13.2172, 0.55", "-1.77762, -40.0565, -13.8916, 0.55", "-0.674539, -40.1391, -14.5386, 0.55", "0.746268, -40.1409, -15.274, 0.55", "1.93398, -40.0476, -15.8228, 0.55", "9.99757, -38.6422, -18.8391, 0.55", "11.8275, -38.1349, -19.5383, 0.55", "14.5354, -37.2062, -20.6207, 0.55", "16.4544, -36.49, -21.3974, 0.55", "18.3343, -35.692, -22.1135, 0.28", "21.2497, -34.3144, -23.08, 0.55", "25.6178, -32.1417, -24.2924, 0.28", "25.992, -32.0211, -24.487, 0.55", "28.1266, -31.711, -26.3709, 0.28", "29.3479, -31.6102, -27.8789, 0.55", "30.5136, -31.6373, -29.6355, 0.55", "32.5575, -31.8656, -32.8208, 0.55", "36.5834, -32.3636, -39.0601, 0.55", "39.3586, -32.7487, -43.2005, 0.55", "40.3536, -32.8968, -44.6031, 0.55", "47.1117, -33.7896, -53.6629, 0.55", "49.0457, -33.991, -56.0373, 0.55", "50.2307, -34.1054, -57.287, 0.55", "53.2436, -34.4673, -59.9564, 0.55", "60.8324, -35.7922, -65.9285, 0.55", "62.9425, -36.2471, -67.4471, 0.28", "64.2078, -36.5663, -68.2183, 0.55", "66.1023, -37.1217, -69.3239, 0.28", "66.9121, -37.4323, -69.7169, 0.55", "69.5378, -38.7116, -70.2332, 0.28", "71.2387, -40.2849, -69.5109, 0.55", "72.2144, -41.3906, -69.0024, 0.28", "73.0361, -42.5936, -68.4093, 0.55", "73.6997, -43.8904, -67.8053, 0.28", "73.9862, -44.5565, -67.5552, 0.55", "74.5979, -46.293, -66.8963, 0.28", "74.7866, -46.8136, -66.7956, 0.55", "75.9401, -49.8047, -66.3811, 0.28", "76.599, -51.1971, -66.3357, 0.55", "78.2725, -54.1884, -66.4946, 0.28", "78.9921, -55.2964, -66.6436, 0.55", "81.5965, -58.9471, -67.267, 0.28", "82.2536, -59.8363, -67.4506, 0.55", "84.3118, -62.6543, -68.1632, 0.28", "84.734, -63.3116, -68.3025, 0.55", "85.7889, -65.0465, -68.6846, 0.28", "86.4576, -66.0573, -68.9917, 0.55", "87.1845, -67.0539, -69.3491, 0.55", "88.6285, -69.0416, -70.0478, 0.28", "89.6966, -70.2798, -70.5554, 0.55", "93.2634, -73.4145, -72.176, 0.28", "94.705, -74.4454, -72.8483, 0.55", "95.7107, -75.1036, -73.2909, 0.28", "96.7429, -75.709, -73.7197, 0.55", "99.959, -77.4174, -74.9722, 0.28", "102.384, -78.7384, -75.8619, 0.55", "106.44, -81.2202, -77.105, 0.28", "107.717, -81.9931, -77.4901, 0.55", "110.137, -83.4133, -78.0396, 0.28", "110.931, -83.8782, -78.1645, 0.55", "112.166, -84.6165, -78.1604, 0.28", "113.232, -85.2387, -78.0703, 0.55", "116.045, -86.7824, -77.5457, 0.28", "119.27, -88.429, -76.8909, 0.28", "120.871, -89.19, -76.4485, 0.28", "122.526, -89.9118, -76.0957, 0.55", "124.959, -90.8627, -75.5877, 0.28", "126.036, -91.2698, -75.3399, 0.83", "128.74, -92.339, -74.6091, 0.28", "129.934, -92.83, -74.3551, 0.55", "135.243, -95.1808, -73.4712, 0.28", "137.966, -96.3913, -73.2288, 0.28", "139.985, -97.2747, -73.1711, 0.55", "141.198, -97.8147, -73.2574, 0.55", "144.48, -99.2919, -73.7108, 0.28", "147.565, -100.793, -74.2451, 0.55", "150.364, -102.233, -74.7337, 0.28", "152.925, -103.57, -75.2922, 0.55", "155.042, -104.653, -75.7425, 0.28", "156.766, -105.434, -76.0284, 0.55", "160.907, -107.115, -76.5475, 0.28", "162.986, -107.962, -76.735, 0.55", "166.08, -109.239, -76.9156, 0.28", "168.604, -110.22, -77.01, 0.55", "174.545, -112.291, -77.2344, 0.28", "177.019, -113.019, -77.4673, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.31918, -138.389, 104.79, 0.55", "-0.223659, -146.996, 109.304, 0.55", "2.17907, -156.119, 111.656, 0.55", "3.80182, -165.012, 115.31, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.31918, -138.389, 104.79, 0.55", "0.237691, -145.852, 111.152, 0.55", "-0.0228401, -152.514, 118.616, 0.55", "-0.829838, -157.62, 127.302, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-5.00327, -138.677, 105.158, 0.55", "-4.24828, -146.137, 109.756, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.00327, -138.677, 105.158, 0.55", "-5.98617, -148.887, 111.521, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.1832, -105.987, 10.8227, 0.83", "11.8896, -108.616, 11.3773, 0.83", "12.5677, -110.821, 12.0322, 0.83", "13.2417, -113.014, 12.6831, 0.83", "13.8818, -115.096, 13.3013, 0.83", "14.8683, -118.305, 14.254, 0.83", "15.8476, -121.49, 15.1998, 0.83", "16.6342, -123.583, 16.1387, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "11.1832, -105.987, 10.8227, 0.55", "12.2491, -107.291, 11.1411, 0.55", "13.1221, -108.311, 11.1991, 0.55", "13.7537, -109.068, 11.1526, 0.55", "14.386, -109.965, 10.9394, 0.83", "15.0707, -110.99, 10.5476, 0.55", "15.7405, -111.992, 10.1643, 0.83", "16.4328, -113.084, 9.62553, 0.55", "16.8506, -113.717, 9.25134, 0.83", "18.1604, -115.775, 7.8489, 0.55", "19.0807, -117.4, 6.60386, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-22.5765, -121.366, 54.7555, 0.55", "-28.3939, -131.232, 60.54, 0.55", "-36.0472, -139.981, 66.1975, 0.55", "-44.7304, -147.602, 72.166, 0.55", "-54.5926, -153.823, 78.097, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-22.5765, -121.366, 54.7555, 0.55", "-28.1462, -131.363, 62.3166, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.6342, -123.583, 16.1387, 0.55", "16.7754, -125.549, 16.7603, 0.55", "17.0175, -128.053, 17.6315, 0.55", "17.2491, -130.418, 18.4403, 0.55", "17.3974, -132.101, 18.9851, 0.55", "17.6343, -135.107, 19.9027, 0.55", "18.4707, -143.557, 22.2753, 0.55", "18.8478, -146.425, 22.9615, 0.55", "19.1383, -148.45, 23.3392, 0.55", "19.5201, -150.767, 23.578, 0.55", "19.8089, -152.564, 23.5905, 0.55", "20.6424, -156.761, 23.457, 0.55", "21.159, -159.954, 23.334, 0.55", "21.5476, -162.046, 23.3268, 0.55", "22.4916, -167.464, 23.5973, 0.55", "23.0766, -171.104, 23.9456, 0.55", "23.8132, -175.788, 24.6764, 0.55", "24.6584, -181.088, 25.948, 0.55", "25.3572, -184.611, 27.0531, 0.55", "25.8151, -186.688, 27.773, 0.55", "26.2002, -188.605, 28.4254, 0.55", "26.7494, -191.034, 29.1359, 0.55", "28.0608, -196.903, 30.4157, 0.55", "28.6629, -199.171, 30.8329, 0.55", "29.2719, -201.702, 31.2701, 0.55", "30.1562, -205.504, 31.901, 0.55", "30.6873, -208.436, 32.3955, 0.55", "31.0269, -211.232, 32.8031, 0.55", "31.2255, -213.905, 33.1748, 0.55", "31.3666, -216.516, 33.5707, 0.55", "31.4818, -218.374, 33.8347, 0.55", "31.7062, -221.415, 34.1589, 0.55", "31.9654, -225.077, 34.2478, 0.55", "32.1605, -226.856, 34.1572, 0.55", "32.3682, -228.421, 33.9558, 0.55", "32.9298, -231.367, 33.4117, 0.55", "33.2741, -233.238, 33.0091, 0.55", "33.712, -235.539, 32.6085, 0.55", "33.94, -237.159, 32.4212, 0.55", "34.4271, -241.37, 32.0965, 0.55", "34.6746, -244.522, 32.0796, 0.55", "34.909, -249.397, 32.4617, 0.55", "35.0844, -252.531, 33.0308, 0.55", "35.2248, -255.82, 33.7375, 0.28", "35.2379, -257.143, 34.074, 0.28", "35.2071, -260.348, 35.1964, 0.28", "35.1117, -263.304, 36.4777, 0.28", "35.3013, -267.178, 38.6539, 0.28", "37.3048, -275.874, 41.3467, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "16.6342, -123.583, 16.1387, 0.55", "17.9407, -124.056, 17.3847, 0.55", "20.5003, -125.311, 20.161, 0.55", "22.6479, -126.568, 22.6657, 0.28", "24.9023, -128.008, 25.4343, 0.55", "26.1165, -128.931, 27.3218, 0.28", "28.0451, -130.601, 30.8515, 0.55", "28.6222, -131.504, 32.6581, 0.28", "28.7733, -131.831, 33.3877, 0.28", "29.0233, -132.29, 34.6558, 0.55", "30.1796, -133.763, 39.3716, 0.28", "30.7134, -134.33, 41.3293, 0.55", "32.7018, -135.963, 46.8275, 0.28", "33.9069, -136.754, 49.6681, 0.28", "35.5401, -137.774, 53.0623, 0.55", "38.2545, -139.366, 57.7897, 0.28", "38.6674, -139.577, 58.3748, 0.55", "40.8377, -140.599, 61.0844, 0.28", "41.0545, -140.694, 61.305, 0.55", "42.9338, -141.867, 63.3228, 0.28", "43.7865, -142.516, 64.3451, 0.55", "50.7209, -147.267, 72.8103, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-54.5926, -153.823, 78.097, 0.55", "-62.5032, -159.056, 85.2658, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-54.5926, -153.823, 78.097, 0.55", "-61.4082, -161.588, 81.6939, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_BP_de7da8c370_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.73429, 8.50478, 2.9804, 0.83 ) }
    dend_43 { pt3dadd( -7.48701, 11.268, 3.54636, 1.11 ) }
    dend_43 { pt3dadd( -9.69963, 12.8962, 3.84077, 0.83 ) }
    dend_43 { pt3dadd( -11.8493, 14.4642, 4.10455, 0.83 ) }
    dend_43 { pt3dadd( -13.1221, 15.3584, 4.24909, 1.11 ) }
    dend_43 { pt3dadd( -17.1077, 18.1525, 4.71236, 1.11 ) }
    dend_43 { pt3dadd( -24.2365, 22.936, 5.53128, 0.83 ) }
    dend_43 { pt3dadd( -26.8048, 24.5937, 5.80171, 0.83 ) }
    dend_43 { pt3dadd( -28.8386, 25.8673, 5.96968, 0.83 ) }
    dend_43 { pt3dadd( -30.8218, 27.1296, 6.11508, 0.83 ) }
    dend_43 { pt3dadd( -32.4362, 28.17, 6.19353, 0.55 ) }
    dend_43 { pt3dadd( -33.6497, 28.8745, 6.27315, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 3.89624, 5.65122, -6.01765, 0.55 ) }
    dend_28 { pt3dadd( 5.55012, 5.9911, -6.387, 0.55 ) }
    dend_28 { pt3dadd( 6.50981, 6.0769, -6.87571, 0.83 ) }
    dend_28 { pt3dadd( 8.0287, 6.16821, -7.78354, 0.55 ) }
    dend_28 { pt3dadd( 8.7619, 6.21228, -8.22176, 1.38 ) }
    dend_28 { pt3dadd( 10.5646, 6.32065, -9.29925, 0.55 ) }
    dend_28 { pt3dadd( 11.3324, 6.28395, -9.81337, 0.83 ) }
    dend_28 { pt3dadd( 15.3042, 5.61094, -12.702, 0.55 ) }
    dend_28 { pt3dadd( 15.6885, 5.52044, -13.0198, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.690378, -10.4772, 3.4304, 1.11 ) }
    dend_1 { pt3dadd( -0.750597, -15.5247, 5.33516, 1.11 ) }
    dend_1 { pt3dadd( -0.775122, -17.5803, 6.1109, 0.83 ) }
    dend_1 { pt3dadd( -0.807705, -20.3114, 7.14151, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.87484, 9.97737, -1.51654, 1.11 ) }
    dend_0 { pt3dadd( 0.89075, 12.404, -1.62784, 1.11 ) }
    dend_0 { pt3dadd( 0.845698, 16.3706, -1.67455, 1.38 ) }
    dend_0 { pt3dadd( 0.845206, 16.592, -1.67175, 1.38 ) }
    dend_0 { pt3dadd( 0.985987, 19.3421, -1.54172, 0.83 ) }
    dend_0 { pt3dadd( 1.18277, 22.2657, -1.20676, 0.83 ) }
    dend_0 { pt3dadd( 1.50733, 25.6048, -0.332557, 0.83 ) }
    dend_0 { pt3dadd( 1.71387, 26.8886, 0.209449, 0.83 ) }
    dend_0 { pt3dadd( 1.94127, 27.8304, 0.739067, 1.11 ) }
    dend_0 { pt3dadd( 2.68184, 30.1409, 2.17941, 0.55 ) }
    dend_0 { pt3dadd( 3.53757, 32.5707, 3.90695, 0.83 ) }
    dend_0 { pt3dadd( 4.77551, 35.1029, 5.99554, 0.55 ) }
    dend_0 { pt3dadd( 5.44955, 36.1689, 6.99528, 0.83 ) }
    dend_0 { pt3dadd( 6.3476, 37.623, 8.50187, 0.55 ) }
    dend_0 { pt3dadd( 7.40808, 39.4745, 10.4827, 0.55 ) }
    dend_0 { pt3dadd( 8.80536, 42.2517, 13.4175, 0.55 ) }
    dend_0 { pt3dadd( 10.3398, 45.4153, 16.6488, 0.55 ) }
    dend_0 { pt3dadd( 11.189, 47.4787, 18.9545, 0.55 ) }
    dend_0 { pt3dadd( 12.0875, 50.0986, 22.0996, 0.55 ) }
    dend_0 { pt3dadd( 12.2546, 50.6286, 22.8014, 0.83 ) }
    dend_0 { pt3dadd( 12.6523, 52.0348, 24.7551, 0.55 ) }
    dend_0 { pt3dadd( 13.028, 53.1357, 26.3158, 0.83 ) }
    dend_0 { pt3dadd( 13.8427, 56.0937, 29.9644, 0.55 ) }
    dend_0 { pt3dadd( 14.2573, 57.1632, 31.0931, 0.83 ) }
    dend_0 { pt3dadd( 14.7469, 57.9584, 31.943, 0.55 ) }
    dend_0 { pt3dadd( 15.2919, 58.6458, 32.6622, 0.83 ) }
    dend_0 { pt3dadd( 16.5857, 59.9392, 34.0926, 0.83 ) }
    dend_0 { pt3dadd( 18.3813, 61.6827, 35.7806, 0.83 ) }
    dend_0 { pt3dadd( 19.5445, 62.818, 36.6617, 0.55 ) }
    dend_0 { pt3dadd( 20.4256, 63.79, 37.3319, 0.55 ) }
    dend_0 { pt3dadd( 22.754, 66.3021, 39.0497, 0.83 ) }
    dend_0 { pt3dadd( 24.2889, 67.9099, 40.0881, 0.55 ) }
    dend_0 { pt3dadd( 26.6686, 70.2658, 41.5603, 0.55 ) }
    dend_0 { pt3dadd( 28.8966, 72.25, 42.8222, 0.55 ) }
    dend_0 { pt3dadd( 30.9175, 73.9355, 43.8976, 0.55 ) }
    dend_0 { pt3dadd( 33.5298, 75.9164, 45.1397, 0.55 ) }
    dend_0 { pt3dadd( 35.157, 76.9055, 45.859, 0.55 ) }
    dend_0 { pt3dadd( 36.3293, 77.4662, 46.2184, 0.55 ) }
    dend_0 { pt3dadd( 37.9508, 77.9151, 46.5865, 0.55 ) }
    dend_0 { pt3dadd( 40.4622, 78.1915, 46.9754, 0.55 ) }
    dend_0 { pt3dadd( 42.0574, 78.1746, 47.176, 0.55 ) }
    dend_0 { pt3dadd( 44.3288, 78.1003, 47.6196, 0.55 ) }
    dend_0 { pt3dadd( 48.5017, 78.1088, 48.81, 0.55 ) }
    dend_0 { pt3dadd( 51.6778, 78.2764, 49.9554, 0.55 ) }
    dend_0 { pt3dadd( 54.9559, 78.6268, 51.355, 0.55 ) }
    dend_0 { pt3dadd( 56.9849, 78.9356, 52.4143, 0.55 ) }
    dend_0 { pt3dadd( 62.0873, 80.2706, 55.4922, 0.55 ) }
    dend_0 { pt3dadd( 64.9945, 81.3322, 57.5402, 0.55 ) }
    dend_0 { pt3dadd( 67.0727, 82.3059, 59.2929, 0.55 ) }
    dend_0 { pt3dadd( 68.303, 83.1542, 60.3976, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 69.7247, 84.3758, 61.6528, 0.55 ) }
    dend_0 { pt3dadd( 72.2308, 86.7305, 63.4959, 0.55 ) }
    dend_0 { pt3dadd( 72.8438, 87.2896, 63.8244, 0.55 ) }
    dend_0 { pt3dadd( 74.6591, 88.7863, 64.6473, 0.55 ) }
    dend_0 { pt3dadd( 76.3233, 90.3621, 65.3827, 0.83 ) }
    dend_0 { pt3dadd( 77.2376, 91.2345, 65.7678, 0.55 ) }
    dend_0 { pt3dadd( 78.6249, 92.715, 66.2747, 0.83 ) }
    dend_0 { pt3dadd( 85.0847, 100.731, 70.9367, 0.83 ) }
    dend_0 { pt3dadd( 90.854, 109.735, 74.3218, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -33.6497, 28.8745, 6.27315, 0.55 ) }
    dend_55 { pt3dadd( -35.3025, 29.763, 5.3817, 0.55 ) }
    dend_55 { pt3dadd( -37.0998, 30.7291, 4.41235, 0.55 ) }
    dend_55 { pt3dadd( -39.2687, 31.8951, 3.24255, 0.55 ) }
    dend_55 { pt3dadd( -41.0596, 32.8578, 2.27661, 0.83 ) }
    dend_55 { pt3dadd( -42.5604, 33.6646, 1.46716, 0.55 ) }
    dend_55 { pt3dadd( -45.3461, 35.1621, -0.0353023, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.6497, 28.8745, 6.27315, 0.55 ) }
    dend_44 { pt3dadd( -36.7178, 29.3893, 5.9683, 0.55 ) }
    dend_44 { pt3dadd( -39.9744, 29.8461, 5.97024, 0.55 ) }
    dend_44 { pt3dadd( -43.665, 30.36, 6.06274, 0.55 ) }
    dend_44 { pt3dadd( -48.9982, 31.0578, 6.68934, 0.55 ) }
    dend_44 { pt3dadd( -53.4528, 31.5237, 7.53488, 0.55 ) }
    dend_44 { pt3dadd( -58.1197, 31.947, 8.62413, 0.55 ) }
    dend_44 { pt3dadd( -62.6174, 32.0723, 10.1737, 0.55 ) }
    dend_44 { pt3dadd( -66.4778, 31.8245, 11.8946, 0.55 ) }
    dend_44 { pt3dadd( -71.2737, 31.1999, 14.5704, 0.55 ) }
    dend_44 { pt3dadd( -73.3509, 30.7854, 16.0339, 0.55 ) }
    dend_44 { pt3dadd( -75.5921, 30.316, 17.7145, 0.55 ) }
    dend_44 { pt3dadd( -79.5479, 29.1933, 20.5, 0.55 ) }
    dend_44 { pt3dadd( -81.6613, 28.5961, 21.6417, 0.55 ) }
    dend_44 { pt3dadd( -83.8748, 27.9045, 22.8254, 0.55 ) }
    dend_44 { pt3dadd( -86.5139, 27.1095, 23.9595, 0.55 ) }
    dend_44 { pt3dadd( -89.3842, 26.302, 25.1108, 0.55 ) }
    dend_44 { pt3dadd( -93.4828, 25.138, 26.6629, 0.55 ) }
    dend_44 { pt3dadd( -98.9713, 23.9281, 28.2288, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 15.6885, 5.52044, -13.0198, 0.55 ) }
    dend_34 { pt3dadd( 20.7047, 6.83981, -14.094, 0.55 ) }
    dend_34 { pt3dadd( 23.6003, 7.43686, -15.1231, 0.55 ) }
    dend_34 { pt3dadd( 26.4605, 7.90331, -16.1809, 0.55 ) }
    dend_34 { pt3dadd( 28.4159, 8.14744, -16.9031, 0.55 ) }
    dend_34 { pt3dadd( 31.2747, 8.44096, -17.9368, 0.55 ) }
    dend_34 { pt3dadd( 37.2079, 8.94002, -20.2674, 0.55 ) }
    dend_34 { pt3dadd( 43.9414, 9.46462, -23.3622, 0.55 ) }
    dend_34 { pt3dadd( 47.2106, 9.52392, -25.0904, 0.55 ) }
    dend_34 { pt3dadd( 48.9627, 9.51437, -26.1313, 0.55 ) }
    dend_34 { pt3dadd( 50.8841, 9.51264, -27.3509, 0.55 ) }
    dend_34 { pt3dadd( 54.3141, 9.41835, -29.514, 0.55 ) }
    dend_34 { pt3dadd( 55.561, 9.31431, -30.3413, 0.55 ) }
    dend_34 { pt3dadd( 60.8395, 8.99862, -34.2516, 0.55 ) }
    dend_34 { pt3dadd( 64.5761, 8.83161, -37.2965, 0.55 ) }
    dend_34 { pt3dadd( 66.7269, 8.77519, -39.1087, 0.55 ) }
    dend_34 { pt3dadd( 68.8723, 8.70089, -40.9146, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 15.6885, 5.52044, -13.0198, 0.83 ) }
    dend_29 { pt3dadd( 17.5043, 6.43884, -12.9949, 0.83 ) }
    dend_29 { pt3dadd( 18.5416, 6.96712, -13.0267, 0.55 ) }
    dend_29 { pt3dadd( 20.0688, 7.7873, -13.1973, 0.83 ) }
    dend_29 { pt3dadd( 21.0966, 8.36575, -13.34, 0.55 ) }
    dend_29 { pt3dadd( 22.5164, 9.19661, -13.5137, 0.83 ) }
    dend_29 { pt3dadd( 24.2263, 10.2209, -13.6586, 0.55 ) }
    dend_29 { pt3dadd( 25.0837, 10.6747, -13.7022, 0.55 ) }
    dend_29 { pt3dadd( 27.0439, 11.4596, -13.6882, 0.83 ) }
    dend_29 { pt3dadd( 28.8146, 11.9527, -13.4663, 0.55 ) }
    dend_29 { pt3dadd( 29.805, 12.2102, -13.2498, 0.83 ) }
    dend_29 { pt3dadd( 31.2945, 12.6132, -12.7686, 0.55 ) }
    dend_29 { pt3dadd( 33.4392, 13.2033, -11.8058, 0.55 ) }
    dend_29 { pt3dadd( 36.4109, 13.8667, -10.3312, 0.55 ) }
    dend_29 { pt3dadd( 39.2412, 14.3872, -8.74072, 0.55 ) }
    dend_29 { pt3dadd( 41.4826, 14.7737, -7.44299, 0.55 ) }
    dend_29 { pt3dadd( 45.1789, 15.4252, -5.28309, 0.55 ) }
    dend_29 { pt3dadd( 47.8881, 15.969, -3.63809, 0.55 ) }
    dend_29 { pt3dadd( 49.5316, 16.4195, -2.57484, 0.55 ) }
    dend_29 { pt3dadd( 52.5746, 17.534, -0.56447, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.807705, -20.3114, 7.14151, 0.83 ) }
    dend_11 { pt3dadd( -1.09516, -23.0949, 7.02785, 0.83 ) }
    dend_11 { pt3dadd( -1.37523, -25.8068, 6.91711, 0.83 ) }
    dend_11 { pt3dadd( -1.68792, -28.8346, 6.79347, 0.83 ) }
    dend_11 { pt3dadd( -1.8512, -30.4157, 6.72891, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.807705, -20.3114, 7.14151, 0.55 ) }
    dend_2 { pt3dadd( -0.117252, -21.9646, 8.22372, 0.55 ) }
    dend_2 { pt3dadd( 0.534391, -23.9799, 9.66766, 0.55 ) }
    dend_2 { pt3dadd( 0.989715, -26.6024, 11.7261, 0.55 ) }
    dend_2 { pt3dadd( 1.09684, -27.6186, 12.565, 0.83 ) }
    dend_2 { pt3dadd( 1.16623, -30.2029, 15.0481, 0.55 ) }
    dend_2 { pt3dadd( 1.09179, -31.5323, 16.3728, 0.55 ) }
    dend_2 { pt3dadd( 0.905755, -34.1159, 19.0718, 0.83 ) }
    dend_2 { pt3dadd( 0.669527, -36.0301, 21.2198, 0.55 ) }
    dend_2 { pt3dadd( 0.323864, -37.6018, 22.9866, 0.55 ) }
    dend_2 { pt3dadd( -0.409346, -40.5744, 26.2857, 0.55 ) }
    dend_2 { pt3dadd( -0.995268, -42.9435, 28.8855, 0.55 ) }
    dend_2 { pt3dadd( -1.42039, -44.845, 30.9921, 0.55 ) }
    dend_2 { pt3dadd( -1.76382, -46.8688, 33.1451, 0.28 ) }
    dend_2 { pt3dadd( -1.83708, -47.7151, 33.9973, 0.55 ) }
    dend_2 { pt3dadd( -1.94275, -49.2793, 35.4725, 0.28 ) }
    dend_2 { pt3dadd( -1.81521, -51.7338, 37.3294, 0.55 ) }
    dend_2 { pt3dadd( -3.37369, -59.8064, 44.2538, 0.55 ) }
    dend_2 { pt3dadd( -5.02707, -67.2586, 51.8901, 0.55 ) }
    dend_2 { pt3dadd( -5.93462, -73.4133, 60.8258, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -45.3461, 35.1621, -0.0353023, 0.55 ) }
    dend_61 { pt3dadd( -47.2163, 35.6575, 1.42059, 0.55 ) }
    dend_61 { pt3dadd( -47.9791, 35.8459, 2.14961, 0.83 ) }
    dend_61 { pt3dadd( -48.8411, 36.0496, 3.1473, 0.55 ) }
    dend_61 { pt3dadd( -49.4857, 36.2217, 3.98078, 0.83 ) }
    dend_61 { pt3dadd( -51.1804, 36.7382, 6.13091, 0.55 ) }
    dend_61 { pt3dadd( -51.8212, 36.9476, 6.94823, 0.28 ) }
    dend_61 { pt3dadd( -52.8666, 37.336, 8.4157, 0.55 ) }
    dend_61 { pt3dadd( -54.2714, 37.8651, 10.3744, 0.55 ) }
    dend_61 { pt3dadd( -55.351, 38.253, 11.8018, 0.55 ) }
    dend_61 { pt3dadd( -56.8052, 38.7576, 13.6531, 0.28 ) }
    dend_61 { pt3dadd( -57.195, 38.879, 14.0787, 0.55 ) }
    dend_61 { pt3dadd( -58.0096, 39.1326, 14.922, 0.28 ) }
    dend_61 { pt3dadd( -58.5762, 39.3066, 15.4312, 0.55 ) }
    dend_61 { pt3dadd( -59.757, 39.6263, 16.3602, 0.28 ) }
    dend_61 { pt3dadd( -60.4577, 39.7638, 16.8754, 0.55 ) }
    dend_61 { pt3dadd( -61.689, 39.9141, 17.8173, 0.28 ) }
    dend_61 { pt3dadd( -62.5227, 40.0017, 18.4195, 0.55 ) }
    dend_61 { pt3dadd( -67.061, 40.6926, 24.6316, 0.55 ) }
    dend_61 { pt3dadd( -71.0227, 40.7821, 31.2495, 0.55 ) }
    dend_61 { pt3dadd( -74.7765, 40.1878, 37.9421, 0.55 ) }
    dend_61 { pt3dadd( -78.5572, 38.6896, 44.4415, 0.55 ) }
    dend_61 { pt3dadd( -81.3473, 37.6504, 51.5186, 0.55 ) }
    dend_61 { pt3dadd( -84.7599, 36.8155, 58.3564, 0.55 ) }
    dend_61 { pt3dadd( -88.2315, 37.2065, 65.238, 0.55 ) }
    dend_61 { pt3dadd( -91.6899, 37.0061, 72.1209, 0.55 ) }
    dend_61 { pt3dadd( -94.9746, 37.3268, 79.0953, 0.55 ) }
    dend_61 { pt3dadd( -97.8661, 37.5866, 86.2418, 0.55 ) }
    dend_61 { pt3dadd( -99.9598, 37.0736, 93.6258, 0.55 ) }
    dend_61 { pt3dadd( -102.108, 37.2556, 101.028, 0.55 ) }
    dend_61 { pt3dadd( -104.389, 36.673, 108.35, 0.55 ) }
    dend_61 { pt3dadd( -105.729, 35.8382, 115.865, 0.55 ) }
    dend_61 { pt3dadd( -105.72, 35.5769, 123.557, 0.55 ) }
    dend_61 { pt3dadd( -105.737, 33.8979, 131.014, 0.55 ) }
    dend_61 { pt3dadd( -104.659, 32.076, 138.351, 0.55 ) }
    dend_61 { pt3dadd( -103.965, 30.5863, 145.824, 0.55 ) }
    dend_61 { pt3dadd( -104.069, 29.6494, 153.44, 0.55 ) }
    dend_61 { pt3dadd( -105.791, 29.8229, 160.952, 0.55 ) }
    dend_61 { pt3dadd( -106.838, 29.1983, 168.541, 0.55 ) }
    dend_61 { pt3dadd( -106.383, 29.8598, 176.216, 0.55 ) }
    dend_61 { pt3dadd( -107.181, 31.0307, 183.809, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.3461, 35.1621, -0.0353023, 0.55 ) }
    dend_56 { pt3dadd( -46.914, 35.6096, -1.76071, 0.55 ) }
    dend_56 { pt3dadd( -48.1508, 36.1025, -3.70954, 0.55 ) }
    dend_56 { pt3dadd( -49.3185, 36.7488, -5.79127, 0.55 ) }
    dend_56 { pt3dadd( -50.0497, 37.1535, -7.09483, 0.55 ) }
    dend_56 { pt3dadd( -51.3834, 37.8917, -9.47267, 0.83 ) }
    dend_56 { pt3dadd( -52.3592, 38.4318, -11.2123, 0.55 ) }
    dend_56 { pt3dadd( -53.504, 39.1502, -13.7765, 0.83 ) }
    dend_56 { pt3dadd( -53.9483, 39.6677, -15.2383, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -98.9713, 23.9281, 28.2288, 0.28 ) }
    dend_48 { pt3dadd( -99.7466, 22.674, 27.8665, 0.28 ) }
    dend_48 { pt3dadd( -100.116, 22.1397, 27.6615, 0.28 ) }
    dend_48 { pt3dadd( -100.599, 21.3862, 27.3412, 0.55 ) }
    dend_48 { pt3dadd( -100.999, 20.7227, 27.066, 0.28 ) }
    dend_48 { pt3dadd( -101.588, 19.7103, 26.6607, 0.55 ) }
    dend_48 { pt3dadd( -103.231, 16.7286, 25.5226, 0.28 ) }
    dend_48 { pt3dadd( -103.769, 15.6901, 25.0328, 0.55 ) }
    dend_48 { pt3dadd( -104.587, 14.0954, 24.2192, 0.28 ) }
    dend_48 { pt3dadd( -105.058, 13.1453, 23.6854, 0.55 ) }
    dend_48 { pt3dadd( -105.384, 12.492, 23.3002, 0.28 ) }
    dend_48 { pt3dadd( -105.755, 11.7415, 22.8648, 0.55 ) }
    dend_48 { pt3dadd( -106.881, 9.2292, 21.4798, 0.28 ) }
    dend_48 { pt3dadd( -107.235, 8.47198, 21.0313, 0.55 ) }
    dend_48 { pt3dadd( -107.852, 7.32676, 20.2131, 0.28 ) }
    dend_48 { pt3dadd( -108.357, 6.60163, 19.6174, 0.28 ) }
    dend_48 { pt3dadd( -108.805, 6.1214, 19.1982, 0.55 ) }
    dend_48 { pt3dadd( -110.359, 4.77658, 18.0623, 0.28 ) }
    dend_48 { pt3dadd( -111.079, 4.23311, 17.6148, 0.55 ) }
    dend_48 { pt3dadd( -112.84, 3.00565, 16.5058, 0.28 ) }
    dend_48 { pt3dadd( -114.599, 1.92648, 15.4913, 0.28 ) }
    dend_48 { pt3dadd( -116.508, 0.907529, 14.4586, 0.28 ) }
    dend_48 { pt3dadd( -117.381, 0.527549, 14.0633, 0.55 ) }
    dend_48 { pt3dadd( -121.631, -3.94276, 11.1947, 0.55 ) }
    dend_48 { pt3dadd( -126.336, -8.58928, 9.59759, 0.55 ) }
    dend_48 { pt3dadd( -130.953, -12.8848, 7.00466, 0.55 ) }
    dend_48 { pt3dadd( -135.685, -16.7127, 3.87017, 0.55 ) }
    dend_48 { pt3dadd( -140.474, -20.009, 0.198831, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -98.9713, 23.9281, 28.2288, 0.55 ) }
    dend_45 { pt3dadd( -99.5654, 23.8798, 28.3311, 0.55 ) }
    dend_45 { pt3dadd( -101.234, 23.7567, 28.8384, 0.55 ) }
    dend_45 { pt3dadd( -101.859, 23.6967, 29.0638, 0.55 ) }
    dend_45 { pt3dadd( -103.33, 23.5139, 29.6191, 0.55 ) }
    dend_45 { pt3dadd( -105.595, 23.2492, 30.3609, 0.55 ) }
    dend_45 { pt3dadd( -106.773, 23.1454, 30.7232, 0.28 ) }
    dend_45 { pt3dadd( -108.608, 22.9437, 31.253, 0.55 ) }
    dend_45 { pt3dadd( -109.971, 22.7644, 31.5984, 0.55 ) }
    dend_45 { pt3dadd( -110.547, 22.6852, 31.7458, 0.28 ) }
    dend_45 { pt3dadd( -114.001, 22.2076, 32.625, 0.55 ) }
    dend_45 { pt3dadd( -115.618, 21.9079, 32.9404, 0.28 ) }
    dend_45 { pt3dadd( -117.803, 21.4891, 33.2375, 0.28 ) }
    dend_45 { pt3dadd( -119.691, 21.1487, 33.381, 0.55 ) }
    dend_45 { pt3dadd( -127.014, 20.9321, 35.4881, 0.55 ) }
    dend_45 { pt3dadd( -134.055, 20.5768, 38.3861, 0.55 ) }
    dend_45 { pt3dadd( -140.652, 19.5282, 42.0447, 0.55 ) }
    dend_45 { pt3dadd( -147.041, 19.7237, 46.1983, 0.55 ) }
    dend_45 { pt3dadd( -152.433, 19.7505, 51.5869, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -156.694, 20.2332, 57.8874, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 68.8723, 8.70089, -40.9146, 0.55 ) }
    dend_42 { pt3dadd( 73.5225, 10.1429, -44.6665, 0.55 ) }
    dend_42 { pt3dadd( 74.9886, 10.543, -45.9495, 0.55 ) }
    dend_42 { pt3dadd( 76.8215, 10.9844, -47.5373, 0.55 ) }
    dend_42 { pt3dadd( 80.1436, 11.7699, -50.6177, 0.55 ) }
    dend_42 { pt3dadd( 83.6043, 12.4575, -53.9289, 0.55 ) }
    dend_42 { pt3dadd( 85.2917, 12.6598, -55.5136, 0.83 ) }
    dend_42 { pt3dadd( 86.6754, 12.7402, -56.9312, 0.55 ) }
    dend_42 { pt3dadd( 87.7056, 12.7235, -58.1042, 0.83 ) }
    dend_42 { pt3dadd( 90.1718, 12.3529, -61.1321, 0.55 ) }
    dend_42 { pt3dadd( 92.1949, 11.8605, -63.6531, 0.55 ) }
    dend_42 { pt3dadd( 94.5229, 11.2708, -66.4338, 0.55 ) }
    dend_42 { pt3dadd( 97.1171, 10.6918, -69.58, 0.55 ) }
    dend_42 { pt3dadd( 98.8547, 10.2653, -71.7381, 0.55 ) }
    dend_42 { pt3dadd( 100.814, 9.78231, -74.2385, 0.55 ) }
    dend_42 { pt3dadd( 102.508, 9.43261, -76.5189, 0.55 ) }
    dend_42 { pt3dadd( 103.575, 9.31937, -78.095, 0.55 ) }
    dend_42 { pt3dadd( 104.908, 9.17973, -81.2511, 0.55 ) }
    dend_42 { pt3dadd( 105.627, 9.03919, -83.227, 0.55 ) }
    dend_42 { pt3dadd( 106.224, 8.7595, -85.8537, 0.55 ) }
    dend_42 { pt3dadd( 107.019, 8.1695, -90.2983, 0.55 ) }
    dend_42 { pt3dadd( 107.177, 8.00193, -91.3024, 0.28 ) }
    dend_42 { pt3dadd( 109.241, 5.83195, -103.52, 0.28 ) }
    dend_42 { pt3dadd( 109.953, 5.21392, -107.106, 0.83 ) }
    dend_42 { pt3dadd( 112.782, 2.79776, -119.843, 0.83 ) }
    dend_42 { pt3dadd( 114.241, 1.44868, -125.774, 0.83 ) }
    dend_42 { pt3dadd( 114.951, 0.806487, -128.182, 0.55 ) }
    dend_42 { pt3dadd( 115.778, 0.165329, -130.532, 0.55 ) }
    dend_42 { pt3dadd( 118.12, -1.15212, -134.902, 0.55 ) }
    dend_42 { pt3dadd( 120.65, -2.36623, -138.749, 0.28 ) }
    dend_42 { pt3dadd( 121.435, -2.63474, -138.992, 0.55 ) }
    dend_42 { pt3dadd( 123.176, -3.14599, -138.887, 0.28 ) }
    dend_42 { pt3dadd( 124.259, -3.39793, -138.659, 0.55 ) }
    dend_42 { pt3dadd( 125.388, -3.68087, -138.325, 0.28 ) }
    dend_42 { pt3dadd( 126.747, -3.95921, -137.857, 0.55 ) }
    dend_42 { pt3dadd( 128.783, -4.25959, -137.369, 0.28 ) }
    dend_42 { pt3dadd( 130.414, -4.54556, -137.034, 0.55 ) }
    dend_42 { pt3dadd( 132.224, -4.73851, -136.8, 0.28 ) }
    dend_42 { pt3dadd( 134.68, -4.97968, -136.701, 0.55 ) }
    dend_42 { pt3dadd( 137.436, -5.17909, -136.753, 0.55 ) }
    dend_42 { pt3dadd( 139.859, -5.3172, -136.959, 0.28 ) }
    dend_42 { pt3dadd( 143.21, -5.46777, -137.428, 0.55 ) }
    dend_42 { pt3dadd( 149.004, -5.53754, -138.849, 0.55 ) }
    dend_42 { pt3dadd( 151.565, -5.42268, -139.78, 0.55 ) }
    dend_42 { pt3dadd( 152.667, -5.32234, -140.296, 0.83 ) }
    dend_42 { pt3dadd( 154.763, -5.10524, -141.472, 0.55 ) }
    dend_42 { pt3dadd( 156.219, -4.89252, -142.376, 0.83 ) }
    dend_42 { pt3dadd( 160.14, -4.21861, -144.847, 0.55 ) }
    dend_42 { pt3dadd( 162.526, -3.96132, -146.429, 0.28 ) }
    dend_42 { pt3dadd( 163.53, -3.91989, -146.984, 0.55 ) }
    dend_42 { pt3dadd( 166.273, -4.06949, -148.214, 0.28 ) }
    dend_42 { pt3dadd( 167.23, -4.2108, -148.586, 0.55 ) }
    dend_42 { pt3dadd( 169.203, -4.6399, -149.052, 0.28 ) }
    dend_42 { pt3dadd( 171.207, -5.28591, -149.185, 0.55 ) }
    dend_42 { pt3dadd( 175.255, -6.84394, -148.744, 0.28 ) }
    dend_42 { pt3dadd( 177.12, -7.6539, -148.344, 0.55 ) }
    dend_42 { pt3dadd( 179.89, -9.02142, -147.608, 0.28 ) }
    dend_42 { pt3dadd( 183.39, -10.7434, -146.549, 0.55 ) }
    dend_42 { pt3dadd( 185.924, -11.9576, -145.74, 0.55 ) }
    dend_42 { pt3dadd( 190.32, -13.9321, -144.257, 0.28 ) }
    dend_42 { pt3dadd( 192.125, -14.6529, -143.794, 0.55 ) }
    dend_42 { pt3dadd( 195.242, -15.7035, -143.332, 0.28 ) }
    dend_42 { pt3dadd( 198.354, -16.5082, -143.077, 0.55 ) }
    dend_42 { pt3dadd( 200.066, -16.7496, -143.166, 0.28 ) }
    dend_42 { pt3dadd( 201.62, -16.7609, -143.357, 0.55 ) }
    dend_42 { pt3dadd( 206.013, -16.5185, -144.293, 0.28 ) }
    dend_42 { pt3dadd( 209.159, -16.1354, -145.0, 0.28 ) }
    dend_42 { pt3dadd( 211.902, -15.6103, -145.643, 0.55 ) }
    dend_42 { pt3dadd( 214.931, -14.9413, -146.501, 0.28 ) }
    dend_42 { pt3dadd( 215.697, -14.7289, -146.689, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 68.8723, 8.70089, -40.9146, 0.55 ) }
    dend_35 { pt3dadd( 69.1998, 7.45948, -42.0605, 0.55 ) }
    dend_35 { pt3dadd( 69.3689, 6.39788, -42.9436, 0.28 ) }
    dend_35 { pt3dadd( 69.5231, 5.41091, -43.658, 0.55 ) }
    dend_35 { pt3dadd( 69.9714, 3.3199, -45.1966, 0.28 ) }
    dend_35 { pt3dadd( 69.9954, 3.19156, -45.3142, 0.55 ) }
    dend_35 { pt3dadd( 70.1424, 2.52855, -45.9943, 0.28 ) }
    dend_35 { pt3dadd( 70.2042, 1.99683, -46.6575, 0.55 ) }
    dend_35 { pt3dadd( 70.2298, 1.45424, -47.4255, 0.28 ) }
    dend_35 { pt3dadd( 70.2376, 0.721176, -48.515, 0.55 ) }
    dend_35 { pt3dadd( 70.2557, -1.12619, -51.2073, 0.55 ) }
    dend_35 { pt3dadd( 70.2479, -2.80378, -53.698, 0.55 ) }
    dend_35 { pt3dadd( 70.2249, -4.14394, -55.6908, 0.55 ) }
    dend_35 { pt3dadd( 70.1721, -5.46516, -57.6199, 0.55 ) }
    dend_35 { pt3dadd( 70.1572, -5.80928, -58.1002, 0.28 ) }
    dend_35 { pt3dadd( 70.1545, -6.18292, -58.5757, 0.55 ) }
    dend_35 { pt3dadd( 70.2102, -6.71065, -59.1771, 0.28 ) }
    dend_35 { pt3dadd( 70.4258, -7.675, -60.1542, 0.55 ) }
    dend_35 { pt3dadd( 71.0253, -9.5779, -61.6881, 0.55 ) }
    dend_35 { pt3dadd( 71.3585, -10.6172, -62.4098, 0.28 ) }
    dend_35 { pt3dadd( 71.6285, -11.6644, -63.1935, 0.55 ) }
    dend_35 { pt3dadd( 71.8855, -13.1187, -64.3507, 0.28 ) }
    dend_35 { pt3dadd( 72.0075, -14.2858, -65.3142, 0.55 ) }
    dend_35 { pt3dadd( 72.1049, -16.0283, -66.7573, 0.28 ) }
    dend_35 { pt3dadd( 72.2211, -17.8411, -68.1873, 0.55 ) }
    dend_35 { pt3dadd( 72.35, -20.4684, -70.289, 0.28 ) }
    dend_35 { pt3dadd( 72.3839, -21.8673, -71.4139, 0.55 ) }
    dend_35 { pt3dadd( 72.3918, -23.2917, -72.6024, 0.28 ) }
    dend_35 { pt3dadd( 72.3833, -24.5323, -73.7372, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 72.4333, -26.0625, -75.3114, 0.55 ) }
    dend_35 { pt3dadd( 72.595, -27.4901, -76.7315, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 52.5746, 17.534, -0.56447, 0.55 ) }
    dend_31 { pt3dadd( 55.7555, 16.8372, -0.0272527, 0.55 ) }
    dend_31 { pt3dadd( 58.0609, 16.2717, 0.13254, 0.55 ) }
    dend_31 { pt3dadd( 63.0952, 15.0112, 0.209047, 0.55 ) }
    dend_31 { pt3dadd( 65.3491, 14.4245, 0.0336325, 0.55 ) }
    dend_31 { pt3dadd( 67.8089, 13.8506, -0.27897, 0.55 ) }
    dend_31 { pt3dadd( 71.1086, 13.1657, -0.930089, 0.55 ) }
    dend_31 { pt3dadd( 74.5711, 12.3957, -1.96416, 0.55 ) }
    dend_31 { pt3dadd( 76.3796, 11.9949, -2.72237, 0.55 ) }
    dend_31 { pt3dadd( 80.0373, 11.2433, -4.78017, 0.55 ) }
    dend_31 { pt3dadd( 81.7211, 10.9178, -5.78172, 0.55 ) }
    dend_31 { pt3dadd( 85.6567, 10.0937, -8.24354, 0.55 ) }
    dend_31 { pt3dadd( 88.3141, 9.42656, -9.90092, 0.55 ) }
    dend_31 { pt3dadd( 90.2721, 8.91176, -11.0291, 0.83 ) }
    dend_31 { pt3dadd( 93.3919, 7.96904, -12.8088, 0.55 ) }
    dend_31 { pt3dadd( 96.4393, 6.88153, -14.4454, 0.83 ) }
    dend_31 { pt3dadd( 99.0183, 5.82772, -15.7516, 0.55 ) }
    dend_31 { pt3dadd( 101.322, 4.90768, -16.7832, 0.55 ) }
    dend_31 { pt3dadd( 102.639, 4.43234, -17.2869, 0.83 ) }
    dend_31 { pt3dadd( 105.721, 3.31096, -18.292, 0.28 ) }
    dend_31 { pt3dadd( 107.263, 2.80353, -18.6827, 0.28 ) }
    dend_31 { pt3dadd( 108.744, 2.22918, -19.1521, 0.28 ) }
    dend_31 { pt3dadd( 110.348, 1.65177, -19.6618, 0.28 ) }
    dend_31 { pt3dadd( 112.917, 0.782593, -20.5269, 0.28 ) }
    dend_31 { pt3dadd( 113.953, 0.441499, -20.8413, 0.55 ) }
    dend_31 { pt3dadd( 116.443, -0.380714, -21.3384, 0.55 ) }
    dend_31 { pt3dadd( 120.929, -1.93229, -22.0051, 0.55 ) }
    dend_31 { pt3dadd( 122.17, -2.40093, -22.1373, 0.55 ) }
    dend_31 { pt3dadd( 123.277, -2.86117, -22.2107, 0.83 ) }
    dend_31 { pt3dadd( 125.695, -3.81301, -22.1602, 0.55 ) }
    dend_31 { pt3dadd( 127.799, -4.64071, -22.0812, 0.55 ) }
    dend_31 { pt3dadd( 129.788, -5.41574, -21.996, 0.55 ) }
    dend_31 { pt3dadd( 131.324, -6.03659, -21.9781, 0.55 ) }
    dend_31 { pt3dadd( 133.741, -7.17224, -22.0934, 0.55 ) }
    dend_31 { pt3dadd( 136.56, -8.73811, -22.4246, 0.55 ) }
    dend_31 { pt3dadd( 140.883, -11.6239, -23.3249, 0.55 ) }
    dend_31 { pt3dadd( 143.216, -13.5424, -24.0254, 0.55 ) }
    dend_31 { pt3dadd( 145.201, -15.5487, -24.789, 0.28 ) }
    dend_31 { pt3dadd( 145.778, -16.2793, -25.0725, 0.55 ) }
    dend_31 { pt3dadd( 147.011, -18.3026, -25.8289, 0.28 ) }
    dend_31 { pt3dadd( 148.017, -20.5526, -26.6123, 0.55 ) }
    dend_31 { pt3dadd( 148.902, -23.3637, -27.3408, 0.55 ) }
    dend_31 { pt3dadd( 149.507, -25.224, -27.7296, 0.28 ) }
    dend_31 { pt3dadd( 149.733, -25.8859, -27.8344, 0.55 ) }
    dend_31 { pt3dadd( 150.325, -27.535, -28.0732, 0.28 ) }
    dend_31 { pt3dadd( 151.146, -29.6901, -28.3333, 0.55 ) }
    dend_31 { pt3dadd( 153.333, -34.9118, -28.8382, 0.55 ) }
    dend_31 { pt3dadd( 154.483, -37.553, -29.0391, 0.55 ) }
    dend_31 { pt3dadd( 155.554, -39.9773, -29.2022, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 52.5746, 17.534, -0.56447, 0.55 ) }
    dend_30 { pt3dadd( 54.4186, 17.2732, 0.679541, 0.55 ) }
    dend_30 { pt3dadd( 55.0088, 17.1962, 1.04776, 0.55 ) }
    dend_30 { pt3dadd( 57.1995, 16.8407, 2.30525, 0.55 ) }
    dend_30 { pt3dadd( 59.6489, 16.477, 3.75496, 0.55 ) }
    dend_30 { pt3dadd( 62.7905, 15.9825, 5.68924, 0.55 ) }
    dend_30 { pt3dadd( 63.6581, 15.8483, 6.21834, 0.55 ) }
    dend_30 { pt3dadd( 65.211, 15.5585, 7.1384, 0.55 ) }
    dend_30 { pt3dadd( 66.9136, 15.2929, 8.09657, 0.55 ) }
    dend_30 { pt3dadd( 68.8933, 15.0572, 9.14111, 0.55 ) }
    dend_30 { pt3dadd( 70.7605, 14.8568, 10.1383, 0.55 ) }
    dend_30 { pt3dadd( 71.7859, 14.801, 10.6526, 0.55 ) }
    dend_30 { pt3dadd( 72.9914, 14.7669, 11.2632, 0.55 ) }
    dend_30 { pt3dadd( 74.4843, 14.7702, 12.0043, 0.83 ) }
    dend_30 { pt3dadd( 76.9212, 14.8388, 12.9788, 0.55 ) }
    dend_30 { pt3dadd( 78.5291, 14.8484, 13.5357, 0.83 ) }
    dend_30 { pt3dadd( 80.7535, 14.7909, 14.2112, 0.55 ) }
    dend_30 { pt3dadd( 81.4343, 14.7425, 14.3999, 0.55 ) }
    dend_30 { pt3dadd( 83.5396, 14.5104, 14.9174, 0.55 ) }
    dend_30 { pt3dadd( 87.2894, 13.9311, 15.6429, 0.55 ) }
    dend_30 { pt3dadd( 90.025, 13.3859, 16.0752, 0.55 ) }
    dend_30 { pt3dadd( 92.1867, 12.8492, 16.4401, 0.55 ) }
    dend_30 { pt3dadd( 94.3867, 12.1757, 16.8544, 0.55 ) }
    dend_30 { pt3dadd( 94.8489, 12.022, 16.9405, 0.28 ) }
    dend_30 { pt3dadd( 95.784, 11.6768, 17.1034, 0.83 ) }
    dend_30 { pt3dadd( 99.6211, 10.2018, 17.7791, 0.55 ) }
    dend_30 { pt3dadd( 102.304, 9.1872, 18.2024, 0.55 ) }
    dend_30 { pt3dadd( 104.511, 8.39026, 18.6179, 0.55 ) }
    dend_30 { pt3dadd( 105.83, 7.90694, 18.8772, 0.83 ) }
    dend_30 { pt3dadd( 106.869, 7.53971, 19.0872, 0.28 ) }
    dend_30 { pt3dadd( 107.811, 7.21048, 19.2694, 0.55 ) }
    dend_30 { pt3dadd( 115.29, 5.98742, 22.1752, 0.55 ) }
    dend_30 { pt3dadd( 123.078, 4.0078, 23.3747, 0.55 ) }
    dend_30 { pt3dadd( 130.902, 2.8213, 25.1959, 0.55 ) }
    dend_30 { pt3dadd( 137.898, 0.178681, 28.3719, 0.55 ) }
    dend_30 { pt3dadd( 144.358, -3.51636, 31.6127, 0.55 ) }
    dend_30 { pt3dadd( 151.255, -7.66724, 32.3573, 0.55 ) }
    dend_30 { pt3dadd( 157.931, -12.1031, 31.6065, 0.55 ) }
    dend_30 { pt3dadd( 165.38, -15.1554, 30.7309, 0.55 ) }
    dend_30 { pt3dadd( 172.757, -18.4662, 30.3446, 0.55 ) }
    dend_30 { pt3dadd( 180.482, -20.8574, 29.681, 0.55 ) }
    dend_30 { pt3dadd( 188.239, -23.2188, 30.1114, 0.55 ) }
    dend_30 { pt3dadd( 195.428, -26.9082, 30.6063, 0.55 ) }
    dend_30 { pt3dadd( 202.936, -29.5474, 32.2307, 0.55 ) }
    dend_30 { pt3dadd( 210.238, -31.4023, 35.2657, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.8512, -30.4157, 6.72891, 1.38 ) }
    dend_13 { pt3dadd( 1.17268, -33.3235, 6.20129, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.8512, -30.4157, 6.72891, 0.55 ) }
    dend_12 { pt3dadd( -3.20747, -31.8723, 6.95884, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.71852, -33.7502, 7.21159, 0.55 ) }
    dend_12 { pt3dadd( -5.88306, -34.986, 7.42306, 0.55 ) }
    dend_12 { pt3dadd( -6.88844, -36.0165, 7.45061, 0.55 ) }
    dend_12 { pt3dadd( -9.10902, -38.1431, 7.31288, 0.55 ) }
    dend_12 { pt3dadd( -10.6698, -39.5593, 7.176, 0.55 ) }
    dend_12 { pt3dadd( -12.0661, -40.8288, 7.00453, 0.55 ) }
    dend_12 { pt3dadd( -15.645, -43.9103, 6.56883, 0.55 ) }
    dend_12 { pt3dadd( -19.9341, -47.4713, 6.07884, 0.55 ) }
    dend_12 { pt3dadd( -23.2617, -50.1641, 5.64556, 0.55 ) }
    dend_12 { pt3dadd( -25.3924, -51.9349, 5.33957, 0.55 ) }
    dend_12 { pt3dadd( -27.8402, -54.0647, 4.99453, 0.55 ) }
    dend_12 { pt3dadd( -30.9553, -57.1389, 4.59156, 0.55 ) }
    dend_12 { pt3dadd( -32.7893, -59.3385, 4.38798, 0.55 ) }
    dend_12 { pt3dadd( -35.0422, -62.5224, 4.31674, 0.55 ) }
    dend_12 { pt3dadd( -36.8481, -65.5212, 4.32189, 0.55 ) }
    dend_12 { pt3dadd( -38.7008, -69.283, 4.34923, 0.55 ) }
    dend_12 { pt3dadd( -40.4762, -73.7193, 4.43519, 0.55 ) }
    dend_12 { pt3dadd( -41.4683, -77.1281, 4.53109, 0.55 ) }
    dend_12 { pt3dadd( -41.8222, -78.8317, 4.67615, 0.55 ) }
    dend_12 { pt3dadd( -42.366, -82.8497, 5.20549, 0.55 ) }
    dend_12 { pt3dadd( -42.7887, -86.6138, 5.79224, 0.55 ) }
    dend_12 { pt3dadd( -42.9648, -90.4192, 6.64333, 0.55 ) }
    dend_12 { pt3dadd( -43.0697, -92.6028, 7.259, 0.55 ) }
    dend_12 { pt3dadd( -43.3101, -99.3598, 9.41316, 0.55 ) }
    dend_12 { pt3dadd( -43.3298, -99.8572, 9.58137, 0.55 ) }
    dend_12 { pt3dadd( -43.3785, -102.908, 10.6795, 0.55 ) }
    dend_12 { pt3dadd( -43.7076, -108.352, 12.8179, 0.55 ) }
    dend_12 { pt3dadd( -43.8467, -110.171, 13.4224, 0.55 ) }
    dend_12 { pt3dadd( -44.2179, -113.004, 13.873, 0.55 ) }
    dend_12 { pt3dadd( -44.3677, -114.054, 13.7849, 0.55 ) }
    dend_12 { pt3dadd( -44.8222, -117.608, 12.7632, 0.55 ) }
    dend_12 { pt3dadd( -45.0637, -119.91, 11.5732, 0.55 ) }
    dend_12 { pt3dadd( -45.4683, -123.571, 8.88255, 0.55 ) }
    dend_12 { pt3dadd( -45.8316, -128.055, 5.19805, 0.28 ) }
    dend_12 { pt3dadd( -45.9284, -129.162, 4.12768, 0.55 ) }
    dend_12 { pt3dadd( -46.0941, -130.838, 2.34911, 0.28 ) }
    dend_12 { pt3dadd( -46.1237, -131.09, 2.0674, 0.55 ) }
    dend_12 { pt3dadd( -46.2754, -132.474, 0.650546, 0.28 ) }
    dend_12 { pt3dadd( -46.3424, -132.943, 0.288239, 0.55 ) }
    dend_12 { pt3dadd( -46.6694, -135.388, -1.0916, 0.28 ) }
    dend_12 { pt3dadd( -46.8126, -136.219, -1.5447, 0.55 ) }
    dend_12 { pt3dadd( -47.2353, -138.621, -2.70675, 0.28 ) }
    dend_12 { pt3dadd( -47.3644, -139.377, -3.07022, 0.55 ) }
    dend_12 { pt3dadd( -47.825, -141.987, -4.27625, 0.28 ) }
    dend_12 { pt3dadd( -48.0313, -143.188, -4.83852, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.93462, -73.4133, 60.8258, 0.55 ) }
    dend_10 { pt3dadd( -8.63915, -79.1166, 66.4725, 0.55 ) }
    dend_10 { pt3dadd( -12.2416, -84.1603, 72.3106, 0.55 ) }
    dend_10 { pt3dadd( -15.5652, -89.7281, 77.7743, 0.55 ) }
    dend_10 { pt3dadd( -19.0319, -95.336, 83.1023, 0.55 ) }
    dend_10 { pt3dadd( -21.5205, -101.807, 87.8611, 0.55 ) }
    dend_10 { pt3dadd( -23.953, -108.005, 93.0336, 0.55 ) }
    dend_10 { pt3dadd( -25.2898, -115.429, 96.5526, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.93462, -73.4133, 60.8258, 0.55 ) }
    dend_3 { pt3dadd( -4.81179, -79.9658, 67.5952, 0.55 ) }
    dend_3 { pt3dadd( -3.27311, -87.5253, 72.976, 0.55 ) }
    dend_3 { pt3dadd( -3.29407, -95.2276, 78.3584, 0.55 ) }
    dend_3 { pt3dadd( -3.86893, -103.406, 82.8627, 0.55 ) }
    dend_3 { pt3dadd( -4.05112, -111.529, 87.5064, 0.55 ) }
    dend_3 { pt3dadd( -4.16386, -119.315, 92.753, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -53.9483, 39.6677, -15.2383, 0.83 ) }
    dend_60 { pt3dadd( -53.7084, 41.1217, -17.2481, 0.83 ) }
    dend_60 { pt3dadd( -53.2232, 44.6623, -21.7656, 0.55 ) }
    dend_60 { pt3dadd( -53.0047, 46.2055, -23.5637, 0.83 ) }
    dend_60 { pt3dadd( -52.7579, 47.8708, -25.3555, 0.55 ) }
    dend_60 { pt3dadd( -52.4919, 49.614, -26.9166, 0.55 ) }
    dend_60 { pt3dadd( -52.3446, 50.5037, -27.5727, 0.28 ) }
    dend_60 { pt3dadd( -52.2806, 51.1093, -27.8388, 0.55 ) }
    dend_60 { pt3dadd( -51.9785, 53.1836, -28.2611, 0.28 ) }
    dend_60 { pt3dadd( -51.8236, 54.0767, -28.3959, 0.55 ) }
    dend_60 { pt3dadd( -51.3184, 57.1941, -28.7291, 0.28 ) }
    dend_60 { pt3dadd( -50.9804, 59.6711, -28.9013, 0.55 ) }
    dend_60 { pt3dadd( -50.6388, 63.5446, -29.0325, 0.28 ) }
    dend_60 { pt3dadd( -50.4591, 66.9515, -29.0715, 0.28 ) }
    dend_60 { pt3dadd( -50.471, 68.8577, -29.0471, 0.55 ) }
    dend_60 { pt3dadd( -50.6292, 71.1114, -29.0075, 0.28 ) }
    dend_60 { pt3dadd( -50.7774, 72.1852, -28.9681, 0.55 ) }
    dend_60 { pt3dadd( -51.2762, 74.6918, -28.9848, 0.28 ) }
    dend_60 { pt3dadd( -51.7302, 76.3474, -29.0802, 0.28 ) }
    dend_60 { pt3dadd( -52.2155, 77.9663, -29.224, 0.28 ) }
    dend_60 { pt3dadd( -52.4374, 78.823, -29.3059, 0.55 ) }
    dend_60 { pt3dadd( -53.1432, 82.2903, -29.7369, 0.28 ) }
    dend_60 { pt3dadd( -53.8392, 86.397, -30.3372, 0.55 ) }
    dend_60 { pt3dadd( -54.0579, 87.8159, -30.5518, 0.55 ) }
    dend_60 { pt3dadd( -54.2995, 89.2405, -30.7329, 0.55 ) }
    dend_60 { pt3dadd( -54.9846, 92.2523, -31.1587, 0.55 ) }
    dend_60 { pt3dadd( -55.5717, 94.217, -31.4749, 0.28 ) }
    dend_60 { pt3dadd( -55.8864, 94.9542, -31.5993, 0.55 ) }
    dend_60 { pt3dadd( -56.8871, 96.9459, -31.8804, 0.28 ) }
    dend_60 { pt3dadd( -58.0508, 99.0511, -32.2646, 0.55 ) }
    dend_60 { pt3dadd( -60.0368, 102.046, -32.9257, 0.28 ) }
    dend_60 { pt3dadd( -61.0169, 103.282, -33.2367, 0.28 ) }
    dend_60 { pt3dadd( -62.6352, 104.965, -33.8454, 0.55 ) }
    dend_60 { pt3dadd( -64.4596, 106.7, -34.5765, 0.28 ) }
    dend_60 { pt3dadd( -64.7937, 106.967, -34.704, 0.55 ) }
    dend_60 { pt3dadd( -66.0016, 107.807, -35.1424, 0.28 ) }
    dend_60 { pt3dadd( -70.17, 110.476, -36.5518, 0.55 ) }
    dend_60 { pt3dadd( -75.9944, 113.685, -38.6737, 0.28 ) }
    dend_60 { pt3dadd( -77.0764, 114.207, -39.1216, 0.55 ) }
    dend_60 { pt3dadd( -80.053, 115.531, -40.3886, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -81.3055, 116.067, -40.9516, 0.28 ) }
    dend_60 { pt3dadd( -82.3983, 116.502, -41.4886, 0.55 ) }
    dend_60 { pt3dadd( -85.6221, 117.399, -43.2596, 0.28 ) }
    dend_60 { pt3dadd( -87.8982, 117.829, -44.4006, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -53.9483, 39.6677, -15.2383, 0.55 ) }
    dend_57 { pt3dadd( -54.2533, 41.2287, -15.487, 0.55 ) }
    dend_57 { pt3dadd( -54.4571, 42.1517, -15.5417, 0.28 ) }
    dend_57 { pt3dadd( -54.7403, 42.8091, -15.4069, 0.55 ) }
    dend_57 { pt3dadd( -55.3905, 44.3189, -15.0975, 0.28 ) }
    dend_57 { pt3dadd( -55.8472, 45.3793, -14.8801, 0.55 ) }
    dend_57 { pt3dadd( -56.6891, 47.3342, -14.4793, 0.28 ) }
    dend_57 { pt3dadd( -57.2507, 48.3815, -14.0679, 0.55 ) }
    dend_57 { pt3dadd( -59.3685, 50.8576, -12.1294, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -140.474, -20.009, 0.198831, 0.55 ) }
    dend_52 { pt3dadd( -144.478, -24.6425, -2.09779, 0.55 ) }
    dend_52 { pt3dadd( -147.423, -29.7547, -4.81825, 0.55 ) }
    dend_52 { pt3dadd( -149.77, -34.3453, -8.82529, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -140.474, -20.009, 0.198831, 0.55 ) }
    dend_49 { pt3dadd( -146.121, -25.5622, -4.08856, 0.55 ) }
    dend_49 { pt3dadd( -150.817, -31.1573, -9.34526, 0.55 ) }
    dend_49 { pt3dadd( -155.14, -36.8757, -14.7707, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -156.694, 20.2332, 57.8874, 0.55 ) }
    dend_47 { pt3dadd( -165.447, 19.5829, 63.7418, 0.55 ) }
    dend_47 { pt3dadd( -174.545, 20.4717, 68.9888, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -156.694, 20.2332, 57.8874, 0.55 ) }
    dend_46 { pt3dadd( -170.72, 18.7418, 62.5562, 0.55 ) }
    dend_46 { pt3dadd( -184.573, 19.4825, 67.8968, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 72.595, -27.4901, -76.7315, 0.28 ) }
    dend_39 { pt3dadd( 80.9887, -32.0881, -92.017, 0.28 ) }
    dend_39 { pt3dadd( 81.8306, -32.6107, -93.3769, 0.55 ) }
    dend_39 { pt3dadd( 83.2519, -33.4929, -95.6728, 0.28 ) }
    dend_39 { pt3dadd( 84.4487, -34.2357, -97.6059, 0.28 ) }
    dend_39 { pt3dadd( 86.0329, -35.219, -100.165, 0.55 ) }
    dend_39 { pt3dadd( 88.1216, -36.5155, -103.539, 0.55 ) }
    dend_39 { pt3dadd( 91.0469, -38.7071, -105.307, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 72.595, -27.4901, -76.7315, 0.55 ) }
    dend_36 { pt3dadd( 73.1249, -28.3383, -77.8122, 0.55 ) }
    dend_36 { pt3dadd( 73.2801, -28.7218, -78.2907, 0.28 ) }
    dend_36 { pt3dadd( 73.5046, -29.3794, -79.1261, 0.55 ) }
    dend_36 { pt3dadd( 73.9992, -30.8282, -80.9663, 0.28 ) }
    dend_36 { pt3dadd( 74.3419, -31.8322, -82.2416, 0.55 ) }
    dend_36 { pt3dadd( 74.9226, -33.5332, -84.4023, 0.28 ) }
    dend_36 { pt3dadd( 75.5556, -35.6012, -87.2343, 0.28 ) }
    dend_36 { pt3dadd( 75.7975, -36.5522, -88.5578, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 155.554, -39.9773, -29.2022, 0.28 ) }
    dend_33 { pt3dadd( 158.322, -44.3828, -28.638, 0.28 ) }
    dend_33 { pt3dadd( 161.788, -50.2565, -27.4117, 0.28 ) }
    dend_33 { pt3dadd( 163.971, -54.0846, -26.4633, 0.55 ) }
    dend_33 { pt3dadd( 165.306, -56.22, -25.8324, 0.28 ) }
    dend_33 { pt3dadd( 166.014, -57.3704, -25.4819, 0.28 ) }
    dend_33 { pt3dadd( 169.53, -63.0401, -23.8387, 0.55 ) }
    dend_33 { pt3dadd( 170.342, -64.3238, -23.3087, 0.28 ) }
    dend_33 { pt3dadd( 172.226, -67.7198, -21.695, 0.55 ) }
    dend_33 { pt3dadd( 173.829, -70.655, -20.4127, 0.28 ) }
    dend_33 { pt3dadd( 175.247, -73.043, -19.4126, 0.55 ) }
    dend_33 { pt3dadd( 176.905, -75.875, -18.3924, 0.55 ) }
    dend_33 { pt3dadd( 179.552, -80.3045, -17.3314, 0.55 ) }
    dend_33 { pt3dadd( 180.188, -81.3857, -17.1109, 0.55 ) }
    dend_33 { pt3dadd( 182.45, -85.4099, -16.3359, 0.28 ) }
    dend_33 { pt3dadd( 183.316, -87.0452, -16.0647, 0.55 ) }
    dend_33 { pt3dadd( 184.548, -89.1408, -15.7226, 0.28 ) }
    dend_33 { pt3dadd( 186.285, -92.0983, -15.3747, 0.55 ) }
    dend_33 { pt3dadd( 189.199, -96.686, -15.5102, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 155.554, -39.9773, -29.2022, 0.55 ) }
    dend_32 { pt3dadd( 152.808, -39.6619, -29.246, 0.55 ) }
    dend_32 { pt3dadd( 150.577, -39.4057, -29.2815, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.17268, -33.3235, 6.20129, 0.83 ) }
    dend_17 { pt3dadd( 1.31933, -33.588, 6.1991, 0.83 ) }
    dend_17 { pt3dadd( 2.96538, -35.9144, 6.38924, 0.83 ) }
    dend_17 { pt3dadd( 4.42926, -37.9521, 6.40964, 0.55 ) }
    dend_17 { pt3dadd( 5.59713, -39.5777, 6.42592, 0.55 ) }
    dend_17 { pt3dadd( 8.07946, -43.0331, 6.46052, 0.83 ) }
    dend_17 { pt3dadd( 11.0903, -47.2241, 6.50249, 0.55 ) }
    dend_17 { pt3dadd( 12.7218, -49.4153, 6.58053, 0.83 ) }
    dend_17 { pt3dadd( 15.5703, -52.8904, 6.91361, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.17268, -33.3235, 6.20129, 0.55 ) }
    dend_14 { pt3dadd( 0.494851, -34.4235, 2.92544, 0.55 ) }
    dend_14 { pt3dadd( -0.232719, -35.6043, -0.590788, 0.55 ) }
    dend_14 { pt3dadd( -1.09162, -36.9982, -4.74172, 0.55 ) }
    dend_14 { pt3dadd( -2.13461, -38.6908, -9.7823, 0.55 ) }
    dend_14 { pt3dadd( -2.72647, -39.6513, -12.6426, 0.55 ) }
    dend_14 { pt3dadd( -2.84536, -39.8443, -13.2172, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.16386, -119.315, 92.753, 0.55 ) }
    dend_7 { pt3dadd( -3.39222, -128.511, 99.5109, 0.55 ) }
    dend_7 { pt3dadd( -1.31918, -138.389, 104.79, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.16386, -119.315, 92.753, 0.55 ) }
    dend_4 { pt3dadd( -4.33252, -129.117, 98.7625, 0.55 ) }
    dend_4 { pt3dadd( -5.00327, -138.677, 105.158, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -59.3685, 50.8576, -12.1294, 0.28 ) }
    dend_59 { pt3dadd( -61.4277, 51.8215, -10.4497, 0.28 ) }
    dend_59 { pt3dadd( -62.2223, 52.1638, -9.73353, 0.55 ) }
    dend_59 { pt3dadd( -64.5114, 53.146, -7.61169, 0.28 ) }
    dend_59 { pt3dadd( -65.6271, 53.662, -6.6614, 0.55 ) }
    dend_59 { pt3dadd( -68.648, 55.0839, -4.18877, 0.28 ) }
    dend_59 { pt3dadd( -71.7182, 56.529, -1.67568, 0.55 ) }
    dend_59 { pt3dadd( -76.7745, 58.6924, 2.46615, 0.28 ) }
    dend_59 { pt3dadd( -77.8522, 59.1599, 3.35093, 0.55 ) }
    dend_59 { pt3dadd( -80.2255, 60.3283, 5.25619, 0.28 ) }
    dend_59 { pt3dadd( -81.1587, 60.8303, 6.017, 0.55 ) }
    dend_59 { pt3dadd( -90.7416, 63.3877, 11.6596, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -100.706, 67.6893, 14.9518, 0.55 ) }
    dend_59 { pt3dadd( -109.89, 71.9929, 20.0007, 0.55 ) }
    dend_59 { pt3dadd( -117.782, 77.783, 25.5218, 0.55 ) }
    dend_59 { pt3dadd( -126.591, 83.2524, 29.9275, 0.55 ) }
    dend_59 { pt3dadd( -136.295, 86.7344, 34.7309, 0.55 ) }
    dend_59 { pt3dadd( -145.507, 89.0555, 41.0653, 0.55 ) }
    dend_59 { pt3dadd( -153.864, 90.0302, 48.8501, 0.55 ) }
    dend_59 { pt3dadd( -162.259, 91.6949, 56.4401, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -59.3685, 50.8576, -12.1294, 0.55 ) }
    dend_58 { pt3dadd( -62.6861, 49.6811, -10.5044, 0.55 ) }
    dend_58 { pt3dadd( -64.4077, 49.0121, -9.66056, 0.28 ) }
    dend_58 { pt3dadd( -65.6888, 48.5143, -9.03258, 0.55 ) }
    dend_58 { pt3dadd( -66.7565, 48.0994, -8.50919, 0.28 ) }
    dend_58 { pt3dadd( -67.5044, 47.8088, -8.14258, 0.55 ) }
    dend_58 { pt3dadd( -69.5666, 47.0075, -7.13169, 0.28 ) }
    dend_58 { pt3dadd( -70.9407, 46.3479, -6.63616, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -149.77, -34.3453, -8.82529, 0.55 ) }
    dend_54 { pt3dadd( -153.736, -41.79, -9.28848, 0.55 ) }
    dend_54 { pt3dadd( -157.62, -49.2562, -8.75621, 0.55 ) }
    dend_54 { pt3dadd( -160.726, -57.0376, -9.68943, 0.55 ) }
    dend_54 { pt3dadd( -164.791, -64.4372, -9.58862, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -149.77, -34.3453, -8.82529, 0.55 ) }
    dend_53 { pt3dadd( -152.672, -37.4251, -13.6433, 0.55 ) }
    dend_53 { pt3dadd( -155.211, -39.7412, -19.1023, 0.55 ) }
    dend_53 { pt3dadd( -158.339, -42.6957, -23.8652, 0.55 ) }
    dend_53 { pt3dadd( -162.707, -44.6113, -28.2244, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -155.14, -36.8757, -14.7707, 0.55 ) }
    dend_51 { pt3dadd( -159.904, -43.4732, -22.5452, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -155.14, -36.8757, -14.7707, 0.55 ) }
    dend_50 { pt3dadd( -158.971, -44.9259, -15.7273, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 91.0469, -38.7071, -105.307, 0.28 ) }
    dend_41 { pt3dadd( 93.6792, -39.8257, -106.886, 0.28 ) }
    dend_41 { pt3dadd( 94.9019, -40.3453, -107.62, 0.55 ) }
    dend_41 { pt3dadd( 97.2335, -41.3361, -109.019, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 91.0469, -38.7071, -105.307, 0.55 ) }
    dend_40 { pt3dadd( 90.741, -39.3018, -106.232, 0.55 ) }
    dend_40 { pt3dadd( 90.129, -40.4914, -108.084, 0.28 ) }
    dend_40 { pt3dadd( 89.9296, -40.8789, -108.687, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 75.7975, -36.5522, -88.5578, 0.28 ) }
    dend_38 { pt3dadd( 76.4335, -38.1955, -91.9972, 0.28 ) }
    dend_38 { pt3dadd( 76.7484, -39.0092, -93.7002, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 75.7975, -36.5522, -88.5578, 0.55 ) }
    dend_37 { pt3dadd( 74.0546, -37.1611, -87.9041, 0.55 ) }
    dend_37 { pt3dadd( 69.1944, -38.8591, -86.0812, 0.28 ) }
    dend_37 { pt3dadd( 68.0398, -39.2625, -85.6482, 0.55 ) }
    dend_37 { pt3dadd( 64.8814, -40.366, -84.4635, 0.28 ) }
    dend_37 { pt3dadd( 62.8455, -41.0773, -83.6999, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.5703, -52.8904, 6.91361, 0.83 ) }
    dend_23 { pt3dadd( 15.6171, -53.1516, 6.88739, 0.83 ) }
    dend_23 { pt3dadd( 16.269, -56.5648, 6.65134, 0.83 ) }
    dend_23 { pt3dadd( 16.5006, -59.1306, 6.61307, 0.83 ) }
    dend_23 { pt3dadd( 16.5047, -61.6121, 6.81842, 0.83 ) }
    dend_23 { pt3dadd( 16.3513, -64.9158, 7.33506, 0.83 ) }
    dend_23 { pt3dadd( 16.044, -68.7248, 8.06171, 0.83 ) }
    dend_23 { pt3dadd( 15.6869, -72.973, 9.1087, 0.83 ) }
    dend_23 { pt3dadd( 15.313, -77.0961, 10.3252, 0.83 ) }
    dend_23 { pt3dadd( 14.5262, -82.1756, 11.6471, 0.83 ) }
    dend_23 { pt3dadd( 14.0504, -84.5176, 12.0971, 0.83 ) }
    dend_23 { pt3dadd( 13.7018, -86.2813, 12.3188, 0.83 ) }
    dend_23 { pt3dadd( 12.9689, -89.6695, 12.659, 0.83 ) }
    dend_23 { pt3dadd( 12.4111, -92.7041, 12.7999, 0.83 ) }
    dend_23 { pt3dadd( 11.6928, -99.1725, 12.4008, 0.83 ) }
    dend_23 { pt3dadd( 11.4105, -102.717, 11.7086, 0.83 ) }
    dend_23 { pt3dadd( 11.1832, -105.987, 10.8227, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.5703, -52.8904, 6.91361, 0.55 ) }
    dend_18 { pt3dadd( 14.2202, -56.1245, 6.73367, 0.55 ) }
    dend_18 { pt3dadd( 13.1619, -58.4732, 6.77189, 0.55 ) }
    dend_18 { pt3dadd( 12.4873, -59.9725, 6.95826, 0.55 ) }
    dend_18 { pt3dadd( 11.4863, -62.3129, 7.50806, 0.55 ) }
    dend_18 { pt3dadd( 9.55042, -66.9401, 8.92861, 0.55 ) }
    dend_18 { pt3dadd( 7.9583, -70.4424, 10.3867, 0.55 ) }
    dend_18 { pt3dadd( 6.60912, -73.2484, 11.8596, 0.55 ) }
    dend_18 { pt3dadd( 5.12585, -76.0851, 13.5335, 0.55 ) }
    dend_18 { pt3dadd( 3.8448, -78.438, 15.0412, 0.28 ) }
    dend_18 { pt3dadd( 2.69907, -80.3607, 16.5512, 0.55 ) }
    dend_18 { pt3dadd( 0.408381, -83.8611, 19.7766, 0.55 ) }
    dend_18 { pt3dadd( -1.17307, -86.0112, 21.9592, 0.55 ) }
    dend_18 { pt3dadd( -2.06947, -87.2164, 23.1663, 0.55 ) }
    dend_18 { pt3dadd( -3.18067, -88.6417, 24.4965, 0.83 ) }
    dend_18 { pt3dadd( -6.44274, -92.8713, 28.1455, 0.28 ) }
    dend_18 { pt3dadd( -7.51132, -94.2711, 29.3148, 0.55 ) }
    dend_18 { pt3dadd( -9.34014, -96.7951, 31.3623, 0.28 ) }
    dend_18 { pt3dadd( -9.91747, -97.5728, 32.0511, 0.55 ) }
    dend_18 { pt3dadd( -11.1609, -99.3945, 33.6577, 0.28 ) }
    dend_18 { pt3dadd( -11.8417, -100.43, 34.4956, 0.55 ) }
    dend_18 { pt3dadd( -14.0401, -103.816, 36.2464, 0.55 ) }
    dend_18 { pt3dadd( -18.5487, -112.817, 45.1541, 0.55 ) }
    dend_18 { pt3dadd( -22.5765, -121.366, 54.7555, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.84536, -39.8443, -13.2172, 0.55 ) }
    dend_16 { pt3dadd( -3.1939, -41.1253, -17.5929, 0.55 ) }
    dend_16 { pt3dadd( -3.32257, -41.4298, -18.8536, 0.55 ) }
    dend_16 { pt3dadd( -3.70497, -42.1915, -21.9546, 0.55 ) }
    dend_16 { pt3dadd( -4.67768, -43.7052, -28.5881, 0.28 ) }
    dend_16 { pt3dadd( -4.85309, -43.9121, -29.541, 0.55 ) }
    dend_16 { pt3dadd( -5.66931, -44.8527, -33.4235, 0.55 ) }
    dend_16 { pt3dadd( -7.0574, -46.127, -38.4361, 0.55 ) }
    dend_16 { pt3dadd( -7.6122, -46.5652, -40.3263, 0.28 ) }
    dend_16 { pt3dadd( -8.14723, -46.8555, -41.9249, 0.28 ) }
    dend_16 { pt3dadd( -9.26875, -47.2939, -44.4146, 0.55 ) }
    dend_16 { pt3dadd( -10.562, -47.7047, -47.5381, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -11.7095, -47.8709, -50.4761, 0.55 ) }
    dend_16 { pt3dadd( -12.616, -47.8367, -52.7226, 0.55 ) }
    dend_16 { pt3dadd( -13.2069, -47.7028, -54.3075, 0.55 ) }
    dend_16 { pt3dadd( -14.8556, -47.1367, -59.0655, 0.55 ) }
    dend_16 { pt3dadd( -16.634, -46.256, -64.0196, 0.55 ) }
    dend_16 { pt3dadd( -17.3941, -45.796, -66.0352, 0.28 ) }
    dend_16 { pt3dadd( -18.0969, -45.386, -67.9737, 0.55 ) }
    dend_16 { pt3dadd( -19.5554, -44.7661, -71.8731, 0.28 ) }
    dend_16 { pt3dadd( -20.0553, -44.589, -73.1754, 0.83 ) }
    dend_16 { pt3dadd( -21.0847, -44.2282, -75.495, 0.28 ) }
    dend_16 { pt3dadd( -21.964, -44.0728, -77.0056, 0.55 ) }
    dend_16 { pt3dadd( -23.2739, -43.9215, -79.1616, 0.28 ) }
    dend_16 { pt3dadd( -23.8145, -43.8489, -79.9976, 0.55 ) }
    dend_16 { pt3dadd( -24.8757, -43.7413, -81.4759, 0.55 ) }
    dend_16 { pt3dadd( -26.5307, -43.3332, -83.6411, 0.55 ) }
    dend_16 { pt3dadd( -27.6668, -42.9657, -84.9854, 0.28 ) }
    dend_16 { pt3dadd( -28.6427, -42.5083, -85.99, 0.55 ) }
    dend_16 { pt3dadd( -29.7801, -41.7861, -87.1847, 0.28 ) }
    dend_16 { pt3dadd( -29.9608, -41.648, -87.3887, 0.55 ) }
    dend_16 { pt3dadd( -31.3703, -40.3382, -89.6024, 0.28 ) }
    dend_16 { pt3dadd( -32.277, -39.3615, -91.3565, 0.55 ) }
    dend_16 { pt3dadd( -33.2698, -37.9412, -93.9246, 0.83 ) }
    dend_16 { pt3dadd( -33.9533, -36.7382, -96.2088, 0.28 ) }
    dend_16 { pt3dadd( -34.0998, -36.4325, -96.8369, 0.55 ) }
    dend_16 { pt3dadd( -35.0942, -34.1486, -101.818, 0.28 ) }
    dend_16 { pt3dadd( -35.2278, -33.7618, -102.741, 0.55 ) }
    dend_16 { pt3dadd( -35.5385, -32.4997, -105.562, 0.28 ) }
    dend_16 { pt3dadd( -35.6163, -32.1753, -106.293, 0.55 ) }
    dend_16 { pt3dadd( -35.8723, -31.3271, -108.1, 0.28 ) }
    dend_16 { pt3dadd( -36.0902, -30.714, -109.336, 0.55 ) }
    dend_16 { pt3dadd( -36.7746, -29.3336, -111.852, 0.28 ) }
    dend_16 { pt3dadd( -37.2162, -28.5944, -113.308, 0.55 ) }
    dend_16 { pt3dadd( -38.2572, -27.1678, -116.303, 0.28 ) }
    dend_16 { pt3dadd( -38.5778, -26.7831, -117.185, 0.55 ) }
    dend_16 { pt3dadd( -39.1144, -26.2682, -118.531, 0.28 ) }
    dend_16 { pt3dadd( -39.6013, -25.8329, -119.632, 0.55 ) }
    dend_16 { pt3dadd( -40.6964, -24.9518, -121.816, 0.28 ) }
    dend_16 { pt3dadd( -41.0406, -24.6996, -122.457, 0.55 ) }
    dend_16 { pt3dadd( -43.7337, -22.7277, -127.043, 0.28 ) }
    dend_16 { pt3dadd( -44.7635, -21.9169, -128.535, 0.55 ) }
    dend_16 { pt3dadd( -46.7116, -20.3256, -131.044, 0.28 ) }
    dend_16 { pt3dadd( -47.6123, -19.5557, -132.142, 0.55 ) }
    dend_16 { pt3dadd( -49.7878, -17.8052, -134.515, 0.28 ) }
    dend_16 { pt3dadd( -50.6199, -17.2094, -135.345, 0.55 ) }
    dend_16 { pt3dadd( -53.7865, -15.4008, -138.16, 0.28 ) }
    dend_16 { pt3dadd( -55.1297, -14.8529, -139.317, 0.55 ) }
    dend_16 { pt3dadd( -57.0884, -14.457, -140.939, 0.55 ) }
    dend_16 { pt3dadd( -58.3208, -14.3043, -141.905, 0.55 ) }
    dend_16 { pt3dadd( -60.978, -14.0613, -143.675, 0.28 ) }
    dend_16 { pt3dadd( -63.7046, -13.8447, -145.254, 0.28 ) }
    dend_16 { pt3dadd( -66.0175, -13.6527, -146.506, 0.55 ) }
    dend_16 { pt3dadd( -69.0174, -13.1478, -147.75, 0.28 ) }
    dend_16 { pt3dadd( -70.6008, -12.7062, -148.187, 0.55 ) }
    dend_16 { pt3dadd( -74.5201, -11.0739, -148.911, 0.28 ) }
    dend_16 { pt3dadd( -76.7338, -9.85812, -148.88, 0.55 ) }
    dend_16 { pt3dadd( -78.2753, -8.87742, -148.614, 0.28 ) }
    dend_16 { pt3dadd( -80.1509, -7.75975, -147.999, 0.55 ) }
    dend_16 { pt3dadd( -82.5811, -6.29206, -147.026, 0.28 ) }
    dend_16 { pt3dadd( -83.5044, -5.77291, -146.666, 0.55 ) }
    dend_16 { pt3dadd( -88.1589, -3.43569, -145.211, 0.28 ) }
    dend_16 { pt3dadd( -89.7295, -2.69586, -144.734, 0.55 ) }
    dend_16 { pt3dadd( -93.5015, -1.04574, -143.528, 0.28 ) }
    dend_16 { pt3dadd( -95.5525, -0.168324, -142.874, 0.55 ) }
    dend_16 { pt3dadd( -97.2388, 0.550583, -142.34, 0.55 ) }
    dend_16 { pt3dadd( -99.2408, 1.39627, -141.742, 0.28 ) }
    dend_16 { pt3dadd( -100.238, 1.82263, -141.565, 0.55 ) }
    dend_16 { pt3dadd( -103.518, 3.33504, -141.135, 0.28 ) }
    dend_16 { pt3dadd( -105.231, 4.29184, -140.88, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.84536, -39.8443, -13.2172, 0.55 ) }
    dend_15 { pt3dadd( -1.77762, -40.0565, -13.8916, 0.55 ) }
    dend_15 { pt3dadd( -0.674539, -40.1391, -14.5386, 0.55 ) }
    dend_15 { pt3dadd( 0.746268, -40.1409, -15.274, 0.55 ) }
    dend_15 { pt3dadd( 1.93398, -40.0476, -15.8228, 0.55 ) }
    dend_15 { pt3dadd( 9.99757, -38.6422, -18.8391, 0.55 ) }
    dend_15 { pt3dadd( 11.8275, -38.1349, -19.5383, 0.55 ) }
    dend_15 { pt3dadd( 14.5354, -37.2062, -20.6207, 0.55 ) }
    dend_15 { pt3dadd( 16.4544, -36.49, -21.3974, 0.55 ) }
    dend_15 { pt3dadd( 18.3343, -35.692, -22.1135, 0.28 ) }
    dend_15 { pt3dadd( 21.2497, -34.3144, -23.08, 0.55 ) }
    dend_15 { pt3dadd( 25.6178, -32.1417, -24.2924, 0.28 ) }
    dend_15 { pt3dadd( 25.992, -32.0211, -24.487, 0.55 ) }
    dend_15 { pt3dadd( 28.1266, -31.711, -26.3709, 0.28 ) }
    dend_15 { pt3dadd( 29.3479, -31.6102, -27.8789, 0.55 ) }
    dend_15 { pt3dadd( 30.5136, -31.6373, -29.6355, 0.55 ) }
    dend_15 { pt3dadd( 32.5575, -31.8656, -32.8208, 0.55 ) }
    dend_15 { pt3dadd( 36.5834, -32.3636, -39.0601, 0.55 ) }
    dend_15 { pt3dadd( 39.3586, -32.7487, -43.2005, 0.55 ) }
    dend_15 { pt3dadd( 40.3536, -32.8968, -44.6031, 0.55 ) }
    dend_15 { pt3dadd( 47.1117, -33.7896, -53.6629, 0.55 ) }
    dend_15 { pt3dadd( 49.0457, -33.991, -56.0373, 0.55 ) }
    dend_15 { pt3dadd( 50.2307, -34.1054, -57.287, 0.55 ) }
    dend_15 { pt3dadd( 53.2436, -34.4673, -59.9564, 0.55 ) }
    dend_15 { pt3dadd( 60.8324, -35.7922, -65.9285, 0.55 ) }
    dend_15 { pt3dadd( 62.9425, -36.2471, -67.4471, 0.28 ) }
    dend_15 { pt3dadd( 64.2078, -36.5663, -68.2183, 0.55 ) }
    dend_15 { pt3dadd( 66.1023, -37.1217, -69.3239, 0.28 ) }
    dend_15 { pt3dadd( 66.9121, -37.4323, -69.7169, 0.55 ) }
    dend_15 { pt3dadd( 69.5378, -38.7116, -70.2332, 0.28 ) }
    dend_15 { pt3dadd( 71.2387, -40.2849, -69.5109, 0.55 ) }
    dend_15 { pt3dadd( 72.2144, -41.3906, -69.0024, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 73.0361, -42.5936, -68.4093, 0.55 ) }
    dend_15 { pt3dadd( 73.6997, -43.8904, -67.8053, 0.28 ) }
    dend_15 { pt3dadd( 73.9862, -44.5565, -67.5552, 0.55 ) }
    dend_15 { pt3dadd( 74.5979, -46.293, -66.8963, 0.28 ) }
    dend_15 { pt3dadd( 74.7866, -46.8136, -66.7956, 0.55 ) }
    dend_15 { pt3dadd( 75.9401, -49.8047, -66.3811, 0.28 ) }
    dend_15 { pt3dadd( 76.599, -51.1971, -66.3357, 0.55 ) }
    dend_15 { pt3dadd( 78.2725, -54.1884, -66.4946, 0.28 ) }
    dend_15 { pt3dadd( 78.9921, -55.2964, -66.6436, 0.55 ) }
    dend_15 { pt3dadd( 81.5965, -58.9471, -67.267, 0.28 ) }
    dend_15 { pt3dadd( 82.2536, -59.8363, -67.4506, 0.55 ) }
    dend_15 { pt3dadd( 84.3118, -62.6543, -68.1632, 0.28 ) }
    dend_15 { pt3dadd( 84.734, -63.3116, -68.3025, 0.55 ) }
    dend_15 { pt3dadd( 85.7889, -65.0465, -68.6846, 0.28 ) }
    dend_15 { pt3dadd( 86.4576, -66.0573, -68.9917, 0.55 ) }
    dend_15 { pt3dadd( 87.1845, -67.0539, -69.3491, 0.55 ) }
    dend_15 { pt3dadd( 88.6285, -69.0416, -70.0478, 0.28 ) }
    dend_15 { pt3dadd( 89.6966, -70.2798, -70.5554, 0.55 ) }
    dend_15 { pt3dadd( 93.2634, -73.4145, -72.176, 0.28 ) }
    dend_15 { pt3dadd( 94.705, -74.4454, -72.8483, 0.55 ) }
    dend_15 { pt3dadd( 95.7107, -75.1036, -73.2909, 0.28 ) }
    dend_15 { pt3dadd( 96.7429, -75.709, -73.7197, 0.55 ) }
    dend_15 { pt3dadd( 99.959, -77.4174, -74.9722, 0.28 ) }
    dend_15 { pt3dadd( 102.384, -78.7384, -75.8619, 0.55 ) }
    dend_15 { pt3dadd( 106.44, -81.2202, -77.105, 0.28 ) }
    dend_15 { pt3dadd( 107.717, -81.9931, -77.4901, 0.55 ) }
    dend_15 { pt3dadd( 110.137, -83.4133, -78.0396, 0.28 ) }
    dend_15 { pt3dadd( 110.931, -83.8782, -78.1645, 0.55 ) }
    dend_15 { pt3dadd( 112.166, -84.6165, -78.1604, 0.28 ) }
    dend_15 { pt3dadd( 113.232, -85.2387, -78.0703, 0.55 ) }
    dend_15 { pt3dadd( 116.045, -86.7824, -77.5457, 0.28 ) }
    dend_15 { pt3dadd( 119.27, -88.429, -76.8909, 0.28 ) }
    dend_15 { pt3dadd( 120.871, -89.19, -76.4485, 0.28 ) }
    dend_15 { pt3dadd( 122.526, -89.9118, -76.0957, 0.55 ) }
    dend_15 { pt3dadd( 124.959, -90.8627, -75.5877, 0.28 ) }
    dend_15 { pt3dadd( 126.036, -91.2698, -75.3399, 0.83 ) }
    dend_15 { pt3dadd( 128.74, -92.339, -74.6091, 0.28 ) }
    dend_15 { pt3dadd( 129.934, -92.83, -74.3551, 0.55 ) }
    dend_15 { pt3dadd( 135.243, -95.1808, -73.4712, 0.28 ) }
    dend_15 { pt3dadd( 137.966, -96.3913, -73.2288, 0.28 ) }
    dend_15 { pt3dadd( 139.985, -97.2747, -73.1711, 0.55 ) }
    dend_15 { pt3dadd( 141.198, -97.8147, -73.2574, 0.55 ) }
    dend_15 { pt3dadd( 144.48, -99.2919, -73.7108, 0.28 ) }
    dend_15 { pt3dadd( 147.565, -100.793, -74.2451, 0.55 ) }
    dend_15 { pt3dadd( 150.364, -102.233, -74.7337, 0.28 ) }
    dend_15 { pt3dadd( 152.925, -103.57, -75.2922, 0.55 ) }
    dend_15 { pt3dadd( 155.042, -104.653, -75.7425, 0.28 ) }
    dend_15 { pt3dadd( 156.766, -105.434, -76.0284, 0.55 ) }
    dend_15 { pt3dadd( 160.907, -107.115, -76.5475, 0.28 ) }
    dend_15 { pt3dadd( 162.986, -107.962, -76.735, 0.55 ) }
    dend_15 { pt3dadd( 166.08, -109.239, -76.9156, 0.28 ) }
    dend_15 { pt3dadd( 168.604, -110.22, -77.01, 0.55 ) }
    dend_15 { pt3dadd( 174.545, -112.291, -77.2344, 0.28 ) }
    dend_15 { pt3dadd( 177.019, -113.019, -77.4673, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.31918, -138.389, 104.79, 0.55 ) }
    dend_9 { pt3dadd( -0.223659, -146.996, 109.304, 0.55 ) }
    dend_9 { pt3dadd( 2.17907, -156.119, 111.656, 0.55 ) }
    dend_9 { pt3dadd( 3.80182, -165.012, 115.31, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.31918, -138.389, 104.79, 0.55 ) }
    dend_8 { pt3dadd( 0.237691, -145.852, 111.152, 0.55 ) }
    dend_8 { pt3dadd( -0.0228401, -152.514, 118.616, 0.55 ) }
    dend_8 { pt3dadd( -0.829838, -157.62, 127.302, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -5.00327, -138.677, 105.158, 0.55 ) }
    dend_6 { pt3dadd( -4.24828, -146.137, 109.756, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.00327, -138.677, 105.158, 0.55 ) }
    dend_5 { pt3dadd( -5.98617, -148.887, 111.521, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.1832, -105.987, 10.8227, 0.83 ) }
    dend_25 { pt3dadd( 11.8896, -108.616, 11.3773, 0.83 ) }
    dend_25 { pt3dadd( 12.5677, -110.821, 12.0322, 0.83 ) }
    dend_25 { pt3dadd( 13.2417, -113.014, 12.6831, 0.83 ) }
    dend_25 { pt3dadd( 13.8818, -115.096, 13.3013, 0.83 ) }
    dend_25 { pt3dadd( 14.8683, -118.305, 14.254, 0.83 ) }
    dend_25 { pt3dadd( 15.8476, -121.49, 15.1998, 0.83 ) }
    dend_25 { pt3dadd( 16.6342, -123.583, 16.1387, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 11.1832, -105.987, 10.8227, 0.55 ) }
    dend_24 { pt3dadd( 12.2491, -107.291, 11.1411, 0.55 ) }
    dend_24 { pt3dadd( 13.1221, -108.311, 11.1991, 0.55 ) }
    dend_24 { pt3dadd( 13.7537, -109.068, 11.1526, 0.55 ) }
    dend_24 { pt3dadd( 14.386, -109.965, 10.9394, 0.83 ) }
    dend_24 { pt3dadd( 15.0707, -110.99, 10.5476, 0.55 ) }
    dend_24 { pt3dadd( 15.7405, -111.992, 10.1643, 0.83 ) }
    dend_24 { pt3dadd( 16.4328, -113.084, 9.62553, 0.55 ) }
    dend_24 { pt3dadd( 16.8506, -113.717, 9.25134, 0.83 ) }
    dend_24 { pt3dadd( 18.1604, -115.775, 7.8489, 0.55 ) }
    dend_24 { pt3dadd( 19.0807, -117.4, 6.60386, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -22.5765, -121.366, 54.7555, 0.55 ) }
    dend_20 { pt3dadd( -28.3939, -131.232, 60.54, 0.55 ) }
    dend_20 { pt3dadd( -36.0472, -139.981, 66.1975, 0.55 ) }
    dend_20 { pt3dadd( -44.7304, -147.602, 72.166, 0.55 ) }
    dend_20 { pt3dadd( -54.5926, -153.823, 78.097, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -22.5765, -121.366, 54.7555, 0.55 ) }
    dend_19 { pt3dadd( -28.1462, -131.363, 62.3166, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.6342, -123.583, 16.1387, 0.55 ) }
    dend_27 { pt3dadd( 16.7754, -125.549, 16.7603, 0.55 ) }
    dend_27 { pt3dadd( 17.0175, -128.053, 17.6315, 0.55 ) }
    dend_27 { pt3dadd( 17.2491, -130.418, 18.4403, 0.55 ) }
    dend_27 { pt3dadd( 17.3974, -132.101, 18.9851, 0.55 ) }
    dend_27 { pt3dadd( 17.6343, -135.107, 19.9027, 0.55 ) }
    dend_27 { pt3dadd( 18.4707, -143.557, 22.2753, 0.55 ) }
    dend_27 { pt3dadd( 18.8478, -146.425, 22.9615, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 19.1383, -148.45, 23.3392, 0.55 ) }
    dend_27 { pt3dadd( 19.5201, -150.767, 23.578, 0.55 ) }
    dend_27 { pt3dadd( 19.8089, -152.564, 23.5905, 0.55 ) }
    dend_27 { pt3dadd( 20.6424, -156.761, 23.457, 0.55 ) }
    dend_27 { pt3dadd( 21.159, -159.954, 23.334, 0.55 ) }
    dend_27 { pt3dadd( 21.5476, -162.046, 23.3268, 0.55 ) }
    dend_27 { pt3dadd( 22.4916, -167.464, 23.5973, 0.55 ) }
    dend_27 { pt3dadd( 23.0766, -171.104, 23.9456, 0.55 ) }
    dend_27 { pt3dadd( 23.8132, -175.788, 24.6764, 0.55 ) }
    dend_27 { pt3dadd( 24.6584, -181.088, 25.948, 0.55 ) }
    dend_27 { pt3dadd( 25.3572, -184.611, 27.0531, 0.55 ) }
    dend_27 { pt3dadd( 25.8151, -186.688, 27.773, 0.55 ) }
    dend_27 { pt3dadd( 26.2002, -188.605, 28.4254, 0.55 ) }
    dend_27 { pt3dadd( 26.7494, -191.034, 29.1359, 0.55 ) }
    dend_27 { pt3dadd( 28.0608, -196.903, 30.4157, 0.55 ) }
    dend_27 { pt3dadd( 28.6629, -199.171, 30.8329, 0.55 ) }
    dend_27 { pt3dadd( 29.2719, -201.702, 31.2701, 0.55 ) }
    dend_27 { pt3dadd( 30.1562, -205.504, 31.901, 0.55 ) }
    dend_27 { pt3dadd( 30.6873, -208.436, 32.3955, 0.55 ) }
    dend_27 { pt3dadd( 31.0269, -211.232, 32.8031, 0.55 ) }
    dend_27 { pt3dadd( 31.2255, -213.905, 33.1748, 0.55 ) }
    dend_27 { pt3dadd( 31.3666, -216.516, 33.5707, 0.55 ) }
    dend_27 { pt3dadd( 31.4818, -218.374, 33.8347, 0.55 ) }
    dend_27 { pt3dadd( 31.7062, -221.415, 34.1589, 0.55 ) }
    dend_27 { pt3dadd( 31.9654, -225.077, 34.2478, 0.55 ) }
    dend_27 { pt3dadd( 32.1605, -226.856, 34.1572, 0.55 ) }
    dend_27 { pt3dadd( 32.3682, -228.421, 33.9558, 0.55 ) }
    dend_27 { pt3dadd( 32.9298, -231.367, 33.4117, 0.55 ) }
    dend_27 { pt3dadd( 33.2741, -233.238, 33.0091, 0.55 ) }
    dend_27 { pt3dadd( 33.712, -235.539, 32.6085, 0.55 ) }
    dend_27 { pt3dadd( 33.94, -237.159, 32.4212, 0.55 ) }
    dend_27 { pt3dadd( 34.4271, -241.37, 32.0965, 0.55 ) }
    dend_27 { pt3dadd( 34.6746, -244.522, 32.0796, 0.55 ) }
    dend_27 { pt3dadd( 34.909, -249.397, 32.4617, 0.55 ) }
    dend_27 { pt3dadd( 35.0844, -252.531, 33.0308, 0.55 ) }
    dend_27 { pt3dadd( 35.2248, -255.82, 33.7375, 0.28 ) }
    dend_27 { pt3dadd( 35.2379, -257.143, 34.074, 0.28 ) }
    dend_27 { pt3dadd( 35.2071, -260.348, 35.1964, 0.28 ) }
    dend_27 { pt3dadd( 35.1117, -263.304, 36.4777, 0.28 ) }
    dend_27 { pt3dadd( 35.3013, -267.178, 38.6539, 0.28 ) }
    dend_27 { pt3dadd( 37.3048, -275.874, 41.3467, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 16.6342, -123.583, 16.1387, 0.55 ) }
    dend_26 { pt3dadd( 17.9407, -124.056, 17.3847, 0.55 ) }
    dend_26 { pt3dadd( 20.5003, -125.311, 20.161, 0.55 ) }
    dend_26 { pt3dadd( 22.6479, -126.568, 22.6657, 0.28 ) }
    dend_26 { pt3dadd( 24.9023, -128.008, 25.4343, 0.55 ) }
    dend_26 { pt3dadd( 26.1165, -128.931, 27.3218, 0.28 ) }
    dend_26 { pt3dadd( 28.0451, -130.601, 30.8515, 0.55 ) }
    dend_26 { pt3dadd( 28.6222, -131.504, 32.6581, 0.28 ) }
    dend_26 { pt3dadd( 28.7733, -131.831, 33.3877, 0.28 ) }
    dend_26 { pt3dadd( 29.0233, -132.29, 34.6558, 0.55 ) }
    dend_26 { pt3dadd( 30.1796, -133.763, 39.3716, 0.28 ) }
    dend_26 { pt3dadd( 30.7134, -134.33, 41.3293, 0.55 ) }
    dend_26 { pt3dadd( 32.7018, -135.963, 46.8275, 0.28 ) }
    dend_26 { pt3dadd( 33.9069, -136.754, 49.6681, 0.28 ) }
    dend_26 { pt3dadd( 35.5401, -137.774, 53.0623, 0.55 ) }
    dend_26 { pt3dadd( 38.2545, -139.366, 57.7897, 0.28 ) }
    dend_26 { pt3dadd( 38.6674, -139.577, 58.3748, 0.55 ) }
    dend_26 { pt3dadd( 40.8377, -140.599, 61.0844, 0.28 ) }
    dend_26 { pt3dadd( 41.0545, -140.694, 61.305, 0.55 ) }
    dend_26 { pt3dadd( 42.9338, -141.867, 63.3228, 0.28 ) }
    dend_26 { pt3dadd( 43.7865, -142.516, 64.3451, 0.55 ) }
    dend_26 { pt3dadd( 50.7209, -147.267, 72.8103, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -54.5926, -153.823, 78.097, 0.55 ) }
    dend_22 { pt3dadd( -62.5032, -159.056, 85.2658, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -54.5926, -153.823, 78.097, 0.55 ) }
    dend_21 { pt3dadd( -61.4082, -161.588, 81.6939, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 11
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 11
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_BP_de7da8c370_0_0


