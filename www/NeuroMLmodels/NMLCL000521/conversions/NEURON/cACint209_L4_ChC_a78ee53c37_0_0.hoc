// Cell: cACint209_L4_ChC_a78ee53c37_0_0
/*
{
  "id" : "cACint209_L4_ChC_a78ee53c37_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 10.8306, -3.45834, 0.37", "-0.0380917, 12.3767, -3.57275, 0.37", "-0.111472, 12.7967, -3.65539, 0.74", "-0.0641858, 13.1277, -3.78219, 0.74", "0.333818, 14.1441, -4.2645, 0.37", "0.725341, 14.9567, -4.62304, 0.66", "1.18295, 15.7954, -5.00603, 1.33", "1.61399, 16.4208, -5.30474, 1.33", "2.33939, 17.4538, -5.8066, 0.74", "2.88124, 18.2795, -6.18453, 0.74", "3.70695, 19.6447, -6.80811, 1.25", "4.22729, 20.7422, -7.28811, 2.06", "4.49126, 21.5616, -7.60871, 2.06", "4.67309, 22.6714, -8.0049, 1.4", "4.60407, 23.953, -8.44611, 0.74", "4.29978, 24.7935, -8.73816, 1.11", "3.77034, 25.4377, -8.96424, 1.11", "3.00698, 25.9882, -9.14324, 0.81", "2.00165, 26.4531, -9.38995, 0.81", "0.773165, 26.8311, -9.71444, 0.81", "-0.424576, 27.1081, -10.0651, 0.96", "-1.4134, 27.3357, -10.3662, 1.11", "-2.30171, 27.5665, -10.6874, 1.11", "-4.23142, 28.1909, -11.5302, 1.11", "-4.80158, 28.4476, -11.8401, 1.11", "-5.72129, 29.1301, -12.477, 0.59", "-6.26479, 29.8621, -12.9372, 0.96", "-6.58623, 30.5379, -13.2418, 1.25", "-6.8131, 31.1474, -13.4504, 1.55", "-6.95073, 31.5314, -13.5402, 1.55", "-7.44222, 32.7102, -13.7905, 0.74", "-8.2144, 34.1359, -14.0886, 0.96", "-8.8539, 35.0003, -14.3037, 0.66", "-9.38462, 35.544, -14.4714, 0.66", "-10.2369, 36.2197, -14.7372, 0.81", "-10.9443, 36.6637, -14.965, 0.96", "-11.875, 37.1404, -15.2889, 1.47", "-12.7326, 37.552, -15.604, 1.62", "-13.5424, 38.0006, -15.9103, 1.47", "-14.2962, 38.5039, -16.2104, 1.11", "-15.1477, 39.1959, -16.574, 0.81", "-16.1502, 40.2263, -17.0666, 0.66", "-16.689, 40.9372, -17.3657, 0.81", "-17.3818, 42.137, -17.8132, 1.03", "-17.6496, 42.7622, -18.0393, 1.25", "-17.8403, 43.344, -18.2595, 1.25", "-18.185, 44.5996, -18.7818, 0.96", "-18.4418, 45.5688, -19.2427, 0.81", "-18.7998, 46.7645, -19.8883, 0.59", "-19.095, 47.5953, -20.3679, 0.59", "-19.501, 48.5796, -20.9428, 0.59", "-19.9471, 49.546, -21.4876, 0.59", "-20.3792, 50.4508, -21.9102, 0.44", "-20.7887, 51.3955, -22.2342, 0.66", "-21.1061, 52.4047, -22.4116, 0.74", "-21.209, 53.0381, -22.443, 0.96", "-21.2187, 53.7468, -22.4195, 0.96", "-21.0598, 55.3198, -22.3883, 0.52", "-20.8402, 56.5954, -22.4065, 0.59", "-20.5494, 58.0419, -22.4851, 0.59", "-20.3995, 58.8502, -22.5666, 0.96", "-20.2844, 59.7828, -22.7088, 0.96", "-20.2483, 61.4388, -23.0675, 0.66", "-20.4309, 62.5771, -23.4369, 0.66", "-20.8337, 63.4991, -23.8213, 0.96", "-21.2995, 64.0583, -24.0767, 1.03", "-21.8941, 64.5097, -24.3192, 1.03", "-22.6844, 64.9205, -24.6108, 1.03", "-23.7496, 65.3063, -25.0334, 0.74", "-24.5879, 65.5437, -25.4502, 0.74", "-25.1471, 65.6714, -25.7894, 0.52", "-26.3844, 65.9004, -26.7032, 0.52", "-27.4315, 66.0537, -27.57, 0.52", "-28.4993, 66.1753, -28.4952, 1.11", "-29.0799, 66.2276, -28.982, 1.4", "-29.7392, 66.2684, -29.4769, 1.4", "-30.8662, 66.2972, -30.1796, 0.81", "-31.5611, 66.3116, -30.4637, 0.59", "-32.6074, 66.3613, -30.6872, 0.44", "-33.6586, 66.4585, -30.7479, 0.44", "-34.7246, 66.6215, -30.7167, 0.74", "-35.7432, 66.8934, -30.637, 1.33", "-36.9821, 67.4289, -30.565, 0.88", "-37.5312, 67.787, -30.6418, 0.59", "-37.8713, 68.1011, -30.781, 0.59", "-38.35, 68.6569, -31.131, 0.74", "-38.9421, 69.4363, -31.7434, 0.96", "-39.7066, 70.4508, -32.6806, 0.59", "-40.4977, 71.4413, -33.7225, 0.59", "-40.9093, 71.9388, -34.2427, 0.81", "-41.4292, 72.508, -34.8128, 0.96", "-41.9275, 72.9697, -35.2396, 1.03", "-42.7714, 73.6718, -35.7804, 0.66", "-43.0299, 73.8943, -35.9145, 0.66", "-43.7242, 74.5943, -36.2489, 0.81", "-44.3367, 75.3522, -36.6095, 0.81", "-44.8024, 76.1344, -36.9639, 0.66", "-45.1819, 76.9673, -37.3257, 0.66", "-45.6542, 78.263, -37.8783, 0.52", "-45.9244, 79.0719, -38.2345, 0.81", "-46.1232, 79.6751, -38.5114, 0.74", "-46.6039, 80.9692, -39.0988, 0.59", "-46.8972, 81.6018, -39.362, 0.74", "-47.2892, 82.2279, -39.5896, 0.96", "-47.8945, 82.98, -39.77, 0.96", "-48.4242, 83.5606, -39.8569, 0.74", "-49.1575, 84.3151, -39.9169, 1.03", "-49.6868, 84.8434, -39.8696, 1.25", "-50.058, 85.2434, -39.7936, 0.81", "-50.8458, 86.1878, -39.5494, 0.59", "-51.3258, 86.8287, -39.3472, 0.66", "-51.7241, 87.4095, -39.1448, 0.66", "-52.7571, 89.0175, -38.5422, 0.88", "-53.2808, 89.8411, -38.2094, 1.11", "-53.6408, 90.4043, -37.9588, 1.03", "-54.0788, 91.0842, -37.6471, 1.25", "-54.2424, 91.337, -37.5207, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.67164, -4.39834, 1.11", "4.77559, 10.2452, -4.76833, 1.11", "5.23249, 10.7032, -5.07322, 1.11", "5.96145, 11.4691, -5.55917, 1.11", "6.46144, 12.0209, -5.92501, 0.96", "7.2896, 12.8401, -6.46559, 1.55", "8.00988, 13.4951, -6.90066, 1.62", "8.43407, 13.8391, -7.13821, 1.62", "9.08958, 14.3165, -7.42678, 1.25", "10.1886, 15.0341, -7.76415, 0.96", "11.8675, 16.0201, -8.07029, 0.88", "12.6556, 16.4209, -8.11811, 1.55", "13.5161, 16.7981, -8.09735, 1.84", "14.8067, 17.3048, -7.99624, 1.11", "15.4842, 17.5593, -7.90754, 1.03", "16.2423, 17.8734, -7.75989, 1.25", "16.9756, 18.2675, -7.60619, 0.88", "17.6519, 18.7184, -7.46504, 0.88", "18.2852, 19.2108, -7.33468, 0.88", "19.0288, 19.8235, -7.1765, 0.88", "19.6646, 20.3814, -6.97172, 0.96", "20.3225, 21.0063, -6.72587, 0.96", "20.9229, 21.639, -6.45817, 0.81", "21.8064, 22.6272, -5.98643, 1.11", "22.3858, 23.2535, -5.61974, 1.4", "23.0533, 23.8818, -5.12376, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.33214, 2.16166, 1.62", "4.39617, 8.67435, 2.63715, 1.62", "5.11897, 9.08416, 3.28809, 1.25", "6.43391, 9.65617, 4.60824, 1.25", "7.12926, 9.91629, 5.3532, 1.25", "7.8548, 10.1009, 6.22345, 1.92", "8.16182, 10.1517, 6.61443, 2.5", "8.82948, 10.1689, 7.53858, 2.5", "10.2105, 10.0068, 9.59373, 1.77", "11.1683, 9.72241, 11.0161, 0.96", "12.5198, 9.18105, 13.018, 0.88", "12.9062, 9.00563, 13.5994, 0.88", "13.211, 8.87266, 14.0443, 1.4", "13.5123, 8.76339, 14.4331, 1.4", "14.6113, 8.52835, 15.5462, 0.66", "15.0774, 8.55459, 15.9181, 0.66", "16.1844, 8.97396, 16.5733, 0.88", "16.8799, 9.3462, 16.9287, 0.88", "17.7534, 9.90195, 17.2747, 0.74", "18.4045, 10.3725, 17.4698, 1.4", "19.1539, 10.9606, 17.6062, 2.06", "19.8918, 11.5215, 17.6636, 1.84", "20.7768, 12.1631, 17.6132, 1.18", "21.6975, 12.7823, 17.5853, 1.18", "22.0714, 13.0019, 17.6382, 1.03", "22.6963, 13.2967, 17.8978, 1.03", "23.1099, 13.4565, 18.3147, 0.59", "23.4938, 13.6257, 18.9297, 0.59", "24.2462, 14.0172, 20.4619, 0.88", "25.1213, 14.5479, 22.4775, 1.62", "25.4974, 14.8081, 23.354, 1.62", "26.3724, 15.4642, 25.3811, 0.88", "26.78, 15.7689, 26.2645, 0.88", "27.156, 16.0595, 26.995, 1.47", "27.4202, 16.2665, 27.414, 1.47", "28.0998, 16.758, 28.2309, 0.81", "28.4788, 16.9836, 28.5967, 0.59", "28.8842, 17.1665, 28.9161, 0.59", "29.8731, 17.5636, 29.7042, 1.25", "31.4284, 18.2092, 31.0011, 0.74", "31.9156, 18.4577, 31.4556, 0.29", "32.3491, 18.6981, 31.9149, 0.29", "32.5974, 18.8361, 32.2146, 0.59", "33.2548, 19.2146, 33.0248, 1.11", "33.587, 19.3824, 33.4223, 1.11", "34.2999, 19.9805, 34.2757, 1.11", "34.7026, 20.5246, 34.9542, 0.59", "34.7136, 18.9641, 35.0658, 0.59", "34.8515, 17.355, 35.4812, 0.52", "34.9469, 16.2311, 35.7684, 0.59", "41.0756, 18.0969, 41.2312, 0.59", "47.503, 20.6781, 45.9815, 0.59", "52.815, 24.4142, 51.2329, 0.59", "58.0777, 28.9058, 55.8384, 0.59", "64.1971, 33.7254, 58.6801, 0.59", "69.71, 38.7981, 62.1952, 0.59", "75.5268, 42.9772, 66.4466, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.11864, 1.60166, 1.69", "-3.56761, 6.11864, 1.60166, 1.69", "-4.32775, 6.4901, 1.89211, 1.69", "-5.27895, 6.85245, 2.28658, 1.4", "-5.98944, 7.06979, 2.68281, 1.03", "-6.9874, 7.3756, 3.31333, 0.88", "-7.68585, 7.60456, 3.78818, 0.88", "-8.5982, 7.85782, 4.48763, 0.59", "-9.4522, 8.07186, 5.20517, 0.44", "-11.0574, 8.44674, 6.63653, 0.37", "-11.6173, 8.57537, 7.15265, 0.37", "-12.5363, 8.78958, 8.01941, 0.37", "-14.7401, 9.3214, 10.1913, 1.03", "-15.2469, 9.45928, 10.7088, 1.62", "-26.2083, 10.144, 15.2681, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.13936, -14.5883, 0.74", "-5.22285, -2.00332, -14.5793, 0.74", "-6.80509, -2.97944, -14.5708, 1.03", "-8.189, -3.81642, -14.5919, 1.25", "-9.29562, -4.49565, -14.621, 1.62", "-10.2024, -5.04286, -14.6495, 1.84", "-11.3915, -5.71817, -14.6574, 1.84", "-12.4448, -6.24587, -14.6096, 1.99", "-13.5516, -6.7237, -14.5042, 2.21", "-14.8447, -7.18717, -14.3171, 2.65", "-15.762, -7.46198, -14.1701, 2.5", "-17.312, -7.86813, -13.9345, 1.77", "-18.9536, -8.27794, -13.7381, 1.33", "-20.0697, -8.56399, -13.6853, 1.18", "-21.3929, -8.91637, -13.7694, 1.11", "-22.3333, -9.19859, -14.0351, 1.11", "-23.3021, -9.53023, -14.6269, 1.11", "-24.2276, -9.8737, -15.5349, 1.4", "-25.1488, -10.1966, -16.7086, 1.03", "-25.9247, -10.4376, -17.8458, 0.88", "-27.0792, -10.714, -19.7089, 0.88", "-28.3268, -10.906, -21.9093, 1.47", "-29.2705, -10.9916, -23.6544, 1.77", "-30.3269, -11.0084, -25.6845, 1.84", "-30.7005, -10.987, -26.4214, 2.06", "-31.3773, -10.9056, -27.7921, 1.77", "-32.4199, -10.6958, -29.8515, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.90886, 9.10166, 2.06", "-5.36761, -1.90886, 9.10166, 2.06", "-6.28048, -1.82219, 9.5845, 2.06", "-6.96677, -1.7879, 9.91985, 2.06", "-8.74757, -1.81364, 10.748, 1.84", "-9.73897, -1.90053, 11.1956, 1.84", "-10.4974, -2.02124, 11.5344, 1.99", "-11.8622, -2.34703, 12.1424, 1.55", "-12.9725, -2.73412, 12.6246, 1.03", "-13.8701, -3.14878, 12.9844, 0.88", "-14.7417, -3.66787, 13.2372, 1.18", "-15.446, -4.14082, 13.391, 1.18", "-15.9859, -4.53685, 13.4803, 1.47", "-16.7872, -5.18405, 13.5501, 1.25", "-17.5761, -5.84804, 13.6543, 1.03", "-18.2875, -6.43963, 13.8136, 1.62", "-19.0001, -7.01869, 14.0783, 1.69", "-19.5495, -7.43857, 14.361, 1.33", "-20.5309, -8.12905, 15.0288, 1.03", "-21.7397, -8.84112, 16.0804, 0.88", "-22.5848, -9.21956, 17.0168, 1.11", "-23.3171, -9.40836, 17.9784, 1.33", "-23.7737, -9.42752, 18.6543, 1.33", "-24.2239, -9.31644, 19.3524, 1.18", "-24.7596, -9.02346, 20.1594, 0.88", "-25.5214, -8.47954, 21.144, 1.18", "-25.9965, -8.1519, 21.6786, 1.33", "-26.4153, -7.93735, 22.0957, 1.33", "-27.1373, -7.73734, 22.772, 0.59", "-28.1276, -7.7872, 23.6136, 0.52", "-28.63, -8.07737, 23.981, 0.59", "-29.3306, -8.98133, 24.534, 0.59", "-30.0053, -10.2244, 25.2066, 0.59", "-30.355, -10.9655, 25.5995, 1.03", "-30.7555, -11.891, 26.1351, 1.03", "-31.0865, -12.6607, 26.6254, 1.03", "-31.7107, -13.9468, 27.6254, 1.03", "-32.3023, -14.7952, 28.5722, 0.66", "-32.8007, -15.1867, 29.3007, 0.66", "-33.679, -15.5108, 30.4548, 0.74", "-34.3, -15.6135, 31.2163, 0.81", "-34.8776, -15.6516, 31.8983, 0.52", "-35.9244, -15.666, 33.037, 0.52", "-36.3728, -15.697, 33.5297, 0.44", "-37.0255, -15.9696, 34.3976, 0.37", "-37.3394, -16.3918, 34.9065, 0.37", "-37.6306, -17.0324, 35.4267, 1.11", "-37.8792, -17.6895, 35.8332, 1.4", "-38.1185, -18.5549, 36.2713, 1.4", "-38.4127, -19.8688, 36.8753, 0.81", "-38.6108, -20.8582, 37.2798, 0.29", "-38.7874, -21.5125, 37.5583, 0.29", "-38.9961, -22.0378, 37.7965, 0.29", "-44.7388, -25.7201, 44.1829, 0.29", "-51.6885, -29.4944, 49.1533, 0.29", "-58.0468, -33.2603, 54.8669, 0.29", "-63.9473, -35.8602, 61.6848, 0.29", "-69.8619, -38.5756, 68.4403, 0.29", "-76.6668, -42.6077, 73.3867, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.47136, 6.85166, 1.77", "-2.19761, -5.47136, 6.85166, 1.77", "-2.17939, -6.56314, 6.99409, 1.77", "-2.15041, -8.43492, 7.22801, 1.47", "-2.13443, -10.3187, 7.43967, 1.25", "-2.16172, -11.7577, 7.58269, 1.62", "-2.21625, -12.9719, 7.69045, 1.92", "-2.29101, -14.0309, 7.78584, 2.14", "-2.42647, -15.3495, 7.90229, 2.14", "-2.70572, -17.1799, 8.06404, 1.55", "-3.06117, -18.9014, 8.20558, 1.33", "-3.38309, -20.2056, 8.32476, 1.55", "-3.62216, -21.0294, 8.40287, 1.92", "-3.96188, -22.0286, 8.53367, 2.21", "-4.21632, -22.6872, 8.63973, 2.5", "-4.51383, -23.4644, 8.79198, 2.5", "-4.78731, -24.3217, 8.97382, 2.36", "-5.08152, -25.4979, 9.23031, 1.69", "-5.36432, -27.0401, 9.55333, 1.25", "-5.50816, -28.4812, 9.84451, 1.4", "-5.51425, -29.76, 10.0715, 1.62", "-5.36636, -31.3208, 10.3116, 2.06", "-5.18631, -32.2827, 10.4482, 2.36", "-5.00419, -32.9063, 10.5252, 2.36", "-4.55488, -34.0949, 10.6489, 2.14", "-3.82323, -35.7628, 10.8082, 1.62", "-3.17761, -37.1676, 10.9263, 1.25", "-2.51538, -38.6169, 11.0638, 1.03", "-1.80853, -40.2464, 11.2522, 1.03", "-1.282, -41.6111, 11.4452, 1.03", "-0.70877, -43.3774, 11.76, 1.03", "-0.458809, -44.4293, 11.9895, 0.96", "-0.382982, -45.2604, 12.1999, 0.96", "-0.485893, -46.0013, 12.4101, 0.96", "-0.959112, -46.9769, 12.7602, 0.96", "-1.42192, -47.5072, 12.9803, 0.88", "-1.90743, -47.8991, 13.1527, 1.18", "-2.69121, -48.4432, 13.3726, 1.18", "-3.45044, -48.9403, 13.5674, 1.33", "-4.32463, -49.5043, 13.8104, 1.33", "-5.07623, -49.996, 14.0458, 1.4", "-5.88194, -50.5567, 14.3369, 1.55", "-6.65371, -51.1506, 14.6794, 1.55", "-7.52726, -51.962, 15.1714, 1.84", "-8.05626, -52.5545, 15.5203, 2.14", "-8.57438, -53.2688, 15.8947, 1.99", "-9.29704, -54.5589, 16.4932, 0.88", "-9.7905, -55.7504, 16.9637, 0.88", "-10.2065, -57.1577, 17.433, 0.81", "-10.4393, -58.402, 17.7516, 0.74", "-10.6555, -59.973, 18.1014, 0.74", "-10.7614, -61.4406, 18.3804, 1.03", "-10.7573, -62.7593, 18.5595, 1.4", "-10.7101, -63.5798, 18.6252, 1.69", "-10.6124, -64.4996, 18.6512, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.49936, -2.20834, 3.39", "1.44239, -9.49936, -2.20834, 3.39", "1.98722, -11.1217, -2.36225, 3.39", "2.42715, -12.4305, -2.55051, 3.02", "2.87259, -13.7557, -2.74113, 3.02", "3.45832, -15.4983, -2.99179, 3.02", "4.08751, -17.3702, -3.26104, 3.24", "4.56199, -18.7504, -3.48079, 3.54", "5.10069, -20.2376, -3.773, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-54.2424, 91.337, -37.5207, 0.44", "-55.2733, 92.2951, -38.1498, 0.44", "-55.737, 92.7655, -38.4245, 0.37", "-55.9444, 93.0314, -38.5227, 0.66", "-56.2615, 93.5186, -38.6495, 0.66", "-56.5621, 94.0718, -38.7546, 0.59", "-56.7448, 94.4885, -38.8177, 0.81", "-56.8807, 95.0129, -38.8319, 0.81", "-56.9872, 96.2166, -38.8465, 0.52", "-56.9325, 96.7822, -38.8616, 0.52", "-56.6859, 97.6442, -38.9248, 0.44", "-56.3035, 98.45, -39.0467, 0.44", "-55.7919, 99.2128, -39.2348, 0.74", "-55.3401, 99.7366, -39.4076, 0.74", "-54.596, 100.446, -39.7226, 0.44", "-54.0292, 100.938, -39.9401, 0.59", "-53.4592, 101.418, -40.1618, 0.59", "-52.8889, 101.916, -40.407, 0.59", "-52.4443, 102.356, -40.6357, 0.37", "-52.1214, 102.708, -40.8256, 0.37", "-51.6356, 103.264, -41.1348, 0.59", "-51.1572, 103.795, -41.4472, 0.37", "-50.7252, 104.253, -41.7266, 0.81", "-50.2735, 104.713, -42.0223, 0.81", "-49.4495, 105.558, -42.5919, 0.44", "-48.8173, 106.224, -43.0464, 0.44", "-48.3742, 106.684, -43.3889, 0.81", "-47.9256, 107.153, -43.7466, 0.44", "-47.6835, 107.423, -43.9588, 0.59", "-47.1108, 108.112, -44.5309, 0.59", "-46.7787, 108.605, -45.0004, 0.44", "-46.4463, 109.293, -45.6865, 0.44", "-46.2567, 109.881, -46.3531, 0.96", "-46.2067, 110.155, -46.7107, 1.18", "-46.1984, 110.405, -47.0763, 1.18", "-46.3312, 111.046, -48.3686, 0.44", "-46.524, 111.495, -49.404, 0.37", "-46.7413, 111.837, -50.4736, 0.66", "-46.8486, 111.973, -50.9757, 0.66", "-47.0277, 112.17, -51.7781, 0.66", "-47.682, 112.879, -54.9814, 0.44", "-47.7902, 112.992, -55.553, 0.44", "-48.3319, 113.571, -58.5955, 0.29", "-48.445, 113.711, -59.2416, 0.29", "-48.5672, 113.895, -59.9776, 0.29", "-48.8133, 114.364, -61.5376, 0.74", "-49.0787, 115.057, -63.3015, 0.44", "-49.1299, 115.244, -63.6854, 0.44", "-49.2314, 115.737, -64.3927, 0.37", "-49.326, 116.265, -65.0207, 0.88", "-49.4841, 117.172, -65.8176, 0.29", "-49.5702, 117.551, -66.0516, 0.52", "-49.7739, 118.249, -66.3978, 0.15", "-49.9914, 118.863, -66.7181, 0.22", "-50.3644, 119.823, -67.2229, 0.22", "-50.7337, 120.661, -67.6381, 0.22", "-51.086, 121.449, -68.0019, 0.22", "-51.6375, 122.601, -68.5764, 1.47", "-52.06, 123.443, -69.0435, 0.66", "-52.32, 123.982, -69.3573, 0.96", "-52.7131, 124.876, -69.8738, 0.22", "-52.9577, 125.484, -70.1783, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-54.2424, 91.337, -37.5207, 0.37", "-54.1905, 92.7892, -37.1471, 0.37", "-54.0825, 93.5148, -37.0269, 0.37", "-54.0019, 94.1983, -36.8449, 0.37", "-53.9681, 95.2148, -36.4895, 0.74", "-54.0268, 96.0701, -36.1558, 0.29", "-54.213, 97.0713, -35.7481, 0.29", "-54.3228, 97.5403, -35.5499, 0.52", "-54.6679, 98.5612, -34.9431, 0.44", "-54.9312, 99.2059, -34.4834, 0.29", "-55.1641, 99.7669, -34.0551, 0.29", "-55.4031, 100.389, -33.5512, 0.29", "-55.7226, 101.444, -32.7232, 0.44", "-55.9222, 102.302, -32.0652, 0.44", "-56.0473, 103.402, -31.3014, 0.52", "-56.0366, 104.282, -30.7035, 0.37", "-55.9439, 104.987, -30.2265, 0.37", "-55.7518, 105.751, -29.7399, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "23.0533, 23.8818, -5.12376, 0.29", "24.3159, 23.4414, -3.39614, 0.29", "25.4981, 23.0881, -1.98409, 0.59", "26.6552, 22.746, -0.77204, 0.74", "27.2889, 22.5671, -0.160559, 0.37", "28.264, 22.3175, 0.846937, 0.37", "28.8055, 22.1913, 1.4497, 0.66", "29.2094, 22.1414, 1.92632, 0.96", "29.7907, 22.1182, 2.84226, 1.25", "30.6667, 22.1764, 4.59254, 0.37", "31.4585, 22.3588, 6.43826, 0.37", "31.7184, 22.4539, 7.08634, 0.37", "32.2864, 22.6868, 8.40428, 0.74", "33.3058, 23.079, 10.4021, 0.66", "34.1504, 23.3768, 11.7451, 0.52", "34.8204, 23.5436, 12.4982, 0.66", "35.652, 23.6612, 13.129, 0.66", "36.7909, 23.7502, 13.7704, 0.37", "38.1132, 23.7668, 14.3087, 0.52", "38.8502, 23.7279, 14.54, 0.52", "40.1367, 23.617, 14.9086, 0.66", "40.8591, 23.5322, 15.1037, 0.88", "41.8212, 23.4234, 15.3411, 0.88", "42.9383, 23.3326, 15.6675, 0.66", "44.3372, 23.2891, 16.1038, 0.29", "45.5622, 23.3202, 16.4799, 0.29", "47.4173, 23.523, 17.0312, 0.88", "47.9309, 23.6009, 17.182, 0.88", "49.9882, 23.9863, 17.7575, 0.29", "51.5746, 24.3435, 18.1606, 0.29", "53.0907, 24.7367, 18.5061, 0.96", "54.8933, 25.2486, 18.8858, 0.29", "56.2042, 25.6299, 19.1562, 0.29", "57.4172, 25.9608, 19.3781, 0.81", "58.3698, 26.2025, 19.4971, 0.81", "59.2148, 26.404, 19.5961, 0.81", "60.495, 26.6818, 19.7385, 0.59", "61.9844, 26.9487, 19.9048, 0.29", "63.2991, 27.2279, 20.0703, 0.81", "64.5975, 27.5071, 20.2455, 0.22", "65.7496, 27.7339, 20.3985, 0.22", "66.4798, 27.8502, 20.4804, 0.52", "67.4859, 27.9713, 20.5307, 0.22", "77.9341, 29.4147, 26.6465, 0.22", "87.6668, 31.1446, 33.773, 0.22", "98.735, 30.9273, 38.9185, 0.22", "109.707, 28.6697, 43.732, 0.22", "120.664, 27.8449, 49.0494, 0.22", "129.823, 25.5041, 56.7499, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "23.0533, 23.8818, -5.12376, 0.81", "25.0003, 24.0183, -4.52235, 0.81", "25.9216, 23.9862, -4.2923, 1.03", "28.3638, 23.802, -3.91988, 0.96", "29.7004, 23.7152, -3.78803, 0.96", "31.2582, 23.682, -3.68406, 0.59", "32.3417, 23.7148, -3.63618, 0.66", "33.7937, 23.7693, -3.61964, 0.66", "35.5223, 23.9768, -3.70293, 0.59", "36.4261, 24.2304, -3.84914, 0.81", "37.5684, 24.749, -4.06492, 0.96", "38.6196, 25.3563, -4.2701, 1.25", "39.3799, 25.8143, -4.40797, 1.4", "40.3373, 26.3692, -4.53839, 1.4", "41.9042, 27.1301, -4.66445, 0.59", "42.5425, 27.3325, -4.70154, 0.59", "43.8725, 27.5047, -4.74986, 0.59", "45.3273, 27.4818, -4.77391, 1.03", "46.3619, 27.3625, -4.77247, 1.18", "47.2636, 27.1867, -4.72023, 1.18", "48.7231, 26.8168, -4.55116, 0.74", "50.1295, 26.4269, -4.29506, 0.66", "50.7988, 26.2439, -4.14438, 0.96", "51.6722, 26.0416, -3.94103, 0.96", "53.2392, 25.7519, -3.58913, 1.03", "53.9792, 25.661, -3.42503, 1.03", "56.0363, 25.6291, -3.00235, 0.59", "57.1513, 25.7305, -2.8034, 0.59", "59.1387, 26.0554, -2.51764, 0.59", "60.11, 26.2801, -2.4178, 0.81", "61.016, 26.5689, -2.37514, 0.81", "62.8583, 27.2965, -2.39192, 0.37", "64.0153, 27.792, -2.47445, 0.66", "65.0418, 28.1956, -2.55731, 0.74", "65.6853, 28.4093, -2.6236, 0.74", "66.9423, 28.7005, -2.78016, 0.74", "68.2888, 28.8374, -2.97014, 0.52", "70.1606, 28.7925, -3.255, 0.74", "71.5712, 28.6739, -3.43936, 0.88", "72.3456, 28.5959, -3.49791, 0.96", "73.1167, 28.5261, -3.50726, 1.18", "74.2924, 28.4552, -3.43681, 1.18", "75.1893, 28.4751, -3.29585, 0.66", "76.7864, 28.7635, -2.86035, 0.59", "77.8425, 29.1029, -2.38393, 0.59", "78.5453, 29.3945, -1.97948, 0.74", "79.0969, 29.6714, -1.60281, 0.74", "79.6424, 29.9766, -1.18142, 0.74", "80.6863, 30.5971, -0.284646, 0.59", "82.0743, 31.4631, 1.02955, 0.96", "82.7358, 31.8652, 1.6627, 1.25", "83.096, 32.0731, 2.03184, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "75.5268, 42.9772, 66.4466, 0.29", "82.3039, 46.7473, 73.5562, 0.29", "90.1088, 50.4169, 79.5766, 0.29", "98.2195, 54.794, 84.5715, 0.29", "105.207, 58.834, 91.3009, 0.29", "111.808, 63.9946, 97.5548, 0.29", "116.955, 69.8888, 104.443, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "75.5268, 42.9772, 66.4466, 0.29", "82.7413, 46.254, 72.6546, 0.29", "89.0532, 51.4133, 78.4277, 0.29", "94.2384, 57.4804, 84.3782, 0.29", "99.7577, 62.0746, 91.3903, 0.29", "105.054, 67.2115, 98.1589, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-32.4199, -10.6958, -29.8515, 0.74", "-34.2681, -12.1763, -30.3923, 0.74", "-35.2794, -12.7857, -30.6201, 0.74", "-36.1471, -13.1908, -30.8115, 0.74", "-37.5486, -13.5756, -31.2544, 0.66", "-38.5853, -13.7062, -31.6674, 0.66", "-39.6937, -13.7611, -32.1586, 0.59", "-40.4724, -13.663, -32.4899, 1.25", "-41.1118, -13.5257, -32.7935, 1.25", "-43.068, -13.0675, -33.8103, 0.66", "-44.0383, -12.8708, -34.3464, 0.66", "-44.5554, -12.8353, -34.6556, 0.96", "-45.3083, -12.9316, -35.1289, 0.96", "-45.8246, -13.122, -35.5972, 0.96", "-46.5954, -13.6811, -36.7873, 0.74", "-46.9955, -14.1368, -37.7182, 0.52", "-47.3912, -14.6945, -38.8873, 0.81", "-47.6441, -15.1009, -39.7549, 1.03", "-48.5583, -16.7201, -43.3051, 1.25", "-49.1776, -17.8562, -45.8806, 0.66", "-49.487, -18.3979, -47.1525, 0.66", "-49.6864, -18.6728, -47.8174, 1.11", "-49.8734, -18.8431, -48.2129, 1.33", "-50.1548, -19.0302, -48.5462, 1.18", "-50.6143, -19.292, -48.7358, 1.18", "-51.6713, -19.8853, -49.0116, 0.59", "-52.7533, -20.568, -49.3391, 0.52", "-53.5991, -21.1836, -49.6826, 0.52", "-54.2918, -21.7749, -50.1105, 0.81", "-54.9608, -22.4542, -50.7241, 0.66", "-55.5829, -23.154, -51.4369, 0.66", "-56.0282, -23.7019, -52.0584, 1.33", "-56.3255, -24.0855, -52.5093, 1.33", "-57.2531, -25.2871, -53.9403, 0.66", "-58.0723, -26.3126, -55.1562, 0.52", "-58.4634, -26.7616, -55.6984, 0.52", "-58.9784, -27.2754, -56.2446, 0.96", "-59.3511, -27.6115, -56.5302, 1.18", "-59.6208, -27.8471, -56.6548, 1.18", "-60.1824, -28.3698, -56.7477, 0.81", "-60.945, -29.152, -56.7351, 0.74", "-61.8815, -30.2191, -56.6205, 0.59", "-62.3509, -30.7527, -56.5204, 0.74", "-62.98, -31.4387, -56.344, 0.74", "-63.6622, -32.1107, -56.1339, 0.59", "-64.3094, -32.712, -55.9195, 0.44", "-65.0354, -33.3791, -55.6685, 0.44", "-65.7365, -34.0126, -55.4616, 0.44", "-66.4713, -34.7372, -55.2567, 0.44", "-67.6677, -36.05, -54.9459, 0.44", "-67.96, -36.4386, -54.8704, 0.96", "-68.4749, -37.3688, -54.7744, 1.18", "-68.7817, -38.1942, -54.7546, 0.81", "-69.0871, -39.5491, -54.8627, 0.59", "-69.1786, -40.1369, -54.9793, 0.74", "-69.3176, -41.0822, -55.2357, 0.66", "-69.5288, -42.006, -55.5281, 0.66", "-69.7531, -42.6877, -55.7706, 0.81", "-70.2788, -43.9391, -56.2164, 0.59", "-70.8086, -45.0367, -56.5882, 0.52", "-71.3016, -46.1025, -56.9166, 0.81", "-71.7261, -47.1403, -57.1898, 1.4", "-71.9056, -47.7587, -57.2772, 1.69", "-72.1129, -48.9712, -57.3045, 0.52", "-72.239, -49.9737, -57.3322, 0.44", "-72.334, -50.9875, -57.5033, 0.44", "-72.4126, -51.7002, -57.7798, 0.29", "-72.656, -53.0255, -58.5093, 1.4", "-72.7271, -53.2899, -58.6778, 1.4", "-73.5885, -55.6253, -60.5039, 0.52", "-74.1744, -56.9131, -61.6176, 0.52", "-74.5164, -57.5789, -62.2176, 0.52", "-75.0364, -58.5707, -63.109, 0.74", "-75.3771, -59.2361, -63.6858, 0.88", "-76.0771, -60.7542, -64.8103, 0.44", "-76.3858, -61.5193, -65.2399, 0.59", "-76.7516, -62.3768, -65.6801, 0.59", "-77.1798, -63.247, -66.161, 0.37", "-77.4539, -63.7719, -66.4687, 0.59", "-77.978, -64.7068, -67.0062, 0.81", "-78.4988, -65.56, -67.4196, 1.18", "-78.8428, -66.0845, -67.6799, 1.18", "-79.8111, -67.3879, -68.412, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-32.4199, -10.6958, -29.8515, 0.81", "-33.1291, -9.0799, -29.6508, 0.81", "-33.4656, -8.50548, -29.5197, 0.81", "-33.9891, -7.84313, -29.3095, 0.81", "-34.5549, -7.35801, -29.113, 0.88", "-35.2385, -7.01548, -28.9508, 0.66", "-36.5056, -6.59964, -28.7499, 0.59", "-37.3952, -6.57783, -28.6955, 0.59", "-38.1974, -6.67295, -28.81, 0.59", "-39.2628, -6.9085, -29.1598, 0.74", "-40.4087, -7.22962, -29.7727, 1.03", "-40.8103, -7.34817, -30.034, 1.62", "-41.3564, -7.49834, -30.4324, 1.92", "-43.087, -7.92029, -31.6599, 0.88", "-43.7525, -8.06304, -32.1188, 0.66", "-44.7286, -8.2687, -32.7592, 0.66", "-46.0439, -8.54635, -33.5735, 0.66", "-46.6285, -8.65797, -33.9159, 0.66", "-47.9023, -8.83724, -34.5767, 0.66", "-48.7145, -8.90136, -34.9453, 0.44", "-49.7417, -8.91552, -35.4312, 0.44", "-50.4955, -8.87613, -35.8208, 0.44", "-51.3858, -8.76808, -36.3705, 0.66", "-52.0082, -8.66705, -36.7848, 0.66", "-52.7456, -8.50136, -37.2757, 0.66", "-53.3824, -8.33018, -37.6488, 0.66", "-54.1097, -8.08225, -38.0142, 0.44", "-54.6164, -7.88327, -38.2508, 0.74", "-55.3709, -7.56905, -38.5806, 0.74", "-56.0429, -7.28256, -38.869, 0.74", "-56.6149, -7.04039, -39.1009, 0.74", "-57.2692, -6.77097, -39.353, 0.37", "-58.2377, -6.47723, -39.7704, 0.37", "-58.6531, -6.4347, -39.9867, 0.37", "-59.0892, -6.48626, -40.2739, 0.88", "-59.6681, -6.63064, -40.6906, 1.18", "-60.139, -6.77387, -41.074, 1.33", "-61.3384, -7.17139, -42.1381, 0.44", "-62.1999, -7.42203, -42.9628, 0.44", "-62.8891, -7.54371, -43.7008, 0.44", "-63.5125, -7.53866, -44.4104, 0.88", "-64.1838, -7.36506, -45.1774, 1.03", "-64.4594, -7.21008, -45.4685, 1.03", "-65.1766, -6.59271, -46.0528, 0.44", "-65.6096, -6.18492, -46.356, 0.44", "-66.1214, -5.75395, -46.6299, 0.44", "-66.5429, -5.47801, -46.8362, 0.59", "-67.2401, -5.154, -47.1313, 0.59", "-67.9496, -4.9543, -47.4336, 0.74", "-69.2436, -4.83325, -47.9842, 0.37", "-70.0518, -4.87632, -48.3649, 0.37", "-71.2412, -5.09769, -48.9826, 0.59", "-71.7044, -5.23859, -49.2507, 0.88", "-72.5907, -5.61547, -49.8418, 0.66", "-73.1849, -5.91554, -50.2693, 0.74", "-73.8157, -6.27428, -50.7278, 0.59", "-74.3569, -6.59969, -51.1509, 0.52", "-74.8637, -6.90088, -51.5465, 0.88", "-75.8, -7.38217, -52.2882, 0.59", "-76.3496, -7.60634, -52.7212, 0.44", "-76.9629, -7.79393, -53.2034, 1.03", "-77.3947, -7.88567, -53.5319, 1.33", "-77.6641, -7.92004, -53.7224, 1.4", "-78.8079, -8.01129, -54.4509, 0.44", "-79.272, -8.04198, -54.7267, 0.44", "-79.9594, -8.07616, -55.1063, 0.44", "-80.686, -8.09568, -55.4723, 0.44", "-81.8648, -8.11917, -56.0593, 0.59", "-82.6782, -8.12717, -56.5258, 0.88", "-83.4202, -8.09565, -57.0618, 1.11", "-84.3735, -8.01061, -57.8546, 0.52", "-85.0554, -7.90519, -58.4754, 0.52", "-85.6226, -7.78947, -59.0198, 1.03", "-86.8813, -7.50046, -60.3082, 1.25", "-88.3699, -7.2103, -61.8375, 0.52", "-88.8811, -7.13127, -62.3539, 0.59", "-89.5662, -7.05763, -63.0124, 0.59", "-90.6525, -6.96207, -63.9297, 0.44", "-91.4034, -6.90409, -64.4455, 0.44", "-92.5145, -6.79085, -65.058, 0.44", "-93.1088, -6.70145, -65.3664, 0.44", "-93.9198, -6.47651, -65.9054, 0.66", "-94.4887, -6.22092, -66.3856, 0.88", "-94.7871, -6.02216, -66.6765, 0.88", "-95.6372, -5.29, -67.568, 0.52", "-96.1503, -4.74827, -68.1452, 0.52", "-96.8569, -3.87942, -69.0578, 0.81", "-97.339, -3.19347, -69.7469, 0.44", "-97.609, -2.76534, -70.1719, 0.44", "-97.9029, -2.20477, -70.6977, 0.74", "-98.0719, -1.78146, -71.0459, 0.96", "-98.3702, -0.69002, -71.7734, 0.66", "-98.5263, -0.00657537, -72.2039, 0.44", "-98.7102, 0.73979, -72.7104, 0.44", "-98.9488, 1.44731, -73.2664, 0.44", "-99.0765, 1.68792, -73.4906, 0.44", "-99.5274, 2.17066, -74.0249, 0.96", "-100.589, 2.65243, -74.8158, 0.66", "-101.299, 2.83202, -75.2575, 0.96", "-101.643, 2.89324, -75.4317, 1.25", "-102.049, 2.95284, -75.6151, 1.25", "-102.693, 3.06241, -75.892, 1.25", "-103.807, 3.3523, -76.362, 0.37", "-104.475, 3.65735, -76.6092, 0.37", "-104.916, 3.93152, -76.7974, 0.66", "-105.254, 4.15943, -76.9361, 0.81", "-105.781, 4.51861, -77.1222, 0.81", "-106.6, 5.0666, -77.3266, 0.44", "-107.164, 5.40448, -77.393, 0.44", "-108.198, 5.92422, -77.4334, 0.44", "-109.345, 6.45444, -77.4153, 0.44", "-110.217, 6.84872, -77.3594, 0.66", "-111.126, 7.25024, -77.2585, 0.96", "-112.043, 7.64261, -77.0968, 0.59", "-112.823, 7.9887, -76.9298, 0.44", "-113.627, 8.35483, -76.7492, 0.44", "-114.409, 8.71273, -76.6201, 0.44", "-115.091, 8.98602, -76.5913, 0.44", "-115.883, 9.22042, -76.6815, 0.74", "-116.278, 9.29985, -76.78, 0.74", "-117.408, 9.43132, -77.1333, 0.52", "-117.924, 9.46813, -77.3237, 0.59", "-118.881, 9.5227, -77.7134, 0.44", "-119.596, 9.59167, -78.0152, 0.44", "-120.491, 9.75972, -78.428, 0.37", "-121.388, 10.0081, -78.8319, 0.52", "-122.098, 10.2746, -79.1488, 1.11", "-122.65, 10.5282, -79.4263, 1.25", "-123.302, 10.8702, -79.8118, 0.37", "-124.234, 11.3811, -80.4602, 0.37", "-124.865, 11.7096, -80.9599, 0.29", "-125.365, 11.9547, -81.4122, 0.29", "-126.263, 12.3872, -82.2822, 0.59", "-126.974, 12.748, -82.9994, 0.59", "-127.376, 12.9648, -83.4069, 0.29", "-127.694, 13.1534, -83.6961, 0.37", "-128.199, 13.4997, -84.1116, 0.37", "-128.893, 14.0115, -84.5633, 0.44", "-129.479, 14.4585, -84.8246, 0.44", "-130.037, 14.88, -85.0006, 0.44", "-130.712, 15.3455, -85.1861, 0.37", "-130.986, 15.5076, -85.2526, 0.37", "-131.69, 15.8373, -85.3893, 0.88", "-132.099, 15.9898, -85.459, 1.11", "-132.832, 16.2363, -85.5805, 1.11", "-133.987, 16.646, -85.7601, 0.37", "-134.881, 17.0045, -85.8874, 0.37", "-135.394, 17.2541, -85.948, 0.66", "-136.163, 17.7611, -86.0533, 0.66", "-136.764, 18.2802, -86.1544, 0.37", "-137.268, 18.8414, -86.2643, 0.52", "-137.451, 19.0923, -86.3143, 0.66", "-137.72, 19.5036, -86.3916, 0.66", "-138.45, 20.6402, -86.5911, 0.37", "-138.795, 21.1281, -86.6506, 0.37", "-139.18, 21.5253, -86.6439, 0.37", "-139.59, 21.8245, -86.5735, 0.88", "-140.255, 22.1919, -86.4034, 0.81", "-140.584, 22.3355, -86.3048, 0.81", "-141.414, 22.6447, -86.028, 0.29", "-142.503, 23.0295, -85.6578, 0.29", "-143.18, 23.2965, -85.3729, 0.52", "-143.996, 23.6659, -85.0067, 0.44", "-144.394, 23.8612, -84.8257, 0.44", "-144.918, 24.1408, -84.5636, 0.81", "-145.531, 24.5235, -84.2274, 0.81", "-146.673, 25.3761, -83.5342, 0.29", "-147.129, 25.7452, -83.243, 0.44", "-147.556, 26.099, -82.9412, 0.29", "-148.031, 26.4727, -82.6175, 0.29", "-148.661, 26.9337, -82.2288, 0.29", "-149.147, 27.2664, -81.9702, 0.29", "-149.727, 27.6268, -81.7089, 0.59", "-150.844, 28.2971, -81.1929, 0.22", "-151.563, 28.7205, -80.8632, 0.22", "-151.947, 28.9228, -80.6879, 0.52", "-152.304, 29.0758, -80.5197, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-76.6668, -42.6077, 73.3867, 0.29", "-82.1129, -45.9767, 78.3948, 0.29", "-86.7531, -50.7337, 82.9611, 0.29", "-91.0866, -55.5484, 87.7681, 0.29", "-95.1343, -60.8486, 92.2521, 0.29", "-98.1506, -66.8124, 96.6596, 0.29", "-101.829, -72.4899, 100.956, 0.29", "-105.535, -78.1672, 105.227, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-76.6668, -42.6077, 73.3867, 0.29", "-83.5005, -46.1463, 79.3599, 0.29", "-90.5288, -50.6157, 84.3135, 0.29", "-96.9265, -55.756, 89.4112, 0.29", "-102.463, -61.4043, 94.9289, 0.29", "-107.654, -67.6379, 100.075, 0.29", "-112.081, -74.8682, 104.437, 0.29", "-117.038, -81.2865, 109.567, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.6124, -64.4996, 18.6512, 0.66", "-11.3612, -67.171, 17.5536, 0.66", "-11.5527, -67.8797, 17.2905, 1.03", "-11.752, -68.6202, 17.1098, 1.03", "-12.1281, -70.0344, 16.9045, 1.03", "-12.3833, -71.1049, 16.833, 1.03", "-12.6535, -72.4117, 16.8326, 0.81", "-12.8391, -73.5786, 17.0537, 0.81", "-12.9537, -75.2869, 17.5435, 1.4", "-12.9469, -76.0178, 17.8139, 1.62", "-12.8592, -77.1061, 18.331, 1.4", "-12.7485, -77.8223, 18.7039, 1.92", "-12.5301, -78.793, 19.2299, 1.4", "-12.1099, -80.2604, 20.0461, 1.69", "-11.7881, -81.2406, 20.5429, 1.11", "-11.3537, -82.5566, 21.1727, 0.81", "-11.1608, -83.1789, 21.4488, 1.11", "-10.9553, -83.9237, 21.7462, 1.25", "-10.5796, -85.5869, 22.3428, 0.96", "-10.4604, -86.4328, 22.5973, 0.74", "-10.4276, -87.2464, 22.7935, 0.81", "-10.5604, -88.4913, 22.9824, 0.52", "-10.7722, -89.3879, 23.0441, 0.88", "-11.0329, -90.1498, 23.0023, 0.88", "-11.383, -90.9925, 22.815, 0.88", "-11.7008, -91.7425, 22.5755, 0.66", "-11.9918, -92.5482, 22.2259, 0.66", "-12.2722, -93.6858, 21.5562, 0.88", "-12.3788, -94.4452, 21.0261, 1.33", "-12.4114, -95.0272, 20.6005, 1.47", "-12.4193, -95.5747, 20.2026, 1.62", "-12.4388, -96.6911, 19.4449, 0.74", "-12.4985, -97.957, 18.7414, 0.74", "-12.6213, -98.9418, 18.3486, 0.74", "-12.7717, -99.7243, 18.1743, 0.74", "-13.0123, -100.803, 18.0988, 0.66", "-13.2477, -101.921, 18.1903, 0.66", "-13.5263, -103.53, 18.5578, 0.96", "-13.6097, -104.357, 18.8322, 0.88", "-13.6099, -105.096, 19.1081, 0.88", "-13.4676, -106.474, 19.626, 0.52", "-13.2187, -107.738, 20.0954, 1.18", "-13.0703, -108.358, 20.2845, 1.62", "-12.9064, -109.057, 20.436, 1.62", "-12.7095, -110.047, 20.6167, 0.96", "-12.596, -110.815, 20.7387, 0.96", "-12.5091, -111.98, 20.8939, 0.66", "-12.5524, -113.515, 21.0391, 0.52", "-12.7052, -114.897, 21.1818, 0.59", "-13.0203, -116.491, 21.3603, 0.74", "-13.1403, -116.906, 21.4147, 1.11", "-13.4612, -117.7, 21.5657, 1.25", "-14.1464, -118.976, 21.8832, 0.88", "-14.6007, -119.614, 22.1019, 0.66", "-15.0945, -120.178, 22.3322, 0.66", "-15.5831, -120.678, 22.5391, 0.59", "-16.5495, -121.688, 22.9065, 0.59", "-17.0872, -122.27, 23.0747, 0.44", "-17.7222, -123.024, 23.2131, 0.44", "-18.2377, -123.725, 23.2583, 0.74", "-18.6463, -124.375, 23.2542, 0.74", "-18.9914, -124.994, 23.212, 0.66", "-19.4249, -125.9, 23.0871, 1.03", "-19.749, -126.619, 22.9935, 1.4", "-20.0961, -127.426, 22.8975, 1.4", "-20.4021, -128.127, 22.8204, 1.47", "-20.8902, -129.234, 22.7187, 0.74", "-21.2676, -130.097, 22.6312, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.6124, -64.4996, 18.6512, 0.44", "-9.83844, -65.1593, 19.3594, 0.44", "-9.38885, -65.7336, 19.8477, 0.44", "-9.08581, -66.4824, 20.3168, 0.37", "-8.77469, -67.9488, 21.0018, 0.59", "-8.73563, -68.5224, 21.2046, 0.52", "-8.76144, -69.261, 21.4213, 0.44", "-9.01777, -70.4527, 21.7476, 0.44", "-9.38492, -71.457, 22.0439, 0.44", "-9.70051, -72.0665, 22.264, 0.59", "-10.1872, -72.7652, 22.6336, 0.59", "-10.7187, -73.3569, 23.2158, 0.37", "-11.4313, -74.0146, 24.2204, 0.59", "-12.0527, -74.5264, 25.26, 0.88", "-12.4447, -74.8138, 25.9469, 0.81", "-13.2418, -75.3631, 27.3333, 1.03", "-14.0486, -75.9127, 28.7014, 0.88", "-14.7855, -76.4394, 29.8353, 0.44", "-15.3939, -76.95, 30.6413, 0.44", "-15.7925, -77.3506, 31.0899, 0.66", "-16.3494, -77.9423, 31.5568, 0.66", "-16.8612, -78.4689, 31.804, 0.66", "-17.6183, -79.2112, 31.9842, 0.66", "-18.2778, -79.848, 32.089, 1.33", "-18.5721, -80.1482, 32.1143, 1.47", "-19.1437, -80.7423, 32.154, 1.03", "-19.8597, -81.5063, 32.2099, 0.81", "-20.4643, -82.1516, 32.2721, 0.74", "-21.1848, -82.9255, 32.3734, 0.52", "-21.6915, -83.4977, 32.4649, 0.44", "-25.0532, -90.3701, 37.7631, 0.44", "-27.2724, -97.7996, 42.8226, 0.44", "-30.316, -105.185, 47.5132, 0.44", "-35.3287, -112.052, 51.3043, 0.44", "-40.3433, -117.858, 56.7105, 0.44", "-44.4526, -123.732, 62.7587, 0.44", "-48.7824, -129.824, 68.4023, 0.44", "-54.8429, -135.447, 72.8715, 0.44", "-62.4258, -140.308, 75.7144, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.10069, -20.2376, -3.773, 1.47", "4.56013, -21.699, -4.10695, 1.47", "4.01333, -23.5763, -4.39363, 1.33", "3.66238, -25.0701, -4.51345, 1.55", "3.43998, -26.28, -4.51145, 1.55", "3.26319, -27.5317, -4.35586, 1.77", "3.07231, -29.1311, -3.98499, 1.77", "3.0009, -30.1146, -3.617, 2.14", "2.95072, -30.934, -3.21551, 2.58", "2.87608, -31.9818, -2.67052, 2.36", "2.69092, -33.9077, -1.76518, 1.77", "2.48153, -35.5741, -1.16363, 1.47", "2.29027, -36.9765, -0.854341, 1.18", "2.1003, -38.4701, -0.691534, 1.11", "1.95606, -39.8013, -0.694038, 1.33", "1.81245, -41.6207, -0.909881, 1.25", "1.76902, -43.2147, -1.25576, 1.47", "1.80979, -44.6425, -1.62077, 1.62", "1.87852, -45.7135, -1.90257, 2.14", "1.92297, -46.4525, -2.08187, 2.58", "1.94371, -47.5148, -2.29216, 2.43", "1.87674, -49.2252, -2.55317, 2.14", "1.72686, -50.6072, -2.72782, 1.92", "1.46697, -51.9793, -2.87042, 1.47", "0.998167, -53.6763, -3.02687, 1.25", "0.507179, -55.0769, -3.09717, 1.11", "0.0628219, -56.1249, -3.09196, 1.4", "-0.259313, -56.7987, -3.05995, 1.55", "-0.761381, -57.8274, -2.96146, 1.18", "-1.227, -58.8762, -2.79585, 0.88", "-1.63636, -59.9785, -2.62825, 1.18", "-1.94829, -61.0562, -2.47839, 1.03", "-2.19826, -62.0701, -2.33491, 1.03", "-2.49627, -63.5728, -2.14701, 1.47", "-2.62177, -64.527, -2.05625, 1.77", "-2.72897, -66.0285, -1.98704, 1.77", "-2.78068, -67.1852, -2.03141, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.10069, -20.2376, -3.773, 1.77", "5.82093, -23.2855, -4.5393, 1.77", "6.14332, -24.8111, -4.89687, 1.99", "6.51403, -26.5654, -5.30802, 1.99", "7.01985, -28.9589, -5.86902, 3.17", "7.24769, -30.0371, -6.12172, 3.76", "7.63757, -31.8821, -6.55414, 4.2", "7.85495, -33.5148, -6.86087, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205295", "5.97663, 56.3268, -0.359339, 0.205295", "7.46769, 71.2525, -0.359339, 0.205295" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-55.7518, 105.751, -29.7399, 0.29", "-55.9149, 106.362, -29.8186, 0.29", "-56.0904, 107.289, -30.1339, 0.29", "-56.1926, 108.124, -30.4621, 0.29", "-56.2471, 109.024, -30.8491, 0.29", "-56.2593, 109.672, -31.1514, 0.29", "-56.2626, 110.738, -31.6491, 0.29", "-56.2041, 112.654, -32.6489, 0.29", "-56.1766, 113.245, -32.9793, 0.37", "-56.1496, 113.958, -33.3969, 0.37", "-56.1335, 114.835, -33.9396, 0.37", "-56.1168, 115.557, -34.3908, 0.22", "-56.1093, 116.309, -34.8438, 0.22", "-56.1772, 117.121, -35.2376, 1.03", "-56.2074, 117.266, -35.3113, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-55.7518, 105.751, -29.7399, 0.52", "-56.8994, 107.092, -29.0758, 0.52", "-57.4101, 107.802, -28.7397, 0.52", "-57.9081, 108.617, -28.4033, 0.44", "-58.1241, 109.032, -28.2597, 0.59", "-58.3475, 109.533, -28.1118, 0.59", "-58.7469, 110.493, -27.831, 0.37", "-59.2105, 111.732, -27.564, 0.37", "-59.4767, 112.534, -27.387, 0.37", "-59.745, 113.343, -27.1999, 0.37", "-60.0418, 114.23, -26.9707, 0.29", "-60.323, 115.026, -26.7471, 0.29", "-60.6635, 115.863, -26.4855, 0.81", "-60.837, 116.198, -26.3715, 0.81", "-61.1485, 116.705, -26.1796, 0.74", "-61.6057, 117.343, -25.9602, 0.74", "-62.0434, 117.84, -25.8399, 0.96", "-62.5217, 118.298, -25.7963, 0.96", "-62.8592, 118.6, -25.8182, 0.59", "-63.5401, 119.222, -25.9701, 0.29", "-64.1931, 119.85, -26.2357, 0.29", "-64.9148, 120.583, -26.6245, 0.29", "-65.422, 121.135, -26.925, 0.22", "-66.1805, 121.997, -27.3938, 0.22", "-66.7724, 122.705, -27.7743, 0.74", "-67.429, 123.553, -28.1786, 0.37", "-67.9374, 124.303, -28.4688, 0.37", "-68.3912, 125.047, -28.72, 0.81", "-68.7156, 125.55, -28.8875, 1.18", "-69.0282, 125.946, -29.0052, 1.18", "-69.8453, 126.79, -29.2635, 0.29", "-70.7151, 127.63, -29.5133, 0.29", "-71.2777, 128.132, -29.685, 0.29", "-71.8617, 128.609, -29.8757, 0.29", "-72.7328, 129.263, -30.1448, 0.74", "-73.3711, 129.647, -30.3216, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "129.823, 25.5041, 56.7499, 0.29", "138.561, 25.8577, 62.1261, 0.29", "147.063, 25.9929, 67.8774, 0.29", "155.902, 27.1789, 72.9422, 0.29", "164.18, 29.575, 78.4531, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "129.823, 25.5041, 56.7499, 0.29", "140.418, 25.3774, 62.3976, 0.29", "150.994, 27.2394, 67.7164, 0.29", "162.308, 29.5859, 70.872, 0.29", "172.623, 33.3417, 75.5453, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "83.096, 32.0731, 2.03184, 0.44", "84.188, 32.1892, 1.49337, 0.44", "84.5903, 32.312, 1.25004, 0.37", "85.3023, 32.6189, 0.800427, 0.59", "85.6894, 32.8075, 0.556669, 0.74", "86.6848, 33.3181, -0.0418174, 0.37", "87.7147, 33.8628, -0.623021, 0.29", "88.3233, 34.2724, -0.971217, 0.29", "88.7622, 34.5942, -1.18625, 0.88", "88.9238, 34.7261, -1.25877, 1.11", "89.3272, 35.0602, -1.40893, 1.11", "89.7151, 35.3436, -1.47556, 1.18", "90.4447, 35.7246, -1.50138, 0.74", "90.9433, 35.9634, -1.49919, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "83.096, 32.0731, 2.03184, 0.29", "84.0291, 32.9828, 2.48479, 0.29", "84.4671, 33.4124, 2.71812, 0.29", "85.0281, 33.9625, 3.01699, 0.66", "85.6337, 34.5564, 3.33964, 0.29", "86.0872, 35.0011, 3.58121, 0.29", "86.996, 35.8924, 4.06538, 0.29", "87.5141, 36.36, 4.40033, 0.29", "95.3422, 43.5502, 7.37482, 0.29", "101.998, 51.3384, 11.372, 0.29", "107.247, 60.3622, 14.4854, 0.29", "113.617, 68.6058, 17.8894, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-79.8111, -67.3879, -68.412, 0.81", "-80.0657, -68.1442, -69.4343, 0.81", "-80.1171, -68.2408, -69.5668, 0.81", "-80.8198, -69.2388, -70.8739, 0.37", "-81.034, -69.5054, -71.1894, 0.52", "-81.2411, -69.7603, -71.4792, 0.66", "-81.4783, -70.0641, -71.8109, 0.66", "-82.0145, -70.6738, -72.4325, 0.37", "-82.3547, -71.0513, -72.8331, 0.37", "-82.8835, -71.6137, -73.4317, 0.37", "-83.2077, -71.9574, -73.815, 0.66", "-83.7282, -72.5, -74.4191, 1.11", "-83.9751, -72.7474, -74.6838, 1.25", "-84.8096, -73.5122, -75.5994, 0.22", "-85.158, -73.7827, -75.9737, 0.29", "-85.4635, -73.9794, -76.2873, 0.59", "-85.8122, -74.1801, -76.6169, 0.81", "-86.1814, -74.3968, -76.9729, 0.81", "-87.1305, -75.0571, -77.892, 0.37", "-87.4075, -75.2883, -78.1529, 0.37", "-87.8524, -75.7715, -78.6216, 0.59", "-88.0136, -75.9877, -78.8009, 0.81", "-88.5796, -76.8918, -79.4261, 0.44", "-88.9587, -77.5902, -79.8078, 0.44", "-89.2578, -78.1929, -80.0628, 0.37", "-89.6163, -78.9476, -80.3559, 0.37", "-89.8841, -79.5026, -80.5701, 0.66", "-90.1045, -79.912, -80.7443, 0.81", "-90.3252, -80.2899, -80.8952, 0.81", "-90.7422, -80.9549, -81.1763, 0.29", "-90.9879, -81.32, -81.3233, 0.96", "-91.592, -82.1768, -81.6147, 0.29", "-91.977, -82.7362, -81.7803, 0.29", "-92.3598, -83.2962, -81.9081, 0.44", "-92.5785, -83.6061, -81.9707, 0.44", "-92.935, -84.1025, -82.0403, 0.29", "-93.1305, -84.3796, -82.0944, 0.59", "-93.4268, -84.8369, -82.1886, 0.59", "-93.6995, -85.2967, -82.3096, 0.52", "-94.1363, -85.9868, -82.5399, 0.37", "-94.4172, -86.4171, -82.7052, 0.88", "-94.9439, -87.2183, -83.0378, 0.44", "-95.2367, -87.6795, -83.2265, 0.59", "-95.4756, -88.0594, -83.3765, 0.59", "-95.7617, -88.5207, -83.5334, 0.59", "-96.0589, -88.9913, -83.6502, 0.37", "-96.3006, -89.3257, -83.7037, 0.37", "-96.7068, -89.8082, -83.7177, 0.29", "-96.8623, -89.9735, -83.7032, 0.29", "-97.2612, -90.3872, -83.6208, 0.88", "-97.5299, -90.671, -83.536, 1.18", "-97.9857, -91.1088, -83.3714, 0.29", "-98.3238, -91.4074, -83.2518, 0.29", "-98.8308, -91.8521, -83.1119, 0.29", "-99.0611, -92.0667, -83.0619, 0.88", "-99.2843, -92.2877, -83.0314, 0.88", "-100.015, -93.0318, -83.0162, 0.22", "-100.262, -93.2886, -83.046, 0.22", "-100.808, -93.8368, -83.1537, 0.59", "-100.93, -93.9564, -83.1869, 0.59", "-101.424, -94.4337, -83.3329, 0.22", "-101.706, -94.7118, -83.4264, 0.44", "-102.098, -95.14, -83.5844, 0.22", "-102.638, -95.7248, -83.7933, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-79.8111, -67.3879, -68.412, 0.29", "-81.352, -67.7483, -68.2069, 0.29", "-82.2919, -68.0288, -68.0465, 0.29", "-83.21, -68.3415, -67.9047, 0.66", "-83.6456, -68.5145, -67.8457, 0.66", "-85.1708, -69.1755, -67.6361, 0.29", "-85.8278, -69.4723, -67.5544, 0.29", "-86.3045, -69.7292, -67.4515, 0.66", "-86.7532, -69.9966, -67.3489, 0.66", "-88.2837, -70.9486, -67.0006, 0.29", "-88.831, -71.2631, -66.8852, 0.52", "-89.3628, -71.5307, -66.7886, 0.52", "-90.8493, -72.156, -66.4943, 0.22", "-91.5466, -72.4018, -66.3444, 0.59", "-91.9955, -72.5392, -66.2266, 0.74", "-92.8744, -72.757, -65.9846, 0.29", "-93.3215, -72.8491, -65.8657, 0.29", "-93.9104, -72.9417, -65.7103, 0.96", "-94.4993, -72.9786, -65.5997, 0.96", "-96.1039, -73.0643, -65.2439, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-21.2676, -130.097, 22.6312, 0.29", "-20.9077, -130.137, 23.369, 0.29", "-20.0742, -130.275, 24.9539, 0.29", "-19.4833, -130.419, 26.0823, 0.59", "-18.6978, -130.73, 27.6563, 0.66", "-17.5967, -131.345, 29.8443, 0.59", "-16.8572, -131.925, 31.2563, 0.29", "-16.3631, -132.471, 32.0547, 0.52", "-16.1232, -133.091, 32.303, 0.66", "-15.8628, -134.446, 32.2786, 0.37", "-15.6024, -136.181, 32.0163, 0.29", "-15.4334, -137.554, 31.7112, 0.29", "-15.3012, -138.914, 31.3419, 0.29", "-15.168, -140.15, 30.9834, 0.29", "-14.9419, -141.61, 30.5363, 0.29", "-14.6828, -142.859, 30.1423, 0.29", "-9.20095, -151.15, 36.0784, 0.29", "-3.95474, -158.065, 43.882, 0.29", "3.28897, -165.27, 49.4904, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.2676, -130.097, 22.6312, 0.74", "-21.8123, -130.745, 22.3626, 0.74", "-22.2861, -131.413, 22.1294, 0.52", "-22.6456, -131.981, 21.9602, 0.52", "-23.2057, -133.017, 21.7087, 0.59", "-23.4297, -133.545, 21.6347, 0.96", "-23.5976, -134.117, 21.5807, 1.18", "-23.6475, -134.603, 21.5101, 1.18", "-23.6169, -135.063, 21.4446, 0.96", "-23.4751, -135.735, 21.3057, 0.66", "-23.1456, -136.686, 20.9434, 0.52", "-22.7782, -137.537, 20.5538, 0.52", "-22.3083, -138.434, 20.0493, 0.29", "-22.0973, -138.77, 19.8166, 0.37", "-21.5162, -139.547, 19.12, 0.29", "-20.8859, -140.243, 18.228, 0.29", "-21.0239, -147.879, 16.4847, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.78068, -67.1852, -2.03141, 0.37", "-6.23016, -68.6851, -0.907505, 0.37", "-7.73611, -69.4407, 0.162879, 0.37", "-8.80974, -70.0227, 1.11495, 0.37", "-9.53463, -70.4283, 1.77731, 0.37", "-10.4382, -70.9518, 2.65456, 0.59", "-11.3111, -71.4734, 3.51568, 0.74", "-11.9469, -71.8686, 4.32984, 0.52", "-12.4256, -72.173, 4.9515, 0.59", "-12.8594, -72.4999, 5.46983, 0.74", "-13.6336, -73.0698, 6.24755, 0.52", "-14.1384, -73.4168, 6.66435, 0.52", "-14.6269, -73.717, 6.99872, 0.74", "-15.1825, -74.0356, 7.34568, 0.74", "-15.7157, -74.349, 7.66557, 0.52", "-16.4914, -74.7991, 8.11718, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.78068, -67.1852, -2.03141, 0.88", "-2.95844, -68.074, -2.0441, 0.88", "-3.29724, -69.1917, -1.94106, 0.66", "-3.62847, -69.9749, -1.65651, 0.74", "-3.9141, -70.4951, -1.38973, 0.88", "-4.41966, -71.2832, -0.946848, 0.88", "-4.74456, -71.7602, -0.679408, 1.03", "-5.14195, -72.281, -0.336747, 1.03", "-6.04095, -73.4932, 0.477313, 1.03", "-6.54874, -74.2552, 0.946301, 1.03", "-6.95936, -75.0244, 1.34153, 0.88", "-7.17822, -75.684, 1.58162, 0.88", "-7.23008, -76.2981, 1.73384, 0.88", "-7.03352, -77.4884, 1.85159, 1.25", "-6.88808, -77.9207, 1.86291, 1.55", "-6.60343, -78.5268, 1.90105, 1.55", "-6.12505, -79.364, 2.03833, 1.55", "-5.77996, -79.8833, 2.19287, 1.55", "-5.10248, -80.7778, 2.59851, 1.03", "-4.54183, -81.4132, 3.0164, 1.03", "-4.05777, -81.9113, 3.41521, 0.81", "-3.26316, -82.6468, 4.12239, 0.81", "-2.69392, -83.1271, 4.64227, 1.03", "-2.13751, -83.5444, 5.11715, 1.03", "-1.50116, -83.9762, 5.60302, 1.03", "-0.977562, -84.3311, 5.93355, 0.88", "-0.175334, -84.9199, 6.3636, 0.88", "0.225278, -85.2381, 6.53684, 0.96", "0.685959, -85.6515, 6.71164, 0.96", "1.3113, -86.2839, 6.9274, 1.33", "1.64186, -86.6656, 7.02421, 1.62", "1.91662, -87.0125, 7.10445, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.85495, -33.5148, -6.86087, 0.66", "8.12092, -35.217, -5.40362, 0.66", "8.15812, -35.7769, -4.98408, 0.88", "8.21763, -36.8904, -4.2574, 1.03", "8.26004, -37.4214, -3.9426, 1.03", "8.31676, -37.8889, -3.67823, 1.03", "8.41596, -38.4654, -3.35841, 0.37", "8.51665, -39.0872, -3.08957, 0.37", "8.71234, -39.7055, -2.84256, 0.59", "9.05827, -40.232, -2.65587, 0.81", "9.35542, -40.5262, -2.52563, 0.81", "9.70115, -40.7821, -2.36626, 0.52", "10.0269, -40.9872, -2.20132, 0.81", "10.5077, -41.2818, -1.93242, 1.25", "10.6988, -41.4306, -1.80093, 1.69", "10.9206, -41.6991, -1.59738, 1.69", "11.169, -42.3584, -1.21562, 0.96", "11.2214, -42.7917, -1.02552, 0.66", "11.2276, -43.1314, -0.89708, 0.81", "11.2211, -43.844, -0.637369, 0.44", "11.2472, -44.4093, -0.422506, 0.44", "11.3067, -44.8539, -0.246212, 0.44", "11.4308, -45.2511, -0.0410562, 0.88", "11.7229, -45.7625, 0.35224, 1.25", "12.1045, -46.2344, 0.817629, 0.66", "12.4602, -46.59, 1.2142, 0.52", "12.6789, -46.7975, 1.4477, 0.52", "13.2104, -47.3352, 2.02715, 0.74", "13.6393, -47.8177, 2.49016, 1.25", "13.8051, -48.0263, 2.65224, 1.25", "14.0671, -48.3878, 2.86989, 0.52", "14.3851, -48.8589, 3.06793, 0.44", "14.7956, -49.4856, 3.23927, 0.37", "15.0442, -49.8566, 3.28405, 0.37", "15.3083, -50.2292, 3.29717, 0.96", "15.5147, -50.5061, 3.29944, 1.33", "16.1372, -51.2577, 3.29386, 0.29", "16.3686, -51.4995, 3.28807, 0.29", "16.6048, -51.7165, 3.27563, 0.29", "16.693, -51.797, 3.27171, 0.44", "19.1864, -56.2906, 5.11172, 0.44", "22.3966, -60.5447, 6.38476, 0.44", "25.0769, -65.217, 7.16709, 0.44", "28.0204, -69.6993, 8.19454, 0.44", "30.7281, -74.2172, 9.61924, 0.44", "33.2623, -78.9228, 10.6325, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.85495, -33.5148, -6.86087, 1.03", "7.83763, -35.5815, -7.12186, 1.03", "8.04657, -37.6301, -7.38398, 1.03", "8.36937, -39.1075, -7.58033, 0.96", "8.7948, -40.4996, -7.77085, 0.96", "9.31966, -41.8419, -7.95981, 0.96", "9.75282, -42.7427, -8.05331, 1.18", "10.6799, -43.9439, -8.07108, 1.47", "11.6514, -44.8865, -7.98657, 2.21", "12.0725, -45.2535, -7.91152, 2.21", "12.736, -45.8518, -7.71001, 1.99", "13.9043, -47.042, -7.19754, 1.33", "14.963, -48.3828, -6.57505, 0.88", "15.6179, -49.4783, -6.05148, 0.74", "16.0243, -50.5292, -5.58431, 0.74", "16.3116, -51.8051, -5.08218, 1.33", "16.3966, -52.5877, -4.82279, 1.62", "16.4236, -53.4489, -4.59901, 1.92", "16.4257, -54.3745, -4.43581, 1.69", "16.5047, -56.1351, -4.25199, 1.33", "16.7134, -57.9124, -4.18534, 1.03", "16.9602, -59.1295, -4.2149, 0.88", "17.3003, -60.2476, -4.29334, 1.03", "17.8693, -61.701, -4.45321, 1.03", "18.5525, -63.1507, -4.68078, 1.03", "19.1905, -64.3792, -4.94939, 1.33", "19.652, -65.3043, -5.21352, 1.69", "20.134, -66.4328, -5.59047, 1.47", "20.391, -67.228, -5.89049, 1.03", "20.6472, -68.4471, -6.38072, 0.96", "20.7717, -69.5647, -6.86789, 0.96", "20.8189, -70.9387, -7.47993, 1.4", "20.8029, -72.3999, -8.11249, 1.4", "20.781, -73.6762, -8.65313, 1.55", "20.8045, -74.3686, -8.9245, 1.77", "20.9426, -75.6944, -9.38417, 0.96", "21.1886, -76.8784, -9.71544, 0.66", "21.5779, -77.9825, -9.89754, 0.66", "22.1498, -79.0341, -9.95775, 0.96", "22.9131, -80.0621, -9.93613, 1.11", "23.3258, -80.5063, -9.9124, 1.4", "23.7046, -80.8553, -9.89304, 1.4", "24.4999, -81.5803, -9.85632, 1.4", "25.4374, -82.5312, -9.84059, 0.66", "25.8465, -83.0459, -9.87115, 0.52", "26.3017, -83.786, -9.95548, 0.52", "26.8922, -85.0043, -10.0779, 0.81", "27.4252, -86.3712, -10.1404, 1.03", "27.6908, -87.2768, -10.1616, 1.03", "27.9463, -88.5015, -10.1396, 1.03", "28.1201, -89.7245, -10.1658, 1.03", "28.2455, -90.9982, -10.2342, 0.88", "28.3744, -92.5558, -10.4307, 1.03", "28.5061, -93.9446, -10.7022, 0.52", "28.6657, -95.258, -11.0697, 0.52", "28.9202, -97.1721, -11.8117, 0.88", "29.03, -97.9535, -12.1968, 1.11", "29.1959, -99.192, -12.9031, 0.59", "29.2628, -99.7168, -13.2009, 0.59", "29.4071, -100.895, -13.7009, 0.52", "29.5126, -102.15, -13.9607, 0.52", "29.5098, -103.167, -13.8471, 1.11", "29.4178, -104.027, -13.5817, 1.25", "29.1792, -105.327, -12.9863, 1.18", "28.9073, -106.596, -12.3116, 0.52", "28.724, -107.476, -11.7698, 0.52", "28.5312, -108.682, -11.0519, 0.52", "28.48, -109.137, -10.8306, 0.81", "28.4298, -109.972, -10.5539, 0.74", "28.3774, -111.051, -10.3777, 0.74", "28.2999, -112.123, -10.318, 1.03", "28.1183, -113.545, -10.3543, 0.66", "27.9263, -114.484, -10.423, 0.52", "27.5783, -115.571, -10.54, 1.11", "27.1791, -116.483, -10.724, 1.11", "26.517, -117.777, -11.0894, 0.81", "25.7844, -119.128, -11.5775, 0.66", "25.2799, -120.075, -11.9532, 0.88", "24.6677, -121.366, -12.5402, 0.66", "23.9431, -123.069, -13.4957, 0.59", "23.532, -124.184, -14.2275, 0.88", "23.2199, -125.158, -14.9311, 1.18", "23.0094, -125.863, -15.4498, 0.96", "22.7433, -126.795, -16.14, 0.96", "22.2788, -128.494, -17.299, 0.52", "22.1201, -129.054, -17.6304, 0.81", "21.8173, -130.149, -18.2075, 0.66", "21.6144, -130.983, -18.5157, 0.66", "21.4166, -132.011, -18.7096, 0.96", "21.295, -133.269, -18.5285, 0.88", "21.286, -134.365, -18.1267, 0.88", "21.301, -135.32, -17.7119, 0.37", "21.385, -137.063, -16.8998, 1.03", "21.4226, -137.981, -16.495, 1.03", "21.4129, -140.015, -15.6501, 0.44", "21.3539, -141.496, -15.2037, 0.44", "21.3108, -142.36, -15.1496, 0.74", "21.2918, -143.256, -15.4026, 0.74", "21.3149, -144.499, -16.088, 0.44", "21.3802, -145.497, -16.7598, 0.66", "21.5371, -146.933, -17.8477, 0.44", "21.8196, -148.986, -19.4243, 0.88", "22.1793, -151.237, -21.069, 0.52", "22.3858, -152.383, -21.8849, 0.74", "22.7, -153.921, -22.9404, 1.33", "22.8754, -154.795, -23.4946, 1.33", "23.1638, -156.595, -24.4605, 0.74", "23.2952, -157.741, -24.9289, 0.66", "23.3709, -159.369, -25.4376, 0.66", "23.3227, -160.501, -25.758, 0.81", "23.1444, -161.658, -26.0788, 0.59", "22.9425, -162.435, -26.2622, 1.18", "22.8106, -162.796, -26.3394, 1.18", "22.2787, -164.074, -26.5827, 0.44", "21.8224, -165.186, -26.6882, 0.44", "21.4933, -166.121, -26.7203, 1.03", "21.346, -166.787, -26.6943, 1.4", "21.2893, -168.193, -26.4316, 0.52", "21.3506, -169.142, -26.2061, 0.52", "21.6348, -170.388, -25.7936, 0.74", "21.7981, -170.838, -25.5813, 0.74", "22.2103, -171.733, -24.9775, 0.59", "22.7926, -172.741, -24.076, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.85495, -33.5148, -6.86087, 0.88", "11.8839, -33.486, -9.52479, 0.88", "13.0311, -33.4415, -10.1661, 0.88", "14.1726, -33.391, -10.6926, 1.03", "14.9418, -33.3555, -10.9837, 1.33", "15.648, -33.3282, -11.2197, 1.62", "16.666, -33.3042, -11.5311, 1.84", "17.5315, -33.2388, -11.6821, 1.47", "18.5681, -33.1691, -12.0011, 1.18", "19.3385, -33.0948, -12.5659, 0.81", "20.1537, -32.987, -13.4336, 0.81", "20.6676, -32.9298, -14.0654, 1.11", "21.7529, -32.8745, -15.545, 1.33", "22.8907, -32.8642, -17.1795, 1.77", "25.4773, -32.9512, -20.9644, 1.47", "26.3104, -33.0068, -22.147, 1.11", "27.1627, -33.076, -23.2732, 1.11", "28.3109, -33.1721, -24.5955, 0.81", "29.0102, -33.2385, -25.2359, 0.96", "30.1211, -33.3119, -25.9533, 0.88", "31.0347, -33.2499, -26.3896, 0.74", "31.7395, -33.0654, -26.7608, 0.59", "32.6554, -32.6442, -27.3579, 1.03", "33.3395, -32.2453, -27.833, 1.55", "33.9695, -31.8528, -28.2804, 1.69", "35.8545, -30.6653, -29.6803, 1.69", "36.4369, -30.3145, -30.1336, 1.69", "37.8956, -29.5074, -31.2582, 0.88", "38.7213, -29.1213, -31.8512, 0.81", "39.7064, -28.767, -32.4564, 1.11", "40.9861, -28.4583, -33.109, 1.18", "42.1433, -28.3446, -33.5471, 0.59", "42.6587, -28.3615, -33.7192, 0.59", "43.9048, -28.6058, -34.0299, 0.96", "44.7915, -28.9255, -34.232, 1.18", "45.5408, -29.3112, -34.3637, 1.18", "46.2994, -29.7815, -34.433, 1.4", "47.1688, -30.369, -34.4717, 1.4", "47.976, -30.8957, -34.4932, 1.11", "48.5477, -31.2175, -34.4914, 1.11", "49.2555, -31.5063, -34.4754, 1.03", "50.1861, -31.7549, -34.4358, 1.03", "50.9999, -31.8735, -34.3853, 1.03", "51.9403, -31.9229, -34.3109, 0.96", "53.2393, -31.8926, -34.2035, 0.88", "54.6531, -31.7858, -34.0505, 0.88", "55.5906, -31.668, -33.9284, 1.03", "56.328, -31.5532, -33.8415, 1.11", "56.935, -31.4553, -33.7947, 1.18", "57.4865, -31.3908, -33.8212, 1.18", "58.6015, -31.3694, -34.1042, 0.81", "59.402, -31.4625, -34.4766, 0.74", "60.4493, -31.6837, -35.0944, 1.18", "61.2484, -31.8931, -35.6221, 1.4", "62.8751, -32.3524, -36.8002, 1.18", "64.1278, -32.6948, -37.7691, 0.88", "65.0658, -32.9133, -38.5564, 0.74", "66.0167, -33.0783, -39.3431, 0.74", "66.8856, -33.1441, -40.0075, 1.11", "67.8152, -33.1151, -40.6763, 1.4", "68.7413, -33.0326, -41.3068, 1.4", "70.0315, -32.9235, -42.2026, 1.11", "70.7897, -32.8911, -42.7622, 0.74", "71.7435, -32.9439, -43.5119, 0.66", "72.8783, -33.1679, -44.4518, 0.81", "74.0177, -33.5664, -45.3552, 0.74", "74.9651, -33.9964, -46.0949, 1.25", "75.4893, -34.2577, -46.4789, 1.69", "76.1721, -34.5718, -46.9447, 1.69", "76.8813, -34.8091, -47.335, 1.4", "77.9785, -34.9691, -47.7704, 0.88", "79.5746, -34.8976, -48.2395, 0.81", "80.298, -34.801, -48.4125, 0.81", "81.3022, -34.6549, -48.5976, 0.81", "82.5847, -34.4763, -48.7485, 0.81", "83.3796, -34.3954, -48.7903, 0.81", "84.4937, -34.3659, -48.7928, 0.81", "85.2328, -34.4482, -48.7427, 0.96", "86.3613, -34.7622, -48.7023, 0.96", "87.1262, -35.0992, -48.7537, 1.18", "87.8108, -35.4807, -48.8938, 1.47", "88.5124, -35.9063, -49.0933, 1.47", "89.5382, -36.5329, -49.4287, 0.74", "90.7363, -37.2144, -49.8471, 0.74", "92.2126, -37.9517, -50.3964, 0.66", "93.5976, -38.5582, -50.9554, 0.74", "94.4657, -38.871, -51.3088, 0.81", "95.4635, -39.1334, -51.6963, 0.81", "95.9717, -39.2106, -51.8746, 1.11", "97.1942, -39.2546, -52.2687, 1.25", "97.7377, -39.2141, -52.4755, 1.62", "98.3456, -39.1112, -52.8003, 1.62", "99.5426, -38.8553, -53.5703, 0.59", "100.293, -38.6853, -54.1105, 0.59", "101.422, -38.4428, -54.9514, 0.88", "102.938, -38.1507, -56.0903, 1.4", "104.464, -37.9121, -57.196, 0.74", "105.362, -37.8113, -57.8161, 0.59", "106.121, -37.7692, -58.2856, 0.81", "106.786, -37.7829, -58.5881, 0.81", "107.411, -37.8404, -58.7323, 0.96", "108.044, -37.9068, -58.7725, 0.96", "108.796, -37.9703, -58.7756, 0.59", "109.972, -38.0138, -58.7992, 0.59", "111.111, -37.9948, -58.8231, 0.66", "111.778, -37.947, -58.8934, 1.03", "112.875, -37.8319, -59.0732, 1.03", "113.986, -37.6352, -59.5305, 0.59", "114.55, -37.4914, -59.8695, 0.59", "115.299, -37.268, -60.415, 0.59", "116.443, -36.9551, -61.3271, 1.11", "116.955, -36.8488, -61.7416, 1.33", "119.821, -36.4162, -63.9601, 1.03", "120.335, -36.352, -64.3231, 1.4", "121.347, -36.2389, -64.953, 0.81", "122.363, -36.1302, -65.4847, 0.74", "123.639, -35.9961, -65.9916, 0.59", "124.481, -35.9061, -66.2395, 0.59", "125.817, -35.7703, -66.4394, 0.59", "127.4, -35.5456, -66.6706, 0.88", "127.963, -35.4117, -66.7447, 1.25", "128.465, -35.2421, -66.8037, 1.55", "129.209, -34.9404, -66.9008, 1.55", "129.815, -34.6856, -66.9957, 1.33", "130.564, -34.3685, -67.1188, 0.66", "131.521, -33.9819, -67.2728, 0.66", "132.164, -33.7476, -67.4348, 0.66", "133.35, -33.3328, -67.8697, 0.66", "133.891, -33.2064, -68.2707, 0.66", "134.227, -33.1574, -68.5926, 0.96", "134.628, -33.1253, -69.0202, 0.96", "135.835, -33.1139, -70.3424, 0.74", "136.557, -33.138, -71.1267, 1.62", "139.429, -33.2948, -74.1156, 0.66", "139.863, -33.3093, -74.5448, 0.66", "140.523, -33.3154, -75.1331, 1.11", "141.38, -33.3101, -75.8001, 1.11", "142.243, -33.2738, -76.3276, 0.52", "143.086, -33.1879, -76.6997, 0.52", "144.146, -32.9698, -77.0089, 1.25", "144.965, -32.7671, -77.253, 0.88", "146.527, -32.2925, -77.7189, 0.44", "147.419, -31.9676, -77.9693, 0.44", "148.741, -31.4223, -78.3164, 0.52", "149.615, -31.0267, -78.5321, 0.88", "150.048, -30.8208, -78.6294, 1.11", "150.423, -30.6198, -78.7564, 1.11", "150.731, -30.4303, -78.9092, 1.11", "151.768, -29.7407, -79.6666, 0.52", "152.195, -29.4613, -80.1056, 0.52", "152.798, -29.087, -80.8076, 0.81", "154.218, -28.2732, -82.504, 0.81", "154.887, -27.9098, -83.2843, 1.11", "155.179, -27.7633, -83.5891, 1.92", "156.852, -27.0215, -85.031, 0.59", "157.061, -26.9442, -85.1661, 0.59", "157.806, -26.7371, -85.4442, 0.88", "158.747, -26.5543, -85.5823, 0.44", "160.276, -26.327, -85.7219, 0.44", "161.478, -26.1865, -85.797, 0.74", "162.159, -26.1362, -85.8621, 0.74", "163.189, -26.1227, -86.126, 0.52", "163.819, -26.1612, -86.4188, 0.52", "164.785, -26.2799, -87.0476, 0.59", "165.156, -26.3268, -87.3307, 0.59", "166.789, -26.4721, -88.6552, 0.59", "167.868, -26.5043, -89.5272, 0.81", "168.883, -26.4626, -90.3455, 1.4", "169.42, -26.3811, -90.7421, 1.55", "170.652, -26.0012, -91.4844, 0.44", "171.169, -25.7498, -91.7077, 0.88", "171.793, -25.3668, -91.8396, 0.88", "172.471, -24.9456, -91.9644, 0.59", "173.519, -24.3373, -92.1716, 0.59", "174.236, -23.9995, -92.4085, 0.81", "175.062, -23.7078, -92.7724, 0.81", "176.169, -23.3945, -93.3863, 0.52", "177.441, -23.0726, -94.2404, 0.74", "177.873, -22.96, -94.6618, 0.74", "178.849, -22.6228, -96.0331, 0.37", "179.265, -22.4125, -96.7949, 0.37", "179.825, -22.0129, -98.045, 0.37", "180.252, -21.5897, -99.1599, 0.59", "181.389, -20.2767, -102.215, 0.88", "181.926, -19.6466, -103.602, 0.52", "182.132, -19.4431, -104.09, 0.52", "182.619, -19.0946, -105.149, 0.52", "183.044, -18.8708, -105.921, 0.81", "183.626, -18.6322, -106.797, 0.59", "184.148, -18.4678, -107.454, 0.59", "185.902, -18.0495, -109.557, 1.18", "187.987, -17.6525, -112.197, 0.74", "188.494, -17.5766, -112.898, 0.74", "188.961, -17.5166, -113.609, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-56.2074, 117.266, -35.3113, 0.29", "-57.1797, 117.215, -35.3363, 0.29", "-57.9611, 117.277, -35.3886, 0.29", "-58.3685, 117.399, -35.4896, 0.59", "-58.8299, 117.63, -35.6566, 0.59", "-59.2031, 117.865, -35.8033, 0.59", "-59.5991, 118.151, -35.9554, 0.44", "-59.8996, 118.477, -36.1044, 0.59", "-60.4496, 119.127, -36.4592, 0.37", "-60.7222, 119.437, -36.6533, 0.29", "-61.0034, 119.72, -36.8386, 0.59", "-61.3128, 120.008, -37.0282, 0.59", "-61.9879, 120.616, -37.4281, 0.29", "-62.6158, 121.198, -37.8247, 0.29", "-62.9099, 121.476, -38.0347, 0.29", "-63.4844, 122.003, -38.5228, 0.29", "-63.8588, 122.327, -38.9005, 0.29", "-64.262, 122.661, -39.3475, 0.52", "-64.6317, 122.969, -39.7792, 0.66", "-65.1765, 123.457, -40.4536, 0.44", "-65.616, 123.849, -41.0546, 0.59", "-66.1735, 124.291, -41.899, 0.96", "-66.3951, 124.42, -42.2089, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-56.2074, 117.266, -35.3113, 0.66", "-54.841, 117.301, -35.7908, 0.66", "-53.7493, 117.33, -36.174, 0.29", "-52.9567, 117.351, -36.4521, 0.44", "-51.9798, 117.376, -36.795, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-73.3711, 129.647, -30.3216, 0.29", "-74.1679, 130.356, -30.9875, 0.29", "-75.1892, 131.169, -31.828, 0.59", "-75.861, 131.706, -32.3927, 0.44", "-76.831, 132.54, -33.2289, 0.88", "-77.2668, 132.964, -33.6394, 1.03", "-78.2486, 134.048, -34.6375, 0.52", "-78.572, 134.443, -35.0035, 0.44", "-79.1967, 135.305, -35.715, 0.66", "-79.6647, 136.013, -36.2583, 0.88", "-80.5343, 137.407, -37.2145, 0.59", "-81.1031, 138.334, -37.7981, 0.74", "-81.6743, 139.28, -38.3423, 0.74", "-82.4736, 140.529, -39.0433, 0.37", "-82.8445, 141.054, -39.3312, 0.37", "-83.7193, 142.166, -39.9059, 0.66", "-84.3277, 142.832, -40.2145, 0.66", "-84.967, 143.427, -40.4625, 0.52", "-85.8922, 144.16, -40.72, 0.88", "-86.523, 144.591, -40.834, 0.88", "-87.4469, 145.137, -40.9067, 0.52", "-88.5527, 145.725, -40.9034, 0.52", "-89.9165, 146.438, -40.8327, 0.88", "-90.7925, 146.919, -40.7621, 0.88", "-91.8752, 147.538, -40.645, 0.52", "-92.7984, 148.084, -40.5362, 0.44", "-93.8483, 148.718, -40.4165, 0.37", "-94.8736, 149.392, -40.3019, 0.37", "-95.8938, 150.128, -40.2054, 0.29", "-97.5551, 151.417, -40.0891, 0.29", "-98.3316, 152.036, -40.0463, 0.29", "-99.2271, 152.731, -39.9971, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-73.3711, 129.647, -30.3216, 0.29", "-74.37, 129.024, -29.2628, 0.29", "-74.9136, 128.685, -28.6866, 0.29", "-75.2988, 128.444, -28.2783, 0.22", "-75.7902, 128.138, -27.7575, 0.22", "-76.337, 127.797, -27.1779, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "164.18, 29.575, 78.4531, 0.29", "167.516, 37.2768, 88.9038, 0.29", "171.735, 43.6663, 100.001, 0.29", "177.377, 49.5313, 110.786, 0.29", "181.878, 53.4925, 122.986, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "164.18, 29.575, 78.4531, 0.29", "171.988, 27.7599, 80.9518, 0.29", "179.812, 27.3851, 84.0136, 0.29", "187.158, 28.2903, 87.9929, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "90.9433, 35.9634, -1.49919, 0.37", "91.3648, 36.5125, -0.878496, 0.37", "91.9608, 37.2914, 0.101615, 0.37", "92.3926, 37.8556, 0.811631, 0.22", "93.3003, 39.0419, 2.3044, 0.22", "93.9921, 39.9461, 3.44214, 0.66", "94.8253, 41.0349, 4.81234, 1.11", "95.0246, 41.2879, 5.18071, 1.11", "100.182, 49.01, 12.4187, 1.11", "105.881, 56.7861, 19.1932, 1.11", "112.493, 63.6661, 26.209, 1.11", "119.426, 69.4509, 33.961, 1.11", "126.96, 76.591, 39.7031, 1.11", "134.797, 83.3844, 45.5082, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "90.9433, 35.9634, -1.49919, 0.44", "91.7769, 36.1392, -1.57807, 0.44", "92.6684, 36.2874, -1.6754, 0.44", "93.6401, 36.3959, -1.73441, 0.74", "94.2365, 36.4439, -1.75506, 1.03", "94.7994, 36.4769, -1.76205, 1.03", "95.2403, 36.5062, -1.78127, 1.03", "95.9674, 36.5834, -1.87474, 0.66", "96.9449, 36.7647, -2.07974, 0.66", "97.278, 36.8786, -2.18498, 0.81", "97.7717, 37.132, -2.37321, 0.44", "98.7582, 37.7936, -2.7869, 0.44", "99.9207, 38.7153, -3.28352, 0.37", "100.323, 39.0774, -3.46963, 0.37", "100.939, 39.6642, -3.7699, 0.37", "101.686, 40.3773, -4.10067, 0.66", "102.131, 40.7932, -4.26339, 0.66", "102.781, 41.3378, -4.40896, 0.37", "103.183, 41.6254, -4.45912, 0.37", "103.696, 41.9766, -4.51689, 0.59", "104.149, 42.299, -4.57869, 0.59", "104.567, 42.647, -4.70824, 0.44", "105.256, 43.2094, -5.00087, 0.66", "105.38, 43.3035, -5.0618, 0.96", "105.855, 43.6051, -5.30296, 0.96", "106.549, 43.9632, -5.67766, 1.11", "108.161, 44.6357, -6.52368, 0.44", "109.075, 44.9536, -6.97276, 0.44", "109.797, 45.1712, -7.29428, 0.37", "110.687, 45.4447, -7.67948, 0.37", "111.234, 45.6167, -7.89397, 0.29", "112.0, 45.8993, -8.14809, 0.22", "112.52, 46.203, -8.29381, 0.59", "112.785, 46.4793, -8.37585, 0.59", "113.511, 47.4566, -8.71504, 0.29", "113.812, 47.8867, -8.87913, 0.37", "114.167, 48.3716, -9.08674, 0.52", "114.552, 48.8179, -9.3429, 0.74", "115.069, 49.385, -9.81838, 0.96", "115.937, 50.384, -10.8575, 0.29", "116.25, 50.8004, -11.3267, 0.52", "116.377, 51.0134, -11.5692, 0.81", "116.759, 51.8327, -12.4567, 1.11", "117.385, 53.5444, -14.2267, 0.81", "117.631, 54.4081, -15.0499, 0.96", "117.87, 55.4552, -15.946, 0.66", "118.051, 56.2773, -16.5965, 0.52", "118.264, 57.0767, -17.1566, 0.52", "118.383, 57.3831, -17.3209, 0.74", "118.79, 57.9004, -17.5157, 0.74", "119.08, 58.1418, -17.6064, 0.96", "119.541, 58.4217, -17.7493, 0.96", "120.274, 58.8608, -18.0597, 0.74", "120.977, 59.337, -18.4249, 0.44", "121.711, 60.0005, -18.9299, 0.44", "121.974, 60.3161, -19.1559, 0.96", "122.406, 61.0508, -19.6627, 1.18", "122.943, 62.3213, -20.5072, 0.66", "123.109, 62.8768, -20.8729, 0.66", "123.362, 64.028, -21.6424, 0.59", "123.454, 64.4774, -21.9218, 0.52", "123.745, 65.6866, -22.6224, 0.52", "123.835, 66.0299, -22.789, 0.96", "124.051, 66.7212, -23.072, 0.96", "124.493, 67.9943, -23.5027, 0.59", "124.905, 69.0884, -23.7642, 0.59", "125.176, 69.7894, -23.8925, 0.88", "125.592, 70.7868, -23.9957, 0.74", "125.978, 71.5787, -24.0644, 0.74", "126.458, 72.3601, -24.1082, 0.88", "126.771, 72.7399, -24.1471, 0.88", "127.354, 73.3013, -24.3099, 0.37", "127.963, 73.8072, -24.5391, 0.37", "128.916, 74.4951, -24.964, 0.37", "129.573, 74.9603, -25.3087, 0.37", "130.327, 75.5014, -25.7582, 0.37", "130.782, 75.844, -26.0294, 0.59", "131.349, 76.289, -26.3508, 0.74", "131.73, 76.6148, -26.5626, 0.74", "132.442, 77.31, -26.9636, 0.44", "132.825, 77.6799, -27.1676, 0.37", "133.98, 78.6153, -27.6767, 0.37", "134.54, 78.9805, -27.8989, 0.74", "134.841, 79.1363, -28.0116, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "113.617, 68.6058, 17.8894, 0.29", "118.992, 73.9426, 21.0677, 0.29", "124.444, 79.8746, 22.5812, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "113.617, 68.6058, 17.8894, 0.29", "117.017, 71.7051, 20.1331, 0.29", "120.642, 74.3128, 22.6825, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.0239, -147.879, 16.4847, 0.29", "-18.4028, -155.192, 15.2712, 0.29", "-16.9365, -162.875, 15.0479, 0.29", "-15.6961, -170.476, 13.5973, 0.29", "-15.5704, -178.272, 13.0415, 0.29", "-16.1575, -186.044, 12.3898, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-21.0239, -147.879, 16.4847, 0.29", "-23.9085, -156.505, 11.755, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.91662, -87.0125, 7.10445, 0.37", "0.551269, -88.4587, 6.00883, 0.37", "-0.266897, -89.2201, 5.4795, 0.37", "-1.06963, -89.878, 5.02563, 0.44", "-2.0314, -90.5898, 4.55049, 0.74", "-2.98839, -91.2423, 4.13828, 0.59", "-3.9829, -91.8484, 3.77575, 0.59", "-4.57629, -92.0913, 3.65855, 0.74", "-5.55898, -92.351, 3.54996, 0.88", "-6.17515, -92.449, 3.53462, 1.18", "-6.79545, -92.4952, 3.55744, 0.59", "-7.73823, -92.5159, 3.61652, 0.44", "-8.67367, -92.5212, 3.67037, 0.52", "-9.10755, -92.5391, 3.68359, 0.74", "-9.84589, -92.6592, 3.70793, 0.74", "-10.3774, -92.8403, 3.70031, 0.59", "-10.9174, -93.1404, 3.67357, 0.59", "-11.6165, -93.7025, 3.6241, 0.59", "-12.3453, -94.4777, 3.57895, 0.44", "-13.1588, -95.5095, 3.55195, 0.37", "-13.6175, -96.2034, 3.55343, 1.03", "-13.918, -96.729, 3.55676, 1.03", "-14.1533, -97.2122, 3.56194, 0.96", "-14.5395, -98.2154, 3.58457, 0.66", "-14.8236, -99.1194, 3.6056, 0.66", "-15.0947, -100.153, 3.60582, 0.88", "-15.2333, -100.789, 3.5987, 1.03", "-15.3906, -101.693, 3.56612, 0.88", "-15.5525, -102.857, 3.49208, 0.52", "-15.6537, -103.767, 3.40821, 0.52", "-15.7226, -104.459, 3.3236, 0.96", "-15.7728, -104.911, 3.25924, 0.96", "-15.9486, -106.021, 3.07994, 0.59", "-16.1488, -106.903, 2.92644, 0.66", "-16.3628, -107.561, 2.80432, 0.81", "-16.6851, -108.362, 2.6399, 0.81", "-16.9025, -108.807, 2.53865, 0.81", "-17.334, -109.621, 2.28869, 0.44", "-17.5647, -110.047, 2.12623, 0.81", "-17.8692, -110.663, 1.8461, 0.81", "-18.2282, -111.546, 1.40681, 0.52", "-18.4308, -112.264, 1.02629, 0.52", "-18.6493, -113.58, 0.306953, 0.74", "-18.7018, -114.223, -0.0424853, 1.11", "-18.7387, -114.817, -0.340956, 1.11", "-18.7912, -115.57, -0.672272, 0.96", "-18.8903, -116.414, -0.984806, 0.59", "-19.0936, -117.452, -1.29806, 0.44", "-19.4731, -118.597, -1.54941, 0.44", "-19.8577, -119.452, -1.70294, 0.44", "-20.2754, -120.251, -1.80995, 0.74", "-20.5888, -120.837, -1.87421, 0.74", "-20.8893, -121.404, -1.91696, 0.74", "-21.4091, -122.416, -1.96084, 0.66", "-21.7783, -123.171, -1.97416, 0.44", "-22.2433, -124.146, -1.98325, 0.44", "-22.9576, -125.503, -1.94511, 0.44", "-23.3539, -126.13, -1.88772, 0.88", "-23.8085, -126.711, -1.78482, 1.18", "-24.1572, -127.084, -1.67769, 1.18", "-24.5926, -127.487, -1.52668, 1.03", "-25.8319, -128.464, -1.08574, 0.66", "-26.9711, -129.24, -0.664244, 0.66", "-27.938, -129.875, -0.302896, 1.25", "-28.451, -130.216, -0.108661, 1.55", "-29.0708, -130.637, 0.126098, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.91662, -87.0125, 7.10445, 0.74", "1.21272, -88.2471, 6.28146, 0.74", "0.385328, -89.6639, 5.31792, 0.74", "-0.0455398, -90.5085, 4.83846, 0.74", "-0.456455, -91.4525, 4.37751, 0.81", "-1.21202, -93.6134, 3.51489, 0.52", "-1.66692, -95.3307, 2.95404, 0.74", "-1.81893, -96.2426, 2.73329, 0.74", "-1.63823, -98.2531, 2.61086, 0.74", "-1.2447, -99.2445, 2.69757, 0.81", "-0.444658, -100.438, 2.962, 0.66", "0.0578018, -101.025, 3.14935, 1.11", "0.581607, -101.596, 3.31501, 1.11", "1.24113, -102.326, 3.43963, 0.81", "2.05532, -103.32, 3.43527, 0.81", "2.77789, -104.292, 3.36605, 0.96", "3.41118, -105.199, 3.27511, 0.88", "4.16419, -106.314, 3.1752, 0.96", "4.68197, -107.145, 3.08793, 1.11", "5.24291, -108.183, 2.9367, 1.11", "5.68531, -109.159, 2.75682, 0.74", "6.23018, -110.683, 2.44576, 0.66", "6.458, -111.48, 2.27789, 0.66", "6.84232, -113.328, 1.92016, 0.66", "7.0642, -115.27, 1.5806, 0.59", "7.08568, -116.396, 1.38975, 0.96", "6.99377, -117.799, 1.15563, 1.18", "6.8444, -118.845, 1.00181, 1.03", "6.6218, -120.074, 0.849069, 0.88", "6.3415, -121.667, 0.713195, 0.74", "6.1715, -123.049, 0.71995, 0.59", "6.0696, -124.216, 0.80801, 0.59", "5.9933, -125.182, 0.96561, 1.4", "5.91684, -125.893, 1.14635, 1.4", "5.72671, -127.706, 1.77911, 0.88", "5.56764, -129.829, 2.79199, 0.66", "5.50521, -130.717, 3.28997, 0.88", "5.41906, -131.843, 3.96446, 0.88", "5.25213, -133.598, 5.02756, 0.59", "5.09558, -134.718, 5.692, 0.81", "4.7402, -136.574, 6.72868, 0.81", "4.52699, -137.535, 7.16272, 1.11", "4.35785, -138.325, 7.46471, 1.11", "4.14025, -139.464, 7.78019, 0.52", "3.97683, -140.543, 7.99405, 0.74", "3.84307, -141.507, 8.1251, 1.03", "3.7783, -142.314, 8.17367, 1.25", "3.79816, -143.107, 8.26428, 1.33", "3.97472, -144.402, 8.58205, 1.03", "4.31828, -145.606, 9.01206, 0.74", "4.74215, -146.578, 9.43903, 0.44", "5.25681, -147.455, 9.88428, 0.29", "6.18338, -148.654, 10.5868, 0.29", "7.48066, -149.96, 11.4765, 0.29", "8.24849, -150.539, 11.9411, 0.29", "8.97713, -150.94, 12.2939, 0.88", "9.58688, -151.223, 12.5541, 0.88", "10.5985, -151.656, 12.9406, 0.52", "11.0617, -151.852, 13.0615, 0.52", "11.9007, -152.245, 13.2616, 0.52", "12.5484, -152.681, 13.4878, 0.52", "13.3939, -153.507, 13.7819, 0.52", "13.7933, -154.039, 13.8997, 0.88", "14.2165, -154.702, 13.9733, 0.88", "14.7334, -155.517, 13.9674, 1.11", "15.2754, -156.275, 13.9208, 0.66", "16.3341, -157.481, 13.7546, 0.66", "16.8515, -157.91, 13.6725, 0.66", "17.7726, -158.516, 13.5669, 0.66", "18.5235, -158.944, 13.512, 0.52", "19.8009, -159.671, 13.401, 0.66", "20.2135, -159.908, 13.4064, 0.66", "21.1245, -160.437, 13.5783, 0.44", "21.8855, -160.896, 13.8435, 0.44", "22.9495, -161.591, 14.3782, 0.52", "24.2241, -162.483, 15.2182, 0.66", "25.3192, -163.298, 16.0374, 0.44", "26.4959, -164.188, 16.9905, 0.81", "27.5923, -165.016, 17.8495, 0.52", "28.314, -165.56, 18.3671, 0.74", "29.1906, -166.226, 18.9095, 0.29", "29.6554, -166.594, 19.1099, 0.52", "30.3443, -167.177, 19.1924, 0.59", "31.6557, -168.349, 19.2103, 0.37", "32.6003, -169.209, 19.1248, 0.66", "33.137, -169.696, 19.0463, 1.03", "33.9956, -170.471, 18.8854, 1.03", "34.9458, -171.328, 18.7551, 0.74", "36.4867, -172.697, 18.7008, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "22.7926, -172.741, -24.076, 0.44", "22.7408, -173.784, -23.9759, 0.44", "22.6972, -174.513, -23.9052, 0.81", "22.6543, -175.072, -23.8517, 1.18", "22.5891, -175.821, -23.7835, 0.74", "22.5192, -176.6, -23.717, 0.44", "22.4557, -177.285, -23.6615, 0.96", "22.3867, -177.994, -23.6087, 0.96", "22.3165, -178.669, -23.5633, 1.18", "22.1712, -179.675, -23.4985, 0.74", "21.9754, -180.586, -23.467, 0.66", "21.758, -181.327, -23.4665, 0.66", "21.4301, -182.256, -23.5143, 0.66", "21.2476, -182.714, -23.5614, 1.03", "20.971, -183.35, -23.6571, 0.81", "20.54, -184.36, -23.8974, 0.52", "20.3338, -184.968, -24.0535, 0.44", "20.1746, -185.734, -24.2268, 0.37", "20.1402, -186.172, -24.2992, 0.66", "20.1333, -186.654, -24.3376, 0.66", "20.1765, -187.916, -24.3915, 0.44", "20.224, -189.183, -24.3833, 0.44", "20.2193, -190.195, -24.3446, 0.66", "20.1537, -191.087, -24.2868, 0.81", "19.9922, -192.057, -24.2316, 0.96", "19.6816, -193.078, -24.1756, 1.11", "19.3332, -193.871, -24.135, 0.81", "18.9739, -194.569, -24.1433, 0.88", "18.6906, -195.112, -24.1791, 0.66", "18.2911, -195.878, -24.2572, 0.29", "17.7917, -196.859, -24.3714, 0.29", "17.5018, -197.427, -24.4263, 0.52", "17.0479, -198.309, -24.5207, 0.52", "16.6692, -199.033, -24.5952, 0.37", "16.3085, -199.685, -24.6554, 0.29", "15.9524, -200.253, -24.6879, 0.29", "15.793, -200.46, -24.7019, 0.88", "15.4099, -200.808, -24.7336, 1.11", "14.925, -201.113, -24.763, 0.44", "14.3031, -201.412, -24.7921, 0.37", "13.6973, -201.653, -24.8272, 0.59", "13.1508, -201.839, -24.8682, 0.74", "12.4286, -202.066, -24.9308, 0.44", "11.8016, -202.265, -24.9822, 0.37", "11.3872, -202.412, -25.011, 0.88", "10.9149, -202.615, -25.0308, 1.11", "10.5797, -202.79, -25.0296, 1.11", "10.239, -202.976, -25.0094, 1.11", "9.40128, -203.457, -24.9318, 0.29", "8.85023, -203.787, -24.8781, 0.59", "8.48558, -204.012, -24.8394, 0.59", "7.5961, -204.607, -24.7303, 0.29", "7.05891, -205.009, -24.651, 0.29", "6.64248, -205.362, -24.5825, 0.52", "6.15993, -205.816, -24.4993, 0.52", "5.90602, -206.068, -24.454, 0.81", "5.48112, -206.563, -24.3764, 0.81", "5.06987, -207.189, -24.2971, 0.29", "4.6064, -208.032, -24.1974, 0.29", "4.35544, -208.524, -24.1342, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "22.7926, -172.741, -24.076, 0.22", "23.4116, -173.027, -24.33, 0.22", "24.0642, -173.328, -24.5978, 0.22", "24.8522, -173.692, -24.9212, 0.22", "25.3945, -173.943, -25.1437, 0.22", "25.97, -174.209, -25.3799, 0.22", "26.5621, -174.483, -25.6229, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "188.961, -17.5166, -113.609, 0.74", "191.245, -18.9495, -114.704, 0.74", "191.858, -19.4212, -114.906, 0.44", "192.307, -19.7643, -115.007, 0.74", "193.019, -20.2617, -115.111, 0.52", "193.985, -20.8597, -115.184, 0.52", "195.033, -21.4235, -115.251, 0.52", "195.815, -21.8064, -115.178, 0.52", "196.632, -22.1357, -115.107, 0.52", "197.68, -22.4205, -115.08, 0.52", "198.564, -22.5313, -115.102, 0.74", "199.492, -22.5292, -115.173, 1.03", "199.837, -22.5013, -115.215, 1.4", "200.18, -22.4629, -115.269, 1.4", "201.558, -22.3163, -115.539, 0.44", "202.082, -22.2776, -115.598, 0.74", "202.858, -22.2585, -115.581, 0.74", "203.387, -22.2662, -115.483, 0.96", "203.882, -22.2977, -115.307, 0.96", "204.526, -22.388, -114.987, 0.96", "206.031, -22.767, -113.999, 0.66", "206.644, -22.9934, -113.529, 0.81", "207.0, -23.1707, -113.21, 0.81", "207.854, -23.6653, -112.387, 0.52", "208.489, -24.0612, -111.77, 0.52", "209.191, -24.5112, -111.14, 0.52", "209.888, -24.9367, -110.635, 0.52", "210.793, -25.4513, -110.065, 0.44", "211.299, -25.698, -109.828, 0.96", "211.861, -25.9114, -109.723, 1.11", "212.681, -26.1571, -109.767, 0.44", "213.419, -26.3734, -109.992, 0.37", "213.951, -26.5577, -110.281, 0.37", "214.805, -26.8968, -110.925, 0.66", "215.751, -27.3052, -111.786, 0.74", "216.152, -27.4793, -112.195, 0.81", "216.736, -27.7176, -112.849, 0.81", "217.491, -27.9926, -113.732, 0.66", "218.188, -28.2049, -114.503, 0.66", "218.853, -28.3832, -115.173, 0.29", "219.317, -28.5022, -115.599, 0.59", "219.816, -28.6188, -116.021, 0.74", "220.29, -28.7174, -116.415, 0.44", "220.915, -28.8354, -116.905, 0.37", "221.558, -28.9717, -117.394, 0.37", "222.184, -29.1286, -117.849, 0.59", "222.679, -29.2765, -118.199, 0.59", "223.941, -29.7346, -119.248, 0.29", "224.743, -30.0971, -120.016, 0.29", "225.149, -30.3174, -120.461, 0.29", "225.498, -30.5283, -120.857, 0.74", "225.842, -30.7555, -121.265, 0.74", "227.189, -31.8417, -122.962, 0.37", "227.577, -32.2495, -123.498, 0.52", "227.864, -32.6203, -123.974, 0.81", "228.164, -33.0319, -124.54, 0.37", "228.433, -33.3866, -125.092, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "188.961, -17.5166, -113.609, 0.88", "189.975, -17.0142, -115.058, 0.88", "190.394, -16.9202, -115.724, 1.25", "190.778, -16.8978, -116.422, 1.25", "191.277, -16.8761, -117.425, 0.59", "192.611, -16.8181, -120.105, 0.59", "193.951, -16.7598, -122.798, 0.96", "194.649, -16.8187, -124.265, 1.11", "195.846, -17.0368, -126.987, 1.25", "196.552, -17.2457, -128.741, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-99.2271, 152.731, -39.9971, 0.22", "-99.0317, 151.603, -39.1732, 0.22", "-98.91, 150.901, -38.6598, 0.22", "-98.6373, 149.327, -37.5104, 0.22", "-98.4709, 148.367, -36.8091, 0.22", "-98.328, 147.542, -36.2064, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-99.2271, 152.731, -39.9971, 0.22", "-100.111, 153.5, -39.5093, 0.22", "-100.888, 154.204, -39.0898, 0.22", "-101.627, 154.874, -38.6906, 0.22", "-102.334, 155.515, -38.3088, 0.22", "-103.399, 156.48, -37.7341, 0.22", "-103.942, 156.972, -37.4408, 0.37", "-104.467, 157.521, -37.1291, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "181.878, 53.4925, 122.986, 0.29", "185.728, 59.0794, 130.021, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "181.878, 53.4925, 122.986, 0.29", "184.845, 59.1554, 129.06, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "187.158, 28.2903, 87.9929, 0.29", "189.594, 27.0943, 79.9082, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "187.158, 28.2903, 87.9929, 0.29", "173.889, 31.1581, 90.7293, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "134.841, 79.1363, -28.0116, 0.37", "134.06, 79.5989, -28.228, 0.37", "132.992, 80.2963, -28.826, 0.66", "132.326, 80.7951, -29.4777, 0.29", "131.769, 81.2424, -30.1179, 0.29", "131.09, 81.8164, -30.9274, 0.29", "129.632, 83.1058, -32.6616, 0.29", "128.964, 83.6775, -33.4988, 0.81", "127.008, 85.3394, -36.1152, 0.44", "126.354, 85.913, -37.0661, 0.96", "125.834, 86.4256, -37.8943, 1.18", "125.208, 87.1285, -38.988, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "134.841, 79.1363, -28.0116, 0.37", "136.29, 79.4519, -28.0981, 0.37", "137.964, 80.055, -28.1345, 0.29", "138.579, 80.3262, -28.1311, 0.66", "139.179, 80.626, -28.1027, 0.66", "139.921, 81.0773, -28.0553, 0.37", "140.949, 81.7499, -27.9948, 0.37", "142.05, 82.5915, -27.9107, 0.81", "142.504, 82.9644, -27.8346, 1.11", "143.139, 83.4971, -27.6849, 1.33", "144.417, 84.6374, -27.2734, 0.44", "145.164, 85.3463, -26.9296, 0.52", "146.129, 86.3381, -26.3427, 1.03", "147.148, 87.4969, -25.5706, 0.52", "147.623, 88.0712, -25.1373, 0.66", "148.097, 88.6982, -24.6092, 0.66", "148.754, 89.7011, -23.6685, 0.44", "149.025, 90.2789, -23.1728, 0.29", "149.31, 91.0301, -22.6167, 0.44", "149.673, 91.9378, -22.0895, 0.66", "150.036, 92.715, -21.7068, 0.37", "150.493, 93.6359, -21.3307, 0.37", "151.222, 95.1688, -20.8017, 0.29", "151.672, 96.1596, -20.4621, 0.29", "152.309, 97.8343, -19.8839, 0.29", "152.656, 98.968, -19.4325, 0.29", "152.841, 99.8324, -19.0191, 1.55", "152.912, 100.53, -18.6175, 1.18", "152.855, 101.229, -18.0606, 0.96", "152.493, 102.303, -16.9932, 0.52", "151.749, 103.476, -15.5857, 0.29", "151.118, 104.171, -14.653, 0.29", "150.775, 104.492, -14.2044, 0.29", "149.811, 105.377, -13.0213, 0.22", "149.514, 105.66, -12.6823, 0.66", "149.154, 106.034, -12.2875, 0.66", "148.554, 106.789, -11.6643, 0.37", "148.135, 107.585, -11.1251, 0.29", "147.868, 108.427, -10.6906, 0.22", "147.731, 109.191, -10.3089, 0.22", "147.645, 110.352, -9.65575, 0.22", "147.668, 110.871, -9.34145, 0.29", "147.787, 111.636, -8.83616, 0.29", "148.043, 112.768, -8.0437, 0.29", "148.482, 114.239, -7.02479, 0.29", "148.79, 115.147, -6.37838, 0.29", "149.09, 115.877, -5.85441, 0.29", "149.511, 116.824, -5.15059, 0.29", "150.222, 118.246, -4.06431, 0.29", "150.849, 119.343, -3.24182, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-16.1575, -186.044, 12.3898, 0.29", "-15.6991, -192.935, 11.2487, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.1575, -186.044, 12.3898, 0.29", "-9.3369, -182.973, 19.2214, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-29.0708, -130.637, 0.126098, 0.37", "-29.7292, -132.023, -0.106876, 0.37", "-30.0437, -132.685, -0.218175, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-29.0708, -130.637, 0.126098, 0.29", "-31.6242, -130.538, -2.13712, 0.29", "-32.3812, -130.507, -2.77591, 0.22", "-33.4068, -130.537, -3.56968, 0.22", "-34.0276, -130.603, -4.00189, 1.47", "-34.488, -130.652, -4.32236, 1.69", "-34.9278, -130.699, -4.62855, 1.69", "-36.2289, -130.778, -5.18806, 0.96", "-37.144, -130.932, -5.65239, 0.29", "-37.9105, -131.192, -6.09782, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.4867, -172.697, 18.7008, 0.29", "36.4302, -173.719, 17.1349, 0.29", "36.381, -174.61, 15.7692, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "36.4867, -172.697, 18.7008, 0.29", "36.7395, -171.2, 17.9123, 0.29", "37.0384, -170.27, 16.9809, 0.29", "37.2927, -169.865, 16.1531, 0.29", "37.5394, -169.473, 15.3498, 0.52", "38.2371, -168.362, 13.0779, 0.44", "38.4713, -167.989, 12.3156, 0.29", "38.8587, -168.11, 11.0149, 0.29", "38.9973, -168.249, 10.5436, 0.29", "40.3785, -164.352, 3.61144, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.35544, -208.524, -24.1342, 0.22", "4.32548, -209.399, -23.9852, 0.22", "4.31514, -210.403, -23.757, 0.22", "4.33815, -211.707, -23.4562, 0.22", "4.37178, -212.777, -23.2101, 0.22", "4.44077, -214.154, -22.906, 0.22", "4.4955, -215.247, -22.6647, 0.22", "4.56393, -216.523, -22.3981, 0.22", "4.6377, -217.331, -22.2362, 0.37", "4.6801, -217.609, -22.1764, 0.37", "4.82847, -218.385, -21.9906, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.35544, -208.524, -24.1342, 1.55", "3.52433, -208.961, -24.3047, 1.55", "3.03922, -209.277, -24.4191, 1.55", "2.07816, -209.932, -24.6436, 0.29", "0.669576, -210.887, -24.9367, 0.44", "0.315205, -211.102, -25.0377, 0.44", "-1.16654, -211.851, -25.5454, 0.29", "-2.0945, -212.255, -25.9014, 0.29", "-3.01813, -212.601, -26.2519, 0.29", "-4.04599, -212.91, -26.6155, 0.29", "-6.09666, -213.331, -27.2236, 0.29", "-7.91658, -213.52, -27.6989, 0.29", "-9.06901, -213.508, -27.9619, 0.22", "-10.2289, -213.419, -28.1898, 0.22", "-11.1366, -213.32, -28.3408, 0.22", "-12.1339, -213.188, -28.4612, 0.22", "-13.3841, -213.026, -28.4721, 0.22", "-14.3211, -212.856, -28.4457, 0.22", "-14.971, -212.684, -28.4484, 0.52", "-15.5446, -212.485, -28.4739, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "196.552, -17.2457, -128.741, 0.81", "199.955, -17.0633, -130.392, 0.81", "202.552, -17.0389, -131.54, 0.88", "204.617, -17.122, -132.476, 0.37", "205.214, -17.1445, -132.742, 0.37", "206.52, -17.1939, -133.322, 0.66", "207.369, -17.226, -133.7, 0.74", "207.663, -17.242, -133.873, 0.74", "209.296, -17.4404, -134.5, 0.37", "210.111, -17.6033, -134.806, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "196.552, -17.2457, -128.741, 0.44", "198.043, -16.3913, -130.788, 0.44", "199.095, -15.7879, -132.233, 0.44", "199.677, -15.4545, -133.032, 0.44", "200.82, -14.7994, -134.601, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "125.208, 87.1285, -38.988, 0.96", "123.84, 88.242, -41.8573, 0.96", "122.262, 89.2885, -44.7143, 0.59", "121.877, 89.5433, -45.3941, 0.59", "121.527, 89.8006, -46.0395, 0.37", "120.765, 90.4528, -47.5267, 0.29", "120.288, 90.9005, -48.4784, 0.29", "119.965, 91.2507, -49.0621, 0.66", "119.426, 92.069, -50.086, 0.22", "119.151, 92.5706, -50.7208, 0.22", "118.81, 93.1949, -51.546, 0.88", "118.59, 93.5731, -52.0453, 0.88", "117.904, 94.5736, -53.4003, 0.37", "117.538, 94.98, -54.0537, 0.96", "117.148, 95.3239, -54.7282, 1.11", "116.413, 95.9192, -56.0509, 0.44", "115.993, 96.2756, -56.8718, 0.37", "115.685, 96.566, -57.5249, 0.52", "114.432, 97.8518, -60.3068, 0.37", "113.923, 98.5097, -61.626, 0.96", "113.57, 99.0725, -62.6344, 0.96", "113.237, 99.6665, -63.6546, 0.52", "113.003, 100.088, -64.4334, 1.33", "112.717, 100.567, -65.3896, 1.33", "111.429, 102.482, -69.3112, 0.52", "111.276, 102.692, -69.7535, 0.52", "110.933, 103.127, -70.7054, 0.52", "109.406, 104.865, -74.757, 0.44", "108.655, 105.641, -76.5897, 0.59", "108.173, 106.123, -77.657, 0.59", "107.651, 106.622, -78.6218, 0.88", "107.458, 106.814, -78.9347, 1.25", "107.067, 107.216, -79.4151, 1.47", "106.087, 108.238, -80.1458, 0.29", "105.174, 109.226, -80.708, 0.29", "104.801, 109.629, -80.9156, 0.29", "104.151, 110.333, -81.2318, 0.29", "103.74, 110.805, -81.4286, 0.29", "102.764, 111.98, -81.8769, 0.29", "102.378, 112.437, -82.0558, 0.29", "101.847, 112.973, -82.3042, 0.96", "101.495, 113.345, -82.4945, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "125.208, 87.1285, -38.988, 0.15", "126.062, 87.9049, -38.3634, 0.15", "126.53, 88.3302, -38.0211, 0.15", "126.905, 88.6721, -37.7461, 0.81", "127.232, 88.9688, -37.5073, 1.03", "127.662, 89.3599, -37.1927, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-30.0437, -132.685, -0.218175, 0.52", "-30.4485, -133.369, -0.525631, 0.52", "-30.9977, -134.478, -0.926287, 0.52", "-31.6433, -135.892, -1.27127, 0.37", "-31.9374, -136.544, -1.41668, 0.52", "-32.3312, -137.42, -1.59688, 0.44", "-32.7848, -138.392, -1.79446, 0.37", "-33.2428, -139.38, -1.94512, 0.29", "-33.7086, -140.423, -2.03171, 0.29", "-34.269, -141.782, -2.11746, 1.03", "-34.4317, -142.163, -2.14222, 1.18", "-34.9425, -143.248, -2.21951, 0.88", "-35.3167, -144.025, -2.2919, 0.44", "-35.7621, -145.036, -2.43473, 0.37", "-35.9616, -145.629, -2.56773, 0.59", "-36.0811, -146.184, -2.72395, 0.44", "-36.194, -147.313, -3.12334, 0.44", "-36.1938, -148.114, -3.44964, 0.44", "-36.1359, -149.34, -3.97239, 0.52", "-36.0837, -150.481, -4.44269, 0.66", "-36.0565, -151.426, -4.73909, 0.88", "-36.0604, -152.087, -4.84702, 0.88", "-36.1282, -153.101, -4.79917, 0.52", "-36.3101, -153.98, -4.53913, 0.29", "-36.6635, -155.031, -4.00378, 0.29", "-37.2036, -156.225, -3.3214, 0.29", "-37.6417, -157.011, -2.88918, 0.96", "-37.9579, -157.535, -2.67303, 1.18", "-38.2922, -158.115, -2.49957, 1.18", "-38.8413, -159.205, -2.35815, 0.59", "-39.2696, -160.353, -2.34032, 0.52", "-39.5859, -161.471, -2.38018, 0.52", "-39.9472, -162.916, -2.49421, 0.66", "-40.1523, -163.874, -2.57967, 0.66", "-40.3222, -164.906, -2.6757, 0.81", "-40.4271, -166.403, -2.77329, 0.81", "-40.3533, -167.485, -2.71221, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.0437, -132.685, -0.218175, 0.37", "-30.1637, -132.609, 0.514325, 0.37", "-30.366, -132.549, 1.46428, 0.37", "-30.481, -132.521, 1.90871, 0.37", "-30.7742, -132.448, 2.87533, 0.29", "-30.9665, -132.389, 3.44145, 0.29", "-31.1944, -132.32, 4.11262, 0.29", "-31.4108, -132.268, 4.76226, 0.37", "-31.548, -132.257, 5.06913, 0.37", "-31.7113, -132.256, 5.35551, 0.29", "-31.9378, -132.239, 5.63757, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "36.381, -174.61, 15.7692, 0.22", "35.5513, -175.693, 15.5219, 0.22", "34.3558, -177.254, 15.1654, 0.22", "33.6763, -178.141, 14.9628, 0.29", "33.3059, -178.625, 14.8524, 0.29", "32.3462, -179.878, 14.5663, 0.22", "31.7191, -180.697, 14.3793, 0.22", "26.8484, -191.078, 11.9623, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.381, -174.61, 15.7692, 0.37", "36.2116, -175.483, 16.1102, 0.37", "36.0114, -176.273, 16.2779, 0.96", "35.7178, -177.258, 16.336, 0.59", "35.4904, -178.007, 16.282, 0.59", "35.2492, -178.802, 16.2247, 0.22", "35.0195, -179.559, 16.1702, 0.22", "34.7187, -180.37, 16.0067, 0.22", "34.4489, -181.053, 15.747, 0.22", "34.1323, -181.755, 15.348, 0.22", "32.8453, -188.783, 15.9695, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "200.82, -14.7994, -134.601, 0.37", "203.602, -14.8396, -142.593, 0.37", "204.062, -14.8078, -143.953, 0.66", "204.393, -14.7317, -145.02, 0.66", "204.544, -14.6755, -145.532, 0.96", "204.925, -14.4521, -146.833, 1.11", "205.38, -14.1005, -148.334, 1.11", "206.041, -13.212, -150.052, 0.81", "206.561, -12.4036, -151.257, 1.4", "206.734, -12.1056, -151.608, 1.4", "207.41, -10.8684, -152.705, 0.37", "207.898, -9.93925, -153.259, 0.37", "208.512, -8.79064, -153.672, 0.37", "209.008, -7.85184, -153.845, 0.66", "209.391, -7.07242, -153.923, 0.66", "209.823, -5.94419, -154.045, 0.29", "210.044, -5.05797, -154.143, 0.52", "210.144, -4.40593, -154.234, 0.52", "210.272, -3.30542, -154.45, 0.29", "210.415, -2.16679, -154.727, 1.03", "210.684, -0.47092, -155.25, 0.66", "210.88, 0.604583, -155.625, 0.44", "210.958, 0.987726, -155.763, 0.66", "211.204, 2.16943, -156.21, 0.37", "211.345, 2.76521, -156.418, 0.52", "211.657, 3.91536, -156.755, 0.37", "211.909, 4.70406, -156.905, 0.37", "212.187, 5.54333, -157.054, 0.37", "212.439, 6.49113, -157.219, 0.37", "212.624, 7.41002, -157.362, 0.96", "212.702, 7.79669, -157.418, 0.96", "213.055, 9.34083, -157.603, 0.29", "213.372, 10.59, -157.763, 0.29", "213.692, 11.748, -157.923, 0.29", "213.97, 12.7165, -158.067, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "200.82, -14.7994, -134.601, 0.52", "199.39, -11.8396, -139.37, 0.52", "199.263, -11.5858, -139.745, 0.52", "198.618, -10.3618, -141.442, 0.37", "198.437, -10.0193, -141.917, 0.29", "197.891, -8.98297, -143.355, 0.29", "197.427, -8.10196, -144.576, 0.29", "196.906, -7.04832, -145.398, 0.29", "196.677, -6.60147, -145.766, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "101.495, 113.345, -82.4945, 0.29", "100.057, 115.678, -84.052, 0.29", "99.6209, 116.222, -84.6666, 0.29", "99.0213, 116.895, -85.6097, 0.29", "97.9589, 118.105, -87.3244, 0.29", "97.5544, 118.588, -87.9553, 0.44", "97.0052, 119.244, -88.812, 0.44", "95.3219, 121.026, -91.3984, 0.29", "94.5351, 121.821, -92.6885, 0.29", "94.0988, 122.268, -93.4793, 0.29", "93.443, 122.947, -94.6952, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "101.495, 113.345, -82.4945, 0.22", "100.855, 112.661, -82.1897, 0.22", "100.335, 112.145, -81.912, 0.22", "99.6994, 111.548, -81.5214, 1.4", "98.987, 110.878, -81.0832, 0.22", "98.1922, 110.131, -80.5942, 1.84", "97.496, 109.476, -80.166, 0.22", "96.9175, 108.935, -79.7284, 0.22", "96.388, 108.453, -79.2839, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "127.662, 89.3599, -37.1927, 0.74", "127.875, 89.4311, -36.6497, 0.74", "128.188, 89.5184, -35.7628, 0.22", "128.34, 89.5647, -35.2099, 0.22", "128.577, 89.6308, -34.0902, 0.22", "128.778, 89.6327, -33.0781, 1.33", "128.888, 89.6092, -32.5756, 1.33", "129.111, 89.4876, -31.5413, 0.22", "129.255, 89.3527, -30.7967, 0.22", "129.33, 89.2494, -30.3209, 0.22", "129.447, 89.0357, -29.2771, 0.22", "129.568, 88.8367, -28.502, 0.22", "129.695, 88.7136, -28.0114, 0.37", "129.879, 88.6035, -27.529, 0.37", "130.161, 88.4899, -27.0079, 0.37", "130.406, 88.4319, -26.6255, 0.15", "131.053, 88.3531, -25.5669, 0.22", "131.568, 88.3237, -24.6913, 0.22", "131.921, 88.2931, -24.0692, 0.22", "132.496, 88.2476, -22.9134, 0.22", "132.84, 88.1981, -22.0792, 0.22", "133.223, 88.1073, -21.0001, 0.22", "133.344, 88.0692, -20.5984, 0.74", "133.772, 87.8656, -18.9314, 0.29", "133.993, 87.7425, -17.9259, 0.29", "134.198, 87.6361, -16.9406, 0.29", "134.372, 87.5287, -16.2256, 0.29", "134.65, 87.3458, -15.3771, 0.52", "134.931, 87.1469, -14.6145, 0.37", "135.337, 86.8663, -13.6259, 0.29", "135.443, 86.7915, -13.3851, 0.37", "135.858, 86.4992, -12.4467, 0.37", "136.389, 86.093, -11.1882, 0.37", "136.784, 85.7547, -10.2105, 0.22", "137.011, 85.5526, -9.67752, 0.22", "137.253, 85.3304, -9.10412, 0.74", "137.378, 85.216, -8.7816, 0.88", "137.725, 84.9349, -7.75646, 0.59", "138.04, 84.718, -6.54119, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "127.662, 89.3599, -37.1927, 0.29", "128.526, 90.082, -37.733, 0.29", "129.205, 90.7893, -38.3959, 0.29", "129.83, 91.5108, -39.1377, 1.03", "130.113, 91.8583, -39.5073, 1.03", "130.815, 92.6646, -40.4461, 0.44", "131.358, 93.2357, -41.1586, 0.29", "132.055, 93.9354, -42.1705, 0.96", "132.29, 94.1505, -42.518, 0.96", "133.021, 94.7244, -43.4971, 0.22", "133.617, 95.1457, -44.1976, 0.22", "134.297, 95.5397, -44.8369, 0.22", "135.08, 95.9636, -45.4606, 0.22", "136.032, 96.4688, -46.1011, 0.22", "136.647, 96.8031, -46.4635, 0.52", "137.178, 97.1037, -46.7055, 0.29", "137.89, 97.5338, -46.9103, 1.03", "138.406, 97.822, -46.9435, 1.03", "138.913, 98.0979, -46.8519, 0.88", "139.455, 98.3625, -46.6824, 0.66", "140.159, 98.6811, -46.394, 0.37", "140.907, 98.9876, -46.012, 0.59", "141.822, 99.3317, -45.4555, 0.29", "142.641, 99.59, -44.9185, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-40.3533, -167.485, -2.71221, 0.74", "-40.5336, -168.305, -2.28443, 0.74", "-40.8841, -169.517, -1.55815, 0.66", "-41.2069, -170.314, -0.997485, 0.52", "-41.723, -171.28, -0.23263, 0.37", "-42.0347, -171.808, 0.190452, 0.74", "-42.2836, -172.258, 0.552789, 1.03", "-42.6258, -172.854, 1.05143, 0.74", "-43.1155, -173.715, 1.75858, 0.52", "-43.5891, -174.673, 2.45887, 0.52", "-43.8935, -175.442, 2.91049, 0.66", "-44.2932, -176.779, 3.51079, 0.88", "-44.4043, -177.255, 3.67207, 1.18", "-44.5408, -178.021, 3.86532, 0.81", "-44.6877, -179.108, 4.05424, 0.52", "-44.8255, -180.024, 4.15386, 0.52", "-45.0438, -181.11, 4.23494, 0.52", "-45.1843, -181.626, 4.2539, 0.52", "-45.4871, -182.64, 4.29277, 0.52", "-45.8162, -183.642, 4.34298, 0.52", "-46.1292, -184.484, 4.38249, 1.03", "-46.3768, -185.096, 4.41929, 1.25", "-46.7377, -185.856, 4.4892, 0.66", "-47.1555, -186.595, 4.58226, 0.29", "-47.7551, -187.318, 4.7622, 0.29", "-48.1278, -187.218, 4.96699, 0.52", "-49.0456, -186.552, 5.54015, 0.29", "-49.7551, -185.925, 5.99015, 0.29", "-50.4931, -185.15, 6.47105, 0.22", "-50.6309, -184.983, 6.5607, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-40.3533, -167.485, -2.71221, 0.22", "-40.9295, -169.37, -3.20257, 0.22", "-41.1575, -170.124, -3.40852, 0.22", "-41.5474, -171.628, -3.81051, 0.22", "-41.9368, -173.335, -4.24208, 0.22", "-42.2523, -174.718, -4.59182, 0.22", "-42.8649, -177.402, -5.2707, 0.22", "-43.1459, -178.554, -5.51802, 0.22", "-43.6885, -180.826, -6.05032, 0.22", "-43.9438, -182.092, -6.39149, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "213.97, 12.7165, -158.067, 0.29", "215.329, 11.7161, -158.463, 0.29", "216.111, 11.1406, -158.691, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "213.97, 12.7165, -158.067, 0.37", "214.199, 14.0569, -158.281, 0.37", "214.468, 15.6352, -158.532, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "axon_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "axon_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_ChC_a78ee53c37_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, axon_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, axon_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 10.8306, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.0380917, 12.3767, -3.57275, 0.37 ) }
    dend_78 { pt3dadd( -0.111472, 12.7967, -3.65539, 0.74 ) }
    dend_78 { pt3dadd( -0.0641858, 13.1277, -3.78219, 0.74 ) }
    dend_78 { pt3dadd( 0.333818, 14.1441, -4.2645, 0.37 ) }
    dend_78 { pt3dadd( 0.725341, 14.9567, -4.62304, 0.66 ) }
    dend_78 { pt3dadd( 1.18295, 15.7954, -5.00603, 1.33 ) }
    dend_78 { pt3dadd( 1.61399, 16.4208, -5.30474, 1.33 ) }
    dend_78 { pt3dadd( 2.33939, 17.4538, -5.8066, 0.74 ) }
    dend_78 { pt3dadd( 2.88124, 18.2795, -6.18453, 0.74 ) }
    dend_78 { pt3dadd( 3.70695, 19.6447, -6.80811, 1.25 ) }
    dend_78 { pt3dadd( 4.22729, 20.7422, -7.28811, 2.06 ) }
    dend_78 { pt3dadd( 4.49126, 21.5616, -7.60871, 2.06 ) }
    dend_78 { pt3dadd( 4.67309, 22.6714, -8.0049, 1.4 ) }
    dend_78 { pt3dadd( 4.60407, 23.953, -8.44611, 0.74 ) }
    dend_78 { pt3dadd( 4.29978, 24.7935, -8.73816, 1.11 ) }
    dend_78 { pt3dadd( 3.77034, 25.4377, -8.96424, 1.11 ) }
    dend_78 { pt3dadd( 3.00698, 25.9882, -9.14324, 0.81 ) }
    dend_78 { pt3dadd( 2.00165, 26.4531, -9.38995, 0.81 ) }
    dend_78 { pt3dadd( 0.773165, 26.8311, -9.71444, 0.81 ) }
    dend_78 { pt3dadd( -0.424576, 27.1081, -10.0651, 0.96 ) }
    dend_78 { pt3dadd( -1.4134, 27.3357, -10.3662, 1.11 ) }
    dend_78 { pt3dadd( -2.30171, 27.5665, -10.6874, 1.11 ) }
    dend_78 { pt3dadd( -4.23142, 28.1909, -11.5302, 1.11 ) }
    dend_78 { pt3dadd( -4.80158, 28.4476, -11.8401, 1.11 ) }
    dend_78 { pt3dadd( -5.72129, 29.1301, -12.477, 0.59 ) }
    dend_78 { pt3dadd( -6.26479, 29.8621, -12.9372, 0.96 ) }
    dend_78 { pt3dadd( -6.58623, 30.5379, -13.2418, 1.25 ) }
    dend_78 { pt3dadd( -6.8131, 31.1474, -13.4504, 1.55 ) }
    dend_78 { pt3dadd( -6.95073, 31.5314, -13.5402, 1.55 ) }
    dend_78 { pt3dadd( -7.44222, 32.7102, -13.7905, 0.74 ) }
    dend_78 { pt3dadd( -8.2144, 34.1359, -14.0886, 0.96 ) }
    dend_78 { pt3dadd( -8.8539, 35.0003, -14.3037, 0.66 ) }
    dend_78 { pt3dadd( -9.38462, 35.544, -14.4714, 0.66 ) }
    dend_78 { pt3dadd( -10.2369, 36.2197, -14.7372, 0.81 ) }
    dend_78 { pt3dadd( -10.9443, 36.6637, -14.965, 0.96 ) }
    dend_78 { pt3dadd( -11.875, 37.1404, -15.2889, 1.47 ) }
    dend_78 { pt3dadd( -12.7326, 37.552, -15.604, 1.62 ) }
    dend_78 { pt3dadd( -13.5424, 38.0006, -15.9103, 1.47 ) }
    dend_78 { pt3dadd( -14.2962, 38.5039, -16.2104, 1.11 ) }
    dend_78 { pt3dadd( -15.1477, 39.1959, -16.574, 0.81 ) }
    dend_78 { pt3dadd( -16.1502, 40.2263, -17.0666, 0.66 ) }
    dend_78 { pt3dadd( -16.689, 40.9372, -17.3657, 0.81 ) }
    dend_78 { pt3dadd( -17.3818, 42.137, -17.8132, 1.03 ) }
    dend_78 { pt3dadd( -17.6496, 42.7622, -18.0393, 1.25 ) }
    dend_78 { pt3dadd( -17.8403, 43.344, -18.2595, 1.25 ) }
    dend_78 { pt3dadd( -18.185, 44.5996, -18.7818, 0.96 ) }
    dend_78 { pt3dadd( -18.4418, 45.5688, -19.2427, 0.81 ) }
    dend_78 { pt3dadd( -18.7998, 46.7645, -19.8883, 0.59 ) }
    dend_78 { pt3dadd( -19.095, 47.5953, -20.3679, 0.59 ) }
    dend_78 { pt3dadd( -19.501, 48.5796, -20.9428, 0.59 ) }
    dend_78 { pt3dadd( -19.9471, 49.546, -21.4876, 0.59 ) }
    dend_78 { pt3dadd( -20.3792, 50.4508, -21.9102, 0.44 ) }
    dend_78 { pt3dadd( -20.7887, 51.3955, -22.2342, 0.66 ) }
    dend_78 { pt3dadd( -21.1061, 52.4047, -22.4116, 0.74 ) }
    dend_78 { pt3dadd( -21.209, 53.0381, -22.443, 0.96 ) }
    dend_78 { pt3dadd( -21.2187, 53.7468, -22.4195, 0.96 ) }
    dend_78 { pt3dadd( -21.0598, 55.3198, -22.3883, 0.52 ) }
    dend_78 { pt3dadd( -20.8402, 56.5954, -22.4065, 0.59 ) }
    dend_78 { pt3dadd( -20.5494, 58.0419, -22.4851, 0.59 ) }
    dend_78 { pt3dadd( -20.3995, 58.8502, -22.5666, 0.96 ) }
    dend_78 { pt3dadd( -20.2844, 59.7828, -22.7088, 0.96 ) }
    dend_78 { pt3dadd( -20.2483, 61.4388, -23.0675, 0.66 ) }
    dend_78 { pt3dadd( -20.4309, 62.5771, -23.4369, 0.66 ) }
    dend_78 { pt3dadd( -20.8337, 63.4991, -23.8213, 0.96 ) }
    dend_78 { pt3dadd( -21.2995, 64.0583, -24.0767, 1.03 ) }
    dend_78 { pt3dadd( -21.8941, 64.5097, -24.3192, 1.03 ) }
    dend_78 { pt3dadd( -22.6844, 64.9205, -24.6108, 1.03 ) }
    dend_78 { pt3dadd( -23.7496, 65.3063, -25.0334, 0.74 ) }
    dend_78 { pt3dadd( -24.5879, 65.5437, -25.4502, 0.74 ) }
    dend_78 { pt3dadd( -25.1471, 65.6714, -25.7894, 0.52 ) }
    dend_78 { pt3dadd( -26.3844, 65.9004, -26.7032, 0.52 ) }
    dend_78 { pt3dadd( -27.4315, 66.0537, -27.57, 0.52 ) }
    dend_78 { pt3dadd( -28.4993, 66.1753, -28.4952, 1.11 ) }
    dend_78 { pt3dadd( -29.0799, 66.2276, -28.982, 1.4 ) }
    dend_78 { pt3dadd( -29.7392, 66.2684, -29.4769, 1.4 ) }
    dend_78 { pt3dadd( -30.8662, 66.2972, -30.1796, 0.81 ) }
    dend_78 { pt3dadd( -31.5611, 66.3116, -30.4637, 0.59 ) }
    dend_78 { pt3dadd( -32.6074, 66.3613, -30.6872, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -33.6586, 66.4585, -30.7479, 0.44 ) }
    dend_78 { pt3dadd( -34.7246, 66.6215, -30.7167, 0.74 ) }
    dend_78 { pt3dadd( -35.7432, 66.8934, -30.637, 1.33 ) }
    dend_78 { pt3dadd( -36.9821, 67.4289, -30.565, 0.88 ) }
    dend_78 { pt3dadd( -37.5312, 67.787, -30.6418, 0.59 ) }
    dend_78 { pt3dadd( -37.8713, 68.1011, -30.781, 0.59 ) }
    dend_78 { pt3dadd( -38.35, 68.6569, -31.131, 0.74 ) }
    dend_78 { pt3dadd( -38.9421, 69.4363, -31.7434, 0.96 ) }
    dend_78 { pt3dadd( -39.7066, 70.4508, -32.6806, 0.59 ) }
    dend_78 { pt3dadd( -40.4977, 71.4413, -33.7225, 0.59 ) }
    dend_78 { pt3dadd( -40.9093, 71.9388, -34.2427, 0.81 ) }
    dend_78 { pt3dadd( -41.4292, 72.508, -34.8128, 0.96 ) }
    dend_78 { pt3dadd( -41.9275, 72.9697, -35.2396, 1.03 ) }
    dend_78 { pt3dadd( -42.7714, 73.6718, -35.7804, 0.66 ) }
    dend_78 { pt3dadd( -43.0299, 73.8943, -35.9145, 0.66 ) }
    dend_78 { pt3dadd( -43.7242, 74.5943, -36.2489, 0.81 ) }
    dend_78 { pt3dadd( -44.3367, 75.3522, -36.6095, 0.81 ) }
    dend_78 { pt3dadd( -44.8024, 76.1344, -36.9639, 0.66 ) }
    dend_78 { pt3dadd( -45.1819, 76.9673, -37.3257, 0.66 ) }
    dend_78 { pt3dadd( -45.6542, 78.263, -37.8783, 0.52 ) }
    dend_78 { pt3dadd( -45.9244, 79.0719, -38.2345, 0.81 ) }
    dend_78 { pt3dadd( -46.1232, 79.6751, -38.5114, 0.74 ) }
    dend_78 { pt3dadd( -46.6039, 80.9692, -39.0988, 0.59 ) }
    dend_78 { pt3dadd( -46.8972, 81.6018, -39.362, 0.74 ) }
    dend_78 { pt3dadd( -47.2892, 82.2279, -39.5896, 0.96 ) }
    dend_78 { pt3dadd( -47.8945, 82.98, -39.77, 0.96 ) }
    dend_78 { pt3dadd( -48.4242, 83.5606, -39.8569, 0.74 ) }
    dend_78 { pt3dadd( -49.1575, 84.3151, -39.9169, 1.03 ) }
    dend_78 { pt3dadd( -49.6868, 84.8434, -39.8696, 1.25 ) }
    dend_78 { pt3dadd( -50.058, 85.2434, -39.7936, 0.81 ) }
    dend_78 { pt3dadd( -50.8458, 86.1878, -39.5494, 0.59 ) }
    dend_78 { pt3dadd( -51.3258, 86.8287, -39.3472, 0.66 ) }
    dend_78 { pt3dadd( -51.7241, 87.4095, -39.1448, 0.66 ) }
    dend_78 { pt3dadd( -52.7571, 89.0175, -38.5422, 0.88 ) }
    dend_78 { pt3dadd( -53.2808, 89.8411, -38.2094, 1.11 ) }
    dend_78 { pt3dadd( -53.6408, 90.4043, -37.9588, 1.03 ) }
    dend_78 { pt3dadd( -54.0788, 91.0842, -37.6471, 1.25 ) }
    dend_78 { pt3dadd( -54.2424, 91.337, -37.5207, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.67164, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.77559, 10.2452, -4.76833, 1.11 ) }
    dend_53 { pt3dadd( 5.23249, 10.7032, -5.07322, 1.11 ) }
    dend_53 { pt3dadd( 5.96145, 11.4691, -5.55917, 1.11 ) }
    dend_53 { pt3dadd( 6.46144, 12.0209, -5.92501, 0.96 ) }
    dend_53 { pt3dadd( 7.2896, 12.8401, -6.46559, 1.55 ) }
    dend_53 { pt3dadd( 8.00988, 13.4951, -6.90066, 1.62 ) }
    dend_53 { pt3dadd( 8.43407, 13.8391, -7.13821, 1.62 ) }
    dend_53 { pt3dadd( 9.08958, 14.3165, -7.42678, 1.25 ) }
    dend_53 { pt3dadd( 10.1886, 15.0341, -7.76415, 0.96 ) }
    dend_53 { pt3dadd( 11.8675, 16.0201, -8.07029, 0.88 ) }
    dend_53 { pt3dadd( 12.6556, 16.4209, -8.11811, 1.55 ) }
    dend_53 { pt3dadd( 13.5161, 16.7981, -8.09735, 1.84 ) }
    dend_53 { pt3dadd( 14.8067, 17.3048, -7.99624, 1.11 ) }
    dend_53 { pt3dadd( 15.4842, 17.5593, -7.90754, 1.03 ) }
    dend_53 { pt3dadd( 16.2423, 17.8734, -7.75989, 1.25 ) }
    dend_53 { pt3dadd( 16.9756, 18.2675, -7.60619, 0.88 ) }
    dend_53 { pt3dadd( 17.6519, 18.7184, -7.46504, 0.88 ) }
    dend_53 { pt3dadd( 18.2852, 19.2108, -7.33468, 0.88 ) }
    dend_53 { pt3dadd( 19.0288, 19.8235, -7.1765, 0.88 ) }
    dend_53 { pt3dadd( 19.6646, 20.3814, -6.97172, 0.96 ) }
    dend_53 { pt3dadd( 20.3225, 21.0063, -6.72587, 0.96 ) }
    dend_53 { pt3dadd( 20.9229, 21.639, -6.45817, 0.81 ) }
    dend_53 { pt3dadd( 21.8064, 22.6272, -5.98643, 1.11 ) }
    dend_53 { pt3dadd( 22.3858, 23.2535, -5.61974, 1.4 ) }
    dend_53 { pt3dadd( 23.0533, 23.8818, -5.12376, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.33214, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.39617, 8.67435, 2.63715, 1.62 ) }
    dend_50 { pt3dadd( 5.11897, 9.08416, 3.28809, 1.25 ) }
    dend_50 { pt3dadd( 6.43391, 9.65617, 4.60824, 1.25 ) }
    dend_50 { pt3dadd( 7.12926, 9.91629, 5.3532, 1.25 ) }
    dend_50 { pt3dadd( 7.8548, 10.1009, 6.22345, 1.92 ) }
    dend_50 { pt3dadd( 8.16182, 10.1517, 6.61443, 2.5 ) }
    dend_50 { pt3dadd( 8.82948, 10.1689, 7.53858, 2.5 ) }
    dend_50 { pt3dadd( 10.2105, 10.0068, 9.59373, 1.77 ) }
    dend_50 { pt3dadd( 11.1683, 9.72241, 11.0161, 0.96 ) }
    dend_50 { pt3dadd( 12.5198, 9.18105, 13.018, 0.88 ) }
    dend_50 { pt3dadd( 12.9062, 9.00563, 13.5994, 0.88 ) }
    dend_50 { pt3dadd( 13.211, 8.87266, 14.0443, 1.4 ) }
    dend_50 { pt3dadd( 13.5123, 8.76339, 14.4331, 1.4 ) }
    dend_50 { pt3dadd( 14.6113, 8.52835, 15.5462, 0.66 ) }
    dend_50 { pt3dadd( 15.0774, 8.55459, 15.9181, 0.66 ) }
    dend_50 { pt3dadd( 16.1844, 8.97396, 16.5733, 0.88 ) }
    dend_50 { pt3dadd( 16.8799, 9.3462, 16.9287, 0.88 ) }
    dend_50 { pt3dadd( 17.7534, 9.90195, 17.2747, 0.74 ) }
    dend_50 { pt3dadd( 18.4045, 10.3725, 17.4698, 1.4 ) }
    dend_50 { pt3dadd( 19.1539, 10.9606, 17.6062, 2.06 ) }
    dend_50 { pt3dadd( 19.8918, 11.5215, 17.6636, 1.84 ) }
    dend_50 { pt3dadd( 20.7768, 12.1631, 17.6132, 1.18 ) }
    dend_50 { pt3dadd( 21.6975, 12.7823, 17.5853, 1.18 ) }
    dend_50 { pt3dadd( 22.0714, 13.0019, 17.6382, 1.03 ) }
    dend_50 { pt3dadd( 22.6963, 13.2967, 17.8978, 1.03 ) }
    dend_50 { pt3dadd( 23.1099, 13.4565, 18.3147, 0.59 ) }
    dend_50 { pt3dadd( 23.4938, 13.6257, 18.9297, 0.59 ) }
    dend_50 { pt3dadd( 24.2462, 14.0172, 20.4619, 0.88 ) }
    dend_50 { pt3dadd( 25.1213, 14.5479, 22.4775, 1.62 ) }
    dend_50 { pt3dadd( 25.4974, 14.8081, 23.354, 1.62 ) }
    dend_50 { pt3dadd( 26.3724, 15.4642, 25.3811, 0.88 ) }
    dend_50 { pt3dadd( 26.78, 15.7689, 26.2645, 0.88 ) }
    dend_50 { pt3dadd( 27.156, 16.0595, 26.995, 1.47 ) }
    dend_50 { pt3dadd( 27.4202, 16.2665, 27.414, 1.47 ) }
    dend_50 { pt3dadd( 28.0998, 16.758, 28.2309, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 28.4788, 16.9836, 28.5967, 0.59 ) }
    dend_50 { pt3dadd( 28.8842, 17.1665, 28.9161, 0.59 ) }
    dend_50 { pt3dadd( 29.8731, 17.5636, 29.7042, 1.25 ) }
    dend_50 { pt3dadd( 31.4284, 18.2092, 31.0011, 0.74 ) }
    dend_50 { pt3dadd( 31.9156, 18.4577, 31.4556, 0.29 ) }
    dend_50 { pt3dadd( 32.3491, 18.6981, 31.9149, 0.29 ) }
    dend_50 { pt3dadd( 32.5974, 18.8361, 32.2146, 0.59 ) }
    dend_50 { pt3dadd( 33.2548, 19.2146, 33.0248, 1.11 ) }
    dend_50 { pt3dadd( 33.587, 19.3824, 33.4223, 1.11 ) }
    dend_50 { pt3dadd( 34.2999, 19.9805, 34.2757, 1.11 ) }
    dend_50 { pt3dadd( 34.7026, 20.5246, 34.9542, 0.59 ) }
    dend_50 { pt3dadd( 34.7136, 18.9641, 35.0658, 0.59 ) }
    dend_50 { pt3dadd( 34.8515, 17.355, 35.4812, 0.52 ) }
    dend_50 { pt3dadd( 34.9469, 16.2311, 35.7684, 0.59 ) }
    dend_50 { pt3dadd( 41.0756, 18.0969, 41.2312, 0.59 ) }
    dend_50 { pt3dadd( 47.503, 20.6781, 45.9815, 0.59 ) }
    dend_50 { pt3dadd( 52.815, 24.4142, 51.2329, 0.59 ) }
    dend_50 { pt3dadd( 58.0777, 28.9058, 55.8384, 0.59 ) }
    dend_50 { pt3dadd( 64.1971, 33.7254, 58.6801, 0.59 ) }
    dend_50 { pt3dadd( 69.71, 38.7981, 62.1952, 0.59 ) }
    dend_50 { pt3dadd( 75.5268, 42.9772, 66.4466, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.32775, 6.4901, 1.89211, 1.69 ) }
    dend_49 { pt3dadd( -5.27895, 6.85245, 2.28658, 1.4 ) }
    dend_49 { pt3dadd( -5.98944, 7.06979, 2.68281, 1.03 ) }
    dend_49 { pt3dadd( -6.9874, 7.3756, 3.31333, 0.88 ) }
    dend_49 { pt3dadd( -7.68585, 7.60456, 3.78818, 0.88 ) }
    dend_49 { pt3dadd( -8.5982, 7.85782, 4.48763, 0.59 ) }
    dend_49 { pt3dadd( -9.4522, 8.07186, 5.20517, 0.44 ) }
    dend_49 { pt3dadd( -11.0574, 8.44674, 6.63653, 0.37 ) }
    dend_49 { pt3dadd( -11.6173, 8.57537, 7.15265, 0.37 ) }
    dend_49 { pt3dadd( -12.5363, 8.78958, 8.01941, 0.37 ) }
    dend_49 { pt3dadd( -14.7401, 9.3214, 10.1913, 1.03 ) }
    dend_49 { pt3dadd( -15.2469, 9.45928, 10.7088, 1.62 ) }
    dend_49 { pt3dadd( -26.2083, 10.144, 15.2681, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.13936, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.22285, -2.00332, -14.5793, 0.74 ) }
    dend_44 { pt3dadd( -6.80509, -2.97944, -14.5708, 1.03 ) }
    dend_44 { pt3dadd( -8.189, -3.81642, -14.5919, 1.25 ) }
    dend_44 { pt3dadd( -9.29562, -4.49565, -14.621, 1.62 ) }
    dend_44 { pt3dadd( -10.2024, -5.04286, -14.6495, 1.84 ) }
    dend_44 { pt3dadd( -11.3915, -5.71817, -14.6574, 1.84 ) }
    dend_44 { pt3dadd( -12.4448, -6.24587, -14.6096, 1.99 ) }
    dend_44 { pt3dadd( -13.5516, -6.7237, -14.5042, 2.21 ) }
    dend_44 { pt3dadd( -14.8447, -7.18717, -14.3171, 2.65 ) }
    dend_44 { pt3dadd( -15.762, -7.46198, -14.1701, 2.5 ) }
    dend_44 { pt3dadd( -17.312, -7.86813, -13.9345, 1.77 ) }
    dend_44 { pt3dadd( -18.9536, -8.27794, -13.7381, 1.33 ) }
    dend_44 { pt3dadd( -20.0697, -8.56399, -13.6853, 1.18 ) }
    dend_44 { pt3dadd( -21.3929, -8.91637, -13.7694, 1.11 ) }
    dend_44 { pt3dadd( -22.3333, -9.19859, -14.0351, 1.11 ) }
    dend_44 { pt3dadd( -23.3021, -9.53023, -14.6269, 1.11 ) }
    dend_44 { pt3dadd( -24.2276, -9.8737, -15.5349, 1.4 ) }
    dend_44 { pt3dadd( -25.1488, -10.1966, -16.7086, 1.03 ) }
    dend_44 { pt3dadd( -25.9247, -10.4376, -17.8458, 0.88 ) }
    dend_44 { pt3dadd( -27.0792, -10.714, -19.7089, 0.88 ) }
    dend_44 { pt3dadd( -28.3268, -10.906, -21.9093, 1.47 ) }
    dend_44 { pt3dadd( -29.2705, -10.9916, -23.6544, 1.77 ) }
    dend_44 { pt3dadd( -30.3269, -11.0084, -25.6845, 1.84 ) }
    dend_44 { pt3dadd( -30.7005, -10.987, -26.4214, 2.06 ) }
    dend_44 { pt3dadd( -31.3773, -10.9056, -27.7921, 1.77 ) }
    dend_44 { pt3dadd( -32.4199, -10.6958, -29.8515, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.28048, -1.82219, 9.5845, 2.06 ) }
    dend_41 { pt3dadd( -6.96677, -1.7879, 9.91985, 2.06 ) }
    dend_41 { pt3dadd( -8.74757, -1.81364, 10.748, 1.84 ) }
    dend_41 { pt3dadd( -9.73897, -1.90053, 11.1956, 1.84 ) }
    dend_41 { pt3dadd( -10.4974, -2.02124, 11.5344, 1.99 ) }
    dend_41 { pt3dadd( -11.8622, -2.34703, 12.1424, 1.55 ) }
    dend_41 { pt3dadd( -12.9725, -2.73412, 12.6246, 1.03 ) }
    dend_41 { pt3dadd( -13.8701, -3.14878, 12.9844, 0.88 ) }
    dend_41 { pt3dadd( -14.7417, -3.66787, 13.2372, 1.18 ) }
    dend_41 { pt3dadd( -15.446, -4.14082, 13.391, 1.18 ) }
    dend_41 { pt3dadd( -15.9859, -4.53685, 13.4803, 1.47 ) }
    dend_41 { pt3dadd( -16.7872, -5.18405, 13.5501, 1.25 ) }
    dend_41 { pt3dadd( -17.5761, -5.84804, 13.6543, 1.03 ) }
    dend_41 { pt3dadd( -18.2875, -6.43963, 13.8136, 1.62 ) }
    dend_41 { pt3dadd( -19.0001, -7.01869, 14.0783, 1.69 ) }
    dend_41 { pt3dadd( -19.5495, -7.43857, 14.361, 1.33 ) }
    dend_41 { pt3dadd( -20.5309, -8.12905, 15.0288, 1.03 ) }
    dend_41 { pt3dadd( -21.7397, -8.84112, 16.0804, 0.88 ) }
    dend_41 { pt3dadd( -22.5848, -9.21956, 17.0168, 1.11 ) }
    dend_41 { pt3dadd( -23.3171, -9.40836, 17.9784, 1.33 ) }
    dend_41 { pt3dadd( -23.7737, -9.42752, 18.6543, 1.33 ) }
    dend_41 { pt3dadd( -24.2239, -9.31644, 19.3524, 1.18 ) }
    dend_41 { pt3dadd( -24.7596, -9.02346, 20.1594, 0.88 ) }
    dend_41 { pt3dadd( -25.5214, -8.47954, 21.144, 1.18 ) }
    dend_41 { pt3dadd( -25.9965, -8.1519, 21.6786, 1.33 ) }
    dend_41 { pt3dadd( -26.4153, -7.93735, 22.0957, 1.33 ) }
    dend_41 { pt3dadd( -27.1373, -7.73734, 22.772, 0.59 ) }
    dend_41 { pt3dadd( -28.1276, -7.7872, 23.6136, 0.52 ) }
    dend_41 { pt3dadd( -28.63, -8.07737, 23.981, 0.59 ) }
    dend_41 { pt3dadd( -29.3306, -8.98133, 24.534, 0.59 ) }
    dend_41 { pt3dadd( -30.0053, -10.2244, 25.2066, 0.59 ) }
    dend_41 { pt3dadd( -30.355, -10.9655, 25.5995, 1.03 ) }
    dend_41 { pt3dadd( -30.7555, -11.891, 26.1351, 1.03 ) }
    dend_41 { pt3dadd( -31.0865, -12.6607, 26.6254, 1.03 ) }
    dend_41 { pt3dadd( -31.7107, -13.9468, 27.6254, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -32.3023, -14.7952, 28.5722, 0.66 ) }
    dend_41 { pt3dadd( -32.8007, -15.1867, 29.3007, 0.66 ) }
    dend_41 { pt3dadd( -33.679, -15.5108, 30.4548, 0.74 ) }
    dend_41 { pt3dadd( -34.3, -15.6135, 31.2163, 0.81 ) }
    dend_41 { pt3dadd( -34.8776, -15.6516, 31.8983, 0.52 ) }
    dend_41 { pt3dadd( -35.9244, -15.666, 33.037, 0.52 ) }
    dend_41 { pt3dadd( -36.3728, -15.697, 33.5297, 0.44 ) }
    dend_41 { pt3dadd( -37.0255, -15.9696, 34.3976, 0.37 ) }
    dend_41 { pt3dadd( -37.3394, -16.3918, 34.9065, 0.37 ) }
    dend_41 { pt3dadd( -37.6306, -17.0324, 35.4267, 1.11 ) }
    dend_41 { pt3dadd( -37.8792, -17.6895, 35.8332, 1.4 ) }
    dend_41 { pt3dadd( -38.1185, -18.5549, 36.2713, 1.4 ) }
    dend_41 { pt3dadd( -38.4127, -19.8688, 36.8753, 0.81 ) }
    dend_41 { pt3dadd( -38.6108, -20.8582, 37.2798, 0.29 ) }
    dend_41 { pt3dadd( -38.7874, -21.5125, 37.5583, 0.29 ) }
    dend_41 { pt3dadd( -38.9961, -22.0378, 37.7965, 0.29 ) }
    dend_41 { pt3dadd( -44.7388, -25.7201, 44.1829, 0.29 ) }
    dend_41 { pt3dadd( -51.6885, -29.4944, 49.1533, 0.29 ) }
    dend_41 { pt3dadd( -58.0468, -33.2603, 54.8669, 0.29 ) }
    dend_41 { pt3dadd( -63.9473, -35.8602, 61.6848, 0.29 ) }
    dend_41 { pt3dadd( -69.8619, -38.5756, 68.4403, 0.29 ) }
    dend_41 { pt3dadd( -76.6668, -42.6077, 73.3867, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.17939, -6.56314, 6.99409, 1.77 ) }
    dend_32 { pt3dadd( -2.15041, -8.43492, 7.22801, 1.47 ) }
    dend_32 { pt3dadd( -2.13443, -10.3187, 7.43967, 1.25 ) }
    dend_32 { pt3dadd( -2.16172, -11.7577, 7.58269, 1.62 ) }
    dend_32 { pt3dadd( -2.21625, -12.9719, 7.69045, 1.92 ) }
    dend_32 { pt3dadd( -2.29101, -14.0309, 7.78584, 2.14 ) }
    dend_32 { pt3dadd( -2.42647, -15.3495, 7.90229, 2.14 ) }
    dend_32 { pt3dadd( -2.70572, -17.1799, 8.06404, 1.55 ) }
    dend_32 { pt3dadd( -3.06117, -18.9014, 8.20558, 1.33 ) }
    dend_32 { pt3dadd( -3.38309, -20.2056, 8.32476, 1.55 ) }
    dend_32 { pt3dadd( -3.62216, -21.0294, 8.40287, 1.92 ) }
    dend_32 { pt3dadd( -3.96188, -22.0286, 8.53367, 2.21 ) }
    dend_32 { pt3dadd( -4.21632, -22.6872, 8.63973, 2.5 ) }
    dend_32 { pt3dadd( -4.51383, -23.4644, 8.79198, 2.5 ) }
    dend_32 { pt3dadd( -4.78731, -24.3217, 8.97382, 2.36 ) }
    dend_32 { pt3dadd( -5.08152, -25.4979, 9.23031, 1.69 ) }
    dend_32 { pt3dadd( -5.36432, -27.0401, 9.55333, 1.25 ) }
    dend_32 { pt3dadd( -5.50816, -28.4812, 9.84451, 1.4 ) }
    dend_32 { pt3dadd( -5.51425, -29.76, 10.0715, 1.62 ) }
    dend_32 { pt3dadd( -5.36636, -31.3208, 10.3116, 2.06 ) }
    dend_32 { pt3dadd( -5.18631, -32.2827, 10.4482, 2.36 ) }
    dend_32 { pt3dadd( -5.00419, -32.9063, 10.5252, 2.36 ) }
    dend_32 { pt3dadd( -4.55488, -34.0949, 10.6489, 2.14 ) }
    dend_32 { pt3dadd( -3.82323, -35.7628, 10.8082, 1.62 ) }
    dend_32 { pt3dadd( -3.17761, -37.1676, 10.9263, 1.25 ) }
    dend_32 { pt3dadd( -2.51538, -38.6169, 11.0638, 1.03 ) }
    dend_32 { pt3dadd( -1.80853, -40.2464, 11.2522, 1.03 ) }
    dend_32 { pt3dadd( -1.282, -41.6111, 11.4452, 1.03 ) }
    dend_32 { pt3dadd( -0.70877, -43.3774, 11.76, 1.03 ) }
    dend_32 { pt3dadd( -0.458809, -44.4293, 11.9895, 0.96 ) }
    dend_32 { pt3dadd( -0.382982, -45.2604, 12.1999, 0.96 ) }
    dend_32 { pt3dadd( -0.485893, -46.0013, 12.4101, 0.96 ) }
    dend_32 { pt3dadd( -0.959112, -46.9769, 12.7602, 0.96 ) }
    dend_32 { pt3dadd( -1.42192, -47.5072, 12.9803, 0.88 ) }
    dend_32 { pt3dadd( -1.90743, -47.8991, 13.1527, 1.18 ) }
    dend_32 { pt3dadd( -2.69121, -48.4432, 13.3726, 1.18 ) }
    dend_32 { pt3dadd( -3.45044, -48.9403, 13.5674, 1.33 ) }
    dend_32 { pt3dadd( -4.32463, -49.5043, 13.8104, 1.33 ) }
    dend_32 { pt3dadd( -5.07623, -49.996, 14.0458, 1.4 ) }
    dend_32 { pt3dadd( -5.88194, -50.5567, 14.3369, 1.55 ) }
    dend_32 { pt3dadd( -6.65371, -51.1506, 14.6794, 1.55 ) }
    dend_32 { pt3dadd( -7.52726, -51.962, 15.1714, 1.84 ) }
    dend_32 { pt3dadd( -8.05626, -52.5545, 15.5203, 2.14 ) }
    dend_32 { pt3dadd( -8.57438, -53.2688, 15.8947, 1.99 ) }
    dend_32 { pt3dadd( -9.29704, -54.5589, 16.4932, 0.88 ) }
    dend_32 { pt3dadd( -9.7905, -55.7504, 16.9637, 0.88 ) }
    dend_32 { pt3dadd( -10.2065, -57.1577, 17.433, 0.81 ) }
    dend_32 { pt3dadd( -10.4393, -58.402, 17.7516, 0.74 ) }
    dend_32 { pt3dadd( -10.6555, -59.973, 18.1014, 0.74 ) }
    dend_32 { pt3dadd( -10.7614, -61.4406, 18.3804, 1.03 ) }
    dend_32 { pt3dadd( -10.7573, -62.7593, 18.5595, 1.4 ) }
    dend_32 { pt3dadd( -10.7101, -63.5798, 18.6252, 1.69 ) }
    dend_32 { pt3dadd( -10.6124, -64.4996, 18.6512, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.98722, -11.1217, -2.36225, 3.39 ) }
    dend_0 { pt3dadd( 2.42715, -12.4305, -2.55051, 3.02 ) }
    dend_0 { pt3dadd( 2.87259, -13.7557, -2.74113, 3.02 ) }
    dend_0 { pt3dadd( 3.45832, -15.4983, -2.99179, 3.02 ) }
    dend_0 { pt3dadd( 4.08751, -17.3702, -3.26104, 3.24 ) }
    dend_0 { pt3dadd( 4.56199, -18.7504, -3.48079, 3.54 ) }
    dend_0 { pt3dadd( 5.10069, -20.2376, -3.773, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -54.2424, 91.337, -37.5207, 0.44 ) }
    dend_88 { pt3dadd( -55.2733, 92.2951, -38.1498, 0.44 ) }
    dend_88 { pt3dadd( -55.737, 92.7655, -38.4245, 0.37 ) }
    dend_88 { pt3dadd( -55.9444, 93.0314, -38.5227, 0.66 ) }
    dend_88 { pt3dadd( -56.2615, 93.5186, -38.6495, 0.66 ) }
    dend_88 { pt3dadd( -56.5621, 94.0718, -38.7546, 0.59 ) }
    dend_88 { pt3dadd( -56.7448, 94.4885, -38.8177, 0.81 ) }
    dend_88 { pt3dadd( -56.8807, 95.0129, -38.8319, 0.81 ) }
    dend_88 { pt3dadd( -56.9872, 96.2166, -38.8465, 0.52 ) }
    dend_88 { pt3dadd( -56.9325, 96.7822, -38.8616, 0.52 ) }
    dend_88 { pt3dadd( -56.6859, 97.6442, -38.9248, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -56.3035, 98.45, -39.0467, 0.44 ) }
    dend_88 { pt3dadd( -55.7919, 99.2128, -39.2348, 0.74 ) }
    dend_88 { pt3dadd( -55.3401, 99.7366, -39.4076, 0.74 ) }
    dend_88 { pt3dadd( -54.596, 100.446, -39.7226, 0.44 ) }
    dend_88 { pt3dadd( -54.0292, 100.938, -39.9401, 0.59 ) }
    dend_88 { pt3dadd( -53.4592, 101.418, -40.1618, 0.59 ) }
    dend_88 { pt3dadd( -52.8889, 101.916, -40.407, 0.59 ) }
    dend_88 { pt3dadd( -52.4443, 102.356, -40.6357, 0.37 ) }
    dend_88 { pt3dadd( -52.1214, 102.708, -40.8256, 0.37 ) }
    dend_88 { pt3dadd( -51.6356, 103.264, -41.1348, 0.59 ) }
    dend_88 { pt3dadd( -51.1572, 103.795, -41.4472, 0.37 ) }
    dend_88 { pt3dadd( -50.7252, 104.253, -41.7266, 0.81 ) }
    dend_88 { pt3dadd( -50.2735, 104.713, -42.0223, 0.81 ) }
    dend_88 { pt3dadd( -49.4495, 105.558, -42.5919, 0.44 ) }
    dend_88 { pt3dadd( -48.8173, 106.224, -43.0464, 0.44 ) }
    dend_88 { pt3dadd( -48.3742, 106.684, -43.3889, 0.81 ) }
    dend_88 { pt3dadd( -47.9256, 107.153, -43.7466, 0.44 ) }
    dend_88 { pt3dadd( -47.6835, 107.423, -43.9588, 0.59 ) }
    dend_88 { pt3dadd( -47.1108, 108.112, -44.5309, 0.59 ) }
    dend_88 { pt3dadd( -46.7787, 108.605, -45.0004, 0.44 ) }
    dend_88 { pt3dadd( -46.4463, 109.293, -45.6865, 0.44 ) }
    dend_88 { pt3dadd( -46.2567, 109.881, -46.3531, 0.96 ) }
    dend_88 { pt3dadd( -46.2067, 110.155, -46.7107, 1.18 ) }
    dend_88 { pt3dadd( -46.1984, 110.405, -47.0763, 1.18 ) }
    dend_88 { pt3dadd( -46.3312, 111.046, -48.3686, 0.44 ) }
    dend_88 { pt3dadd( -46.524, 111.495, -49.404, 0.37 ) }
    dend_88 { pt3dadd( -46.7413, 111.837, -50.4736, 0.66 ) }
    dend_88 { pt3dadd( -46.8486, 111.973, -50.9757, 0.66 ) }
    dend_88 { pt3dadd( -47.0277, 112.17, -51.7781, 0.66 ) }
    dend_88 { pt3dadd( -47.682, 112.879, -54.9814, 0.44 ) }
    dend_88 { pt3dadd( -47.7902, 112.992, -55.553, 0.44 ) }
    dend_88 { pt3dadd( -48.3319, 113.571, -58.5955, 0.29 ) }
    dend_88 { pt3dadd( -48.445, 113.711, -59.2416, 0.29 ) }
    dend_88 { pt3dadd( -48.5672, 113.895, -59.9776, 0.29 ) }
    dend_88 { pt3dadd( -48.8133, 114.364, -61.5376, 0.74 ) }
    dend_88 { pt3dadd( -49.0787, 115.057, -63.3015, 0.44 ) }
    dend_88 { pt3dadd( -49.1299, 115.244, -63.6854, 0.44 ) }
    dend_88 { pt3dadd( -49.2314, 115.737, -64.3927, 0.37 ) }
    dend_88 { pt3dadd( -49.326, 116.265, -65.0207, 0.88 ) }
    dend_88 { pt3dadd( -49.4841, 117.172, -65.8176, 0.29 ) }
    dend_88 { pt3dadd( -49.5702, 117.551, -66.0516, 0.52 ) }
    dend_88 { pt3dadd( -49.7739, 118.249, -66.3978, 0.15 ) }
    dend_88 { pt3dadd( -49.9914, 118.863, -66.7181, 0.22 ) }
    dend_88 { pt3dadd( -50.3644, 119.823, -67.2229, 0.22 ) }
    dend_88 { pt3dadd( -50.7337, 120.661, -67.6381, 0.22 ) }
    dend_88 { pt3dadd( -51.086, 121.449, -68.0019, 0.22 ) }
    dend_88 { pt3dadd( -51.6375, 122.601, -68.5764, 1.47 ) }
    dend_88 { pt3dadd( -52.06, 123.443, -69.0435, 0.66 ) }
    dend_88 { pt3dadd( -52.32, 123.982, -69.3573, 0.96 ) }
    dend_88 { pt3dadd( -52.7131, 124.876, -69.8738, 0.22 ) }
    dend_88 { pt3dadd( -52.9577, 125.484, -70.1783, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -54.2424, 91.337, -37.5207, 0.37 ) }
    dend_79 { pt3dadd( -54.1905, 92.7892, -37.1471, 0.37 ) }
    dend_79 { pt3dadd( -54.0825, 93.5148, -37.0269, 0.37 ) }
    dend_79 { pt3dadd( -54.0019, 94.1983, -36.8449, 0.37 ) }
    dend_79 { pt3dadd( -53.9681, 95.2148, -36.4895, 0.74 ) }
    dend_79 { pt3dadd( -54.0268, 96.0701, -36.1558, 0.29 ) }
    dend_79 { pt3dadd( -54.213, 97.0713, -35.7481, 0.29 ) }
    dend_79 { pt3dadd( -54.3228, 97.5403, -35.5499, 0.52 ) }
    dend_79 { pt3dadd( -54.6679, 98.5612, -34.9431, 0.44 ) }
    dend_79 { pt3dadd( -54.9312, 99.2059, -34.4834, 0.29 ) }
    dend_79 { pt3dadd( -55.1641, 99.7669, -34.0551, 0.29 ) }
    dend_79 { pt3dadd( -55.4031, 100.389, -33.5512, 0.29 ) }
    dend_79 { pt3dadd( -55.7226, 101.444, -32.7232, 0.44 ) }
    dend_79 { pt3dadd( -55.9222, 102.302, -32.0652, 0.44 ) }
    dend_79 { pt3dadd( -56.0473, 103.402, -31.3014, 0.52 ) }
    dend_79 { pt3dadd( -56.0366, 104.282, -30.7035, 0.37 ) }
    dend_79 { pt3dadd( -55.9439, 104.987, -30.2265, 0.37 ) }
    dend_79 { pt3dadd( -55.7518, 105.751, -29.7399, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 23.0533, 23.8818, -5.12376, 0.29 ) }
    dend_69 { pt3dadd( 24.3159, 23.4414, -3.39614, 0.29 ) }
    dend_69 { pt3dadd( 25.4981, 23.0881, -1.98409, 0.59 ) }
    dend_69 { pt3dadd( 26.6552, 22.746, -0.77204, 0.74 ) }
    dend_69 { pt3dadd( 27.2889, 22.5671, -0.160559, 0.37 ) }
    dend_69 { pt3dadd( 28.264, 22.3175, 0.846937, 0.37 ) }
    dend_69 { pt3dadd( 28.8055, 22.1913, 1.4497, 0.66 ) }
    dend_69 { pt3dadd( 29.2094, 22.1414, 1.92632, 0.96 ) }
    dend_69 { pt3dadd( 29.7907, 22.1182, 2.84226, 1.25 ) }
    dend_69 { pt3dadd( 30.6667, 22.1764, 4.59254, 0.37 ) }
    dend_69 { pt3dadd( 31.4585, 22.3588, 6.43826, 0.37 ) }
    dend_69 { pt3dadd( 31.7184, 22.4539, 7.08634, 0.37 ) }
    dend_69 { pt3dadd( 32.2864, 22.6868, 8.40428, 0.74 ) }
    dend_69 { pt3dadd( 33.3058, 23.079, 10.4021, 0.66 ) }
    dend_69 { pt3dadd( 34.1504, 23.3768, 11.7451, 0.52 ) }
    dend_69 { pt3dadd( 34.8204, 23.5436, 12.4982, 0.66 ) }
    dend_69 { pt3dadd( 35.652, 23.6612, 13.129, 0.66 ) }
    dend_69 { pt3dadd( 36.7909, 23.7502, 13.7704, 0.37 ) }
    dend_69 { pt3dadd( 38.1132, 23.7668, 14.3087, 0.52 ) }
    dend_69 { pt3dadd( 38.8502, 23.7279, 14.54, 0.52 ) }
    dend_69 { pt3dadd( 40.1367, 23.617, 14.9086, 0.66 ) }
    dend_69 { pt3dadd( 40.8591, 23.5322, 15.1037, 0.88 ) }
    dend_69 { pt3dadd( 41.8212, 23.4234, 15.3411, 0.88 ) }
    dend_69 { pt3dadd( 42.9383, 23.3326, 15.6675, 0.66 ) }
    dend_69 { pt3dadd( 44.3372, 23.2891, 16.1038, 0.29 ) }
    dend_69 { pt3dadd( 45.5622, 23.3202, 16.4799, 0.29 ) }
    dend_69 { pt3dadd( 47.4173, 23.523, 17.0312, 0.88 ) }
    dend_69 { pt3dadd( 47.9309, 23.6009, 17.182, 0.88 ) }
    dend_69 { pt3dadd( 49.9882, 23.9863, 17.7575, 0.29 ) }
    dend_69 { pt3dadd( 51.5746, 24.3435, 18.1606, 0.29 ) }
    dend_69 { pt3dadd( 53.0907, 24.7367, 18.5061, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 54.8933, 25.2486, 18.8858, 0.29 ) }
    dend_69 { pt3dadd( 56.2042, 25.6299, 19.1562, 0.29 ) }
    dend_69 { pt3dadd( 57.4172, 25.9608, 19.3781, 0.81 ) }
    dend_69 { pt3dadd( 58.3698, 26.2025, 19.4971, 0.81 ) }
    dend_69 { pt3dadd( 59.2148, 26.404, 19.5961, 0.81 ) }
    dend_69 { pt3dadd( 60.495, 26.6818, 19.7385, 0.59 ) }
    dend_69 { pt3dadd( 61.9844, 26.9487, 19.9048, 0.29 ) }
    dend_69 { pt3dadd( 63.2991, 27.2279, 20.0703, 0.81 ) }
    dend_69 { pt3dadd( 64.5975, 27.5071, 20.2455, 0.22 ) }
    dend_69 { pt3dadd( 65.7496, 27.7339, 20.3985, 0.22 ) }
    dend_69 { pt3dadd( 66.4798, 27.8502, 20.4804, 0.52 ) }
    dend_69 { pt3dadd( 67.4859, 27.9713, 20.5307, 0.22 ) }
    dend_69 { pt3dadd( 77.9341, 29.4147, 26.6465, 0.22 ) }
    dend_69 { pt3dadd( 87.6668, 31.1446, 33.773, 0.22 ) }
    dend_69 { pt3dadd( 98.735, 30.9273, 38.9185, 0.22 ) }
    dend_69 { pt3dadd( 109.707, 28.6697, 43.732, 0.22 ) }
    dend_69 { pt3dadd( 120.664, 27.8449, 49.0494, 0.22 ) }
    dend_69 { pt3dadd( 129.823, 25.5041, 56.7499, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 23.0533, 23.8818, -5.12376, 0.81 ) }
    dend_54 { pt3dadd( 25.0003, 24.0183, -4.52235, 0.81 ) }
    dend_54 { pt3dadd( 25.9216, 23.9862, -4.2923, 1.03 ) }
    dend_54 { pt3dadd( 28.3638, 23.802, -3.91988, 0.96 ) }
    dend_54 { pt3dadd( 29.7004, 23.7152, -3.78803, 0.96 ) }
    dend_54 { pt3dadd( 31.2582, 23.682, -3.68406, 0.59 ) }
    dend_54 { pt3dadd( 32.3417, 23.7148, -3.63618, 0.66 ) }
    dend_54 { pt3dadd( 33.7937, 23.7693, -3.61964, 0.66 ) }
    dend_54 { pt3dadd( 35.5223, 23.9768, -3.70293, 0.59 ) }
    dend_54 { pt3dadd( 36.4261, 24.2304, -3.84914, 0.81 ) }
    dend_54 { pt3dadd( 37.5684, 24.749, -4.06492, 0.96 ) }
    dend_54 { pt3dadd( 38.6196, 25.3563, -4.2701, 1.25 ) }
    dend_54 { pt3dadd( 39.3799, 25.8143, -4.40797, 1.4 ) }
    dend_54 { pt3dadd( 40.3373, 26.3692, -4.53839, 1.4 ) }
    dend_54 { pt3dadd( 41.9042, 27.1301, -4.66445, 0.59 ) }
    dend_54 { pt3dadd( 42.5425, 27.3325, -4.70154, 0.59 ) }
    dend_54 { pt3dadd( 43.8725, 27.5047, -4.74986, 0.59 ) }
    dend_54 { pt3dadd( 45.3273, 27.4818, -4.77391, 1.03 ) }
    dend_54 { pt3dadd( 46.3619, 27.3625, -4.77247, 1.18 ) }
    dend_54 { pt3dadd( 47.2636, 27.1867, -4.72023, 1.18 ) }
    dend_54 { pt3dadd( 48.7231, 26.8168, -4.55116, 0.74 ) }
    dend_54 { pt3dadd( 50.1295, 26.4269, -4.29506, 0.66 ) }
    dend_54 { pt3dadd( 50.7988, 26.2439, -4.14438, 0.96 ) }
    dend_54 { pt3dadd( 51.6722, 26.0416, -3.94103, 0.96 ) }
    dend_54 { pt3dadd( 53.2392, 25.7519, -3.58913, 1.03 ) }
    dend_54 { pt3dadd( 53.9792, 25.661, -3.42503, 1.03 ) }
    dend_54 { pt3dadd( 56.0363, 25.6291, -3.00235, 0.59 ) }
    dend_54 { pt3dadd( 57.1513, 25.7305, -2.8034, 0.59 ) }
    dend_54 { pt3dadd( 59.1387, 26.0554, -2.51764, 0.59 ) }
    dend_54 { pt3dadd( 60.11, 26.2801, -2.4178, 0.81 ) }
    dend_54 { pt3dadd( 61.016, 26.5689, -2.37514, 0.81 ) }
    dend_54 { pt3dadd( 62.8583, 27.2965, -2.39192, 0.37 ) }
    dend_54 { pt3dadd( 64.0153, 27.792, -2.47445, 0.66 ) }
    dend_54 { pt3dadd( 65.0418, 28.1956, -2.55731, 0.74 ) }
    dend_54 { pt3dadd( 65.6853, 28.4093, -2.6236, 0.74 ) }
    dend_54 { pt3dadd( 66.9423, 28.7005, -2.78016, 0.74 ) }
    dend_54 { pt3dadd( 68.2888, 28.8374, -2.97014, 0.52 ) }
    dend_54 { pt3dadd( 70.1606, 28.7925, -3.255, 0.74 ) }
    dend_54 { pt3dadd( 71.5712, 28.6739, -3.43936, 0.88 ) }
    dend_54 { pt3dadd( 72.3456, 28.5959, -3.49791, 0.96 ) }
    dend_54 { pt3dadd( 73.1167, 28.5261, -3.50726, 1.18 ) }
    dend_54 { pt3dadd( 74.2924, 28.4552, -3.43681, 1.18 ) }
    dend_54 { pt3dadd( 75.1893, 28.4751, -3.29585, 0.66 ) }
    dend_54 { pt3dadd( 76.7864, 28.7635, -2.86035, 0.59 ) }
    dend_54 { pt3dadd( 77.8425, 29.1029, -2.38393, 0.59 ) }
    dend_54 { pt3dadd( 78.5453, 29.3945, -1.97948, 0.74 ) }
    dend_54 { pt3dadd( 79.0969, 29.6714, -1.60281, 0.74 ) }
    dend_54 { pt3dadd( 79.6424, 29.9766, -1.18142, 0.74 ) }
    dend_54 { pt3dadd( 80.6863, 30.5971, -0.284646, 0.59 ) }
    dend_54 { pt3dadd( 82.0743, 31.4631, 1.02955, 0.96 ) }
    dend_54 { pt3dadd( 82.7358, 31.8652, 1.6627, 1.25 ) }
    dend_54 { pt3dadd( 83.096, 32.0731, 2.03184, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 75.5268, 42.9772, 66.4466, 0.29 ) }
    dend_52 { pt3dadd( 82.3039, 46.7473, 73.5562, 0.29 ) }
    dend_52 { pt3dadd( 90.1088, 50.4169, 79.5766, 0.29 ) }
    dend_52 { pt3dadd( 98.2195, 54.794, 84.5715, 0.29 ) }
    dend_52 { pt3dadd( 105.207, 58.834, 91.3009, 0.29 ) }
    dend_52 { pt3dadd( 111.808, 63.9946, 97.5548, 0.29 ) }
    dend_52 { pt3dadd( 116.955, 69.8888, 104.443, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 75.5268, 42.9772, 66.4466, 0.29 ) }
    dend_51 { pt3dadd( 82.7413, 46.254, 72.6546, 0.29 ) }
    dend_51 { pt3dadd( 89.0532, 51.4133, 78.4277, 0.29 ) }
    dend_51 { pt3dadd( 94.2384, 57.4804, 84.3782, 0.29 ) }
    dend_51 { pt3dadd( 99.7577, 62.0746, 91.3903, 0.29 ) }
    dend_51 { pt3dadd( 105.054, 67.2115, 98.1589, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -32.4199, -10.6958, -29.8515, 0.74 ) }
    dend_46 { pt3dadd( -34.2681, -12.1763, -30.3923, 0.74 ) }
    dend_46 { pt3dadd( -35.2794, -12.7857, -30.6201, 0.74 ) }
    dend_46 { pt3dadd( -36.1471, -13.1908, -30.8115, 0.74 ) }
    dend_46 { pt3dadd( -37.5486, -13.5756, -31.2544, 0.66 ) }
    dend_46 { pt3dadd( -38.5853, -13.7062, -31.6674, 0.66 ) }
    dend_46 { pt3dadd( -39.6937, -13.7611, -32.1586, 0.59 ) }
    dend_46 { pt3dadd( -40.4724, -13.663, -32.4899, 1.25 ) }
    dend_46 { pt3dadd( -41.1118, -13.5257, -32.7935, 1.25 ) }
    dend_46 { pt3dadd( -43.068, -13.0675, -33.8103, 0.66 ) }
    dend_46 { pt3dadd( -44.0383, -12.8708, -34.3464, 0.66 ) }
    dend_46 { pt3dadd( -44.5554, -12.8353, -34.6556, 0.96 ) }
    dend_46 { pt3dadd( -45.3083, -12.9316, -35.1289, 0.96 ) }
    dend_46 { pt3dadd( -45.8246, -13.122, -35.5972, 0.96 ) }
    dend_46 { pt3dadd( -46.5954, -13.6811, -36.7873, 0.74 ) }
    dend_46 { pt3dadd( -46.9955, -14.1368, -37.7182, 0.52 ) }
    dend_46 { pt3dadd( -47.3912, -14.6945, -38.8873, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -47.6441, -15.1009, -39.7549, 1.03 ) }
    dend_46 { pt3dadd( -48.5583, -16.7201, -43.3051, 1.25 ) }
    dend_46 { pt3dadd( -49.1776, -17.8562, -45.8806, 0.66 ) }
    dend_46 { pt3dadd( -49.487, -18.3979, -47.1525, 0.66 ) }
    dend_46 { pt3dadd( -49.6864, -18.6728, -47.8174, 1.11 ) }
    dend_46 { pt3dadd( -49.8734, -18.8431, -48.2129, 1.33 ) }
    dend_46 { pt3dadd( -50.1548, -19.0302, -48.5462, 1.18 ) }
    dend_46 { pt3dadd( -50.6143, -19.292, -48.7358, 1.18 ) }
    dend_46 { pt3dadd( -51.6713, -19.8853, -49.0116, 0.59 ) }
    dend_46 { pt3dadd( -52.7533, -20.568, -49.3391, 0.52 ) }
    dend_46 { pt3dadd( -53.5991, -21.1836, -49.6826, 0.52 ) }
    dend_46 { pt3dadd( -54.2918, -21.7749, -50.1105, 0.81 ) }
    dend_46 { pt3dadd( -54.9608, -22.4542, -50.7241, 0.66 ) }
    dend_46 { pt3dadd( -55.5829, -23.154, -51.4369, 0.66 ) }
    dend_46 { pt3dadd( -56.0282, -23.7019, -52.0584, 1.33 ) }
    dend_46 { pt3dadd( -56.3255, -24.0855, -52.5093, 1.33 ) }
    dend_46 { pt3dadd( -57.2531, -25.2871, -53.9403, 0.66 ) }
    dend_46 { pt3dadd( -58.0723, -26.3126, -55.1562, 0.52 ) }
    dend_46 { pt3dadd( -58.4634, -26.7616, -55.6984, 0.52 ) }
    dend_46 { pt3dadd( -58.9784, -27.2754, -56.2446, 0.96 ) }
    dend_46 { pt3dadd( -59.3511, -27.6115, -56.5302, 1.18 ) }
    dend_46 { pt3dadd( -59.6208, -27.8471, -56.6548, 1.18 ) }
    dend_46 { pt3dadd( -60.1824, -28.3698, -56.7477, 0.81 ) }
    dend_46 { pt3dadd( -60.945, -29.152, -56.7351, 0.74 ) }
    dend_46 { pt3dadd( -61.8815, -30.2191, -56.6205, 0.59 ) }
    dend_46 { pt3dadd( -62.3509, -30.7527, -56.5204, 0.74 ) }
    dend_46 { pt3dadd( -62.98, -31.4387, -56.344, 0.74 ) }
    dend_46 { pt3dadd( -63.6622, -32.1107, -56.1339, 0.59 ) }
    dend_46 { pt3dadd( -64.3094, -32.712, -55.9195, 0.44 ) }
    dend_46 { pt3dadd( -65.0354, -33.3791, -55.6685, 0.44 ) }
    dend_46 { pt3dadd( -65.7365, -34.0126, -55.4616, 0.44 ) }
    dend_46 { pt3dadd( -66.4713, -34.7372, -55.2567, 0.44 ) }
    dend_46 { pt3dadd( -67.6677, -36.05, -54.9459, 0.44 ) }
    dend_46 { pt3dadd( -67.96, -36.4386, -54.8704, 0.96 ) }
    dend_46 { pt3dadd( -68.4749, -37.3688, -54.7744, 1.18 ) }
    dend_46 { pt3dadd( -68.7817, -38.1942, -54.7546, 0.81 ) }
    dend_46 { pt3dadd( -69.0871, -39.5491, -54.8627, 0.59 ) }
    dend_46 { pt3dadd( -69.1786, -40.1369, -54.9793, 0.74 ) }
    dend_46 { pt3dadd( -69.3176, -41.0822, -55.2357, 0.66 ) }
    dend_46 { pt3dadd( -69.5288, -42.006, -55.5281, 0.66 ) }
    dend_46 { pt3dadd( -69.7531, -42.6877, -55.7706, 0.81 ) }
    dend_46 { pt3dadd( -70.2788, -43.9391, -56.2164, 0.59 ) }
    dend_46 { pt3dadd( -70.8086, -45.0367, -56.5882, 0.52 ) }
    dend_46 { pt3dadd( -71.3016, -46.1025, -56.9166, 0.81 ) }
    dend_46 { pt3dadd( -71.7261, -47.1403, -57.1898, 1.4 ) }
    dend_46 { pt3dadd( -71.9056, -47.7587, -57.2772, 1.69 ) }
    dend_46 { pt3dadd( -72.1129, -48.9712, -57.3045, 0.52 ) }
    dend_46 { pt3dadd( -72.239, -49.9737, -57.3322, 0.44 ) }
    dend_46 { pt3dadd( -72.334, -50.9875, -57.5033, 0.44 ) }
    dend_46 { pt3dadd( -72.4126, -51.7002, -57.7798, 0.29 ) }
    dend_46 { pt3dadd( -72.656, -53.0255, -58.5093, 1.4 ) }
    dend_46 { pt3dadd( -72.7271, -53.2899, -58.6778, 1.4 ) }
    dend_46 { pt3dadd( -73.5885, -55.6253, -60.5039, 0.52 ) }
    dend_46 { pt3dadd( -74.1744, -56.9131, -61.6176, 0.52 ) }
    dend_46 { pt3dadd( -74.5164, -57.5789, -62.2176, 0.52 ) }
    dend_46 { pt3dadd( -75.0364, -58.5707, -63.109, 0.74 ) }
    dend_46 { pt3dadd( -75.3771, -59.2361, -63.6858, 0.88 ) }
    dend_46 { pt3dadd( -76.0771, -60.7542, -64.8103, 0.44 ) }
    dend_46 { pt3dadd( -76.3858, -61.5193, -65.2399, 0.59 ) }
    dend_46 { pt3dadd( -76.7516, -62.3768, -65.6801, 0.59 ) }
    dend_46 { pt3dadd( -77.1798, -63.247, -66.161, 0.37 ) }
    dend_46 { pt3dadd( -77.4539, -63.7719, -66.4687, 0.59 ) }
    dend_46 { pt3dadd( -77.978, -64.7068, -67.0062, 0.81 ) }
    dend_46 { pt3dadd( -78.4988, -65.56, -67.4196, 1.18 ) }
    dend_46 { pt3dadd( -78.8428, -66.0845, -67.6799, 1.18 ) }
    dend_46 { pt3dadd( -79.8111, -67.3879, -68.412, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -32.4199, -10.6958, -29.8515, 0.81 ) }
    dend_45 { pt3dadd( -33.1291, -9.0799, -29.6508, 0.81 ) }
    dend_45 { pt3dadd( -33.4656, -8.50548, -29.5197, 0.81 ) }
    dend_45 { pt3dadd( -33.9891, -7.84313, -29.3095, 0.81 ) }
    dend_45 { pt3dadd( -34.5549, -7.35801, -29.113, 0.88 ) }
    dend_45 { pt3dadd( -35.2385, -7.01548, -28.9508, 0.66 ) }
    dend_45 { pt3dadd( -36.5056, -6.59964, -28.7499, 0.59 ) }
    dend_45 { pt3dadd( -37.3952, -6.57783, -28.6955, 0.59 ) }
    dend_45 { pt3dadd( -38.1974, -6.67295, -28.81, 0.59 ) }
    dend_45 { pt3dadd( -39.2628, -6.9085, -29.1598, 0.74 ) }
    dend_45 { pt3dadd( -40.4087, -7.22962, -29.7727, 1.03 ) }
    dend_45 { pt3dadd( -40.8103, -7.34817, -30.034, 1.62 ) }
    dend_45 { pt3dadd( -41.3564, -7.49834, -30.4324, 1.92 ) }
    dend_45 { pt3dadd( -43.087, -7.92029, -31.6599, 0.88 ) }
    dend_45 { pt3dadd( -43.7525, -8.06304, -32.1188, 0.66 ) }
    dend_45 { pt3dadd( -44.7286, -8.2687, -32.7592, 0.66 ) }
    dend_45 { pt3dadd( -46.0439, -8.54635, -33.5735, 0.66 ) }
    dend_45 { pt3dadd( -46.6285, -8.65797, -33.9159, 0.66 ) }
    dend_45 { pt3dadd( -47.9023, -8.83724, -34.5767, 0.66 ) }
    dend_45 { pt3dadd( -48.7145, -8.90136, -34.9453, 0.44 ) }
    dend_45 { pt3dadd( -49.7417, -8.91552, -35.4312, 0.44 ) }
    dend_45 { pt3dadd( -50.4955, -8.87613, -35.8208, 0.44 ) }
    dend_45 { pt3dadd( -51.3858, -8.76808, -36.3705, 0.66 ) }
    dend_45 { pt3dadd( -52.0082, -8.66705, -36.7848, 0.66 ) }
    dend_45 { pt3dadd( -52.7456, -8.50136, -37.2757, 0.66 ) }
    dend_45 { pt3dadd( -53.3824, -8.33018, -37.6488, 0.66 ) }
    dend_45 { pt3dadd( -54.1097, -8.08225, -38.0142, 0.44 ) }
    dend_45 { pt3dadd( -54.6164, -7.88327, -38.2508, 0.74 ) }
    dend_45 { pt3dadd( -55.3709, -7.56905, -38.5806, 0.74 ) }
    dend_45 { pt3dadd( -56.0429, -7.28256, -38.869, 0.74 ) }
    dend_45 { pt3dadd( -56.6149, -7.04039, -39.1009, 0.74 ) }
    dend_45 { pt3dadd( -57.2692, -6.77097, -39.353, 0.37 ) }
    dend_45 { pt3dadd( -58.2377, -6.47723, -39.7704, 0.37 ) }
    dend_45 { pt3dadd( -58.6531, -6.4347, -39.9867, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -59.0892, -6.48626, -40.2739, 0.88 ) }
    dend_45 { pt3dadd( -59.6681, -6.63064, -40.6906, 1.18 ) }
    dend_45 { pt3dadd( -60.139, -6.77387, -41.074, 1.33 ) }
    dend_45 { pt3dadd( -61.3384, -7.17139, -42.1381, 0.44 ) }
    dend_45 { pt3dadd( -62.1999, -7.42203, -42.9628, 0.44 ) }
    dend_45 { pt3dadd( -62.8891, -7.54371, -43.7008, 0.44 ) }
    dend_45 { pt3dadd( -63.5125, -7.53866, -44.4104, 0.88 ) }
    dend_45 { pt3dadd( -64.1838, -7.36506, -45.1774, 1.03 ) }
    dend_45 { pt3dadd( -64.4594, -7.21008, -45.4685, 1.03 ) }
    dend_45 { pt3dadd( -65.1766, -6.59271, -46.0528, 0.44 ) }
    dend_45 { pt3dadd( -65.6096, -6.18492, -46.356, 0.44 ) }
    dend_45 { pt3dadd( -66.1214, -5.75395, -46.6299, 0.44 ) }
    dend_45 { pt3dadd( -66.5429, -5.47801, -46.8362, 0.59 ) }
    dend_45 { pt3dadd( -67.2401, -5.154, -47.1313, 0.59 ) }
    dend_45 { pt3dadd( -67.9496, -4.9543, -47.4336, 0.74 ) }
    dend_45 { pt3dadd( -69.2436, -4.83325, -47.9842, 0.37 ) }
    dend_45 { pt3dadd( -70.0518, -4.87632, -48.3649, 0.37 ) }
    dend_45 { pt3dadd( -71.2412, -5.09769, -48.9826, 0.59 ) }
    dend_45 { pt3dadd( -71.7044, -5.23859, -49.2507, 0.88 ) }
    dend_45 { pt3dadd( -72.5907, -5.61547, -49.8418, 0.66 ) }
    dend_45 { pt3dadd( -73.1849, -5.91554, -50.2693, 0.74 ) }
    dend_45 { pt3dadd( -73.8157, -6.27428, -50.7278, 0.59 ) }
    dend_45 { pt3dadd( -74.3569, -6.59969, -51.1509, 0.52 ) }
    dend_45 { pt3dadd( -74.8637, -6.90088, -51.5465, 0.88 ) }
    dend_45 { pt3dadd( -75.8, -7.38217, -52.2882, 0.59 ) }
    dend_45 { pt3dadd( -76.3496, -7.60634, -52.7212, 0.44 ) }
    dend_45 { pt3dadd( -76.9629, -7.79393, -53.2034, 1.03 ) }
    dend_45 { pt3dadd( -77.3947, -7.88567, -53.5319, 1.33 ) }
    dend_45 { pt3dadd( -77.6641, -7.92004, -53.7224, 1.4 ) }
    dend_45 { pt3dadd( -78.8079, -8.01129, -54.4509, 0.44 ) }
    dend_45 { pt3dadd( -79.272, -8.04198, -54.7267, 0.44 ) }
    dend_45 { pt3dadd( -79.9594, -8.07616, -55.1063, 0.44 ) }
    dend_45 { pt3dadd( -80.686, -8.09568, -55.4723, 0.44 ) }
    dend_45 { pt3dadd( -81.8648, -8.11917, -56.0593, 0.59 ) }
    dend_45 { pt3dadd( -82.6782, -8.12717, -56.5258, 0.88 ) }
    dend_45 { pt3dadd( -83.4202, -8.09565, -57.0618, 1.11 ) }
    dend_45 { pt3dadd( -84.3735, -8.01061, -57.8546, 0.52 ) }
    dend_45 { pt3dadd( -85.0554, -7.90519, -58.4754, 0.52 ) }
    dend_45 { pt3dadd( -85.6226, -7.78947, -59.0198, 1.03 ) }
    dend_45 { pt3dadd( -86.8813, -7.50046, -60.3082, 1.25 ) }
    dend_45 { pt3dadd( -88.3699, -7.2103, -61.8375, 0.52 ) }
    dend_45 { pt3dadd( -88.8811, -7.13127, -62.3539, 0.59 ) }
    dend_45 { pt3dadd( -89.5662, -7.05763, -63.0124, 0.59 ) }
    dend_45 { pt3dadd( -90.6525, -6.96207, -63.9297, 0.44 ) }
    dend_45 { pt3dadd( -91.4034, -6.90409, -64.4455, 0.44 ) }
    dend_45 { pt3dadd( -92.5145, -6.79085, -65.058, 0.44 ) }
    dend_45 { pt3dadd( -93.1088, -6.70145, -65.3664, 0.44 ) }
    dend_45 { pt3dadd( -93.9198, -6.47651, -65.9054, 0.66 ) }
    dend_45 { pt3dadd( -94.4887, -6.22092, -66.3856, 0.88 ) }
    dend_45 { pt3dadd( -94.7871, -6.02216, -66.6765, 0.88 ) }
    dend_45 { pt3dadd( -95.6372, -5.29, -67.568, 0.52 ) }
    dend_45 { pt3dadd( -96.1503, -4.74827, -68.1452, 0.52 ) }
    dend_45 { pt3dadd( -96.8569, -3.87942, -69.0578, 0.81 ) }
    dend_45 { pt3dadd( -97.339, -3.19347, -69.7469, 0.44 ) }
    dend_45 { pt3dadd( -97.609, -2.76534, -70.1719, 0.44 ) }
    dend_45 { pt3dadd( -97.9029, -2.20477, -70.6977, 0.74 ) }
    dend_45 { pt3dadd( -98.0719, -1.78146, -71.0459, 0.96 ) }
    dend_45 { pt3dadd( -98.3702, -0.69002, -71.7734, 0.66 ) }
    dend_45 { pt3dadd( -98.5263, -0.00657537, -72.2039, 0.44 ) }
    dend_45 { pt3dadd( -98.7102, 0.73979, -72.7104, 0.44 ) }
    dend_45 { pt3dadd( -98.9488, 1.44731, -73.2664, 0.44 ) }
    dend_45 { pt3dadd( -99.0765, 1.68792, -73.4906, 0.44 ) }
    dend_45 { pt3dadd( -99.5274, 2.17066, -74.0249, 0.96 ) }
    dend_45 { pt3dadd( -100.589, 2.65243, -74.8158, 0.66 ) }
    dend_45 { pt3dadd( -101.299, 2.83202, -75.2575, 0.96 ) }
    dend_45 { pt3dadd( -101.643, 2.89324, -75.4317, 1.25 ) }
    dend_45 { pt3dadd( -102.049, 2.95284, -75.6151, 1.25 ) }
    dend_45 { pt3dadd( -102.693, 3.06241, -75.892, 1.25 ) }
    dend_45 { pt3dadd( -103.807, 3.3523, -76.362, 0.37 ) }
    dend_45 { pt3dadd( -104.475, 3.65735, -76.6092, 0.37 ) }
    dend_45 { pt3dadd( -104.916, 3.93152, -76.7974, 0.66 ) }
    dend_45 { pt3dadd( -105.254, 4.15943, -76.9361, 0.81 ) }
    dend_45 { pt3dadd( -105.781, 4.51861, -77.1222, 0.81 ) }
    dend_45 { pt3dadd( -106.6, 5.0666, -77.3266, 0.44 ) }
    dend_45 { pt3dadd( -107.164, 5.40448, -77.393, 0.44 ) }
    dend_45 { pt3dadd( -108.198, 5.92422, -77.4334, 0.44 ) }
    dend_45 { pt3dadd( -109.345, 6.45444, -77.4153, 0.44 ) }
    dend_45 { pt3dadd( -110.217, 6.84872, -77.3594, 0.66 ) }
    dend_45 { pt3dadd( -111.126, 7.25024, -77.2585, 0.96 ) }
    dend_45 { pt3dadd( -112.043, 7.64261, -77.0968, 0.59 ) }
    dend_45 { pt3dadd( -112.823, 7.9887, -76.9298, 0.44 ) }
    dend_45 { pt3dadd( -113.627, 8.35483, -76.7492, 0.44 ) }
    dend_45 { pt3dadd( -114.409, 8.71273, -76.6201, 0.44 ) }
    dend_45 { pt3dadd( -115.091, 8.98602, -76.5913, 0.44 ) }
    dend_45 { pt3dadd( -115.883, 9.22042, -76.6815, 0.74 ) }
    dend_45 { pt3dadd( -116.278, 9.29985, -76.78, 0.74 ) }
    dend_45 { pt3dadd( -117.408, 9.43132, -77.1333, 0.52 ) }
    dend_45 { pt3dadd( -117.924, 9.46813, -77.3237, 0.59 ) }
    dend_45 { pt3dadd( -118.881, 9.5227, -77.7134, 0.44 ) }
    dend_45 { pt3dadd( -119.596, 9.59167, -78.0152, 0.44 ) }
    dend_45 { pt3dadd( -120.491, 9.75972, -78.428, 0.37 ) }
    dend_45 { pt3dadd( -121.388, 10.0081, -78.8319, 0.52 ) }
    dend_45 { pt3dadd( -122.098, 10.2746, -79.1488, 1.11 ) }
    dend_45 { pt3dadd( -122.65, 10.5282, -79.4263, 1.25 ) }
    dend_45 { pt3dadd( -123.302, 10.8702, -79.8118, 0.37 ) }
    dend_45 { pt3dadd( -124.234, 11.3811, -80.4602, 0.37 ) }
    dend_45 { pt3dadd( -124.865, 11.7096, -80.9599, 0.29 ) }
    dend_45 { pt3dadd( -125.365, 11.9547, -81.4122, 0.29 ) }
    dend_45 { pt3dadd( -126.263, 12.3872, -82.2822, 0.59 ) }
    dend_45 { pt3dadd( -126.974, 12.748, -82.9994, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -127.376, 12.9648, -83.4069, 0.29 ) }
    dend_45 { pt3dadd( -127.694, 13.1534, -83.6961, 0.37 ) }
    dend_45 { pt3dadd( -128.199, 13.4997, -84.1116, 0.37 ) }
    dend_45 { pt3dadd( -128.893, 14.0115, -84.5633, 0.44 ) }
    dend_45 { pt3dadd( -129.479, 14.4585, -84.8246, 0.44 ) }
    dend_45 { pt3dadd( -130.037, 14.88, -85.0006, 0.44 ) }
    dend_45 { pt3dadd( -130.712, 15.3455, -85.1861, 0.37 ) }
    dend_45 { pt3dadd( -130.986, 15.5076, -85.2526, 0.37 ) }
    dend_45 { pt3dadd( -131.69, 15.8373, -85.3893, 0.88 ) }
    dend_45 { pt3dadd( -132.099, 15.9898, -85.459, 1.11 ) }
    dend_45 { pt3dadd( -132.832, 16.2363, -85.5805, 1.11 ) }
    dend_45 { pt3dadd( -133.987, 16.646, -85.7601, 0.37 ) }
    dend_45 { pt3dadd( -134.881, 17.0045, -85.8874, 0.37 ) }
    dend_45 { pt3dadd( -135.394, 17.2541, -85.948, 0.66 ) }
    dend_45 { pt3dadd( -136.163, 17.7611, -86.0533, 0.66 ) }
    dend_45 { pt3dadd( -136.764, 18.2802, -86.1544, 0.37 ) }
    dend_45 { pt3dadd( -137.268, 18.8414, -86.2643, 0.52 ) }
    dend_45 { pt3dadd( -137.451, 19.0923, -86.3143, 0.66 ) }
    dend_45 { pt3dadd( -137.72, 19.5036, -86.3916, 0.66 ) }
    dend_45 { pt3dadd( -138.45, 20.6402, -86.5911, 0.37 ) }
    dend_45 { pt3dadd( -138.795, 21.1281, -86.6506, 0.37 ) }
    dend_45 { pt3dadd( -139.18, 21.5253, -86.6439, 0.37 ) }
    dend_45 { pt3dadd( -139.59, 21.8245, -86.5735, 0.88 ) }
    dend_45 { pt3dadd( -140.255, 22.1919, -86.4034, 0.81 ) }
    dend_45 { pt3dadd( -140.584, 22.3355, -86.3048, 0.81 ) }
    dend_45 { pt3dadd( -141.414, 22.6447, -86.028, 0.29 ) }
    dend_45 { pt3dadd( -142.503, 23.0295, -85.6578, 0.29 ) }
    dend_45 { pt3dadd( -143.18, 23.2965, -85.3729, 0.52 ) }
    dend_45 { pt3dadd( -143.996, 23.6659, -85.0067, 0.44 ) }
    dend_45 { pt3dadd( -144.394, 23.8612, -84.8257, 0.44 ) }
    dend_45 { pt3dadd( -144.918, 24.1408, -84.5636, 0.81 ) }
    dend_45 { pt3dadd( -145.531, 24.5235, -84.2274, 0.81 ) }
    dend_45 { pt3dadd( -146.673, 25.3761, -83.5342, 0.29 ) }
    dend_45 { pt3dadd( -147.129, 25.7452, -83.243, 0.44 ) }
    dend_45 { pt3dadd( -147.556, 26.099, -82.9412, 0.29 ) }
    dend_45 { pt3dadd( -148.031, 26.4727, -82.6175, 0.29 ) }
    dend_45 { pt3dadd( -148.661, 26.9337, -82.2288, 0.29 ) }
    dend_45 { pt3dadd( -149.147, 27.2664, -81.9702, 0.29 ) }
    dend_45 { pt3dadd( -149.727, 27.6268, -81.7089, 0.59 ) }
    dend_45 { pt3dadd( -150.844, 28.2971, -81.1929, 0.22 ) }
    dend_45 { pt3dadd( -151.563, 28.7205, -80.8632, 0.22 ) }
    dend_45 { pt3dadd( -151.947, 28.9228, -80.6879, 0.52 ) }
    dend_45 { pt3dadd( -152.304, 29.0758, -80.5197, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -76.6668, -42.6077, 73.3867, 0.29 ) }
    dend_43 { pt3dadd( -82.1129, -45.9767, 78.3948, 0.29 ) }
    dend_43 { pt3dadd( -86.7531, -50.7337, 82.9611, 0.29 ) }
    dend_43 { pt3dadd( -91.0866, -55.5484, 87.7681, 0.29 ) }
    dend_43 { pt3dadd( -95.1343, -60.8486, 92.2521, 0.29 ) }
    dend_43 { pt3dadd( -98.1506, -66.8124, 96.6596, 0.29 ) }
    dend_43 { pt3dadd( -101.829, -72.4899, 100.956, 0.29 ) }
    dend_43 { pt3dadd( -105.535, -78.1672, 105.227, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -76.6668, -42.6077, 73.3867, 0.29 ) }
    dend_42 { pt3dadd( -83.5005, -46.1463, 79.3599, 0.29 ) }
    dend_42 { pt3dadd( -90.5288, -50.6157, 84.3135, 0.29 ) }
    dend_42 { pt3dadd( -96.9265, -55.756, 89.4112, 0.29 ) }
    dend_42 { pt3dadd( -102.463, -61.4043, 94.9289, 0.29 ) }
    dend_42 { pt3dadd( -107.654, -67.6379, 100.075, 0.29 ) }
    dend_42 { pt3dadd( -112.081, -74.8682, 104.437, 0.29 ) }
    dend_42 { pt3dadd( -117.038, -81.2865, 109.567, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.6124, -64.4996, 18.6512, 0.66 ) }
    dend_34 { pt3dadd( -11.3612, -67.171, 17.5536, 0.66 ) }
    dend_34 { pt3dadd( -11.5527, -67.8797, 17.2905, 1.03 ) }
    dend_34 { pt3dadd( -11.752, -68.6202, 17.1098, 1.03 ) }
    dend_34 { pt3dadd( -12.1281, -70.0344, 16.9045, 1.03 ) }
    dend_34 { pt3dadd( -12.3833, -71.1049, 16.833, 1.03 ) }
    dend_34 { pt3dadd( -12.6535, -72.4117, 16.8326, 0.81 ) }
    dend_34 { pt3dadd( -12.8391, -73.5786, 17.0537, 0.81 ) }
    dend_34 { pt3dadd( -12.9537, -75.2869, 17.5435, 1.4 ) }
    dend_34 { pt3dadd( -12.9469, -76.0178, 17.8139, 1.62 ) }
    dend_34 { pt3dadd( -12.8592, -77.1061, 18.331, 1.4 ) }
    dend_34 { pt3dadd( -12.7485, -77.8223, 18.7039, 1.92 ) }
    dend_34 { pt3dadd( -12.5301, -78.793, 19.2299, 1.4 ) }
    dend_34 { pt3dadd( -12.1099, -80.2604, 20.0461, 1.69 ) }
    dend_34 { pt3dadd( -11.7881, -81.2406, 20.5429, 1.11 ) }
    dend_34 { pt3dadd( -11.3537, -82.5566, 21.1727, 0.81 ) }
    dend_34 { pt3dadd( -11.1608, -83.1789, 21.4488, 1.11 ) }
    dend_34 { pt3dadd( -10.9553, -83.9237, 21.7462, 1.25 ) }
    dend_34 { pt3dadd( -10.5796, -85.5869, 22.3428, 0.96 ) }
    dend_34 { pt3dadd( -10.4604, -86.4328, 22.5973, 0.74 ) }
    dend_34 { pt3dadd( -10.4276, -87.2464, 22.7935, 0.81 ) }
    dend_34 { pt3dadd( -10.5604, -88.4913, 22.9824, 0.52 ) }
    dend_34 { pt3dadd( -10.7722, -89.3879, 23.0441, 0.88 ) }
    dend_34 { pt3dadd( -11.0329, -90.1498, 23.0023, 0.88 ) }
    dend_34 { pt3dadd( -11.383, -90.9925, 22.815, 0.88 ) }
    dend_34 { pt3dadd( -11.7008, -91.7425, 22.5755, 0.66 ) }
    dend_34 { pt3dadd( -11.9918, -92.5482, 22.2259, 0.66 ) }
    dend_34 { pt3dadd( -12.2722, -93.6858, 21.5562, 0.88 ) }
    dend_34 { pt3dadd( -12.3788, -94.4452, 21.0261, 1.33 ) }
    dend_34 { pt3dadd( -12.4114, -95.0272, 20.6005, 1.47 ) }
    dend_34 { pt3dadd( -12.4193, -95.5747, 20.2026, 1.62 ) }
    dend_34 { pt3dadd( -12.4388, -96.6911, 19.4449, 0.74 ) }
    dend_34 { pt3dadd( -12.4985, -97.957, 18.7414, 0.74 ) }
    dend_34 { pt3dadd( -12.6213, -98.9418, 18.3486, 0.74 ) }
    dend_34 { pt3dadd( -12.7717, -99.7243, 18.1743, 0.74 ) }
    dend_34 { pt3dadd( -13.0123, -100.803, 18.0988, 0.66 ) }
    dend_34 { pt3dadd( -13.2477, -101.921, 18.1903, 0.66 ) }
    dend_34 { pt3dadd( -13.5263, -103.53, 18.5578, 0.96 ) }
    dend_34 { pt3dadd( -13.6097, -104.357, 18.8322, 0.88 ) }
    dend_34 { pt3dadd( -13.6099, -105.096, 19.1081, 0.88 ) }
    dend_34 { pt3dadd( -13.4676, -106.474, 19.626, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -13.2187, -107.738, 20.0954, 1.18 ) }
    dend_34 { pt3dadd( -13.0703, -108.358, 20.2845, 1.62 ) }
    dend_34 { pt3dadd( -12.9064, -109.057, 20.436, 1.62 ) }
    dend_34 { pt3dadd( -12.7095, -110.047, 20.6167, 0.96 ) }
    dend_34 { pt3dadd( -12.596, -110.815, 20.7387, 0.96 ) }
    dend_34 { pt3dadd( -12.5091, -111.98, 20.8939, 0.66 ) }
    dend_34 { pt3dadd( -12.5524, -113.515, 21.0391, 0.52 ) }
    dend_34 { pt3dadd( -12.7052, -114.897, 21.1818, 0.59 ) }
    dend_34 { pt3dadd( -13.0203, -116.491, 21.3603, 0.74 ) }
    dend_34 { pt3dadd( -13.1403, -116.906, 21.4147, 1.11 ) }
    dend_34 { pt3dadd( -13.4612, -117.7, 21.5657, 1.25 ) }
    dend_34 { pt3dadd( -14.1464, -118.976, 21.8832, 0.88 ) }
    dend_34 { pt3dadd( -14.6007, -119.614, 22.1019, 0.66 ) }
    dend_34 { pt3dadd( -15.0945, -120.178, 22.3322, 0.66 ) }
    dend_34 { pt3dadd( -15.5831, -120.678, 22.5391, 0.59 ) }
    dend_34 { pt3dadd( -16.5495, -121.688, 22.9065, 0.59 ) }
    dend_34 { pt3dadd( -17.0872, -122.27, 23.0747, 0.44 ) }
    dend_34 { pt3dadd( -17.7222, -123.024, 23.2131, 0.44 ) }
    dend_34 { pt3dadd( -18.2377, -123.725, 23.2583, 0.74 ) }
    dend_34 { pt3dadd( -18.6463, -124.375, 23.2542, 0.74 ) }
    dend_34 { pt3dadd( -18.9914, -124.994, 23.212, 0.66 ) }
    dend_34 { pt3dadd( -19.4249, -125.9, 23.0871, 1.03 ) }
    dend_34 { pt3dadd( -19.749, -126.619, 22.9935, 1.4 ) }
    dend_34 { pt3dadd( -20.0961, -127.426, 22.8975, 1.4 ) }
    dend_34 { pt3dadd( -20.4021, -128.127, 22.8204, 1.47 ) }
    dend_34 { pt3dadd( -20.8902, -129.234, 22.7187, 0.74 ) }
    dend_34 { pt3dadd( -21.2676, -130.097, 22.6312, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.6124, -64.4996, 18.6512, 0.44 ) }
    dend_33 { pt3dadd( -9.83844, -65.1593, 19.3594, 0.44 ) }
    dend_33 { pt3dadd( -9.38885, -65.7336, 19.8477, 0.44 ) }
    dend_33 { pt3dadd( -9.08581, -66.4824, 20.3168, 0.37 ) }
    dend_33 { pt3dadd( -8.77469, -67.9488, 21.0018, 0.59 ) }
    dend_33 { pt3dadd( -8.73563, -68.5224, 21.2046, 0.52 ) }
    dend_33 { pt3dadd( -8.76144, -69.261, 21.4213, 0.44 ) }
    dend_33 { pt3dadd( -9.01777, -70.4527, 21.7476, 0.44 ) }
    dend_33 { pt3dadd( -9.38492, -71.457, 22.0439, 0.44 ) }
    dend_33 { pt3dadd( -9.70051, -72.0665, 22.264, 0.59 ) }
    dend_33 { pt3dadd( -10.1872, -72.7652, 22.6336, 0.59 ) }
    dend_33 { pt3dadd( -10.7187, -73.3569, 23.2158, 0.37 ) }
    dend_33 { pt3dadd( -11.4313, -74.0146, 24.2204, 0.59 ) }
    dend_33 { pt3dadd( -12.0527, -74.5264, 25.26, 0.88 ) }
    dend_33 { pt3dadd( -12.4447, -74.8138, 25.9469, 0.81 ) }
    dend_33 { pt3dadd( -13.2418, -75.3631, 27.3333, 1.03 ) }
    dend_33 { pt3dadd( -14.0486, -75.9127, 28.7014, 0.88 ) }
    dend_33 { pt3dadd( -14.7855, -76.4394, 29.8353, 0.44 ) }
    dend_33 { pt3dadd( -15.3939, -76.95, 30.6413, 0.44 ) }
    dend_33 { pt3dadd( -15.7925, -77.3506, 31.0899, 0.66 ) }
    dend_33 { pt3dadd( -16.3494, -77.9423, 31.5568, 0.66 ) }
    dend_33 { pt3dadd( -16.8612, -78.4689, 31.804, 0.66 ) }
    dend_33 { pt3dadd( -17.6183, -79.2112, 31.9842, 0.66 ) }
    dend_33 { pt3dadd( -18.2778, -79.848, 32.089, 1.33 ) }
    dend_33 { pt3dadd( -18.5721, -80.1482, 32.1143, 1.47 ) }
    dend_33 { pt3dadd( -19.1437, -80.7423, 32.154, 1.03 ) }
    dend_33 { pt3dadd( -19.8597, -81.5063, 32.2099, 0.81 ) }
    dend_33 { pt3dadd( -20.4643, -82.1516, 32.2721, 0.74 ) }
    dend_33 { pt3dadd( -21.1848, -82.9255, 32.3734, 0.52 ) }
    dend_33 { pt3dadd( -21.6915, -83.4977, 32.4649, 0.44 ) }
    dend_33 { pt3dadd( -25.0532, -90.3701, 37.7631, 0.44 ) }
    dend_33 { pt3dadd( -27.2724, -97.7996, 42.8226, 0.44 ) }
    dend_33 { pt3dadd( -30.316, -105.185, 47.5132, 0.44 ) }
    dend_33 { pt3dadd( -35.3287, -112.052, 51.3043, 0.44 ) }
    dend_33 { pt3dadd( -40.3433, -117.858, 56.7105, 0.44 ) }
    dend_33 { pt3dadd( -44.4526, -123.732, 62.7587, 0.44 ) }
    dend_33 { pt3dadd( -48.7824, -129.824, 68.4023, 0.44 ) }
    dend_33 { pt3dadd( -54.8429, -135.447, 72.8715, 0.44 ) }
    dend_33 { pt3dadd( -62.4258, -140.308, 75.7144, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.10069, -20.2376, -3.773, 1.47 ) }
    dend_17 { pt3dadd( 4.56013, -21.699, -4.10695, 1.47 ) }
    dend_17 { pt3dadd( 4.01333, -23.5763, -4.39363, 1.33 ) }
    dend_17 { pt3dadd( 3.66238, -25.0701, -4.51345, 1.55 ) }
    dend_17 { pt3dadd( 3.43998, -26.28, -4.51145, 1.55 ) }
    dend_17 { pt3dadd( 3.26319, -27.5317, -4.35586, 1.77 ) }
    dend_17 { pt3dadd( 3.07231, -29.1311, -3.98499, 1.77 ) }
    dend_17 { pt3dadd( 3.0009, -30.1146, -3.617, 2.14 ) }
    dend_17 { pt3dadd( 2.95072, -30.934, -3.21551, 2.58 ) }
    dend_17 { pt3dadd( 2.87608, -31.9818, -2.67052, 2.36 ) }
    dend_17 { pt3dadd( 2.69092, -33.9077, -1.76518, 1.77 ) }
    dend_17 { pt3dadd( 2.48153, -35.5741, -1.16363, 1.47 ) }
    dend_17 { pt3dadd( 2.29027, -36.9765, -0.854341, 1.18 ) }
    dend_17 { pt3dadd( 2.1003, -38.4701, -0.691534, 1.11 ) }
    dend_17 { pt3dadd( 1.95606, -39.8013, -0.694038, 1.33 ) }
    dend_17 { pt3dadd( 1.81245, -41.6207, -0.909881, 1.25 ) }
    dend_17 { pt3dadd( 1.76902, -43.2147, -1.25576, 1.47 ) }
    dend_17 { pt3dadd( 1.80979, -44.6425, -1.62077, 1.62 ) }
    dend_17 { pt3dadd( 1.87852, -45.7135, -1.90257, 2.14 ) }
    dend_17 { pt3dadd( 1.92297, -46.4525, -2.08187, 2.58 ) }
    dend_17 { pt3dadd( 1.94371, -47.5148, -2.29216, 2.43 ) }
    dend_17 { pt3dadd( 1.87674, -49.2252, -2.55317, 2.14 ) }
    dend_17 { pt3dadd( 1.72686, -50.6072, -2.72782, 1.92 ) }
    dend_17 { pt3dadd( 1.46697, -51.9793, -2.87042, 1.47 ) }
    dend_17 { pt3dadd( 0.998167, -53.6763, -3.02687, 1.25 ) }
    dend_17 { pt3dadd( 0.507179, -55.0769, -3.09717, 1.11 ) }
    dend_17 { pt3dadd( 0.0628219, -56.1249, -3.09196, 1.4 ) }
    dend_17 { pt3dadd( -0.259313, -56.7987, -3.05995, 1.55 ) }
    dend_17 { pt3dadd( -0.761381, -57.8274, -2.96146, 1.18 ) }
    dend_17 { pt3dadd( -1.227, -58.8762, -2.79585, 0.88 ) }
    dend_17 { pt3dadd( -1.63636, -59.9785, -2.62825, 1.18 ) }
    dend_17 { pt3dadd( -1.94829, -61.0562, -2.47839, 1.03 ) }
    dend_17 { pt3dadd( -2.19826, -62.0701, -2.33491, 1.03 ) }
    dend_17 { pt3dadd( -2.49627, -63.5728, -2.14701, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -2.62177, -64.527, -2.05625, 1.77 ) }
    dend_17 { pt3dadd( -2.72897, -66.0285, -1.98704, 1.77 ) }
    dend_17 { pt3dadd( -2.78068, -67.1852, -2.03141, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.10069, -20.2376, -3.773, 1.77 ) }
    dend_1 { pt3dadd( 5.82093, -23.2855, -4.5393, 1.77 ) }
    dend_1 { pt3dadd( 6.14332, -24.8111, -4.89687, 1.99 ) }
    dend_1 { pt3dadd( 6.51403, -26.5654, -5.30802, 1.99 ) }
    dend_1 { pt3dadd( 7.01985, -28.9589, -5.86902, 3.17 ) }
    dend_1 { pt3dadd( 7.24769, -30.0371, -6.12172, 3.76 ) }
    dend_1 { pt3dadd( 7.63757, -31.8821, -6.55414, 4.2 ) }
    dend_1 { pt3dadd( 7.85495, -33.5148, -6.86087, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205295 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205295 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205295 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -55.7518, 105.751, -29.7399, 0.29 ) }
    dend_85 { pt3dadd( -55.9149, 106.362, -29.8186, 0.29 ) }
    dend_85 { pt3dadd( -56.0904, 107.289, -30.1339, 0.29 ) }
    dend_85 { pt3dadd( -56.1926, 108.124, -30.4621, 0.29 ) }
    dend_85 { pt3dadd( -56.2471, 109.024, -30.8491, 0.29 ) }
    dend_85 { pt3dadd( -56.2593, 109.672, -31.1514, 0.29 ) }
    dend_85 { pt3dadd( -56.2626, 110.738, -31.6491, 0.29 ) }
    dend_85 { pt3dadd( -56.2041, 112.654, -32.6489, 0.29 ) }
    dend_85 { pt3dadd( -56.1766, 113.245, -32.9793, 0.37 ) }
    dend_85 { pt3dadd( -56.1496, 113.958, -33.3969, 0.37 ) }
    dend_85 { pt3dadd( -56.1335, 114.835, -33.9396, 0.37 ) }
    dend_85 { pt3dadd( -56.1168, 115.557, -34.3908, 0.22 ) }
    dend_85 { pt3dadd( -56.1093, 116.309, -34.8438, 0.22 ) }
    dend_85 { pt3dadd( -56.1772, 117.121, -35.2376, 1.03 ) }
    dend_85 { pt3dadd( -56.2074, 117.266, -35.3113, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -55.7518, 105.751, -29.7399, 0.52 ) }
    dend_80 { pt3dadd( -56.8994, 107.092, -29.0758, 0.52 ) }
    dend_80 { pt3dadd( -57.4101, 107.802, -28.7397, 0.52 ) }
    dend_80 { pt3dadd( -57.9081, 108.617, -28.4033, 0.44 ) }
    dend_80 { pt3dadd( -58.1241, 109.032, -28.2597, 0.59 ) }
    dend_80 { pt3dadd( -58.3475, 109.533, -28.1118, 0.59 ) }
    dend_80 { pt3dadd( -58.7469, 110.493, -27.831, 0.37 ) }
    dend_80 { pt3dadd( -59.2105, 111.732, -27.564, 0.37 ) }
    dend_80 { pt3dadd( -59.4767, 112.534, -27.387, 0.37 ) }
    dend_80 { pt3dadd( -59.745, 113.343, -27.1999, 0.37 ) }
    dend_80 { pt3dadd( -60.0418, 114.23, -26.9707, 0.29 ) }
    dend_80 { pt3dadd( -60.323, 115.026, -26.7471, 0.29 ) }
    dend_80 { pt3dadd( -60.6635, 115.863, -26.4855, 0.81 ) }
    dend_80 { pt3dadd( -60.837, 116.198, -26.3715, 0.81 ) }
    dend_80 { pt3dadd( -61.1485, 116.705, -26.1796, 0.74 ) }
    dend_80 { pt3dadd( -61.6057, 117.343, -25.9602, 0.74 ) }
    dend_80 { pt3dadd( -62.0434, 117.84, -25.8399, 0.96 ) }
    dend_80 { pt3dadd( -62.5217, 118.298, -25.7963, 0.96 ) }
    dend_80 { pt3dadd( -62.8592, 118.6, -25.8182, 0.59 ) }
    dend_80 { pt3dadd( -63.5401, 119.222, -25.9701, 0.29 ) }
    dend_80 { pt3dadd( -64.1931, 119.85, -26.2357, 0.29 ) }
    dend_80 { pt3dadd( -64.9148, 120.583, -26.6245, 0.29 ) }
    dend_80 { pt3dadd( -65.422, 121.135, -26.925, 0.22 ) }
    dend_80 { pt3dadd( -66.1805, 121.997, -27.3938, 0.22 ) }
    dend_80 { pt3dadd( -66.7724, 122.705, -27.7743, 0.74 ) }
    dend_80 { pt3dadd( -67.429, 123.553, -28.1786, 0.37 ) }
    dend_80 { pt3dadd( -67.9374, 124.303, -28.4688, 0.37 ) }
    dend_80 { pt3dadd( -68.3912, 125.047, -28.72, 0.81 ) }
    dend_80 { pt3dadd( -68.7156, 125.55, -28.8875, 1.18 ) }
    dend_80 { pt3dadd( -69.0282, 125.946, -29.0052, 1.18 ) }
    dend_80 { pt3dadd( -69.8453, 126.79, -29.2635, 0.29 ) }
    dend_80 { pt3dadd( -70.7151, 127.63, -29.5133, 0.29 ) }
    dend_80 { pt3dadd( -71.2777, 128.132, -29.685, 0.29 ) }
    dend_80 { pt3dadd( -71.8617, 128.609, -29.8757, 0.29 ) }
    dend_80 { pt3dadd( -72.7328, 129.263, -30.1448, 0.74 ) }
    dend_80 { pt3dadd( -73.3711, 129.647, -30.3216, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 129.823, 25.5041, 56.7499, 0.29 ) }
    dend_71 { pt3dadd( 138.561, 25.8577, 62.1261, 0.29 ) }
    dend_71 { pt3dadd( 147.063, 25.9929, 67.8774, 0.29 ) }
    dend_71 { pt3dadd( 155.902, 27.1789, 72.9422, 0.29 ) }
    dend_71 { pt3dadd( 164.18, 29.575, 78.4531, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 129.823, 25.5041, 56.7499, 0.29 ) }
    dend_70 { pt3dadd( 140.418, 25.3774, 62.3976, 0.29 ) }
    dend_70 { pt3dadd( 150.994, 27.2394, 67.7164, 0.29 ) }
    dend_70 { pt3dadd( 162.308, 29.5859, 70.872, 0.29 ) }
    dend_70 { pt3dadd( 172.623, 33.3417, 75.5453, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 83.096, 32.0731, 2.03184, 0.44 ) }
    dend_58 { pt3dadd( 84.188, 32.1892, 1.49337, 0.44 ) }
    dend_58 { pt3dadd( 84.5903, 32.312, 1.25004, 0.37 ) }
    dend_58 { pt3dadd( 85.3023, 32.6189, 0.800427, 0.59 ) }
    dend_58 { pt3dadd( 85.6894, 32.8075, 0.556669, 0.74 ) }
    dend_58 { pt3dadd( 86.6848, 33.3181, -0.0418174, 0.37 ) }
    dend_58 { pt3dadd( 87.7147, 33.8628, -0.623021, 0.29 ) }
    dend_58 { pt3dadd( 88.3233, 34.2724, -0.971217, 0.29 ) }
    dend_58 { pt3dadd( 88.7622, 34.5942, -1.18625, 0.88 ) }
    dend_58 { pt3dadd( 88.9238, 34.7261, -1.25877, 1.11 ) }
    dend_58 { pt3dadd( 89.3272, 35.0602, -1.40893, 1.11 ) }
    dend_58 { pt3dadd( 89.7151, 35.3436, -1.47556, 1.18 ) }
    dend_58 { pt3dadd( 90.4447, 35.7246, -1.50138, 0.74 ) }
    dend_58 { pt3dadd( 90.9433, 35.9634, -1.49919, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 83.096, 32.0731, 2.03184, 0.29 ) }
    dend_55 { pt3dadd( 84.0291, 32.9828, 2.48479, 0.29 ) }
    dend_55 { pt3dadd( 84.4671, 33.4124, 2.71812, 0.29 ) }
    dend_55 { pt3dadd( 85.0281, 33.9625, 3.01699, 0.66 ) }
    dend_55 { pt3dadd( 85.6337, 34.5564, 3.33964, 0.29 ) }
    dend_55 { pt3dadd( 86.0872, 35.0011, 3.58121, 0.29 ) }
    dend_55 { pt3dadd( 86.996, 35.8924, 4.06538, 0.29 ) }
    dend_55 { pt3dadd( 87.5141, 36.36, 4.40033, 0.29 ) }
    dend_55 { pt3dadd( 95.3422, 43.5502, 7.37482, 0.29 ) }
    dend_55 { pt3dadd( 101.998, 51.3384, 11.372, 0.29 ) }
    dend_55 { pt3dadd( 107.247, 60.3622, 14.4854, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 113.617, 68.6058, 17.8894, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -79.8111, -67.3879, -68.412, 0.81 ) }
    dend_48 { pt3dadd( -80.0657, -68.1442, -69.4343, 0.81 ) }
    dend_48 { pt3dadd( -80.1171, -68.2408, -69.5668, 0.81 ) }
    dend_48 { pt3dadd( -80.8198, -69.2388, -70.8739, 0.37 ) }
    dend_48 { pt3dadd( -81.034, -69.5054, -71.1894, 0.52 ) }
    dend_48 { pt3dadd( -81.2411, -69.7603, -71.4792, 0.66 ) }
    dend_48 { pt3dadd( -81.4783, -70.0641, -71.8109, 0.66 ) }
    dend_48 { pt3dadd( -82.0145, -70.6738, -72.4325, 0.37 ) }
    dend_48 { pt3dadd( -82.3547, -71.0513, -72.8331, 0.37 ) }
    dend_48 { pt3dadd( -82.8835, -71.6137, -73.4317, 0.37 ) }
    dend_48 { pt3dadd( -83.2077, -71.9574, -73.815, 0.66 ) }
    dend_48 { pt3dadd( -83.7282, -72.5, -74.4191, 1.11 ) }
    dend_48 { pt3dadd( -83.9751, -72.7474, -74.6838, 1.25 ) }
    dend_48 { pt3dadd( -84.8096, -73.5122, -75.5994, 0.22 ) }
    dend_48 { pt3dadd( -85.158, -73.7827, -75.9737, 0.29 ) }
    dend_48 { pt3dadd( -85.4635, -73.9794, -76.2873, 0.59 ) }
    dend_48 { pt3dadd( -85.8122, -74.1801, -76.6169, 0.81 ) }
    dend_48 { pt3dadd( -86.1814, -74.3968, -76.9729, 0.81 ) }
    dend_48 { pt3dadd( -87.1305, -75.0571, -77.892, 0.37 ) }
    dend_48 { pt3dadd( -87.4075, -75.2883, -78.1529, 0.37 ) }
    dend_48 { pt3dadd( -87.8524, -75.7715, -78.6216, 0.59 ) }
    dend_48 { pt3dadd( -88.0136, -75.9877, -78.8009, 0.81 ) }
    dend_48 { pt3dadd( -88.5796, -76.8918, -79.4261, 0.44 ) }
    dend_48 { pt3dadd( -88.9587, -77.5902, -79.8078, 0.44 ) }
    dend_48 { pt3dadd( -89.2578, -78.1929, -80.0628, 0.37 ) }
    dend_48 { pt3dadd( -89.6163, -78.9476, -80.3559, 0.37 ) }
    dend_48 { pt3dadd( -89.8841, -79.5026, -80.5701, 0.66 ) }
    dend_48 { pt3dadd( -90.1045, -79.912, -80.7443, 0.81 ) }
    dend_48 { pt3dadd( -90.3252, -80.2899, -80.8952, 0.81 ) }
    dend_48 { pt3dadd( -90.7422, -80.9549, -81.1763, 0.29 ) }
    dend_48 { pt3dadd( -90.9879, -81.32, -81.3233, 0.96 ) }
    dend_48 { pt3dadd( -91.592, -82.1768, -81.6147, 0.29 ) }
    dend_48 { pt3dadd( -91.977, -82.7362, -81.7803, 0.29 ) }
    dend_48 { pt3dadd( -92.3598, -83.2962, -81.9081, 0.44 ) }
    dend_48 { pt3dadd( -92.5785, -83.6061, -81.9707, 0.44 ) }
    dend_48 { pt3dadd( -92.935, -84.1025, -82.0403, 0.29 ) }
    dend_48 { pt3dadd( -93.1305, -84.3796, -82.0944, 0.59 ) }
    dend_48 { pt3dadd( -93.4268, -84.8369, -82.1886, 0.59 ) }
    dend_48 { pt3dadd( -93.6995, -85.2967, -82.3096, 0.52 ) }
    dend_48 { pt3dadd( -94.1363, -85.9868, -82.5399, 0.37 ) }
    dend_48 { pt3dadd( -94.4172, -86.4171, -82.7052, 0.88 ) }
    dend_48 { pt3dadd( -94.9439, -87.2183, -83.0378, 0.44 ) }
    dend_48 { pt3dadd( -95.2367, -87.6795, -83.2265, 0.59 ) }
    dend_48 { pt3dadd( -95.4756, -88.0594, -83.3765, 0.59 ) }
    dend_48 { pt3dadd( -95.7617, -88.5207, -83.5334, 0.59 ) }
    dend_48 { pt3dadd( -96.0589, -88.9913, -83.6502, 0.37 ) }
    dend_48 { pt3dadd( -96.3006, -89.3257, -83.7037, 0.37 ) }
    dend_48 { pt3dadd( -96.7068, -89.8082, -83.7177, 0.29 ) }
    dend_48 { pt3dadd( -96.8623, -89.9735, -83.7032, 0.29 ) }
    dend_48 { pt3dadd( -97.2612, -90.3872, -83.6208, 0.88 ) }
    dend_48 { pt3dadd( -97.5299, -90.671, -83.536, 1.18 ) }
    dend_48 { pt3dadd( -97.9857, -91.1088, -83.3714, 0.29 ) }
    dend_48 { pt3dadd( -98.3238, -91.4074, -83.2518, 0.29 ) }
    dend_48 { pt3dadd( -98.8308, -91.8521, -83.1119, 0.29 ) }
    dend_48 { pt3dadd( -99.0611, -92.0667, -83.0619, 0.88 ) }
    dend_48 { pt3dadd( -99.2843, -92.2877, -83.0314, 0.88 ) }
    dend_48 { pt3dadd( -100.015, -93.0318, -83.0162, 0.22 ) }
    dend_48 { pt3dadd( -100.262, -93.2886, -83.046, 0.22 ) }
    dend_48 { pt3dadd( -100.808, -93.8368, -83.1537, 0.59 ) }
    dend_48 { pt3dadd( -100.93, -93.9564, -83.1869, 0.59 ) }
    dend_48 { pt3dadd( -101.424, -94.4337, -83.3329, 0.22 ) }
    dend_48 { pt3dadd( -101.706, -94.7118, -83.4264, 0.44 ) }
    dend_48 { pt3dadd( -102.098, -95.14, -83.5844, 0.22 ) }
    dend_48 { pt3dadd( -102.638, -95.7248, -83.7933, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -79.8111, -67.3879, -68.412, 0.29 ) }
    dend_47 { pt3dadd( -81.352, -67.7483, -68.2069, 0.29 ) }
    dend_47 { pt3dadd( -82.2919, -68.0288, -68.0465, 0.29 ) }
    dend_47 { pt3dadd( -83.21, -68.3415, -67.9047, 0.66 ) }
    dend_47 { pt3dadd( -83.6456, -68.5145, -67.8457, 0.66 ) }
    dend_47 { pt3dadd( -85.1708, -69.1755, -67.6361, 0.29 ) }
    dend_47 { pt3dadd( -85.8278, -69.4723, -67.5544, 0.29 ) }
    dend_47 { pt3dadd( -86.3045, -69.7292, -67.4515, 0.66 ) }
    dend_47 { pt3dadd( -86.7532, -69.9966, -67.3489, 0.66 ) }
    dend_47 { pt3dadd( -88.2837, -70.9486, -67.0006, 0.29 ) }
    dend_47 { pt3dadd( -88.831, -71.2631, -66.8852, 0.52 ) }
    dend_47 { pt3dadd( -89.3628, -71.5307, -66.7886, 0.52 ) }
    dend_47 { pt3dadd( -90.8493, -72.156, -66.4943, 0.22 ) }
    dend_47 { pt3dadd( -91.5466, -72.4018, -66.3444, 0.59 ) }
    dend_47 { pt3dadd( -91.9955, -72.5392, -66.2266, 0.74 ) }
    dend_47 { pt3dadd( -92.8744, -72.757, -65.9846, 0.29 ) }
    dend_47 { pt3dadd( -93.3215, -72.8491, -65.8657, 0.29 ) }
    dend_47 { pt3dadd( -93.9104, -72.9417, -65.7103, 0.96 ) }
    dend_47 { pt3dadd( -94.4993, -72.9786, -65.5997, 0.96 ) }
    dend_47 { pt3dadd( -96.1039, -73.0643, -65.2439, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -21.2676, -130.097, 22.6312, 0.29 ) }
    dend_40 { pt3dadd( -20.9077, -130.137, 23.369, 0.29 ) }
    dend_40 { pt3dadd( -20.0742, -130.275, 24.9539, 0.29 ) }
    dend_40 { pt3dadd( -19.4833, -130.419, 26.0823, 0.59 ) }
    dend_40 { pt3dadd( -18.6978, -130.73, 27.6563, 0.66 ) }
    dend_40 { pt3dadd( -17.5967, -131.345, 29.8443, 0.59 ) }
    dend_40 { pt3dadd( -16.8572, -131.925, 31.2563, 0.29 ) }
    dend_40 { pt3dadd( -16.3631, -132.471, 32.0547, 0.52 ) }
    dend_40 { pt3dadd( -16.1232, -133.091, 32.303, 0.66 ) }
    dend_40 { pt3dadd( -15.8628, -134.446, 32.2786, 0.37 ) }
    dend_40 { pt3dadd( -15.6024, -136.181, 32.0163, 0.29 ) }
    dend_40 { pt3dadd( -15.4334, -137.554, 31.7112, 0.29 ) }
    dend_40 { pt3dadd( -15.3012, -138.914, 31.3419, 0.29 ) }
    dend_40 { pt3dadd( -15.168, -140.15, 30.9834, 0.29 ) }
    dend_40 { pt3dadd( -14.9419, -141.61, 30.5363, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -14.6828, -142.859, 30.1423, 0.29 ) }
    dend_40 { pt3dadd( -9.20095, -151.15, 36.0784, 0.29 ) }
    dend_40 { pt3dadd( -3.95474, -158.065, 43.882, 0.29 ) }
    dend_40 { pt3dadd( 3.28897, -165.27, 49.4904, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.2676, -130.097, 22.6312, 0.74 ) }
    dend_35 { pt3dadd( -21.8123, -130.745, 22.3626, 0.74 ) }
    dend_35 { pt3dadd( -22.2861, -131.413, 22.1294, 0.52 ) }
    dend_35 { pt3dadd( -22.6456, -131.981, 21.9602, 0.52 ) }
    dend_35 { pt3dadd( -23.2057, -133.017, 21.7087, 0.59 ) }
    dend_35 { pt3dadd( -23.4297, -133.545, 21.6347, 0.96 ) }
    dend_35 { pt3dadd( -23.5976, -134.117, 21.5807, 1.18 ) }
    dend_35 { pt3dadd( -23.6475, -134.603, 21.5101, 1.18 ) }
    dend_35 { pt3dadd( -23.6169, -135.063, 21.4446, 0.96 ) }
    dend_35 { pt3dadd( -23.4751, -135.735, 21.3057, 0.66 ) }
    dend_35 { pt3dadd( -23.1456, -136.686, 20.9434, 0.52 ) }
    dend_35 { pt3dadd( -22.7782, -137.537, 20.5538, 0.52 ) }
    dend_35 { pt3dadd( -22.3083, -138.434, 20.0493, 0.29 ) }
    dend_35 { pt3dadd( -22.0973, -138.77, 19.8166, 0.37 ) }
    dend_35 { pt3dadd( -21.5162, -139.547, 19.12, 0.29 ) }
    dend_35 { pt3dadd( -20.8859, -140.243, 18.228, 0.29 ) }
    dend_35 { pt3dadd( -21.0239, -147.879, 16.4847, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.78068, -67.1852, -2.03141, 0.37 ) }
    dend_31 { pt3dadd( -6.23016, -68.6851, -0.907505, 0.37 ) }
    dend_31 { pt3dadd( -7.73611, -69.4407, 0.162879, 0.37 ) }
    dend_31 { pt3dadd( -8.80974, -70.0227, 1.11495, 0.37 ) }
    dend_31 { pt3dadd( -9.53463, -70.4283, 1.77731, 0.37 ) }
    dend_31 { pt3dadd( -10.4382, -70.9518, 2.65456, 0.59 ) }
    dend_31 { pt3dadd( -11.3111, -71.4734, 3.51568, 0.74 ) }
    dend_31 { pt3dadd( -11.9469, -71.8686, 4.32984, 0.52 ) }
    dend_31 { pt3dadd( -12.4256, -72.173, 4.9515, 0.59 ) }
    dend_31 { pt3dadd( -12.8594, -72.4999, 5.46983, 0.74 ) }
    dend_31 { pt3dadd( -13.6336, -73.0698, 6.24755, 0.52 ) }
    dend_31 { pt3dadd( -14.1384, -73.4168, 6.66435, 0.52 ) }
    dend_31 { pt3dadd( -14.6269, -73.717, 6.99872, 0.74 ) }
    dend_31 { pt3dadd( -15.1825, -74.0356, 7.34568, 0.74 ) }
    dend_31 { pt3dadd( -15.7157, -74.349, 7.66557, 0.52 ) }
    dend_31 { pt3dadd( -16.4914, -74.7991, 8.11718, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.78068, -67.1852, -2.03141, 0.88 ) }
    dend_18 { pt3dadd( -2.95844, -68.074, -2.0441, 0.88 ) }
    dend_18 { pt3dadd( -3.29724, -69.1917, -1.94106, 0.66 ) }
    dend_18 { pt3dadd( -3.62847, -69.9749, -1.65651, 0.74 ) }
    dend_18 { pt3dadd( -3.9141, -70.4951, -1.38973, 0.88 ) }
    dend_18 { pt3dadd( -4.41966, -71.2832, -0.946848, 0.88 ) }
    dend_18 { pt3dadd( -4.74456, -71.7602, -0.679408, 1.03 ) }
    dend_18 { pt3dadd( -5.14195, -72.281, -0.336747, 1.03 ) }
    dend_18 { pt3dadd( -6.04095, -73.4932, 0.477313, 1.03 ) }
    dend_18 { pt3dadd( -6.54874, -74.2552, 0.946301, 1.03 ) }
    dend_18 { pt3dadd( -6.95936, -75.0244, 1.34153, 0.88 ) }
    dend_18 { pt3dadd( -7.17822, -75.684, 1.58162, 0.88 ) }
    dend_18 { pt3dadd( -7.23008, -76.2981, 1.73384, 0.88 ) }
    dend_18 { pt3dadd( -7.03352, -77.4884, 1.85159, 1.25 ) }
    dend_18 { pt3dadd( -6.88808, -77.9207, 1.86291, 1.55 ) }
    dend_18 { pt3dadd( -6.60343, -78.5268, 1.90105, 1.55 ) }
    dend_18 { pt3dadd( -6.12505, -79.364, 2.03833, 1.55 ) }
    dend_18 { pt3dadd( -5.77996, -79.8833, 2.19287, 1.55 ) }
    dend_18 { pt3dadd( -5.10248, -80.7778, 2.59851, 1.03 ) }
    dend_18 { pt3dadd( -4.54183, -81.4132, 3.0164, 1.03 ) }
    dend_18 { pt3dadd( -4.05777, -81.9113, 3.41521, 0.81 ) }
    dend_18 { pt3dadd( -3.26316, -82.6468, 4.12239, 0.81 ) }
    dend_18 { pt3dadd( -2.69392, -83.1271, 4.64227, 1.03 ) }
    dend_18 { pt3dadd( -2.13751, -83.5444, 5.11715, 1.03 ) }
    dend_18 { pt3dadd( -1.50116, -83.9762, 5.60302, 1.03 ) }
    dend_18 { pt3dadd( -0.977562, -84.3311, 5.93355, 0.88 ) }
    dend_18 { pt3dadd( -0.175334, -84.9199, 6.3636, 0.88 ) }
    dend_18 { pt3dadd( 0.225278, -85.2381, 6.53684, 0.96 ) }
    dend_18 { pt3dadd( 0.685959, -85.6515, 6.71164, 0.96 ) }
    dend_18 { pt3dadd( 1.3113, -86.2839, 6.9274, 1.33 ) }
    dend_18 { pt3dadd( 1.64186, -86.6656, 7.02421, 1.62 ) }
    dend_18 { pt3dadd( 1.91662, -87.0125, 7.10445, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.85495, -33.5148, -6.86087, 0.66 ) }
    dend_16 { pt3dadd( 8.12092, -35.217, -5.40362, 0.66 ) }
    dend_16 { pt3dadd( 8.15812, -35.7769, -4.98408, 0.88 ) }
    dend_16 { pt3dadd( 8.21763, -36.8904, -4.2574, 1.03 ) }
    dend_16 { pt3dadd( 8.26004, -37.4214, -3.9426, 1.03 ) }
    dend_16 { pt3dadd( 8.31676, -37.8889, -3.67823, 1.03 ) }
    dend_16 { pt3dadd( 8.41596, -38.4654, -3.35841, 0.37 ) }
    dend_16 { pt3dadd( 8.51665, -39.0872, -3.08957, 0.37 ) }
    dend_16 { pt3dadd( 8.71234, -39.7055, -2.84256, 0.59 ) }
    dend_16 { pt3dadd( 9.05827, -40.232, -2.65587, 0.81 ) }
    dend_16 { pt3dadd( 9.35542, -40.5262, -2.52563, 0.81 ) }
    dend_16 { pt3dadd( 9.70115, -40.7821, -2.36626, 0.52 ) }
    dend_16 { pt3dadd( 10.0269, -40.9872, -2.20132, 0.81 ) }
    dend_16 { pt3dadd( 10.5077, -41.2818, -1.93242, 1.25 ) }
    dend_16 { pt3dadd( 10.6988, -41.4306, -1.80093, 1.69 ) }
    dend_16 { pt3dadd( 10.9206, -41.6991, -1.59738, 1.69 ) }
    dend_16 { pt3dadd( 11.169, -42.3584, -1.21562, 0.96 ) }
    dend_16 { pt3dadd( 11.2214, -42.7917, -1.02552, 0.66 ) }
    dend_16 { pt3dadd( 11.2276, -43.1314, -0.89708, 0.81 ) }
    dend_16 { pt3dadd( 11.2211, -43.844, -0.637369, 0.44 ) }
    dend_16 { pt3dadd( 11.2472, -44.4093, -0.422506, 0.44 ) }
    dend_16 { pt3dadd( 11.3067, -44.8539, -0.246212, 0.44 ) }
    dend_16 { pt3dadd( 11.4308, -45.2511, -0.0410562, 0.88 ) }
    dend_16 { pt3dadd( 11.7229, -45.7625, 0.35224, 1.25 ) }
    dend_16 { pt3dadd( 12.1045, -46.2344, 0.817629, 0.66 ) }
    dend_16 { pt3dadd( 12.4602, -46.59, 1.2142, 0.52 ) }
    dend_16 { pt3dadd( 12.6789, -46.7975, 1.4477, 0.52 ) }
    dend_16 { pt3dadd( 13.2104, -47.3352, 2.02715, 0.74 ) }
    dend_16 { pt3dadd( 13.6393, -47.8177, 2.49016, 1.25 ) }
    dend_16 { pt3dadd( 13.8051, -48.0263, 2.65224, 1.25 ) }
    dend_16 { pt3dadd( 14.0671, -48.3878, 2.86989, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 14.3851, -48.8589, 3.06793, 0.44 ) }
    dend_16 { pt3dadd( 14.7956, -49.4856, 3.23927, 0.37 ) }
    dend_16 { pt3dadd( 15.0442, -49.8566, 3.28405, 0.37 ) }
    dend_16 { pt3dadd( 15.3083, -50.2292, 3.29717, 0.96 ) }
    dend_16 { pt3dadd( 15.5147, -50.5061, 3.29944, 1.33 ) }
    dend_16 { pt3dadd( 16.1372, -51.2577, 3.29386, 0.29 ) }
    dend_16 { pt3dadd( 16.3686, -51.4995, 3.28807, 0.29 ) }
    dend_16 { pt3dadd( 16.6048, -51.7165, 3.27563, 0.29 ) }
    dend_16 { pt3dadd( 16.693, -51.797, 3.27171, 0.44 ) }
    dend_16 { pt3dadd( 19.1864, -56.2906, 5.11172, 0.44 ) }
    dend_16 { pt3dadd( 22.3966, -60.5447, 6.38476, 0.44 ) }
    dend_16 { pt3dadd( 25.0769, -65.217, 7.16709, 0.44 ) }
    dend_16 { pt3dadd( 28.0204, -69.6993, 8.19454, 0.44 ) }
    dend_16 { pt3dadd( 30.7281, -74.2172, 9.61924, 0.44 ) }
    dend_16 { pt3dadd( 33.2623, -78.9228, 10.6325, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.85495, -33.5148, -6.86087, 1.03 ) }
    dend_11 { pt3dadd( 7.83763, -35.5815, -7.12186, 1.03 ) }
    dend_11 { pt3dadd( 8.04657, -37.6301, -7.38398, 1.03 ) }
    dend_11 { pt3dadd( 8.36937, -39.1075, -7.58033, 0.96 ) }
    dend_11 { pt3dadd( 8.7948, -40.4996, -7.77085, 0.96 ) }
    dend_11 { pt3dadd( 9.31966, -41.8419, -7.95981, 0.96 ) }
    dend_11 { pt3dadd( 9.75282, -42.7427, -8.05331, 1.18 ) }
    dend_11 { pt3dadd( 10.6799, -43.9439, -8.07108, 1.47 ) }
    dend_11 { pt3dadd( 11.6514, -44.8865, -7.98657, 2.21 ) }
    dend_11 { pt3dadd( 12.0725, -45.2535, -7.91152, 2.21 ) }
    dend_11 { pt3dadd( 12.736, -45.8518, -7.71001, 1.99 ) }
    dend_11 { pt3dadd( 13.9043, -47.042, -7.19754, 1.33 ) }
    dend_11 { pt3dadd( 14.963, -48.3828, -6.57505, 0.88 ) }
    dend_11 { pt3dadd( 15.6179, -49.4783, -6.05148, 0.74 ) }
    dend_11 { pt3dadd( 16.0243, -50.5292, -5.58431, 0.74 ) }
    dend_11 { pt3dadd( 16.3116, -51.8051, -5.08218, 1.33 ) }
    dend_11 { pt3dadd( 16.3966, -52.5877, -4.82279, 1.62 ) }
    dend_11 { pt3dadd( 16.4236, -53.4489, -4.59901, 1.92 ) }
    dend_11 { pt3dadd( 16.4257, -54.3745, -4.43581, 1.69 ) }
    dend_11 { pt3dadd( 16.5047, -56.1351, -4.25199, 1.33 ) }
    dend_11 { pt3dadd( 16.7134, -57.9124, -4.18534, 1.03 ) }
    dend_11 { pt3dadd( 16.9602, -59.1295, -4.2149, 0.88 ) }
    dend_11 { pt3dadd( 17.3003, -60.2476, -4.29334, 1.03 ) }
    dend_11 { pt3dadd( 17.8693, -61.701, -4.45321, 1.03 ) }
    dend_11 { pt3dadd( 18.5525, -63.1507, -4.68078, 1.03 ) }
    dend_11 { pt3dadd( 19.1905, -64.3792, -4.94939, 1.33 ) }
    dend_11 { pt3dadd( 19.652, -65.3043, -5.21352, 1.69 ) }
    dend_11 { pt3dadd( 20.134, -66.4328, -5.59047, 1.47 ) }
    dend_11 { pt3dadd( 20.391, -67.228, -5.89049, 1.03 ) }
    dend_11 { pt3dadd( 20.6472, -68.4471, -6.38072, 0.96 ) }
    dend_11 { pt3dadd( 20.7717, -69.5647, -6.86789, 0.96 ) }
    dend_11 { pt3dadd( 20.8189, -70.9387, -7.47993, 1.4 ) }
    dend_11 { pt3dadd( 20.8029, -72.3999, -8.11249, 1.4 ) }
    dend_11 { pt3dadd( 20.781, -73.6762, -8.65313, 1.55 ) }
    dend_11 { pt3dadd( 20.8045, -74.3686, -8.9245, 1.77 ) }
    dend_11 { pt3dadd( 20.9426, -75.6944, -9.38417, 0.96 ) }
    dend_11 { pt3dadd( 21.1886, -76.8784, -9.71544, 0.66 ) }
    dend_11 { pt3dadd( 21.5779, -77.9825, -9.89754, 0.66 ) }
    dend_11 { pt3dadd( 22.1498, -79.0341, -9.95775, 0.96 ) }
    dend_11 { pt3dadd( 22.9131, -80.0621, -9.93613, 1.11 ) }
    dend_11 { pt3dadd( 23.3258, -80.5063, -9.9124, 1.4 ) }
    dend_11 { pt3dadd( 23.7046, -80.8553, -9.89304, 1.4 ) }
    dend_11 { pt3dadd( 24.4999, -81.5803, -9.85632, 1.4 ) }
    dend_11 { pt3dadd( 25.4374, -82.5312, -9.84059, 0.66 ) }
    dend_11 { pt3dadd( 25.8465, -83.0459, -9.87115, 0.52 ) }
    dend_11 { pt3dadd( 26.3017, -83.786, -9.95548, 0.52 ) }
    dend_11 { pt3dadd( 26.8922, -85.0043, -10.0779, 0.81 ) }
    dend_11 { pt3dadd( 27.4252, -86.3712, -10.1404, 1.03 ) }
    dend_11 { pt3dadd( 27.6908, -87.2768, -10.1616, 1.03 ) }
    dend_11 { pt3dadd( 27.9463, -88.5015, -10.1396, 1.03 ) }
    dend_11 { pt3dadd( 28.1201, -89.7245, -10.1658, 1.03 ) }
    dend_11 { pt3dadd( 28.2455, -90.9982, -10.2342, 0.88 ) }
    dend_11 { pt3dadd( 28.3744, -92.5558, -10.4307, 1.03 ) }
    dend_11 { pt3dadd( 28.5061, -93.9446, -10.7022, 0.52 ) }
    dend_11 { pt3dadd( 28.6657, -95.258, -11.0697, 0.52 ) }
    dend_11 { pt3dadd( 28.9202, -97.1721, -11.8117, 0.88 ) }
    dend_11 { pt3dadd( 29.03, -97.9535, -12.1968, 1.11 ) }
    dend_11 { pt3dadd( 29.1959, -99.192, -12.9031, 0.59 ) }
    dend_11 { pt3dadd( 29.2628, -99.7168, -13.2009, 0.59 ) }
    dend_11 { pt3dadd( 29.4071, -100.895, -13.7009, 0.52 ) }
    dend_11 { pt3dadd( 29.5126, -102.15, -13.9607, 0.52 ) }
    dend_11 { pt3dadd( 29.5098, -103.167, -13.8471, 1.11 ) }
    dend_11 { pt3dadd( 29.4178, -104.027, -13.5817, 1.25 ) }
    dend_11 { pt3dadd( 29.1792, -105.327, -12.9863, 1.18 ) }
    dend_11 { pt3dadd( 28.9073, -106.596, -12.3116, 0.52 ) }
    dend_11 { pt3dadd( 28.724, -107.476, -11.7698, 0.52 ) }
    dend_11 { pt3dadd( 28.5312, -108.682, -11.0519, 0.52 ) }
    dend_11 { pt3dadd( 28.48, -109.137, -10.8306, 0.81 ) }
    dend_11 { pt3dadd( 28.4298, -109.972, -10.5539, 0.74 ) }
    dend_11 { pt3dadd( 28.3774, -111.051, -10.3777, 0.74 ) }
    dend_11 { pt3dadd( 28.2999, -112.123, -10.318, 1.03 ) }
    dend_11 { pt3dadd( 28.1183, -113.545, -10.3543, 0.66 ) }
    dend_11 { pt3dadd( 27.9263, -114.484, -10.423, 0.52 ) }
    dend_11 { pt3dadd( 27.5783, -115.571, -10.54, 1.11 ) }
    dend_11 { pt3dadd( 27.1791, -116.483, -10.724, 1.11 ) }
    dend_11 { pt3dadd( 26.517, -117.777, -11.0894, 0.81 ) }
    dend_11 { pt3dadd( 25.7844, -119.128, -11.5775, 0.66 ) }
    dend_11 { pt3dadd( 25.2799, -120.075, -11.9532, 0.88 ) }
    dend_11 { pt3dadd( 24.6677, -121.366, -12.5402, 0.66 ) }
    dend_11 { pt3dadd( 23.9431, -123.069, -13.4957, 0.59 ) }
    dend_11 { pt3dadd( 23.532, -124.184, -14.2275, 0.88 ) }
    dend_11 { pt3dadd( 23.2199, -125.158, -14.9311, 1.18 ) }
    dend_11 { pt3dadd( 23.0094, -125.863, -15.4498, 0.96 ) }
    dend_11 { pt3dadd( 22.7433, -126.795, -16.14, 0.96 ) }
    dend_11 { pt3dadd( 22.2788, -128.494, -17.299, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 22.1201, -129.054, -17.6304, 0.81 ) }
    dend_11 { pt3dadd( 21.8173, -130.149, -18.2075, 0.66 ) }
    dend_11 { pt3dadd( 21.6144, -130.983, -18.5157, 0.66 ) }
    dend_11 { pt3dadd( 21.4166, -132.011, -18.7096, 0.96 ) }
    dend_11 { pt3dadd( 21.295, -133.269, -18.5285, 0.88 ) }
    dend_11 { pt3dadd( 21.286, -134.365, -18.1267, 0.88 ) }
    dend_11 { pt3dadd( 21.301, -135.32, -17.7119, 0.37 ) }
    dend_11 { pt3dadd( 21.385, -137.063, -16.8998, 1.03 ) }
    dend_11 { pt3dadd( 21.4226, -137.981, -16.495, 1.03 ) }
    dend_11 { pt3dadd( 21.4129, -140.015, -15.6501, 0.44 ) }
    dend_11 { pt3dadd( 21.3539, -141.496, -15.2037, 0.44 ) }
    dend_11 { pt3dadd( 21.3108, -142.36, -15.1496, 0.74 ) }
    dend_11 { pt3dadd( 21.2918, -143.256, -15.4026, 0.74 ) }
    dend_11 { pt3dadd( 21.3149, -144.499, -16.088, 0.44 ) }
    dend_11 { pt3dadd( 21.3802, -145.497, -16.7598, 0.66 ) }
    dend_11 { pt3dadd( 21.5371, -146.933, -17.8477, 0.44 ) }
    dend_11 { pt3dadd( 21.8196, -148.986, -19.4243, 0.88 ) }
    dend_11 { pt3dadd( 22.1793, -151.237, -21.069, 0.52 ) }
    dend_11 { pt3dadd( 22.3858, -152.383, -21.8849, 0.74 ) }
    dend_11 { pt3dadd( 22.7, -153.921, -22.9404, 1.33 ) }
    dend_11 { pt3dadd( 22.8754, -154.795, -23.4946, 1.33 ) }
    dend_11 { pt3dadd( 23.1638, -156.595, -24.4605, 0.74 ) }
    dend_11 { pt3dadd( 23.2952, -157.741, -24.9289, 0.66 ) }
    dend_11 { pt3dadd( 23.3709, -159.369, -25.4376, 0.66 ) }
    dend_11 { pt3dadd( 23.3227, -160.501, -25.758, 0.81 ) }
    dend_11 { pt3dadd( 23.1444, -161.658, -26.0788, 0.59 ) }
    dend_11 { pt3dadd( 22.9425, -162.435, -26.2622, 1.18 ) }
    dend_11 { pt3dadd( 22.8106, -162.796, -26.3394, 1.18 ) }
    dend_11 { pt3dadd( 22.2787, -164.074, -26.5827, 0.44 ) }
    dend_11 { pt3dadd( 21.8224, -165.186, -26.6882, 0.44 ) }
    dend_11 { pt3dadd( 21.4933, -166.121, -26.7203, 1.03 ) }
    dend_11 { pt3dadd( 21.346, -166.787, -26.6943, 1.4 ) }
    dend_11 { pt3dadd( 21.2893, -168.193, -26.4316, 0.52 ) }
    dend_11 { pt3dadd( 21.3506, -169.142, -26.2061, 0.52 ) }
    dend_11 { pt3dadd( 21.6348, -170.388, -25.7936, 0.74 ) }
    dend_11 { pt3dadd( 21.7981, -170.838, -25.5813, 0.74 ) }
    dend_11 { pt3dadd( 22.2103, -171.733, -24.9775, 0.59 ) }
    dend_11 { pt3dadd( 22.7926, -172.741, -24.076, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.85495, -33.5148, -6.86087, 0.88 ) }
    dend_2 { pt3dadd( 11.8839, -33.486, -9.52479, 0.88 ) }
    dend_2 { pt3dadd( 13.0311, -33.4415, -10.1661, 0.88 ) }
    dend_2 { pt3dadd( 14.1726, -33.391, -10.6926, 1.03 ) }
    dend_2 { pt3dadd( 14.9418, -33.3555, -10.9837, 1.33 ) }
    dend_2 { pt3dadd( 15.648, -33.3282, -11.2197, 1.62 ) }
    dend_2 { pt3dadd( 16.666, -33.3042, -11.5311, 1.84 ) }
    dend_2 { pt3dadd( 17.5315, -33.2388, -11.6821, 1.47 ) }
    dend_2 { pt3dadd( 18.5681, -33.1691, -12.0011, 1.18 ) }
    dend_2 { pt3dadd( 19.3385, -33.0948, -12.5659, 0.81 ) }
    dend_2 { pt3dadd( 20.1537, -32.987, -13.4336, 0.81 ) }
    dend_2 { pt3dadd( 20.6676, -32.9298, -14.0654, 1.11 ) }
    dend_2 { pt3dadd( 21.7529, -32.8745, -15.545, 1.33 ) }
    dend_2 { pt3dadd( 22.8907, -32.8642, -17.1795, 1.77 ) }
    dend_2 { pt3dadd( 25.4773, -32.9512, -20.9644, 1.47 ) }
    dend_2 { pt3dadd( 26.3104, -33.0068, -22.147, 1.11 ) }
    dend_2 { pt3dadd( 27.1627, -33.076, -23.2732, 1.11 ) }
    dend_2 { pt3dadd( 28.3109, -33.1721, -24.5955, 0.81 ) }
    dend_2 { pt3dadd( 29.0102, -33.2385, -25.2359, 0.96 ) }
    dend_2 { pt3dadd( 30.1211, -33.3119, -25.9533, 0.88 ) }
    dend_2 { pt3dadd( 31.0347, -33.2499, -26.3896, 0.74 ) }
    dend_2 { pt3dadd( 31.7395, -33.0654, -26.7608, 0.59 ) }
    dend_2 { pt3dadd( 32.6554, -32.6442, -27.3579, 1.03 ) }
    dend_2 { pt3dadd( 33.3395, -32.2453, -27.833, 1.55 ) }
    dend_2 { pt3dadd( 33.9695, -31.8528, -28.2804, 1.69 ) }
    dend_2 { pt3dadd( 35.8545, -30.6653, -29.6803, 1.69 ) }
    dend_2 { pt3dadd( 36.4369, -30.3145, -30.1336, 1.69 ) }
    dend_2 { pt3dadd( 37.8956, -29.5074, -31.2582, 0.88 ) }
    dend_2 { pt3dadd( 38.7213, -29.1213, -31.8512, 0.81 ) }
    dend_2 { pt3dadd( 39.7064, -28.767, -32.4564, 1.11 ) }
    dend_2 { pt3dadd( 40.9861, -28.4583, -33.109, 1.18 ) }
    dend_2 { pt3dadd( 42.1433, -28.3446, -33.5471, 0.59 ) }
    dend_2 { pt3dadd( 42.6587, -28.3615, -33.7192, 0.59 ) }
    dend_2 { pt3dadd( 43.9048, -28.6058, -34.0299, 0.96 ) }
    dend_2 { pt3dadd( 44.7915, -28.9255, -34.232, 1.18 ) }
    dend_2 { pt3dadd( 45.5408, -29.3112, -34.3637, 1.18 ) }
    dend_2 { pt3dadd( 46.2994, -29.7815, -34.433, 1.4 ) }
    dend_2 { pt3dadd( 47.1688, -30.369, -34.4717, 1.4 ) }
    dend_2 { pt3dadd( 47.976, -30.8957, -34.4932, 1.11 ) }
    dend_2 { pt3dadd( 48.5477, -31.2175, -34.4914, 1.11 ) }
    dend_2 { pt3dadd( 49.2555, -31.5063, -34.4754, 1.03 ) }
    dend_2 { pt3dadd( 50.1861, -31.7549, -34.4358, 1.03 ) }
    dend_2 { pt3dadd( 50.9999, -31.8735, -34.3853, 1.03 ) }
    dend_2 { pt3dadd( 51.9403, -31.9229, -34.3109, 0.96 ) }
    dend_2 { pt3dadd( 53.2393, -31.8926, -34.2035, 0.88 ) }
    dend_2 { pt3dadd( 54.6531, -31.7858, -34.0505, 0.88 ) }
    dend_2 { pt3dadd( 55.5906, -31.668, -33.9284, 1.03 ) }
    dend_2 { pt3dadd( 56.328, -31.5532, -33.8415, 1.11 ) }
    dend_2 { pt3dadd( 56.935, -31.4553, -33.7947, 1.18 ) }
    dend_2 { pt3dadd( 57.4865, -31.3908, -33.8212, 1.18 ) }
    dend_2 { pt3dadd( 58.6015, -31.3694, -34.1042, 0.81 ) }
    dend_2 { pt3dadd( 59.402, -31.4625, -34.4766, 0.74 ) }
    dend_2 { pt3dadd( 60.4493, -31.6837, -35.0944, 1.18 ) }
    dend_2 { pt3dadd( 61.2484, -31.8931, -35.6221, 1.4 ) }
    dend_2 { pt3dadd( 62.8751, -32.3524, -36.8002, 1.18 ) }
    dend_2 { pt3dadd( 64.1278, -32.6948, -37.7691, 0.88 ) }
    dend_2 { pt3dadd( 65.0658, -32.9133, -38.5564, 0.74 ) }
    dend_2 { pt3dadd( 66.0167, -33.0783, -39.3431, 0.74 ) }
    dend_2 { pt3dadd( 66.8856, -33.1441, -40.0075, 1.11 ) }
    dend_2 { pt3dadd( 67.8152, -33.1151, -40.6763, 1.4 ) }
    dend_2 { pt3dadd( 68.7413, -33.0326, -41.3068, 1.4 ) }
    dend_2 { pt3dadd( 70.0315, -32.9235, -42.2026, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 70.7897, -32.8911, -42.7622, 0.74 ) }
    dend_2 { pt3dadd( 71.7435, -32.9439, -43.5119, 0.66 ) }
    dend_2 { pt3dadd( 72.8783, -33.1679, -44.4518, 0.81 ) }
    dend_2 { pt3dadd( 74.0177, -33.5664, -45.3552, 0.74 ) }
    dend_2 { pt3dadd( 74.9651, -33.9964, -46.0949, 1.25 ) }
    dend_2 { pt3dadd( 75.4893, -34.2577, -46.4789, 1.69 ) }
    dend_2 { pt3dadd( 76.1721, -34.5718, -46.9447, 1.69 ) }
    dend_2 { pt3dadd( 76.8813, -34.8091, -47.335, 1.4 ) }
    dend_2 { pt3dadd( 77.9785, -34.9691, -47.7704, 0.88 ) }
    dend_2 { pt3dadd( 79.5746, -34.8976, -48.2395, 0.81 ) }
    dend_2 { pt3dadd( 80.298, -34.801, -48.4125, 0.81 ) }
    dend_2 { pt3dadd( 81.3022, -34.6549, -48.5976, 0.81 ) }
    dend_2 { pt3dadd( 82.5847, -34.4763, -48.7485, 0.81 ) }
    dend_2 { pt3dadd( 83.3796, -34.3954, -48.7903, 0.81 ) }
    dend_2 { pt3dadd( 84.4937, -34.3659, -48.7928, 0.81 ) }
    dend_2 { pt3dadd( 85.2328, -34.4482, -48.7427, 0.96 ) }
    dend_2 { pt3dadd( 86.3613, -34.7622, -48.7023, 0.96 ) }
    dend_2 { pt3dadd( 87.1262, -35.0992, -48.7537, 1.18 ) }
    dend_2 { pt3dadd( 87.8108, -35.4807, -48.8938, 1.47 ) }
    dend_2 { pt3dadd( 88.5124, -35.9063, -49.0933, 1.47 ) }
    dend_2 { pt3dadd( 89.5382, -36.5329, -49.4287, 0.74 ) }
    dend_2 { pt3dadd( 90.7363, -37.2144, -49.8471, 0.74 ) }
    dend_2 { pt3dadd( 92.2126, -37.9517, -50.3964, 0.66 ) }
    dend_2 { pt3dadd( 93.5976, -38.5582, -50.9554, 0.74 ) }
    dend_2 { pt3dadd( 94.4657, -38.871, -51.3088, 0.81 ) }
    dend_2 { pt3dadd( 95.4635, -39.1334, -51.6963, 0.81 ) }
    dend_2 { pt3dadd( 95.9717, -39.2106, -51.8746, 1.11 ) }
    dend_2 { pt3dadd( 97.1942, -39.2546, -52.2687, 1.25 ) }
    dend_2 { pt3dadd( 97.7377, -39.2141, -52.4755, 1.62 ) }
    dend_2 { pt3dadd( 98.3456, -39.1112, -52.8003, 1.62 ) }
    dend_2 { pt3dadd( 99.5426, -38.8553, -53.5703, 0.59 ) }
    dend_2 { pt3dadd( 100.293, -38.6853, -54.1105, 0.59 ) }
    dend_2 { pt3dadd( 101.422, -38.4428, -54.9514, 0.88 ) }
    dend_2 { pt3dadd( 102.938, -38.1507, -56.0903, 1.4 ) }
    dend_2 { pt3dadd( 104.464, -37.9121, -57.196, 0.74 ) }
    dend_2 { pt3dadd( 105.362, -37.8113, -57.8161, 0.59 ) }
    dend_2 { pt3dadd( 106.121, -37.7692, -58.2856, 0.81 ) }
    dend_2 { pt3dadd( 106.786, -37.7829, -58.5881, 0.81 ) }
    dend_2 { pt3dadd( 107.411, -37.8404, -58.7323, 0.96 ) }
    dend_2 { pt3dadd( 108.044, -37.9068, -58.7725, 0.96 ) }
    dend_2 { pt3dadd( 108.796, -37.9703, -58.7756, 0.59 ) }
    dend_2 { pt3dadd( 109.972, -38.0138, -58.7992, 0.59 ) }
    dend_2 { pt3dadd( 111.111, -37.9948, -58.8231, 0.66 ) }
    dend_2 { pt3dadd( 111.778, -37.947, -58.8934, 1.03 ) }
    dend_2 { pt3dadd( 112.875, -37.8319, -59.0732, 1.03 ) }
    dend_2 { pt3dadd( 113.986, -37.6352, -59.5305, 0.59 ) }
    dend_2 { pt3dadd( 114.55, -37.4914, -59.8695, 0.59 ) }
    dend_2 { pt3dadd( 115.299, -37.268, -60.415, 0.59 ) }
    dend_2 { pt3dadd( 116.443, -36.9551, -61.3271, 1.11 ) }
    dend_2 { pt3dadd( 116.955, -36.8488, -61.7416, 1.33 ) }
    dend_2 { pt3dadd( 119.821, -36.4162, -63.9601, 1.03 ) }
    dend_2 { pt3dadd( 120.335, -36.352, -64.3231, 1.4 ) }
    dend_2 { pt3dadd( 121.347, -36.2389, -64.953, 0.81 ) }
    dend_2 { pt3dadd( 122.363, -36.1302, -65.4847, 0.74 ) }
    dend_2 { pt3dadd( 123.639, -35.9961, -65.9916, 0.59 ) }
    dend_2 { pt3dadd( 124.481, -35.9061, -66.2395, 0.59 ) }
    dend_2 { pt3dadd( 125.817, -35.7703, -66.4394, 0.59 ) }
    dend_2 { pt3dadd( 127.4, -35.5456, -66.6706, 0.88 ) }
    dend_2 { pt3dadd( 127.963, -35.4117, -66.7447, 1.25 ) }
    dend_2 { pt3dadd( 128.465, -35.2421, -66.8037, 1.55 ) }
    dend_2 { pt3dadd( 129.209, -34.9404, -66.9008, 1.55 ) }
    dend_2 { pt3dadd( 129.815, -34.6856, -66.9957, 1.33 ) }
    dend_2 { pt3dadd( 130.564, -34.3685, -67.1188, 0.66 ) }
    dend_2 { pt3dadd( 131.521, -33.9819, -67.2728, 0.66 ) }
    dend_2 { pt3dadd( 132.164, -33.7476, -67.4348, 0.66 ) }
    dend_2 { pt3dadd( 133.35, -33.3328, -67.8697, 0.66 ) }
    dend_2 { pt3dadd( 133.891, -33.2064, -68.2707, 0.66 ) }
    dend_2 { pt3dadd( 134.227, -33.1574, -68.5926, 0.96 ) }
    dend_2 { pt3dadd( 134.628, -33.1253, -69.0202, 0.96 ) }
    dend_2 { pt3dadd( 135.835, -33.1139, -70.3424, 0.74 ) }
    dend_2 { pt3dadd( 136.557, -33.138, -71.1267, 1.62 ) }
    dend_2 { pt3dadd( 139.429, -33.2948, -74.1156, 0.66 ) }
    dend_2 { pt3dadd( 139.863, -33.3093, -74.5448, 0.66 ) }
    dend_2 { pt3dadd( 140.523, -33.3154, -75.1331, 1.11 ) }
    dend_2 { pt3dadd( 141.38, -33.3101, -75.8001, 1.11 ) }
    dend_2 { pt3dadd( 142.243, -33.2738, -76.3276, 0.52 ) }
    dend_2 { pt3dadd( 143.086, -33.1879, -76.6997, 0.52 ) }
    dend_2 { pt3dadd( 144.146, -32.9698, -77.0089, 1.25 ) }
    dend_2 { pt3dadd( 144.965, -32.7671, -77.253, 0.88 ) }
    dend_2 { pt3dadd( 146.527, -32.2925, -77.7189, 0.44 ) }
    dend_2 { pt3dadd( 147.419, -31.9676, -77.9693, 0.44 ) }
    dend_2 { pt3dadd( 148.741, -31.4223, -78.3164, 0.52 ) }
    dend_2 { pt3dadd( 149.615, -31.0267, -78.5321, 0.88 ) }
    dend_2 { pt3dadd( 150.048, -30.8208, -78.6294, 1.11 ) }
    dend_2 { pt3dadd( 150.423, -30.6198, -78.7564, 1.11 ) }
    dend_2 { pt3dadd( 150.731, -30.4303, -78.9092, 1.11 ) }
    dend_2 { pt3dadd( 151.768, -29.7407, -79.6666, 0.52 ) }
    dend_2 { pt3dadd( 152.195, -29.4613, -80.1056, 0.52 ) }
    dend_2 { pt3dadd( 152.798, -29.087, -80.8076, 0.81 ) }
    dend_2 { pt3dadd( 154.218, -28.2732, -82.504, 0.81 ) }
    dend_2 { pt3dadd( 154.887, -27.9098, -83.2843, 1.11 ) }
    dend_2 { pt3dadd( 155.179, -27.7633, -83.5891, 1.92 ) }
    dend_2 { pt3dadd( 156.852, -27.0215, -85.031, 0.59 ) }
    dend_2 { pt3dadd( 157.061, -26.9442, -85.1661, 0.59 ) }
    dend_2 { pt3dadd( 157.806, -26.7371, -85.4442, 0.88 ) }
    dend_2 { pt3dadd( 158.747, -26.5543, -85.5823, 0.44 ) }
    dend_2 { pt3dadd( 160.276, -26.327, -85.7219, 0.44 ) }
    dend_2 { pt3dadd( 161.478, -26.1865, -85.797, 0.74 ) }
    dend_2 { pt3dadd( 162.159, -26.1362, -85.8621, 0.74 ) }
    dend_2 { pt3dadd( 163.189, -26.1227, -86.126, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 163.819, -26.1612, -86.4188, 0.52 ) }
    dend_2 { pt3dadd( 164.785, -26.2799, -87.0476, 0.59 ) }
    dend_2 { pt3dadd( 165.156, -26.3268, -87.3307, 0.59 ) }
    dend_2 { pt3dadd( 166.789, -26.4721, -88.6552, 0.59 ) }
    dend_2 { pt3dadd( 167.868, -26.5043, -89.5272, 0.81 ) }
    dend_2 { pt3dadd( 168.883, -26.4626, -90.3455, 1.4 ) }
    dend_2 { pt3dadd( 169.42, -26.3811, -90.7421, 1.55 ) }
    dend_2 { pt3dadd( 170.652, -26.0012, -91.4844, 0.44 ) }
    dend_2 { pt3dadd( 171.169, -25.7498, -91.7077, 0.88 ) }
    dend_2 { pt3dadd( 171.793, -25.3668, -91.8396, 0.88 ) }
    dend_2 { pt3dadd( 172.471, -24.9456, -91.9644, 0.59 ) }
    dend_2 { pt3dadd( 173.519, -24.3373, -92.1716, 0.59 ) }
    dend_2 { pt3dadd( 174.236, -23.9995, -92.4085, 0.81 ) }
    dend_2 { pt3dadd( 175.062, -23.7078, -92.7724, 0.81 ) }
    dend_2 { pt3dadd( 176.169, -23.3945, -93.3863, 0.52 ) }
    dend_2 { pt3dadd( 177.441, -23.0726, -94.2404, 0.74 ) }
    dend_2 { pt3dadd( 177.873, -22.96, -94.6618, 0.74 ) }
    dend_2 { pt3dadd( 178.849, -22.6228, -96.0331, 0.37 ) }
    dend_2 { pt3dadd( 179.265, -22.4125, -96.7949, 0.37 ) }
    dend_2 { pt3dadd( 179.825, -22.0129, -98.045, 0.37 ) }
    dend_2 { pt3dadd( 180.252, -21.5897, -99.1599, 0.59 ) }
    dend_2 { pt3dadd( 181.389, -20.2767, -102.215, 0.88 ) }
    dend_2 { pt3dadd( 181.926, -19.6466, -103.602, 0.52 ) }
    dend_2 { pt3dadd( 182.132, -19.4431, -104.09, 0.52 ) }
    dend_2 { pt3dadd( 182.619, -19.0946, -105.149, 0.52 ) }
    dend_2 { pt3dadd( 183.044, -18.8708, -105.921, 0.81 ) }
    dend_2 { pt3dadd( 183.626, -18.6322, -106.797, 0.59 ) }
    dend_2 { pt3dadd( 184.148, -18.4678, -107.454, 0.59 ) }
    dend_2 { pt3dadd( 185.902, -18.0495, -109.557, 1.18 ) }
    dend_2 { pt3dadd( 187.987, -17.6525, -112.197, 0.74 ) }
    dend_2 { pt3dadd( 188.494, -17.5766, -112.898, 0.74 ) }
    dend_2 { pt3dadd( 188.961, -17.5166, -113.609, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -56.2074, 117.266, -35.3113, 0.29 ) }
    dend_87 { pt3dadd( -57.1797, 117.215, -35.3363, 0.29 ) }
    dend_87 { pt3dadd( -57.9611, 117.277, -35.3886, 0.29 ) }
    dend_87 { pt3dadd( -58.3685, 117.399, -35.4896, 0.59 ) }
    dend_87 { pt3dadd( -58.8299, 117.63, -35.6566, 0.59 ) }
    dend_87 { pt3dadd( -59.2031, 117.865, -35.8033, 0.59 ) }
    dend_87 { pt3dadd( -59.5991, 118.151, -35.9554, 0.44 ) }
    dend_87 { pt3dadd( -59.8996, 118.477, -36.1044, 0.59 ) }
    dend_87 { pt3dadd( -60.4496, 119.127, -36.4592, 0.37 ) }
    dend_87 { pt3dadd( -60.7222, 119.437, -36.6533, 0.29 ) }
    dend_87 { pt3dadd( -61.0034, 119.72, -36.8386, 0.59 ) }
    dend_87 { pt3dadd( -61.3128, 120.008, -37.0282, 0.59 ) }
    dend_87 { pt3dadd( -61.9879, 120.616, -37.4281, 0.29 ) }
    dend_87 { pt3dadd( -62.6158, 121.198, -37.8247, 0.29 ) }
    dend_87 { pt3dadd( -62.9099, 121.476, -38.0347, 0.29 ) }
    dend_87 { pt3dadd( -63.4844, 122.003, -38.5228, 0.29 ) }
    dend_87 { pt3dadd( -63.8588, 122.327, -38.9005, 0.29 ) }
    dend_87 { pt3dadd( -64.262, 122.661, -39.3475, 0.52 ) }
    dend_87 { pt3dadd( -64.6317, 122.969, -39.7792, 0.66 ) }
    dend_87 { pt3dadd( -65.1765, 123.457, -40.4536, 0.44 ) }
    dend_87 { pt3dadd( -65.616, 123.849, -41.0546, 0.59 ) }
    dend_87 { pt3dadd( -66.1735, 124.291, -41.899, 0.96 ) }
    dend_87 { pt3dadd( -66.3951, 124.42, -42.2089, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -56.2074, 117.266, -35.3113, 0.66 ) }
    dend_86 { pt3dadd( -54.841, 117.301, -35.7908, 0.66 ) }
    dend_86 { pt3dadd( -53.7493, 117.33, -36.174, 0.29 ) }
    dend_86 { pt3dadd( -52.9567, 117.351, -36.4521, 0.44 ) }
    dend_86 { pt3dadd( -51.9798, 117.376, -36.795, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -73.3711, 129.647, -30.3216, 0.29 ) }
    dend_82 { pt3dadd( -74.1679, 130.356, -30.9875, 0.29 ) }
    dend_82 { pt3dadd( -75.1892, 131.169, -31.828, 0.59 ) }
    dend_82 { pt3dadd( -75.861, 131.706, -32.3927, 0.44 ) }
    dend_82 { pt3dadd( -76.831, 132.54, -33.2289, 0.88 ) }
    dend_82 { pt3dadd( -77.2668, 132.964, -33.6394, 1.03 ) }
    dend_82 { pt3dadd( -78.2486, 134.048, -34.6375, 0.52 ) }
    dend_82 { pt3dadd( -78.572, 134.443, -35.0035, 0.44 ) }
    dend_82 { pt3dadd( -79.1967, 135.305, -35.715, 0.66 ) }
    dend_82 { pt3dadd( -79.6647, 136.013, -36.2583, 0.88 ) }
    dend_82 { pt3dadd( -80.5343, 137.407, -37.2145, 0.59 ) }
    dend_82 { pt3dadd( -81.1031, 138.334, -37.7981, 0.74 ) }
    dend_82 { pt3dadd( -81.6743, 139.28, -38.3423, 0.74 ) }
    dend_82 { pt3dadd( -82.4736, 140.529, -39.0433, 0.37 ) }
    dend_82 { pt3dadd( -82.8445, 141.054, -39.3312, 0.37 ) }
    dend_82 { pt3dadd( -83.7193, 142.166, -39.9059, 0.66 ) }
    dend_82 { pt3dadd( -84.3277, 142.832, -40.2145, 0.66 ) }
    dend_82 { pt3dadd( -84.967, 143.427, -40.4625, 0.52 ) }
    dend_82 { pt3dadd( -85.8922, 144.16, -40.72, 0.88 ) }
    dend_82 { pt3dadd( -86.523, 144.591, -40.834, 0.88 ) }
    dend_82 { pt3dadd( -87.4469, 145.137, -40.9067, 0.52 ) }
    dend_82 { pt3dadd( -88.5527, 145.725, -40.9034, 0.52 ) }
    dend_82 { pt3dadd( -89.9165, 146.438, -40.8327, 0.88 ) }
    dend_82 { pt3dadd( -90.7925, 146.919, -40.7621, 0.88 ) }
    dend_82 { pt3dadd( -91.8752, 147.538, -40.645, 0.52 ) }
    dend_82 { pt3dadd( -92.7984, 148.084, -40.5362, 0.44 ) }
    dend_82 { pt3dadd( -93.8483, 148.718, -40.4165, 0.37 ) }
    dend_82 { pt3dadd( -94.8736, 149.392, -40.3019, 0.37 ) }
    dend_82 { pt3dadd( -95.8938, 150.128, -40.2054, 0.29 ) }
    dend_82 { pt3dadd( -97.5551, 151.417, -40.0891, 0.29 ) }
    dend_82 { pt3dadd( -98.3316, 152.036, -40.0463, 0.29 ) }
    dend_82 { pt3dadd( -99.2271, 152.731, -39.9971, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -73.3711, 129.647, -30.3216, 0.29 ) }
    dend_81 { pt3dadd( -74.37, 129.024, -29.2628, 0.29 ) }
    dend_81 { pt3dadd( -74.9136, 128.685, -28.6866, 0.29 ) }
    dend_81 { pt3dadd( -75.2988, 128.444, -28.2783, 0.22 ) }
    dend_81 { pt3dadd( -75.7902, 128.138, -27.7575, 0.22 ) }
    dend_81 { pt3dadd( -76.337, 127.797, -27.1779, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 164.18, 29.575, 78.4531, 0.29 ) }
    dend_75 { pt3dadd( 167.516, 37.2768, 88.9038, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 171.735, 43.6663, 100.001, 0.29 ) }
    dend_75 { pt3dadd( 177.377, 49.5313, 110.786, 0.29 ) }
    dend_75 { pt3dadd( 181.878, 53.4925, 122.986, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 164.18, 29.575, 78.4531, 0.29 ) }
    dend_72 { pt3dadd( 171.988, 27.7599, 80.9518, 0.29 ) }
    dend_72 { pt3dadd( 179.812, 27.3851, 84.0136, 0.29 ) }
    dend_72 { pt3dadd( 187.158, 28.2903, 87.9929, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 90.9433, 35.9634, -1.49919, 0.37 ) }
    dend_68 { pt3dadd( 91.3648, 36.5125, -0.878496, 0.37 ) }
    dend_68 { pt3dadd( 91.9608, 37.2914, 0.101615, 0.37 ) }
    dend_68 { pt3dadd( 92.3926, 37.8556, 0.811631, 0.22 ) }
    dend_68 { pt3dadd( 93.3003, 39.0419, 2.3044, 0.22 ) }
    dend_68 { pt3dadd( 93.9921, 39.9461, 3.44214, 0.66 ) }
    dend_68 { pt3dadd( 94.8253, 41.0349, 4.81234, 1.11 ) }
    dend_68 { pt3dadd( 95.0246, 41.2879, 5.18071, 1.11 ) }
    dend_68 { pt3dadd( 100.182, 49.01, 12.4187, 1.11 ) }
    dend_68 { pt3dadd( 105.881, 56.7861, 19.1932, 1.11 ) }
    dend_68 { pt3dadd( 112.493, 63.6661, 26.209, 1.11 ) }
    dend_68 { pt3dadd( 119.426, 69.4509, 33.961, 1.11 ) }
    dend_68 { pt3dadd( 126.96, 76.591, 39.7031, 1.11 ) }
    dend_68 { pt3dadd( 134.797, 83.3844, 45.5082, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 90.9433, 35.9634, -1.49919, 0.44 ) }
    dend_59 { pt3dadd( 91.7769, 36.1392, -1.57807, 0.44 ) }
    dend_59 { pt3dadd( 92.6684, 36.2874, -1.6754, 0.44 ) }
    dend_59 { pt3dadd( 93.6401, 36.3959, -1.73441, 0.74 ) }
    dend_59 { pt3dadd( 94.2365, 36.4439, -1.75506, 1.03 ) }
    dend_59 { pt3dadd( 94.7994, 36.4769, -1.76205, 1.03 ) }
    dend_59 { pt3dadd( 95.2403, 36.5062, -1.78127, 1.03 ) }
    dend_59 { pt3dadd( 95.9674, 36.5834, -1.87474, 0.66 ) }
    dend_59 { pt3dadd( 96.9449, 36.7647, -2.07974, 0.66 ) }
    dend_59 { pt3dadd( 97.278, 36.8786, -2.18498, 0.81 ) }
    dend_59 { pt3dadd( 97.7717, 37.132, -2.37321, 0.44 ) }
    dend_59 { pt3dadd( 98.7582, 37.7936, -2.7869, 0.44 ) }
    dend_59 { pt3dadd( 99.9207, 38.7153, -3.28352, 0.37 ) }
    dend_59 { pt3dadd( 100.323, 39.0774, -3.46963, 0.37 ) }
    dend_59 { pt3dadd( 100.939, 39.6642, -3.7699, 0.37 ) }
    dend_59 { pt3dadd( 101.686, 40.3773, -4.10067, 0.66 ) }
    dend_59 { pt3dadd( 102.131, 40.7932, -4.26339, 0.66 ) }
    dend_59 { pt3dadd( 102.781, 41.3378, -4.40896, 0.37 ) }
    dend_59 { pt3dadd( 103.183, 41.6254, -4.45912, 0.37 ) }
    dend_59 { pt3dadd( 103.696, 41.9766, -4.51689, 0.59 ) }
    dend_59 { pt3dadd( 104.149, 42.299, -4.57869, 0.59 ) }
    dend_59 { pt3dadd( 104.567, 42.647, -4.70824, 0.44 ) }
    dend_59 { pt3dadd( 105.256, 43.2094, -5.00087, 0.66 ) }
    dend_59 { pt3dadd( 105.38, 43.3035, -5.0618, 0.96 ) }
    dend_59 { pt3dadd( 105.855, 43.6051, -5.30296, 0.96 ) }
    dend_59 { pt3dadd( 106.549, 43.9632, -5.67766, 1.11 ) }
    dend_59 { pt3dadd( 108.161, 44.6357, -6.52368, 0.44 ) }
    dend_59 { pt3dadd( 109.075, 44.9536, -6.97276, 0.44 ) }
    dend_59 { pt3dadd( 109.797, 45.1712, -7.29428, 0.37 ) }
    dend_59 { pt3dadd( 110.687, 45.4447, -7.67948, 0.37 ) }
    dend_59 { pt3dadd( 111.234, 45.6167, -7.89397, 0.29 ) }
    dend_59 { pt3dadd( 112.0, 45.8993, -8.14809, 0.22 ) }
    dend_59 { pt3dadd( 112.52, 46.203, -8.29381, 0.59 ) }
    dend_59 { pt3dadd( 112.785, 46.4793, -8.37585, 0.59 ) }
    dend_59 { pt3dadd( 113.511, 47.4566, -8.71504, 0.29 ) }
    dend_59 { pt3dadd( 113.812, 47.8867, -8.87913, 0.37 ) }
    dend_59 { pt3dadd( 114.167, 48.3716, -9.08674, 0.52 ) }
    dend_59 { pt3dadd( 114.552, 48.8179, -9.3429, 0.74 ) }
    dend_59 { pt3dadd( 115.069, 49.385, -9.81838, 0.96 ) }
    dend_59 { pt3dadd( 115.937, 50.384, -10.8575, 0.29 ) }
    dend_59 { pt3dadd( 116.25, 50.8004, -11.3267, 0.52 ) }
    dend_59 { pt3dadd( 116.377, 51.0134, -11.5692, 0.81 ) }
    dend_59 { pt3dadd( 116.759, 51.8327, -12.4567, 1.11 ) }
    dend_59 { pt3dadd( 117.385, 53.5444, -14.2267, 0.81 ) }
    dend_59 { pt3dadd( 117.631, 54.4081, -15.0499, 0.96 ) }
    dend_59 { pt3dadd( 117.87, 55.4552, -15.946, 0.66 ) }
    dend_59 { pt3dadd( 118.051, 56.2773, -16.5965, 0.52 ) }
    dend_59 { pt3dadd( 118.264, 57.0767, -17.1566, 0.52 ) }
    dend_59 { pt3dadd( 118.383, 57.3831, -17.3209, 0.74 ) }
    dend_59 { pt3dadd( 118.79, 57.9004, -17.5157, 0.74 ) }
    dend_59 { pt3dadd( 119.08, 58.1418, -17.6064, 0.96 ) }
    dend_59 { pt3dadd( 119.541, 58.4217, -17.7493, 0.96 ) }
    dend_59 { pt3dadd( 120.274, 58.8608, -18.0597, 0.74 ) }
    dend_59 { pt3dadd( 120.977, 59.337, -18.4249, 0.44 ) }
    dend_59 { pt3dadd( 121.711, 60.0005, -18.9299, 0.44 ) }
    dend_59 { pt3dadd( 121.974, 60.3161, -19.1559, 0.96 ) }
    dend_59 { pt3dadd( 122.406, 61.0508, -19.6627, 1.18 ) }
    dend_59 { pt3dadd( 122.943, 62.3213, -20.5072, 0.66 ) }
    dend_59 { pt3dadd( 123.109, 62.8768, -20.8729, 0.66 ) }
    dend_59 { pt3dadd( 123.362, 64.028, -21.6424, 0.59 ) }
    dend_59 { pt3dadd( 123.454, 64.4774, -21.9218, 0.52 ) }
    dend_59 { pt3dadd( 123.745, 65.6866, -22.6224, 0.52 ) }
    dend_59 { pt3dadd( 123.835, 66.0299, -22.789, 0.96 ) }
    dend_59 { pt3dadd( 124.051, 66.7212, -23.072, 0.96 ) }
    dend_59 { pt3dadd( 124.493, 67.9943, -23.5027, 0.59 ) }
    dend_59 { pt3dadd( 124.905, 69.0884, -23.7642, 0.59 ) }
    dend_59 { pt3dadd( 125.176, 69.7894, -23.8925, 0.88 ) }
    dend_59 { pt3dadd( 125.592, 70.7868, -23.9957, 0.74 ) }
    dend_59 { pt3dadd( 125.978, 71.5787, -24.0644, 0.74 ) }
    dend_59 { pt3dadd( 126.458, 72.3601, -24.1082, 0.88 ) }
    dend_59 { pt3dadd( 126.771, 72.7399, -24.1471, 0.88 ) }
    dend_59 { pt3dadd( 127.354, 73.3013, -24.3099, 0.37 ) }
    dend_59 { pt3dadd( 127.963, 73.8072, -24.5391, 0.37 ) }
    dend_59 { pt3dadd( 128.916, 74.4951, -24.964, 0.37 ) }
    dend_59 { pt3dadd( 129.573, 74.9603, -25.3087, 0.37 ) }
    dend_59 { pt3dadd( 130.327, 75.5014, -25.7582, 0.37 ) }
    dend_59 { pt3dadd( 130.782, 75.844, -26.0294, 0.59 ) }
    dend_59 { pt3dadd( 131.349, 76.289, -26.3508, 0.74 ) }
    dend_59 { pt3dadd( 131.73, 76.6148, -26.5626, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 132.442, 77.31, -26.9636, 0.44 ) }
    dend_59 { pt3dadd( 132.825, 77.6799, -27.1676, 0.37 ) }
    dend_59 { pt3dadd( 133.98, 78.6153, -27.6767, 0.37 ) }
    dend_59 { pt3dadd( 134.54, 78.9805, -27.8989, 0.74 ) }
    dend_59 { pt3dadd( 134.841, 79.1363, -28.0116, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 113.617, 68.6058, 17.8894, 0.29 ) }
    dend_57 { pt3dadd( 118.992, 73.9426, 21.0677, 0.29 ) }
    dend_57 { pt3dadd( 124.444, 79.8746, 22.5812, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 113.617, 68.6058, 17.8894, 0.29 ) }
    dend_56 { pt3dadd( 117.017, 71.7051, 20.1331, 0.29 ) }
    dend_56 { pt3dadd( 120.642, 74.3128, 22.6825, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.0239, -147.879, 16.4847, 0.29 ) }
    dend_37 { pt3dadd( -18.4028, -155.192, 15.2712, 0.29 ) }
    dend_37 { pt3dadd( -16.9365, -162.875, 15.0479, 0.29 ) }
    dend_37 { pt3dadd( -15.6961, -170.476, 13.5973, 0.29 ) }
    dend_37 { pt3dadd( -15.5704, -178.272, 13.0415, 0.29 ) }
    dend_37 { pt3dadd( -16.1575, -186.044, 12.3898, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -21.0239, -147.879, 16.4847, 0.29 ) }
    dend_36 { pt3dadd( -23.9085, -156.505, 11.755, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.91662, -87.0125, 7.10445, 0.37 ) }
    dend_24 { pt3dadd( 0.551269, -88.4587, 6.00883, 0.37 ) }
    dend_24 { pt3dadd( -0.266897, -89.2201, 5.4795, 0.37 ) }
    dend_24 { pt3dadd( -1.06963, -89.878, 5.02563, 0.44 ) }
    dend_24 { pt3dadd( -2.0314, -90.5898, 4.55049, 0.74 ) }
    dend_24 { pt3dadd( -2.98839, -91.2423, 4.13828, 0.59 ) }
    dend_24 { pt3dadd( -3.9829, -91.8484, 3.77575, 0.59 ) }
    dend_24 { pt3dadd( -4.57629, -92.0913, 3.65855, 0.74 ) }
    dend_24 { pt3dadd( -5.55898, -92.351, 3.54996, 0.88 ) }
    dend_24 { pt3dadd( -6.17515, -92.449, 3.53462, 1.18 ) }
    dend_24 { pt3dadd( -6.79545, -92.4952, 3.55744, 0.59 ) }
    dend_24 { pt3dadd( -7.73823, -92.5159, 3.61652, 0.44 ) }
    dend_24 { pt3dadd( -8.67367, -92.5212, 3.67037, 0.52 ) }
    dend_24 { pt3dadd( -9.10755, -92.5391, 3.68359, 0.74 ) }
    dend_24 { pt3dadd( -9.84589, -92.6592, 3.70793, 0.74 ) }
    dend_24 { pt3dadd( -10.3774, -92.8403, 3.70031, 0.59 ) }
    dend_24 { pt3dadd( -10.9174, -93.1404, 3.67357, 0.59 ) }
    dend_24 { pt3dadd( -11.6165, -93.7025, 3.6241, 0.59 ) }
    dend_24 { pt3dadd( -12.3453, -94.4777, 3.57895, 0.44 ) }
    dend_24 { pt3dadd( -13.1588, -95.5095, 3.55195, 0.37 ) }
    dend_24 { pt3dadd( -13.6175, -96.2034, 3.55343, 1.03 ) }
    dend_24 { pt3dadd( -13.918, -96.729, 3.55676, 1.03 ) }
    dend_24 { pt3dadd( -14.1533, -97.2122, 3.56194, 0.96 ) }
    dend_24 { pt3dadd( -14.5395, -98.2154, 3.58457, 0.66 ) }
    dend_24 { pt3dadd( -14.8236, -99.1194, 3.6056, 0.66 ) }
    dend_24 { pt3dadd( -15.0947, -100.153, 3.60582, 0.88 ) }
    dend_24 { pt3dadd( -15.2333, -100.789, 3.5987, 1.03 ) }
    dend_24 { pt3dadd( -15.3906, -101.693, 3.56612, 0.88 ) }
    dend_24 { pt3dadd( -15.5525, -102.857, 3.49208, 0.52 ) }
    dend_24 { pt3dadd( -15.6537, -103.767, 3.40821, 0.52 ) }
    dend_24 { pt3dadd( -15.7226, -104.459, 3.3236, 0.96 ) }
    dend_24 { pt3dadd( -15.7728, -104.911, 3.25924, 0.96 ) }
    dend_24 { pt3dadd( -15.9486, -106.021, 3.07994, 0.59 ) }
    dend_24 { pt3dadd( -16.1488, -106.903, 2.92644, 0.66 ) }
    dend_24 { pt3dadd( -16.3628, -107.561, 2.80432, 0.81 ) }
    dend_24 { pt3dadd( -16.6851, -108.362, 2.6399, 0.81 ) }
    dend_24 { pt3dadd( -16.9025, -108.807, 2.53865, 0.81 ) }
    dend_24 { pt3dadd( -17.334, -109.621, 2.28869, 0.44 ) }
    dend_24 { pt3dadd( -17.5647, -110.047, 2.12623, 0.81 ) }
    dend_24 { pt3dadd( -17.8692, -110.663, 1.8461, 0.81 ) }
    dend_24 { pt3dadd( -18.2282, -111.546, 1.40681, 0.52 ) }
    dend_24 { pt3dadd( -18.4308, -112.264, 1.02629, 0.52 ) }
    dend_24 { pt3dadd( -18.6493, -113.58, 0.306953, 0.74 ) }
    dend_24 { pt3dadd( -18.7018, -114.223, -0.0424853, 1.11 ) }
    dend_24 { pt3dadd( -18.7387, -114.817, -0.340956, 1.11 ) }
    dend_24 { pt3dadd( -18.7912, -115.57, -0.672272, 0.96 ) }
    dend_24 { pt3dadd( -18.8903, -116.414, -0.984806, 0.59 ) }
    dend_24 { pt3dadd( -19.0936, -117.452, -1.29806, 0.44 ) }
    dend_24 { pt3dadd( -19.4731, -118.597, -1.54941, 0.44 ) }
    dend_24 { pt3dadd( -19.8577, -119.452, -1.70294, 0.44 ) }
    dend_24 { pt3dadd( -20.2754, -120.251, -1.80995, 0.74 ) }
    dend_24 { pt3dadd( -20.5888, -120.837, -1.87421, 0.74 ) }
    dend_24 { pt3dadd( -20.8893, -121.404, -1.91696, 0.74 ) }
    dend_24 { pt3dadd( -21.4091, -122.416, -1.96084, 0.66 ) }
    dend_24 { pt3dadd( -21.7783, -123.171, -1.97416, 0.44 ) }
    dend_24 { pt3dadd( -22.2433, -124.146, -1.98325, 0.44 ) }
    dend_24 { pt3dadd( -22.9576, -125.503, -1.94511, 0.44 ) }
    dend_24 { pt3dadd( -23.3539, -126.13, -1.88772, 0.88 ) }
    dend_24 { pt3dadd( -23.8085, -126.711, -1.78482, 1.18 ) }
    dend_24 { pt3dadd( -24.1572, -127.084, -1.67769, 1.18 ) }
    dend_24 { pt3dadd( -24.5926, -127.487, -1.52668, 1.03 ) }
    dend_24 { pt3dadd( -25.8319, -128.464, -1.08574, 0.66 ) }
    dend_24 { pt3dadd( -26.9711, -129.24, -0.664244, 0.66 ) }
    dend_24 { pt3dadd( -27.938, -129.875, -0.302896, 1.25 ) }
    dend_24 { pt3dadd( -28.451, -130.216, -0.108661, 1.55 ) }
    dend_24 { pt3dadd( -29.0708, -130.637, 0.126098, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.91662, -87.0125, 7.10445, 0.74 ) }
    dend_19 { pt3dadd( 1.21272, -88.2471, 6.28146, 0.74 ) }
    dend_19 { pt3dadd( 0.385328, -89.6639, 5.31792, 0.74 ) }
    dend_19 { pt3dadd( -0.0455398, -90.5085, 4.83846, 0.74 ) }
    dend_19 { pt3dadd( -0.456455, -91.4525, 4.37751, 0.81 ) }
    dend_19 { pt3dadd( -1.21202, -93.6134, 3.51489, 0.52 ) }
    dend_19 { pt3dadd( -1.66692, -95.3307, 2.95404, 0.74 ) }
    dend_19 { pt3dadd( -1.81893, -96.2426, 2.73329, 0.74 ) }
    dend_19 { pt3dadd( -1.63823, -98.2531, 2.61086, 0.74 ) }
    dend_19 { pt3dadd( -1.2447, -99.2445, 2.69757, 0.81 ) }
    dend_19 { pt3dadd( -0.444658, -100.438, 2.962, 0.66 ) }
    dend_19 { pt3dadd( 0.0578018, -101.025, 3.14935, 1.11 ) }
    dend_19 { pt3dadd( 0.581607, -101.596, 3.31501, 1.11 ) }
    dend_19 { pt3dadd( 1.24113, -102.326, 3.43963, 0.81 ) }
    dend_19 { pt3dadd( 2.05532, -103.32, 3.43527, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 2.77789, -104.292, 3.36605, 0.96 ) }
    dend_19 { pt3dadd( 3.41118, -105.199, 3.27511, 0.88 ) }
    dend_19 { pt3dadd( 4.16419, -106.314, 3.1752, 0.96 ) }
    dend_19 { pt3dadd( 4.68197, -107.145, 3.08793, 1.11 ) }
    dend_19 { pt3dadd( 5.24291, -108.183, 2.9367, 1.11 ) }
    dend_19 { pt3dadd( 5.68531, -109.159, 2.75682, 0.74 ) }
    dend_19 { pt3dadd( 6.23018, -110.683, 2.44576, 0.66 ) }
    dend_19 { pt3dadd( 6.458, -111.48, 2.27789, 0.66 ) }
    dend_19 { pt3dadd( 6.84232, -113.328, 1.92016, 0.66 ) }
    dend_19 { pt3dadd( 7.0642, -115.27, 1.5806, 0.59 ) }
    dend_19 { pt3dadd( 7.08568, -116.396, 1.38975, 0.96 ) }
    dend_19 { pt3dadd( 6.99377, -117.799, 1.15563, 1.18 ) }
    dend_19 { pt3dadd( 6.8444, -118.845, 1.00181, 1.03 ) }
    dend_19 { pt3dadd( 6.6218, -120.074, 0.849069, 0.88 ) }
    dend_19 { pt3dadd( 6.3415, -121.667, 0.713195, 0.74 ) }
    dend_19 { pt3dadd( 6.1715, -123.049, 0.71995, 0.59 ) }
    dend_19 { pt3dadd( 6.0696, -124.216, 0.80801, 0.59 ) }
    dend_19 { pt3dadd( 5.9933, -125.182, 0.96561, 1.4 ) }
    dend_19 { pt3dadd( 5.91684, -125.893, 1.14635, 1.4 ) }
    dend_19 { pt3dadd( 5.72671, -127.706, 1.77911, 0.88 ) }
    dend_19 { pt3dadd( 5.56764, -129.829, 2.79199, 0.66 ) }
    dend_19 { pt3dadd( 5.50521, -130.717, 3.28997, 0.88 ) }
    dend_19 { pt3dadd( 5.41906, -131.843, 3.96446, 0.88 ) }
    dend_19 { pt3dadd( 5.25213, -133.598, 5.02756, 0.59 ) }
    dend_19 { pt3dadd( 5.09558, -134.718, 5.692, 0.81 ) }
    dend_19 { pt3dadd( 4.7402, -136.574, 6.72868, 0.81 ) }
    dend_19 { pt3dadd( 4.52699, -137.535, 7.16272, 1.11 ) }
    dend_19 { pt3dadd( 4.35785, -138.325, 7.46471, 1.11 ) }
    dend_19 { pt3dadd( 4.14025, -139.464, 7.78019, 0.52 ) }
    dend_19 { pt3dadd( 3.97683, -140.543, 7.99405, 0.74 ) }
    dend_19 { pt3dadd( 3.84307, -141.507, 8.1251, 1.03 ) }
    dend_19 { pt3dadd( 3.7783, -142.314, 8.17367, 1.25 ) }
    dend_19 { pt3dadd( 3.79816, -143.107, 8.26428, 1.33 ) }
    dend_19 { pt3dadd( 3.97472, -144.402, 8.58205, 1.03 ) }
    dend_19 { pt3dadd( 4.31828, -145.606, 9.01206, 0.74 ) }
    dend_19 { pt3dadd( 4.74215, -146.578, 9.43903, 0.44 ) }
    dend_19 { pt3dadd( 5.25681, -147.455, 9.88428, 0.29 ) }
    dend_19 { pt3dadd( 6.18338, -148.654, 10.5868, 0.29 ) }
    dend_19 { pt3dadd( 7.48066, -149.96, 11.4765, 0.29 ) }
    dend_19 { pt3dadd( 8.24849, -150.539, 11.9411, 0.29 ) }
    dend_19 { pt3dadd( 8.97713, -150.94, 12.2939, 0.88 ) }
    dend_19 { pt3dadd( 9.58688, -151.223, 12.5541, 0.88 ) }
    dend_19 { pt3dadd( 10.5985, -151.656, 12.9406, 0.52 ) }
    dend_19 { pt3dadd( 11.0617, -151.852, 13.0615, 0.52 ) }
    dend_19 { pt3dadd( 11.9007, -152.245, 13.2616, 0.52 ) }
    dend_19 { pt3dadd( 12.5484, -152.681, 13.4878, 0.52 ) }
    dend_19 { pt3dadd( 13.3939, -153.507, 13.7819, 0.52 ) }
    dend_19 { pt3dadd( 13.7933, -154.039, 13.8997, 0.88 ) }
    dend_19 { pt3dadd( 14.2165, -154.702, 13.9733, 0.88 ) }
    dend_19 { pt3dadd( 14.7334, -155.517, 13.9674, 1.11 ) }
    dend_19 { pt3dadd( 15.2754, -156.275, 13.9208, 0.66 ) }
    dend_19 { pt3dadd( 16.3341, -157.481, 13.7546, 0.66 ) }
    dend_19 { pt3dadd( 16.8515, -157.91, 13.6725, 0.66 ) }
    dend_19 { pt3dadd( 17.7726, -158.516, 13.5669, 0.66 ) }
    dend_19 { pt3dadd( 18.5235, -158.944, 13.512, 0.52 ) }
    dend_19 { pt3dadd( 19.8009, -159.671, 13.401, 0.66 ) }
    dend_19 { pt3dadd( 20.2135, -159.908, 13.4064, 0.66 ) }
    dend_19 { pt3dadd( 21.1245, -160.437, 13.5783, 0.44 ) }
    dend_19 { pt3dadd( 21.8855, -160.896, 13.8435, 0.44 ) }
    dend_19 { pt3dadd( 22.9495, -161.591, 14.3782, 0.52 ) }
    dend_19 { pt3dadd( 24.2241, -162.483, 15.2182, 0.66 ) }
    dend_19 { pt3dadd( 25.3192, -163.298, 16.0374, 0.44 ) }
    dend_19 { pt3dadd( 26.4959, -164.188, 16.9905, 0.81 ) }
    dend_19 { pt3dadd( 27.5923, -165.016, 17.8495, 0.52 ) }
    dend_19 { pt3dadd( 28.314, -165.56, 18.3671, 0.74 ) }
    dend_19 { pt3dadd( 29.1906, -166.226, 18.9095, 0.29 ) }
    dend_19 { pt3dadd( 29.6554, -166.594, 19.1099, 0.52 ) }
    dend_19 { pt3dadd( 30.3443, -167.177, 19.1924, 0.59 ) }
    dend_19 { pt3dadd( 31.6557, -168.349, 19.2103, 0.37 ) }
    dend_19 { pt3dadd( 32.6003, -169.209, 19.1248, 0.66 ) }
    dend_19 { pt3dadd( 33.137, -169.696, 19.0463, 1.03 ) }
    dend_19 { pt3dadd( 33.9956, -170.471, 18.8854, 1.03 ) }
    dend_19 { pt3dadd( 34.9458, -171.328, 18.7551, 0.74 ) }
    dend_19 { pt3dadd( 36.4867, -172.697, 18.7008, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 22.7926, -172.741, -24.076, 0.44 ) }
    dend_13 { pt3dadd( 22.7408, -173.784, -23.9759, 0.44 ) }
    dend_13 { pt3dadd( 22.6972, -174.513, -23.9052, 0.81 ) }
    dend_13 { pt3dadd( 22.6543, -175.072, -23.8517, 1.18 ) }
    dend_13 { pt3dadd( 22.5891, -175.821, -23.7835, 0.74 ) }
    dend_13 { pt3dadd( 22.5192, -176.6, -23.717, 0.44 ) }
    dend_13 { pt3dadd( 22.4557, -177.285, -23.6615, 0.96 ) }
    dend_13 { pt3dadd( 22.3867, -177.994, -23.6087, 0.96 ) }
    dend_13 { pt3dadd( 22.3165, -178.669, -23.5633, 1.18 ) }
    dend_13 { pt3dadd( 22.1712, -179.675, -23.4985, 0.74 ) }
    dend_13 { pt3dadd( 21.9754, -180.586, -23.467, 0.66 ) }
    dend_13 { pt3dadd( 21.758, -181.327, -23.4665, 0.66 ) }
    dend_13 { pt3dadd( 21.4301, -182.256, -23.5143, 0.66 ) }
    dend_13 { pt3dadd( 21.2476, -182.714, -23.5614, 1.03 ) }
    dend_13 { pt3dadd( 20.971, -183.35, -23.6571, 0.81 ) }
    dend_13 { pt3dadd( 20.54, -184.36, -23.8974, 0.52 ) }
    dend_13 { pt3dadd( 20.3338, -184.968, -24.0535, 0.44 ) }
    dend_13 { pt3dadd( 20.1746, -185.734, -24.2268, 0.37 ) }
    dend_13 { pt3dadd( 20.1402, -186.172, -24.2992, 0.66 ) }
    dend_13 { pt3dadd( 20.1333, -186.654, -24.3376, 0.66 ) }
    dend_13 { pt3dadd( 20.1765, -187.916, -24.3915, 0.44 ) }
    dend_13 { pt3dadd( 20.224, -189.183, -24.3833, 0.44 ) }
    dend_13 { pt3dadd( 20.2193, -190.195, -24.3446, 0.66 ) }
    dend_13 { pt3dadd( 20.1537, -191.087, -24.2868, 0.81 ) }
    dend_13 { pt3dadd( 19.9922, -192.057, -24.2316, 0.96 ) }
    dend_13 { pt3dadd( 19.6816, -193.078, -24.1756, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 19.3332, -193.871, -24.135, 0.81 ) }
    dend_13 { pt3dadd( 18.9739, -194.569, -24.1433, 0.88 ) }
    dend_13 { pt3dadd( 18.6906, -195.112, -24.1791, 0.66 ) }
    dend_13 { pt3dadd( 18.2911, -195.878, -24.2572, 0.29 ) }
    dend_13 { pt3dadd( 17.7917, -196.859, -24.3714, 0.29 ) }
    dend_13 { pt3dadd( 17.5018, -197.427, -24.4263, 0.52 ) }
    dend_13 { pt3dadd( 17.0479, -198.309, -24.5207, 0.52 ) }
    dend_13 { pt3dadd( 16.6692, -199.033, -24.5952, 0.37 ) }
    dend_13 { pt3dadd( 16.3085, -199.685, -24.6554, 0.29 ) }
    dend_13 { pt3dadd( 15.9524, -200.253, -24.6879, 0.29 ) }
    dend_13 { pt3dadd( 15.793, -200.46, -24.7019, 0.88 ) }
    dend_13 { pt3dadd( 15.4099, -200.808, -24.7336, 1.11 ) }
    dend_13 { pt3dadd( 14.925, -201.113, -24.763, 0.44 ) }
    dend_13 { pt3dadd( 14.3031, -201.412, -24.7921, 0.37 ) }
    dend_13 { pt3dadd( 13.6973, -201.653, -24.8272, 0.59 ) }
    dend_13 { pt3dadd( 13.1508, -201.839, -24.8682, 0.74 ) }
    dend_13 { pt3dadd( 12.4286, -202.066, -24.9308, 0.44 ) }
    dend_13 { pt3dadd( 11.8016, -202.265, -24.9822, 0.37 ) }
    dend_13 { pt3dadd( 11.3872, -202.412, -25.011, 0.88 ) }
    dend_13 { pt3dadd( 10.9149, -202.615, -25.0308, 1.11 ) }
    dend_13 { pt3dadd( 10.5797, -202.79, -25.0296, 1.11 ) }
    dend_13 { pt3dadd( 10.239, -202.976, -25.0094, 1.11 ) }
    dend_13 { pt3dadd( 9.40128, -203.457, -24.9318, 0.29 ) }
    dend_13 { pt3dadd( 8.85023, -203.787, -24.8781, 0.59 ) }
    dend_13 { pt3dadd( 8.48558, -204.012, -24.8394, 0.59 ) }
    dend_13 { pt3dadd( 7.5961, -204.607, -24.7303, 0.29 ) }
    dend_13 { pt3dadd( 7.05891, -205.009, -24.651, 0.29 ) }
    dend_13 { pt3dadd( 6.64248, -205.362, -24.5825, 0.52 ) }
    dend_13 { pt3dadd( 6.15993, -205.816, -24.4993, 0.52 ) }
    dend_13 { pt3dadd( 5.90602, -206.068, -24.454, 0.81 ) }
    dend_13 { pt3dadd( 5.48112, -206.563, -24.3764, 0.81 ) }
    dend_13 { pt3dadd( 5.06987, -207.189, -24.2971, 0.29 ) }
    dend_13 { pt3dadd( 4.6064, -208.032, -24.1974, 0.29 ) }
    dend_13 { pt3dadd( 4.35544, -208.524, -24.1342, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 22.7926, -172.741, -24.076, 0.22 ) }
    dend_12 { pt3dadd( 23.4116, -173.027, -24.33, 0.22 ) }
    dend_12 { pt3dadd( 24.0642, -173.328, -24.5978, 0.22 ) }
    dend_12 { pt3dadd( 24.8522, -173.692, -24.9212, 0.22 ) }
    dend_12 { pt3dadd( 25.3945, -173.943, -25.1437, 0.22 ) }
    dend_12 { pt3dadd( 25.97, -174.209, -25.3799, 0.22 ) }
    dend_12 { pt3dadd( 26.5621, -174.483, -25.6229, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 188.961, -17.5166, -113.609, 0.74 ) }
    dend_10 { pt3dadd( 191.245, -18.9495, -114.704, 0.74 ) }
    dend_10 { pt3dadd( 191.858, -19.4212, -114.906, 0.44 ) }
    dend_10 { pt3dadd( 192.307, -19.7643, -115.007, 0.74 ) }
    dend_10 { pt3dadd( 193.019, -20.2617, -115.111, 0.52 ) }
    dend_10 { pt3dadd( 193.985, -20.8597, -115.184, 0.52 ) }
    dend_10 { pt3dadd( 195.033, -21.4235, -115.251, 0.52 ) }
    dend_10 { pt3dadd( 195.815, -21.8064, -115.178, 0.52 ) }
    dend_10 { pt3dadd( 196.632, -22.1357, -115.107, 0.52 ) }
    dend_10 { pt3dadd( 197.68, -22.4205, -115.08, 0.52 ) }
    dend_10 { pt3dadd( 198.564, -22.5313, -115.102, 0.74 ) }
    dend_10 { pt3dadd( 199.492, -22.5292, -115.173, 1.03 ) }
    dend_10 { pt3dadd( 199.837, -22.5013, -115.215, 1.4 ) }
    dend_10 { pt3dadd( 200.18, -22.4629, -115.269, 1.4 ) }
    dend_10 { pt3dadd( 201.558, -22.3163, -115.539, 0.44 ) }
    dend_10 { pt3dadd( 202.082, -22.2776, -115.598, 0.74 ) }
    dend_10 { pt3dadd( 202.858, -22.2585, -115.581, 0.74 ) }
    dend_10 { pt3dadd( 203.387, -22.2662, -115.483, 0.96 ) }
    dend_10 { pt3dadd( 203.882, -22.2977, -115.307, 0.96 ) }
    dend_10 { pt3dadd( 204.526, -22.388, -114.987, 0.96 ) }
    dend_10 { pt3dadd( 206.031, -22.767, -113.999, 0.66 ) }
    dend_10 { pt3dadd( 206.644, -22.9934, -113.529, 0.81 ) }
    dend_10 { pt3dadd( 207.0, -23.1707, -113.21, 0.81 ) }
    dend_10 { pt3dadd( 207.854, -23.6653, -112.387, 0.52 ) }
    dend_10 { pt3dadd( 208.489, -24.0612, -111.77, 0.52 ) }
    dend_10 { pt3dadd( 209.191, -24.5112, -111.14, 0.52 ) }
    dend_10 { pt3dadd( 209.888, -24.9367, -110.635, 0.52 ) }
    dend_10 { pt3dadd( 210.793, -25.4513, -110.065, 0.44 ) }
    dend_10 { pt3dadd( 211.299, -25.698, -109.828, 0.96 ) }
    dend_10 { pt3dadd( 211.861, -25.9114, -109.723, 1.11 ) }
    dend_10 { pt3dadd( 212.681, -26.1571, -109.767, 0.44 ) }
    dend_10 { pt3dadd( 213.419, -26.3734, -109.992, 0.37 ) }
    dend_10 { pt3dadd( 213.951, -26.5577, -110.281, 0.37 ) }
    dend_10 { pt3dadd( 214.805, -26.8968, -110.925, 0.66 ) }
    dend_10 { pt3dadd( 215.751, -27.3052, -111.786, 0.74 ) }
    dend_10 { pt3dadd( 216.152, -27.4793, -112.195, 0.81 ) }
    dend_10 { pt3dadd( 216.736, -27.7176, -112.849, 0.81 ) }
    dend_10 { pt3dadd( 217.491, -27.9926, -113.732, 0.66 ) }
    dend_10 { pt3dadd( 218.188, -28.2049, -114.503, 0.66 ) }
    dend_10 { pt3dadd( 218.853, -28.3832, -115.173, 0.29 ) }
    dend_10 { pt3dadd( 219.317, -28.5022, -115.599, 0.59 ) }
    dend_10 { pt3dadd( 219.816, -28.6188, -116.021, 0.74 ) }
    dend_10 { pt3dadd( 220.29, -28.7174, -116.415, 0.44 ) }
    dend_10 { pt3dadd( 220.915, -28.8354, -116.905, 0.37 ) }
    dend_10 { pt3dadd( 221.558, -28.9717, -117.394, 0.37 ) }
    dend_10 { pt3dadd( 222.184, -29.1286, -117.849, 0.59 ) }
    dend_10 { pt3dadd( 222.679, -29.2765, -118.199, 0.59 ) }
    dend_10 { pt3dadd( 223.941, -29.7346, -119.248, 0.29 ) }
    dend_10 { pt3dadd( 224.743, -30.0971, -120.016, 0.29 ) }
    dend_10 { pt3dadd( 225.149, -30.3174, -120.461, 0.29 ) }
    dend_10 { pt3dadd( 225.498, -30.5283, -120.857, 0.74 ) }
    dend_10 { pt3dadd( 225.842, -30.7555, -121.265, 0.74 ) }
    dend_10 { pt3dadd( 227.189, -31.8417, -122.962, 0.37 ) }
    dend_10 { pt3dadd( 227.577, -32.2495, -123.498, 0.52 ) }
    dend_10 { pt3dadd( 227.864, -32.6203, -123.974, 0.81 ) }
    dend_10 { pt3dadd( 228.164, -33.0319, -124.54, 0.37 ) }
    dend_10 { pt3dadd( 228.433, -33.3866, -125.092, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 188.961, -17.5166, -113.609, 0.88 ) }
    dend_3 { pt3dadd( 189.975, -17.0142, -115.058, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 190.394, -16.9202, -115.724, 1.25 ) }
    dend_3 { pt3dadd( 190.778, -16.8978, -116.422, 1.25 ) }
    dend_3 { pt3dadd( 191.277, -16.8761, -117.425, 0.59 ) }
    dend_3 { pt3dadd( 192.611, -16.8181, -120.105, 0.59 ) }
    dend_3 { pt3dadd( 193.951, -16.7598, -122.798, 0.96 ) }
    dend_3 { pt3dadd( 194.649, -16.8187, -124.265, 1.11 ) }
    dend_3 { pt3dadd( 195.846, -17.0368, -126.987, 1.25 ) }
    dend_3 { pt3dadd( 196.552, -17.2457, -128.741, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -99.2271, 152.731, -39.9971, 0.22 ) }
    dend_84 { pt3dadd( -99.0317, 151.603, -39.1732, 0.22 ) }
    dend_84 { pt3dadd( -98.91, 150.901, -38.6598, 0.22 ) }
    dend_84 { pt3dadd( -98.6373, 149.327, -37.5104, 0.22 ) }
    dend_84 { pt3dadd( -98.4709, 148.367, -36.8091, 0.22 ) }
    dend_84 { pt3dadd( -98.328, 147.542, -36.2064, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -99.2271, 152.731, -39.9971, 0.22 ) }
    dend_83 { pt3dadd( -100.111, 153.5, -39.5093, 0.22 ) }
    dend_83 { pt3dadd( -100.888, 154.204, -39.0898, 0.22 ) }
    dend_83 { pt3dadd( -101.627, 154.874, -38.6906, 0.22 ) }
    dend_83 { pt3dadd( -102.334, 155.515, -38.3088, 0.22 ) }
    dend_83 { pt3dadd( -103.399, 156.48, -37.7341, 0.22 ) }
    dend_83 { pt3dadd( -103.942, 156.972, -37.4408, 0.37 ) }
    dend_83 { pt3dadd( -104.467, 157.521, -37.1291, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 181.878, 53.4925, 122.986, 0.29 ) }
    dend_77 { pt3dadd( 185.728, 59.0794, 130.021, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 181.878, 53.4925, 122.986, 0.29 ) }
    dend_76 { pt3dadd( 184.845, 59.1554, 129.06, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 187.158, 28.2903, 87.9929, 0.29 ) }
    dend_74 { pt3dadd( 189.594, 27.0943, 79.9082, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 187.158, 28.2903, 87.9929, 0.29 ) }
    dend_73 { pt3dadd( 173.889, 31.1581, 90.7293, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 134.841, 79.1363, -28.0116, 0.37 ) }
    dend_61 { pt3dadd( 134.06, 79.5989, -28.228, 0.37 ) }
    dend_61 { pt3dadd( 132.992, 80.2963, -28.826, 0.66 ) }
    dend_61 { pt3dadd( 132.326, 80.7951, -29.4777, 0.29 ) }
    dend_61 { pt3dadd( 131.769, 81.2424, -30.1179, 0.29 ) }
    dend_61 { pt3dadd( 131.09, 81.8164, -30.9274, 0.29 ) }
    dend_61 { pt3dadd( 129.632, 83.1058, -32.6616, 0.29 ) }
    dend_61 { pt3dadd( 128.964, 83.6775, -33.4988, 0.81 ) }
    dend_61 { pt3dadd( 127.008, 85.3394, -36.1152, 0.44 ) }
    dend_61 { pt3dadd( 126.354, 85.913, -37.0661, 0.96 ) }
    dend_61 { pt3dadd( 125.834, 86.4256, -37.8943, 1.18 ) }
    dend_61 { pt3dadd( 125.208, 87.1285, -38.988, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 134.841, 79.1363, -28.0116, 0.37 ) }
    dend_60 { pt3dadd( 136.29, 79.4519, -28.0981, 0.37 ) }
    dend_60 { pt3dadd( 137.964, 80.055, -28.1345, 0.29 ) }
    dend_60 { pt3dadd( 138.579, 80.3262, -28.1311, 0.66 ) }
    dend_60 { pt3dadd( 139.179, 80.626, -28.1027, 0.66 ) }
    dend_60 { pt3dadd( 139.921, 81.0773, -28.0553, 0.37 ) }
    dend_60 { pt3dadd( 140.949, 81.7499, -27.9948, 0.37 ) }
    dend_60 { pt3dadd( 142.05, 82.5915, -27.9107, 0.81 ) }
    dend_60 { pt3dadd( 142.504, 82.9644, -27.8346, 1.11 ) }
    dend_60 { pt3dadd( 143.139, 83.4971, -27.6849, 1.33 ) }
    dend_60 { pt3dadd( 144.417, 84.6374, -27.2734, 0.44 ) }
    dend_60 { pt3dadd( 145.164, 85.3463, -26.9296, 0.52 ) }
    dend_60 { pt3dadd( 146.129, 86.3381, -26.3427, 1.03 ) }
    dend_60 { pt3dadd( 147.148, 87.4969, -25.5706, 0.52 ) }
    dend_60 { pt3dadd( 147.623, 88.0712, -25.1373, 0.66 ) }
    dend_60 { pt3dadd( 148.097, 88.6982, -24.6092, 0.66 ) }
    dend_60 { pt3dadd( 148.754, 89.7011, -23.6685, 0.44 ) }
    dend_60 { pt3dadd( 149.025, 90.2789, -23.1728, 0.29 ) }
    dend_60 { pt3dadd( 149.31, 91.0301, -22.6167, 0.44 ) }
    dend_60 { pt3dadd( 149.673, 91.9378, -22.0895, 0.66 ) }
    dend_60 { pt3dadd( 150.036, 92.715, -21.7068, 0.37 ) }
    dend_60 { pt3dadd( 150.493, 93.6359, -21.3307, 0.37 ) }
    dend_60 { pt3dadd( 151.222, 95.1688, -20.8017, 0.29 ) }
    dend_60 { pt3dadd( 151.672, 96.1596, -20.4621, 0.29 ) }
    dend_60 { pt3dadd( 152.309, 97.8343, -19.8839, 0.29 ) }
    dend_60 { pt3dadd( 152.656, 98.968, -19.4325, 0.29 ) }
    dend_60 { pt3dadd( 152.841, 99.8324, -19.0191, 1.55 ) }
    dend_60 { pt3dadd( 152.912, 100.53, -18.6175, 1.18 ) }
    dend_60 { pt3dadd( 152.855, 101.229, -18.0606, 0.96 ) }
    dend_60 { pt3dadd( 152.493, 102.303, -16.9932, 0.52 ) }
    dend_60 { pt3dadd( 151.749, 103.476, -15.5857, 0.29 ) }
    dend_60 { pt3dadd( 151.118, 104.171, -14.653, 0.29 ) }
    dend_60 { pt3dadd( 150.775, 104.492, -14.2044, 0.29 ) }
    dend_60 { pt3dadd( 149.811, 105.377, -13.0213, 0.22 ) }
    dend_60 { pt3dadd( 149.514, 105.66, -12.6823, 0.66 ) }
    dend_60 { pt3dadd( 149.154, 106.034, -12.2875, 0.66 ) }
    dend_60 { pt3dadd( 148.554, 106.789, -11.6643, 0.37 ) }
    dend_60 { pt3dadd( 148.135, 107.585, -11.1251, 0.29 ) }
    dend_60 { pt3dadd( 147.868, 108.427, -10.6906, 0.22 ) }
    dend_60 { pt3dadd( 147.731, 109.191, -10.3089, 0.22 ) }
    dend_60 { pt3dadd( 147.645, 110.352, -9.65575, 0.22 ) }
    dend_60 { pt3dadd( 147.668, 110.871, -9.34145, 0.29 ) }
    dend_60 { pt3dadd( 147.787, 111.636, -8.83616, 0.29 ) }
    dend_60 { pt3dadd( 148.043, 112.768, -8.0437, 0.29 ) }
    dend_60 { pt3dadd( 148.482, 114.239, -7.02479, 0.29 ) }
    dend_60 { pt3dadd( 148.79, 115.147, -6.37838, 0.29 ) }
    dend_60 { pt3dadd( 149.09, 115.877, -5.85441, 0.29 ) }
    dend_60 { pt3dadd( 149.511, 116.824, -5.15059, 0.29 ) }
    dend_60 { pt3dadd( 150.222, 118.246, -4.06431, 0.29 ) }
    dend_60 { pt3dadd( 150.849, 119.343, -3.24182, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -16.1575, -186.044, 12.3898, 0.29 ) }
    dend_39 { pt3dadd( -15.6991, -192.935, 11.2487, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.1575, -186.044, 12.3898, 0.29 ) }
    dend_38 { pt3dadd( -9.3369, -182.973, 19.2214, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -29.0708, -130.637, 0.126098, 0.37 ) }
    dend_26 { pt3dadd( -29.7292, -132.023, -0.106876, 0.37 ) }
    dend_26 { pt3dadd( -30.0437, -132.685, -0.218175, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -29.0708, -130.637, 0.126098, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -31.6242, -130.538, -2.13712, 0.29 ) }
    dend_25 { pt3dadd( -32.3812, -130.507, -2.77591, 0.22 ) }
    dend_25 { pt3dadd( -33.4068, -130.537, -3.56968, 0.22 ) }
    dend_25 { pt3dadd( -34.0276, -130.603, -4.00189, 1.47 ) }
    dend_25 { pt3dadd( -34.488, -130.652, -4.32236, 1.69 ) }
    dend_25 { pt3dadd( -34.9278, -130.699, -4.62855, 1.69 ) }
    dend_25 { pt3dadd( -36.2289, -130.778, -5.18806, 0.96 ) }
    dend_25 { pt3dadd( -37.144, -130.932, -5.65239, 0.29 ) }
    dend_25 { pt3dadd( -37.9105, -131.192, -6.09782, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.4867, -172.697, 18.7008, 0.29 ) }
    dend_21 { pt3dadd( 36.4302, -173.719, 17.1349, 0.29 ) }
    dend_21 { pt3dadd( 36.381, -174.61, 15.7692, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 36.4867, -172.697, 18.7008, 0.29 ) }
    dend_20 { pt3dadd( 36.7395, -171.2, 17.9123, 0.29 ) }
    dend_20 { pt3dadd( 37.0384, -170.27, 16.9809, 0.29 ) }
    dend_20 { pt3dadd( 37.2927, -169.865, 16.1531, 0.29 ) }
    dend_20 { pt3dadd( 37.5394, -169.473, 15.3498, 0.52 ) }
    dend_20 { pt3dadd( 38.2371, -168.362, 13.0779, 0.44 ) }
    dend_20 { pt3dadd( 38.4713, -167.989, 12.3156, 0.29 ) }
    dend_20 { pt3dadd( 38.8587, -168.11, 11.0149, 0.29 ) }
    dend_20 { pt3dadd( 38.9973, -168.249, 10.5436, 0.29 ) }
    dend_20 { pt3dadd( 40.3785, -164.352, 3.61144, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.35544, -208.524, -24.1342, 0.22 ) }
    dend_15 { pt3dadd( 4.32548, -209.399, -23.9852, 0.22 ) }
    dend_15 { pt3dadd( 4.31514, -210.403, -23.757, 0.22 ) }
    dend_15 { pt3dadd( 4.33815, -211.707, -23.4562, 0.22 ) }
    dend_15 { pt3dadd( 4.37178, -212.777, -23.2101, 0.22 ) }
    dend_15 { pt3dadd( 4.44077, -214.154, -22.906, 0.22 ) }
    dend_15 { pt3dadd( 4.4955, -215.247, -22.6647, 0.22 ) }
    dend_15 { pt3dadd( 4.56393, -216.523, -22.3981, 0.22 ) }
    dend_15 { pt3dadd( 4.6377, -217.331, -22.2362, 0.37 ) }
    dend_15 { pt3dadd( 4.6801, -217.609, -22.1764, 0.37 ) }
    dend_15 { pt3dadd( 4.82847, -218.385, -21.9906, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.35544, -208.524, -24.1342, 1.55 ) }
    dend_14 { pt3dadd( 3.52433, -208.961, -24.3047, 1.55 ) }
    dend_14 { pt3dadd( 3.03922, -209.277, -24.4191, 1.55 ) }
    dend_14 { pt3dadd( 2.07816, -209.932, -24.6436, 0.29 ) }
    dend_14 { pt3dadd( 0.669576, -210.887, -24.9367, 0.44 ) }
    dend_14 { pt3dadd( 0.315205, -211.102, -25.0377, 0.44 ) }
    dend_14 { pt3dadd( -1.16654, -211.851, -25.5454, 0.29 ) }
    dend_14 { pt3dadd( -2.0945, -212.255, -25.9014, 0.29 ) }
    dend_14 { pt3dadd( -3.01813, -212.601, -26.2519, 0.29 ) }
    dend_14 { pt3dadd( -4.04599, -212.91, -26.6155, 0.29 ) }
    dend_14 { pt3dadd( -6.09666, -213.331, -27.2236, 0.29 ) }
    dend_14 { pt3dadd( -7.91658, -213.52, -27.6989, 0.29 ) }
    dend_14 { pt3dadd( -9.06901, -213.508, -27.9619, 0.22 ) }
    dend_14 { pt3dadd( -10.2289, -213.419, -28.1898, 0.22 ) }
    dend_14 { pt3dadd( -11.1366, -213.32, -28.3408, 0.22 ) }
    dend_14 { pt3dadd( -12.1339, -213.188, -28.4612, 0.22 ) }
    dend_14 { pt3dadd( -13.3841, -213.026, -28.4721, 0.22 ) }
    dend_14 { pt3dadd( -14.3211, -212.856, -28.4457, 0.22 ) }
    dend_14 { pt3dadd( -14.971, -212.684, -28.4484, 0.52 ) }
    dend_14 { pt3dadd( -15.5446, -212.485, -28.4739, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 196.552, -17.2457, -128.741, 0.81 ) }
    dend_9 { pt3dadd( 199.955, -17.0633, -130.392, 0.81 ) }
    dend_9 { pt3dadd( 202.552, -17.0389, -131.54, 0.88 ) }
    dend_9 { pt3dadd( 204.617, -17.122, -132.476, 0.37 ) }
    dend_9 { pt3dadd( 205.214, -17.1445, -132.742, 0.37 ) }
    dend_9 { pt3dadd( 206.52, -17.1939, -133.322, 0.66 ) }
    dend_9 { pt3dadd( 207.369, -17.226, -133.7, 0.74 ) }
    dend_9 { pt3dadd( 207.663, -17.242, -133.873, 0.74 ) }
    dend_9 { pt3dadd( 209.296, -17.4404, -134.5, 0.37 ) }
    dend_9 { pt3dadd( 210.111, -17.6033, -134.806, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 196.552, -17.2457, -128.741, 0.44 ) }
    dend_4 { pt3dadd( 198.043, -16.3913, -130.788, 0.44 ) }
    dend_4 { pt3dadd( 199.095, -15.7879, -132.233, 0.44 ) }
    dend_4 { pt3dadd( 199.677, -15.4545, -133.032, 0.44 ) }
    dend_4 { pt3dadd( 200.82, -14.7994, -134.601, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 125.208, 87.1285, -38.988, 0.96 ) }
    dend_65 { pt3dadd( 123.84, 88.242, -41.8573, 0.96 ) }
    dend_65 { pt3dadd( 122.262, 89.2885, -44.7143, 0.59 ) }
    dend_65 { pt3dadd( 121.877, 89.5433, -45.3941, 0.59 ) }
    dend_65 { pt3dadd( 121.527, 89.8006, -46.0395, 0.37 ) }
    dend_65 { pt3dadd( 120.765, 90.4528, -47.5267, 0.29 ) }
    dend_65 { pt3dadd( 120.288, 90.9005, -48.4784, 0.29 ) }
    dend_65 { pt3dadd( 119.965, 91.2507, -49.0621, 0.66 ) }
    dend_65 { pt3dadd( 119.426, 92.069, -50.086, 0.22 ) }
    dend_65 { pt3dadd( 119.151, 92.5706, -50.7208, 0.22 ) }
    dend_65 { pt3dadd( 118.81, 93.1949, -51.546, 0.88 ) }
    dend_65 { pt3dadd( 118.59, 93.5731, -52.0453, 0.88 ) }
    dend_65 { pt3dadd( 117.904, 94.5736, -53.4003, 0.37 ) }
    dend_65 { pt3dadd( 117.538, 94.98, -54.0537, 0.96 ) }
    dend_65 { pt3dadd( 117.148, 95.3239, -54.7282, 1.11 ) }
    dend_65 { pt3dadd( 116.413, 95.9192, -56.0509, 0.44 ) }
    dend_65 { pt3dadd( 115.993, 96.2756, -56.8718, 0.37 ) }
    dend_65 { pt3dadd( 115.685, 96.566, -57.5249, 0.52 ) }
    dend_65 { pt3dadd( 114.432, 97.8518, -60.3068, 0.37 ) }
    dend_65 { pt3dadd( 113.923, 98.5097, -61.626, 0.96 ) }
    dend_65 { pt3dadd( 113.57, 99.0725, -62.6344, 0.96 ) }
    dend_65 { pt3dadd( 113.237, 99.6665, -63.6546, 0.52 ) }
    dend_65 { pt3dadd( 113.003, 100.088, -64.4334, 1.33 ) }
    dend_65 { pt3dadd( 112.717, 100.567, -65.3896, 1.33 ) }
    dend_65 { pt3dadd( 111.429, 102.482, -69.3112, 0.52 ) }
    dend_65 { pt3dadd( 111.276, 102.692, -69.7535, 0.52 ) }
    dend_65 { pt3dadd( 110.933, 103.127, -70.7054, 0.52 ) }
    dend_65 { pt3dadd( 109.406, 104.865, -74.757, 0.44 ) }
    dend_65 { pt3dadd( 108.655, 105.641, -76.5897, 0.59 ) }
    dend_65 { pt3dadd( 108.173, 106.123, -77.657, 0.59 ) }
    dend_65 { pt3dadd( 107.651, 106.622, -78.6218, 0.88 ) }
    dend_65 { pt3dadd( 107.458, 106.814, -78.9347, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 107.067, 107.216, -79.4151, 1.47 ) }
    dend_65 { pt3dadd( 106.087, 108.238, -80.1458, 0.29 ) }
    dend_65 { pt3dadd( 105.174, 109.226, -80.708, 0.29 ) }
    dend_65 { pt3dadd( 104.801, 109.629, -80.9156, 0.29 ) }
    dend_65 { pt3dadd( 104.151, 110.333, -81.2318, 0.29 ) }
    dend_65 { pt3dadd( 103.74, 110.805, -81.4286, 0.29 ) }
    dend_65 { pt3dadd( 102.764, 111.98, -81.8769, 0.29 ) }
    dend_65 { pt3dadd( 102.378, 112.437, -82.0558, 0.29 ) }
    dend_65 { pt3dadd( 101.847, 112.973, -82.3042, 0.96 ) }
    dend_65 { pt3dadd( 101.495, 113.345, -82.4945, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 125.208, 87.1285, -38.988, 0.15 ) }
    dend_62 { pt3dadd( 126.062, 87.9049, -38.3634, 0.15 ) }
    dend_62 { pt3dadd( 126.53, 88.3302, -38.0211, 0.15 ) }
    dend_62 { pt3dadd( 126.905, 88.6721, -37.7461, 0.81 ) }
    dend_62 { pt3dadd( 127.232, 88.9688, -37.5073, 1.03 ) }
    dend_62 { pt3dadd( 127.662, 89.3599, -37.1927, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -30.0437, -132.685, -0.218175, 0.52 ) }
    dend_28 { pt3dadd( -30.4485, -133.369, -0.525631, 0.52 ) }
    dend_28 { pt3dadd( -30.9977, -134.478, -0.926287, 0.52 ) }
    dend_28 { pt3dadd( -31.6433, -135.892, -1.27127, 0.37 ) }
    dend_28 { pt3dadd( -31.9374, -136.544, -1.41668, 0.52 ) }
    dend_28 { pt3dadd( -32.3312, -137.42, -1.59688, 0.44 ) }
    dend_28 { pt3dadd( -32.7848, -138.392, -1.79446, 0.37 ) }
    dend_28 { pt3dadd( -33.2428, -139.38, -1.94512, 0.29 ) }
    dend_28 { pt3dadd( -33.7086, -140.423, -2.03171, 0.29 ) }
    dend_28 { pt3dadd( -34.269, -141.782, -2.11746, 1.03 ) }
    dend_28 { pt3dadd( -34.4317, -142.163, -2.14222, 1.18 ) }
    dend_28 { pt3dadd( -34.9425, -143.248, -2.21951, 0.88 ) }
    dend_28 { pt3dadd( -35.3167, -144.025, -2.2919, 0.44 ) }
    dend_28 { pt3dadd( -35.7621, -145.036, -2.43473, 0.37 ) }
    dend_28 { pt3dadd( -35.9616, -145.629, -2.56773, 0.59 ) }
    dend_28 { pt3dadd( -36.0811, -146.184, -2.72395, 0.44 ) }
    dend_28 { pt3dadd( -36.194, -147.313, -3.12334, 0.44 ) }
    dend_28 { pt3dadd( -36.1938, -148.114, -3.44964, 0.44 ) }
    dend_28 { pt3dadd( -36.1359, -149.34, -3.97239, 0.52 ) }
    dend_28 { pt3dadd( -36.0837, -150.481, -4.44269, 0.66 ) }
    dend_28 { pt3dadd( -36.0565, -151.426, -4.73909, 0.88 ) }
    dend_28 { pt3dadd( -36.0604, -152.087, -4.84702, 0.88 ) }
    dend_28 { pt3dadd( -36.1282, -153.101, -4.79917, 0.52 ) }
    dend_28 { pt3dadd( -36.3101, -153.98, -4.53913, 0.29 ) }
    dend_28 { pt3dadd( -36.6635, -155.031, -4.00378, 0.29 ) }
    dend_28 { pt3dadd( -37.2036, -156.225, -3.3214, 0.29 ) }
    dend_28 { pt3dadd( -37.6417, -157.011, -2.88918, 0.96 ) }
    dend_28 { pt3dadd( -37.9579, -157.535, -2.67303, 1.18 ) }
    dend_28 { pt3dadd( -38.2922, -158.115, -2.49957, 1.18 ) }
    dend_28 { pt3dadd( -38.8413, -159.205, -2.35815, 0.59 ) }
    dend_28 { pt3dadd( -39.2696, -160.353, -2.34032, 0.52 ) }
    dend_28 { pt3dadd( -39.5859, -161.471, -2.38018, 0.52 ) }
    dend_28 { pt3dadd( -39.9472, -162.916, -2.49421, 0.66 ) }
    dend_28 { pt3dadd( -40.1523, -163.874, -2.57967, 0.66 ) }
    dend_28 { pt3dadd( -40.3222, -164.906, -2.6757, 0.81 ) }
    dend_28 { pt3dadd( -40.4271, -166.403, -2.77329, 0.81 ) }
    dend_28 { pt3dadd( -40.3533, -167.485, -2.71221, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.0437, -132.685, -0.218175, 0.37 ) }
    dend_27 { pt3dadd( -30.1637, -132.609, 0.514325, 0.37 ) }
    dend_27 { pt3dadd( -30.366, -132.549, 1.46428, 0.37 ) }
    dend_27 { pt3dadd( -30.481, -132.521, 1.90871, 0.37 ) }
    dend_27 { pt3dadd( -30.7742, -132.448, 2.87533, 0.29 ) }
    dend_27 { pt3dadd( -30.9665, -132.389, 3.44145, 0.29 ) }
    dend_27 { pt3dadd( -31.1944, -132.32, 4.11262, 0.29 ) }
    dend_27 { pt3dadd( -31.4108, -132.268, 4.76226, 0.37 ) }
    dend_27 { pt3dadd( -31.548, -132.257, 5.06913, 0.37 ) }
    dend_27 { pt3dadd( -31.7113, -132.256, 5.35551, 0.29 ) }
    dend_27 { pt3dadd( -31.9378, -132.239, 5.63757, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 36.381, -174.61, 15.7692, 0.22 ) }
    dend_23 { pt3dadd( 35.5513, -175.693, 15.5219, 0.22 ) }
    dend_23 { pt3dadd( 34.3558, -177.254, 15.1654, 0.22 ) }
    dend_23 { pt3dadd( 33.6763, -178.141, 14.9628, 0.29 ) }
    dend_23 { pt3dadd( 33.3059, -178.625, 14.8524, 0.29 ) }
    dend_23 { pt3dadd( 32.3462, -179.878, 14.5663, 0.22 ) }
    dend_23 { pt3dadd( 31.7191, -180.697, 14.3793, 0.22 ) }
    dend_23 { pt3dadd( 26.8484, -191.078, 11.9623, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.381, -174.61, 15.7692, 0.37 ) }
    dend_22 { pt3dadd( 36.2116, -175.483, 16.1102, 0.37 ) }
    dend_22 { pt3dadd( 36.0114, -176.273, 16.2779, 0.96 ) }
    dend_22 { pt3dadd( 35.7178, -177.258, 16.336, 0.59 ) }
    dend_22 { pt3dadd( 35.4904, -178.007, 16.282, 0.59 ) }
    dend_22 { pt3dadd( 35.2492, -178.802, 16.2247, 0.22 ) }
    dend_22 { pt3dadd( 35.0195, -179.559, 16.1702, 0.22 ) }
    dend_22 { pt3dadd( 34.7187, -180.37, 16.0067, 0.22 ) }
    dend_22 { pt3dadd( 34.4489, -181.053, 15.747, 0.22 ) }
    dend_22 { pt3dadd( 34.1323, -181.755, 15.348, 0.22 ) }
    dend_22 { pt3dadd( 32.8453, -188.783, 15.9695, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 200.82, -14.7994, -134.601, 0.37 ) }
    dend_6 { pt3dadd( 203.602, -14.8396, -142.593, 0.37 ) }
    dend_6 { pt3dadd( 204.062, -14.8078, -143.953, 0.66 ) }
    dend_6 { pt3dadd( 204.393, -14.7317, -145.02, 0.66 ) }
    dend_6 { pt3dadd( 204.544, -14.6755, -145.532, 0.96 ) }
    dend_6 { pt3dadd( 204.925, -14.4521, -146.833, 1.11 ) }
    dend_6 { pt3dadd( 205.38, -14.1005, -148.334, 1.11 ) }
    dend_6 { pt3dadd( 206.041, -13.212, -150.052, 0.81 ) }
    dend_6 { pt3dadd( 206.561, -12.4036, -151.257, 1.4 ) }
    dend_6 { pt3dadd( 206.734, -12.1056, -151.608, 1.4 ) }
    dend_6 { pt3dadd( 207.41, -10.8684, -152.705, 0.37 ) }
    dend_6 { pt3dadd( 207.898, -9.93925, -153.259, 0.37 ) }
    dend_6 { pt3dadd( 208.512, -8.79064, -153.672, 0.37 ) }
    dend_6 { pt3dadd( 209.008, -7.85184, -153.845, 0.66 ) }
    dend_6 { pt3dadd( 209.391, -7.07242, -153.923, 0.66 ) }
    dend_6 { pt3dadd( 209.823, -5.94419, -154.045, 0.29 ) }
    dend_6 { pt3dadd( 210.044, -5.05797, -154.143, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 210.144, -4.40593, -154.234, 0.52 ) }
    dend_6 { pt3dadd( 210.272, -3.30542, -154.45, 0.29 ) }
    dend_6 { pt3dadd( 210.415, -2.16679, -154.727, 1.03 ) }
    dend_6 { pt3dadd( 210.684, -0.47092, -155.25, 0.66 ) }
    dend_6 { pt3dadd( 210.88, 0.604583, -155.625, 0.44 ) }
    dend_6 { pt3dadd( 210.958, 0.987726, -155.763, 0.66 ) }
    dend_6 { pt3dadd( 211.204, 2.16943, -156.21, 0.37 ) }
    dend_6 { pt3dadd( 211.345, 2.76521, -156.418, 0.52 ) }
    dend_6 { pt3dadd( 211.657, 3.91536, -156.755, 0.37 ) }
    dend_6 { pt3dadd( 211.909, 4.70406, -156.905, 0.37 ) }
    dend_6 { pt3dadd( 212.187, 5.54333, -157.054, 0.37 ) }
    dend_6 { pt3dadd( 212.439, 6.49113, -157.219, 0.37 ) }
    dend_6 { pt3dadd( 212.624, 7.41002, -157.362, 0.96 ) }
    dend_6 { pt3dadd( 212.702, 7.79669, -157.418, 0.96 ) }
    dend_6 { pt3dadd( 213.055, 9.34083, -157.603, 0.29 ) }
    dend_6 { pt3dadd( 213.372, 10.59, -157.763, 0.29 ) }
    dend_6 { pt3dadd( 213.692, 11.748, -157.923, 0.29 ) }
    dend_6 { pt3dadd( 213.97, 12.7165, -158.067, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 200.82, -14.7994, -134.601, 0.52 ) }
    dend_5 { pt3dadd( 199.39, -11.8396, -139.37, 0.52 ) }
    dend_5 { pt3dadd( 199.263, -11.5858, -139.745, 0.52 ) }
    dend_5 { pt3dadd( 198.618, -10.3618, -141.442, 0.37 ) }
    dend_5 { pt3dadd( 198.437, -10.0193, -141.917, 0.29 ) }
    dend_5 { pt3dadd( 197.891, -8.98297, -143.355, 0.29 ) }
    dend_5 { pt3dadd( 197.427, -8.10196, -144.576, 0.29 ) }
    dend_5 { pt3dadd( 196.906, -7.04832, -145.398, 0.29 ) }
    dend_5 { pt3dadd( 196.677, -6.60147, -145.766, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 101.495, 113.345, -82.4945, 0.29 ) }
    dend_67 { pt3dadd( 100.057, 115.678, -84.052, 0.29 ) }
    dend_67 { pt3dadd( 99.6209, 116.222, -84.6666, 0.29 ) }
    dend_67 { pt3dadd( 99.0213, 116.895, -85.6097, 0.29 ) }
    dend_67 { pt3dadd( 97.9589, 118.105, -87.3244, 0.29 ) }
    dend_67 { pt3dadd( 97.5544, 118.588, -87.9553, 0.44 ) }
    dend_67 { pt3dadd( 97.0052, 119.244, -88.812, 0.44 ) }
    dend_67 { pt3dadd( 95.3219, 121.026, -91.3984, 0.29 ) }
    dend_67 { pt3dadd( 94.5351, 121.821, -92.6885, 0.29 ) }
    dend_67 { pt3dadd( 94.0988, 122.268, -93.4793, 0.29 ) }
    dend_67 { pt3dadd( 93.443, 122.947, -94.6952, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 101.495, 113.345, -82.4945, 0.22 ) }
    dend_66 { pt3dadd( 100.855, 112.661, -82.1897, 0.22 ) }
    dend_66 { pt3dadd( 100.335, 112.145, -81.912, 0.22 ) }
    dend_66 { pt3dadd( 99.6994, 111.548, -81.5214, 1.4 ) }
    dend_66 { pt3dadd( 98.987, 110.878, -81.0832, 0.22 ) }
    dend_66 { pt3dadd( 98.1922, 110.131, -80.5942, 1.84 ) }
    dend_66 { pt3dadd( 97.496, 109.476, -80.166, 0.22 ) }
    dend_66 { pt3dadd( 96.9175, 108.935, -79.7284, 0.22 ) }
    dend_66 { pt3dadd( 96.388, 108.453, -79.2839, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 127.662, 89.3599, -37.1927, 0.74 ) }
    dend_64 { pt3dadd( 127.875, 89.4311, -36.6497, 0.74 ) }
    dend_64 { pt3dadd( 128.188, 89.5184, -35.7628, 0.22 ) }
    dend_64 { pt3dadd( 128.34, 89.5647, -35.2099, 0.22 ) }
    dend_64 { pt3dadd( 128.577, 89.6308, -34.0902, 0.22 ) }
    dend_64 { pt3dadd( 128.778, 89.6327, -33.0781, 1.33 ) }
    dend_64 { pt3dadd( 128.888, 89.6092, -32.5756, 1.33 ) }
    dend_64 { pt3dadd( 129.111, 89.4876, -31.5413, 0.22 ) }
    dend_64 { pt3dadd( 129.255, 89.3527, -30.7967, 0.22 ) }
    dend_64 { pt3dadd( 129.33, 89.2494, -30.3209, 0.22 ) }
    dend_64 { pt3dadd( 129.447, 89.0357, -29.2771, 0.22 ) }
    dend_64 { pt3dadd( 129.568, 88.8367, -28.502, 0.22 ) }
    dend_64 { pt3dadd( 129.695, 88.7136, -28.0114, 0.37 ) }
    dend_64 { pt3dadd( 129.879, 88.6035, -27.529, 0.37 ) }
    dend_64 { pt3dadd( 130.161, 88.4899, -27.0079, 0.37 ) }
    dend_64 { pt3dadd( 130.406, 88.4319, -26.6255, 0.15 ) }
    dend_64 { pt3dadd( 131.053, 88.3531, -25.5669, 0.22 ) }
    dend_64 { pt3dadd( 131.568, 88.3237, -24.6913, 0.22 ) }
    dend_64 { pt3dadd( 131.921, 88.2931, -24.0692, 0.22 ) }
    dend_64 { pt3dadd( 132.496, 88.2476, -22.9134, 0.22 ) }
    dend_64 { pt3dadd( 132.84, 88.1981, -22.0792, 0.22 ) }
    dend_64 { pt3dadd( 133.223, 88.1073, -21.0001, 0.22 ) }
    dend_64 { pt3dadd( 133.344, 88.0692, -20.5984, 0.74 ) }
    dend_64 { pt3dadd( 133.772, 87.8656, -18.9314, 0.29 ) }
    dend_64 { pt3dadd( 133.993, 87.7425, -17.9259, 0.29 ) }
    dend_64 { pt3dadd( 134.198, 87.6361, -16.9406, 0.29 ) }
    dend_64 { pt3dadd( 134.372, 87.5287, -16.2256, 0.29 ) }
    dend_64 { pt3dadd( 134.65, 87.3458, -15.3771, 0.52 ) }
    dend_64 { pt3dadd( 134.931, 87.1469, -14.6145, 0.37 ) }
    dend_64 { pt3dadd( 135.337, 86.8663, -13.6259, 0.29 ) }
    dend_64 { pt3dadd( 135.443, 86.7915, -13.3851, 0.37 ) }
    dend_64 { pt3dadd( 135.858, 86.4992, -12.4467, 0.37 ) }
    dend_64 { pt3dadd( 136.389, 86.093, -11.1882, 0.37 ) }
    dend_64 { pt3dadd( 136.784, 85.7547, -10.2105, 0.22 ) }
    dend_64 { pt3dadd( 137.011, 85.5526, -9.67752, 0.22 ) }
    dend_64 { pt3dadd( 137.253, 85.3304, -9.10412, 0.74 ) }
    dend_64 { pt3dadd( 137.378, 85.216, -8.7816, 0.88 ) }
    dend_64 { pt3dadd( 137.725, 84.9349, -7.75646, 0.59 ) }
    dend_64 { pt3dadd( 138.04, 84.718, -6.54119, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 127.662, 89.3599, -37.1927, 0.29 ) }
    dend_63 { pt3dadd( 128.526, 90.082, -37.733, 0.29 ) }
    dend_63 { pt3dadd( 129.205, 90.7893, -38.3959, 0.29 ) }
    dend_63 { pt3dadd( 129.83, 91.5108, -39.1377, 1.03 ) }
    dend_63 { pt3dadd( 130.113, 91.8583, -39.5073, 1.03 ) }
    dend_63 { pt3dadd( 130.815, 92.6646, -40.4461, 0.44 ) }
    dend_63 { pt3dadd( 131.358, 93.2357, -41.1586, 0.29 ) }
    dend_63 { pt3dadd( 132.055, 93.9354, -42.1705, 0.96 ) }
    dend_63 { pt3dadd( 132.29, 94.1505, -42.518, 0.96 ) }
    dend_63 { pt3dadd( 133.021, 94.7244, -43.4971, 0.22 ) }
    dend_63 { pt3dadd( 133.617, 95.1457, -44.1976, 0.22 ) }
    dend_63 { pt3dadd( 134.297, 95.5397, -44.8369, 0.22 ) }
    dend_63 { pt3dadd( 135.08, 95.9636, -45.4606, 0.22 ) }
    dend_63 { pt3dadd( 136.032, 96.4688, -46.1011, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 136.647, 96.8031, -46.4635, 0.52 ) }
    dend_63 { pt3dadd( 137.178, 97.1037, -46.7055, 0.29 ) }
    dend_63 { pt3dadd( 137.89, 97.5338, -46.9103, 1.03 ) }
    dend_63 { pt3dadd( 138.406, 97.822, -46.9435, 1.03 ) }
    dend_63 { pt3dadd( 138.913, 98.0979, -46.8519, 0.88 ) }
    dend_63 { pt3dadd( 139.455, 98.3625, -46.6824, 0.66 ) }
    dend_63 { pt3dadd( 140.159, 98.6811, -46.394, 0.37 ) }
    dend_63 { pt3dadd( 140.907, 98.9876, -46.012, 0.59 ) }
    dend_63 { pt3dadd( 141.822, 99.3317, -45.4555, 0.29 ) }
    dend_63 { pt3dadd( 142.641, 99.59, -44.9185, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -40.3533, -167.485, -2.71221, 0.74 ) }
    dend_30 { pt3dadd( -40.5336, -168.305, -2.28443, 0.74 ) }
    dend_30 { pt3dadd( -40.8841, -169.517, -1.55815, 0.66 ) }
    dend_30 { pt3dadd( -41.2069, -170.314, -0.997485, 0.52 ) }
    dend_30 { pt3dadd( -41.723, -171.28, -0.23263, 0.37 ) }
    dend_30 { pt3dadd( -42.0347, -171.808, 0.190452, 0.74 ) }
    dend_30 { pt3dadd( -42.2836, -172.258, 0.552789, 1.03 ) }
    dend_30 { pt3dadd( -42.6258, -172.854, 1.05143, 0.74 ) }
    dend_30 { pt3dadd( -43.1155, -173.715, 1.75858, 0.52 ) }
    dend_30 { pt3dadd( -43.5891, -174.673, 2.45887, 0.52 ) }
    dend_30 { pt3dadd( -43.8935, -175.442, 2.91049, 0.66 ) }
    dend_30 { pt3dadd( -44.2932, -176.779, 3.51079, 0.88 ) }
    dend_30 { pt3dadd( -44.4043, -177.255, 3.67207, 1.18 ) }
    dend_30 { pt3dadd( -44.5408, -178.021, 3.86532, 0.81 ) }
    dend_30 { pt3dadd( -44.6877, -179.108, 4.05424, 0.52 ) }
    dend_30 { pt3dadd( -44.8255, -180.024, 4.15386, 0.52 ) }
    dend_30 { pt3dadd( -45.0438, -181.11, 4.23494, 0.52 ) }
    dend_30 { pt3dadd( -45.1843, -181.626, 4.2539, 0.52 ) }
    dend_30 { pt3dadd( -45.4871, -182.64, 4.29277, 0.52 ) }
    dend_30 { pt3dadd( -45.8162, -183.642, 4.34298, 0.52 ) }
    dend_30 { pt3dadd( -46.1292, -184.484, 4.38249, 1.03 ) }
    dend_30 { pt3dadd( -46.3768, -185.096, 4.41929, 1.25 ) }
    dend_30 { pt3dadd( -46.7377, -185.856, 4.4892, 0.66 ) }
    dend_30 { pt3dadd( -47.1555, -186.595, 4.58226, 0.29 ) }
    dend_30 { pt3dadd( -47.7551, -187.318, 4.7622, 0.29 ) }
    dend_30 { pt3dadd( -48.1278, -187.218, 4.96699, 0.52 ) }
    dend_30 { pt3dadd( -49.0456, -186.552, 5.54015, 0.29 ) }
    dend_30 { pt3dadd( -49.7551, -185.925, 5.99015, 0.29 ) }
    dend_30 { pt3dadd( -50.4931, -185.15, 6.47105, 0.22 ) }
    dend_30 { pt3dadd( -50.6309, -184.983, 6.5607, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -40.3533, -167.485, -2.71221, 0.22 ) }
    dend_29 { pt3dadd( -40.9295, -169.37, -3.20257, 0.22 ) }
    dend_29 { pt3dadd( -41.1575, -170.124, -3.40852, 0.22 ) }
    dend_29 { pt3dadd( -41.5474, -171.628, -3.81051, 0.22 ) }
    dend_29 { pt3dadd( -41.9368, -173.335, -4.24208, 0.22 ) }
    dend_29 { pt3dadd( -42.2523, -174.718, -4.59182, 0.22 ) }
    dend_29 { pt3dadd( -42.8649, -177.402, -5.2707, 0.22 ) }
    dend_29 { pt3dadd( -43.1459, -178.554, -5.51802, 0.22 ) }
    dend_29 { pt3dadd( -43.6885, -180.826, -6.05032, 0.22 ) }
    dend_29 { pt3dadd( -43.9438, -182.092, -6.39149, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 213.97, 12.7165, -158.067, 0.29 ) }
    dend_8 { pt3dadd( 215.329, 11.7161, -158.463, 0.29 ) }
    dend_8 { pt3dadd( 216.111, 11.1406, -158.691, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 213.97, 12.7165, -158.067, 0.37 ) }
    dend_7 { pt3dadd( 214.199, 14.0569, -158.281, 0.37 ) }
    dend_7 { pt3dadd( 214.468, 15.6352, -158.532, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, axon_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, axon_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_78 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 5
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_88 nseg = 3
    dend_69 nseg = 7
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 7
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 3
    dend_11 nseg = 7
    dend_2 nseg = 11
    dend_75 nseg = 3
    dend_68 nseg = 5
    dend_59 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_ChC_a78ee53c37_0_0


