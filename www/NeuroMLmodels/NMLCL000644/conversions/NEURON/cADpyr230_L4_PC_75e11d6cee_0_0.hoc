// Cell: cADpyr230_L4_PC_75e11d6cee_0_0
/*
{
  "id" : "cADpyr230_L4_PC_75e11d6cee_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "7.22098, 2.72386, 3.88091, 2.87911", "6.5647, 2.4169, 3.51376, 4.97851", "5.90842, 2.10994, 3.1466, 7.50231", "5.25215, 1.80299, 2.77945, 8.67807", "4.59587, 1.49603, 2.4123, 9.84534", "3.93959, 1.18907, 2.04514, 11.0126", "3.28331, 0.882116, 1.67799, 11.7795", "2.62704, 0.575159, 1.31084, 12.3274", "1.97076, 0.268202, 0.943684, 12.8754", "1.31448, -0.0387556, 0.576531, 13.4174", "0.658205, -0.345713, 0.209378, 13.8883", "0.00192767, -0.65267, -0.157776, 14.0289", "-0.65435, -0.959627, -0.524929, 14.0532", "-1.31063, -1.26658, -0.892082, 14.0774", "-1.9669, -1.57354, -1.25924, 14.1016", "-2.62318, -1.8805, -1.62639, 13.7441", "-3.27946, -2.18746, -1.99354, 12.6408", "-3.93574, -2.49441, -2.3607, 11.3042", "-4.59201, -2.80137, -2.72785, 9.91926", "-5.24829, -3.10833, -3.095, 7.85947", "-5.90457, -3.41528, -3.46216, 4.30061" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-3.79698, 5.47391, -3.55744, 2.0", "-4.63396, 6.46586, -4.29917, 2.0", "-7.54087, 13.506, -3.91271, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999863085758
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-3.61406, 2.53596, -5.88276, 2.0", "-6.58257, 4.13232, -10.2702, 2.0", "2.33194, 7.62197, -22.8939, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999863085758
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-3.69004, -0.304521, -6.20658, 1.33", "-7.70849, -0.849276, -12.3444, 1.33", "-11.3865, -2.10988, -12.2925, 1.33", "-16.9874, -4.02953, -12.2133, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999863085758
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.21716, -1.61875, -6.3502, 2.67", "5.36797, -2.21966, -8.4691, 2.67", "11.9552, -1.94912, -10.5646, 2.0", "19.7569, -1.62871, -13.0465, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999863085758
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.67148, 4.85544, -1.51472, 1.33", "6.40652, 4.65593, -1.43437, 1.33", "12.8622, 7.60456, -3.07996, 1.33", "18.4562, 10.1596, -4.50592, 1.33", "21.6099, 11.6001, -5.30981, 1.33", "24.0494, 12.7143, -5.93166, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999863085758
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.94026, 2.78526, 7.62667, 1.33", "2.80353, 4.38885, 12.2892, 1.33", "5.38102, 7.08103, 9.60277, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999863085758
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-5.90457, -3.41528, -3.46216, 0.743173", "-19.4918, -9.77036, -3.46216, 0.743173", "-33.079, -16.1254, -3.46216, 0.743173" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-7.54087, 13.506, -3.91271, 2.0", "-6.4893, 16.4014, -7.20976, 0.67", "-4.99614, 20.5128, -11.8914, 1.33" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-7.54087, 13.506, -3.91271, 2.0", "-10.8114, 16.4321, -4.21373, 2.0", "-14.2147, 19.477, -4.52697, 2.0", "-16.473, 21.4974, -4.73481, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "2.33194, 7.62197, -22.8939, 2.0", "11.7904, 6.42976, -32.8119, 0.67", "13.224, 6.34172, -34.0537, 1.33", "15.8029, 6.15442, -36.2342, 0.67", "17.3402, 6.05274, -37.4798, 1.33", "20.8181, 5.9492, -40.2259, 0.67", "22.4984, 5.94498, -41.4696, 1.33", "24.1187, 6.12753, -42.4255, 0.67", "29.0326, 7.15432, -45.8465, 0.67", "30.1043, 7.51582, -46.7829, 0.67", "32.0299, 8.36075, -48.8112, 1.33", "33.5986, 9.3122, -50.7905, 1.33", "36.3142, 11.2948, -55.2624, 0.67", "37.3204, 12.1091, -57.2233, 0.67", "39.6596, 14.2834, -62.2304, 1.33", "40.9693, 15.6246, -65.5669, 0.67", "42.0221, 16.7904, -68.5547, 1.33", "45.0486, 20.38, -77.8028, 1.33", "46.7395, 22.4835, -82.9875, 0.33", "47.157, 23.1142, -84.4629, 1.33", "48.5466, 25.4936, -89.3459, 0.33", "48.959, 26.2614, -90.8776, 0.33", "50.3139, 28.9702, -96.072, 2.0", "50.8879, 30.3372, -98.3081, 0.33", "52.1813, 33.4024, -102.96, 1.33", "53.4984, 35.9651, -106.936, 0.67", "55.166, 38.4683, -111.123, 1.33", "56.5603, 40.1386, -114.232, 0.33", "57.334, 40.8717, -115.749, 1.33", "59.004, 41.9887, -118.313, 0.33", "60.5001, 42.8213, -120.19, 0.33", "63.5238, 44.2808, -123.707, 0.67", "65.8006, 45.1785, -125.845, 0.67", "68.6701, 46.2147, -128.393, 1.33", "71.4079, 47.3406, -131.114, 0.33", "73.8073, 48.4622, -133.584, 0.33", "75.581, 49.4194, -135.407, 0.67", "77.5812, 50.5193, -137.303, 0.33", "78.7275, 51.0532, -138.385, 0.33", "81.2244, 52.0481, -140.608, 0.67", "82.9292, 52.7092, -142.276, 0.33", "85.5551, 53.6294, -144.625, 2.0", "87.8418, 54.3709, -146.762, 0.33", "89.0053, 54.7077, -147.839, 0.33", "89.3274, 54.7943, -148.119, 0.67", "92.8281, 55.7077, -150.853, 0.33", "94.127, 56.0827, -151.846, 1.33", "96.5729, 56.8729, -153.399, 0.33", "99.6695, 57.8919, -155.12, 0.33", "101.72, 58.6073, -156.106, 1.33", "104.259, 59.3989, -157.24, 0.33", "105.185, 59.597, -157.923, 0.67", "108.561, 60.1486, -161.3, 0.33", "109.185, 60.2328, -162.053, 0.67", "110.977, 60.3682, -164.63, 0.33", "112.818, 60.3111, -167.461, 0.67", "120.203, 59.3823, -179.993, 0.33", "120.554, 59.2912, -180.621, 0.67", "120.959, 59.1175, -181.435, 0.33", "121.245, 58.9579, -181.991, 0.67", "123.048, 57.5769, -185.243, 0.33", "123.525, 57.1473, -185.594, 0.67", "125.402, 55.1186, -185.157, 0.33", "125.402, 55.1186, -185.157, 0.67", "126.827, 53.3393, -184.849, 0.33", "127.032, 53.0795, -184.816, 0.67", "128.165, 51.7518, -184.875, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "2.33194, 7.62197, -22.8939, 2.0", "-0.930653, 8.26123, -25.0714, 1.33", "-7.08159, 9.46642, -29.1766, 1.33", "-10.7997, 10.1949, -31.658, 1.33", "-14.6936, 10.9579, -34.2569, 1.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-16.9874, -4.02953, -12.2133, 1.33", "-16.448, -4.87305, -15.8234, 0.67", "-16.3318, -5.99992, -18.5606, 0.67", "-16.5659, -7.00788, -21.0892, 0.67", "-18.8162, -12.8517, -35.1967, 0.67", "-19.4019, -14.0072, -37.8751, 0.67", "-20.88, -16.3143, -43.1321, 0.67", "-22.9588, -18.9065, -49.4651, 0.67", "-25.5391, -21.692, -56.8584, 1.33", "-26.2734, -22.4078, -58.6008, 0.67", "-29.132, -24.9458, -63.7089, 1.33", "-31.4676, -26.9787, -68.1213, 0.67", "-32.8626, -28.3257, -70.9384, 1.33", "-36.7817, -32.0768, -78.0319, 0.67", "-38.9512, -34.345, -81.6914, 1.33", "-41.2185, -36.5952, -85.3527, 0.67", "-43.8332, -39.5252, -89.4177, 0.67", "-46.6006, -43.2861, -93.6756, 1.33", "-47.7715, -45.0818, -95.3719, 0.33", "-49.6099, -47.7902, -97.6921, 1.33", "-51.9484, -51.6106, -100.967, 0.67", "-54.4133, -55.9596, -104.453, 1.33", "-56.1336, -58.8293, -106.347, 0.67", "-56.7482, -59.81, -107.023, 0.67", "-58.6071, -62.5235, -109.083, 0.67", "-59.9774, -64.1647, -110.534, 0.33", "-63.577, -67.0885, -113.929, 2.0", "-66.5644, -68.6703, -116.723, 0.33", "-69.474, -70.0364, -119.642, 1.33", "-71.1552, -70.8839, -121.472, 0.33", "-73.6405, -72.2092, -124.43, 1.33", "-74.8605, -72.798, -126.044, 0.33", "-76.8538, -73.7616, -128.768, 0.33", "-78.5912, -74.674, -131.13, 0.67", "-80.7972, -75.8637, -134.388, 0.33", "-83.7431, -77.331, -138.89, 1.33", "-87.3739, -78.9567, -144.63, 0.33", "-88.5024, -79.3513, -146.383, 1.33", "-90.0043, -79.6234, -148.649, 0.33", "-95.4214, -79.7794, -156.095, 0.33", "-96.938, -79.6308, -158.077, 1.33", "-101.376, -78.8923, -162.838, 0.33", "-103.052, -78.6593, -164.403, 0.33", "-106.01, -78.3261, -167.004, 0.33", "-108.752, -78.1791, -169.054, 0.67", "-113.796, -78.4038, -172.052, 2.0", "-118.972, -78.8965, -174.972, 0.67", "-124.82, -79.71, -177.764, 0.33", "-125.679, -79.8867, -178.16, 0.67", "-129.521, -81.0183, -179.812, 0.33", "-130.646, -81.4438, -180.402, 0.67", "-131.868, -82.0115, -181.12, 0.67", "-133.878, -83.0606, -182.582, 0.33", "-135.703, -83.974, -184.216, 0.67", "-137.243, -84.8016, -186.122, 0.67", "-141.745, -87.2252, -192.86, 0.33", "-141.952, -87.3319, -193.202, 0.67", "-143.041, -87.8434, -195.154, 0.33", "-145.694, -88.813, -200.311, 1.33", "-147.972, -89.3228, -205.195, 0.33", "-148.448, -89.3517, -206.38, 0.67", "-150.41, -89.3486, -211.349, 0.33", "-151.494, -89.3265, -214.228, 1.33", "-153.419, -89.209, -219.811, 0.33", "-154.986, -88.8767, -224.569, 1.33", "-158.288, -87.6392, -235.466, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.9874, -4.02953, -12.2133, 1.33", "-15.4154, -5.7029, -14.9598, 1.33", "-13.608, -7.73362, -18.5919, 1.33", "-11.5278, -10.0994, -23.0926, 0.67", "-10.3734, -11.5467, -25.8363, 0.67", "-7.91035, -15.1094, -32.1223, 0.67", "-5.06454, -19.7533, -39.8241, 0.67", "-3.56551, -22.4798, -44.3472, 0.67", "-2.53151, -24.6646, -48.2045, 0.33", "-1.27081, -27.1978, -53.0893, 1.33", "-0.422074, -28.4931, -56.2775, 1.33", "0.0438972, -28.9576, -57.894, 0.67", "2.19685, -29.9573, -64.1714, 0.67", "5.67235, -31.0404, -72.6094, 1.33", "6.71876, -31.146, -74.9819, 0.67", "8.71895, -31.0089, -79.1595, 1.33", "10.1663, -30.8044, -81.927, 0.67", "11.2791, -30.5782, -84.4679, 0.33", "11.9176, -30.2055, -86.8443, 1.33", "13.1689, -28.711, -93.9061, 0.33", "13.2667, -28.3295, -95.5308, 1.33", "13.2261, -27.7266, -97.7729, 2.0", "12.262, -23.7839, -110.634, 1.33", "11.0255, -20.4596, -121.469, 0.33", "10.8823, -20.1732, -122.435, 0.67", "9.53983, -18.192, -129.922, 1.33", "8.16088, -16.7103, -136.485, 0.33", "8.00707, -16.6044, -137.106, 1.33", "4.21738, -15.3867, -150.345, 0.33", "3.65574, -15.4086, -152.072, 1.33", "1.9608, -15.6708, -157.263, 0.33", "1.68521, -15.6942, -158.182, 0.67", "-0.0272208, -15.724, -163.939, 0.33", "-1.15843, -15.67, -167.689, 1.33", "-3.30222, -15.2081, -174.545, 0.33", "-4.48325, -14.7481, -178.667, 1.33", "-7.90732, -12.5313, -191.985, 0.33", "-8.01515, -12.4402, -192.467, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.7569, -1.62871, -13.0465, 2.0", "25.9909, 15.8874, -39.7498, 0.67", "27.0215, 19.8117, -44.8428, 0.67", "27.7459, 23.256, -48.841, 0.67", "28.3569, 26.3401, -52.1494, 1.33", "29.0994, 30.863, -56.6684, 0.67", "29.5184, 33.6987, -59.2425, 0.33", "29.8221, 42.3918, -63.9348, 0.67", "29.8336, 44.1439, -64.8581, 1.33", "29.6664, 47.9281, -66.8115, 0.67", "29.138, 53.0752, -69.8173, 2.0", "28.6086, 57.1205, -72.5456, 0.33", "28.023, 61.8405, -76.2351, 2.0", "27.3805, 67.653, -81.1749, 0.33", "27.1313, 70.3141, -83.6654, 0.33", "26.4159, 78.8489, -92.2757, 2.0", "25.9973, 86.6995, -100.84, 0.33", "25.8662, 90.0725, -104.674, 1.33", "25.817, 92.1133, -107.051, 0.33", "25.7987, 98.5989, -114.686, 1.33", "25.7535, 103.774, -120.802, 0.33", "25.7345, 105.29, -122.527, 0.67", "25.7896, 107.518, -124.91, 0.67", "26.0029, 112.915, -130.381, 0.33", "26.0938, 114.259, -131.617, 0.33", "26.5352, 118.005, -134.6, 0.67", "28.4148, 128.661, -141.995, 0.67", "30.303, 137.21, -147.292, 0.33", "30.7841, 138.809, -148.174, 0.67", "32.746, 143.842, -150.343, 0.33", "33.4732, 145.435, -150.911, 1.33", "35.4877, 149.009, -151.767, 0.33", "36.1382, 149.924, -151.722, 0.67", "38.6621, 152.928, -151.166, 0.33", "38.9744, 153.254, -151.145, 0.67", "41.3752, 155.183, -151.629, 0.33", "45.7538, 158.254, -153.451, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.7569, -1.62871, -13.0465, 2.0", "19.3109, -2.69614, -24.8247, 2.0" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "24.0494, 12.7143, -5.93166, 1.33", "29.1386, 12.2745, -12.4331, 0.67", "31.3535, 12.0968, -15.0045, 0.67", "34.4614, 11.7977, -18.6272, 0.67", "38.8747, 11.434, -23.2911, 0.67", "41.8226, 11.0457, -26.5477, 0.67", "45.4462, 10.4193, -30.5196, 0.67", "47.7708, 10.1303, -32.8748, 0.67", "51.1581, 9.69133, -36.233, 2.0", "56.1021, 9.36747, -41.0919, 0.67", "59.4517, 9.29015, -44.3153, 0.67", "60.9434, 9.24493, -45.7975, 0.67", "66.1154, 8.9255, -50.9522, 0.67", "66.9195, 8.8869, -51.6755, 1.33", "70.5779, 8.68237, -54.5957, 0.67", "73.0944, 8.54657, -56.3822, 0.67", "75.2196, 8.43375, -57.7731, 1.33", "79.6324, 7.95017, -60.6714, 0.67", "82.9103, 7.44765, -62.9024, 1.33", "85.2679, 7.10525, -64.5354, 0.67", "87.7877, 6.73521, -66.234, 2.0", "92.0689, 6.22814, -69.3854, 0.33", "96.1018, 5.7983, -72.5237, 1.33", "99.2013, 5.49071, -74.9658, 0.33", "99.669, 5.43449, -75.3485, 0.67", "100.892, 5.30267, -76.3937, 0.33", "103.422, 5.09667, -78.4586, 1.33", "107.231, 4.86579, -81.174, 0.33", "109.469, 4.798, -82.6149, 1.33", "112.838, 4.71464, -84.8088, 0.33", "116.877, 4.818, -87.6524, 1.33", "118.832, 4.97131, -89.0777, 0.33", "120.261, 5.15969, -90.1737, 0.33", "122.649, 5.58164, -92.3603, 0.67", "126.612, 6.72015, -96.3226, 1.33", "128.792, 7.58136, -98.7691, 0.67", "130.306, 8.25107, -100.548, 0.33", "132.514, 9.4666, -103.365, 2.0", "137.294, 12.643, -109.715, 0.33", "139.826, 14.6337, -113.163, 0.67", "142.26, 16.8277, -116.401, 0.33", "142.78, 17.3607, -117.106, 0.67", "144.918, 19.8549, -120.054, 0.33", "145.308, 20.3752, -120.524, 0.67", "146.816, 22.6421, -121.944, 0.33", "147.01, 22.9034, -122.115, 0.67", "148.981, 25.625, -123.399, 0.33", "149.183, 25.8987, -123.507, 0.67", "151.512, 28.7877, -123.98, 0.33", "152.531, 30.0249, -124.075, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "24.0494, 12.7143, -5.93166, 1.33", "27.5821, 15.5144, -7.29055, 0.67", "29.4942, 16.944, -7.88759, 0.67", "31.5917, 18.657, -8.45657, 0.67", "33.7753, 20.4614, -8.95729, 0.67", "35.493, 21.9257, -9.3697, 0.67", "37.9896, 24.0812, -9.97507, 0.67", "39.3881, 25.4247, -10.1974, 0.33", "41.2026, 27.343, -10.5028, 0.67", "42.8008, 29.0951, -10.7603, 0.67", "44.265, 30.7512, -10.9835, 0.67", "44.8199, 31.4214, -11.0713, 0.33", "45.8997, 32.7903, -11.2222, 0.33", "47.3894, 34.6471, -11.3754, 0.67", "48.699, 36.2337, -11.4609, 0.33", "49.3725, 37.0806, -11.5409, 0.67", "51.0449, 39.0858, -11.6754, 0.33", "53.2222, 41.6486, -11.8425, 0.67", "54.724, 43.3797, -11.9537, 0.67", "55.8374, 44.6776, -12.0347, 0.33", "58.5084, 47.7179, -12.2233, 1.33", "60.2943, 49.694, -12.3516, 0.67", "62.2499, 51.7279, -12.4493, 0.33", "63.246, 52.6093, -12.4697, 1.33", "64.4522, 53.6819, -12.445, 0.33", "64.644, 53.8329, -12.4072, 0.67", "65.8834, 54.6383, -11.9314, 0.33", "67.4098, 55.5285, -11.3169, 0.67", "68.6152, 56.1589, -10.808, 0.33", "71.0331, 57.4539, -9.62863, 1.33", "74.414, 59.3103, -7.95505, 0.67", "76.8313, 60.6606, -7.07547, 0.67", "78.7031, 61.7513, -6.56206, 1.33", "80.6743, 62.8721, -6.30211, 0.33", "82.954, 64.1015, -6.3184, 1.33", "85.5406, 65.3747, -6.7733, 0.67", "89.6093, 67.3862, -8.20584, 0.33", "90.0542, 67.6044, -8.43328, 0.67", "92.0733, 68.5245, -9.73347, 0.33", "93.6246, 69.1582, -10.9129, 0.33", "94.7645, 69.5648, -11.8807, 1.33", "96.0671, 70.053, -12.9365, 0.33", "98.1801, 70.742, -14.1863, 0.67", "99.6786, 71.1871, -14.9521, 0.33", "100.766, 71.4869, -15.3759, 0.33", "101.225, 71.5701, -15.5339, 1.33", "104.261, 71.9695, -16.2835, 0.33", "106.177, 72.1722, -16.6288, 0.33", "106.656, 72.1807, -16.6484, 0.67", "107.857, 72.0754, -16.6407, 0.33", "108.394, 71.9817, -16.6133, 0.67", "109.847, 71.5087, -16.4614, 0.33", "110.486, 71.1826, -16.3454, 0.67", "112.13, 70.3674, -15.9594, 0.33", "112.695, 70.0834, -15.809, 0.67", "113.702, 69.4555, -15.4608, 0.33", "113.968, 69.2593, -15.3481, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.38102, 7.08103, 9.60277, 1.33", "11.2599, 5.29923, 9.69843, 0.67", "19.0986, 2.33355, 9.56924, 0.67", "21.803, 1.31358, 9.49881, 0.67", "24.5677, 0.27087, 9.42681, 0.67", "40.0052, -5.55151, 9.02474, 0.67", "44.0098, -7.06186, 8.92044, 0.67", "50.9263, -10.0492, 8.5188, 0.67", "54.5858, -12.0556, 8.07667, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.38102, 7.08103, 9.60277, 1.33", "6.37936, 8.73201, 9.42984, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-33.079, -16.1254, -3.46216, 0.67", "-46.6663, -22.4805, -3.46216, 0.67", "-60.2535, -28.8356, -3.46216, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-4.99614, 20.5128, -11.8914, 1.33", "-2.32125, 18.6716, -19.2712, 0.67", "-1.34491, 17.9997, -22.1902, 0.67", "0.874102, 16.3862, -28.773, 0.67", "1.89718, 15.539, -32.3668, 0.67", "4.82862, 12.5885, -44.7224, 0.67", "5.2341, 12.1715, -46.5423, 0.67", "6.24983, 11.0226, -51.5534, 0.67", "6.78706, 10.341, -54.3361, 1.33", "9.16521, 7.51246, -65.8162, 0.67", "10.1724, 6.30974, -70.2023, 1.33", "12.8618, 2.88669, -79.289, 0.67", "13.7825, 1.81047, -82.0237, 1.33", "15.8112, -0.367445, -87.0868, 1.33", "16.9555, -1.65126, -89.7515, 0.67", "18.5581, -3.52795, -92.7719, 0.67", "21.7688, -8.09004, -100.471, 0.67", "22.9179, -10.3175, -104.202, 1.33", "23.2293, -10.933, -105.44, 1.33", "23.9856, -12.3567, -108.7, 0.67", "24.2977, -13.0055, -110.226, 0.67", "26.4014, -16.6304, -118.604, 0.67", "27.2303, -17.7413, -121.256, 1.33", "29.8599, -20.5878, -128.086, 0.33", "30.9198, -21.4843, -130.349, 1.33", "31.9143, -22.1311, -131.967, 0.67", "34.2545, -23.3361, -135.219, 1.33", "36.7025, -24.5067, -138.367, 0.67", "38.7166, -25.5996, -141.003, 0.33", "40.3377, -26.6347, -143.381, 0.67", "42.7148, -28.1498, -146.982, 0.67", "46.3987, -30.5447, -152.952, 0.67", "48.3379, -32.013, -156.442, 0.67", "50.1622, -33.5305, -159.905, 1.33", "54.152, -36.6462, -168.434, 1.33" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-4.99614, 20.5128, -11.8914, 1.33", "2.10672, 20.8412, -14.908, 0.67", "7.72614, 21.6049, -18.615, 0.67", "13.0399, 22.6549, -22.7497, 0.67", "15.8797, 23.475, -25.4848, 0.67", "17.9974, 24.2466, -28.0515, 0.67", "20.802, 25.5878, -32.8381, 0.67", "24.1622, 28.2946, -41.3176, 0.67", "25.2963, 29.5397, -45.2258, 0.67", "26.6561, 31.4715, -51.5668, 0.67", "28.0094, 33.7211, -59.5923, 1.33", "30.1071, 37.0661, -73.2601, 0.33", "30.578, 37.7096, -76.1371, 0.33", "30.962, 38.0884, -78.0516, 0.33", "32.5448, 39.3654, -84.9302, 1.33", "34.5247, 40.4791, -92.3163, 0.33", "35.5057, 40.9018, -95.5543, 1.33", "37.3643, 41.5116, -100.905, 0.33", "37.8328, 41.634, -102.253, 1.33", "40.4297, 42.3573, -109.601, 0.33", "43.9731, 43.3085, -119.808, 0.67", "45.8251, 43.7785, -125.61, 0.33", "46.1315, 43.8477, -126.593, 0.67", "48.244, 44.2239, -133.366, 0.33", "48.9916, 44.3426, -135.588, 1.33", "54.1953, 45.1674, -149.812, 0.33", "56.1133, 45.5715, -153.956, 0.67", "58.0106, 46.061, -157.696, 0.33", "58.7312, 46.2597, -159.106, 0.67", "59.7774, 46.6342, -161.033, 0.33", "59.9923, 46.7155, -161.41, 0.67", "62.1088, 47.9631, -162.746, 0.33", "63.599, 49.0058, -163.35, 1.33" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-16.473, 21.4974, -4.73481, 2.0", "-18.8151, 22.0902, -0.990696, 0.67", "-22.2318, 22.6726, 3.46842, 0.67", "-30.2159, 23.6787, 12.3366, 1.33", "-37.8234, 24.109, 20.0688, 0.67", "-42.0057, 24.2738, 23.7193, 0.67", "-48.1608, 24.3267, 28.4782, 0.67", "-50.4889, 24.0347, 29.3414, 0.67", "-52.9614, 23.1774, 28.5619, 1.33", "-58.1152, 21.4095, 25.3769, 0.67", "-65.8833, 19.0284, 19.2841, 0.67", "-76.0914, 16.2361, 10.8379, 0.67", "-77.4944, 16.024, 9.58107, 1.33", "-80.3829, 15.8265, 7.06872, 0.67", "-86.6806, 15.6537, 1.78235, 0.67", "-89.7481, 15.776, -0.653218, 0.67", "-92.8536, 15.9767, -2.31431, 0.67", "-100.371, 16.8037, -5.33667, 1.33", "-102.298, 16.9299, -6.16769, 0.67", "-104.078, 16.9128, -7.07286, 0.67", "-110.935, 15.714, -10.7132, 0.67", "-114.042, 14.7995, -12.4907, 1.33", "-118.303, 13.3164, -14.8599, 0.67", "-119.91, 12.7344, -15.8117, 1.33", "-124.008, 11.2849, -18.145, 0.67", "-128.445, 9.78475, -20.4827, 1.33", "-135.873, 7.00138, -23.8914, 0.33", "-137.545, 6.33815, -24.6265, 0.33", "-145.435, 3.13329, -27.7687, 1.33", "-151.533, 0.933346, -29.3317, 0.67", "-153.411, 0.431721, -29.4212, 0.67", "-157.202, -0.113711, -28.9349, 1.33", "-159.826, -0.311698, -28.0794, 0.67", "-161.888, -0.542715, -27.2505, 1.33", "-166.268, -1.02348, -24.9373, 0.67", "-168.435, -1.29289, -24.0137, 0.33", "-170.217, -1.5096, -23.2351, 2.0", "-172.375, -1.8219, -22.3442, 0.67", "-175.661, -2.37887, -21.1504, 0.67", "-177.705, -2.82726, -20.5169, 1.33", "-179.59, -3.25206, -20.0659, 0.33", "-182.093, -3.73665, -19.4844, 1.33", "-187.018, -4.46906, -18.3902, 0.33", "-190.136, -4.67965, -17.6116, 0.33", "-192.044, -4.66541, -17.1083, 1.33", "-195.087, -4.54453, -16.2772, 0.33", "-197.561, -4.24138, -15.506, 0.33", "-198.076, -4.14122, -15.3246, 0.67", "-201.641, -3.20844, -13.8991, 0.33", "-203.469, -2.93979, -13.2671, 0.33", "-205.483, -2.76165, -12.7421, 0.67", "-208.682, -2.62791, -11.8183, 0.33", "-210.929, -2.70666, -11.4723, 0.33", "-211.313, -2.72746, -11.4337, 0.67", "-214.732, -2.99788, -11.4547, 0.33", "-216.67, -3.13257, -11.5187, 0.33", "-220.685, -3.66911, -11.7864, 1.33", "-226.842, -4.74755, -12.5185, 0.33" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-16.473, 21.4974, -4.73481, 2.0", "-16.4635, 25.4725, -5.31599, 1.33", "-16.4563, 28.4925, -5.75753, 1.33" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-14.6936, 10.9579, -34.2569, 1.33", "-12.8747, 14.1149, -48.1918, 0.67", "-12.017, 15.6036, -54.7629, 1.33", "-10.5512, 18.1476, -65.9923, 0.67", "-10.0069, 19.0924, -70.1625, 0.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-14.6936, 10.9579, -34.2569, 1.33", "-24.0288, 10.255, -42.5797, 0.67", "-27.1588, 9.85957, -44.509, 0.33", "-28.646, 9.66999, -45.0994, 0.33", "-30.9863, 9.60653, -46.1814, 1.33", "-33.3416, 9.62123, -47.2658, 0.67", "-34.8118, 9.70821, -47.9195, 0.33", "-37.3565, 10.1086, -48.7992, 0.33", "-40.2179, 10.9099, -50.0535, 2.0", "-46.1424, 13.1101, -52.8369, 0.67", "-47.7881, 13.7863, -53.6562, 0.67", "-49.8481, 14.6693, -54.7922, 0.33", "-53.5936, 16.2459, -56.8883, 1.33", "-55.1995, 16.9811, -57.9056, 0.67", "-56.327, 17.456, -58.6583, 0.33", "-58.4825, 18.1381, -59.9211, 1.33", "-61.5695, 18.9938, -61.6712, 0.67", "-63.7735, 19.4726, -62.8958, 1.33", "-68.5916, 20.2426, -65.3616, 0.33", "-69.8494, 20.384, -66.0423, 1.33", "-72.6322, 20.7423, -67.4619, 0.33", "-75.1154, 21.0947, -68.5197, 0.33", "-75.9891, 21.2037, -68.7992, 0.67", "-77.3706, 21.3611, -69.1962, 0.33", "-80.6155, 21.6864, -70.0057, 1.33", "-84.6472, 22.0046, -71.1199, 0.33", "-86.8363, 22.1553, -71.7718, 1.33", "-89.9827, 22.3631, -72.8879, 2.0", "-92.4754, 22.5621, -74.302, 0.33", "-93.9156, 22.6471, -75.6299, 2.0", "-95.6533, 22.671, -78.1061, 0.67", "-96.0421, 22.634, -79.1965, 0.33", "-97.0113, 22.4516, -83.9237, 1.33", "-98.0495, 21.9014, -92.8219, 0.33", "-98.3981, 21.4392, -98.6108, 0.33", "-98.4606, 21.0766, -102.174, 1.33", "-98.2905, 19.9922, -111.08, 0.33", "-98.1723, 19.5284, -113.656, 0.67", "-97.9722, 18.8983, -116.328, 0.33", "-97.7536, 18.0744, -119.281, 1.33", "-97.7022, 15.8917, -126.579, 0.33", "-97.8178, 15.3391, -128.222, 0.67", "-98.2884, 13.9983, -131.405, 0.33", "-98.8898, 12.2872, -135.408, 0.67", "-99.0946, 11.7239, -136.897, 0.33", "-99.1929, 11.4994, -137.569, 0.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "19.3109, -2.69614, -24.8247, 2.0", "20.7125, -7.49815, -28.5811, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "19.3109, -2.69614, -24.8247, 2.0", "22.371, -2.65733, -24.8301, 0.67", "24.6871, -2.35928, -24.7014, 0.67", "27.6787, -1.84827, -24.4479, 0.67", "32.1302, -0.700061, -24.5638, 1.33", "35.7024, 0.412829, -24.7856, 0.67", "38.4648, 1.31114, -25.1226, 0.67", "42.6425, 2.99388, -26.0236, 1.33", "44.3033, 3.73412, -26.4835, 0.67", "51.162, 7.08297, -28.8748, 1.33", "53.6973, 8.39693, -29.9157, 0.67", "57.5938, 10.3033, -31.7421, 1.33", "61.4164, 12.1232, -33.8455, 0.33", "62.5838, 12.668, -34.4761, 0.67", "65.188, 13.8052, -35.6746, 0.67", "67.2516, 14.4786, -36.3967, 0.67", "70.8042, 15.3841, -37.695, 1.33", "75.7706, 16.5145, -39.2758, 0.33", "80.6759, 17.2673, -40.8468, 1.33", "82.7169, 17.5364, -41.516, 0.67", "86.6486, 18.0277, -42.652, 0.67", "91.2259, 18.4414, -44.5861, 0.67", "93.3229, 18.6535, -45.6224, 0.33", "96.6398, 19.2568, -47.6298, 0.67", "98.2774, 19.7335, -48.779, 0.33", "100.899, 20.678, -50.5955, 1.33", "107.903, 23.5245, -55.2913, 0.33", "109.499, 24.1295, -56.2763, 0.67", "113.638, 25.6604, -58.8462, 0.67", "114.395, 26.0112, -59.3337, 0.33", "115.881, 26.7364, -60.3339, 0.33", "117.754, 27.5864, -61.5579, 1.33", "119.097, 28.2023, -62.1759, 0.33", "120.123, 28.7239, -62.7683, 1.33", "125.206, 31.3075, -65.8889, 0.33", "125.841, 31.6527, -66.2566, 0.33", "127.528, 32.7106, -67.1209, 0.67", "129.331, 33.8682, -67.8854, 0.67", "135.064, 37.4619, -70.0273, 0.33", "136.702, 38.3867, -70.4697, 0.33", "139.724, 39.9917, -71.076, 1.33", "142.03, 41.2451, -71.53, 0.33", "143.532, 42.0793, -71.7437, 0.33", "143.934, 42.2912, -71.8009, 0.67", "146.389, 43.5444, -72.0024, 0.33", "149.665, 45.3822, -72.4375, 1.33", "151.049, 46.1679, -72.6653, 0.33", "153.199, 47.4114, -72.8709, 1.33", "156.969, 49.728, -72.8413, 0.33", "157.573, 50.1091, -72.7799, 0.67", "159.784, 51.6486, -72.2832, 0.33", "161.018, 52.5208, -71.8157, 1.33", "163.692, 54.4722, -70.9208, 0.33", "165.476, 55.8402, -70.3578, 0.33", "165.719, 56.028, -70.2715, 0.67", "167.184, 57.1332, -69.9011, 0.33", "168.657, 58.2085, -69.9046, 0.67", "172.19, 60.7363, -70.409, 0.33", "173.73, 61.7844, -70.8834, 0.33", "174.505, 62.2794, -71.1789, 0.67", "175.849, 63.0472, -71.7202, 0.33", "179.602, 64.8017, -73.3298, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "152.531, 30.0249, -124.075, 0.67", "153.639, 32.4279, -123.132, 0.33", "154.075, 33.3726, -122.762, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "152.531, 30.0249, -124.075, 0.67", "154.305, 31.4228, -123.12, 0.33", "155.594, 32.4384, -122.426, 0.33", "156.341, 33.0266, -122.024, 0.67", "158.721, 34.9017, -120.743, 0.33", "160.374, 36.2042, -119.853, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "54.5858, -12.0556, 8.07667, 0.67", "55.5698, -11.8228, 7.05337, 0.33", "55.8238, -11.7627, 6.7892, 0.67", "57.34, -11.404, 5.21248, 0.33", "61.0346, -11.6565, 1.1013, 0.33", "64.516, -11.69, -3.19914, 0.33", "68.1342, -12.2721, -7.3447, 0.33", "72.6097, -13.7256, -10.2555, 0.33", "77.3818, -15.2947, -12.5752, 0.33", "81.8979, -16.4976, -15.5371, 0.33", "86.8272, -16.9093, -18.0166, 0.33", "92.0849, -17.7399, -19.5273, 0.33", "97.5232, -17.5069, -20.5203, 0.33", "102.777, -17.3338, -22.2471, 0.33", "108.047, -17.2364, -23.9315, 0.33", "113.109, -17.7753, -26.0993, 0.33", "118.265, -18.9742, -27.7076, 0.33", "123.244, -19.7616, -29.9896, 0.33", "127.805, -21.4709, -32.6144, 0.33", "132.76, -22.1659, -34.9779, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "54.5858, -12.0556, 8.07667, 0.67", "57.9246, -13.1777, 8.75369, 0.67", "59.6888, -13.8104, 9.0187, 0.67", "63.6059, -14.8315, 9.22045, 0.67", "66.4586, -15.543, 9.28603, 0.67", "68.5138, -16.0006, 9.28706, 0.67", "71.4076, -16.6509, 9.26256, 0.67", "75.1749, -17.5276, 9.16589, 0.67", "82.8231, -19.165, 8.75204, 0.67", "84.4489, -19.5057, 8.59223, 0.67", "86.9399, -19.9699, 8.33689, 0.67", "88.6342, -20.3144, 8.16917, 0.33", "90.126, -20.5382, 8.00185, 0.33", "98.6513, -22.8422, 9.30724, 0.33", "107.043, -24.6359, 11.7667, 0.33", "115.519, -26.3937, 13.9497, 0.33", "123.726, -28.882, 16.4272, 0.33", "131.939, -30.6331, 19.4566, 0.33", "139.621, -33.311, 23.1333, 0.33", "147.128, -35.9999, 27.1452, 0.33", "155.09, -37.5944, 30.8552, 0.33", "162.865, -40.7494, 33.9039, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.37936, 8.73201, 9.42984, 1.33", "12.159, 8.12201, 11.4648, 0.67", "15.7364, 7.69161, 13.3969, 0.67", "18.3031, 7.22915, 15.0865, 0.67", "23.4474, 6.6235, 19.2343, 0.67", "29.1227, 5.92817, 24.1698, 0.67", "30.8069, 5.72738, 25.6439, 0.67", "37.4289, 4.63327, 31.6268, 0.67", "39.5836, 4.2743, 33.6567, 0.67", "49.2443, 2.98557, 42.9077, 0.67", "53.3271, 2.58994, 46.9542, 0.67", "57.6219, 2.27909, 51.0728, 0.67", "60.4266, 2.0489, 53.6166, 0.67", "64.1826, 1.85975, 56.4583, 1.33", "66.0463, 1.81599, 57.7553, 0.33", "67.9671, 1.55967, 58.8462, 0.33", "78.3949, 2.32474, 67.0969, 0.33", "88.0015, 3.81727, 76.201, 0.33", "96.5239, 5.12272, 86.353, 0.33", "104.957, 7.60034, 96.3601, 0.33", "113.152, 9.49724, 106.687, 0.33", "122.51, 11.06, 116.035, 0.33", "131.684, 13.4003, 125.403, 0.33", "140.061, 14.4775, 135.702, 0.33", "148.099, 16.1338, 146.192, 0.33", "157.961, 17.7571, 154.996, 0.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.37936, 8.73201, 9.42984, 1.33", "7.53319, 11.5197, 10.1294, 0.67", "9.18188, 15.7505, 10.5413, 0.67", "9.73398, 17.4041, 10.5398, 0.67", "10.3559, 18.9775, 10.4656, 0.67", "10.8433, 20.3122, 10.4421, 0.67", "11.3894, 21.9301, 10.4752, 0.67", "12.5907, 25.6272, 10.4689, 0.67", "13.2389, 27.7116, 10.3734, 0.67", "14.4569, 31.5161, 10.3085, 0.67", "16.318, 37.0991, 10.3852, 0.67", "17.5284, 40.9146, 10.5503, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "54.152, -36.6462, -168.434, 1.33", "53.6246, -37.0536, -171.274, 1.33", "51.4199, -38.4713, -181.558, 0.67", "48.363, -40.2142, -194.205, 0.33", "47.6668, -40.5589, -197.259, 1.33", "43.9547, -42.0736, -214.046, 0.33", "42.6914, -42.4209, -220.011, 0.67", "42.1828, -42.4579, -222.281, 0.33", "41.7601, -42.4199, -224.146, 1.33", "38.0528, -41.5016, -241.444, 0.33", "37.289, -41.1432, -245.432, 1.33", "36.2301, -40.2277, -252.305, 0.33", "36.1224, -40.0711, -253.312, 0.67" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "54.152, -36.6462, -168.434, 1.33", "59.7719, -34.9766, -181.95, 0.67", "60.6262, -35.1206, -185.22, 1.33", "61.4265, -35.5492, -189.097, 0.67", "62.6037, -36.1796, -194.798, 0.67", "63.5582, -36.6908, -199.422, 1.33", "66.6458, -38.3444, -214.377, 1.33", "68.8652, -41.0812, -229.136, 0.33", "69.6527, -42.6168, -235.797, 1.34" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-16.4563, 28.4925, -5.75753, 1.33", "-8.89085, 29.7827, -1.00061, 0.67", "-7.76453, 29.9396, -0.217348, 0.67", "-5.20254, 30.1826, 1.67818, 0.67", "2.25954, 30.6772, 7.59039, 0.67", "6.96186, 30.968, 11.4925, 0.67", "11.053, 31.1547, 15.0516, 0.67", "16.5418, 31.2892, 19.8677, 0.67", "18.5362, 31.3493, 21.9123, 1.33", "21.7118, 31.4168, 25.5247, 0.67", "23.1336, 31.4464, 27.4024, 1.33", "27.2805, 31.6281, 33.1451, 0.67", "28.3063, 31.6509, 34.7139, 0.67", "33.5044, 32.502, 42.7076, 1.33", "39.5303, 34.724, 54.1677, 1.33", "45.4637, 39.5684, 64.8406, 1.33", "48.5134, 45.3812, 76.2201, 1.33", "49.3012, 52.1604, 87.4453, 1.33", "47.7134, 57.703, 99.2496, 1.33", "44.8176, 62.3344, 111.198, 1.33", "39.6505, 66.6143, 122.492, 1.33", "35.3564, 69.9655, 134.447, 1.33", "29.4895, 72.5462, 145.914, 1.33", "23.3943, 73.072, 157.54, 1.33", "17.2048, 74.2006, 169.073, 1.33", "10.3649, 77.2461, 179.867, 1.33", "4.19375, 80.3136, 191.052, 1.33", "-3.56757, 85.6025, 200.237, 1.33", "-9.92778, 89.9084, 210.895, 1.33", "-15.1169, 93.6956, 222.354, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-16.4563, 28.4925, -5.75753, 1.33", "-17.9795, 33.3466, -6.67834, 1.33", "-18.9927, 36.5753, -7.29081, 1.34" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.0069, 19.0924, -70.1625, 0.67", "-7.06926, 17.2057, -74.8036, 0.67", "-5.43085, 16.0815, -77.5132, 0.33", "-4.82255, 15.7097, -78.4367, 0.33", "-3.44496, 14.9079, -80.4228, 1.33", "-1.07472, 13.5079, -83.9536, 0.33", "-0.369237, 13.0929, -84.9495, 0.33", "1.54209, 11.8871, -87.8596, 1.33", "2.31669, 11.2341, -89.4421, 0.33", "2.45408, 11.1136, -89.7738, 0.67", "3.71045, 10.0475, -92.809, 0.33", "4.88672, 9.07857, -95.8186, 1.33", "7.14739, 6.91088, -102.602, 0.67", "8.58874, 5.26734, -107.779, 0.67", "9.55771, 3.96801, -111.888, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-10.0069, 19.0924, -70.1625, 0.67", "-12.4671, 22.03, -71.0198, 0.33", "-13.8455, 23.6959, -72.4493, 1.33", "-14.3847, 24.3819, -74.2846, 0.33", "-14.7588, 24.8578, -75.5579, 1.33", "-15.1304, 25.3305, -76.8227, 0.33", "-15.6839, 26.0345, -78.7064, 0.67", "-16.4515, 26.6049, -82.6957, 0.33", "-16.7462, 26.788, -85.4172, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "20.7125, -7.49815, -28.5811, 1.33", "23.3333, -6.7935, -29.6866, 0.67", "26.1929, -6.02465, -30.8927, 1.33", "29.6218, -5.10274, -32.339, 2.0" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "20.7125, -7.49815, -28.5811, 1.33", "22.0402, -10.8425, -27.6387, 0.67", "23.6571, -14.9154, -26.491, 0.67" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "17.5284, 40.9146, 10.5503, 0.67", "19.3215, 41.3605, 11.977, 0.67", "20.9933, 41.7762, 13.3072, 0.67", "22.369, 42.1183, 14.4017, 1.33", "28.0808, 43.7696, 18.398, 1.33", "34.2403, 45.1934, 21.7678, 1.33", "40.0482, 46.5751, 25.7279, 1.33", "46.379, 47.4607, 28.9617, 1.33", "52.6075, 49.4365, 31.8986, 1.33", "58.8517, 51.6803, 34.5999, 1.33", "65.1329, 53.6466, 37.4286, 1.33", "70.9368, 55.698, 41.0932, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "17.5284, 40.9146, 10.5503, 0.67", "20.0547, 43.5245, 11.3006, 0.67", "22.5316, 46.0834, 12.0362, 0.67", "27.3818, 51.0941, 13.4767, 0.67", "28.9686, 52.7335, 13.9479, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "69.6527, -42.6168, -235.797, 1.34", "67.7044, -42.8861, -237.617, 0.67", "64.7929, -43.2885, -240.336, 0.67" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "69.6527, -42.6168, -235.797, 1.34", "73.0135, -42.0345, -240.518, 0.67", "73.9351, -41.8757, -241.729, 1.33", "77.4479, -41.2649, -245.892, 0.67", "78.7399, -41.0671, -247.327, 1.33", "81.2042, -40.7795, -250.056, 0.67", "85.9664, -40.2413, -254.925, 0.33", "87.5491, -40.126, -256.34, 0.67", "89.0365, -40.0696, -257.682, 0.33", "89.6823, -40.0539, -258.235, 0.33", "92.988, -39.9657, -261.392, 2.0", "95.0035, -39.6202, -263.382, 0.33" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-18.9927, 36.5753, -7.29081, 1.34", "-17.5428, 42.5268, -8.8389, 1.33", "-17.0007, 45.3554, -9.58574, 1.33", "-15.9921, 52.7572, -11.0214, 1.33", "-15.0601, 61.4006, -12.1182, 1.33", "-14.8548, 64.7769, -12.3531, 1.33", "-14.7096, 67.705, -12.5805, 1.33", "-14.6215, 70.2766, -12.8362, 1.33", "-14.4351, 76.7173, -13.4141, 1.33", "-14.1468, 80.3627, -13.7022, 1.33", "-13.3462, 85.2873, -14.1396, 1.33", "-10.8449, 97.0494, -14.8095, 1.33", "-9.80118, 101.221, -14.7172, 1.33", "-8.25231, 106.637, -14.567, 1.33", "-6.5736, 113.008, -13.6167, 1.33", "-5.899, 115.723, -12.7266, 1.33", "-4.46028, 121.795, -10.0877, 1.33", "-3.39378, 130.078, -5.51635, 1.33", "-2.91592, 136.634, -1.58985, 1.33", "-2.34563, 150.405, 5.33958, 1.33", "-2.61252, 157.777, 8.45712, 1.33", "-2.89977, 165.478, 11.5279, 1.33", "-3.1083, 172.383, 13.9845, 1.33", "-3.38147, 185.216, 17.9616, 1.33", "-3.65868, 194.107, 20.7697, 1.33", "-3.72842, 206.251, 23.62, 1.33", "-3.84796, 214.392, 25.3167, 1.33", "-3.88772, 218.585, 26.1725, 1.33", "-3.85211, 222.906, 26.7178, 1.33", "-3.81359, 225.303, 26.8012, 1.33", "-3.17645, 234.766, 26.8712, 1.33", "-2.40776, 242.734, 25.9682, 1.33", "-2.00629, 250.686, 24.5983, 1.33", "-1.79963, 255.87, 23.7227, 1.33", "-1.66415, 260.197, 23.3349, 1.33", "-1.56774, 264.815, 23.1462, 1.33", "-1.80006, 270.869, 23.0339, 1.33", "-2.02171, 273.182, 23.1147, 1.33", "-3.20244, 281.338, 23.9619, 1.33", "-4.55289, 287.596, 25.2652, 1.33", "-5.90271, 293.145, 26.6748, 1.33", "-7.15552, 298.281, 28.0042, 1.33", "-9.16433, 308.064, 30.4071, 1.33", "-11.2551, 317.857, 32.4956, 1.33", "-11.7753, 320.159, 32.9136, 1.33", "-12.5907, 325.889, 34.0404, 1.33", "-12.7968, 332.231, 35.0822, 1.33", "-12.5809, 336.291, 35.6979, 1.33", "-11.9082, 342.574, 36.2143, 1.33", "-11.3793, 346.826, 36.4095, 1.33", "-9.91858, 358.676, 37.6247, 1.33", "-8.27302, 373.772, 40.5654, 1.33", "-7.88972, 376.915, 41.4145, 1.33" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-18.9927, 36.5753, -7.29081, 1.34", "-18.9231, 38.2429, -12.8813, 1.33", "-18.9206, 45.187, -34.866, 0.67", "-18.9151, 46.9861, -40.3185, 0.67", "-18.7834, 48.475, -44.6636, 1.33", "-18.479, 51.8497, -54.1867, 0.67", "-18.4574, 52.2152, -55.2497, 1.33", "-18.3623, 53.5733, -58.6798, 0.67", "-18.4857, 56.7413, -67.0029, 1.33", "-18.6617, 60.5607, -76.7146, 0.67", "-18.8059, 61.1775, -78.3816, 0.67", "-19.448, 62.4311, -81.8486, 1.33", "-20.0779, 63.4735, -84.8503, 0.33", "-21.4899, 65.2779, -90.2699, 0.33", "-23.45, 66.951, -95.2639, 1.33", "-26.4153, 68.8851, -101.83, 0.33", "-27.2564, 69.4041, -103.869, 0.33", "-28.7072, 70.2458, -107.377, 1.33", "-30.3243, 70.9121, -111.095, 0.33", "-30.7296, 71.0097, -111.875, 0.67", "-34.5446, 71.157, -117.672, 0.33", "-35.4134, 71.1785, -118.596, 0.67", "-37.249, 71.4132, -120.323, 0.33", "-38.3936, 71.6352, -121.185, 1.33", "-40.3692, 72.3428, -123.519, 0.33", "-41.2311, 72.7319, -124.627, 0.33", "-42.7515, 73.3317, -127.101, 1.33", "-44.0976, 73.9956, -129.755, 0.67", "-44.8951, 74.4667, -131.574, 0.67", "-48.05, 76.2924, -138.401, 0.67", "-49.0205, 76.9143, -140.365, 2.0", "-53.4282, 79.6867, -149.082, 0.33", "-54.6992, 80.5544, -151.555, 0.33", "-56.6501, 82.4513, -155.565, 1.33", "-58.216, 84.5255, -158.804, 0.33", "-59.4509, 86.7411, -161.327, 0.33", "-61.1495, 90.9018, -165.293, 0.33", "-61.8664, 93.4922, -167.42, 1.33", "-63.4826, 99.2447, -172.645, 0.33", "-63.6075, 99.7975, -173.221, 1.33", "-64.1526, 102.594, -176.392, 0.33", "-64.2331, 102.945, -176.852, 0.67", "-65.0171, 105.956, -180.999, 0.33", "-65.6695, 107.978, -184.086, 1.33", "-67.0071, 111.702, -189.945, 0.33", "-67.3374, 112.811, -191.621, 1.33", "-68.3993, 117.393, -198.215, 0.33", "-68.5095, 118.18, -199.204, 0.67", "-68.5458, 119.394, -200.516, 0.33", "-68.5219, 120.56, -201.616, 0.67", "-68.5586, 124.651, -204.964, 0.33", "-68.5718, 126.234, -206.194, 1.33", "-68.7062, 130.699, -209.096, 0.33", "-68.7434, 131.38, -209.528, 0.67", "-68.8011, 133.456, -210.793, 0.33", "-68.8226, 134.521, -211.355, 0.67", "-68.9224, 136.428, -211.964, 0.33", "-68.9711, 137.555, -212.141, 0.67", "-68.9503, 139.336, -211.886, 0.33", "-68.7902, 140.577, -211.674, 0.67", "-68.4943, 141.394, -211.489, 0.67" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-16.7462, 26.788, -85.4172, 0.67", "-15.8922, 28.8862, -92.2249, 0.33", "-15.7769, 29.3021, -93.5731, 1.33", "-15.0695, 33.0674, -106.327, 0.33", "-14.9688, 33.6034, -108.142, 0.67", "-14.5154, 36.0171, -116.318, 0.33", "-14.4494, 36.3681, -117.507, 0.67", "-14.4066, 37.6848, -122.341, 0.33", "-14.4321, 38.753, -126.355, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-16.7462, 26.788, -85.4172, 0.67", "-18.2275, 22.7391, -94.8639, 0.33", "-18.6808, 21.1379, -99.1753, 1.33", "-19.39, 18.235, -108.14, 0.33", "-19.7377, 16.8117, -112.536, 1.33", "-20.1846, 14.9824, -118.186, 0.33", "-20.5816, 13.3576, -123.204, 1.33", "-21.0378, 11.2313, -131.014, 0.67", "-21.3399, 9.52623, -138.025, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "29.6218, -5.10274, -32.339, 2.0", "31.5009, 1.26761, -45.1349, 0.67", "33.6627, 9.93865, -61.8368, 1.33", "34.7901, 14.3937, -70.2661, 0.67", "36.0774, 18.897, -78.8924, 1.33", "37.1299, 22.1203, -85.1122, 0.67", "37.5975, 23.4796, -87.7278, 1.33", "39.6089, 27.9494, -96.964, 0.67", "40.1063, 28.838, -98.837, 1.33", "40.9524, 30.1008, -102.023, 0.67", "44.4894, 34.9468, -115.077, 0.33", "44.9858, 35.5482, -116.794, 1.33", "47.8419, 38.8184, -126.393, 0.33", "49.1838, 40.4449, -131.036, 1.33", "52.4433, 45.3815, -144.029, 0.33", "52.7473, 45.9555, -145.393, 0.67", "53.0522, 46.5202, -146.754, 0.33", "53.2197, 46.8545, -147.506, 0.67", "53.6705, 48.3002, -149.93, 0.33", "53.9441, 49.6055, -151.729, 0.67", "53.3875, 54.1364, -154.837, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "29.6218, -5.10274, -32.339, 2.0", "29.878, -6.63105, -34.8546, 0.67", "30.142, -8.20542, -37.4461, 0.67", "30.6233, -11.0756, -42.1704, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "23.6571, -14.9154, -26.491, 0.67", "23.0055, -16.9362, -26.8182, 0.67", "22.663, -18.23, -27.0515, 1.33", "21.8527, -21.7915, -27.7479, 0.67", "21.1864, -24.3989, -28.2929, 0.67", "20.4835, -26.9499, -28.8559, 0.67", "19.9075, -29.139, -29.3527, 0.67", "19.3657, -31.8722, -30.124, 1.33", "18.9882, -34.2057, -30.9267, 0.67", "18.7254, -36.0747, -31.7012, 0.67", "18.6089, -37.7305, -32.4367, 0.67", "18.5204, -39.4967, -33.2548, 1.33", "18.5551, -42.7603, -34.7178, 0.67", "18.6482, -44.7016, -35.62, 1.33", "18.765, -46.6688, -36.5217, 0.67", "18.8868, -48.5304, -37.3471, 0.67", "18.8656, -50.7739, -38.3266, 0.67", "18.6021, -54.4358, -39.8294, 0.67", "18.3309, -56.4093, -40.5681, 0.67", "17.8149, -58.8948, -41.6417, 2.0", "17.2237, -61.4327, -42.907, 0.67", "16.5691, -64.036, -44.3181, 0.67", "15.7682, -67.4041, -46.2437, 0.67", "15.0325, -70.2546, -47.943, 1.33", "14.2147, -73.9016, -49.9932, 0.67", "13.743, -76.5361, -51.6243, 0.67", "13.5589, -77.6054, -52.3349, 1.33", "13.3568, -79.0614, -53.3263, 0.67", "13.1393, -80.7925, -54.5577, 0.67", "12.9637, -82.9732, -56.0396, 1.33", "12.5966, -86.7095, -58.2898, 0.33", "12.195, -88.7327, -59.4699, 0.67", "11.7139, -90.7598, -60.8646, 0.33", "11.3928, -92.4748, -62.1619, 0.33", "11.2122, -93.9212, -63.298, 0.67", "10.9933, -95.1062, -64.4029, 0.33", "10.7958, -96.2172, -65.4216, 1.33", "10.4786, -98.792, -68.0733, 0.33", "10.3746, -100.267, -70.0224, 0.33", "10.2793, -101.316, -71.5416, 0.67", "10.2603, -103.518, -74.7783, 0.33", "10.3105, -104.623, -76.3778, 0.33", "10.3964, -105.32, -77.3602, 1.33", "10.7513, -108.169, -81.1997, 0.33", "10.8764, -109.372, -82.8331, 0.33", "11.0129, -110.703, -84.5657, 0.33", "11.0986, -111.704, -85.7356, 2.0", "11.1168, -114.483, -88.7887, 0.33", "11.101, -114.788, -89.095, 0.33", "10.9521, -115.723, -89.9217, 0.67", "10.5901, -117.345, -91.6151, 0.33", "10.5229, -117.54, -91.8347, 1.33", "10.0636, -118.514, -92.9129, 0.33", "9.07974, -119.93, -94.4416, 0.67", "8.59383, -120.692, -95.3626, 0.33", "7.92891, -121.893, -97.1905, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "23.6571, -14.9154, -26.491, 0.67", "26.254, -22.0703, -42.6695, 0.67", "27.0907, -24.5365, -48.2515, 1.33", "28.9782, -31.5657, -63.4592, 0.33", "29.5085, -33.915, -68.2017, 1.33", "30.3889, -37.8365, -75.4883, 0.67", "30.8603, -39.6965, -78.863, 0.33", "31.3927, -41.8307, -82.1864, 0.33", "32.3313, -45.4313, -87.6256, 0.33", "32.7284, -47.5798, -89.8952, 0.67", "33.1568, -50.7375, -92.8316, 0.33", "33.9878, -56.611, -97.0664, 1.33", "34.4507, -59.3647, -98.7674, 0.67", "35.1612, -63.0687, -100.774, 0.33", "36.5101, -68.2943, -104.067, 0.67", "37.3752, -71.1523, -106.108, 0.33", "38.2678, -73.3522, -107.755, 1.33", "39.8866, -76.2944, -109.807, 0.33", "42.668, -79.9287, -112.492, 0.33", "48.4975, -86.1023, -117.116, 0.67", "50.3249, -87.8881, -118.511, 0.33", "53.7693, -91.326, -120.609, 0.67", "57.8685, -95.9587, -122.465, 0.67", "61.5514, -100.539, -123.519, 0.33", "63.4806, -103.344, -123.532, 1.33", "66.7198, -109.139, -122.78, 0.33", "70.3412, -116.703, -121.55, 1.33", "73.3758, -124.421, -120.263, 0.33", "74.1385, -126.522, -119.856, 1.33", "77.1026, -135.004, -118.26, 0.33", "78.5798, -139.251, -117.403, 0.33", "79.2307, -141.04, -117.06, 1.33", "81.6691, -147.56, -116.323, 0.33", "82.2448, -149.147, -116.128, 0.67", "84.3059, -154.907, -115.617, 0.33", "86.1322, -160.055, -115.679, 0.33", "86.8577, -162.201, -115.603, 1.33", "87.9627, -165.557, -115.304, 0.33", "88.2507, -166.573, -115.075, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "28.9686, 52.7335, 13.9479, 0.67", "30.3748, 53.904, 14.5818, 0.67", "33.1092, 56.1802, 15.8144, 0.67", "34.9322, 57.6977, 16.6361, 0.33", "35.3769, 58.0679, 16.8366, 0.67", "45.3871, 64.7548, 21.504, 0.67", "55.4324, 69.0709, 28.372, 0.67", "64.7845, 72.3349, 36.6539, 0.67", "75.1471, 74.2015, 44.1263, 0.67", "85.4784, 77.3602, 51.1968, 0.67", "95.0099, 81.6879, 58.755, 0.67", "103.765, 87.3332, 66.3822, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "28.9686, 52.7335, 13.9479, 0.67", "28.9513, 58.3234, 12.2653, 0.67", "28.9412, 61.5776, 11.2858, 0.67", "28.9328, 64.2805, 10.4722, 0.33", "28.9285, 65.6604, 10.0569, 0.67", "28.9103, 71.532, 8.28949, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "95.0035, -39.6202, -263.382, 0.33", "96.5876, -40.2177, -263.255, 0.33", "97.8289, -40.686, -263.156, 0.67" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "95.0035, -39.6202, -263.382, 0.33", "101.513, -38.4779, -266.571, 0.33", "102.867, -38.3239, -267.655, 1.33", "105.908, -37.8982, -270.522, 0.33", "108.265, -37.4566, -272.934, 0.33", "109.469, -37.1839, -274.174, 1.33", "112.131, -36.5233, -277.039, 0.33", "117.834, -35.1465, -283.694, 0.33", "118.948, -34.9587, -285.213, 0.33", "119.808, -34.867, -286.438, 0.67", "121.36, -34.8369, -288.468, 0.33", "123.209, -34.9573, -290.695, 0.67", "126.426, -35.2146, -294.095, 0.33", "128.535, -35.3314, -296.139, 1.33", "131.225, -35.4793, -298.896, 0.33", "132.623, -35.4764, -300.42, 0.67", "137.962, -34.9395, -306.745, 0.33", "139.131, -34.7147, -308.136, 0.67", "142.478, -33.4269, -312.889, 0.33", "143.092, -33.1159, -313.853, 0.33", "144.664, -32.3067, -316.506, 1.33", "146.883, -31.1955, -320.147, 0.33", "147.719, -30.7359, -321.33, 1.33", "152.918, -27.9347, -328.069, 0.33", "154.186, -27.2399, -329.633, 1.33", "157.447, -25.5886, -333.626, 0.33", "158.176, -25.2449, -334.496, 0.67", "161.33, -23.6889, -338.048, 0.67", "162.323, -23.2035, -339.093, 0.67" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-7.88972, 376.915, 41.4145, 1.33", "-18.2106, 392.768, 42.0674, 0.67", "-21.8009, 397.885, 43.2817, 0.67", "-27.3744, 405.857, 45.268, 0.67", "-32.2548, 412.657, 46.9602, 0.67", "-40.6932, 424.44, 49.8386, 0.67", "-46.4602, 432.67, 51.7727, 0.67", "-53.6723, 441.808, 55.248, 1.33", "-57.4971, 446.784, 57.2004, 0.67", "-58.9038, 448.643, 58.2122, 0.67", "-60.6889, 451.106, 60.0213, 0.67", "-61.7098, 452.799, 61.475, 0.67", "-65.4529, 460.038, 67.5261, 0.67", "-68.5701, 467.227, 73.4447, 0.67", "-71.4549, 475.518, 80.5996, 0.67", "-73.3847, 482.628, 86.5609, 0.67", "-74.2422, 486.159, 89.4399, 0.67", "-75.4038, 492.063, 93.6351, 0.67", "-75.5233, 493.199, 94.3181, 0.67", "-75.6115, 498.586, 97.5971, 0.67", "-75.5822, 502.253, 98.8788, 0.67", "-75.3701, 504.192, 99.3468, 0.33", "-74.24, 509.429, 100.931, 0.67", "-72.7196, 523.384, 106.383, 0.67", "-73.3948, 536.958, 112.872, 0.67", "-74.0089, 550.157, 120.096, 0.67" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-7.88972, 376.915, 41.4145, 1.33", "-6.5062, 380.288, 37.8956, 0.67", "-4.84434, 384.837, 33.003, 0.67", "-3.01003, 390.302, 26.572, 0.67", "-1.37732, 394.707, 20.7631, 0.67", "0.112664, 398.756, 15.0334, 0.67", "1.95862, 403.766, 7.88512, 0.67", "3.02543, 406.698, 3.51542, 0.67", "5.40663, 412.493, -5.50862, 1.33", "7.34886, 416.978, -12.9095, 1.33", "8.34619, 419.353, -17.2314, 0.67", "8.80099, 420.529, -19.3578, 1.33", "9.89105, 423.182, -24.0688, 0.67", "10.797, 425.221, -27.3055, 1.33", "11.5986, 427.055, -29.9077, 1.33", "14.8032, 435.206, -40.4335, 0.67", "16.2483, 438.473, -44.5871, 1.33", "17.0815, 440.229, -46.798, 0.67", "18.4667, 443.368, -50.193, 0.67", "19.1864, 444.868, -51.7207, 0.67", "19.8105, 445.98, -52.7819, 1.33", "23.9378, 452.281, -57.9452, 0.67", "24.9585, 453.825, -59.1407, 1.33", "27.901, 458.091, -62.8363, 0.67" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "53.3875, 54.1364, -154.837, 0.67", "56.9814, 54.7898, -154.284, 0.33", "57.1925, 54.8284, -154.392, 0.67", "58.7735, 55.1587, -155.32, 0.33", "59.0643, 55.2328, -155.554, 0.67", "60.7122, 55.6756, -156.97, 0.33", "61.2706, 55.8333, -157.474, 1.33", "63.3194, 56.4329, -159.575, 0.33", "63.6538, 56.5358, -159.928, 1.33", "66.4135, 57.3726, -162.775, 0.33", "66.5528, 57.4171, -162.915, 1.33", "68.695, 58.2192, -165.181, 0.33", "68.8783, 58.2937, -165.38, 0.67", "70.9772, 59.1866, -167.623, 0.33", "72.1971, 59.7111, -168.925, 0.67", "73.2569, 60.1878, -170.022, 0.33", "75.4543, 61.2294, -172.388, 0.67", "76.1669, 61.6146, -173.225, 0.33", "76.7543, 61.9696, -173.993, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "53.3875, 54.1364, -154.837, 0.67", "49.7408, 58.8533, -161.255, 1.33", "48.0853, 60.8718, -163.897, 0.33", "47.6395, 61.4491, -164.67, 1.33", "45.1109, 65.5595, -170.903, 0.33", "44.6405, 66.5393, -172.525, 0.67", "43.8384, 68.6597, -176.128, 0.33", "43.5884, 69.4021, -177.409, 0.33", "42.9295, 72.0998, -182.342, 1.33", "42.2195, 77.297, -192.368, 0.33", "42.3323, 79.6012, -197.249, 0.67", "42.4706, 80.453, -199.113, 0.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "30.6233, -11.0756, -42.1704, 0.67", "25.8973, -12.8968, -47.7619, 0.67", "22.9424, -14.1476, -51.1243, 0.67", "19.4252, -15.6049, -54.8213, 0.67", "17.6198, -16.2708, -56.6533, 1.33", "13.2354, -17.7858, -60.9121, 0.67", "10.8497, -18.666, -63.2106, 0.33", "8.34895, -19.6793, -65.3982, 0.33", "6.69007, -20.2575, -67.1543, 0.67", "5.25565, -20.8496, -69.191, 0.33", "4.29835, -21.3521, -70.7601, 0.67", "3.36289, -22.1232, -72.6416, 0.67", "2.077, -23.7981, -75.924, 0.67", "1.21099, -26.0427, -79.0864, 0.67", "0.81919, -28.3734, -81.4356, 1.33", "0.626175, -30.5625, -83.0337, 0.67", "0.332018, -33.907, -84.9246, 0.67", "-0.151208, -37.0039, -86.3612, 0.67", "-0.864964, -40.5316, -87.7204, 0.33", "-2.039, -44.1677, -89.2814, 0.33", "-3.15917, -46.8126, -90.578, 0.33", "-5.33542, -50.9477, -93.311, 0.33", "-7.47717, -54.3428, -96.0801, 1.33", "-8.86396, -56.443, -98.0747, 0.33", "-11.9385, -60.9226, -102.737, 0.33", "-13.7319, -63.4663, -105.692, 1.33", "-16.2155, -67.0542, -110.146, 0.33", "-16.9059, -68.0411, -111.577, 1.33", "-18.6592, -70.5973, -115.762, 0.33", "-18.8847, -70.9431, -116.415, 0.67", "-19.7557, -72.3507, -119.495, 0.33", "-20.3775, -73.2232, -121.924, 0.67", "-21.5079, -74.7067, -126.284, 0.33", "-21.786, -74.9997, -127.306, 0.67", "-22.8928, -75.8642, -130.308, 0.67", "-23.4382, -76.2711, -131.705, 0.67", "-24.6827, -77.0915, -134.384, 0.33", "-25.2436, -77.5536, -135.575, 0.67", "-26.3818, -78.6813, -137.271, 0.33", "-28.7505, -81.0277, -140.203, 0.33" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "30.6233, -11.0756, -42.1704, 0.67", "32.2823, -10.9527, -43.9736, 2.67", "36.2742, -10.3973, -48.1552, 0.67", "37.7769, -10.1901, -49.8544, 0.67", "40.6455, -10.0407, -53.5418, 0.67", "42.8729, -10.1391, -56.7269, 0.67", "51.4608, -11.1819, -69.427, 1.33", "55.319, -11.7621, -75.832, 0.67", "56.949, -11.9948, -78.7174, 0.67", "59.9756, -12.4131, -83.9427, 1.33", "62.8725, -12.9266, -88.6273, 0.67", "66.1499, -13.7576, -93.8521, 1.33", "70.1487, -16.6353, -102.675, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "28.9103, 71.532, 8.28949, 0.33", "26.9837, 69.3063, 8.36782, 0.33", "20.8394, 60.9329, 10.7874, 0.33", "14.081, 52.9961, 13.035, 0.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "28.9103, 71.532, 8.28949, 0.33", "27.7214, 72.0756, 7.06701, 0.33", "27.1068, 72.3567, 6.43499, 0.67", "22.2903, 74.4088, -0.642503, 0.67", "18.0802, 77.9803, -7.4997, 0.67", "14.6821, 81.7591, -14.6882, 0.67", "10.9349, 84.6047, -22.1288, 0.67", "7.84006, 86.5219, -30.1442, 0.67", "4.58674, 88.1926, -38.1521, 0.67", "0.883981, 90.953, -45.6468, 0.67", "-1.79158, 94.6342, -53.1828, 0.67", "-3.32678, 99.2678, -60.509, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-74.0089, 550.157, 120.096, 0.67", "-76.2956, 556.653, 123.208, 0.67", "-77.9593, 562.662, 127.48, 0.67", "-79.9786, 568.25, 132.15, 0.67", "-80.4629, 574.615, 136.195, 0.67", "-80.4426, 581.395, 139.533, 0.67", "-81.6574, 588.609, 141.432, 0.67" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-74.0089, 550.157, 120.096, 0.67", "-77.3932, 560.264, 125.174, 0.67", "-79.7894, 571.298, 128.62, 0.67", "-84.406, 582.073, 130.026, 0.67", "-90.1535, 592.362, 129.332, 0.67", "-94.2277, 603.437, 128.986, 0.67", "-98.2022, 614.551, 129.253, 0.67" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "27.901, 458.091, -62.8363, 0.67", "28.9206, 459.698, -64.6801, 0.67", "31.4399, 463.85, -69.2523, 0.67", "33.0441, 466.465, -72.3705, 0.67", "33.631, 467.564, -73.6926, 0.33", "33.9531, 468.193, -74.4047, 1.33", "35.622, 471.42, -77.9631, 0.33", "35.8878, 471.949, -78.506, 0.33", "37.1733, 474.604, -80.7186, 1.33", "38.4663, 477.301, -82.7791, 0.67", "39.5387, 479.517, -84.2623, 0.67", "40.7403, 481.912, -85.6165, 1.33", "42.0653, 484.237, -86.6668, 0.67", "43.2527, 485.995, -87.4435, 0.67", "44.1559, 487.072, -87.8791, 0.67", "45.4568, 488.422, -88.4345, 0.33", "47.5275, 490.439, -89.3929, 0.33", "48.2752, 491.103, -89.7356, 0.33", "52.9259, 494.667, -92.2389, 0.67", "54.7815, 495.995, -93.3561, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "27.901, 458.091, -62.8363, 0.67", "29.8701, 461.305, -65.0801, 0.67", "31.6169, 464.416, -66.8208, 0.67", "32.2892, 465.657, -67.1168, 0.67", "32.9638, 466.993, -67.3666, 1.33", "33.5492, 468.188, -67.5397, 0.67", "33.9234, 468.991, -67.6739, 0.67", "34.6332, 470.475, -67.7433, 0.67", "36.345, 474.252, -67.7098, 0.67", "37.9418, 477.876, -67.903, 0.67", "38.529, 479.189, -68.0341, 0.67", "39.4514, 481.297, -68.3213, 0.67", "40.2496, 483.303, -68.6505, 0.67", "40.7158, 484.436, -68.8745, 0.67", "41.5913, 486.88, -69.4022, 0.67", "41.9444, 487.902, -69.5149, 0.67", "42.3642, 489.224, -69.6441, 0.67", "42.7641, 490.642, -69.7028, 0.67", "43.1767, 492.834, -69.8526, 0.67", "43.4309, 494.37, -69.9303, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "70.1487, -16.6353, -102.675, 0.67", "72.5412, -18.4569, -104.818, 1.33", "74.4221, -20.3138, -106.681, 0.67", "76.1745, -22.7029, -108.874, 1.33", "76.7903, -23.6281, -109.749, 1.33", "78.1712, -25.9688, -111.975, 0.67", "78.9338, -27.4215, -113.453, 0.67", "79.9634, -29.5758, -116.288, 2.0", "80.9444, -31.4013, -119.092, 0.33", "81.9254, -32.7121, -121.51, 0.33", "82.4282, -33.0317, -122.802, 0.33", "83.6866, -33.2645, -126.036, 1.33", "86.589, -33.0205, -132.272, 0.67", "87.9738, -32.7743, -134.988, 0.67", "89.5792, -32.4536, -137.856, 1.33", "94.3908, -31.494, -146.383, 1.33", "97.9114, -30.899, -152.53, 1.33", "103.338, -29.9592, -161.902, 0.67", "105.212, -29.6873, -165.11, 0.67", "106.347, -29.5912, -167.112, 0.67", "108.186, -29.5528, -170.446, 0.67", "110.209, -29.7434, -173.754, 2.0", "113.251, -30.0203, -178.641, 0.67", "114.591, -30.2521, -180.732, 0.67", "117.562, -30.8862, -184.998, 1.33", "122.125, -31.8293, -190.953, 0.33", "124.119, -32.2604, -193.068, 1.33", "129.593, -33.3975, -197.477, 0.67", "132.215, -34.0229, -198.958, 0.33", "134.169, -34.4064, -199.562, 0.33", "137.289, -34.8876, -199.752, 1.33", "141.018, -35.3437, -199.248, 0.67", "145.958, -35.8095, -198.112, 0.67", "148.147, -36.0032, -197.367, 1.33", "152.592, -36.2923, -195.666, 0.33", "153.499, -36.3758, -195.296, 0.67", "156.628, -36.8755, -193.977, 0.33", "157.739, -37.1105, -193.493, 0.33", "159.065, -37.4737, -193.011, 0.33", "160.849, -37.9739, -192.651, 0.67", "162.8, -38.5964, -192.544, 0.33", "164.451, -39.1393, -192.765, 1.33", "167.957, -40.2994, -193.822, 0.33", "170.664, -41.0397, -194.891, 1.33", "173.431, -41.769, -196.359, 0.33", "174.073, -41.9177, -196.783, 0.67", "176.55, -42.4125, -199.06, 0.33", "177.066, -42.5092, -199.657, 0.67", "179.196, -42.9894, -202.992, 0.33", "180.444, -43.3781, -205.258, 0.33", "181.644, -43.7583, -207.62, 1.33", "183.959, -44.4501, -212.407, 0.33", "184.363, -44.5759, -213.302, 0.67", "185.627, -45.0117, -216.818, 0.33", "185.859, -45.1528, -217.988, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "70.1487, -16.6353, -102.675, 0.67", "73.0455, -19.4773, -103.017, 1.33", "77.3644, -23.9075, -104.535, 0.33", "78.4635, -24.9702, -104.977, 1.33", "79.9214, -26.4403, -105.652, 0.33", "80.1763, -26.6855, -105.765, 0.67", "83.9655, -30.09, -107.679, 0.33", "85.5677, -31.4896, -108.813, 0.67", "87.1475, -32.8428, -110.234, 0.33", "88.3991, -33.7932, -111.329, 0.33", "90.2368, -35.0374, -112.872, 0.33", "92.846, -36.7124, -114.766, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.32678, 99.2678, -60.509, 0.67", "-5.89222, 102.42, -69.9017, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.32678, 99.2678, -60.509, 0.67", "-7.23514, 102.369, -67.1339, 0.67", "-10.343, 105.757, -74.036, 0.67", "-12.7392, 109.381, -81.1, 0.67", "-15.7136, 111.756, -88.468, 0.67", "-18.1137, 113.32, -96.2506, 0.67", "-21.7066, 114.008, -103.693, 0.67", "-24.2811, 115.77, -111.377, 0.67", "-26.2905, 116.718, -119.367, 0.67", "-27.9176, 116.401, -127.493, 0.67", "-30.38, 115.118, -135.307, 0.67", "-34.188, 112.81, -142.304, 0.67", "-37.7044, 109.517, -149.054, 0.67", "-40.8504, 106.233, -155.989, 0.67", "-42.575, 103.045, -163.448, 0.67", "-44.0435, 100.231, -171.11, 0.67", "-46.8627, 98.0948, -178.611, 0.67", "-49.0953, 94.3187, -185.649, 0.67", "-51.6103, 89.0017, -191.496, 0.67", "-54.4523, 82.2154, -195.323, 0.67", "-59.3156, 76.0841, -198.067, 0.67", "-63.3188, 69.4093, -200.93, 0.67", "-65.9665, 62.0696, -203.74, 0.67", "-68.33, 54.6751, -206.658, 0.67", "-70.7058, 46.9772, -208.626, 0.67", "-73.6734, 39.2331, -208.631, 0.67", "-76.6385, 31.5086, -208.068, 0.67", "-79.9958, 24.088, -206.506, 0.67", "-82.7351, 16.9872, -203.211, 0.67", "-84.3799, 10.4527, -198.377, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-98.2022, 614.551, 129.253, 0.67", "-100.899, 618.274, 136.484, 0.67" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-98.2022, 614.551, 129.253, 0.67", "-98.5032, 622.206, 124.124, 0.67" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "43.4309, 494.37, -69.9303, 0.67", "41.653, 496.252, -78.2811, 0.33", "41.3892, 496.532, -79.5202, 0.67" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "43.4309, 494.37, -69.9303, 0.67", "46.9383, 497.092, -74.4206, 0.67", "50.8337, 500.115, -79.4078, 0.67" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_18", "apic_1", "axon_1", "apic_20", "apic_19", "apic_17", "apic_2", "apic_26", "apic_21", "apic_16", "apic_3", "apic_25", "apic_22", "apic_5", "apic_4", "apic_24", "apic_23", "apic_11", "apic_6", "apic_15", "apic_12", "apic_10", "apic_7", "apic_14", "apic_13", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_40", "dend_37", "dend_20", "dend_15", "dend_0", "apic_18", "apic_1", "dend_48", "dend_41", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_16", "dend_12", "dend_1", "apic_20", "apic_19", "apic_17", "apic_2", "dend_43", "dend_42", "dend_23", "dend_22", "dend_19", "dend_18", "dend_14", "dend_13", "dend_11", "dend_2", "apic_26", "apic_21", "apic_16", "apic_3", "dend_47", "dend_44", "dend_27", "dend_24", "dend_10", "dend_3", "apic_25", "apic_22", "apic_5", "apic_4", "dend_46", "dend_45", "dend_33", "dend_28", "dend_26", "dend_25", "dend_9", "dend_4", "apic_24", "apic_23", "apic_11", "apic_6", "dend_35", "dend_34", "dend_32", "dend_29", "dend_8", "dend_5", "apic_15", "apic_12", "apic_10", "apic_7", "dend_31", "dend_30", "dend_7", "dend_6", "apic_14", "apic_13", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_18", "apic_1", "apic_20", "apic_19", "apic_17", "apic_2", "apic_26", "apic_21", "apic_16", "apic_3", "apic_25", "apic_22", "apic_5", "apic_4", "apic_24", "apic_23", "apic_11", "apic_6", "apic_15", "apic_12", "apic_10", "apic_7", "apic_14", "apic_13", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_18", "apic_1", "apic_20", "apic_19", "apic_17", "apic_2", "apic_26", "apic_21", "apic_16", "apic_3", "apic_25", "apic_22", "apic_5", "apic_4", "apic_24", "apic_23", "apic_11", "apic_6", "apic_15", "apic_12", "apic_10", "apic_7", "apic_14", "apic_13", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_40", "dend_37", "dend_20", "dend_15", "dend_0", "apic_18", "apic_1", "dend_48", "dend_41", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_16", "dend_12", "dend_1", "apic_20", "apic_19", "apic_17", "apic_2", "dend_43", "dend_42", "dend_23", "dend_22", "dend_19", "dend_18", "dend_14", "dend_13", "dend_11", "dend_2", "apic_26", "apic_21", "apic_16", "apic_3", "dend_47", "dend_44", "dend_27", "dend_24", "dend_10", "dend_3", "apic_25", "apic_22", "apic_5", "apic_4", "dend_46", "dend_45", "dend_33", "dend_28", "dend_26", "dend_25", "dend_9", "dend_4", "apic_24", "apic_23", "apic_11", "apic_6", "dend_35", "dend_34", "dend_32", "dend_29", "dend_8", "dend_5", "apic_15", "apic_12", "apic_10", "apic_7", "dend_31", "dend_30", "dend_7", "dend_6", "apic_14", "apic_13", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_20", "dend_15", "dend_0", "dend_48", "dend_41", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_16", "dend_12", "dend_1", "dend_43", "dend_42", "dend_23", "dend_22", "dend_19", "dend_18", "dend_14", "dend_13", "dend_11", "dend_2", "dend_47", "dend_44", "dend_27", "dend_24", "dend_10", "dend_3", "dend_46", "dend_45", "dend_33", "dend_28", "dend_26", "dend_25", "dend_9", "dend_4", "dend_35", "dend_34", "dend_32", "dend_29", "dend_8", "dend_5", "dend_31", "dend_30", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "apic_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22", "apic_23", "apic_24", "apic_25", "apic_26" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "axon_0", "axon_0", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "axon_1", "axon_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_2", "apic_2", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_3", "apic_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "apic_25", "apic_25", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_14", "apic_13", "apic_9", "apic_9", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_PC_75e11d6cee_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_48, id: dend_48, parent: dend_40
create dend_48
public dend_48
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_20, id: apic_20, parent: apic_18
create apic_20
public apic_20
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_17, id: apic_17, parent: apic_1
create apic_17
public apic_17
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_26, id: apic_26, parent: apic_20
create apic_26
public apic_26
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_16, id: apic_16, parent: apic_2
create apic_16
public apic_16
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_25, id: apic_25, parent: apic_21
create apic_25
public apic_25
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_15, id: apic_15, parent: apic_11
create apic_15
public apic_15
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_18, apic_1, axon_1, apic_20, apic_19, apic_17, apic_2, apic_26, apic_21, apic_16, apic_3, apic_25, apic_22, apic_5, apic_4, apic_24, apic_23, apic_11, apic_6, apic_15, apic_12, apic_10, apic_7, apic_14, apic_13, apic_9, apic_8]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_40, dend_37, dend_20, dend_15, dend_0, apic_18, apic_1, dend_48, dend_41, dend_39, dend_38, dend_36, dend_21, dend_17, dend_16, dend_12, dend_1, apic_20, apic_19, apic_17, apic_2, dend_43, dend_42, dend_23, dend_22, dend_19, dend_18, dend_14, dend_13, dend_11, dend_2, apic_26, apic_21, apic_16, apic_3, dend_47, dend_44, dend_27, dend_24, dend_10, dend_3, apic_25, apic_22, apic_5, apic_4, dend_46, dend_45, dend_33, dend_28, dend_26, dend_25, dend_9, dend_4, apic_24, apic_23, apic_11, apic_6, dend_35, dend_34, dend_32, dend_29, dend_8, dend_5, apic_15, apic_12, apic_10, apic_7, dend_31, dend_30, dend_7, dend_6, apic_14, apic_13, apic_9, apic_8]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_18, apic_1, apic_20, apic_19, apic_17, apic_2, apic_26, apic_21, apic_16, apic_3, apic_25, apic_22, apic_5, apic_4, apic_24, apic_23, apic_11, apic_6, apic_15, apic_12, apic_10, apic_7, apic_14, apic_13, apic_9, apic_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_18, apic_1, apic_20, apic_19, apic_17, apic_2, apic_26, apic_21, apic_16, apic_3, apic_25, apic_22, apic_5, apic_4, apic_24, apic_23, apic_11, apic_6, apic_15, apic_12, apic_10, apic_7, apic_14, apic_13, apic_9, apic_8]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_40, dend_37, dend_20, dend_15, dend_0, apic_18, apic_1, dend_48, dend_41, dend_39, dend_38, dend_36, dend_21, dend_17, dend_16, dend_12, dend_1, apic_20, apic_19, apic_17, apic_2, dend_43, dend_42, dend_23, dend_22, dend_19, dend_18, dend_14, dend_13, dend_11, dend_2, apic_26, apic_21, apic_16, apic_3, dend_47, dend_44, dend_27, dend_24, dend_10, dend_3, apic_25, apic_22, apic_5, apic_4, dend_46, dend_45, dend_33, dend_28, dend_26, dend_25, dend_9, dend_4, apic_24, apic_23, apic_11, apic_6, dend_35, dend_34, dend_32, dend_29, dend_8, dend_5, apic_15, apic_12, apic_10, apic_7, dend_31, dend_30, dend_7, dend_6, apic_14, apic_13, apic_9, apic_8]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_40, dend_37, dend_20, dend_15, dend_0, dend_48, dend_41, dend_39, dend_38, dend_36, dend_21, dend_17, dend_16, dend_12, dend_1, dend_43, dend_42, dend_23, dend_22, dend_19, dend_18, dend_14, dend_13, dend_11, dend_2, dend_47, dend_44, dend_27, dend_24, dend_10, dend_3, dend_46, dend_45, dend_33, dend_28, dend_26, dend_25, dend_9, dend_4, dend_35, dend_34, dend_32, dend_29, dend_8, dend_5, dend_31, dend_30, dend_7, dend_6]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_26]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_23]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_25]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_24]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_77
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_40, dend_40, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, axon_0, axon_0, apic_18, apic_18, apic_1, apic_1, apic_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, axon_1, axon_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_2, apic_2, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_3, apic_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_14, apic_13, apic_9, apic_9, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999999863085758)
    connect dend_40(0), soma_0(0.4999999863085758)
    connect dend_37(0), soma_0(0.4999999863085758)
    connect dend_20(0), soma_0(0.4999999863085758)
    connect dend_15(0), soma_0(0.4999999863085758)
    connect dend_0(0), soma_0(0.4999999863085758)
    connect axon_0(0), soma_0(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_48(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_20(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_17(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_26(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_16(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_25(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_15(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 7.22098, 2.72386, 3.88091, 2.87911 ) }
    soma_0 { pt3dadd( 6.5647, 2.4169, 3.51376, 4.97851 ) }
    soma_0 { pt3dadd( 5.90842, 2.10994, 3.1466, 7.50231 ) }
    soma_0 { pt3dadd( 5.25215, 1.80299, 2.77945, 8.67807 ) }
    soma_0 { pt3dadd( 4.59587, 1.49603, 2.4123, 9.84534 ) }
    soma_0 { pt3dadd( 3.93959, 1.18907, 2.04514, 11.0126 ) }
    soma_0 { pt3dadd( 3.28331, 0.882116, 1.67799, 11.7795 ) }
    soma_0 { pt3dadd( 2.62704, 0.575159, 1.31084, 12.3274 ) }
    soma_0 { pt3dadd( 1.97076, 0.268202, 0.943684, 12.8754 ) }
    soma_0 { pt3dadd( 1.31448, -0.0387556, 0.576531, 13.4174 ) }
    soma_0 { pt3dadd( 0.658205, -0.345713, 0.209378, 13.8883 ) }
    soma_0 { pt3dadd( 0.00192767, -0.65267, -0.157776, 14.0289 ) }
    soma_0 { pt3dadd( -0.65435, -0.959627, -0.524929, 14.0532 ) }
    soma_0 { pt3dadd( -1.31063, -1.26658, -0.892082, 14.0774 ) }
    soma_0 { pt3dadd( -1.9669, -1.57354, -1.25924, 14.1016 ) }
    soma_0 { pt3dadd( -2.62318, -1.8805, -1.62639, 13.7441 ) }
    soma_0 { pt3dadd( -3.27946, -2.18746, -1.99354, 12.6408 ) }
    soma_0 { pt3dadd( -3.93574, -2.49441, -2.3607, 11.3042 ) }
    soma_0 { pt3dadd( -4.59201, -2.80137, -2.72785, 9.91926 ) }
    soma_0 { pt3dadd( -5.24829, -3.10833, -3.095, 7.85947 ) }
    soma_0 { pt3dadd( -5.90457, -3.41528, -3.46216, 4.30061 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -3.79698, 5.47391, -3.55744, 2.0 ) }
    apic_0 { pt3dadd( -4.63396, 6.46586, -4.29917, 2.0 ) }
    apic_0 { pt3dadd( -7.54087, 13.506, -3.91271, 2.0 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 24/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -3.61406, 2.53596, -5.88276, 2.0 ) }
    dend_40 { pt3dadd( -6.58257, 4.13232, -10.2702, 2.0 ) }
    dend_40 { pt3dadd( 2.33194, 7.62197, -22.8939, 2.0 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -3.69004, -0.304521, -6.20658, 1.33 ) }
    dend_37 { pt3dadd( -7.70849, -0.849276, -12.3444, 1.33 ) }
    dend_37 { pt3dadd( -11.3865, -2.10988, -12.2925, 1.33 ) }
    dend_37 { pt3dadd( -16.9874, -4.02953, -12.2133, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.21716, -1.61875, -6.3502, 2.67 ) }
    dend_20 { pt3dadd( 5.36797, -2.21966, -8.4691, 2.67 ) }
    dend_20 { pt3dadd( 11.9552, -1.94912, -10.5646, 2.0 ) }
    dend_20 { pt3dadd( 19.7569, -1.62871, -13.0465, 2.0 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.67148, 4.85544, -1.51472, 1.33 ) }
    dend_15 { pt3dadd( 6.40652, 4.65593, -1.43437, 1.33 ) }
    dend_15 { pt3dadd( 12.8622, 7.60456, -3.07996, 1.33 ) }
    dend_15 { pt3dadd( 18.4562, 10.1596, -4.50592, 1.33 ) }
    dend_15 { pt3dadd( 21.6099, 11.6001, -5.30981, 1.33 ) }
    dend_15 { pt3dadd( 24.0494, 12.7143, -5.93166, 1.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 41/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.94026, 2.78526, 7.62667, 1.33 ) }
    dend_0 { pt3dadd( 2.80353, 4.38885, 12.2892, 1.33 ) }
    dend_0 { pt3dadd( 5.38102, 7.08103, 9.60277, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -5.90457, -3.41528, -3.46216, 0.743173 ) }
    axon_0 { pt3dadd( -19.4918, -9.77036, -3.46216, 0.743173 ) }
    axon_0 { pt3dadd( -33.079, -16.1254, -3.46216, 0.743173 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 47/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -7.54087, 13.506, -3.91271, 2.0 ) }
    apic_18 { pt3dadd( -6.4893, 16.4014, -7.20976, 0.67 ) }
    apic_18 { pt3dadd( -4.99614, 20.5128, -11.8914, 1.33 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 50/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -7.54087, 13.506, -3.91271, 2.0 ) }
    apic_1 { pt3dadd( -10.8114, 16.4321, -4.21373, 2.0 ) }
    apic_1 { pt3dadd( -14.2147, 19.477, -4.52697, 2.0 ) }
    apic_1 { pt3dadd( -16.473, 21.4974, -4.73481, 2.0 ) }
    // Section: dend_48, id: dend_48, parent: dend_40 (entry count 54/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 2.33194, 7.62197, -22.8939, 2.0 ) }
    dend_48 { pt3dadd( 11.7904, 6.42976, -32.8119, 0.67 ) }
    dend_48 { pt3dadd( 13.224, 6.34172, -34.0537, 1.33 ) }
    dend_48 { pt3dadd( 15.8029, 6.15442, -36.2342, 0.67 ) }
    dend_48 { pt3dadd( 17.3402, 6.05274, -37.4798, 1.33 ) }
    dend_48 { pt3dadd( 20.8181, 5.9492, -40.2259, 0.67 ) }
    dend_48 { pt3dadd( 22.4984, 5.94498, -41.4696, 1.33 ) }
    dend_48 { pt3dadd( 24.1187, 6.12753, -42.4255, 0.67 ) }
    dend_48 { pt3dadd( 29.0326, 7.15432, -45.8465, 0.67 ) }
    dend_48 { pt3dadd( 30.1043, 7.51582, -46.7829, 0.67 ) }
    dend_48 { pt3dadd( 32.0299, 8.36075, -48.8112, 1.33 ) }
    dend_48 { pt3dadd( 33.5986, 9.3122, -50.7905, 1.33 ) }
    dend_48 { pt3dadd( 36.3142, 11.2948, -55.2624, 0.67 ) }
    dend_48 { pt3dadd( 37.3204, 12.1091, -57.2233, 0.67 ) }
    dend_48 { pt3dadd( 39.6596, 14.2834, -62.2304, 1.33 ) }
    dend_48 { pt3dadd( 40.9693, 15.6246, -65.5669, 0.67 ) }
    dend_48 { pt3dadd( 42.0221, 16.7904, -68.5547, 1.33 ) }
    dend_48 { pt3dadd( 45.0486, 20.38, -77.8028, 1.33 ) }
    dend_48 { pt3dadd( 46.7395, 22.4835, -82.9875, 0.33 ) }
    dend_48 { pt3dadd( 47.157, 23.1142, -84.4629, 1.33 ) }
    dend_48 { pt3dadd( 48.5466, 25.4936, -89.3459, 0.33 ) }
    dend_48 { pt3dadd( 48.959, 26.2614, -90.8776, 0.33 ) }
    dend_48 { pt3dadd( 50.3139, 28.9702, -96.072, 2.0 ) }
    dend_48 { pt3dadd( 50.8879, 30.3372, -98.3081, 0.33 ) }
    dend_48 { pt3dadd( 52.1813, 33.4024, -102.96, 1.33 ) }
    dend_48 { pt3dadd( 53.4984, 35.9651, -106.936, 0.67 ) }
    dend_48 { pt3dadd( 55.166, 38.4683, -111.123, 1.33 ) }
    dend_48 { pt3dadd( 56.5603, 40.1386, -114.232, 0.33 ) }
    dend_48 { pt3dadd( 57.334, 40.8717, -115.749, 1.33 ) }
    dend_48 { pt3dadd( 59.004, 41.9887, -118.313, 0.33 ) }
    dend_48 { pt3dadd( 60.5001, 42.8213, -120.19, 0.33 ) }
    dend_48 { pt3dadd( 63.5238, 44.2808, -123.707, 0.67 ) }
    dend_48 { pt3dadd( 65.8006, 45.1785, -125.845, 0.67 ) }
    dend_48 { pt3dadd( 68.6701, 46.2147, -128.393, 1.33 ) }
    dend_48 { pt3dadd( 71.4079, 47.3406, -131.114, 0.33 ) }
    dend_48 { pt3dadd( 73.8073, 48.4622, -133.584, 0.33 ) }
    dend_48 { pt3dadd( 75.581, 49.4194, -135.407, 0.67 ) }
    dend_48 { pt3dadd( 77.5812, 50.5193, -137.303, 0.33 ) }
    dend_48 { pt3dadd( 78.7275, 51.0532, -138.385, 0.33 ) }
    dend_48 { pt3dadd( 81.2244, 52.0481, -140.608, 0.67 ) }
    dend_48 { pt3dadd( 82.9292, 52.7092, -142.276, 0.33 ) }
    dend_48 { pt3dadd( 85.5551, 53.6294, -144.625, 2.0 ) }
    dend_48 { pt3dadd( 87.8418, 54.3709, -146.762, 0.33 ) }
    dend_48 { pt3dadd( 89.0053, 54.7077, -147.839, 0.33 ) }
    dend_48 { pt3dadd( 89.3274, 54.7943, -148.119, 0.67 ) }
    dend_48 { pt3dadd( 92.8281, 55.7077, -150.853, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 94.127, 56.0827, -151.846, 1.33 ) }
    dend_48 { pt3dadd( 96.5729, 56.8729, -153.399, 0.33 ) }
    dend_48 { pt3dadd( 99.6695, 57.8919, -155.12, 0.33 ) }
    dend_48 { pt3dadd( 101.72, 58.6073, -156.106, 1.33 ) }
    dend_48 { pt3dadd( 104.259, 59.3989, -157.24, 0.33 ) }
    dend_48 { pt3dadd( 105.185, 59.597, -157.923, 0.67 ) }
    dend_48 { pt3dadd( 108.561, 60.1486, -161.3, 0.33 ) }
    dend_48 { pt3dadd( 109.185, 60.2328, -162.053, 0.67 ) }
    dend_48 { pt3dadd( 110.977, 60.3682, -164.63, 0.33 ) }
    dend_48 { pt3dadd( 112.818, 60.3111, -167.461, 0.67 ) }
    dend_48 { pt3dadd( 120.203, 59.3823, -179.993, 0.33 ) }
    dend_48 { pt3dadd( 120.554, 59.2912, -180.621, 0.67 ) }
    dend_48 { pt3dadd( 120.959, 59.1175, -181.435, 0.33 ) }
    dend_48 { pt3dadd( 121.245, 58.9579, -181.991, 0.67 ) }
    dend_48 { pt3dadd( 123.048, 57.5769, -185.243, 0.33 ) }
    dend_48 { pt3dadd( 123.525, 57.1473, -185.594, 0.67 ) }
    dend_48 { pt3dadd( 125.402, 55.1186, -185.157, 0.33 ) }
    dend_48 { pt3dadd( 125.402, 55.1186, -185.157, 0.67 ) }
    dend_48 { pt3dadd( 126.827, 53.3393, -184.849, 0.33 ) }
    dend_48 { pt3dadd( 127.032, 53.0795, -184.816, 0.67 ) }
    dend_48 { pt3dadd( 128.165, 51.7518, -184.875, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 2.33194, 7.62197, -22.8939, 2.0 ) }
    dend_41 { pt3dadd( -0.930653, 8.26123, -25.0714, 1.33 ) }
    dend_41 { pt3dadd( -7.08159, 9.46642, -29.1766, 1.33 ) }
    dend_41 { pt3dadd( -10.7997, 10.1949, -31.658, 1.33 ) }
    dend_41 { pt3dadd( -14.6936, 10.9579, -34.2569, 1.33 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 26/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -16.9874, -4.02953, -12.2133, 1.33 ) }
    dend_39 { pt3dadd( -16.448, -4.87305, -15.8234, 0.67 ) }
    dend_39 { pt3dadd( -16.3318, -5.99992, -18.5606, 0.67 ) }
    dend_39 { pt3dadd( -16.5659, -7.00788, -21.0892, 0.67 ) }
    dend_39 { pt3dadd( -18.8162, -12.8517, -35.1967, 0.67 ) }
    dend_39 { pt3dadd( -19.4019, -14.0072, -37.8751, 0.67 ) }
    dend_39 { pt3dadd( -20.88, -16.3143, -43.1321, 0.67 ) }
    dend_39 { pt3dadd( -22.9588, -18.9065, -49.4651, 0.67 ) }
    dend_39 { pt3dadd( -25.5391, -21.692, -56.8584, 1.33 ) }
    dend_39 { pt3dadd( -26.2734, -22.4078, -58.6008, 0.67 ) }
    dend_39 { pt3dadd( -29.132, -24.9458, -63.7089, 1.33 ) }
    dend_39 { pt3dadd( -31.4676, -26.9787, -68.1213, 0.67 ) }
    dend_39 { pt3dadd( -32.8626, -28.3257, -70.9384, 1.33 ) }
    dend_39 { pt3dadd( -36.7817, -32.0768, -78.0319, 0.67 ) }
    dend_39 { pt3dadd( -38.9512, -34.345, -81.6914, 1.33 ) }
    dend_39 { pt3dadd( -41.2185, -36.5952, -85.3527, 0.67 ) }
    dend_39 { pt3dadd( -43.8332, -39.5252, -89.4177, 0.67 ) }
    dend_39 { pt3dadd( -46.6006, -43.2861, -93.6756, 1.33 ) }
    dend_39 { pt3dadd( -47.7715, -45.0818, -95.3719, 0.33 ) }
    dend_39 { pt3dadd( -49.6099, -47.7902, -97.6921, 1.33 ) }
    dend_39 { pt3dadd( -51.9484, -51.6106, -100.967, 0.67 ) }
    dend_39 { pt3dadd( -54.4133, -55.9596, -104.453, 1.33 ) }
    dend_39 { pt3dadd( -56.1336, -58.8293, -106.347, 0.67 ) }
    dend_39 { pt3dadd( -56.7482, -59.81, -107.023, 0.67 ) }
    dend_39 { pt3dadd( -58.6071, -62.5235, -109.083, 0.67 ) }
    dend_39 { pt3dadd( -59.9774, -64.1647, -110.534, 0.33 ) }
    dend_39 { pt3dadd( -63.577, -67.0885, -113.929, 2.0 ) }
    dend_39 { pt3dadd( -66.5644, -68.6703, -116.723, 0.33 ) }
    dend_39 { pt3dadd( -69.474, -70.0364, -119.642, 1.33 ) }
    dend_39 { pt3dadd( -71.1552, -70.8839, -121.472, 0.33 ) }
    dend_39 { pt3dadd( -73.6405, -72.2092, -124.43, 1.33 ) }
    dend_39 { pt3dadd( -74.8605, -72.798, -126.044, 0.33 ) }
    dend_39 { pt3dadd( -76.8538, -73.7616, -128.768, 0.33 ) }
    dend_39 { pt3dadd( -78.5912, -74.674, -131.13, 0.67 ) }
    dend_39 { pt3dadd( -80.7972, -75.8637, -134.388, 0.33 ) }
    dend_39 { pt3dadd( -83.7431, -77.331, -138.89, 1.33 ) }
    dend_39 { pt3dadd( -87.3739, -78.9567, -144.63, 0.33 ) }
    dend_39 { pt3dadd( -88.5024, -79.3513, -146.383, 1.33 ) }
    dend_39 { pt3dadd( -90.0043, -79.6234, -148.649, 0.33 ) }
    dend_39 { pt3dadd( -95.4214, -79.7794, -156.095, 0.33 ) }
    dend_39 { pt3dadd( -96.938, -79.6308, -158.077, 1.33 ) }
    dend_39 { pt3dadd( -101.376, -78.8923, -162.838, 0.33 ) }
    dend_39 { pt3dadd( -103.052, -78.6593, -164.403, 0.33 ) }
    dend_39 { pt3dadd( -106.01, -78.3261, -167.004, 0.33 ) }
    dend_39 { pt3dadd( -108.752, -78.1791, -169.054, 0.67 ) }
    dend_39 { pt3dadd( -113.796, -78.4038, -172.052, 2.0 ) }
    dend_39 { pt3dadd( -118.972, -78.8965, -174.972, 0.67 ) }
    dend_39 { pt3dadd( -124.82, -79.71, -177.764, 0.33 ) }
    dend_39 { pt3dadd( -125.679, -79.8867, -178.16, 0.67 ) }
    dend_39 { pt3dadd( -129.521, -81.0183, -179.812, 0.33 ) }
    dend_39 { pt3dadd( -130.646, -81.4438, -180.402, 0.67 ) }
    dend_39 { pt3dadd( -131.868, -82.0115, -181.12, 0.67 ) }
    dend_39 { pt3dadd( -133.878, -83.0606, -182.582, 0.33 ) }
    dend_39 { pt3dadd( -135.703, -83.974, -184.216, 0.67 ) }
    dend_39 { pt3dadd( -137.243, -84.8016, -186.122, 0.67 ) }
    dend_39 { pt3dadd( -141.745, -87.2252, -192.86, 0.33 ) }
    dend_39 { pt3dadd( -141.952, -87.3319, -193.202, 0.67 ) }
    dend_39 { pt3dadd( -143.041, -87.8434, -195.154, 0.33 ) }
    dend_39 { pt3dadd( -145.694, -88.813, -200.311, 1.33 ) }
    dend_39 { pt3dadd( -147.972, -89.3228, -205.195, 0.33 ) }
    dend_39 { pt3dadd( -148.448, -89.3517, -206.38, 0.67 ) }
    dend_39 { pt3dadd( -150.41, -89.3486, -211.349, 0.33 ) }
    dend_39 { pt3dadd( -151.494, -89.3265, -214.228, 1.33 ) }
    dend_39 { pt3dadd( -153.419, -89.209, -219.811, 0.33 ) }
    dend_39 { pt3dadd( -154.986, -88.8767, -224.569, 1.33 ) }
    dend_39 { pt3dadd( -158.288, -87.6392, -235.466, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 92/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.9874, -4.02953, -12.2133, 1.33 ) }
    dend_38 { pt3dadd( -15.4154, -5.7029, -14.9598, 1.33 ) }
    dend_38 { pt3dadd( -13.608, -7.73362, -18.5919, 1.33 ) }
    dend_38 { pt3dadd( -11.5278, -10.0994, -23.0926, 0.67 ) }
    dend_38 { pt3dadd( -10.3734, -11.5467, -25.8363, 0.67 ) }
    dend_38 { pt3dadd( -7.91035, -15.1094, -32.1223, 0.67 ) }
    dend_38 { pt3dadd( -5.06454, -19.7533, -39.8241, 0.67 ) }
    dend_38 { pt3dadd( -3.56551, -22.4798, -44.3472, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_38 { pt3dadd( -2.53151, -24.6646, -48.2045, 0.33 ) }
    dend_38 { pt3dadd( -1.27081, -27.1978, -53.0893, 1.33 ) }
    dend_38 { pt3dadd( -0.422074, -28.4931, -56.2775, 1.33 ) }
    dend_38 { pt3dadd( 0.0438972, -28.9576, -57.894, 0.67 ) }
    dend_38 { pt3dadd( 2.19685, -29.9573, -64.1714, 0.67 ) }
    dend_38 { pt3dadd( 5.67235, -31.0404, -72.6094, 1.33 ) }
    dend_38 { pt3dadd( 6.71876, -31.146, -74.9819, 0.67 ) }
    dend_38 { pt3dadd( 8.71895, -31.0089, -79.1595, 1.33 ) }
    dend_38 { pt3dadd( 10.1663, -30.8044, -81.927, 0.67 ) }
    dend_38 { pt3dadd( 11.2791, -30.5782, -84.4679, 0.33 ) }
    dend_38 { pt3dadd( 11.9176, -30.2055, -86.8443, 1.33 ) }
    dend_38 { pt3dadd( 13.1689, -28.711, -93.9061, 0.33 ) }
    dend_38 { pt3dadd( 13.2667, -28.3295, -95.5308, 1.33 ) }
    dend_38 { pt3dadd( 13.2261, -27.7266, -97.7729, 2.0 ) }
    dend_38 { pt3dadd( 12.262, -23.7839, -110.634, 1.33 ) }
    dend_38 { pt3dadd( 11.0255, -20.4596, -121.469, 0.33 ) }
    dend_38 { pt3dadd( 10.8823, -20.1732, -122.435, 0.67 ) }
    dend_38 { pt3dadd( 9.53983, -18.192, -129.922, 1.33 ) }
    dend_38 { pt3dadd( 8.16088, -16.7103, -136.485, 0.33 ) }
    dend_38 { pt3dadd( 8.00707, -16.6044, -137.106, 1.33 ) }
    dend_38 { pt3dadd( 4.21738, -15.3867, -150.345, 0.33 ) }
    dend_38 { pt3dadd( 3.65574, -15.4086, -152.072, 1.33 ) }
    dend_38 { pt3dadd( 1.9608, -15.6708, -157.263, 0.33 ) }
    dend_38 { pt3dadd( 1.68521, -15.6942, -158.182, 0.67 ) }
    dend_38 { pt3dadd( -0.0272208, -15.724, -163.939, 0.33 ) }
    dend_38 { pt3dadd( -1.15843, -15.67, -167.689, 1.33 ) }
    dend_38 { pt3dadd( -3.30222, -15.2081, -174.545, 0.33 ) }
    dend_38 { pt3dadd( -4.48325, -14.7481, -178.667, 1.33 ) }
    dend_38 { pt3dadd( -7.90732, -12.5313, -191.985, 0.33 ) }
    dend_38 { pt3dadd( -8.01515, -12.4402, -192.467, 0.67 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 30/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.7569, -1.62871, -13.0465, 2.0 ) }
    dend_36 { pt3dadd( 25.9909, 15.8874, -39.7498, 0.67 ) }
    dend_36 { pt3dadd( 27.0215, 19.8117, -44.8428, 0.67 ) }
    dend_36 { pt3dadd( 27.7459, 23.256, -48.841, 0.67 ) }
    dend_36 { pt3dadd( 28.3569, 26.3401, -52.1494, 1.33 ) }
    dend_36 { pt3dadd( 29.0994, 30.863, -56.6684, 0.67 ) }
    dend_36 { pt3dadd( 29.5184, 33.6987, -59.2425, 0.33 ) }
    dend_36 { pt3dadd( 29.8221, 42.3918, -63.9348, 0.67 ) }
    dend_36 { pt3dadd( 29.8336, 44.1439, -64.8581, 1.33 ) }
    dend_36 { pt3dadd( 29.6664, 47.9281, -66.8115, 0.67 ) }
    dend_36 { pt3dadd( 29.138, 53.0752, -69.8173, 2.0 ) }
    dend_36 { pt3dadd( 28.6086, 57.1205, -72.5456, 0.33 ) }
    dend_36 { pt3dadd( 28.023, 61.8405, -76.2351, 2.0 ) }
    dend_36 { pt3dadd( 27.3805, 67.653, -81.1749, 0.33 ) }
    dend_36 { pt3dadd( 27.1313, 70.3141, -83.6654, 0.33 ) }
    dend_36 { pt3dadd( 26.4159, 78.8489, -92.2757, 2.0 ) }
    dend_36 { pt3dadd( 25.9973, 86.6995, -100.84, 0.33 ) }
    dend_36 { pt3dadd( 25.8662, 90.0725, -104.674, 1.33 ) }
    dend_36 { pt3dadd( 25.817, 92.1133, -107.051, 0.33 ) }
    dend_36 { pt3dadd( 25.7987, 98.5989, -114.686, 1.33 ) }
    dend_36 { pt3dadd( 25.7535, 103.774, -120.802, 0.33 ) }
    dend_36 { pt3dadd( 25.7345, 105.29, -122.527, 0.67 ) }
    dend_36 { pt3dadd( 25.7896, 107.518, -124.91, 0.67 ) }
    dend_36 { pt3dadd( 26.0029, 112.915, -130.381, 0.33 ) }
    dend_36 { pt3dadd( 26.0938, 114.259, -131.617, 0.33 ) }
    dend_36 { pt3dadd( 26.5352, 118.005, -134.6, 0.67 ) }
    dend_36 { pt3dadd( 28.4148, 128.661, -141.995, 0.67 ) }
    dend_36 { pt3dadd( 30.303, 137.21, -147.292, 0.33 ) }
    dend_36 { pt3dadd( 30.7841, 138.809, -148.174, 0.67 ) }
    dend_36 { pt3dadd( 32.746, 143.842, -150.343, 0.33 ) }
    dend_36 { pt3dadd( 33.4732, 145.435, -150.911, 1.33 ) }
    dend_36 { pt3dadd( 35.4877, 149.009, -151.767, 0.33 ) }
    dend_36 { pt3dadd( 36.1382, 149.924, -151.722, 0.67 ) }
    dend_36 { pt3dadd( 38.6621, 152.928, -151.166, 0.33 ) }
    dend_36 { pt3dadd( 38.9744, 153.254, -151.145, 0.67 ) }
    dend_36 { pt3dadd( 41.3752, 155.183, -151.629, 0.33 ) }
    dend_36 { pt3dadd( 45.7538, 158.254, -153.451, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.7569, -1.62871, -13.0465, 2.0 ) }
    dend_21 { pt3dadd( 19.3109, -2.69614, -24.8247, 2.0 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 24.0494, 12.7143, -5.93166, 1.33 ) }
    dend_17 { pt3dadd( 29.1386, 12.2745, -12.4331, 0.67 ) }
    dend_17 { pt3dadd( 31.3535, 12.0968, -15.0045, 0.67 ) }
    dend_17 { pt3dadd( 34.4614, 11.7977, -18.6272, 0.67 ) }
    dend_17 { pt3dadd( 38.8747, 11.434, -23.2911, 0.67 ) }
    dend_17 { pt3dadd( 41.8226, 11.0457, -26.5477, 0.67 ) }
    dend_17 { pt3dadd( 45.4462, 10.4193, -30.5196, 0.67 ) }
    dend_17 { pt3dadd( 47.7708, 10.1303, -32.8748, 0.67 ) }
    dend_17 { pt3dadd( 51.1581, 9.69133, -36.233, 2.0 ) }
    dend_17 { pt3dadd( 56.1021, 9.36747, -41.0919, 0.67 ) }
    dend_17 { pt3dadd( 59.4517, 9.29015, -44.3153, 0.67 ) }
    dend_17 { pt3dadd( 60.9434, 9.24493, -45.7975, 0.67 ) }
    dend_17 { pt3dadd( 66.1154, 8.9255, -50.9522, 0.67 ) }
    dend_17 { pt3dadd( 66.9195, 8.8869, -51.6755, 1.33 ) }
    dend_17 { pt3dadd( 70.5779, 8.68237, -54.5957, 0.67 ) }
    dend_17 { pt3dadd( 73.0944, 8.54657, -56.3822, 0.67 ) }
    dend_17 { pt3dadd( 75.2196, 8.43375, -57.7731, 1.33 ) }
    dend_17 { pt3dadd( 79.6324, 7.95017, -60.6714, 0.67 ) }
    dend_17 { pt3dadd( 82.9103, 7.44765, -62.9024, 1.33 ) }
    dend_17 { pt3dadd( 85.2679, 7.10525, -64.5354, 0.67 ) }
    dend_17 { pt3dadd( 87.7877, 6.73521, -66.234, 2.0 ) }
    dend_17 { pt3dadd( 92.0689, 6.22814, -69.3854, 0.33 ) }
    dend_17 { pt3dadd( 96.1018, 5.7983, -72.5237, 1.33 ) }
    dend_17 { pt3dadd( 99.2013, 5.49071, -74.9658, 0.33 ) }
    dend_17 { pt3dadd( 99.669, 5.43449, -75.3485, 0.67 ) }
    dend_17 { pt3dadd( 100.892, 5.30267, -76.3937, 0.33 ) }
    dend_17 { pt3dadd( 103.422, 5.09667, -78.4586, 1.33 ) }
    dend_17 { pt3dadd( 107.231, 4.86579, -81.174, 0.33 ) }
    dend_17 { pt3dadd( 109.469, 4.798, -82.6149, 1.33 ) }
    dend_17 { pt3dadd( 112.838, 4.71464, -84.8088, 0.33 ) }
    dend_17 { pt3dadd( 116.877, 4.818, -87.6524, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_17 { pt3dadd( 118.832, 4.97131, -89.0777, 0.33 ) }
    dend_17 { pt3dadd( 120.261, 5.15969, -90.1737, 0.33 ) }
    dend_17 { pt3dadd( 122.649, 5.58164, -92.3603, 0.67 ) }
    dend_17 { pt3dadd( 126.612, 6.72015, -96.3226, 1.33 ) }
    dend_17 { pt3dadd( 128.792, 7.58136, -98.7691, 0.67 ) }
    dend_17 { pt3dadd( 130.306, 8.25107, -100.548, 0.33 ) }
    dend_17 { pt3dadd( 132.514, 9.4666, -103.365, 2.0 ) }
    dend_17 { pt3dadd( 137.294, 12.643, -109.715, 0.33 ) }
    dend_17 { pt3dadd( 139.826, 14.6337, -113.163, 0.67 ) }
    dend_17 { pt3dadd( 142.26, 16.8277, -116.401, 0.33 ) }
    dend_17 { pt3dadd( 142.78, 17.3607, -117.106, 0.67 ) }
    dend_17 { pt3dadd( 144.918, 19.8549, -120.054, 0.33 ) }
    dend_17 { pt3dadd( 145.308, 20.3752, -120.524, 0.67 ) }
    dend_17 { pt3dadd( 146.816, 22.6421, -121.944, 0.33 ) }
    dend_17 { pt3dadd( 147.01, 22.9034, -122.115, 0.67 ) }
    dend_17 { pt3dadd( 148.981, 25.625, -123.399, 0.33 ) }
    dend_17 { pt3dadd( 149.183, 25.8987, -123.507, 0.67 ) }
    dend_17 { pt3dadd( 151.512, 28.7877, -123.98, 0.33 ) }
    dend_17 { pt3dadd( 152.531, 30.0249, -124.075, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 19/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 24.0494, 12.7143, -5.93166, 1.33 ) }
    dend_16 { pt3dadd( 27.5821, 15.5144, -7.29055, 0.67 ) }
    dend_16 { pt3dadd( 29.4942, 16.944, -7.88759, 0.67 ) }
    dend_16 { pt3dadd( 31.5917, 18.657, -8.45657, 0.67 ) }
    dend_16 { pt3dadd( 33.7753, 20.4614, -8.95729, 0.67 ) }
    dend_16 { pt3dadd( 35.493, 21.9257, -9.3697, 0.67 ) }
    dend_16 { pt3dadd( 37.9896, 24.0812, -9.97507, 0.67 ) }
    dend_16 { pt3dadd( 39.3881, 25.4247, -10.1974, 0.33 ) }
    dend_16 { pt3dadd( 41.2026, 27.343, -10.5028, 0.67 ) }
    dend_16 { pt3dadd( 42.8008, 29.0951, -10.7603, 0.67 ) }
    dend_16 { pt3dadd( 44.265, 30.7512, -10.9835, 0.67 ) }
    dend_16 { pt3dadd( 44.8199, 31.4214, -11.0713, 0.33 ) }
    dend_16 { pt3dadd( 45.8997, 32.7903, -11.2222, 0.33 ) }
    dend_16 { pt3dadd( 47.3894, 34.6471, -11.3754, 0.67 ) }
    dend_16 { pt3dadd( 48.699, 36.2337, -11.4609, 0.33 ) }
    dend_16 { pt3dadd( 49.3725, 37.0806, -11.5409, 0.67 ) }
    dend_16 { pt3dadd( 51.0449, 39.0858, -11.6754, 0.33 ) }
    dend_16 { pt3dadd( 53.2222, 41.6486, -11.8425, 0.67 ) }
    dend_16 { pt3dadd( 54.724, 43.3797, -11.9537, 0.67 ) }
    dend_16 { pt3dadd( 55.8374, 44.6776, -12.0347, 0.33 ) }
    dend_16 { pt3dadd( 58.5084, 47.7179, -12.2233, 1.33 ) }
    dend_16 { pt3dadd( 60.2943, 49.694, -12.3516, 0.67 ) }
    dend_16 { pt3dadd( 62.2499, 51.7279, -12.4493, 0.33 ) }
    dend_16 { pt3dadd( 63.246, 52.6093, -12.4697, 1.33 ) }
    dend_16 { pt3dadd( 64.4522, 53.6819, -12.445, 0.33 ) }
    dend_16 { pt3dadd( 64.644, 53.8329, -12.4072, 0.67 ) }
    dend_16 { pt3dadd( 65.8834, 54.6383, -11.9314, 0.33 ) }
    dend_16 { pt3dadd( 67.4098, 55.5285, -11.3169, 0.67 ) }
    dend_16 { pt3dadd( 68.6152, 56.1589, -10.808, 0.33 ) }
    dend_16 { pt3dadd( 71.0331, 57.4539, -9.62863, 1.33 ) }
    dend_16 { pt3dadd( 74.414, 59.3103, -7.95505, 0.67 ) }
    dend_16 { pt3dadd( 76.8313, 60.6606, -7.07547, 0.67 ) }
    dend_16 { pt3dadd( 78.7031, 61.7513, -6.56206, 1.33 ) }
    dend_16 { pt3dadd( 80.6743, 62.8721, -6.30211, 0.33 ) }
    dend_16 { pt3dadd( 82.954, 64.1015, -6.3184, 1.33 ) }
    dend_16 { pt3dadd( 85.5406, 65.3747, -6.7733, 0.67 ) }
    dend_16 { pt3dadd( 89.6093, 67.3862, -8.20584, 0.33 ) }
    dend_16 { pt3dadd( 90.0542, 67.6044, -8.43328, 0.67 ) }
    dend_16 { pt3dadd( 92.0733, 68.5245, -9.73347, 0.33 ) }
    dend_16 { pt3dadd( 93.6246, 69.1582, -10.9129, 0.33 ) }
    dend_16 { pt3dadd( 94.7645, 69.5648, -11.8807, 1.33 ) }
    dend_16 { pt3dadd( 96.0671, 70.053, -12.9365, 0.33 ) }
    dend_16 { pt3dadd( 98.1801, 70.742, -14.1863, 0.67 ) }
    dend_16 { pt3dadd( 99.6786, 71.1871, -14.9521, 0.33 ) }
    dend_16 { pt3dadd( 100.766, 71.4869, -15.3759, 0.33 ) }
    dend_16 { pt3dadd( 101.225, 71.5701, -15.5339, 1.33 ) }
    dend_16 { pt3dadd( 104.261, 71.9695, -16.2835, 0.33 ) }
    dend_16 { pt3dadd( 106.177, 72.1722, -16.6288, 0.33 ) }
    dend_16 { pt3dadd( 106.656, 72.1807, -16.6484, 0.67 ) }
    dend_16 { pt3dadd( 107.857, 72.0754, -16.6407, 0.33 ) }
    dend_16 { pt3dadd( 108.394, 71.9817, -16.6133, 0.67 ) }
    dend_16 { pt3dadd( 109.847, 71.5087, -16.4614, 0.33 ) }
    dend_16 { pt3dadd( 110.486, 71.1826, -16.3454, 0.67 ) }
    dend_16 { pt3dadd( 112.13, 70.3674, -15.9594, 0.33 ) }
    dend_16 { pt3dadd( 112.695, 70.0834, -15.809, 0.67 ) }
    dend_16 { pt3dadd( 113.702, 69.4555, -15.4608, 0.33 ) }
    dend_16 { pt3dadd( 113.968, 69.2593, -15.3481, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 76/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.38102, 7.08103, 9.60277, 1.33 ) }
    dend_12 { pt3dadd( 11.2599, 5.29923, 9.69843, 0.67 ) }
    dend_12 { pt3dadd( 19.0986, 2.33355, 9.56924, 0.67 ) }
    dend_12 { pt3dadd( 21.803, 1.31358, 9.49881, 0.67 ) }
    dend_12 { pt3dadd( 24.5677, 0.27087, 9.42681, 0.67 ) }
    dend_12 { pt3dadd( 40.0052, -5.55151, 9.02474, 0.67 ) }
    dend_12 { pt3dadd( 44.0098, -7.06186, 8.92044, 0.67 ) }
    dend_12 { pt3dadd( 50.9263, -10.0492, 8.5188, 0.67 ) }
    dend_12 { pt3dadd( 54.5858, -12.0556, 8.07667, 0.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 85/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.38102, 7.08103, 9.60277, 1.33 ) }
    dend_1 { pt3dadd( 6.37936, 8.73201, 9.42984, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -33.079, -16.1254, -3.46216, 0.67 ) }
    axon_1 { pt3dadd( -46.6663, -22.4805, -3.46216, 0.67 ) }
    axon_1 { pt3dadd( -60.2535, -28.8356, -3.46216, 0.67 ) }
    // Section: apic_20, id: apic_20, parent: apic_18 (entry count 90/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -4.99614, 20.5128, -11.8914, 1.33 ) }
    apic_20 { pt3dadd( -2.32125, 18.6716, -19.2712, 0.67 ) }
    apic_20 { pt3dadd( -1.34491, 17.9997, -22.1902, 0.67 ) }
    apic_20 { pt3dadd( 0.874102, 16.3862, -28.773, 0.67 ) }
    apic_20 { pt3dadd( 1.89718, 15.539, -32.3668, 0.67 ) }
    apic_20 { pt3dadd( 4.82862, 12.5885, -44.7224, 0.67 ) }
    apic_20 { pt3dadd( 5.2341, 12.1715, -46.5423, 0.67 ) }
    apic_20 { pt3dadd( 6.24983, 11.0226, -51.5534, 0.67 ) }
    apic_20 { pt3dadd( 6.78706, 10.341, -54.3361, 1.33 ) }
    apic_20 { pt3dadd( 9.16521, 7.51246, -65.8162, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_20 { pt3dadd( 10.1724, 6.30974, -70.2023, 1.33 ) }
    apic_20 { pt3dadd( 12.8618, 2.88669, -79.289, 0.67 ) }
    apic_20 { pt3dadd( 13.7825, 1.81047, -82.0237, 1.33 ) }
    apic_20 { pt3dadd( 15.8112, -0.367445, -87.0868, 1.33 ) }
    apic_20 { pt3dadd( 16.9555, -1.65126, -89.7515, 0.67 ) }
    apic_20 { pt3dadd( 18.5581, -3.52795, -92.7719, 0.67 ) }
    apic_20 { pt3dadd( 21.7688, -8.09004, -100.471, 0.67 ) }
    apic_20 { pt3dadd( 22.9179, -10.3175, -104.202, 1.33 ) }
    apic_20 { pt3dadd( 23.2293, -10.933, -105.44, 1.33 ) }
    apic_20 { pt3dadd( 23.9856, -12.3567, -108.7, 0.67 ) }
    apic_20 { pt3dadd( 24.2977, -13.0055, -110.226, 0.67 ) }
    apic_20 { pt3dadd( 26.4014, -16.6304, -118.604, 0.67 ) }
    apic_20 { pt3dadd( 27.2303, -17.7413, -121.256, 1.33 ) }
    apic_20 { pt3dadd( 29.8599, -20.5878, -128.086, 0.33 ) }
    apic_20 { pt3dadd( 30.9198, -21.4843, -130.349, 1.33 ) }
    apic_20 { pt3dadd( 31.9143, -22.1311, -131.967, 0.67 ) }
    apic_20 { pt3dadd( 34.2545, -23.3361, -135.219, 1.33 ) }
    apic_20 { pt3dadd( 36.7025, -24.5067, -138.367, 0.67 ) }
    apic_20 { pt3dadd( 38.7166, -25.5996, -141.003, 0.33 ) }
    apic_20 { pt3dadd( 40.3377, -26.6347, -143.381, 0.67 ) }
    apic_20 { pt3dadd( 42.7148, -28.1498, -146.982, 0.67 ) }
    apic_20 { pt3dadd( 46.3987, -30.5447, -152.952, 0.67 ) }
    apic_20 { pt3dadd( 48.3379, -32.013, -156.442, 0.67 ) }
    apic_20 { pt3dadd( 50.1622, -33.5305, -159.905, 1.33 ) }
    apic_20 { pt3dadd( 54.152, -36.6462, -168.434, 1.33 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 25/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -4.99614, 20.5128, -11.8914, 1.33 ) }
    apic_19 { pt3dadd( 2.10672, 20.8412, -14.908, 0.67 ) }
    apic_19 { pt3dadd( 7.72614, 21.6049, -18.615, 0.67 ) }
    apic_19 { pt3dadd( 13.0399, 22.6549, -22.7497, 0.67 ) }
    apic_19 { pt3dadd( 15.8797, 23.475, -25.4848, 0.67 ) }
    apic_19 { pt3dadd( 17.9974, 24.2466, -28.0515, 0.67 ) }
    apic_19 { pt3dadd( 20.802, 25.5878, -32.8381, 0.67 ) }
    apic_19 { pt3dadd( 24.1622, 28.2946, -41.3176, 0.67 ) }
    apic_19 { pt3dadd( 25.2963, 29.5397, -45.2258, 0.67 ) }
    apic_19 { pt3dadd( 26.6561, 31.4715, -51.5668, 0.67 ) }
    apic_19 { pt3dadd( 28.0094, 33.7211, -59.5923, 1.33 ) }
    apic_19 { pt3dadd( 30.1071, 37.0661, -73.2601, 0.33 ) }
    apic_19 { pt3dadd( 30.578, 37.7096, -76.1371, 0.33 ) }
    apic_19 { pt3dadd( 30.962, 38.0884, -78.0516, 0.33 ) }
    apic_19 { pt3dadd( 32.5448, 39.3654, -84.9302, 1.33 ) }
    apic_19 { pt3dadd( 34.5247, 40.4791, -92.3163, 0.33 ) }
    apic_19 { pt3dadd( 35.5057, 40.9018, -95.5543, 1.33 ) }
    apic_19 { pt3dadd( 37.3643, 41.5116, -100.905, 0.33 ) }
    apic_19 { pt3dadd( 37.8328, 41.634, -102.253, 1.33 ) }
    apic_19 { pt3dadd( 40.4297, 42.3573, -109.601, 0.33 ) }
    apic_19 { pt3dadd( 43.9731, 43.3085, -119.808, 0.67 ) }
    apic_19 { pt3dadd( 45.8251, 43.7785, -125.61, 0.33 ) }
    apic_19 { pt3dadd( 46.1315, 43.8477, -126.593, 0.67 ) }
    apic_19 { pt3dadd( 48.244, 44.2239, -133.366, 0.33 ) }
    apic_19 { pt3dadd( 48.9916, 44.3426, -135.588, 1.33 ) }
    apic_19 { pt3dadd( 54.1953, 45.1674, -149.812, 0.33 ) }
    apic_19 { pt3dadd( 56.1133, 45.5715, -153.956, 0.67 ) }
    apic_19 { pt3dadd( 58.0106, 46.061, -157.696, 0.33 ) }
    apic_19 { pt3dadd( 58.7312, 46.2597, -159.106, 0.67 ) }
    apic_19 { pt3dadd( 59.7774, 46.6342, -161.033, 0.33 ) }
    apic_19 { pt3dadd( 59.9923, 46.7155, -161.41, 0.67 ) }
    apic_19 { pt3dadd( 62.1088, 47.9631, -162.746, 0.33 ) }
    apic_19 { pt3dadd( 63.599, 49.0058, -163.35, 1.33 ) }
    // Section: apic_17, id: apic_17, parent: apic_1 (entry count 58/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -16.473, 21.4974, -4.73481, 2.0 ) }
    apic_17 { pt3dadd( -18.8151, 22.0902, -0.990696, 0.67 ) }
    apic_17 { pt3dadd( -22.2318, 22.6726, 3.46842, 0.67 ) }
    apic_17 { pt3dadd( -30.2159, 23.6787, 12.3366, 1.33 ) }
    apic_17 { pt3dadd( -37.8234, 24.109, 20.0688, 0.67 ) }
    apic_17 { pt3dadd( -42.0057, 24.2738, 23.7193, 0.67 ) }
    apic_17 { pt3dadd( -48.1608, 24.3267, 28.4782, 0.67 ) }
    apic_17 { pt3dadd( -50.4889, 24.0347, 29.3414, 0.67 ) }
    apic_17 { pt3dadd( -52.9614, 23.1774, 28.5619, 1.33 ) }
    apic_17 { pt3dadd( -58.1152, 21.4095, 25.3769, 0.67 ) }
    apic_17 { pt3dadd( -65.8833, 19.0284, 19.2841, 0.67 ) }
    apic_17 { pt3dadd( -76.0914, 16.2361, 10.8379, 0.67 ) }
    apic_17 { pt3dadd( -77.4944, 16.024, 9.58107, 1.33 ) }
    apic_17 { pt3dadd( -80.3829, 15.8265, 7.06872, 0.67 ) }
    apic_17 { pt3dadd( -86.6806, 15.6537, 1.78235, 0.67 ) }
    apic_17 { pt3dadd( -89.7481, 15.776, -0.653218, 0.67 ) }
    apic_17 { pt3dadd( -92.8536, 15.9767, -2.31431, 0.67 ) }
    apic_17 { pt3dadd( -100.371, 16.8037, -5.33667, 1.33 ) }
    apic_17 { pt3dadd( -102.298, 16.9299, -6.16769, 0.67 ) }
    apic_17 { pt3dadd( -104.078, 16.9128, -7.07286, 0.67 ) }
    apic_17 { pt3dadd( -110.935, 15.714, -10.7132, 0.67 ) }
    apic_17 { pt3dadd( -114.042, 14.7995, -12.4907, 1.33 ) }
    apic_17 { pt3dadd( -118.303, 13.3164, -14.8599, 0.67 ) }
    apic_17 { pt3dadd( -119.91, 12.7344, -15.8117, 1.33 ) }
    apic_17 { pt3dadd( -124.008, 11.2849, -18.145, 0.67 ) }
    apic_17 { pt3dadd( -128.445, 9.78475, -20.4827, 1.33 ) }
    apic_17 { pt3dadd( -135.873, 7.00138, -23.8914, 0.33 ) }
    apic_17 { pt3dadd( -137.545, 6.33815, -24.6265, 0.33 ) }
    apic_17 { pt3dadd( -145.435, 3.13329, -27.7687, 1.33 ) }
    apic_17 { pt3dadd( -151.533, 0.933346, -29.3317, 0.67 ) }
    apic_17 { pt3dadd( -153.411, 0.431721, -29.4212, 0.67 ) }
    apic_17 { pt3dadd( -157.202, -0.113711, -28.9349, 1.33 ) }
    apic_17 { pt3dadd( -159.826, -0.311698, -28.0794, 0.67 ) }
    apic_17 { pt3dadd( -161.888, -0.542715, -27.2505, 1.33 ) }
    apic_17 { pt3dadd( -166.268, -1.02348, -24.9373, 0.67 ) }
    apic_17 { pt3dadd( -168.435, -1.29289, -24.0137, 0.33 ) }
    apic_17 { pt3dadd( -170.217, -1.5096, -23.2351, 2.0 ) }
    apic_17 { pt3dadd( -172.375, -1.8219, -22.3442, 0.67 ) }
    apic_17 { pt3dadd( -175.661, -2.37887, -21.1504, 0.67 ) }
    apic_17 { pt3dadd( -177.705, -2.82726, -20.5169, 1.33 ) }
    apic_17 { pt3dadd( -179.59, -3.25206, -20.0659, 0.33 ) }
    apic_17 { pt3dadd( -182.093, -3.73665, -19.4844, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_17 { pt3dadd( -187.018, -4.46906, -18.3902, 0.33 ) }
    apic_17 { pt3dadd( -190.136, -4.67965, -17.6116, 0.33 ) }
    apic_17 { pt3dadd( -192.044, -4.66541, -17.1083, 1.33 ) }
    apic_17 { pt3dadd( -195.087, -4.54453, -16.2772, 0.33 ) }
    apic_17 { pt3dadd( -197.561, -4.24138, -15.506, 0.33 ) }
    apic_17 { pt3dadd( -198.076, -4.14122, -15.3246, 0.67 ) }
    apic_17 { pt3dadd( -201.641, -3.20844, -13.8991, 0.33 ) }
    apic_17 { pt3dadd( -203.469, -2.93979, -13.2671, 0.33 ) }
    apic_17 { pt3dadd( -205.483, -2.76165, -12.7421, 0.67 ) }
    apic_17 { pt3dadd( -208.682, -2.62791, -11.8183, 0.33 ) }
    apic_17 { pt3dadd( -210.929, -2.70666, -11.4723, 0.33 ) }
    apic_17 { pt3dadd( -211.313, -2.72746, -11.4337, 0.67 ) }
    apic_17 { pt3dadd( -214.732, -2.99788, -11.4547, 0.33 ) }
    apic_17 { pt3dadd( -216.67, -3.13257, -11.5187, 0.33 ) }
    apic_17 { pt3dadd( -220.685, -3.66911, -11.7864, 1.33 ) }
    apic_17 { pt3dadd( -226.842, -4.74755, -12.5185, 0.33 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 16/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -16.473, 21.4974, -4.73481, 2.0 ) }
    apic_2 { pt3dadd( -16.4635, 25.4725, -5.31599, 1.33 ) }
    apic_2 { pt3dadd( -16.4563, 28.4925, -5.75753, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 19/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -14.6936, 10.9579, -34.2569, 1.33 ) }
    dend_43 { pt3dadd( -12.8747, 14.1149, -48.1918, 0.67 ) }
    dend_43 { pt3dadd( -12.017, 15.6036, -54.7629, 1.33 ) }
    dend_43 { pt3dadd( -10.5512, 18.1476, -65.9923, 0.67 ) }
    dend_43 { pt3dadd( -10.0069, 19.0924, -70.1625, 0.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 24/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -14.6936, 10.9579, -34.2569, 1.33 ) }
    dend_42 { pt3dadd( -24.0288, 10.255, -42.5797, 0.67 ) }
    dend_42 { pt3dadd( -27.1588, 9.85957, -44.509, 0.33 ) }
    dend_42 { pt3dadd( -28.646, 9.66999, -45.0994, 0.33 ) }
    dend_42 { pt3dadd( -30.9863, 9.60653, -46.1814, 1.33 ) }
    dend_42 { pt3dadd( -33.3416, 9.62123, -47.2658, 0.67 ) }
    dend_42 { pt3dadd( -34.8118, 9.70821, -47.9195, 0.33 ) }
    dend_42 { pt3dadd( -37.3565, 10.1086, -48.7992, 0.33 ) }
    dend_42 { pt3dadd( -40.2179, 10.9099, -50.0535, 2.0 ) }
    dend_42 { pt3dadd( -46.1424, 13.1101, -52.8369, 0.67 ) }
    dend_42 { pt3dadd( -47.7881, 13.7863, -53.6562, 0.67 ) }
    dend_42 { pt3dadd( -49.8481, 14.6693, -54.7922, 0.33 ) }
    dend_42 { pt3dadd( -53.5936, 16.2459, -56.8883, 1.33 ) }
    dend_42 { pt3dadd( -55.1995, 16.9811, -57.9056, 0.67 ) }
    dend_42 { pt3dadd( -56.327, 17.456, -58.6583, 0.33 ) }
    dend_42 { pt3dadd( -58.4825, 18.1381, -59.9211, 1.33 ) }
    dend_42 { pt3dadd( -61.5695, 18.9938, -61.6712, 0.67 ) }
    dend_42 { pt3dadd( -63.7735, 19.4726, -62.8958, 1.33 ) }
    dend_42 { pt3dadd( -68.5916, 20.2426, -65.3616, 0.33 ) }
    dend_42 { pt3dadd( -69.8494, 20.384, -66.0423, 1.33 ) }
    dend_42 { pt3dadd( -72.6322, 20.7423, -67.4619, 0.33 ) }
    dend_42 { pt3dadd( -75.1154, 21.0947, -68.5197, 0.33 ) }
    dend_42 { pt3dadd( -75.9891, 21.2037, -68.7992, 0.67 ) }
    dend_42 { pt3dadd( -77.3706, 21.3611, -69.1962, 0.33 ) }
    dend_42 { pt3dadd( -80.6155, 21.6864, -70.0057, 1.33 ) }
    dend_42 { pt3dadd( -84.6472, 22.0046, -71.1199, 0.33 ) }
    dend_42 { pt3dadd( -86.8363, 22.1553, -71.7718, 1.33 ) }
    dend_42 { pt3dadd( -89.9827, 22.3631, -72.8879, 2.0 ) }
    dend_42 { pt3dadd( -92.4754, 22.5621, -74.302, 0.33 ) }
    dend_42 { pt3dadd( -93.9156, 22.6471, -75.6299, 2.0 ) }
    dend_42 { pt3dadd( -95.6533, 22.671, -78.1061, 0.67 ) }
    dend_42 { pt3dadd( -96.0421, 22.634, -79.1965, 0.33 ) }
    dend_42 { pt3dadd( -97.0113, 22.4516, -83.9237, 1.33 ) }
    dend_42 { pt3dadd( -98.0495, 21.9014, -92.8219, 0.33 ) }
    dend_42 { pt3dadd( -98.3981, 21.4392, -98.6108, 0.33 ) }
    dend_42 { pt3dadd( -98.4606, 21.0766, -102.174, 1.33 ) }
    dend_42 { pt3dadd( -98.2905, 19.9922, -111.08, 0.33 ) }
    dend_42 { pt3dadd( -98.1723, 19.5284, -113.656, 0.67 ) }
    dend_42 { pt3dadd( -97.9722, 18.8983, -116.328, 0.33 ) }
    dend_42 { pt3dadd( -97.7536, 18.0744, -119.281, 1.33 ) }
    dend_42 { pt3dadd( -97.7022, 15.8917, -126.579, 0.33 ) }
    dend_42 { pt3dadd( -97.8178, 15.3391, -128.222, 0.67 ) }
    dend_42 { pt3dadd( -98.2884, 13.9983, -131.405, 0.33 ) }
    dend_42 { pt3dadd( -98.8898, 12.2872, -135.408, 0.67 ) }
    dend_42 { pt3dadd( -99.0946, 11.7239, -136.897, 0.33 ) }
    dend_42 { pt3dadd( -99.1929, 11.4994, -137.569, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 70/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 19.3109, -2.69614, -24.8247, 2.0 ) }
    dend_23 { pt3dadd( 20.7125, -7.49815, -28.5811, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 19.3109, -2.69614, -24.8247, 2.0 ) }
    dend_22 { pt3dadd( 22.371, -2.65733, -24.8301, 0.67 ) }
    dend_22 { pt3dadd( 24.6871, -2.35928, -24.7014, 0.67 ) }
    dend_22 { pt3dadd( 27.6787, -1.84827, -24.4479, 0.67 ) }
    dend_22 { pt3dadd( 32.1302, -0.700061, -24.5638, 1.33 ) }
    dend_22 { pt3dadd( 35.7024, 0.412829, -24.7856, 0.67 ) }
    dend_22 { pt3dadd( 38.4648, 1.31114, -25.1226, 0.67 ) }
    dend_22 { pt3dadd( 42.6425, 2.99388, -26.0236, 1.33 ) }
    dend_22 { pt3dadd( 44.3033, 3.73412, -26.4835, 0.67 ) }
    dend_22 { pt3dadd( 51.162, 7.08297, -28.8748, 1.33 ) }
    dend_22 { pt3dadd( 53.6973, 8.39693, -29.9157, 0.67 ) }
    dend_22 { pt3dadd( 57.5938, 10.3033, -31.7421, 1.33 ) }
    dend_22 { pt3dadd( 61.4164, 12.1232, -33.8455, 0.33 ) }
    dend_22 { pt3dadd( 62.5838, 12.668, -34.4761, 0.67 ) }
    dend_22 { pt3dadd( 65.188, 13.8052, -35.6746, 0.67 ) }
    dend_22 { pt3dadd( 67.2516, 14.4786, -36.3967, 0.67 ) }
    dend_22 { pt3dadd( 70.8042, 15.3841, -37.695, 1.33 ) }
    dend_22 { pt3dadd( 75.7706, 16.5145, -39.2758, 0.33 ) }
    dend_22 { pt3dadd( 80.6759, 17.2673, -40.8468, 1.33 ) }
    dend_22 { pt3dadd( 82.7169, 17.5364, -41.516, 0.67 ) }
    dend_22 { pt3dadd( 86.6486, 18.0277, -42.652, 0.67 ) }
    dend_22 { pt3dadd( 91.2259, 18.4414, -44.5861, 0.67 ) }
    dend_22 { pt3dadd( 93.3229, 18.6535, -45.6224, 0.33 ) }
    dend_22 { pt3dadd( 96.6398, 19.2568, -47.6298, 0.67 ) }
    dend_22 { pt3dadd( 98.2774, 19.7335, -48.779, 0.33 ) }
    dend_22 { pt3dadd( 100.899, 20.678, -50.5955, 1.33 ) }
    dend_22 { pt3dadd( 107.903, 23.5245, -55.2913, 0.33 ) }
    dend_22 { pt3dadd( 109.499, 24.1295, -56.2763, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( 113.638, 25.6604, -58.8462, 0.67 ) }
    dend_22 { pt3dadd( 114.395, 26.0112, -59.3337, 0.33 ) }
    dend_22 { pt3dadd( 115.881, 26.7364, -60.3339, 0.33 ) }
    dend_22 { pt3dadd( 117.754, 27.5864, -61.5579, 1.33 ) }
    dend_22 { pt3dadd( 119.097, 28.2023, -62.1759, 0.33 ) }
    dend_22 { pt3dadd( 120.123, 28.7239, -62.7683, 1.33 ) }
    dend_22 { pt3dadd( 125.206, 31.3075, -65.8889, 0.33 ) }
    dend_22 { pt3dadd( 125.841, 31.6527, -66.2566, 0.33 ) }
    dend_22 { pt3dadd( 127.528, 32.7106, -67.1209, 0.67 ) }
    dend_22 { pt3dadd( 129.331, 33.8682, -67.8854, 0.67 ) }
    dend_22 { pt3dadd( 135.064, 37.4619, -70.0273, 0.33 ) }
    dend_22 { pt3dadd( 136.702, 38.3867, -70.4697, 0.33 ) }
    dend_22 { pt3dadd( 139.724, 39.9917, -71.076, 1.33 ) }
    dend_22 { pt3dadd( 142.03, 41.2451, -71.53, 0.33 ) }
    dend_22 { pt3dadd( 143.532, 42.0793, -71.7437, 0.33 ) }
    dend_22 { pt3dadd( 143.934, 42.2912, -71.8009, 0.67 ) }
    dend_22 { pt3dadd( 146.389, 43.5444, -72.0024, 0.33 ) }
    dend_22 { pt3dadd( 149.665, 45.3822, -72.4375, 1.33 ) }
    dend_22 { pt3dadd( 151.049, 46.1679, -72.6653, 0.33 ) }
    dend_22 { pt3dadd( 153.199, 47.4114, -72.8709, 1.33 ) }
    dend_22 { pt3dadd( 156.969, 49.728, -72.8413, 0.33 ) }
    dend_22 { pt3dadd( 157.573, 50.1091, -72.7799, 0.67 ) }
    dend_22 { pt3dadd( 159.784, 51.6486, -72.2832, 0.33 ) }
    dend_22 { pt3dadd( 161.018, 52.5208, -71.8157, 1.33 ) }
    dend_22 { pt3dadd( 163.692, 54.4722, -70.9208, 0.33 ) }
    dend_22 { pt3dadd( 165.476, 55.8402, -70.3578, 0.33 ) }
    dend_22 { pt3dadd( 165.719, 56.028, -70.2715, 0.67 ) }
    dend_22 { pt3dadd( 167.184, 57.1332, -69.9011, 0.33 ) }
    dend_22 { pt3dadd( 168.657, 58.2085, -69.9046, 0.67 ) }
    dend_22 { pt3dadd( 172.19, 60.7363, -70.409, 0.33 ) }
    dend_22 { pt3dadd( 173.73, 61.7844, -70.8834, 0.33 ) }
    dend_22 { pt3dadd( 174.505, 62.2794, -71.1789, 0.67 ) }
    dend_22 { pt3dadd( 175.849, 63.0472, -71.7202, 0.33 ) }
    dend_22 { pt3dadd( 179.602, 64.8017, -73.3298, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 34/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 152.531, 30.0249, -124.075, 0.67 ) }
    dend_19 { pt3dadd( 153.639, 32.4279, -123.132, 0.33 ) }
    dend_19 { pt3dadd( 154.075, 33.3726, -122.762, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 152.531, 30.0249, -124.075, 0.67 ) }
    dend_18 { pt3dadd( 154.305, 31.4228, -123.12, 0.33 ) }
    dend_18 { pt3dadd( 155.594, 32.4384, -122.426, 0.33 ) }
    dend_18 { pt3dadd( 156.341, 33.0266, -122.024, 0.67 ) }
    dend_18 { pt3dadd( 158.721, 34.9017, -120.743, 0.33 ) }
    dend_18 { pt3dadd( 160.374, 36.2042, -119.853, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 54.5858, -12.0556, 8.07667, 0.67 ) }
    dend_14 { pt3dadd( 55.5698, -11.8228, 7.05337, 0.33 ) }
    dend_14 { pt3dadd( 55.8238, -11.7627, 6.7892, 0.67 ) }
    dend_14 { pt3dadd( 57.34, -11.404, 5.21248, 0.33 ) }
    dend_14 { pt3dadd( 61.0346, -11.6565, 1.1013, 0.33 ) }
    dend_14 { pt3dadd( 64.516, -11.69, -3.19914, 0.33 ) }
    dend_14 { pt3dadd( 68.1342, -12.2721, -7.3447, 0.33 ) }
    dend_14 { pt3dadd( 72.6097, -13.7256, -10.2555, 0.33 ) }
    dend_14 { pt3dadd( 77.3818, -15.2947, -12.5752, 0.33 ) }
    dend_14 { pt3dadd( 81.8979, -16.4976, -15.5371, 0.33 ) }
    dend_14 { pt3dadd( 86.8272, -16.9093, -18.0166, 0.33 ) }
    dend_14 { pt3dadd( 92.0849, -17.7399, -19.5273, 0.33 ) }
    dend_14 { pt3dadd( 97.5232, -17.5069, -20.5203, 0.33 ) }
    dend_14 { pt3dadd( 102.777, -17.3338, -22.2471, 0.33 ) }
    dend_14 { pt3dadd( 108.047, -17.2364, -23.9315, 0.33 ) }
    dend_14 { pt3dadd( 113.109, -17.7753, -26.0993, 0.33 ) }
    dend_14 { pt3dadd( 118.265, -18.9742, -27.7076, 0.33 ) }
    dend_14 { pt3dadd( 123.244, -19.7616, -29.9896, 0.33 ) }
    dend_14 { pt3dadd( 127.805, -21.4709, -32.6144, 0.33 ) }
    dend_14 { pt3dadd( 132.76, -22.1659, -34.9779, 0.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 63/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 54.5858, -12.0556, 8.07667, 0.67 ) }
    dend_13 { pt3dadd( 57.9246, -13.1777, 8.75369, 0.67 ) }
    dend_13 { pt3dadd( 59.6888, -13.8104, 9.0187, 0.67 ) }
    dend_13 { pt3dadd( 63.6059, -14.8315, 9.22045, 0.67 ) }
    dend_13 { pt3dadd( 66.4586, -15.543, 9.28603, 0.67 ) }
    dend_13 { pt3dadd( 68.5138, -16.0006, 9.28706, 0.67 ) }
    dend_13 { pt3dadd( 71.4076, -16.6509, 9.26256, 0.67 ) }
    dend_13 { pt3dadd( 75.1749, -17.5276, 9.16589, 0.67 ) }
    dend_13 { pt3dadd( 82.8231, -19.165, 8.75204, 0.67 ) }
    dend_13 { pt3dadd( 84.4489, -19.5057, 8.59223, 0.67 ) }
    dend_13 { pt3dadd( 86.9399, -19.9699, 8.33689, 0.67 ) }
    dend_13 { pt3dadd( 88.6342, -20.3144, 8.16917, 0.33 ) }
    dend_13 { pt3dadd( 90.126, -20.5382, 8.00185, 0.33 ) }
    dend_13 { pt3dadd( 98.6513, -22.8422, 9.30724, 0.33 ) }
    dend_13 { pt3dadd( 107.043, -24.6359, 11.7667, 0.33 ) }
    dend_13 { pt3dadd( 115.519, -26.3937, 13.9497, 0.33 ) }
    dend_13 { pt3dadd( 123.726, -28.882, 16.4272, 0.33 ) }
    dend_13 { pt3dadd( 131.939, -30.6331, 19.4566, 0.33 ) }
    dend_13 { pt3dadd( 139.621, -33.311, 23.1333, 0.33 ) }
    dend_13 { pt3dadd( 147.128, -35.9999, 27.1452, 0.33 ) }
    dend_13 { pt3dadd( 155.09, -37.5944, 30.8552, 0.33 ) }
    dend_13 { pt3dadd( 162.865, -40.7494, 33.9039, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.37936, 8.73201, 9.42984, 1.33 ) }
    dend_11 { pt3dadd( 12.159, 8.12201, 11.4648, 0.67 ) }
    dend_11 { pt3dadd( 15.7364, 7.69161, 13.3969, 0.67 ) }
    dend_11 { pt3dadd( 18.3031, 7.22915, 15.0865, 0.67 ) }
    dend_11 { pt3dadd( 23.4474, 6.6235, 19.2343, 0.67 ) }
    dend_11 { pt3dadd( 29.1227, 5.92817, 24.1698, 0.67 ) }
    dend_11 { pt3dadd( 30.8069, 5.72738, 25.6439, 0.67 ) }
    dend_11 { pt3dadd( 37.4289, 4.63327, 31.6268, 0.67 ) }
    dend_11 { pt3dadd( 39.5836, 4.2743, 33.6567, 0.67 ) }
    dend_11 { pt3dadd( 49.2443, 2.98557, 42.9077, 0.67 ) }
    dend_11 { pt3dadd( 53.3271, 2.58994, 46.9542, 0.67 ) }
    dend_11 { pt3dadd( 57.6219, 2.27909, 51.0728, 0.67 ) }
    dend_11 { pt3dadd( 60.4266, 2.0489, 53.6166, 0.67 ) }
    dend_11 { pt3dadd( 64.1826, 1.85975, 56.4583, 1.33 ) }
    dend_11 { pt3dadd( 66.0463, 1.81599, 57.7553, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 67.9671, 1.55967, 58.8462, 0.33 ) }
    dend_11 { pt3dadd( 78.3949, 2.32474, 67.0969, 0.33 ) }
    dend_11 { pt3dadd( 88.0015, 3.81727, 76.201, 0.33 ) }
    dend_11 { pt3dadd( 96.5239, 5.12272, 86.353, 0.33 ) }
    dend_11 { pt3dadd( 104.957, 7.60034, 96.3601, 0.33 ) }
    dend_11 { pt3dadd( 113.152, 9.49724, 106.687, 0.33 ) }
    dend_11 { pt3dadd( 122.51, 11.06, 116.035, 0.33 ) }
    dend_11 { pt3dadd( 131.684, 13.4003, 125.403, 0.33 ) }
    dend_11 { pt3dadd( 140.061, 14.4775, 135.702, 0.33 ) }
    dend_11 { pt3dadd( 148.099, 16.1338, 146.192, 0.33 ) }
    dend_11 { pt3dadd( 157.961, 17.7571, 154.996, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.37936, 8.73201, 9.42984, 1.33 ) }
    dend_2 { pt3dadd( 7.53319, 11.5197, 10.1294, 0.67 ) }
    dend_2 { pt3dadd( 9.18188, 15.7505, 10.5413, 0.67 ) }
    dend_2 { pt3dadd( 9.73398, 17.4041, 10.5398, 0.67 ) }
    dend_2 { pt3dadd( 10.3559, 18.9775, 10.4656, 0.67 ) }
    dend_2 { pt3dadd( 10.8433, 20.3122, 10.4421, 0.67 ) }
    dend_2 { pt3dadd( 11.3894, 21.9301, 10.4752, 0.67 ) }
    dend_2 { pt3dadd( 12.5907, 25.6272, 10.4689, 0.67 ) }
    dend_2 { pt3dadd( 13.2389, 27.7116, 10.3734, 0.67 ) }
    dend_2 { pt3dadd( 14.4569, 31.5161, 10.3085, 0.67 ) }
    dend_2 { pt3dadd( 16.318, 37.0991, 10.3852, 0.67 ) }
    dend_2 { pt3dadd( 17.5284, 40.9146, 10.5503, 0.67 ) }
    // Section: apic_26, id: apic_26, parent: apic_20 (entry count 23/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 54.152, -36.6462, -168.434, 1.33 ) }
    apic_26 { pt3dadd( 53.6246, -37.0536, -171.274, 1.33 ) }
    apic_26 { pt3dadd( 51.4199, -38.4713, -181.558, 0.67 ) }
    apic_26 { pt3dadd( 48.363, -40.2142, -194.205, 0.33 ) }
    apic_26 { pt3dadd( 47.6668, -40.5589, -197.259, 1.33 ) }
    apic_26 { pt3dadd( 43.9547, -42.0736, -214.046, 0.33 ) }
    apic_26 { pt3dadd( 42.6914, -42.4209, -220.011, 0.67 ) }
    apic_26 { pt3dadd( 42.1828, -42.4579, -222.281, 0.33 ) }
    apic_26 { pt3dadd( 41.7601, -42.4199, -224.146, 1.33 ) }
    apic_26 { pt3dadd( 38.0528, -41.5016, -241.444, 0.33 ) }
    apic_26 { pt3dadd( 37.289, -41.1432, -245.432, 1.33 ) }
    apic_26 { pt3dadd( 36.2301, -40.2277, -252.305, 0.33 ) }
    apic_26 { pt3dadd( 36.1224, -40.0711, -253.312, 0.67 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 36/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 54.152, -36.6462, -168.434, 1.33 ) }
    apic_21 { pt3dadd( 59.7719, -34.9766, -181.95, 0.67 ) }
    apic_21 { pt3dadd( 60.6262, -35.1206, -185.22, 1.33 ) }
    apic_21 { pt3dadd( 61.4265, -35.5492, -189.097, 0.67 ) }
    apic_21 { pt3dadd( 62.6037, -36.1796, -194.798, 0.67 ) }
    apic_21 { pt3dadd( 63.5582, -36.6908, -199.422, 1.33 ) }
    apic_21 { pt3dadd( 66.6458, -38.3444, -214.377, 1.33 ) }
    apic_21 { pt3dadd( 68.8652, -41.0812, -229.136, 0.33 ) }
    apic_21 { pt3dadd( 69.6527, -42.6168, -235.797, 1.34 ) }
    // Section: apic_16, id: apic_16, parent: apic_2 (entry count 45/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -16.4563, 28.4925, -5.75753, 1.33 ) }
    apic_16 { pt3dadd( -8.89085, 29.7827, -1.00061, 0.67 ) }
    apic_16 { pt3dadd( -7.76453, 29.9396, -0.217348, 0.67 ) }
    apic_16 { pt3dadd( -5.20254, 30.1826, 1.67818, 0.67 ) }
    apic_16 { pt3dadd( 2.25954, 30.6772, 7.59039, 0.67 ) }
    apic_16 { pt3dadd( 6.96186, 30.968, 11.4925, 0.67 ) }
    apic_16 { pt3dadd( 11.053, 31.1547, 15.0516, 0.67 ) }
    apic_16 { pt3dadd( 16.5418, 31.2892, 19.8677, 0.67 ) }
    apic_16 { pt3dadd( 18.5362, 31.3493, 21.9123, 1.33 ) }
    apic_16 { pt3dadd( 21.7118, 31.4168, 25.5247, 0.67 ) }
    apic_16 { pt3dadd( 23.1336, 31.4464, 27.4024, 1.33 ) }
    apic_16 { pt3dadd( 27.2805, 31.6281, 33.1451, 0.67 ) }
    apic_16 { pt3dadd( 28.3063, 31.6509, 34.7139, 0.67 ) }
    apic_16 { pt3dadd( 33.5044, 32.502, 42.7076, 1.33 ) }
    apic_16 { pt3dadd( 39.5303, 34.724, 54.1677, 1.33 ) }
    apic_16 { pt3dadd( 45.4637, 39.5684, 64.8406, 1.33 ) }
    apic_16 { pt3dadd( 48.5134, 45.3812, 76.2201, 1.33 ) }
    apic_16 { pt3dadd( 49.3012, 52.1604, 87.4453, 1.33 ) }
    apic_16 { pt3dadd( 47.7134, 57.703, 99.2496, 1.33 ) }
    apic_16 { pt3dadd( 44.8176, 62.3344, 111.198, 1.33 ) }
    apic_16 { pt3dadd( 39.6505, 66.6143, 122.492, 1.33 ) }
    apic_16 { pt3dadd( 35.3564, 69.9655, 134.447, 1.33 ) }
    apic_16 { pt3dadd( 29.4895, 72.5462, 145.914, 1.33 ) }
    apic_16 { pt3dadd( 23.3943, 73.072, 157.54, 1.33 ) }
    apic_16 { pt3dadd( 17.2048, 74.2006, 169.073, 1.33 ) }
    apic_16 { pt3dadd( 10.3649, 77.2461, 179.867, 1.33 ) }
    apic_16 { pt3dadd( 4.19375, 80.3136, 191.052, 1.33 ) }
    apic_16 { pt3dadd( -3.56757, 85.6025, 200.237, 1.33 ) }
    apic_16 { pt3dadd( -9.92778, 89.9084, 210.895, 1.33 ) }
    apic_16 { pt3dadd( -15.1169, 93.6956, 222.354, 1.33 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 75/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -16.4563, 28.4925, -5.75753, 1.33 ) }
    apic_3 { pt3dadd( -17.9795, 33.3466, -6.67834, 1.33 ) }
    apic_3 { pt3dadd( -18.9927, 36.5753, -7.29081, 1.34 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.0069, 19.0924, -70.1625, 0.67 ) }
    dend_47 { pt3dadd( -7.06926, 17.2057, -74.8036, 0.67 ) }
    dend_47 { pt3dadd( -5.43085, 16.0815, -77.5132, 0.33 ) }
    dend_47 { pt3dadd( -4.82255, 15.7097, -78.4367, 0.33 ) }
    dend_47 { pt3dadd( -3.44496, 14.9079, -80.4228, 1.33 ) }
    dend_47 { pt3dadd( -1.07472, 13.5079, -83.9536, 0.33 ) }
    dend_47 { pt3dadd( -0.369237, 13.0929, -84.9495, 0.33 ) }
    dend_47 { pt3dadd( 1.54209, 11.8871, -87.8596, 1.33 ) }
    dend_47 { pt3dadd( 2.31669, 11.2341, -89.4421, 0.33 ) }
    dend_47 { pt3dadd( 2.45408, 11.1136, -89.7738, 0.67 ) }
    dend_47 { pt3dadd( 3.71045, 10.0475, -92.809, 0.33 ) }
    dend_47 { pt3dadd( 4.88672, 9.07857, -95.8186, 1.33 ) }
    dend_47 { pt3dadd( 7.14739, 6.91088, -102.602, 0.67 ) }
    dend_47 { pt3dadd( 8.58874, 5.26734, -107.779, 0.67 ) }
    dend_47 { pt3dadd( 9.55771, 3.96801, -111.888, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -10.0069, 19.0924, -70.1625, 0.67 ) }
    dend_44 { pt3dadd( -12.4671, 22.03, -71.0198, 0.33 ) }
    dend_44 { pt3dadd( -13.8455, 23.6959, -72.4493, 1.33 ) }
    dend_44 { pt3dadd( -14.3847, 24.3819, -74.2846, 0.33 ) }
    dend_44 { pt3dadd( -14.7588, 24.8578, -75.5579, 1.33 ) }
    dend_44 { pt3dadd( -15.1304, 25.3305, -76.8227, 0.33 ) }
    dend_44 { pt3dadd( -15.6839, 26.0345, -78.7064, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_44 { pt3dadd( -16.4515, 26.6049, -82.6957, 0.33 ) }
    dend_44 { pt3dadd( -16.7462, 26.788, -85.4172, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 2/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 20.7125, -7.49815, -28.5811, 1.33 ) }
    dend_27 { pt3dadd( 23.3333, -6.7935, -29.6866, 0.67 ) }
    dend_27 { pt3dadd( 26.1929, -6.02465, -30.8927, 1.33 ) }
    dend_27 { pt3dadd( 29.6218, -5.10274, -32.339, 2.0 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 20.7125, -7.49815, -28.5811, 1.33 ) }
    dend_24 { pt3dadd( 22.0402, -10.8425, -27.6387, 0.67 ) }
    dend_24 { pt3dadd( 23.6571, -14.9154, -26.491, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 9/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 17.5284, 40.9146, 10.5503, 0.67 ) }
    dend_10 { pt3dadd( 19.3215, 41.3605, 11.977, 0.67 ) }
    dend_10 { pt3dadd( 20.9933, 41.7762, 13.3072, 0.67 ) }
    dend_10 { pt3dadd( 22.369, 42.1183, 14.4017, 1.33 ) }
    dend_10 { pt3dadd( 28.0808, 43.7696, 18.398, 1.33 ) }
    dend_10 { pt3dadd( 34.2403, 45.1934, 21.7678, 1.33 ) }
    dend_10 { pt3dadd( 40.0482, 46.5751, 25.7279, 1.33 ) }
    dend_10 { pt3dadd( 46.379, 47.4607, 28.9617, 1.33 ) }
    dend_10 { pt3dadd( 52.6075, 49.4365, 31.8986, 1.33 ) }
    dend_10 { pt3dadd( 58.8517, 51.6803, 34.5999, 1.33 ) }
    dend_10 { pt3dadd( 65.1329, 53.6466, 37.4286, 1.33 ) }
    dend_10 { pt3dadd( 70.9368, 55.698, 41.0932, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 21/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 17.5284, 40.9146, 10.5503, 0.67 ) }
    dend_3 { pt3dadd( 20.0547, 43.5245, 11.3006, 0.67 ) }
    dend_3 { pt3dadd( 22.5316, 46.0834, 12.0362, 0.67 ) }
    dend_3 { pt3dadd( 27.3818, 51.0941, 13.4767, 0.67 ) }
    dend_3 { pt3dadd( 28.9686, 52.7335, 13.9479, 0.67 ) }
    // Section: apic_25, id: apic_25, parent: apic_21 (entry count 26/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 69.6527, -42.6168, -235.797, 1.34 ) }
    apic_25 { pt3dadd( 67.7044, -42.8861, -237.617, 0.67 ) }
    apic_25 { pt3dadd( 64.7929, -43.2885, -240.336, 0.67 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 29/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 69.6527, -42.6168, -235.797, 1.34 ) }
    apic_22 { pt3dadd( 73.0135, -42.0345, -240.518, 0.67 ) }
    apic_22 { pt3dadd( 73.9351, -41.8757, -241.729, 1.33 ) }
    apic_22 { pt3dadd( 77.4479, -41.2649, -245.892, 0.67 ) }
    apic_22 { pt3dadd( 78.7399, -41.0671, -247.327, 1.33 ) }
    apic_22 { pt3dadd( 81.2042, -40.7795, -250.056, 0.67 ) }
    apic_22 { pt3dadd( 85.9664, -40.2413, -254.925, 0.33 ) }
    apic_22 { pt3dadd( 87.5491, -40.126, -256.34, 0.67 ) }
    apic_22 { pt3dadd( 89.0365, -40.0696, -257.682, 0.33 ) }
    apic_22 { pt3dadd( 89.6823, -40.0539, -258.235, 0.33 ) }
    apic_22 { pt3dadd( 92.988, -39.9657, -261.392, 2.0 ) }
    apic_22 { pt3dadd( 95.0035, -39.6202, -263.382, 0.33 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 41/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -18.9927, 36.5753, -7.29081, 1.34 ) }
    apic_5 { pt3dadd( -17.5428, 42.5268, -8.8389, 1.33 ) }
    apic_5 { pt3dadd( -17.0007, 45.3554, -9.58574, 1.33 ) }
    apic_5 { pt3dadd( -15.9921, 52.7572, -11.0214, 1.33 ) }
    apic_5 { pt3dadd( -15.0601, 61.4006, -12.1182, 1.33 ) }
    apic_5 { pt3dadd( -14.8548, 64.7769, -12.3531, 1.33 ) }
    apic_5 { pt3dadd( -14.7096, 67.705, -12.5805, 1.33 ) }
    apic_5 { pt3dadd( -14.6215, 70.2766, -12.8362, 1.33 ) }
    apic_5 { pt3dadd( -14.4351, 76.7173, -13.4141, 1.33 ) }
    apic_5 { pt3dadd( -14.1468, 80.3627, -13.7022, 1.33 ) }
    apic_5 { pt3dadd( -13.3462, 85.2873, -14.1396, 1.33 ) }
    apic_5 { pt3dadd( -10.8449, 97.0494, -14.8095, 1.33 ) }
    apic_5 { pt3dadd( -9.80118, 101.221, -14.7172, 1.33 ) }
    apic_5 { pt3dadd( -8.25231, 106.637, -14.567, 1.33 ) }
    apic_5 { pt3dadd( -6.5736, 113.008, -13.6167, 1.33 ) }
    apic_5 { pt3dadd( -5.899, 115.723, -12.7266, 1.33 ) }
    apic_5 { pt3dadd( -4.46028, 121.795, -10.0877, 1.33 ) }
    apic_5 { pt3dadd( -3.39378, 130.078, -5.51635, 1.33 ) }
    apic_5 { pt3dadd( -2.91592, 136.634, -1.58985, 1.33 ) }
    apic_5 { pt3dadd( -2.34563, 150.405, 5.33958, 1.33 ) }
    apic_5 { pt3dadd( -2.61252, 157.777, 8.45712, 1.33 ) }
    apic_5 { pt3dadd( -2.89977, 165.478, 11.5279, 1.33 ) }
    apic_5 { pt3dadd( -3.1083, 172.383, 13.9845, 1.33 ) }
    apic_5 { pt3dadd( -3.38147, 185.216, 17.9616, 1.33 ) }
    apic_5 { pt3dadd( -3.65868, 194.107, 20.7697, 1.33 ) }
    apic_5 { pt3dadd( -3.72842, 206.251, 23.62, 1.33 ) }
    apic_5 { pt3dadd( -3.84796, 214.392, 25.3167, 1.33 ) }
    apic_5 { pt3dadd( -3.88772, 218.585, 26.1725, 1.33 ) }
    apic_5 { pt3dadd( -3.85211, 222.906, 26.7178, 1.33 ) }
    apic_5 { pt3dadd( -3.81359, 225.303, 26.8012, 1.33 ) }
    apic_5 { pt3dadd( -3.17645, 234.766, 26.8712, 1.33 ) }
    apic_5 { pt3dadd( -2.40776, 242.734, 25.9682, 1.33 ) }
    apic_5 { pt3dadd( -2.00629, 250.686, 24.5983, 1.33 ) }
    apic_5 { pt3dadd( -1.79963, 255.87, 23.7227, 1.33 ) }
    apic_5 { pt3dadd( -1.66415, 260.197, 23.3349, 1.33 ) }
    apic_5 { pt3dadd( -1.56774, 264.815, 23.1462, 1.33 ) }
    apic_5 { pt3dadd( -1.80006, 270.869, 23.0339, 1.33 ) }
    apic_5 { pt3dadd( -2.02171, 273.182, 23.1147, 1.33 ) }
    apic_5 { pt3dadd( -3.20244, 281.338, 23.9619, 1.33 ) }
    apic_5 { pt3dadd( -4.55289, 287.596, 25.2652, 1.33 ) }
    apic_5 { pt3dadd( -5.90271, 293.145, 26.6748, 1.33 ) }
    apic_5 { pt3dadd( -7.15552, 298.281, 28.0042, 1.33 ) }
    apic_5 { pt3dadd( -9.16433, 308.064, 30.4071, 1.33 ) }
    apic_5 { pt3dadd( -11.2551, 317.857, 32.4956, 1.33 ) }
    apic_5 { pt3dadd( -11.7753, 320.159, 32.9136, 1.33 ) }
    apic_5 { pt3dadd( -12.5907, 325.889, 34.0404, 1.33 ) }
    apic_5 { pt3dadd( -12.7968, 332.231, 35.0822, 1.33 ) }
    apic_5 { pt3dadd( -12.5809, 336.291, 35.6979, 1.33 ) }
    apic_5 { pt3dadd( -11.9082, 342.574, 36.2143, 1.33 ) }
    apic_5 { pt3dadd( -11.3793, 346.826, 36.4095, 1.33 ) }
    apic_5 { pt3dadd( -9.91858, 358.676, 37.6247, 1.33 ) }
    apic_5 { pt3dadd( -8.27302, 373.772, 40.5654, 1.33 ) }
    apic_5 { pt3dadd( -7.88972, 376.915, 41.4145, 1.33 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 94/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -18.9927, 36.5753, -7.29081, 1.34 ) }
    apic_4 { pt3dadd( -18.9231, 38.2429, -12.8813, 1.33 ) }
    apic_4 { pt3dadd( -18.9206, 45.187, -34.866, 0.67 ) }
    apic_4 { pt3dadd( -18.9151, 46.9861, -40.3185, 0.67 ) }
    apic_4 { pt3dadd( -18.7834, 48.475, -44.6636, 1.33 ) }
    apic_4 { pt3dadd( -18.479, 51.8497, -54.1867, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_4 { pt3dadd( -18.4574, 52.2152, -55.2497, 1.33 ) }
    apic_4 { pt3dadd( -18.3623, 53.5733, -58.6798, 0.67 ) }
    apic_4 { pt3dadd( -18.4857, 56.7413, -67.0029, 1.33 ) }
    apic_4 { pt3dadd( -18.6617, 60.5607, -76.7146, 0.67 ) }
    apic_4 { pt3dadd( -18.8059, 61.1775, -78.3816, 0.67 ) }
    apic_4 { pt3dadd( -19.448, 62.4311, -81.8486, 1.33 ) }
    apic_4 { pt3dadd( -20.0779, 63.4735, -84.8503, 0.33 ) }
    apic_4 { pt3dadd( -21.4899, 65.2779, -90.2699, 0.33 ) }
    apic_4 { pt3dadd( -23.45, 66.951, -95.2639, 1.33 ) }
    apic_4 { pt3dadd( -26.4153, 68.8851, -101.83, 0.33 ) }
    apic_4 { pt3dadd( -27.2564, 69.4041, -103.869, 0.33 ) }
    apic_4 { pt3dadd( -28.7072, 70.2458, -107.377, 1.33 ) }
    apic_4 { pt3dadd( -30.3243, 70.9121, -111.095, 0.33 ) }
    apic_4 { pt3dadd( -30.7296, 71.0097, -111.875, 0.67 ) }
    apic_4 { pt3dadd( -34.5446, 71.157, -117.672, 0.33 ) }
    apic_4 { pt3dadd( -35.4134, 71.1785, -118.596, 0.67 ) }
    apic_4 { pt3dadd( -37.249, 71.4132, -120.323, 0.33 ) }
    apic_4 { pt3dadd( -38.3936, 71.6352, -121.185, 1.33 ) }
    apic_4 { pt3dadd( -40.3692, 72.3428, -123.519, 0.33 ) }
    apic_4 { pt3dadd( -41.2311, 72.7319, -124.627, 0.33 ) }
    apic_4 { pt3dadd( -42.7515, 73.3317, -127.101, 1.33 ) }
    apic_4 { pt3dadd( -44.0976, 73.9956, -129.755, 0.67 ) }
    apic_4 { pt3dadd( -44.8951, 74.4667, -131.574, 0.67 ) }
    apic_4 { pt3dadd( -48.05, 76.2924, -138.401, 0.67 ) }
    apic_4 { pt3dadd( -49.0205, 76.9143, -140.365, 2.0 ) }
    apic_4 { pt3dadd( -53.4282, 79.6867, -149.082, 0.33 ) }
    apic_4 { pt3dadd( -54.6992, 80.5544, -151.555, 0.33 ) }
    apic_4 { pt3dadd( -56.6501, 82.4513, -155.565, 1.33 ) }
    apic_4 { pt3dadd( -58.216, 84.5255, -158.804, 0.33 ) }
    apic_4 { pt3dadd( -59.4509, 86.7411, -161.327, 0.33 ) }
    apic_4 { pt3dadd( -61.1495, 90.9018, -165.293, 0.33 ) }
    apic_4 { pt3dadd( -61.8664, 93.4922, -167.42, 1.33 ) }
    apic_4 { pt3dadd( -63.4826, 99.2447, -172.645, 0.33 ) }
    apic_4 { pt3dadd( -63.6075, 99.7975, -173.221, 1.33 ) }
    apic_4 { pt3dadd( -64.1526, 102.594, -176.392, 0.33 ) }
    apic_4 { pt3dadd( -64.2331, 102.945, -176.852, 0.67 ) }
    apic_4 { pt3dadd( -65.0171, 105.956, -180.999, 0.33 ) }
    apic_4 { pt3dadd( -65.6695, 107.978, -184.086, 1.33 ) }
    apic_4 { pt3dadd( -67.0071, 111.702, -189.945, 0.33 ) }
    apic_4 { pt3dadd( -67.3374, 112.811, -191.621, 1.33 ) }
    apic_4 { pt3dadd( -68.3993, 117.393, -198.215, 0.33 ) }
    apic_4 { pt3dadd( -68.5095, 118.18, -199.204, 0.67 ) }
    apic_4 { pt3dadd( -68.5458, 119.394, -200.516, 0.33 ) }
    apic_4 { pt3dadd( -68.5219, 120.56, -201.616, 0.67 ) }
    apic_4 { pt3dadd( -68.5586, 124.651, -204.964, 0.33 ) }
    apic_4 { pt3dadd( -68.5718, 126.234, -206.194, 1.33 ) }
    apic_4 { pt3dadd( -68.7062, 130.699, -209.096, 0.33 ) }
    apic_4 { pt3dadd( -68.7434, 131.38, -209.528, 0.67 ) }
    apic_4 { pt3dadd( -68.8011, 133.456, -210.793, 0.33 ) }
    apic_4 { pt3dadd( -68.8226, 134.521, -211.355, 0.67 ) }
    apic_4 { pt3dadd( -68.9224, 136.428, -211.964, 0.33 ) }
    apic_4 { pt3dadd( -68.9711, 137.555, -212.141, 0.67 ) }
    apic_4 { pt3dadd( -68.9503, 139.336, -211.886, 0.33 ) }
    apic_4 { pt3dadd( -68.7902, 140.577, -211.674, 0.67 ) }
    apic_4 { pt3dadd( -68.4943, 141.394, -211.489, 0.67 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -16.7462, 26.788, -85.4172, 0.67 ) }
    dend_46 { pt3dadd( -15.8922, 28.8862, -92.2249, 0.33 ) }
    dend_46 { pt3dadd( -15.7769, 29.3021, -93.5731, 1.33 ) }
    dend_46 { pt3dadd( -15.0695, 33.0674, -106.327, 0.33 ) }
    dend_46 { pt3dadd( -14.9688, 33.6034, -108.142, 0.67 ) }
    dend_46 { pt3dadd( -14.5154, 36.0171, -116.318, 0.33 ) }
    dend_46 { pt3dadd( -14.4494, 36.3681, -117.507, 0.67 ) }
    dend_46 { pt3dadd( -14.4066, 37.6848, -122.341, 0.33 ) }
    dend_46 { pt3dadd( -14.4321, 38.753, -126.355, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 64/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -16.7462, 26.788, -85.4172, 0.67 ) }
    dend_45 { pt3dadd( -18.2275, 22.7391, -94.8639, 0.33 ) }
    dend_45 { pt3dadd( -18.6808, 21.1379, -99.1753, 1.33 ) }
    dend_45 { pt3dadd( -19.39, 18.235, -108.14, 0.33 ) }
    dend_45 { pt3dadd( -19.7377, 16.8117, -112.536, 1.33 ) }
    dend_45 { pt3dadd( -20.1846, 14.9824, -118.186, 0.33 ) }
    dend_45 { pt3dadd( -20.5816, 13.3576, -123.204, 1.33 ) }
    dend_45 { pt3dadd( -21.0378, 11.2313, -131.014, 0.67 ) }
    dend_45 { pt3dadd( -21.3399, 9.52623, -138.025, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 29.6218, -5.10274, -32.339, 2.0 ) }
    dend_33 { pt3dadd( 31.5009, 1.26761, -45.1349, 0.67 ) }
    dend_33 { pt3dadd( 33.6627, 9.93865, -61.8368, 1.33 ) }
    dend_33 { pt3dadd( 34.7901, 14.3937, -70.2661, 0.67 ) }
    dend_33 { pt3dadd( 36.0774, 18.897, -78.8924, 1.33 ) }
    dend_33 { pt3dadd( 37.1299, 22.1203, -85.1122, 0.67 ) }
    dend_33 { pt3dadd( 37.5975, 23.4796, -87.7278, 1.33 ) }
    dend_33 { pt3dadd( 39.6089, 27.9494, -96.964, 0.67 ) }
    dend_33 { pt3dadd( 40.1063, 28.838, -98.837, 1.33 ) }
    dend_33 { pt3dadd( 40.9524, 30.1008, -102.023, 0.67 ) }
    dend_33 { pt3dadd( 44.4894, 34.9468, -115.077, 0.33 ) }
    dend_33 { pt3dadd( 44.9858, 35.5482, -116.794, 1.33 ) }
    dend_33 { pt3dadd( 47.8419, 38.8184, -126.393, 0.33 ) }
    dend_33 { pt3dadd( 49.1838, 40.4449, -131.036, 1.33 ) }
    dend_33 { pt3dadd( 52.4433, 45.3815, -144.029, 0.33 ) }
    dend_33 { pt3dadd( 52.7473, 45.9555, -145.393, 0.67 ) }
    dend_33 { pt3dadd( 53.0522, 46.5202, -146.754, 0.33 ) }
    dend_33 { pt3dadd( 53.2197, 46.8545, -147.506, 0.67 ) }
    dend_33 { pt3dadd( 53.6705, 48.3002, -149.93, 0.33 ) }
    dend_33 { pt3dadd( 53.9441, 49.6055, -151.729, 0.67 ) }
    dend_33 { pt3dadd( 53.3875, 54.1364, -154.837, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 94/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 29.6218, -5.10274, -32.339, 2.0 ) }
    dend_28 { pt3dadd( 29.878, -6.63105, -34.8546, 0.67 ) }
    dend_28 { pt3dadd( 30.142, -8.20542, -37.4461, 0.67 ) }
    dend_28 { pt3dadd( 30.6233, -11.0756, -42.1704, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 23.6571, -14.9154, -26.491, 0.67 ) }
    dend_26 { pt3dadd( 23.0055, -16.9362, -26.8182, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( 22.663, -18.23, -27.0515, 1.33 ) }
    dend_26 { pt3dadd( 21.8527, -21.7915, -27.7479, 0.67 ) }
    dend_26 { pt3dadd( 21.1864, -24.3989, -28.2929, 0.67 ) }
    dend_26 { pt3dadd( 20.4835, -26.9499, -28.8559, 0.67 ) }
    dend_26 { pt3dadd( 19.9075, -29.139, -29.3527, 0.67 ) }
    dend_26 { pt3dadd( 19.3657, -31.8722, -30.124, 1.33 ) }
    dend_26 { pt3dadd( 18.9882, -34.2057, -30.9267, 0.67 ) }
    dend_26 { pt3dadd( 18.7254, -36.0747, -31.7012, 0.67 ) }
    dend_26 { pt3dadd( 18.6089, -37.7305, -32.4367, 0.67 ) }
    dend_26 { pt3dadd( 18.5204, -39.4967, -33.2548, 1.33 ) }
    dend_26 { pt3dadd( 18.5551, -42.7603, -34.7178, 0.67 ) }
    dend_26 { pt3dadd( 18.6482, -44.7016, -35.62, 1.33 ) }
    dend_26 { pt3dadd( 18.765, -46.6688, -36.5217, 0.67 ) }
    dend_26 { pt3dadd( 18.8868, -48.5304, -37.3471, 0.67 ) }
    dend_26 { pt3dadd( 18.8656, -50.7739, -38.3266, 0.67 ) }
    dend_26 { pt3dadd( 18.6021, -54.4358, -39.8294, 0.67 ) }
    dend_26 { pt3dadd( 18.3309, -56.4093, -40.5681, 0.67 ) }
    dend_26 { pt3dadd( 17.8149, -58.8948, -41.6417, 2.0 ) }
    dend_26 { pt3dadd( 17.2237, -61.4327, -42.907, 0.67 ) }
    dend_26 { pt3dadd( 16.5691, -64.036, -44.3181, 0.67 ) }
    dend_26 { pt3dadd( 15.7682, -67.4041, -46.2437, 0.67 ) }
    dend_26 { pt3dadd( 15.0325, -70.2546, -47.943, 1.33 ) }
    dend_26 { pt3dadd( 14.2147, -73.9016, -49.9932, 0.67 ) }
    dend_26 { pt3dadd( 13.743, -76.5361, -51.6243, 0.67 ) }
    dend_26 { pt3dadd( 13.5589, -77.6054, -52.3349, 1.33 ) }
    dend_26 { pt3dadd( 13.3568, -79.0614, -53.3263, 0.67 ) }
    dend_26 { pt3dadd( 13.1393, -80.7925, -54.5577, 0.67 ) }
    dend_26 { pt3dadd( 12.9637, -82.9732, -56.0396, 1.33 ) }
    dend_26 { pt3dadd( 12.5966, -86.7095, -58.2898, 0.33 ) }
    dend_26 { pt3dadd( 12.195, -88.7327, -59.4699, 0.67 ) }
    dend_26 { pt3dadd( 11.7139, -90.7598, -60.8646, 0.33 ) }
    dend_26 { pt3dadd( 11.3928, -92.4748, -62.1619, 0.33 ) }
    dend_26 { pt3dadd( 11.2122, -93.9212, -63.298, 0.67 ) }
    dend_26 { pt3dadd( 10.9933, -95.1062, -64.4029, 0.33 ) }
    dend_26 { pt3dadd( 10.7958, -96.2172, -65.4216, 1.33 ) }
    dend_26 { pt3dadd( 10.4786, -98.792, -68.0733, 0.33 ) }
    dend_26 { pt3dadd( 10.3746, -100.267, -70.0224, 0.33 ) }
    dend_26 { pt3dadd( 10.2793, -101.316, -71.5416, 0.67 ) }
    dend_26 { pt3dadd( 10.2603, -103.518, -74.7783, 0.33 ) }
    dend_26 { pt3dadd( 10.3105, -104.623, -76.3778, 0.33 ) }
    dend_26 { pt3dadd( 10.3964, -105.32, -77.3602, 1.33 ) }
    dend_26 { pt3dadd( 10.7513, -108.169, -81.1997, 0.33 ) }
    dend_26 { pt3dadd( 10.8764, -109.372, -82.8331, 0.33 ) }
    dend_26 { pt3dadd( 11.0129, -110.703, -84.5657, 0.33 ) }
    dend_26 { pt3dadd( 11.0986, -111.704, -85.7356, 2.0 ) }
    dend_26 { pt3dadd( 11.1168, -114.483, -88.7887, 0.33 ) }
    dend_26 { pt3dadd( 11.101, -114.788, -89.095, 0.33 ) }
    dend_26 { pt3dadd( 10.9521, -115.723, -89.9217, 0.67 ) }
    dend_26 { pt3dadd( 10.5901, -117.345, -91.6151, 0.33 ) }
    dend_26 { pt3dadd( 10.5229, -117.54, -91.8347, 1.33 ) }
    dend_26 { pt3dadd( 10.0636, -118.514, -92.9129, 0.33 ) }
    dend_26 { pt3dadd( 9.07974, -119.93, -94.4416, 0.67 ) }
    dend_26 { pt3dadd( 8.59383, -120.692, -95.3626, 0.33 ) }
    dend_26 { pt3dadd( 7.92891, -121.893, -97.1905, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 54/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 23.6571, -14.9154, -26.491, 0.67 ) }
    dend_25 { pt3dadd( 26.254, -22.0703, -42.6695, 0.67 ) }
    dend_25 { pt3dadd( 27.0907, -24.5365, -48.2515, 1.33 ) }
    dend_25 { pt3dadd( 28.9782, -31.5657, -63.4592, 0.33 ) }
    dend_25 { pt3dadd( 29.5085, -33.915, -68.2017, 1.33 ) }
    dend_25 { pt3dadd( 30.3889, -37.8365, -75.4883, 0.67 ) }
    dend_25 { pt3dadd( 30.8603, -39.6965, -78.863, 0.33 ) }
    dend_25 { pt3dadd( 31.3927, -41.8307, -82.1864, 0.33 ) }
    dend_25 { pt3dadd( 32.3313, -45.4313, -87.6256, 0.33 ) }
    dend_25 { pt3dadd( 32.7284, -47.5798, -89.8952, 0.67 ) }
    dend_25 { pt3dadd( 33.1568, -50.7375, -92.8316, 0.33 ) }
    dend_25 { pt3dadd( 33.9878, -56.611, -97.0664, 1.33 ) }
    dend_25 { pt3dadd( 34.4507, -59.3647, -98.7674, 0.67 ) }
    dend_25 { pt3dadd( 35.1612, -63.0687, -100.774, 0.33 ) }
    dend_25 { pt3dadd( 36.5101, -68.2943, -104.067, 0.67 ) }
    dend_25 { pt3dadd( 37.3752, -71.1523, -106.108, 0.33 ) }
    dend_25 { pt3dadd( 38.2678, -73.3522, -107.755, 1.33 ) }
    dend_25 { pt3dadd( 39.8866, -76.2944, -109.807, 0.33 ) }
    dend_25 { pt3dadd( 42.668, -79.9287, -112.492, 0.33 ) }
    dend_25 { pt3dadd( 48.4975, -86.1023, -117.116, 0.67 ) }
    dend_25 { pt3dadd( 50.3249, -87.8881, -118.511, 0.33 ) }
    dend_25 { pt3dadd( 53.7693, -91.326, -120.609, 0.67 ) }
    dend_25 { pt3dadd( 57.8685, -95.9587, -122.465, 0.67 ) }
    dend_25 { pt3dadd( 61.5514, -100.539, -123.519, 0.33 ) }
    dend_25 { pt3dadd( 63.4806, -103.344, -123.532, 1.33 ) }
    dend_25 { pt3dadd( 66.7198, -109.139, -122.78, 0.33 ) }
    dend_25 { pt3dadd( 70.3412, -116.703, -121.55, 1.33 ) }
    dend_25 { pt3dadd( 73.3758, -124.421, -120.263, 0.33 ) }
    dend_25 { pt3dadd( 74.1385, -126.522, -119.856, 1.33 ) }
    dend_25 { pt3dadd( 77.1026, -135.004, -118.26, 0.33 ) }
    dend_25 { pt3dadd( 78.5798, -139.251, -117.403, 0.33 ) }
    dend_25 { pt3dadd( 79.2307, -141.04, -117.06, 1.33 ) }
    dend_25 { pt3dadd( 81.6691, -147.56, -116.323, 0.33 ) }
    dend_25 { pt3dadd( 82.2448, -149.147, -116.128, 0.67 ) }
    dend_25 { pt3dadd( 84.3059, -154.907, -115.617, 0.33 ) }
    dend_25 { pt3dadd( 86.1322, -160.055, -115.679, 0.33 ) }
    dend_25 { pt3dadd( 86.8577, -162.201, -115.603, 1.33 ) }
    dend_25 { pt3dadd( 87.9627, -165.557, -115.304, 0.33 ) }
    dend_25 { pt3dadd( 88.2507, -166.573, -115.075, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 28.9686, 52.7335, 13.9479, 0.67 ) }
    dend_9 { pt3dadd( 30.3748, 53.904, 14.5818, 0.67 ) }
    dend_9 { pt3dadd( 33.1092, 56.1802, 15.8144, 0.67 ) }
    dend_9 { pt3dadd( 34.9322, 57.6977, 16.6361, 0.33 ) }
    dend_9 { pt3dadd( 35.3769, 58.0679, 16.8366, 0.67 ) }
    dend_9 { pt3dadd( 45.3871, 64.7548, 21.504, 0.67 ) }
    dend_9 { pt3dadd( 55.4324, 69.0709, 28.372, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 64.7845, 72.3349, 36.6539, 0.67 ) }
    dend_9 { pt3dadd( 75.1471, 74.2015, 44.1263, 0.67 ) }
    dend_9 { pt3dadd( 85.4784, 77.3602, 51.1968, 0.67 ) }
    dend_9 { pt3dadd( 95.0099, 81.6879, 58.755, 0.67 ) }
    dend_9 { pt3dadd( 103.765, 87.3332, 66.3822, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 28.9686, 52.7335, 13.9479, 0.67 ) }
    dend_4 { pt3dadd( 28.9513, 58.3234, 12.2653, 0.67 ) }
    dend_4 { pt3dadd( 28.9412, 61.5776, 11.2858, 0.67 ) }
    dend_4 { pt3dadd( 28.9328, 64.2805, 10.4722, 0.33 ) }
    dend_4 { pt3dadd( 28.9285, 65.6604, 10.0569, 0.67 ) }
    dend_4 { pt3dadd( 28.9103, 71.532, 8.28949, 0.33 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 11/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 95.0035, -39.6202, -263.382, 0.33 ) }
    apic_24 { pt3dadd( 96.5876, -40.2177, -263.255, 0.33 ) }
    apic_24 { pt3dadd( 97.8289, -40.686, -263.156, 0.67 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 14/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 95.0035, -39.6202, -263.382, 0.33 ) }
    apic_23 { pt3dadd( 101.513, -38.4779, -266.571, 0.33 ) }
    apic_23 { pt3dadd( 102.867, -38.3239, -267.655, 1.33 ) }
    apic_23 { pt3dadd( 105.908, -37.8982, -270.522, 0.33 ) }
    apic_23 { pt3dadd( 108.265, -37.4566, -272.934, 0.33 ) }
    apic_23 { pt3dadd( 109.469, -37.1839, -274.174, 1.33 ) }
    apic_23 { pt3dadd( 112.131, -36.5233, -277.039, 0.33 ) }
    apic_23 { pt3dadd( 117.834, -35.1465, -283.694, 0.33 ) }
    apic_23 { pt3dadd( 118.948, -34.9587, -285.213, 0.33 ) }
    apic_23 { pt3dadd( 119.808, -34.867, -286.438, 0.67 ) }
    apic_23 { pt3dadd( 121.36, -34.8369, -288.468, 0.33 ) }
    apic_23 { pt3dadd( 123.209, -34.9573, -290.695, 0.67 ) }
    apic_23 { pt3dadd( 126.426, -35.2146, -294.095, 0.33 ) }
    apic_23 { pt3dadd( 128.535, -35.3314, -296.139, 1.33 ) }
    apic_23 { pt3dadd( 131.225, -35.4793, -298.896, 0.33 ) }
    apic_23 { pt3dadd( 132.623, -35.4764, -300.42, 0.67 ) }
    apic_23 { pt3dadd( 137.962, -34.9395, -306.745, 0.33 ) }
    apic_23 { pt3dadd( 139.131, -34.7147, -308.136, 0.67 ) }
    apic_23 { pt3dadd( 142.478, -33.4269, -312.889, 0.33 ) }
    apic_23 { pt3dadd( 143.092, -33.1159, -313.853, 0.33 ) }
    apic_23 { pt3dadd( 144.664, -32.3067, -316.506, 1.33 ) }
    apic_23 { pt3dadd( 146.883, -31.1955, -320.147, 0.33 ) }
    apic_23 { pt3dadd( 147.719, -30.7359, -321.33, 1.33 ) }
    apic_23 { pt3dadd( 152.918, -27.9347, -328.069, 0.33 ) }
    apic_23 { pt3dadd( 154.186, -27.2399, -329.633, 1.33 ) }
    apic_23 { pt3dadd( 157.447, -25.5886, -333.626, 0.33 ) }
    apic_23 { pt3dadd( 158.176, -25.2449, -334.496, 0.67 ) }
    apic_23 { pt3dadd( 161.33, -23.6889, -338.048, 0.67 ) }
    apic_23 { pt3dadd( 162.323, -23.2035, -339.093, 0.67 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 43/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -7.88972, 376.915, 41.4145, 1.33 ) }
    apic_11 { pt3dadd( -18.2106, 392.768, 42.0674, 0.67 ) }
    apic_11 { pt3dadd( -21.8009, 397.885, 43.2817, 0.67 ) }
    apic_11 { pt3dadd( -27.3744, 405.857, 45.268, 0.67 ) }
    apic_11 { pt3dadd( -32.2548, 412.657, 46.9602, 0.67 ) }
    apic_11 { pt3dadd( -40.6932, 424.44, 49.8386, 0.67 ) }
    apic_11 { pt3dadd( -46.4602, 432.67, 51.7727, 0.67 ) }
    apic_11 { pt3dadd( -53.6723, 441.808, 55.248, 1.33 ) }
    apic_11 { pt3dadd( -57.4971, 446.784, 57.2004, 0.67 ) }
    apic_11 { pt3dadd( -58.9038, 448.643, 58.2122, 0.67 ) }
    apic_11 { pt3dadd( -60.6889, 451.106, 60.0213, 0.67 ) }
    apic_11 { pt3dadd( -61.7098, 452.799, 61.475, 0.67 ) }
    apic_11 { pt3dadd( -65.4529, 460.038, 67.5261, 0.67 ) }
    apic_11 { pt3dadd( -68.5701, 467.227, 73.4447, 0.67 ) }
    apic_11 { pt3dadd( -71.4549, 475.518, 80.5996, 0.67 ) }
    apic_11 { pt3dadd( -73.3847, 482.628, 86.5609, 0.67 ) }
    apic_11 { pt3dadd( -74.2422, 486.159, 89.4399, 0.67 ) }
    apic_11 { pt3dadd( -75.4038, 492.063, 93.6351, 0.67 ) }
    apic_11 { pt3dadd( -75.5233, 493.199, 94.3181, 0.67 ) }
    apic_11 { pt3dadd( -75.6115, 498.586, 97.5971, 0.67 ) }
    apic_11 { pt3dadd( -75.5822, 502.253, 98.8788, 0.67 ) }
    apic_11 { pt3dadd( -75.3701, 504.192, 99.3468, 0.33 ) }
    apic_11 { pt3dadd( -74.24, 509.429, 100.931, 0.67 ) }
    apic_11 { pt3dadd( -72.7196, 523.384, 106.383, 0.67 ) }
    apic_11 { pt3dadd( -73.3948, 536.958, 112.872, 0.67 ) }
    apic_11 { pt3dadd( -74.0089, 550.157, 120.096, 0.67 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 69/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -7.88972, 376.915, 41.4145, 1.33 ) }
    apic_6 { pt3dadd( -6.5062, 380.288, 37.8956, 0.67 ) }
    apic_6 { pt3dadd( -4.84434, 384.837, 33.003, 0.67 ) }
    apic_6 { pt3dadd( -3.01003, 390.302, 26.572, 0.67 ) }
    apic_6 { pt3dadd( -1.37732, 394.707, 20.7631, 0.67 ) }
    apic_6 { pt3dadd( 0.112664, 398.756, 15.0334, 0.67 ) }
    apic_6 { pt3dadd( 1.95862, 403.766, 7.88512, 0.67 ) }
    apic_6 { pt3dadd( 3.02543, 406.698, 3.51542, 0.67 ) }
    apic_6 { pt3dadd( 5.40663, 412.493, -5.50862, 1.33 ) }
    apic_6 { pt3dadd( 7.34886, 416.978, -12.9095, 1.33 ) }
    apic_6 { pt3dadd( 8.34619, 419.353, -17.2314, 0.67 ) }
    apic_6 { pt3dadd( 8.80099, 420.529, -19.3578, 1.33 ) }
    apic_6 { pt3dadd( 9.89105, 423.182, -24.0688, 0.67 ) }
    apic_6 { pt3dadd( 10.797, 425.221, -27.3055, 1.33 ) }
    apic_6 { pt3dadd( 11.5986, 427.055, -29.9077, 1.33 ) }
    apic_6 { pt3dadd( 14.8032, 435.206, -40.4335, 0.67 ) }
    apic_6 { pt3dadd( 16.2483, 438.473, -44.5871, 1.33 ) }
    apic_6 { pt3dadd( 17.0815, 440.229, -46.798, 0.67 ) }
    apic_6 { pt3dadd( 18.4667, 443.368, -50.193, 0.67 ) }
    apic_6 { pt3dadd( 19.1864, 444.868, -51.7207, 0.67 ) }
    apic_6 { pt3dadd( 19.8105, 445.98, -52.7819, 1.33 ) }
    apic_6 { pt3dadd( 23.9378, 452.281, -57.9452, 0.67 ) }
    apic_6 { pt3dadd( 24.9585, 453.825, -59.1407, 1.33 ) }
    apic_6 { pt3dadd( 27.901, 458.091, -62.8363, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 93/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 53.3875, 54.1364, -154.837, 0.67 ) }
    dend_35 { pt3dadd( 56.9814, 54.7898, -154.284, 0.33 ) }
    dend_35 { pt3dadd( 57.1925, 54.8284, -154.392, 0.67 ) }
    dend_35 { pt3dadd( 58.7735, 55.1587, -155.32, 0.33 ) }
    dend_35 { pt3dadd( 59.0643, 55.2328, -155.554, 0.67 ) }
    dend_35 { pt3dadd( 60.7122, 55.6756, -156.97, 0.33 ) }
    dend_35 { pt3dadd( 61.2706, 55.8333, -157.474, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_35 { pt3dadd( 63.3194, 56.4329, -159.575, 0.33 ) }
    dend_35 { pt3dadd( 63.6538, 56.5358, -159.928, 1.33 ) }
    dend_35 { pt3dadd( 66.4135, 57.3726, -162.775, 0.33 ) }
    dend_35 { pt3dadd( 66.5528, 57.4171, -162.915, 1.33 ) }
    dend_35 { pt3dadd( 68.695, 58.2192, -165.181, 0.33 ) }
    dend_35 { pt3dadd( 68.8783, 58.2937, -165.38, 0.67 ) }
    dend_35 { pt3dadd( 70.9772, 59.1866, -167.623, 0.33 ) }
    dend_35 { pt3dadd( 72.1971, 59.7111, -168.925, 0.67 ) }
    dend_35 { pt3dadd( 73.2569, 60.1878, -170.022, 0.33 ) }
    dend_35 { pt3dadd( 75.4543, 61.2294, -172.388, 0.67 ) }
    dend_35 { pt3dadd( 76.1669, 61.6146, -173.225, 0.33 ) }
    dend_35 { pt3dadd( 76.7543, 61.9696, -173.993, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 12/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 53.3875, 54.1364, -154.837, 0.67 ) }
    dend_34 { pt3dadd( 49.7408, 58.8533, -161.255, 1.33 ) }
    dend_34 { pt3dadd( 48.0853, 60.8718, -163.897, 0.33 ) }
    dend_34 { pt3dadd( 47.6395, 61.4491, -164.67, 1.33 ) }
    dend_34 { pt3dadd( 45.1109, 65.5595, -170.903, 0.33 ) }
    dend_34 { pt3dadd( 44.6405, 66.5393, -172.525, 0.67 ) }
    dend_34 { pt3dadd( 43.8384, 68.6597, -176.128, 0.33 ) }
    dend_34 { pt3dadd( 43.5884, 69.4021, -177.409, 0.33 ) }
    dend_34 { pt3dadd( 42.9295, 72.0998, -182.342, 1.33 ) }
    dend_34 { pt3dadd( 42.2195, 77.297, -192.368, 0.33 ) }
    dend_34 { pt3dadd( 42.3323, 79.6012, -197.249, 0.67 ) }
    dend_34 { pt3dadd( 42.4706, 80.453, -199.113, 0.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 24/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 30.6233, -11.0756, -42.1704, 0.67 ) }
    dend_32 { pt3dadd( 25.8973, -12.8968, -47.7619, 0.67 ) }
    dend_32 { pt3dadd( 22.9424, -14.1476, -51.1243, 0.67 ) }
    dend_32 { pt3dadd( 19.4252, -15.6049, -54.8213, 0.67 ) }
    dend_32 { pt3dadd( 17.6198, -16.2708, -56.6533, 1.33 ) }
    dend_32 { pt3dadd( 13.2354, -17.7858, -60.9121, 0.67 ) }
    dend_32 { pt3dadd( 10.8497, -18.666, -63.2106, 0.33 ) }
    dend_32 { pt3dadd( 8.34895, -19.6793, -65.3982, 0.33 ) }
    dend_32 { pt3dadd( 6.69007, -20.2575, -67.1543, 0.67 ) }
    dend_32 { pt3dadd( 5.25565, -20.8496, -69.191, 0.33 ) }
    dend_32 { pt3dadd( 4.29835, -21.3521, -70.7601, 0.67 ) }
    dend_32 { pt3dadd( 3.36289, -22.1232, -72.6416, 0.67 ) }
    dend_32 { pt3dadd( 2.077, -23.7981, -75.924, 0.67 ) }
    dend_32 { pt3dadd( 1.21099, -26.0427, -79.0864, 0.67 ) }
    dend_32 { pt3dadd( 0.81919, -28.3734, -81.4356, 1.33 ) }
    dend_32 { pt3dadd( 0.626175, -30.5625, -83.0337, 0.67 ) }
    dend_32 { pt3dadd( 0.332018, -33.907, -84.9246, 0.67 ) }
    dend_32 { pt3dadd( -0.151208, -37.0039, -86.3612, 0.67 ) }
    dend_32 { pt3dadd( -0.864964, -40.5316, -87.7204, 0.33 ) }
    dend_32 { pt3dadd( -2.039, -44.1677, -89.2814, 0.33 ) }
    dend_32 { pt3dadd( -3.15917, -46.8126, -90.578, 0.33 ) }
    dend_32 { pt3dadd( -5.33542, -50.9477, -93.311, 0.33 ) }
    dend_32 { pt3dadd( -7.47717, -54.3428, -96.0801, 1.33 ) }
    dend_32 { pt3dadd( -8.86396, -56.443, -98.0747, 0.33 ) }
    dend_32 { pt3dadd( -11.9385, -60.9226, -102.737, 0.33 ) }
    dend_32 { pt3dadd( -13.7319, -63.4663, -105.692, 1.33 ) }
    dend_32 { pt3dadd( -16.2155, -67.0542, -110.146, 0.33 ) }
    dend_32 { pt3dadd( -16.9059, -68.0411, -111.577, 1.33 ) }
    dend_32 { pt3dadd( -18.6592, -70.5973, -115.762, 0.33 ) }
    dend_32 { pt3dadd( -18.8847, -70.9431, -116.415, 0.67 ) }
    dend_32 { pt3dadd( -19.7557, -72.3507, -119.495, 0.33 ) }
    dend_32 { pt3dadd( -20.3775, -73.2232, -121.924, 0.67 ) }
    dend_32 { pt3dadd( -21.5079, -74.7067, -126.284, 0.33 ) }
    dend_32 { pt3dadd( -21.786, -74.9997, -127.306, 0.67 ) }
    dend_32 { pt3dadd( -22.8928, -75.8642, -130.308, 0.67 ) }
    dend_32 { pt3dadd( -23.4382, -76.2711, -131.705, 0.67 ) }
    dend_32 { pt3dadd( -24.6827, -77.0915, -134.384, 0.33 ) }
    dend_32 { pt3dadd( -25.2436, -77.5536, -135.575, 0.67 ) }
    dend_32 { pt3dadd( -26.3818, -78.6813, -137.271, 0.33 ) }
    dend_32 { pt3dadd( -28.7505, -81.0277, -140.203, 0.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 64/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 30.6233, -11.0756, -42.1704, 0.67 ) }
    dend_29 { pt3dadd( 32.2823, -10.9527, -43.9736, 2.67 ) }
    dend_29 { pt3dadd( 36.2742, -10.3973, -48.1552, 0.67 ) }
    dend_29 { pt3dadd( 37.7769, -10.1901, -49.8544, 0.67 ) }
    dend_29 { pt3dadd( 40.6455, -10.0407, -53.5418, 0.67 ) }
    dend_29 { pt3dadd( 42.8729, -10.1391, -56.7269, 0.67 ) }
    dend_29 { pt3dadd( 51.4608, -11.1819, -69.427, 1.33 ) }
    dend_29 { pt3dadd( 55.319, -11.7621, -75.832, 0.67 ) }
    dend_29 { pt3dadd( 56.949, -11.9948, -78.7174, 0.67 ) }
    dend_29 { pt3dadd( 59.9756, -12.4131, -83.9427, 1.33 ) }
    dend_29 { pt3dadd( 62.8725, -12.9266, -88.6273, 0.67 ) }
    dend_29 { pt3dadd( 66.1499, -13.7576, -93.8521, 1.33 ) }
    dend_29 { pt3dadd( 70.1487, -16.6353, -102.675, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 77/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 28.9103, 71.532, 8.28949, 0.33 ) }
    dend_8 { pt3dadd( 26.9837, 69.3063, 8.36782, 0.33 ) }
    dend_8 { pt3dadd( 20.8394, 60.9329, 10.7874, 0.33 ) }
    dend_8 { pt3dadd( 14.081, 52.9961, 13.035, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 81/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 28.9103, 71.532, 8.28949, 0.33 ) }
    dend_5 { pt3dadd( 27.7214, 72.0756, 7.06701, 0.33 ) }
    dend_5 { pt3dadd( 27.1068, 72.3567, 6.43499, 0.67 ) }
    dend_5 { pt3dadd( 22.2903, 74.4088, -0.642503, 0.67 ) }
    dend_5 { pt3dadd( 18.0802, 77.9803, -7.4997, 0.67 ) }
    dend_5 { pt3dadd( 14.6821, 81.7591, -14.6882, 0.67 ) }
    dend_5 { pt3dadd( 10.9349, 84.6047, -22.1288, 0.67 ) }
    dend_5 { pt3dadd( 7.84006, 86.5219, -30.1442, 0.67 ) }
    dend_5 { pt3dadd( 4.58674, 88.1926, -38.1521, 0.67 ) }
    dend_5 { pt3dadd( 0.883981, 90.953, -45.6468, 0.67 ) }
    dend_5 { pt3dadd( -1.79158, 94.6342, -53.1828, 0.67 ) }
    dend_5 { pt3dadd( -3.32678, 99.2678, -60.509, 0.67 ) }
    // Section: apic_15, id: apic_15, parent: apic_11 (entry count 93/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -74.0089, 550.157, 120.096, 0.67 ) }
    apic_15 { pt3dadd( -76.2956, 556.653, 123.208, 0.67 ) }
    apic_15 { pt3dadd( -77.9593, 562.662, 127.48, 0.67 ) }
    apic_15 { pt3dadd( -79.9786, 568.25, 132.15, 0.67 ) }
    apic_15 { pt3dadd( -80.4629, 574.615, 136.195, 0.67 ) }
    apic_15 { pt3dadd( -80.4426, 581.395, 139.533, 0.67 ) }
    apic_15 { pt3dadd( -81.6574, 588.609, 141.432, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 0/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -74.0089, 550.157, 120.096, 0.67 ) }
    apic_12 { pt3dadd( -77.3932, 560.264, 125.174, 0.67 ) }
    apic_12 { pt3dadd( -79.7894, 571.298, 128.62, 0.67 ) }
    apic_12 { pt3dadd( -84.406, 582.073, 130.026, 0.67 ) }
    apic_12 { pt3dadd( -90.1535, 592.362, 129.332, 0.67 ) }
    apic_12 { pt3dadd( -94.2277, 603.437, 128.986, 0.67 ) }
    apic_12 { pt3dadd( -98.2022, 614.551, 129.253, 0.67 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 7/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 27.901, 458.091, -62.8363, 0.67 ) }
    apic_10 { pt3dadd( 28.9206, 459.698, -64.6801, 0.67 ) }
    apic_10 { pt3dadd( 31.4399, 463.85, -69.2523, 0.67 ) }
    apic_10 { pt3dadd( 33.0441, 466.465, -72.3705, 0.67 ) }
    apic_10 { pt3dadd( 33.631, 467.564, -73.6926, 0.33 ) }
    apic_10 { pt3dadd( 33.9531, 468.193, -74.4047, 1.33 ) }
    apic_10 { pt3dadd( 35.622, 471.42, -77.9631, 0.33 ) }
    apic_10 { pt3dadd( 35.8878, 471.949, -78.506, 0.33 ) }
    apic_10 { pt3dadd( 37.1733, 474.604, -80.7186, 1.33 ) }
    apic_10 { pt3dadd( 38.4663, 477.301, -82.7791, 0.67 ) }
    apic_10 { pt3dadd( 39.5387, 479.517, -84.2623, 0.67 ) }
    apic_10 { pt3dadd( 40.7403, 481.912, -85.6165, 1.33 ) }
    apic_10 { pt3dadd( 42.0653, 484.237, -86.6668, 0.67 ) }
    apic_10 { pt3dadd( 43.2527, 485.995, -87.4435, 0.67 ) }
    apic_10 { pt3dadd( 44.1559, 487.072, -87.8791, 0.67 ) }
    apic_10 { pt3dadd( 45.4568, 488.422, -88.4345, 0.33 ) }
    apic_10 { pt3dadd( 47.5275, 490.439, -89.3929, 0.33 ) }
    apic_10 { pt3dadd( 48.2752, 491.103, -89.7356, 0.33 ) }
    apic_10 { pt3dadd( 52.9259, 494.667, -92.2389, 0.67 ) }
    apic_10 { pt3dadd( 54.7815, 495.995, -93.3561, 0.67 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 27/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 27.901, 458.091, -62.8363, 0.67 ) }
    apic_7 { pt3dadd( 29.8701, 461.305, -65.0801, 0.67 ) }
    apic_7 { pt3dadd( 31.6169, 464.416, -66.8208, 0.67 ) }
    apic_7 { pt3dadd( 32.2892, 465.657, -67.1168, 0.67 ) }
    apic_7 { pt3dadd( 32.9638, 466.993, -67.3666, 1.33 ) }
    apic_7 { pt3dadd( 33.5492, 468.188, -67.5397, 0.67 ) }
    apic_7 { pt3dadd( 33.9234, 468.991, -67.6739, 0.67 ) }
    apic_7 { pt3dadd( 34.6332, 470.475, -67.7433, 0.67 ) }
    apic_7 { pt3dadd( 36.345, 474.252, -67.7098, 0.67 ) }
    apic_7 { pt3dadd( 37.9418, 477.876, -67.903, 0.67 ) }
    apic_7 { pt3dadd( 38.529, 479.189, -68.0341, 0.67 ) }
    apic_7 { pt3dadd( 39.4514, 481.297, -68.3213, 0.67 ) }
    apic_7 { pt3dadd( 40.2496, 483.303, -68.6505, 0.67 ) }
    apic_7 { pt3dadd( 40.7158, 484.436, -68.8745, 0.67 ) }
    apic_7 { pt3dadd( 41.5913, 486.88, -69.4022, 0.67 ) }
    apic_7 { pt3dadd( 41.9444, 487.902, -69.5149, 0.67 ) }
    apic_7 { pt3dadd( 42.3642, 489.224, -69.6441, 0.67 ) }
    apic_7 { pt3dadd( 42.7641, 490.642, -69.7028, 0.67 ) }
    apic_7 { pt3dadd( 43.1767, 492.834, -69.8526, 0.67 ) }
    apic_7 { pt3dadd( 43.4309, 494.37, -69.9303, 0.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 47/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 70.1487, -16.6353, -102.675, 0.67 ) }
    dend_31 { pt3dadd( 72.5412, -18.4569, -104.818, 1.33 ) }
    dend_31 { pt3dadd( 74.4221, -20.3138, -106.681, 0.67 ) }
    dend_31 { pt3dadd( 76.1745, -22.7029, -108.874, 1.33 ) }
    dend_31 { pt3dadd( 76.7903, -23.6281, -109.749, 1.33 ) }
    dend_31 { pt3dadd( 78.1712, -25.9688, -111.975, 0.67 ) }
    dend_31 { pt3dadd( 78.9338, -27.4215, -113.453, 0.67 ) }
    dend_31 { pt3dadd( 79.9634, -29.5758, -116.288, 2.0 ) }
    dend_31 { pt3dadd( 80.9444, -31.4013, -119.092, 0.33 ) }
    dend_31 { pt3dadd( 81.9254, -32.7121, -121.51, 0.33 ) }
    dend_31 { pt3dadd( 82.4282, -33.0317, -122.802, 0.33 ) }
    dend_31 { pt3dadd( 83.6866, -33.2645, -126.036, 1.33 ) }
    dend_31 { pt3dadd( 86.589, -33.0205, -132.272, 0.67 ) }
    dend_31 { pt3dadd( 87.9738, -32.7743, -134.988, 0.67 ) }
    dend_31 { pt3dadd( 89.5792, -32.4536, -137.856, 1.33 ) }
    dend_31 { pt3dadd( 94.3908, -31.494, -146.383, 1.33 ) }
    dend_31 { pt3dadd( 97.9114, -30.899, -152.53, 1.33 ) }
    dend_31 { pt3dadd( 103.338, -29.9592, -161.902, 0.67 ) }
    dend_31 { pt3dadd( 105.212, -29.6873, -165.11, 0.67 ) }
    dend_31 { pt3dadd( 106.347, -29.5912, -167.112, 0.67 ) }
    dend_31 { pt3dadd( 108.186, -29.5528, -170.446, 0.67 ) }
    dend_31 { pt3dadd( 110.209, -29.7434, -173.754, 2.0 ) }
    dend_31 { pt3dadd( 113.251, -30.0203, -178.641, 0.67 ) }
    dend_31 { pt3dadd( 114.591, -30.2521, -180.732, 0.67 ) }
    dend_31 { pt3dadd( 117.562, -30.8862, -184.998, 1.33 ) }
    dend_31 { pt3dadd( 122.125, -31.8293, -190.953, 0.33 ) }
    dend_31 { pt3dadd( 124.119, -32.2604, -193.068, 1.33 ) }
    dend_31 { pt3dadd( 129.593, -33.3975, -197.477, 0.67 ) }
    dend_31 { pt3dadd( 132.215, -34.0229, -198.958, 0.33 ) }
    dend_31 { pt3dadd( 134.169, -34.4064, -199.562, 0.33 ) }
    dend_31 { pt3dadd( 137.289, -34.8876, -199.752, 1.33 ) }
    dend_31 { pt3dadd( 141.018, -35.3437, -199.248, 0.67 ) }
    dend_31 { pt3dadd( 145.958, -35.8095, -198.112, 0.67 ) }
    dend_31 { pt3dadd( 148.147, -36.0032, -197.367, 1.33 ) }
    dend_31 { pt3dadd( 152.592, -36.2923, -195.666, 0.33 ) }
    dend_31 { pt3dadd( 153.499, -36.3758, -195.296, 0.67 ) }
    dend_31 { pt3dadd( 156.628, -36.8755, -193.977, 0.33 ) }
    dend_31 { pt3dadd( 157.739, -37.1105, -193.493, 0.33 ) }
    dend_31 { pt3dadd( 159.065, -37.4737, -193.011, 0.33 ) }
    dend_31 { pt3dadd( 160.849, -37.9739, -192.651, 0.67 ) }
    dend_31 { pt3dadd( 162.8, -38.5964, -192.544, 0.33 ) }
    dend_31 { pt3dadd( 164.451, -39.1393, -192.765, 1.33 ) }
    dend_31 { pt3dadd( 167.957, -40.2994, -193.822, 0.33 ) }
    dend_31 { pt3dadd( 170.664, -41.0397, -194.891, 1.33 ) }
    dend_31 { pt3dadd( 173.431, -41.769, -196.359, 0.33 ) }
    dend_31 { pt3dadd( 174.073, -41.9177, -196.783, 0.67 ) }
    dend_31 { pt3dadd( 176.55, -42.4125, -199.06, 0.33 ) }
    dend_31 { pt3dadd( 177.066, -42.5092, -199.657, 0.67 ) }
    dend_31 { pt3dadd( 179.196, -42.9894, -202.992, 0.33 ) }
    dend_31 { pt3dadd( 180.444, -43.3781, -205.258, 0.33 ) }
    dend_31 { pt3dadd( 181.644, -43.7583, -207.62, 1.33 ) }
    dend_31 { pt3dadd( 183.959, -44.4501, -212.407, 0.33 ) }
    dend_31 { pt3dadd( 184.363, -44.5759, -213.302, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_31 { pt3dadd( 185.627, -45.0117, -216.818, 0.33 ) }
    dend_31 { pt3dadd( 185.859, -45.1528, -217.988, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 2/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 70.1487, -16.6353, -102.675, 0.67 ) }
    dend_30 { pt3dadd( 73.0455, -19.4773, -103.017, 1.33 ) }
    dend_30 { pt3dadd( 77.3644, -23.9075, -104.535, 0.33 ) }
    dend_30 { pt3dadd( 78.4635, -24.9702, -104.977, 1.33 ) }
    dend_30 { pt3dadd( 79.9214, -26.4403, -105.652, 0.33 ) }
    dend_30 { pt3dadd( 80.1763, -26.6855, -105.765, 0.67 ) }
    dend_30 { pt3dadd( 83.9655, -30.09, -107.679, 0.33 ) }
    dend_30 { pt3dadd( 85.5677, -31.4896, -108.813, 0.67 ) }
    dend_30 { pt3dadd( 87.1475, -32.8428, -110.234, 0.33 ) }
    dend_30 { pt3dadd( 88.3991, -33.7932, -111.329, 0.33 ) }
    dend_30 { pt3dadd( 90.2368, -35.0374, -112.872, 0.33 ) }
    dend_30 { pt3dadd( 92.846, -36.7124, -114.766, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.32678, 99.2678, -60.509, 0.67 ) }
    dend_7 { pt3dadd( -5.89222, 102.42, -69.9017, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.32678, 99.2678, -60.509, 0.67 ) }
    dend_6 { pt3dadd( -7.23514, 102.369, -67.1339, 0.67 ) }
    dend_6 { pt3dadd( -10.343, 105.757, -74.036, 0.67 ) }
    dend_6 { pt3dadd( -12.7392, 109.381, -81.1, 0.67 ) }
    dend_6 { pt3dadd( -15.7136, 111.756, -88.468, 0.67 ) }
    dend_6 { pt3dadd( -18.1137, 113.32, -96.2506, 0.67 ) }
    dend_6 { pt3dadd( -21.7066, 114.008, -103.693, 0.67 ) }
    dend_6 { pt3dadd( -24.2811, 115.77, -111.377, 0.67 ) }
    dend_6 { pt3dadd( -26.2905, 116.718, -119.367, 0.67 ) }
    dend_6 { pt3dadd( -27.9176, 116.401, -127.493, 0.67 ) }
    dend_6 { pt3dadd( -30.38, 115.118, -135.307, 0.67 ) }
    dend_6 { pt3dadd( -34.188, 112.81, -142.304, 0.67 ) }
    dend_6 { pt3dadd( -37.7044, 109.517, -149.054, 0.67 ) }
    dend_6 { pt3dadd( -40.8504, 106.233, -155.989, 0.67 ) }
    dend_6 { pt3dadd( -42.575, 103.045, -163.448, 0.67 ) }
    dend_6 { pt3dadd( -44.0435, 100.231, -171.11, 0.67 ) }
    dend_6 { pt3dadd( -46.8627, 98.0948, -178.611, 0.67 ) }
    dend_6 { pt3dadd( -49.0953, 94.3187, -185.649, 0.67 ) }
    dend_6 { pt3dadd( -51.6103, 89.0017, -191.496, 0.67 ) }
    dend_6 { pt3dadd( -54.4523, 82.2154, -195.323, 0.67 ) }
    dend_6 { pt3dadd( -59.3156, 76.0841, -198.067, 0.67 ) }
    dend_6 { pt3dadd( -63.3188, 69.4093, -200.93, 0.67 ) }
    dend_6 { pt3dadd( -65.9665, 62.0696, -203.74, 0.67 ) }
    dend_6 { pt3dadd( -68.33, 54.6751, -206.658, 0.67 ) }
    dend_6 { pt3dadd( -70.7058, 46.9772, -208.626, 0.67 ) }
    dend_6 { pt3dadd( -73.6734, 39.2331, -208.631, 0.67 ) }
    dend_6 { pt3dadd( -76.6385, 31.5086, -208.068, 0.67 ) }
    dend_6 { pt3dadd( -79.9958, 24.088, -206.506, 0.67 ) }
    dend_6 { pt3dadd( -82.7351, 16.9872, -203.211, 0.67 ) }
    dend_6 { pt3dadd( -84.3799, 10.4527, -198.377, 0.67 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 46/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -98.2022, 614.551, 129.253, 0.67 ) }
    apic_14 { pt3dadd( -100.899, 618.274, 136.484, 0.67 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 48/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -98.2022, 614.551, 129.253, 0.67 ) }
    apic_13 { pt3dadd( -98.5032, 622.206, 124.124, 0.67 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 50/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 43.4309, 494.37, -69.9303, 0.67 ) }
    apic_9 { pt3dadd( 41.653, 496.252, -78.2811, 0.33 ) }
    apic_9 { pt3dadd( 41.3892, 496.532, -79.5202, 0.67 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 53/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 43.4309, 494.37, -69.9303, 0.67 ) }
    apic_8 { pt3dadd( 46.9383, 497.092, -74.4206, 0.67 ) }
    apic_8 { pt3dadd( 50.8337, 500.115, -79.4078, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_18, apic_1, axon_1, apic_20, apic_19, apic_17, apic_2, apic_26, apic_21, apic_16, apic_3, apic_25, apic_22, apic_5, apic_4, apic_24, apic_23, apic_11, apic_6, apic_15, apic_12, apic_10, apic_7, apic_14, apic_13, apic_9, apic_8]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_18 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_20 ModelViewParmSubset_1.append()
    apic_19 ModelViewParmSubset_1.append()
    apic_17 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_26 ModelViewParmSubset_1.append()
    apic_21 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_25 ModelViewParmSubset_1.append()
    apic_22 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_24 ModelViewParmSubset_1.append()
    apic_23 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_40, dend_37, dend_20, dend_15, dend_0, apic_18, apic_1, dend_48, dend_41, dend_39, dend_38, dend_36, dend_21, dend_17, dend_16, dend_12, dend_1, apic_20, apic_19, apic_17, apic_2, dend_43, dend_42, dend_23, dend_22, dend_19, dend_18, dend_14, dend_13, dend_11, dend_2, apic_26, apic_21, apic_16, apic_3, dend_47, dend_44, dend_27, dend_24, dend_10, dend_3, apic_25, apic_22, apic_5, apic_4, dend_46, dend_45, dend_33, dend_28, dend_26, dend_25, dend_9, dend_4, apic_24, apic_23, apic_11, apic_6, dend_35, dend_34, dend_32, dend_29, dend_8, dend_5, apic_15, apic_12, apic_10, apic_7, dend_31, dend_30, dend_7, dend_6, apic_14, apic_13, apic_9, apic_8]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_18 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_20 ModelViewParmSubset_3.append()
    apic_19 ModelViewParmSubset_3.append()
    apic_17 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_26 ModelViewParmSubset_3.append()
    apic_21 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    apic_25 ModelViewParmSubset_3.append()
    apic_22 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    apic_24 ModelViewParmSubset_3.append()
    apic_23 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_10 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_18, apic_1, apic_20, apic_19, apic_17, apic_2, apic_26, apic_21, apic_16, apic_3, apic_25, apic_22, apic_5, apic_4, apic_24, apic_23, apic_11, apic_6, apic_15, apic_12, apic_10, apic_7, apic_14, apic_13, apic_9, apic_8]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_26 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_25 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_24 ModelViewParmSubset_4.append()
    apic_23 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_18, apic_1, apic_20, apic_19, apic_17, apic_2, apic_26, apic_21, apic_16, apic_3, apic_25, apic_22, apic_5, apic_4, apic_24, apic_23, apic_11, apic_6, apic_15, apic_12, apic_10, apic_7, apic_14, apic_13, apic_9, apic_8]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_18 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_20 ModelViewParmSubset_6.append()
    apic_19 ModelViewParmSubset_6.append()
    apic_17 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_26 ModelViewParmSubset_6.append()
    apic_21 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_25 ModelViewParmSubset_6.append()
    apic_22 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_24 ModelViewParmSubset_6.append()
    apic_23 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_40, dend_37, dend_20, dend_15, dend_0, apic_18, apic_1, dend_48, dend_41, dend_39, dend_38, dend_36, dend_21, dend_17, dend_16, dend_12, dend_1, apic_20, apic_19, apic_17, apic_2, dend_43, dend_42, dend_23, dend_22, dend_19, dend_18, dend_14, dend_13, dend_11, dend_2, apic_26, apic_21, apic_16, apic_3, dend_47, dend_44, dend_27, dend_24, dend_10, dend_3, apic_25, apic_22, apic_5, apic_4, dend_46, dend_45, dend_33, dend_28, dend_26, dend_25, dend_9, dend_4, apic_24, apic_23, apic_11, apic_6, dend_35, dend_34, dend_32, dend_29, dend_8, dend_5, apic_15, apic_12, apic_10, apic_7, dend_31, dend_30, dend_7, dend_6, apic_14, apic_13, apic_9, apic_8]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_18 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_20 ModelViewParmSubset_7.append()
    apic_19 ModelViewParmSubset_7.append()
    apic_17 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_26 ModelViewParmSubset_7.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_21 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()
    dend_44 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    apic_25 ModelViewParmSubset_7.append()
    apic_22 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    apic_24 ModelViewParmSubset_7.append()
    apic_23 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_40, dend_37, dend_20, dend_15, dend_0, dend_48, dend_41, dend_39, dend_38, dend_36, dend_21, dend_17, dend_16, dend_12, dend_1, dend_43, dend_42, dend_23, dend_22, dend_19, dend_18, dend_14, dend_13, dend_11, dend_2, dend_47, dend_44, dend_27, dend_24, dend_10, dend_3, dend_46, dend_45, dend_33, dend_28, dend_26, dend_25, dend_9, dend_4, dend_35, dend_34, dend_32, dend_29, dend_8, dend_5, dend_31, dend_30, dend_7, dend_6]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_47 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_33 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_20 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_19 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_17 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_26]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_26 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_16 OneSecGrp_SectionRef_38.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_23]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_23 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    apic_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    apic_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_12 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_10 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_71 = new SectionList()
    apic_7 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_25]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_25 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_24]}
    OneSecGrp_SectionRef_58 = new SectionList()
    apic_24 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_78 = new SectionList()
    apic_9 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_79 = new SectionList()
    apic_8 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_76 = new SectionList()
    apic_14 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_77 = new SectionList()
    apic_13 OneSecGrp_SectionRef_77.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()
    apic_23 apical.append()
    apic_24 apical.append()
    apic_25 apical.append()
    apic_26 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_40, dend_40, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, axon_0, axon_0, apic_18, apic_18, apic_1, apic_1, apic_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, axon_1, axon_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_2, apic_2, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_3, apic_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_14, apic_13, apic_9, apic_9, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 11
    dend_39 nseg = 15
    dend_38 nseg = 9
    dend_36 nseg = 11
    dend_17 nseg = 9
    dend_16 nseg = 5
    dend_12 nseg = 3
    apic_20 nseg = 9
    apic_19 nseg = 9
    apic_17 nseg = 13
    dend_42 nseg = 7
    dend_22 nseg = 9
    dend_14 nseg = 5
    dend_13 nseg = 5
    dend_11 nseg = 11
    apic_26 nseg = 5
    apic_21 nseg = 3
    apic_16 nseg = 15
    dend_47 nseg = 3
    dend_10 nseg = 3
    apic_5 nseg = 17
    apic_4 nseg = 13
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_33 nseg = 7
    dend_26 nseg = 7
    dend_25 nseg = 11
    dend_9 nseg = 5
    apic_23 nseg = 5
    apic_11 nseg = 11
    apic_6 nseg = 7
    dend_34 nseg = 3
    dend_32 nseg = 7
    dend_29 nseg = 3
    dend_5 nseg = 5
    apic_15 nseg = 3
    apic_12 nseg = 3
    apic_10 nseg = 3
    apic_7 nseg = 3
    dend_31 nseg = 9
    dend_6 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_PC_75e11d6cee_0_0


