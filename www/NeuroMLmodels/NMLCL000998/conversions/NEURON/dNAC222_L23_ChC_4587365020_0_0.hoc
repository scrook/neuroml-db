// Cell: dNAC222_L23_ChC_4587365020_0_0
/*
{
  "id" : "dNAC222_L23_ChC_4587365020_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.96523, -8.50396, 0.0192879, 2.77292", "-4.44098, -7.63716, 0.0179479, 3.51612", "-3.91674, -6.77037, 0.0166079, 5.09768", "-3.3925, -5.90357, 0.0152679, 6.03936", "-2.86825, -5.03677, 0.0139278, 6.97148", "-2.34401, -4.16997, 0.0125878, 7.92835", "-1.81976, -3.30317, 0.0112478, 9.28613", "-1.29552, -2.43637, 0.00990778, 9.94241", "-0.771277, -1.56957, 0.00856776, 10.1843", "-0.247034, -0.702773, 0.00722774, 10.3452", "0.27721, 0.164025, 0.00588772, 10.228", "0.801453, 1.03082, 0.0045477, 9.54324", "1.3257, 1.89762, 0.00320768, 8.78219", "1.84994, 2.76442, 0.00186766, 7.98349", "2.37418, 3.63122, 5.27637E-4, 7.19659", "2.89843, 4.49802, -8.12382E-4, 6.4097", "3.42267, 5.36482, -0.0021524, 5.30941", "3.94692, 6.23162, -0.00349242, 4.2542", "4.47116, 7.09842, -0.00483244, 3.4094", "4.9954, 7.96521, -0.00617246, 2.28943", "5.51965, 8.83201, -0.00751248, 1.46335" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.16275, -8.8822, 5.04691, 2.4", "-4.54211, -12.6778, 4.00101, 2.22", "-4.84952, -15.7535, 3.15347, 2.22", "-5.22128, -19.473, 2.12853, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.23725, 3.9098, -2.37309, 0.55", "7.99592, 5.5929, -3.43929, 0.55", "9.89705, 7.41234, -4.59185, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.56725, 7.72205, -2.03309, 1.94", "4.75014, 9.13163, -3.23496, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.51965, 8.83201, -0.00751248, 0.83", "13.2824, 21.6671, -0.00751248, 0.83", "21.0451, 34.5022, -0.00751248, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.22128, -19.473, 2.12853, 0.83", "-1.76521, -21.3265, 1.09568, 0.83", "1.03003, -22.8256, 0.260312, 0.83", "5.16921, -25.0454, -0.976686, 0.83", "7.68229, -26.3931, -1.72772, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.22128, -19.473, 2.12853, 2.22", "-5.25021, -21.7279, 0.0923306, 2.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "9.89705, 7.41234, -4.59185, 0.55", "11.7292, 9.05894, -4.87615, 0.55", "13.4125, 10.6037, -5.09416, 1.11", "15.28, 12.3652, -5.28951, 0.55", "16.4291, 13.5271, -5.38645, 0.55", "18.3007, 15.5639, -5.67392, 0.83", "19.6785, 17.2189, -6.02034, 0.55", "20.5628, 18.4729, -6.3242, 0.55", "21.8642, 20.5825, -6.89963, 1.11", "22.9691, 22.684, -7.55185, 1.11", "24.2333, 25.4958, -8.62432, 0.55", "25.2852, 28.3961, -9.84375, 0.83", "25.8751, 30.2874, -10.7212, 0.55", "26.0784, 31.0399, -11.0826, 0.55", "26.6127, 33.3174, -12.2037, 1.11", "27.1197, 35.6639, -13.3099, 0.28", "27.3467, 36.6917, -13.7071, 0.55", "27.8551, 39.0133, -14.5958, 0.28", "28.1126, 40.2376, -15.0683, 0.83", "28.5895, 42.4933, -15.9511, 0.28", "28.7816, 43.5215, -16.3284, 0.83", "29.1295, 45.8915, -17.1674, 0.83", "29.6057, 49.3249, -18.5424, 0.28", "29.726, 50.3433, -18.9962, 0.55", "29.9006, 51.8441, -19.7188, 0.28", "30.0685, 53.2436, -20.3985, 1.11", "30.5443, 57.143, -22.3029, 0.28", "30.8104, 59.2444, -23.3191, 0.83", "31.1494, 61.5953, -24.3444, 0.28", "31.3379, 62.6941, -24.7868, 0.55", "31.7415, 64.6672, -25.5832, 0.28", "31.9358, 65.4461, -25.8688, 0.55", "32.2441, 66.633, -26.2235, 0.28", "32.5194, 67.759, -26.5732, 0.83", "32.9506, 69.6508, -27.1426, 0.83", "33.8761, 74.3597, -28.6718, 0.28", "34.2298, 76.4538, -29.3103, 0.55", "34.5171, 78.5824, -29.92, 0.28", "34.965, 82.4782, -30.9577, 0.55", "35.3093, 85.6301, -31.69, 0.28", "35.4491, 87.2881, -31.998, 0.55", "35.6871, 89.75, -32.3448, 0.28", "35.938, 91.9082, -32.7164, 0.55", "36.1023, 93.022, -32.8499, 0.55", "36.7264, 96.4436, -32.9732, 0.28", "37.0131, 97.7652, -33.0143, 0.55", "37.9286, 101.43, -33.0658, 0.28", "38.2586, 102.668, -33.078, 0.55", "39.0569, 105.487, -33.0208, 0.28", "39.747, 108.037, -32.9921, 0.55", "40.6565, 111.504, -32.959, 0.28", "40.894, 112.438, -32.9441, 0.55", "41.4855, 114.781, -32.9524, 0.28", "42.1072, 117.24, -33.1001, 0.55", "42.8475, 120.156, -33.4674, 0.28", "43.3578, 122.223, -33.7793, 0.55", "43.9945, 124.797, -34.2336, 0.28", "44.8222, 128.191, -34.8999, 0.55", "45.5336, 131.081, -35.5414, 0.28", "45.8606, 132.387, -35.8446, 0.55", "46.6411, 135.414, -36.53, 0.55", "47.2629, 137.728, -37.0081, 0.28", "47.6081, 139.005, -37.2255, 0.55", "48.0489, 140.677, -37.3799, 0.28", "48.4047, 141.958, -37.4256, 0.55", "48.7388, 143.115, -37.3921, 0.55", "49.3527, 145.21, -37.1467, 0.28", "49.5686, 146.012, -37.0175, 0.55", "50.2049, 148.382, -36.6666, 0.28", "50.5545, 149.662, -36.4694, 0.83", "50.9997, 151.318, -36.3355, 0.28", "51.341, 152.366, -36.382, 0.55", "51.9471, 153.963, -36.6514, 0.28", "52.4723, 155.014, -36.8722, 0.55", "53.8525, 157.191, -37.3863, 0.28", "55.0444, 158.882, -37.8322, 0.55", "57.0497, 161.43, -38.5421, 0.28", "58.1115, 162.663, -38.8947, 0.55", "60.3442, 164.982, -39.574, 0.28", "61.9574, 166.562, -40.1658, 0.28", "62.3929, 166.948, -40.3566, 0.28", "64.5084, 168.661, -41.322, 0.28", "66.1096, 169.93, -42.0831, 0.83", "70.1197, 173.092, -44.1858, 0.28", "72.0117, 174.569, -45.3408, 0.55", "74.8876, 176.731, -47.2143, 0.28", "75.7453, 177.354, -47.7849, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "9.89705, 7.41234, -4.59185, 0.55", "10.8299, 9.82399, -4.70134, 0.55", "11.8461, 12.4238, -4.69691, 0.55", "12.4071, 13.9181, -4.60935, 0.55", "13.3475, 16.6128, -4.53112, 0.55", "13.9169, 18.3264, -4.47443, 0.28", "14.712, 20.5773, -4.3961, 1.11", "15.5003, 22.9413, -4.33822, 0.55", "15.9679, 24.5206, -4.316, 0.55", "16.7607, 27.5332, -4.17351, 0.83", "17.3181, 29.7068, -4.04814, 0.55", "18.0514, 32.7637, -3.80779, 0.55", "18.7032, 35.687, -3.63083, 0.55", "19.2704, 38.3978, -3.55683, 0.55", "19.9414, 41.6107, -3.44714, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.75014, 9.13163, -3.23496, 0.83", "6.78049, 10.3197, -3.66161, 0.83", "9.29436, 11.7908, -4.18987, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.75014, 9.13163, -3.23496, 1.11", "4.09463, 12.5534, -2.47409, 1.11", "3.70907, 14.566, -2.02656, 0.83", "2.92329, 18.6677, -1.11449, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.0451, 34.5022, -0.00751248, 0.28", "28.8079, 47.3373, -0.00751248, 0.28", "36.5706, 60.1724, -0.00751248, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.68229, -26.3931, -1.72772, 0.55", "9.91885, -27.927, -1.19864, 0.55", "12.134, -29.4463, -0.674627, 0.55", "13.9688, -30.7047, -0.240585, 0.28", "15.7814, -31.9479, 0.188202, 0.55", "18.0713, -33.5184, 0.729892, 0.55", "19.7836, -34.6928, 1.13495, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "7.68229, -26.3931, -1.72772, 0.55", "9.34449, -27.2094, -1.61976, 0.55", "11.5039, -28.1794, -1.57804, 0.55", "13.0061, -28.7981, -1.55263, 0.83", "15.1861, -29.7119, -1.59926, 0.55", "17.2072, -30.5492, -1.66929, 0.55", "19.7104, -31.5647, -1.74317, 0.83", "21.4861, -32.2244, -1.85314, 0.28", "23.2439, -32.8109, -1.98497, 0.55", "25.3452, -33.5272, -2.29938, 0.28", "26.5738, -33.9753, -2.57286, 0.55", "28.4913, -34.7195, -3.15767, 0.55", "30.1783, -35.4272, -3.74207, 0.55", "31.9647, -36.1963, -4.3976, 0.55", "35.1923, -37.5342, -5.67693, 0.55", "36.6639, -38.1472, -6.28767, 0.28", "37.65, -38.603, -6.71678, 0.55", "39.0554, -39.2975, -7.3453, 0.55", "40.8074, -40.2271, -8.1011, 0.55", "42.9422, -41.4064, -8.94465, 0.55", "45.0842, -42.5973, -9.6934, 0.55", "46.6377, -43.4867, -10.2271, 0.55", "48.4538, -44.5376, -10.8595, 0.55", "49.9773, -45.4305, -11.4283, 0.55", "51.4078, -46.3147, -11.9937, 0.55", "53.5122, -47.6005, -12.8003, 0.55", "55.0628, -48.4807, -13.3829, 0.55", "56.8028, -49.4224, -14.0792, 0.83", "58.5781, -50.3881, -14.8096, 0.83", "60.1223, -51.2309, -15.4702, 0.55", "61.8405, -52.1749, -16.316, 0.55", "62.9646, -52.7933, -16.8888, 0.83", "64.9333, -53.7913, -17.8781, 0.28", "66.3195, -54.4256, -18.5384, 0.55", "69.3945, -55.6946, -19.84, 0.55", "72.3242, -56.7951, -21.0276, 0.55", "73.6417, -57.2657, -21.542, 0.28", "75.3885, -57.8264, -22.1235, 0.55", "78.2197, -58.6673, -22.9266, 0.28", "79.8832, -59.1938, -23.3133, 0.28", "81.2859, -59.6657, -23.6296, 0.28", "83.0033, -60.3454, -24.0511, 0.55", "84.4088, -61.014, -24.4844, 0.55", "86.4576, -62.2448, -25.2925, 0.55", "88.4873, -63.6457, -26.2848, 0.55", "90.77, -65.2652, -27.5835, 0.55", "92.1304, -66.2766, -28.3586, 0.28", "93.1405, -67.0618, -28.9499, 0.55", "95.1504, -68.7014, -30.1777, 0.55", "97.0628, -70.2841, -31.2865, 0.55", "98.7693, -71.6702, -32.2408, 0.83", "100.198, -72.867, -32.8972, 0.83", "100.911, -73.4207, -33.1991, 0.83", "102.53, -74.5803, -33.8095, 0.28", "103.71, -75.3145, -34.1214, 0.83", "106.113, -76.6083, -34.5367, 0.28", "107.712, -77.3425, -34.7895, 0.83", "110.014, -78.2559, -34.9991, 0.55", "111.617, -78.7845, -35.0031, 0.55", "115.192, -79.8004, -34.634, 0.55", "117.006, -80.2765, -34.1933, 0.55", "118.831, -80.725, -33.4647, 0.55", "121.639, -81.4366, -31.7791, 0.55", "122.638, -81.7584, -30.9559, 0.55", "123.79, -82.2003, -29.8256, 0.83", "125.844, -83.2146, -27.5155, 0.28", "126.499, -83.5964, -26.7609, 0.55", "128.487, -84.8229, -24.501, 0.28", "130.225, -86.0034, -22.8229, 0.55", "130.936, -86.5263, -22.2347, 0.55", "132.456, -87.6652, -21.2447, 0.28", "133.351, -88.3462, -20.8663, 0.28", "134.194, -88.9833, -20.621, 0.55", "135.928, -90.1988, -20.3769, 0.28", "136.936, -90.8307, -20.2972, 0.28", "137.595, -91.2023, -20.2533, 0.55", "139.489, -92.0756, -20.119, 0.28", "141.282, -92.8334, -19.9556, 0.55", "142.851, -93.3708, -19.7706, 0.28", "144.319, -93.8005, -19.5741, 0.55", "146.634, -94.4151, -19.244, 0.28", "148.499, -94.8556, -18.9558, 0.28", "150.868, -95.3426, -18.5243, 0.55", "152.866, -95.7259, -18.1123, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.25021, -21.7279, 0.0923306, 0.55", "-6.7059, -24.2063, -1.8787, 0.55", "-7.52496, -25.4062, -2.86098, 0.55", "-8.91213, -27.3997, -4.38543, 0.83", "-11.3124, -31.1635, -7.06663, 0.55", "-12.9496, -33.861, -8.82863, 0.55", "-14.6775, -36.7583, -10.6428, 0.83", "-16.2372, -39.5003, -12.238, 0.55", "-17.4484, -41.508, -13.3103, 1.11", "-18.8607, -43.7291, -14.2993, 0.28", "-20.4783, -46.3094, -15.1028, 0.55", "-21.2167, -47.6546, -15.4764, 0.28", "-22.6873, -50.2008, -16.1413, 0.55", "-23.7871, -51.8226, -16.5367, 0.28", "-26.3335, -54.9656, -17.3512, 0.83", "-29.2747, -57.9975, -18.1526, 0.55", "-32.3746, -61.0562, -18.9797, 0.55", "-35.232, -63.7578, -19.7203, 0.55", "-38.3967, -66.5379, -20.5565, 0.55", "-41.0882, -68.7351, -21.2878, 0.55", "-44.2138, -70.8589, -22.0378, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-5.25021, -21.7279, 0.0923306, 1.66", "-4.31872, -24.0197, 0.717526, 1.66", "-2.95075, -27.3854, 1.63568, 0.83", "-1.23453, -31.608, 2.78757, 0.83", "0.309535, -35.4069, 3.82392, 0.83", "1.49659, -38.3275, 4.62064, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "19.9414, 41.6107, -3.44714, 0.55", "21.1608, 43.7794, -4.5507, 0.55", "22.7992, 46.3994, -5.9319, 0.55", "24.6079, 49.3262, -7.32701, 0.28", "26.1727, 51.9167, -8.45144, 0.83", "27.2242, 53.7108, -9.18765, 0.55", "28.608, 56.088, -10.1062, 0.55", "30.3054, 58.8925, -11.1061, 0.55", "32.2281, 62.0169, -11.857, 0.83", "33.5192, 64.2036, -12.0846, 0.28", "33.8535, 64.808, -12.0934, 0.28", "35.0224, 67.045, -11.9882, 0.55", "36.0564, 69.1196, -11.8135, 0.55", "38.1518, 73.3773, -11.4676, 0.55", "39.1908, 75.4748, -11.3561, 0.55", "41.3876, 79.9106, -11.2578, 0.55", "42.7295, 82.6385, -11.2741, 0.55", "44.3431, 85.9628, -11.4211, 0.55", "46.1839, 89.659, -11.9067, 0.55", "47.1131, 91.3286, -12.2889, 0.55", "47.9278, 92.5622, -12.7034, 0.28", "48.5267, 93.3008, -13.0275, 0.55", "49.6139, 94.4118, -13.567, 0.28", "51.7475, 96.3584, -14.5323, 0.55", "55.246, 99.3842, -15.834, 0.55", "58.0315, 101.789, -16.9373, 0.55", "59.6326, 103.147, -17.5635, 0.55", "63.3408, 106.188, -19.0954, 0.55", "64.8298, 107.464, -19.7246, 0.55", "66.0867, 108.648, -20.2634, 0.28", "67.7527, 110.47, -21.1155, 0.55", "69.1443, 112.274, -21.8504, 0.55", "70.5538, 114.576, -22.7879, 0.55", "71.7867, 117.214, -23.7636, 0.55", "73.0826, 120.342, -24.9395, 0.55", "73.7507, 122.062, -25.5714, 0.55", "74.36, 123.718, -26.104, 0.55", "75.1633, 125.737, -26.8049, 0.55", "76.6203, 128.771, -27.891, 0.55", "78.5076, 131.657, -29.129, 0.55", "79.5679, 132.876, -29.7985, 0.55", "80.599, 133.865, -30.4198, 0.55", "83.606, 136.375, -32.2109, 0.55", "84.8065, 137.274, -32.8783, 0.55", "86.8344, 138.691, -34.0198, 0.55", "89.1763, 140.318, -35.2679, 0.55", "90.5603, 141.306, -36.0278, 0.28", "91.5735, 142.026, -36.6383, 0.28", "92.6667, 142.826, -37.3326, 0.55", "95.5287, 144.861, -39.1587, 0.55", "98.4971, 146.917, -41.0919, 0.55", "99.9243, 147.801, -42.0472, 0.83", "103.738, 150.088, -45.3392, 0.55", "105.902, 151.284, -47.5587, 0.55", "107.518, 152.184, -49.3961, 0.55", "110.056, 153.568, -52.608, 0.55", "113.464, 155.438, -57.1271, 0.55", "119.009, 158.301, -64.7767, 0.55", "123.152, 160.409, -70.7075, 0.55", "124.705, 161.172, -73.0249, 0.55", "128.02, 162.76, -78.1715, 0.55", "129.853, 163.599, -81.048, 0.55", "132.825, 165.052, -85.6694, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.9414, 41.6107, -3.44714, 0.28", "20.1072, 43.5732, -2.54053, 0.28", "20.2146, 44.5968, -2.06274, 0.83", "20.4299, 46.2018, -1.30373, 0.55", "20.6581, 47.7914, -0.558518, 0.55", "20.9745, 49.9084, 0.399092, 0.28", "21.1906, 51.3118, 1.00732, 0.28", "21.29, 51.8525, 1.22029, 0.55", "21.5053, 52.9665, 1.65822, 0.28", "21.6421, 53.6072, 1.88965, 0.55", "21.8322, 54.4076, 2.15457, 0.28", "22.0405, 55.2344, 2.31481, 0.55", "22.3166, 56.4479, 2.47271, 0.28", "22.3166, 56.4479, 2.47271, 0.55", "22.7516, 57.9343, 2.52337, 0.55", "23.2252, 59.3104, 2.44261, 0.83", "23.9205, 61.0269, 2.18762, 0.55", "24.3164, 61.8963, 2.00382, 0.55", "25.0928, 63.4401, 1.66753, 0.55", "25.8718, 64.8829, 1.37505, 0.28", "27.1604, 67.1415, 0.971587, 0.83", "27.9935, 68.5708, 0.77491, 0.28", "28.6186, 69.5699, 0.733788, 0.55", "29.6624, 71.228, 0.73549, 0.28", "30.1339, 71.9944, 0.793605, 0.55", "30.8974, 73.2938, 1.0551, 0.28", "31.2613, 73.9684, 1.2912, 0.55", "32.034, 75.4709, 1.86388, 0.28", "32.6649, 76.6323, 2.31912, 0.55", "33.3195, 77.8028, 2.75965, 0.28", "33.9921, 79.0526, 3.21098, 0.55", "34.7139, 80.3893, 3.65638, 0.28", "35.7325, 82.362, 4.22684, 0.55", "36.3863, 83.5656, 4.52546, 0.28", "36.7053, 84.1086, 4.68589, 0.55", "37.3513, 85.136, 4.99895, 0.28", "37.8472, 85.8764, 5.22012, 0.55", "38.5769, 86.9551, 5.53566, 0.55", "39.2984, 88.0033, 5.90552, 0.55", "40.5613, 89.7751, 6.63395, 0.55", "41.6156, 91.2561, 7.3253, 0.55", "42.6931, 92.7861, 8.0552, 0.55", "44.0108, 94.7715, 8.98239, 0.55", "45.3508, 96.8931, 9.93634, 0.55", "46.0793, 98.1209, 10.4401, 0.28", "46.7794, 99.2738, 10.8685, 0.55", "47.4886, 100.458, 11.2668, 0.55", "47.9318, 101.204, 11.4844, 0.83", "48.9521, 103.031, 11.915, 0.28", "49.724, 104.823, 11.6991, 0.55", "50.3433, 106.599, 11.0219, 0.28", "50.5188, 107.225, 10.6766, 0.55", "51.0136, 109.281, 9.43799, 0.55", "51.2208, 110.368, 8.72696, 0.55", "52.3954, 117.978, 3.53282, 0.28", "52.6049, 119.495, 2.52397, 0.28", "52.7896, 120.899, 1.64397, 0.55", "53.035, 122.72, 0.509518, 0.55", "53.1512, 123.545, 0.0126106, 0.55", "53.5492, 125.336, -0.607376, 0.55", "54.2775, 127.239, -0.180836, 0.55", "54.5778, 128.075, -0.0211955, 0.55", "59.5631, 134.126, 0.895468, 0.55", "64.9814, 139.877, 0.50153, 0.55", "69.8139, 146.056, 1.33974, 0.55", "74.6215, 152.275, 1.99821, 0.55", "78.5305, 158.87, 3.76442, 0.55", "83.451, 164.561, 6.17707, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.29436, 11.7908, -4.18987, 0.55", "11.2625, 12.7606, -4.69018, 0.55", "13.1455, 13.6926, -5.05449, 0.83", "15.1061, 14.6818, -5.37171, 0.28", "16.5358, 15.3903, -5.51821, 0.55", "18.2116, 16.2027, -5.64149, 0.28", "19.4679, 16.783, -5.74823, 0.83", "21.381, 17.6198, -5.85651, 0.55", "22.9466, 18.2653, -5.89568, 0.83", "24.9534, 19.0194, -5.91807, 0.28", "26.2684, 19.4609, -5.95947, 0.55", "28.594, 20.1777, -6.0824, 0.28", "30.4823, 20.7401, -6.25023, 0.83", "31.9983, 21.1826, -6.45639, 0.28", "33.8311, 21.6973, -6.77131, 0.55", "35.9725, 22.2925, -7.21842, 0.28", "36.9079, 22.5574, -7.43172, 0.83", "38.9962, 23.1742, -7.92089, 0.28", "39.6409, 23.3641, -8.09709, 0.55", "41.6078, 23.9551, -8.71971, 0.83", "43.288, 24.4484, -9.2829, 0.28", "44.5275, 24.814, -9.72908, 0.83", "45.6486, 25.17, -10.1474, 0.28", "46.0914, 25.316, -10.3099, 0.55", "47.4743, 25.8115, -10.8033, 0.28", "48.9591, 26.4123, -11.3706, 0.83", "50.5382, 27.1113, -11.9562, 0.28", "51.1881, 27.422, -12.1707, 0.55", "52.8384, 28.2512, -12.6777, 0.28", "54.0218, 28.9114, -12.9957, 0.55", "56.3885, 30.3289, -13.5816, 0.28", "57.1823, 30.8482, -13.7489, 0.83", "58.9726, 32.0659, -14.0561, 0.28", "60.0951, 32.8687, -14.2236, 0.83", "62.8115, 34.9539, -14.561, 0.28", "63.9407, 35.8378, -14.6188, 0.83", "66.0117, 37.4474, -14.6153, 0.28", "66.7067, 37.9779, -14.5934, 0.55", "67.6715, 38.7019, -14.5171, 0.28", "68.0996, 39.0041, -14.4509, 0.55", "70.2812, 40.3839, -13.9137, 0.28", "71.5205, 41.1383, -13.6201, 0.55", "73.2029, 42.1362, -13.2952, 0.28", "73.7959, 42.4656, -13.1694, 0.83", "76.6096, 43.9392, -12.6072, 0.28", "77.937, 44.6171, -12.3516, 0.55", "79.8476, 45.5969, -12.0148, 0.28", "81.185, 46.2758, -11.7849, 0.83", "84.3503, 47.8528, -11.3326, 0.28", "86.4761, 48.8789, -10.9706, 0.55", "87.9939, 49.5964, -10.6971, 0.28", "88.7673, 49.9528, -10.5337, 0.55", "90.4345, 50.6793, -10.1151, 0.28", "91.2177, 51.0166, -9.92389, 0.55", "94.3379, 52.3742, -9.3195, 0.28", "95.5642, 52.8944, -9.09997, 0.83", "98.4234, 54.0028, -8.57429, 0.28", "99.3481, 54.3267, -8.37454, 0.28", "100.3, 54.6362, -8.17499, 0.55", "101.686, 55.0804, -7.89509, 0.28", "102.819, 55.428, -7.73364, 0.55", "105.299, 56.1177, -7.30257, 0.28", "106.97, 56.532, -6.94921, 0.83", "108.418, 56.8911, -6.53733, 0.28", "109.637, 57.1676, -6.07712, 0.55", "117.407, 60.6882, -7.30344, 0.55", "125.264, 63.5021, -9.52271, 0.55", "133.418, 66.2962, -10.012, 0.55", "141.926, 67.4847, -11.1037, 0.55", "150.169, 69.4004, -12.8957, 0.55", "157.861, 71.7326, -16.0815, 0.55", "165.231, 74.2222, -19.8515, 0.55", "172.335, 75.0474, -24.7464, 0.55", "179.627, 75.2479, -29.4329, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.29436, 11.7908, -4.18987, 0.55", "12.1455, 15.6127, -1.34129, 0.55", "16.0838, 20.6535, 2.30411, 0.83", "17.8054, 22.6459, 3.69875, 0.55", "19.5966, 24.6568, 5.21658, 0.83", "23.259, 28.5352, 8.62219, 0.83", "25.2486, 30.4848, 10.4802, 0.55", "27.4354, 32.3361, 12.4588, 0.55", "29.0795, 33.5216, 14.0513, 0.55", "32.4045, 35.6626, 17.1472, 0.55", "36.0015, 37.8832, 20.8263, 0.55", "37.2007, 38.7786, 22.1371, 0.55", "45.8096, 46.6453, 28.3396, 0.55", "54.6409, 54.2039, 34.6322, 0.55", "62.1279, 63.05, 40.9028, 0.55", "70.038, 71.4537, 47.2918, 0.55", "76.049, 82.0744, 52.107, 0.55", "84.4586, 91.3979, 56.0634, 0.55", "94.3283, 99.7886, 58.6016, 0.55", "103.205, 108.84, 62.1881, 0.55", "110.798, 118.551, 66.7644, 0.55", "117.819, 128.879, 70.8202, 0.55", "123.194, 139.271, 76.7742, 0.55", "126.942, 150.304, 82.7818, 0.55", "129.389, 161.242, 89.6018, 0.55", "132.017, 171.847, 96.8838, 0.55", "133.34, 183.347, 103.034, 0.55", "135.32, 194.675, 109.325, 0.55", "138.542, 205.409, 116.154, 0.55", "141.967, 216.158, 122.854, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.92329, 18.6677, -1.11449, 0.28", "1.41608, 18.7966, -1.52394, 0.28", "0.7822, 18.8476, -1.7213, 0.55", "-2.51799, 19.113, -2.74886, 0.28", "-3.41444, 19.1851, -3.02798, 0.55", "-6.79073, 19.4566, -4.07922, 0.28", "-8.53554, 19.5969, -4.62249, 0.28", "-9.2307, 19.64, -4.8687, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.92329, 18.6677, -1.11449, 0.83", "3.09468, 21.5207, -0.151804, 0.83", "3.29565, 24.8663, 0.977098, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "19.7836, -34.6928, 1.13495, 0.55", "22.5427, -34.9096, 3.07215, 0.55", "24.2206, -34.8073, 4.14421, 0.55", "27.1487, -34.3586, 5.85956, 0.55", "28.8226, -33.9552, 6.8041, 0.55", "31.4073, -33.3322, 8.2626, 0.55", "33.5182, -32.8234, 9.45382, 0.55", "36.1601, -31.9902, 10.7744, 0.55", "38.5021, -31.0294, 11.9247, 0.55", "42.4717, -29.0795, 13.6596, 0.55", "50.7654, -26.0416, 18.2978, 0.55", "58.3761, -22.2059, 23.4597, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "19.7836, -34.6928, 1.13495, 0.55", "21.3163, -35.6704, 0.929808, 0.55", "23.1882, -36.8566, 0.677805, 0.28", "24.5931, -37.7667, 0.466166, 0.83", "26.3073, -38.8814, 0.238077, 0.28", "27.7654, -39.8536, 0.0598577, 0.28", "28.5764, -40.4105, -0.0382833, 0.55", "29.5691, -41.1801, -0.150325, 0.28", "29.9113, -41.4746, -0.16145, 0.55", "31.1149, -42.5547, -0.112755, 0.28", "31.41, -42.8281, -0.095706, 0.83", "32.1251, -43.5361, 0.0153484, 0.28", "32.6281, -44.0362, 0.119128, 0.55", "34.0546, -45.4748, 0.459628, 0.28", "34.4424, -45.8531, 0.561162, 0.55", "35.3498, -46.7382, 0.801731, 0.28", "35.9888, -47.3163, 0.991501, 0.55", "37.1524, -48.2943, 1.40587, 0.28", "37.768, -48.7501, 1.70709, 0.55", "38.9172, -49.5637, 2.29922, 0.28", "39.3432, -49.8386, 2.51511, 0.55", "40.5805, -50.6052, 3.10938, 0.28", "41.2842, -51.0125, 3.41129, 0.55", "44.4273, -52.7612, 4.48859, 0.28", "45.5848, -53.3007, 4.7547, 0.55", "46.6772, -53.7317, 4.86207, 0.28", "47.659, -54.0496, 4.8063, 0.55", "49.204, -54.4234, 4.4787, 0.28", "50.2101, -54.6315, 4.16953, 0.55", "52.0731, -54.8888, 3.37459, 0.28", "53.1458, -54.992, 2.96811, 0.55", "54.666, -55.105, 2.39469, 0.28", "55.5954, -55.1051, 2.02061, 0.55", "62.0436, -58.0603, 0.856679, 0.55", "68.3714, -61.4433, 1.0116, 0.55", "74.9585, -64.1305, -0.0518865, 0.55", "81.866, -66.1703, 0.0698966, 0.55", "88.578, -68.6219, 0.917851, 0.55", "95.3348, -70.0713, 2.97345, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-44.2138, -70.8589, -22.0378, 0.28", "-45.6557, -71.2323, -21.2422, 0.28", "-46.2082, -71.3939, -20.9603, 0.55", "-49.2136, -71.9769, -19.0707, 0.28", "-50.4312, -72.231, -18.2447, 0.55", "-54.1012, -73.1913, -15.6356, 0.28", "-54.6071, -73.3491, -15.2649, 0.55", "-55.9778, -73.898, -14.167, 0.55", "-59.5533, -75.5866, -11.0047, 0.55", "-60.5428, -76.1543, -10.0616, 0.28", "-61.5934, -76.7225, -9.15594, 0.55", "-62.3996, -77.174, -8.57725, 0.28", "-63.1655, -77.6216, -8.00928, 0.55", "-64.4855, -78.4939, -6.99941, 0.28", "-65.2376, -79.0686, -6.53329, 0.55", "-67.5999, -80.489, -5.09812, 0.28", "-69.4203, -81.3624, -4.00177, 0.55", "-77.8926, -83.298, 1.99784, 0.55", "-86.6093, -83.168, 7.9845, 0.55", "-95.696, -81.5489, 13.1416, 0.55", "-104.27, -80.7432, 19.2807, 0.55", "-113.348, -81.2351, 24.6789, 0.55", "-122.892, -81.5287, 29.224, 0.55", "-131.969, -83.78, 34.1228, 0.55", "-140.344, -83.988, 40.5738, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-44.2138, -70.8589, -22.0378, 0.28", "-45.2854, -71.9419, -22.4831, 0.28", "-45.5638, -72.2101, -22.605, 0.55", "-46.4614, -73.1008, -22.9672, 0.28", "-47.4702, -74.0707, -23.3676, 0.55", "-49.3567, -75.8046, -24.0175, 0.55", "-50.6761, -77.0001, -24.4366, 0.28", "-52.1688, -78.3001, -24.8438, 0.55", "-54.0819, -79.9624, -25.2997, 0.55", "-56.3222, -81.96, -25.7243, 0.55", "-57.5346, -83.0491, -25.9162, 0.28", "-58.1914, -83.6545, -25.9966, 0.55", "-58.965, -84.3989, -26.0824, 0.28", "-60.1624, -85.5438, -26.243, 0.55", "-61.1737, -86.5449, -26.4584, 0.28", "-62.0279, -87.3531, -26.5941, 0.55", "-62.8889, -88.1479, -26.7232, 0.28", "-64.4119, -89.4559, -26.9291, 0.55", "-66.3987, -91.0666, -27.2095, 0.55", "-67.366, -91.8219, -27.3354, 0.55", "-70.3862, -94.132, -27.7206, 0.55", "-71.7422, -95.1843, -27.8755, 0.55", "-73.2377, -96.3837, -28.0236, 0.28", "-74.4259, -97.4106, -28.1377, 0.28", "-75.2868, -98.244, -28.2396, 0.55", "-76.0565, -99.1192, -28.3879, 0.55", "-76.7918, -100.152, -28.6764, 0.28", "-77.3315, -100.996, -28.8987, 0.55", "-77.7862, -101.757, -29.0943, 0.28", "-78.5351, -102.925, -29.3994, 0.55", "-79.5087, -104.291, -29.786, 0.55", "-80.3938, -105.483, -30.1497, 0.55", "-81.4854, -106.884, -30.6011, 0.28", "-82.5759, -108.164, -31.0457, 0.55", "-83.4522, -109.111, -31.3795, 0.55", "-84.3385, -109.986, -31.7318, 0.55", "-85.4398, -111.008, -32.1751, 0.83", "-90.785, -115.732, -33.7033, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.49659, -38.3275, 4.62064, 0.83", "2.81433, -39.0787, 4.81564, 0.83", "4.24567, -39.8307, 5.03778, 0.83", "6.42701, -40.8921, 5.3895, 0.83", "8.92115, -42.0258, 5.80628, 0.83", "11.8159, -43.3051, 6.30767, 0.83", "14.1523, -44.3376, 6.71234, 0.83", "17.8292, -45.9085, 7.33255, 0.83", "19.4972, -46.6115, 7.60914, 0.55", "20.9985, -47.1755, 7.85701, 0.55", "22.4315, -47.7021, 8.11497, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.49659, -38.3275, 4.62064, 1.11", "0.621642, -39.7391, 2.82508, 1.11", "-1.87291, -43.7637, -2.29421, 0.83", "-2.82846, -45.3053, -4.2552, 0.83", "-3.56008, -46.4857, -5.75661, 0.83", "-4.46892, -47.952, -7.62174, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "132.825, 165.052, -85.6694, 0.55", "134.665, 164.797, -86.0122, 0.55", "138.336, 164.131, -87.2662, 0.55", "139.546, 163.909, -87.7405, 0.55", "142.113, 163.451, -88.8314, 0.55", "146.023, 162.854, -90.6859, 0.55", "149.911, 162.261, -92.5299, 0.55", "156.096, 161.315, -95.7595, 0.55", "157.479, 161.075, -96.5797, 0.83", "160.134, 160.623, -98.2623, 0.28", "163.015, 160.255, -100.234, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "132.825, 165.052, -85.6694, 0.55", "133.791, 166.459, -87.7665, 0.55", "135.104, 168.374, -90.6205, 0.55", "136.69, 170.684, -94.0643, 0.28", "137.174, 171.389, -95.1153, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "83.451, 164.561, 6.17707, 0.55", "84.849, 172.781, 8.13037, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "83.451, 164.561, 6.17707, 0.55", "89.5571, 169.569, 3.64079, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "179.627, 75.2479, -29.4329, 0.55", "188.202, 79.4008, -26.8833, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "179.627, 75.2479, -29.4329, 0.55", "188.107, 77.1749, -34.0186, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "141.967, 216.158, 122.854, 0.55", "147.547, 225.364, 128.287, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "141.967, 216.158, 122.854, 0.55", "148.207, 225.73, 128.976, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.29565, 24.8663, 0.977098, 0.83", "4.15281, 26.7512, 1.41214, 0.83", "4.97423, 28.8947, 1.94932, 0.83", "5.52267, 30.8366, 2.4497, 0.28", "5.71618, 31.5913, 2.61354, 1.11", "6.28325, 33.9604, 3.11708, 0.28", "6.68853, 35.6509, 3.44357, 0.83", "7.17282, 37.8433, 3.79979, 0.28", "7.67558, 40.1755, 4.17285, 0.83", "8.31125, 43.2115, 4.69348, 0.55", "8.59597, 44.6751, 4.96228, 1.11", "9.0437, 47.073, 5.43412, 0.55", "9.47744, 49.2759, 5.83134, 0.83", "9.94295, 51.3284, 6.1517, 0.28", "10.4101, 53.2751, 6.43859, 0.83", "10.72, 54.907, 6.76566, 0.28", "10.862, 55.8202, 6.95978, 0.55", "11.1084, 57.6659, 7.37109, 0.28", "11.2682, 58.9432, 7.63934, 0.83", "11.5892, 61.2678, 8.08021, 0.83", "12.0029, 63.8717, 8.60776, 0.28", "12.1301, 65.1721, 8.96658, 0.55", "12.1628, 66.3594, 9.32382, 0.28", "12.1666, 67.1348, 9.56996, 0.55", "12.1634, 68.5928, 9.99135, 0.28", "12.1733, 69.7401, 10.2648, 0.83", "12.3111, 72.9458, 10.8278, 0.55", "12.3551, 74.1161, 11.0242, 0.83", "12.3971, 75.6957, 11.2721, 0.55", "12.5022, 77.5398, 11.4216, 0.55", "12.6481, 79.1313, 11.4551, 0.28", "12.7802, 80.2029, 11.4503, 0.55", "13.0614, 81.8733, 11.388, 0.28", "13.1, 82.1283, 11.3841, 0.55", "13.3836, 84.3829, 11.3701, 0.28", "13.6061, 85.9006, 11.3806, 0.55", "13.7958, 87.1963, 11.4597, 0.28", "14.0094, 88.6003, 11.6137, 0.83", "14.3013, 90.1334, 11.8663, 0.83", "14.519, 91.2235, 12.0963, 0.28", "14.7648, 92.5513, 12.5359, 0.55", "15.1536, 94.3295, 13.0652, 0.28", "15.2164, 94.5845, 13.1316, 0.55", "15.7428, 96.4677, 13.5827, 0.28", "15.8745, 97.0016, 13.7081, 0.55", "16.329, 99.4458, 14.1186, 0.28", "16.6589, 101.767, 14.4645, 0.55", "16.7491, 102.694, 14.5772, 0.28", "16.8257, 104.028, 14.7468, 0.55", "16.8481, 106.698, 15.1456, 0.55", "16.8266, 108.352, 15.4106, 0.28", "16.7745, 110.158, 15.7107, 0.55", "16.6667, 111.811, 16.1315, 0.28", "16.6265, 112.306, 16.275, 0.55", "16.4864, 113.534, 16.6472, 0.28", "16.3647, 114.577, 16.9549, 0.83", "19.0066, 123.52, 18.9067, 0.83", "20.9103, 132.476, 21.5399, 0.83", "21.5083, 141.74, 23.6187, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.29565, 24.8663, 0.977098, 0.55", "2.51077, 25.9246, 0.991718, 0.55", "2.35285, 26.1484, 0.995219, 0.55", "1.55896, 27.3479, 1.00389, 0.83", "0.725195, 28.69, 0.966257, 0.55", "0.428753, 29.1859, 0.94397, 0.55", "0.0467158, 29.8667, 0.90744, 0.55", "-0.339911, 30.6484, 0.822122, 0.83", "-0.827811, 31.6541, 0.657597, 0.28", "-1.11507, 32.3108, 0.509704, 0.55", "-1.29563, 32.784, 0.374632, 0.28", "-1.59624, 33.5338, 0.141266, 0.83", "-2.06327, 34.6458, -0.207632, 0.55", "-2.28342, 35.1583, -0.355957, 0.55", "-2.86807, 36.5018, -0.683895, 0.55", "-3.17707, 37.2287, -0.870283, 0.28", "-3.56563, 38.1175, -1.04324, 0.55", "-3.92133, 38.9734, -1.21029, 0.28", "-4.27187, 39.8626, -1.37944, 0.28", "-4.5676, 40.6436, -1.55005, 0.55", "-5.11938, 42.0816, -1.90798, 0.55", "-5.74448, 43.942, -2.48072, 0.28", "-6.21164, 45.3886, -2.95024, 0.83", "-6.59462, 46.5643, -3.30853, 0.55", "-6.98456, 47.7431, -3.64041, 0.55", "-7.25126, 48.6101, -3.85112, 0.55", "-7.67307, 50.0762, -4.12761, 0.28", "-8.00043, 51.3144, -4.33934, 0.55", "-8.27105, 52.3661, -4.41461, 0.55", "-8.40683, 52.945, -4.43398, 0.28", "-8.5417, 53.4786, -4.44287, 0.83", "-8.8278, 54.4215, -4.46058, 0.28", "-9.13287, 55.2234, -4.48783, 0.55", "-9.63418, 56.388, -4.5856, 0.55", "-10.0909, 57.2897, -4.69683, 0.55", "-10.4502, 57.8783, -4.75577, 0.28", "-10.63, 58.1338, -4.77994, 0.55", "-11.0571, 58.6921, -4.79764, 0.55", "-11.9209, 59.7275, -4.82105, 0.28", "-12.7299, 60.6109, -4.84602, 0.55", "-13.4753, 61.396, -4.93255, 0.28", "-13.7886, 61.712, -4.96615, 0.55", "-14.5167, 62.4012, -5.03191, 0.28", "-15.4632, 63.2288, -5.12511, 0.55", "-16.3148, 63.8895, -5.23885, 0.28", "-16.9705, 64.3655, -5.32822, 0.55", "-18.6801, 65.6192, -5.4998, 0.55", "-19.2581, 66.0271, -5.54459, 0.55", "-20.0318, 66.5624, -5.60073, 0.55", "-20.8288, 67.156, -5.65165, 0.55", "-22.3233, 68.3136, -5.6832, 0.55", "-23.3545, 69.1134, -5.66601, 0.55", "-24.0304, 69.6409, -5.72249, 0.55", "-25.2846, 70.6457, -5.83063, 0.55", "-26.3816, 71.5395, -5.90847, 0.55", "-27.5224, 72.4872, -5.98053, 0.83", "-28.8735, 73.5587, -6.0923, 0.28", "-30.4527, 74.8164, -6.36444, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "58.3761, -22.2059, 23.4597, 0.55", "66.6109, -20.0094, 31.4999, 0.55", "75.3595, -19.3602, 39.2851, 0.55", "83.4095, -18.0285, 47.7042, 0.55", "91.0272, -18.1967, 56.6232, 0.55", "99.2135, -17.1151, 64.9489, 0.55", "105.819, -14.5433, 74.2675, 0.55", "112.239, -11.1252, 83.4256, 0.55", "120.204, -6.35327, 90.5061, 0.55", "127.527, -1.36032, 98.0953, 0.55", "133.985, 5.14721, 105.247, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "58.3761, -22.2059, 23.4597, 0.55", "65.8444, -19.6983, 27.4522, 0.55", "73.7886, -18.8891, 31.2611, 0.55", "81.6418, -19.0586, 35.3337, 0.55", "89.8708, -20.1849, 38.3687, 0.55", "97.9265, -20.9913, 41.9321, 0.55", "105.503, -21.7767, 46.43, 0.55", "112.408, -22.3079, 51.9365, 0.55", "119.065, -21.6827, 57.7299, 0.55", "124.912, -20.8975, 64.3209, 0.55", "130.065, -19.5291, 71.3733, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "95.3348, -70.0713, 2.97345, 0.55", "104.91, -74.1347, 4.35667, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "95.3348, -70.0713, 2.97345, 0.55", "105.019, -76.3108, -0.458543, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-140.344, -83.988, 40.5738, 0.55", "-147.658, -87.3168, 47.7864, 0.55", "-153.675, -92.3849, 55.1593, 0.55", "-160.028, -98.5858, 61.2256, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-140.344, -83.988, 40.5738, 0.55", "-146.676, -86.3228, 46.5615, 0.55", "-153.295, -89.2285, 51.9449, 0.55", "-161.065, -90.6755, 56.2962, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "22.4315, -47.7021, 8.11497, 0.55", "25.3954, -47.6706, 8.68713, 0.55", "27.8605, -47.6783, 9.19794, 0.55", "30.5184, -47.6216, 9.78177, 0.55", "33.3839, -47.5648, 10.4751, 0.55", "36.9958, -47.4031, 11.3994, 0.55", "39.6326, -47.2436, 12.0971, 0.55", "42.6279, -46.9123, 12.9028, 0.55", "44.2772, -46.64, 13.3722, 0.55", "47.5898, -45.7894, 14.3856, 0.55", "49.2448, -45.2347, 14.9435, 0.55", "50.4805, -44.7395, 15.3929, 0.55", "53.3612, -43.4114, 16.4584, 0.55", "55.3052, -42.3776, 17.1776, 0.83", "56.5849, -41.6322, 17.6578, 0.55", "58.2721, -40.5214, 18.3044, 0.55", "61.8721, -37.9608, 19.7026, 0.55", "62.8892, -37.1713, 20.1066, 0.55", "63.5217, -36.6243, 20.3581, 0.83", "65.5529, -34.6892, 21.1689, 0.55", "66.8129, -33.3373, 21.7042, 0.55", "68.3105, -31.49, 22.4368, 0.55", "69.8838, -29.2061, 23.3083, 0.55", "71.9206, -26.0139, 24.5623, 0.55", "72.7647, -24.6168, 25.129, 0.28", "74.1912, -22.1056, 26.2108, 0.55", "75.4696, -19.7907, 27.2594, 0.28", "76.0587, -18.6887, 27.7666, 0.55", "76.7894, -17.2454, 28.4061, 0.28", "77.0594, -16.7531, 28.601, 0.55", "78.0886, -15.1704, 29.1257, 0.55", "80.2789, -12.3591, 29.9529, 0.55", "81.6979, -10.7223, 30.3981, 0.55", "82.9969, -9.33998, 30.7882, 0.55", "85.7355, -6.5558, 31.5728, 0.55", "88.575, -3.73052, 32.3119, 0.55", "90.8858, -1.47288, 32.8508, 0.55", "92.4519, -0.00754765, 33.2033, 0.55", "93.6143, 1.02808, 33.4831, 0.83", "94.2436, 1.57888, 33.6448, 0.83", "95.7506, 2.89266, 34.0962, 0.55", "96.3712, 3.45914, 34.2818, 0.83", "98.1319, 5.14513, 34.7948, 0.28", "99.6275, 6.58666, 35.2498, 0.55", "100.56, 7.49358, 35.5793, 0.55", "101.869, 8.78539, 36.0762, 0.55", "103.489, 10.3747, 36.7422, 0.28", "104.747, 11.5772, 37.2595, 0.55", "106.145, 12.804, 37.8119, 0.83", "107.513, 13.8481, 38.3347, 0.55", "109.455, 15.0482, 39.1789, 0.28", "111.684, 16.2142, 40.214, 0.55", "113.424, 16.9695, 41.0661, 0.55", "115.815, 17.8367, 42.2424, 0.55", "117.998, 18.508, 43.316, 0.55", "121.102, 19.3634, 44.8487, 0.55", "122.875, 19.7951, 45.7895, 0.55", "125.488, 20.4949, 47.2107, 0.55", "126.671, 20.9058, 47.869, 0.28", "128.753, 21.9033, 49.0428, 0.55", "129.528, 22.3241, 49.4612, 0.28", "130.234, 22.7535, 49.804, 0.83", "132.504, 24.1202, 50.9833, 0.55", "134.248, 25.3596, 51.9305, 0.28", "135.63, 26.5286, 52.7237, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "22.4315, -47.7021, 8.11497, 0.55", "24.0766, -49.4318, 8.51658, 0.55", "25.9015, -51.3397, 9.0134, 0.55", "28.051, -53.6809, 9.92202, 0.28", "28.8884, -54.6073, 10.3377, 0.28", "29.9249, -55.8534, 11.1218, 0.55", "30.913, -57.0789, 11.9927, 0.28", "32.0945, -58.5686, 13.196, 0.55", "33.8939, -60.9903, 15.3247, 0.28", "34.9068, -62.3411, 16.6524, 0.55", "37.4813, -65.6334, 20.0628, 0.55", "39.0714, -67.6729, 22.1484, 0.55", "40.0825, -68.8943, 23.3727, 0.28", "40.5475, -69.4537, 23.9205, 0.55", "42.548, -71.7899, 26.0722, 0.28", "43.4185, -72.8473, 27.0455, 0.55", "45.0329, -74.8116, 28.7788, 0.55", "46.502, -76.6413, 30.5091, 0.55", "47.9783, -78.5733, 32.3487, 0.28", "48.3355, -79.0473, 32.7943, 0.55", "49.9286, -81.3813, 34.9394, 0.28", "50.0626, -81.5827, 35.1453, 0.55", "50.8183, -82.8595, 36.6299, 0.28", "51.1047, -83.5464, 37.3863, 0.55", "57.3587, -89.9418, 45.5919, 0.55", "61.6913, -97.9767, 53.5115, 0.55", "64.031, -107.312, 60.7382, 0.55", "67.7934, -116.923, 66.9133, 0.55", "72.1489, -125.576, 74.1016, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.46892, -47.952, -7.62174, 0.55", "-4.56085, -47.6997, -9.15121, 0.55", "-4.84223, -47.1241, -12.4791, 0.55", "-5.38721, -46.0414, -17.2281, 0.28", "-5.53727, -45.7432, -18.5357, 0.83", "-6.03557, -44.7532, -22.8779, 0.55", "-6.48291, -43.8645, -26.7759, 0.55", "-6.58804, -43.6131, -28.0699, 0.28", "-6.7652, -43.2747, -30.6312, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-4.46892, -47.952, -7.62174, 0.83", "-5.32939, -49.3106, -7.71395, 0.83", "-6.39579, -50.9944, -7.82823, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "21.5083, 141.74, 23.6187, 0.83", "25.3208, 155.991, 26.0444, 0.83", "30.9939, 169.833, 26.6584, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.5083, 141.74, 23.6187, 0.55", "20.7278, 151.446, 25.6248, 0.83", "20.2874, 161.31, 26.6916, 0.83", "18.829, 170.916, 28.8248, 0.83", "18.6898, 180.599, 31.0818, 0.83", "18.0357, 190.239, 33.4399, 0.83", "16.137, 199.96, 34.2733, 0.83", "13.7294, 209.605, 34.3596, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-30.4527, 74.8164, -6.36444, 0.28", "-34.8254, 74.0998, -6.32568, 0.28", "-36.1546, 73.882, -6.3139, 0.28", "-37.9481, 73.5882, -6.298, 0.55", "-39.5933, 73.3186, -6.28342, 0.28", "-41.2662, 73.0444, -6.26859, 0.28", "-44.245, 72.5564, -6.24219, 0.83", "-53.5364, 70.1113, -6.45489, 0.83", "-62.9683, 68.5263, -5.42664, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-30.4527, 74.8164, -6.36444, 0.28", "-33.3951, 77.108, -6.27791, 0.28", "-36.496, 79.4026, -6.08873, 0.55", "-39.2265, 81.4433, -5.83276, 0.55", "-39.9185, 81.9501, -5.73621, 0.55", "-41.5287, 83.1983, -5.4572, 0.28", "-43.0342, 84.3681, -5.20569, 0.55", "-44.9259, 85.7639, -4.74101, 0.28", "-46.1916, 86.6234, -4.38972, 0.28", "-48.7096, 88.3138, -3.58547, 0.55", "-51.3446, 90.05, -2.69669, 0.28", "-53.9156, 91.7191, -1.78139, 0.55", "-57.2812, 93.8485, -0.663284, 0.28", "-58.6301, 94.6937, -0.213286, 0.55", "-67.3369, 100.569, 3.15742, 0.55", "-76.3006, 105.698, 7.08585, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-6.39579, -50.9944, -7.82823, 0.55", "-6.19573, -52.5407, -7.87849, 0.55", "-6.03848, -54.8174, -8.00027, 0.55", "-5.85583, -58.3593, -8.25977, 0.55", "-5.88056, -62.4422, -8.66787, 0.55", "-5.99494, -65.4909, -9.10118, 0.55", "-6.20168, -67.7657, -9.52963, 0.55", "-6.50122, -69.3043, -9.91957, 0.55", "-7.14362, -71.896, -10.6564, 0.55", "-8.05748, -74.9824, -11.6338, 0.55", "-8.76688, -77.5484, -12.5082, 0.55", "-9.55428, -80.6003, -13.5248, 0.55", "-10.4872, -85.0881, -14.9998, 0.55", "-11.0722, -88.4184, -16.0491, 0.55", "-11.7461, -92.9245, -17.3465, 0.55", "-12.1123, -96.7359, -18.3069, 0.55", "-12.3034, -99.2568, -18.8022, 0.55", "-12.429, -102.274, -19.2337, 0.55", "-12.4672, -103.969, -19.4012, 0.55", "-12.5665, -107.75, -19.6266, 0.55", "-12.5411, -109.206, -19.608, 0.55", "-12.5661, -112.634, -19.4163, 0.55", "-12.5115, -115.352, -19.1819, 0.55", "-12.4635, -117.144, -18.9383, 0.55", "-12.4211, -118.355, -18.7567, 0.55", "-12.2554, -120.221, -18.4119, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.39579, -50.9944, -7.82823, 0.55", "-7.07595, -53.7633, -7.16568, 0.55", "-7.75606, -57.2585, -6.41071, 0.55", "-8.20431, -59.9536, -5.90821, 0.55", "-8.93044, -64.8312, -5.09447, 0.55", "-9.25997, -66.7885, -4.79201, 0.55", "-9.68597, -69.1674, -4.42365, 0.55", "-10.0659, -71.3593, -4.09402, 0.55", "-10.9412, -75.8589, -3.38494, 0.55", "-11.532, -78.1835, -2.88902, 0.55", "-12.2644, -80.6392, -2.1095, 0.55", "-13.4232, -83.8936, -0.831873, 0.55", "-14.4654, -86.4694, 0.370795, 0.55", "-15.4162, -88.6328, 1.50894, 0.55", "-16.5712, -91.1965, 3.03074, 0.55", "-17.9233, -94.4107, 5.08786, 0.55", "-18.3944, -95.8327, 5.98983, 0.55", "-18.6187, -96.7695, 6.5607, 0.83", "-18.8128, -98.6833, 7.60088, 0.83", "-18.7666, -100.254, 8.29931, 0.83", "-18.1352, -103.745, 9.63465, 0.55", "-17.4795, -106.212, 10.4286, 0.83", "-16.9984, -107.878, 11.0663, 0.55", "-16.5763, -109.43, 11.7141, 0.55", "-15.8573, -112.177, 12.9663, 0.55", "-15.5078, -113.984, 13.8651, 0.55", "-15.433, -115.432, 14.6128, 0.55", "-15.7786, -118.911, 16.4811, 0.55", "-16.1195, -120.839, 17.4642, 0.55", "-16.4658, -122.495, 18.2144, 0.55", "-16.9575, -125.163, 19.2617, 0.55", "-17.5173, -128.382, 20.3152, 0.55", "-17.8289, -130.45, 20.9, 0.55", "-18.1413, -133.039, 21.5276, 0.55", "-18.6751, -137.808, 22.5883, 0.55", "-19.158, -142.291, 23.4143, 0.55", "-19.3444, -144.445, 23.7798, 0.55", "-19.5919, -147.775, 24.351, 0.55", "-20.0229, -152.757, 25.2255, 0.83", "-20.6419, -158.079, 26.1616, 0.83", "-20.9445, -160.311, 26.5336, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "13.7294, 209.605, 34.3596, 0.83", "12.8743, 216.837, 35.5969, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.7294, 209.605, 34.3596, 0.55", "13.2007, 218.071, 36.8903, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-12.2554, -120.221, -18.4119, 0.55", "-11.2676, -121.691, -18.5429, 0.55", "-10.2848, -123.17, -18.6375, 0.55", "-8.65411, -125.737, -18.7607, 0.55", "-7.06801, -128.216, -18.8762, 0.55", "-5.99, -129.864, -18.9222, 0.55", "-4.94033, -131.447, -18.9348, 0.55", "-3.32809, -134.084, -18.9135, 0.55", "-2.19073, -135.996, -18.8418, 0.55", "-1.69561, -136.885, -18.7878, 0.55", "-0.163709, -139.778, -18.5745, 0.83", "0.888869, -141.793, -18.4324, 0.55", "2.26935, -144.319, -18.2107, 0.55", "3.35195, -146.325, -18.0205, 0.55", "4.66613, -148.815, -17.7656, 0.55", "6.2673, -151.959, -17.4283, 0.55", "7.26245, -153.97, -17.2318, 0.55", "8.20561, -155.92, -17.0713, 0.55", "8.82068, -157.213, -16.9509, 0.55", "9.24089, -158.288, -16.8298, 0.28", "9.4606, -159.078, -16.712, 0.55", "9.64975, -159.996, -16.5822, 0.28", "9.85293, -161.38, -16.4352, 0.55", "10.1815, -163.416, -16.2725, 0.28", "10.6123, -165.572, -16.0326, 0.55", "11.0514, -167.569, -15.803, 0.55", "11.3911, -169.152, -15.6407, 0.55", "11.8939, -171.166, -15.4538, 0.55", "12.3188, -172.954, -15.216, 0.55", "12.9935, -175.799, -14.9108, 0.83", "13.3718, -177.357, -14.7324, 0.28", "13.8678, -179.662, -14.4778, 0.28", "14.291, -181.915, -14.2435, 0.28", "15.088, -186.394, -13.8202, 0.55", "15.6347, -189.667, -13.5688, 1.66", "16.247, -193.26, -13.3351, 0.55", "16.8805, -196.728, -13.0882, 0.55", "17.5731, -200.624, -12.8247, 0.28", "18.0299, -203.602, -12.6631, 0.55", "18.4831, -206.89, -12.513, 0.28", "18.6725, -208.813, -12.3622, 0.83", "18.8368, -211.278, -12.159, 0.55", "18.958, -213.63, -11.9096, 0.55", "18.9454, -215.953, -11.6582, 0.83", "18.8342, -218.261, -11.4179, 0.28", "18.8342, -218.261, -11.4179, 0.55", "18.6972, -219.744, -11.3375, 0.28", "18.6362, -220.309, -11.3183, 0.55", "18.562, -221.917, -11.3011, 0.28", "18.5899, -223.359, -11.3541, 0.55", "18.8028, -226.023, -11.6219, 0.28", "18.8681, -226.666, -11.6834, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.2554, -120.221, -18.4119, 0.55", "-12.0607, -122.137, -18.2538, 0.55", "-11.9837, -123.076, -18.165, 0.28", "-11.8801, -124.043, -18.0649, 0.55", "-11.4662, -126.884, -17.7593, 0.28", "-11.4038, -127.198, -17.7455, 0.55", "-10.8404, -129.662, -17.7104, 0.28", "-10.5403, -130.775, -17.7136, 0.55", "-10.1284, -132.297, -17.7538, 0.28", "-9.63276, -134.34, -17.8613, 0.55", "-9.03123, -137.164, -18.0846, 0.28", "-8.922, -137.851, -18.1622, 0.55", "-8.83498, -139.422, -18.3982, 0.28", "-8.81311, -140.099, -18.5109, 0.55", "-8.91821, -141.994, -18.8491, 0.28", "-9.06827, -142.904, -19.0063, 0.55", "-9.56132, -144.692, -19.2191, 0.28", "-10.2173, -146.868, -19.5543, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-20.9445, -160.311, 26.5336, 0.55", "-21.7209, -161.648, 26.3868, 0.55", "-23.7169, -165.086, 26.0095, 0.55", "-25.8847, -168.821, 25.5998, 0.55", "-27.3735, -171.385, 25.3183, 0.55", "-33.3995, -180.553, 25.2455, 0.55", "-39.5321, -189.651, 25.0801, 0.55", "-47.5133, -197.116, 26.6217, 0.55", "-56.0536, -204.075, 27.5259, 0.55", "-64.9516, -210.571, 28.5835, 0.55", "-74.036, -216.283, 31.3724, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-20.9445, -160.311, 26.5336, 0.55", "-21.1835, -161.12, 26.818, 0.55", "-21.3966, -162.149, 27.1522, 0.55", "-21.8625, -164.399, 27.8831, 0.55", "-22.3119, -166.569, 28.588, 0.55", "-22.6142, -168.029, 29.0622, 0.55", "-22.9156, -169.485, 29.535, 0.55", "-23.2815, -171.31, 30.1714, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-10.2173, -146.868, -19.5543, 0.28", "-11.4644, -150.849, -20.1799, 0.28", "-11.8027, -152.081, -20.4041, 0.55", "-12.7737, -155.517, -21.0404, 0.28", "-13.2183, -157.089, -21.3317, 0.55", "-14.2212, -160.638, -21.9888, 0.28", "-14.9044, -163.055, -22.4365, 0.83", "-15.4742, -165.607, -23.0259, 0.28", "-15.8555, -167.51, -23.4913, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-10.2173, -146.868, -19.5543, 0.55", "-10.0101, -148.308, -19.1108, 0.55", "-9.69904, -150.308, -18.3897, 0.55", "-9.43603, -152.536, -17.6304, 0.55", "-9.25948, -154.06, -17.1262, 0.55", "-9.1237, -155.221, -16.7583, 0.28", "-8.9017, -157.435, -16.093, 0.55", "-8.68757, -159.756, -15.4009, 0.28", "-8.4842, -162.512, -14.796, 0.55", "-8.40329, -164.063, -14.5608, 0.28", "-8.39012, -165.201, -14.4518, 0.55", "-8.40996, -166.469, -14.3596, 0.28", "-8.44544, -167.591, -14.3197, 0.55", "-8.54211, -170.517, -14.4332, 0.28", "-8.62334, -172.964, -14.6096, 0.28", "-8.7146, -174.453, -14.7622, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-23.2815, -171.31, 30.1714, 0.28", "-20.3067, -171.794, 30.3307, 0.28", "-19.5174, -171.922, 30.373, 0.55", "-17.2531, -172.29, 30.4942, 0.28", "-15.7258, -172.538, 30.576, 0.55", "-13.3423, -172.926, 30.7036, 0.28", "-12.2069, -173.11, 30.7644, 0.55", "0.636383, -176.249, 30.9106, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.2815, -171.31, 30.1714, 0.55", "-23.4598, -175.09, 30.4029, 0.55", "-22.6591, -186.21, 32.6357, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.636383, -176.249, 30.9106, 0.55", "11.6991, -178.571, 31.1634, 0.55", "22.9725, -179.384, 31.8324, 0.55", "34.2727, -179.743, 32.5009, 0.55", "45.472, -178.093, 32.0996, 0.55", "56.6131, -176.305, 33.0932, 0.55", "67.4107, -172.929, 32.9565, 0.55", "77.4902, -168.085, 34.5273, 0.55", "86.2291, -161.159, 35.9547, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.636383, -176.249, 30.9106, 0.55", "13.9005, -178.663, 33.4532, 0.55", "26.5072, -181.119, 38.2676, 0.55", "38.8526, -182.22, 44.1809, 0.55", "52.056, -183.376, 47.7791, 0.55", "64.3757, -186.549, 52.8753, 0.55", "76.713, -191.645, 55.8175, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_58", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_9", "dend_8", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_ChC_4587365020_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_54, id: dend_54, parent: dend_28
create dend_54
public dend_54
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_29
create dend_49
public dend_49
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_31
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.4999999999991157)
    connect dend_19(0), soma_0(0.4999999999991157)
    connect dend_0(0), soma_0(0.4999999999991157)
    connect axon_0(0), soma_0(1.0)
    connect dend_54(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.96523, -8.50396, 0.0192879, 2.77292 ) }
    soma_0 { pt3dadd( -4.44098, -7.63716, 0.0179479, 3.51612 ) }
    soma_0 { pt3dadd( -3.91674, -6.77037, 0.0166079, 5.09768 ) }
    soma_0 { pt3dadd( -3.3925, -5.90357, 0.0152679, 6.03936 ) }
    soma_0 { pt3dadd( -2.86825, -5.03677, 0.0139278, 6.97148 ) }
    soma_0 { pt3dadd( -2.34401, -4.16997, 0.0125878, 7.92835 ) }
    soma_0 { pt3dadd( -1.81976, -3.30317, 0.0112478, 9.28613 ) }
    soma_0 { pt3dadd( -1.29552, -2.43637, 0.00990778, 9.94241 ) }
    soma_0 { pt3dadd( -0.771277, -1.56957, 0.00856776, 10.1843 ) }
    soma_0 { pt3dadd( -0.247034, -0.702773, 0.00722774, 10.3452 ) }
    soma_0 { pt3dadd( 0.27721, 0.164025, 0.00588772, 10.228 ) }
    soma_0 { pt3dadd( 0.801453, 1.03082, 0.0045477, 9.54324 ) }
    soma_0 { pt3dadd( 1.3257, 1.89762, 0.00320768, 8.78219 ) }
    soma_0 { pt3dadd( 1.84994, 2.76442, 0.00186766, 7.98349 ) }
    soma_0 { pt3dadd( 2.37418, 3.63122, 5.27637E-4, 7.19659 ) }
    soma_0 { pt3dadd( 2.89843, 4.49802, -8.12382E-4, 6.4097 ) }
    soma_0 { pt3dadd( 3.42267, 5.36482, -0.0021524, 5.30941 ) }
    soma_0 { pt3dadd( 3.94692, 6.23162, -0.00349242, 4.2542 ) }
    soma_0 { pt3dadd( 4.47116, 7.09842, -0.00483244, 3.4094 ) }
    soma_0 { pt3dadd( 4.9954, 7.96521, -0.00617246, 2.28943 ) }
    soma_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 1.46335 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.16275, -8.8822, 5.04691, 2.4 ) }
    dend_28 { pt3dadd( -4.54211, -12.6778, 4.00101, 2.22 ) }
    dend_28 { pt3dadd( -4.84952, -15.7535, 3.15347, 2.22 ) }
    dend_28 { pt3dadd( -5.22128, -19.473, 2.12853, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 25/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.23725, 3.9098, -2.37309, 0.55 ) }
    dend_19 { pt3dadd( 7.99592, 5.5929, -3.43929, 0.55 ) }
    dend_19 { pt3dadd( 9.89705, 7.41234, -4.59185, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.56725, 7.72205, -2.03309, 1.94 ) }
    dend_0 { pt3dadd( 4.75014, 9.13163, -3.23496, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 13.2824, 21.6671, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_28 (entry count 33/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.22128, -19.473, 2.12853, 0.83 ) }
    dend_54 { pt3dadd( -1.76521, -21.3265, 1.09568, 0.83 ) }
    dend_54 { pt3dadd( 1.03003, -22.8256, 0.260312, 0.83 ) }
    dend_54 { pt3dadd( 5.16921, -25.0454, -0.976686, 0.83 ) }
    dend_54 { pt3dadd( 7.68229, -26.3931, -1.72772, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.22128, -19.473, 2.12853, 2.22 ) }
    dend_29 { pt3dadd( -5.25021, -21.7279, 0.0923306, 2.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 9.89705, 7.41234, -4.59185, 0.55 ) }
    dend_27 { pt3dadd( 11.7292, 9.05894, -4.87615, 0.55 ) }
    dend_27 { pt3dadd( 13.4125, 10.6037, -5.09416, 1.11 ) }
    dend_27 { pt3dadd( 15.28, 12.3652, -5.28951, 0.55 ) }
    dend_27 { pt3dadd( 16.4291, 13.5271, -5.38645, 0.55 ) }
    dend_27 { pt3dadd( 18.3007, 15.5639, -5.67392, 0.83 ) }
    dend_27 { pt3dadd( 19.6785, 17.2189, -6.02034, 0.55 ) }
    dend_27 { pt3dadd( 20.5628, 18.4729, -6.3242, 0.55 ) }
    dend_27 { pt3dadd( 21.8642, 20.5825, -6.89963, 1.11 ) }
    dend_27 { pt3dadd( 22.9691, 22.684, -7.55185, 1.11 ) }
    dend_27 { pt3dadd( 24.2333, 25.4958, -8.62432, 0.55 ) }
    dend_27 { pt3dadd( 25.2852, 28.3961, -9.84375, 0.83 ) }
    dend_27 { pt3dadd( 25.8751, 30.2874, -10.7212, 0.55 ) }
    dend_27 { pt3dadd( 26.0784, 31.0399, -11.0826, 0.55 ) }
    dend_27 { pt3dadd( 26.6127, 33.3174, -12.2037, 1.11 ) }
    dend_27 { pt3dadd( 27.1197, 35.6639, -13.3099, 0.28 ) }
    dend_27 { pt3dadd( 27.3467, 36.6917, -13.7071, 0.55 ) }
    dend_27 { pt3dadd( 27.8551, 39.0133, -14.5958, 0.28 ) }
    dend_27 { pt3dadd( 28.1126, 40.2376, -15.0683, 0.83 ) }
    dend_27 { pt3dadd( 28.5895, 42.4933, -15.9511, 0.28 ) }
    dend_27 { pt3dadd( 28.7816, 43.5215, -16.3284, 0.83 ) }
    dend_27 { pt3dadd( 29.1295, 45.8915, -17.1674, 0.83 ) }
    dend_27 { pt3dadd( 29.6057, 49.3249, -18.5424, 0.28 ) }
    dend_27 { pt3dadd( 29.726, 50.3433, -18.9962, 0.55 ) }
    dend_27 { pt3dadd( 29.9006, 51.8441, -19.7188, 0.28 ) }
    dend_27 { pt3dadd( 30.0685, 53.2436, -20.3985, 1.11 ) }
    dend_27 { pt3dadd( 30.5443, 57.143, -22.3029, 0.28 ) }
    dend_27 { pt3dadd( 30.8104, 59.2444, -23.3191, 0.83 ) }
    dend_27 { pt3dadd( 31.1494, 61.5953, -24.3444, 0.28 ) }
    dend_27 { pt3dadd( 31.3379, 62.6941, -24.7868, 0.55 ) }
    dend_27 { pt3dadd( 31.7415, 64.6672, -25.5832, 0.28 ) }
    dend_27 { pt3dadd( 31.9358, 65.4461, -25.8688, 0.55 ) }
    dend_27 { pt3dadd( 32.2441, 66.633, -26.2235, 0.28 ) }
    dend_27 { pt3dadd( 32.5194, 67.759, -26.5732, 0.83 ) }
    dend_27 { pt3dadd( 32.9506, 69.6508, -27.1426, 0.83 ) }
    dend_27 { pt3dadd( 33.8761, 74.3597, -28.6718, 0.28 ) }
    dend_27 { pt3dadd( 34.2298, 76.4538, -29.3103, 0.55 ) }
    dend_27 { pt3dadd( 34.5171, 78.5824, -29.92, 0.28 ) }
    dend_27 { pt3dadd( 34.965, 82.4782, -30.9577, 0.55 ) }
    dend_27 { pt3dadd( 35.3093, 85.6301, -31.69, 0.28 ) }
    dend_27 { pt3dadd( 35.4491, 87.2881, -31.998, 0.55 ) }
    dend_27 { pt3dadd( 35.6871, 89.75, -32.3448, 0.28 ) }
    dend_27 { pt3dadd( 35.938, 91.9082, -32.7164, 0.55 ) }
    dend_27 { pt3dadd( 36.1023, 93.022, -32.8499, 0.55 ) }
    dend_27 { pt3dadd( 36.7264, 96.4436, -32.9732, 0.28 ) }
    dend_27 { pt3dadd( 37.0131, 97.7652, -33.0143, 0.55 ) }
    dend_27 { pt3dadd( 37.9286, 101.43, -33.0658, 0.28 ) }
    dend_27 { pt3dadd( 38.2586, 102.668, -33.078, 0.55 ) }
    dend_27 { pt3dadd( 39.0569, 105.487, -33.0208, 0.28 ) }
    dend_27 { pt3dadd( 39.747, 108.037, -32.9921, 0.55 ) }
    dend_27 { pt3dadd( 40.6565, 111.504, -32.959, 0.28 ) }
    dend_27 { pt3dadd( 40.894, 112.438, -32.9441, 0.55 ) }
    dend_27 { pt3dadd( 41.4855, 114.781, -32.9524, 0.28 ) }
    dend_27 { pt3dadd( 42.1072, 117.24, -33.1001, 0.55 ) }
    dend_27 { pt3dadd( 42.8475, 120.156, -33.4674, 0.28 ) }
    dend_27 { pt3dadd( 43.3578, 122.223, -33.7793, 0.55 ) }
    dend_27 { pt3dadd( 43.9945, 124.797, -34.2336, 0.28 ) }
    dend_27 { pt3dadd( 44.8222, 128.191, -34.8999, 0.55 ) }
    dend_27 { pt3dadd( 45.5336, 131.081, -35.5414, 0.28 ) }
    dend_27 { pt3dadd( 45.8606, 132.387, -35.8446, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 46.6411, 135.414, -36.53, 0.55 ) }
    dend_27 { pt3dadd( 47.2629, 137.728, -37.0081, 0.28 ) }
    dend_27 { pt3dadd( 47.6081, 139.005, -37.2255, 0.55 ) }
    dend_27 { pt3dadd( 48.0489, 140.677, -37.3799, 0.28 ) }
    dend_27 { pt3dadd( 48.4047, 141.958, -37.4256, 0.55 ) }
    dend_27 { pt3dadd( 48.7388, 143.115, -37.3921, 0.55 ) }
    dend_27 { pt3dadd( 49.3527, 145.21, -37.1467, 0.28 ) }
    dend_27 { pt3dadd( 49.5686, 146.012, -37.0175, 0.55 ) }
    dend_27 { pt3dadd( 50.2049, 148.382, -36.6666, 0.28 ) }
    dend_27 { pt3dadd( 50.5545, 149.662, -36.4694, 0.83 ) }
    dend_27 { pt3dadd( 50.9997, 151.318, -36.3355, 0.28 ) }
    dend_27 { pt3dadd( 51.341, 152.366, -36.382, 0.55 ) }
    dend_27 { pt3dadd( 51.9471, 153.963, -36.6514, 0.28 ) }
    dend_27 { pt3dadd( 52.4723, 155.014, -36.8722, 0.55 ) }
    dend_27 { pt3dadd( 53.8525, 157.191, -37.3863, 0.28 ) }
    dend_27 { pt3dadd( 55.0444, 158.882, -37.8322, 0.55 ) }
    dend_27 { pt3dadd( 57.0497, 161.43, -38.5421, 0.28 ) }
    dend_27 { pt3dadd( 58.1115, 162.663, -38.8947, 0.55 ) }
    dend_27 { pt3dadd( 60.3442, 164.982, -39.574, 0.28 ) }
    dend_27 { pt3dadd( 61.9574, 166.562, -40.1658, 0.28 ) }
    dend_27 { pt3dadd( 62.3929, 166.948, -40.3566, 0.28 ) }
    dend_27 { pt3dadd( 64.5084, 168.661, -41.322, 0.28 ) }
    dend_27 { pt3dadd( 66.1096, 169.93, -42.0831, 0.83 ) }
    dend_27 { pt3dadd( 70.1197, 173.092, -44.1858, 0.28 ) }
    dend_27 { pt3dadd( 72.0117, 174.569, -45.3408, 0.55 ) }
    dend_27 { pt3dadd( 74.8876, 176.731, -47.2143, 0.28 ) }
    dend_27 { pt3dadd( 75.7453, 177.354, -47.7849, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 9.89705, 7.41234, -4.59185, 0.55 ) }
    dend_20 { pt3dadd( 10.8299, 9.82399, -4.70134, 0.55 ) }
    dend_20 { pt3dadd( 11.8461, 12.4238, -4.69691, 0.55 ) }
    dend_20 { pt3dadd( 12.4071, 13.9181, -4.60935, 0.55 ) }
    dend_20 { pt3dadd( 13.3475, 16.6128, -4.53112, 0.55 ) }
    dend_20 { pt3dadd( 13.9169, 18.3264, -4.47443, 0.28 ) }
    dend_20 { pt3dadd( 14.712, 20.5773, -4.3961, 1.11 ) }
    dend_20 { pt3dadd( 15.5003, 22.9413, -4.33822, 0.55 ) }
    dend_20 { pt3dadd( 15.9679, 24.5206, -4.316, 0.55 ) }
    dend_20 { pt3dadd( 16.7607, 27.5332, -4.17351, 0.83 ) }
    dend_20 { pt3dadd( 17.3181, 29.7068, -4.04814, 0.55 ) }
    dend_20 { pt3dadd( 18.0514, 32.7637, -3.80779, 0.55 ) }
    dend_20 { pt3dadd( 18.7032, 35.687, -3.63083, 0.55 ) }
    dend_20 { pt3dadd( 19.2704, 38.3978, -3.55683, 0.55 ) }
    dend_20 { pt3dadd( 19.9414, 41.6107, -3.44714, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.75014, 9.13163, -3.23496, 0.83 ) }
    dend_12 { pt3dadd( 6.78049, 10.3197, -3.66161, 0.83 ) }
    dend_12 { pt3dadd( 9.29436, 11.7908, -4.18987, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.75014, 9.13163, -3.23496, 1.11 ) }
    dend_1 { pt3dadd( 4.09463, 12.5534, -2.47409, 1.11 ) }
    dend_1 { pt3dadd( 3.70907, 14.566, -2.02656, 0.83 ) }
    dend_1 { pt3dadd( 2.92329, 18.6677, -1.11449, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 28.8079, 47.3373, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 36.5706, 60.1724, -0.00751248, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.68229, -26.3931, -1.72772, 0.55 ) }
    dend_56 { pt3dadd( 9.91885, -27.927, -1.19864, 0.55 ) }
    dend_56 { pt3dadd( 12.134, -29.4463, -0.674627, 0.55 ) }
    dend_56 { pt3dadd( 13.9688, -30.7047, -0.240585, 0.28 ) }
    dend_56 { pt3dadd( 15.7814, -31.9479, 0.188202, 0.55 ) }
    dend_56 { pt3dadd( 18.0713, -33.5184, 0.729892, 0.55 ) }
    dend_56 { pt3dadd( 19.7836, -34.6928, 1.13495, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 59/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 7.68229, -26.3931, -1.72772, 0.55 ) }
    dend_55 { pt3dadd( 9.34449, -27.2094, -1.61976, 0.55 ) }
    dend_55 { pt3dadd( 11.5039, -28.1794, -1.57804, 0.55 ) }
    dend_55 { pt3dadd( 13.0061, -28.7981, -1.55263, 0.83 ) }
    dend_55 { pt3dadd( 15.1861, -29.7119, -1.59926, 0.55 ) }
    dend_55 { pt3dadd( 17.2072, -30.5492, -1.66929, 0.55 ) }
    dend_55 { pt3dadd( 19.7104, -31.5647, -1.74317, 0.83 ) }
    dend_55 { pt3dadd( 21.4861, -32.2244, -1.85314, 0.28 ) }
    dend_55 { pt3dadd( 23.2439, -32.8109, -1.98497, 0.55 ) }
    dend_55 { pt3dadd( 25.3452, -33.5272, -2.29938, 0.28 ) }
    dend_55 { pt3dadd( 26.5738, -33.9753, -2.57286, 0.55 ) }
    dend_55 { pt3dadd( 28.4913, -34.7195, -3.15767, 0.55 ) }
    dend_55 { pt3dadd( 30.1783, -35.4272, -3.74207, 0.55 ) }
    dend_55 { pt3dadd( 31.9647, -36.1963, -4.3976, 0.55 ) }
    dend_55 { pt3dadd( 35.1923, -37.5342, -5.67693, 0.55 ) }
    dend_55 { pt3dadd( 36.6639, -38.1472, -6.28767, 0.28 ) }
    dend_55 { pt3dadd( 37.65, -38.603, -6.71678, 0.55 ) }
    dend_55 { pt3dadd( 39.0554, -39.2975, -7.3453, 0.55 ) }
    dend_55 { pt3dadd( 40.8074, -40.2271, -8.1011, 0.55 ) }
    dend_55 { pt3dadd( 42.9422, -41.4064, -8.94465, 0.55 ) }
    dend_55 { pt3dadd( 45.0842, -42.5973, -9.6934, 0.55 ) }
    dend_55 { pt3dadd( 46.6377, -43.4867, -10.2271, 0.55 ) }
    dend_55 { pt3dadd( 48.4538, -44.5376, -10.8595, 0.55 ) }
    dend_55 { pt3dadd( 49.9773, -45.4305, -11.4283, 0.55 ) }
    dend_55 { pt3dadd( 51.4078, -46.3147, -11.9937, 0.55 ) }
    dend_55 { pt3dadd( 53.5122, -47.6005, -12.8003, 0.55 ) }
    dend_55 { pt3dadd( 55.0628, -48.4807, -13.3829, 0.55 ) }
    dend_55 { pt3dadd( 56.8028, -49.4224, -14.0792, 0.83 ) }
    dend_55 { pt3dadd( 58.5781, -50.3881, -14.8096, 0.83 ) }
    dend_55 { pt3dadd( 60.1223, -51.2309, -15.4702, 0.55 ) }
    dend_55 { pt3dadd( 61.8405, -52.1749, -16.316, 0.55 ) }
    dend_55 { pt3dadd( 62.9646, -52.7933, -16.8888, 0.83 ) }
    dend_55 { pt3dadd( 64.9333, -53.7913, -17.8781, 0.28 ) }
    dend_55 { pt3dadd( 66.3195, -54.4256, -18.5384, 0.55 ) }
    dend_55 { pt3dadd( 69.3945, -55.6946, -19.84, 0.55 ) }
    dend_55 { pt3dadd( 72.3242, -56.7951, -21.0276, 0.55 ) }
    dend_55 { pt3dadd( 73.6417, -57.2657, -21.542, 0.28 ) }
    dend_55 { pt3dadd( 75.3885, -57.8264, -22.1235, 0.55 ) }
    dend_55 { pt3dadd( 78.2197, -58.6673, -22.9266, 0.28 ) }
    dend_55 { pt3dadd( 79.8832, -59.1938, -23.3133, 0.28 ) }
    dend_55 { pt3dadd( 81.2859, -59.6657, -23.6296, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_55 { pt3dadd( 83.0033, -60.3454, -24.0511, 0.55 ) }
    dend_55 { pt3dadd( 84.4088, -61.014, -24.4844, 0.55 ) }
    dend_55 { pt3dadd( 86.4576, -62.2448, -25.2925, 0.55 ) }
    dend_55 { pt3dadd( 88.4873, -63.6457, -26.2848, 0.55 ) }
    dend_55 { pt3dadd( 90.77, -65.2652, -27.5835, 0.55 ) }
    dend_55 { pt3dadd( 92.1304, -66.2766, -28.3586, 0.28 ) }
    dend_55 { pt3dadd( 93.1405, -67.0618, -28.9499, 0.55 ) }
    dend_55 { pt3dadd( 95.1504, -68.7014, -30.1777, 0.55 ) }
    dend_55 { pt3dadd( 97.0628, -70.2841, -31.2865, 0.55 ) }
    dend_55 { pt3dadd( 98.7693, -71.6702, -32.2408, 0.83 ) }
    dend_55 { pt3dadd( 100.198, -72.867, -32.8972, 0.83 ) }
    dend_55 { pt3dadd( 100.911, -73.4207, -33.1991, 0.83 ) }
    dend_55 { pt3dadd( 102.53, -74.5803, -33.8095, 0.28 ) }
    dend_55 { pt3dadd( 103.71, -75.3145, -34.1214, 0.83 ) }
    dend_55 { pt3dadd( 106.113, -76.6083, -34.5367, 0.28 ) }
    dend_55 { pt3dadd( 107.712, -77.3425, -34.7895, 0.83 ) }
    dend_55 { pt3dadd( 110.014, -78.2559, -34.9991, 0.55 ) }
    dend_55 { pt3dadd( 111.617, -78.7845, -35.0031, 0.55 ) }
    dend_55 { pt3dadd( 115.192, -79.8004, -34.634, 0.55 ) }
    dend_55 { pt3dadd( 117.006, -80.2765, -34.1933, 0.55 ) }
    dend_55 { pt3dadd( 118.831, -80.725, -33.4647, 0.55 ) }
    dend_55 { pt3dadd( 121.639, -81.4366, -31.7791, 0.55 ) }
    dend_55 { pt3dadd( 122.638, -81.7584, -30.9559, 0.55 ) }
    dend_55 { pt3dadd( 123.79, -82.2003, -29.8256, 0.83 ) }
    dend_55 { pt3dadd( 125.844, -83.2146, -27.5155, 0.28 ) }
    dend_55 { pt3dadd( 126.499, -83.5964, -26.7609, 0.55 ) }
    dend_55 { pt3dadd( 128.487, -84.8229, -24.501, 0.28 ) }
    dend_55 { pt3dadd( 130.225, -86.0034, -22.8229, 0.55 ) }
    dend_55 { pt3dadd( 130.936, -86.5263, -22.2347, 0.55 ) }
    dend_55 { pt3dadd( 132.456, -87.6652, -21.2447, 0.28 ) }
    dend_55 { pt3dadd( 133.351, -88.3462, -20.8663, 0.28 ) }
    dend_55 { pt3dadd( 134.194, -88.9833, -20.621, 0.55 ) }
    dend_55 { pt3dadd( 135.928, -90.1988, -20.3769, 0.28 ) }
    dend_55 { pt3dadd( 136.936, -90.8307, -20.2972, 0.28 ) }
    dend_55 { pt3dadd( 137.595, -91.2023, -20.2533, 0.55 ) }
    dend_55 { pt3dadd( 139.489, -92.0756, -20.119, 0.28 ) }
    dend_55 { pt3dadd( 141.282, -92.8334, -19.9556, 0.55 ) }
    dend_55 { pt3dadd( 142.851, -93.3708, -19.7706, 0.28 ) }
    dend_55 { pt3dadd( 144.319, -93.8005, -19.5741, 0.55 ) }
    dend_55 { pt3dadd( 146.634, -94.4151, -19.244, 0.28 ) }
    dend_55 { pt3dadd( 148.499, -94.8556, -18.9558, 0.28 ) }
    dend_55 { pt3dadd( 150.868, -95.3426, -18.5243, 0.55 ) }
    dend_55 { pt3dadd( 152.866, -95.7259, -18.1123, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_29 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.25021, -21.7279, 0.0923306, 0.55 ) }
    dend_49 { pt3dadd( -6.7059, -24.2063, -1.8787, 0.55 ) }
    dend_49 { pt3dadd( -7.52496, -25.4062, -2.86098, 0.55 ) }
    dend_49 { pt3dadd( -8.91213, -27.3997, -4.38543, 0.83 ) }
    dend_49 { pt3dadd( -11.3124, -31.1635, -7.06663, 0.55 ) }
    dend_49 { pt3dadd( -12.9496, -33.861, -8.82863, 0.55 ) }
    dend_49 { pt3dadd( -14.6775, -36.7583, -10.6428, 0.83 ) }
    dend_49 { pt3dadd( -16.2372, -39.5003, -12.238, 0.55 ) }
    dend_49 { pt3dadd( -17.4484, -41.508, -13.3103, 1.11 ) }
    dend_49 { pt3dadd( -18.8607, -43.7291, -14.2993, 0.28 ) }
    dend_49 { pt3dadd( -20.4783, -46.3094, -15.1028, 0.55 ) }
    dend_49 { pt3dadd( -21.2167, -47.6546, -15.4764, 0.28 ) }
    dend_49 { pt3dadd( -22.6873, -50.2008, -16.1413, 0.55 ) }
    dend_49 { pt3dadd( -23.7871, -51.8226, -16.5367, 0.28 ) }
    dend_49 { pt3dadd( -26.3335, -54.9656, -17.3512, 0.83 ) }
    dend_49 { pt3dadd( -29.2747, -57.9975, -18.1526, 0.55 ) }
    dend_49 { pt3dadd( -32.3746, -61.0562, -18.9797, 0.55 ) }
    dend_49 { pt3dadd( -35.232, -63.7578, -19.7203, 0.55 ) }
    dend_49 { pt3dadd( -38.3967, -66.5379, -20.5565, 0.55 ) }
    dend_49 { pt3dadd( -41.0882, -68.7351, -21.2878, 0.55 ) }
    dend_49 { pt3dadd( -44.2138, -70.8589, -22.0378, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -5.25021, -21.7279, 0.0923306, 1.66 ) }
    dend_30 { pt3dadd( -4.31872, -24.0197, 0.717526, 1.66 ) }
    dend_30 { pt3dadd( -2.95075, -27.3854, 1.63568, 0.83 ) }
    dend_30 { pt3dadd( -1.23453, -31.608, 2.78757, 0.83 ) }
    dend_30 { pt3dadd( 0.309535, -35.4069, 3.82392, 0.83 ) }
    dend_30 { pt3dadd( 1.49659, -38.3275, 4.62064, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 19.9414, 41.6107, -3.44714, 0.55 ) }
    dend_24 { pt3dadd( 21.1608, 43.7794, -4.5507, 0.55 ) }
    dend_24 { pt3dadd( 22.7992, 46.3994, -5.9319, 0.55 ) }
    dend_24 { pt3dadd( 24.6079, 49.3262, -7.32701, 0.28 ) }
    dend_24 { pt3dadd( 26.1727, 51.9167, -8.45144, 0.83 ) }
    dend_24 { pt3dadd( 27.2242, 53.7108, -9.18765, 0.55 ) }
    dend_24 { pt3dadd( 28.608, 56.088, -10.1062, 0.55 ) }
    dend_24 { pt3dadd( 30.3054, 58.8925, -11.1061, 0.55 ) }
    dend_24 { pt3dadd( 32.2281, 62.0169, -11.857, 0.83 ) }
    dend_24 { pt3dadd( 33.5192, 64.2036, -12.0846, 0.28 ) }
    dend_24 { pt3dadd( 33.8535, 64.808, -12.0934, 0.28 ) }
    dend_24 { pt3dadd( 35.0224, 67.045, -11.9882, 0.55 ) }
    dend_24 { pt3dadd( 36.0564, 69.1196, -11.8135, 0.55 ) }
    dend_24 { pt3dadd( 38.1518, 73.3773, -11.4676, 0.55 ) }
    dend_24 { pt3dadd( 39.1908, 75.4748, -11.3561, 0.55 ) }
    dend_24 { pt3dadd( 41.3876, 79.9106, -11.2578, 0.55 ) }
    dend_24 { pt3dadd( 42.7295, 82.6385, -11.2741, 0.55 ) }
    dend_24 { pt3dadd( 44.3431, 85.9628, -11.4211, 0.55 ) }
    dend_24 { pt3dadd( 46.1839, 89.659, -11.9067, 0.55 ) }
    dend_24 { pt3dadd( 47.1131, 91.3286, -12.2889, 0.55 ) }
    dend_24 { pt3dadd( 47.9278, 92.5622, -12.7034, 0.28 ) }
    dend_24 { pt3dadd( 48.5267, 93.3008, -13.0275, 0.55 ) }
    dend_24 { pt3dadd( 49.6139, 94.4118, -13.567, 0.28 ) }
    dend_24 { pt3dadd( 51.7475, 96.3584, -14.5323, 0.55 ) }
    dend_24 { pt3dadd( 55.246, 99.3842, -15.834, 0.55 ) }
    dend_24 { pt3dadd( 58.0315, 101.789, -16.9373, 0.55 ) }
    dend_24 { pt3dadd( 59.6326, 103.147, -17.5635, 0.55 ) }
    dend_24 { pt3dadd( 63.3408, 106.188, -19.0954, 0.55 ) }
    dend_24 { pt3dadd( 64.8298, 107.464, -19.7246, 0.55 ) }
    dend_24 { pt3dadd( 66.0867, 108.648, -20.2634, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 67.7527, 110.47, -21.1155, 0.55 ) }
    dend_24 { pt3dadd( 69.1443, 112.274, -21.8504, 0.55 ) }
    dend_24 { pt3dadd( 70.5538, 114.576, -22.7879, 0.55 ) }
    dend_24 { pt3dadd( 71.7867, 117.214, -23.7636, 0.55 ) }
    dend_24 { pt3dadd( 73.0826, 120.342, -24.9395, 0.55 ) }
    dend_24 { pt3dadd( 73.7507, 122.062, -25.5714, 0.55 ) }
    dend_24 { pt3dadd( 74.36, 123.718, -26.104, 0.55 ) }
    dend_24 { pt3dadd( 75.1633, 125.737, -26.8049, 0.55 ) }
    dend_24 { pt3dadd( 76.6203, 128.771, -27.891, 0.55 ) }
    dend_24 { pt3dadd( 78.5076, 131.657, -29.129, 0.55 ) }
    dend_24 { pt3dadd( 79.5679, 132.876, -29.7985, 0.55 ) }
    dend_24 { pt3dadd( 80.599, 133.865, -30.4198, 0.55 ) }
    dend_24 { pt3dadd( 83.606, 136.375, -32.2109, 0.55 ) }
    dend_24 { pt3dadd( 84.8065, 137.274, -32.8783, 0.55 ) }
    dend_24 { pt3dadd( 86.8344, 138.691, -34.0198, 0.55 ) }
    dend_24 { pt3dadd( 89.1763, 140.318, -35.2679, 0.55 ) }
    dend_24 { pt3dadd( 90.5603, 141.306, -36.0278, 0.28 ) }
    dend_24 { pt3dadd( 91.5735, 142.026, -36.6383, 0.28 ) }
    dend_24 { pt3dadd( 92.6667, 142.826, -37.3326, 0.55 ) }
    dend_24 { pt3dadd( 95.5287, 144.861, -39.1587, 0.55 ) }
    dend_24 { pt3dadd( 98.4971, 146.917, -41.0919, 0.55 ) }
    dend_24 { pt3dadd( 99.9243, 147.801, -42.0472, 0.83 ) }
    dend_24 { pt3dadd( 103.738, 150.088, -45.3392, 0.55 ) }
    dend_24 { pt3dadd( 105.902, 151.284, -47.5587, 0.55 ) }
    dend_24 { pt3dadd( 107.518, 152.184, -49.3961, 0.55 ) }
    dend_24 { pt3dadd( 110.056, 153.568, -52.608, 0.55 ) }
    dend_24 { pt3dadd( 113.464, 155.438, -57.1271, 0.55 ) }
    dend_24 { pt3dadd( 119.009, 158.301, -64.7767, 0.55 ) }
    dend_24 { pt3dadd( 123.152, 160.409, -70.7075, 0.55 ) }
    dend_24 { pt3dadd( 124.705, 161.172, -73.0249, 0.55 ) }
    dend_24 { pt3dadd( 128.02, 162.76, -78.1715, 0.55 ) }
    dend_24 { pt3dadd( 129.853, 163.599, -81.048, 0.55 ) }
    dend_24 { pt3dadd( 132.825, 165.052, -85.6694, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 33/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.9414, 41.6107, -3.44714, 0.28 ) }
    dend_21 { pt3dadd( 20.1072, 43.5732, -2.54053, 0.28 ) }
    dend_21 { pt3dadd( 20.2146, 44.5968, -2.06274, 0.83 ) }
    dend_21 { pt3dadd( 20.4299, 46.2018, -1.30373, 0.55 ) }
    dend_21 { pt3dadd( 20.6581, 47.7914, -0.558518, 0.55 ) }
    dend_21 { pt3dadd( 20.9745, 49.9084, 0.399092, 0.28 ) }
    dend_21 { pt3dadd( 21.1906, 51.3118, 1.00732, 0.28 ) }
    dend_21 { pt3dadd( 21.29, 51.8525, 1.22029, 0.55 ) }
    dend_21 { pt3dadd( 21.5053, 52.9665, 1.65822, 0.28 ) }
    dend_21 { pt3dadd( 21.6421, 53.6072, 1.88965, 0.55 ) }
    dend_21 { pt3dadd( 21.8322, 54.4076, 2.15457, 0.28 ) }
    dend_21 { pt3dadd( 22.0405, 55.2344, 2.31481, 0.55 ) }
    dend_21 { pt3dadd( 22.3166, 56.4479, 2.47271, 0.28 ) }
    dend_21 { pt3dadd( 22.3166, 56.4479, 2.47271, 0.55 ) }
    dend_21 { pt3dadd( 22.7516, 57.9343, 2.52337, 0.55 ) }
    dend_21 { pt3dadd( 23.2252, 59.3104, 2.44261, 0.83 ) }
    dend_21 { pt3dadd( 23.9205, 61.0269, 2.18762, 0.55 ) }
    dend_21 { pt3dadd( 24.3164, 61.8963, 2.00382, 0.55 ) }
    dend_21 { pt3dadd( 25.0928, 63.4401, 1.66753, 0.55 ) }
    dend_21 { pt3dadd( 25.8718, 64.8829, 1.37505, 0.28 ) }
    dend_21 { pt3dadd( 27.1604, 67.1415, 0.971587, 0.83 ) }
    dend_21 { pt3dadd( 27.9935, 68.5708, 0.77491, 0.28 ) }
    dend_21 { pt3dadd( 28.6186, 69.5699, 0.733788, 0.55 ) }
    dend_21 { pt3dadd( 29.6624, 71.228, 0.73549, 0.28 ) }
    dend_21 { pt3dadd( 30.1339, 71.9944, 0.793605, 0.55 ) }
    dend_21 { pt3dadd( 30.8974, 73.2938, 1.0551, 0.28 ) }
    dend_21 { pt3dadd( 31.2613, 73.9684, 1.2912, 0.55 ) }
    dend_21 { pt3dadd( 32.034, 75.4709, 1.86388, 0.28 ) }
    dend_21 { pt3dadd( 32.6649, 76.6323, 2.31912, 0.55 ) }
    dend_21 { pt3dadd( 33.3195, 77.8028, 2.75965, 0.28 ) }
    dend_21 { pt3dadd( 33.9921, 79.0526, 3.21098, 0.55 ) }
    dend_21 { pt3dadd( 34.7139, 80.3893, 3.65638, 0.28 ) }
    dend_21 { pt3dadd( 35.7325, 82.362, 4.22684, 0.55 ) }
    dend_21 { pt3dadd( 36.3863, 83.5656, 4.52546, 0.28 ) }
    dend_21 { pt3dadd( 36.7053, 84.1086, 4.68589, 0.55 ) }
    dend_21 { pt3dadd( 37.3513, 85.136, 4.99895, 0.28 ) }
    dend_21 { pt3dadd( 37.8472, 85.8764, 5.22012, 0.55 ) }
    dend_21 { pt3dadd( 38.5769, 86.9551, 5.53566, 0.55 ) }
    dend_21 { pt3dadd( 39.2984, 88.0033, 5.90552, 0.55 ) }
    dend_21 { pt3dadd( 40.5613, 89.7751, 6.63395, 0.55 ) }
    dend_21 { pt3dadd( 41.6156, 91.2561, 7.3253, 0.55 ) }
    dend_21 { pt3dadd( 42.6931, 92.7861, 8.0552, 0.55 ) }
    dend_21 { pt3dadd( 44.0108, 94.7715, 8.98239, 0.55 ) }
    dend_21 { pt3dadd( 45.3508, 96.8931, 9.93634, 0.55 ) }
    dend_21 { pt3dadd( 46.0793, 98.1209, 10.4401, 0.28 ) }
    dend_21 { pt3dadd( 46.7794, 99.2738, 10.8685, 0.55 ) }
    dend_21 { pt3dadd( 47.4886, 100.458, 11.2668, 0.55 ) }
    dend_21 { pt3dadd( 47.9318, 101.204, 11.4844, 0.83 ) }
    dend_21 { pt3dadd( 48.9521, 103.031, 11.915, 0.28 ) }
    dend_21 { pt3dadd( 49.724, 104.823, 11.6991, 0.55 ) }
    dend_21 { pt3dadd( 50.3433, 106.599, 11.0219, 0.28 ) }
    dend_21 { pt3dadd( 50.5188, 107.225, 10.6766, 0.55 ) }
    dend_21 { pt3dadd( 51.0136, 109.281, 9.43799, 0.55 ) }
    dend_21 { pt3dadd( 51.2208, 110.368, 8.72696, 0.55 ) }
    dend_21 { pt3dadd( 52.3954, 117.978, 3.53282, 0.28 ) }
    dend_21 { pt3dadd( 52.6049, 119.495, 2.52397, 0.28 ) }
    dend_21 { pt3dadd( 52.7896, 120.899, 1.64397, 0.55 ) }
    dend_21 { pt3dadd( 53.035, 122.72, 0.509518, 0.55 ) }
    dend_21 { pt3dadd( 53.1512, 123.545, 0.0126106, 0.55 ) }
    dend_21 { pt3dadd( 53.5492, 125.336, -0.607376, 0.55 ) }
    dend_21 { pt3dadd( 54.2775, 127.239, -0.180836, 0.55 ) }
    dend_21 { pt3dadd( 54.5778, 128.075, -0.0211955, 0.55 ) }
    dend_21 { pt3dadd( 59.5631, 134.126, 0.895468, 0.55 ) }
    dend_21 { pt3dadd( 64.9814, 139.877, 0.50153, 0.55 ) }
    dend_21 { pt3dadd( 69.8139, 146.056, 1.33974, 0.55 ) }
    dend_21 { pt3dadd( 74.6215, 152.275, 1.99821, 0.55 ) }
    dend_21 { pt3dadd( 78.5305, 158.87, 3.76442, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 83.451, 164.561, 6.17707, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.29436, 11.7908, -4.18987, 0.55 ) }
    dend_16 { pt3dadd( 11.2625, 12.7606, -4.69018, 0.55 ) }
    dend_16 { pt3dadd( 13.1455, 13.6926, -5.05449, 0.83 ) }
    dend_16 { pt3dadd( 15.1061, 14.6818, -5.37171, 0.28 ) }
    dend_16 { pt3dadd( 16.5358, 15.3903, -5.51821, 0.55 ) }
    dend_16 { pt3dadd( 18.2116, 16.2027, -5.64149, 0.28 ) }
    dend_16 { pt3dadd( 19.4679, 16.783, -5.74823, 0.83 ) }
    dend_16 { pt3dadd( 21.381, 17.6198, -5.85651, 0.55 ) }
    dend_16 { pt3dadd( 22.9466, 18.2653, -5.89568, 0.83 ) }
    dend_16 { pt3dadd( 24.9534, 19.0194, -5.91807, 0.28 ) }
    dend_16 { pt3dadd( 26.2684, 19.4609, -5.95947, 0.55 ) }
    dend_16 { pt3dadd( 28.594, 20.1777, -6.0824, 0.28 ) }
    dend_16 { pt3dadd( 30.4823, 20.7401, -6.25023, 0.83 ) }
    dend_16 { pt3dadd( 31.9983, 21.1826, -6.45639, 0.28 ) }
    dend_16 { pt3dadd( 33.8311, 21.6973, -6.77131, 0.55 ) }
    dend_16 { pt3dadd( 35.9725, 22.2925, -7.21842, 0.28 ) }
    dend_16 { pt3dadd( 36.9079, 22.5574, -7.43172, 0.83 ) }
    dend_16 { pt3dadd( 38.9962, 23.1742, -7.92089, 0.28 ) }
    dend_16 { pt3dadd( 39.6409, 23.3641, -8.09709, 0.55 ) }
    dend_16 { pt3dadd( 41.6078, 23.9551, -8.71971, 0.83 ) }
    dend_16 { pt3dadd( 43.288, 24.4484, -9.2829, 0.28 ) }
    dend_16 { pt3dadd( 44.5275, 24.814, -9.72908, 0.83 ) }
    dend_16 { pt3dadd( 45.6486, 25.17, -10.1474, 0.28 ) }
    dend_16 { pt3dadd( 46.0914, 25.316, -10.3099, 0.55 ) }
    dend_16 { pt3dadd( 47.4743, 25.8115, -10.8033, 0.28 ) }
    dend_16 { pt3dadd( 48.9591, 26.4123, -11.3706, 0.83 ) }
    dend_16 { pt3dadd( 50.5382, 27.1113, -11.9562, 0.28 ) }
    dend_16 { pt3dadd( 51.1881, 27.422, -12.1707, 0.55 ) }
    dend_16 { pt3dadd( 52.8384, 28.2512, -12.6777, 0.28 ) }
    dend_16 { pt3dadd( 54.0218, 28.9114, -12.9957, 0.55 ) }
    dend_16 { pt3dadd( 56.3885, 30.3289, -13.5816, 0.28 ) }
    dend_16 { pt3dadd( 57.1823, 30.8482, -13.7489, 0.83 ) }
    dend_16 { pt3dadd( 58.9726, 32.0659, -14.0561, 0.28 ) }
    dend_16 { pt3dadd( 60.0951, 32.8687, -14.2236, 0.83 ) }
    dend_16 { pt3dadd( 62.8115, 34.9539, -14.561, 0.28 ) }
    dend_16 { pt3dadd( 63.9407, 35.8378, -14.6188, 0.83 ) }
    dend_16 { pt3dadd( 66.0117, 37.4474, -14.6153, 0.28 ) }
    dend_16 { pt3dadd( 66.7067, 37.9779, -14.5934, 0.55 ) }
    dend_16 { pt3dadd( 67.6715, 38.7019, -14.5171, 0.28 ) }
    dend_16 { pt3dadd( 68.0996, 39.0041, -14.4509, 0.55 ) }
    dend_16 { pt3dadd( 70.2812, 40.3839, -13.9137, 0.28 ) }
    dend_16 { pt3dadd( 71.5205, 41.1383, -13.6201, 0.55 ) }
    dend_16 { pt3dadd( 73.2029, 42.1362, -13.2952, 0.28 ) }
    dend_16 { pt3dadd( 73.7959, 42.4656, -13.1694, 0.83 ) }
    dend_16 { pt3dadd( 76.6096, 43.9392, -12.6072, 0.28 ) }
    dend_16 { pt3dadd( 77.937, 44.6171, -12.3516, 0.55 ) }
    dend_16 { pt3dadd( 79.8476, 45.5969, -12.0148, 0.28 ) }
    dend_16 { pt3dadd( 81.185, 46.2758, -11.7849, 0.83 ) }
    dend_16 { pt3dadd( 84.3503, 47.8528, -11.3326, 0.28 ) }
    dend_16 { pt3dadd( 86.4761, 48.8789, -10.9706, 0.55 ) }
    dend_16 { pt3dadd( 87.9939, 49.5964, -10.6971, 0.28 ) }
    dend_16 { pt3dadd( 88.7673, 49.9528, -10.5337, 0.55 ) }
    dend_16 { pt3dadd( 90.4345, 50.6793, -10.1151, 0.28 ) }
    dend_16 { pt3dadd( 91.2177, 51.0166, -9.92389, 0.55 ) }
    dend_16 { pt3dadd( 94.3379, 52.3742, -9.3195, 0.28 ) }
    dend_16 { pt3dadd( 95.5642, 52.8944, -9.09997, 0.83 ) }
    dend_16 { pt3dadd( 98.4234, 54.0028, -8.57429, 0.28 ) }
    dend_16 { pt3dadd( 99.3481, 54.3267, -8.37454, 0.28 ) }
    dend_16 { pt3dadd( 100.3, 54.6362, -8.17499, 0.55 ) }
    dend_16 { pt3dadd( 101.686, 55.0804, -7.89509, 0.28 ) }
    dend_16 { pt3dadd( 102.819, 55.428, -7.73364, 0.55 ) }
    dend_16 { pt3dadd( 105.299, 56.1177, -7.30257, 0.28 ) }
    dend_16 { pt3dadd( 106.97, 56.532, -6.94921, 0.83 ) }
    dend_16 { pt3dadd( 108.418, 56.8911, -6.53733, 0.28 ) }
    dend_16 { pt3dadd( 109.637, 57.1676, -6.07712, 0.55 ) }
    dend_16 { pt3dadd( 117.407, 60.6882, -7.30344, 0.55 ) }
    dend_16 { pt3dadd( 125.264, 63.5021, -9.52271, 0.55 ) }
    dend_16 { pt3dadd( 133.418, 66.2962, -10.012, 0.55 ) }
    dend_16 { pt3dadd( 141.926, 67.4847, -11.1037, 0.55 ) }
    dend_16 { pt3dadd( 150.169, 69.4004, -12.8957, 0.55 ) }
    dend_16 { pt3dadd( 157.861, 71.7326, -16.0815, 0.55 ) }
    dend_16 { pt3dadd( 165.231, 74.2222, -19.8515, 0.55 ) }
    dend_16 { pt3dadd( 172.335, 75.0474, -24.7464, 0.55 ) }
    dend_16 { pt3dadd( 179.627, 75.2479, -29.4329, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.29436, 11.7908, -4.18987, 0.55 ) }
    dend_13 { pt3dadd( 12.1455, 15.6127, -1.34129, 0.55 ) }
    dend_13 { pt3dadd( 16.0838, 20.6535, 2.30411, 0.83 ) }
    dend_13 { pt3dadd( 17.8054, 22.6459, 3.69875, 0.55 ) }
    dend_13 { pt3dadd( 19.5966, 24.6568, 5.21658, 0.83 ) }
    dend_13 { pt3dadd( 23.259, 28.5352, 8.62219, 0.83 ) }
    dend_13 { pt3dadd( 25.2486, 30.4848, 10.4802, 0.55 ) }
    dend_13 { pt3dadd( 27.4354, 32.3361, 12.4588, 0.55 ) }
    dend_13 { pt3dadd( 29.0795, 33.5216, 14.0513, 0.55 ) }
    dend_13 { pt3dadd( 32.4045, 35.6626, 17.1472, 0.55 ) }
    dend_13 { pt3dadd( 36.0015, 37.8832, 20.8263, 0.55 ) }
    dend_13 { pt3dadd( 37.2007, 38.7786, 22.1371, 0.55 ) }
    dend_13 { pt3dadd( 45.8096, 46.6453, 28.3396, 0.55 ) }
    dend_13 { pt3dadd( 54.6409, 54.2039, 34.6322, 0.55 ) }
    dend_13 { pt3dadd( 62.1279, 63.05, 40.9028, 0.55 ) }
    dend_13 { pt3dadd( 70.038, 71.4537, 47.2918, 0.55 ) }
    dend_13 { pt3dadd( 76.049, 82.0744, 52.107, 0.55 ) }
    dend_13 { pt3dadd( 84.4586, 91.3979, 56.0634, 0.55 ) }
    dend_13 { pt3dadd( 94.3283, 99.7886, 58.6016, 0.55 ) }
    dend_13 { pt3dadd( 103.205, 108.84, 62.1881, 0.55 ) }
    dend_13 { pt3dadd( 110.798, 118.551, 66.7644, 0.55 ) }
    dend_13 { pt3dadd( 117.819, 128.879, 70.8202, 0.55 ) }
    dend_13 { pt3dadd( 123.194, 139.271, 76.7742, 0.55 ) }
    dend_13 { pt3dadd( 126.942, 150.304, 82.7818, 0.55 ) }
    dend_13 { pt3dadd( 129.389, 161.242, 89.6018, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 132.017, 171.847, 96.8838, 0.55 ) }
    dend_13 { pt3dadd( 133.34, 183.347, 103.034, 0.55 ) }
    dend_13 { pt3dadd( 135.32, 194.675, 109.325, 0.55 ) }
    dend_13 { pt3dadd( 138.542, 205.409, 116.154, 0.55 ) }
    dend_13 { pt3dadd( 141.967, 216.158, 122.854, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 5/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.92329, 18.6677, -1.11449, 0.28 ) }
    dend_11 { pt3dadd( 1.41608, 18.7966, -1.52394, 0.28 ) }
    dend_11 { pt3dadd( 0.7822, 18.8476, -1.7213, 0.55 ) }
    dend_11 { pt3dadd( -2.51799, 19.113, -2.74886, 0.28 ) }
    dend_11 { pt3dadd( -3.41444, 19.1851, -3.02798, 0.55 ) }
    dend_11 { pt3dadd( -6.79073, 19.4566, -4.07922, 0.28 ) }
    dend_11 { pt3dadd( -8.53554, 19.5969, -4.62249, 0.28 ) }
    dend_11 { pt3dadd( -9.2307, 19.64, -4.8687, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.92329, 18.6677, -1.11449, 0.83 ) }
    dend_2 { pt3dadd( 3.09468, 21.5207, -0.151804, 0.83 ) }
    dend_2 { pt3dadd( 3.29565, 24.8663, 0.977098, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 19.7836, -34.6928, 1.13495, 0.55 ) }
    dend_60 { pt3dadd( 22.5427, -34.9096, 3.07215, 0.55 ) }
    dend_60 { pt3dadd( 24.2206, -34.8073, 4.14421, 0.55 ) }
    dend_60 { pt3dadd( 27.1487, -34.3586, 5.85956, 0.55 ) }
    dend_60 { pt3dadd( 28.8226, -33.9552, 6.8041, 0.55 ) }
    dend_60 { pt3dadd( 31.4073, -33.3322, 8.2626, 0.55 ) }
    dend_60 { pt3dadd( 33.5182, -32.8234, 9.45382, 0.55 ) }
    dend_60 { pt3dadd( 36.1601, -31.9902, 10.7744, 0.55 ) }
    dend_60 { pt3dadd( 38.5021, -31.0294, 11.9247, 0.55 ) }
    dend_60 { pt3dadd( 42.4717, -29.0795, 13.6596, 0.55 ) }
    dend_60 { pt3dadd( 50.7654, -26.0416, 18.2978, 0.55 ) }
    dend_60 { pt3dadd( 58.3761, -22.2059, 23.4597, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 28/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 19.7836, -34.6928, 1.13495, 0.55 ) }
    dend_57 { pt3dadd( 21.3163, -35.6704, 0.929808, 0.55 ) }
    dend_57 { pt3dadd( 23.1882, -36.8566, 0.677805, 0.28 ) }
    dend_57 { pt3dadd( 24.5931, -37.7667, 0.466166, 0.83 ) }
    dend_57 { pt3dadd( 26.3073, -38.8814, 0.238077, 0.28 ) }
    dend_57 { pt3dadd( 27.7654, -39.8536, 0.0598577, 0.28 ) }
    dend_57 { pt3dadd( 28.5764, -40.4105, -0.0382833, 0.55 ) }
    dend_57 { pt3dadd( 29.5691, -41.1801, -0.150325, 0.28 ) }
    dend_57 { pt3dadd( 29.9113, -41.4746, -0.16145, 0.55 ) }
    dend_57 { pt3dadd( 31.1149, -42.5547, -0.112755, 0.28 ) }
    dend_57 { pt3dadd( 31.41, -42.8281, -0.095706, 0.83 ) }
    dend_57 { pt3dadd( 32.1251, -43.5361, 0.0153484, 0.28 ) }
    dend_57 { pt3dadd( 32.6281, -44.0362, 0.119128, 0.55 ) }
    dend_57 { pt3dadd( 34.0546, -45.4748, 0.459628, 0.28 ) }
    dend_57 { pt3dadd( 34.4424, -45.8531, 0.561162, 0.55 ) }
    dend_57 { pt3dadd( 35.3498, -46.7382, 0.801731, 0.28 ) }
    dend_57 { pt3dadd( 35.9888, -47.3163, 0.991501, 0.55 ) }
    dend_57 { pt3dadd( 37.1524, -48.2943, 1.40587, 0.28 ) }
    dend_57 { pt3dadd( 37.768, -48.7501, 1.70709, 0.55 ) }
    dend_57 { pt3dadd( 38.9172, -49.5637, 2.29922, 0.28 ) }
    dend_57 { pt3dadd( 39.3432, -49.8386, 2.51511, 0.55 ) }
    dend_57 { pt3dadd( 40.5805, -50.6052, 3.10938, 0.28 ) }
    dend_57 { pt3dadd( 41.2842, -51.0125, 3.41129, 0.55 ) }
    dend_57 { pt3dadd( 44.4273, -52.7612, 4.48859, 0.28 ) }
    dend_57 { pt3dadd( 45.5848, -53.3007, 4.7547, 0.55 ) }
    dend_57 { pt3dadd( 46.6772, -53.7317, 4.86207, 0.28 ) }
    dend_57 { pt3dadd( 47.659, -54.0496, 4.8063, 0.55 ) }
    dend_57 { pt3dadd( 49.204, -54.4234, 4.4787, 0.28 ) }
    dend_57 { pt3dadd( 50.2101, -54.6315, 4.16953, 0.55 ) }
    dend_57 { pt3dadd( 52.0731, -54.8888, 3.37459, 0.28 ) }
    dend_57 { pt3dadd( 53.1458, -54.992, 2.96811, 0.55 ) }
    dend_57 { pt3dadd( 54.666, -55.105, 2.39469, 0.28 ) }
    dend_57 { pt3dadd( 55.5954, -55.1051, 2.02061, 0.55 ) }
    dend_57 { pt3dadd( 62.0436, -58.0603, 0.856679, 0.55 ) }
    dend_57 { pt3dadd( 68.3714, -61.4433, 1.0116, 0.55 ) }
    dend_57 { pt3dadd( 74.9585, -64.1305, -0.0518865, 0.55 ) }
    dend_57 { pt3dadd( 81.866, -66.1703, 0.0698966, 0.55 ) }
    dend_57 { pt3dadd( 88.578, -68.6219, 0.917851, 0.55 ) }
    dend_57 { pt3dadd( 95.3348, -70.0713, 2.97345, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -44.2138, -70.8589, -22.0378, 0.28 ) }
    dend_51 { pt3dadd( -45.6557, -71.2323, -21.2422, 0.28 ) }
    dend_51 { pt3dadd( -46.2082, -71.3939, -20.9603, 0.55 ) }
    dend_51 { pt3dadd( -49.2136, -71.9769, -19.0707, 0.28 ) }
    dend_51 { pt3dadd( -50.4312, -72.231, -18.2447, 0.55 ) }
    dend_51 { pt3dadd( -54.1012, -73.1913, -15.6356, 0.28 ) }
    dend_51 { pt3dadd( -54.6071, -73.3491, -15.2649, 0.55 ) }
    dend_51 { pt3dadd( -55.9778, -73.898, -14.167, 0.55 ) }
    dend_51 { pt3dadd( -59.5533, -75.5866, -11.0047, 0.55 ) }
    dend_51 { pt3dadd( -60.5428, -76.1543, -10.0616, 0.28 ) }
    dend_51 { pt3dadd( -61.5934, -76.7225, -9.15594, 0.55 ) }
    dend_51 { pt3dadd( -62.3996, -77.174, -8.57725, 0.28 ) }
    dend_51 { pt3dadd( -63.1655, -77.6216, -8.00928, 0.55 ) }
    dend_51 { pt3dadd( -64.4855, -78.4939, -6.99941, 0.28 ) }
    dend_51 { pt3dadd( -65.2376, -79.0686, -6.53329, 0.55 ) }
    dend_51 { pt3dadd( -67.5999, -80.489, -5.09812, 0.28 ) }
    dend_51 { pt3dadd( -69.4203, -81.3624, -4.00177, 0.55 ) }
    dend_51 { pt3dadd( -77.8926, -83.298, 1.99784, 0.55 ) }
    dend_51 { pt3dadd( -86.6093, -83.168, 7.9845, 0.55 ) }
    dend_51 { pt3dadd( -95.696, -81.5489, 13.1416, 0.55 ) }
    dend_51 { pt3dadd( -104.27, -80.7432, 19.2807, 0.55 ) }
    dend_51 { pt3dadd( -113.348, -81.2351, 24.6789, 0.55 ) }
    dend_51 { pt3dadd( -122.892, -81.5287, 29.224, 0.55 ) }
    dend_51 { pt3dadd( -131.969, -83.78, 34.1228, 0.55 ) }
    dend_51 { pt3dadd( -140.344, -83.988, 40.5738, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 92/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -44.2138, -70.8589, -22.0378, 0.28 ) }
    dend_50 { pt3dadd( -45.2854, -71.9419, -22.4831, 0.28 ) }
    dend_50 { pt3dadd( -45.5638, -72.2101, -22.605, 0.55 ) }
    dend_50 { pt3dadd( -46.4614, -73.1008, -22.9672, 0.28 ) }
    dend_50 { pt3dadd( -47.4702, -74.0707, -23.3676, 0.55 ) }
    dend_50 { pt3dadd( -49.3567, -75.8046, -24.0175, 0.55 ) }
    dend_50 { pt3dadd( -50.6761, -77.0001, -24.4366, 0.28 ) }
    dend_50 { pt3dadd( -52.1688, -78.3001, -24.8438, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -54.0819, -79.9624, -25.2997, 0.55 ) }
    dend_50 { pt3dadd( -56.3222, -81.96, -25.7243, 0.55 ) }
    dend_50 { pt3dadd( -57.5346, -83.0491, -25.9162, 0.28 ) }
    dend_50 { pt3dadd( -58.1914, -83.6545, -25.9966, 0.55 ) }
    dend_50 { pt3dadd( -58.965, -84.3989, -26.0824, 0.28 ) }
    dend_50 { pt3dadd( -60.1624, -85.5438, -26.243, 0.55 ) }
    dend_50 { pt3dadd( -61.1737, -86.5449, -26.4584, 0.28 ) }
    dend_50 { pt3dadd( -62.0279, -87.3531, -26.5941, 0.55 ) }
    dend_50 { pt3dadd( -62.8889, -88.1479, -26.7232, 0.28 ) }
    dend_50 { pt3dadd( -64.4119, -89.4559, -26.9291, 0.55 ) }
    dend_50 { pt3dadd( -66.3987, -91.0666, -27.2095, 0.55 ) }
    dend_50 { pt3dadd( -67.366, -91.8219, -27.3354, 0.55 ) }
    dend_50 { pt3dadd( -70.3862, -94.132, -27.7206, 0.55 ) }
    dend_50 { pt3dadd( -71.7422, -95.1843, -27.8755, 0.55 ) }
    dend_50 { pt3dadd( -73.2377, -96.3837, -28.0236, 0.28 ) }
    dend_50 { pt3dadd( -74.4259, -97.4106, -28.1377, 0.28 ) }
    dend_50 { pt3dadd( -75.2868, -98.244, -28.2396, 0.55 ) }
    dend_50 { pt3dadd( -76.0565, -99.1192, -28.3879, 0.55 ) }
    dend_50 { pt3dadd( -76.7918, -100.152, -28.6764, 0.28 ) }
    dend_50 { pt3dadd( -77.3315, -100.996, -28.8987, 0.55 ) }
    dend_50 { pt3dadd( -77.7862, -101.757, -29.0943, 0.28 ) }
    dend_50 { pt3dadd( -78.5351, -102.925, -29.3994, 0.55 ) }
    dend_50 { pt3dadd( -79.5087, -104.291, -29.786, 0.55 ) }
    dend_50 { pt3dadd( -80.3938, -105.483, -30.1497, 0.55 ) }
    dend_50 { pt3dadd( -81.4854, -106.884, -30.6011, 0.28 ) }
    dend_50 { pt3dadd( -82.5759, -108.164, -31.0457, 0.55 ) }
    dend_50 { pt3dadd( -83.4522, -109.111, -31.3795, 0.55 ) }
    dend_50 { pt3dadd( -84.3385, -109.986, -31.7318, 0.55 ) }
    dend_50 { pt3dadd( -85.4398, -111.008, -32.1751, 0.83 ) }
    dend_50 { pt3dadd( -90.785, -115.732, -33.7033, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.49659, -38.3275, 4.62064, 0.83 ) }
    dend_46 { pt3dadd( 2.81433, -39.0787, 4.81564, 0.83 ) }
    dend_46 { pt3dadd( 4.24567, -39.8307, 5.03778, 0.83 ) }
    dend_46 { pt3dadd( 6.42701, -40.8921, 5.3895, 0.83 ) }
    dend_46 { pt3dadd( 8.92115, -42.0258, 5.80628, 0.83 ) }
    dend_46 { pt3dadd( 11.8159, -43.3051, 6.30767, 0.83 ) }
    dend_46 { pt3dadd( 14.1523, -44.3376, 6.71234, 0.83 ) }
    dend_46 { pt3dadd( 17.8292, -45.9085, 7.33255, 0.83 ) }
    dend_46 { pt3dadd( 19.4972, -46.6115, 7.60914, 0.55 ) }
    dend_46 { pt3dadd( 20.9985, -47.1755, 7.85701, 0.55 ) }
    dend_46 { pt3dadd( 22.4315, -47.7021, 8.11497, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 41/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.49659, -38.3275, 4.62064, 1.11 ) }
    dend_31 { pt3dadd( 0.621642, -39.7391, 2.82508, 1.11 ) }
    dend_31 { pt3dadd( -1.87291, -43.7637, -2.29421, 0.83 ) }
    dend_31 { pt3dadd( -2.82846, -45.3053, -4.2552, 0.83 ) }
    dend_31 { pt3dadd( -3.56008, -46.4857, -5.75661, 0.83 ) }
    dend_31 { pt3dadd( -4.46892, -47.952, -7.62174, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 132.825, 165.052, -85.6694, 0.55 ) }
    dend_26 { pt3dadd( 134.665, 164.797, -86.0122, 0.55 ) }
    dend_26 { pt3dadd( 138.336, 164.131, -87.2662, 0.55 ) }
    dend_26 { pt3dadd( 139.546, 163.909, -87.7405, 0.55 ) }
    dend_26 { pt3dadd( 142.113, 163.451, -88.8314, 0.55 ) }
    dend_26 { pt3dadd( 146.023, 162.854, -90.6859, 0.55 ) }
    dend_26 { pt3dadd( 149.911, 162.261, -92.5299, 0.55 ) }
    dend_26 { pt3dadd( 156.096, 161.315, -95.7595, 0.55 ) }
    dend_26 { pt3dadd( 157.479, 161.075, -96.5797, 0.83 ) }
    dend_26 { pt3dadd( 160.134, 160.623, -98.2623, 0.28 ) }
    dend_26 { pt3dadd( 163.015, 160.255, -100.234, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 58/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 132.825, 165.052, -85.6694, 0.55 ) }
    dend_25 { pt3dadd( 133.791, 166.459, -87.7665, 0.55 ) }
    dend_25 { pt3dadd( 135.104, 168.374, -90.6205, 0.55 ) }
    dend_25 { pt3dadd( 136.69, 170.684, -94.0643, 0.28 ) }
    dend_25 { pt3dadd( 137.174, 171.389, -95.1153, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 83.451, 164.561, 6.17707, 0.55 ) }
    dend_23 { pt3dadd( 84.849, 172.781, 8.13037, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 83.451, 164.561, 6.17707, 0.55 ) }
    dend_22 { pt3dadd( 89.5571, 169.569, 3.64079, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 179.627, 75.2479, -29.4329, 0.55 ) }
    dend_18 { pt3dadd( 188.202, 79.4008, -26.8833, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 179.627, 75.2479, -29.4329, 0.55 ) }
    dend_17 { pt3dadd( 188.107, 77.1749, -34.0186, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 141.967, 216.158, 122.854, 0.55 ) }
    dend_15 { pt3dadd( 147.547, 225.364, 128.287, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 141.967, 216.158, 122.854, 0.55 ) }
    dend_14 { pt3dadd( 148.207, 225.73, 128.976, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.29565, 24.8663, 0.977098, 0.83 ) }
    dend_6 { pt3dadd( 4.15281, 26.7512, 1.41214, 0.83 ) }
    dend_6 { pt3dadd( 4.97423, 28.8947, 1.94932, 0.83 ) }
    dend_6 { pt3dadd( 5.52267, 30.8366, 2.4497, 0.28 ) }
    dend_6 { pt3dadd( 5.71618, 31.5913, 2.61354, 1.11 ) }
    dend_6 { pt3dadd( 6.28325, 33.9604, 3.11708, 0.28 ) }
    dend_6 { pt3dadd( 6.68853, 35.6509, 3.44357, 0.83 ) }
    dend_6 { pt3dadd( 7.17282, 37.8433, 3.79979, 0.28 ) }
    dend_6 { pt3dadd( 7.67558, 40.1755, 4.17285, 0.83 ) }
    dend_6 { pt3dadd( 8.31125, 43.2115, 4.69348, 0.55 ) }
    dend_6 { pt3dadd( 8.59597, 44.6751, 4.96228, 1.11 ) }
    dend_6 { pt3dadd( 9.0437, 47.073, 5.43412, 0.55 ) }
    dend_6 { pt3dadd( 9.47744, 49.2759, 5.83134, 0.83 ) }
    dend_6 { pt3dadd( 9.94295, 51.3284, 6.1517, 0.28 ) }
    dend_6 { pt3dadd( 10.4101, 53.2751, 6.43859, 0.83 ) }
    dend_6 { pt3dadd( 10.72, 54.907, 6.76566, 0.28 ) }
    dend_6 { pt3dadd( 10.862, 55.8202, 6.95978, 0.55 ) }
    dend_6 { pt3dadd( 11.1084, 57.6659, 7.37109, 0.28 ) }
    dend_6 { pt3dadd( 11.2682, 58.9432, 7.63934, 0.83 ) }
    dend_6 { pt3dadd( 11.5892, 61.2678, 8.08021, 0.83 ) }
    dend_6 { pt3dadd( 12.0029, 63.8717, 8.60776, 0.28 ) }
    dend_6 { pt3dadd( 12.1301, 65.1721, 8.96658, 0.55 ) }
    dend_6 { pt3dadd( 12.1628, 66.3594, 9.32382, 0.28 ) }
    dend_6 { pt3dadd( 12.1666, 67.1348, 9.56996, 0.55 ) }
    dend_6 { pt3dadd( 12.1634, 68.5928, 9.99135, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( 12.1733, 69.7401, 10.2648, 0.83 ) }
    dend_6 { pt3dadd( 12.3111, 72.9458, 10.8278, 0.55 ) }
    dend_6 { pt3dadd( 12.3551, 74.1161, 11.0242, 0.83 ) }
    dend_6 { pt3dadd( 12.3971, 75.6957, 11.2721, 0.55 ) }
    dend_6 { pt3dadd( 12.5022, 77.5398, 11.4216, 0.55 ) }
    dend_6 { pt3dadd( 12.6481, 79.1313, 11.4551, 0.28 ) }
    dend_6 { pt3dadd( 12.7802, 80.2029, 11.4503, 0.55 ) }
    dend_6 { pt3dadd( 13.0614, 81.8733, 11.388, 0.28 ) }
    dend_6 { pt3dadd( 13.1, 82.1283, 11.3841, 0.55 ) }
    dend_6 { pt3dadd( 13.3836, 84.3829, 11.3701, 0.28 ) }
    dend_6 { pt3dadd( 13.6061, 85.9006, 11.3806, 0.55 ) }
    dend_6 { pt3dadd( 13.7958, 87.1963, 11.4597, 0.28 ) }
    dend_6 { pt3dadd( 14.0094, 88.6003, 11.6137, 0.83 ) }
    dend_6 { pt3dadd( 14.3013, 90.1334, 11.8663, 0.83 ) }
    dend_6 { pt3dadd( 14.519, 91.2235, 12.0963, 0.28 ) }
    dend_6 { pt3dadd( 14.7648, 92.5513, 12.5359, 0.55 ) }
    dend_6 { pt3dadd( 15.1536, 94.3295, 13.0652, 0.28 ) }
    dend_6 { pt3dadd( 15.2164, 94.5845, 13.1316, 0.55 ) }
    dend_6 { pt3dadd( 15.7428, 96.4677, 13.5827, 0.28 ) }
    dend_6 { pt3dadd( 15.8745, 97.0016, 13.7081, 0.55 ) }
    dend_6 { pt3dadd( 16.329, 99.4458, 14.1186, 0.28 ) }
    dend_6 { pt3dadd( 16.6589, 101.767, 14.4645, 0.55 ) }
    dend_6 { pt3dadd( 16.7491, 102.694, 14.5772, 0.28 ) }
    dend_6 { pt3dadd( 16.8257, 104.028, 14.7468, 0.55 ) }
    dend_6 { pt3dadd( 16.8481, 106.698, 15.1456, 0.55 ) }
    dend_6 { pt3dadd( 16.8266, 108.352, 15.4106, 0.28 ) }
    dend_6 { pt3dadd( 16.7745, 110.158, 15.7107, 0.55 ) }
    dend_6 { pt3dadd( 16.6667, 111.811, 16.1315, 0.28 ) }
    dend_6 { pt3dadd( 16.6265, 112.306, 16.275, 0.55 ) }
    dend_6 { pt3dadd( 16.4864, 113.534, 16.6472, 0.28 ) }
    dend_6 { pt3dadd( 16.3647, 114.577, 16.9549, 0.83 ) }
    dend_6 { pt3dadd( 19.0066, 123.52, 18.9067, 0.83 ) }
    dend_6 { pt3dadd( 20.9103, 132.476, 21.5399, 0.83 ) }
    dend_6 { pt3dadd( 21.5083, 141.74, 23.6187, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 34/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.29565, 24.8663, 0.977098, 0.55 ) }
    dend_3 { pt3dadd( 2.51077, 25.9246, 0.991718, 0.55 ) }
    dend_3 { pt3dadd( 2.35285, 26.1484, 0.995219, 0.55 ) }
    dend_3 { pt3dadd( 1.55896, 27.3479, 1.00389, 0.83 ) }
    dend_3 { pt3dadd( 0.725195, 28.69, 0.966257, 0.55 ) }
    dend_3 { pt3dadd( 0.428753, 29.1859, 0.94397, 0.55 ) }
    dend_3 { pt3dadd( 0.0467158, 29.8667, 0.90744, 0.55 ) }
    dend_3 { pt3dadd( -0.339911, 30.6484, 0.822122, 0.83 ) }
    dend_3 { pt3dadd( -0.827811, 31.6541, 0.657597, 0.28 ) }
    dend_3 { pt3dadd( -1.11507, 32.3108, 0.509704, 0.55 ) }
    dend_3 { pt3dadd( -1.29563, 32.784, 0.374632, 0.28 ) }
    dend_3 { pt3dadd( -1.59624, 33.5338, 0.141266, 0.83 ) }
    dend_3 { pt3dadd( -2.06327, 34.6458, -0.207632, 0.55 ) }
    dend_3 { pt3dadd( -2.28342, 35.1583, -0.355957, 0.55 ) }
    dend_3 { pt3dadd( -2.86807, 36.5018, -0.683895, 0.55 ) }
    dend_3 { pt3dadd( -3.17707, 37.2287, -0.870283, 0.28 ) }
    dend_3 { pt3dadd( -3.56563, 38.1175, -1.04324, 0.55 ) }
    dend_3 { pt3dadd( -3.92133, 38.9734, -1.21029, 0.28 ) }
    dend_3 { pt3dadd( -4.27187, 39.8626, -1.37944, 0.28 ) }
    dend_3 { pt3dadd( -4.5676, 40.6436, -1.55005, 0.55 ) }
    dend_3 { pt3dadd( -5.11938, 42.0816, -1.90798, 0.55 ) }
    dend_3 { pt3dadd( -5.74448, 43.942, -2.48072, 0.28 ) }
    dend_3 { pt3dadd( -6.21164, 45.3886, -2.95024, 0.83 ) }
    dend_3 { pt3dadd( -6.59462, 46.5643, -3.30853, 0.55 ) }
    dend_3 { pt3dadd( -6.98456, 47.7431, -3.64041, 0.55 ) }
    dend_3 { pt3dadd( -7.25126, 48.6101, -3.85112, 0.55 ) }
    dend_3 { pt3dadd( -7.67307, 50.0762, -4.12761, 0.28 ) }
    dend_3 { pt3dadd( -8.00043, 51.3144, -4.33934, 0.55 ) }
    dend_3 { pt3dadd( -8.27105, 52.3661, -4.41461, 0.55 ) }
    dend_3 { pt3dadd( -8.40683, 52.945, -4.43398, 0.28 ) }
    dend_3 { pt3dadd( -8.5417, 53.4786, -4.44287, 0.83 ) }
    dend_3 { pt3dadd( -8.8278, 54.4215, -4.46058, 0.28 ) }
    dend_3 { pt3dadd( -9.13287, 55.2234, -4.48783, 0.55 ) }
    dend_3 { pt3dadd( -9.63418, 56.388, -4.5856, 0.55 ) }
    dend_3 { pt3dadd( -10.0909, 57.2897, -4.69683, 0.55 ) }
    dend_3 { pt3dadd( -10.4502, 57.8783, -4.75577, 0.28 ) }
    dend_3 { pt3dadd( -10.63, 58.1338, -4.77994, 0.55 ) }
    dend_3 { pt3dadd( -11.0571, 58.6921, -4.79764, 0.55 ) }
    dend_3 { pt3dadd( -11.9209, 59.7275, -4.82105, 0.28 ) }
    dend_3 { pt3dadd( -12.7299, 60.6109, -4.84602, 0.55 ) }
    dend_3 { pt3dadd( -13.4753, 61.396, -4.93255, 0.28 ) }
    dend_3 { pt3dadd( -13.7886, 61.712, -4.96615, 0.55 ) }
    dend_3 { pt3dadd( -14.5167, 62.4012, -5.03191, 0.28 ) }
    dend_3 { pt3dadd( -15.4632, 63.2288, -5.12511, 0.55 ) }
    dend_3 { pt3dadd( -16.3148, 63.8895, -5.23885, 0.28 ) }
    dend_3 { pt3dadd( -16.9705, 64.3655, -5.32822, 0.55 ) }
    dend_3 { pt3dadd( -18.6801, 65.6192, -5.4998, 0.55 ) }
    dend_3 { pt3dadd( -19.2581, 66.0271, -5.54459, 0.55 ) }
    dend_3 { pt3dadd( -20.0318, 66.5624, -5.60073, 0.55 ) }
    dend_3 { pt3dadd( -20.8288, 67.156, -5.65165, 0.55 ) }
    dend_3 { pt3dadd( -22.3233, 68.3136, -5.6832, 0.55 ) }
    dend_3 { pt3dadd( -23.3545, 69.1134, -5.66601, 0.55 ) }
    dend_3 { pt3dadd( -24.0304, 69.6409, -5.72249, 0.55 ) }
    dend_3 { pt3dadd( -25.2846, 70.6457, -5.83063, 0.55 ) }
    dend_3 { pt3dadd( -26.3816, 71.5395, -5.90847, 0.55 ) }
    dend_3 { pt3dadd( -27.5224, 72.4872, -5.98053, 0.83 ) }
    dend_3 { pt3dadd( -28.8735, 73.5587, -6.0923, 0.28 ) }
    dend_3 { pt3dadd( -30.4527, 74.8164, -6.36444, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 92/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 58.3761, -22.2059, 23.4597, 0.55 ) }
    dend_62 { pt3dadd( 66.6109, -20.0094, 31.4999, 0.55 ) }
    dend_62 { pt3dadd( 75.3595, -19.3602, 39.2851, 0.55 ) }
    dend_62 { pt3dadd( 83.4095, -18.0285, 47.7042, 0.55 ) }
    dend_62 { pt3dadd( 91.0272, -18.1967, 56.6232, 0.55 ) }
    dend_62 { pt3dadd( 99.2135, -17.1151, 64.9489, 0.55 ) }
    dend_62 { pt3dadd( 105.819, -14.5433, 74.2675, 0.55 ) }
    dend_62 { pt3dadd( 112.239, -11.1252, 83.4256, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( 120.204, -6.35327, 90.5061, 0.55 ) }
    dend_62 { pt3dadd( 127.527, -1.36032, 98.0953, 0.55 ) }
    dend_62 { pt3dadd( 133.985, 5.14721, 105.247, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 58.3761, -22.2059, 23.4597, 0.55 ) }
    dend_61 { pt3dadd( 65.8444, -19.6983, 27.4522, 0.55 ) }
    dend_61 { pt3dadd( 73.7886, -18.8891, 31.2611, 0.55 ) }
    dend_61 { pt3dadd( 81.6418, -19.0586, 35.3337, 0.55 ) }
    dend_61 { pt3dadd( 89.8708, -20.1849, 38.3687, 0.55 ) }
    dend_61 { pt3dadd( 97.9265, -20.9913, 41.9321, 0.55 ) }
    dend_61 { pt3dadd( 105.503, -21.7767, 46.43, 0.55 ) }
    dend_61 { pt3dadd( 112.408, -22.3079, 51.9365, 0.55 ) }
    dend_61 { pt3dadd( 119.065, -21.6827, 57.7299, 0.55 ) }
    dend_61 { pt3dadd( 124.912, -20.8975, 64.3209, 0.55 ) }
    dend_61 { pt3dadd( 130.065, -19.5291, 71.3733, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 14/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 95.3348, -70.0713, 2.97345, 0.55 ) }
    dend_59 { pt3dadd( 104.91, -74.1347, 4.35667, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 16/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 95.3348, -70.0713, 2.97345, 0.55 ) }
    dend_58 { pt3dadd( 105.019, -76.3108, -0.458543, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 18/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -140.344, -83.988, 40.5738, 0.55 ) }
    dend_53 { pt3dadd( -147.658, -87.3168, 47.7864, 0.55 ) }
    dend_53 { pt3dadd( -153.675, -92.3849, 55.1593, 0.55 ) }
    dend_53 { pt3dadd( -160.028, -98.5858, 61.2256, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 22/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -140.344, -83.988, 40.5738, 0.55 ) }
    dend_52 { pt3dadd( -146.676, -86.3228, 46.5615, 0.55 ) }
    dend_52 { pt3dadd( -153.295, -89.2285, 51.9449, 0.55 ) }
    dend_52 { pt3dadd( -161.065, -90.6755, 56.2962, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 22.4315, -47.7021, 8.11497, 0.55 ) }
    dend_48 { pt3dadd( 25.3954, -47.6706, 8.68713, 0.55 ) }
    dend_48 { pt3dadd( 27.8605, -47.6783, 9.19794, 0.55 ) }
    dend_48 { pt3dadd( 30.5184, -47.6216, 9.78177, 0.55 ) }
    dend_48 { pt3dadd( 33.3839, -47.5648, 10.4751, 0.55 ) }
    dend_48 { pt3dadd( 36.9958, -47.4031, 11.3994, 0.55 ) }
    dend_48 { pt3dadd( 39.6326, -47.2436, 12.0971, 0.55 ) }
    dend_48 { pt3dadd( 42.6279, -46.9123, 12.9028, 0.55 ) }
    dend_48 { pt3dadd( 44.2772, -46.64, 13.3722, 0.55 ) }
    dend_48 { pt3dadd( 47.5898, -45.7894, 14.3856, 0.55 ) }
    dend_48 { pt3dadd( 49.2448, -45.2347, 14.9435, 0.55 ) }
    dend_48 { pt3dadd( 50.4805, -44.7395, 15.3929, 0.55 ) }
    dend_48 { pt3dadd( 53.3612, -43.4114, 16.4584, 0.55 ) }
    dend_48 { pt3dadd( 55.3052, -42.3776, 17.1776, 0.83 ) }
    dend_48 { pt3dadd( 56.5849, -41.6322, 17.6578, 0.55 ) }
    dend_48 { pt3dadd( 58.2721, -40.5214, 18.3044, 0.55 ) }
    dend_48 { pt3dadd( 61.8721, -37.9608, 19.7026, 0.55 ) }
    dend_48 { pt3dadd( 62.8892, -37.1713, 20.1066, 0.55 ) }
    dend_48 { pt3dadd( 63.5217, -36.6243, 20.3581, 0.83 ) }
    dend_48 { pt3dadd( 65.5529, -34.6892, 21.1689, 0.55 ) }
    dend_48 { pt3dadd( 66.8129, -33.3373, 21.7042, 0.55 ) }
    dend_48 { pt3dadd( 68.3105, -31.49, 22.4368, 0.55 ) }
    dend_48 { pt3dadd( 69.8838, -29.2061, 23.3083, 0.55 ) }
    dend_48 { pt3dadd( 71.9206, -26.0139, 24.5623, 0.55 ) }
    dend_48 { pt3dadd( 72.7647, -24.6168, 25.129, 0.28 ) }
    dend_48 { pt3dadd( 74.1912, -22.1056, 26.2108, 0.55 ) }
    dend_48 { pt3dadd( 75.4696, -19.7907, 27.2594, 0.28 ) }
    dend_48 { pt3dadd( 76.0587, -18.6887, 27.7666, 0.55 ) }
    dend_48 { pt3dadd( 76.7894, -17.2454, 28.4061, 0.28 ) }
    dend_48 { pt3dadd( 77.0594, -16.7531, 28.601, 0.55 ) }
    dend_48 { pt3dadd( 78.0886, -15.1704, 29.1257, 0.55 ) }
    dend_48 { pt3dadd( 80.2789, -12.3591, 29.9529, 0.55 ) }
    dend_48 { pt3dadd( 81.6979, -10.7223, 30.3981, 0.55 ) }
    dend_48 { pt3dadd( 82.9969, -9.33998, 30.7882, 0.55 ) }
    dend_48 { pt3dadd( 85.7355, -6.5558, 31.5728, 0.55 ) }
    dend_48 { pt3dadd( 88.575, -3.73052, 32.3119, 0.55 ) }
    dend_48 { pt3dadd( 90.8858, -1.47288, 32.8508, 0.55 ) }
    dend_48 { pt3dadd( 92.4519, -0.00754765, 33.2033, 0.55 ) }
    dend_48 { pt3dadd( 93.6143, 1.02808, 33.4831, 0.83 ) }
    dend_48 { pt3dadd( 94.2436, 1.57888, 33.6448, 0.83 ) }
    dend_48 { pt3dadd( 95.7506, 2.89266, 34.0962, 0.55 ) }
    dend_48 { pt3dadd( 96.3712, 3.45914, 34.2818, 0.83 ) }
    dend_48 { pt3dadd( 98.1319, 5.14513, 34.7948, 0.28 ) }
    dend_48 { pt3dadd( 99.6275, 6.58666, 35.2498, 0.55 ) }
    dend_48 { pt3dadd( 100.56, 7.49358, 35.5793, 0.55 ) }
    dend_48 { pt3dadd( 101.869, 8.78539, 36.0762, 0.55 ) }
    dend_48 { pt3dadd( 103.489, 10.3747, 36.7422, 0.28 ) }
    dend_48 { pt3dadd( 104.747, 11.5772, 37.2595, 0.55 ) }
    dend_48 { pt3dadd( 106.145, 12.804, 37.8119, 0.83 ) }
    dend_48 { pt3dadd( 107.513, 13.8481, 38.3347, 0.55 ) }
    dend_48 { pt3dadd( 109.455, 15.0482, 39.1789, 0.28 ) }
    dend_48 { pt3dadd( 111.684, 16.2142, 40.214, 0.55 ) }
    dend_48 { pt3dadd( 113.424, 16.9695, 41.0661, 0.55 ) }
    dend_48 { pt3dadd( 115.815, 17.8367, 42.2424, 0.55 ) }
    dend_48 { pt3dadd( 117.998, 18.508, 43.316, 0.55 ) }
    dend_48 { pt3dadd( 121.102, 19.3634, 44.8487, 0.55 ) }
    dend_48 { pt3dadd( 122.875, 19.7951, 45.7895, 0.55 ) }
    dend_48 { pt3dadd( 125.488, 20.4949, 47.2107, 0.55 ) }
    dend_48 { pt3dadd( 126.671, 20.9058, 47.869, 0.28 ) }
    dend_48 { pt3dadd( 128.753, 21.9033, 49.0428, 0.55 ) }
    dend_48 { pt3dadd( 129.528, 22.3241, 49.4612, 0.28 ) }
    dend_48 { pt3dadd( 130.234, 22.7535, 49.804, 0.83 ) }
    dend_48 { pt3dadd( 132.504, 24.1202, 50.9833, 0.55 ) }
    dend_48 { pt3dadd( 134.248, 25.3596, 51.9305, 0.28 ) }
    dend_48 { pt3dadd( 135.63, 26.5286, 52.7237, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 22.4315, -47.7021, 8.11497, 0.55 ) }
    dend_47 { pt3dadd( 24.0766, -49.4318, 8.51658, 0.55 ) }
    dend_47 { pt3dadd( 25.9015, -51.3397, 9.0134, 0.55 ) }
    dend_47 { pt3dadd( 28.051, -53.6809, 9.92202, 0.28 ) }
    dend_47 { pt3dadd( 28.8884, -54.6073, 10.3377, 0.28 ) }
    dend_47 { pt3dadd( 29.9249, -55.8534, 11.1218, 0.55 ) }
    dend_47 { pt3dadd( 30.913, -57.0789, 11.9927, 0.28 ) }
    dend_47 { pt3dadd( 32.0945, -58.5686, 13.196, 0.55 ) }
    dend_47 { pt3dadd( 33.8939, -60.9903, 15.3247, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 34.9068, -62.3411, 16.6524, 0.55 ) }
    dend_47 { pt3dadd( 37.4813, -65.6334, 20.0628, 0.55 ) }
    dend_47 { pt3dadd( 39.0714, -67.6729, 22.1484, 0.55 ) }
    dend_47 { pt3dadd( 40.0825, -68.8943, 23.3727, 0.28 ) }
    dend_47 { pt3dadd( 40.5475, -69.4537, 23.9205, 0.55 ) }
    dend_47 { pt3dadd( 42.548, -71.7899, 26.0722, 0.28 ) }
    dend_47 { pt3dadd( 43.4185, -72.8473, 27.0455, 0.55 ) }
    dend_47 { pt3dadd( 45.0329, -74.8116, 28.7788, 0.55 ) }
    dend_47 { pt3dadd( 46.502, -76.6413, 30.5091, 0.55 ) }
    dend_47 { pt3dadd( 47.9783, -78.5733, 32.3487, 0.28 ) }
    dend_47 { pt3dadd( 48.3355, -79.0473, 32.7943, 0.55 ) }
    dend_47 { pt3dadd( 49.9286, -81.3813, 34.9394, 0.28 ) }
    dend_47 { pt3dadd( 50.0626, -81.5827, 35.1453, 0.55 ) }
    dend_47 { pt3dadd( 50.8183, -82.8595, 36.6299, 0.28 ) }
    dend_47 { pt3dadd( 51.1047, -83.5464, 37.3863, 0.55 ) }
    dend_47 { pt3dadd( 57.3587, -89.9418, 45.5919, 0.55 ) }
    dend_47 { pt3dadd( 61.6913, -97.9767, 53.5115, 0.55 ) }
    dend_47 { pt3dadd( 64.031, -107.312, 60.7382, 0.55 ) }
    dend_47 { pt3dadd( 67.7934, -116.923, 66.9133, 0.55 ) }
    dend_47 { pt3dadd( 72.1489, -125.576, 74.1016, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_31 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.46892, -47.952, -7.62174, 0.55 ) }
    dend_45 { pt3dadd( -4.56085, -47.6997, -9.15121, 0.55 ) }
    dend_45 { pt3dadd( -4.84223, -47.1241, -12.4791, 0.55 ) }
    dend_45 { pt3dadd( -5.38721, -46.0414, -17.2281, 0.28 ) }
    dend_45 { pt3dadd( -5.53727, -45.7432, -18.5357, 0.83 ) }
    dend_45 { pt3dadd( -6.03557, -44.7532, -22.8779, 0.55 ) }
    dend_45 { pt3dadd( -6.48291, -43.8645, -26.7759, 0.55 ) }
    dend_45 { pt3dadd( -6.58804, -43.6131, -28.0699, 0.28 ) }
    dend_45 { pt3dadd( -6.7652, -43.2747, -30.6312, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -4.46892, -47.952, -7.62174, 0.83 ) }
    dend_32 { pt3dadd( -5.32939, -49.3106, -7.71395, 0.83 ) }
    dend_32 { pt3dadd( -6.39579, -50.9944, -7.82823, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 21.5083, 141.74, 23.6187, 0.83 ) }
    dend_10 { pt3dadd( 25.3208, 155.991, 26.0444, 0.83 ) }
    dend_10 { pt3dadd( 30.9939, 169.833, 26.6584, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.5083, 141.74, 23.6187, 0.55 ) }
    dend_7 { pt3dadd( 20.7278, 151.446, 25.6248, 0.83 ) }
    dend_7 { pt3dadd( 20.2874, 161.31, 26.6916, 0.83 ) }
    dend_7 { pt3dadd( 18.829, 170.916, 28.8248, 0.83 ) }
    dend_7 { pt3dadd( 18.6898, 180.599, 31.0818, 0.83 ) }
    dend_7 { pt3dadd( 18.0357, 190.239, 33.4399, 0.83 ) }
    dend_7 { pt3dadd( 16.137, 199.96, 34.2733, 0.83 ) }
    dend_7 { pt3dadd( 13.7294, 209.605, 34.3596, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 43/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -30.4527, 74.8164, -6.36444, 0.28 ) }
    dend_5 { pt3dadd( -34.8254, 74.0998, -6.32568, 0.28 ) }
    dend_5 { pt3dadd( -36.1546, 73.882, -6.3139, 0.28 ) }
    dend_5 { pt3dadd( -37.9481, 73.5882, -6.298, 0.55 ) }
    dend_5 { pt3dadd( -39.5933, 73.3186, -6.28342, 0.28 ) }
    dend_5 { pt3dadd( -41.2662, 73.0444, -6.26859, 0.28 ) }
    dend_5 { pt3dadd( -44.245, 72.5564, -6.24219, 0.83 ) }
    dend_5 { pt3dadd( -53.5364, 70.1113, -6.45489, 0.83 ) }
    dend_5 { pt3dadd( -62.9683, 68.5263, -5.42664, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -30.4527, 74.8164, -6.36444, 0.28 ) }
    dend_4 { pt3dadd( -33.3951, 77.108, -6.27791, 0.28 ) }
    dend_4 { pt3dadd( -36.496, 79.4026, -6.08873, 0.55 ) }
    dend_4 { pt3dadd( -39.2265, 81.4433, -5.83276, 0.55 ) }
    dend_4 { pt3dadd( -39.9185, 81.9501, -5.73621, 0.55 ) }
    dend_4 { pt3dadd( -41.5287, 83.1983, -5.4572, 0.28 ) }
    dend_4 { pt3dadd( -43.0342, 84.3681, -5.20569, 0.55 ) }
    dend_4 { pt3dadd( -44.9259, 85.7639, -4.74101, 0.28 ) }
    dend_4 { pt3dadd( -46.1916, 86.6234, -4.38972, 0.28 ) }
    dend_4 { pt3dadd( -48.7096, 88.3138, -3.58547, 0.55 ) }
    dend_4 { pt3dadd( -51.3446, 90.05, -2.69669, 0.28 ) }
    dend_4 { pt3dadd( -53.9156, 91.7191, -1.78139, 0.55 ) }
    dend_4 { pt3dadd( -57.2812, 93.8485, -0.663284, 0.28 ) }
    dend_4 { pt3dadd( -58.6301, 94.6937, -0.213286, 0.55 ) }
    dend_4 { pt3dadd( -67.3369, 100.569, 3.15742, 0.55 ) }
    dend_4 { pt3dadd( -76.3006, 105.698, 7.08585, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -6.39579, -50.9944, -7.82823, 0.55 ) }
    dend_40 { pt3dadd( -6.19573, -52.5407, -7.87849, 0.55 ) }
    dend_40 { pt3dadd( -6.03848, -54.8174, -8.00027, 0.55 ) }
    dend_40 { pt3dadd( -5.85583, -58.3593, -8.25977, 0.55 ) }
    dend_40 { pt3dadd( -5.88056, -62.4422, -8.66787, 0.55 ) }
    dend_40 { pt3dadd( -5.99494, -65.4909, -9.10118, 0.55 ) }
    dend_40 { pt3dadd( -6.20168, -67.7657, -9.52963, 0.55 ) }
    dend_40 { pt3dadd( -6.50122, -69.3043, -9.91957, 0.55 ) }
    dend_40 { pt3dadd( -7.14362, -71.896, -10.6564, 0.55 ) }
    dend_40 { pt3dadd( -8.05748, -74.9824, -11.6338, 0.55 ) }
    dend_40 { pt3dadd( -8.76688, -77.5484, -12.5082, 0.55 ) }
    dend_40 { pt3dadd( -9.55428, -80.6003, -13.5248, 0.55 ) }
    dend_40 { pt3dadd( -10.4872, -85.0881, -14.9998, 0.55 ) }
    dend_40 { pt3dadd( -11.0722, -88.4184, -16.0491, 0.55 ) }
    dend_40 { pt3dadd( -11.7461, -92.9245, -17.3465, 0.55 ) }
    dend_40 { pt3dadd( -12.1123, -96.7359, -18.3069, 0.55 ) }
    dend_40 { pt3dadd( -12.3034, -99.2568, -18.8022, 0.55 ) }
    dend_40 { pt3dadd( -12.429, -102.274, -19.2337, 0.55 ) }
    dend_40 { pt3dadd( -12.4672, -103.969, -19.4012, 0.55 ) }
    dend_40 { pt3dadd( -12.5665, -107.75, -19.6266, 0.55 ) }
    dend_40 { pt3dadd( -12.5411, -109.206, -19.608, 0.55 ) }
    dend_40 { pt3dadd( -12.5661, -112.634, -19.4163, 0.55 ) }
    dend_40 { pt3dadd( -12.5115, -115.352, -19.1819, 0.55 ) }
    dend_40 { pt3dadd( -12.4635, -117.144, -18.9383, 0.55 ) }
    dend_40 { pt3dadd( -12.4211, -118.355, -18.7567, 0.55 ) }
    dend_40 { pt3dadd( -12.2554, -120.221, -18.4119, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.39579, -50.9944, -7.82823, 0.55 ) }
    dend_33 { pt3dadd( -7.07595, -53.7633, -7.16568, 0.55 ) }
    dend_33 { pt3dadd( -7.75606, -57.2585, -6.41071, 0.55 ) }
    dend_33 { pt3dadd( -8.20431, -59.9536, -5.90821, 0.55 ) }
    dend_33 { pt3dadd( -8.93044, -64.8312, -5.09447, 0.55 ) }
    dend_33 { pt3dadd( -9.25997, -66.7885, -4.79201, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( -9.68597, -69.1674, -4.42365, 0.55 ) }
    dend_33 { pt3dadd( -10.0659, -71.3593, -4.09402, 0.55 ) }
    dend_33 { pt3dadd( -10.9412, -75.8589, -3.38494, 0.55 ) }
    dend_33 { pt3dadd( -11.532, -78.1835, -2.88902, 0.55 ) }
    dend_33 { pt3dadd( -12.2644, -80.6392, -2.1095, 0.55 ) }
    dend_33 { pt3dadd( -13.4232, -83.8936, -0.831873, 0.55 ) }
    dend_33 { pt3dadd( -14.4654, -86.4694, 0.370795, 0.55 ) }
    dend_33 { pt3dadd( -15.4162, -88.6328, 1.50894, 0.55 ) }
    dend_33 { pt3dadd( -16.5712, -91.1965, 3.03074, 0.55 ) }
    dend_33 { pt3dadd( -17.9233, -94.4107, 5.08786, 0.55 ) }
    dend_33 { pt3dadd( -18.3944, -95.8327, 5.98983, 0.55 ) }
    dend_33 { pt3dadd( -18.6187, -96.7695, 6.5607, 0.83 ) }
    dend_33 { pt3dadd( -18.8128, -98.6833, 7.60088, 0.83 ) }
    dend_33 { pt3dadd( -18.7666, -100.254, 8.29931, 0.83 ) }
    dend_33 { pt3dadd( -18.1352, -103.745, 9.63465, 0.55 ) }
    dend_33 { pt3dadd( -17.4795, -106.212, 10.4286, 0.83 ) }
    dend_33 { pt3dadd( -16.9984, -107.878, 11.0663, 0.55 ) }
    dend_33 { pt3dadd( -16.5763, -109.43, 11.7141, 0.55 ) }
    dend_33 { pt3dadd( -15.8573, -112.177, 12.9663, 0.55 ) }
    dend_33 { pt3dadd( -15.5078, -113.984, 13.8651, 0.55 ) }
    dend_33 { pt3dadd( -15.433, -115.432, 14.6128, 0.55 ) }
    dend_33 { pt3dadd( -15.7786, -118.911, 16.4811, 0.55 ) }
    dend_33 { pt3dadd( -16.1195, -120.839, 17.4642, 0.55 ) }
    dend_33 { pt3dadd( -16.4658, -122.495, 18.2144, 0.55 ) }
    dend_33 { pt3dadd( -16.9575, -125.163, 19.2617, 0.55 ) }
    dend_33 { pt3dadd( -17.5173, -128.382, 20.3152, 0.55 ) }
    dend_33 { pt3dadd( -17.8289, -130.45, 20.9, 0.55 ) }
    dend_33 { pt3dadd( -18.1413, -133.039, 21.5276, 0.55 ) }
    dend_33 { pt3dadd( -18.6751, -137.808, 22.5883, 0.55 ) }
    dend_33 { pt3dadd( -19.158, -142.291, 23.4143, 0.55 ) }
    dend_33 { pt3dadd( -19.3444, -144.445, 23.7798, 0.55 ) }
    dend_33 { pt3dadd( -19.5919, -147.775, 24.351, 0.55 ) }
    dend_33 { pt3dadd( -20.0229, -152.757, 25.2255, 0.83 ) }
    dend_33 { pt3dadd( -20.6419, -158.079, 26.1616, 0.83 ) }
    dend_33 { pt3dadd( -20.9445, -160.311, 26.5336, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 13.7294, 209.605, 34.3596, 0.83 ) }
    dend_9 { pt3dadd( 12.8743, 216.837, 35.5969, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.7294, 209.605, 34.3596, 0.55 ) }
    dend_8 { pt3dadd( 13.2007, 218.071, 36.8903, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 39/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -12.2554, -120.221, -18.4119, 0.55 ) }
    dend_44 { pt3dadd( -11.2676, -121.691, -18.5429, 0.55 ) }
    dend_44 { pt3dadd( -10.2848, -123.17, -18.6375, 0.55 ) }
    dend_44 { pt3dadd( -8.65411, -125.737, -18.7607, 0.55 ) }
    dend_44 { pt3dadd( -7.06801, -128.216, -18.8762, 0.55 ) }
    dend_44 { pt3dadd( -5.99, -129.864, -18.9222, 0.55 ) }
    dend_44 { pt3dadd( -4.94033, -131.447, -18.9348, 0.55 ) }
    dend_44 { pt3dadd( -3.32809, -134.084, -18.9135, 0.55 ) }
    dend_44 { pt3dadd( -2.19073, -135.996, -18.8418, 0.55 ) }
    dend_44 { pt3dadd( -1.69561, -136.885, -18.7878, 0.55 ) }
    dend_44 { pt3dadd( -0.163709, -139.778, -18.5745, 0.83 ) }
    dend_44 { pt3dadd( 0.888869, -141.793, -18.4324, 0.55 ) }
    dend_44 { pt3dadd( 2.26935, -144.319, -18.2107, 0.55 ) }
    dend_44 { pt3dadd( 3.35195, -146.325, -18.0205, 0.55 ) }
    dend_44 { pt3dadd( 4.66613, -148.815, -17.7656, 0.55 ) }
    dend_44 { pt3dadd( 6.2673, -151.959, -17.4283, 0.55 ) }
    dend_44 { pt3dadd( 7.26245, -153.97, -17.2318, 0.55 ) }
    dend_44 { pt3dadd( 8.20561, -155.92, -17.0713, 0.55 ) }
    dend_44 { pt3dadd( 8.82068, -157.213, -16.9509, 0.55 ) }
    dend_44 { pt3dadd( 9.24089, -158.288, -16.8298, 0.28 ) }
    dend_44 { pt3dadd( 9.4606, -159.078, -16.712, 0.55 ) }
    dend_44 { pt3dadd( 9.64975, -159.996, -16.5822, 0.28 ) }
    dend_44 { pt3dadd( 9.85293, -161.38, -16.4352, 0.55 ) }
    dend_44 { pt3dadd( 10.1815, -163.416, -16.2725, 0.28 ) }
    dend_44 { pt3dadd( 10.6123, -165.572, -16.0326, 0.55 ) }
    dend_44 { pt3dadd( 11.0514, -167.569, -15.803, 0.55 ) }
    dend_44 { pt3dadd( 11.3911, -169.152, -15.6407, 0.55 ) }
    dend_44 { pt3dadd( 11.8939, -171.166, -15.4538, 0.55 ) }
    dend_44 { pt3dadd( 12.3188, -172.954, -15.216, 0.55 ) }
    dend_44 { pt3dadd( 12.9935, -175.799, -14.9108, 0.83 ) }
    dend_44 { pt3dadd( 13.3718, -177.357, -14.7324, 0.28 ) }
    dend_44 { pt3dadd( 13.8678, -179.662, -14.4778, 0.28 ) }
    dend_44 { pt3dadd( 14.291, -181.915, -14.2435, 0.28 ) }
    dend_44 { pt3dadd( 15.088, -186.394, -13.8202, 0.55 ) }
    dend_44 { pt3dadd( 15.6347, -189.667, -13.5688, 1.66 ) }
    dend_44 { pt3dadd( 16.247, -193.26, -13.3351, 0.55 ) }
    dend_44 { pt3dadd( 16.8805, -196.728, -13.0882, 0.55 ) }
    dend_44 { pt3dadd( 17.5731, -200.624, -12.8247, 0.28 ) }
    dend_44 { pt3dadd( 18.0299, -203.602, -12.6631, 0.55 ) }
    dend_44 { pt3dadd( 18.4831, -206.89, -12.513, 0.28 ) }
    dend_44 { pt3dadd( 18.6725, -208.813, -12.3622, 0.83 ) }
    dend_44 { pt3dadd( 18.8368, -211.278, -12.159, 0.55 ) }
    dend_44 { pt3dadd( 18.958, -213.63, -11.9096, 0.55 ) }
    dend_44 { pt3dadd( 18.9454, -215.953, -11.6582, 0.83 ) }
    dend_44 { pt3dadd( 18.8342, -218.261, -11.4179, 0.28 ) }
    dend_44 { pt3dadd( 18.8342, -218.261, -11.4179, 0.55 ) }
    dend_44 { pt3dadd( 18.6972, -219.744, -11.3375, 0.28 ) }
    dend_44 { pt3dadd( 18.6362, -220.309, -11.3183, 0.55 ) }
    dend_44 { pt3dadd( 18.562, -221.917, -11.3011, 0.28 ) }
    dend_44 { pt3dadd( 18.5899, -223.359, -11.3541, 0.55 ) }
    dend_44 { pt3dadd( 18.8028, -226.023, -11.6219, 0.28 ) }
    dend_44 { pt3dadd( 18.8681, -226.666, -11.6834, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.2554, -120.221, -18.4119, 0.55 ) }
    dend_41 { pt3dadd( -12.0607, -122.137, -18.2538, 0.55 ) }
    dend_41 { pt3dadd( -11.9837, -123.076, -18.165, 0.28 ) }
    dend_41 { pt3dadd( -11.8801, -124.043, -18.0649, 0.55 ) }
    dend_41 { pt3dadd( -11.4662, -126.884, -17.7593, 0.28 ) }
    dend_41 { pt3dadd( -11.4038, -127.198, -17.7455, 0.55 ) }
    dend_41 { pt3dadd( -10.8404, -129.662, -17.7104, 0.28 ) }
    dend_41 { pt3dadd( -10.5403, -130.775, -17.7136, 0.55 ) }
    dend_41 { pt3dadd( -10.1284, -132.297, -17.7538, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -9.63276, -134.34, -17.8613, 0.55 ) }
    dend_41 { pt3dadd( -9.03123, -137.164, -18.0846, 0.28 ) }
    dend_41 { pt3dadd( -8.922, -137.851, -18.1622, 0.55 ) }
    dend_41 { pt3dadd( -8.83498, -139.422, -18.3982, 0.28 ) }
    dend_41 { pt3dadd( -8.81311, -140.099, -18.5109, 0.55 ) }
    dend_41 { pt3dadd( -8.91821, -141.994, -18.8491, 0.28 ) }
    dend_41 { pt3dadd( -9.06827, -142.904, -19.0063, 0.55 ) }
    dend_41 { pt3dadd( -9.56132, -144.692, -19.2191, 0.28 ) }
    dend_41 { pt3dadd( -10.2173, -146.868, -19.5543, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -20.9445, -160.311, 26.5336, 0.55 ) }
    dend_39 { pt3dadd( -21.7209, -161.648, 26.3868, 0.55 ) }
    dend_39 { pt3dadd( -23.7169, -165.086, 26.0095, 0.55 ) }
    dend_39 { pt3dadd( -25.8847, -168.821, 25.5998, 0.55 ) }
    dend_39 { pt3dadd( -27.3735, -171.385, 25.3183, 0.55 ) }
    dend_39 { pt3dadd( -33.3995, -180.553, 25.2455, 0.55 ) }
    dend_39 { pt3dadd( -39.5321, -189.651, 25.0801, 0.55 ) }
    dend_39 { pt3dadd( -47.5133, -197.116, 26.6217, 0.55 ) }
    dend_39 { pt3dadd( -56.0536, -204.075, 27.5259, 0.55 ) }
    dend_39 { pt3dadd( -64.9516, -210.571, 28.5835, 0.55 ) }
    dend_39 { pt3dadd( -74.036, -216.283, 31.3724, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -20.9445, -160.311, 26.5336, 0.55 ) }
    dend_34 { pt3dadd( -21.1835, -161.12, 26.818, 0.55 ) }
    dend_34 { pt3dadd( -21.3966, -162.149, 27.1522, 0.55 ) }
    dend_34 { pt3dadd( -21.8625, -164.399, 27.8831, 0.55 ) }
    dend_34 { pt3dadd( -22.3119, -166.569, 28.588, 0.55 ) }
    dend_34 { pt3dadd( -22.6142, -168.029, 29.0622, 0.55 ) }
    dend_34 { pt3dadd( -22.9156, -169.485, 29.535, 0.55 ) }
    dend_34 { pt3dadd( -23.2815, -171.31, 30.1714, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 28/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -10.2173, -146.868, -19.5543, 0.28 ) }
    dend_43 { pt3dadd( -11.4644, -150.849, -20.1799, 0.28 ) }
    dend_43 { pt3dadd( -11.8027, -152.081, -20.4041, 0.55 ) }
    dend_43 { pt3dadd( -12.7737, -155.517, -21.0404, 0.28 ) }
    dend_43 { pt3dadd( -13.2183, -157.089, -21.3317, 0.55 ) }
    dend_43 { pt3dadd( -14.2212, -160.638, -21.9888, 0.28 ) }
    dend_43 { pt3dadd( -14.9044, -163.055, -22.4365, 0.83 ) }
    dend_43 { pt3dadd( -15.4742, -165.607, -23.0259, 0.28 ) }
    dend_43 { pt3dadd( -15.8555, -167.51, -23.4913, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -10.2173, -146.868, -19.5543, 0.55 ) }
    dend_42 { pt3dadd( -10.0101, -148.308, -19.1108, 0.55 ) }
    dend_42 { pt3dadd( -9.69904, -150.308, -18.3897, 0.55 ) }
    dend_42 { pt3dadd( -9.43603, -152.536, -17.6304, 0.55 ) }
    dend_42 { pt3dadd( -9.25948, -154.06, -17.1262, 0.55 ) }
    dend_42 { pt3dadd( -9.1237, -155.221, -16.7583, 0.28 ) }
    dend_42 { pt3dadd( -8.9017, -157.435, -16.093, 0.55 ) }
    dend_42 { pt3dadd( -8.68757, -159.756, -15.4009, 0.28 ) }
    dend_42 { pt3dadd( -8.4842, -162.512, -14.796, 0.55 ) }
    dend_42 { pt3dadd( -8.40329, -164.063, -14.5608, 0.28 ) }
    dend_42 { pt3dadd( -8.39012, -165.201, -14.4518, 0.55 ) }
    dend_42 { pt3dadd( -8.40996, -166.469, -14.3596, 0.28 ) }
    dend_42 { pt3dadd( -8.44544, -167.591, -14.3197, 0.55 ) }
    dend_42 { pt3dadd( -8.54211, -170.517, -14.4332, 0.28 ) }
    dend_42 { pt3dadd( -8.62334, -172.964, -14.6096, 0.28 ) }
    dend_42 { pt3dadd( -8.7146, -174.453, -14.7622, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -23.2815, -171.31, 30.1714, 0.28 ) }
    dend_36 { pt3dadd( -20.3067, -171.794, 30.3307, 0.28 ) }
    dend_36 { pt3dadd( -19.5174, -171.922, 30.373, 0.55 ) }
    dend_36 { pt3dadd( -17.2531, -172.29, 30.4942, 0.28 ) }
    dend_36 { pt3dadd( -15.7258, -172.538, 30.576, 0.55 ) }
    dend_36 { pt3dadd( -13.3423, -172.926, 30.7036, 0.28 ) }
    dend_36 { pt3dadd( -12.2069, -173.11, 30.7644, 0.55 ) }
    dend_36 { pt3dadd( 0.636383, -176.249, 30.9106, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.2815, -171.31, 30.1714, 0.55 ) }
    dend_35 { pt3dadd( -23.4598, -175.09, 30.4029, 0.55 ) }
    dend_35 { pt3dadd( -22.6591, -186.21, 32.6357, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.636383, -176.249, 30.9106, 0.55 ) }
    dend_38 { pt3dadd( 11.6991, -178.571, 31.1634, 0.55 ) }
    dend_38 { pt3dadd( 22.9725, -179.384, 31.8324, 0.55 ) }
    dend_38 { pt3dadd( 34.2727, -179.743, 32.5009, 0.55 ) }
    dend_38 { pt3dadd( 45.472, -178.093, 32.0996, 0.55 ) }
    dend_38 { pt3dadd( 56.6131, -176.305, 33.0932, 0.55 ) }
    dend_38 { pt3dadd( 67.4107, -172.929, 32.9565, 0.55 ) }
    dend_38 { pt3dadd( 77.4902, -168.085, 34.5273, 0.55 ) }
    dend_38 { pt3dadd( 86.2291, -161.159, 35.9547, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.636383, -176.249, 30.9106, 0.55 ) }
    dend_37 { pt3dadd( 13.9005, -178.663, 33.4532, 0.55 ) }
    dend_37 { pt3dadd( 26.5072, -181.119, 38.2676, 0.55 ) }
    dend_37 { pt3dadd( 38.8526, -182.22, 44.1809, 0.55 ) }
    dend_37 { pt3dadd( 52.056, -183.376, 47.7791, 0.55 ) }
    dend_37 { pt3dadd( 64.3757, -186.549, 52.8753, 0.55 ) }
    dend_37 { pt3dadd( 76.713, -191.645, 55.8175, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_48 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_40 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_44 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_38 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_29 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_54 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_5 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_58 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_41 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_35 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_36 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_9 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_52 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 9
    dend_55 nseg = 9
    dend_49 nseg = 3
    dend_24 nseg = 11
    dend_21 nseg = 7
    dend_16 nseg = 9
    dend_13 nseg = 15
    dend_60 nseg = 3
    dend_57 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_6 nseg = 7
    dend_3 nseg = 3
    dend_62 nseg = 5
    dend_61 nseg = 5
    dend_48 nseg = 7
    dend_47 nseg = 5
    dend_7 nseg = 3
    dend_4 nseg = 3
    dend_40 nseg = 3
    dend_33 nseg = 5
    dend_44 nseg = 5
    dend_39 nseg = 3
    dend_38 nseg = 5
    dend_37 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_ChC_4587365020_0_0


