// Cell: cNAC187_L5_ChC_dfe3a6b301_0_0
/*
{
  "id" : "cNAC187_L5_ChC_dfe3a6b301_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.1147, -3.45834, 0.37", "-0.0538013, 12.7429, -3.57574, 0.37", "-0.129102, 13.1853, -3.66055, 0.74", "-0.0805781, 13.5338, -3.79066, 0.74", "0.327838, 14.6043, -4.28559, 0.37", "0.729604, 15.4601, -4.65351, 0.66", "1.19919, 16.3434, -5.04652, 1.33", "1.6415, 17.0021, -5.35304, 1.33", "2.38587, 18.09, -5.86803, 0.74", "2.94191, 18.9596, -6.25585, 0.74", "3.78922, 20.3973, -6.89575, 1.25", "4.32317, 21.5532, -7.3883, 2.06", "4.59404, 22.4162, -7.71729, 2.06", "4.78064, 23.5849, -8.12385, 1.4", "4.7098, 24.9347, -8.5766, 0.74", "4.39756, 25.8199, -8.87629, 1.11", "3.85426, 26.4983, -9.10828, 1.11", "3.07094, 27.0781, -9.29197, 0.81", "2.0393, 27.5678, -9.54513, 0.81", "0.77868, 27.9658, -9.87811, 0.81", "-0.450396, 28.2576, -10.2379, 0.96", "-1.46509, 28.4973, -10.5469, 1.11", "-2.37664, 28.7403, -10.8765, 1.11", "-4.35683, 29.398, -11.7414, 1.11", "-4.94191, 29.6683, -12.0594, 1.11", "-5.88568, 30.3871, -12.7129, 0.59", "-6.4434, 31.158, -13.1852, 0.96", "-6.77325, 31.8697, -13.4977, 1.25", "-7.00606, 32.5116, -13.7119, 1.55", "-7.14729, 32.916, -13.804, 1.55", "-7.65163, 34.1575, -14.0608, 0.74", "-8.44402, 35.659, -14.3667, 0.96", "-9.10024, 36.5693, -14.5874, 0.66", "-9.64486, 37.142, -14.7595, 0.66", "-10.5194, 37.8536, -15.0323, 0.81", "-11.2453, 38.3212, -15.2661, 0.96", "-12.2004, 38.8233, -15.5984, 1.47", "-13.0804, 39.2567, -15.9218, 1.62", "-13.9114, 39.7292, -16.236, 1.47", "-14.6849, 40.2592, -16.544, 1.11", "-15.5587, 40.9881, -16.9172, 0.81", "-16.5874, 42.0732, -17.4226, 0.66", "-17.1403, 42.8219, -17.7295, 0.81", "-17.8512, 44.0855, -18.1887, 1.03", "-18.1261, 44.7439, -18.4207, 1.25", "-18.3218, 45.3566, -18.6467, 1.25", "-18.6754, 46.679, -19.1827, 0.96", "-18.9389, 47.6998, -19.6556, 0.81", "-19.3064, 48.959, -20.3182, 0.59", "-19.6092, 49.834, -20.8103, 0.59", "-20.0259, 50.8707, -21.4002, 0.59", "-20.4836, 51.8884, -21.9592, 0.59", "-20.9271, 52.8413, -22.3929, 0.44", "-21.3473, 53.8362, -22.7254, 0.66", "-21.673, 54.8991, -22.9075, 0.74", "-21.7785, 55.5662, -22.9396, 0.96", "-21.7885, 56.3125, -22.9156, 0.96", "-21.6255, 57.9692, -22.8836, 0.52", "-21.4001, 59.3125, -22.9022, 0.59", "-21.1017, 60.836, -22.9828, 0.59", "-20.9479, 61.6873, -23.0665, 0.96", "-20.8298, 62.6695, -23.2124, 0.96", "-20.7927, 64.4135, -23.5805, 0.66", "-20.9802, 65.6123, -23.9596, 0.66", "-21.3935, 66.5834, -24.3541, 0.96", "-21.8714, 67.1722, -24.6161, 1.03", "-22.4816, 67.6477, -24.865, 1.03", "-23.2926, 68.0802, -25.1642, 1.03", "-24.3857, 68.4866, -25.5978, 0.74", "-25.2459, 68.7367, -26.0255, 0.74", "-25.8198, 68.8712, -26.3737, 0.52", "-27.0894, 69.1123, -27.3114, 0.52", "-28.1639, 69.2738, -28.2008, 0.52", "-29.2596, 69.4018, -29.1503, 1.11", "-29.8554, 69.4568, -29.6497, 1.4", "-30.532, 69.4999, -30.1576, 1.4", "-31.6884, 69.5302, -30.8787, 0.81", "-32.4015, 69.5453, -31.1703, 0.59", "-33.4752, 69.5977, -31.3996, 0.44", "-34.5539, 69.7001, -31.4619, 0.44", "-35.6478, 69.8717, -31.4298, 0.74", "-36.693, 70.1581, -31.348, 1.33", "-37.9643, 70.722, -31.2742, 0.88", "-38.5278, 71.0992, -31.353, 0.59", "-38.8768, 71.43, -31.4958, 0.59", "-39.368, 72.0153, -31.855, 0.74", "-39.9757, 72.8362, -32.4834, 0.96", "-40.7601, 73.9046, -33.4451, 0.59", "-41.5719, 74.9478, -34.5143, 0.59", "-41.9943, 75.4718, -35.048, 0.81", "-42.5278, 76.0712, -35.6331, 0.96", "-43.0391, 76.5575, -36.0711, 1.03", "-43.9051, 77.2969, -36.626, 0.66", "-44.1703, 77.5312, -36.7636, 0.66", "-44.8828, 78.2685, -37.1067, 0.81", "-45.5113, 79.0666, -37.4768, 0.81", "-45.9892, 79.8904, -37.8405, 0.66", "-46.3786, 80.7676, -38.2118, 0.66", "-46.8634, 82.1321, -38.7788, 0.52", "-47.1406, 82.9841, -39.1443, 0.81", "-47.3446, 83.6193, -39.4285, 0.74", "-47.8379, 84.9823, -40.0313, 0.59", "-48.1388, 85.6485, -40.3013, 0.74", "-48.5411, 86.3079, -40.5349, 0.96", "-49.1622, 87.0999, -40.7199, 0.96", "-49.7058, 87.7115, -40.8092, 0.74", "-50.4583, 88.506, -40.8707, 1.03", "-51.0014, 89.0624, -40.8222, 1.25", "-51.3824, 89.4837, -40.7442, 0.81", "-52.1907, 90.4783, -40.4936, 0.59", "-52.6833, 91.1532, -40.2862, 0.66", "-53.092, 91.765, -40.0784, 0.66", "-54.152, 93.4584, -39.46, 0.88", "-54.6895, 94.3258, -39.1185, 1.11", "-55.0589, 94.919, -38.8614, 1.03", "-55.5083, 95.6351, -38.5415, 1.25", "-55.6762, 95.9012, -38.4118, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.92519, -4.39834, 1.11", "4.87511, 10.6143, -4.83147, 1.11", "5.40999, 11.1645, -5.18839, 1.11", "6.26335, 12.0848, -5.75728, 1.11", "6.84867, 12.7477, -6.18555, 0.96", "7.81817, 13.732, -6.81839, 1.55", "8.66137, 14.5189, -7.32771, 1.62", "9.15794, 14.9323, -7.60579, 1.62", "9.92532, 15.5058, -7.94361, 1.25", "11.2119, 16.368, -8.33855, 0.96", "13.1773, 17.5527, -8.69693, 0.88", "14.0999, 18.0341, -8.75292, 1.55", "15.1072, 18.4874, -8.72861, 1.84", "16.6181, 19.0962, -8.61026, 1.11", "17.4112, 19.402, -8.50642, 1.03", "18.2987, 19.7793, -8.33357, 1.25", "19.1572, 20.2528, -8.15364, 0.88", "19.9489, 20.7945, -7.9884, 0.88", "20.6902, 21.3861, -7.83579, 0.88", "21.5607, 22.1223, -7.65062, 0.88", "22.305, 22.7926, -7.41088, 0.96", "23.0753, 23.5434, -7.12308, 0.96", "23.7781, 24.3035, -6.80969, 0.81", "24.8124, 25.4909, -6.25745, 1.11", "25.4906, 26.2433, -5.82818, 1.4", "26.2721, 26.9982, -5.24756, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.55044, 2.16166, 1.62", "4.75079, 9.13498, 2.95303, 1.62", "5.95377, 9.835, 4.03642, 1.25", "8.14227, 10.8121, 6.2336, 1.25", "9.29957, 11.2564, 7.47346, 1.25", "10.5071, 11.5718, 8.92185, 1.92", "11.0181, 11.6585, 9.57258, 2.5", "12.1293, 11.6879, 11.1107, 2.5", "14.4277, 11.4111, 14.5312, 1.77", "16.0219, 10.9252, 16.8984, 0.96", "18.2713, 10.0005, 20.2303, 0.88", "18.9143, 9.70085, 21.1979, 0.88", "19.4216, 9.47371, 21.9384, 1.4", "19.9231, 9.28708, 22.5855, 1.4", "21.7522, 8.88559, 24.4381, 0.66", "22.528, 8.93042, 25.057, 0.66", "24.3703, 9.64675, 26.1476, 0.88", "25.5279, 10.2826, 26.739, 0.88", "26.9817, 11.2319, 27.3148, 0.74", "28.0653, 12.0357, 27.6395, 1.4", "29.3126, 13.0402, 27.8666, 2.06", "30.5408, 13.9983, 27.9621, 1.84", "32.0136, 15.0942, 27.8782, 1.18", "33.5461, 16.1519, 27.8319, 1.18", "34.1683, 16.527, 27.9199, 1.03", "35.2085, 17.0305, 28.3518, 1.03", "35.8967, 17.3035, 29.0457, 0.59", "36.5357, 17.5925, 30.0693, 0.59", "37.7879, 18.2613, 32.6195, 0.88", "39.2444, 19.1679, 35.9741, 1.62", "39.8703, 19.6123, 37.4329, 1.62", "41.3267, 20.733, 40.8067, 0.88", "42.0051, 21.2535, 42.2769, 0.88", "42.6308, 21.7499, 43.4928, 1.47", "43.0705, 22.1034, 44.1901, 1.47", "44.2016, 22.9429, 45.5497, 0.81", "44.8325, 23.3282, 46.1584, 0.59", "45.5071, 23.6407, 46.69, 0.59", "47.1531, 24.3191, 48.0018, 1.25", "49.7415, 25.4219, 50.1602, 0.74", "50.5524, 25.8463, 50.9167, 0.29", "51.274, 26.2569, 51.6812, 0.29", "51.6872, 26.4926, 52.1799, 0.59", "52.7813, 27.1392, 53.5284, 1.11", "53.3342, 27.4258, 54.1899, 1.11", "54.5206, 28.4474, 55.6103, 1.11", "55.1909, 29.3769, 56.7395, 0.59", "55.2092, 26.7113, 56.9253, 0.59", "55.4388, 23.9627, 57.6166, 0.52", "55.5976, 22.0429, 58.0946, 0.59", "65.7977, 25.2299, 67.1866, 0.59", "76.4952, 29.6391, 75.0928, 0.59", "85.3361, 36.0208, 83.8328, 0.59", "94.0951, 43.6931, 91.4979, 0.59", "104.28, 51.9257, 96.2275, 0.59", "113.455, 60.5905, 102.078, 0.59", "123.137, 67.7289, 109.154, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.27869, 1.60166, 1.69", "-3.56761, 6.27869, 1.60166, 1.69", "-4.29904, 6.70815, 2.07815, 1.69", "-5.19782, 7.13768, 2.72057, 1.4", "-5.83548, 7.41558, 3.31251, 1.03", "-6.70945, 7.81793, 4.22011, 0.88", "-7.31233, 8.12113, 4.88784, 0.88", "-8.0733, 8.47904, 5.848, 0.59", "-8.76548, 8.79844, 6.8147, 0.44", "-10.0403, 9.3814, 8.72072, 0.37", "-10.4798, 9.585, 9.40318, 0.37", "-11.1958, 9.92561, 10.5433, 0.37", "-12.8864, 10.7767, 13.3707, 1.03", "-13.271, 10.9924, 14.0373, 1.62", "-23.3733, 12.1056, 21.9386, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.17031, -14.5883, 0.74", "-5.30514, -2.11125, -14.5787, 0.74", "-6.98416, -3.17433, -14.5697, 1.03", "-8.45272, -4.08588, -14.5921, 1.25", "-9.62704, -4.82563, -14.623, 1.62", "-10.5893, -5.4216, -14.6532, 1.84", "-11.8512, -6.15707, -14.6616, 1.84", "-12.9689, -6.73179, -14.6109, 1.99", "-14.1434, -7.25219, -14.499, 2.21", "-15.5156, -7.75695, -14.3005, 2.65", "-16.489, -8.05625, -14.1446, 2.5", "-18.1338, -8.49858, -13.8946, 1.77", "-19.8757, -8.94491, -13.6861, 1.33", "-21.0601, -9.25644, -13.63, 1.18", "-22.4643, -9.64021, -13.7193, 1.11", "-23.4622, -9.94758, -14.0013, 1.11", "-24.4903, -10.3088, -14.6293, 1.11", "-25.4724, -10.6828, -15.5928, 1.4", "-26.45, -11.0345, -16.8383, 1.03", "-27.2733, -11.297, -18.0451, 0.88", "-28.4985, -11.598, -20.0222, 0.88", "-29.8223, -11.8071, -22.3571, 1.47", "-30.8238, -11.9003, -24.2089, 1.77", "-31.9448, -11.9187, -26.3633, 1.84", "-32.3413, -11.8953, -27.1452, 2.06", "-33.0594, -11.8067, -28.5997, 1.77", "-34.1658, -11.5781, -30.7852, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.96006, 9.10166, 2.06", "-5.36761, -1.96006, 9.10166, 2.06", "-6.32124, -1.86714, 9.60607, 2.06", "-7.03819, -1.83037, 9.95639, 2.06", "-8.89851, -1.85797, 10.8215, 1.84", "-9.93419, -1.95113, 11.2891, 1.84", "-10.7265, -2.08055, 11.643, 1.99", "-12.1522, -2.42984, 12.2782, 1.55", "-13.3122, -2.84487, 12.7819, 1.03", "-14.2498, -3.28944, 13.1578, 0.88", "-15.1603, -3.84599, 13.4219, 1.18", "-15.8961, -4.35306, 13.5825, 1.18", "-16.4601, -4.77766, 13.6758, 1.47", "-17.2972, -5.47156, 13.7488, 1.25", "-18.1213, -6.18345, 13.8576, 1.03", "-18.8645, -6.81772, 14.024, 1.62", "-19.6089, -7.43857, 14.3005, 1.69", "-20.1829, -7.88874, 14.5959, 1.33", "-21.2081, -8.62903, 15.2935, 1.03", "-22.4708, -9.39248, 16.392, 0.88", "-23.3537, -9.79823, 17.3703, 1.11", "-24.1187, -10.0007, 18.3748, 1.33", "-24.5957, -10.0212, 19.0809, 1.33", "-25.066, -9.9021, 19.8102, 1.18", "-25.6256, -9.58798, 20.6532, 0.88", "-26.4214, -9.00481, 21.6818, 1.18", "-26.9178, -8.65353, 22.2403, 1.33", "-27.3552, -8.4235, 22.676, 1.33", "-28.1095, -8.20907, 23.3825, 0.59", "-29.144, -8.26252, 24.2617, 0.52", "-29.6689, -8.57363, 24.6455, 0.59", "-30.4007, -9.54281, 25.2232, 0.59", "-31.1055, -10.8756, 25.9258, 0.59", "-31.4709, -11.6702, 26.3363, 1.03", "-31.8892, -12.6624, 26.8958, 1.03", "-32.2351, -13.4877, 27.4079, 1.03", "-32.8871, -14.8666, 28.4527, 1.03", "-33.5052, -15.7762, 29.4418, 0.66", "-34.0258, -16.1959, 30.2027, 0.66", "-34.9434, -16.5434, 31.4084, 0.74", "-35.592, -16.6535, 32.2039, 0.81", "-36.1955, -16.6943, 32.9163, 0.52", "-37.289, -16.7098, 34.106, 0.52", "-37.7574, -16.743, 34.6206, 0.44", "-38.4393, -17.0353, 35.5273, 0.37", "-38.7672, -17.488, 36.0589, 0.37", "-39.0714, -18.1747, 36.6023, 1.11", "-39.3311, -18.8793, 37.027, 1.4", "-39.5811, -19.8072, 37.4847, 1.4", "-39.8884, -21.2158, 38.1156, 0.81", "-40.0954, -22.2766, 38.5381, 0.29", "-40.2799, -22.9781, 38.8292, 0.29", "-40.4979, -23.5413, 39.0779, 0.29", "-46.497, -27.4892, 45.7495, 0.29", "-53.7572, -31.5358, 50.9419, 0.29", "-60.3994, -35.5735, 56.9107, 0.29", "-66.5634, -38.361, 64.0331, 0.29", "-72.7421, -41.2722, 71.0903, 0.29", "-79.8509, -45.5953, 76.2575, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.61631, 6.85166, 1.77", "-2.19761, -5.61631, 6.85166, 1.77", "-2.17776, -6.83723, 7.00685, 1.77", "-2.14618, -8.93041, 7.26173, 1.47", "-2.12877, -11.037, 7.49236, 1.25", "-2.15851, -12.6462, 7.64819, 1.62", "-2.21792, -14.004, 7.76561, 1.92", "-2.29938, -15.1883, 7.86954, 2.14", "-2.44697, -16.6629, 7.99643, 2.14", "-2.75125, -18.7097, 8.17268, 1.55", "-3.13855, -20.6348, 8.3269, 1.33", "-3.48931, -22.0934, 8.45676, 1.55", "-3.74981, -23.0146, 8.54187, 1.92", "-4.11997, -24.132, 8.68439, 2.21", "-4.39721, -24.8684, 8.79995, 2.5", "-4.72138, -25.7376, 8.96585, 2.5", "-5.01936, -26.6962, 9.16398, 2.36", "-5.33994, -28.0116, 9.44346, 1.69", "-5.64808, -29.7362, 9.79541, 1.25", "-5.80481, -31.3477, 10.1127, 1.4", "-5.81144, -32.7778, 10.36, 1.62", "-5.6503, -34.5232, 10.6216, 2.06", "-5.45412, -35.5989, 10.7705, 2.36", "-5.25568, -36.2963, 10.8544, 2.36", "-4.7661, -37.6255, 10.9892, 2.14", "-3.9689, -39.4906, 11.1627, 1.62", "-3.26542, -41.0616, 11.2914, 1.25", "-2.54386, -42.6824, 11.4412, 1.03", "-1.77367, -44.5046, 11.6465, 1.03", "-1.19996, -46.0306, 11.8568, 1.03", "-0.57536, -48.0059, 12.1999, 1.03", "-0.303001, -49.1823, 12.4498, 0.96", "-0.22038, -50.1116, 12.6791, 0.96", "-0.332512, -50.9401, 12.9082, 0.96", "-0.848134, -52.0312, 13.2896, 0.96", "-1.35242, -52.6241, 13.5294, 0.88", "-1.88143, -53.0624, 13.7173, 1.18", "-2.73544, -53.6708, 13.9569, 1.18", "-3.56271, -54.2268, 14.1692, 1.33", "-4.51522, -54.8574, 14.434, 1.33", "-5.33417, -55.4073, 14.6905, 1.4", "-6.21208, -56.0344, 15.0076, 1.55", "-7.05301, -56.6985, 15.3809, 1.55", "-8.00483, -57.6058, 15.9169, 1.84", "-8.58124, -58.2684, 16.2971, 2.14", "-9.14579, -59.0672, 16.705, 1.99", "-9.93319, -60.51, 17.3571, 0.88", "-10.4708, -61.8423, 17.8698, 0.88", "-10.9241, -63.4162, 18.3812, 0.81", "-11.1779, -64.8076, 18.7283, 0.74", "-11.4134, -66.5644, 19.1095, 0.74", "-11.5288, -68.2057, 19.4134, 1.03", "-11.5243, -69.6803, 19.6086, 1.4", "-11.4728, -70.5978, 19.6802, 1.69", "-11.3664, -71.6264, 19.7085, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.75031, -2.20834, 3.39", "1.44239, -9.75031, -2.20834, 3.39", "1.8589, -11.0232, -2.326, 3.39", "2.19521, -12.0501, -2.46992, 3.02", "2.53574, -13.0898, -2.61564, 3.02", "2.98352, -14.457, -2.80726, 3.02", "3.46451, -15.9257, -3.0131, 3.24", "3.82724, -17.0086, -3.18109, 3.54", "4.23906, -18.1755, -3.40448, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-55.6762, 95.9012, -38.4118, 0.44", "-57.044, 97.3039, -39.4725, 0.44", "-57.669, 97.9899, -39.9309, 0.37", "-57.9668, 98.3713, -40.0916, 0.66", "-58.4443, 99.0656, -40.29, 0.66", "-58.9182, 99.8523, -40.44, 0.59", "-59.2206, 100.447, -40.515, 0.81", "-59.4944, 101.191, -40.4852, 0.81", "-59.8463, 102.921, -40.316, 0.52", "-59.8645, 103.748, -40.2091, 0.52", "-59.6537, 105.038, -40.0408, 0.44", "-59.2256, 106.277, -39.9133, 0.44", "-58.5892, 107.485, -39.8368, 0.74", "-57.9985, 108.336, -39.8068, 0.74", "-56.9885, 109.524, -39.8282, 0.44", "-56.2184, 110.353, -39.823, 0.59", "-55.4405, 111.167, -39.8247, 0.59", "-54.657, 112.013, -39.8549, 0.59", "-54.0423, 112.756, -39.9199, 0.37", "-53.5932, 113.347, -39.9937, 0.37", "-52.9141, 114.281, -40.1317, 0.59", "-52.2395, 115.178, -40.2816, 0.37", "-51.6275, 115.955, -40.4175, 0.81", "-50.9832, 116.743, -40.568, 0.81", "-49.7983, 118.195, -40.8825, 0.44", "-48.8862, 119.338, -41.1444, 0.44", "-48.2372, 120.135, -41.3622, 0.81", "-47.5773, 120.95, -41.5968, 0.44", "-47.2173, 121.418, -41.7466, 0.59", "-46.3501, 122.613, -42.1874, 0.59", "-45.8156, 123.473, -42.6137, 0.44", "-45.2396, 124.666, -43.2993, 0.44", "-44.8494, 125.69, -44.0302, 0.96", "-44.7039, 126.174, -44.4493, 1.18", "-44.609, 126.62, -44.8993, 1.18", "-44.4543, 127.827, -46.5958, 0.44", "-44.4379, 128.689, -47.9993, 0.37", "-44.4246, 129.4, -49.4792, 0.66", "-44.4214, 129.698, -50.1805, 0.66", "-44.4233, 130.146, -51.3077, 0.66", "-44.3332, 131.823, -55.8005, 0.44", "-44.3031, 132.104, -56.6015, 0.44", "-44.0912, 133.569, -60.8574, 0.29", "-44.0467, 133.906, -61.7571, 0.29", "-43.991, 134.325, -62.775, 0.29", "-43.8688, 135.329, -64.9127, 0.74", "-43.7416, 136.701, -67.2941, 0.44", "-43.7111, 137.054, -67.8031, 0.44", "-43.691, 137.916, -68.7153, 0.37", "-43.6949, 138.81, -69.5098, 0.88", "-43.7938, 140.283, -70.4872, 0.29", "-43.8971, 140.874, -70.7675, 0.52", "-44.1791, 141.938, -71.1842, 0.15", "-44.4744, 142.872, -71.5866, 0.22", "-44.98, 144.329, -72.2334, 0.22", "-45.4903, 145.589, -72.7795, 0.22", "-45.9864, 146.768, -73.2583, 0.22", "-46.747, 148.497, -74.0302, 1.47", "-47.3133, 149.769, -74.666, 0.66", "-47.6563, 150.588, -75.0895, 0.96", "-48.174, 151.951, -75.7723, 0.22", "-48.511, 152.868, -76.1643, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-55.6762, 95.9012, -38.4118, 0.37", "-55.4994, 98.0239, -37.9903, 0.37", "-55.3029, 99.0765, -37.8822, 0.37", "-55.14, 100.074, -37.6813, 0.37", "-55.0091, 101.565, -37.2539, 0.74", "-55.0177, 102.826, -36.8359, 0.29", "-55.1913, 104.309, -36.3095, 0.29", "-55.3036, 105.006, -36.0503, 0.52", "-55.6776, 106.537, -35.2278, 0.44", "-55.9689, 107.51, -34.5956, 0.29", "-56.2246, 108.359, -34.0054, 0.29", "-56.4778, 109.302, -33.3123, 0.29", "-56.7895, 110.894, -32.1836, 0.44", "-56.9597, 112.187, -31.2939, 0.44", "-57.003, 113.831, -30.2802, 0.52", "-56.8833, 115.141, -29.4998, 0.37", "-56.6692, 116.187, -28.8869, 0.37", "-56.3115, 117.314, -28.2753, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "26.2721, 26.9982, -5.24756, 0.29", "27.5629, 26.5373, -3.49397, 0.29", "28.7709, 26.1676, -2.06117, 0.59", "29.9527, 25.8097, -0.831879, 0.74", "30.5998, 25.6225, -0.211883, 0.37", "31.5957, 25.3613, 0.810014, 0.37", "32.1489, 25.2291, 1.4216, 0.66", "32.5617, 25.1769, 1.90545, 0.96", "33.1564, 25.1522, 2.83614, 1.25", "34.0539, 25.2123, 4.61569, 0.37", "34.8661, 25.4022, 6.4931, 0.37", "35.1329, 25.5013, 7.15246, 0.37", "35.7156, 25.744, 8.49336, 0.74", "36.7602, 26.153, 10.5256, 0.66", "37.6246, 26.4635, 11.8914, 0.52", "38.3092, 26.6376, 12.6566, 0.66", "39.1581, 26.7601, 13.2966, 0.66", "40.3197, 26.8529, 13.9464, 0.37", "41.6677, 26.87, 14.4903, 0.52", "42.4188, 26.8293, 14.7233, 0.52", "43.7298, 26.7133, 15.0941, 0.66", "44.4659, 26.6246, 15.2902, 0.88", "45.4461, 26.5108, 15.5285, 0.88", "46.5845, 26.4159, 15.857, 0.66", "48.0101, 26.3702, 16.2966, 0.29", "49.2586, 26.4026, 16.6758, 0.29", "51.1492, 26.6142, 17.2318, 0.88", "51.6727, 26.6956, 17.384, 0.88", "53.7694, 27.098, 17.9647, 0.29", "55.386, 27.4711, 18.3713, 0.29", "56.9309, 27.8818, 18.7195, 0.96", "58.7678, 28.4165, 19.102, 0.29", "60.1035, 28.8148, 19.3745, 0.29", "61.3393, 29.1605, 19.5976, 0.81", "62.3098, 29.413, 19.7166, 0.81", "63.1705, 29.6235, 19.8154, 0.81", "64.4745, 29.9137, 19.9571, 0.59", "65.9917, 30.1925, 20.1227, 0.29", "67.3309, 30.4842, 20.2879, 0.81", "68.6535, 30.7758, 20.463, 0.22", "69.8272, 31.0128, 20.6159, 0.22", "70.571, 31.1342, 20.6973, 0.52", "71.5955, 31.2608, 20.7457, 0.22", "82.2537, 32.7665, 26.9443, 0.22", "92.1869, 34.571, 34.1753, 0.22", "103.473, 34.3419, 39.3784, 0.22", "114.658, 31.9812, 44.237, 0.22", "125.83, 31.1172, 49.6134, 0.22", "135.179, 28.6683, 57.4172, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "26.2721, 26.9982, -5.24756, 0.81", "27.6216, 27.0648, -4.89792, 0.81", "28.2577, 27.0303, -4.77282, 1.03", "29.9354, 26.877, -4.60631, 0.96", "30.8513, 26.8051, -4.5638, 0.96", "31.9176, 26.7705, -4.5459, 0.59", "32.6588, 26.7864, -4.54827, 0.66", "33.6507, 26.8166, -4.58357, 0.66", "34.8291, 26.9556, -4.69112, 0.59", "35.4428, 27.1332, -4.81258, 0.81", "36.2189, 27.4973, -4.98072, 0.96", "36.9338, 27.9237, -5.13568, 1.25", "37.4514, 28.2449, -5.23997, 1.4", "38.1044, 28.6328, -5.34256, 1.4", "39.1749, 29.1616, -5.45572, 0.59", "39.6107, 29.3013, -5.49562, 0.59", "40.518, 29.4165, -5.56722, 0.59", "41.5098, 29.3938, -5.63282, 1.03", "42.215, 29.3048, -5.67022, 1.18", "42.831, 29.1754, -5.67041, 1.18", "43.8299, 28.9034, -5.61591, 0.74", "44.7954, 28.615, -5.50095, 0.66", "45.2558, 28.4786, -5.42652, 0.96", "45.8572, 28.326, -5.32363, 0.96", "46.9362, 28.1039, -5.14542, 1.03", "47.4459, 28.0313, -5.06117, 1.03", "48.8635, 27.985, -4.84258, 0.59", "49.6318, 28.044, -4.74076, 0.59", "50.9998, 28.2523, -4.60147, 0.59", "51.6675, 28.4016, -4.55839, 0.81", "52.2893, 28.5978, -4.55, 0.81", "53.5511, 29.0985, -4.59892, 0.37", "54.3415, 29.4422, -4.67746, 0.66", "55.0421, 29.7221, -4.7549, 0.74", "55.4806, 29.8707, -4.81451, 0.74", "56.3353, 30.073, -4.95356, 0.74", "57.2489, 30.1679, -5.12344, 0.52", "58.5166, 30.1358, -5.38147, 0.74", "59.4723, 30.0513, -5.55803, 0.88", "59.9983, 29.9945, -5.62631, 0.96", "60.5237, 29.9419, -5.66066, 1.18", "61.3279, 29.8839, -5.65412, 1.18", "61.9447, 29.8888, -5.58724, 0.66", "63.0511, 30.0688, -5.33407, 0.59", "63.79, 30.2861, -5.0333, 0.59", "64.2851, 30.474, -4.7714, 0.74", "64.6759, 30.6532, -4.52389, 0.74", "65.0643, 30.8509, -4.24476, 0.74", "65.8107, 31.2519, -3.64778, 0.59", "66.8074, 31.81, -2.76963, 0.96", "67.2826, 32.0683, -2.34681, 1.25", "67.5421, 32.2004, -2.10032, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "123.137, 67.7289, 109.154, 0.29", "129.09, 71.3726, 115.473, 0.29", "136.016, 74.604, 120.969, 0.29", "143.407, 78.247, 125.489, 0.29", "149.619, 82.0371, 131.456, 0.29", "155.71, 86.7912, 136.784, 0.29", "160.594, 92.4986, 142.389, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "123.137, 67.7289, 109.154, 0.29", "129.963, 70.956, 114.682, 0.29", "135.472, 75.6634, 120.548, 0.29", "139.823, 80.777, 126.992, 0.29", "145.03, 84.4264, 133.84, 0.29", "149.865, 88.5456, 140.679, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-34.1658, -11.5781, -30.7852, 0.74", "-35.848, -12.9903, -31.2927, 0.74", "-36.7706, -13.5746, -31.5054, 0.74", "-37.5635, -13.9651, -31.6828, 0.74", "-38.8479, -14.3399, -32.089, 0.66", "-39.8002, -14.471, -32.4661, 0.66", "-40.8194, -14.5306, -32.9138, 0.59", "-41.5371, -14.4438, -33.2141, 1.25", "-42.1272, -14.3187, -33.489, 1.25", "-43.9331, -13.8987, -34.4104, 0.66", "-44.8287, -13.7189, -34.8968, 0.66", "-45.3052, -13.6881, -35.1785, 0.96", "-45.9974, -13.7824, -35.6116, 0.96", "-46.4712, -13.9625, -36.0421, 0.96", "-47.1771, -14.4841, -37.139, 0.74", "-47.5428, -14.9069, -37.9979, 0.52", "-47.9042, -15.4227, -39.077, 0.81", "-48.1349, -15.7979, -39.8777, 1.03", "-48.9691, -17.2906, -43.1543, 1.25", "-49.5344, -18.3365, -45.5311, 0.66", "-49.817, -18.8348, -46.7046, 0.66", "-49.9995, -19.088, -47.3178, 1.11", "-50.1707, -19.2458, -47.6824, 1.33", "-50.4283, -19.4215, -47.9898, 1.18", "-50.848, -19.6717, -48.1653, 1.18", "-51.8129, -20.2409, -48.4218, 0.59", "-52.7999, -20.8939, -48.7267, 0.52", "-53.5708, -21.4806, -49.0464, 0.52", "-54.2018, -22.0413, -49.4439, 0.81", "-54.8106, -22.6823, -50.0131, 0.66", "-55.3764, -23.3407, -50.6738, 0.66", "-55.7814, -23.8549, -51.2496, 1.33", "-56.0517, -24.2146, -51.6671, 1.33", "-56.8949, -25.3407, -52.9924, 0.66", "-57.64, -26.3022, -54.1183, 0.52", "-57.996, -26.7235, -54.6202, 0.52", "-58.465, -27.2074, -55.1261, 0.96", "-58.8045, -27.5253, -55.391, 1.18", "-59.0499, -27.7492, -55.5073, 1.18", "-59.5599, -28.2478, -55.5967, 0.81", "-60.2511, -28.995, -55.5917, 0.74", "-61.0983, -30.0141, -55.4956, 0.59", "-61.5228, -30.5243, -55.4083, 0.74", "-62.0918, -31.1812, -55.2521, 0.74", "-62.7097, -31.826, -55.0646, 0.59", "-63.2963, -32.4037, -54.8724, 0.44", "-63.9544, -33.0449, -54.6471, 0.44", "-64.5901, -33.6536, -54.4621, 0.44", "-65.2556, -34.3485, -54.2798, 0.44", "-66.3379, -35.605, -54.0055, 0.44", "-66.6015, -35.976, -53.9397, 0.96", "-67.0631, -36.8606, -53.8607, 1.18", "-67.3351, -37.6427, -53.8511, 0.81", "-67.6001, -38.9223, -53.9654, 0.59", "-67.6777, -39.476, -54.0791, 0.74", "-67.7952, -40.3655, -54.3253, 0.66", "-67.9794, -41.2352, -54.6041, 0.66", "-68.1784, -41.8775, -54.8341, 0.81", "-68.6482, -43.0581, -55.2564, 0.59", "-69.1233, -44.0946, -55.609, 0.52", "-69.5649, -45.1013, -55.9215, 0.81", "-69.9436, -46.0814, -56.1831, 1.4", "-70.1015, -46.6655, -56.2702, 1.69", "-70.2778, -47.8106, -56.3088, 0.52", "-70.3819, -48.7567, -56.3457, 0.44", "-70.4579, -49.7113, -56.5145, 0.44", "-70.5227, -50.3806, -56.7766, 0.29", "-70.7335, -51.6236, -57.4615, 1.4", "-70.7963, -51.8716, -57.6192, 1.4", "-71.567, -54.0605, -59.3209, 0.52", "-72.0942, -55.2676, -60.357, 0.52", "-72.4029, -55.8919, -60.9148, 0.52", "-72.8722, -56.822, -61.7433, 0.74", "-73.1795, -57.4461, -62.2798, 0.88", "-73.8088, -58.8716, -63.328, 0.44", "-74.085, -59.5913, -63.7305, 0.59", "-74.4126, -60.3986, -64.1437, 0.59", "-74.7975, -61.2181, -64.5942, 0.37", "-75.0442, -61.7124, -64.882, 0.59", "-75.5167, -62.5934, -65.3849, 0.81", "-75.9866, -63.399, -65.7728, 1.18", "-76.2974, -63.8944, -66.0168, 1.18", "-77.1742, -65.126, -66.7012, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-34.1658, -11.5781, -30.7852, 0.81", "-35.126, -9.993, -30.3063, 0.81", "-35.5516, -9.4498, -30.07, 0.81", "-36.1799, -8.85096, -29.7299, 0.81", "-36.8276, -8.44454, -29.4285, 0.88", "-37.5797, -8.20199, -29.1786, 0.66", "-38.9483, -7.9716, -28.8517, 0.59", "-39.8756, -8.08498, -28.7525, 0.59", "-40.7054, -8.28718, -28.8507, 0.59", "-41.8043, -8.6453, -29.2032, 0.74", "-42.9911, -9.07077, -29.8395, 1.03", "-43.409, -9.22005, -30.1118, 1.62", "-43.9817, -9.40558, -30.5255, 1.92", "-45.8021, -9.94096, -31.792, 0.88", "-46.5041, -10.1279, -32.2625, 0.66", "-47.5322, -10.4025, -32.9179, 0.66", "-48.9146, -10.7796, -33.7503, 0.66", "-49.5295, -10.9372, -34.0982, 0.66", "-50.8731, -11.2243, -34.7578, 0.66", "-51.7337, -11.3612, -35.116, 0.44", "-52.8332, -11.4606, -35.5797, 0.44", "-53.6492, -11.4763, -35.9471, 0.44", "-54.6275, -11.4176, -36.4654, 0.66", "-55.317, -11.3455, -36.8552, 0.66", "-56.1405, -11.2112, -37.3105, 0.66", "-56.8526, -11.0723, -37.6464, 0.66", "-57.6696, -10.866, -37.959, 0.44", "-58.2414, -10.6969, -38.1541, 0.74", "-59.0942, -10.429, -38.4186, 0.74", "-59.8543, -10.184, -38.6476, 0.74", "-60.5002, -9.9792, -38.8286, 0.74", "-61.2371, -9.75464, -39.023, 0.37", "-62.3155, -9.52788, -39.3725, 0.37", "-62.7683, -9.51421, -39.5735, 0.37", "-63.2335, -9.59395, -39.8615, 0.88", "-63.8423, -9.77567, -40.292, 1.18", "-64.3368, -9.94491, -40.6923, 1.33", "-65.5965, -10.399, -41.8082, 0.44", "-66.5102, -10.6801, -42.6676, 0.44", "-67.2575, -10.8108, -43.4251, 0.44", "-67.9527, -10.8013, -44.1371, 0.88", "-68.7257, -10.6121, -44.8822, 1.03", "-69.0537, -10.4488, -45.1509, 1.03", "-69.9272, -9.8198, -45.6378, 0.44", "-70.4565, -9.40943, -45.8749, 0.44", "-71.0695, -8.98983, -46.0745, 0.44", "-71.5618, -8.73066, -46.2305, 0.59", "-72.354, -8.44869, -46.4598, 0.59", "-73.1415, -8.29947, -46.7144, 0.74", "-74.5427, -8.2855, -47.214, 0.37", "-75.4031, -8.39783, -47.5818, 0.37", "-76.6499, -8.7231, -48.2064, 0.59", "-77.1293, -8.90415, -48.4865, 0.88", "-78.036, -9.35399, -49.1197, 0.66", "-78.639, -9.70171, -49.5837, 0.74", "-79.2736, -10.1129, -50.087, 0.59", "-79.8174, -10.4804, -50.5525, 0.52", "-80.3271, -10.8209, -50.9874, 0.88", "-81.2804, -11.3687, -51.7908, 0.59", "-81.8481, -11.6286, -52.2513, 0.44", "-82.4907, -11.8525, -52.755, 1.03", "-82.9483, -11.9687, -53.0922, 1.33", "-83.2362, -12.0189, -53.2842, 1.4", "-84.4612, -12.1847, -54.0071, 0.44", "-84.9579, -12.2478, -54.2789, 0.44", "-85.6935, -12.3333, -54.6497, 0.44", "-86.4712, -12.4107, -55.0024, 0.44", "-87.7337, -12.5286, -55.5662, 0.59", "-88.6098, -12.593, -56.0182, 0.88", "-89.4216, -12.5958, -56.54, 1.11", "-90.4775, -12.5382, -57.3125, 0.52", "-91.2426, -12.4424, -57.9146, 0.52", "-91.8848, -12.3294, -58.4405, 1.03", "-93.3196, -12.0335, -59.6866, 1.25", "-95.0095, -11.7376, -61.1737, 0.52", "-95.5862, -11.6591, -61.6782, 0.59", "-96.3524, -11.5925, -62.3241, 0.59", "-97.5562, -11.5265, -63.2191, 0.44", "-98.3799, -11.5052, -63.7156, 0.44", "-99.5931, -11.4647, -64.2888, 0.44", "-100.245, -11.4149, -64.5712, 0.44", "-101.156, -11.2221, -65.0646, 0.66", "-101.817, -10.9694, -65.5028, 0.88", "-102.175, -10.7629, -65.7638, 0.88", "-103.223, -9.9903, -66.5486, 0.52", "-103.872, -9.41289, -67.0482, 0.52", "-104.791, -8.47156, -67.8411, 0.81", "-105.436, -7.72159, -68.4377, 0.44", "-105.806, -7.24968, -68.8061, 0.44", "-106.226, -6.62724, -69.259, 0.74", "-106.486, -6.15603, -69.5524, 0.96", "-107.0, -4.94385, -70.1374, 0.66", "-107.288, -4.18371, -70.4789, 0.44", "-107.619, -3.35066, -70.8892, 0.44", "-108.005, -2.56018, -71.3545, 0.44", "-108.187, -2.29343, -71.5472, 0.44", "-108.76, -1.77526, -72.0137, 0.96", "-109.986, -1.31261, -72.7209, 0.66", "-110.781, -1.16626, -73.1239, 0.96", "-111.159, -1.12793, -73.2815, 1.25", "-111.602, -1.09917, -73.4462, 1.25", "-112.307, -1.03958, -73.6904, 1.25", "-113.539, -0.830906, -74.089, 0.37", "-114.296, -0.571311, -74.2724, 0.37", "-114.807, -0.319215, -74.4089, 0.66", "-115.201, -0.107905, -74.5051, 0.81", "-115.815, 0.221471, -74.623, 0.81", "-116.76, 0.711381, -74.7193, 0.44", "-117.401, 0.996923, -74.7139, 0.44", "-118.557, 1.40369, -74.6339, 0.44", "-119.828, 1.79732, -74.4862, 0.44", "-120.791, 2.08161, -74.3313, 0.66", "-121.79, 2.36229, -74.1268, 0.96", "-122.793, 2.62377, -73.8597, 0.59", "-123.645, 2.85552, -73.6, 0.44", "-124.525, 3.10316, -73.3222, 0.44", "-125.384, 3.35221, -73.1003, 0.44", "-126.133, 3.53929, -72.9998, 0.44", "-126.999, 3.68497, -73.0244, 0.74", "-127.428, 3.72505, -73.098, 0.74", "-128.647, 3.74755, -73.3974, 0.52", "-129.202, 3.73706, -73.5678, 0.59", "-130.232, 3.70802, -73.9241, 0.44", "-131.007, 3.71754, -74.1973, 0.44", "-131.991, 3.82096, -74.5637, 0.37", "-132.987, 4.00822, -74.9089, 0.52", "-133.785, 4.23027, -75.1689, 1.11", "-134.415, 4.45612, -75.3967, 1.25", "-135.169, 4.77584, -75.7197, 0.37", "-136.254, 5.26924, -76.2797, 0.37", "-136.991, 5.59303, -76.7248, 0.29", "-137.576, 5.84091, -77.1385, 0.29", "-138.63, 6.28552, -77.9428, 0.59", "-139.467, 6.66101, -78.6065, 0.59", "-139.943, 6.88706, -78.982, 0.29", "-140.32, 7.07967, -79.2419, 0.37", "-140.923, 7.42927, -79.602, 0.37", "-141.749, 7.93186, -79.9672, 0.44", "-142.441, 8.35609, -80.1481, 0.44", "-143.095, 8.74584, -80.2449, 0.44", "-143.877, 9.16659, -80.3401, 0.37", "-144.191, 9.30761, -80.3734, 0.37", "-144.981, 9.57356, -80.4364, 0.88", "-145.433, 9.68531, -80.4686, 1.11", "-146.241, 9.85654, -80.5266, 1.11", "-147.515, 10.1477, -80.6027, 0.37", "-148.508, 10.4151, -80.6432, 0.37", "-149.083, 10.6135, -80.647, 0.66", "-149.963, 11.0542, -80.6482, 0.66", "-150.672, 11.5311, -80.6506, 0.37", "-151.285, 12.0682, -80.6604, 0.52", "-151.516, 12.3145, -80.6674, 0.66", "-151.86, 12.7223, -80.6756, 0.66", "-152.798, 13.8492, -80.684, 0.37", "-153.232, 14.3249, -80.659, 0.37", "-153.69, 14.6896, -80.5764, 0.37", "-154.156, 14.9382, -80.4407, 0.88", "-154.892, 15.2087, -80.1798, 0.81", "-155.25, 15.3002, -80.0412, 0.81", "-156.143, 15.4706, -79.6702, 0.29", "-157.311, 15.6714, -79.1792, 0.29", "-158.037, 15.8184, -78.8128, 0.52", "-158.918, 16.043, -78.3402, 0.44", "-159.35, 16.1682, -78.105, 0.44", "-159.92, 16.3539, -77.7673, 0.81", "-160.594, 16.6261, -77.333, 0.81", "-161.864, 17.2726, -76.4337, 0.29", "-162.374, 17.5591, -76.0554, 0.44", "-162.852, 17.8323, -75.6696, 0.29", "-163.381, 18.1166, -75.2557, 0.29", "-164.08, 18.4625, -74.7545, 0.29", "-164.619, 18.7104, -74.4142, 0.29", "-165.259, 18.9737, -74.0629, 0.59", "-166.488, 19.454, -73.3765, 0.22", "-167.278, 19.7548, -72.9383, 0.22", "-167.697, 19.8903, -72.7087, 0.52", "-168.081, 19.9784, -72.4948, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-79.8509, -45.5953, 76.2575, 0.29", "-86.4599, -49.8922, 82.5515, 0.29", "-91.6866, -55.7519, 88.8181, 0.29", "-96.5755, -61.5308, 95.4264, 0.29", "-100.945, -67.8995, 101.824, 0.29", "-103.906, -74.7963, 108.449, 0.29", "-107.708, -81.565, 114.777, 0.29", "-111.539, -88.3478, 121.071, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-79.8509, -45.5953, 76.2575, 0.29", "-85.9229, -48.8398, 81.5618, 0.29", "-92.1365, -52.9661, 85.9777, 0.29", "-97.7774, -57.6815, 90.5442, 0.29", "-102.647, -62.8238, 95.5056, 0.29", "-107.193, -68.4997, 100.154, 0.29", "-111.03, -75.0839, 104.136, 0.29", "-115.364, -80.9219, 108.777, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.3664, -71.6264, 19.7085, 0.66", "-12.2748, -73.7451, 18.9143, 0.66", "-12.5056, -74.3084, 18.7244, 1.03", "-12.7305, -74.9002, 18.5995, 1.03", "-13.1332, -76.0351, 18.4698, 1.03", "-13.4012, -76.8983, 18.4324, 1.03", "-13.6816, -77.9569, 18.4477, 0.81", "-13.8518, -78.912, 18.6254, 0.81", "-13.9507, -80.323, 18.9893, 1.4", "-13.9393, -80.9313, 19.1833, 1.62", "-13.8427, -81.8445, 19.5488, 1.4", "-13.7324, -82.449, 19.8059, 1.92", "-13.5259, -83.2722, 20.1592, 1.4", "-13.14, -84.5215, 20.6946, 1.69", "-12.8582, -85.3564, 21.0074, 1.11", "-12.484, -86.476, 21.3979, 0.81", "-12.3204, -87.0043, 21.5677, 1.11", "-12.15, -87.6342, 21.7493, 1.25", "-11.8455, -89.0347, 22.1158, 0.96", "-11.755, -89.742, 22.2759, 0.74", "-11.7399, -90.4169, 22.4056, 0.81", "-11.8784, -91.4374, 22.5475, 0.52", "-12.0812, -92.1644, 22.611, 0.88", "-12.3322, -92.7754, 22.6047, 0.88", "-12.6814, -93.4436, 22.4976, 0.88", "-13.0091, -94.0357, 22.3464, 0.66", "-13.3371, -94.6711, 22.1032, 0.66", "-13.7273, -95.5685, 21.6002, 0.88", "-13.9386, -96.1685, 21.186, 1.33", "-14.0654, -96.6301, 20.8452, 1.47", "-14.1664, -97.0655, 20.5227, 1.62", "-14.3661, -97.9548, 19.9076, 0.74", "-14.5963, -98.9666, 19.3384, 0.74", "-14.8094, -99.7552, 19.0293, 0.74", "-14.9973, -100.384, 18.9003, 0.74", "-15.2549, -101.254, 18.8571, 0.66", "-15.4829, -102.162, 18.9428, 0.66", "-15.725, -103.481, 19.2407, 0.96", "-15.7885, -104.164, 19.4507, 0.88", "-15.7821, -104.779, 19.65, 0.88", "-15.658, -105.931, 20.0004, 0.52", "-15.4527, -106.995, 20.2976, 1.18", "-15.3382, -107.516, 20.4068, 1.62", "-15.222, -108.102, 20.4821, 1.62", "-15.0906, -108.928, 20.5682, 0.96", "-15.0223, -109.567, 20.6274, 0.96", "-14.9903, -110.531, 20.708, 0.66", "-15.0814, -111.793, 20.7942, 0.52", "-15.2503, -112.923, 20.9002, 0.59", "-15.5514, -114.22, 21.0565, 0.74", "-15.6582, -114.557, 21.1099, 1.11", "-15.926, -115.198, 21.2638, 1.25", "-16.4766, -116.223, 21.598, 0.88", "-16.8292, -116.731, 21.8308, 0.66", "-17.2069, -117.178, 22.081, 0.66", "-17.581, -117.572, 22.3132, 0.59", "-18.3289, -118.367, 22.7397, 0.59", "-18.7521, -118.824, 22.9481, 0.44", "-19.2655, -119.417, 23.1456, 0.44", "-19.6981, -119.969, 23.2514, 0.74", "-20.0525, -120.483, 23.3019, 0.74", "-20.362, -120.973, 23.3126, 0.66", "-20.7694, -121.69, 23.2668, 1.03", "-21.0763, -122.262, 23.2315, 1.4", "-21.4062, -122.904, 23.1962, 1.4", "-21.6952, -123.461, 23.1713, 1.47", "-22.1522, -124.343, 23.1483, 0.74", "-22.5073, -125.03, 23.1235, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-11.3664, -71.6264, 19.7085, 0.44", "-10.6004, -72.3033, 20.1305, 0.44", "-10.1529, -72.8729, 20.4363, 0.44", "-9.84766, -73.5905, 20.7525, 0.37", "-9.54166, -74.9677, 21.2322, 0.59", "-9.50662, -75.4984, 21.3819, 0.52", "-9.53619, -76.175, 21.5528, 0.44", "-9.77275, -77.2523, 21.8551, 0.44", "-10.0969, -78.1516, 22.1608, 0.44", "-10.3645, -78.6934, 22.401, 0.59", "-10.7532, -79.3116, 22.804, 0.59", "-11.1271, -79.8396, 23.4022, 0.37", "-11.5707, -80.4345, 24.4002, 0.59", "-11.918, -80.9045, 25.4125, 0.88", "-12.128, -81.1703, 26.0788, 0.81", "-12.5544, -81.6785, 27.4257, 1.03", "-12.9932, -82.1856, 28.7591, 0.88", "-13.4204, -82.666, 29.8769, 0.44", "-13.8064, -83.1255, 30.686, 0.44", "-14.0811, -83.4829, 31.1461, 0.66", "-14.5013, -84.0042, 31.6508, 0.66", "-14.9251, -84.4598, 31.959, 0.66", "-15.589, -85.0923, 32.2567, 0.66", "-16.1778, -85.6321, 32.4716, 1.33", "-16.4462, -85.8866, 32.5486, 1.47", "-16.9705, -86.3904, 32.6897, 1.03", "-17.6273, -87.0397, 32.8713, 0.81", "-18.1787, -87.5888, 33.0374, 0.74", "-18.8304, -88.2488, 33.2587, 0.52", "-19.2864, -88.7391, 33.4309, 0.44", "-21.5338, -94.9832, 38.5136, 0.44", "-22.8943, -101.793, 43.1288, 0.44", "-25.0365, -108.495, 47.6069, 0.44", "-29.0191, -114.564, 51.7535, 0.44", "-32.5813, -119.744, 57.3162, 0.44", "-35.2361, -125.07, 63.232, 0.44", "-38.182, -130.562, 68.8423, 0.44", "-42.8267, -135.47, 73.8322, 0.44", "-49.067, -139.52, 77.7768, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.23906, -18.1755, -3.40448, 1.47", "3.75119, -19.5356, -3.76259, 1.47", "3.25044, -21.2867, -4.08377, 1.33", "2.92216, -22.6826, -4.23538, 1.55", "2.70664, -23.8154, -4.26403, 1.55", "2.5229, -24.9901, -4.15033, 1.77", "2.30958, -26.494, -3.84592, 1.77", "2.21178, -27.4214, -3.52824, 2.14", "2.13299, -28.1955, -3.17641, 2.58", "2.02074, -29.1857, -2.69832, 2.36", "1.77657, -31.0037, -1.91044, 1.77", "1.53154, -32.5737, -1.39761, 1.47", "1.32366, -33.8918, -1.14666, 1.18", "1.12497, -35.2935, -1.03056, 1.11", "0.979793, -36.541, -1.06024, 1.33", "0.843223, -38.2437, -1.29137, 1.25", "0.808341, -39.7341, -1.63188, 1.47", "0.853173, -41.0693, -1.9824, 1.62", "0.922094, -42.0713, -2.25029, 2.14", "0.966014, -42.7628, -2.42151, 2.58", "0.986869, -43.757, -2.62696, 2.43", "0.92411, -45.3576, -2.89309, 2.14", "0.783798, -46.6502, -3.08091, 1.92", "0.541249, -47.9327, -3.24604, 1.47", "0.105569, -49.5174, -3.44111, 1.25", "-0.352576, -50.8248, -3.55478, 1.11", "-0.769158, -51.803, -3.59179, 1.4", "-1.072, -52.432, -3.59165, 1.55", "-1.54675, -53.3926, -3.54679, 1.18", "-1.99255, -54.3736, -3.43875, 0.88", "-2.3877, -55.4055, -3.32619, 1.18", "-2.69259, -56.4152, -3.22354, 1.03", "-2.93991, -57.3657, -3.12205, 1.03", "-3.23881, -58.775, -2.98976, 1.47", "-3.3687, -59.6703, -2.92794, 1.77", "-3.48622, -61.0791, -2.89231, 1.77", "-3.5426, -62.1633, -2.95211, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.23906, -18.1755, -3.40448, 1.77", "4.65648, -20.0623, -3.87029, 1.77", "4.84431, -21.0068, -4.08538, 1.99", "5.06028, -22.0928, -4.33269, 1.99", "5.35496, -23.5746, -4.67014, 3.17", "5.48771, -24.2421, -4.82215, 3.76", "5.71485, -25.3843, -5.08225, 4.2", "5.84443, -26.3952, -5.25856, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.88", "5.97663, 56.3268, -0.359339, 0.88", "7.46769, 71.2525, -0.359339, 0.88" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-56.3115, 117.314, -28.2753, 0.29", "-56.4691, 117.938, -28.3536, 0.29", "-56.6322, 118.883, -28.665, 0.29", "-56.7227, 119.735, -28.9881, 0.29", "-56.7643, 120.653, -29.3678, 0.29", "-56.7669, 121.314, -29.6641, 0.29", "-56.7544, 122.401, -30.1514, 0.29", "-56.6659, 124.356, -31.1303, 0.29", "-56.6287, 124.959, -31.4537, 0.37", "-56.5895, 125.686, -31.8631, 0.37", "-56.5575, 126.581, -32.3956, 0.37", "-56.5277, 127.318, -32.8383, 0.22", "-56.5069, 128.086, -33.2829, 0.22", "-56.5619, 128.914, -33.6703, 1.03", "-56.5896, 129.062, -33.7432, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-56.3115, 117.314, -28.2753, 0.52", "-57.4631, 118.462, -27.7653, 0.52", "-57.9851, 119.072, -27.4953, 0.52", "-58.4994, 119.78, -27.2163, 0.44", "-58.7242, 120.143, -27.0934, 0.59", "-58.9591, 120.584, -26.9621, 0.59", "-59.3835, 121.431, -26.7087, 0.37", "-59.8721, 122.532, -26.4583, 0.37", "-60.159, 123.246, -26.2878, 0.37", "-60.4494, 123.964, -26.1083, 0.37", "-60.7735, 124.75, -25.8906, 0.29", "-61.08, 125.455, -25.6815, 0.29", "-61.4455, 126.191, -25.4448, 0.81", "-61.626, 126.485, -25.3471, 0.81", "-61.945, 126.926, -25.1891, 0.74", "-62.401, 127.481, -25.019, 0.74", "-62.8211, 127.915, -24.9426, 0.96", "-63.2651, 128.319, -24.942, 0.96", "-63.5703, 128.588, -24.9895, 0.59", "-64.1715, 129.151, -25.1793, 0.29", "-64.7322, 129.73, -25.4649, 0.29", "-65.34, 130.411, -25.862, 0.29", "-65.7647, 130.926, -26.1627, 0.22", "-66.3982, 131.731, -26.6272, 0.22", "-66.8917, 132.392, -27.0001, 0.74", "-67.4437, 133.182, -27.3942, 0.37", "-67.8775, 133.877, -27.6731, 0.37", "-68.2684, 134.565, -27.9102, 0.81", "-68.5485, 135.029, -28.071, 1.18", "-68.8215, 135.392, -28.1932, 1.18", "-69.5355, 136.164, -28.4816, 0.29", "-70.2971, 136.929, -28.7702, 0.29", "-70.7869, 137.386, -28.9685, 0.29", "-71.2922, 137.823, -29.1882, 0.29", "-72.0459, 138.419, -29.5061, 0.74", "-72.598, 138.767, -29.7274, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "135.179, 28.6683, 57.4172, 0.29", "145.307, 29.1505, 63.6997, 0.29", "155.158, 29.3878, 70.4237, 0.29", "165.419, 30.8506, 76.3175, 0.29", "175.044, 33.7778, 82.6866, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "135.179, 28.6683, 57.4172, 0.29", "144.145, 28.6201, 62.299, 0.29", "153.129, 30.2918, 66.829, 0.29", "162.763, 32.2865, 69.5092, 0.29", "171.559, 35.5866, 73.42, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "67.5421, 32.2004, -2.10032, 0.44", "68.8247, 32.2056, -2.63561, 0.44", "69.302, 32.2877, -2.90171, 0.37", "70.1495, 32.5308, -3.41514, 0.59", "70.6105, 32.6879, -3.69873, 0.74", "71.794, 33.1279, -4.40266, 0.37", "73.0158, 33.6111, -5.09279, 0.29", "73.7394, 33.9955, -5.52681, 0.29", "74.2587, 34.3117, -5.80618, 0.88", "74.4495, 34.445, -5.90487, 1.11", "74.9235, 34.7909, -6.11818, 1.11", "75.3726, 35.0994, -6.22812, 1.18", "76.207, 35.5303, -6.28826, 0.74", "76.7753, 35.805, -6.30224, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "67.5421, 32.2004, -2.10032, 0.29", "68.4397, 32.8762, -1.62646, 0.29", "68.864, 33.1903, -1.38632, 0.29", "69.4075, 33.5926, -1.07873, 0.66", "69.9943, 34.0268, -0.746665, 0.29", "70.4336, 34.352, -0.498043, 0.29", "71.3141, 35.0037, 2.49476E-4, 0.29", "71.823, 35.3254, 0.322404, 0.29", "79.2223, 40.8262, 3.50332, 0.29", "85.7748, 46.566, 7.85066, 0.29", "91.0296, 53.5759, 11.9925, 0.29", "97.2668, 59.8547, 16.0102, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-77.1742, -65.126, -66.7012, 0.81", "-77.6437, -65.8173, -68.1833, 0.81", "-77.7273, -65.9123, -68.3698, 0.81", "-78.7762, -66.979, -70.1759, 0.37", "-79.076, -67.2852, -70.6107, 0.52", "-79.361, -67.5828, -71.0115, 0.66", "-79.6838, -67.9383, -71.4755, 0.66", "-80.3883, -68.6894, -72.3371, 0.37", "-80.8404, -69.1523, -72.8874, 0.37", "-81.541, -69.8499, -73.7032, 0.37", "-81.9771, -70.2708, -74.2225, 0.66", "-82.6756, -70.939, -75.0388, 1.11", "-83.0017, -71.2509, -75.3955, 1.25", "-84.1324, -72.2103, -76.5957, 0.22", "-84.6158, -72.5533, -77.0665, 0.29", "-85.046, -72.8092, -77.4444, 0.59", "-85.5334, -73.0812, -77.8315, 0.81", "-86.0509, -73.372, -78.2516, 0.81", "-87.3525, -74.2455, -79.3803, 0.37", "-87.7184, -74.5502, -79.7174, 0.37", "-88.2921, -75.1609, -80.3661, 0.59", "-88.4913, -75.4298, -80.6301, 0.81", "-89.1474, -76.5535, -81.6137, 0.44", "-89.546, -77.4327, -82.2674, 0.44", "-89.8282, -78.2051, -82.7498, 0.37", "-90.1522, -79.1749, -83.3268, 0.37", "-90.3951, -79.89, -83.7484, 0.66", "-90.6079, -80.421, -84.0726, 0.81", "-90.8217, -80.921, -84.3553, 0.81", "-91.2385, -81.8068, -84.8637, 0.29", "-91.4848, -82.3019, -85.1294, 0.96", "-92.0765, -83.4921, -85.6813, 0.29", "-92.442, -84.2737, -86.0145, 0.29", "-92.7907, -85.0676, -86.3031, 0.44", "-92.989, -85.5122, -86.4512, 0.44", "-93.3026, -86.237, -86.6499, 0.29", "-93.4791, -86.6352, -86.7801, 0.59", "-93.7403, -87.2807, -87.0081, 0.59", "-93.9821, -87.9113, -87.2757, 0.52", "-94.3966, -88.8523, -87.7283, 0.37", "-94.6735, -89.4351, -88.0342, 0.88", "-95.2027, -90.5136, -88.633, 0.44", "-95.4939, -91.1313, -88.9769, 0.59", "-95.7288, -91.6411, -89.2546, 0.59", "-95.9998, -92.2668, -89.5623, 0.59", "-96.2666, -92.9215, -89.8227, 0.37", "-96.4822, -93.4082, -89.9642, 0.37", "-96.8394, -94.1532, -90.0766, 0.29", "-96.9744, -94.4211, -90.0875, 0.29", "-97.307, -95.1104, -90.0567, 0.88", "-97.5185, -95.5907, -90.003, 1.18", "-97.8824, -96.3587, -89.8682, 0.29", "-98.1608, -96.8954, -89.7601, 0.29", "-98.5939, -97.6832, -89.6441, 0.29", "-98.7921, -98.0521, -89.613, 0.88", "-98.987, -98.4199, -89.6102, 0.88", "-99.6507, -99.6209, -89.7111, 0.22", "-99.8865, -100.022, -89.7893, 0.22", "-100.43, -100.87, -90.0044, 0.59", "-100.555, -101.054, -90.0622, 0.59", "-101.069, -101.782, -90.3075, 0.22", "-101.365, -102.202, -90.4617, 0.44", "-101.774, -102.827, -90.728, 0.22", "-102.338, -103.685, -91.0819, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-77.1742, -65.126, -66.7012, 0.29", "-78.0494, -65.3441, -66.5843, 0.29", "-78.5827, -65.5129, -66.4933, 0.29", "-79.1035, -65.7002, -66.4132, 0.66", "-79.3504, -65.8035, -66.38, 0.66", "-80.2148, -66.1972, -66.2628, 0.29", "-80.5871, -66.3739, -66.2172, 0.29", "-80.8568, -66.5265, -66.1597, 0.66", "-81.1106, -66.6852, -66.1024, 0.66", "-81.9759, -67.2497, -65.9082, 0.29", "-82.2855, -67.4364, -65.8438, 0.52", "-82.5866, -67.5955, -65.7898, 0.52", "-83.429, -67.9687, -65.624, 0.22", "-83.8244, -68.116, -65.5392, 0.59", "-84.079, -68.1988, -65.4723, 0.74", "-84.5779, -68.331, -65.3346, 0.29", "-84.8318, -68.3873, -65.2667, 0.29", "-85.1664, -68.4447, -65.1778, 0.96", "-85.5014, -68.4693, -65.114, 0.96", "-86.4143, -68.528, -64.9092, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-22.5073, -125.03, 23.1235, 0.29", "-22.3021, -125.034, 24.0041, 0.29", "-21.7958, -125.1, 25.9132, 0.29", "-21.4374, -125.198, 27.274, 0.59", "-20.9776, -125.461, 29.1677, 0.66", "-20.3262, -126.031, 31.811, 0.59", "-19.8723, -126.606, 33.5324, 0.29", "-19.5314, -127.173, 34.5345, 0.52", "-19.3269, -127.856, 34.8884, 0.66", "-19.0237, -129.38, 34.9893, 0.37", "-18.657, -131.342, 34.8529, 0.29", "-18.3826, -132.9, 34.6315, 0.29", "-18.132, -134.447, 34.3316, 0.29", "-17.8847, -135.853, 34.0378, 0.29", "-17.513, -137.514, 33.6821, 0.29", "-17.1218, -138.934, 33.3817, 0.29", "-12.5915, -147.891, 41.4732, 0.29", "-8.79097, -155.22, 51.444, 0.29", "-2.30503, -162.921, 59.5652, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.5073, -125.03, 23.1235, 0.74", "-23.3372, -125.988, 22.7334, 0.74", "-24.0633, -126.98, 22.3951, 0.52", "-24.6164, -127.824, 22.1498, 0.52", "-25.4843, -129.369, 21.7858, 0.59", "-25.8356, -130.158, 21.6796, 0.96", "-26.106, -131.017, 21.6025, 1.18", "-26.1994, -131.75, 21.4999, 1.18", "-26.1731, -132.445, 21.404, 0.96", "-25.992, -133.467, 21.1996, 0.66", "-25.5475, -134.918, 20.6651, 0.52", "-25.0433, -136.219, 20.0899, 0.52", "-24.3911, -137.595, 19.3447, 0.29", "-24.0955, -138.111, 19.0008, 0.37", "-23.2763, -139.309, 17.9714, 0.29", "-22.3831, -140.388, 16.6537, 0.29", "-22.9029, -151.926, 14.1017, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.5426, -62.1633, -2.95211, 0.37", "-7.97926, -63.9878, -2.35801, 0.37", "-10.0431, -64.9177, -1.39982, 0.37", "-11.5561, -65.6373, -0.489039, 0.37", "-12.5821, -66.1392, 0.149332, 0.37", "-13.8725, -66.788, 1.00717, 0.59", "-15.1222, -67.435, 1.85217, 0.74", "-16.0731, -67.9275, 2.69323, 0.52", "-16.7911, -68.3071, 3.33685, 0.59", "-17.4331, -68.7149, 3.86502, 0.74", "-18.5465, -69.4239, 4.62993, 0.52", "-19.2527, -69.8542, 5.01993, 0.52", "-19.9204, -70.225, 5.31452, 0.74", "-20.6723, -70.6177, 5.60958, 0.74", "-21.3911, -71.0041, 5.87687, 0.52", "-22.4339, -71.5585, 6.24915, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.5426, -62.1633, -2.95211, 0.88", "-3.79145, -63.3786, -3.00225, 0.88", "-4.26806, -64.9074, -2.9163, 0.66", "-4.74495, -65.9816, -2.58081, 0.74", "-5.15576, -66.6957, -2.25977, 0.88", "-5.87847, -67.7771, -1.72786, 0.88", "-6.34105, -68.4313, -1.40833, 1.03", "-6.90725, -69.1459, -0.995484, 1.03", "-8.19189, -70.81, -0.010391, 1.03", "-8.91939, -71.8562, 0.556667, 1.03", "-9.51124, -72.9123, 1.03337, 0.88", "-9.8328, -73.818, 1.32155, 0.88", "-9.92363, -74.6622, 1.50749, 0.88", "-9.6887, -76.3, 1.6564, 1.25", "-9.50198, -76.8954, 1.67475, 1.55", "-9.13443, -77.732, 1.73693, 1.55", "-8.52024, -78.8908, 1.94276, 1.55", "-8.08062, -79.6118, 2.167, 1.55", "-7.22432, -80.8583, 2.74613, 1.03", "-6.52107, -81.7478, 3.33717, 1.03", "-5.91634, -82.4474, 3.89917, 0.81", "-4.92687, -83.4844, 4.89344, 0.81", "-4.21849, -84.1636, 5.62436, 1.03", "-3.52251, -84.7553, 6.29553, 1.03", "-2.72108, -85.3685, 6.98773, 1.03", "-2.05583, -85.871, 7.46497, 0.88", "-1.03081, -86.701, 8.0934, 0.88", "-0.515805, -87.1476, 8.35136, 0.96", "0.0777802, -87.7259, 8.61449, 0.96", "0.884304, -88.6081, 8.94149, 1.33", "1.3114, -89.1391, 9.09038, 1.62", "1.66598, -89.6211, 9.21321, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.84443, -26.3952, -5.25856, 0.66", "7.15, -29.3402, -2.70476, 0.66", "7.46452, -30.319, -1.94435, 0.88", "8.01466, -32.2785, -0.611429, 1.03", "8.28644, -33.2154, -0.0372911, 1.03", "8.55328, -34.0407, 0.436961, 1.03", "8.93005, -35.0569, 0.99727, 0.37", "9.28995, -36.1619, 1.47301, 0.37", "9.80365, -37.2569, 1.86586, 0.59", "10.5402, -38.1799, 2.07491, 0.81", "11.1435, -38.6859, 2.18752, 0.81", "11.8407, -39.115, 2.32396, 0.52", "12.5011, -39.4517, 2.47469, 0.81", "13.4869, -39.9307, 2.74036, 1.25", "13.8933, -40.1766, 2.89151, 1.69", "14.3981, -40.6322, 3.16398, 1.69", "15.0698, -41.7836, 3.76877, 0.96", "15.2912, -42.5546, 4.11343, 0.66", "15.3947, -43.1637, 4.36453, 0.81", "15.5738, -44.4437, 4.8836, 0.44", "15.774, -45.456, 5.29592, 0.44", "16.0023, -46.2487, 5.61443, 0.44", "16.3512, -46.947, 5.94791, 0.88", "17.0896, -47.8227, 6.53809, 1.25", "18.0128, -48.612, 7.20695, 0.66", "18.8478, -49.1969, 7.75811, 0.52", "19.3553, -49.5373, 8.07809, 0.52", "20.5973, -50.4245, 8.87957, 0.74", "21.6024, -51.2303, 9.52295, 1.25", "21.9849, -51.5843, 9.74456, 1.25", "22.575, -52.2065, 10.0312, 0.52", "23.263, -53.0283, 10.2679, 0.44", "24.1137, -54.133, 10.4293, 0.37", "24.6005, -54.7927, 10.4243, 0.37", "25.0995, -55.458, 10.3575, 0.96", "25.4844, -55.9526, 10.29, 1.33", "26.6313, -57.2924, 10.0574, 0.29", "27.0521, -57.7218, 9.96092, 0.29", "27.4759, -58.1061, 9.84837, 0.29", "27.6344, -58.2486, 9.80756, 0.44", "33.2416, -66.1294, 12.2347, 0.44", "39.8007, -73.5867, 13.3209, 0.44", "45.2542, -81.9021, 13.8483, 0.44", "51.2593, -89.8237, 14.6573, 0.44", "57.0455, -97.7818, 16.2676, 0.44", "62.3574, -106.142, 17.2662, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.84443, -26.3952, -5.25856, 1.03", "5.87277, -27.8871, -5.35102, 1.03", "6.05163, -29.3594, -5.49023, 1.03", "6.29445, -30.4162, -5.62998, 0.96", "6.60337, -31.4087, -5.78962, 0.96", "6.977, -32.3625, -5.97001, 0.96", "7.28853, -32.9986, -6.08498, 1.18", "7.95913, -33.8313, -6.23667, 1.47", "8.66835, -34.4727, -6.33865, 2.21", "8.98151, -34.7191, -6.35872, 2.21", "9.49235, -35.1179, -6.33386, 1.99", "10.429, -35.9106, -6.17929, 1.33", "11.3208, -36.809, -5.92341, 0.88", "11.9117, -37.5487, -5.66227, 0.74", "12.323, -38.2666, -5.39083, 0.74", "12.6714, -39.1475, -5.06357, 1.33", "12.8143, -39.6928, -4.8771, 1.62", "12.9149, -40.2977, -4.69989, 1.92", "12.9897, -40.9524, -4.55578, 1.69", "13.157, -42.2014, -4.38142, 1.33", "13.3888, -43.464, -4.31083, 1.03", "13.6021, -44.329, -4.33362, 0.88", "13.864, -45.1227, -4.41161, 1.03", "14.2779, -46.1533, -4.57713, 1.03", "14.7546, -47.181, -4.81097, 1.03", "15.1833, -48.0537, -5.07169, 1.33", "15.481, -48.7144, -5.30562, 1.69", "15.7793, -49.5253, -5.61144, 1.47", "15.9272, -50.1008, -5.83341, 1.03", "16.0558, -50.9887, -6.1664, 0.96", "16.0923, -51.8077, -6.47484, 0.96", "16.0636, -52.8185, -6.84164, 1.4", "15.9924, -53.8945, -7.20618, 1.4", "15.9273, -54.834, -7.51506, 1.55", "15.92, -55.3417, -7.67504, 1.77", "15.9803, -56.308, -7.95986, 0.96", "16.1319, -57.1636, -8.18574, 0.66", "16.4056, -57.9506, -8.34348, 0.66", "16.8233, -58.6889, -8.45817, 0.96", "17.3844, -59.4007, -8.55733, 1.11", "17.6851, -59.7051, -8.60712, 1.4", "17.9581, -59.9425, -8.65669, 1.4", "18.5302, -60.4358, -8.76369, 1.4", "19.2034, -61.0874, -8.90458, 0.66", "19.4941, -61.445, -8.9873, 0.52", "19.8151, -61.9649, -9.10668, 0.52", "20.2404, -62.8248, -9.26045, 0.81", "20.6456, -63.7901, -9.35688, 1.03", "20.8594, -64.4312, -9.38967, 1.03", "21.0892, -65.299, -9.37942, 1.03", "21.2547, -66.1703, -9.38516, 1.03", "21.3816, -67.0813, -9.40748, 0.88", "21.498, -68.2014, -9.5055, 1.03", "21.594, -69.2042, -9.66061, 0.52", "21.6864, -70.1567, -9.88855, 0.52", "21.7948, -71.5539, -10.3632, 0.88", "21.8267, -72.1279, -10.6132, 1.11", "21.8529, -73.0425, -11.072, 0.59", "21.862, -73.4301, -11.2647, 0.59", "21.9119, -74.2927, -11.5834, 0.52", "21.9868, -75.1998, -11.7306, 0.52", "22.0525, -75.9228, -11.6152, 1.11", "22.0815, -76.5286, -11.3864, 1.25", "22.0972, -77.4376, -10.8905, 1.18", "22.1049, -78.3221, -10.336, 0.52", "22.1285, -78.9323, -9.9031, 0.52", "22.195, -79.7675, -9.33797, 0.52", "22.2247, -80.0842, -9.1622, 0.81", "22.2828, -80.6705, -8.93512, 0.74", "22.3305, -81.4357, -8.76555, 0.74", "22.3379, -82.2025, -8.66918, 1.03", "22.2721, -83.2272, -8.60296, 0.66", "22.1716, -83.9081, -8.5747, 0.52", "21.9635, -84.702, -8.54191, 1.11", "21.7001, -85.3753, -8.55041, 1.11", "21.2417, -86.3386, -8.61317, 0.81", "20.7143, -87.3507, -8.74177, 0.66", "20.344, -88.0614, -8.85617, 0.88", "19.875, -89.0313, -9.07738, 0.66", "19.276, -90.3167, -9.50699, 0.59", "18.9052, -91.1611, -9.87214, 0.88", "18.6001, -91.9009, -10.2435, 1.18", "18.3876, -92.4361, -10.5217, 0.96", "18.114, -93.1436, -10.8949, 0.96", "17.6488, -94.4284, -11.513, 0.52", "17.5017, -94.8498, -11.6817, 0.81", "17.2332, -95.6696, -11.9657, 0.66", "17.0732, -96.2871, -12.0996, 0.66", "16.948, -97.038, -12.1507, 0.96", "16.9581, -97.933, -11.9571, 0.88", "17.0802, -98.699, -11.6446, 0.88", "17.2148, -99.3621, -11.3335, 0.37", "17.5091, -100.569, -10.7402, 1.03", "17.6551, -101.205, -10.4418, 1.03", "17.9061, -102.622, -9.79674, 0.44", "18.0206, -103.662, -9.42964, 0.44", "18.0407, -104.279, -9.35189, 0.74", "18.0177, -104.933, -9.48328, 0.74", "17.9525, -105.855, -9.89933, 0.44", "17.9075, -106.598, -10.324, 0.66", "17.8608, -107.673, -11.029, 0.44", "17.8289, -109.208, -12.0627, 0.88", "17.844, -110.885, -13.1499, 0.52", "17.8715, -111.738, -13.6938, 0.74", "17.9411, -112.879, -14.4046, 1.33", "17.9876, -113.525, -14.7774, 1.33", "18.0694, -114.85, -15.4131, 0.74", "18.1155, -115.688, -15.7093, 0.66", "18.1376, -116.875, -16.0029, 0.66", "18.0921, -117.702, -16.1646, 0.81", "17.9604, -118.551, -16.2995, 0.59", "17.8233, -119.121, -16.3523, 1.18", "17.7357, -119.387, -16.3638, 1.18", "17.3879, -120.329, -16.3715, 0.44", "17.1107, -121.144, -16.3084, 0.44", "16.9254, -121.824, -16.2283, 1.03", "16.8614, -122.304, -16.1561, 1.4", "16.9378, -123.299, -15.9153, 0.52", "17.0656, -123.966, -15.7404, 0.52", "17.3928, -124.83, -15.4737, 0.74", "17.5642, -125.137, -15.3471, 0.74", "17.9995, -125.737, -14.9912, 0.59", "18.6127, -126.398, -14.466, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.84443, -26.3952, -5.25856, 0.88", "9.74539, -26.3533, -9.02819, 0.88", "10.8789, -26.295, -9.97349, 0.88", "12.0293, -26.2252, -10.791, 1.03", "12.8176, -26.174, -11.2716, 1.33", "13.5478, -26.1318, -11.6783, 1.62", "14.6069, -26.0876, -12.2322, 1.84", "15.529, -25.9936, -12.579, 1.47", "16.6055, -25.8965, -13.1467, 1.18", "17.3376, -25.8114, -13.931, 0.81", "18.0562, -25.6986, -15.0599, 0.81", "18.4921, -25.6433, -15.8649, 1.11", "19.3854, -25.6076, -17.7228, 1.33", "20.3064, -25.6283, -19.7611, 1.77", "22.39, -25.8055, -24.4674, 1.47", "23.0695, -25.8929, -25.9419, 1.11", "23.7822, -25.9931, -27.3578, 1.11", "24.7824, -26.1236, -29.0501, 0.81", "25.4256, -26.2057, -29.8984, 0.96", "26.5075, -26.2871, -30.9161, 0.88", "27.4245, -26.2071, -31.5877, 0.74", "28.12, -25.9893, -32.1486, 0.59", "28.994, -25.5019, -33.0103, 1.03", "29.6379, -25.0419, -33.6888, 1.55", "30.2279, -24.5897, -34.3256, 1.69", "31.9804, -23.2241, -36.2985, 1.69", "32.5182, -22.8216, -36.9305, 1.69", "33.8698, -21.8953, -38.4991, 0.88", "34.6463, -21.4508, -39.3365, 0.81", "35.5974, -21.0387, -40.2191, 1.11", "36.8655, -20.6728, -41.213, 1.18", "38.0492, -20.5263, -41.9384, 0.59", "38.5835, -20.5379, -42.2338, 0.59", "39.9039, -20.7961, -42.8246, 0.96", "40.8525, -21.1471, -43.2192, 1.18", "41.6662, -21.5752, -43.5056, 1.18", "42.5059, -22.0979, -43.722, 1.4", "43.4782, -22.7513, -43.9236, 1.4", "44.3833, -23.3357, -44.0955, 1.11", "45.0259, -23.69, -44.2001, 1.11", "45.8207, -24.0018, -44.3183, 1.03", "46.8647, -24.26, -44.4575, 1.03", "47.7774, -24.3714, -44.5651, 1.03", "48.8324, -24.3986, -44.6748, 0.96", "50.2872, -24.3224, -44.8244, 0.88", "51.8752, -24.1531, -44.9499, 0.88", "52.9309, -23.9858, -45.012, 1.03", "53.7585, -23.8291, -45.0717, 1.11", "54.4348, -23.6973, -45.1482, 1.18", "55.0357, -23.6083, -45.293, 1.18", "56.2078, -23.5631, -45.8354, 0.81", "57.0185, -23.6624, -46.4079, 0.74", "58.0559, -23.9119, -47.2977, 1.18", "58.8373, -24.1512, -48.0372, 1.4", "60.4078, -24.6808, -49.6564, 1.18", "61.6043, -25.078, -50.9717, 0.88", "62.4863, -25.3342, -52.0261, 0.74", "63.3807, -25.5285, -53.0843, 0.74", "64.206, -25.6059, -53.9941, 1.11", "65.0943, -25.5727, -54.9244, 1.4", "65.9845, -25.4764, -55.8134, 1.4", "67.2216, -25.3497, -57.0712, 1.11", "67.9428, -25.313, -57.8458, 0.74", "68.844, -25.3765, -58.8675, 0.66", "69.9122, -25.6396, -60.1307, 0.81", "70.999, -26.102, -61.3485, 0.74", "71.9084, -26.5996, -62.3451, 1.25", "72.4176, -26.9009, -62.8679, 1.69", "73.087, -27.2617, -63.5117, 1.69", "73.7983, -27.5303, -64.0802, 1.4", "74.9258, -27.7006, -64.781, 0.88", "76.5891, -27.5916, -65.6294, 0.81", "77.3488, -27.4665, -65.9724, 0.81", "78.4143, -27.2771, -66.3882, 0.81", "79.7927, -27.0408, -66.8246, 0.81", "80.6587, -26.9267, -67.0369, 0.81", "81.8869, -26.8611, -67.2698, 0.81", "82.7158, -26.9329, -67.3637, 0.96", "83.9808, -27.2607, -67.5406, 0.96", "84.8264, -27.6291, -67.7432, 1.18", "85.5668, -28.0545, -68.0256, 1.47", "86.3153, -28.5325, -68.3757, 1.47", "87.401, -29.2383, -68.9355, 0.74", "88.6617, -30.0057, -69.6206, 0.74", "90.2047, -30.8346, -70.5054, 0.66", "91.6404, -31.5159, -71.3865, 0.74", "92.5372, -31.8655, -71.9444, 0.81", "93.5686, -32.1546, -72.5684, 0.81", "94.0957, -32.2362, -72.8672, 1.11", "95.366, -32.2677, -73.552, 1.25", "95.9222, -32.2139, -73.8934, 1.62", "96.5231, -32.091, -74.3804, 1.62", "97.6778, -31.7928, -75.4851, 0.59", "98.3894, -31.5972, -76.2414, 0.59", "99.4552, -31.3191, -77.4099, 0.88", "100.886, -30.9849, -78.9886, 1.4", "102.335, -30.7106, -80.5308, 0.74", "103.195, -30.5937, -81.4031, 0.59", "103.935, -30.5423, -82.0788, 0.81", "104.609, -30.5511, -82.5491, 0.81", "105.271, -30.6053, -82.8348, 0.96", "105.964, -30.6653, -83.0071, 0.96", "106.795, -30.7172, -83.1631, 0.59", "108.09, -30.7347, -83.4295, 0.59", "109.341, -30.6813, -83.6906, 0.66", "110.062, -30.61, -83.9071, 1.03", "111.232, -30.4534, -84.3351, 1.03", "112.357, -30.2135, -85.0749, 0.59", "112.906, -30.0453, -85.57, 0.59", "113.613, -29.7884, -86.3337, 0.59", "114.678, -29.4317, -87.5862, 1.11", "115.155, -29.3112, -88.1525, 1.33", "117.849, -28.8196, -91.2052, 1.03", "118.34, -28.7455, -91.7136, 1.4", "119.324, -28.6115, -92.6209, 0.81", "120.332, -28.4786, -93.4203, 0.74", "121.633, -28.3079, -94.2468, 0.59", "122.509, -28.1902, -94.6967, 0.59", "123.937, -28.0037, -95.1965, 0.59", "125.63, -27.709, -95.785, 0.88", "126.231, -27.5417, -95.9871, 1.25", "126.767, -27.3345, -96.1611, 1.55", "127.559, -26.9696, -96.4317, 1.55", "128.198, -26.6627, -96.6696, 1.33", "128.989, -26.2812, -96.9703, 0.66", "130.0, -25.8148, -97.3503, 0.66", "130.668, -25.5331, -97.6693, 0.66", "131.874, -25.0389, -98.4074, 0.66", "132.385, -24.8938, -98.9654, 0.66", "132.688, -24.8407, -99.3914, 0.96", "133.042, -24.8093, -99.9469, 0.96", "134.103, -24.8143, -101.655, 0.74", "134.74, -24.8528, -102.668, 1.62", "137.304, -25.0706, -106.552, 0.66", "137.696, -25.092, -107.114, 0.66", "138.305, -25.1035, -107.899, 1.11", "139.114, -25.0996, -108.812, 1.11", "139.957, -25.0542, -109.573, 0.52", "140.809, -24.946, -110.16, 0.52", "141.908, -24.677, -110.726, 1.25", "142.755, -24.43, -111.171, 0.88", "144.366, -23.8574, -112.022, 0.44", "145.289, -23.4678, -112.493, 0.44", "146.657, -22.816, -113.167, 0.52", "147.564, -22.344, -113.598, 0.88", "148.015, -22.0984, -113.802, 1.11", "148.396, -21.8614, -114.026, 1.11", "148.698, -21.6404, -114.264, 1.11", "149.663, -20.8468, -115.337, 0.52", "150.035, -20.5304, -115.919, 0.52", "150.544, -20.1101, -116.83, 0.81", "151.735, -19.2, -119.022, 0.81", "152.302, -18.7935, -120.033, 1.11", "152.556, -18.6286, -120.434, 1.92", "154.081, -17.784, -122.395, 0.59", "154.282, -17.6944, -122.59, 0.59", "155.041, -17.4458, -123.057, 0.88", "156.044, -17.2139, -123.409, 0.44", "157.696, -16.9141, -123.885, 0.44", "159.002, -16.721, -124.22, 0.74", "159.738, -16.6464, -124.434, 0.74", "160.821, -16.6119, -124.938, 0.52", "161.458, -16.65, -125.389, 0.52", "162.399, -16.7842, -126.277, 0.59", "162.753, -16.8389, -126.665, 0.59", "164.29, -17.0124, -128.457, 0.59", "165.303, -17.0535, -129.641, 0.81", "166.254, -17.0092, -130.754, 1.4", "166.764, -16.9157, -131.305, 1.55", "167.958, -16.4727, -132.39, 0.44", "168.474, -16.1773, -132.752, 0.88", "169.123, -15.7237, -133.039, 0.88", "169.83, -15.2243, -133.33, 0.59", "170.924, -14.5021, -133.795, 0.59", "171.655, -14.1021, -134.215, 0.81", "172.481, -13.7571, -134.797, 0.81", "173.567, -13.3892, -135.713, 0.52", "174.785, -13.0162, -136.928, 0.74", "175.172, -12.891, -137.486, 0.74", "175.956, -12.5295, -139.211, 0.37", "176.253, -12.3058, -140.145, 0.37", "176.601, -11.8793, -141.653, 0.37", "176.828, -11.4242, -142.986, 0.59", "177.413, -10.0012, -146.636, 0.88", "177.699, -9.31556, -148.299, 0.52", "177.819, -9.09466, -148.886, 0.52", "178.129, -8.72156, -150.168, 0.52", "178.431, -8.48252, -151.114, 0.81", "178.886, -8.22598, -152.209, 0.59", "179.323, -8.04799, -153.048, 0.59", "180.813, -7.59995, -155.743, 1.18", "182.56, -7.18839, -159.099, 0.74", "182.974, -7.11438, -159.979, 0.74", "183.342, -7.06027, -160.862, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-56.5896, 129.062, -33.7432, 0.29", "-57.8447, 128.954, -33.9777, 0.29", "-58.8525, 129.009, -34.1996, 0.29", "-59.3676, 129.166, -34.4038, 0.59", "-59.9455, 129.473, -34.6957, 0.59", "-60.413, 129.787, -34.943, 0.59", "-60.9117, 130.169, -35.198, 0.44", "-61.2891, 130.609, -35.4261, 0.59", "-61.9661, 131.494, -35.9459, 0.37", "-62.2973, 131.918, -36.2282, 0.29", "-62.6401, 132.305, -36.5029, 0.59", "-63.0189, 132.698, -36.7886, 0.59", "-63.8471, 133.525, -37.3959, 0.29", "-64.6134, 134.319, -37.9912, 0.29", "-64.9677, 134.701, -38.301, 0.29", "-65.6434, 135.433, -39.0087, 0.29", "-66.0705, 135.888, -39.5489, 0.29", "-66.5219, 136.363, -40.1838, 0.52", "-66.9314, 136.803, -40.7942, 0.66", "-67.5289, 137.502, -41.7406, 0.44", "-67.9994, 138.068, -42.5781, 0.59", "-68.577, 138.721, -43.7513, 0.96", "-68.8093, 138.914, -44.188, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-56.5896, 129.062, -33.7432, 0.66", "-55.284, 129.229, -33.7816, 0.66", "-54.2409, 129.362, -33.8123, 0.29", "-53.4837, 129.458, -33.8346, 0.44", "-52.5502, 129.577, -33.862, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-72.598, 138.767, -29.7274, 0.29", "-72.9865, 139.288, -30.2273, 0.29", "-73.481, 139.892, -30.8701, 0.59", "-73.8039, 140.291, -31.3, 0.44", "-74.2695, 140.909, -31.9269, 0.88", "-74.4746, 141.223, -32.2242, 1.03", "-74.9297, 142.023, -32.9242, 0.52", "-75.0743, 142.316, -33.173, 0.44", "-75.359, 142.946, -33.6461, 0.66", "-75.5743, 143.46, -34.0002, 0.88", "-75.9911, 144.461, -34.6178, 0.59", "-76.2735, 145.119, -34.9953, 0.74", "-76.5671, 145.785, -35.3478, 0.74", "-76.9857, 146.661, -35.8127, 0.37", "-77.1844, 147.028, -36.0117, 0.37", "-77.6665, 147.797, -36.4322, 0.66", "-78.014, 148.251, -36.6814, 0.66", "-78.3884, 148.65, -36.9088, 0.52", "-78.9432, 149.132, -37.1905, 0.88", "-79.33, 149.409, -37.353, 0.88", "-79.9108, 149.746, -37.5436, 0.52", "-80.6209, 150.097, -37.7248, 0.52", "-81.5099, 150.513, -37.9094, 0.88", "-82.0879, 150.793, -38.0107, 0.88", "-82.8102, 151.15, -38.1154, 0.52", "-83.4292, 151.465, -38.1974, 0.44", "-84.1332, 151.833, -38.2918, 0.37", "-84.8238, 152.228, -38.3795, 0.37", "-85.5117, 152.666, -38.4705, 0.29", "-86.6292, 153.442, -38.6335, 0.29", "-87.1501, 153.818, -38.7149, 0.29", "-87.7497, 154.239, -38.8108, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-72.598, 138.767, -29.7274, 0.29", "-74.4112, 137.532, -28.6159, 0.29", "-75.3979, 136.86, -28.011, 0.29", "-76.0971, 136.384, -27.5824, 0.22", "-76.9891, 135.776, -27.0356, 0.22", "-77.9816, 135.1, -26.4272, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "175.044, 33.7778, 82.6866, 0.29", "177.774, 40.8617, 88.8527, 0.29", "181.013, 47.0541, 95.7355, 0.29", "185.24, 52.717, 102.554, 0.29", "188.453, 57.3387, 110.636, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "175.044, 33.7778, 82.6866, 0.29", "183.4, 31.9266, 84.9991, 0.29", "191.732, 31.5789, 88.0311, 0.29", "199.53, 32.5094, 92.1505, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "76.7753, 35.805, -6.30224, 0.37", "77.0734, 36.3485, -5.89883, 0.37", "77.4893, 37.1373, -5.25083, 0.37", "77.7905, 37.7088, -4.7814, 0.22", "78.4239, 38.9102, -3.79446, 0.22", "78.9066, 39.8259, -3.04224, 0.66", "79.488, 40.9287, -2.13634, 1.11", "79.6247, 41.194, -1.88745, 1.11", "83.2985, 48.5617, 2.60753, 1.11", "87.421, 55.8918, 6.77088, 1.11", "92.2342, 62.5728, 11.32, 1.11", "97.2491, 68.5346, 16.6323, 1.11", "102.854, 75.1951, 20.2192, 1.11", "108.688, 81.5986, 23.9294, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "76.7753, 35.805, -6.30224, 0.44", "77.7218, 35.9893, -6.38246, 0.44", "78.7341, 36.1385, -6.47678, 0.44", "79.8349, 36.2481, -6.51886, 0.74", "80.5097, 36.2967, -6.52446, 1.03", "81.1458, 36.3304, -6.51389, 1.03", "81.6448, 36.3585, -6.52151, 1.03", "82.4704, 36.4277, -6.60761, 0.66", "83.5845, 36.5967, -6.82392, 0.66", "83.9662, 36.7082, -6.94512, 0.81", "84.5343, 36.9652, -7.1736, 0.44", "85.673, 37.6504, -7.69565, 0.44", "87.0169, 38.6194, -8.34252, 0.37", "87.4828, 39.0018, -8.58884, 0.37", "88.1974, 39.622, -8.98802, 0.37", "89.0637, 40.3812, -9.43492, 0.66", "89.5775, 40.829, -9.66139, 0.66", "90.3239, 41.4261, -9.87956, 0.37", "90.7836, 41.7456, -9.96243, 0.37", "91.3697, 42.1361, -10.0587, 0.59", "91.8874, 42.4932, -10.1578, 0.59", "92.3687, 42.8688, -10.338, 0.44", "93.1655, 43.4617, -10.7219, 0.66", "93.3092, 43.5589, -10.7991, 0.96", "93.8595, 43.8626, -11.0949, 0.96", "94.6622, 44.2077, -11.5397, 1.11", "96.5248, 44.8309, -12.5215, 0.44", "97.5782, 45.1165, -13.0344, 0.44", "98.4085, 45.3093, -13.3973, 0.37", "99.4327, 45.5548, -13.8329, 0.37", "100.061, 45.7138, -14.0763, 0.29", "100.94, 45.9919, -14.3716, 0.22", "101.537, 46.3134, -14.559, 0.59", "101.842, 46.6153, -14.6816, 0.59", "102.688, 47.6762, -15.1786, 0.29", "103.04, 48.1408, -15.4148, 0.37", "103.455, 48.6608, -15.7057, 0.52", "103.906, 49.1283, -16.0438, 0.74", "104.516, 49.6975, -16.6403, 0.96", "105.55, 50.6671, -17.9186, 0.29", "105.927, 51.0656, -18.4938, 0.52", "106.083, 51.2691, -18.7922, 0.81", "106.561, 52.0603, -19.8937, 1.11", "107.359, 53.7278, -22.1078, 0.81", "107.68, 54.5812, -23.1498, 0.96", "107.999, 55.6329, -24.3011, 0.66", "108.24, 56.4674, -25.146, 0.52", "108.513, 57.2906, -25.885, 0.52", "108.658, 57.6142, -26.1102, 0.74", "109.132, 58.1732, -26.3895, 0.74", "109.466, 58.4335, -26.5154, 0.96", "109.995, 58.7285, -26.6986, 0.96", "110.841, 59.177, -27.0819, 0.74", "111.656, 59.6591, -27.5335, 0.44", "112.512, 60.3329, -28.1686, 0.44", "112.823, 60.6561, -28.4582, 0.96", "113.34, 61.4127, -29.1186, 1.18", "113.996, 62.7275, -30.2336, 0.66", "114.206, 63.3034, -30.72, 0.66", "114.536, 64.4952, -31.7449, 0.59", "114.657, 64.9641, -32.1216, 0.52", "115.028, 66.2336, -33.0765, 0.52", "115.141, 66.5993, -33.3111, 0.96", "115.405, 67.3442, -33.7233, 0.96", "115.938, 68.7307, -34.3792, 0.59", "116.427, 69.9402, -34.8201, 0.59", "116.747, 70.7215, -35.0582, 0.88", "117.234, 71.846, -35.3069, 0.74", "117.682, 72.7408, -35.4873, 0.74", "118.236, 73.6271, -35.6343, 0.88", "118.596, 74.0546, -35.7221, 0.88", "119.268, 74.6684, -35.9649, 0.37", "119.971, 75.2076, -36.2726, 0.37", "121.072, 75.9214, -36.8126, 0.37", "121.834, 76.3945, -37.2414, 0.37", "122.71, 76.9369, -37.7951, 0.37", "123.239, 77.2827, -38.1315, 0.59", "123.898, 77.737, -38.535, 0.74", "124.34, 78.0736, -38.8055, 0.74", "125.169, 78.801, -39.3298, 0.44", "125.614, 79.1896, -39.5981, 0.37", "126.951, 80.1722, -40.2613, 0.37", "127.596, 80.5513, -40.5419, 0.74", "127.943, 80.7098, -40.6791, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "97.2668, 59.8547, 16.0102, 0.29", "102.802, 65.0359, 19.2623, 0.29", "108.499, 70.7739, 20.8584, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "97.2668, 59.8547, 16.0102, 0.29", "103.443, 65.326, 20.0778, 0.29", "109.934, 69.9198, 24.7414, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.9029, -151.926, 14.1017, 0.29", "-21.6397, -157.967, 12.2596, 0.29", "-21.0047, -164.311, 11.4614, 0.29", "-20.8606, -170.521, 9.80026, 0.29", "-21.3303, -176.889, 9.10572, 0.29", "-22.3614, -183.204, 8.52995, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.9029, -151.926, 14.1017, 0.29", "-25.5448, -158.281, 10.7817, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.66598, -89.6211, 9.21321, 0.37", "0.487422, -91.4249, 7.40979, 0.37", "-0.266421, -92.3774, 6.4805, 0.37", "-1.0313, -93.2015, 5.64745, 0.44", "-1.97382, -94.095, 4.73149, 0.74", "-2.93444, -94.9157, 3.89231, 0.59", "-3.95774, -95.6799, 3.09896, 0.59", "-4.60618, -95.9896, 2.74437, 0.74", "-5.71357, -96.3256, 2.26051, 0.88", "-6.42812, -96.4564, 2.02036, 1.18", "-7.16223, -96.5232, 1.8246, 0.59", "-8.28772, -96.5631, 1.55677, 0.44", "-9.40308, -96.5835, 1.28577, 0.52", "-9.9159, -96.6119, 1.14596, 0.74", "-10.7873, -96.7733, 0.908193, 0.74", "-11.4036, -97.0075, 0.705466, 0.59", "-12.0205, -97.3909, 0.474682, 0.59", "-12.8102, -98.1052, 0.15463, 0.59", "-13.6318, -99.0878, -0.1757, 0.44", "-14.5536, -100.394, -0.520708, 0.37", "-15.0769, -101.272, -0.698151, 1.03", "-15.4191, -101.937, -0.813207, 1.03", "-15.6864, -102.548, -0.901863, 0.96", "-16.1257, -103.814, -1.0355, 0.66", "-16.4468, -104.955, -1.13234, 0.66", "-16.7427, -106.258, -1.25186, 0.88", "-16.889, -107.059, -1.32379, 1.03", "-17.0425, -108.196, -1.43819, 0.88", "-17.1811, -109.659, -1.60861, 0.52", "-17.2505, -110.802, -1.76323, 0.52", "-17.2863, -111.671, -1.90234, 0.96", "-17.3126, -112.237, -2.00571, 0.96", "-17.4311, -113.63, -2.30323, 0.59", "-17.5921, -114.737, -2.57413, 0.66", "-17.7853, -115.563, -2.80825, 0.81", "-18.0874, -116.569, -3.13377, 0.81", "-18.2966, -117.129, -3.33994, 0.81", "-18.6958, -118.15, -3.80494, 0.44", "-18.8991, -118.684, -4.08715, 0.81", "-19.1429, -119.454, -4.53779, 0.81", "-19.3883, -120.556, -5.20034, 0.52", "-19.4747, -121.45, -5.7345, 0.52", "-19.4462, -123.086, -6.68462, 0.74", "-19.3694, -123.886, -7.12714, 1.11", "-19.2936, -124.623, -7.50324, 1.11", "-19.2209, -125.562, -7.92696, 0.96", "-19.2077, -126.615, -8.3473, 0.59", "-19.3121, -127.913, -8.80999, 0.44", "-19.6429, -129.349, -9.26543, 0.44", "-20.0206, -130.426, -9.60165, 0.44", "-20.4549, -131.432, -9.89389, 0.74", "-20.7868, -132.171, -10.0941, 0.74", "-21.1117, -132.886, -10.264, 0.74", "-21.6836, -134.164, -10.5235, 0.66", "-22.0956, -135.117, -10.6877, 0.44", "-22.6166, -136.349, -10.886, 0.44", "-23.4383, -138.064, -11.1265, 0.44", "-23.9099, -138.859, -11.2146, 0.88", "-24.467, -139.599, -11.2693, 1.18", "-24.9059, -140.075, -11.2765, 1.18", "-25.4615, -140.591, -11.264, 1.03", "-27.0504, -141.848, -11.2114, 0.66", "-28.5192, -142.85, -11.1415, 0.66", "-29.7678, -143.672, -11.0774, 1.25", "-30.431, -144.113, -11.0405, 1.55", "-31.232, -144.658, -10.9961, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.66598, -89.6211, 9.21321, 0.74", "1.11817, -90.6302, 8.50185, 0.74", "0.474429, -91.7878, 7.66923, 0.74", "0.137197, -92.4798, 7.25238, 0.74", "-0.185639, -93.255, 6.85014, 0.81", "-0.782848, -95.0341, 6.09309, 0.52", "-1.14479, -96.4511, 5.59854, 0.74", "-1.2677, -97.2055, 5.40212, 0.74", "-1.13616, -98.8794, 5.28572, 0.74", "-0.830905, -99.7101, 5.36022, 0.81", "-0.205845, -100.716, 5.59322, 0.66", "0.187441, -101.212, 5.7588, 1.11", "0.599076, -101.696, 5.9079, 1.11", "1.1208, -102.312, 6.02748, 0.81", "1.77061, -103.149, 6.04582, 0.81", "2.34915, -103.965, 6.00805, 0.96", "2.85693, -104.726, 5.94975, 0.88", "3.46001, -105.66, 5.88665, 0.96", "3.87483, -106.357, 5.82741, 1.11", "4.32523, -107.225, 5.71561, 1.11", "4.68146, -108.04, 5.57643, 0.74", "5.12075, -109.311, 5.32852, 0.66", "5.30442, -109.975, 5.19225, 0.66", "5.6124, -111.513, 4.8958, 0.66", "5.78712, -113.127, 4.60611, 0.59", "5.80136, -114.062, 4.43854, 0.96", "5.72281, -115.226, 4.22773, 1.18", "5.59789, -116.093, 4.08397, 1.03", "5.41179, -117.111, 3.93575, 0.88", "5.17462, -118.432, 3.79429, 0.74", "5.02291, -119.581, 3.77559, 0.59", "4.92506, -120.552, 3.82825, 0.59", "4.84702, -121.357, 3.94078, 1.4", "4.77041, -121.951, 4.0752, 1.4", "4.57177, -123.466, 4.55739, 0.88", "4.37921, -125.243, 5.34496, 0.66", "4.29886, -125.988, 5.73475, 0.88", "4.18951, -126.933, 6.26358, 0.88", "3.99213, -128.406, 7.09603, 0.59", "3.82623, -129.345, 7.61384, 0.81", "3.47629, -130.9, 8.41574, 0.81", "3.27579, -131.702, 8.74653, 1.11", "3.11822, -132.362, 8.9743, 1.11", "2.91737, -133.311, 9.20665, 0.52", "2.76527, -134.211, 9.35971, 0.74", "2.64183, -135.013, 9.44836, 1.03", "2.57929, -135.685, 9.47502, 1.25", "2.58369, -136.346, 9.53947, 1.33", "2.70046, -137.43, 9.78829, 1.03", "2.94869, -138.442, 10.1362, 0.74", "3.26441, -139.261, 10.4878, 0.44", "3.65384, -140.002, 10.8592, 0.29", "4.36291, -141.019, 11.4522, 0.29", "5.3633, -142.133, 12.2112, 0.29", "5.95995, -142.629, 12.6126, 0.29", "6.53133, -142.976, 12.924, 0.88", "7.01148, -143.221, 13.1567, 0.88", "7.81032, -143.598, 13.5069, 0.52", "8.1785, -143.767, 13.6218, 0.52", "8.84575, -144.106, 13.8142, 0.52", "9.35653, -144.48, 14.0193, 0.52", "10.0208, -145.181, 14.2827, 0.52", "10.3341, -145.629, 14.3883, 0.88", "10.6672, -146.187, 14.4575, 0.88", "11.0781, -146.871, 14.4643, 1.11", "11.5115, -147.507, 14.44, 0.66", "12.3641, -148.521, 14.3348, 0.66", "12.7824, -148.883, 14.2847, 0.66", "13.5269, -149.396, 14.2303, 0.66", "14.1332, -149.76, 14.212, 0.52", "15.1654, -150.377, 14.1668, 0.66", "15.497, -150.579, 14.1855, 0.66", "16.2224, -151.032, 14.3564, 0.44", "16.8231, -151.426, 14.5974, 0.44", "17.6556, -152.023, 15.0666, 0.52", "18.6438, -152.791, 15.7894, 0.66", "19.4883, -153.492, 16.4888, 0.44", "20.3925, -154.258, 17.2992, 0.81", "21.2362, -154.97, 18.0307, 0.52", "21.7936, -155.438, 18.4735, 0.74", "22.4743, -156.009, 18.9414, 0.29", "22.8386, -156.323, 19.1187, 0.52", "23.3874, -156.817, 19.2071, 0.59", "24.4373, -157.807, 19.2622, 0.37", "25.1975, -158.533, 19.2219, 0.66", "25.6306, -158.943, 19.1748, 1.03", "26.3252, -159.596, 19.0709, 1.03", "27.0918, -160.318, 18.9947, 0.74", "28.3286, -161.474, 18.9984, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "18.6127, -126.398, -14.466, 0.44", "18.6114, -127.858, -14.2668, 0.44", "18.6007, -128.878, -14.1256, 0.81", "18.5795, -129.662, -14.0164, 1.18", "18.5401, -130.711, -13.8737, 0.74", "18.4953, -131.802, -13.7309, 0.44", "18.4529, -132.762, -13.6091, 0.96", "18.4037, -133.757, -13.4886, 0.96", "18.3498, -134.704, -13.3799, 1.18", "18.2139, -136.117, -13.2147, 0.74", "17.9991, -137.401, -13.091, 0.66", "17.7412, -138.45, -13.0145, 0.66", "17.3346, -139.768, -12.9749, 0.66", "17.1017, -140.42, -12.9838, 1.03", "16.7419, -141.328, -13.0331, 0.81", "16.1668, -142.776, -13.2328, 0.52", "15.8909, -143.645, -13.3776, 0.44", "15.6838, -144.736, -13.5457, 0.37", "15.6468, -145.355, -13.6152, 0.66", "15.655, -146.033, -13.6409, 0.66", "15.7676, -147.804, -13.6557, 0.44", "15.8968, -149.579, -13.5867, 0.44", "15.9477, -150.997, -13.4806, 0.66", "15.913, -152.248, -13.3446, 0.81", "15.7516, -153.611, -13.1916, 0.96", "15.3906, -155.053, -13.0092, 1.11", "14.9644, -156.176, -12.8532, 0.81", "14.5102, -157.17, -12.7666, 0.88", "14.1468, -157.946, -12.7384, 0.66", "13.6298, -159.04, -12.7362, 0.29", "12.9816, -160.442, -12.7545, 0.29", "12.6073, -161.253, -12.7498, 0.52", "12.0195, -162.513, -12.7544, 0.52", "11.5291, -163.548, -12.7529, 0.37", "11.0619, -164.48, -12.7389, 0.29", "10.6015, -165.294, -12.6924, 0.29", "10.3932, -165.59, -12.6734, 0.88", "9.88528, -166.095, -12.6328, 1.11", "9.23752, -166.544, -12.5738, 0.44", "8.40348, -166.99, -12.4914, 0.37", "7.58738, -167.355, -12.4228, 0.59", "6.8481, -167.639, -12.3752, 0.74", "5.86868, -167.99, -12.3248, 0.44", "5.01904, -168.297, -12.2768, 0.37", "4.45911, -168.522, -12.2373, 0.88", "3.82493, -168.827, -12.1728, 1.11", "3.37894, -169.085, -12.1048, 1.11", "2.92931, -169.358, -12.0094, 1.11", "1.82957, -170.063, -11.7358, 0.29", "1.10731, -170.544, -11.5514, 0.59", "0.630211, -170.872, -11.4248, 0.59", "-0.528687, -171.736, -11.0936, 0.29", "-1.22418, -172.318, -10.8732, 0.29", "-1.76009, -172.825, -10.6905, 0.52", "-2.37816, -173.477, -10.4715, 0.52", "-2.7025, -173.838, -10.3535, 0.81", "-3.24124, -174.545, -10.1496, 0.81", "-3.75464, -175.435, -9.93921, 0.29", "-4.3246, -176.63, -9.68071, 0.29", "-4.62985, -177.327, -9.52634, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.6127, -126.398, -14.466, 0.22", "19.6797, -126.935, -15.1587, 0.22", "20.8048, -127.502, -15.8892, 0.22", "22.1632, -128.185, -16.7712, 0.22", "23.0983, -128.656, -17.3782, 0.22", "24.0904, -129.155, -18.0224, 0.22", "25.1112, -129.669, -18.6851, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "183.342, -7.06027, -160.862, 0.74", "186.656, -8.74345, -162.352, 0.74", "187.599, -9.25927, -162.598, 0.44", "188.299, -9.61, -162.721, 0.74", "189.399, -10.0792, -162.865, 0.52", "190.875, -10.5828, -163.009, 0.52", "192.445, -11.0151, -163.187, 0.52", "193.626, -11.2274, -163.182, 0.52", "194.83, -11.3619, -163.215, 0.52", "196.305, -11.3927, -163.398, 0.52", "197.489, -11.277, -163.667, 0.74", "198.675, -11.0291, -164.06, 1.03", "199.102, -10.9103, -164.237, 1.4", "199.519, -10.7851, -164.435, 1.4", "201.188, -10.3187, -165.289, 0.44", "201.839, -10.1405, -165.551, 0.74", "202.838, -9.87264, -165.791, 0.74", "203.545, -9.67269, -165.838, 0.96", "204.233, -9.47338, -165.765, 0.96", "205.166, -9.23051, -165.534, 0.96", "207.463, -8.75486, -164.62, 0.66", "208.441, -8.61831, -164.13, 0.81", "209.036, -8.57377, -163.768, 0.81", "210.504, -8.5257, -162.796, 0.52", "211.608, -8.52343, -162.055, 0.52", "212.823, -8.56228, -161.295, 0.52", "213.997, -8.63566, -160.702, 0.52", "215.489, -8.72605, -160.056, 0.44", "216.29, -8.76592, -159.815, 0.96", "217.124, -8.8131, -159.773, 1.11", "218.275, -8.89903, -159.988, 0.44", "219.272, -9.0644, -160.417, 0.37", "219.977, -9.28382, -160.872, 0.37", "221.09, -9.78245, -161.81, 0.66", "222.307, -10.4512, -163.02, 0.74", "222.815, -10.7582, -163.588, 0.81", "223.536, -11.2157, -164.494, 0.81", "224.448, -11.784, -165.729, 0.66", "225.281, -12.2338, -166.831, 0.66", "226.08, -12.5986, -167.811, 0.29", "226.644, -12.8248, -168.444, 0.59", "227.252, -13.036, -169.086, 0.74", "227.827, -13.2171, -169.692, 0.44", "228.586, -13.4262, -170.459, 0.37", "229.374, -13.6528, -171.224, 0.37", "230.158, -13.8931, -171.931, 0.59", "230.787, -14.1089, -172.467, 0.59", "232.395, -14.8402, -173.994, 0.29", "233.426, -15.4474, -175.061, 0.29", "233.952, -15.8298, -175.655, 0.29", "234.409, -16.1925, -176.173, 0.74", "234.865, -16.5834, -176.697, 0.74", "236.707, -18.416, -178.789, 0.37", "237.267, -19.0878, -179.409, 0.52", "237.693, -19.7134, -179.938, 0.81", "238.135, -20.4322, -180.565, 0.37", "238.516, -21.0809, -181.188, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "183.342, -7.06027, -160.862, 0.88", "183.787, -6.85209, -162.05, 0.88", "183.978, -6.85543, -162.57, 1.25", "184.15, -6.91706, -163.095, 1.25", "184.364, -7.01799, -163.84, 0.59", "184.937, -7.2879, -165.833, 0.59", "185.512, -7.55901, -167.834, 0.96", "185.815, -7.77269, -168.908, 1.11", "186.326, -8.25368, -170.868, 1.25", "186.621, -8.61721, -172.112, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-87.7497, 154.239, -38.8108, 0.22", "-87.6484, 153.319, -38.1754, 0.22", "-87.5853, 152.747, -37.7795, 0.22", "-87.4439, 151.465, -36.8931, 0.22", "-87.3577, 150.682, -36.3523, 0.22", "-87.2836, 150.01, -35.8875, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-87.7497, 154.239, -38.8108, 0.22", "-88.5396, 155.053, -38.3435, 0.22", "-89.2332, 155.797, -37.9436, 0.22", "-89.8928, 156.504, -37.5632, 0.22", "-90.5239, 157.181, -37.1993, 0.22", "-91.474, 158.2, -36.6515, 0.22", "-91.9586, 158.72, -36.3721, 0.37", "-92.4235, 159.295, -36.0801, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "188.453, 57.3387, 110.636, 0.29", "192.405, 62.404, 118.788, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "188.453, 57.3387, 110.636, 0.29", "191.477, 63.4142, 116.829, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "199.53, 32.5094, 92.1505, 0.29", "202.23, 32.8142, 82.1067, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "199.53, 32.5094, 92.1505, 0.29", "190.298, 32.9283, 94.7878, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "127.943, 80.7098, -40.6791, 0.37", "127.352, 81.0201, -40.9624, 0.37", "126.562, 81.4445, -41.5887, 0.66", "126.088, 81.7124, -42.2003, 0.29", "125.696, 81.9441, -42.7886, 0.29", "125.221, 82.244, -43.5322, 0.29", "124.2, 82.9328, -45.1348, 0.29", "123.734, 83.2265, -45.8984, 0.81", "122.383, 84.0497, -48.2573, 0.44", "121.936, 84.3262, -49.1064, 0.96", "121.584, 84.578, -49.845, 1.18", "121.167, 84.9316, -50.8207, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "127.943, 80.7098, -40.6791, 0.37", "128.833, 80.8979, -40.7177, 0.37", "129.862, 81.2696, -40.746, 0.29", "130.239, 81.4387, -40.751, 0.66", "130.608, 81.6279, -40.7439, 0.66", "131.062, 81.9132, -40.7352, 0.37", "131.693, 82.3373, -40.7308, 0.37", "132.368, 82.8687, -40.7256, 0.81", "132.646, 83.108, -40.7008, 1.11", "133.033, 83.4541, -40.6411, 1.33", "133.808, 84.2038, -40.4604, 0.44", "134.259, 84.6788, -40.2963, 0.52", "134.837, 85.3538, -40.005, 1.03", "135.443, 86.1512, -39.6155, 0.52", "135.724, 86.5514, -39.3928, 0.66", "136.002, 86.9939, -39.1176, 0.66", "136.381, 87.7112, -38.6224, 0.44", "136.535, 88.1198, -38.3683, 0.29", "136.697, 88.642, -38.0935, 0.44", "136.908, 89.2585, -37.8484, 0.66", "137.123, 89.7794, -37.6786, 0.37", "137.395, 90.3889, -37.5234, 0.37", "137.834, 91.3937, -37.3248, 0.29", "138.104, 92.0429, -37.1984, 0.29", "138.485, 93.1406, -36.986, 0.29", "138.689, 93.8896, -36.8084, 0.29", "138.795, 94.4676, -36.6335, 1.55", "138.83, 94.9406, -36.4535, 1.18", "138.782, 95.4306, -36.1835, 0.96", "138.534, 96.2037, -35.6487, 0.52", "138.043, 97.073, -34.9288, 0.29", "137.633, 97.5974, -34.4481, 0.29", "137.411, 97.8413, -34.2168, 0.29", "136.79, 98.5087, -33.6123, 0.22", "136.6, 98.7187, -33.4425, 0.66", "136.37, 98.9901, -33.2494, 0.66", "135.988, 99.5209, -32.9607, 0.37", "135.72, 100.068, -32.7212, 0.29", "135.547, 100.634, -32.5449, 0.22", "135.456, 101.147, -32.3895, 0.22", "135.39, 101.933, -32.1053, 0.22", "135.397, 102.286, -31.9629, 0.29", "135.458, 102.812, -31.7251, 0.29", "135.597, 103.595, -31.3436, 0.29", "135.843, 104.609, -30.8513, 0.29", "136.017, 105.239, -30.5358, 0.29", "136.189, 105.744, -30.2779, 0.29", "136.431, 106.403, -29.928, 0.29", "136.841, 107.395, -29.3821, 0.29", "137.205, 108.159, -28.9682, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-22.3614, -183.204, 8.52995, 0.29", "-23.009, -193.741, 6.27329, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.3614, -183.204, 8.52995, 0.29", "-17.1111, -181.817, 10.8763, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-31.232, -144.658, -10.9961, 0.37", "-31.6408, -145.801, -11.3646, 0.37", "-31.8361, -146.348, -11.5406, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-31.232, -144.658, -10.9961, 0.29", "-33.817, -144.41, -12.3724, 0.29", "-34.5771, -144.338, -12.7535, 0.22", "-35.5924, -144.311, -13.2175, 0.22", "-36.1974, -144.342, -13.4631, 1.47", "-36.646, -144.365, -13.6453, 1.69", "-37.0746, -144.387, -13.8193, 1.69", "-38.2747, -144.434, -14.0398, 0.96", "-39.1323, -144.546, -14.2639, 0.29", "-39.8612, -144.751, -14.5121, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "28.3286, -161.474, 18.9984, 0.29", "28.0959, -162.176, 18.0218, 0.29", "27.893, -162.788, 17.1701, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "28.3286, -161.474, 18.9984, 0.29", "28.5871, -159.845, 18.1282, 0.29", "28.8696, -158.84, 17.1075, 0.29", "29.0968, -158.408, 16.2047, 0.29", "29.3172, -157.99, 15.3287, 0.52", "29.9406, -156.806, 12.8511, 0.44", "30.1497, -156.408, 12.0197, 0.29", "30.4729, -156.558, 10.6086, 0.29", "30.5854, -156.717, 10.0983, 0.29", "31.7047, -152.525, 2.58351, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.62985, -177.327, -9.52634, 0.22", "-4.61142, -178.07, -9.37254, 0.22", "-4.56428, -178.92, -9.15136, 0.22", "-4.47253, -180.021, -8.8645, 0.22", "-4.38514, -180.925, -8.6313, 0.22", "-4.25279, -182.089, -8.34438, 0.22", "-4.1478, -183.012, -8.11675, 0.22", "-4.02311, -184.091, -7.86391, 0.22", "-3.91978, -184.773, -7.71281, 0.37", "-3.86975, -185.007, -7.65933, 0.37", "-3.70327, -185.659, -7.49762, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.62985, -177.327, -9.52634, 1.55", "-5.24951, -177.706, -9.40281, 1.55", "-5.61241, -177.976, -9.34003, 1.55", "-6.32945, -178.533, -9.2135, 0.29", "-7.37042, -179.344, -9.00248, 0.44", "-7.64123, -179.529, -8.96937, 0.44", "-8.8049, -180.188, -8.89518, 0.29", "-9.54755, -180.551, -8.8773, 0.29", "-10.2884, -180.868, -8.85801, 0.29", "-11.109, -181.16, -8.81928, 0.29", "-12.7226, -181.584, -8.66248, 0.29", "-14.1454, -181.813, -8.48147, 0.29", "-15.042, -181.853, -8.34256, 0.22", "-15.9378, -181.832, -8.17812, 0.22", "-16.6325, -181.792, -8.03061, 0.22", "-17.384, -181.727, -7.83648, 0.22", "-18.2865, -181.644, -7.49324, 0.22", "-18.9555, -181.542, -7.21229, 0.22", "-19.4281, -181.429, -7.03364, 0.52", "-19.854, -181.293, -6.89344, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "186.621, -8.61721, -172.112, 0.81", "189.616, -8.39857, -174.372, 0.81", "191.932, -8.33575, -175.976, 0.88", "193.778, -8.39168, -177.265, 0.37", "194.313, -8.40584, -177.632, 0.37", "195.482, -8.43677, -178.436, 0.66", "196.243, -8.45691, -178.959, 0.74", "196.499, -8.47323, -179.181, 0.74", "197.992, -8.63939, -180.076, 0.37", "198.743, -8.78613, -180.51, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "186.621, -8.61721, -172.112, 0.44", "187.318, -8.05331, -173.494, 0.44", "187.81, -7.65509, -174.47, 0.44", "188.082, -7.43504, -175.009, 0.44", "188.616, -7.00269, -176.069, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "121.167, 84.9316, -50.8207, 0.96", "120.435, 85.4019, -52.4941, 0.96", "119.585, 85.8377, -54.1583, 0.59", "119.377, 85.9448, -54.5547, 0.59", "119.189, 86.0551, -54.9318, 0.37", "118.781, 86.3424, -55.8041, 0.29", "118.526, 86.5434, -56.364, 0.29", "118.354, 86.7102, -56.7121, 0.66", "118.07, 87.1189, -57.3349, 0.22", "117.927, 87.3681, -57.7202, 0.22", "117.75, 87.6761, -58.2192, 0.88", "117.636, 87.8629, -58.5214, 0.88", "117.274, 88.3563, -59.3403, 0.37", "117.079, 88.5513, -59.731, 0.96", "116.87, 88.7096, -60.1298, 1.11", "116.475, 88.9746, -60.907, 0.44", "116.25, 89.1312, -61.3882, 0.37", "116.086, 89.2592, -61.7712, 0.52", "115.42, 89.8318, -63.4055, 0.37", "115.153, 90.1296, -64.1826, 0.96", "114.97, 90.391, -64.7801, 0.96", "114.798, 90.669, -65.3858, 0.52", "114.678, 90.8627, -65.846, 1.33", "114.53, 91.0788, -66.4089, 1.33", "113.861, 91.9376, -68.715, 0.52", "113.781, 92.0316, -68.9749, 0.52", "113.601, 92.2232, -69.5331, 0.52", "112.796, 92.9764, -71.9029, 0.44", "112.398, 93.3119, -72.9747, 0.59", "112.142, 93.5254, -73.601, 0.59", "111.863, 93.755, -74.1716, 0.88", "111.759, 93.8472, -74.3587, 1.25", "111.549, 94.0512, -74.653, 1.47", "111.02, 94.6008, -75.1282, 0.29", "110.526, 95.1408, -75.5071, 0.29", "110.324, 95.3627, -75.6497, 0.29", "109.972, 95.7532, -75.8727, 0.29", "109.75, 96.015, -76.0136, 0.29", "109.223, 96.6701, -76.3408, 0.29", "109.015, 96.9244, -76.4707, 0.29", "108.726, 97.2215, -76.645, 0.96", "108.536, 97.4268, -76.7759, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "121.167, 84.9316, -50.8207, 0.15", "121.825, 85.8595, -50.3855, 0.15", "122.185, 86.3679, -50.147, 0.15", "122.475, 86.7765, -49.9553, 0.81", "122.727, 87.1312, -49.789, 1.03", "123.058, 87.5986, -49.5697, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-31.8361, -146.348, -11.5406, 0.52", "-32.076, -147.152, -12.0475, 0.52", "-32.4079, -148.454, -12.7153, 0.52", "-32.8625, -150.111, -13.3715, 0.37", "-33.0756, -150.874, -13.6585, 0.52", "-33.3684, -151.901, -14.0281, 0.44", "-33.7112, -153.04, -14.4445, 0.37", "-34.0827, -154.197, -14.8157, 0.29", "-34.4948, -155.418, -15.1255, 0.29", "-34.9989, -157.007, -15.4778, 1.03", "-35.1455, -157.453, -15.5802, 1.18", "-35.6071, -158.723, -15.9032, 0.88", "-35.9373, -159.633, -16.156, 0.44", "-36.3, -160.816, -16.5124, 0.37", "-36.425, -161.509, -16.7389, 0.59", "-36.4579, -162.158, -16.9478, 0.44", "-36.3515, -163.475, -17.3874, 0.44", "-36.173, -164.409, -17.7007, 0.44", "-35.8296, -165.838, -18.1739, 0.52", "-35.5203, -167.166, -18.5988, 0.66", "-35.3285, -168.268, -18.8654, 0.88", "-35.2691, -169.036, -18.9638, 0.88", "-35.351, -170.215, -18.9323, 0.52", "-35.6593, -171.236, -18.749, 0.29", "-36.2813, -172.458, -18.3747, 0.29", "-37.1658, -173.848, -17.9468, 0.29", "-37.8223, -174.764, -17.7252, 0.96", "-38.2469, -175.377, -17.6623, 1.18", "-38.6669, -176.054, -17.6508, 1.18", "-39.2806, -177.328, -17.7737, 0.59", "-39.708, -178.669, -17.957, 0.52", "-39.9931, -179.974, -18.1408, 0.52", "-40.2813, -181.66, -18.4165, 0.66", "-40.4327, -182.777, -18.5913, 0.66", "-40.5423, -183.98, -18.7571, 0.81", "-40.5806, -185.722, -18.8822, 0.81", "-40.5261, -186.977, -18.7625, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-31.8361, -146.348, -11.5406, 0.37", "-32.3378, -146.253, -10.8014, 0.37", "-33.0389, -146.179, -9.86589, 0.37", "-33.3892, -146.145, -9.4385, 0.37", "-34.1983, -146.055, -8.53076, 0.29", "-34.6948, -145.984, -8.00961, 0.29", "-35.2834, -145.9, -7.39175, 0.29", "-35.8483, -145.837, -6.79144, 0.37", "-36.1532, -145.825, -6.5254, 0.37", "-36.4762, -145.825, -6.29485, 0.29", "-36.8662, -145.806, -6.10104, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.893, -162.788, 17.1701, 0.22", "26.8469, -163.995, 17.456, 0.22", "25.3396, -165.735, 17.8679, 0.22", "24.4828, -166.724, 18.102, 0.29", "24.0158, -167.263, 18.2297, 0.29", "22.8058, -168.66, 18.5604, 0.22", "22.015, -169.573, 18.7764, 0.22", "15.1356, -181.463, 19.8948, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.893, -162.788, 17.1701, 0.37", "27.8889, -163.671, 17.6714, 0.37", "27.7649, -164.476, 18.0276, 0.96", "27.4868, -165.486, 18.3634, 0.59", "27.2164, -166.261, 18.5351, 0.59", "26.9297, -167.083, 18.7172, 0.22", "26.6566, -167.867, 18.8906, 0.22", "26.2571, -168.707, 19.0145, 0.22", "25.8375, -169.423, 19.021, 0.22", "25.2976, -170.163, 18.9333, 0.22", "24.139, -177.443, 21.0647, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "188.616, -7.00269, -176.069, 0.37", "190.049, -8.54802, -184.827, 0.37", "190.271, -8.77244, -186.323, 0.66", "190.404, -8.89939, -187.502, 0.66", "190.456, -8.94073, -188.07, 0.96", "190.568, -8.96156, -189.53, 1.11", "190.696, -8.88423, -191.238, 1.11", "190.887, -8.26373, -193.329, 0.81", "191.042, -7.62548, -194.848, 1.4", "191.096, -7.37035, -195.308, 1.4", "191.345, -6.2317, -196.844, 0.37", "191.56, -5.31463, -197.717, 0.37", "191.886, -4.11384, -198.521, 0.37", "192.176, -3.09369, -199.009, 0.66", "192.4, -2.23527, -199.342, 0.66", "192.595, -1.01345, -199.805, 0.29", "192.625, -0.0719216, -200.144, 0.52", "192.58, 0.60673, -200.401, 0.52", "192.45, 1.7311, -200.887, 0.29", "192.317, 2.88303, -201.447, 1.03", "192.157, 4.58072, -202.407, 0.66", "192.075, 5.65088, -203.066, 0.44", "192.053, 6.0321, -203.307, 0.66", "191.986, 7.20395, -204.073, 0.37", "191.973, 7.80156, -204.445, 0.52", "192.002, 8.97673, -205.107, 0.37", "192.075, 9.80787, -205.485, 0.37", "192.164, 10.6962, -205.88, 0.37", "192.204, 11.691, -206.308, 0.37", "192.183, 12.6506, -206.694, 0.96", "192.174, 13.0553, -206.851, 0.96", "192.193, 14.6874, -207.452, 0.29", "192.238, 16.01, -207.955, 0.29", "192.305, 17.2374, -208.438, 0.29", "192.369, 18.2626, -208.856, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "188.616, -7.00269, -176.069, 0.52", "186.238, -2.66139, -181.108, 0.52", "186.036, -2.29294, -181.499, 0.52", "185.046, -0.52705, -183.247, 0.37", "184.769, -0.0328026, -183.736, 0.29", "183.93, 1.46241, -185.216, 0.29", "183.217, 2.73355, -186.474, 0.29", "182.536, 4.17191, -187.231, 0.29", "182.234, 4.78496, -187.572, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "108.536, 97.4268, -76.7759, 0.29", "107.53, 99.1624, -78.0283, 0.29", "107.216, 99.5566, -78.505, 0.29", "106.777, 100.035, -79.229, 0.29", "106.0, 100.894, -80.5454, 0.29", "105.705, 101.239, -81.0314, 0.44", "105.305, 101.708, -81.6915, 0.44", "104.071, 102.973, -83.673, 0.29", "103.491, 103.532, -84.6575, 0.29", "103.167, 103.841, -85.2597, 0.29", "102.681, 104.31, -86.1853, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "108.536, 97.4268, -76.7759, 0.22", "107.731, 96.3496, -76.2135, 0.22", "107.041, 95.5411, -75.7553, 0.22", "106.151, 94.6233, -75.1626, 1.4", "105.153, 93.5939, -74.4978, 0.22", "104.04, 92.4452, -73.7561, 1.84", "103.064, 91.4393, -73.1064, 0.22", "102.191, 90.6537, -72.4771, 0.22", "101.356, 89.9749, -71.861, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "123.058, 87.5986, -49.5697, 0.74", "123.181, 87.8522, -49.0543, 0.74", "123.35, 88.2361, -48.2086, 0.22", "123.413, 88.464, -47.6852, 0.22", "123.473, 88.8933, -46.6268, 0.22", "123.516, 89.2251, -45.6549, 1.33", "123.547, 89.3675, -45.1639, 1.33", "123.611, 89.5907, -44.1318, 0.22", "123.643, 89.7048, -43.3771, 0.22", "123.647, 89.7602, -42.8923, 0.22", "123.609, 89.8897, -41.839, 0.22", "123.615, 89.9505, -41.0403, 0.22", "123.668, 89.996, -40.5283, 0.37", "123.777, 90.056, -40.0199, 0.37", "123.976, 90.1331, -39.4605, 0.37", "124.158, 90.2169, -39.0521, 0.15", "124.63, 90.5244, -37.95, 0.22", "125.0, 90.8109, -37.0519, 0.22", "125.25, 91.0041, -36.4127, 0.22", "125.636, 91.367, -35.2402, 0.22", "125.846, 91.6072, -34.399, 0.22", "126.058, 91.8871, -33.3115, 0.22", "126.116, 91.9854, -32.9085, 0.74", "126.286, 92.3434, -31.2332, 0.29", "126.354, 92.5562, -30.2277, 0.29", "126.407, 92.7771, -29.2484, 0.29", "126.472, 92.9109, -28.5251, 0.29", "126.619, 93.023, -27.6404, 0.52", "126.783, 93.0936, -26.8307, 0.37", "127.036, 93.1669, -25.7685, 0.29", "127.104, 93.1792, -25.5069, 0.37", "127.375, 93.2267, -24.4866, 0.37", "127.713, 93.2747, -23.1178, 0.37", "127.959, 93.289, -22.0503, 0.22", "128.104, 93.2809, -21.4614, 0.22", "128.26, 93.2675, -20.8266, 0.74", "128.336, 93.269, -20.4744, 0.88", "128.526, 93.3482, -19.3863, 0.59", "128.655, 93.5445, -18.1442, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "123.058, 87.5986, -49.5697, 0.29", "124.061, 88.2016, -50.1983, 0.29", "124.91, 88.7027, -50.9773, 0.29", "125.726, 89.1722, -51.8486, 1.03", "126.104, 89.3898, -52.2838, 1.03", "127.05, 89.8649, -53.3585, 0.44", "127.781, 90.1878, -54.1524, 0.29", "128.747, 90.5254, -55.2464, 0.96", "129.076, 90.6163, -55.6114, 0.96", "130.074, 90.8527, -56.6086, 0.22", "130.862, 91.0448, -57.3096, 0.22", "131.718, 91.2526, -57.9217, 0.22", "132.675, 91.5144, -58.5086, 0.22", "133.806, 91.8767, -59.1083, 0.22", "134.52, 92.1417, -59.4522, 0.52", "135.117, 92.4145, -59.689, 0.29", "135.883, 92.8611, -59.9083, 1.03", "136.406, 93.2144, -59.9497, 1.03", "136.885, 93.6112, -59.8724, 0.88", "137.378, 94.0386, -59.7093, 0.66", "138.001, 94.6004, -59.423, 0.37", "138.641, 95.2006, -59.0341, 0.59", "139.402, 95.9457, -58.4616, 0.29", "140.074, 96.5821, -57.8901, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-40.5261, -186.977, -18.7625, 0.74", "-40.9998, -188.025, -18.3918, 0.74", "-41.8523, -189.574, -17.7988, 0.66", "-42.5667, -190.592, -17.3808, 0.52", "-43.6229, -191.825, -16.8654, 0.37", "-44.2352, -192.499, -16.5979, 0.74", "-44.7404, -193.075, -16.357, 1.03", "-45.4351, -193.835, -16.026, 0.74", "-46.4252, -194.933, -15.5591, 0.52", "-47.3931, -196.159, -15.085, 0.52", "-48.0158, -197.143, -14.7729, 0.66", "-48.8371, -198.859, -14.3424, 0.88", "-49.0614, -199.471, -14.2247, 1.18", "-49.3332, -200.457, -14.0784, 0.81", "-49.6122, -201.857, -13.9312, 0.52", "-49.8229, -203.041, -13.8802, 0.52", "-50.1071, -204.446, -13.8957, 0.52", "-50.2686, -205.116, -13.9484, 0.52", "-50.6156, -206.43, -14.0679, 0.52", "-50.9984, -207.731, -14.193, 0.52", "-51.3573, -208.825, -14.3251, 1.03", "-51.6451, -209.62, -14.4258, 1.25", "-52.0757, -210.608, -14.5602, 0.66", "-52.5827, -211.568, -14.7083, 0.29", "-53.3421, -212.509, -14.8841, 0.29", "-53.8774, -212.382, -14.915, 0.52", "-55.2424, -211.522, -14.9337, 0.29", "-56.3025, -210.713, -14.9449, 0.29", "-57.4141, -209.711, -14.9477, 0.22", "-57.6216, -209.497, -14.9492, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-40.5261, -186.977, -18.7625, 0.22", "-40.9169, -188.609, -19.3286, 0.22", "-41.0701, -189.261, -19.563, 0.22", "-41.3216, -190.563, -20.0161, 0.22", "-41.5649, -192.039, -20.5037, 0.22", "-41.7621, -193.235, -20.8988, 0.22", "-42.1448, -195.558, -21.6657, 0.22", "-42.3292, -196.557, -21.9597, 0.22", "-42.6781, -198.525, -22.5757, 0.22", "-42.8279, -199.619, -22.9514, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "192.369, 18.2626, -208.856, 0.29", "193.682, 17.9407, -209.018, 0.29", "194.436, 17.7555, -209.111, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "192.369, 18.2626, -208.856, 0.37", "192.547, 19.2499, -209.025, 0.37", "192.756, 20.4126, -209.223, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_ChC_dfe3a6b301_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.1147, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.0538013, 12.7429, -3.57574, 0.37 ) }
    dend_78 { pt3dadd( -0.129102, 13.1853, -3.66055, 0.74 ) }
    dend_78 { pt3dadd( -0.0805781, 13.5338, -3.79066, 0.74 ) }
    dend_78 { pt3dadd( 0.327838, 14.6043, -4.28559, 0.37 ) }
    dend_78 { pt3dadd( 0.729604, 15.4601, -4.65351, 0.66 ) }
    dend_78 { pt3dadd( 1.19919, 16.3434, -5.04652, 1.33 ) }
    dend_78 { pt3dadd( 1.6415, 17.0021, -5.35304, 1.33 ) }
    dend_78 { pt3dadd( 2.38587, 18.09, -5.86803, 0.74 ) }
    dend_78 { pt3dadd( 2.94191, 18.9596, -6.25585, 0.74 ) }
    dend_78 { pt3dadd( 3.78922, 20.3973, -6.89575, 1.25 ) }
    dend_78 { pt3dadd( 4.32317, 21.5532, -7.3883, 2.06 ) }
    dend_78 { pt3dadd( 4.59404, 22.4162, -7.71729, 2.06 ) }
    dend_78 { pt3dadd( 4.78064, 23.5849, -8.12385, 1.4 ) }
    dend_78 { pt3dadd( 4.7098, 24.9347, -8.5766, 0.74 ) }
    dend_78 { pt3dadd( 4.39756, 25.8199, -8.87629, 1.11 ) }
    dend_78 { pt3dadd( 3.85426, 26.4983, -9.10828, 1.11 ) }
    dend_78 { pt3dadd( 3.07094, 27.0781, -9.29197, 0.81 ) }
    dend_78 { pt3dadd( 2.0393, 27.5678, -9.54513, 0.81 ) }
    dend_78 { pt3dadd( 0.77868, 27.9658, -9.87811, 0.81 ) }
    dend_78 { pt3dadd( -0.450396, 28.2576, -10.2379, 0.96 ) }
    dend_78 { pt3dadd( -1.46509, 28.4973, -10.5469, 1.11 ) }
    dend_78 { pt3dadd( -2.37664, 28.7403, -10.8765, 1.11 ) }
    dend_78 { pt3dadd( -4.35683, 29.398, -11.7414, 1.11 ) }
    dend_78 { pt3dadd( -4.94191, 29.6683, -12.0594, 1.11 ) }
    dend_78 { pt3dadd( -5.88568, 30.3871, -12.7129, 0.59 ) }
    dend_78 { pt3dadd( -6.4434, 31.158, -13.1852, 0.96 ) }
    dend_78 { pt3dadd( -6.77325, 31.8697, -13.4977, 1.25 ) }
    dend_78 { pt3dadd( -7.00606, 32.5116, -13.7119, 1.55 ) }
    dend_78 { pt3dadd( -7.14729, 32.916, -13.804, 1.55 ) }
    dend_78 { pt3dadd( -7.65163, 34.1575, -14.0608, 0.74 ) }
    dend_78 { pt3dadd( -8.44402, 35.659, -14.3667, 0.96 ) }
    dend_78 { pt3dadd( -9.10024, 36.5693, -14.5874, 0.66 ) }
    dend_78 { pt3dadd( -9.64486, 37.142, -14.7595, 0.66 ) }
    dend_78 { pt3dadd( -10.5194, 37.8536, -15.0323, 0.81 ) }
    dend_78 { pt3dadd( -11.2453, 38.3212, -15.2661, 0.96 ) }
    dend_78 { pt3dadd( -12.2004, 38.8233, -15.5984, 1.47 ) }
    dend_78 { pt3dadd( -13.0804, 39.2567, -15.9218, 1.62 ) }
    dend_78 { pt3dadd( -13.9114, 39.7292, -16.236, 1.47 ) }
    dend_78 { pt3dadd( -14.6849, 40.2592, -16.544, 1.11 ) }
    dend_78 { pt3dadd( -15.5587, 40.9881, -16.9172, 0.81 ) }
    dend_78 { pt3dadd( -16.5874, 42.0732, -17.4226, 0.66 ) }
    dend_78 { pt3dadd( -17.1403, 42.8219, -17.7295, 0.81 ) }
    dend_78 { pt3dadd( -17.8512, 44.0855, -18.1887, 1.03 ) }
    dend_78 { pt3dadd( -18.1261, 44.7439, -18.4207, 1.25 ) }
    dend_78 { pt3dadd( -18.3218, 45.3566, -18.6467, 1.25 ) }
    dend_78 { pt3dadd( -18.6754, 46.679, -19.1827, 0.96 ) }
    dend_78 { pt3dadd( -18.9389, 47.6998, -19.6556, 0.81 ) }
    dend_78 { pt3dadd( -19.3064, 48.959, -20.3182, 0.59 ) }
    dend_78 { pt3dadd( -19.6092, 49.834, -20.8103, 0.59 ) }
    dend_78 { pt3dadd( -20.0259, 50.8707, -21.4002, 0.59 ) }
    dend_78 { pt3dadd( -20.4836, 51.8884, -21.9592, 0.59 ) }
    dend_78 { pt3dadd( -20.9271, 52.8413, -22.3929, 0.44 ) }
    dend_78 { pt3dadd( -21.3473, 53.8362, -22.7254, 0.66 ) }
    dend_78 { pt3dadd( -21.673, 54.8991, -22.9075, 0.74 ) }
    dend_78 { pt3dadd( -21.7785, 55.5662, -22.9396, 0.96 ) }
    dend_78 { pt3dadd( -21.7885, 56.3125, -22.9156, 0.96 ) }
    dend_78 { pt3dadd( -21.6255, 57.9692, -22.8836, 0.52 ) }
    dend_78 { pt3dadd( -21.4001, 59.3125, -22.9022, 0.59 ) }
    dend_78 { pt3dadd( -21.1017, 60.836, -22.9828, 0.59 ) }
    dend_78 { pt3dadd( -20.9479, 61.6873, -23.0665, 0.96 ) }
    dend_78 { pt3dadd( -20.8298, 62.6695, -23.2124, 0.96 ) }
    dend_78 { pt3dadd( -20.7927, 64.4135, -23.5805, 0.66 ) }
    dend_78 { pt3dadd( -20.9802, 65.6123, -23.9596, 0.66 ) }
    dend_78 { pt3dadd( -21.3935, 66.5834, -24.3541, 0.96 ) }
    dend_78 { pt3dadd( -21.8714, 67.1722, -24.6161, 1.03 ) }
    dend_78 { pt3dadd( -22.4816, 67.6477, -24.865, 1.03 ) }
    dend_78 { pt3dadd( -23.2926, 68.0802, -25.1642, 1.03 ) }
    dend_78 { pt3dadd( -24.3857, 68.4866, -25.5978, 0.74 ) }
    dend_78 { pt3dadd( -25.2459, 68.7367, -26.0255, 0.74 ) }
    dend_78 { pt3dadd( -25.8198, 68.8712, -26.3737, 0.52 ) }
    dend_78 { pt3dadd( -27.0894, 69.1123, -27.3114, 0.52 ) }
    dend_78 { pt3dadd( -28.1639, 69.2738, -28.2008, 0.52 ) }
    dend_78 { pt3dadd( -29.2596, 69.4018, -29.1503, 1.11 ) }
    dend_78 { pt3dadd( -29.8554, 69.4568, -29.6497, 1.4 ) }
    dend_78 { pt3dadd( -30.532, 69.4999, -30.1576, 1.4 ) }
    dend_78 { pt3dadd( -31.6884, 69.5302, -30.8787, 0.81 ) }
    dend_78 { pt3dadd( -32.4015, 69.5453, -31.1703, 0.59 ) }
    dend_78 { pt3dadd( -33.4752, 69.5977, -31.3996, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -34.5539, 69.7001, -31.4619, 0.44 ) }
    dend_78 { pt3dadd( -35.6478, 69.8717, -31.4298, 0.74 ) }
    dend_78 { pt3dadd( -36.693, 70.1581, -31.348, 1.33 ) }
    dend_78 { pt3dadd( -37.9643, 70.722, -31.2742, 0.88 ) }
    dend_78 { pt3dadd( -38.5278, 71.0992, -31.353, 0.59 ) }
    dend_78 { pt3dadd( -38.8768, 71.43, -31.4958, 0.59 ) }
    dend_78 { pt3dadd( -39.368, 72.0153, -31.855, 0.74 ) }
    dend_78 { pt3dadd( -39.9757, 72.8362, -32.4834, 0.96 ) }
    dend_78 { pt3dadd( -40.7601, 73.9046, -33.4451, 0.59 ) }
    dend_78 { pt3dadd( -41.5719, 74.9478, -34.5143, 0.59 ) }
    dend_78 { pt3dadd( -41.9943, 75.4718, -35.048, 0.81 ) }
    dend_78 { pt3dadd( -42.5278, 76.0712, -35.6331, 0.96 ) }
    dend_78 { pt3dadd( -43.0391, 76.5575, -36.0711, 1.03 ) }
    dend_78 { pt3dadd( -43.9051, 77.2969, -36.626, 0.66 ) }
    dend_78 { pt3dadd( -44.1703, 77.5312, -36.7636, 0.66 ) }
    dend_78 { pt3dadd( -44.8828, 78.2685, -37.1067, 0.81 ) }
    dend_78 { pt3dadd( -45.5113, 79.0666, -37.4768, 0.81 ) }
    dend_78 { pt3dadd( -45.9892, 79.8904, -37.8405, 0.66 ) }
    dend_78 { pt3dadd( -46.3786, 80.7676, -38.2118, 0.66 ) }
    dend_78 { pt3dadd( -46.8634, 82.1321, -38.7788, 0.52 ) }
    dend_78 { pt3dadd( -47.1406, 82.9841, -39.1443, 0.81 ) }
    dend_78 { pt3dadd( -47.3446, 83.6193, -39.4285, 0.74 ) }
    dend_78 { pt3dadd( -47.8379, 84.9823, -40.0313, 0.59 ) }
    dend_78 { pt3dadd( -48.1388, 85.6485, -40.3013, 0.74 ) }
    dend_78 { pt3dadd( -48.5411, 86.3079, -40.5349, 0.96 ) }
    dend_78 { pt3dadd( -49.1622, 87.0999, -40.7199, 0.96 ) }
    dend_78 { pt3dadd( -49.7058, 87.7115, -40.8092, 0.74 ) }
    dend_78 { pt3dadd( -50.4583, 88.506, -40.8707, 1.03 ) }
    dend_78 { pt3dadd( -51.0014, 89.0624, -40.8222, 1.25 ) }
    dend_78 { pt3dadd( -51.3824, 89.4837, -40.7442, 0.81 ) }
    dend_78 { pt3dadd( -52.1907, 90.4783, -40.4936, 0.59 ) }
    dend_78 { pt3dadd( -52.6833, 91.1532, -40.2862, 0.66 ) }
    dend_78 { pt3dadd( -53.092, 91.765, -40.0784, 0.66 ) }
    dend_78 { pt3dadd( -54.152, 93.4584, -39.46, 0.88 ) }
    dend_78 { pt3dadd( -54.6895, 94.3258, -39.1185, 1.11 ) }
    dend_78 { pt3dadd( -55.0589, 94.919, -38.8614, 1.03 ) }
    dend_78 { pt3dadd( -55.5083, 95.6351, -38.5415, 1.25 ) }
    dend_78 { pt3dadd( -55.6762, 95.9012, -38.4118, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.92519, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.87511, 10.6143, -4.83147, 1.11 ) }
    dend_53 { pt3dadd( 5.40999, 11.1645, -5.18839, 1.11 ) }
    dend_53 { pt3dadd( 6.26335, 12.0848, -5.75728, 1.11 ) }
    dend_53 { pt3dadd( 6.84867, 12.7477, -6.18555, 0.96 ) }
    dend_53 { pt3dadd( 7.81817, 13.732, -6.81839, 1.55 ) }
    dend_53 { pt3dadd( 8.66137, 14.5189, -7.32771, 1.62 ) }
    dend_53 { pt3dadd( 9.15794, 14.9323, -7.60579, 1.62 ) }
    dend_53 { pt3dadd( 9.92532, 15.5058, -7.94361, 1.25 ) }
    dend_53 { pt3dadd( 11.2119, 16.368, -8.33855, 0.96 ) }
    dend_53 { pt3dadd( 13.1773, 17.5527, -8.69693, 0.88 ) }
    dend_53 { pt3dadd( 14.0999, 18.0341, -8.75292, 1.55 ) }
    dend_53 { pt3dadd( 15.1072, 18.4874, -8.72861, 1.84 ) }
    dend_53 { pt3dadd( 16.6181, 19.0962, -8.61026, 1.11 ) }
    dend_53 { pt3dadd( 17.4112, 19.402, -8.50642, 1.03 ) }
    dend_53 { pt3dadd( 18.2987, 19.7793, -8.33357, 1.25 ) }
    dend_53 { pt3dadd( 19.1572, 20.2528, -8.15364, 0.88 ) }
    dend_53 { pt3dadd( 19.9489, 20.7945, -7.9884, 0.88 ) }
    dend_53 { pt3dadd( 20.6902, 21.3861, -7.83579, 0.88 ) }
    dend_53 { pt3dadd( 21.5607, 22.1223, -7.65062, 0.88 ) }
    dend_53 { pt3dadd( 22.305, 22.7926, -7.41088, 0.96 ) }
    dend_53 { pt3dadd( 23.0753, 23.5434, -7.12308, 0.96 ) }
    dend_53 { pt3dadd( 23.7781, 24.3035, -6.80969, 0.81 ) }
    dend_53 { pt3dadd( 24.8124, 25.4909, -6.25745, 1.11 ) }
    dend_53 { pt3dadd( 25.4906, 26.2433, -5.82818, 1.4 ) }
    dend_53 { pt3dadd( 26.2721, 26.9982, -5.24756, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.55044, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.75079, 9.13498, 2.95303, 1.62 ) }
    dend_50 { pt3dadd( 5.95377, 9.835, 4.03642, 1.25 ) }
    dend_50 { pt3dadd( 8.14227, 10.8121, 6.2336, 1.25 ) }
    dend_50 { pt3dadd( 9.29957, 11.2564, 7.47346, 1.25 ) }
    dend_50 { pt3dadd( 10.5071, 11.5718, 8.92185, 1.92 ) }
    dend_50 { pt3dadd( 11.0181, 11.6585, 9.57258, 2.5 ) }
    dend_50 { pt3dadd( 12.1293, 11.6879, 11.1107, 2.5 ) }
    dend_50 { pt3dadd( 14.4277, 11.4111, 14.5312, 1.77 ) }
    dend_50 { pt3dadd( 16.0219, 10.9252, 16.8984, 0.96 ) }
    dend_50 { pt3dadd( 18.2713, 10.0005, 20.2303, 0.88 ) }
    dend_50 { pt3dadd( 18.9143, 9.70085, 21.1979, 0.88 ) }
    dend_50 { pt3dadd( 19.4216, 9.47371, 21.9384, 1.4 ) }
    dend_50 { pt3dadd( 19.9231, 9.28708, 22.5855, 1.4 ) }
    dend_50 { pt3dadd( 21.7522, 8.88559, 24.4381, 0.66 ) }
    dend_50 { pt3dadd( 22.528, 8.93042, 25.057, 0.66 ) }
    dend_50 { pt3dadd( 24.3703, 9.64675, 26.1476, 0.88 ) }
    dend_50 { pt3dadd( 25.5279, 10.2826, 26.739, 0.88 ) }
    dend_50 { pt3dadd( 26.9817, 11.2319, 27.3148, 0.74 ) }
    dend_50 { pt3dadd( 28.0653, 12.0357, 27.6395, 1.4 ) }
    dend_50 { pt3dadd( 29.3126, 13.0402, 27.8666, 2.06 ) }
    dend_50 { pt3dadd( 30.5408, 13.9983, 27.9621, 1.84 ) }
    dend_50 { pt3dadd( 32.0136, 15.0942, 27.8782, 1.18 ) }
    dend_50 { pt3dadd( 33.5461, 16.1519, 27.8319, 1.18 ) }
    dend_50 { pt3dadd( 34.1683, 16.527, 27.9199, 1.03 ) }
    dend_50 { pt3dadd( 35.2085, 17.0305, 28.3518, 1.03 ) }
    dend_50 { pt3dadd( 35.8967, 17.3035, 29.0457, 0.59 ) }
    dend_50 { pt3dadd( 36.5357, 17.5925, 30.0693, 0.59 ) }
    dend_50 { pt3dadd( 37.7879, 18.2613, 32.6195, 0.88 ) }
    dend_50 { pt3dadd( 39.2444, 19.1679, 35.9741, 1.62 ) }
    dend_50 { pt3dadd( 39.8703, 19.6123, 37.4329, 1.62 ) }
    dend_50 { pt3dadd( 41.3267, 20.733, 40.8067, 0.88 ) }
    dend_50 { pt3dadd( 42.0051, 21.2535, 42.2769, 0.88 ) }
    dend_50 { pt3dadd( 42.6308, 21.7499, 43.4928, 1.47 ) }
    dend_50 { pt3dadd( 43.0705, 22.1034, 44.1901, 1.47 ) }
    dend_50 { pt3dadd( 44.2016, 22.9429, 45.5497, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 44.8325, 23.3282, 46.1584, 0.59 ) }
    dend_50 { pt3dadd( 45.5071, 23.6407, 46.69, 0.59 ) }
    dend_50 { pt3dadd( 47.1531, 24.3191, 48.0018, 1.25 ) }
    dend_50 { pt3dadd( 49.7415, 25.4219, 50.1602, 0.74 ) }
    dend_50 { pt3dadd( 50.5524, 25.8463, 50.9167, 0.29 ) }
    dend_50 { pt3dadd( 51.274, 26.2569, 51.6812, 0.29 ) }
    dend_50 { pt3dadd( 51.6872, 26.4926, 52.1799, 0.59 ) }
    dend_50 { pt3dadd( 52.7813, 27.1392, 53.5284, 1.11 ) }
    dend_50 { pt3dadd( 53.3342, 27.4258, 54.1899, 1.11 ) }
    dend_50 { pt3dadd( 54.5206, 28.4474, 55.6103, 1.11 ) }
    dend_50 { pt3dadd( 55.1909, 29.3769, 56.7395, 0.59 ) }
    dend_50 { pt3dadd( 55.2092, 26.7113, 56.9253, 0.59 ) }
    dend_50 { pt3dadd( 55.4388, 23.9627, 57.6166, 0.52 ) }
    dend_50 { pt3dadd( 55.5976, 22.0429, 58.0946, 0.59 ) }
    dend_50 { pt3dadd( 65.7977, 25.2299, 67.1866, 0.59 ) }
    dend_50 { pt3dadd( 76.4952, 29.6391, 75.0928, 0.59 ) }
    dend_50 { pt3dadd( 85.3361, 36.0208, 83.8328, 0.59 ) }
    dend_50 { pt3dadd( 94.0951, 43.6931, 91.4979, 0.59 ) }
    dend_50 { pt3dadd( 104.28, 51.9257, 96.2275, 0.59 ) }
    dend_50 { pt3dadd( 113.455, 60.5905, 102.078, 0.59 ) }
    dend_50 { pt3dadd( 123.137, 67.7289, 109.154, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.29904, 6.70815, 2.07815, 1.69 ) }
    dend_49 { pt3dadd( -5.19782, 7.13768, 2.72057, 1.4 ) }
    dend_49 { pt3dadd( -5.83548, 7.41558, 3.31251, 1.03 ) }
    dend_49 { pt3dadd( -6.70945, 7.81793, 4.22011, 0.88 ) }
    dend_49 { pt3dadd( -7.31233, 8.12113, 4.88784, 0.88 ) }
    dend_49 { pt3dadd( -8.0733, 8.47904, 5.848, 0.59 ) }
    dend_49 { pt3dadd( -8.76548, 8.79844, 6.8147, 0.44 ) }
    dend_49 { pt3dadd( -10.0403, 9.3814, 8.72072, 0.37 ) }
    dend_49 { pt3dadd( -10.4798, 9.585, 9.40318, 0.37 ) }
    dend_49 { pt3dadd( -11.1958, 9.92561, 10.5433, 0.37 ) }
    dend_49 { pt3dadd( -12.8864, 10.7767, 13.3707, 1.03 ) }
    dend_49 { pt3dadd( -13.271, 10.9924, 14.0373, 1.62 ) }
    dend_49 { pt3dadd( -23.3733, 12.1056, 21.9386, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.17031, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.30514, -2.11125, -14.5787, 0.74 ) }
    dend_44 { pt3dadd( -6.98416, -3.17433, -14.5697, 1.03 ) }
    dend_44 { pt3dadd( -8.45272, -4.08588, -14.5921, 1.25 ) }
    dend_44 { pt3dadd( -9.62704, -4.82563, -14.623, 1.62 ) }
    dend_44 { pt3dadd( -10.5893, -5.4216, -14.6532, 1.84 ) }
    dend_44 { pt3dadd( -11.8512, -6.15707, -14.6616, 1.84 ) }
    dend_44 { pt3dadd( -12.9689, -6.73179, -14.6109, 1.99 ) }
    dend_44 { pt3dadd( -14.1434, -7.25219, -14.499, 2.21 ) }
    dend_44 { pt3dadd( -15.5156, -7.75695, -14.3005, 2.65 ) }
    dend_44 { pt3dadd( -16.489, -8.05625, -14.1446, 2.5 ) }
    dend_44 { pt3dadd( -18.1338, -8.49858, -13.8946, 1.77 ) }
    dend_44 { pt3dadd( -19.8757, -8.94491, -13.6861, 1.33 ) }
    dend_44 { pt3dadd( -21.0601, -9.25644, -13.63, 1.18 ) }
    dend_44 { pt3dadd( -22.4643, -9.64021, -13.7193, 1.11 ) }
    dend_44 { pt3dadd( -23.4622, -9.94758, -14.0013, 1.11 ) }
    dend_44 { pt3dadd( -24.4903, -10.3088, -14.6293, 1.11 ) }
    dend_44 { pt3dadd( -25.4724, -10.6828, -15.5928, 1.4 ) }
    dend_44 { pt3dadd( -26.45, -11.0345, -16.8383, 1.03 ) }
    dend_44 { pt3dadd( -27.2733, -11.297, -18.0451, 0.88 ) }
    dend_44 { pt3dadd( -28.4985, -11.598, -20.0222, 0.88 ) }
    dend_44 { pt3dadd( -29.8223, -11.8071, -22.3571, 1.47 ) }
    dend_44 { pt3dadd( -30.8238, -11.9003, -24.2089, 1.77 ) }
    dend_44 { pt3dadd( -31.9448, -11.9187, -26.3633, 1.84 ) }
    dend_44 { pt3dadd( -32.3413, -11.8953, -27.1452, 2.06 ) }
    dend_44 { pt3dadd( -33.0594, -11.8067, -28.5997, 1.77 ) }
    dend_44 { pt3dadd( -34.1658, -11.5781, -30.7852, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.32124, -1.86714, 9.60607, 2.06 ) }
    dend_41 { pt3dadd( -7.03819, -1.83037, 9.95639, 2.06 ) }
    dend_41 { pt3dadd( -8.89851, -1.85797, 10.8215, 1.84 ) }
    dend_41 { pt3dadd( -9.93419, -1.95113, 11.2891, 1.84 ) }
    dend_41 { pt3dadd( -10.7265, -2.08055, 11.643, 1.99 ) }
    dend_41 { pt3dadd( -12.1522, -2.42984, 12.2782, 1.55 ) }
    dend_41 { pt3dadd( -13.3122, -2.84487, 12.7819, 1.03 ) }
    dend_41 { pt3dadd( -14.2498, -3.28944, 13.1578, 0.88 ) }
    dend_41 { pt3dadd( -15.1603, -3.84599, 13.4219, 1.18 ) }
    dend_41 { pt3dadd( -15.8961, -4.35306, 13.5825, 1.18 ) }
    dend_41 { pt3dadd( -16.4601, -4.77766, 13.6758, 1.47 ) }
    dend_41 { pt3dadd( -17.2972, -5.47156, 13.7488, 1.25 ) }
    dend_41 { pt3dadd( -18.1213, -6.18345, 13.8576, 1.03 ) }
    dend_41 { pt3dadd( -18.8645, -6.81772, 14.024, 1.62 ) }
    dend_41 { pt3dadd( -19.6089, -7.43857, 14.3005, 1.69 ) }
    dend_41 { pt3dadd( -20.1829, -7.88874, 14.5959, 1.33 ) }
    dend_41 { pt3dadd( -21.2081, -8.62903, 15.2935, 1.03 ) }
    dend_41 { pt3dadd( -22.4708, -9.39248, 16.392, 0.88 ) }
    dend_41 { pt3dadd( -23.3537, -9.79823, 17.3703, 1.11 ) }
    dend_41 { pt3dadd( -24.1187, -10.0007, 18.3748, 1.33 ) }
    dend_41 { pt3dadd( -24.5957, -10.0212, 19.0809, 1.33 ) }
    dend_41 { pt3dadd( -25.066, -9.9021, 19.8102, 1.18 ) }
    dend_41 { pt3dadd( -25.6256, -9.58798, 20.6532, 0.88 ) }
    dend_41 { pt3dadd( -26.4214, -9.00481, 21.6818, 1.18 ) }
    dend_41 { pt3dadd( -26.9178, -8.65353, 22.2403, 1.33 ) }
    dend_41 { pt3dadd( -27.3552, -8.4235, 22.676, 1.33 ) }
    dend_41 { pt3dadd( -28.1095, -8.20907, 23.3825, 0.59 ) }
    dend_41 { pt3dadd( -29.144, -8.26252, 24.2617, 0.52 ) }
    dend_41 { pt3dadd( -29.6689, -8.57363, 24.6455, 0.59 ) }
    dend_41 { pt3dadd( -30.4007, -9.54281, 25.2232, 0.59 ) }
    dend_41 { pt3dadd( -31.1055, -10.8756, 25.9258, 0.59 ) }
    dend_41 { pt3dadd( -31.4709, -11.6702, 26.3363, 1.03 ) }
    dend_41 { pt3dadd( -31.8892, -12.6624, 26.8958, 1.03 ) }
    dend_41 { pt3dadd( -32.2351, -13.4877, 27.4079, 1.03 ) }
    dend_41 { pt3dadd( -32.8871, -14.8666, 28.4527, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -33.5052, -15.7762, 29.4418, 0.66 ) }
    dend_41 { pt3dadd( -34.0258, -16.1959, 30.2027, 0.66 ) }
    dend_41 { pt3dadd( -34.9434, -16.5434, 31.4084, 0.74 ) }
    dend_41 { pt3dadd( -35.592, -16.6535, 32.2039, 0.81 ) }
    dend_41 { pt3dadd( -36.1955, -16.6943, 32.9163, 0.52 ) }
    dend_41 { pt3dadd( -37.289, -16.7098, 34.106, 0.52 ) }
    dend_41 { pt3dadd( -37.7574, -16.743, 34.6206, 0.44 ) }
    dend_41 { pt3dadd( -38.4393, -17.0353, 35.5273, 0.37 ) }
    dend_41 { pt3dadd( -38.7672, -17.488, 36.0589, 0.37 ) }
    dend_41 { pt3dadd( -39.0714, -18.1747, 36.6023, 1.11 ) }
    dend_41 { pt3dadd( -39.3311, -18.8793, 37.027, 1.4 ) }
    dend_41 { pt3dadd( -39.5811, -19.8072, 37.4847, 1.4 ) }
    dend_41 { pt3dadd( -39.8884, -21.2158, 38.1156, 0.81 ) }
    dend_41 { pt3dadd( -40.0954, -22.2766, 38.5381, 0.29 ) }
    dend_41 { pt3dadd( -40.2799, -22.9781, 38.8292, 0.29 ) }
    dend_41 { pt3dadd( -40.4979, -23.5413, 39.0779, 0.29 ) }
    dend_41 { pt3dadd( -46.497, -27.4892, 45.7495, 0.29 ) }
    dend_41 { pt3dadd( -53.7572, -31.5358, 50.9419, 0.29 ) }
    dend_41 { pt3dadd( -60.3994, -35.5735, 56.9107, 0.29 ) }
    dend_41 { pt3dadd( -66.5634, -38.361, 64.0331, 0.29 ) }
    dend_41 { pt3dadd( -72.7421, -41.2722, 71.0903, 0.29 ) }
    dend_41 { pt3dadd( -79.8509, -45.5953, 76.2575, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.17776, -6.83723, 7.00685, 1.77 ) }
    dend_32 { pt3dadd( -2.14618, -8.93041, 7.26173, 1.47 ) }
    dend_32 { pt3dadd( -2.12877, -11.037, 7.49236, 1.25 ) }
    dend_32 { pt3dadd( -2.15851, -12.6462, 7.64819, 1.62 ) }
    dend_32 { pt3dadd( -2.21792, -14.004, 7.76561, 1.92 ) }
    dend_32 { pt3dadd( -2.29938, -15.1883, 7.86954, 2.14 ) }
    dend_32 { pt3dadd( -2.44697, -16.6629, 7.99643, 2.14 ) }
    dend_32 { pt3dadd( -2.75125, -18.7097, 8.17268, 1.55 ) }
    dend_32 { pt3dadd( -3.13855, -20.6348, 8.3269, 1.33 ) }
    dend_32 { pt3dadd( -3.48931, -22.0934, 8.45676, 1.55 ) }
    dend_32 { pt3dadd( -3.74981, -23.0146, 8.54187, 1.92 ) }
    dend_32 { pt3dadd( -4.11997, -24.132, 8.68439, 2.21 ) }
    dend_32 { pt3dadd( -4.39721, -24.8684, 8.79995, 2.5 ) }
    dend_32 { pt3dadd( -4.72138, -25.7376, 8.96585, 2.5 ) }
    dend_32 { pt3dadd( -5.01936, -26.6962, 9.16398, 2.36 ) }
    dend_32 { pt3dadd( -5.33994, -28.0116, 9.44346, 1.69 ) }
    dend_32 { pt3dadd( -5.64808, -29.7362, 9.79541, 1.25 ) }
    dend_32 { pt3dadd( -5.80481, -31.3477, 10.1127, 1.4 ) }
    dend_32 { pt3dadd( -5.81144, -32.7778, 10.36, 1.62 ) }
    dend_32 { pt3dadd( -5.6503, -34.5232, 10.6216, 2.06 ) }
    dend_32 { pt3dadd( -5.45412, -35.5989, 10.7705, 2.36 ) }
    dend_32 { pt3dadd( -5.25568, -36.2963, 10.8544, 2.36 ) }
    dend_32 { pt3dadd( -4.7661, -37.6255, 10.9892, 2.14 ) }
    dend_32 { pt3dadd( -3.9689, -39.4906, 11.1627, 1.62 ) }
    dend_32 { pt3dadd( -3.26542, -41.0616, 11.2914, 1.25 ) }
    dend_32 { pt3dadd( -2.54386, -42.6824, 11.4412, 1.03 ) }
    dend_32 { pt3dadd( -1.77367, -44.5046, 11.6465, 1.03 ) }
    dend_32 { pt3dadd( -1.19996, -46.0306, 11.8568, 1.03 ) }
    dend_32 { pt3dadd( -0.57536, -48.0059, 12.1999, 1.03 ) }
    dend_32 { pt3dadd( -0.303001, -49.1823, 12.4498, 0.96 ) }
    dend_32 { pt3dadd( -0.22038, -50.1116, 12.6791, 0.96 ) }
    dend_32 { pt3dadd( -0.332512, -50.9401, 12.9082, 0.96 ) }
    dend_32 { pt3dadd( -0.848134, -52.0312, 13.2896, 0.96 ) }
    dend_32 { pt3dadd( -1.35242, -52.6241, 13.5294, 0.88 ) }
    dend_32 { pt3dadd( -1.88143, -53.0624, 13.7173, 1.18 ) }
    dend_32 { pt3dadd( -2.73544, -53.6708, 13.9569, 1.18 ) }
    dend_32 { pt3dadd( -3.56271, -54.2268, 14.1692, 1.33 ) }
    dend_32 { pt3dadd( -4.51522, -54.8574, 14.434, 1.33 ) }
    dend_32 { pt3dadd( -5.33417, -55.4073, 14.6905, 1.4 ) }
    dend_32 { pt3dadd( -6.21208, -56.0344, 15.0076, 1.55 ) }
    dend_32 { pt3dadd( -7.05301, -56.6985, 15.3809, 1.55 ) }
    dend_32 { pt3dadd( -8.00483, -57.6058, 15.9169, 1.84 ) }
    dend_32 { pt3dadd( -8.58124, -58.2684, 16.2971, 2.14 ) }
    dend_32 { pt3dadd( -9.14579, -59.0672, 16.705, 1.99 ) }
    dend_32 { pt3dadd( -9.93319, -60.51, 17.3571, 0.88 ) }
    dend_32 { pt3dadd( -10.4708, -61.8423, 17.8698, 0.88 ) }
    dend_32 { pt3dadd( -10.9241, -63.4162, 18.3812, 0.81 ) }
    dend_32 { pt3dadd( -11.1779, -64.8076, 18.7283, 0.74 ) }
    dend_32 { pt3dadd( -11.4134, -66.5644, 19.1095, 0.74 ) }
    dend_32 { pt3dadd( -11.5288, -68.2057, 19.4134, 1.03 ) }
    dend_32 { pt3dadd( -11.5243, -69.6803, 19.6086, 1.4 ) }
    dend_32 { pt3dadd( -11.4728, -70.5978, 19.6802, 1.69 ) }
    dend_32 { pt3dadd( -11.3664, -71.6264, 19.7085, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.8589, -11.0232, -2.326, 3.39 ) }
    dend_0 { pt3dadd( 2.19521, -12.0501, -2.46992, 3.02 ) }
    dend_0 { pt3dadd( 2.53574, -13.0898, -2.61564, 3.02 ) }
    dend_0 { pt3dadd( 2.98352, -14.457, -2.80726, 3.02 ) }
    dend_0 { pt3dadd( 3.46451, -15.9257, -3.0131, 3.24 ) }
    dend_0 { pt3dadd( 3.82724, -17.0086, -3.18109, 3.54 ) }
    dend_0 { pt3dadd( 4.23906, -18.1755, -3.40448, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -55.6762, 95.9012, -38.4118, 0.44 ) }
    dend_88 { pt3dadd( -57.044, 97.3039, -39.4725, 0.44 ) }
    dend_88 { pt3dadd( -57.669, 97.9899, -39.9309, 0.37 ) }
    dend_88 { pt3dadd( -57.9668, 98.3713, -40.0916, 0.66 ) }
    dend_88 { pt3dadd( -58.4443, 99.0656, -40.29, 0.66 ) }
    dend_88 { pt3dadd( -58.9182, 99.8523, -40.44, 0.59 ) }
    dend_88 { pt3dadd( -59.2206, 100.447, -40.515, 0.81 ) }
    dend_88 { pt3dadd( -59.4944, 101.191, -40.4852, 0.81 ) }
    dend_88 { pt3dadd( -59.8463, 102.921, -40.316, 0.52 ) }
    dend_88 { pt3dadd( -59.8645, 103.748, -40.2091, 0.52 ) }
    dend_88 { pt3dadd( -59.6537, 105.038, -40.0408, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -59.2256, 106.277, -39.9133, 0.44 ) }
    dend_88 { pt3dadd( -58.5892, 107.485, -39.8368, 0.74 ) }
    dend_88 { pt3dadd( -57.9985, 108.336, -39.8068, 0.74 ) }
    dend_88 { pt3dadd( -56.9885, 109.524, -39.8282, 0.44 ) }
    dend_88 { pt3dadd( -56.2184, 110.353, -39.823, 0.59 ) }
    dend_88 { pt3dadd( -55.4405, 111.167, -39.8247, 0.59 ) }
    dend_88 { pt3dadd( -54.657, 112.013, -39.8549, 0.59 ) }
    dend_88 { pt3dadd( -54.0423, 112.756, -39.9199, 0.37 ) }
    dend_88 { pt3dadd( -53.5932, 113.347, -39.9937, 0.37 ) }
    dend_88 { pt3dadd( -52.9141, 114.281, -40.1317, 0.59 ) }
    dend_88 { pt3dadd( -52.2395, 115.178, -40.2816, 0.37 ) }
    dend_88 { pt3dadd( -51.6275, 115.955, -40.4175, 0.81 ) }
    dend_88 { pt3dadd( -50.9832, 116.743, -40.568, 0.81 ) }
    dend_88 { pt3dadd( -49.7983, 118.195, -40.8825, 0.44 ) }
    dend_88 { pt3dadd( -48.8862, 119.338, -41.1444, 0.44 ) }
    dend_88 { pt3dadd( -48.2372, 120.135, -41.3622, 0.81 ) }
    dend_88 { pt3dadd( -47.5773, 120.95, -41.5968, 0.44 ) }
    dend_88 { pt3dadd( -47.2173, 121.418, -41.7466, 0.59 ) }
    dend_88 { pt3dadd( -46.3501, 122.613, -42.1874, 0.59 ) }
    dend_88 { pt3dadd( -45.8156, 123.473, -42.6137, 0.44 ) }
    dend_88 { pt3dadd( -45.2396, 124.666, -43.2993, 0.44 ) }
    dend_88 { pt3dadd( -44.8494, 125.69, -44.0302, 0.96 ) }
    dend_88 { pt3dadd( -44.7039, 126.174, -44.4493, 1.18 ) }
    dend_88 { pt3dadd( -44.609, 126.62, -44.8993, 1.18 ) }
    dend_88 { pt3dadd( -44.4543, 127.827, -46.5958, 0.44 ) }
    dend_88 { pt3dadd( -44.4379, 128.689, -47.9993, 0.37 ) }
    dend_88 { pt3dadd( -44.4246, 129.4, -49.4792, 0.66 ) }
    dend_88 { pt3dadd( -44.4214, 129.698, -50.1805, 0.66 ) }
    dend_88 { pt3dadd( -44.4233, 130.146, -51.3077, 0.66 ) }
    dend_88 { pt3dadd( -44.3332, 131.823, -55.8005, 0.44 ) }
    dend_88 { pt3dadd( -44.3031, 132.104, -56.6015, 0.44 ) }
    dend_88 { pt3dadd( -44.0912, 133.569, -60.8574, 0.29 ) }
    dend_88 { pt3dadd( -44.0467, 133.906, -61.7571, 0.29 ) }
    dend_88 { pt3dadd( -43.991, 134.325, -62.775, 0.29 ) }
    dend_88 { pt3dadd( -43.8688, 135.329, -64.9127, 0.74 ) }
    dend_88 { pt3dadd( -43.7416, 136.701, -67.2941, 0.44 ) }
    dend_88 { pt3dadd( -43.7111, 137.054, -67.8031, 0.44 ) }
    dend_88 { pt3dadd( -43.691, 137.916, -68.7153, 0.37 ) }
    dend_88 { pt3dadd( -43.6949, 138.81, -69.5098, 0.88 ) }
    dend_88 { pt3dadd( -43.7938, 140.283, -70.4872, 0.29 ) }
    dend_88 { pt3dadd( -43.8971, 140.874, -70.7675, 0.52 ) }
    dend_88 { pt3dadd( -44.1791, 141.938, -71.1842, 0.15 ) }
    dend_88 { pt3dadd( -44.4744, 142.872, -71.5866, 0.22 ) }
    dend_88 { pt3dadd( -44.98, 144.329, -72.2334, 0.22 ) }
    dend_88 { pt3dadd( -45.4903, 145.589, -72.7795, 0.22 ) }
    dend_88 { pt3dadd( -45.9864, 146.768, -73.2583, 0.22 ) }
    dend_88 { pt3dadd( -46.747, 148.497, -74.0302, 1.47 ) }
    dend_88 { pt3dadd( -47.3133, 149.769, -74.666, 0.66 ) }
    dend_88 { pt3dadd( -47.6563, 150.588, -75.0895, 0.96 ) }
    dend_88 { pt3dadd( -48.174, 151.951, -75.7723, 0.22 ) }
    dend_88 { pt3dadd( -48.511, 152.868, -76.1643, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -55.6762, 95.9012, -38.4118, 0.37 ) }
    dend_79 { pt3dadd( -55.4994, 98.0239, -37.9903, 0.37 ) }
    dend_79 { pt3dadd( -55.3029, 99.0765, -37.8822, 0.37 ) }
    dend_79 { pt3dadd( -55.14, 100.074, -37.6813, 0.37 ) }
    dend_79 { pt3dadd( -55.0091, 101.565, -37.2539, 0.74 ) }
    dend_79 { pt3dadd( -55.0177, 102.826, -36.8359, 0.29 ) }
    dend_79 { pt3dadd( -55.1913, 104.309, -36.3095, 0.29 ) }
    dend_79 { pt3dadd( -55.3036, 105.006, -36.0503, 0.52 ) }
    dend_79 { pt3dadd( -55.6776, 106.537, -35.2278, 0.44 ) }
    dend_79 { pt3dadd( -55.9689, 107.51, -34.5956, 0.29 ) }
    dend_79 { pt3dadd( -56.2246, 108.359, -34.0054, 0.29 ) }
    dend_79 { pt3dadd( -56.4778, 109.302, -33.3123, 0.29 ) }
    dend_79 { pt3dadd( -56.7895, 110.894, -32.1836, 0.44 ) }
    dend_79 { pt3dadd( -56.9597, 112.187, -31.2939, 0.44 ) }
    dend_79 { pt3dadd( -57.003, 113.831, -30.2802, 0.52 ) }
    dend_79 { pt3dadd( -56.8833, 115.141, -29.4998, 0.37 ) }
    dend_79 { pt3dadd( -56.6692, 116.187, -28.8869, 0.37 ) }
    dend_79 { pt3dadd( -56.3115, 117.314, -28.2753, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 26.2721, 26.9982, -5.24756, 0.29 ) }
    dend_69 { pt3dadd( 27.5629, 26.5373, -3.49397, 0.29 ) }
    dend_69 { pt3dadd( 28.7709, 26.1676, -2.06117, 0.59 ) }
    dend_69 { pt3dadd( 29.9527, 25.8097, -0.831879, 0.74 ) }
    dend_69 { pt3dadd( 30.5998, 25.6225, -0.211883, 0.37 ) }
    dend_69 { pt3dadd( 31.5957, 25.3613, 0.810014, 0.37 ) }
    dend_69 { pt3dadd( 32.1489, 25.2291, 1.4216, 0.66 ) }
    dend_69 { pt3dadd( 32.5617, 25.1769, 1.90545, 0.96 ) }
    dend_69 { pt3dadd( 33.1564, 25.1522, 2.83614, 1.25 ) }
    dend_69 { pt3dadd( 34.0539, 25.2123, 4.61569, 0.37 ) }
    dend_69 { pt3dadd( 34.8661, 25.4022, 6.4931, 0.37 ) }
    dend_69 { pt3dadd( 35.1329, 25.5013, 7.15246, 0.37 ) }
    dend_69 { pt3dadd( 35.7156, 25.744, 8.49336, 0.74 ) }
    dend_69 { pt3dadd( 36.7602, 26.153, 10.5256, 0.66 ) }
    dend_69 { pt3dadd( 37.6246, 26.4635, 11.8914, 0.52 ) }
    dend_69 { pt3dadd( 38.3092, 26.6376, 12.6566, 0.66 ) }
    dend_69 { pt3dadd( 39.1581, 26.7601, 13.2966, 0.66 ) }
    dend_69 { pt3dadd( 40.3197, 26.8529, 13.9464, 0.37 ) }
    dend_69 { pt3dadd( 41.6677, 26.87, 14.4903, 0.52 ) }
    dend_69 { pt3dadd( 42.4188, 26.8293, 14.7233, 0.52 ) }
    dend_69 { pt3dadd( 43.7298, 26.7133, 15.0941, 0.66 ) }
    dend_69 { pt3dadd( 44.4659, 26.6246, 15.2902, 0.88 ) }
    dend_69 { pt3dadd( 45.4461, 26.5108, 15.5285, 0.88 ) }
    dend_69 { pt3dadd( 46.5845, 26.4159, 15.857, 0.66 ) }
    dend_69 { pt3dadd( 48.0101, 26.3702, 16.2966, 0.29 ) }
    dend_69 { pt3dadd( 49.2586, 26.4026, 16.6758, 0.29 ) }
    dend_69 { pt3dadd( 51.1492, 26.6142, 17.2318, 0.88 ) }
    dend_69 { pt3dadd( 51.6727, 26.6956, 17.384, 0.88 ) }
    dend_69 { pt3dadd( 53.7694, 27.098, 17.9647, 0.29 ) }
    dend_69 { pt3dadd( 55.386, 27.4711, 18.3713, 0.29 ) }
    dend_69 { pt3dadd( 56.9309, 27.8818, 18.7195, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 58.7678, 28.4165, 19.102, 0.29 ) }
    dend_69 { pt3dadd( 60.1035, 28.8148, 19.3745, 0.29 ) }
    dend_69 { pt3dadd( 61.3393, 29.1605, 19.5976, 0.81 ) }
    dend_69 { pt3dadd( 62.3098, 29.413, 19.7166, 0.81 ) }
    dend_69 { pt3dadd( 63.1705, 29.6235, 19.8154, 0.81 ) }
    dend_69 { pt3dadd( 64.4745, 29.9137, 19.9571, 0.59 ) }
    dend_69 { pt3dadd( 65.9917, 30.1925, 20.1227, 0.29 ) }
    dend_69 { pt3dadd( 67.3309, 30.4842, 20.2879, 0.81 ) }
    dend_69 { pt3dadd( 68.6535, 30.7758, 20.463, 0.22 ) }
    dend_69 { pt3dadd( 69.8272, 31.0128, 20.6159, 0.22 ) }
    dend_69 { pt3dadd( 70.571, 31.1342, 20.6973, 0.52 ) }
    dend_69 { pt3dadd( 71.5955, 31.2608, 20.7457, 0.22 ) }
    dend_69 { pt3dadd( 82.2537, 32.7665, 26.9443, 0.22 ) }
    dend_69 { pt3dadd( 92.1869, 34.571, 34.1753, 0.22 ) }
    dend_69 { pt3dadd( 103.473, 34.3419, 39.3784, 0.22 ) }
    dend_69 { pt3dadd( 114.658, 31.9812, 44.237, 0.22 ) }
    dend_69 { pt3dadd( 125.83, 31.1172, 49.6134, 0.22 ) }
    dend_69 { pt3dadd( 135.179, 28.6683, 57.4172, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 26.2721, 26.9982, -5.24756, 0.81 ) }
    dend_54 { pt3dadd( 27.6216, 27.0648, -4.89792, 0.81 ) }
    dend_54 { pt3dadd( 28.2577, 27.0303, -4.77282, 1.03 ) }
    dend_54 { pt3dadd( 29.9354, 26.877, -4.60631, 0.96 ) }
    dend_54 { pt3dadd( 30.8513, 26.8051, -4.5638, 0.96 ) }
    dend_54 { pt3dadd( 31.9176, 26.7705, -4.5459, 0.59 ) }
    dend_54 { pt3dadd( 32.6588, 26.7864, -4.54827, 0.66 ) }
    dend_54 { pt3dadd( 33.6507, 26.8166, -4.58357, 0.66 ) }
    dend_54 { pt3dadd( 34.8291, 26.9556, -4.69112, 0.59 ) }
    dend_54 { pt3dadd( 35.4428, 27.1332, -4.81258, 0.81 ) }
    dend_54 { pt3dadd( 36.2189, 27.4973, -4.98072, 0.96 ) }
    dend_54 { pt3dadd( 36.9338, 27.9237, -5.13568, 1.25 ) }
    dend_54 { pt3dadd( 37.4514, 28.2449, -5.23997, 1.4 ) }
    dend_54 { pt3dadd( 38.1044, 28.6328, -5.34256, 1.4 ) }
    dend_54 { pt3dadd( 39.1749, 29.1616, -5.45572, 0.59 ) }
    dend_54 { pt3dadd( 39.6107, 29.3013, -5.49562, 0.59 ) }
    dend_54 { pt3dadd( 40.518, 29.4165, -5.56722, 0.59 ) }
    dend_54 { pt3dadd( 41.5098, 29.3938, -5.63282, 1.03 ) }
    dend_54 { pt3dadd( 42.215, 29.3048, -5.67022, 1.18 ) }
    dend_54 { pt3dadd( 42.831, 29.1754, -5.67041, 1.18 ) }
    dend_54 { pt3dadd( 43.8299, 28.9034, -5.61591, 0.74 ) }
    dend_54 { pt3dadd( 44.7954, 28.615, -5.50095, 0.66 ) }
    dend_54 { pt3dadd( 45.2558, 28.4786, -5.42652, 0.96 ) }
    dend_54 { pt3dadd( 45.8572, 28.326, -5.32363, 0.96 ) }
    dend_54 { pt3dadd( 46.9362, 28.1039, -5.14542, 1.03 ) }
    dend_54 { pt3dadd( 47.4459, 28.0313, -5.06117, 1.03 ) }
    dend_54 { pt3dadd( 48.8635, 27.985, -4.84258, 0.59 ) }
    dend_54 { pt3dadd( 49.6318, 28.044, -4.74076, 0.59 ) }
    dend_54 { pt3dadd( 50.9998, 28.2523, -4.60147, 0.59 ) }
    dend_54 { pt3dadd( 51.6675, 28.4016, -4.55839, 0.81 ) }
    dend_54 { pt3dadd( 52.2893, 28.5978, -4.55, 0.81 ) }
    dend_54 { pt3dadd( 53.5511, 29.0985, -4.59892, 0.37 ) }
    dend_54 { pt3dadd( 54.3415, 29.4422, -4.67746, 0.66 ) }
    dend_54 { pt3dadd( 55.0421, 29.7221, -4.7549, 0.74 ) }
    dend_54 { pt3dadd( 55.4806, 29.8707, -4.81451, 0.74 ) }
    dend_54 { pt3dadd( 56.3353, 30.073, -4.95356, 0.74 ) }
    dend_54 { pt3dadd( 57.2489, 30.1679, -5.12344, 0.52 ) }
    dend_54 { pt3dadd( 58.5166, 30.1358, -5.38147, 0.74 ) }
    dend_54 { pt3dadd( 59.4723, 30.0513, -5.55803, 0.88 ) }
    dend_54 { pt3dadd( 59.9983, 29.9945, -5.62631, 0.96 ) }
    dend_54 { pt3dadd( 60.5237, 29.9419, -5.66066, 1.18 ) }
    dend_54 { pt3dadd( 61.3279, 29.8839, -5.65412, 1.18 ) }
    dend_54 { pt3dadd( 61.9447, 29.8888, -5.58724, 0.66 ) }
    dend_54 { pt3dadd( 63.0511, 30.0688, -5.33407, 0.59 ) }
    dend_54 { pt3dadd( 63.79, 30.2861, -5.0333, 0.59 ) }
    dend_54 { pt3dadd( 64.2851, 30.474, -4.7714, 0.74 ) }
    dend_54 { pt3dadd( 64.6759, 30.6532, -4.52389, 0.74 ) }
    dend_54 { pt3dadd( 65.0643, 30.8509, -4.24476, 0.74 ) }
    dend_54 { pt3dadd( 65.8107, 31.2519, -3.64778, 0.59 ) }
    dend_54 { pt3dadd( 66.8074, 31.81, -2.76963, 0.96 ) }
    dend_54 { pt3dadd( 67.2826, 32.0683, -2.34681, 1.25 ) }
    dend_54 { pt3dadd( 67.5421, 32.2004, -2.10032, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 123.137, 67.7289, 109.154, 0.29 ) }
    dend_52 { pt3dadd( 129.09, 71.3726, 115.473, 0.29 ) }
    dend_52 { pt3dadd( 136.016, 74.604, 120.969, 0.29 ) }
    dend_52 { pt3dadd( 143.407, 78.247, 125.489, 0.29 ) }
    dend_52 { pt3dadd( 149.619, 82.0371, 131.456, 0.29 ) }
    dend_52 { pt3dadd( 155.71, 86.7912, 136.784, 0.29 ) }
    dend_52 { pt3dadd( 160.594, 92.4986, 142.389, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 123.137, 67.7289, 109.154, 0.29 ) }
    dend_51 { pt3dadd( 129.963, 70.956, 114.682, 0.29 ) }
    dend_51 { pt3dadd( 135.472, 75.6634, 120.548, 0.29 ) }
    dend_51 { pt3dadd( 139.823, 80.777, 126.992, 0.29 ) }
    dend_51 { pt3dadd( 145.03, 84.4264, 133.84, 0.29 ) }
    dend_51 { pt3dadd( 149.865, 88.5456, 140.679, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -34.1658, -11.5781, -30.7852, 0.74 ) }
    dend_46 { pt3dadd( -35.848, -12.9903, -31.2927, 0.74 ) }
    dend_46 { pt3dadd( -36.7706, -13.5746, -31.5054, 0.74 ) }
    dend_46 { pt3dadd( -37.5635, -13.9651, -31.6828, 0.74 ) }
    dend_46 { pt3dadd( -38.8479, -14.3399, -32.089, 0.66 ) }
    dend_46 { pt3dadd( -39.8002, -14.471, -32.4661, 0.66 ) }
    dend_46 { pt3dadd( -40.8194, -14.5306, -32.9138, 0.59 ) }
    dend_46 { pt3dadd( -41.5371, -14.4438, -33.2141, 1.25 ) }
    dend_46 { pt3dadd( -42.1272, -14.3187, -33.489, 1.25 ) }
    dend_46 { pt3dadd( -43.9331, -13.8987, -34.4104, 0.66 ) }
    dend_46 { pt3dadd( -44.8287, -13.7189, -34.8968, 0.66 ) }
    dend_46 { pt3dadd( -45.3052, -13.6881, -35.1785, 0.96 ) }
    dend_46 { pt3dadd( -45.9974, -13.7824, -35.6116, 0.96 ) }
    dend_46 { pt3dadd( -46.4712, -13.9625, -36.0421, 0.96 ) }
    dend_46 { pt3dadd( -47.1771, -14.4841, -37.139, 0.74 ) }
    dend_46 { pt3dadd( -47.5428, -14.9069, -37.9979, 0.52 ) }
    dend_46 { pt3dadd( -47.9042, -15.4227, -39.077, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -48.1349, -15.7979, -39.8777, 1.03 ) }
    dend_46 { pt3dadd( -48.9691, -17.2906, -43.1543, 1.25 ) }
    dend_46 { pt3dadd( -49.5344, -18.3365, -45.5311, 0.66 ) }
    dend_46 { pt3dadd( -49.817, -18.8348, -46.7046, 0.66 ) }
    dend_46 { pt3dadd( -49.9995, -19.088, -47.3178, 1.11 ) }
    dend_46 { pt3dadd( -50.1707, -19.2458, -47.6824, 1.33 ) }
    dend_46 { pt3dadd( -50.4283, -19.4215, -47.9898, 1.18 ) }
    dend_46 { pt3dadd( -50.848, -19.6717, -48.1653, 1.18 ) }
    dend_46 { pt3dadd( -51.8129, -20.2409, -48.4218, 0.59 ) }
    dend_46 { pt3dadd( -52.7999, -20.8939, -48.7267, 0.52 ) }
    dend_46 { pt3dadd( -53.5708, -21.4806, -49.0464, 0.52 ) }
    dend_46 { pt3dadd( -54.2018, -22.0413, -49.4439, 0.81 ) }
    dend_46 { pt3dadd( -54.8106, -22.6823, -50.0131, 0.66 ) }
    dend_46 { pt3dadd( -55.3764, -23.3407, -50.6738, 0.66 ) }
    dend_46 { pt3dadd( -55.7814, -23.8549, -51.2496, 1.33 ) }
    dend_46 { pt3dadd( -56.0517, -24.2146, -51.6671, 1.33 ) }
    dend_46 { pt3dadd( -56.8949, -25.3407, -52.9924, 0.66 ) }
    dend_46 { pt3dadd( -57.64, -26.3022, -54.1183, 0.52 ) }
    dend_46 { pt3dadd( -57.996, -26.7235, -54.6202, 0.52 ) }
    dend_46 { pt3dadd( -58.465, -27.2074, -55.1261, 0.96 ) }
    dend_46 { pt3dadd( -58.8045, -27.5253, -55.391, 1.18 ) }
    dend_46 { pt3dadd( -59.0499, -27.7492, -55.5073, 1.18 ) }
    dend_46 { pt3dadd( -59.5599, -28.2478, -55.5967, 0.81 ) }
    dend_46 { pt3dadd( -60.2511, -28.995, -55.5917, 0.74 ) }
    dend_46 { pt3dadd( -61.0983, -30.0141, -55.4956, 0.59 ) }
    dend_46 { pt3dadd( -61.5228, -30.5243, -55.4083, 0.74 ) }
    dend_46 { pt3dadd( -62.0918, -31.1812, -55.2521, 0.74 ) }
    dend_46 { pt3dadd( -62.7097, -31.826, -55.0646, 0.59 ) }
    dend_46 { pt3dadd( -63.2963, -32.4037, -54.8724, 0.44 ) }
    dend_46 { pt3dadd( -63.9544, -33.0449, -54.6471, 0.44 ) }
    dend_46 { pt3dadd( -64.5901, -33.6536, -54.4621, 0.44 ) }
    dend_46 { pt3dadd( -65.2556, -34.3485, -54.2798, 0.44 ) }
    dend_46 { pt3dadd( -66.3379, -35.605, -54.0055, 0.44 ) }
    dend_46 { pt3dadd( -66.6015, -35.976, -53.9397, 0.96 ) }
    dend_46 { pt3dadd( -67.0631, -36.8606, -53.8607, 1.18 ) }
    dend_46 { pt3dadd( -67.3351, -37.6427, -53.8511, 0.81 ) }
    dend_46 { pt3dadd( -67.6001, -38.9223, -53.9654, 0.59 ) }
    dend_46 { pt3dadd( -67.6777, -39.476, -54.0791, 0.74 ) }
    dend_46 { pt3dadd( -67.7952, -40.3655, -54.3253, 0.66 ) }
    dend_46 { pt3dadd( -67.9794, -41.2352, -54.6041, 0.66 ) }
    dend_46 { pt3dadd( -68.1784, -41.8775, -54.8341, 0.81 ) }
    dend_46 { pt3dadd( -68.6482, -43.0581, -55.2564, 0.59 ) }
    dend_46 { pt3dadd( -69.1233, -44.0946, -55.609, 0.52 ) }
    dend_46 { pt3dadd( -69.5649, -45.1013, -55.9215, 0.81 ) }
    dend_46 { pt3dadd( -69.9436, -46.0814, -56.1831, 1.4 ) }
    dend_46 { pt3dadd( -70.1015, -46.6655, -56.2702, 1.69 ) }
    dend_46 { pt3dadd( -70.2778, -47.8106, -56.3088, 0.52 ) }
    dend_46 { pt3dadd( -70.3819, -48.7567, -56.3457, 0.44 ) }
    dend_46 { pt3dadd( -70.4579, -49.7113, -56.5145, 0.44 ) }
    dend_46 { pt3dadd( -70.5227, -50.3806, -56.7766, 0.29 ) }
    dend_46 { pt3dadd( -70.7335, -51.6236, -57.4615, 1.4 ) }
    dend_46 { pt3dadd( -70.7963, -51.8716, -57.6192, 1.4 ) }
    dend_46 { pt3dadd( -71.567, -54.0605, -59.3209, 0.52 ) }
    dend_46 { pt3dadd( -72.0942, -55.2676, -60.357, 0.52 ) }
    dend_46 { pt3dadd( -72.4029, -55.8919, -60.9148, 0.52 ) }
    dend_46 { pt3dadd( -72.8722, -56.822, -61.7433, 0.74 ) }
    dend_46 { pt3dadd( -73.1795, -57.4461, -62.2798, 0.88 ) }
    dend_46 { pt3dadd( -73.8088, -58.8716, -63.328, 0.44 ) }
    dend_46 { pt3dadd( -74.085, -59.5913, -63.7305, 0.59 ) }
    dend_46 { pt3dadd( -74.4126, -60.3986, -64.1437, 0.59 ) }
    dend_46 { pt3dadd( -74.7975, -61.2181, -64.5942, 0.37 ) }
    dend_46 { pt3dadd( -75.0442, -61.7124, -64.882, 0.59 ) }
    dend_46 { pt3dadd( -75.5167, -62.5934, -65.3849, 0.81 ) }
    dend_46 { pt3dadd( -75.9866, -63.399, -65.7728, 1.18 ) }
    dend_46 { pt3dadd( -76.2974, -63.8944, -66.0168, 1.18 ) }
    dend_46 { pt3dadd( -77.1742, -65.126, -66.7012, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -34.1658, -11.5781, -30.7852, 0.81 ) }
    dend_45 { pt3dadd( -35.126, -9.993, -30.3063, 0.81 ) }
    dend_45 { pt3dadd( -35.5516, -9.4498, -30.07, 0.81 ) }
    dend_45 { pt3dadd( -36.1799, -8.85096, -29.7299, 0.81 ) }
    dend_45 { pt3dadd( -36.8276, -8.44454, -29.4285, 0.88 ) }
    dend_45 { pt3dadd( -37.5797, -8.20199, -29.1786, 0.66 ) }
    dend_45 { pt3dadd( -38.9483, -7.9716, -28.8517, 0.59 ) }
    dend_45 { pt3dadd( -39.8756, -8.08498, -28.7525, 0.59 ) }
    dend_45 { pt3dadd( -40.7054, -8.28718, -28.8507, 0.59 ) }
    dend_45 { pt3dadd( -41.8043, -8.6453, -29.2032, 0.74 ) }
    dend_45 { pt3dadd( -42.9911, -9.07077, -29.8395, 1.03 ) }
    dend_45 { pt3dadd( -43.409, -9.22005, -30.1118, 1.62 ) }
    dend_45 { pt3dadd( -43.9817, -9.40558, -30.5255, 1.92 ) }
    dend_45 { pt3dadd( -45.8021, -9.94096, -31.792, 0.88 ) }
    dend_45 { pt3dadd( -46.5041, -10.1279, -32.2625, 0.66 ) }
    dend_45 { pt3dadd( -47.5322, -10.4025, -32.9179, 0.66 ) }
    dend_45 { pt3dadd( -48.9146, -10.7796, -33.7503, 0.66 ) }
    dend_45 { pt3dadd( -49.5295, -10.9372, -34.0982, 0.66 ) }
    dend_45 { pt3dadd( -50.8731, -11.2243, -34.7578, 0.66 ) }
    dend_45 { pt3dadd( -51.7337, -11.3612, -35.116, 0.44 ) }
    dend_45 { pt3dadd( -52.8332, -11.4606, -35.5797, 0.44 ) }
    dend_45 { pt3dadd( -53.6492, -11.4763, -35.9471, 0.44 ) }
    dend_45 { pt3dadd( -54.6275, -11.4176, -36.4654, 0.66 ) }
    dend_45 { pt3dadd( -55.317, -11.3455, -36.8552, 0.66 ) }
    dend_45 { pt3dadd( -56.1405, -11.2112, -37.3105, 0.66 ) }
    dend_45 { pt3dadd( -56.8526, -11.0723, -37.6464, 0.66 ) }
    dend_45 { pt3dadd( -57.6696, -10.866, -37.959, 0.44 ) }
    dend_45 { pt3dadd( -58.2414, -10.6969, -38.1541, 0.74 ) }
    dend_45 { pt3dadd( -59.0942, -10.429, -38.4186, 0.74 ) }
    dend_45 { pt3dadd( -59.8543, -10.184, -38.6476, 0.74 ) }
    dend_45 { pt3dadd( -60.5002, -9.9792, -38.8286, 0.74 ) }
    dend_45 { pt3dadd( -61.2371, -9.75464, -39.023, 0.37 ) }
    dend_45 { pt3dadd( -62.3155, -9.52788, -39.3725, 0.37 ) }
    dend_45 { pt3dadd( -62.7683, -9.51421, -39.5735, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -63.2335, -9.59395, -39.8615, 0.88 ) }
    dend_45 { pt3dadd( -63.8423, -9.77567, -40.292, 1.18 ) }
    dend_45 { pt3dadd( -64.3368, -9.94491, -40.6923, 1.33 ) }
    dend_45 { pt3dadd( -65.5965, -10.399, -41.8082, 0.44 ) }
    dend_45 { pt3dadd( -66.5102, -10.6801, -42.6676, 0.44 ) }
    dend_45 { pt3dadd( -67.2575, -10.8108, -43.4251, 0.44 ) }
    dend_45 { pt3dadd( -67.9527, -10.8013, -44.1371, 0.88 ) }
    dend_45 { pt3dadd( -68.7257, -10.6121, -44.8822, 1.03 ) }
    dend_45 { pt3dadd( -69.0537, -10.4488, -45.1509, 1.03 ) }
    dend_45 { pt3dadd( -69.9272, -9.8198, -45.6378, 0.44 ) }
    dend_45 { pt3dadd( -70.4565, -9.40943, -45.8749, 0.44 ) }
    dend_45 { pt3dadd( -71.0695, -8.98983, -46.0745, 0.44 ) }
    dend_45 { pt3dadd( -71.5618, -8.73066, -46.2305, 0.59 ) }
    dend_45 { pt3dadd( -72.354, -8.44869, -46.4598, 0.59 ) }
    dend_45 { pt3dadd( -73.1415, -8.29947, -46.7144, 0.74 ) }
    dend_45 { pt3dadd( -74.5427, -8.2855, -47.214, 0.37 ) }
    dend_45 { pt3dadd( -75.4031, -8.39783, -47.5818, 0.37 ) }
    dend_45 { pt3dadd( -76.6499, -8.7231, -48.2064, 0.59 ) }
    dend_45 { pt3dadd( -77.1293, -8.90415, -48.4865, 0.88 ) }
    dend_45 { pt3dadd( -78.036, -9.35399, -49.1197, 0.66 ) }
    dend_45 { pt3dadd( -78.639, -9.70171, -49.5837, 0.74 ) }
    dend_45 { pt3dadd( -79.2736, -10.1129, -50.087, 0.59 ) }
    dend_45 { pt3dadd( -79.8174, -10.4804, -50.5525, 0.52 ) }
    dend_45 { pt3dadd( -80.3271, -10.8209, -50.9874, 0.88 ) }
    dend_45 { pt3dadd( -81.2804, -11.3687, -51.7908, 0.59 ) }
    dend_45 { pt3dadd( -81.8481, -11.6286, -52.2513, 0.44 ) }
    dend_45 { pt3dadd( -82.4907, -11.8525, -52.755, 1.03 ) }
    dend_45 { pt3dadd( -82.9483, -11.9687, -53.0922, 1.33 ) }
    dend_45 { pt3dadd( -83.2362, -12.0189, -53.2842, 1.4 ) }
    dend_45 { pt3dadd( -84.4612, -12.1847, -54.0071, 0.44 ) }
    dend_45 { pt3dadd( -84.9579, -12.2478, -54.2789, 0.44 ) }
    dend_45 { pt3dadd( -85.6935, -12.3333, -54.6497, 0.44 ) }
    dend_45 { pt3dadd( -86.4712, -12.4107, -55.0024, 0.44 ) }
    dend_45 { pt3dadd( -87.7337, -12.5286, -55.5662, 0.59 ) }
    dend_45 { pt3dadd( -88.6098, -12.593, -56.0182, 0.88 ) }
    dend_45 { pt3dadd( -89.4216, -12.5958, -56.54, 1.11 ) }
    dend_45 { pt3dadd( -90.4775, -12.5382, -57.3125, 0.52 ) }
    dend_45 { pt3dadd( -91.2426, -12.4424, -57.9146, 0.52 ) }
    dend_45 { pt3dadd( -91.8848, -12.3294, -58.4405, 1.03 ) }
    dend_45 { pt3dadd( -93.3196, -12.0335, -59.6866, 1.25 ) }
    dend_45 { pt3dadd( -95.0095, -11.7376, -61.1737, 0.52 ) }
    dend_45 { pt3dadd( -95.5862, -11.6591, -61.6782, 0.59 ) }
    dend_45 { pt3dadd( -96.3524, -11.5925, -62.3241, 0.59 ) }
    dend_45 { pt3dadd( -97.5562, -11.5265, -63.2191, 0.44 ) }
    dend_45 { pt3dadd( -98.3799, -11.5052, -63.7156, 0.44 ) }
    dend_45 { pt3dadd( -99.5931, -11.4647, -64.2888, 0.44 ) }
    dend_45 { pt3dadd( -100.245, -11.4149, -64.5712, 0.44 ) }
    dend_45 { pt3dadd( -101.156, -11.2221, -65.0646, 0.66 ) }
    dend_45 { pt3dadd( -101.817, -10.9694, -65.5028, 0.88 ) }
    dend_45 { pt3dadd( -102.175, -10.7629, -65.7638, 0.88 ) }
    dend_45 { pt3dadd( -103.223, -9.9903, -66.5486, 0.52 ) }
    dend_45 { pt3dadd( -103.872, -9.41289, -67.0482, 0.52 ) }
    dend_45 { pt3dadd( -104.791, -8.47156, -67.8411, 0.81 ) }
    dend_45 { pt3dadd( -105.436, -7.72159, -68.4377, 0.44 ) }
    dend_45 { pt3dadd( -105.806, -7.24968, -68.8061, 0.44 ) }
    dend_45 { pt3dadd( -106.226, -6.62724, -69.259, 0.74 ) }
    dend_45 { pt3dadd( -106.486, -6.15603, -69.5524, 0.96 ) }
    dend_45 { pt3dadd( -107.0, -4.94385, -70.1374, 0.66 ) }
    dend_45 { pt3dadd( -107.288, -4.18371, -70.4789, 0.44 ) }
    dend_45 { pt3dadd( -107.619, -3.35066, -70.8892, 0.44 ) }
    dend_45 { pt3dadd( -108.005, -2.56018, -71.3545, 0.44 ) }
    dend_45 { pt3dadd( -108.187, -2.29343, -71.5472, 0.44 ) }
    dend_45 { pt3dadd( -108.76, -1.77526, -72.0137, 0.96 ) }
    dend_45 { pt3dadd( -109.986, -1.31261, -72.7209, 0.66 ) }
    dend_45 { pt3dadd( -110.781, -1.16626, -73.1239, 0.96 ) }
    dend_45 { pt3dadd( -111.159, -1.12793, -73.2815, 1.25 ) }
    dend_45 { pt3dadd( -111.602, -1.09917, -73.4462, 1.25 ) }
    dend_45 { pt3dadd( -112.307, -1.03958, -73.6904, 1.25 ) }
    dend_45 { pt3dadd( -113.539, -0.830906, -74.089, 0.37 ) }
    dend_45 { pt3dadd( -114.296, -0.571311, -74.2724, 0.37 ) }
    dend_45 { pt3dadd( -114.807, -0.319215, -74.4089, 0.66 ) }
    dend_45 { pt3dadd( -115.201, -0.107905, -74.5051, 0.81 ) }
    dend_45 { pt3dadd( -115.815, 0.221471, -74.623, 0.81 ) }
    dend_45 { pt3dadd( -116.76, 0.711381, -74.7193, 0.44 ) }
    dend_45 { pt3dadd( -117.401, 0.996923, -74.7139, 0.44 ) }
    dend_45 { pt3dadd( -118.557, 1.40369, -74.6339, 0.44 ) }
    dend_45 { pt3dadd( -119.828, 1.79732, -74.4862, 0.44 ) }
    dend_45 { pt3dadd( -120.791, 2.08161, -74.3313, 0.66 ) }
    dend_45 { pt3dadd( -121.79, 2.36229, -74.1268, 0.96 ) }
    dend_45 { pt3dadd( -122.793, 2.62377, -73.8597, 0.59 ) }
    dend_45 { pt3dadd( -123.645, 2.85552, -73.6, 0.44 ) }
    dend_45 { pt3dadd( -124.525, 3.10316, -73.3222, 0.44 ) }
    dend_45 { pt3dadd( -125.384, 3.35221, -73.1003, 0.44 ) }
    dend_45 { pt3dadd( -126.133, 3.53929, -72.9998, 0.44 ) }
    dend_45 { pt3dadd( -126.999, 3.68497, -73.0244, 0.74 ) }
    dend_45 { pt3dadd( -127.428, 3.72505, -73.098, 0.74 ) }
    dend_45 { pt3dadd( -128.647, 3.74755, -73.3974, 0.52 ) }
    dend_45 { pt3dadd( -129.202, 3.73706, -73.5678, 0.59 ) }
    dend_45 { pt3dadd( -130.232, 3.70802, -73.9241, 0.44 ) }
    dend_45 { pt3dadd( -131.007, 3.71754, -74.1973, 0.44 ) }
    dend_45 { pt3dadd( -131.991, 3.82096, -74.5637, 0.37 ) }
    dend_45 { pt3dadd( -132.987, 4.00822, -74.9089, 0.52 ) }
    dend_45 { pt3dadd( -133.785, 4.23027, -75.1689, 1.11 ) }
    dend_45 { pt3dadd( -134.415, 4.45612, -75.3967, 1.25 ) }
    dend_45 { pt3dadd( -135.169, 4.77584, -75.7197, 0.37 ) }
    dend_45 { pt3dadd( -136.254, 5.26924, -76.2797, 0.37 ) }
    dend_45 { pt3dadd( -136.991, 5.59303, -76.7248, 0.29 ) }
    dend_45 { pt3dadd( -137.576, 5.84091, -77.1385, 0.29 ) }
    dend_45 { pt3dadd( -138.63, 6.28552, -77.9428, 0.59 ) }
    dend_45 { pt3dadd( -139.467, 6.66101, -78.6065, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -139.943, 6.88706, -78.982, 0.29 ) }
    dend_45 { pt3dadd( -140.32, 7.07967, -79.2419, 0.37 ) }
    dend_45 { pt3dadd( -140.923, 7.42927, -79.602, 0.37 ) }
    dend_45 { pt3dadd( -141.749, 7.93186, -79.9672, 0.44 ) }
    dend_45 { pt3dadd( -142.441, 8.35609, -80.1481, 0.44 ) }
    dend_45 { pt3dadd( -143.095, 8.74584, -80.2449, 0.44 ) }
    dend_45 { pt3dadd( -143.877, 9.16659, -80.3401, 0.37 ) }
    dend_45 { pt3dadd( -144.191, 9.30761, -80.3734, 0.37 ) }
    dend_45 { pt3dadd( -144.981, 9.57356, -80.4364, 0.88 ) }
    dend_45 { pt3dadd( -145.433, 9.68531, -80.4686, 1.11 ) }
    dend_45 { pt3dadd( -146.241, 9.85654, -80.5266, 1.11 ) }
    dend_45 { pt3dadd( -147.515, 10.1477, -80.6027, 0.37 ) }
    dend_45 { pt3dadd( -148.508, 10.4151, -80.6432, 0.37 ) }
    dend_45 { pt3dadd( -149.083, 10.6135, -80.647, 0.66 ) }
    dend_45 { pt3dadd( -149.963, 11.0542, -80.6482, 0.66 ) }
    dend_45 { pt3dadd( -150.672, 11.5311, -80.6506, 0.37 ) }
    dend_45 { pt3dadd( -151.285, 12.0682, -80.6604, 0.52 ) }
    dend_45 { pt3dadd( -151.516, 12.3145, -80.6674, 0.66 ) }
    dend_45 { pt3dadd( -151.86, 12.7223, -80.6756, 0.66 ) }
    dend_45 { pt3dadd( -152.798, 13.8492, -80.684, 0.37 ) }
    dend_45 { pt3dadd( -153.232, 14.3249, -80.659, 0.37 ) }
    dend_45 { pt3dadd( -153.69, 14.6896, -80.5764, 0.37 ) }
    dend_45 { pt3dadd( -154.156, 14.9382, -80.4407, 0.88 ) }
    dend_45 { pt3dadd( -154.892, 15.2087, -80.1798, 0.81 ) }
    dend_45 { pt3dadd( -155.25, 15.3002, -80.0412, 0.81 ) }
    dend_45 { pt3dadd( -156.143, 15.4706, -79.6702, 0.29 ) }
    dend_45 { pt3dadd( -157.311, 15.6714, -79.1792, 0.29 ) }
    dend_45 { pt3dadd( -158.037, 15.8184, -78.8128, 0.52 ) }
    dend_45 { pt3dadd( -158.918, 16.043, -78.3402, 0.44 ) }
    dend_45 { pt3dadd( -159.35, 16.1682, -78.105, 0.44 ) }
    dend_45 { pt3dadd( -159.92, 16.3539, -77.7673, 0.81 ) }
    dend_45 { pt3dadd( -160.594, 16.6261, -77.333, 0.81 ) }
    dend_45 { pt3dadd( -161.864, 17.2726, -76.4337, 0.29 ) }
    dend_45 { pt3dadd( -162.374, 17.5591, -76.0554, 0.44 ) }
    dend_45 { pt3dadd( -162.852, 17.8323, -75.6696, 0.29 ) }
    dend_45 { pt3dadd( -163.381, 18.1166, -75.2557, 0.29 ) }
    dend_45 { pt3dadd( -164.08, 18.4625, -74.7545, 0.29 ) }
    dend_45 { pt3dadd( -164.619, 18.7104, -74.4142, 0.29 ) }
    dend_45 { pt3dadd( -165.259, 18.9737, -74.0629, 0.59 ) }
    dend_45 { pt3dadd( -166.488, 19.454, -73.3765, 0.22 ) }
    dend_45 { pt3dadd( -167.278, 19.7548, -72.9383, 0.22 ) }
    dend_45 { pt3dadd( -167.697, 19.8903, -72.7087, 0.52 ) }
    dend_45 { pt3dadd( -168.081, 19.9784, -72.4948, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -79.8509, -45.5953, 76.2575, 0.29 ) }
    dend_43 { pt3dadd( -86.4599, -49.8922, 82.5515, 0.29 ) }
    dend_43 { pt3dadd( -91.6866, -55.7519, 88.8181, 0.29 ) }
    dend_43 { pt3dadd( -96.5755, -61.5308, 95.4264, 0.29 ) }
    dend_43 { pt3dadd( -100.945, -67.8995, 101.824, 0.29 ) }
    dend_43 { pt3dadd( -103.906, -74.7963, 108.449, 0.29 ) }
    dend_43 { pt3dadd( -107.708, -81.565, 114.777, 0.29 ) }
    dend_43 { pt3dadd( -111.539, -88.3478, 121.071, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -79.8509, -45.5953, 76.2575, 0.29 ) }
    dend_42 { pt3dadd( -85.9229, -48.8398, 81.5618, 0.29 ) }
    dend_42 { pt3dadd( -92.1365, -52.9661, 85.9777, 0.29 ) }
    dend_42 { pt3dadd( -97.7774, -57.6815, 90.5442, 0.29 ) }
    dend_42 { pt3dadd( -102.647, -62.8238, 95.5056, 0.29 ) }
    dend_42 { pt3dadd( -107.193, -68.4997, 100.154, 0.29 ) }
    dend_42 { pt3dadd( -111.03, -75.0839, 104.136, 0.29 ) }
    dend_42 { pt3dadd( -115.364, -80.9219, 108.777, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.3664, -71.6264, 19.7085, 0.66 ) }
    dend_34 { pt3dadd( -12.2748, -73.7451, 18.9143, 0.66 ) }
    dend_34 { pt3dadd( -12.5056, -74.3084, 18.7244, 1.03 ) }
    dend_34 { pt3dadd( -12.7305, -74.9002, 18.5995, 1.03 ) }
    dend_34 { pt3dadd( -13.1332, -76.0351, 18.4698, 1.03 ) }
    dend_34 { pt3dadd( -13.4012, -76.8983, 18.4324, 1.03 ) }
    dend_34 { pt3dadd( -13.6816, -77.9569, 18.4477, 0.81 ) }
    dend_34 { pt3dadd( -13.8518, -78.912, 18.6254, 0.81 ) }
    dend_34 { pt3dadd( -13.9507, -80.323, 18.9893, 1.4 ) }
    dend_34 { pt3dadd( -13.9393, -80.9313, 19.1833, 1.62 ) }
    dend_34 { pt3dadd( -13.8427, -81.8445, 19.5488, 1.4 ) }
    dend_34 { pt3dadd( -13.7324, -82.449, 19.8059, 1.92 ) }
    dend_34 { pt3dadd( -13.5259, -83.2722, 20.1592, 1.4 ) }
    dend_34 { pt3dadd( -13.14, -84.5215, 20.6946, 1.69 ) }
    dend_34 { pt3dadd( -12.8582, -85.3564, 21.0074, 1.11 ) }
    dend_34 { pt3dadd( -12.484, -86.476, 21.3979, 0.81 ) }
    dend_34 { pt3dadd( -12.3204, -87.0043, 21.5677, 1.11 ) }
    dend_34 { pt3dadd( -12.15, -87.6342, 21.7493, 1.25 ) }
    dend_34 { pt3dadd( -11.8455, -89.0347, 22.1158, 0.96 ) }
    dend_34 { pt3dadd( -11.755, -89.742, 22.2759, 0.74 ) }
    dend_34 { pt3dadd( -11.7399, -90.4169, 22.4056, 0.81 ) }
    dend_34 { pt3dadd( -11.8784, -91.4374, 22.5475, 0.52 ) }
    dend_34 { pt3dadd( -12.0812, -92.1644, 22.611, 0.88 ) }
    dend_34 { pt3dadd( -12.3322, -92.7754, 22.6047, 0.88 ) }
    dend_34 { pt3dadd( -12.6814, -93.4436, 22.4976, 0.88 ) }
    dend_34 { pt3dadd( -13.0091, -94.0357, 22.3464, 0.66 ) }
    dend_34 { pt3dadd( -13.3371, -94.6711, 22.1032, 0.66 ) }
    dend_34 { pt3dadd( -13.7273, -95.5685, 21.6002, 0.88 ) }
    dend_34 { pt3dadd( -13.9386, -96.1685, 21.186, 1.33 ) }
    dend_34 { pt3dadd( -14.0654, -96.6301, 20.8452, 1.47 ) }
    dend_34 { pt3dadd( -14.1664, -97.0655, 20.5227, 1.62 ) }
    dend_34 { pt3dadd( -14.3661, -97.9548, 19.9076, 0.74 ) }
    dend_34 { pt3dadd( -14.5963, -98.9666, 19.3384, 0.74 ) }
    dend_34 { pt3dadd( -14.8094, -99.7552, 19.0293, 0.74 ) }
    dend_34 { pt3dadd( -14.9973, -100.384, 18.9003, 0.74 ) }
    dend_34 { pt3dadd( -15.2549, -101.254, 18.8571, 0.66 ) }
    dend_34 { pt3dadd( -15.4829, -102.162, 18.9428, 0.66 ) }
    dend_34 { pt3dadd( -15.725, -103.481, 19.2407, 0.96 ) }
    dend_34 { pt3dadd( -15.7885, -104.164, 19.4507, 0.88 ) }
    dend_34 { pt3dadd( -15.7821, -104.779, 19.65, 0.88 ) }
    dend_34 { pt3dadd( -15.658, -105.931, 20.0004, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -15.4527, -106.995, 20.2976, 1.18 ) }
    dend_34 { pt3dadd( -15.3382, -107.516, 20.4068, 1.62 ) }
    dend_34 { pt3dadd( -15.222, -108.102, 20.4821, 1.62 ) }
    dend_34 { pt3dadd( -15.0906, -108.928, 20.5682, 0.96 ) }
    dend_34 { pt3dadd( -15.0223, -109.567, 20.6274, 0.96 ) }
    dend_34 { pt3dadd( -14.9903, -110.531, 20.708, 0.66 ) }
    dend_34 { pt3dadd( -15.0814, -111.793, 20.7942, 0.52 ) }
    dend_34 { pt3dadd( -15.2503, -112.923, 20.9002, 0.59 ) }
    dend_34 { pt3dadd( -15.5514, -114.22, 21.0565, 0.74 ) }
    dend_34 { pt3dadd( -15.6582, -114.557, 21.1099, 1.11 ) }
    dend_34 { pt3dadd( -15.926, -115.198, 21.2638, 1.25 ) }
    dend_34 { pt3dadd( -16.4766, -116.223, 21.598, 0.88 ) }
    dend_34 { pt3dadd( -16.8292, -116.731, 21.8308, 0.66 ) }
    dend_34 { pt3dadd( -17.2069, -117.178, 22.081, 0.66 ) }
    dend_34 { pt3dadd( -17.581, -117.572, 22.3132, 0.59 ) }
    dend_34 { pt3dadd( -18.3289, -118.367, 22.7397, 0.59 ) }
    dend_34 { pt3dadd( -18.7521, -118.824, 22.9481, 0.44 ) }
    dend_34 { pt3dadd( -19.2655, -119.417, 23.1456, 0.44 ) }
    dend_34 { pt3dadd( -19.6981, -119.969, 23.2514, 0.74 ) }
    dend_34 { pt3dadd( -20.0525, -120.483, 23.3019, 0.74 ) }
    dend_34 { pt3dadd( -20.362, -120.973, 23.3126, 0.66 ) }
    dend_34 { pt3dadd( -20.7694, -121.69, 23.2668, 1.03 ) }
    dend_34 { pt3dadd( -21.0763, -122.262, 23.2315, 1.4 ) }
    dend_34 { pt3dadd( -21.4062, -122.904, 23.1962, 1.4 ) }
    dend_34 { pt3dadd( -21.6952, -123.461, 23.1713, 1.47 ) }
    dend_34 { pt3dadd( -22.1522, -124.343, 23.1483, 0.74 ) }
    dend_34 { pt3dadd( -22.5073, -125.03, 23.1235, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -11.3664, -71.6264, 19.7085, 0.44 ) }
    dend_33 { pt3dadd( -10.6004, -72.3033, 20.1305, 0.44 ) }
    dend_33 { pt3dadd( -10.1529, -72.8729, 20.4363, 0.44 ) }
    dend_33 { pt3dadd( -9.84766, -73.5905, 20.7525, 0.37 ) }
    dend_33 { pt3dadd( -9.54166, -74.9677, 21.2322, 0.59 ) }
    dend_33 { pt3dadd( -9.50662, -75.4984, 21.3819, 0.52 ) }
    dend_33 { pt3dadd( -9.53619, -76.175, 21.5528, 0.44 ) }
    dend_33 { pt3dadd( -9.77275, -77.2523, 21.8551, 0.44 ) }
    dend_33 { pt3dadd( -10.0969, -78.1516, 22.1608, 0.44 ) }
    dend_33 { pt3dadd( -10.3645, -78.6934, 22.401, 0.59 ) }
    dend_33 { pt3dadd( -10.7532, -79.3116, 22.804, 0.59 ) }
    dend_33 { pt3dadd( -11.1271, -79.8396, 23.4022, 0.37 ) }
    dend_33 { pt3dadd( -11.5707, -80.4345, 24.4002, 0.59 ) }
    dend_33 { pt3dadd( -11.918, -80.9045, 25.4125, 0.88 ) }
    dend_33 { pt3dadd( -12.128, -81.1703, 26.0788, 0.81 ) }
    dend_33 { pt3dadd( -12.5544, -81.6785, 27.4257, 1.03 ) }
    dend_33 { pt3dadd( -12.9932, -82.1856, 28.7591, 0.88 ) }
    dend_33 { pt3dadd( -13.4204, -82.666, 29.8769, 0.44 ) }
    dend_33 { pt3dadd( -13.8064, -83.1255, 30.686, 0.44 ) }
    dend_33 { pt3dadd( -14.0811, -83.4829, 31.1461, 0.66 ) }
    dend_33 { pt3dadd( -14.5013, -84.0042, 31.6508, 0.66 ) }
    dend_33 { pt3dadd( -14.9251, -84.4598, 31.959, 0.66 ) }
    dend_33 { pt3dadd( -15.589, -85.0923, 32.2567, 0.66 ) }
    dend_33 { pt3dadd( -16.1778, -85.6321, 32.4716, 1.33 ) }
    dend_33 { pt3dadd( -16.4462, -85.8866, 32.5486, 1.47 ) }
    dend_33 { pt3dadd( -16.9705, -86.3904, 32.6897, 1.03 ) }
    dend_33 { pt3dadd( -17.6273, -87.0397, 32.8713, 0.81 ) }
    dend_33 { pt3dadd( -18.1787, -87.5888, 33.0374, 0.74 ) }
    dend_33 { pt3dadd( -18.8304, -88.2488, 33.2587, 0.52 ) }
    dend_33 { pt3dadd( -19.2864, -88.7391, 33.4309, 0.44 ) }
    dend_33 { pt3dadd( -21.5338, -94.9832, 38.5136, 0.44 ) }
    dend_33 { pt3dadd( -22.8943, -101.793, 43.1288, 0.44 ) }
    dend_33 { pt3dadd( -25.0365, -108.495, 47.6069, 0.44 ) }
    dend_33 { pt3dadd( -29.0191, -114.564, 51.7535, 0.44 ) }
    dend_33 { pt3dadd( -32.5813, -119.744, 57.3162, 0.44 ) }
    dend_33 { pt3dadd( -35.2361, -125.07, 63.232, 0.44 ) }
    dend_33 { pt3dadd( -38.182, -130.562, 68.8423, 0.44 ) }
    dend_33 { pt3dadd( -42.8267, -135.47, 73.8322, 0.44 ) }
    dend_33 { pt3dadd( -49.067, -139.52, 77.7768, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.23906, -18.1755, -3.40448, 1.47 ) }
    dend_17 { pt3dadd( 3.75119, -19.5356, -3.76259, 1.47 ) }
    dend_17 { pt3dadd( 3.25044, -21.2867, -4.08377, 1.33 ) }
    dend_17 { pt3dadd( 2.92216, -22.6826, -4.23538, 1.55 ) }
    dend_17 { pt3dadd( 2.70664, -23.8154, -4.26403, 1.55 ) }
    dend_17 { pt3dadd( 2.5229, -24.9901, -4.15033, 1.77 ) }
    dend_17 { pt3dadd( 2.30958, -26.494, -3.84592, 1.77 ) }
    dend_17 { pt3dadd( 2.21178, -27.4214, -3.52824, 2.14 ) }
    dend_17 { pt3dadd( 2.13299, -28.1955, -3.17641, 2.58 ) }
    dend_17 { pt3dadd( 2.02074, -29.1857, -2.69832, 2.36 ) }
    dend_17 { pt3dadd( 1.77657, -31.0037, -1.91044, 1.77 ) }
    dend_17 { pt3dadd( 1.53154, -32.5737, -1.39761, 1.47 ) }
    dend_17 { pt3dadd( 1.32366, -33.8918, -1.14666, 1.18 ) }
    dend_17 { pt3dadd( 1.12497, -35.2935, -1.03056, 1.11 ) }
    dend_17 { pt3dadd( 0.979793, -36.541, -1.06024, 1.33 ) }
    dend_17 { pt3dadd( 0.843223, -38.2437, -1.29137, 1.25 ) }
    dend_17 { pt3dadd( 0.808341, -39.7341, -1.63188, 1.47 ) }
    dend_17 { pt3dadd( 0.853173, -41.0693, -1.9824, 1.62 ) }
    dend_17 { pt3dadd( 0.922094, -42.0713, -2.25029, 2.14 ) }
    dend_17 { pt3dadd( 0.966014, -42.7628, -2.42151, 2.58 ) }
    dend_17 { pt3dadd( 0.986869, -43.757, -2.62696, 2.43 ) }
    dend_17 { pt3dadd( 0.92411, -45.3576, -2.89309, 2.14 ) }
    dend_17 { pt3dadd( 0.783798, -46.6502, -3.08091, 1.92 ) }
    dend_17 { pt3dadd( 0.541249, -47.9327, -3.24604, 1.47 ) }
    dend_17 { pt3dadd( 0.105569, -49.5174, -3.44111, 1.25 ) }
    dend_17 { pt3dadd( -0.352576, -50.8248, -3.55478, 1.11 ) }
    dend_17 { pt3dadd( -0.769158, -51.803, -3.59179, 1.4 ) }
    dend_17 { pt3dadd( -1.072, -52.432, -3.59165, 1.55 ) }
    dend_17 { pt3dadd( -1.54675, -53.3926, -3.54679, 1.18 ) }
    dend_17 { pt3dadd( -1.99255, -54.3736, -3.43875, 0.88 ) }
    dend_17 { pt3dadd( -2.3877, -55.4055, -3.32619, 1.18 ) }
    dend_17 { pt3dadd( -2.69259, -56.4152, -3.22354, 1.03 ) }
    dend_17 { pt3dadd( -2.93991, -57.3657, -3.12205, 1.03 ) }
    dend_17 { pt3dadd( -3.23881, -58.775, -2.98976, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -3.3687, -59.6703, -2.92794, 1.77 ) }
    dend_17 { pt3dadd( -3.48622, -61.0791, -2.89231, 1.77 ) }
    dend_17 { pt3dadd( -3.5426, -62.1633, -2.95211, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.23906, -18.1755, -3.40448, 1.77 ) }
    dend_1 { pt3dadd( 4.65648, -20.0623, -3.87029, 1.77 ) }
    dend_1 { pt3dadd( 4.84431, -21.0068, -4.08538, 1.99 ) }
    dend_1 { pt3dadd( 5.06028, -22.0928, -4.33269, 1.99 ) }
    dend_1 { pt3dadd( 5.35496, -23.5746, -4.67014, 3.17 ) }
    dend_1 { pt3dadd( 5.48771, -24.2421, -4.82215, 3.76 ) }
    dend_1 { pt3dadd( 5.71485, -25.3843, -5.08225, 4.2 ) }
    dend_1 { pt3dadd( 5.84443, -26.3952, -5.25856, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.88 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.88 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -56.3115, 117.314, -28.2753, 0.29 ) }
    dend_85 { pt3dadd( -56.4691, 117.938, -28.3536, 0.29 ) }
    dend_85 { pt3dadd( -56.6322, 118.883, -28.665, 0.29 ) }
    dend_85 { pt3dadd( -56.7227, 119.735, -28.9881, 0.29 ) }
    dend_85 { pt3dadd( -56.7643, 120.653, -29.3678, 0.29 ) }
    dend_85 { pt3dadd( -56.7669, 121.314, -29.6641, 0.29 ) }
    dend_85 { pt3dadd( -56.7544, 122.401, -30.1514, 0.29 ) }
    dend_85 { pt3dadd( -56.6659, 124.356, -31.1303, 0.29 ) }
    dend_85 { pt3dadd( -56.6287, 124.959, -31.4537, 0.37 ) }
    dend_85 { pt3dadd( -56.5895, 125.686, -31.8631, 0.37 ) }
    dend_85 { pt3dadd( -56.5575, 126.581, -32.3956, 0.37 ) }
    dend_85 { pt3dadd( -56.5277, 127.318, -32.8383, 0.22 ) }
    dend_85 { pt3dadd( -56.5069, 128.086, -33.2829, 0.22 ) }
    dend_85 { pt3dadd( -56.5619, 128.914, -33.6703, 1.03 ) }
    dend_85 { pt3dadd( -56.5896, 129.062, -33.7432, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -56.3115, 117.314, -28.2753, 0.52 ) }
    dend_80 { pt3dadd( -57.4631, 118.462, -27.7653, 0.52 ) }
    dend_80 { pt3dadd( -57.9851, 119.072, -27.4953, 0.52 ) }
    dend_80 { pt3dadd( -58.4994, 119.78, -27.2163, 0.44 ) }
    dend_80 { pt3dadd( -58.7242, 120.143, -27.0934, 0.59 ) }
    dend_80 { pt3dadd( -58.9591, 120.584, -26.9621, 0.59 ) }
    dend_80 { pt3dadd( -59.3835, 121.431, -26.7087, 0.37 ) }
    dend_80 { pt3dadd( -59.8721, 122.532, -26.4583, 0.37 ) }
    dend_80 { pt3dadd( -60.159, 123.246, -26.2878, 0.37 ) }
    dend_80 { pt3dadd( -60.4494, 123.964, -26.1083, 0.37 ) }
    dend_80 { pt3dadd( -60.7735, 124.75, -25.8906, 0.29 ) }
    dend_80 { pt3dadd( -61.08, 125.455, -25.6815, 0.29 ) }
    dend_80 { pt3dadd( -61.4455, 126.191, -25.4448, 0.81 ) }
    dend_80 { pt3dadd( -61.626, 126.485, -25.3471, 0.81 ) }
    dend_80 { pt3dadd( -61.945, 126.926, -25.1891, 0.74 ) }
    dend_80 { pt3dadd( -62.401, 127.481, -25.019, 0.74 ) }
    dend_80 { pt3dadd( -62.8211, 127.915, -24.9426, 0.96 ) }
    dend_80 { pt3dadd( -63.2651, 128.319, -24.942, 0.96 ) }
    dend_80 { pt3dadd( -63.5703, 128.588, -24.9895, 0.59 ) }
    dend_80 { pt3dadd( -64.1715, 129.151, -25.1793, 0.29 ) }
    dend_80 { pt3dadd( -64.7322, 129.73, -25.4649, 0.29 ) }
    dend_80 { pt3dadd( -65.34, 130.411, -25.862, 0.29 ) }
    dend_80 { pt3dadd( -65.7647, 130.926, -26.1627, 0.22 ) }
    dend_80 { pt3dadd( -66.3982, 131.731, -26.6272, 0.22 ) }
    dend_80 { pt3dadd( -66.8917, 132.392, -27.0001, 0.74 ) }
    dend_80 { pt3dadd( -67.4437, 133.182, -27.3942, 0.37 ) }
    dend_80 { pt3dadd( -67.8775, 133.877, -27.6731, 0.37 ) }
    dend_80 { pt3dadd( -68.2684, 134.565, -27.9102, 0.81 ) }
    dend_80 { pt3dadd( -68.5485, 135.029, -28.071, 1.18 ) }
    dend_80 { pt3dadd( -68.8215, 135.392, -28.1932, 1.18 ) }
    dend_80 { pt3dadd( -69.5355, 136.164, -28.4816, 0.29 ) }
    dend_80 { pt3dadd( -70.2971, 136.929, -28.7702, 0.29 ) }
    dend_80 { pt3dadd( -70.7869, 137.386, -28.9685, 0.29 ) }
    dend_80 { pt3dadd( -71.2922, 137.823, -29.1882, 0.29 ) }
    dend_80 { pt3dadd( -72.0459, 138.419, -29.5061, 0.74 ) }
    dend_80 { pt3dadd( -72.598, 138.767, -29.7274, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 135.179, 28.6683, 57.4172, 0.29 ) }
    dend_71 { pt3dadd( 145.307, 29.1505, 63.6997, 0.29 ) }
    dend_71 { pt3dadd( 155.158, 29.3878, 70.4237, 0.29 ) }
    dend_71 { pt3dadd( 165.419, 30.8506, 76.3175, 0.29 ) }
    dend_71 { pt3dadd( 175.044, 33.7778, 82.6866, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 135.179, 28.6683, 57.4172, 0.29 ) }
    dend_70 { pt3dadd( 144.145, 28.6201, 62.299, 0.29 ) }
    dend_70 { pt3dadd( 153.129, 30.2918, 66.829, 0.29 ) }
    dend_70 { pt3dadd( 162.763, 32.2865, 69.5092, 0.29 ) }
    dend_70 { pt3dadd( 171.559, 35.5866, 73.42, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 67.5421, 32.2004, -2.10032, 0.44 ) }
    dend_58 { pt3dadd( 68.8247, 32.2056, -2.63561, 0.44 ) }
    dend_58 { pt3dadd( 69.302, 32.2877, -2.90171, 0.37 ) }
    dend_58 { pt3dadd( 70.1495, 32.5308, -3.41514, 0.59 ) }
    dend_58 { pt3dadd( 70.6105, 32.6879, -3.69873, 0.74 ) }
    dend_58 { pt3dadd( 71.794, 33.1279, -4.40266, 0.37 ) }
    dend_58 { pt3dadd( 73.0158, 33.6111, -5.09279, 0.29 ) }
    dend_58 { pt3dadd( 73.7394, 33.9955, -5.52681, 0.29 ) }
    dend_58 { pt3dadd( 74.2587, 34.3117, -5.80618, 0.88 ) }
    dend_58 { pt3dadd( 74.4495, 34.445, -5.90487, 1.11 ) }
    dend_58 { pt3dadd( 74.9235, 34.7909, -6.11818, 1.11 ) }
    dend_58 { pt3dadd( 75.3726, 35.0994, -6.22812, 1.18 ) }
    dend_58 { pt3dadd( 76.207, 35.5303, -6.28826, 0.74 ) }
    dend_58 { pt3dadd( 76.7753, 35.805, -6.30224, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 67.5421, 32.2004, -2.10032, 0.29 ) }
    dend_55 { pt3dadd( 68.4397, 32.8762, -1.62646, 0.29 ) }
    dend_55 { pt3dadd( 68.864, 33.1903, -1.38632, 0.29 ) }
    dend_55 { pt3dadd( 69.4075, 33.5926, -1.07873, 0.66 ) }
    dend_55 { pt3dadd( 69.9943, 34.0268, -0.746665, 0.29 ) }
    dend_55 { pt3dadd( 70.4336, 34.352, -0.498043, 0.29 ) }
    dend_55 { pt3dadd( 71.3141, 35.0037, 2.49476E-4, 0.29 ) }
    dend_55 { pt3dadd( 71.823, 35.3254, 0.322404, 0.29 ) }
    dend_55 { pt3dadd( 79.2223, 40.8262, 3.50332, 0.29 ) }
    dend_55 { pt3dadd( 85.7748, 46.566, 7.85066, 0.29 ) }
    dend_55 { pt3dadd( 91.0296, 53.5759, 11.9925, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 97.2668, 59.8547, 16.0102, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -77.1742, -65.126, -66.7012, 0.81 ) }
    dend_48 { pt3dadd( -77.6437, -65.8173, -68.1833, 0.81 ) }
    dend_48 { pt3dadd( -77.7273, -65.9123, -68.3698, 0.81 ) }
    dend_48 { pt3dadd( -78.7762, -66.979, -70.1759, 0.37 ) }
    dend_48 { pt3dadd( -79.076, -67.2852, -70.6107, 0.52 ) }
    dend_48 { pt3dadd( -79.361, -67.5828, -71.0115, 0.66 ) }
    dend_48 { pt3dadd( -79.6838, -67.9383, -71.4755, 0.66 ) }
    dend_48 { pt3dadd( -80.3883, -68.6894, -72.3371, 0.37 ) }
    dend_48 { pt3dadd( -80.8404, -69.1523, -72.8874, 0.37 ) }
    dend_48 { pt3dadd( -81.541, -69.8499, -73.7032, 0.37 ) }
    dend_48 { pt3dadd( -81.9771, -70.2708, -74.2225, 0.66 ) }
    dend_48 { pt3dadd( -82.6756, -70.939, -75.0388, 1.11 ) }
    dend_48 { pt3dadd( -83.0017, -71.2509, -75.3955, 1.25 ) }
    dend_48 { pt3dadd( -84.1324, -72.2103, -76.5957, 0.22 ) }
    dend_48 { pt3dadd( -84.6158, -72.5533, -77.0665, 0.29 ) }
    dend_48 { pt3dadd( -85.046, -72.8092, -77.4444, 0.59 ) }
    dend_48 { pt3dadd( -85.5334, -73.0812, -77.8315, 0.81 ) }
    dend_48 { pt3dadd( -86.0509, -73.372, -78.2516, 0.81 ) }
    dend_48 { pt3dadd( -87.3525, -74.2455, -79.3803, 0.37 ) }
    dend_48 { pt3dadd( -87.7184, -74.5502, -79.7174, 0.37 ) }
    dend_48 { pt3dadd( -88.2921, -75.1609, -80.3661, 0.59 ) }
    dend_48 { pt3dadd( -88.4913, -75.4298, -80.6301, 0.81 ) }
    dend_48 { pt3dadd( -89.1474, -76.5535, -81.6137, 0.44 ) }
    dend_48 { pt3dadd( -89.546, -77.4327, -82.2674, 0.44 ) }
    dend_48 { pt3dadd( -89.8282, -78.2051, -82.7498, 0.37 ) }
    dend_48 { pt3dadd( -90.1522, -79.1749, -83.3268, 0.37 ) }
    dend_48 { pt3dadd( -90.3951, -79.89, -83.7484, 0.66 ) }
    dend_48 { pt3dadd( -90.6079, -80.421, -84.0726, 0.81 ) }
    dend_48 { pt3dadd( -90.8217, -80.921, -84.3553, 0.81 ) }
    dend_48 { pt3dadd( -91.2385, -81.8068, -84.8637, 0.29 ) }
    dend_48 { pt3dadd( -91.4848, -82.3019, -85.1294, 0.96 ) }
    dend_48 { pt3dadd( -92.0765, -83.4921, -85.6813, 0.29 ) }
    dend_48 { pt3dadd( -92.442, -84.2737, -86.0145, 0.29 ) }
    dend_48 { pt3dadd( -92.7907, -85.0676, -86.3031, 0.44 ) }
    dend_48 { pt3dadd( -92.989, -85.5122, -86.4512, 0.44 ) }
    dend_48 { pt3dadd( -93.3026, -86.237, -86.6499, 0.29 ) }
    dend_48 { pt3dadd( -93.4791, -86.6352, -86.7801, 0.59 ) }
    dend_48 { pt3dadd( -93.7403, -87.2807, -87.0081, 0.59 ) }
    dend_48 { pt3dadd( -93.9821, -87.9113, -87.2757, 0.52 ) }
    dend_48 { pt3dadd( -94.3966, -88.8523, -87.7283, 0.37 ) }
    dend_48 { pt3dadd( -94.6735, -89.4351, -88.0342, 0.88 ) }
    dend_48 { pt3dadd( -95.2027, -90.5136, -88.633, 0.44 ) }
    dend_48 { pt3dadd( -95.4939, -91.1313, -88.9769, 0.59 ) }
    dend_48 { pt3dadd( -95.7288, -91.6411, -89.2546, 0.59 ) }
    dend_48 { pt3dadd( -95.9998, -92.2668, -89.5623, 0.59 ) }
    dend_48 { pt3dadd( -96.2666, -92.9215, -89.8227, 0.37 ) }
    dend_48 { pt3dadd( -96.4822, -93.4082, -89.9642, 0.37 ) }
    dend_48 { pt3dadd( -96.8394, -94.1532, -90.0766, 0.29 ) }
    dend_48 { pt3dadd( -96.9744, -94.4211, -90.0875, 0.29 ) }
    dend_48 { pt3dadd( -97.307, -95.1104, -90.0567, 0.88 ) }
    dend_48 { pt3dadd( -97.5185, -95.5907, -90.003, 1.18 ) }
    dend_48 { pt3dadd( -97.8824, -96.3587, -89.8682, 0.29 ) }
    dend_48 { pt3dadd( -98.1608, -96.8954, -89.7601, 0.29 ) }
    dend_48 { pt3dadd( -98.5939, -97.6832, -89.6441, 0.29 ) }
    dend_48 { pt3dadd( -98.7921, -98.0521, -89.613, 0.88 ) }
    dend_48 { pt3dadd( -98.987, -98.4199, -89.6102, 0.88 ) }
    dend_48 { pt3dadd( -99.6507, -99.6209, -89.7111, 0.22 ) }
    dend_48 { pt3dadd( -99.8865, -100.022, -89.7893, 0.22 ) }
    dend_48 { pt3dadd( -100.43, -100.87, -90.0044, 0.59 ) }
    dend_48 { pt3dadd( -100.555, -101.054, -90.0622, 0.59 ) }
    dend_48 { pt3dadd( -101.069, -101.782, -90.3075, 0.22 ) }
    dend_48 { pt3dadd( -101.365, -102.202, -90.4617, 0.44 ) }
    dend_48 { pt3dadd( -101.774, -102.827, -90.728, 0.22 ) }
    dend_48 { pt3dadd( -102.338, -103.685, -91.0819, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -77.1742, -65.126, -66.7012, 0.29 ) }
    dend_47 { pt3dadd( -78.0494, -65.3441, -66.5843, 0.29 ) }
    dend_47 { pt3dadd( -78.5827, -65.5129, -66.4933, 0.29 ) }
    dend_47 { pt3dadd( -79.1035, -65.7002, -66.4132, 0.66 ) }
    dend_47 { pt3dadd( -79.3504, -65.8035, -66.38, 0.66 ) }
    dend_47 { pt3dadd( -80.2148, -66.1972, -66.2628, 0.29 ) }
    dend_47 { pt3dadd( -80.5871, -66.3739, -66.2172, 0.29 ) }
    dend_47 { pt3dadd( -80.8568, -66.5265, -66.1597, 0.66 ) }
    dend_47 { pt3dadd( -81.1106, -66.6852, -66.1024, 0.66 ) }
    dend_47 { pt3dadd( -81.9759, -67.2497, -65.9082, 0.29 ) }
    dend_47 { pt3dadd( -82.2855, -67.4364, -65.8438, 0.52 ) }
    dend_47 { pt3dadd( -82.5866, -67.5955, -65.7898, 0.52 ) }
    dend_47 { pt3dadd( -83.429, -67.9687, -65.624, 0.22 ) }
    dend_47 { pt3dadd( -83.8244, -68.116, -65.5392, 0.59 ) }
    dend_47 { pt3dadd( -84.079, -68.1988, -65.4723, 0.74 ) }
    dend_47 { pt3dadd( -84.5779, -68.331, -65.3346, 0.29 ) }
    dend_47 { pt3dadd( -84.8318, -68.3873, -65.2667, 0.29 ) }
    dend_47 { pt3dadd( -85.1664, -68.4447, -65.1778, 0.96 ) }
    dend_47 { pt3dadd( -85.5014, -68.4693, -65.114, 0.96 ) }
    dend_47 { pt3dadd( -86.4143, -68.528, -64.9092, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -22.5073, -125.03, 23.1235, 0.29 ) }
    dend_40 { pt3dadd( -22.3021, -125.034, 24.0041, 0.29 ) }
    dend_40 { pt3dadd( -21.7958, -125.1, 25.9132, 0.29 ) }
    dend_40 { pt3dadd( -21.4374, -125.198, 27.274, 0.59 ) }
    dend_40 { pt3dadd( -20.9776, -125.461, 29.1677, 0.66 ) }
    dend_40 { pt3dadd( -20.3262, -126.031, 31.811, 0.59 ) }
    dend_40 { pt3dadd( -19.8723, -126.606, 33.5324, 0.29 ) }
    dend_40 { pt3dadd( -19.5314, -127.173, 34.5345, 0.52 ) }
    dend_40 { pt3dadd( -19.3269, -127.856, 34.8884, 0.66 ) }
    dend_40 { pt3dadd( -19.0237, -129.38, 34.9893, 0.37 ) }
    dend_40 { pt3dadd( -18.657, -131.342, 34.8529, 0.29 ) }
    dend_40 { pt3dadd( -18.3826, -132.9, 34.6315, 0.29 ) }
    dend_40 { pt3dadd( -18.132, -134.447, 34.3316, 0.29 ) }
    dend_40 { pt3dadd( -17.8847, -135.853, 34.0378, 0.29 ) }
    dend_40 { pt3dadd( -17.513, -137.514, 33.6821, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -17.1218, -138.934, 33.3817, 0.29 ) }
    dend_40 { pt3dadd( -12.5915, -147.891, 41.4732, 0.29 ) }
    dend_40 { pt3dadd( -8.79097, -155.22, 51.444, 0.29 ) }
    dend_40 { pt3dadd( -2.30503, -162.921, 59.5652, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.5073, -125.03, 23.1235, 0.74 ) }
    dend_35 { pt3dadd( -23.3372, -125.988, 22.7334, 0.74 ) }
    dend_35 { pt3dadd( -24.0633, -126.98, 22.3951, 0.52 ) }
    dend_35 { pt3dadd( -24.6164, -127.824, 22.1498, 0.52 ) }
    dend_35 { pt3dadd( -25.4843, -129.369, 21.7858, 0.59 ) }
    dend_35 { pt3dadd( -25.8356, -130.158, 21.6796, 0.96 ) }
    dend_35 { pt3dadd( -26.106, -131.017, 21.6025, 1.18 ) }
    dend_35 { pt3dadd( -26.1994, -131.75, 21.4999, 1.18 ) }
    dend_35 { pt3dadd( -26.1731, -132.445, 21.404, 0.96 ) }
    dend_35 { pt3dadd( -25.992, -133.467, 21.1996, 0.66 ) }
    dend_35 { pt3dadd( -25.5475, -134.918, 20.6651, 0.52 ) }
    dend_35 { pt3dadd( -25.0433, -136.219, 20.0899, 0.52 ) }
    dend_35 { pt3dadd( -24.3911, -137.595, 19.3447, 0.29 ) }
    dend_35 { pt3dadd( -24.0955, -138.111, 19.0008, 0.37 ) }
    dend_35 { pt3dadd( -23.2763, -139.309, 17.9714, 0.29 ) }
    dend_35 { pt3dadd( -22.3831, -140.388, 16.6537, 0.29 ) }
    dend_35 { pt3dadd( -22.9029, -151.926, 14.1017, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.5426, -62.1633, -2.95211, 0.37 ) }
    dend_31 { pt3dadd( -7.97926, -63.9878, -2.35801, 0.37 ) }
    dend_31 { pt3dadd( -10.0431, -64.9177, -1.39982, 0.37 ) }
    dend_31 { pt3dadd( -11.5561, -65.6373, -0.489039, 0.37 ) }
    dend_31 { pt3dadd( -12.5821, -66.1392, 0.149332, 0.37 ) }
    dend_31 { pt3dadd( -13.8725, -66.788, 1.00717, 0.59 ) }
    dend_31 { pt3dadd( -15.1222, -67.435, 1.85217, 0.74 ) }
    dend_31 { pt3dadd( -16.0731, -67.9275, 2.69323, 0.52 ) }
    dend_31 { pt3dadd( -16.7911, -68.3071, 3.33685, 0.59 ) }
    dend_31 { pt3dadd( -17.4331, -68.7149, 3.86502, 0.74 ) }
    dend_31 { pt3dadd( -18.5465, -69.4239, 4.62993, 0.52 ) }
    dend_31 { pt3dadd( -19.2527, -69.8542, 5.01993, 0.52 ) }
    dend_31 { pt3dadd( -19.9204, -70.225, 5.31452, 0.74 ) }
    dend_31 { pt3dadd( -20.6723, -70.6177, 5.60958, 0.74 ) }
    dend_31 { pt3dadd( -21.3911, -71.0041, 5.87687, 0.52 ) }
    dend_31 { pt3dadd( -22.4339, -71.5585, 6.24915, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.5426, -62.1633, -2.95211, 0.88 ) }
    dend_18 { pt3dadd( -3.79145, -63.3786, -3.00225, 0.88 ) }
    dend_18 { pt3dadd( -4.26806, -64.9074, -2.9163, 0.66 ) }
    dend_18 { pt3dadd( -4.74495, -65.9816, -2.58081, 0.74 ) }
    dend_18 { pt3dadd( -5.15576, -66.6957, -2.25977, 0.88 ) }
    dend_18 { pt3dadd( -5.87847, -67.7771, -1.72786, 0.88 ) }
    dend_18 { pt3dadd( -6.34105, -68.4313, -1.40833, 1.03 ) }
    dend_18 { pt3dadd( -6.90725, -69.1459, -0.995484, 1.03 ) }
    dend_18 { pt3dadd( -8.19189, -70.81, -0.010391, 1.03 ) }
    dend_18 { pt3dadd( -8.91939, -71.8562, 0.556667, 1.03 ) }
    dend_18 { pt3dadd( -9.51124, -72.9123, 1.03337, 0.88 ) }
    dend_18 { pt3dadd( -9.8328, -73.818, 1.32155, 0.88 ) }
    dend_18 { pt3dadd( -9.92363, -74.6622, 1.50749, 0.88 ) }
    dend_18 { pt3dadd( -9.6887, -76.3, 1.6564, 1.25 ) }
    dend_18 { pt3dadd( -9.50198, -76.8954, 1.67475, 1.55 ) }
    dend_18 { pt3dadd( -9.13443, -77.732, 1.73693, 1.55 ) }
    dend_18 { pt3dadd( -8.52024, -78.8908, 1.94276, 1.55 ) }
    dend_18 { pt3dadd( -8.08062, -79.6118, 2.167, 1.55 ) }
    dend_18 { pt3dadd( -7.22432, -80.8583, 2.74613, 1.03 ) }
    dend_18 { pt3dadd( -6.52107, -81.7478, 3.33717, 1.03 ) }
    dend_18 { pt3dadd( -5.91634, -82.4474, 3.89917, 0.81 ) }
    dend_18 { pt3dadd( -4.92687, -83.4844, 4.89344, 0.81 ) }
    dend_18 { pt3dadd( -4.21849, -84.1636, 5.62436, 1.03 ) }
    dend_18 { pt3dadd( -3.52251, -84.7553, 6.29553, 1.03 ) }
    dend_18 { pt3dadd( -2.72108, -85.3685, 6.98773, 1.03 ) }
    dend_18 { pt3dadd( -2.05583, -85.871, 7.46497, 0.88 ) }
    dend_18 { pt3dadd( -1.03081, -86.701, 8.0934, 0.88 ) }
    dend_18 { pt3dadd( -0.515805, -87.1476, 8.35136, 0.96 ) }
    dend_18 { pt3dadd( 0.0777802, -87.7259, 8.61449, 0.96 ) }
    dend_18 { pt3dadd( 0.884304, -88.6081, 8.94149, 1.33 ) }
    dend_18 { pt3dadd( 1.3114, -89.1391, 9.09038, 1.62 ) }
    dend_18 { pt3dadd( 1.66598, -89.6211, 9.21321, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.84443, -26.3952, -5.25856, 0.66 ) }
    dend_16 { pt3dadd( 7.15, -29.3402, -2.70476, 0.66 ) }
    dend_16 { pt3dadd( 7.46452, -30.319, -1.94435, 0.88 ) }
    dend_16 { pt3dadd( 8.01466, -32.2785, -0.611429, 1.03 ) }
    dend_16 { pt3dadd( 8.28644, -33.2154, -0.0372911, 1.03 ) }
    dend_16 { pt3dadd( 8.55328, -34.0407, 0.436961, 1.03 ) }
    dend_16 { pt3dadd( 8.93005, -35.0569, 0.99727, 0.37 ) }
    dend_16 { pt3dadd( 9.28995, -36.1619, 1.47301, 0.37 ) }
    dend_16 { pt3dadd( 9.80365, -37.2569, 1.86586, 0.59 ) }
    dend_16 { pt3dadd( 10.5402, -38.1799, 2.07491, 0.81 ) }
    dend_16 { pt3dadd( 11.1435, -38.6859, 2.18752, 0.81 ) }
    dend_16 { pt3dadd( 11.8407, -39.115, 2.32396, 0.52 ) }
    dend_16 { pt3dadd( 12.5011, -39.4517, 2.47469, 0.81 ) }
    dend_16 { pt3dadd( 13.4869, -39.9307, 2.74036, 1.25 ) }
    dend_16 { pt3dadd( 13.8933, -40.1766, 2.89151, 1.69 ) }
    dend_16 { pt3dadd( 14.3981, -40.6322, 3.16398, 1.69 ) }
    dend_16 { pt3dadd( 15.0698, -41.7836, 3.76877, 0.96 ) }
    dend_16 { pt3dadd( 15.2912, -42.5546, 4.11343, 0.66 ) }
    dend_16 { pt3dadd( 15.3947, -43.1637, 4.36453, 0.81 ) }
    dend_16 { pt3dadd( 15.5738, -44.4437, 4.8836, 0.44 ) }
    dend_16 { pt3dadd( 15.774, -45.456, 5.29592, 0.44 ) }
    dend_16 { pt3dadd( 16.0023, -46.2487, 5.61443, 0.44 ) }
    dend_16 { pt3dadd( 16.3512, -46.947, 5.94791, 0.88 ) }
    dend_16 { pt3dadd( 17.0896, -47.8227, 6.53809, 1.25 ) }
    dend_16 { pt3dadd( 18.0128, -48.612, 7.20695, 0.66 ) }
    dend_16 { pt3dadd( 18.8478, -49.1969, 7.75811, 0.52 ) }
    dend_16 { pt3dadd( 19.3553, -49.5373, 8.07809, 0.52 ) }
    dend_16 { pt3dadd( 20.5973, -50.4245, 8.87957, 0.74 ) }
    dend_16 { pt3dadd( 21.6024, -51.2303, 9.52295, 1.25 ) }
    dend_16 { pt3dadd( 21.9849, -51.5843, 9.74456, 1.25 ) }
    dend_16 { pt3dadd( 22.575, -52.2065, 10.0312, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 23.263, -53.0283, 10.2679, 0.44 ) }
    dend_16 { pt3dadd( 24.1137, -54.133, 10.4293, 0.37 ) }
    dend_16 { pt3dadd( 24.6005, -54.7927, 10.4243, 0.37 ) }
    dend_16 { pt3dadd( 25.0995, -55.458, 10.3575, 0.96 ) }
    dend_16 { pt3dadd( 25.4844, -55.9526, 10.29, 1.33 ) }
    dend_16 { pt3dadd( 26.6313, -57.2924, 10.0574, 0.29 ) }
    dend_16 { pt3dadd( 27.0521, -57.7218, 9.96092, 0.29 ) }
    dend_16 { pt3dadd( 27.4759, -58.1061, 9.84837, 0.29 ) }
    dend_16 { pt3dadd( 27.6344, -58.2486, 9.80756, 0.44 ) }
    dend_16 { pt3dadd( 33.2416, -66.1294, 12.2347, 0.44 ) }
    dend_16 { pt3dadd( 39.8007, -73.5867, 13.3209, 0.44 ) }
    dend_16 { pt3dadd( 45.2542, -81.9021, 13.8483, 0.44 ) }
    dend_16 { pt3dadd( 51.2593, -89.8237, 14.6573, 0.44 ) }
    dend_16 { pt3dadd( 57.0455, -97.7818, 16.2676, 0.44 ) }
    dend_16 { pt3dadd( 62.3574, -106.142, 17.2662, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.84443, -26.3952, -5.25856, 1.03 ) }
    dend_11 { pt3dadd( 5.87277, -27.8871, -5.35102, 1.03 ) }
    dend_11 { pt3dadd( 6.05163, -29.3594, -5.49023, 1.03 ) }
    dend_11 { pt3dadd( 6.29445, -30.4162, -5.62998, 0.96 ) }
    dend_11 { pt3dadd( 6.60337, -31.4087, -5.78962, 0.96 ) }
    dend_11 { pt3dadd( 6.977, -32.3625, -5.97001, 0.96 ) }
    dend_11 { pt3dadd( 7.28853, -32.9986, -6.08498, 1.18 ) }
    dend_11 { pt3dadd( 7.95913, -33.8313, -6.23667, 1.47 ) }
    dend_11 { pt3dadd( 8.66835, -34.4727, -6.33865, 2.21 ) }
    dend_11 { pt3dadd( 8.98151, -34.7191, -6.35872, 2.21 ) }
    dend_11 { pt3dadd( 9.49235, -35.1179, -6.33386, 1.99 ) }
    dend_11 { pt3dadd( 10.429, -35.9106, -6.17929, 1.33 ) }
    dend_11 { pt3dadd( 11.3208, -36.809, -5.92341, 0.88 ) }
    dend_11 { pt3dadd( 11.9117, -37.5487, -5.66227, 0.74 ) }
    dend_11 { pt3dadd( 12.323, -38.2666, -5.39083, 0.74 ) }
    dend_11 { pt3dadd( 12.6714, -39.1475, -5.06357, 1.33 ) }
    dend_11 { pt3dadd( 12.8143, -39.6928, -4.8771, 1.62 ) }
    dend_11 { pt3dadd( 12.9149, -40.2977, -4.69989, 1.92 ) }
    dend_11 { pt3dadd( 12.9897, -40.9524, -4.55578, 1.69 ) }
    dend_11 { pt3dadd( 13.157, -42.2014, -4.38142, 1.33 ) }
    dend_11 { pt3dadd( 13.3888, -43.464, -4.31083, 1.03 ) }
    dend_11 { pt3dadd( 13.6021, -44.329, -4.33362, 0.88 ) }
    dend_11 { pt3dadd( 13.864, -45.1227, -4.41161, 1.03 ) }
    dend_11 { pt3dadd( 14.2779, -46.1533, -4.57713, 1.03 ) }
    dend_11 { pt3dadd( 14.7546, -47.181, -4.81097, 1.03 ) }
    dend_11 { pt3dadd( 15.1833, -48.0537, -5.07169, 1.33 ) }
    dend_11 { pt3dadd( 15.481, -48.7144, -5.30562, 1.69 ) }
    dend_11 { pt3dadd( 15.7793, -49.5253, -5.61144, 1.47 ) }
    dend_11 { pt3dadd( 15.9272, -50.1008, -5.83341, 1.03 ) }
    dend_11 { pt3dadd( 16.0558, -50.9887, -6.1664, 0.96 ) }
    dend_11 { pt3dadd( 16.0923, -51.8077, -6.47484, 0.96 ) }
    dend_11 { pt3dadd( 16.0636, -52.8185, -6.84164, 1.4 ) }
    dend_11 { pt3dadd( 15.9924, -53.8945, -7.20618, 1.4 ) }
    dend_11 { pt3dadd( 15.9273, -54.834, -7.51506, 1.55 ) }
    dend_11 { pt3dadd( 15.92, -55.3417, -7.67504, 1.77 ) }
    dend_11 { pt3dadd( 15.9803, -56.308, -7.95986, 0.96 ) }
    dend_11 { pt3dadd( 16.1319, -57.1636, -8.18574, 0.66 ) }
    dend_11 { pt3dadd( 16.4056, -57.9506, -8.34348, 0.66 ) }
    dend_11 { pt3dadd( 16.8233, -58.6889, -8.45817, 0.96 ) }
    dend_11 { pt3dadd( 17.3844, -59.4007, -8.55733, 1.11 ) }
    dend_11 { pt3dadd( 17.6851, -59.7051, -8.60712, 1.4 ) }
    dend_11 { pt3dadd( 17.9581, -59.9425, -8.65669, 1.4 ) }
    dend_11 { pt3dadd( 18.5302, -60.4358, -8.76369, 1.4 ) }
    dend_11 { pt3dadd( 19.2034, -61.0874, -8.90458, 0.66 ) }
    dend_11 { pt3dadd( 19.4941, -61.445, -8.9873, 0.52 ) }
    dend_11 { pt3dadd( 19.8151, -61.9649, -9.10668, 0.52 ) }
    dend_11 { pt3dadd( 20.2404, -62.8248, -9.26045, 0.81 ) }
    dend_11 { pt3dadd( 20.6456, -63.7901, -9.35688, 1.03 ) }
    dend_11 { pt3dadd( 20.8594, -64.4312, -9.38967, 1.03 ) }
    dend_11 { pt3dadd( 21.0892, -65.299, -9.37942, 1.03 ) }
    dend_11 { pt3dadd( 21.2547, -66.1703, -9.38516, 1.03 ) }
    dend_11 { pt3dadd( 21.3816, -67.0813, -9.40748, 0.88 ) }
    dend_11 { pt3dadd( 21.498, -68.2014, -9.5055, 1.03 ) }
    dend_11 { pt3dadd( 21.594, -69.2042, -9.66061, 0.52 ) }
    dend_11 { pt3dadd( 21.6864, -70.1567, -9.88855, 0.52 ) }
    dend_11 { pt3dadd( 21.7948, -71.5539, -10.3632, 0.88 ) }
    dend_11 { pt3dadd( 21.8267, -72.1279, -10.6132, 1.11 ) }
    dend_11 { pt3dadd( 21.8529, -73.0425, -11.072, 0.59 ) }
    dend_11 { pt3dadd( 21.862, -73.4301, -11.2647, 0.59 ) }
    dend_11 { pt3dadd( 21.9119, -74.2927, -11.5834, 0.52 ) }
    dend_11 { pt3dadd( 21.9868, -75.1998, -11.7306, 0.52 ) }
    dend_11 { pt3dadd( 22.0525, -75.9228, -11.6152, 1.11 ) }
    dend_11 { pt3dadd( 22.0815, -76.5286, -11.3864, 1.25 ) }
    dend_11 { pt3dadd( 22.0972, -77.4376, -10.8905, 1.18 ) }
    dend_11 { pt3dadd( 22.1049, -78.3221, -10.336, 0.52 ) }
    dend_11 { pt3dadd( 22.1285, -78.9323, -9.9031, 0.52 ) }
    dend_11 { pt3dadd( 22.195, -79.7675, -9.33797, 0.52 ) }
    dend_11 { pt3dadd( 22.2247, -80.0842, -9.1622, 0.81 ) }
    dend_11 { pt3dadd( 22.2828, -80.6705, -8.93512, 0.74 ) }
    dend_11 { pt3dadd( 22.3305, -81.4357, -8.76555, 0.74 ) }
    dend_11 { pt3dadd( 22.3379, -82.2025, -8.66918, 1.03 ) }
    dend_11 { pt3dadd( 22.2721, -83.2272, -8.60296, 0.66 ) }
    dend_11 { pt3dadd( 22.1716, -83.9081, -8.5747, 0.52 ) }
    dend_11 { pt3dadd( 21.9635, -84.702, -8.54191, 1.11 ) }
    dend_11 { pt3dadd( 21.7001, -85.3753, -8.55041, 1.11 ) }
    dend_11 { pt3dadd( 21.2417, -86.3386, -8.61317, 0.81 ) }
    dend_11 { pt3dadd( 20.7143, -87.3507, -8.74177, 0.66 ) }
    dend_11 { pt3dadd( 20.344, -88.0614, -8.85617, 0.88 ) }
    dend_11 { pt3dadd( 19.875, -89.0313, -9.07738, 0.66 ) }
    dend_11 { pt3dadd( 19.276, -90.3167, -9.50699, 0.59 ) }
    dend_11 { pt3dadd( 18.9052, -91.1611, -9.87214, 0.88 ) }
    dend_11 { pt3dadd( 18.6001, -91.9009, -10.2435, 1.18 ) }
    dend_11 { pt3dadd( 18.3876, -92.4361, -10.5217, 0.96 ) }
    dend_11 { pt3dadd( 18.114, -93.1436, -10.8949, 0.96 ) }
    dend_11 { pt3dadd( 17.6488, -94.4284, -11.513, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 17.5017, -94.8498, -11.6817, 0.81 ) }
    dend_11 { pt3dadd( 17.2332, -95.6696, -11.9657, 0.66 ) }
    dend_11 { pt3dadd( 17.0732, -96.2871, -12.0996, 0.66 ) }
    dend_11 { pt3dadd( 16.948, -97.038, -12.1507, 0.96 ) }
    dend_11 { pt3dadd( 16.9581, -97.933, -11.9571, 0.88 ) }
    dend_11 { pt3dadd( 17.0802, -98.699, -11.6446, 0.88 ) }
    dend_11 { pt3dadd( 17.2148, -99.3621, -11.3335, 0.37 ) }
    dend_11 { pt3dadd( 17.5091, -100.569, -10.7402, 1.03 ) }
    dend_11 { pt3dadd( 17.6551, -101.205, -10.4418, 1.03 ) }
    dend_11 { pt3dadd( 17.9061, -102.622, -9.79674, 0.44 ) }
    dend_11 { pt3dadd( 18.0206, -103.662, -9.42964, 0.44 ) }
    dend_11 { pt3dadd( 18.0407, -104.279, -9.35189, 0.74 ) }
    dend_11 { pt3dadd( 18.0177, -104.933, -9.48328, 0.74 ) }
    dend_11 { pt3dadd( 17.9525, -105.855, -9.89933, 0.44 ) }
    dend_11 { pt3dadd( 17.9075, -106.598, -10.324, 0.66 ) }
    dend_11 { pt3dadd( 17.8608, -107.673, -11.029, 0.44 ) }
    dend_11 { pt3dadd( 17.8289, -109.208, -12.0627, 0.88 ) }
    dend_11 { pt3dadd( 17.844, -110.885, -13.1499, 0.52 ) }
    dend_11 { pt3dadd( 17.8715, -111.738, -13.6938, 0.74 ) }
    dend_11 { pt3dadd( 17.9411, -112.879, -14.4046, 1.33 ) }
    dend_11 { pt3dadd( 17.9876, -113.525, -14.7774, 1.33 ) }
    dend_11 { pt3dadd( 18.0694, -114.85, -15.4131, 0.74 ) }
    dend_11 { pt3dadd( 18.1155, -115.688, -15.7093, 0.66 ) }
    dend_11 { pt3dadd( 18.1376, -116.875, -16.0029, 0.66 ) }
    dend_11 { pt3dadd( 18.0921, -117.702, -16.1646, 0.81 ) }
    dend_11 { pt3dadd( 17.9604, -118.551, -16.2995, 0.59 ) }
    dend_11 { pt3dadd( 17.8233, -119.121, -16.3523, 1.18 ) }
    dend_11 { pt3dadd( 17.7357, -119.387, -16.3638, 1.18 ) }
    dend_11 { pt3dadd( 17.3879, -120.329, -16.3715, 0.44 ) }
    dend_11 { pt3dadd( 17.1107, -121.144, -16.3084, 0.44 ) }
    dend_11 { pt3dadd( 16.9254, -121.824, -16.2283, 1.03 ) }
    dend_11 { pt3dadd( 16.8614, -122.304, -16.1561, 1.4 ) }
    dend_11 { pt3dadd( 16.9378, -123.299, -15.9153, 0.52 ) }
    dend_11 { pt3dadd( 17.0656, -123.966, -15.7404, 0.52 ) }
    dend_11 { pt3dadd( 17.3928, -124.83, -15.4737, 0.74 ) }
    dend_11 { pt3dadd( 17.5642, -125.137, -15.3471, 0.74 ) }
    dend_11 { pt3dadd( 17.9995, -125.737, -14.9912, 0.59 ) }
    dend_11 { pt3dadd( 18.6127, -126.398, -14.466, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.84443, -26.3952, -5.25856, 0.88 ) }
    dend_2 { pt3dadd( 9.74539, -26.3533, -9.02819, 0.88 ) }
    dend_2 { pt3dadd( 10.8789, -26.295, -9.97349, 0.88 ) }
    dend_2 { pt3dadd( 12.0293, -26.2252, -10.791, 1.03 ) }
    dend_2 { pt3dadd( 12.8176, -26.174, -11.2716, 1.33 ) }
    dend_2 { pt3dadd( 13.5478, -26.1318, -11.6783, 1.62 ) }
    dend_2 { pt3dadd( 14.6069, -26.0876, -12.2322, 1.84 ) }
    dend_2 { pt3dadd( 15.529, -25.9936, -12.579, 1.47 ) }
    dend_2 { pt3dadd( 16.6055, -25.8965, -13.1467, 1.18 ) }
    dend_2 { pt3dadd( 17.3376, -25.8114, -13.931, 0.81 ) }
    dend_2 { pt3dadd( 18.0562, -25.6986, -15.0599, 0.81 ) }
    dend_2 { pt3dadd( 18.4921, -25.6433, -15.8649, 1.11 ) }
    dend_2 { pt3dadd( 19.3854, -25.6076, -17.7228, 1.33 ) }
    dend_2 { pt3dadd( 20.3064, -25.6283, -19.7611, 1.77 ) }
    dend_2 { pt3dadd( 22.39, -25.8055, -24.4674, 1.47 ) }
    dend_2 { pt3dadd( 23.0695, -25.8929, -25.9419, 1.11 ) }
    dend_2 { pt3dadd( 23.7822, -25.9931, -27.3578, 1.11 ) }
    dend_2 { pt3dadd( 24.7824, -26.1236, -29.0501, 0.81 ) }
    dend_2 { pt3dadd( 25.4256, -26.2057, -29.8984, 0.96 ) }
    dend_2 { pt3dadd( 26.5075, -26.2871, -30.9161, 0.88 ) }
    dend_2 { pt3dadd( 27.4245, -26.2071, -31.5877, 0.74 ) }
    dend_2 { pt3dadd( 28.12, -25.9893, -32.1486, 0.59 ) }
    dend_2 { pt3dadd( 28.994, -25.5019, -33.0103, 1.03 ) }
    dend_2 { pt3dadd( 29.6379, -25.0419, -33.6888, 1.55 ) }
    dend_2 { pt3dadd( 30.2279, -24.5897, -34.3256, 1.69 ) }
    dend_2 { pt3dadd( 31.9804, -23.2241, -36.2985, 1.69 ) }
    dend_2 { pt3dadd( 32.5182, -22.8216, -36.9305, 1.69 ) }
    dend_2 { pt3dadd( 33.8698, -21.8953, -38.4991, 0.88 ) }
    dend_2 { pt3dadd( 34.6463, -21.4508, -39.3365, 0.81 ) }
    dend_2 { pt3dadd( 35.5974, -21.0387, -40.2191, 1.11 ) }
    dend_2 { pt3dadd( 36.8655, -20.6728, -41.213, 1.18 ) }
    dend_2 { pt3dadd( 38.0492, -20.5263, -41.9384, 0.59 ) }
    dend_2 { pt3dadd( 38.5835, -20.5379, -42.2338, 0.59 ) }
    dend_2 { pt3dadd( 39.9039, -20.7961, -42.8246, 0.96 ) }
    dend_2 { pt3dadd( 40.8525, -21.1471, -43.2192, 1.18 ) }
    dend_2 { pt3dadd( 41.6662, -21.5752, -43.5056, 1.18 ) }
    dend_2 { pt3dadd( 42.5059, -22.0979, -43.722, 1.4 ) }
    dend_2 { pt3dadd( 43.4782, -22.7513, -43.9236, 1.4 ) }
    dend_2 { pt3dadd( 44.3833, -23.3357, -44.0955, 1.11 ) }
    dend_2 { pt3dadd( 45.0259, -23.69, -44.2001, 1.11 ) }
    dend_2 { pt3dadd( 45.8207, -24.0018, -44.3183, 1.03 ) }
    dend_2 { pt3dadd( 46.8647, -24.26, -44.4575, 1.03 ) }
    dend_2 { pt3dadd( 47.7774, -24.3714, -44.5651, 1.03 ) }
    dend_2 { pt3dadd( 48.8324, -24.3986, -44.6748, 0.96 ) }
    dend_2 { pt3dadd( 50.2872, -24.3224, -44.8244, 0.88 ) }
    dend_2 { pt3dadd( 51.8752, -24.1531, -44.9499, 0.88 ) }
    dend_2 { pt3dadd( 52.9309, -23.9858, -45.012, 1.03 ) }
    dend_2 { pt3dadd( 53.7585, -23.8291, -45.0717, 1.11 ) }
    dend_2 { pt3dadd( 54.4348, -23.6973, -45.1482, 1.18 ) }
    dend_2 { pt3dadd( 55.0357, -23.6083, -45.293, 1.18 ) }
    dend_2 { pt3dadd( 56.2078, -23.5631, -45.8354, 0.81 ) }
    dend_2 { pt3dadd( 57.0185, -23.6624, -46.4079, 0.74 ) }
    dend_2 { pt3dadd( 58.0559, -23.9119, -47.2977, 1.18 ) }
    dend_2 { pt3dadd( 58.8373, -24.1512, -48.0372, 1.4 ) }
    dend_2 { pt3dadd( 60.4078, -24.6808, -49.6564, 1.18 ) }
    dend_2 { pt3dadd( 61.6043, -25.078, -50.9717, 0.88 ) }
    dend_2 { pt3dadd( 62.4863, -25.3342, -52.0261, 0.74 ) }
    dend_2 { pt3dadd( 63.3807, -25.5285, -53.0843, 0.74 ) }
    dend_2 { pt3dadd( 64.206, -25.6059, -53.9941, 1.11 ) }
    dend_2 { pt3dadd( 65.0943, -25.5727, -54.9244, 1.4 ) }
    dend_2 { pt3dadd( 65.9845, -25.4764, -55.8134, 1.4 ) }
    dend_2 { pt3dadd( 67.2216, -25.3497, -57.0712, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 67.9428, -25.313, -57.8458, 0.74 ) }
    dend_2 { pt3dadd( 68.844, -25.3765, -58.8675, 0.66 ) }
    dend_2 { pt3dadd( 69.9122, -25.6396, -60.1307, 0.81 ) }
    dend_2 { pt3dadd( 70.999, -26.102, -61.3485, 0.74 ) }
    dend_2 { pt3dadd( 71.9084, -26.5996, -62.3451, 1.25 ) }
    dend_2 { pt3dadd( 72.4176, -26.9009, -62.8679, 1.69 ) }
    dend_2 { pt3dadd( 73.087, -27.2617, -63.5117, 1.69 ) }
    dend_2 { pt3dadd( 73.7983, -27.5303, -64.0802, 1.4 ) }
    dend_2 { pt3dadd( 74.9258, -27.7006, -64.781, 0.88 ) }
    dend_2 { pt3dadd( 76.5891, -27.5916, -65.6294, 0.81 ) }
    dend_2 { pt3dadd( 77.3488, -27.4665, -65.9724, 0.81 ) }
    dend_2 { pt3dadd( 78.4143, -27.2771, -66.3882, 0.81 ) }
    dend_2 { pt3dadd( 79.7927, -27.0408, -66.8246, 0.81 ) }
    dend_2 { pt3dadd( 80.6587, -26.9267, -67.0369, 0.81 ) }
    dend_2 { pt3dadd( 81.8869, -26.8611, -67.2698, 0.81 ) }
    dend_2 { pt3dadd( 82.7158, -26.9329, -67.3637, 0.96 ) }
    dend_2 { pt3dadd( 83.9808, -27.2607, -67.5406, 0.96 ) }
    dend_2 { pt3dadd( 84.8264, -27.6291, -67.7432, 1.18 ) }
    dend_2 { pt3dadd( 85.5668, -28.0545, -68.0256, 1.47 ) }
    dend_2 { pt3dadd( 86.3153, -28.5325, -68.3757, 1.47 ) }
    dend_2 { pt3dadd( 87.401, -29.2383, -68.9355, 0.74 ) }
    dend_2 { pt3dadd( 88.6617, -30.0057, -69.6206, 0.74 ) }
    dend_2 { pt3dadd( 90.2047, -30.8346, -70.5054, 0.66 ) }
    dend_2 { pt3dadd( 91.6404, -31.5159, -71.3865, 0.74 ) }
    dend_2 { pt3dadd( 92.5372, -31.8655, -71.9444, 0.81 ) }
    dend_2 { pt3dadd( 93.5686, -32.1546, -72.5684, 0.81 ) }
    dend_2 { pt3dadd( 94.0957, -32.2362, -72.8672, 1.11 ) }
    dend_2 { pt3dadd( 95.366, -32.2677, -73.552, 1.25 ) }
    dend_2 { pt3dadd( 95.9222, -32.2139, -73.8934, 1.62 ) }
    dend_2 { pt3dadd( 96.5231, -32.091, -74.3804, 1.62 ) }
    dend_2 { pt3dadd( 97.6778, -31.7928, -75.4851, 0.59 ) }
    dend_2 { pt3dadd( 98.3894, -31.5972, -76.2414, 0.59 ) }
    dend_2 { pt3dadd( 99.4552, -31.3191, -77.4099, 0.88 ) }
    dend_2 { pt3dadd( 100.886, -30.9849, -78.9886, 1.4 ) }
    dend_2 { pt3dadd( 102.335, -30.7106, -80.5308, 0.74 ) }
    dend_2 { pt3dadd( 103.195, -30.5937, -81.4031, 0.59 ) }
    dend_2 { pt3dadd( 103.935, -30.5423, -82.0788, 0.81 ) }
    dend_2 { pt3dadd( 104.609, -30.5511, -82.5491, 0.81 ) }
    dend_2 { pt3dadd( 105.271, -30.6053, -82.8348, 0.96 ) }
    dend_2 { pt3dadd( 105.964, -30.6653, -83.0071, 0.96 ) }
    dend_2 { pt3dadd( 106.795, -30.7172, -83.1631, 0.59 ) }
    dend_2 { pt3dadd( 108.09, -30.7347, -83.4295, 0.59 ) }
    dend_2 { pt3dadd( 109.341, -30.6813, -83.6906, 0.66 ) }
    dend_2 { pt3dadd( 110.062, -30.61, -83.9071, 1.03 ) }
    dend_2 { pt3dadd( 111.232, -30.4534, -84.3351, 1.03 ) }
    dend_2 { pt3dadd( 112.357, -30.2135, -85.0749, 0.59 ) }
    dend_2 { pt3dadd( 112.906, -30.0453, -85.57, 0.59 ) }
    dend_2 { pt3dadd( 113.613, -29.7884, -86.3337, 0.59 ) }
    dend_2 { pt3dadd( 114.678, -29.4317, -87.5862, 1.11 ) }
    dend_2 { pt3dadd( 115.155, -29.3112, -88.1525, 1.33 ) }
    dend_2 { pt3dadd( 117.849, -28.8196, -91.2052, 1.03 ) }
    dend_2 { pt3dadd( 118.34, -28.7455, -91.7136, 1.4 ) }
    dend_2 { pt3dadd( 119.324, -28.6115, -92.6209, 0.81 ) }
    dend_2 { pt3dadd( 120.332, -28.4786, -93.4203, 0.74 ) }
    dend_2 { pt3dadd( 121.633, -28.3079, -94.2468, 0.59 ) }
    dend_2 { pt3dadd( 122.509, -28.1902, -94.6967, 0.59 ) }
    dend_2 { pt3dadd( 123.937, -28.0037, -95.1965, 0.59 ) }
    dend_2 { pt3dadd( 125.63, -27.709, -95.785, 0.88 ) }
    dend_2 { pt3dadd( 126.231, -27.5417, -95.9871, 1.25 ) }
    dend_2 { pt3dadd( 126.767, -27.3345, -96.1611, 1.55 ) }
    dend_2 { pt3dadd( 127.559, -26.9696, -96.4317, 1.55 ) }
    dend_2 { pt3dadd( 128.198, -26.6627, -96.6696, 1.33 ) }
    dend_2 { pt3dadd( 128.989, -26.2812, -96.9703, 0.66 ) }
    dend_2 { pt3dadd( 130.0, -25.8148, -97.3503, 0.66 ) }
    dend_2 { pt3dadd( 130.668, -25.5331, -97.6693, 0.66 ) }
    dend_2 { pt3dadd( 131.874, -25.0389, -98.4074, 0.66 ) }
    dend_2 { pt3dadd( 132.385, -24.8938, -98.9654, 0.66 ) }
    dend_2 { pt3dadd( 132.688, -24.8407, -99.3914, 0.96 ) }
    dend_2 { pt3dadd( 133.042, -24.8093, -99.9469, 0.96 ) }
    dend_2 { pt3dadd( 134.103, -24.8143, -101.655, 0.74 ) }
    dend_2 { pt3dadd( 134.74, -24.8528, -102.668, 1.62 ) }
    dend_2 { pt3dadd( 137.304, -25.0706, -106.552, 0.66 ) }
    dend_2 { pt3dadd( 137.696, -25.092, -107.114, 0.66 ) }
    dend_2 { pt3dadd( 138.305, -25.1035, -107.899, 1.11 ) }
    dend_2 { pt3dadd( 139.114, -25.0996, -108.812, 1.11 ) }
    dend_2 { pt3dadd( 139.957, -25.0542, -109.573, 0.52 ) }
    dend_2 { pt3dadd( 140.809, -24.946, -110.16, 0.52 ) }
    dend_2 { pt3dadd( 141.908, -24.677, -110.726, 1.25 ) }
    dend_2 { pt3dadd( 142.755, -24.43, -111.171, 0.88 ) }
    dend_2 { pt3dadd( 144.366, -23.8574, -112.022, 0.44 ) }
    dend_2 { pt3dadd( 145.289, -23.4678, -112.493, 0.44 ) }
    dend_2 { pt3dadd( 146.657, -22.816, -113.167, 0.52 ) }
    dend_2 { pt3dadd( 147.564, -22.344, -113.598, 0.88 ) }
    dend_2 { pt3dadd( 148.015, -22.0984, -113.802, 1.11 ) }
    dend_2 { pt3dadd( 148.396, -21.8614, -114.026, 1.11 ) }
    dend_2 { pt3dadd( 148.698, -21.6404, -114.264, 1.11 ) }
    dend_2 { pt3dadd( 149.663, -20.8468, -115.337, 0.52 ) }
    dend_2 { pt3dadd( 150.035, -20.5304, -115.919, 0.52 ) }
    dend_2 { pt3dadd( 150.544, -20.1101, -116.83, 0.81 ) }
    dend_2 { pt3dadd( 151.735, -19.2, -119.022, 0.81 ) }
    dend_2 { pt3dadd( 152.302, -18.7935, -120.033, 1.11 ) }
    dend_2 { pt3dadd( 152.556, -18.6286, -120.434, 1.92 ) }
    dend_2 { pt3dadd( 154.081, -17.784, -122.395, 0.59 ) }
    dend_2 { pt3dadd( 154.282, -17.6944, -122.59, 0.59 ) }
    dend_2 { pt3dadd( 155.041, -17.4458, -123.057, 0.88 ) }
    dend_2 { pt3dadd( 156.044, -17.2139, -123.409, 0.44 ) }
    dend_2 { pt3dadd( 157.696, -16.9141, -123.885, 0.44 ) }
    dend_2 { pt3dadd( 159.002, -16.721, -124.22, 0.74 ) }
    dend_2 { pt3dadd( 159.738, -16.6464, -124.434, 0.74 ) }
    dend_2 { pt3dadd( 160.821, -16.6119, -124.938, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 161.458, -16.65, -125.389, 0.52 ) }
    dend_2 { pt3dadd( 162.399, -16.7842, -126.277, 0.59 ) }
    dend_2 { pt3dadd( 162.753, -16.8389, -126.665, 0.59 ) }
    dend_2 { pt3dadd( 164.29, -17.0124, -128.457, 0.59 ) }
    dend_2 { pt3dadd( 165.303, -17.0535, -129.641, 0.81 ) }
    dend_2 { pt3dadd( 166.254, -17.0092, -130.754, 1.4 ) }
    dend_2 { pt3dadd( 166.764, -16.9157, -131.305, 1.55 ) }
    dend_2 { pt3dadd( 167.958, -16.4727, -132.39, 0.44 ) }
    dend_2 { pt3dadd( 168.474, -16.1773, -132.752, 0.88 ) }
    dend_2 { pt3dadd( 169.123, -15.7237, -133.039, 0.88 ) }
    dend_2 { pt3dadd( 169.83, -15.2243, -133.33, 0.59 ) }
    dend_2 { pt3dadd( 170.924, -14.5021, -133.795, 0.59 ) }
    dend_2 { pt3dadd( 171.655, -14.1021, -134.215, 0.81 ) }
    dend_2 { pt3dadd( 172.481, -13.7571, -134.797, 0.81 ) }
    dend_2 { pt3dadd( 173.567, -13.3892, -135.713, 0.52 ) }
    dend_2 { pt3dadd( 174.785, -13.0162, -136.928, 0.74 ) }
    dend_2 { pt3dadd( 175.172, -12.891, -137.486, 0.74 ) }
    dend_2 { pt3dadd( 175.956, -12.5295, -139.211, 0.37 ) }
    dend_2 { pt3dadd( 176.253, -12.3058, -140.145, 0.37 ) }
    dend_2 { pt3dadd( 176.601, -11.8793, -141.653, 0.37 ) }
    dend_2 { pt3dadd( 176.828, -11.4242, -142.986, 0.59 ) }
    dend_2 { pt3dadd( 177.413, -10.0012, -146.636, 0.88 ) }
    dend_2 { pt3dadd( 177.699, -9.31556, -148.299, 0.52 ) }
    dend_2 { pt3dadd( 177.819, -9.09466, -148.886, 0.52 ) }
    dend_2 { pt3dadd( 178.129, -8.72156, -150.168, 0.52 ) }
    dend_2 { pt3dadd( 178.431, -8.48252, -151.114, 0.81 ) }
    dend_2 { pt3dadd( 178.886, -8.22598, -152.209, 0.59 ) }
    dend_2 { pt3dadd( 179.323, -8.04799, -153.048, 0.59 ) }
    dend_2 { pt3dadd( 180.813, -7.59995, -155.743, 1.18 ) }
    dend_2 { pt3dadd( 182.56, -7.18839, -159.099, 0.74 ) }
    dend_2 { pt3dadd( 182.974, -7.11438, -159.979, 0.74 ) }
    dend_2 { pt3dadd( 183.342, -7.06027, -160.862, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -56.5896, 129.062, -33.7432, 0.29 ) }
    dend_87 { pt3dadd( -57.8447, 128.954, -33.9777, 0.29 ) }
    dend_87 { pt3dadd( -58.8525, 129.009, -34.1996, 0.29 ) }
    dend_87 { pt3dadd( -59.3676, 129.166, -34.4038, 0.59 ) }
    dend_87 { pt3dadd( -59.9455, 129.473, -34.6957, 0.59 ) }
    dend_87 { pt3dadd( -60.413, 129.787, -34.943, 0.59 ) }
    dend_87 { pt3dadd( -60.9117, 130.169, -35.198, 0.44 ) }
    dend_87 { pt3dadd( -61.2891, 130.609, -35.4261, 0.59 ) }
    dend_87 { pt3dadd( -61.9661, 131.494, -35.9459, 0.37 ) }
    dend_87 { pt3dadd( -62.2973, 131.918, -36.2282, 0.29 ) }
    dend_87 { pt3dadd( -62.6401, 132.305, -36.5029, 0.59 ) }
    dend_87 { pt3dadd( -63.0189, 132.698, -36.7886, 0.59 ) }
    dend_87 { pt3dadd( -63.8471, 133.525, -37.3959, 0.29 ) }
    dend_87 { pt3dadd( -64.6134, 134.319, -37.9912, 0.29 ) }
    dend_87 { pt3dadd( -64.9677, 134.701, -38.301, 0.29 ) }
    dend_87 { pt3dadd( -65.6434, 135.433, -39.0087, 0.29 ) }
    dend_87 { pt3dadd( -66.0705, 135.888, -39.5489, 0.29 ) }
    dend_87 { pt3dadd( -66.5219, 136.363, -40.1838, 0.52 ) }
    dend_87 { pt3dadd( -66.9314, 136.803, -40.7942, 0.66 ) }
    dend_87 { pt3dadd( -67.5289, 137.502, -41.7406, 0.44 ) }
    dend_87 { pt3dadd( -67.9994, 138.068, -42.5781, 0.59 ) }
    dend_87 { pt3dadd( -68.577, 138.721, -43.7513, 0.96 ) }
    dend_87 { pt3dadd( -68.8093, 138.914, -44.188, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -56.5896, 129.062, -33.7432, 0.66 ) }
    dend_86 { pt3dadd( -55.284, 129.229, -33.7816, 0.66 ) }
    dend_86 { pt3dadd( -54.2409, 129.362, -33.8123, 0.29 ) }
    dend_86 { pt3dadd( -53.4837, 129.458, -33.8346, 0.44 ) }
    dend_86 { pt3dadd( -52.5502, 129.577, -33.862, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -72.598, 138.767, -29.7274, 0.29 ) }
    dend_82 { pt3dadd( -72.9865, 139.288, -30.2273, 0.29 ) }
    dend_82 { pt3dadd( -73.481, 139.892, -30.8701, 0.59 ) }
    dend_82 { pt3dadd( -73.8039, 140.291, -31.3, 0.44 ) }
    dend_82 { pt3dadd( -74.2695, 140.909, -31.9269, 0.88 ) }
    dend_82 { pt3dadd( -74.4746, 141.223, -32.2242, 1.03 ) }
    dend_82 { pt3dadd( -74.9297, 142.023, -32.9242, 0.52 ) }
    dend_82 { pt3dadd( -75.0743, 142.316, -33.173, 0.44 ) }
    dend_82 { pt3dadd( -75.359, 142.946, -33.6461, 0.66 ) }
    dend_82 { pt3dadd( -75.5743, 143.46, -34.0002, 0.88 ) }
    dend_82 { pt3dadd( -75.9911, 144.461, -34.6178, 0.59 ) }
    dend_82 { pt3dadd( -76.2735, 145.119, -34.9953, 0.74 ) }
    dend_82 { pt3dadd( -76.5671, 145.785, -35.3478, 0.74 ) }
    dend_82 { pt3dadd( -76.9857, 146.661, -35.8127, 0.37 ) }
    dend_82 { pt3dadd( -77.1844, 147.028, -36.0117, 0.37 ) }
    dend_82 { pt3dadd( -77.6665, 147.797, -36.4322, 0.66 ) }
    dend_82 { pt3dadd( -78.014, 148.251, -36.6814, 0.66 ) }
    dend_82 { pt3dadd( -78.3884, 148.65, -36.9088, 0.52 ) }
    dend_82 { pt3dadd( -78.9432, 149.132, -37.1905, 0.88 ) }
    dend_82 { pt3dadd( -79.33, 149.409, -37.353, 0.88 ) }
    dend_82 { pt3dadd( -79.9108, 149.746, -37.5436, 0.52 ) }
    dend_82 { pt3dadd( -80.6209, 150.097, -37.7248, 0.52 ) }
    dend_82 { pt3dadd( -81.5099, 150.513, -37.9094, 0.88 ) }
    dend_82 { pt3dadd( -82.0879, 150.793, -38.0107, 0.88 ) }
    dend_82 { pt3dadd( -82.8102, 151.15, -38.1154, 0.52 ) }
    dend_82 { pt3dadd( -83.4292, 151.465, -38.1974, 0.44 ) }
    dend_82 { pt3dadd( -84.1332, 151.833, -38.2918, 0.37 ) }
    dend_82 { pt3dadd( -84.8238, 152.228, -38.3795, 0.37 ) }
    dend_82 { pt3dadd( -85.5117, 152.666, -38.4705, 0.29 ) }
    dend_82 { pt3dadd( -86.6292, 153.442, -38.6335, 0.29 ) }
    dend_82 { pt3dadd( -87.1501, 153.818, -38.7149, 0.29 ) }
    dend_82 { pt3dadd( -87.7497, 154.239, -38.8108, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -72.598, 138.767, -29.7274, 0.29 ) }
    dend_81 { pt3dadd( -74.4112, 137.532, -28.6159, 0.29 ) }
    dend_81 { pt3dadd( -75.3979, 136.86, -28.011, 0.29 ) }
    dend_81 { pt3dadd( -76.0971, 136.384, -27.5824, 0.22 ) }
    dend_81 { pt3dadd( -76.9891, 135.776, -27.0356, 0.22 ) }
    dend_81 { pt3dadd( -77.9816, 135.1, -26.4272, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 175.044, 33.7778, 82.6866, 0.29 ) }
    dend_75 { pt3dadd( 177.774, 40.8617, 88.8527, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 181.013, 47.0541, 95.7355, 0.29 ) }
    dend_75 { pt3dadd( 185.24, 52.717, 102.554, 0.29 ) }
    dend_75 { pt3dadd( 188.453, 57.3387, 110.636, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 175.044, 33.7778, 82.6866, 0.29 ) }
    dend_72 { pt3dadd( 183.4, 31.9266, 84.9991, 0.29 ) }
    dend_72 { pt3dadd( 191.732, 31.5789, 88.0311, 0.29 ) }
    dend_72 { pt3dadd( 199.53, 32.5094, 92.1505, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 76.7753, 35.805, -6.30224, 0.37 ) }
    dend_68 { pt3dadd( 77.0734, 36.3485, -5.89883, 0.37 ) }
    dend_68 { pt3dadd( 77.4893, 37.1373, -5.25083, 0.37 ) }
    dend_68 { pt3dadd( 77.7905, 37.7088, -4.7814, 0.22 ) }
    dend_68 { pt3dadd( 78.4239, 38.9102, -3.79446, 0.22 ) }
    dend_68 { pt3dadd( 78.9066, 39.8259, -3.04224, 0.66 ) }
    dend_68 { pt3dadd( 79.488, 40.9287, -2.13634, 1.11 ) }
    dend_68 { pt3dadd( 79.6247, 41.194, -1.88745, 1.11 ) }
    dend_68 { pt3dadd( 83.2985, 48.5617, 2.60753, 1.11 ) }
    dend_68 { pt3dadd( 87.421, 55.8918, 6.77088, 1.11 ) }
    dend_68 { pt3dadd( 92.2342, 62.5728, 11.32, 1.11 ) }
    dend_68 { pt3dadd( 97.2491, 68.5346, 16.6323, 1.11 ) }
    dend_68 { pt3dadd( 102.854, 75.1951, 20.2192, 1.11 ) }
    dend_68 { pt3dadd( 108.688, 81.5986, 23.9294, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 76.7753, 35.805, -6.30224, 0.44 ) }
    dend_59 { pt3dadd( 77.7218, 35.9893, -6.38246, 0.44 ) }
    dend_59 { pt3dadd( 78.7341, 36.1385, -6.47678, 0.44 ) }
    dend_59 { pt3dadd( 79.8349, 36.2481, -6.51886, 0.74 ) }
    dend_59 { pt3dadd( 80.5097, 36.2967, -6.52446, 1.03 ) }
    dend_59 { pt3dadd( 81.1458, 36.3304, -6.51389, 1.03 ) }
    dend_59 { pt3dadd( 81.6448, 36.3585, -6.52151, 1.03 ) }
    dend_59 { pt3dadd( 82.4704, 36.4277, -6.60761, 0.66 ) }
    dend_59 { pt3dadd( 83.5845, 36.5967, -6.82392, 0.66 ) }
    dend_59 { pt3dadd( 83.9662, 36.7082, -6.94512, 0.81 ) }
    dend_59 { pt3dadd( 84.5343, 36.9652, -7.1736, 0.44 ) }
    dend_59 { pt3dadd( 85.673, 37.6504, -7.69565, 0.44 ) }
    dend_59 { pt3dadd( 87.0169, 38.6194, -8.34252, 0.37 ) }
    dend_59 { pt3dadd( 87.4828, 39.0018, -8.58884, 0.37 ) }
    dend_59 { pt3dadd( 88.1974, 39.622, -8.98802, 0.37 ) }
    dend_59 { pt3dadd( 89.0637, 40.3812, -9.43492, 0.66 ) }
    dend_59 { pt3dadd( 89.5775, 40.829, -9.66139, 0.66 ) }
    dend_59 { pt3dadd( 90.3239, 41.4261, -9.87956, 0.37 ) }
    dend_59 { pt3dadd( 90.7836, 41.7456, -9.96243, 0.37 ) }
    dend_59 { pt3dadd( 91.3697, 42.1361, -10.0587, 0.59 ) }
    dend_59 { pt3dadd( 91.8874, 42.4932, -10.1578, 0.59 ) }
    dend_59 { pt3dadd( 92.3687, 42.8688, -10.338, 0.44 ) }
    dend_59 { pt3dadd( 93.1655, 43.4617, -10.7219, 0.66 ) }
    dend_59 { pt3dadd( 93.3092, 43.5589, -10.7991, 0.96 ) }
    dend_59 { pt3dadd( 93.8595, 43.8626, -11.0949, 0.96 ) }
    dend_59 { pt3dadd( 94.6622, 44.2077, -11.5397, 1.11 ) }
    dend_59 { pt3dadd( 96.5248, 44.8309, -12.5215, 0.44 ) }
    dend_59 { pt3dadd( 97.5782, 45.1165, -13.0344, 0.44 ) }
    dend_59 { pt3dadd( 98.4085, 45.3093, -13.3973, 0.37 ) }
    dend_59 { pt3dadd( 99.4327, 45.5548, -13.8329, 0.37 ) }
    dend_59 { pt3dadd( 100.061, 45.7138, -14.0763, 0.29 ) }
    dend_59 { pt3dadd( 100.94, 45.9919, -14.3716, 0.22 ) }
    dend_59 { pt3dadd( 101.537, 46.3134, -14.559, 0.59 ) }
    dend_59 { pt3dadd( 101.842, 46.6153, -14.6816, 0.59 ) }
    dend_59 { pt3dadd( 102.688, 47.6762, -15.1786, 0.29 ) }
    dend_59 { pt3dadd( 103.04, 48.1408, -15.4148, 0.37 ) }
    dend_59 { pt3dadd( 103.455, 48.6608, -15.7057, 0.52 ) }
    dend_59 { pt3dadd( 103.906, 49.1283, -16.0438, 0.74 ) }
    dend_59 { pt3dadd( 104.516, 49.6975, -16.6403, 0.96 ) }
    dend_59 { pt3dadd( 105.55, 50.6671, -17.9186, 0.29 ) }
    dend_59 { pt3dadd( 105.927, 51.0656, -18.4938, 0.52 ) }
    dend_59 { pt3dadd( 106.083, 51.2691, -18.7922, 0.81 ) }
    dend_59 { pt3dadd( 106.561, 52.0603, -19.8937, 1.11 ) }
    dend_59 { pt3dadd( 107.359, 53.7278, -22.1078, 0.81 ) }
    dend_59 { pt3dadd( 107.68, 54.5812, -23.1498, 0.96 ) }
    dend_59 { pt3dadd( 107.999, 55.6329, -24.3011, 0.66 ) }
    dend_59 { pt3dadd( 108.24, 56.4674, -25.146, 0.52 ) }
    dend_59 { pt3dadd( 108.513, 57.2906, -25.885, 0.52 ) }
    dend_59 { pt3dadd( 108.658, 57.6142, -26.1102, 0.74 ) }
    dend_59 { pt3dadd( 109.132, 58.1732, -26.3895, 0.74 ) }
    dend_59 { pt3dadd( 109.466, 58.4335, -26.5154, 0.96 ) }
    dend_59 { pt3dadd( 109.995, 58.7285, -26.6986, 0.96 ) }
    dend_59 { pt3dadd( 110.841, 59.177, -27.0819, 0.74 ) }
    dend_59 { pt3dadd( 111.656, 59.6591, -27.5335, 0.44 ) }
    dend_59 { pt3dadd( 112.512, 60.3329, -28.1686, 0.44 ) }
    dend_59 { pt3dadd( 112.823, 60.6561, -28.4582, 0.96 ) }
    dend_59 { pt3dadd( 113.34, 61.4127, -29.1186, 1.18 ) }
    dend_59 { pt3dadd( 113.996, 62.7275, -30.2336, 0.66 ) }
    dend_59 { pt3dadd( 114.206, 63.3034, -30.72, 0.66 ) }
    dend_59 { pt3dadd( 114.536, 64.4952, -31.7449, 0.59 ) }
    dend_59 { pt3dadd( 114.657, 64.9641, -32.1216, 0.52 ) }
    dend_59 { pt3dadd( 115.028, 66.2336, -33.0765, 0.52 ) }
    dend_59 { pt3dadd( 115.141, 66.5993, -33.3111, 0.96 ) }
    dend_59 { pt3dadd( 115.405, 67.3442, -33.7233, 0.96 ) }
    dend_59 { pt3dadd( 115.938, 68.7307, -34.3792, 0.59 ) }
    dend_59 { pt3dadd( 116.427, 69.9402, -34.8201, 0.59 ) }
    dend_59 { pt3dadd( 116.747, 70.7215, -35.0582, 0.88 ) }
    dend_59 { pt3dadd( 117.234, 71.846, -35.3069, 0.74 ) }
    dend_59 { pt3dadd( 117.682, 72.7408, -35.4873, 0.74 ) }
    dend_59 { pt3dadd( 118.236, 73.6271, -35.6343, 0.88 ) }
    dend_59 { pt3dadd( 118.596, 74.0546, -35.7221, 0.88 ) }
    dend_59 { pt3dadd( 119.268, 74.6684, -35.9649, 0.37 ) }
    dend_59 { pt3dadd( 119.971, 75.2076, -36.2726, 0.37 ) }
    dend_59 { pt3dadd( 121.072, 75.9214, -36.8126, 0.37 ) }
    dend_59 { pt3dadd( 121.834, 76.3945, -37.2414, 0.37 ) }
    dend_59 { pt3dadd( 122.71, 76.9369, -37.7951, 0.37 ) }
    dend_59 { pt3dadd( 123.239, 77.2827, -38.1315, 0.59 ) }
    dend_59 { pt3dadd( 123.898, 77.737, -38.535, 0.74 ) }
    dend_59 { pt3dadd( 124.34, 78.0736, -38.8055, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 125.169, 78.801, -39.3298, 0.44 ) }
    dend_59 { pt3dadd( 125.614, 79.1896, -39.5981, 0.37 ) }
    dend_59 { pt3dadd( 126.951, 80.1722, -40.2613, 0.37 ) }
    dend_59 { pt3dadd( 127.596, 80.5513, -40.5419, 0.74 ) }
    dend_59 { pt3dadd( 127.943, 80.7098, -40.6791, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 97.2668, 59.8547, 16.0102, 0.29 ) }
    dend_57 { pt3dadd( 102.802, 65.0359, 19.2623, 0.29 ) }
    dend_57 { pt3dadd( 108.499, 70.7739, 20.8584, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 97.2668, 59.8547, 16.0102, 0.29 ) }
    dend_56 { pt3dadd( 103.443, 65.326, 20.0778, 0.29 ) }
    dend_56 { pt3dadd( 109.934, 69.9198, 24.7414, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.9029, -151.926, 14.1017, 0.29 ) }
    dend_37 { pt3dadd( -21.6397, -157.967, 12.2596, 0.29 ) }
    dend_37 { pt3dadd( -21.0047, -164.311, 11.4614, 0.29 ) }
    dend_37 { pt3dadd( -20.8606, -170.521, 9.80026, 0.29 ) }
    dend_37 { pt3dadd( -21.3303, -176.889, 9.10572, 0.29 ) }
    dend_37 { pt3dadd( -22.3614, -183.204, 8.52995, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.9029, -151.926, 14.1017, 0.29 ) }
    dend_36 { pt3dadd( -25.5448, -158.281, 10.7817, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.66598, -89.6211, 9.21321, 0.37 ) }
    dend_24 { pt3dadd( 0.487422, -91.4249, 7.40979, 0.37 ) }
    dend_24 { pt3dadd( -0.266421, -92.3774, 6.4805, 0.37 ) }
    dend_24 { pt3dadd( -1.0313, -93.2015, 5.64745, 0.44 ) }
    dend_24 { pt3dadd( -1.97382, -94.095, 4.73149, 0.74 ) }
    dend_24 { pt3dadd( -2.93444, -94.9157, 3.89231, 0.59 ) }
    dend_24 { pt3dadd( -3.95774, -95.6799, 3.09896, 0.59 ) }
    dend_24 { pt3dadd( -4.60618, -95.9896, 2.74437, 0.74 ) }
    dend_24 { pt3dadd( -5.71357, -96.3256, 2.26051, 0.88 ) }
    dend_24 { pt3dadd( -6.42812, -96.4564, 2.02036, 1.18 ) }
    dend_24 { pt3dadd( -7.16223, -96.5232, 1.8246, 0.59 ) }
    dend_24 { pt3dadd( -8.28772, -96.5631, 1.55677, 0.44 ) }
    dend_24 { pt3dadd( -9.40308, -96.5835, 1.28577, 0.52 ) }
    dend_24 { pt3dadd( -9.9159, -96.6119, 1.14596, 0.74 ) }
    dend_24 { pt3dadd( -10.7873, -96.7733, 0.908193, 0.74 ) }
    dend_24 { pt3dadd( -11.4036, -97.0075, 0.705466, 0.59 ) }
    dend_24 { pt3dadd( -12.0205, -97.3909, 0.474682, 0.59 ) }
    dend_24 { pt3dadd( -12.8102, -98.1052, 0.15463, 0.59 ) }
    dend_24 { pt3dadd( -13.6318, -99.0878, -0.1757, 0.44 ) }
    dend_24 { pt3dadd( -14.5536, -100.394, -0.520708, 0.37 ) }
    dend_24 { pt3dadd( -15.0769, -101.272, -0.698151, 1.03 ) }
    dend_24 { pt3dadd( -15.4191, -101.937, -0.813207, 1.03 ) }
    dend_24 { pt3dadd( -15.6864, -102.548, -0.901863, 0.96 ) }
    dend_24 { pt3dadd( -16.1257, -103.814, -1.0355, 0.66 ) }
    dend_24 { pt3dadd( -16.4468, -104.955, -1.13234, 0.66 ) }
    dend_24 { pt3dadd( -16.7427, -106.258, -1.25186, 0.88 ) }
    dend_24 { pt3dadd( -16.889, -107.059, -1.32379, 1.03 ) }
    dend_24 { pt3dadd( -17.0425, -108.196, -1.43819, 0.88 ) }
    dend_24 { pt3dadd( -17.1811, -109.659, -1.60861, 0.52 ) }
    dend_24 { pt3dadd( -17.2505, -110.802, -1.76323, 0.52 ) }
    dend_24 { pt3dadd( -17.2863, -111.671, -1.90234, 0.96 ) }
    dend_24 { pt3dadd( -17.3126, -112.237, -2.00571, 0.96 ) }
    dend_24 { pt3dadd( -17.4311, -113.63, -2.30323, 0.59 ) }
    dend_24 { pt3dadd( -17.5921, -114.737, -2.57413, 0.66 ) }
    dend_24 { pt3dadd( -17.7853, -115.563, -2.80825, 0.81 ) }
    dend_24 { pt3dadd( -18.0874, -116.569, -3.13377, 0.81 ) }
    dend_24 { pt3dadd( -18.2966, -117.129, -3.33994, 0.81 ) }
    dend_24 { pt3dadd( -18.6958, -118.15, -3.80494, 0.44 ) }
    dend_24 { pt3dadd( -18.8991, -118.684, -4.08715, 0.81 ) }
    dend_24 { pt3dadd( -19.1429, -119.454, -4.53779, 0.81 ) }
    dend_24 { pt3dadd( -19.3883, -120.556, -5.20034, 0.52 ) }
    dend_24 { pt3dadd( -19.4747, -121.45, -5.7345, 0.52 ) }
    dend_24 { pt3dadd( -19.4462, -123.086, -6.68462, 0.74 ) }
    dend_24 { pt3dadd( -19.3694, -123.886, -7.12714, 1.11 ) }
    dend_24 { pt3dadd( -19.2936, -124.623, -7.50324, 1.11 ) }
    dend_24 { pt3dadd( -19.2209, -125.562, -7.92696, 0.96 ) }
    dend_24 { pt3dadd( -19.2077, -126.615, -8.3473, 0.59 ) }
    dend_24 { pt3dadd( -19.3121, -127.913, -8.80999, 0.44 ) }
    dend_24 { pt3dadd( -19.6429, -129.349, -9.26543, 0.44 ) }
    dend_24 { pt3dadd( -20.0206, -130.426, -9.60165, 0.44 ) }
    dend_24 { pt3dadd( -20.4549, -131.432, -9.89389, 0.74 ) }
    dend_24 { pt3dadd( -20.7868, -132.171, -10.0941, 0.74 ) }
    dend_24 { pt3dadd( -21.1117, -132.886, -10.264, 0.74 ) }
    dend_24 { pt3dadd( -21.6836, -134.164, -10.5235, 0.66 ) }
    dend_24 { pt3dadd( -22.0956, -135.117, -10.6877, 0.44 ) }
    dend_24 { pt3dadd( -22.6166, -136.349, -10.886, 0.44 ) }
    dend_24 { pt3dadd( -23.4383, -138.064, -11.1265, 0.44 ) }
    dend_24 { pt3dadd( -23.9099, -138.859, -11.2146, 0.88 ) }
    dend_24 { pt3dadd( -24.467, -139.599, -11.2693, 1.18 ) }
    dend_24 { pt3dadd( -24.9059, -140.075, -11.2765, 1.18 ) }
    dend_24 { pt3dadd( -25.4615, -140.591, -11.264, 1.03 ) }
    dend_24 { pt3dadd( -27.0504, -141.848, -11.2114, 0.66 ) }
    dend_24 { pt3dadd( -28.5192, -142.85, -11.1415, 0.66 ) }
    dend_24 { pt3dadd( -29.7678, -143.672, -11.0774, 1.25 ) }
    dend_24 { pt3dadd( -30.431, -144.113, -11.0405, 1.55 ) }
    dend_24 { pt3dadd( -31.232, -144.658, -10.9961, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.66598, -89.6211, 9.21321, 0.74 ) }
    dend_19 { pt3dadd( 1.11817, -90.6302, 8.50185, 0.74 ) }
    dend_19 { pt3dadd( 0.474429, -91.7878, 7.66923, 0.74 ) }
    dend_19 { pt3dadd( 0.137197, -92.4798, 7.25238, 0.74 ) }
    dend_19 { pt3dadd( -0.185639, -93.255, 6.85014, 0.81 ) }
    dend_19 { pt3dadd( -0.782848, -95.0341, 6.09309, 0.52 ) }
    dend_19 { pt3dadd( -1.14479, -96.4511, 5.59854, 0.74 ) }
    dend_19 { pt3dadd( -1.2677, -97.2055, 5.40212, 0.74 ) }
    dend_19 { pt3dadd( -1.13616, -98.8794, 5.28572, 0.74 ) }
    dend_19 { pt3dadd( -0.830905, -99.7101, 5.36022, 0.81 ) }
    dend_19 { pt3dadd( -0.205845, -100.716, 5.59322, 0.66 ) }
    dend_19 { pt3dadd( 0.187441, -101.212, 5.7588, 1.11 ) }
    dend_19 { pt3dadd( 0.599076, -101.696, 5.9079, 1.11 ) }
    dend_19 { pt3dadd( 1.1208, -102.312, 6.02748, 0.81 ) }
    dend_19 { pt3dadd( 1.77061, -103.149, 6.04582, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 2.34915, -103.965, 6.00805, 0.96 ) }
    dend_19 { pt3dadd( 2.85693, -104.726, 5.94975, 0.88 ) }
    dend_19 { pt3dadd( 3.46001, -105.66, 5.88665, 0.96 ) }
    dend_19 { pt3dadd( 3.87483, -106.357, 5.82741, 1.11 ) }
    dend_19 { pt3dadd( 4.32523, -107.225, 5.71561, 1.11 ) }
    dend_19 { pt3dadd( 4.68146, -108.04, 5.57643, 0.74 ) }
    dend_19 { pt3dadd( 5.12075, -109.311, 5.32852, 0.66 ) }
    dend_19 { pt3dadd( 5.30442, -109.975, 5.19225, 0.66 ) }
    dend_19 { pt3dadd( 5.6124, -111.513, 4.8958, 0.66 ) }
    dend_19 { pt3dadd( 5.78712, -113.127, 4.60611, 0.59 ) }
    dend_19 { pt3dadd( 5.80136, -114.062, 4.43854, 0.96 ) }
    dend_19 { pt3dadd( 5.72281, -115.226, 4.22773, 1.18 ) }
    dend_19 { pt3dadd( 5.59789, -116.093, 4.08397, 1.03 ) }
    dend_19 { pt3dadd( 5.41179, -117.111, 3.93575, 0.88 ) }
    dend_19 { pt3dadd( 5.17462, -118.432, 3.79429, 0.74 ) }
    dend_19 { pt3dadd( 5.02291, -119.581, 3.77559, 0.59 ) }
    dend_19 { pt3dadd( 4.92506, -120.552, 3.82825, 0.59 ) }
    dend_19 { pt3dadd( 4.84702, -121.357, 3.94078, 1.4 ) }
    dend_19 { pt3dadd( 4.77041, -121.951, 4.0752, 1.4 ) }
    dend_19 { pt3dadd( 4.57177, -123.466, 4.55739, 0.88 ) }
    dend_19 { pt3dadd( 4.37921, -125.243, 5.34496, 0.66 ) }
    dend_19 { pt3dadd( 4.29886, -125.988, 5.73475, 0.88 ) }
    dend_19 { pt3dadd( 4.18951, -126.933, 6.26358, 0.88 ) }
    dend_19 { pt3dadd( 3.99213, -128.406, 7.09603, 0.59 ) }
    dend_19 { pt3dadd( 3.82623, -129.345, 7.61384, 0.81 ) }
    dend_19 { pt3dadd( 3.47629, -130.9, 8.41574, 0.81 ) }
    dend_19 { pt3dadd( 3.27579, -131.702, 8.74653, 1.11 ) }
    dend_19 { pt3dadd( 3.11822, -132.362, 8.9743, 1.11 ) }
    dend_19 { pt3dadd( 2.91737, -133.311, 9.20665, 0.52 ) }
    dend_19 { pt3dadd( 2.76527, -134.211, 9.35971, 0.74 ) }
    dend_19 { pt3dadd( 2.64183, -135.013, 9.44836, 1.03 ) }
    dend_19 { pt3dadd( 2.57929, -135.685, 9.47502, 1.25 ) }
    dend_19 { pt3dadd( 2.58369, -136.346, 9.53947, 1.33 ) }
    dend_19 { pt3dadd( 2.70046, -137.43, 9.78829, 1.03 ) }
    dend_19 { pt3dadd( 2.94869, -138.442, 10.1362, 0.74 ) }
    dend_19 { pt3dadd( 3.26441, -139.261, 10.4878, 0.44 ) }
    dend_19 { pt3dadd( 3.65384, -140.002, 10.8592, 0.29 ) }
    dend_19 { pt3dadd( 4.36291, -141.019, 11.4522, 0.29 ) }
    dend_19 { pt3dadd( 5.3633, -142.133, 12.2112, 0.29 ) }
    dend_19 { pt3dadd( 5.95995, -142.629, 12.6126, 0.29 ) }
    dend_19 { pt3dadd( 6.53133, -142.976, 12.924, 0.88 ) }
    dend_19 { pt3dadd( 7.01148, -143.221, 13.1567, 0.88 ) }
    dend_19 { pt3dadd( 7.81032, -143.598, 13.5069, 0.52 ) }
    dend_19 { pt3dadd( 8.1785, -143.767, 13.6218, 0.52 ) }
    dend_19 { pt3dadd( 8.84575, -144.106, 13.8142, 0.52 ) }
    dend_19 { pt3dadd( 9.35653, -144.48, 14.0193, 0.52 ) }
    dend_19 { pt3dadd( 10.0208, -145.181, 14.2827, 0.52 ) }
    dend_19 { pt3dadd( 10.3341, -145.629, 14.3883, 0.88 ) }
    dend_19 { pt3dadd( 10.6672, -146.187, 14.4575, 0.88 ) }
    dend_19 { pt3dadd( 11.0781, -146.871, 14.4643, 1.11 ) }
    dend_19 { pt3dadd( 11.5115, -147.507, 14.44, 0.66 ) }
    dend_19 { pt3dadd( 12.3641, -148.521, 14.3348, 0.66 ) }
    dend_19 { pt3dadd( 12.7824, -148.883, 14.2847, 0.66 ) }
    dend_19 { pt3dadd( 13.5269, -149.396, 14.2303, 0.66 ) }
    dend_19 { pt3dadd( 14.1332, -149.76, 14.212, 0.52 ) }
    dend_19 { pt3dadd( 15.1654, -150.377, 14.1668, 0.66 ) }
    dend_19 { pt3dadd( 15.497, -150.579, 14.1855, 0.66 ) }
    dend_19 { pt3dadd( 16.2224, -151.032, 14.3564, 0.44 ) }
    dend_19 { pt3dadd( 16.8231, -151.426, 14.5974, 0.44 ) }
    dend_19 { pt3dadd( 17.6556, -152.023, 15.0666, 0.52 ) }
    dend_19 { pt3dadd( 18.6438, -152.791, 15.7894, 0.66 ) }
    dend_19 { pt3dadd( 19.4883, -153.492, 16.4888, 0.44 ) }
    dend_19 { pt3dadd( 20.3925, -154.258, 17.2992, 0.81 ) }
    dend_19 { pt3dadd( 21.2362, -154.97, 18.0307, 0.52 ) }
    dend_19 { pt3dadd( 21.7936, -155.438, 18.4735, 0.74 ) }
    dend_19 { pt3dadd( 22.4743, -156.009, 18.9414, 0.29 ) }
    dend_19 { pt3dadd( 22.8386, -156.323, 19.1187, 0.52 ) }
    dend_19 { pt3dadd( 23.3874, -156.817, 19.2071, 0.59 ) }
    dend_19 { pt3dadd( 24.4373, -157.807, 19.2622, 0.37 ) }
    dend_19 { pt3dadd( 25.1975, -158.533, 19.2219, 0.66 ) }
    dend_19 { pt3dadd( 25.6306, -158.943, 19.1748, 1.03 ) }
    dend_19 { pt3dadd( 26.3252, -159.596, 19.0709, 1.03 ) }
    dend_19 { pt3dadd( 27.0918, -160.318, 18.9947, 0.74 ) }
    dend_19 { pt3dadd( 28.3286, -161.474, 18.9984, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 18.6127, -126.398, -14.466, 0.44 ) }
    dend_13 { pt3dadd( 18.6114, -127.858, -14.2668, 0.44 ) }
    dend_13 { pt3dadd( 18.6007, -128.878, -14.1256, 0.81 ) }
    dend_13 { pt3dadd( 18.5795, -129.662, -14.0164, 1.18 ) }
    dend_13 { pt3dadd( 18.5401, -130.711, -13.8737, 0.74 ) }
    dend_13 { pt3dadd( 18.4953, -131.802, -13.7309, 0.44 ) }
    dend_13 { pt3dadd( 18.4529, -132.762, -13.6091, 0.96 ) }
    dend_13 { pt3dadd( 18.4037, -133.757, -13.4886, 0.96 ) }
    dend_13 { pt3dadd( 18.3498, -134.704, -13.3799, 1.18 ) }
    dend_13 { pt3dadd( 18.2139, -136.117, -13.2147, 0.74 ) }
    dend_13 { pt3dadd( 17.9991, -137.401, -13.091, 0.66 ) }
    dend_13 { pt3dadd( 17.7412, -138.45, -13.0145, 0.66 ) }
    dend_13 { pt3dadd( 17.3346, -139.768, -12.9749, 0.66 ) }
    dend_13 { pt3dadd( 17.1017, -140.42, -12.9838, 1.03 ) }
    dend_13 { pt3dadd( 16.7419, -141.328, -13.0331, 0.81 ) }
    dend_13 { pt3dadd( 16.1668, -142.776, -13.2328, 0.52 ) }
    dend_13 { pt3dadd( 15.8909, -143.645, -13.3776, 0.44 ) }
    dend_13 { pt3dadd( 15.6838, -144.736, -13.5457, 0.37 ) }
    dend_13 { pt3dadd( 15.6468, -145.355, -13.6152, 0.66 ) }
    dend_13 { pt3dadd( 15.655, -146.033, -13.6409, 0.66 ) }
    dend_13 { pt3dadd( 15.7676, -147.804, -13.6557, 0.44 ) }
    dend_13 { pt3dadd( 15.8968, -149.579, -13.5867, 0.44 ) }
    dend_13 { pt3dadd( 15.9477, -150.997, -13.4806, 0.66 ) }
    dend_13 { pt3dadd( 15.913, -152.248, -13.3446, 0.81 ) }
    dend_13 { pt3dadd( 15.7516, -153.611, -13.1916, 0.96 ) }
    dend_13 { pt3dadd( 15.3906, -155.053, -13.0092, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 14.9644, -156.176, -12.8532, 0.81 ) }
    dend_13 { pt3dadd( 14.5102, -157.17, -12.7666, 0.88 ) }
    dend_13 { pt3dadd( 14.1468, -157.946, -12.7384, 0.66 ) }
    dend_13 { pt3dadd( 13.6298, -159.04, -12.7362, 0.29 ) }
    dend_13 { pt3dadd( 12.9816, -160.442, -12.7545, 0.29 ) }
    dend_13 { pt3dadd( 12.6073, -161.253, -12.7498, 0.52 ) }
    dend_13 { pt3dadd( 12.0195, -162.513, -12.7544, 0.52 ) }
    dend_13 { pt3dadd( 11.5291, -163.548, -12.7529, 0.37 ) }
    dend_13 { pt3dadd( 11.0619, -164.48, -12.7389, 0.29 ) }
    dend_13 { pt3dadd( 10.6015, -165.294, -12.6924, 0.29 ) }
    dend_13 { pt3dadd( 10.3932, -165.59, -12.6734, 0.88 ) }
    dend_13 { pt3dadd( 9.88528, -166.095, -12.6328, 1.11 ) }
    dend_13 { pt3dadd( 9.23752, -166.544, -12.5738, 0.44 ) }
    dend_13 { pt3dadd( 8.40348, -166.99, -12.4914, 0.37 ) }
    dend_13 { pt3dadd( 7.58738, -167.355, -12.4228, 0.59 ) }
    dend_13 { pt3dadd( 6.8481, -167.639, -12.3752, 0.74 ) }
    dend_13 { pt3dadd( 5.86868, -167.99, -12.3248, 0.44 ) }
    dend_13 { pt3dadd( 5.01904, -168.297, -12.2768, 0.37 ) }
    dend_13 { pt3dadd( 4.45911, -168.522, -12.2373, 0.88 ) }
    dend_13 { pt3dadd( 3.82493, -168.827, -12.1728, 1.11 ) }
    dend_13 { pt3dadd( 3.37894, -169.085, -12.1048, 1.11 ) }
    dend_13 { pt3dadd( 2.92931, -169.358, -12.0094, 1.11 ) }
    dend_13 { pt3dadd( 1.82957, -170.063, -11.7358, 0.29 ) }
    dend_13 { pt3dadd( 1.10731, -170.544, -11.5514, 0.59 ) }
    dend_13 { pt3dadd( 0.630211, -170.872, -11.4248, 0.59 ) }
    dend_13 { pt3dadd( -0.528687, -171.736, -11.0936, 0.29 ) }
    dend_13 { pt3dadd( -1.22418, -172.318, -10.8732, 0.29 ) }
    dend_13 { pt3dadd( -1.76009, -172.825, -10.6905, 0.52 ) }
    dend_13 { pt3dadd( -2.37816, -173.477, -10.4715, 0.52 ) }
    dend_13 { pt3dadd( -2.7025, -173.838, -10.3535, 0.81 ) }
    dend_13 { pt3dadd( -3.24124, -174.545, -10.1496, 0.81 ) }
    dend_13 { pt3dadd( -3.75464, -175.435, -9.93921, 0.29 ) }
    dend_13 { pt3dadd( -4.3246, -176.63, -9.68071, 0.29 ) }
    dend_13 { pt3dadd( -4.62985, -177.327, -9.52634, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.6127, -126.398, -14.466, 0.22 ) }
    dend_12 { pt3dadd( 19.6797, -126.935, -15.1587, 0.22 ) }
    dend_12 { pt3dadd( 20.8048, -127.502, -15.8892, 0.22 ) }
    dend_12 { pt3dadd( 22.1632, -128.185, -16.7712, 0.22 ) }
    dend_12 { pt3dadd( 23.0983, -128.656, -17.3782, 0.22 ) }
    dend_12 { pt3dadd( 24.0904, -129.155, -18.0224, 0.22 ) }
    dend_12 { pt3dadd( 25.1112, -129.669, -18.6851, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 183.342, -7.06027, -160.862, 0.74 ) }
    dend_10 { pt3dadd( 186.656, -8.74345, -162.352, 0.74 ) }
    dend_10 { pt3dadd( 187.599, -9.25927, -162.598, 0.44 ) }
    dend_10 { pt3dadd( 188.299, -9.61, -162.721, 0.74 ) }
    dend_10 { pt3dadd( 189.399, -10.0792, -162.865, 0.52 ) }
    dend_10 { pt3dadd( 190.875, -10.5828, -163.009, 0.52 ) }
    dend_10 { pt3dadd( 192.445, -11.0151, -163.187, 0.52 ) }
    dend_10 { pt3dadd( 193.626, -11.2274, -163.182, 0.52 ) }
    dend_10 { pt3dadd( 194.83, -11.3619, -163.215, 0.52 ) }
    dend_10 { pt3dadd( 196.305, -11.3927, -163.398, 0.52 ) }
    dend_10 { pt3dadd( 197.489, -11.277, -163.667, 0.74 ) }
    dend_10 { pt3dadd( 198.675, -11.0291, -164.06, 1.03 ) }
    dend_10 { pt3dadd( 199.102, -10.9103, -164.237, 1.4 ) }
    dend_10 { pt3dadd( 199.519, -10.7851, -164.435, 1.4 ) }
    dend_10 { pt3dadd( 201.188, -10.3187, -165.289, 0.44 ) }
    dend_10 { pt3dadd( 201.839, -10.1405, -165.551, 0.74 ) }
    dend_10 { pt3dadd( 202.838, -9.87264, -165.791, 0.74 ) }
    dend_10 { pt3dadd( 203.545, -9.67269, -165.838, 0.96 ) }
    dend_10 { pt3dadd( 204.233, -9.47338, -165.765, 0.96 ) }
    dend_10 { pt3dadd( 205.166, -9.23051, -165.534, 0.96 ) }
    dend_10 { pt3dadd( 207.463, -8.75486, -164.62, 0.66 ) }
    dend_10 { pt3dadd( 208.441, -8.61831, -164.13, 0.81 ) }
    dend_10 { pt3dadd( 209.036, -8.57377, -163.768, 0.81 ) }
    dend_10 { pt3dadd( 210.504, -8.5257, -162.796, 0.52 ) }
    dend_10 { pt3dadd( 211.608, -8.52343, -162.055, 0.52 ) }
    dend_10 { pt3dadd( 212.823, -8.56228, -161.295, 0.52 ) }
    dend_10 { pt3dadd( 213.997, -8.63566, -160.702, 0.52 ) }
    dend_10 { pt3dadd( 215.489, -8.72605, -160.056, 0.44 ) }
    dend_10 { pt3dadd( 216.29, -8.76592, -159.815, 0.96 ) }
    dend_10 { pt3dadd( 217.124, -8.8131, -159.773, 1.11 ) }
    dend_10 { pt3dadd( 218.275, -8.89903, -159.988, 0.44 ) }
    dend_10 { pt3dadd( 219.272, -9.0644, -160.417, 0.37 ) }
    dend_10 { pt3dadd( 219.977, -9.28382, -160.872, 0.37 ) }
    dend_10 { pt3dadd( 221.09, -9.78245, -161.81, 0.66 ) }
    dend_10 { pt3dadd( 222.307, -10.4512, -163.02, 0.74 ) }
    dend_10 { pt3dadd( 222.815, -10.7582, -163.588, 0.81 ) }
    dend_10 { pt3dadd( 223.536, -11.2157, -164.494, 0.81 ) }
    dend_10 { pt3dadd( 224.448, -11.784, -165.729, 0.66 ) }
    dend_10 { pt3dadd( 225.281, -12.2338, -166.831, 0.66 ) }
    dend_10 { pt3dadd( 226.08, -12.5986, -167.811, 0.29 ) }
    dend_10 { pt3dadd( 226.644, -12.8248, -168.444, 0.59 ) }
    dend_10 { pt3dadd( 227.252, -13.036, -169.086, 0.74 ) }
    dend_10 { pt3dadd( 227.827, -13.2171, -169.692, 0.44 ) }
    dend_10 { pt3dadd( 228.586, -13.4262, -170.459, 0.37 ) }
    dend_10 { pt3dadd( 229.374, -13.6528, -171.224, 0.37 ) }
    dend_10 { pt3dadd( 230.158, -13.8931, -171.931, 0.59 ) }
    dend_10 { pt3dadd( 230.787, -14.1089, -172.467, 0.59 ) }
    dend_10 { pt3dadd( 232.395, -14.8402, -173.994, 0.29 ) }
    dend_10 { pt3dadd( 233.426, -15.4474, -175.061, 0.29 ) }
    dend_10 { pt3dadd( 233.952, -15.8298, -175.655, 0.29 ) }
    dend_10 { pt3dadd( 234.409, -16.1925, -176.173, 0.74 ) }
    dend_10 { pt3dadd( 234.865, -16.5834, -176.697, 0.74 ) }
    dend_10 { pt3dadd( 236.707, -18.416, -178.789, 0.37 ) }
    dend_10 { pt3dadd( 237.267, -19.0878, -179.409, 0.52 ) }
    dend_10 { pt3dadd( 237.693, -19.7134, -179.938, 0.81 ) }
    dend_10 { pt3dadd( 238.135, -20.4322, -180.565, 0.37 ) }
    dend_10 { pt3dadd( 238.516, -21.0809, -181.188, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 183.342, -7.06027, -160.862, 0.88 ) }
    dend_3 { pt3dadd( 183.787, -6.85209, -162.05, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 183.978, -6.85543, -162.57, 1.25 ) }
    dend_3 { pt3dadd( 184.15, -6.91706, -163.095, 1.25 ) }
    dend_3 { pt3dadd( 184.364, -7.01799, -163.84, 0.59 ) }
    dend_3 { pt3dadd( 184.937, -7.2879, -165.833, 0.59 ) }
    dend_3 { pt3dadd( 185.512, -7.55901, -167.834, 0.96 ) }
    dend_3 { pt3dadd( 185.815, -7.77269, -168.908, 1.11 ) }
    dend_3 { pt3dadd( 186.326, -8.25368, -170.868, 1.25 ) }
    dend_3 { pt3dadd( 186.621, -8.61721, -172.112, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -87.7497, 154.239, -38.8108, 0.22 ) }
    dend_84 { pt3dadd( -87.6484, 153.319, -38.1754, 0.22 ) }
    dend_84 { pt3dadd( -87.5853, 152.747, -37.7795, 0.22 ) }
    dend_84 { pt3dadd( -87.4439, 151.465, -36.8931, 0.22 ) }
    dend_84 { pt3dadd( -87.3577, 150.682, -36.3523, 0.22 ) }
    dend_84 { pt3dadd( -87.2836, 150.01, -35.8875, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -87.7497, 154.239, -38.8108, 0.22 ) }
    dend_83 { pt3dadd( -88.5396, 155.053, -38.3435, 0.22 ) }
    dend_83 { pt3dadd( -89.2332, 155.797, -37.9436, 0.22 ) }
    dend_83 { pt3dadd( -89.8928, 156.504, -37.5632, 0.22 ) }
    dend_83 { pt3dadd( -90.5239, 157.181, -37.1993, 0.22 ) }
    dend_83 { pt3dadd( -91.474, 158.2, -36.6515, 0.22 ) }
    dend_83 { pt3dadd( -91.9586, 158.72, -36.3721, 0.37 ) }
    dend_83 { pt3dadd( -92.4235, 159.295, -36.0801, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 188.453, 57.3387, 110.636, 0.29 ) }
    dend_77 { pt3dadd( 192.405, 62.404, 118.788, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 188.453, 57.3387, 110.636, 0.29 ) }
    dend_76 { pt3dadd( 191.477, 63.4142, 116.829, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 199.53, 32.5094, 92.1505, 0.29 ) }
    dend_74 { pt3dadd( 202.23, 32.8142, 82.1067, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 199.53, 32.5094, 92.1505, 0.29 ) }
    dend_73 { pt3dadd( 190.298, 32.9283, 94.7878, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 127.943, 80.7098, -40.6791, 0.37 ) }
    dend_61 { pt3dadd( 127.352, 81.0201, -40.9624, 0.37 ) }
    dend_61 { pt3dadd( 126.562, 81.4445, -41.5887, 0.66 ) }
    dend_61 { pt3dadd( 126.088, 81.7124, -42.2003, 0.29 ) }
    dend_61 { pt3dadd( 125.696, 81.9441, -42.7886, 0.29 ) }
    dend_61 { pt3dadd( 125.221, 82.244, -43.5322, 0.29 ) }
    dend_61 { pt3dadd( 124.2, 82.9328, -45.1348, 0.29 ) }
    dend_61 { pt3dadd( 123.734, 83.2265, -45.8984, 0.81 ) }
    dend_61 { pt3dadd( 122.383, 84.0497, -48.2573, 0.44 ) }
    dend_61 { pt3dadd( 121.936, 84.3262, -49.1064, 0.96 ) }
    dend_61 { pt3dadd( 121.584, 84.578, -49.845, 1.18 ) }
    dend_61 { pt3dadd( 121.167, 84.9316, -50.8207, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 127.943, 80.7098, -40.6791, 0.37 ) }
    dend_60 { pt3dadd( 128.833, 80.8979, -40.7177, 0.37 ) }
    dend_60 { pt3dadd( 129.862, 81.2696, -40.746, 0.29 ) }
    dend_60 { pt3dadd( 130.239, 81.4387, -40.751, 0.66 ) }
    dend_60 { pt3dadd( 130.608, 81.6279, -40.7439, 0.66 ) }
    dend_60 { pt3dadd( 131.062, 81.9132, -40.7352, 0.37 ) }
    dend_60 { pt3dadd( 131.693, 82.3373, -40.7308, 0.37 ) }
    dend_60 { pt3dadd( 132.368, 82.8687, -40.7256, 0.81 ) }
    dend_60 { pt3dadd( 132.646, 83.108, -40.7008, 1.11 ) }
    dend_60 { pt3dadd( 133.033, 83.4541, -40.6411, 1.33 ) }
    dend_60 { pt3dadd( 133.808, 84.2038, -40.4604, 0.44 ) }
    dend_60 { pt3dadd( 134.259, 84.6788, -40.2963, 0.52 ) }
    dend_60 { pt3dadd( 134.837, 85.3538, -40.005, 1.03 ) }
    dend_60 { pt3dadd( 135.443, 86.1512, -39.6155, 0.52 ) }
    dend_60 { pt3dadd( 135.724, 86.5514, -39.3928, 0.66 ) }
    dend_60 { pt3dadd( 136.002, 86.9939, -39.1176, 0.66 ) }
    dend_60 { pt3dadd( 136.381, 87.7112, -38.6224, 0.44 ) }
    dend_60 { pt3dadd( 136.535, 88.1198, -38.3683, 0.29 ) }
    dend_60 { pt3dadd( 136.697, 88.642, -38.0935, 0.44 ) }
    dend_60 { pt3dadd( 136.908, 89.2585, -37.8484, 0.66 ) }
    dend_60 { pt3dadd( 137.123, 89.7794, -37.6786, 0.37 ) }
    dend_60 { pt3dadd( 137.395, 90.3889, -37.5234, 0.37 ) }
    dend_60 { pt3dadd( 137.834, 91.3937, -37.3248, 0.29 ) }
    dend_60 { pt3dadd( 138.104, 92.0429, -37.1984, 0.29 ) }
    dend_60 { pt3dadd( 138.485, 93.1406, -36.986, 0.29 ) }
    dend_60 { pt3dadd( 138.689, 93.8896, -36.8084, 0.29 ) }
    dend_60 { pt3dadd( 138.795, 94.4676, -36.6335, 1.55 ) }
    dend_60 { pt3dadd( 138.83, 94.9406, -36.4535, 1.18 ) }
    dend_60 { pt3dadd( 138.782, 95.4306, -36.1835, 0.96 ) }
    dend_60 { pt3dadd( 138.534, 96.2037, -35.6487, 0.52 ) }
    dend_60 { pt3dadd( 138.043, 97.073, -34.9288, 0.29 ) }
    dend_60 { pt3dadd( 137.633, 97.5974, -34.4481, 0.29 ) }
    dend_60 { pt3dadd( 137.411, 97.8413, -34.2168, 0.29 ) }
    dend_60 { pt3dadd( 136.79, 98.5087, -33.6123, 0.22 ) }
    dend_60 { pt3dadd( 136.6, 98.7187, -33.4425, 0.66 ) }
    dend_60 { pt3dadd( 136.37, 98.9901, -33.2494, 0.66 ) }
    dend_60 { pt3dadd( 135.988, 99.5209, -32.9607, 0.37 ) }
    dend_60 { pt3dadd( 135.72, 100.068, -32.7212, 0.29 ) }
    dend_60 { pt3dadd( 135.547, 100.634, -32.5449, 0.22 ) }
    dend_60 { pt3dadd( 135.456, 101.147, -32.3895, 0.22 ) }
    dend_60 { pt3dadd( 135.39, 101.933, -32.1053, 0.22 ) }
    dend_60 { pt3dadd( 135.397, 102.286, -31.9629, 0.29 ) }
    dend_60 { pt3dadd( 135.458, 102.812, -31.7251, 0.29 ) }
    dend_60 { pt3dadd( 135.597, 103.595, -31.3436, 0.29 ) }
    dend_60 { pt3dadd( 135.843, 104.609, -30.8513, 0.29 ) }
    dend_60 { pt3dadd( 136.017, 105.239, -30.5358, 0.29 ) }
    dend_60 { pt3dadd( 136.189, 105.744, -30.2779, 0.29 ) }
    dend_60 { pt3dadd( 136.431, 106.403, -29.928, 0.29 ) }
    dend_60 { pt3dadd( 136.841, 107.395, -29.3821, 0.29 ) }
    dend_60 { pt3dadd( 137.205, 108.159, -28.9682, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -22.3614, -183.204, 8.52995, 0.29 ) }
    dend_39 { pt3dadd( -23.009, -193.741, 6.27329, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.3614, -183.204, 8.52995, 0.29 ) }
    dend_38 { pt3dadd( -17.1111, -181.817, 10.8763, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -31.232, -144.658, -10.9961, 0.37 ) }
    dend_26 { pt3dadd( -31.6408, -145.801, -11.3646, 0.37 ) }
    dend_26 { pt3dadd( -31.8361, -146.348, -11.5406, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -31.232, -144.658, -10.9961, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -33.817, -144.41, -12.3724, 0.29 ) }
    dend_25 { pt3dadd( -34.5771, -144.338, -12.7535, 0.22 ) }
    dend_25 { pt3dadd( -35.5924, -144.311, -13.2175, 0.22 ) }
    dend_25 { pt3dadd( -36.1974, -144.342, -13.4631, 1.47 ) }
    dend_25 { pt3dadd( -36.646, -144.365, -13.6453, 1.69 ) }
    dend_25 { pt3dadd( -37.0746, -144.387, -13.8193, 1.69 ) }
    dend_25 { pt3dadd( -38.2747, -144.434, -14.0398, 0.96 ) }
    dend_25 { pt3dadd( -39.1323, -144.546, -14.2639, 0.29 ) }
    dend_25 { pt3dadd( -39.8612, -144.751, -14.5121, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 28.3286, -161.474, 18.9984, 0.29 ) }
    dend_21 { pt3dadd( 28.0959, -162.176, 18.0218, 0.29 ) }
    dend_21 { pt3dadd( 27.893, -162.788, 17.1701, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 28.3286, -161.474, 18.9984, 0.29 ) }
    dend_20 { pt3dadd( 28.5871, -159.845, 18.1282, 0.29 ) }
    dend_20 { pt3dadd( 28.8696, -158.84, 17.1075, 0.29 ) }
    dend_20 { pt3dadd( 29.0968, -158.408, 16.2047, 0.29 ) }
    dend_20 { pt3dadd( 29.3172, -157.99, 15.3287, 0.52 ) }
    dend_20 { pt3dadd( 29.9406, -156.806, 12.8511, 0.44 ) }
    dend_20 { pt3dadd( 30.1497, -156.408, 12.0197, 0.29 ) }
    dend_20 { pt3dadd( 30.4729, -156.558, 10.6086, 0.29 ) }
    dend_20 { pt3dadd( 30.5854, -156.717, 10.0983, 0.29 ) }
    dend_20 { pt3dadd( 31.7047, -152.525, 2.58351, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.62985, -177.327, -9.52634, 0.22 ) }
    dend_15 { pt3dadd( -4.61142, -178.07, -9.37254, 0.22 ) }
    dend_15 { pt3dadd( -4.56428, -178.92, -9.15136, 0.22 ) }
    dend_15 { pt3dadd( -4.47253, -180.021, -8.8645, 0.22 ) }
    dend_15 { pt3dadd( -4.38514, -180.925, -8.6313, 0.22 ) }
    dend_15 { pt3dadd( -4.25279, -182.089, -8.34438, 0.22 ) }
    dend_15 { pt3dadd( -4.1478, -183.012, -8.11675, 0.22 ) }
    dend_15 { pt3dadd( -4.02311, -184.091, -7.86391, 0.22 ) }
    dend_15 { pt3dadd( -3.91978, -184.773, -7.71281, 0.37 ) }
    dend_15 { pt3dadd( -3.86975, -185.007, -7.65933, 0.37 ) }
    dend_15 { pt3dadd( -3.70327, -185.659, -7.49762, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.62985, -177.327, -9.52634, 1.55 ) }
    dend_14 { pt3dadd( -5.24951, -177.706, -9.40281, 1.55 ) }
    dend_14 { pt3dadd( -5.61241, -177.976, -9.34003, 1.55 ) }
    dend_14 { pt3dadd( -6.32945, -178.533, -9.2135, 0.29 ) }
    dend_14 { pt3dadd( -7.37042, -179.344, -9.00248, 0.44 ) }
    dend_14 { pt3dadd( -7.64123, -179.529, -8.96937, 0.44 ) }
    dend_14 { pt3dadd( -8.8049, -180.188, -8.89518, 0.29 ) }
    dend_14 { pt3dadd( -9.54755, -180.551, -8.8773, 0.29 ) }
    dend_14 { pt3dadd( -10.2884, -180.868, -8.85801, 0.29 ) }
    dend_14 { pt3dadd( -11.109, -181.16, -8.81928, 0.29 ) }
    dend_14 { pt3dadd( -12.7226, -181.584, -8.66248, 0.29 ) }
    dend_14 { pt3dadd( -14.1454, -181.813, -8.48147, 0.29 ) }
    dend_14 { pt3dadd( -15.042, -181.853, -8.34256, 0.22 ) }
    dend_14 { pt3dadd( -15.9378, -181.832, -8.17812, 0.22 ) }
    dend_14 { pt3dadd( -16.6325, -181.792, -8.03061, 0.22 ) }
    dend_14 { pt3dadd( -17.384, -181.727, -7.83648, 0.22 ) }
    dend_14 { pt3dadd( -18.2865, -181.644, -7.49324, 0.22 ) }
    dend_14 { pt3dadd( -18.9555, -181.542, -7.21229, 0.22 ) }
    dend_14 { pt3dadd( -19.4281, -181.429, -7.03364, 0.52 ) }
    dend_14 { pt3dadd( -19.854, -181.293, -6.89344, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 186.621, -8.61721, -172.112, 0.81 ) }
    dend_9 { pt3dadd( 189.616, -8.39857, -174.372, 0.81 ) }
    dend_9 { pt3dadd( 191.932, -8.33575, -175.976, 0.88 ) }
    dend_9 { pt3dadd( 193.778, -8.39168, -177.265, 0.37 ) }
    dend_9 { pt3dadd( 194.313, -8.40584, -177.632, 0.37 ) }
    dend_9 { pt3dadd( 195.482, -8.43677, -178.436, 0.66 ) }
    dend_9 { pt3dadd( 196.243, -8.45691, -178.959, 0.74 ) }
    dend_9 { pt3dadd( 196.499, -8.47323, -179.181, 0.74 ) }
    dend_9 { pt3dadd( 197.992, -8.63939, -180.076, 0.37 ) }
    dend_9 { pt3dadd( 198.743, -8.78613, -180.51, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 186.621, -8.61721, -172.112, 0.44 ) }
    dend_4 { pt3dadd( 187.318, -8.05331, -173.494, 0.44 ) }
    dend_4 { pt3dadd( 187.81, -7.65509, -174.47, 0.44 ) }
    dend_4 { pt3dadd( 188.082, -7.43504, -175.009, 0.44 ) }
    dend_4 { pt3dadd( 188.616, -7.00269, -176.069, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 121.167, 84.9316, -50.8207, 0.96 ) }
    dend_65 { pt3dadd( 120.435, 85.4019, -52.4941, 0.96 ) }
    dend_65 { pt3dadd( 119.585, 85.8377, -54.1583, 0.59 ) }
    dend_65 { pt3dadd( 119.377, 85.9448, -54.5547, 0.59 ) }
    dend_65 { pt3dadd( 119.189, 86.0551, -54.9318, 0.37 ) }
    dend_65 { pt3dadd( 118.781, 86.3424, -55.8041, 0.29 ) }
    dend_65 { pt3dadd( 118.526, 86.5434, -56.364, 0.29 ) }
    dend_65 { pt3dadd( 118.354, 86.7102, -56.7121, 0.66 ) }
    dend_65 { pt3dadd( 118.07, 87.1189, -57.3349, 0.22 ) }
    dend_65 { pt3dadd( 117.927, 87.3681, -57.7202, 0.22 ) }
    dend_65 { pt3dadd( 117.75, 87.6761, -58.2192, 0.88 ) }
    dend_65 { pt3dadd( 117.636, 87.8629, -58.5214, 0.88 ) }
    dend_65 { pt3dadd( 117.274, 88.3563, -59.3403, 0.37 ) }
    dend_65 { pt3dadd( 117.079, 88.5513, -59.731, 0.96 ) }
    dend_65 { pt3dadd( 116.87, 88.7096, -60.1298, 1.11 ) }
    dend_65 { pt3dadd( 116.475, 88.9746, -60.907, 0.44 ) }
    dend_65 { pt3dadd( 116.25, 89.1312, -61.3882, 0.37 ) }
    dend_65 { pt3dadd( 116.086, 89.2592, -61.7712, 0.52 ) }
    dend_65 { pt3dadd( 115.42, 89.8318, -63.4055, 0.37 ) }
    dend_65 { pt3dadd( 115.153, 90.1296, -64.1826, 0.96 ) }
    dend_65 { pt3dadd( 114.97, 90.391, -64.7801, 0.96 ) }
    dend_65 { pt3dadd( 114.798, 90.669, -65.3858, 0.52 ) }
    dend_65 { pt3dadd( 114.678, 90.8627, -65.846, 1.33 ) }
    dend_65 { pt3dadd( 114.53, 91.0788, -66.4089, 1.33 ) }
    dend_65 { pt3dadd( 113.861, 91.9376, -68.715, 0.52 ) }
    dend_65 { pt3dadd( 113.781, 92.0316, -68.9749, 0.52 ) }
    dend_65 { pt3dadd( 113.601, 92.2232, -69.5331, 0.52 ) }
    dend_65 { pt3dadd( 112.796, 92.9764, -71.9029, 0.44 ) }
    dend_65 { pt3dadd( 112.398, 93.3119, -72.9747, 0.59 ) }
    dend_65 { pt3dadd( 112.142, 93.5254, -73.601, 0.59 ) }
    dend_65 { pt3dadd( 111.863, 93.755, -74.1716, 0.88 ) }
    dend_65 { pt3dadd( 111.759, 93.8472, -74.3587, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 111.549, 94.0512, -74.653, 1.47 ) }
    dend_65 { pt3dadd( 111.02, 94.6008, -75.1282, 0.29 ) }
    dend_65 { pt3dadd( 110.526, 95.1408, -75.5071, 0.29 ) }
    dend_65 { pt3dadd( 110.324, 95.3627, -75.6497, 0.29 ) }
    dend_65 { pt3dadd( 109.972, 95.7532, -75.8727, 0.29 ) }
    dend_65 { pt3dadd( 109.75, 96.015, -76.0136, 0.29 ) }
    dend_65 { pt3dadd( 109.223, 96.6701, -76.3408, 0.29 ) }
    dend_65 { pt3dadd( 109.015, 96.9244, -76.4707, 0.29 ) }
    dend_65 { pt3dadd( 108.726, 97.2215, -76.645, 0.96 ) }
    dend_65 { pt3dadd( 108.536, 97.4268, -76.7759, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 121.167, 84.9316, -50.8207, 0.15 ) }
    dend_62 { pt3dadd( 121.825, 85.8595, -50.3855, 0.15 ) }
    dend_62 { pt3dadd( 122.185, 86.3679, -50.147, 0.15 ) }
    dend_62 { pt3dadd( 122.475, 86.7765, -49.9553, 0.81 ) }
    dend_62 { pt3dadd( 122.727, 87.1312, -49.789, 1.03 ) }
    dend_62 { pt3dadd( 123.058, 87.5986, -49.5697, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -31.8361, -146.348, -11.5406, 0.52 ) }
    dend_28 { pt3dadd( -32.076, -147.152, -12.0475, 0.52 ) }
    dend_28 { pt3dadd( -32.4079, -148.454, -12.7153, 0.52 ) }
    dend_28 { pt3dadd( -32.8625, -150.111, -13.3715, 0.37 ) }
    dend_28 { pt3dadd( -33.0756, -150.874, -13.6585, 0.52 ) }
    dend_28 { pt3dadd( -33.3684, -151.901, -14.0281, 0.44 ) }
    dend_28 { pt3dadd( -33.7112, -153.04, -14.4445, 0.37 ) }
    dend_28 { pt3dadd( -34.0827, -154.197, -14.8157, 0.29 ) }
    dend_28 { pt3dadd( -34.4948, -155.418, -15.1255, 0.29 ) }
    dend_28 { pt3dadd( -34.9989, -157.007, -15.4778, 1.03 ) }
    dend_28 { pt3dadd( -35.1455, -157.453, -15.5802, 1.18 ) }
    dend_28 { pt3dadd( -35.6071, -158.723, -15.9032, 0.88 ) }
    dend_28 { pt3dadd( -35.9373, -159.633, -16.156, 0.44 ) }
    dend_28 { pt3dadd( -36.3, -160.816, -16.5124, 0.37 ) }
    dend_28 { pt3dadd( -36.425, -161.509, -16.7389, 0.59 ) }
    dend_28 { pt3dadd( -36.4579, -162.158, -16.9478, 0.44 ) }
    dend_28 { pt3dadd( -36.3515, -163.475, -17.3874, 0.44 ) }
    dend_28 { pt3dadd( -36.173, -164.409, -17.7007, 0.44 ) }
    dend_28 { pt3dadd( -35.8296, -165.838, -18.1739, 0.52 ) }
    dend_28 { pt3dadd( -35.5203, -167.166, -18.5988, 0.66 ) }
    dend_28 { pt3dadd( -35.3285, -168.268, -18.8654, 0.88 ) }
    dend_28 { pt3dadd( -35.2691, -169.036, -18.9638, 0.88 ) }
    dend_28 { pt3dadd( -35.351, -170.215, -18.9323, 0.52 ) }
    dend_28 { pt3dadd( -35.6593, -171.236, -18.749, 0.29 ) }
    dend_28 { pt3dadd( -36.2813, -172.458, -18.3747, 0.29 ) }
    dend_28 { pt3dadd( -37.1658, -173.848, -17.9468, 0.29 ) }
    dend_28 { pt3dadd( -37.8223, -174.764, -17.7252, 0.96 ) }
    dend_28 { pt3dadd( -38.2469, -175.377, -17.6623, 1.18 ) }
    dend_28 { pt3dadd( -38.6669, -176.054, -17.6508, 1.18 ) }
    dend_28 { pt3dadd( -39.2806, -177.328, -17.7737, 0.59 ) }
    dend_28 { pt3dadd( -39.708, -178.669, -17.957, 0.52 ) }
    dend_28 { pt3dadd( -39.9931, -179.974, -18.1408, 0.52 ) }
    dend_28 { pt3dadd( -40.2813, -181.66, -18.4165, 0.66 ) }
    dend_28 { pt3dadd( -40.4327, -182.777, -18.5913, 0.66 ) }
    dend_28 { pt3dadd( -40.5423, -183.98, -18.7571, 0.81 ) }
    dend_28 { pt3dadd( -40.5806, -185.722, -18.8822, 0.81 ) }
    dend_28 { pt3dadd( -40.5261, -186.977, -18.7625, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -31.8361, -146.348, -11.5406, 0.37 ) }
    dend_27 { pt3dadd( -32.3378, -146.253, -10.8014, 0.37 ) }
    dend_27 { pt3dadd( -33.0389, -146.179, -9.86589, 0.37 ) }
    dend_27 { pt3dadd( -33.3892, -146.145, -9.4385, 0.37 ) }
    dend_27 { pt3dadd( -34.1983, -146.055, -8.53076, 0.29 ) }
    dend_27 { pt3dadd( -34.6948, -145.984, -8.00961, 0.29 ) }
    dend_27 { pt3dadd( -35.2834, -145.9, -7.39175, 0.29 ) }
    dend_27 { pt3dadd( -35.8483, -145.837, -6.79144, 0.37 ) }
    dend_27 { pt3dadd( -36.1532, -145.825, -6.5254, 0.37 ) }
    dend_27 { pt3dadd( -36.4762, -145.825, -6.29485, 0.29 ) }
    dend_27 { pt3dadd( -36.8662, -145.806, -6.10104, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.893, -162.788, 17.1701, 0.22 ) }
    dend_23 { pt3dadd( 26.8469, -163.995, 17.456, 0.22 ) }
    dend_23 { pt3dadd( 25.3396, -165.735, 17.8679, 0.22 ) }
    dend_23 { pt3dadd( 24.4828, -166.724, 18.102, 0.29 ) }
    dend_23 { pt3dadd( 24.0158, -167.263, 18.2297, 0.29 ) }
    dend_23 { pt3dadd( 22.8058, -168.66, 18.5604, 0.22 ) }
    dend_23 { pt3dadd( 22.015, -169.573, 18.7764, 0.22 ) }
    dend_23 { pt3dadd( 15.1356, -181.463, 19.8948, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.893, -162.788, 17.1701, 0.37 ) }
    dend_22 { pt3dadd( 27.8889, -163.671, 17.6714, 0.37 ) }
    dend_22 { pt3dadd( 27.7649, -164.476, 18.0276, 0.96 ) }
    dend_22 { pt3dadd( 27.4868, -165.486, 18.3634, 0.59 ) }
    dend_22 { pt3dadd( 27.2164, -166.261, 18.5351, 0.59 ) }
    dend_22 { pt3dadd( 26.9297, -167.083, 18.7172, 0.22 ) }
    dend_22 { pt3dadd( 26.6566, -167.867, 18.8906, 0.22 ) }
    dend_22 { pt3dadd( 26.2571, -168.707, 19.0145, 0.22 ) }
    dend_22 { pt3dadd( 25.8375, -169.423, 19.021, 0.22 ) }
    dend_22 { pt3dadd( 25.2976, -170.163, 18.9333, 0.22 ) }
    dend_22 { pt3dadd( 24.139, -177.443, 21.0647, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 188.616, -7.00269, -176.069, 0.37 ) }
    dend_6 { pt3dadd( 190.049, -8.54802, -184.827, 0.37 ) }
    dend_6 { pt3dadd( 190.271, -8.77244, -186.323, 0.66 ) }
    dend_6 { pt3dadd( 190.404, -8.89939, -187.502, 0.66 ) }
    dend_6 { pt3dadd( 190.456, -8.94073, -188.07, 0.96 ) }
    dend_6 { pt3dadd( 190.568, -8.96156, -189.53, 1.11 ) }
    dend_6 { pt3dadd( 190.696, -8.88423, -191.238, 1.11 ) }
    dend_6 { pt3dadd( 190.887, -8.26373, -193.329, 0.81 ) }
    dend_6 { pt3dadd( 191.042, -7.62548, -194.848, 1.4 ) }
    dend_6 { pt3dadd( 191.096, -7.37035, -195.308, 1.4 ) }
    dend_6 { pt3dadd( 191.345, -6.2317, -196.844, 0.37 ) }
    dend_6 { pt3dadd( 191.56, -5.31463, -197.717, 0.37 ) }
    dend_6 { pt3dadd( 191.886, -4.11384, -198.521, 0.37 ) }
    dend_6 { pt3dadd( 192.176, -3.09369, -199.009, 0.66 ) }
    dend_6 { pt3dadd( 192.4, -2.23527, -199.342, 0.66 ) }
    dend_6 { pt3dadd( 192.595, -1.01345, -199.805, 0.29 ) }
    dend_6 { pt3dadd( 192.625, -0.0719216, -200.144, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 192.58, 0.60673, -200.401, 0.52 ) }
    dend_6 { pt3dadd( 192.45, 1.7311, -200.887, 0.29 ) }
    dend_6 { pt3dadd( 192.317, 2.88303, -201.447, 1.03 ) }
    dend_6 { pt3dadd( 192.157, 4.58072, -202.407, 0.66 ) }
    dend_6 { pt3dadd( 192.075, 5.65088, -203.066, 0.44 ) }
    dend_6 { pt3dadd( 192.053, 6.0321, -203.307, 0.66 ) }
    dend_6 { pt3dadd( 191.986, 7.20395, -204.073, 0.37 ) }
    dend_6 { pt3dadd( 191.973, 7.80156, -204.445, 0.52 ) }
    dend_6 { pt3dadd( 192.002, 8.97673, -205.107, 0.37 ) }
    dend_6 { pt3dadd( 192.075, 9.80787, -205.485, 0.37 ) }
    dend_6 { pt3dadd( 192.164, 10.6962, -205.88, 0.37 ) }
    dend_6 { pt3dadd( 192.204, 11.691, -206.308, 0.37 ) }
    dend_6 { pt3dadd( 192.183, 12.6506, -206.694, 0.96 ) }
    dend_6 { pt3dadd( 192.174, 13.0553, -206.851, 0.96 ) }
    dend_6 { pt3dadd( 192.193, 14.6874, -207.452, 0.29 ) }
    dend_6 { pt3dadd( 192.238, 16.01, -207.955, 0.29 ) }
    dend_6 { pt3dadd( 192.305, 17.2374, -208.438, 0.29 ) }
    dend_6 { pt3dadd( 192.369, 18.2626, -208.856, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 188.616, -7.00269, -176.069, 0.52 ) }
    dend_5 { pt3dadd( 186.238, -2.66139, -181.108, 0.52 ) }
    dend_5 { pt3dadd( 186.036, -2.29294, -181.499, 0.52 ) }
    dend_5 { pt3dadd( 185.046, -0.52705, -183.247, 0.37 ) }
    dend_5 { pt3dadd( 184.769, -0.0328026, -183.736, 0.29 ) }
    dend_5 { pt3dadd( 183.93, 1.46241, -185.216, 0.29 ) }
    dend_5 { pt3dadd( 183.217, 2.73355, -186.474, 0.29 ) }
    dend_5 { pt3dadd( 182.536, 4.17191, -187.231, 0.29 ) }
    dend_5 { pt3dadd( 182.234, 4.78496, -187.572, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 108.536, 97.4268, -76.7759, 0.29 ) }
    dend_67 { pt3dadd( 107.53, 99.1624, -78.0283, 0.29 ) }
    dend_67 { pt3dadd( 107.216, 99.5566, -78.505, 0.29 ) }
    dend_67 { pt3dadd( 106.777, 100.035, -79.229, 0.29 ) }
    dend_67 { pt3dadd( 106.0, 100.894, -80.5454, 0.29 ) }
    dend_67 { pt3dadd( 105.705, 101.239, -81.0314, 0.44 ) }
    dend_67 { pt3dadd( 105.305, 101.708, -81.6915, 0.44 ) }
    dend_67 { pt3dadd( 104.071, 102.973, -83.673, 0.29 ) }
    dend_67 { pt3dadd( 103.491, 103.532, -84.6575, 0.29 ) }
    dend_67 { pt3dadd( 103.167, 103.841, -85.2597, 0.29 ) }
    dend_67 { pt3dadd( 102.681, 104.31, -86.1853, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 108.536, 97.4268, -76.7759, 0.22 ) }
    dend_66 { pt3dadd( 107.731, 96.3496, -76.2135, 0.22 ) }
    dend_66 { pt3dadd( 107.041, 95.5411, -75.7553, 0.22 ) }
    dend_66 { pt3dadd( 106.151, 94.6233, -75.1626, 1.4 ) }
    dend_66 { pt3dadd( 105.153, 93.5939, -74.4978, 0.22 ) }
    dend_66 { pt3dadd( 104.04, 92.4452, -73.7561, 1.84 ) }
    dend_66 { pt3dadd( 103.064, 91.4393, -73.1064, 0.22 ) }
    dend_66 { pt3dadd( 102.191, 90.6537, -72.4771, 0.22 ) }
    dend_66 { pt3dadd( 101.356, 89.9749, -71.861, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 123.058, 87.5986, -49.5697, 0.74 ) }
    dend_64 { pt3dadd( 123.181, 87.8522, -49.0543, 0.74 ) }
    dend_64 { pt3dadd( 123.35, 88.2361, -48.2086, 0.22 ) }
    dend_64 { pt3dadd( 123.413, 88.464, -47.6852, 0.22 ) }
    dend_64 { pt3dadd( 123.473, 88.8933, -46.6268, 0.22 ) }
    dend_64 { pt3dadd( 123.516, 89.2251, -45.6549, 1.33 ) }
    dend_64 { pt3dadd( 123.547, 89.3675, -45.1639, 1.33 ) }
    dend_64 { pt3dadd( 123.611, 89.5907, -44.1318, 0.22 ) }
    dend_64 { pt3dadd( 123.643, 89.7048, -43.3771, 0.22 ) }
    dend_64 { pt3dadd( 123.647, 89.7602, -42.8923, 0.22 ) }
    dend_64 { pt3dadd( 123.609, 89.8897, -41.839, 0.22 ) }
    dend_64 { pt3dadd( 123.615, 89.9505, -41.0403, 0.22 ) }
    dend_64 { pt3dadd( 123.668, 89.996, -40.5283, 0.37 ) }
    dend_64 { pt3dadd( 123.777, 90.056, -40.0199, 0.37 ) }
    dend_64 { pt3dadd( 123.976, 90.1331, -39.4605, 0.37 ) }
    dend_64 { pt3dadd( 124.158, 90.2169, -39.0521, 0.15 ) }
    dend_64 { pt3dadd( 124.63, 90.5244, -37.95, 0.22 ) }
    dend_64 { pt3dadd( 125.0, 90.8109, -37.0519, 0.22 ) }
    dend_64 { pt3dadd( 125.25, 91.0041, -36.4127, 0.22 ) }
    dend_64 { pt3dadd( 125.636, 91.367, -35.2402, 0.22 ) }
    dend_64 { pt3dadd( 125.846, 91.6072, -34.399, 0.22 ) }
    dend_64 { pt3dadd( 126.058, 91.8871, -33.3115, 0.22 ) }
    dend_64 { pt3dadd( 126.116, 91.9854, -32.9085, 0.74 ) }
    dend_64 { pt3dadd( 126.286, 92.3434, -31.2332, 0.29 ) }
    dend_64 { pt3dadd( 126.354, 92.5562, -30.2277, 0.29 ) }
    dend_64 { pt3dadd( 126.407, 92.7771, -29.2484, 0.29 ) }
    dend_64 { pt3dadd( 126.472, 92.9109, -28.5251, 0.29 ) }
    dend_64 { pt3dadd( 126.619, 93.023, -27.6404, 0.52 ) }
    dend_64 { pt3dadd( 126.783, 93.0936, -26.8307, 0.37 ) }
    dend_64 { pt3dadd( 127.036, 93.1669, -25.7685, 0.29 ) }
    dend_64 { pt3dadd( 127.104, 93.1792, -25.5069, 0.37 ) }
    dend_64 { pt3dadd( 127.375, 93.2267, -24.4866, 0.37 ) }
    dend_64 { pt3dadd( 127.713, 93.2747, -23.1178, 0.37 ) }
    dend_64 { pt3dadd( 127.959, 93.289, -22.0503, 0.22 ) }
    dend_64 { pt3dadd( 128.104, 93.2809, -21.4614, 0.22 ) }
    dend_64 { pt3dadd( 128.26, 93.2675, -20.8266, 0.74 ) }
    dend_64 { pt3dadd( 128.336, 93.269, -20.4744, 0.88 ) }
    dend_64 { pt3dadd( 128.526, 93.3482, -19.3863, 0.59 ) }
    dend_64 { pt3dadd( 128.655, 93.5445, -18.1442, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 123.058, 87.5986, -49.5697, 0.29 ) }
    dend_63 { pt3dadd( 124.061, 88.2016, -50.1983, 0.29 ) }
    dend_63 { pt3dadd( 124.91, 88.7027, -50.9773, 0.29 ) }
    dend_63 { pt3dadd( 125.726, 89.1722, -51.8486, 1.03 ) }
    dend_63 { pt3dadd( 126.104, 89.3898, -52.2838, 1.03 ) }
    dend_63 { pt3dadd( 127.05, 89.8649, -53.3585, 0.44 ) }
    dend_63 { pt3dadd( 127.781, 90.1878, -54.1524, 0.29 ) }
    dend_63 { pt3dadd( 128.747, 90.5254, -55.2464, 0.96 ) }
    dend_63 { pt3dadd( 129.076, 90.6163, -55.6114, 0.96 ) }
    dend_63 { pt3dadd( 130.074, 90.8527, -56.6086, 0.22 ) }
    dend_63 { pt3dadd( 130.862, 91.0448, -57.3096, 0.22 ) }
    dend_63 { pt3dadd( 131.718, 91.2526, -57.9217, 0.22 ) }
    dend_63 { pt3dadd( 132.675, 91.5144, -58.5086, 0.22 ) }
    dend_63 { pt3dadd( 133.806, 91.8767, -59.1083, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 134.52, 92.1417, -59.4522, 0.52 ) }
    dend_63 { pt3dadd( 135.117, 92.4145, -59.689, 0.29 ) }
    dend_63 { pt3dadd( 135.883, 92.8611, -59.9083, 1.03 ) }
    dend_63 { pt3dadd( 136.406, 93.2144, -59.9497, 1.03 ) }
    dend_63 { pt3dadd( 136.885, 93.6112, -59.8724, 0.88 ) }
    dend_63 { pt3dadd( 137.378, 94.0386, -59.7093, 0.66 ) }
    dend_63 { pt3dadd( 138.001, 94.6004, -59.423, 0.37 ) }
    dend_63 { pt3dadd( 138.641, 95.2006, -59.0341, 0.59 ) }
    dend_63 { pt3dadd( 139.402, 95.9457, -58.4616, 0.29 ) }
    dend_63 { pt3dadd( 140.074, 96.5821, -57.8901, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -40.5261, -186.977, -18.7625, 0.74 ) }
    dend_30 { pt3dadd( -40.9998, -188.025, -18.3918, 0.74 ) }
    dend_30 { pt3dadd( -41.8523, -189.574, -17.7988, 0.66 ) }
    dend_30 { pt3dadd( -42.5667, -190.592, -17.3808, 0.52 ) }
    dend_30 { pt3dadd( -43.6229, -191.825, -16.8654, 0.37 ) }
    dend_30 { pt3dadd( -44.2352, -192.499, -16.5979, 0.74 ) }
    dend_30 { pt3dadd( -44.7404, -193.075, -16.357, 1.03 ) }
    dend_30 { pt3dadd( -45.4351, -193.835, -16.026, 0.74 ) }
    dend_30 { pt3dadd( -46.4252, -194.933, -15.5591, 0.52 ) }
    dend_30 { pt3dadd( -47.3931, -196.159, -15.085, 0.52 ) }
    dend_30 { pt3dadd( -48.0158, -197.143, -14.7729, 0.66 ) }
    dend_30 { pt3dadd( -48.8371, -198.859, -14.3424, 0.88 ) }
    dend_30 { pt3dadd( -49.0614, -199.471, -14.2247, 1.18 ) }
    dend_30 { pt3dadd( -49.3332, -200.457, -14.0784, 0.81 ) }
    dend_30 { pt3dadd( -49.6122, -201.857, -13.9312, 0.52 ) }
    dend_30 { pt3dadd( -49.8229, -203.041, -13.8802, 0.52 ) }
    dend_30 { pt3dadd( -50.1071, -204.446, -13.8957, 0.52 ) }
    dend_30 { pt3dadd( -50.2686, -205.116, -13.9484, 0.52 ) }
    dend_30 { pt3dadd( -50.6156, -206.43, -14.0679, 0.52 ) }
    dend_30 { pt3dadd( -50.9984, -207.731, -14.193, 0.52 ) }
    dend_30 { pt3dadd( -51.3573, -208.825, -14.3251, 1.03 ) }
    dend_30 { pt3dadd( -51.6451, -209.62, -14.4258, 1.25 ) }
    dend_30 { pt3dadd( -52.0757, -210.608, -14.5602, 0.66 ) }
    dend_30 { pt3dadd( -52.5827, -211.568, -14.7083, 0.29 ) }
    dend_30 { pt3dadd( -53.3421, -212.509, -14.8841, 0.29 ) }
    dend_30 { pt3dadd( -53.8774, -212.382, -14.915, 0.52 ) }
    dend_30 { pt3dadd( -55.2424, -211.522, -14.9337, 0.29 ) }
    dend_30 { pt3dadd( -56.3025, -210.713, -14.9449, 0.29 ) }
    dend_30 { pt3dadd( -57.4141, -209.711, -14.9477, 0.22 ) }
    dend_30 { pt3dadd( -57.6216, -209.497, -14.9492, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -40.5261, -186.977, -18.7625, 0.22 ) }
    dend_29 { pt3dadd( -40.9169, -188.609, -19.3286, 0.22 ) }
    dend_29 { pt3dadd( -41.0701, -189.261, -19.563, 0.22 ) }
    dend_29 { pt3dadd( -41.3216, -190.563, -20.0161, 0.22 ) }
    dend_29 { pt3dadd( -41.5649, -192.039, -20.5037, 0.22 ) }
    dend_29 { pt3dadd( -41.7621, -193.235, -20.8988, 0.22 ) }
    dend_29 { pt3dadd( -42.1448, -195.558, -21.6657, 0.22 ) }
    dend_29 { pt3dadd( -42.3292, -196.557, -21.9597, 0.22 ) }
    dend_29 { pt3dadd( -42.6781, -198.525, -22.5757, 0.22 ) }
    dend_29 { pt3dadd( -42.8279, -199.619, -22.9514, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 192.369, 18.2626, -208.856, 0.29 ) }
    dend_8 { pt3dadd( 193.682, 17.9407, -209.018, 0.29 ) }
    dend_8 { pt3dadd( 194.436, 17.7555, -209.111, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 192.369, 18.2626, -208.856, 0.37 ) }
    dend_7 { pt3dadd( 192.547, 19.2499, -209.025, 0.37 ) }
    dend_7 { pt3dadd( 192.756, 20.4126, -209.223, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 9
    dend_44 nseg = 3
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_88 nseg = 5
    dend_69 nseg = 7
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 9
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 5
    dend_2 nseg = 13
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_28 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_ChC_dfe3a6b301_0_0


