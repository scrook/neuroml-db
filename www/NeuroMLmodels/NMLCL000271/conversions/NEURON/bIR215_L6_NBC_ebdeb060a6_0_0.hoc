// Cell: bIR215_L6_NBC_ebdeb060a6_0_0
/*
{
  "id" : "bIR215_L6_NBC_ebdeb060a6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-13.6672, -4.21761, 2.88746, 3.77586", "-12.3226, -3.91408, 2.62074, 6.64131", "-10.9781, -3.61056, 2.35401, 8.80204", "-9.63356, -3.30703, 2.08728, 10.3184", "-8.28902, -3.0035, 1.82056, 12.1801", "-6.94448, -2.69998, 1.55383, 13.9015", "-5.59994, -2.39645, 1.28711, 15.2125", "-4.2554, -2.09293, 1.02038, 16.1357", "-2.91086, -1.7894, 0.753656, 16.8349", "-1.56632, -1.48588, 0.486931, 17.1545", "-0.221778, -1.18235, 0.220205, 17.2905", "1.12276, -0.878824, -0.0465203, 17.299", "2.4673, -0.575298, -0.313246, 17.3774", "3.81184, -0.271773, -0.579971, 17.0096", "5.15639, 0.0317532, -0.846697, 16.2957", "6.50093, 0.335279, -1.11342, 15.4071", "7.84547, 0.638805, -1.38015, 13.8209", "9.19001, 0.942331, -1.64687, 12.2266", "10.5345, 1.24586, -1.9136, 10.4487", "11.8791, 1.54938, -2.18032, 8.51007", "13.2236, 1.85291, -2.44705, 4.94822" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "2.86402, -8.24612, -8.21721, 0.88", "2.86402, -8.24612, -8.21721, 0.88", "3.06657, -8.65908, -8.34726, 0.88", "3.41054, -9.27129, -8.54255, 0.88", "3.77321, -9.86539, -8.74878, 0.81", "4.31007, -10.6803, -9.04241, 0.88", "4.64011, -11.1558, -9.23218, 1.4", "4.86847, -11.4603, -9.3655, 1.69", "5.08825, -11.7308, -9.49536, 1.84", "5.32675, -12.024, -9.6399, 1.84", "5.65154, -12.4734, -9.84054, 0.66", "5.93635, -12.9897, -10.0132, 0.44", "6.09026, -13.3859, -10.1138, 0.66", "6.17104, -13.6707, -10.1699, 0.88", "6.28165, -14.1351, -10.234, 0.96", "6.35444, -14.4648, -10.2642, 0.96", "6.44851, -14.8818, -10.2968, 0.74", "6.598, -15.4637, -10.3362, 0.44", "6.73739, -15.926, -10.3857, 0.29", "6.88012, -16.324, -10.4412, 0.29", "7.06561, -16.7771, -10.5126, 1.62", "7.26534, -17.2194, -10.5846, 2.36", "7.37473, -17.4334, -10.617, 2.8", "7.46601, -17.6048, -10.6395, 2.95", "7.73909, -18.1767, -10.6939, 1.62", "7.98067, -18.7508, -10.7263, 0.66", "8.18525, -19.2704, -10.7744, 0.29", "8.41657, -19.8618, -10.8705, 0.29", "8.56753, -20.2533, -10.9533, 0.29", "8.80569, -20.9312, -11.1214, 2.28", "8.94994, -21.3968, -11.2623, 2.5", "9.23197, -22.4369, -11.6247, 0.66", "9.41984, -23.1457, -11.8754, 0.29", "9.51159, -23.493, -12.0027, 0.29", "9.75209, -24.3207, -12.3053, 2.73", "9.84179, -24.6071, -12.414, 3.46", "9.94129, -24.9285, -12.5455, 3.46", "10.288, -26.0842, -12.9957, 0.15", "10.4073, -26.4711, -13.1515, 0.15", "10.5266, -26.83, -13.3122, 0.88", "10.682, -27.2728, -13.5307, 1.18", "10.8928, -27.9103, -13.867, 0.88", "11.0274, -28.3567, -14.1106, 0.15", "11.2029, -29.0229, -14.4795, 1.92", "11.2955, -29.3634, -14.6491, 2.87", "11.3699, -29.6408, -14.7811, 2.87", "11.6304, -30.6298, -15.2221, 0.74", "11.7428, -31.066, -15.4068, 0.29", "11.8116, -31.3491, -15.5332, 0.59", "11.8874, -31.6927, -15.6776, 0.74", "12.0599, -32.5227, -15.9909, 0.22", "12.1923, -33.2132, -16.2209, 1.25", "12.2483, -33.5409, -16.3232, 1.55", "12.4107, -34.4423, -16.6041, 0.22", "12.5646, -35.2097, -16.8308, 0.22", "12.6454, -35.5749, -16.9279, 0.88", "12.7427, -35.9433, -17.0029, 1.18", "12.8576, -36.316, -17.0791, 0.96", "13.0922, -36.9654, -17.2233, 0.22", "13.2412, -37.3003, -17.299, 0.52", "13.2963, -37.4152, -17.3335, 0.66", "13.5045, -37.8547, -17.47, 0.22", "13.8832, -38.6781, -17.7331, 2.8", "14.0257, -39.0003, -17.8337, 3.24", "14.1665, -39.3556, -17.9525, 2.95", "14.6202, -40.5685, -18.3684, 0.29", "14.8816, -41.2905, -18.6064, 0.15", "15.0406, -41.7517, -18.752, 0.96", "15.1126, -41.9659, -18.8129, 1.18", "15.3869, -42.8368, -19.0643, 0.22", "15.4652, -43.0869, -19.1387, 0.52", "15.7256, -43.8248, -19.3478, 0.22", "15.9226, -44.3498, -19.5064, 1.69", "16.0806, -44.7474, -19.6243, 2.36", "16.2401, -45.1255, -19.7482, 2.5", "16.6618, -46.0624, -20.0552, 0.22", "17.0828, -47.0124, -20.3842, 0.22", "17.2552, -47.4038, -20.5259, 1.33", "17.4019, -47.7437, -20.6438, 1.92", "17.5814, -48.187, -20.7908, 2.06", "17.9719, -49.1982, -21.082, 0.22", "18.1383, -49.6535, -21.2028, 0.74", "18.1703, -49.7424, -21.2245, 0.74", "18.3682, -50.2686, -21.3322, 0.22", "18.5652, -50.794, -21.4215, 1.69", "18.7265, -51.2233, -21.4759, 2.43", "18.8019, -51.4291, -21.4991, 2.5", "19.244, -52.7203, -21.5404, 0.15", "19.4593, -53.4049, -21.5309, 0.15", "19.534, -53.6991, -21.5142, 0.59", "19.5956, -53.9924, -21.4884, 0.74", "19.7761, -55.0507, -21.3803, 0.22", "19.9175, -56.1144, -21.2616, 2.5", "19.9474, -56.409, -21.2289, 2.95", "20.1176, -58.2656, -21.0315, 0.22", "20.1434, -58.5186, -21.006, 0.81", "20.1626, -58.7336, -20.997, 0.81", "20.2582, -59.9708, -21.0192, 0.22", "20.3143, -60.6031, -21.0741, 1.69", "20.3566, -61.0062, -21.119, 2.14", "20.4922, -62.0574, -21.2667, 0.22", "20.6634, -63.2698, -21.4258, 1.25", "20.6988, -63.5227, -21.456, 1.47", "20.8457, -64.7469, -21.5308, 0.22", "20.8784, -65.1077, -21.5284, 0.74", "20.8859, -65.3942, -21.5092, 0.74", "20.8518, -65.9782, -21.4217, 0.22", "20.8044, -66.3811, -21.3283, 0.22", "20.6177, -67.3608, -21.0968, 2.21", "20.5325, -67.6687, -21.0232, 2.73", "20.1683, -68.7705, -20.8154, 0.22", "19.9603, -69.3152, -20.7423, 0.22", "19.8096, -69.6638, -20.7195, 0.81", "19.6989, -69.9019, -20.7181, 1.03", "19.5559, -70.1774, -20.7341, 0.81", "19.1799, -70.8102, -20.7624, 0.22", "18.976, -71.1098, -20.7716, 1.18", "18.7647, -71.4096, -20.7739, 1.4", "18.6048, -71.6322, -20.7698, 1.18", "18.1111, -72.4001, -20.7314, 0.22", "17.8258, -72.9322, -20.6688, 0.22", "17.7424, -73.1263, -20.6367, 0.96", "17.6496, -73.4183, -20.5903, 1.18", "17.5874, -73.6801, -20.5507, 0.88", "17.3547, -75.0034, -20.3617, 0.22", "17.2656, -75.9077, -20.2467, 2.73", "17.2491, -76.2345, -20.2047, 2.8", "17.2186, -77.2892, -20.0674, 0.22", "17.2115, -77.6155, -20.0458, 0.74", "17.2079, -77.7439, -20.0491, 0.81", "17.169, -78.3812, -20.1348, 0.22", "17.1412, -78.6328, -20.1927, 0.52", "17.1103, -78.7987, -20.2417, 0.74", "16.8219, -80.0177, -20.7162, 0.22", "16.6244, -80.77, -21.0338, 0.22", "16.4468, -81.397, -21.3244, 1.62", "16.3593, -81.6813, -21.4641, 1.92", "16.0589, -82.6473, -21.9547, 0.22", "15.8442, -83.3253, -22.3008, 0.22", "15.7192, -83.7129, -22.4933, 0.96", "15.6044, -84.1028, -22.708, 1.25", "15.5033, -84.4973, -22.9313, 0.22", "15.3412, -85.2158, -23.3079, 0.22", "15.2229, -85.8208, -23.6029, 1.03", "15.1943, -85.9936, -23.6805, 1.03", "15.05, -87.02, -24.1083, 0.22", "15.0018, -87.4646, -24.2619, 0.22", "14.9447, -88.102, -24.4461, 2.21", "14.9189, -88.4026, -24.512, 2.43", "14.8632, -89.0624, -24.6311, 1.47", "14.7826, -89.8522, -24.7408, 0.22", "14.6858, -90.6969, -24.8124, 0.22", "14.6198, -91.2735, -24.8592, 1.62", "14.5809, -91.6131, -24.887, 2.14", "14.5367, -91.9836, -24.9115, 2.14", "14.3911, -93.0339, -24.9651, 0.22", "14.3207, -93.539, -24.9916, 1.25", "14.2816, -93.8342, -25.0052, 1.55", "14.22, -94.3582, -25.0144, 1.18", "14.1011, -95.4754, -25.0076, 0.22", "14.0442, -96.0159, -24.9952, 1.69", "14.0082, -96.3625, -24.9847, 1.99", "13.8733, -97.5532, -24.9361, 0.22", "13.7859, -98.3265, -24.8917, 0.81", "13.7638, -98.5407, -24.872, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.78402, 3.51238, 10.9728, 0.59", "2.4952, 3.78295, 11.7, 0.59", "2.11269, 4.14128, 12.6631, 0.81", "0.152825, 5.97728, 17.5975, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-13.986, -4.11212, -3.2872, 1.25", "-14.1653, -4.19789, -3.29891, 1.25", "-15.4112, -4.79365, -3.38026, 1.25", "-16.4414, -5.28629, -3.44752, 1.4", "-17.1795, -5.63924, -3.49571, 1.55", "-18.1022, -6.08051, -3.55595, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-13.616, -2.04512, 4.5928, 1.92", "-13.616, -2.04512, 4.5928, 1.92", "-14.4862, -1.96906, 4.5928, 1.33", "-15.2762, -1.90852, 4.57481, 1.18", "-16.3061, -1.83646, 4.53489, 1.18", "-17.2976, -1.76644, 4.48915, 1.18", "-18.5383, -1.68052, 4.42795, 1.18", "-19.8828, -1.60472, 4.36009, 1.62", "-21.0004, -1.55671, 4.28653, 2.21", "-21.5155, -1.53596, 4.26032, 2.58", "-22.231, -1.48485, 4.23513, 2.87", "-22.8705, -1.40087, 4.22476, 2.87", "-23.8445, -1.20686, 4.24725, 2.58", "-24.8122, -0.955559, 4.31263, 1.69", "-26.0978, -0.547162, 4.4987, 0.88", "-27.0858, -0.172437, 4.73166, 0.81", "-27.6948, 0.099445, 4.92473, 0.81", "-28.2356, 0.378377, 5.15406, 1.03", "-28.6319, 0.606396, 5.36766, 1.18", "-29.2799, 0.97652, 5.82046, 1.18", "-29.9758, 1.3233, 6.38399, 1.4", "-30.3395, 1.46762, 6.70571, 1.55", "-30.8742, 1.6318, 7.19436, 1.55", "-31.4391, 1.78296, 7.70809, 1.33", "-32.5802, 2.04342, 8.74794, 1.25", "-33.7165, 2.25729, 9.7558, 2.28", "-34.3011, 2.34727, 10.2794, 3.24", "-34.8097, 2.41, 10.7575, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.47402, 7.43188, -0.657204, 1.77", "2.47402, 7.43188, -0.657204, 1.77", "2.57012, 8.559, -0.562393, 1.33", "2.68124, 9.75718, -0.436924, 1.03", "2.75373, 10.5432, -0.344518, 0.96", "2.83787, 11.4578, -0.231808, 0.96", "2.92884, 12.4346, -0.114581, 1.11", "3.01374, 13.4401, 0.00483286, 1.33", "3.06287, 14.1923, 0.0986624, 1.55", "3.09437, 14.9708, 0.180869, 1.55", "3.10688, 15.8266, 0.245166, 1.55", "3.09542, 17.0345, 0.267917, 1.18", "3.05705, 18.1069, 0.234757, 1.03", "2.97406, 19.4752, 0.1221, 1.4", "2.90802, 20.3326, -0.0118783, 1.84", "2.81735, 21.388, -0.233969, 2.14", "2.74026, 22.1638, -0.426603, 2.14", "2.65225, 22.9513, -0.661944, 2.21", "2.58079, 23.6237, -0.904779, 1.99", "2.4764, 24.689, -1.37572, 1.69", "2.42282, 25.3357, -1.67149, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "12.624, 0.39238, -4.7872, 6.48", "12.624, 0.39238, -4.7872, 6.48", "13.9764, 0.584784, -4.74569, 6.48", "15.1669, 0.754152, -4.70915, 5.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "13.2236, 1.85291, -2.44705, 0.836322", "27.8554, 5.156, -2.44705, 0.836322", "42.4872, 8.45908, -2.44705, 0.836322" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "0.152825, 5.97728, 17.5975, 2.36", "-0.0741637, 5.68911, 17.791, 2.36", "-1.13259, 4.4539, 18.5037, 1.69", "-1.81928, 3.64636, 18.8862, 0.44", "-2.2488, 3.07466, 19.1034, 0.74", "-2.5455, 2.62729, 19.2625, 0.88", "-2.89275, 2.03084, 19.4648, 0.88", "-3.10658, 1.58213, 19.5661, 0.74", "-2.48209, 1.43795, 20.0767, 0.52", "-1.89854, 1.31436, 20.7767, 0.66", "-0.838747, 1.07615, 22.0847, 0.81", "-0.117524, 0.879718, 23.0122, 1.33", "0.189957, 0.773223, 23.4421, 1.33", "2.75147, -0.298623, 27.5257, 0.88", "3.76435, -0.81342, 29.4393, 0.74", "4.12572, -1.06365, 30.3103, 0.74", "4.49255, -1.48702, 31.6042, 0.81", "4.74878, -2.03233, 33.122, 0.96", "4.80582, -2.47034, 34.1772, 1.11", "4.65824, -2.84837, 34.8266, 1.77", "4.43325, -3.14254, 35.3514, 2.21", "4.08547, -3.43449, 35.9816, 2.5", "3.72768, -3.63164, 36.5131, 2.65", "3.22565, -3.80129, 37.1326, 2.65", "1.95682, -4.07627, 38.4473, 0.81", "1.6001, -4.12502, 38.7651, 0.66", "0.84152, -4.24312, 39.3337, 0.88", "0.370416, -4.34639, 39.6341, 0.59", "-0.502427, -4.59554, 40.1359, 0.29", "-1.41704, -4.83682, 40.546, 0.29", "-1.07184, -5.22907, 40.5129, 0.29", "-0.0149248, -6.37485, 40.4516, 0.29", "0.79208, -7.13469, 40.3188, 0.29", "1.91567, -8.09762, 40.0909, 0.29", "3.40537, -9.28096, 39.7535, 0.29", "4.78186, -10.2941, 39.4404, 0.37", "6.31204, -11.3187, 39.0818, 0.37", "8.16933, -12.4008, 38.6181, 0.59", "8.71868, -12.702, 38.4671, 1.03", "9.20808, -12.9657, 38.3096, 1.18" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "0.152825, 5.97728, 17.5975, 0.59", "-0.449528, 7.79248, 17.7725, 0.59", "-0.880004, 9.08972, 17.8976, 0.29", "-1.19616, 10.0425, 17.9894, 0.29", "-1.59009, 11.2296, 18.1039, 0.81", "-1.89509, 12.1487, 18.1925, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-18.1022, -6.08051, -3.55595, 0.22", "-18.9015, -5.748, -3.78937, 0.22", "-19.9959, -5.32274, -4.16971, 0.22", "-20.4083, -5.16594, -4.31075, 0.66", "-20.9711, -4.97615, -4.54017, 0.81", "-21.5586, -4.79891, -4.83398, 0.52", "-22.0314, -4.66649, -5.09893, 0.22", "-22.822, -4.53286, -5.5382, 0.22", "-23.8538, -4.46359, -6.08897, 1.33", "-24.8517, -4.46264, -6.60743, 1.99", "-25.8136, -4.53845, -7.07404, 2.21", "-26.6795, -4.67469, -7.47438, 2.28", "-28.3125, -5.10073, -8.32838, 0.52", "-29.3018, -5.45887, -8.89046, 0.44", "-29.835, -5.67965, -9.22116, 0.22", "-30.7652, -6.06895, -9.82541, 1.25", "-31.2619, -6.27492, -10.1648, 1.33", "-33.2728, -7.15976, -11.6905, 0.22", "-33.8305, -7.40577, -12.1916, 0.22", "-34.9253, -7.85494, -13.2598, 2.28", "-35.7104, -8.16059, -14.0916, 3.61", "-36.0555, -8.27228, -14.4777, 3.61" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-18.1022, -6.08051, -3.55595, 0.96", "-19.2545, -6.91761, -2.21735, 0.96", "-19.9245, -7.27604, -1.58025, 1.25", "-20.4314, -7.49438, -1.16179, 1.33", "-20.9506, -7.67283, -0.771693, 1.33", "-21.6845, -7.88116, -0.264792, 0.52", "-22.3154, -8.02692, 0.125097, 0.88", "-23.0049, -8.05148, 0.33968, 1.33", "-23.322, -8.03598, 0.392475, 1.55", "-23.75, -7.99508, 0.429444, 1.69", "-24.0701, -7.96186, 0.435144, 1.69", "-24.7145, -7.92111, 0.41726, 1.18", "-25.9149, -7.9347, 0.370349, 0.52", "-26.4408, -7.97569, 0.357941, 0.66", "-26.966, -8.04343, 0.363189, 0.66", "-27.4841, -8.1392, 0.384791, 0.66", "-28.1786, -8.28703, 0.431301, 0.81", "-29.1818, -8.54718, 0.545831, 1.4", "-29.6153, -8.68858, 0.628542, 2.14", "-30.0906, -8.847, 0.732121, 2.5", "-30.7027, -9.0545, 0.885505, 2.8" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-34.8097, 2.41, 10.7575, 1.84", "-35.485, 1.47485, 11.712, 1.84", "-36.0205, 0.733413, 12.4688, 1.18", "-36.378, 0.238257, 12.9742, 0.88", "-36.7115, -0.223507, 13.4455, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-34.8097, 2.41, 10.7575, 1.4", "-35.547, 4.52264, 10.7914, 1.4", "-36.1626, 6.19366, 10.8049, 0.81", "-36.4948, 6.97031, 10.8254, 0.81", "-37.0112, 8.04065, 10.8648, 0.96", "-37.3846, 8.74059, 10.8951, 1.11", "-37.8132, 9.47381, 10.9293, 1.11", "-38.2201, 10.1094, 10.9422, 1.11", "-38.8868, 11.0155, 10.9863, 0.52", "-39.2406, 11.5169, 11.043, 0.81", "-39.5738, 12.0772, 11.1235, 0.81", "-39.9541, 12.95, 11.2588, 0.52", "-40.1811, 13.7655, 11.3938, 0.52", "-40.2775, 14.4982, 11.5281, 0.52", "-40.3091, 15.7768, 11.7573, 0.52", "-40.2512, 16.7746, 11.9509, 1.33", "-40.1749, 17.2917, 12.0611, 1.55", "-40.0814, 17.6701, 12.1518, 1.69", "-39.8663, 18.371, 12.341, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.42282, 25.3357, -1.67149, 0.44", "2.90047, 26.131, -3.57848, 0.44", "3.06489, 26.4254, -4.22149, 0.52", "3.19082, 26.6922, -4.80657, 0.37", "3.35218, 27.0175, -5.45513, 0.37", "4.04576, 28.3207, -8.1353, 0.88", "4.22669, 28.5901, -8.78121, 1.25", "4.38562, 28.7906, -9.31977, 0.74", "4.70787, 29.2463, -10.5265, 0.44", "4.95957, 29.6178, -11.5305, 2.14", "5.1768, 29.9296, -12.3916, 2.28", "5.82608, 30.6996, -14.63, 0.59", "6.14853, 31.0124, -15.7469, 1.03", "6.61774, 31.4218, -17.733, 1.18", "6.87723, 31.6564, -19.136, 1.4", "7.03934, 31.8138, -20.1731, 1.62", "7.25839, 32.0462, -21.769, 1.84", "7.47284, 32.3287, -23.809, 3.17", "8.03705, 33.2096, -30.4693, 1.4", "8.28606, 33.7719, -34.456, 1.03", "8.37849, 34.1165, -36.6128, 2.14", "8.47645, 34.7778, -40.2015, 1.77", "8.52709, 35.8448, -45.2567, 1.33", "8.52374, 36.0299, -46.036, 1.55", "8.33973, 37.4384, -50.9088, 0.22", "8.28612, 37.6821, -51.6261, 0.22", "8.09896, 38.3323, -53.261, 1.4", "8.00208, 38.6435, -53.8903, 2.14", "7.9082, 38.9474, -54.3823, 2.14", "6.55757, 42.6527, -61.2637, 0.22", "6.29998, 43.3486, -62.4458, 0.22", "5.96967, 44.268, -63.9379, 1.4", "5.86029, 44.5809, -64.425, 1.99", "5.71699, 44.9756, -65.1526, 1.99", "4.11968, 49.9793, -73.7902, 0.22", "3.74762, 51.3402, -75.915, 0.22", "3.62017, 51.827, -76.6802, 1.18", "3.47023, 52.3701, -77.6154, 1.47", "1.86541, 58.3279, -88.0525, 0.22", "1.4, 60.1495, -91.1814, 0.22", "1.18994, 61.0212, -92.6387, 2.06", "1.03828, 61.6157, -93.7341, 2.14", "0.164619, 64.996, -100.214, 0.22", "0.0195663, 65.5532, -101.295, 1.33", "-0.141299, 66.2618, -102.366, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "2.42282, 25.3357, -1.67149, 0.66", "2.53226, 26.3635, -1.86768, 0.66", "2.56974, 27.181, -2.09916, 0.66", "2.53951, 28.1269, -2.40765, 0.52", "2.42009, 28.9172, -2.70239, 0.44", "2.11038, 30.3717, -3.27961, 1.03", "2.00608, 30.8125, -3.45572, 1.25", "1.87898, 31.2532, -3.65511, 1.4", "1.70631, 31.7765, -3.90501, 1.4", "1.35992, 32.8074, -4.39938, 0.59", "1.19616, 33.426, -4.64176, 0.37", "1.14639, 33.8082, -4.7299, 0.37", "1.1574, 34.5347, -4.87841, 0.81", "1.20247, 34.8994, -4.94116, 0.88", "1.2922, 35.3487, -5.00433, 0.66", "1.40965, 35.8515, -5.05358, 0.29", "1.52528, 36.3488, -5.09976, 0.29", "1.82138, 37.7302, -5.24025, 1.84", "1.94865, 38.4337, -5.3192, 2.95", "2.00749, 38.8589, -5.36929, 3.24", "2.04409, 39.2853, -5.42122, 3.39" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.1669, 0.754152, -4.70915, 1.03", "16.5267, -1.45498, -5.61828, 1.03", "17.135, -2.55332, -6.12845, 0.66", "17.5623, -3.39657, -6.56996, 0.59", "18.0299, -4.44071, -7.1331, 0.66", "18.2655, -5.03677, -7.453, 0.66", "18.7088, -6.28553, -8.11192, 1.47", "18.8834, -6.96042, -8.50051, 1.92", "18.9974, -7.54673, -8.78165, 2.14", "19.0998, -8.2552, -9.07725, 1.99", "19.2451, -9.31555, -9.41934, 1.55", "19.4817, -10.6842, -9.7028, 0.74", "19.682, -11.6378, -9.79022, 0.52", "20.0274, -12.9975, -9.81458, 0.74", "20.2996, -13.8699, -9.75227, 0.74", "20.6546, -14.8208, -9.62793, 0.66", "20.9847, -15.6034, -9.4564, 1.11", "21.263, -16.2108, -9.28426, 1.62", "21.5647, -16.8361, -9.1036, 1.62", "22.2752, -18.2661, -8.74434, 0.81", "22.8159, -19.3112, -8.49276, 0.59", "23.4626, -20.5543, -8.22219, 0.44", "23.8434, -21.2998, -8.1324, 0.44", "24.4048, -22.3994, -8.08462, 2.06", "24.8099, -23.1887, -8.11122, 3.02", "25.0755, -23.688, -8.17174, 3.61", "25.4495, -24.3618, -8.30508, 3.46", "26.7102, -26.5386, -8.8918, 0.88", "27.1791, -27.3343, -9.12538, 0.66", "27.6742, -28.156, -9.37051, 0.88", "28.0821, -28.8355, -9.56571, 0.88", "28.6545, -29.7691, -9.82621, 0.29", "28.9971, -30.3123, -9.96831, 0.29", "29.5407, -31.1794, -10.1517, 1.47", "30.032, -32.0086, -10.323, 1.99", "30.5068, -32.8599, -10.4889, 1.77", "31.232, -34.2527, -10.7284, 0.22", "31.536, -34.8607, -10.815, 0.22", "31.81, -35.4028, -10.8958, 0.44", "32.395, -36.5218, -11.0733, 0.81", "32.5907, -36.8844, -11.1306, 1.11", "32.9929, -37.594, -11.2389, 0.81", "33.4236, -38.3223, -11.3506, 0.44", "33.9836, -39.2623, -11.5936, 0.29", "34.6128, -40.317, -11.967, 1.84", "35.0491, -41.003, -12.2828, 3.02", "35.3235, -41.4226, -12.4991, 3.61", "35.6945, -41.9903, -12.8122, 3.39", "37.0988, -44.1751, -14.0959, 0.22", "38.1774, -45.9209, -15.1784, 0.22", "38.9493, -47.1868, -16.0198, 1.69", "39.1695, -47.5537, -16.276, 1.69" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.1669, 0.754152, -4.70915, 4.79", "17.3476, 0.95186, -4.70246, 4.79", "17.9995, 1.01096, -4.70046, 4.42" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "42.4872, 8.45908, -2.44705, 0.242615", "57.119, 11.7622, -2.44705, 0.242615", "71.7508, 15.0653, -2.44705, 0.242615" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.89509, 12.1487, 18.1925, 0.22", "-2.06373, 13.0851, 19.4581, 0.22", "-2.16319, 13.7178, 20.3044, 1.33", "-2.20267, 13.9867, 20.6458, 1.62", "-2.24811, 14.3988, 21.1077, 1.62", "-2.34699, 15.8305, 22.5165, 0.81", "-2.39283, 16.7009, 23.2885, 0.96", "-2.39568, 17.2296, 23.7066, 1.03", "-2.39112, 17.7788, 24.0773, 1.03", "-2.38972, 18.8245, 24.6398, 0.22", "-2.41446, 19.6483, 24.9467, 0.22", "-2.45098, 20.1198, 25.0303, 0.74", "-2.47846, 20.3629, 25.0521, 0.74", "-2.60196, 21.1756, 25.1043, 0.37", "-2.66258, 21.4908, 25.1203, 0.37", "-2.78978, 21.9548, 25.1445, 0.66", "-2.96236, 22.4813, 25.1729, 0.66", "-3.20164, 23.2298, 25.2085, 0.37", "-3.36265, 23.7549, 25.2255, 0.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.89509, 12.1487, 18.1925, 0.22", "-3.13523, 10.7473, 18.7709, 0.22", "-3.62252, 10.0754, 18.8658, 0.22", "-3.81453, 9.81068, 18.9032, 0.52", "-4.20789, 9.26832, 18.9799, 0.52", "-4.65326, 8.65425, 19.0666, 0.22", "-5.70795, 7.20007, 19.2721, 1.92", "-6.09009, 6.61807, 19.1159, 2.5" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-36.0555, -8.27228, -14.4777, 1.18", "-37.0619, -7.59754, -14.8472, 1.18", "-38.2749, -6.93721, -15.3158, 0.22", "-38.7811, -6.68669, -15.5202, 0.22", "-39.2618, -6.46231, -15.7494, 0.44", "-39.7021, -6.26191, -15.9666, 0.44", "-40.6391, -5.84485, -16.4426, 0.22", "-41.6306, -5.46775, -16.9967, 0.22", "-42.4225, -5.1875, -17.482, 0.22", "-43.4026, -4.83528, -18.0961, 1.33", "-44.1657, -4.54982, -18.5816, 1.55", "-44.3539, -4.47965, -18.7005, 1.55", "-45.8009, -3.92833, -19.6227, 0.22", "-47.2434, -3.37776, -20.514, 0.22", "-47.9074, -3.1322, -20.8958, 1.33", "-48.3019, -2.98656, -21.1032, 1.62", "-49.3831, -2.59404, -21.6902, 0.22", "-49.9394, -2.39748, -22.0094, 0.44", "-50.3431, -2.28233, -22.2776, 0.37", "-50.8268, -2.16064, -22.6296, 0.22", "-51.6261, -1.96379, -23.266, 1.69", "-52.3466, -1.78693, -23.844, 2.14", "-53.1847, -1.55743, -24.502, 2.28", "-54.603, -1.15562, -25.6239, 0.66", "-55.2849, -0.95291, -26.1804, 0.22", "-55.9569, -0.737094, -26.7452, 0.22", "-56.6899, -0.477517, -27.366, 0.22", "-57.5523, -0.11608, -28.0246, 1.47", "-58.1536, 0.176738, -28.5007, 1.77", "-58.7588, 0.512959, -29.0333, 1.55", "-59.9214, 1.14341, -30.1364, 0.22", "-60.3727, 1.39214, -30.5725, 0.22", "-61.2148, 1.8686, -31.4182, 1.55", "-62.3881, 2.49629, -32.59, 2.06", "-62.9307, 2.79084, -33.0729, 1.47", "-63.7857, 3.26122, -33.7434, 0.22", "-64.3997, 3.60563, -34.1966, 0.88", "-64.7781, 3.80821, -34.4597, 1.18", "-66.192, 4.51762, -35.4344, 0.22", "-67.4901, 5.1036, -36.2852, 0.22", "-68.3711, 5.4607, -36.8955, 0.59", "-68.6722, 5.57271, -37.1236, 0.59", "-69.7731, 5.93092, -37.9822, 1.4", "-70.4187, 6.1222, -38.4825, 1.62", "-71.8915, 6.48288, -39.6127, 0.22", "-72.5953, 6.61912, -40.1847, 0.59", "-72.9583, 6.6813, -40.4874, 0.74", "-73.8514, 6.83829, -41.2226, 0.22", "-74.5773, 6.98902, -41.8252, 1.62", "-75.0486, 7.10541, -42.1761, 1.84", "-75.5877, 7.28885, -42.505, 1.84" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-36.0555, -8.27228, -14.4777, 3.76", "-36.5025, -8.37431, -15.0935, 3.76", "-37.4458, -8.59702, -16.1885, 2.8", "-38.4492, -8.82607, -17.2266, 2.06", "-39.3898, -9.03774, -18.1229, 1.25", "-39.8035, -9.13009, -18.4759, 0.96", "-40.5377, -9.291, -19.0644, 0.22", "-41.1338, -9.40872, -19.4431, 1.33", "-41.7163, -9.50727, -19.7331, 1.84", "-42.1989, -9.57551, -19.9383, 1.92", "-42.9462, -9.65779, -20.2665, 0.22", "-43.7292, -9.71602, -20.7122, 0.22", "-44.3577, -9.75797, -21.1379, 1.11", "-44.8532, -9.83258, -21.502, 1.55", "-45.3507, -9.95371, -21.854, 1.84", "-45.8826, -10.0854, -22.2035, 1.69", "-46.9708, -10.3487, -22.909, 0.22", "-47.8184, -10.5679, -23.3627, 0.22", "-49.0079, -10.8914, -23.8878, 0.22", "-50.0909, -11.1988, -24.212, 0.66", "-51.2949, -11.5267, -24.4181, 2.21", "-52.0194, -11.7145, -24.4743, 2.65", "-53.2693, -12.0049, -24.4677, 1.47", "-53.8894, -12.1341, -24.474, 0.22", "-55.3296, -12.3856, -24.5596, 0.22", "-56.4941, -12.6166, -24.6871, 1.84", "-56.7532, -12.6777, -24.7255, 2.43", "-57.2901, -12.8073, -24.8264, 1.77", "-58.6534, -13.1229, -25.1876, 0.22", "-59.5351, -13.3339, -25.4555, 0.22", "-60.4094, -13.5395, -25.7528, 0.66", "-60.7038, -13.6101, -25.8623, 0.66", "-61.4468, -13.7846, -26.2116, 0.22", "-62.3347, -14.0229, -26.6834, 2.06", "-62.7808, -14.1615, -26.907, 2.73", "-63.1097, -14.2705, -27.0712, 3.09", "-63.6976, -14.4687, -27.376, 2.87", "-65.8865, -15.197, -28.5663, 0.29", "-67.2355, -15.6358, -29.2835, 0.22", "-69.1868, -16.2562, -30.2897, 0.22", "-69.9914, -16.5069, -30.6554, 2.14", "-70.3878, -16.6305, -30.8149, 2.65", "-71.0835, -16.8451, -31.0585, 2.65", "-72.6916, -17.3139, -31.5047, 0.22", "-73.5536, -17.5335, -31.7491, 0.22", "-74.5485, -17.7724, -32.049, 1.11", "-74.861, -17.8488, -32.1555, 1.47", "-75.5332, -18.0066, -32.4161, 1.47", "-76.7468, -18.2628, -32.9691, 0.15", "-77.0727, -18.3202, -33.1618, 0.44", "-77.293, -18.3502, -33.3213, 0.66", "-78.5915, -18.5092, -34.3001, 0.29", "-79.5457, -18.6194, -34.9689, 1.92", "-80.0646, -18.6696, -35.3177, 2.73", "-80.5353, -18.7148, -35.6305, 2.87", "-82.6351, -18.9348, -36.9356, 0.22", "-84.006, -19.1092, -37.6613, 0.22", "-84.9242, -19.2505, -38.0474, 1.69", "-85.4807, -19.3514, -38.2374, 2.14", "-86.0292, -19.4701, -38.3821, 1.92", "-86.6637, -19.6354, -38.4886, 1.33", "-88.2667, -20.1349, -38.5641, 0.22", "-88.873, -20.3446, -38.5802, 0.96", "-89.2924, -20.5049, -38.595, 1.25", "-89.7182, -20.6771, -38.5984, 1.11", "-90.9037, -21.1767, -38.5712, 0.22", "-91.6172, -21.48, -38.6193, 1.92", "-92.1279, -21.6943, -38.7048, 2.06", "-92.6546, -21.9032, -38.8411, 1.84", "-93.6081, -22.2739, -39.1517, 0.37", "-94.2972, -22.5469, -39.4304, 0.22", "-96.1378, -23.2951, -40.3384, 1.11", "-96.58, -23.4817, -40.5858, 1.11", "-97.6341, -23.9235, -41.2311, 0.22", "-98.6192, -24.3271, -41.8781, 0.22", "-99.5758, -24.7112, -42.5338, 1.69", "-100.018, -24.8855, -42.8307, 2.14", "-100.374, -25.0274, -43.0593, 2.14", "-101.443, -25.4244, -43.7751, 0.22", "-102.679, -25.8519, -44.6313, 0.22", "-103.285, -26.0419, -45.0459, 1.99", "-103.56, -26.1217, -45.2217, 2.58", "-104.558, -26.3981, -45.8319, 1.99", "-106.061, -26.7514, -46.5211, 0.22", "-106.557, -26.8567, -46.6942, 1.47", "-106.887, -26.921, -46.7961, 1.69", "-107.407, -27.0157, -46.9492, 1.69", "-109.51, -27.3758, -47.5092, 0.22", "-113.371, -28.0014, -48.4237, 0.22", "-114.892, -28.2284, -48.7744, 1.84", "-115.456, -28.3124, -48.9092, 2.14", "-115.857, -28.3722, -49.0043, 2.14", "-117.449, -28.6201, -49.3593, 0.22", "-117.949, -28.6987, -49.4682, 0.96", "-118.43, -28.7719, -49.6055, 1.11", "-120.495, -29.056, -50.1902, 0.22", "-121.413, -29.1755, -50.41, 0.22", "-122.224, -29.274, -50.5825, 1.69", "-122.872, -29.3519, -50.6978, 2.21", "-123.636, -29.4477, -50.7975, 2.28", "-125.001, -29.6378, -50.8886, 0.29", "-125.644, -29.7354, -50.8946, 1.18", "-126.143, -29.8236, -50.8968, 1.33", "-127.899, -30.161, -50.9941, 0.22", "-129.375, -30.4886, -51.1213, 0.22", "-130.348, -30.7276, -51.2332, 1.62", "-130.71, -30.8242, -51.2919, 2.14", "-131.149, -30.9476, -51.3807, 2.14", "-132.921, -31.4606, -51.7737, 0.22", "-133.56, -31.6488, -51.9346, 0.22", "-134.136, -31.8188, -52.1023, 1.25", "-134.683, -31.9727, -52.2623, 1.4", "-135.588, -32.2102, -52.5101, 0.22", "-136.063, -32.3187, -52.6301, 0.81", "-136.422, -32.3824, -52.7321, 0.81", "-137.607, -32.5362, -53.1754, 0.22", "-138.184, -32.5943, -53.427, 1.62", "-138.697, -32.6322, -53.6651, 1.99", "-139.075, -32.6486, -53.8527, 1.99", "-140.973, -32.7066, -54.7934, 0.22", "-141.715, -32.7192, -55.1431, 0.22", "-142.236, -32.7134, -55.3683, 1.03", "-142.582, -32.7067, -55.5107, 1.03", "-144.141, -32.6769, -56.0781, 0.22", "-144.511, -32.6683, -56.189, 0.22", "-145.115, -32.6413, -56.3453, 0.81", "-145.586, -32.6141, -56.4739, 1.11", "-146.707, -32.5498, -56.8388, 0.22", "-147.295, -32.5204, -57.0385, 0.22", "-148.613, -32.4703, -57.483, 0.22", "-149.6, -32.4406, -57.8284, 2.28", "-150.094, -32.4339, -58.0202, 2.73", "-151.399, -32.4408, -58.5754, 0.96", "-152.547, -32.4569, -59.0873, 0.22", "-152.99, -32.4745, -59.3229, 0.66", "-153.266, -32.4908, -59.4856, 0.66", "-154.197, -32.5665, -60.0183, 0.22", "-154.69, -32.6196, -60.3124, 1.25", "-155.164, -32.6847, -60.629, 1.47", "-156.575, -32.929, -61.7423, 0.22", "-157.093, -33.0294, -62.1528, 0.74", "-157.599, -33.1337, -62.5582, 1.03", "-158.204, -33.2687, -63.0597, 1.25", "-159.602, -33.5996, -64.1737, 0.22", "-160.726, -33.8618, -65.0028, 0.22", "-161.501, -34.0397, -65.5332, 1.55", "-162.178, -34.1838, -65.9857, 1.84", "-163.554, -34.3977, -66.9109, 0.22", "-164.93, -34.5422, -67.7998, 0.22", "-165.903, -34.5996, -68.3886, 1.69", "-166.306, -34.6035, -68.6206, 2.14", "-166.761, -34.5774, -68.8888, 2.14", "-168.929, -34.3228, -70.1507, 0.22", "-169.577, -34.2055, -70.5314, 0.22", "-169.861, -34.1407, -70.7171, 0.81", "-170.085, -34.098, -70.8504, 0.96", "-171.784, -33.8188, -71.7125, 0.22", "-172.531, -33.7134, -72.0389, 1.33", "-172.891, -33.6761, -72.1536, 1.69", "-173.399, -33.6363, -72.2965, 1.69", "-176.124, -33.5059, -72.9715, 0.22", "-176.614, -33.4986, -73.0671, 0.66", "-176.99, -33.5071, -73.1174, 0.66", "-178.863, -33.5714, -73.3238, 0.22", "-179.251, -33.5813, -73.3774, 0.96", "-179.808, -33.5827, -73.4681, 1.25", "-181.033, -33.5425, -73.7287, 0.22", "-181.485, -33.5155, -73.8543, 0.52", "-181.752, -33.4873, -73.9442, 0.74", "-183.114, -33.3272, -74.4143, 0.22", "-183.917, -33.2457, -74.6736, 1.69", "-184.135, -33.2251, -74.7419, 2.21", "-184.777, -33.1809, -74.9342, 2.21", "-187.481, -33.0787, -75.6655, 0.22", "-189.198, -33.0458, -76.0818, 0.22", "-189.884, -33.0545, -76.2213, 0.59", "-190.097, -33.0628, -76.263, 0.59", "-191.347, -33.1377, -76.4914, 0.22", "-191.872, -33.189, -76.5706, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-30.7027, -9.0545, 0.885505, 0.59", "-31.2949, -10.3151, 1.13296, 0.59", "-31.8071, -11.2096, 1.17488, 0.37", "-32.1428, -11.7127, 1.14714, 0.29", "-32.4192, -12.0816, 1.09465, 0.29", "-32.8357, -12.5917, 0.998089, 0.52", "-33.4682, -13.3033, 0.847004, 0.66", "-33.9801, -13.7878, 0.655911, 0.66", "-34.5012, -14.2391, 0.442235, 0.59", "-34.9804, -14.6248, 0.248063, 0.66", "-35.414, -14.9644, 0.0753307, 0.44", "-36.0712, -15.485, -0.180686, 0.29", "-37.4286, -16.5983, -0.668363, 3.39", "-37.883, -16.9733, -0.82484, 4.13", "-38.2795, -17.3031, -0.968809, 4.13" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-30.7027, -9.0545, 0.885505, 0.29", "-32.7104, -8.29413, -0.925891, 0.29", "-32.9913, -8.17795, -1.17247, 0.66", "-34.1916, -7.67874, -2.2321, 0.44", "-34.6402, -7.49368, -2.61384, 0.37", "-35.6901, -7.08172, -3.47906, 0.37", "-37.1158, -6.5847, -4.63133, 1.03", "-37.5641, -6.45177, -4.95788, 1.4", "-38.249, -6.3086, -5.42722, 1.55", "-38.8255, -6.2293, -5.79029, 0.44", "-39.4871, -6.1853, -6.22065, 0.22", "-40.2846, -6.15482, -6.74351, 0.22", "-41.153, -6.09244, -7.29195, 0.44", "-41.7979, -6.00611, -7.7355, 0.66", "-42.1931, -5.92917, -8.02727, 0.88", "-43.0164, -5.72765, -8.68319, 0.88", "-44.2775, -5.34977, -9.69977, 2.21", "-44.9473, -5.11458, -10.2518, 2.87", "-45.5378, -4.89084, -10.7471, 3.09", "-45.8791, -4.77023, -11.053, 3.24", "-47.407, -4.30246, -12.4732, 0.52", "-47.7436, -4.21479, -12.7639, 0.66", "-48.2325, -4.10026, -13.1414, 0.66", "-48.7975, -3.9529, -13.491, 0.52", "-50.5538, -3.4283, -14.323, 0.22", "-51.3735, -3.15768, -14.5957, 0.22", "-52.6931, -2.65066, -14.9404, 0.81", "-53.444, -2.35735, -15.115, 0.22", "-54.5308, -1.9215, -15.3348, 1.92", "-55.0038, -1.7273, -15.4313, 2.5", "-55.471, -1.53825, -15.5606, 2.73", "-57.552, -0.722817, -16.4326, 0.29", "-58.2984, -0.449689, -16.8311, 0.22", "-59.0995, -0.175727, -17.3126, 1.77", "-59.7372, 0.0308959, -17.7282, 2.28", "-61.326, 0.530159, -18.7861, 0.22", "-62.035, 0.745929, -19.2493, 0.22", "-62.4546, 0.862287, -19.5153, 0.66", "-62.8752, 0.98502, -19.7905, 0.66", "-63.9823, 1.31442, -20.4984, 0.22", "-64.7421, 1.56521, -20.9565, 1.33", "-65.1874, 1.74535, -21.2124, 2.36", "-65.9327, 2.08541, -21.6621, 2.36", "-67.4699, 2.85247, -22.6554, 0.22", "-68.6491, 3.47385, -23.517, 0.22", "-69.633, 4.01273, -24.2292, 0.22", "-70.8822, 4.71213, -25.0408, 2.28", "-71.6112, 5.12001, -25.4827, 2.8", "-72.1805, 5.43987, -25.8064, 3.02", "-74.5876, 6.73266, -27.124, 0.22", "-76.4871, 7.7117, -28.1017, 0.22", "-77.9895, 8.43424, -28.8245, 1.84", "-78.6777, 8.74118, -29.1207, 2.65", "-79.3726, 9.04308, -29.39, 2.65", "-81.5497, 9.95958, -30.1604, 0.22", "-82.4001, 10.3059, -30.4519, 0.44", "-82.739, 10.4406, -30.5931, 0.44", "-83.4093, 10.7089, -30.8844, 0.15", "-84.3191, 11.0957, -31.2199, 1.62", "-84.9376, 11.3709, -31.4205, 2.36", "-85.6501, 11.7083, -31.636, 2.36", "-87.1903, 12.3735, -32.1179, 0.22", "-88.2432, 12.7903, -32.4394, 0.22", "-89.1284, 13.1139, -32.6929, 1.03", "-89.8447, 13.353, -32.8684, 1.55", "-90.432, 13.5208, -32.9942, 1.55", "-91.8545, 13.7851, -33.2672, 0.22", "-92.5233, 13.838, -33.4129, 0.22", "-92.968, 13.8434, -33.5167, 1.33", "-93.4707, 13.8294, -33.6477, 1.62", "-94.0047, 13.808, -33.7965, 1.33", "-96.1269, 13.724, -34.4201, 0.22", "-97.2182, 13.6999, -34.7502, 1.03", "-97.7279, 13.6909, -34.9112, 1.55", "-98.2418, 13.6853, -35.0796, 1.55", "-99.5671, 13.6795, -35.4958, 0.22", "-100.418, 13.6927, -35.7059, 0.22", "-101.35, 13.7275, -35.8521, 1.62", "-101.991, 13.7587, -35.9072, 2.36", "-102.374, 13.7947, -35.9161, 2.58", "-103.667, 13.9742, -35.8748, 0.59", "-104.984, 14.2322, -35.7902, 0.22", "-105.454, 14.3582, -35.7563, 0.66", "-105.884, 14.5228, -35.7006, 0.66", "-107.371, 15.2675, -35.4837, 0.22", "-107.892, 15.5989, -35.4299, 0.59", "-108.381, 15.9965, -35.5393, 0.59", "-108.965, 16.5394, -35.8648, 0.22", "-109.936, 17.4927, -36.5862, 2.28", "-110.423, 17.9883, -37.0273, 2.73", "-110.942, 18.5027, -37.5804, 3.02", "-113.024, 20.4372, -39.847, 0.22", "-113.49, 20.8416, -40.3521, 0.22", "-113.947, 21.1967, -40.8482, 0.96", "-114.338, 21.4722, -41.2578, 1.25", "-115.438, 22.2182, -42.2543, 0.22", "-115.918, 22.5373, -42.6164, 0.81", "-116.27, 22.7634, -42.804, 1.11", "-117.463, 23.5216, -43.3983, 0.22", "-117.866, 23.7829, -43.5989, 0.59", "-118.22, 24.0156, -43.7742, 0.59", "-119.079, 24.5924, -44.2036, 0.22", "-119.721, 25.0161, -44.521, 0.52", "-120.606, 25.5979, -44.8964, 0.22", "-121.731, 26.3274, -45.2605, 2.14", "-122.351, 26.7208, -45.4492, 2.8", "-122.763, 26.9812, -45.5684, 2.8", "-124.84, 28.3361, -46.1289, 0.22", "-126.326, 29.3368, -46.5304, 0.22", "-127.258, 29.9991, -46.7596, 0.96", "-127.74, 30.3618, -46.8638, 1.33", "-128.099, 30.649, -46.9451, 1.33", "-129.221, 31.5781, -47.257, 0.22", "-130.101, 32.3355, -47.5795, 0.22", "-131.137, 33.2149, -48.0425, 1.84", "-131.536, 33.5477, -48.2415, 2.36", "-132.001, 33.9217, -48.484, 2.36", "-133.62, 35.1426, -49.3967, 0.22", "-134.369, 35.6767, -49.8453, 0.22", "-135.042, 36.1437, -50.2609, 1.25", "-135.45, 36.4208, -50.511, 1.69", "-136.092, 36.8595, -50.8868, 1.77", "-137.978, 38.1594, -51.9456, 0.22", "-138.314, 38.3973, -52.138, 0.37", "-138.584, 38.5897, -52.2859, 0.37", "-139.414, 39.1565, -52.7771, 0.22", "-140.113, 39.6215, -53.1814, 1.33", "-140.692, 39.992, -53.5319, 1.62", "-142.064, 40.8313, -54.4166, 0.22", "-142.576, 41.1286, -54.7584, 0.52", "-144.491, 42.2006, -56.0361, 0.22", "-145.5, 42.7396, -56.7068, 1.47", "-146.113, 43.063, -57.0863, 2.28", "-146.547, 43.2881, -57.3296, 2.8", "-148.578, 44.3313, -58.3947, 0.22", "-149.184, 44.6349, -58.6928, 0.44", "-149.781, 44.9277, -58.9544, 0.44", "-150.549, 45.2923, -59.3111, 0.96", "-150.948, 45.4881, -59.4949, 1.4", "-151.614, 45.813, -59.816, 1.4", "-153.01, 46.4975, -60.4909, 0.22", "-154.13, 47.0264, -60.9564, 0.88", "-155.064, 47.4467, -61.3091, 0.22", "-156.069, 47.8833, -61.6597, 2.06", "-156.649, 48.1352, -61.8377, 2.8", "-157.239, 48.3948, -61.9755, 2.8", "-160.684, 49.9545, -62.5657, 0.22", "-161.655, 50.4088, -62.693, 0.22", "-162.318, 50.7376, -62.7428, 1.55", "-162.992, 51.0903, -62.778, 2.06", "-165.015, 52.2263, -62.854, 0.22", "-165.904, 52.7514, -62.8936, 0.37", "-166.576, 53.1889, -62.9325, 0.22", "-168.029, 54.1629, -63.0468, 2.28", "-168.749, 54.6483, -63.1437, 3.02", "-168.92, 54.762, -63.1803, 3.02", "-170.757, 55.9841, -63.7326, 0.22", "-171.374, 56.3765, -64.0035, 0.22", "-171.999, 56.748, -64.3377, 1.03", "-172.444, 56.9986, -64.6046, 1.03", "-173.36, 57.4733, -65.2204, 0.22", "-173.777, 57.6824, -65.5349, 0.66", "-175.639, 58.5935, -67.0067, 0.22", "-176.578, 59.0458, -67.7351, 1.47", "-177.045, 59.268, -68.0957, 1.92", "-179.509, 60.434, -69.9661, 0.22", "-180.703, 60.9943, -70.8832, 0.22", "-181.452, 61.3423, -71.4588, 0.22", "-182.435, 61.8025, -72.179, 1.92", "-182.981, 62.0671, -72.5983, 2.21", "-183.165, 62.1622, -72.741, 2.21" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-36.7115, -0.223507, 13.4455, 0.29", "-37.3442, -0.114629, 13.0611, 0.29", "-37.7015, -0.0625112, 12.7798, 0.29", "-38.3698, 0.047913, 12.445, 0.29", "-39.0974, 0.166898, 12.2707, 1.11", "-40.2141, 0.31305, 12.168, 1.55", "-40.6698, 0.356748, 12.1443, 1.77", "-41.5206, 0.434375, 12.111, 1.47", "-44.241, 0.646212, 12.3524, 0.29", "-44.8222, 0.663487, 12.5702, 0.29", "-45.217, 0.677145, 12.8566, 0.59", "-45.5563, 0.689607, 13.1922, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.7115, -0.223507, 13.4455, 0.44", "-35.9065, -1.50535, 13.9552, 0.44", "-35.3895, -2.45018, 14.3552, 0.44", "-34.9773, -3.31297, 14.7647, 0.44", "-34.5199, -4.24801, 15.3584, 0.74", "-34.1756, -4.90981, 15.9227, 0.96", "-33.8103, -5.53403, 16.6216, 0.74", "-33.5969, -5.89318, 17.2381, 0.52", "-33.4148, -6.26281, 18.0557, 0.52", "-33.2221, -6.91711, 19.6572, 0.66", "-33.1846, -7.41309, 20.8141, 0.66", "-33.232, -7.86322, 21.7009, 0.66", "-33.3724, -8.46198, 22.6922, 0.66", "-33.5427, -9.03147, 23.3792, 0.66", "-33.8111, -9.79856, 24.0628, 0.44", "-34.0952, -10.5413, 24.5185, 0.29", "-34.4455, -11.4502, 24.9486, 1.33", "-34.714, -12.1358, 25.2249, 2.14", "-34.9357, -12.7056, 25.4665, 2.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.04409, 39.2853, -5.42122, 0.22", "0.79749, 40.6381, -6.03108, 0.22", "0.347005, 41.127, -6.25146, 0.81", "0.139674, 41.352, -6.35289, 0.81", "-0.645019, 42.2036, -6.73678, 0.22", "-0.928296, 42.511, -6.87536, 0.81", "-1.10132, 42.6988, -6.96001, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "2.04409, 39.2853, -5.42122, 0.29", "2.15482, 41.2602, -6.31141, 0.29", "2.1963, 41.7625, -6.55159, 0.29", "2.26232, 42.4267, -6.87095, 0.29", "2.32917, 43.2072, -7.22225, 1.03", "2.35514, 43.6058, -7.38347, 1.33", "2.37216, 44.0035, -7.52763, 1.03", "2.40814, 44.7458, -7.75214, 0.59", "2.40553, 45.0214, -7.83683, 0.59", "2.34576, 45.737, -8.05029, 0.22", "2.23161, 46.5115, -8.25576, 0.22", "2.05125, 47.5363, -8.51383, 2.65", "1.96502, 47.9985, -8.6219, 3.09", "1.90553, 48.31, -8.68514, 3.54", "1.87611, 48.4658, -8.71927, 3.68", "1.60324, 50.0323, -9.0896, 0.22", "1.53181, 50.5393, -9.16284, 0.81", "1.50393, 50.8219, -9.17323, 0.81", "1.48756, 51.1543, -9.15169, 0.52", "1.48787, 51.799, -9.03256, 0.22", "1.50389, 52.2635, -8.88336, 0.22", "1.61043, 53.5702, -8.19805, 1.84", "1.63337, 53.8345, -8.02812, 2.06", "1.65433, 54.1109, -7.83104, 2.06", "1.69741, 54.7121, -7.33599, 1.25", "1.71798, 55.3273, -6.7847, 0.22", "1.71874, 55.9118, -6.26227, 0.22", "1.68733, 56.9038, -5.4155, 3.46", "1.66794, 57.3193, -5.0681, 3.83", "1.61738, 58.2141, -4.34328, 3.17", "1.54008, 59.5415, -3.29256, 0.37", "1.51981, 59.9252, -2.99868, 0.59", "1.49883, 60.2109, -2.80541, 0.81", "1.47064, 60.494, -2.64044, 0.81", "1.42613, 60.9218, -2.41499, 0.52", "1.35277, 61.48, -2.15678, 0.22", "1.28373, 61.9615, -1.93708, 0.22", "1.14231, 62.8531, -1.52187, 0.22", "0.92262, 64.121, -0.933874, 2.65", "0.84226, 64.5354, -0.745733, 3.24", "0.75035, 64.9535, -0.561172, 3.54", "0.700869, 65.1554, -0.474895, 3.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "39.1695, -47.5537, -16.276, 0.29", "39.1396, -48.8439, -15.4849, 0.29", "39.2393, -50.4471, -14.5062, 0.15", "39.2927, -50.9224, -14.2137, 0.52", "39.5078, -52.3594, -13.2991, 2.95", "39.6523, -53.1648, -12.7816, 2.36", "39.9405, -54.5507, -11.8607, 0.29", "40.3386, -55.7526, -11.1037, 0.22", "40.6586, -56.4741, -10.6615, 1.4", "40.9838, -57.0291, -10.2746, 1.92", "41.1682, -57.2691, -10.0721, 2.43", "41.5058, -57.6419, -9.73313, 2.43", "42.5829, -58.6789, -8.7025, 0.29", "43.2839, -59.3004, -8.08515, 0.29", "44.1382, -60.0109, -7.36443, 1.77", "44.859, -60.5946, -6.76995, 2.5", "45.2518, -60.9088, -6.43569, 3.02" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "39.1695, -47.5537, -16.276, 2.14", "39.292, -47.8007, -16.4273, 2.14", "39.4173, -48.0268, -16.5295, 2.14", "40.2176, -49.3665, -17.023, 0.22", "40.6462, -50.0414, -17.2506, 0.22", "41.0713, -50.6735, -17.4459, 1.69", "41.6102, -51.4446, -17.6564, 2.14", "42.717, -52.9871, -18.0028, 0.22", "43.416, -53.9442, -18.1787, 0.22", "43.9532, -54.6576, -18.2788, 1.69", "44.3354, -55.1494, -18.3397, 2.06", "45.3785, -56.4709, -18.4773, 0.22", "46.097, -57.3701, -18.5456, 0.22", "46.4485, -57.8281, -18.6088, 1.69", "46.8057, -58.3115, -18.6677, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "17.9995, 1.01096, -4.70046, 1.55", "19.579, 0.554545, -4.95565, 1.55", "21.1997, 0.086217, -5.2175, 0.74", "22.3092, -0.234391, -5.39675, 1.18", "23.2957, -0.519428, -5.55612, 1.55", "24.0778, -0.745427, -5.68248, 1.77", "25.0742, -1.03334, -5.84346, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "17.9995, 1.01096, -4.70046, 0.96", "17.4023, -0.539162, -4.53632, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "17.9995, 1.01096, -4.70046, 2.8", "18.8718, 2.55083, -5.02917, 2.8", "19.5383, 3.84336, -5.15747, 1.84", "19.8507, 4.49008, -5.14851, 1.47", "20.2517, 5.36926, -5.00482, 1.25", "20.5817, 6.10585, -4.83649, 1.18", "20.9413, 6.92146, -4.58304, 1.18", "21.3594, 7.95532, -4.1199, 1.11", "21.7462, 8.96145, -3.58556, 1.33", "22.4438, 10.7948, -2.49445, 2.58", "22.635, 11.2764, -2.17551, 3.02", "23.0712, 12.3296, -1.42108, 3.54", "23.2393, 12.73, -1.12489, 3.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-38.2795, -17.3031, -0.968809, 0.37", "-42.0887, -17.4286, -0.242705, 0.37", "-42.7849, -17.4634, -0.113845, 0.37", "-43.7473, -17.5129, 0.0464537, 0.22", "-45.0733, -17.5983, 0.189179, 0.22", "-46.4847, -17.6714, 0.319698, 1.55", "-47.2767, -17.7057, 0.384394, 2.58", "-47.6926, -17.7313, 0.386441, 2.87", "-48.6843, -17.7721, 0.392605, 2.28", "-50.5419, -17.789, 0.382774, 0.22", "-51.5504, -17.7503, 0.364375, 0.66", "-52.0808, -17.6985, 0.338749, 0.88", "-52.8891, -17.5697, 0.294467, 0.22", "-53.8461, -17.3899, 0.239843, 0.22", "-54.6626, -17.2161, 0.211134, 0.37", "-55.1807, -17.1036, 0.212617, 0.37", "-55.7365, -16.9918, 0.191146, 0.37", "-56.133, -16.9047, 0.176299, 0.37", "-56.7071, -16.7679, 0.1581, 0.22", "-57.3839, -16.619, 0.162176, 0.22", "-58.0963, -16.6011, 0.217941, 0.88" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-38.2795, -17.3031, -0.968809, 0.52", "-38.2495, -19.7086, -1.85126, 0.52", "-38.2567, -20.2758, -1.99249, 0.52", "-38.2546, -20.8496, -2.10164, 0.29", "-38.2354, -21.6021, -2.21445, 0.52", "-38.1671, -22.7522, -2.32694, 0.29", "-38.1159, -23.2813, -2.36384, 0.29", "-37.9352, -24.6264, -2.30644, 2.43", "-37.8594, -25.1194, -2.28331, 3.02", "-37.77, -25.6018, -2.25514, 3.02", "-37.4235, -27.1288, -2.12797, 0.22", "-37.1503, -28.0444, -2.06088, 0.22", "-37.0077, -28.4799, -2.03045, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-183.165, 62.1622, -72.741, 0.22", "-184.674, 63.9183, -73.5287, 0.22", "-185.207, 64.4953, -73.7995, 0.22", "-185.631, 64.9262, -74.0256, 0.88", "-186.106, 65.3636, -74.2952, 0.88", "-186.955, 66.0186, -74.6947, 0.22", "-187.396, 66.3306, -74.8876, 0.22", "-187.712, 66.5117, -75.0061, 0.66", "-188.292, 66.8403, -75.2354, 0.66", "-189.204, 67.3717, -75.5951, 0.22", "-191.07, 68.4947, -76.368, 0.22", "-191.749, 68.9106, -76.6403, 0.59", "-192.12, 69.1434, -76.7872, 0.81", "-193.581, 70.0743, -77.3635, 0.22", "-194.597, 70.7504, -77.7527, 1.11", "-195.354, 71.3081, -78.0695, 1.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-183.165, 62.1622, -72.741, 0.22", "-184.977, 62.8797, -72.4015, 0.22", "-186.293, 63.4313, -72.1143, 0.22", "-186.525, 63.5377, -72.0585, 0.52", "-186.84, 63.698, -71.9935, 0.52", "-187.982, 64.3291, -71.7903, 0.22", "-189.159, 65.0316, -71.613, 2.28", "-189.48, 65.2526, -71.571, 2.65", "-190.001, 65.598, -71.5688, 2.65", "-192.489, 67.1456, -71.7767, 0.22", "-193.497, 67.7383, -71.9383, 0.66", "-194.661, 68.3792, -72.2321, 0.22", "-195.519, 68.8145, -72.4916, 0.88", "-197.952, 69.9458, -73.2957, 0.22", "-198.329, 70.1018, -73.4294, 0.52", "-198.729, 70.2459, -73.5835, 0.52", "-200.432, 70.7853, -74.1092, 0.22", "-200.999, 70.9528, -74.241, 0.22", "-201.996, 71.2702, -74.3446, 1.03", "-202.454, 71.4371, -74.3412, 1.4", "-202.91, 71.6128, -74.3309, 1.4", "-205.766, 72.7489, -74.2126, 0.22", "-207.905, 73.6155, -74.0825, 0.22", "-209.543, 74.2944, -73.9728, 1.25", "-210.04, 74.4975, -73.9446, 1.4", "-211.403, 75.0531, -73.8619, 0.22", "-213.483, 75.9111, -73.7542, 0.22", "-214.505, 76.3317, -73.755, 0.74", "-214.903, 76.4873, -73.794, 0.74", "-216.476, 77.0659, -74.0474, 0.22", "-217.301, 77.3504, -74.1932, 1.33", "-218.093, 77.6015, -74.3533, 1.77", "-220.097, 78.2159, -74.9086, 0.22", "-221.777, 78.7279, -75.4636, 0.81" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.700869, 65.1554, -0.474895, 0.29", "-1.3028, 67.7225, -1.79536, 0.29", "-1.9483, 68.5843, -2.16142, 0.29", "-2.77318, 69.7406, -2.62587, 1.11", "-2.94962, 69.9979, -2.72188, 1.25", "-3.14012, 70.2834, -2.82088, 1.25", "-3.4174, 70.704, -2.95771, 0.96", "-4.21327, 72.1434, -3.24394, 0.22", "-4.66038, 72.9891, -3.42388, 0.22", "-4.86385, 73.4347, -3.47389, 0.74", "-5.06325, 73.9084, -3.49166, 0.96", "-5.20204, 74.2607, -3.47531, 0.96", "-5.61466, 75.4614, -3.32814, 0.22", "-5.88629, 76.4799, -3.1392, 0.22", "-6.25441, 78.2716, -2.7401, 1.47", "-6.36408, 78.9052, -2.59105, 1.92", "-6.4699, 79.5548, -2.4217, 1.92", "-6.59976, 80.3484, -2.19457, 1.25", "-6.90692, 81.9408, -1.70479, 0.22", "-7.36528, 83.8729, -1.12036, 0.22", "-7.81958, 85.4035, -0.750177, 1.4", "-7.98576, 85.8975, -0.641357, 1.62", "-8.22695, 86.4567, -0.534197, 1.62", "-9.17279, 88.263, -0.228873, 0.22", "-10.1881, 89.9228, 0.027942, 0.22", "-11.3298, 91.6343, 0.257803, 1.99", "-11.5305, 91.9255, 0.288657, 2.5", "-13.2589, 94.4307, 0.491185, 0.22", "-14.1251, 95.6463, 0.563945, 1.33", "-14.3064, 95.8804, 0.571782, 1.62" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.700869, 65.1554, -0.474895, 0.29", "0.214185, 67.8302, 0.314843, 0.29", "-0.0705177, 69.0681, 0.744509, 0.29", "-0.321315, 70.0504, 1.11858, 0.29", "-0.576323, 71.0913, 1.50631, 0.29", "-0.90867, 72.5402, 2.05252, 1.18", "-1.07704, 73.3543, 2.37975, 1.77", "-1.19883, 73.9751, 2.66452, 1.77", "-1.26557, 74.3958, 2.8714, 1.92", "-1.40353, 76.2531, 3.81411, 0.22", "-1.35965, 77.0361, 4.2161, 0.22", "-1.12233, 78.2101, 4.84366, 1.11", "-0.950412, 78.7321, 5.15928, 1.33", "-0.758159, 79.1977, 5.4971, 1.33", "-0.528794, 79.6923, 5.93242, 1.11", "-0.283437, 80.2075, 6.50214, 0.88", "0.0453733, 81.0662, 7.49203, 0.37", "0.157084, 81.4277, 7.92106, 0.37", "0.366867, 82.3235, 9.0105, 0.96", "0.482017, 82.9913, 9.78726, 1.33", "0.626643, 84.255, 11.1961, 0.29", "0.720527, 85.2334, 12.2526, 1.11", "0.77166, 85.7441, 12.7909, 1.33", "0.87795, 86.6019, 13.6853, 0.81", "0.97798, 87.2517, 14.3478, 0.37", "1.16105, 88.1626, 15.2233, 0.74", "1.36947, 89.0257, 16.0099, 0.44", "1.71538, 90.2853, 17.1235, 1.47", "1.7944, 90.5643, 17.3592, 1.99", "1.96005, 91.1148, 17.8127, 1.99", "2.42178, 92.7308, 19.1641, 0.22", "2.57356, 93.2969, 19.6298, 0.22", "2.83307, 94.29, 20.3963, 1.4", "2.96497, 94.764, 20.7468, 1.4", "3.37909, 96.1368, 21.7417, 0.29", "3.88325, 97.5806, 22.7846, 0.22", "4.18206, 98.3693, 23.3552, 0.22", "4.5869, 99.3003, 23.983, 1.18", "4.82787, 99.8126, 24.3165, 1.84", "5.1176, 100.363, 24.6663, 1.47", "5.78243, 101.426, 25.2665, 0.22", "6.18383, 101.942, 25.5284, 0.22", "6.94524, 102.859, 26.0218, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "25.0742, -1.03334, -5.84346, 0.66", "25.3092, -1.31539, -7.96582, 0.66", "25.6347, -1.64679, -10.596, 0.66", "25.7254, -1.7386, -11.2263, 1.62", "25.8004, -1.82726, -11.7869, 2.65", "25.9172, -1.96552, -12.6612, 2.95", "26.179, -2.27519, -14.6194, 0.81", "26.5584, -2.88209, -17.7559, 2.28", "26.6501, -3.01928, -18.4603, 3.17", "26.7365, -3.1146, -19.0456, 3.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "25.0742, -1.03334, -5.84346, 0.66", "26.0033, -2.33247, -5.21037, 0.66", "26.4369, -2.99807, -4.9103, 0.74", "26.742, -3.49744, -4.71298, 0.81", "27.2314, -4.33458, -4.4085, 0.59", "27.6499, -5.07261, -4.15306, 0.52", "28.0309, -5.76833, -3.92541, 0.29", "28.4158, -6.55319, -3.70482, 0.29", "28.9127, -7.63526, -3.42361, 1.33", "29.167, -8.25047, -3.27818, 1.92", "29.2714, -8.53179, -3.21963, 2.14", "29.4365, -9.02012, -3.11586, 1.92", "29.7118, -9.89569, -2.92391, 0.96", "29.9707, -10.8061, -2.71766, 0.22", "30.1745, -11.5752, -2.53356, 0.22", "30.2887, -11.9355, -2.45116, 0.88", "30.5828, -12.6684, -2.28456, 1.55", "30.7167, -12.9292, -2.22497, 1.69", "31.0266, -13.4245, -2.11401, 1.33", "31.7572, -14.4114, -1.89621, 0.29", "32.6146, -15.4436, -1.66101, 0.29", "33.3983, -16.3151, -1.45542, 0.29", "34.187, -17.1207, -1.25908, 1.33", "34.7206, -17.6134, -1.13431, 1.62", "35.0769, -17.9121, -1.05531, 1.69", "36.1362, -18.7231, -0.845154, 0.29", "37.1348, -19.4427, -0.665919, 0.29", "37.7447, -19.8522, -0.573154, 0.29", "38.9797, -20.6175, -0.384831, 1.77", "39.3558, -20.8263, -0.328144, 2.58", "39.9869, -21.1376, -0.235735, 3.02", "40.3531, -21.2855, -0.176051, 3.17", "40.6311, -21.3839, -0.123649, 3.17", "41.8359, -21.7911, 0.138739, 1.55", "43.075, -22.1843, 0.44154, 0.22", "43.5095, -22.3149, 0.553349, 0.22", "44.4191, -22.5913, 0.824409, 1.03", "44.7649, -22.7009, 0.947154, 1.25", "45.1341, -22.8264, 1.08811, 1.33", "45.6579, -23.0062, 1.30947, 0.88", "46.0039, -23.1324, 1.47434, 0.29", "47.1572, -23.5831, 2.03549, 0.22", "48.366, -24.1151, 2.62959, 1.84", "49.0543, -24.4568, 2.97126, 2.65", "49.6291, -24.7738, 3.26958, 2.5", "50.0073, -25.0053, 3.47402, 1.92", "51.1716, -25.7628, 4.13366, 0.29", "52.0031, -26.3305, 4.64253, 0.29", "52.8404, -26.9048, 5.20934, 0.22", "53.6099, -27.3736, 5.70879, 0.22", "54.5874, -27.9188, 6.30483, 2.73", "55.2576, -28.2628, 6.69977, 3.24", "56.081, -28.6529, 7.18059, 2.58", "58.1784, -29.538, 8.31852, 0.22", "60.9876, -30.6499, 9.67825, 0.22", "62.2413, -31.1434, 10.214, 2.06", "62.6734, -31.3141, 10.3826, 2.65", "63.3142, -31.5675, 10.6117, 2.8", "65.3405, -32.3774, 11.262, 0.22", "67.9807, -33.4602, 12.03, 0.22", "69.0929, -33.9512, 12.3666, 1.25", "69.6927, -34.2238, 12.5427, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.2393, 12.73, -1.12489, 0.88", "24.5431, 12.5601, -1.71899, 0.88", "25.455, 12.4562, -1.94906, 0.29", "27.0421, 12.2949, -1.97754, 0.37", "27.6076, 12.2295, -1.8117, 0.44", "28.4337, 12.1156, -1.25787, 0.44", "29.1588, 12.0093, -0.654432, 0.74", "30.9487, 11.7671, 1.35677, 1.03", "31.4778, 11.6935, 2.06723, 1.03", "32.2978, 11.5975, 3.21513, 0.66", "33.2593, 11.5078, 4.49805, 0.44", "33.6656, 11.4908, 4.99471, 0.59", "34.2124, 11.5036, 5.54815, 0.29", "34.9807, 11.539, 6.05586, 0.29", "35.9812, 11.6225, 6.58304, 1.4", "36.7846, 11.7273, 6.8742, 1.92", "37.5441, 11.8478, 7.05468, 1.62", "38.1517, 11.957, 7.18901, 0.81", "38.4811, 12.0225, 7.2521, 0.81" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "23.2393, 12.73, -1.12489, 1.69", "23.4683, 14.0829, -0.332701, 1.69", "23.6039, 14.8834, 0.136054, 1.25", "23.7501, 15.7469, 0.641666, 1.33", "23.831, 16.2249, 0.921525, 1.33", "23.9048, 16.6606, 1.17665, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "26.7365, -3.1146, -19.0456, 0.44", "26.7693, -4.49112, -19.9472, 0.44", "27.1842, -6.64704, -21.1235, 0.29", "27.3928, -7.4569, -21.5713, 1.03", "27.5587, -8.06267, -21.8984, 1.33", "27.8554, -9.12056, -22.4469, 0.22", "28.3635, -10.8858, -23.326, 0.22", "28.9141, -12.4692, -24.0766, 1.47", "29.2978, -13.5003, -24.5202, 1.77", "29.7546, -14.7513, -25.1571, 0.15", "29.9514, -15.3413, -25.5345, 0.15", "30.2739, -16.5502, -26.4679, 2.36", "30.3671, -17.0329, -26.8823, 2.95", "30.4599, -17.6545, -27.4484, 2.95", "30.6831, -19.2231, -28.9344, 0.66", "30.8493, -20.4364, -30.2067, 0.22", "30.9562, -21.3422, -31.2302, 0.22", "31.0005, -21.848, -31.8383, 1.11", "31.0268, -22.1581, -32.1981, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "26.7365, -3.1146, -19.0456, 0.22", "27.7046, -1.67861, -20.2792, 0.22", "28.4495, -0.669278, -21.1603, 0.22", "29.3581, 0.515548, -22.1388, 1.99", "29.7201, 0.99079, -22.5144, 2.43", "30.6915, 2.30857, -23.5447, 0.44", "30.9974, 2.73489, -23.8971, 0.96", "31.5387, 3.5413, -24.5615, 0.22", "32.4349, 5.00454, -25.7024, 0.22", "32.7816, 5.62169, -26.1504, 1.47", "33.0662, 6.24712, -26.7093, 1.47", "33.7154, 7.9681, -28.2659, 0.15", "34.0405, 8.96802, -29.1722, 0.15", "34.3054, 9.92726, -30.0188, 1.84", "34.3842, 10.2688, -30.3077, 2.14", "35.1966, 13.9554, -33.2758, 0.22", "35.5373, 15.5232, -34.4904, 0.22", "35.6111, 15.877, -34.7585, 0.22", "35.8346, 16.8693, -35.5284, 0.22", "36.098, 18.022, -36.3659, 1.55", "36.1906, 18.4233, -36.6251, 1.55", "36.7125, 20.6192, -37.8194, 0.22", "36.9181, 21.4013, -38.3866, 0.22", "37.107, 22.0202, -38.8631, 0.22", "37.3111, 22.6092, -39.3471, 0.96", "37.6087, 23.4059, -40.0034, 1.77", "37.7402, 23.7061, -40.2671, 1.77", "38.5422, 25.3352, -41.7935, 0.22", "38.8721, 25.9562, -42.4201, 0.81", "39.2464, 26.6143, -43.1412, 0.22", "39.8934, 27.7053, -44.4159, 1.62", "41.194, 29.8619, -46.9715, 0.22", "41.815, 30.8605, -48.2367, 0.66", "42.2473, 31.5279, -49.1501, 1.18", "42.5246, 31.949, -49.7591, 1.18", "43.096, 32.8158, -51.0438, 0.81", "43.3393, 33.1872, -51.5995, 1.33", "43.9658, 34.2088, -53.1133, 1.18", "44.4798, 35.0797, -54.3556, 0.29", "44.7935, 35.6386, -55.1026, 0.81", "44.944, 35.9218, -55.4479, 0.81", "45.6628, 37.3014, -56.9738, 0.22", "45.9116, 37.7942, -57.4972, 0.22", "46.1048, 38.1998, -57.8626, 0.66", "46.3161, 38.6704, -58.2592, 0.66", "46.5864, 39.2487, -58.7297, 0.29", "46.9554, 40.0111, -59.2946, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "38.4811, 12.0225, 7.2521, 0.66", "38.8883, 11.8228, 8.91975, 0.66", "39.1163, 11.7337, 9.68787, 0.66", "39.4229, 11.6229, 10.5916, 0.66", "39.8914, 11.4644, 11.6562, 0.44", "40.5452, 11.2431, 13.1421, 0.66", "41.4765, 10.928, 15.2583, 1.55", "41.969, 10.8131, 16.1706, 2.14", "42.3408, 10.7443, 16.7976, 2.36", "43.5783, 10.4959, 18.7138, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "38.4811, 12.0225, 7.2521, 0.22", "40.3406, 11.6285, 6.70679, 0.22", "41.9519, 11.3503, 6.36886, 1.47", "42.5632, 11.2612, 6.265, 1.69", "43.0614, 11.1958, 6.19466, 1.84", "43.8029, 11.1065, 6.11056, 0.74", "44.8165, 10.9951, 6.00884, 0.22", "45.6995, 10.9458, 6.05317, 0.22", "46.619, 10.9244, 6.17906, 0.88", "47.1349, 10.9116, 6.26674, 0.88", "47.7764, 10.9021, 6.43381, 0.29", "48.2729, 10.9117, 6.65241, 0.22", "49.5072, 10.9236, 7.36265, 1.18", "49.9079, 10.9271, 7.64332, 1.47", "50.3228, 10.9184, 7.97653, 0.96", "51.6736, 10.8471, 9.07942, 0.22", "53.2864, 10.7386, 10.4038, 1.69", "54.1529, 10.6638, 11.1032, 2.73", "54.9544, 10.5825, 11.7068, 3.02", "56.5447, 10.4067, 12.7989, 0.15", "57.573, 10.2972, 13.427, 0.15", "58.7997, 10.1779, 14.0728, 1.4", "59.3102, 10.1453, 14.304, 1.92", "60.184, 10.1506, 14.6707, 0.96", "61.8174, 10.2315, 15.2885, 0.22", "63.0964, 10.3503, 15.7275, 0.22", "64.0026, 10.4497, 16.0221, 1.47", "65.129, 10.5652, 16.3502, 2.5", "66.9273, 10.7393, 16.8376, 0.22", "67.0718, 10.7516, 16.8727, 0.44", "68.4524, 10.8414, 17.1456, 0.22", "69.8317, 10.8491, 17.3407, 0.22", "71.5206, 10.7739, 17.4897, 2.36", "72.1395, 10.7239, 17.5213, 2.95", "72.5659, 10.6759, 17.5281, 3.02", "73.6544, 10.5467, 17.5506, 1.33", "75.6638, 10.2934, 17.597, 0.22", "77.0841, 10.0981, 17.6253, 0.44", "77.9104, 9.98088, 17.6422, 0.37", "78.5685, 9.8876, 17.6673, 1.47", "79.3408, 9.77601, 17.7133, 1.92", "79.8452, 9.69617, 17.7476, 1.92" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "23.9048, 16.6606, 1.17665, 0.15", "24.7072, 16.9534, 1.70664, 0.15", "25.9003, 17.4594, 2.77887, 1.4", "26.276, 17.6265, 3.18619, 1.99", "27.0796, 18.0226, 4.13008, 2.21", "27.3113, 18.1553, 4.41069, 2.5", "27.7205, 18.4227, 4.90529, 2.14", "28.789, 19.3521, 6.36854, 0.66", "29.3459, 20.0816, 7.21311, 0.52", "29.5657, 20.4745, 7.54367, 0.52", "29.7988, 21.1002, 7.89222, 0.44", "29.9585, 21.6537, 8.13293, 0.29", "30.1721, 22.5945, 8.53012, 0.29", "30.3154, 23.4328, 8.87863, 0.59", "30.4085, 23.8641, 9.16747, 0.59", "30.5932, 24.296, 9.76236, 0.37", "30.8017, 24.5723, 10.4129, 0.37", "31.3561, 25.0973, 12.0464, 2.14", "31.5948, 25.2743, 12.7039, 2.95", "32.0861, 25.5706, 13.9054, 3.17", "32.6755, 25.8925, 15.1668, 3.02", "33.4019, 26.2355, 16.3852, 0.66", "33.7248, 26.3838, 16.7968, 0.52", "34.1849, 26.6037, 17.2163, 0.81", "34.7073, 26.8692, 17.5798, 0.81", "35.1559, 27.1105, 17.8167, 0.52", "36.7705, 27.9534, 18.5027, 0.44", "37.6528, 28.4069, 18.8636, 1.47", "38.4914, 28.8586, 19.2358, 2.65", "38.9975, 29.1542, 19.4813, 3.17", "39.3667, 29.4023, 19.6979, 2.95", "40.5471, 30.3226, 20.4793, 0.96", "41.2329, 30.9742, 20.9871, 0.29", "41.606, 31.3921, 21.2838, 0.29", "41.9444, 31.8331, 21.5719, 0.29", "42.7756, 33.0353, 22.2847, 1.55", "43.0347, 33.4423, 22.5186, 2.06", "43.3475, 33.9776, 22.8192, 1.99", "44.1897, 35.4225, 23.631, 0.22", "44.7748, 36.4262, 24.2112, 0.22", "45.118, 37.0362, 24.5668, 0.22", "46.0085, 38.6754, 25.5026, 2.36", "46.3712, 39.3629, 25.8984, 2.95", "46.6213, 39.8576, 26.1786, 3.17", "47.4655, 41.5888, 27.1435, 0.29", "47.8009, 42.2798, 27.4933, 0.22", "48.1974, 43.2493, 27.8163, 0.22", "48.4042, 43.88, 27.9251, 1.25", "48.6897, 44.9702, 28.0564, 1.92", "48.786, 45.4478, 28.097, 2.65", "48.9087, 46.1178, 28.1497, 2.5", "49.4714, 48.9468, 28.4324, 0.22", "49.7407, 50.0557, 28.5843, 0.22", "50.211, 51.6312, 28.8981, 0.22", "50.4397, 52.2719, 29.0637, 0.22", "51.0178, 53.6845, 29.5315, 1.99", "51.1882, 54.0518, 29.6842, 2.5", "51.9901, 55.4778, 30.3967, 0.22", "52.5794, 56.4725, 30.8773, 0.22", "52.8845, 56.9703, 31.1112, 0.22", "53.5473, 58.0804, 31.6307, 2.28", "54.4879, 59.8431, 32.4091, 0.22", "55.0449, 60.942, 32.9031, 1.47", "55.2578, 61.4004, 33.1107, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "23.9048, 16.6606, 1.17665, 0.96", "23.5046, 17.353, 1.05148, 0.96", "23.0926, 18.2685, 0.915656, 0.81", "22.6293, 19.6347, 0.752171, 0.52", "22.3901, 20.6714, 0.656793, 0.52", "22.22, 21.8525, 0.534053, 0.52", "22.1233, 22.9263, 0.411602, 0.66", "22.1394, 24.1864, 0.235869, 0.96", "22.2649, 25.0024, 0.116924, 1.11", "22.5387, 25.9205, 0.0212741, 1.25", "22.938, 27.0026, -0.0362907, 1.25", "23.0349, 27.264, -0.0309669, 1.33", "23.2813, 28.0474, 0.0302024, 0.88", "23.4737, 28.9746, 0.16771, 0.59", "23.5895, 30.0458, 0.42574, 0.52", "23.6151, 31.1054, 0.752958, 0.52", "23.5771, 32.3747, 1.22273, 1.25", "23.5194, 33.1485, 1.51794, 1.77", "23.3932, 34.1367, 1.90842, 1.77", "23.1883, 35.3431, 2.43282, 1.47", "22.918, 36.7414, 3.12501, 1.99", "22.7999, 37.3292, 3.44995, 2.58", "22.6779, 37.8981, 3.80091, 2.87", "22.5675, 38.3535, 4.11568, 2.87", "22.2999, 39.3239, 4.87688, 2.06", "21.9847, 40.1926, 5.66753, 1.25", "21.7019, 40.8435, 6.31422, 0.81", "21.4305, 41.4383, 6.89023, 0.59", "21.113, 42.1224, 7.51017, 0.29", "20.9626, 42.4573, 7.78246, 0.29", "20.7146, 43.0327, 8.20354, 0.44", "20.3743, 43.9466, 8.82155, 0.59", "20.1462, 44.6916, 9.34553, 1.11", "20.0249, 45.257, 9.78117, 1.33", "19.9889, 45.655, 10.147, 1.47", "20.0118, 46.167, 10.7141, 1.33", "20.0932, 46.6014, 11.3299, 0.81", "20.1976, 46.8881, 11.8531, 0.59", "20.401, 47.2968, 12.7696, 0.37", "20.6221, 47.7506, 13.9393, 0.37", "20.792, 48.1543, 15.032, 1.47", "20.867, 48.4073, 15.6844, 1.77", "20.9378, 48.784, 16.6049, 1.77", "20.9781, 49.2127, 17.5712, 1.4", "20.9488, 49.9213, 18.9607, 0.29", "20.92, 50.0846, 19.2167, 0.29", "20.764, 50.774, 20.0816, 1.03", "20.6864, 51.1168, 20.4493, 1.18", "20.6348, 51.3549, 20.673, 1.18", "20.5196, 52.0139, 21.2317, 0.22", "20.4687, 52.6133, 21.6855, 0.22", "20.4151, 54.0198, 22.7038, 2.43", "20.4109, 54.6311, 23.1272, 2.65", "20.4174, 55.0483, 23.4037, 2.8", "20.4236, 55.3381, 23.5751, 2.8", "20.4484, 57.159, 24.4417, 0.37", "20.436, 58.0195, 24.7371, 0.29", "20.3932, 58.9102, 24.9385, 0.29", "20.3103, 60.0768, 25.1073, 0.88", "20.1912, 61.4567, 25.2887, 1.47", "20.0631, 62.6834, 25.4605, 2.28", "19.9351, 63.8004, 25.6734, 2.5", "19.8683, 64.4436, 25.8427, 2.8", "19.7553, 65.9397, 26.4194, 0.88", "19.7003, 67.2068, 27.1426, 0.44", "19.6926, 68.535, 28.1727, 0.44", "19.7195, 69.6861, 29.2743, 0.37", "19.7576, 70.5275, 30.2112, 0.37", "19.8071, 71.6129, 31.5407, 1.55", "19.7759, 72.7858, 32.8845, 3.09", "19.7099, 73.3959, 33.4821, 3.68", "19.5486, 74.1988, 34.1151, 4.13", "19.3836, 74.7714, 34.455, 4.13", "19.01, 75.8223, 34.9237, 3.76", "17.6956, 78.9908, 35.9693, 0.44", "17.1724, 80.1854, 36.2522, 0.37", "16.4908, 81.7089, 36.5349, 1.03", "16.0613, 82.6652, 36.6749, 1.11", "15.6937, 83.4908, 36.7776, 1.11", "15.1579, 84.7659, 36.9152, 0.22", "14.8282, 85.8112, 37.1134, 0.74", "14.7405, 86.2378, 37.2275, 0.74", "14.6905, 86.7068, 37.3998, 0.44", "14.6693, 87.0869, 37.5791, 0.22", "14.6277, 88.1689, 38.1599, 0.22", "14.5504, 90.2638, 39.3715, 3.39", "14.4955, 91.3362, 40.0377, 4.13", "14.4712, 91.7954, 40.3325, 4.35", "14.3328, 94.4424, 41.9998, 0.29", "14.3016, 95.1196, 42.408, 0.52", "14.2629, 95.9197, 42.872, 0.59", "14.2286, 96.4474, 43.1367, 0.59", "14.1478, 97.5658, 43.6281, 0.29", "14.0763, 98.5869, 44.0357, 0.29", "13.9742, 100.016, 44.5191, 1.62", "13.8671, 101.335, 44.9178, 2.43", "13.8124, 102.045, 45.1316, 2.43", "13.6929, 103.734, 45.6594, 0.37", "13.6438, 104.537, 45.9274, 0.29", "13.6217, 105.242, 46.2041, 0.22", "13.6209, 105.843, 46.4529, 0.22", "13.6409, 107.126, 46.9765, 0.22", "13.6783, 108.584, 47.5907, 1.84", "13.6949, 109.314, 47.875, 2.8", "13.704, 110.03, 48.1377, 2.87", "13.7052, 110.916, 48.4525, 2.28", "13.6412, 112.845, 49.0828, 0.29", "13.5859, 113.481, 49.251, 0.22", "13.4574, 114.623, 49.5199, 0.81", "13.3947, 115.108, 49.6303, 0.96", "13.3189, 115.678, 49.7643, 0.37", "13.2443, 116.375, 49.9928, 0.15", "13.1736, 117.246, 50.3578, 0.29", "13.1397, 117.78, 50.6253, 0.29", "13.1087, 118.578, 51.0929, 0.15", "13.1033, 119.006, 51.3517, 0.15", "13.1305, 120.432, 52.2452, 1.84", "13.1567, 120.982, 52.6085, 2.36", "13.1915, 121.54, 52.9944, 2.5", "13.239, 122.363, 53.5674, 1.84", "13.3225, 123.706, 54.5423, 0.22", "13.3501, 124.21, 54.9121, 0.22", "13.4141, 125.276, 55.6665, 1.11", "13.4391, 125.615, 55.9157, 1.25", "13.4668, 125.95, 56.1667, 0.66", "13.5729, 127.029, 57.0119, 0.22", "13.697, 127.821, 57.6127, 0.22", "13.8972, 128.861, 58.3581, 0.22", "14.307, 130.692, 59.6142, 2.43", "14.4641, 131.382, 60.071, 2.87", "14.5138, 131.605, 60.2128, 2.87", "15.0112, 133.906, 61.6895, 0.22", "15.1537, 134.643, 62.1843, 0.74", "15.2161, 135.055, 62.4705, 0.74", "15.3133, 136.082, 63.1839, 0.22", "15.3089, 136.781, 63.67, 0.22", "15.127, 138.27, 64.6758, 2.14", "14.9381, 138.941, 65.12, 2.87", "14.8145, 139.277, 65.3292, 3.09", "14.505, 140.019, 65.734, 2.43", "13.7837, 141.695, 66.532, 0.37", "13.4687, 142.466, 66.852, 0.29", "13.2046, 143.183, 67.1101, 0.37", "12.998, 143.924, 67.3971, 0.29", "12.8607, 144.691, 67.7276, 0.29", "12.7865, 145.552, 68.1547, 0.37", "12.7918, 146.217, 68.5445, 0.59", "12.8003, 146.755, 68.8879, 0.59", "12.8009, 147.622, 69.4588, 0.22", "12.766, 148.533, 70.062, 1.33", "12.6954, 149.188, 70.5011, 1.62", "12.6071, 149.761, 70.8595, 1.25", "12.3478, 151.237, 71.7351, 0.29", "12.2421, 151.831, 72.0756, 0.52", "12.1714, 152.286, 72.336, 0.52", "12.0388, 153.26, 72.8147, 0.22", "11.8988, 154.558, 73.3749, 1.92", "11.8283, 155.421, 73.7114, 2.73", "11.8045, 155.84, 73.8608, 2.95", "11.7776, 156.426, 74.0595, 3.24", "11.6692, 159.306, 74.9698, 0.29", "11.6535, 159.956, 75.1629, 0.29", "11.6639, 160.996, 75.464, 0.88", "11.6936, 161.717, 75.6722, 0.88", "11.731, 162.364, 75.8489, 0.88", "11.907, 163.652, 76.311, 0.29", "12.1109, 164.643, 76.7662, 0.29", "12.5411, 166.611, 77.7429, 2.43", "12.6583, 167.114, 78.0072, 3.02", "12.8545, 167.866, 78.4194, 3.24", "13.7497, 170.947, 80.2491, 0.22", "14.0676, 171.945, 80.896, 0.52", "14.2015, 172.35, 81.1742, 0.52", "14.4123, 172.939, 81.5812, 0.22", "14.5888, 173.404, 81.8828, 0.22", "15.0498, 174.583, 82.5969, 1.33", "15.2374, 175.098, 82.835, 1.69", "15.3939, 175.525, 83.0339, 1.69", "15.9369, 177.148, 83.7999, 0.22", "16.126, 177.809, 84.1697, 0.66", "16.2081, 178.162, 84.395, 0.66", "16.3187, 178.71, 84.7832, 0.66", "16.457, 179.512, 85.424, 0.22", "16.5035, 179.913, 85.7355, 0.22", "16.6146, 181.613, 87.1293, 1.99", "16.6413, 182.122, 87.5352, 2.65", "16.6634, 182.504, 87.8254, 2.8", "16.7177, 183.184, 88.3194, 2.14", "16.9765, 184.723, 89.4909, 0.22", "17.2385, 185.758, 90.2811, 0.22", "17.5931, 186.867, 91.0964, 1.25", "17.7396, 187.27, 91.4019, 1.47", "17.8978, 187.65, 91.7258, 1.25", "18.5387, 188.943, 93.0482, 0.52", "18.8047, 189.422, 93.6272, 0.29", "19.0453, 189.883, 94.1826, 0.29", "19.3169, 190.407, 94.7951, 0.29", "19.8853, 191.6, 96.0792, 1.84", "20.1236, 192.194, 96.6662, 2.28", "20.2729, 192.699, 97.1239, 2.5", "20.7381, 194.481, 98.831, 0.29", "20.9506, 195.353, 99.6911, 0.22", "21.101, 196.035, 100.382, 0.22", "21.1753, 196.48, 100.848, 0.22", "21.3014, 197.198, 101.714, 0.22", "21.5009, 198.365, 103.31, 1.77", "21.5628, 198.73, 103.85, 2.36", "21.6443, 199.084, 104.396, 2.65", "21.8167, 199.586, 105.168, 2.8", "22.6452, 201.236, 107.513, 0.29", "22.9545, 201.723, 108.14, 0.22", "23.3622, 202.294, 108.788, 0.22", "23.7196, 202.7, 109.237, 0.22", "24.0947, 203.062, 109.598, 0.22", "25.2994, 204.07, 110.477, 1.47", "25.6061, 204.295, 110.654, 1.99", "25.9896, 204.547, 110.869, 1.99", "27.8573, 205.698, 111.966, 0.15", "28.5469, 206.111, 112.383, 0.29", "28.8597, 206.276, 112.555, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "31.0268, -22.1581, -32.1981, 0.22", "30.6593, -25.2036, -34.3066, 0.22", "30.5626, -25.9698, -34.8124, 1.11", "30.5099, -26.387, -35.0923, 1.11", "30.3621, -27.7322, -35.9477, 0.22", "30.0873, -30.7043, -37.7405, 0.22", "30.0006, -32.0013, -38.5459, 2.06", "29.9873, -32.8892, -39.0624, 2.65", "30.0062, -33.6383, -39.514, 2.65", "30.0892, -35.0171, -40.3398, 1.03", "30.2018, -36.0132, -40.9244, 0.22", "30.5412, -37.7622, -41.8121, 0.52", "30.648, -38.1793, -42.0064, 0.52", "30.7807, -38.6132, -42.1997, 0.29", "31.0568, -39.5733, -42.6679, 1.03", "31.2304, -40.2391, -43.0236, 0.96", "31.4079, -41.0917, -43.5428, 0.59", "31.5095, -41.9214, -44.1422, 1.84", "31.5647, -42.5415, -44.6578, 2.36", "31.6589, -44.3177, -46.3568, 0.88", "31.7126, -44.9048, -46.9679, 0.29", "31.8592, -46.1652, -48.2878, 0.29", "32.1096, -47.8971, -50.1082, 1.69", "32.2035, -48.3965, -50.6192, 2.21", "32.4101, -49.3024, -51.5028, 2.21", "33.4652, -53.2435, -55.1205, 0.44", "33.6326, -53.8175, -55.6195, 0.74", "33.6824, -53.9752, -55.7439, 0.74", "33.9922, -54.8842, -56.4335, 0.22", "34.4274, -56.214, -57.4172, 0.88", "34.5064, -56.466, -57.6, 0.88", "34.8251, -57.7005, -58.5712, 0.22", "35.027, -58.6036, -59.2882, 0.22", "35.3126, -60.2057, -60.556, 1.84", "35.382, -60.7881, -61.0131, 2.21", "35.4707, -61.5556, -61.5993, 2.21", "35.816, -64.3207, -63.7307, 0.29", "35.949, -65.4173, -64.6081, 0.15", "36.0816, -66.6502, -65.5868, 0.96", "36.2342, -68.3567, -66.9405, 0.22", "36.4386, -71.5199, -69.5705, 0.22", "36.4925, -73.2607, -71.0413, 2.21", "36.4918, -74.6217, -72.2463, 2.8", "36.4324, -76.8517, -74.3283, 0.22", "36.3715, -77.9214, -75.3264, 1.03", "36.0909, -80.8526, -78.0756, 0.22", "35.8617, -82.3061, -79.4499, 1.77", "35.6669, -83.3876, -80.4595, 2.06", "35.2556, -85.6696, -82.5651, 0.22", "35.0905, -86.5913, -83.4386, 1.33", "34.9027, -87.6995, -84.46, 1.62", "34.5091, -90.2154, -86.6137, 0.22", "34.4447, -90.6492, -86.9723, 0.74", "34.3661, -91.1327, -87.3647, 0.74", "34.1567, -92.4518, -88.4485, 0.22", "34.0463, -93.3623, -89.1609, 0.22", "33.9721, -94.2194, -89.7541, 1.03", "33.936, -95.0231, -90.2422, 1.11", "33.8997, -96.9537, -91.4948, 0.22", "33.9082, -98.6611, -92.519, 0.22", "33.9478, -100.064, -93.3167, 1.92", "33.9691, -100.658, -93.6448, 2.58", "33.9946, -101.17, -93.9208, 2.58", "34.2033, -104.809, -95.7405, 0.29", "34.3883, -107.672, -97.0946, 0.29", "34.4386, -108.431, -97.4869, 1.03", "34.5021, -109.375, -98.0232, 1.25", "34.8192, -113.307, -100.291, 0.22", "34.9578, -114.409, -101.007, 0.74", "35.0304, -114.815, -101.287, 0.74", "35.4777, -116.861, -102.888, 0.22", "35.7223, -117.856, -103.693, 1.69", "35.9259, -118.564, -104.287, 2.5", "37.5178, -123.402, -108.347, 0.22", "37.7931, -124.19, -108.984, 0.74", "38.0606, -124.913, -109.51, 0.74", "38.3693, -125.691, -110.015, 0.22", "39.6225, -128.701, -111.84, 0.22", "40.2011, -130.014, -112.547, 1.99", "40.5117, -130.678, -112.823, 2.21", "41.3326, -132.465, -113.538, 0.22", "41.8463, -133.575, -113.961, 0.96", "42.0653, -134.067, -114.139, 1.18", "43.0635, -136.415, -114.92, 0.22", "43.3607, -137.156, -115.182, 0.22", "43.7588, -138.15, -115.545, 0.81", "44.0112, -138.767, -115.796, 0.81", "45.0511, -141.149, -117.113, 0.22", "45.4547, -142.018, -117.704, 0.44", "45.7455, -142.61, -118.169, 0.15", "46.3932, -143.8, -119.194, 1.11", "47.2844, -145.281, -120.609, 0.22", "48.8861, -147.744, -123.099, 1.03", "49.4048, -148.452, -123.894, 0.81", "49.7403, -148.884, -124.487, 0.52", "50.0748, -149.295, -125.153, 0.81", "50.3398, -149.601, -125.722, 0.81", "50.9371, -150.333, -126.986, 0.22", "51.562, -151.168, -128.302, 0.96", "53.3565, -153.729, -132.299, 0.37", "54.3046, -155.188, -134.505, 1.4", "55.0429, -156.434, -136.3, 1.03", "55.9213, -158.048, -138.53, 0.22", "56.2274, -158.678, -139.397, 0.96", "56.4552, -159.203, -140.062, 0.96", "56.7764, -160.036, -140.986, 0.59", "57.1504, -161.044, -142.113, 1.18", "57.5227, -161.992, -143.2, 1.33", "59.1756, -165.68, -147.557, 0.22", "59.4194, -166.174, -148.115, 0.88", "59.6344, -166.569, -148.535, 0.88", "60.6355, -168.187, -150.176, 0.22", "61.9724, -169.92, -151.773, 0.22", "62.7829, -170.779, -152.459, 1.18", "63.2531, -171.184, -152.736, 1.47", "64.2001, -171.791, -153.254, 0.15", "65.3403, -172.373, -153.921, 0.44", "68.1836, -173.545, -155.593, 0.22", "69.0385, -173.848, -156.148, 0.74", "69.6261, -174.038, -156.569, 0.74", "74.6478, -175.548, -160.441, 0.29", "76.943, -176.196, -162.279, 1.03", "77.4553, -176.328, -162.701, 1.03", "79.5129, -176.887, -164.377, 0.29", "80.5216, -177.204, -165.166, 0.74", "82.0392, -177.777, -166.269, 0.22", "83.4344, -178.44, -167.156, 1.84", "84.1363, -178.818, -167.511, 1.84", "87.2158, -180.664, -168.873, 0.15", "88.1904, -181.335, -169.191, 0.74", "88.7486, -181.785, -169.343, 0.74", "89.4285, -182.427, -169.488, 0.22", "90.0917, -183.162, -169.633, 0.59", "90.3286, -183.458, -169.683, 0.59", "91.3175, -184.901, -169.967, 0.22", "91.7356, -185.572, -170.121, 0.74", "91.9367, -185.922, -170.225, 0.74", "92.7437, -187.473, -170.742, 0.15", "93.2929, -188.61, -171.145, 0.15", "93.7335, -189.55, -171.528, 0.59", "94.0336, -190.195, -171.805, 0.59", "95.2013, -192.699, -172.871, 0.22", "95.5736, -193.506, -173.214, 0.74", "95.791, -193.985, -173.412, 0.74", "97.1195, -196.932, -174.64, 0.22", "98.1243, -199.066, -175.483, 0.22", "98.4992, -199.829, -175.785, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "31.0268, -22.1581, -32.1981, 0.22", "32.3688, -23.5147, -32.3921, 0.22", "34.174, -25.3395, -32.653, 0.22", "34.7229, -25.8943, -32.7323, 0.74", "35.3674, -26.5458, -32.8255, 0.74", "37.3289, -28.5286, -33.109, 0.22", "37.9115, -29.1176, -33.1932, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_43", "dend_32", "dend_27", "dend_20", "dend_0", "dend_47", "dend_44", "dend_40", "dend_33", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_1", "dend_46", "dend_45", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_25", "dend_22", "dend_19", "dend_18", "dend_10", "dend_9", "dend_2", "dend_39", "dend_38", "dend_36", "dend_35", "dend_24", "dend_23", "dend_12", "dend_11", "dend_6", "dend_3", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_4", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_43", "dend_32", "dend_27", "dend_20", "dend_0", "dend_47", "dend_44", "dend_40", "dend_33", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_1", "dend_46", "dend_45", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_25", "dend_22", "dend_19", "dend_18", "dend_10", "dend_9", "dend_2", "dend_39", "dend_38", "dend_36", "dend_35", "dend_24", "dend_23", "dend_12", "dend_11", "dend_6", "dend_3", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_4", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_NBC_ebdeb060a6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_1
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.45000064795763495)
    connect dend_43(0), soma_0(0.45000064795763495)
    connect dend_32(0), soma_0(0.45000064795763495)
    connect dend_27(0), soma_0(0.45000064795763495)
    connect dend_20(0), soma_0(0.45000064795763495)
    connect dend_0(0), soma_0(0.45000064795763495)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_1(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -13.6672, -4.21761, 2.88746, 3.77586 ) }
    soma_0 { pt3dadd( -12.3226, -3.91408, 2.62074, 6.64131 ) }
    soma_0 { pt3dadd( -10.9781, -3.61056, 2.35401, 8.80204 ) }
    soma_0 { pt3dadd( -9.63356, -3.30703, 2.08728, 10.3184 ) }
    soma_0 { pt3dadd( -8.28902, -3.0035, 1.82056, 12.1801 ) }
    soma_0 { pt3dadd( -6.94448, -2.69998, 1.55383, 13.9015 ) }
    soma_0 { pt3dadd( -5.59994, -2.39645, 1.28711, 15.2125 ) }
    soma_0 { pt3dadd( -4.2554, -2.09293, 1.02038, 16.1357 ) }
    soma_0 { pt3dadd( -2.91086, -1.7894, 0.753656, 16.8349 ) }
    soma_0 { pt3dadd( -1.56632, -1.48588, 0.486931, 17.1545 ) }
    soma_0 { pt3dadd( -0.221778, -1.18235, 0.220205, 17.2905 ) }
    soma_0 { pt3dadd( 1.12276, -0.878824, -0.0465203, 17.299 ) }
    soma_0 { pt3dadd( 2.4673, -0.575298, -0.313246, 17.3774 ) }
    soma_0 { pt3dadd( 3.81184, -0.271773, -0.579971, 17.0096 ) }
    soma_0 { pt3dadd( 5.15639, 0.0317532, -0.846697, 16.2957 ) }
    soma_0 { pt3dadd( 6.50093, 0.335279, -1.11342, 15.4071 ) }
    soma_0 { pt3dadd( 7.84547, 0.638805, -1.38015, 13.8209 ) }
    soma_0 { pt3dadd( 9.19001, 0.942331, -1.64687, 12.2266 ) }
    soma_0 { pt3dadd( 10.5345, 1.24586, -1.9136, 10.4487 ) }
    soma_0 { pt3dadd( 11.8791, 1.54938, -2.18032, 8.51007 ) }
    soma_0 { pt3dadd( 13.2236, 1.85291, -2.44705, 4.94822 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 2.86402, -8.24612, -8.21721, 0.88 ) }
    dend_48 { pt3dadd( 2.86402, -8.24612, -8.21721, 0.88 ) }
    dend_48 { pt3dadd( 3.06657, -8.65908, -8.34726, 0.88 ) }
    dend_48 { pt3dadd( 3.41054, -9.27129, -8.54255, 0.88 ) }
    dend_48 { pt3dadd( 3.77321, -9.86539, -8.74878, 0.81 ) }
    dend_48 { pt3dadd( 4.31007, -10.6803, -9.04241, 0.88 ) }
    dend_48 { pt3dadd( 4.64011, -11.1558, -9.23218, 1.4 ) }
    dend_48 { pt3dadd( 4.86847, -11.4603, -9.3655, 1.69 ) }
    dend_48 { pt3dadd( 5.08825, -11.7308, -9.49536, 1.84 ) }
    dend_48 { pt3dadd( 5.32675, -12.024, -9.6399, 1.84 ) }
    dend_48 { pt3dadd( 5.65154, -12.4734, -9.84054, 0.66 ) }
    dend_48 { pt3dadd( 5.93635, -12.9897, -10.0132, 0.44 ) }
    dend_48 { pt3dadd( 6.09026, -13.3859, -10.1138, 0.66 ) }
    dend_48 { pt3dadd( 6.17104, -13.6707, -10.1699, 0.88 ) }
    dend_48 { pt3dadd( 6.28165, -14.1351, -10.234, 0.96 ) }
    dend_48 { pt3dadd( 6.35444, -14.4648, -10.2642, 0.96 ) }
    dend_48 { pt3dadd( 6.44851, -14.8818, -10.2968, 0.74 ) }
    dend_48 { pt3dadd( 6.598, -15.4637, -10.3362, 0.44 ) }
    dend_48 { pt3dadd( 6.73739, -15.926, -10.3857, 0.29 ) }
    dend_48 { pt3dadd( 6.88012, -16.324, -10.4412, 0.29 ) }
    dend_48 { pt3dadd( 7.06561, -16.7771, -10.5126, 1.62 ) }
    dend_48 { pt3dadd( 7.26534, -17.2194, -10.5846, 2.36 ) }
    dend_48 { pt3dadd( 7.37473, -17.4334, -10.617, 2.8 ) }
    dend_48 { pt3dadd( 7.46601, -17.6048, -10.6395, 2.95 ) }
    dend_48 { pt3dadd( 7.73909, -18.1767, -10.6939, 1.62 ) }
    dend_48 { pt3dadd( 7.98067, -18.7508, -10.7263, 0.66 ) }
    dend_48 { pt3dadd( 8.18525, -19.2704, -10.7744, 0.29 ) }
    dend_48 { pt3dadd( 8.41657, -19.8618, -10.8705, 0.29 ) }
    dend_48 { pt3dadd( 8.56753, -20.2533, -10.9533, 0.29 ) }
    dend_48 { pt3dadd( 8.80569, -20.9312, -11.1214, 2.28 ) }
    dend_48 { pt3dadd( 8.94994, -21.3968, -11.2623, 2.5 ) }
    dend_48 { pt3dadd( 9.23197, -22.4369, -11.6247, 0.66 ) }
    dend_48 { pt3dadd( 9.41984, -23.1457, -11.8754, 0.29 ) }
    dend_48 { pt3dadd( 9.51159, -23.493, -12.0027, 0.29 ) }
    dend_48 { pt3dadd( 9.75209, -24.3207, -12.3053, 2.73 ) }
    dend_48 { pt3dadd( 9.84179, -24.6071, -12.414, 3.46 ) }
    dend_48 { pt3dadd( 9.94129, -24.9285, -12.5455, 3.46 ) }
    dend_48 { pt3dadd( 10.288, -26.0842, -12.9957, 0.15 ) }
    dend_48 { pt3dadd( 10.4073, -26.4711, -13.1515, 0.15 ) }
    dend_48 { pt3dadd( 10.5266, -26.83, -13.3122, 0.88 ) }
    dend_48 { pt3dadd( 10.682, -27.2728, -13.5307, 1.18 ) }
    dend_48 { pt3dadd( 10.8928, -27.9103, -13.867, 0.88 ) }
    dend_48 { pt3dadd( 11.0274, -28.3567, -14.1106, 0.15 ) }
    dend_48 { pt3dadd( 11.2029, -29.0229, -14.4795, 1.92 ) }
    dend_48 { pt3dadd( 11.2955, -29.3634, -14.6491, 2.87 ) }
    dend_48 { pt3dadd( 11.3699, -29.6408, -14.7811, 2.87 ) }
    dend_48 { pt3dadd( 11.6304, -30.6298, -15.2221, 0.74 ) }
    dend_48 { pt3dadd( 11.7428, -31.066, -15.4068, 0.29 ) }
    dend_48 { pt3dadd( 11.8116, -31.3491, -15.5332, 0.59 ) }
    dend_48 { pt3dadd( 11.8874, -31.6927, -15.6776, 0.74 ) }
    dend_48 { pt3dadd( 12.0599, -32.5227, -15.9909, 0.22 ) }
    dend_48 { pt3dadd( 12.1923, -33.2132, -16.2209, 1.25 ) }
    dend_48 { pt3dadd( 12.2483, -33.5409, -16.3232, 1.55 ) }
    dend_48 { pt3dadd( 12.4107, -34.4423, -16.6041, 0.22 ) }
    dend_48 { pt3dadd( 12.5646, -35.2097, -16.8308, 0.22 ) }
    dend_48 { pt3dadd( 12.6454, -35.5749, -16.9279, 0.88 ) }
    dend_48 { pt3dadd( 12.7427, -35.9433, -17.0029, 1.18 ) }
    dend_48 { pt3dadd( 12.8576, -36.316, -17.0791, 0.96 ) }
    dend_48 { pt3dadd( 13.0922, -36.9654, -17.2233, 0.22 ) }
    dend_48 { pt3dadd( 13.2412, -37.3003, -17.299, 0.52 ) }
    dend_48 { pt3dadd( 13.2963, -37.4152, -17.3335, 0.66 ) }
    dend_48 { pt3dadd( 13.5045, -37.8547, -17.47, 0.22 ) }
    dend_48 { pt3dadd( 13.8832, -38.6781, -17.7331, 2.8 ) }
    dend_48 { pt3dadd( 14.0257, -39.0003, -17.8337, 3.24 ) }
    dend_48 { pt3dadd( 14.1665, -39.3556, -17.9525, 2.95 ) }
    dend_48 { pt3dadd( 14.6202, -40.5685, -18.3684, 0.29 ) }
    dend_48 { pt3dadd( 14.8816, -41.2905, -18.6064, 0.15 ) }
    dend_48 { pt3dadd( 15.0406, -41.7517, -18.752, 0.96 ) }
    dend_48 { pt3dadd( 15.1126, -41.9659, -18.8129, 1.18 ) }
    dend_48 { pt3dadd( 15.3869, -42.8368, -19.0643, 0.22 ) }
    dend_48 { pt3dadd( 15.4652, -43.0869, -19.1387, 0.52 ) }
    dend_48 { pt3dadd( 15.7256, -43.8248, -19.3478, 0.22 ) }
    dend_48 { pt3dadd( 15.9226, -44.3498, -19.5064, 1.69 ) }
    dend_48 { pt3dadd( 16.0806, -44.7474, -19.6243, 2.36 ) }
    dend_48 { pt3dadd( 16.2401, -45.1255, -19.7482, 2.5 ) }
    dend_48 { pt3dadd( 16.6618, -46.0624, -20.0552, 0.22 ) }
    dend_48 { pt3dadd( 17.0828, -47.0124, -20.3842, 0.22 ) }
    dend_48 { pt3dadd( 17.2552, -47.4038, -20.5259, 1.33 ) }
    dend_48 { pt3dadd( 17.4019, -47.7437, -20.6438, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 17.5814, -48.187, -20.7908, 2.06 ) }
    dend_48 { pt3dadd( 17.9719, -49.1982, -21.082, 0.22 ) }
    dend_48 { pt3dadd( 18.1383, -49.6535, -21.2028, 0.74 ) }
    dend_48 { pt3dadd( 18.1703, -49.7424, -21.2245, 0.74 ) }
    dend_48 { pt3dadd( 18.3682, -50.2686, -21.3322, 0.22 ) }
    dend_48 { pt3dadd( 18.5652, -50.794, -21.4215, 1.69 ) }
    dend_48 { pt3dadd( 18.7265, -51.2233, -21.4759, 2.43 ) }
    dend_48 { pt3dadd( 18.8019, -51.4291, -21.4991, 2.5 ) }
    dend_48 { pt3dadd( 19.244, -52.7203, -21.5404, 0.15 ) }
    dend_48 { pt3dadd( 19.4593, -53.4049, -21.5309, 0.15 ) }
    dend_48 { pt3dadd( 19.534, -53.6991, -21.5142, 0.59 ) }
    dend_48 { pt3dadd( 19.5956, -53.9924, -21.4884, 0.74 ) }
    dend_48 { pt3dadd( 19.7761, -55.0507, -21.3803, 0.22 ) }
    dend_48 { pt3dadd( 19.9175, -56.1144, -21.2616, 2.5 ) }
    dend_48 { pt3dadd( 19.9474, -56.409, -21.2289, 2.95 ) }
    dend_48 { pt3dadd( 20.1176, -58.2656, -21.0315, 0.22 ) }
    dend_48 { pt3dadd( 20.1434, -58.5186, -21.006, 0.81 ) }
    dend_48 { pt3dadd( 20.1626, -58.7336, -20.997, 0.81 ) }
    dend_48 { pt3dadd( 20.2582, -59.9708, -21.0192, 0.22 ) }
    dend_48 { pt3dadd( 20.3143, -60.6031, -21.0741, 1.69 ) }
    dend_48 { pt3dadd( 20.3566, -61.0062, -21.119, 2.14 ) }
    dend_48 { pt3dadd( 20.4922, -62.0574, -21.2667, 0.22 ) }
    dend_48 { pt3dadd( 20.6634, -63.2698, -21.4258, 1.25 ) }
    dend_48 { pt3dadd( 20.6988, -63.5227, -21.456, 1.47 ) }
    dend_48 { pt3dadd( 20.8457, -64.7469, -21.5308, 0.22 ) }
    dend_48 { pt3dadd( 20.8784, -65.1077, -21.5284, 0.74 ) }
    dend_48 { pt3dadd( 20.8859, -65.3942, -21.5092, 0.74 ) }
    dend_48 { pt3dadd( 20.8518, -65.9782, -21.4217, 0.22 ) }
    dend_48 { pt3dadd( 20.8044, -66.3811, -21.3283, 0.22 ) }
    dend_48 { pt3dadd( 20.6177, -67.3608, -21.0968, 2.21 ) }
    dend_48 { pt3dadd( 20.5325, -67.6687, -21.0232, 2.73 ) }
    dend_48 { pt3dadd( 20.1683, -68.7705, -20.8154, 0.22 ) }
    dend_48 { pt3dadd( 19.9603, -69.3152, -20.7423, 0.22 ) }
    dend_48 { pt3dadd( 19.8096, -69.6638, -20.7195, 0.81 ) }
    dend_48 { pt3dadd( 19.6989, -69.9019, -20.7181, 1.03 ) }
    dend_48 { pt3dadd( 19.5559, -70.1774, -20.7341, 0.81 ) }
    dend_48 { pt3dadd( 19.1799, -70.8102, -20.7624, 0.22 ) }
    dend_48 { pt3dadd( 18.976, -71.1098, -20.7716, 1.18 ) }
    dend_48 { pt3dadd( 18.7647, -71.4096, -20.7739, 1.4 ) }
    dend_48 { pt3dadd( 18.6048, -71.6322, -20.7698, 1.18 ) }
    dend_48 { pt3dadd( 18.1111, -72.4001, -20.7314, 0.22 ) }
    dend_48 { pt3dadd( 17.8258, -72.9322, -20.6688, 0.22 ) }
    dend_48 { pt3dadd( 17.7424, -73.1263, -20.6367, 0.96 ) }
    dend_48 { pt3dadd( 17.6496, -73.4183, -20.5903, 1.18 ) }
    dend_48 { pt3dadd( 17.5874, -73.6801, -20.5507, 0.88 ) }
    dend_48 { pt3dadd( 17.3547, -75.0034, -20.3617, 0.22 ) }
    dend_48 { pt3dadd( 17.2656, -75.9077, -20.2467, 2.73 ) }
    dend_48 { pt3dadd( 17.2491, -76.2345, -20.2047, 2.8 ) }
    dend_48 { pt3dadd( 17.2186, -77.2892, -20.0674, 0.22 ) }
    dend_48 { pt3dadd( 17.2115, -77.6155, -20.0458, 0.74 ) }
    dend_48 { pt3dadd( 17.2079, -77.7439, -20.0491, 0.81 ) }
    dend_48 { pt3dadd( 17.169, -78.3812, -20.1348, 0.22 ) }
    dend_48 { pt3dadd( 17.1412, -78.6328, -20.1927, 0.52 ) }
    dend_48 { pt3dadd( 17.1103, -78.7987, -20.2417, 0.74 ) }
    dend_48 { pt3dadd( 16.8219, -80.0177, -20.7162, 0.22 ) }
    dend_48 { pt3dadd( 16.6244, -80.77, -21.0338, 0.22 ) }
    dend_48 { pt3dadd( 16.4468, -81.397, -21.3244, 1.62 ) }
    dend_48 { pt3dadd( 16.3593, -81.6813, -21.4641, 1.92 ) }
    dend_48 { pt3dadd( 16.0589, -82.6473, -21.9547, 0.22 ) }
    dend_48 { pt3dadd( 15.8442, -83.3253, -22.3008, 0.22 ) }
    dend_48 { pt3dadd( 15.7192, -83.7129, -22.4933, 0.96 ) }
    dend_48 { pt3dadd( 15.6044, -84.1028, -22.708, 1.25 ) }
    dend_48 { pt3dadd( 15.5033, -84.4973, -22.9313, 0.22 ) }
    dend_48 { pt3dadd( 15.3412, -85.2158, -23.3079, 0.22 ) }
    dend_48 { pt3dadd( 15.2229, -85.8208, -23.6029, 1.03 ) }
    dend_48 { pt3dadd( 15.1943, -85.9936, -23.6805, 1.03 ) }
    dend_48 { pt3dadd( 15.05, -87.02, -24.1083, 0.22 ) }
    dend_48 { pt3dadd( 15.0018, -87.4646, -24.2619, 0.22 ) }
    dend_48 { pt3dadd( 14.9447, -88.102, -24.4461, 2.21 ) }
    dend_48 { pt3dadd( 14.9189, -88.4026, -24.512, 2.43 ) }
    dend_48 { pt3dadd( 14.8632, -89.0624, -24.6311, 1.47 ) }
    dend_48 { pt3dadd( 14.7826, -89.8522, -24.7408, 0.22 ) }
    dend_48 { pt3dadd( 14.6858, -90.6969, -24.8124, 0.22 ) }
    dend_48 { pt3dadd( 14.6198, -91.2735, -24.8592, 1.62 ) }
    dend_48 { pt3dadd( 14.5809, -91.6131, -24.887, 2.14 ) }
    dend_48 { pt3dadd( 14.5367, -91.9836, -24.9115, 2.14 ) }
    dend_48 { pt3dadd( 14.3911, -93.0339, -24.9651, 0.22 ) }
    dend_48 { pt3dadd( 14.3207, -93.539, -24.9916, 1.25 ) }
    dend_48 { pt3dadd( 14.2816, -93.8342, -25.0052, 1.55 ) }
    dend_48 { pt3dadd( 14.22, -94.3582, -25.0144, 1.18 ) }
    dend_48 { pt3dadd( 14.1011, -95.4754, -25.0076, 0.22 ) }
    dend_48 { pt3dadd( 14.0442, -96.0159, -24.9952, 1.69 ) }
    dend_48 { pt3dadd( 14.0082, -96.3625, -24.9847, 1.99 ) }
    dend_48 { pt3dadd( 13.8733, -97.5532, -24.9361, 0.22 ) }
    dend_48 { pt3dadd( 13.7859, -98.3265, -24.8917, 0.81 ) }
    dend_48 { pt3dadd( 13.7638, -98.5407, -24.872, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.78402, 3.51238, 10.9728, 0.59 ) }
    dend_43 { pt3dadd( 2.4952, 3.78295, 11.7, 0.59 ) }
    dend_43 { pt3dadd( 2.11269, 4.14128, 12.6631, 0.81 ) }
    dend_43 { pt3dadd( 0.152825, 5.97728, 17.5975, 2.65 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -13.986, -4.11212, -3.2872, 1.25 ) }
    dend_32 { pt3dadd( -14.1653, -4.19789, -3.29891, 1.25 ) }
    dend_32 { pt3dadd( -15.4112, -4.79365, -3.38026, 1.25 ) }
    dend_32 { pt3dadd( -16.4414, -5.28629, -3.44752, 1.4 ) }
    dend_32 { pt3dadd( -17.1795, -5.63924, -3.49571, 1.55 ) }
    dend_32 { pt3dadd( -18.1022, -6.08051, -3.55595, 1.55 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 96/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -13.616, -2.04512, 4.5928, 1.92 ) }
    dend_27 { pt3dadd( -13.616, -2.04512, 4.5928, 1.92 ) }
    dend_27 { pt3dadd( -14.4862, -1.96906, 4.5928, 1.33 ) }
    dend_27 { pt3dadd( -15.2762, -1.90852, 4.57481, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( -16.3061, -1.83646, 4.53489, 1.18 ) }
    dend_27 { pt3dadd( -17.2976, -1.76644, 4.48915, 1.18 ) }
    dend_27 { pt3dadd( -18.5383, -1.68052, 4.42795, 1.18 ) }
    dend_27 { pt3dadd( -19.8828, -1.60472, 4.36009, 1.62 ) }
    dend_27 { pt3dadd( -21.0004, -1.55671, 4.28653, 2.21 ) }
    dend_27 { pt3dadd( -21.5155, -1.53596, 4.26032, 2.58 ) }
    dend_27 { pt3dadd( -22.231, -1.48485, 4.23513, 2.87 ) }
    dend_27 { pt3dadd( -22.8705, -1.40087, 4.22476, 2.87 ) }
    dend_27 { pt3dadd( -23.8445, -1.20686, 4.24725, 2.58 ) }
    dend_27 { pt3dadd( -24.8122, -0.955559, 4.31263, 1.69 ) }
    dend_27 { pt3dadd( -26.0978, -0.547162, 4.4987, 0.88 ) }
    dend_27 { pt3dadd( -27.0858, -0.172437, 4.73166, 0.81 ) }
    dend_27 { pt3dadd( -27.6948, 0.099445, 4.92473, 0.81 ) }
    dend_27 { pt3dadd( -28.2356, 0.378377, 5.15406, 1.03 ) }
    dend_27 { pt3dadd( -28.6319, 0.606396, 5.36766, 1.18 ) }
    dend_27 { pt3dadd( -29.2799, 0.97652, 5.82046, 1.18 ) }
    dend_27 { pt3dadd( -29.9758, 1.3233, 6.38399, 1.4 ) }
    dend_27 { pt3dadd( -30.3395, 1.46762, 6.70571, 1.55 ) }
    dend_27 { pt3dadd( -30.8742, 1.6318, 7.19436, 1.55 ) }
    dend_27 { pt3dadd( -31.4391, 1.78296, 7.70809, 1.33 ) }
    dend_27 { pt3dadd( -32.5802, 2.04342, 8.74794, 1.25 ) }
    dend_27 { pt3dadd( -33.7165, 2.25729, 9.7558, 2.28 ) }
    dend_27 { pt3dadd( -34.3011, 2.34727, 10.2794, 3.24 ) }
    dend_27 { pt3dadd( -34.8097, 2.41, 10.7575, 3.54 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 24/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.47402, 7.43188, -0.657204, 1.77 ) }
    dend_20 { pt3dadd( 2.47402, 7.43188, -0.657204, 1.77 ) }
    dend_20 { pt3dadd( 2.57012, 8.559, -0.562393, 1.33 ) }
    dend_20 { pt3dadd( 2.68124, 9.75718, -0.436924, 1.03 ) }
    dend_20 { pt3dadd( 2.75373, 10.5432, -0.344518, 0.96 ) }
    dend_20 { pt3dadd( 2.83787, 11.4578, -0.231808, 0.96 ) }
    dend_20 { pt3dadd( 2.92884, 12.4346, -0.114581, 1.11 ) }
    dend_20 { pt3dadd( 3.01374, 13.4401, 0.00483286, 1.33 ) }
    dend_20 { pt3dadd( 3.06287, 14.1923, 0.0986624, 1.55 ) }
    dend_20 { pt3dadd( 3.09437, 14.9708, 0.180869, 1.55 ) }
    dend_20 { pt3dadd( 3.10688, 15.8266, 0.245166, 1.55 ) }
    dend_20 { pt3dadd( 3.09542, 17.0345, 0.267917, 1.18 ) }
    dend_20 { pt3dadd( 3.05705, 18.1069, 0.234757, 1.03 ) }
    dend_20 { pt3dadd( 2.97406, 19.4752, 0.1221, 1.4 ) }
    dend_20 { pt3dadd( 2.90802, 20.3326, -0.0118783, 1.84 ) }
    dend_20 { pt3dadd( 2.81735, 21.388, -0.233969, 2.14 ) }
    dend_20 { pt3dadd( 2.74026, 22.1638, -0.426603, 2.14 ) }
    dend_20 { pt3dadd( 2.65225, 22.9513, -0.661944, 2.21 ) }
    dend_20 { pt3dadd( 2.58079, 23.6237, -0.904779, 1.99 ) }
    dend_20 { pt3dadd( 2.4764, 24.689, -1.37572, 1.69 ) }
    dend_20 { pt3dadd( 2.42282, 25.3357, -1.67149, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 45/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 12.624, 0.39238, -4.7872, 6.48 ) }
    dend_0 { pt3dadd( 12.624, 0.39238, -4.7872, 6.48 ) }
    dend_0 { pt3dadd( 13.9764, 0.584784, -4.74569, 6.48 ) }
    dend_0 { pt3dadd( 15.1669, 0.754152, -4.70915, 5.23 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 13.2236, 1.85291, -2.44705, 0.836322 ) }
    axon_0 { pt3dadd( 27.8554, 5.156, -2.44705, 0.836322 ) }
    axon_0 { pt3dadd( 42.4872, 8.45908, -2.44705, 0.836322 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 0.152825, 5.97728, 17.5975, 2.36 ) }
    dend_47 { pt3dadd( -0.0741637, 5.68911, 17.791, 2.36 ) }
    dend_47 { pt3dadd( -1.13259, 4.4539, 18.5037, 1.69 ) }
    dend_47 { pt3dadd( -1.81928, 3.64636, 18.8862, 0.44 ) }
    dend_47 { pt3dadd( -2.2488, 3.07466, 19.1034, 0.74 ) }
    dend_47 { pt3dadd( -2.5455, 2.62729, 19.2625, 0.88 ) }
    dend_47 { pt3dadd( -2.89275, 2.03084, 19.4648, 0.88 ) }
    dend_47 { pt3dadd( -3.10658, 1.58213, 19.5661, 0.74 ) }
    dend_47 { pt3dadd( -2.48209, 1.43795, 20.0767, 0.52 ) }
    dend_47 { pt3dadd( -1.89854, 1.31436, 20.7767, 0.66 ) }
    dend_47 { pt3dadd( -0.838747, 1.07615, 22.0847, 0.81 ) }
    dend_47 { pt3dadd( -0.117524, 0.879718, 23.0122, 1.33 ) }
    dend_47 { pt3dadd( 0.189957, 0.773223, 23.4421, 1.33 ) }
    dend_47 { pt3dadd( 2.75147, -0.298623, 27.5257, 0.88 ) }
    dend_47 { pt3dadd( 3.76435, -0.81342, 29.4393, 0.74 ) }
    dend_47 { pt3dadd( 4.12572, -1.06365, 30.3103, 0.74 ) }
    dend_47 { pt3dadd( 4.49255, -1.48702, 31.6042, 0.81 ) }
    dend_47 { pt3dadd( 4.74878, -2.03233, 33.122, 0.96 ) }
    dend_47 { pt3dadd( 4.80582, -2.47034, 34.1772, 1.11 ) }
    dend_47 { pt3dadd( 4.65824, -2.84837, 34.8266, 1.77 ) }
    dend_47 { pt3dadd( 4.43325, -3.14254, 35.3514, 2.21 ) }
    dend_47 { pt3dadd( 4.08547, -3.43449, 35.9816, 2.5 ) }
    dend_47 { pt3dadd( 3.72768, -3.63164, 36.5131, 2.65 ) }
    dend_47 { pt3dadd( 3.22565, -3.80129, 37.1326, 2.65 ) }
    dend_47 { pt3dadd( 1.95682, -4.07627, 38.4473, 0.81 ) }
    dend_47 { pt3dadd( 1.6001, -4.12502, 38.7651, 0.66 ) }
    dend_47 { pt3dadd( 0.84152, -4.24312, 39.3337, 0.88 ) }
    dend_47 { pt3dadd( 0.370416, -4.34639, 39.6341, 0.59 ) }
    dend_47 { pt3dadd( -0.502427, -4.59554, 40.1359, 0.29 ) }
    dend_47 { pt3dadd( -1.41704, -4.83682, 40.546, 0.29 ) }
    dend_47 { pt3dadd( -1.07184, -5.22907, 40.5129, 0.29 ) }
    dend_47 { pt3dadd( -0.0149248, -6.37485, 40.4516, 0.29 ) }
    dend_47 { pt3dadd( 0.79208, -7.13469, 40.3188, 0.29 ) }
    dend_47 { pt3dadd( 1.91567, -8.09762, 40.0909, 0.29 ) }
    dend_47 { pt3dadd( 3.40537, -9.28096, 39.7535, 0.29 ) }
    dend_47 { pt3dadd( 4.78186, -10.2941, 39.4404, 0.37 ) }
    dend_47 { pt3dadd( 6.31204, -11.3187, 39.0818, 0.37 ) }
    dend_47 { pt3dadd( 8.16933, -12.4008, 38.6181, 0.59 ) }
    dend_47 { pt3dadd( 8.71868, -12.702, 38.4671, 1.03 ) }
    dend_47 { pt3dadd( 9.20808, -12.9657, 38.3096, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 92/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 0.152825, 5.97728, 17.5975, 0.59 ) }
    dend_44 { pt3dadd( -0.449528, 7.79248, 17.7725, 0.59 ) }
    dend_44 { pt3dadd( -0.880004, 9.08972, 17.8976, 0.29 ) }
    dend_44 { pt3dadd( -1.19616, 10.0425, 17.9894, 0.29 ) }
    dend_44 { pt3dadd( -1.59009, 11.2296, 18.1039, 0.81 ) }
    dend_44 { pt3dadd( -1.89509, 12.1487, 18.1925, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 98/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -18.1022, -6.08051, -3.55595, 0.22 ) }
    dend_40 { pt3dadd( -18.9015, -5.748, -3.78937, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_40 { pt3dadd( -19.9959, -5.32274, -4.16971, 0.22 ) }
    dend_40 { pt3dadd( -20.4083, -5.16594, -4.31075, 0.66 ) }
    dend_40 { pt3dadd( -20.9711, -4.97615, -4.54017, 0.81 ) }
    dend_40 { pt3dadd( -21.5586, -4.79891, -4.83398, 0.52 ) }
    dend_40 { pt3dadd( -22.0314, -4.66649, -5.09893, 0.22 ) }
    dend_40 { pt3dadd( -22.822, -4.53286, -5.5382, 0.22 ) }
    dend_40 { pt3dadd( -23.8538, -4.46359, -6.08897, 1.33 ) }
    dend_40 { pt3dadd( -24.8517, -4.46264, -6.60743, 1.99 ) }
    dend_40 { pt3dadd( -25.8136, -4.53845, -7.07404, 2.21 ) }
    dend_40 { pt3dadd( -26.6795, -4.67469, -7.47438, 2.28 ) }
    dend_40 { pt3dadd( -28.3125, -5.10073, -8.32838, 0.52 ) }
    dend_40 { pt3dadd( -29.3018, -5.45887, -8.89046, 0.44 ) }
    dend_40 { pt3dadd( -29.835, -5.67965, -9.22116, 0.22 ) }
    dend_40 { pt3dadd( -30.7652, -6.06895, -9.82541, 1.25 ) }
    dend_40 { pt3dadd( -31.2619, -6.27492, -10.1648, 1.33 ) }
    dend_40 { pt3dadd( -33.2728, -7.15976, -11.6905, 0.22 ) }
    dend_40 { pt3dadd( -33.8305, -7.40577, -12.1916, 0.22 ) }
    dend_40 { pt3dadd( -34.9253, -7.85494, -13.2598, 2.28 ) }
    dend_40 { pt3dadd( -35.7104, -8.16059, -14.0916, 3.61 ) }
    dend_40 { pt3dadd( -36.0555, -8.27228, -14.4777, 3.61 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 20/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -18.1022, -6.08051, -3.55595, 0.96 ) }
    dend_33 { pt3dadd( -19.2545, -6.91761, -2.21735, 0.96 ) }
    dend_33 { pt3dadd( -19.9245, -7.27604, -1.58025, 1.25 ) }
    dend_33 { pt3dadd( -20.4314, -7.49438, -1.16179, 1.33 ) }
    dend_33 { pt3dadd( -20.9506, -7.67283, -0.771693, 1.33 ) }
    dend_33 { pt3dadd( -21.6845, -7.88116, -0.264792, 0.52 ) }
    dend_33 { pt3dadd( -22.3154, -8.02692, 0.125097, 0.88 ) }
    dend_33 { pt3dadd( -23.0049, -8.05148, 0.33968, 1.33 ) }
    dend_33 { pt3dadd( -23.322, -8.03598, 0.392475, 1.55 ) }
    dend_33 { pt3dadd( -23.75, -7.99508, 0.429444, 1.69 ) }
    dend_33 { pt3dadd( -24.0701, -7.96186, 0.435144, 1.69 ) }
    dend_33 { pt3dadd( -24.7145, -7.92111, 0.41726, 1.18 ) }
    dend_33 { pt3dadd( -25.9149, -7.9347, 0.370349, 0.52 ) }
    dend_33 { pt3dadd( -26.4408, -7.97569, 0.357941, 0.66 ) }
    dend_33 { pt3dadd( -26.966, -8.04343, 0.363189, 0.66 ) }
    dend_33 { pt3dadd( -27.4841, -8.1392, 0.384791, 0.66 ) }
    dend_33 { pt3dadd( -28.1786, -8.28703, 0.431301, 0.81 ) }
    dend_33 { pt3dadd( -29.1818, -8.54718, 0.545831, 1.4 ) }
    dend_33 { pt3dadd( -29.6153, -8.68858, 0.628542, 2.14 ) }
    dend_33 { pt3dadd( -30.0906, -8.847, 0.732121, 2.5 ) }
    dend_33 { pt3dadd( -30.7027, -9.0545, 0.885505, 2.8 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 41/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -34.8097, 2.41, 10.7575, 1.84 ) }
    dend_29 { pt3dadd( -35.485, 1.47485, 11.712, 1.84 ) }
    dend_29 { pt3dadd( -36.0205, 0.733413, 12.4688, 1.18 ) }
    dend_29 { pt3dadd( -36.378, 0.238257, 12.9742, 0.88 ) }
    dend_29 { pt3dadd( -36.7115, -0.223507, 13.4455, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -34.8097, 2.41, 10.7575, 1.4 ) }
    dend_28 { pt3dadd( -35.547, 4.52264, 10.7914, 1.4 ) }
    dend_28 { pt3dadd( -36.1626, 6.19366, 10.8049, 0.81 ) }
    dend_28 { pt3dadd( -36.4948, 6.97031, 10.8254, 0.81 ) }
    dend_28 { pt3dadd( -37.0112, 8.04065, 10.8648, 0.96 ) }
    dend_28 { pt3dadd( -37.3846, 8.74059, 10.8951, 1.11 ) }
    dend_28 { pt3dadd( -37.8132, 9.47381, 10.9293, 1.11 ) }
    dend_28 { pt3dadd( -38.2201, 10.1094, 10.9422, 1.11 ) }
    dend_28 { pt3dadd( -38.8868, 11.0155, 10.9863, 0.52 ) }
    dend_28 { pt3dadd( -39.2406, 11.5169, 11.043, 0.81 ) }
    dend_28 { pt3dadd( -39.5738, 12.0772, 11.1235, 0.81 ) }
    dend_28 { pt3dadd( -39.9541, 12.95, 11.2588, 0.52 ) }
    dend_28 { pt3dadd( -40.1811, 13.7655, 11.3938, 0.52 ) }
    dend_28 { pt3dadd( -40.2775, 14.4982, 11.5281, 0.52 ) }
    dend_28 { pt3dadd( -40.3091, 15.7768, 11.7573, 0.52 ) }
    dend_28 { pt3dadd( -40.2512, 16.7746, 11.9509, 1.33 ) }
    dend_28 { pt3dadd( -40.1749, 17.2917, 12.0611, 1.55 ) }
    dend_28 { pt3dadd( -40.0814, 17.6701, 12.1518, 1.69 ) }
    dend_28 { pt3dadd( -39.8663, 18.371, 12.341, 1.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.42282, 25.3357, -1.67149, 0.44 ) }
    dend_26 { pt3dadd( 2.90047, 26.131, -3.57848, 0.44 ) }
    dend_26 { pt3dadd( 3.06489, 26.4254, -4.22149, 0.52 ) }
    dend_26 { pt3dadd( 3.19082, 26.6922, -4.80657, 0.37 ) }
    dend_26 { pt3dadd( 3.35218, 27.0175, -5.45513, 0.37 ) }
    dend_26 { pt3dadd( 4.04576, 28.3207, -8.1353, 0.88 ) }
    dend_26 { pt3dadd( 4.22669, 28.5901, -8.78121, 1.25 ) }
    dend_26 { pt3dadd( 4.38562, 28.7906, -9.31977, 0.74 ) }
    dend_26 { pt3dadd( 4.70787, 29.2463, -10.5265, 0.44 ) }
    dend_26 { pt3dadd( 4.95957, 29.6178, -11.5305, 2.14 ) }
    dend_26 { pt3dadd( 5.1768, 29.9296, -12.3916, 2.28 ) }
    dend_26 { pt3dadd( 5.82608, 30.6996, -14.63, 0.59 ) }
    dend_26 { pt3dadd( 6.14853, 31.0124, -15.7469, 1.03 ) }
    dend_26 { pt3dadd( 6.61774, 31.4218, -17.733, 1.18 ) }
    dend_26 { pt3dadd( 6.87723, 31.6564, -19.136, 1.4 ) }
    dend_26 { pt3dadd( 7.03934, 31.8138, -20.1731, 1.62 ) }
    dend_26 { pt3dadd( 7.25839, 32.0462, -21.769, 1.84 ) }
    dend_26 { pt3dadd( 7.47284, 32.3287, -23.809, 3.17 ) }
    dend_26 { pt3dadd( 8.03705, 33.2096, -30.4693, 1.4 ) }
    dend_26 { pt3dadd( 8.28606, 33.7719, -34.456, 1.03 ) }
    dend_26 { pt3dadd( 8.37849, 34.1165, -36.6128, 2.14 ) }
    dend_26 { pt3dadd( 8.47645, 34.7778, -40.2015, 1.77 ) }
    dend_26 { pt3dadd( 8.52709, 35.8448, -45.2567, 1.33 ) }
    dend_26 { pt3dadd( 8.52374, 36.0299, -46.036, 1.55 ) }
    dend_26 { pt3dadd( 8.33973, 37.4384, -50.9088, 0.22 ) }
    dend_26 { pt3dadd( 8.28612, 37.6821, -51.6261, 0.22 ) }
    dend_26 { pt3dadd( 8.09896, 38.3323, -53.261, 1.4 ) }
    dend_26 { pt3dadd( 8.00208, 38.6435, -53.8903, 2.14 ) }
    dend_26 { pt3dadd( 7.9082, 38.9474, -54.3823, 2.14 ) }
    dend_26 { pt3dadd( 6.55757, 42.6527, -61.2637, 0.22 ) }
    dend_26 { pt3dadd( 6.29998, 43.3486, -62.4458, 0.22 ) }
    dend_26 { pt3dadd( 5.96967, 44.268, -63.9379, 1.4 ) }
    dend_26 { pt3dadd( 5.86029, 44.5809, -64.425, 1.99 ) }
    dend_26 { pt3dadd( 5.71699, 44.9756, -65.1526, 1.99 ) }
    dend_26 { pt3dadd( 4.11968, 49.9793, -73.7902, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 3.74762, 51.3402, -75.915, 0.22 ) }
    dend_26 { pt3dadd( 3.62017, 51.827, -76.6802, 1.18 ) }
    dend_26 { pt3dadd( 3.47023, 52.3701, -77.6154, 1.47 ) }
    dend_26 { pt3dadd( 1.86541, 58.3279, -88.0525, 0.22 ) }
    dend_26 { pt3dadd( 1.4, 60.1495, -91.1814, 0.22 ) }
    dend_26 { pt3dadd( 1.18994, 61.0212, -92.6387, 2.06 ) }
    dend_26 { pt3dadd( 1.03828, 61.6157, -93.7341, 2.14 ) }
    dend_26 { pt3dadd( 0.164619, 64.996, -100.214, 0.22 ) }
    dend_26 { pt3dadd( 0.0195663, 65.5532, -101.295, 1.33 ) }
    dend_26 { pt3dadd( -0.141299, 66.2618, -102.366, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 2.42282, 25.3357, -1.67149, 0.66 ) }
    dend_21 { pt3dadd( 2.53226, 26.3635, -1.86768, 0.66 ) }
    dend_21 { pt3dadd( 2.56974, 27.181, -2.09916, 0.66 ) }
    dend_21 { pt3dadd( 2.53951, 28.1269, -2.40765, 0.52 ) }
    dend_21 { pt3dadd( 2.42009, 28.9172, -2.70239, 0.44 ) }
    dend_21 { pt3dadd( 2.11038, 30.3717, -3.27961, 1.03 ) }
    dend_21 { pt3dadd( 2.00608, 30.8125, -3.45572, 1.25 ) }
    dend_21 { pt3dadd( 1.87898, 31.2532, -3.65511, 1.4 ) }
    dend_21 { pt3dadd( 1.70631, 31.7765, -3.90501, 1.4 ) }
    dend_21 { pt3dadd( 1.35992, 32.8074, -4.39938, 0.59 ) }
    dend_21 { pt3dadd( 1.19616, 33.426, -4.64176, 0.37 ) }
    dend_21 { pt3dadd( 1.14639, 33.8082, -4.7299, 0.37 ) }
    dend_21 { pt3dadd( 1.1574, 34.5347, -4.87841, 0.81 ) }
    dend_21 { pt3dadd( 1.20247, 34.8994, -4.94116, 0.88 ) }
    dend_21 { pt3dadd( 1.2922, 35.3487, -5.00433, 0.66 ) }
    dend_21 { pt3dadd( 1.40965, 35.8515, -5.05358, 0.29 ) }
    dend_21 { pt3dadd( 1.52528, 36.3488, -5.09976, 0.29 ) }
    dend_21 { pt3dadd( 1.82138, 37.7302, -5.24025, 1.84 ) }
    dend_21 { pt3dadd( 1.94865, 38.4337, -5.3192, 2.95 ) }
    dend_21 { pt3dadd( 2.00749, 38.8589, -5.36929, 3.24 ) }
    dend_21 { pt3dadd( 2.04409, 39.2853, -5.42122, 3.39 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 31/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.1669, 0.754152, -4.70915, 1.03 ) }
    dend_17 { pt3dadd( 16.5267, -1.45498, -5.61828, 1.03 ) }
    dend_17 { pt3dadd( 17.135, -2.55332, -6.12845, 0.66 ) }
    dend_17 { pt3dadd( 17.5623, -3.39657, -6.56996, 0.59 ) }
    dend_17 { pt3dadd( 18.0299, -4.44071, -7.1331, 0.66 ) }
    dend_17 { pt3dadd( 18.2655, -5.03677, -7.453, 0.66 ) }
    dend_17 { pt3dadd( 18.7088, -6.28553, -8.11192, 1.47 ) }
    dend_17 { pt3dadd( 18.8834, -6.96042, -8.50051, 1.92 ) }
    dend_17 { pt3dadd( 18.9974, -7.54673, -8.78165, 2.14 ) }
    dend_17 { pt3dadd( 19.0998, -8.2552, -9.07725, 1.99 ) }
    dend_17 { pt3dadd( 19.2451, -9.31555, -9.41934, 1.55 ) }
    dend_17 { pt3dadd( 19.4817, -10.6842, -9.7028, 0.74 ) }
    dend_17 { pt3dadd( 19.682, -11.6378, -9.79022, 0.52 ) }
    dend_17 { pt3dadd( 20.0274, -12.9975, -9.81458, 0.74 ) }
    dend_17 { pt3dadd( 20.2996, -13.8699, -9.75227, 0.74 ) }
    dend_17 { pt3dadd( 20.6546, -14.8208, -9.62793, 0.66 ) }
    dend_17 { pt3dadd( 20.9847, -15.6034, -9.4564, 1.11 ) }
    dend_17 { pt3dadd( 21.263, -16.2108, -9.28426, 1.62 ) }
    dend_17 { pt3dadd( 21.5647, -16.8361, -9.1036, 1.62 ) }
    dend_17 { pt3dadd( 22.2752, -18.2661, -8.74434, 0.81 ) }
    dend_17 { pt3dadd( 22.8159, -19.3112, -8.49276, 0.59 ) }
    dend_17 { pt3dadd( 23.4626, -20.5543, -8.22219, 0.44 ) }
    dend_17 { pt3dadd( 23.8434, -21.2998, -8.1324, 0.44 ) }
    dend_17 { pt3dadd( 24.4048, -22.3994, -8.08462, 2.06 ) }
    dend_17 { pt3dadd( 24.8099, -23.1887, -8.11122, 3.02 ) }
    dend_17 { pt3dadd( 25.0755, -23.688, -8.17174, 3.61 ) }
    dend_17 { pt3dadd( 25.4495, -24.3618, -8.30508, 3.46 ) }
    dend_17 { pt3dadd( 26.7102, -26.5386, -8.8918, 0.88 ) }
    dend_17 { pt3dadd( 27.1791, -27.3343, -9.12538, 0.66 ) }
    dend_17 { pt3dadd( 27.6742, -28.156, -9.37051, 0.88 ) }
    dend_17 { pt3dadd( 28.0821, -28.8355, -9.56571, 0.88 ) }
    dend_17 { pt3dadd( 28.6545, -29.7691, -9.82621, 0.29 ) }
    dend_17 { pt3dadd( 28.9971, -30.3123, -9.96831, 0.29 ) }
    dend_17 { pt3dadd( 29.5407, -31.1794, -10.1517, 1.47 ) }
    dend_17 { pt3dadd( 30.032, -32.0086, -10.323, 1.99 ) }
    dend_17 { pt3dadd( 30.5068, -32.8599, -10.4889, 1.77 ) }
    dend_17 { pt3dadd( 31.232, -34.2527, -10.7284, 0.22 ) }
    dend_17 { pt3dadd( 31.536, -34.8607, -10.815, 0.22 ) }
    dend_17 { pt3dadd( 31.81, -35.4028, -10.8958, 0.44 ) }
    dend_17 { pt3dadd( 32.395, -36.5218, -11.0733, 0.81 ) }
    dend_17 { pt3dadd( 32.5907, -36.8844, -11.1306, 1.11 ) }
    dend_17 { pt3dadd( 32.9929, -37.594, -11.2389, 0.81 ) }
    dend_17 { pt3dadd( 33.4236, -38.3223, -11.3506, 0.44 ) }
    dend_17 { pt3dadd( 33.9836, -39.2623, -11.5936, 0.29 ) }
    dend_17 { pt3dadd( 34.6128, -40.317, -11.967, 1.84 ) }
    dend_17 { pt3dadd( 35.0491, -41.003, -12.2828, 3.02 ) }
    dend_17 { pt3dadd( 35.3235, -41.4226, -12.4991, 3.61 ) }
    dend_17 { pt3dadd( 35.6945, -41.9903, -12.8122, 3.39 ) }
    dend_17 { pt3dadd( 37.0988, -44.1751, -14.0959, 0.22 ) }
    dend_17 { pt3dadd( 38.1774, -45.9209, -15.1784, 0.22 ) }
    dend_17 { pt3dadd( 38.9493, -47.1868, -16.0198, 1.69 ) }
    dend_17 { pt3dadd( 39.1695, -47.5537, -16.276, 1.69 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 83/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.1669, 0.754152, -4.70915, 4.79 ) }
    dend_1 { pt3dadd( 17.3476, 0.95186, -4.70246, 4.79 ) }
    dend_1 { pt3dadd( 17.9995, 1.01096, -4.70046, 4.42 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 86/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 42.4872, 8.45908, -2.44705, 0.242615 ) }
    axon_1 { pt3dadd( 57.119, 11.7622, -2.44705, 0.242615 ) }
    axon_1 { pt3dadd( 71.7508, 15.0653, -2.44705, 0.242615 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.89509, 12.1487, 18.1925, 0.22 ) }
    dend_46 { pt3dadd( -2.06373, 13.0851, 19.4581, 0.22 ) }
    dend_46 { pt3dadd( -2.16319, 13.7178, 20.3044, 1.33 ) }
    dend_46 { pt3dadd( -2.20267, 13.9867, 20.6458, 1.62 ) }
    dend_46 { pt3dadd( -2.24811, 14.3988, 21.1077, 1.62 ) }
    dend_46 { pt3dadd( -2.34699, 15.8305, 22.5165, 0.81 ) }
    dend_46 { pt3dadd( -2.39283, 16.7009, 23.2885, 0.96 ) }
    dend_46 { pt3dadd( -2.39568, 17.2296, 23.7066, 1.03 ) }
    dend_46 { pt3dadd( -2.39112, 17.7788, 24.0773, 1.03 ) }
    dend_46 { pt3dadd( -2.38972, 18.8245, 24.6398, 0.22 ) }
    dend_46 { pt3dadd( -2.41446, 19.6483, 24.9467, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_46 { pt3dadd( -2.45098, 20.1198, 25.0303, 0.74 ) }
    dend_46 { pt3dadd( -2.47846, 20.3629, 25.0521, 0.74 ) }
    dend_46 { pt3dadd( -2.60196, 21.1756, 25.1043, 0.37 ) }
    dend_46 { pt3dadd( -2.66258, 21.4908, 25.1203, 0.37 ) }
    dend_46 { pt3dadd( -2.78978, 21.9548, 25.1445, 0.66 ) }
    dend_46 { pt3dadd( -2.96236, 22.4813, 25.1729, 0.66 ) }
    dend_46 { pt3dadd( -3.20164, 23.2298, 25.2085, 0.37 ) }
    dend_46 { pt3dadd( -3.36265, 23.7549, 25.2255, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.89509, 12.1487, 18.1925, 0.22 ) }
    dend_45 { pt3dadd( -3.13523, 10.7473, 18.7709, 0.22 ) }
    dend_45 { pt3dadd( -3.62252, 10.0754, 18.8658, 0.22 ) }
    dend_45 { pt3dadd( -3.81453, 9.81068, 18.9032, 0.52 ) }
    dend_45 { pt3dadd( -4.20789, 9.26832, 18.9799, 0.52 ) }
    dend_45 { pt3dadd( -4.65326, 8.65425, 19.0666, 0.22 ) }
    dend_45 { pt3dadd( -5.70795, 7.20007, 19.2721, 1.92 ) }
    dend_45 { pt3dadd( -6.09009, 6.61807, 19.1159, 2.5 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 16/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -36.0555, -8.27228, -14.4777, 1.18 ) }
    dend_42 { pt3dadd( -37.0619, -7.59754, -14.8472, 1.18 ) }
    dend_42 { pt3dadd( -38.2749, -6.93721, -15.3158, 0.22 ) }
    dend_42 { pt3dadd( -38.7811, -6.68669, -15.5202, 0.22 ) }
    dend_42 { pt3dadd( -39.2618, -6.46231, -15.7494, 0.44 ) }
    dend_42 { pt3dadd( -39.7021, -6.26191, -15.9666, 0.44 ) }
    dend_42 { pt3dadd( -40.6391, -5.84485, -16.4426, 0.22 ) }
    dend_42 { pt3dadd( -41.6306, -5.46775, -16.9967, 0.22 ) }
    dend_42 { pt3dadd( -42.4225, -5.1875, -17.482, 0.22 ) }
    dend_42 { pt3dadd( -43.4026, -4.83528, -18.0961, 1.33 ) }
    dend_42 { pt3dadd( -44.1657, -4.54982, -18.5816, 1.55 ) }
    dend_42 { pt3dadd( -44.3539, -4.47965, -18.7005, 1.55 ) }
    dend_42 { pt3dadd( -45.8009, -3.92833, -19.6227, 0.22 ) }
    dend_42 { pt3dadd( -47.2434, -3.37776, -20.514, 0.22 ) }
    dend_42 { pt3dadd( -47.9074, -3.1322, -20.8958, 1.33 ) }
    dend_42 { pt3dadd( -48.3019, -2.98656, -21.1032, 1.62 ) }
    dend_42 { pt3dadd( -49.3831, -2.59404, -21.6902, 0.22 ) }
    dend_42 { pt3dadd( -49.9394, -2.39748, -22.0094, 0.44 ) }
    dend_42 { pt3dadd( -50.3431, -2.28233, -22.2776, 0.37 ) }
    dend_42 { pt3dadd( -50.8268, -2.16064, -22.6296, 0.22 ) }
    dend_42 { pt3dadd( -51.6261, -1.96379, -23.266, 1.69 ) }
    dend_42 { pt3dadd( -52.3466, -1.78693, -23.844, 2.14 ) }
    dend_42 { pt3dadd( -53.1847, -1.55743, -24.502, 2.28 ) }
    dend_42 { pt3dadd( -54.603, -1.15562, -25.6239, 0.66 ) }
    dend_42 { pt3dadd( -55.2849, -0.95291, -26.1804, 0.22 ) }
    dend_42 { pt3dadd( -55.9569, -0.737094, -26.7452, 0.22 ) }
    dend_42 { pt3dadd( -56.6899, -0.477517, -27.366, 0.22 ) }
    dend_42 { pt3dadd( -57.5523, -0.11608, -28.0246, 1.47 ) }
    dend_42 { pt3dadd( -58.1536, 0.176738, -28.5007, 1.77 ) }
    dend_42 { pt3dadd( -58.7588, 0.512959, -29.0333, 1.55 ) }
    dend_42 { pt3dadd( -59.9214, 1.14341, -30.1364, 0.22 ) }
    dend_42 { pt3dadd( -60.3727, 1.39214, -30.5725, 0.22 ) }
    dend_42 { pt3dadd( -61.2148, 1.8686, -31.4182, 1.55 ) }
    dend_42 { pt3dadd( -62.3881, 2.49629, -32.59, 2.06 ) }
    dend_42 { pt3dadd( -62.9307, 2.79084, -33.0729, 1.47 ) }
    dend_42 { pt3dadd( -63.7857, 3.26122, -33.7434, 0.22 ) }
    dend_42 { pt3dadd( -64.3997, 3.60563, -34.1966, 0.88 ) }
    dend_42 { pt3dadd( -64.7781, 3.80821, -34.4597, 1.18 ) }
    dend_42 { pt3dadd( -66.192, 4.51762, -35.4344, 0.22 ) }
    dend_42 { pt3dadd( -67.4901, 5.1036, -36.2852, 0.22 ) }
    dend_42 { pt3dadd( -68.3711, 5.4607, -36.8955, 0.59 ) }
    dend_42 { pt3dadd( -68.6722, 5.57271, -37.1236, 0.59 ) }
    dend_42 { pt3dadd( -69.7731, 5.93092, -37.9822, 1.4 ) }
    dend_42 { pt3dadd( -70.4187, 6.1222, -38.4825, 1.62 ) }
    dend_42 { pt3dadd( -71.8915, 6.48288, -39.6127, 0.22 ) }
    dend_42 { pt3dadd( -72.5953, 6.61912, -40.1847, 0.59 ) }
    dend_42 { pt3dadd( -72.9583, 6.6813, -40.4874, 0.74 ) }
    dend_42 { pt3dadd( -73.8514, 6.83829, -41.2226, 0.22 ) }
    dend_42 { pt3dadd( -74.5773, 6.98902, -41.8252, 1.62 ) }
    dend_42 { pt3dadd( -75.0486, 7.10541, -42.1761, 1.84 ) }
    dend_42 { pt3dadd( -75.5877, 7.28885, -42.505, 1.84 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -36.0555, -8.27228, -14.4777, 3.76 ) }
    dend_41 { pt3dadd( -36.5025, -8.37431, -15.0935, 3.76 ) }
    dend_41 { pt3dadd( -37.4458, -8.59702, -16.1885, 2.8 ) }
    dend_41 { pt3dadd( -38.4492, -8.82607, -17.2266, 2.06 ) }
    dend_41 { pt3dadd( -39.3898, -9.03774, -18.1229, 1.25 ) }
    dend_41 { pt3dadd( -39.8035, -9.13009, -18.4759, 0.96 ) }
    dend_41 { pt3dadd( -40.5377, -9.291, -19.0644, 0.22 ) }
    dend_41 { pt3dadd( -41.1338, -9.40872, -19.4431, 1.33 ) }
    dend_41 { pt3dadd( -41.7163, -9.50727, -19.7331, 1.84 ) }
    dend_41 { pt3dadd( -42.1989, -9.57551, -19.9383, 1.92 ) }
    dend_41 { pt3dadd( -42.9462, -9.65779, -20.2665, 0.22 ) }
    dend_41 { pt3dadd( -43.7292, -9.71602, -20.7122, 0.22 ) }
    dend_41 { pt3dadd( -44.3577, -9.75797, -21.1379, 1.11 ) }
    dend_41 { pt3dadd( -44.8532, -9.83258, -21.502, 1.55 ) }
    dend_41 { pt3dadd( -45.3507, -9.95371, -21.854, 1.84 ) }
    dend_41 { pt3dadd( -45.8826, -10.0854, -22.2035, 1.69 ) }
    dend_41 { pt3dadd( -46.9708, -10.3487, -22.909, 0.22 ) }
    dend_41 { pt3dadd( -47.8184, -10.5679, -23.3627, 0.22 ) }
    dend_41 { pt3dadd( -49.0079, -10.8914, -23.8878, 0.22 ) }
    dend_41 { pt3dadd( -50.0909, -11.1988, -24.212, 0.66 ) }
    dend_41 { pt3dadd( -51.2949, -11.5267, -24.4181, 2.21 ) }
    dend_41 { pt3dadd( -52.0194, -11.7145, -24.4743, 2.65 ) }
    dend_41 { pt3dadd( -53.2693, -12.0049, -24.4677, 1.47 ) }
    dend_41 { pt3dadd( -53.8894, -12.1341, -24.474, 0.22 ) }
    dend_41 { pt3dadd( -55.3296, -12.3856, -24.5596, 0.22 ) }
    dend_41 { pt3dadd( -56.4941, -12.6166, -24.6871, 1.84 ) }
    dend_41 { pt3dadd( -56.7532, -12.6777, -24.7255, 2.43 ) }
    dend_41 { pt3dadd( -57.2901, -12.8073, -24.8264, 1.77 ) }
    dend_41 { pt3dadd( -58.6534, -13.1229, -25.1876, 0.22 ) }
    dend_41 { pt3dadd( -59.5351, -13.3339, -25.4555, 0.22 ) }
    dend_41 { pt3dadd( -60.4094, -13.5395, -25.7528, 0.66 ) }
    dend_41 { pt3dadd( -60.7038, -13.6101, -25.8623, 0.66 ) }
    dend_41 { pt3dadd( -61.4468, -13.7846, -26.2116, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -62.3347, -14.0229, -26.6834, 2.06 ) }
    dend_41 { pt3dadd( -62.7808, -14.1615, -26.907, 2.73 ) }
    dend_41 { pt3dadd( -63.1097, -14.2705, -27.0712, 3.09 ) }
    dend_41 { pt3dadd( -63.6976, -14.4687, -27.376, 2.87 ) }
    dend_41 { pt3dadd( -65.8865, -15.197, -28.5663, 0.29 ) }
    dend_41 { pt3dadd( -67.2355, -15.6358, -29.2835, 0.22 ) }
    dend_41 { pt3dadd( -69.1868, -16.2562, -30.2897, 0.22 ) }
    dend_41 { pt3dadd( -69.9914, -16.5069, -30.6554, 2.14 ) }
    dend_41 { pt3dadd( -70.3878, -16.6305, -30.8149, 2.65 ) }
    dend_41 { pt3dadd( -71.0835, -16.8451, -31.0585, 2.65 ) }
    dend_41 { pt3dadd( -72.6916, -17.3139, -31.5047, 0.22 ) }
    dend_41 { pt3dadd( -73.5536, -17.5335, -31.7491, 0.22 ) }
    dend_41 { pt3dadd( -74.5485, -17.7724, -32.049, 1.11 ) }
    dend_41 { pt3dadd( -74.861, -17.8488, -32.1555, 1.47 ) }
    dend_41 { pt3dadd( -75.5332, -18.0066, -32.4161, 1.47 ) }
    dend_41 { pt3dadd( -76.7468, -18.2628, -32.9691, 0.15 ) }
    dend_41 { pt3dadd( -77.0727, -18.3202, -33.1618, 0.44 ) }
    dend_41 { pt3dadd( -77.293, -18.3502, -33.3213, 0.66 ) }
    dend_41 { pt3dadd( -78.5915, -18.5092, -34.3001, 0.29 ) }
    dend_41 { pt3dadd( -79.5457, -18.6194, -34.9689, 1.92 ) }
    dend_41 { pt3dadd( -80.0646, -18.6696, -35.3177, 2.73 ) }
    dend_41 { pt3dadd( -80.5353, -18.7148, -35.6305, 2.87 ) }
    dend_41 { pt3dadd( -82.6351, -18.9348, -36.9356, 0.22 ) }
    dend_41 { pt3dadd( -84.006, -19.1092, -37.6613, 0.22 ) }
    dend_41 { pt3dadd( -84.9242, -19.2505, -38.0474, 1.69 ) }
    dend_41 { pt3dadd( -85.4807, -19.3514, -38.2374, 2.14 ) }
    dend_41 { pt3dadd( -86.0292, -19.4701, -38.3821, 1.92 ) }
    dend_41 { pt3dadd( -86.6637, -19.6354, -38.4886, 1.33 ) }
    dend_41 { pt3dadd( -88.2667, -20.1349, -38.5641, 0.22 ) }
    dend_41 { pt3dadd( -88.873, -20.3446, -38.5802, 0.96 ) }
    dend_41 { pt3dadd( -89.2924, -20.5049, -38.595, 1.25 ) }
    dend_41 { pt3dadd( -89.7182, -20.6771, -38.5984, 1.11 ) }
    dend_41 { pt3dadd( -90.9037, -21.1767, -38.5712, 0.22 ) }
    dend_41 { pt3dadd( -91.6172, -21.48, -38.6193, 1.92 ) }
    dend_41 { pt3dadd( -92.1279, -21.6943, -38.7048, 2.06 ) }
    dend_41 { pt3dadd( -92.6546, -21.9032, -38.8411, 1.84 ) }
    dend_41 { pt3dadd( -93.6081, -22.2739, -39.1517, 0.37 ) }
    dend_41 { pt3dadd( -94.2972, -22.5469, -39.4304, 0.22 ) }
    dend_41 { pt3dadd( -96.1378, -23.2951, -40.3384, 1.11 ) }
    dend_41 { pt3dadd( -96.58, -23.4817, -40.5858, 1.11 ) }
    dend_41 { pt3dadd( -97.6341, -23.9235, -41.2311, 0.22 ) }
    dend_41 { pt3dadd( -98.6192, -24.3271, -41.8781, 0.22 ) }
    dend_41 { pt3dadd( -99.5758, -24.7112, -42.5338, 1.69 ) }
    dend_41 { pt3dadd( -100.018, -24.8855, -42.8307, 2.14 ) }
    dend_41 { pt3dadd( -100.374, -25.0274, -43.0593, 2.14 ) }
    dend_41 { pt3dadd( -101.443, -25.4244, -43.7751, 0.22 ) }
    dend_41 { pt3dadd( -102.679, -25.8519, -44.6313, 0.22 ) }
    dend_41 { pt3dadd( -103.285, -26.0419, -45.0459, 1.99 ) }
    dend_41 { pt3dadd( -103.56, -26.1217, -45.2217, 2.58 ) }
    dend_41 { pt3dadd( -104.558, -26.3981, -45.8319, 1.99 ) }
    dend_41 { pt3dadd( -106.061, -26.7514, -46.5211, 0.22 ) }
    dend_41 { pt3dadd( -106.557, -26.8567, -46.6942, 1.47 ) }
    dend_41 { pt3dadd( -106.887, -26.921, -46.7961, 1.69 ) }
    dend_41 { pt3dadd( -107.407, -27.0157, -46.9492, 1.69 ) }
    dend_41 { pt3dadd( -109.51, -27.3758, -47.5092, 0.22 ) }
    dend_41 { pt3dadd( -113.371, -28.0014, -48.4237, 0.22 ) }
    dend_41 { pt3dadd( -114.892, -28.2284, -48.7744, 1.84 ) }
    dend_41 { pt3dadd( -115.456, -28.3124, -48.9092, 2.14 ) }
    dend_41 { pt3dadd( -115.857, -28.3722, -49.0043, 2.14 ) }
    dend_41 { pt3dadd( -117.449, -28.6201, -49.3593, 0.22 ) }
    dend_41 { pt3dadd( -117.949, -28.6987, -49.4682, 0.96 ) }
    dend_41 { pt3dadd( -118.43, -28.7719, -49.6055, 1.11 ) }
    dend_41 { pt3dadd( -120.495, -29.056, -50.1902, 0.22 ) }
    dend_41 { pt3dadd( -121.413, -29.1755, -50.41, 0.22 ) }
    dend_41 { pt3dadd( -122.224, -29.274, -50.5825, 1.69 ) }
    dend_41 { pt3dadd( -122.872, -29.3519, -50.6978, 2.21 ) }
    dend_41 { pt3dadd( -123.636, -29.4477, -50.7975, 2.28 ) }
    dend_41 { pt3dadd( -125.001, -29.6378, -50.8886, 0.29 ) }
    dend_41 { pt3dadd( -125.644, -29.7354, -50.8946, 1.18 ) }
    dend_41 { pt3dadd( -126.143, -29.8236, -50.8968, 1.33 ) }
    dend_41 { pt3dadd( -127.899, -30.161, -50.9941, 0.22 ) }
    dend_41 { pt3dadd( -129.375, -30.4886, -51.1213, 0.22 ) }
    dend_41 { pt3dadd( -130.348, -30.7276, -51.2332, 1.62 ) }
    dend_41 { pt3dadd( -130.71, -30.8242, -51.2919, 2.14 ) }
    dend_41 { pt3dadd( -131.149, -30.9476, -51.3807, 2.14 ) }
    dend_41 { pt3dadd( -132.921, -31.4606, -51.7737, 0.22 ) }
    dend_41 { pt3dadd( -133.56, -31.6488, -51.9346, 0.22 ) }
    dend_41 { pt3dadd( -134.136, -31.8188, -52.1023, 1.25 ) }
    dend_41 { pt3dadd( -134.683, -31.9727, -52.2623, 1.4 ) }
    dend_41 { pt3dadd( -135.588, -32.2102, -52.5101, 0.22 ) }
    dend_41 { pt3dadd( -136.063, -32.3187, -52.6301, 0.81 ) }
    dend_41 { pt3dadd( -136.422, -32.3824, -52.7321, 0.81 ) }
    dend_41 { pt3dadd( -137.607, -32.5362, -53.1754, 0.22 ) }
    dend_41 { pt3dadd( -138.184, -32.5943, -53.427, 1.62 ) }
    dend_41 { pt3dadd( -138.697, -32.6322, -53.6651, 1.99 ) }
    dend_41 { pt3dadd( -139.075, -32.6486, -53.8527, 1.99 ) }
    dend_41 { pt3dadd( -140.973, -32.7066, -54.7934, 0.22 ) }
    dend_41 { pt3dadd( -141.715, -32.7192, -55.1431, 0.22 ) }
    dend_41 { pt3dadd( -142.236, -32.7134, -55.3683, 1.03 ) }
    dend_41 { pt3dadd( -142.582, -32.7067, -55.5107, 1.03 ) }
    dend_41 { pt3dadd( -144.141, -32.6769, -56.0781, 0.22 ) }
    dend_41 { pt3dadd( -144.511, -32.6683, -56.189, 0.22 ) }
    dend_41 { pt3dadd( -145.115, -32.6413, -56.3453, 0.81 ) }
    dend_41 { pt3dadd( -145.586, -32.6141, -56.4739, 1.11 ) }
    dend_41 { pt3dadd( -146.707, -32.5498, -56.8388, 0.22 ) }
    dend_41 { pt3dadd( -147.295, -32.5204, -57.0385, 0.22 ) }
    dend_41 { pt3dadd( -148.613, -32.4703, -57.483, 0.22 ) }
    dend_41 { pt3dadd( -149.6, -32.4406, -57.8284, 2.28 ) }
    dend_41 { pt3dadd( -150.094, -32.4339, -58.0202, 2.73 ) }
    dend_41 { pt3dadd( -151.399, -32.4408, -58.5754, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_41 { pt3dadd( -152.547, -32.4569, -59.0873, 0.22 ) }
    dend_41 { pt3dadd( -152.99, -32.4745, -59.3229, 0.66 ) }
    dend_41 { pt3dadd( -153.266, -32.4908, -59.4856, 0.66 ) }
    dend_41 { pt3dadd( -154.197, -32.5665, -60.0183, 0.22 ) }
    dend_41 { pt3dadd( -154.69, -32.6196, -60.3124, 1.25 ) }
    dend_41 { pt3dadd( -155.164, -32.6847, -60.629, 1.47 ) }
    dend_41 { pt3dadd( -156.575, -32.929, -61.7423, 0.22 ) }
    dend_41 { pt3dadd( -157.093, -33.0294, -62.1528, 0.74 ) }
    dend_41 { pt3dadd( -157.599, -33.1337, -62.5582, 1.03 ) }
    dend_41 { pt3dadd( -158.204, -33.2687, -63.0597, 1.25 ) }
    dend_41 { pt3dadd( -159.602, -33.5996, -64.1737, 0.22 ) }
    dend_41 { pt3dadd( -160.726, -33.8618, -65.0028, 0.22 ) }
    dend_41 { pt3dadd( -161.501, -34.0397, -65.5332, 1.55 ) }
    dend_41 { pt3dadd( -162.178, -34.1838, -65.9857, 1.84 ) }
    dend_41 { pt3dadd( -163.554, -34.3977, -66.9109, 0.22 ) }
    dend_41 { pt3dadd( -164.93, -34.5422, -67.7998, 0.22 ) }
    dend_41 { pt3dadd( -165.903, -34.5996, -68.3886, 1.69 ) }
    dend_41 { pt3dadd( -166.306, -34.6035, -68.6206, 2.14 ) }
    dend_41 { pt3dadd( -166.761, -34.5774, -68.8888, 2.14 ) }
    dend_41 { pt3dadd( -168.929, -34.3228, -70.1507, 0.22 ) }
    dend_41 { pt3dadd( -169.577, -34.2055, -70.5314, 0.22 ) }
    dend_41 { pt3dadd( -169.861, -34.1407, -70.7171, 0.81 ) }
    dend_41 { pt3dadd( -170.085, -34.098, -70.8504, 0.96 ) }
    dend_41 { pt3dadd( -171.784, -33.8188, -71.7125, 0.22 ) }
    dend_41 { pt3dadd( -172.531, -33.7134, -72.0389, 1.33 ) }
    dend_41 { pt3dadd( -172.891, -33.6761, -72.1536, 1.69 ) }
    dend_41 { pt3dadd( -173.399, -33.6363, -72.2965, 1.69 ) }
    dend_41 { pt3dadd( -176.124, -33.5059, -72.9715, 0.22 ) }
    dend_41 { pt3dadd( -176.614, -33.4986, -73.0671, 0.66 ) }
    dend_41 { pt3dadd( -176.99, -33.5071, -73.1174, 0.66 ) }
    dend_41 { pt3dadd( -178.863, -33.5714, -73.3238, 0.22 ) }
    dend_41 { pt3dadd( -179.251, -33.5813, -73.3774, 0.96 ) }
    dend_41 { pt3dadd( -179.808, -33.5827, -73.4681, 1.25 ) }
    dend_41 { pt3dadd( -181.033, -33.5425, -73.7287, 0.22 ) }
    dend_41 { pt3dadd( -181.485, -33.5155, -73.8543, 0.52 ) }
    dend_41 { pt3dadd( -181.752, -33.4873, -73.9442, 0.74 ) }
    dend_41 { pt3dadd( -183.114, -33.3272, -74.4143, 0.22 ) }
    dend_41 { pt3dadd( -183.917, -33.2457, -74.6736, 1.69 ) }
    dend_41 { pt3dadd( -184.135, -33.2251, -74.7419, 2.21 ) }
    dend_41 { pt3dadd( -184.777, -33.1809, -74.9342, 2.21 ) }
    dend_41 { pt3dadd( -187.481, -33.0787, -75.6655, 0.22 ) }
    dend_41 { pt3dadd( -189.198, -33.0458, -76.0818, 0.22 ) }
    dend_41 { pt3dadd( -189.884, -33.0545, -76.2213, 0.59 ) }
    dend_41 { pt3dadd( -190.097, -33.0628, -76.263, 0.59 ) }
    dend_41 { pt3dadd( -191.347, -33.1377, -76.4914, 0.22 ) }
    dend_41 { pt3dadd( -191.872, -33.189, -76.5706, 0.96 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 46/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -30.7027, -9.0545, 0.885505, 0.59 ) }
    dend_37 { pt3dadd( -31.2949, -10.3151, 1.13296, 0.59 ) }
    dend_37 { pt3dadd( -31.8071, -11.2096, 1.17488, 0.37 ) }
    dend_37 { pt3dadd( -32.1428, -11.7127, 1.14714, 0.29 ) }
    dend_37 { pt3dadd( -32.4192, -12.0816, 1.09465, 0.29 ) }
    dend_37 { pt3dadd( -32.8357, -12.5917, 0.998089, 0.52 ) }
    dend_37 { pt3dadd( -33.4682, -13.3033, 0.847004, 0.66 ) }
    dend_37 { pt3dadd( -33.9801, -13.7878, 0.655911, 0.66 ) }
    dend_37 { pt3dadd( -34.5012, -14.2391, 0.442235, 0.59 ) }
    dend_37 { pt3dadd( -34.9804, -14.6248, 0.248063, 0.66 ) }
    dend_37 { pt3dadd( -35.414, -14.9644, 0.0753307, 0.44 ) }
    dend_37 { pt3dadd( -36.0712, -15.485, -0.180686, 0.29 ) }
    dend_37 { pt3dadd( -37.4286, -16.5983, -0.668363, 3.39 ) }
    dend_37 { pt3dadd( -37.883, -16.9733, -0.82484, 4.13 ) }
    dend_37 { pt3dadd( -38.2795, -17.3031, -0.968809, 4.13 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -30.7027, -9.0545, 0.885505, 0.29 ) }
    dend_34 { pt3dadd( -32.7104, -8.29413, -0.925891, 0.29 ) }
    dend_34 { pt3dadd( -32.9913, -8.17795, -1.17247, 0.66 ) }
    dend_34 { pt3dadd( -34.1916, -7.67874, -2.2321, 0.44 ) }
    dend_34 { pt3dadd( -34.6402, -7.49368, -2.61384, 0.37 ) }
    dend_34 { pt3dadd( -35.6901, -7.08172, -3.47906, 0.37 ) }
    dend_34 { pt3dadd( -37.1158, -6.5847, -4.63133, 1.03 ) }
    dend_34 { pt3dadd( -37.5641, -6.45177, -4.95788, 1.4 ) }
    dend_34 { pt3dadd( -38.249, -6.3086, -5.42722, 1.55 ) }
    dend_34 { pt3dadd( -38.8255, -6.2293, -5.79029, 0.44 ) }
    dend_34 { pt3dadd( -39.4871, -6.1853, -6.22065, 0.22 ) }
    dend_34 { pt3dadd( -40.2846, -6.15482, -6.74351, 0.22 ) }
    dend_34 { pt3dadd( -41.153, -6.09244, -7.29195, 0.44 ) }
    dend_34 { pt3dadd( -41.7979, -6.00611, -7.7355, 0.66 ) }
    dend_34 { pt3dadd( -42.1931, -5.92917, -8.02727, 0.88 ) }
    dend_34 { pt3dadd( -43.0164, -5.72765, -8.68319, 0.88 ) }
    dend_34 { pt3dadd( -44.2775, -5.34977, -9.69977, 2.21 ) }
    dend_34 { pt3dadd( -44.9473, -5.11458, -10.2518, 2.87 ) }
    dend_34 { pt3dadd( -45.5378, -4.89084, -10.7471, 3.09 ) }
    dend_34 { pt3dadd( -45.8791, -4.77023, -11.053, 3.24 ) }
    dend_34 { pt3dadd( -47.407, -4.30246, -12.4732, 0.52 ) }
    dend_34 { pt3dadd( -47.7436, -4.21479, -12.7639, 0.66 ) }
    dend_34 { pt3dadd( -48.2325, -4.10026, -13.1414, 0.66 ) }
    dend_34 { pt3dadd( -48.7975, -3.9529, -13.491, 0.52 ) }
    dend_34 { pt3dadd( -50.5538, -3.4283, -14.323, 0.22 ) }
    dend_34 { pt3dadd( -51.3735, -3.15768, -14.5957, 0.22 ) }
    dend_34 { pt3dadd( -52.6931, -2.65066, -14.9404, 0.81 ) }
    dend_34 { pt3dadd( -53.444, -2.35735, -15.115, 0.22 ) }
    dend_34 { pt3dadd( -54.5308, -1.9215, -15.3348, 1.92 ) }
    dend_34 { pt3dadd( -55.0038, -1.7273, -15.4313, 2.5 ) }
    dend_34 { pt3dadd( -55.471, -1.53825, -15.5606, 2.73 ) }
    dend_34 { pt3dadd( -57.552, -0.722817, -16.4326, 0.29 ) }
    dend_34 { pt3dadd( -58.2984, -0.449689, -16.8311, 0.22 ) }
    dend_34 { pt3dadd( -59.0995, -0.175727, -17.3126, 1.77 ) }
    dend_34 { pt3dadd( -59.7372, 0.0308959, -17.7282, 2.28 ) }
    dend_34 { pt3dadd( -61.326, 0.530159, -18.7861, 0.22 ) }
    dend_34 { pt3dadd( -62.035, 0.745929, -19.2493, 0.22 ) }
    dend_34 { pt3dadd( -62.4546, 0.862287, -19.5153, 0.66 ) }
    dend_34 { pt3dadd( -62.8752, 0.98502, -19.7905, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -63.9823, 1.31442, -20.4984, 0.22 ) }
    dend_34 { pt3dadd( -64.7421, 1.56521, -20.9565, 1.33 ) }
    dend_34 { pt3dadd( -65.1874, 1.74535, -21.2124, 2.36 ) }
    dend_34 { pt3dadd( -65.9327, 2.08541, -21.6621, 2.36 ) }
    dend_34 { pt3dadd( -67.4699, 2.85247, -22.6554, 0.22 ) }
    dend_34 { pt3dadd( -68.6491, 3.47385, -23.517, 0.22 ) }
    dend_34 { pt3dadd( -69.633, 4.01273, -24.2292, 0.22 ) }
    dend_34 { pt3dadd( -70.8822, 4.71213, -25.0408, 2.28 ) }
    dend_34 { pt3dadd( -71.6112, 5.12001, -25.4827, 2.8 ) }
    dend_34 { pt3dadd( -72.1805, 5.43987, -25.8064, 3.02 ) }
    dend_34 { pt3dadd( -74.5876, 6.73266, -27.124, 0.22 ) }
    dend_34 { pt3dadd( -76.4871, 7.7117, -28.1017, 0.22 ) }
    dend_34 { pt3dadd( -77.9895, 8.43424, -28.8245, 1.84 ) }
    dend_34 { pt3dadd( -78.6777, 8.74118, -29.1207, 2.65 ) }
    dend_34 { pt3dadd( -79.3726, 9.04308, -29.39, 2.65 ) }
    dend_34 { pt3dadd( -81.5497, 9.95958, -30.1604, 0.22 ) }
    dend_34 { pt3dadd( -82.4001, 10.3059, -30.4519, 0.44 ) }
    dend_34 { pt3dadd( -82.739, 10.4406, -30.5931, 0.44 ) }
    dend_34 { pt3dadd( -83.4093, 10.7089, -30.8844, 0.15 ) }
    dend_34 { pt3dadd( -84.3191, 11.0957, -31.2199, 1.62 ) }
    dend_34 { pt3dadd( -84.9376, 11.3709, -31.4205, 2.36 ) }
    dend_34 { pt3dadd( -85.6501, 11.7083, -31.636, 2.36 ) }
    dend_34 { pt3dadd( -87.1903, 12.3735, -32.1179, 0.22 ) }
    dend_34 { pt3dadd( -88.2432, 12.7903, -32.4394, 0.22 ) }
    dend_34 { pt3dadd( -89.1284, 13.1139, -32.6929, 1.03 ) }
    dend_34 { pt3dadd( -89.8447, 13.353, -32.8684, 1.55 ) }
    dend_34 { pt3dadd( -90.432, 13.5208, -32.9942, 1.55 ) }
    dend_34 { pt3dadd( -91.8545, 13.7851, -33.2672, 0.22 ) }
    dend_34 { pt3dadd( -92.5233, 13.838, -33.4129, 0.22 ) }
    dend_34 { pt3dadd( -92.968, 13.8434, -33.5167, 1.33 ) }
    dend_34 { pt3dadd( -93.4707, 13.8294, -33.6477, 1.62 ) }
    dend_34 { pt3dadd( -94.0047, 13.808, -33.7965, 1.33 ) }
    dend_34 { pt3dadd( -96.1269, 13.724, -34.4201, 0.22 ) }
    dend_34 { pt3dadd( -97.2182, 13.6999, -34.7502, 1.03 ) }
    dend_34 { pt3dadd( -97.7279, 13.6909, -34.9112, 1.55 ) }
    dend_34 { pt3dadd( -98.2418, 13.6853, -35.0796, 1.55 ) }
    dend_34 { pt3dadd( -99.5671, 13.6795, -35.4958, 0.22 ) }
    dend_34 { pt3dadd( -100.418, 13.6927, -35.7059, 0.22 ) }
    dend_34 { pt3dadd( -101.35, 13.7275, -35.8521, 1.62 ) }
    dend_34 { pt3dadd( -101.991, 13.7587, -35.9072, 2.36 ) }
    dend_34 { pt3dadd( -102.374, 13.7947, -35.9161, 2.58 ) }
    dend_34 { pt3dadd( -103.667, 13.9742, -35.8748, 0.59 ) }
    dend_34 { pt3dadd( -104.984, 14.2322, -35.7902, 0.22 ) }
    dend_34 { pt3dadd( -105.454, 14.3582, -35.7563, 0.66 ) }
    dend_34 { pt3dadd( -105.884, 14.5228, -35.7006, 0.66 ) }
    dend_34 { pt3dadd( -107.371, 15.2675, -35.4837, 0.22 ) }
    dend_34 { pt3dadd( -107.892, 15.5989, -35.4299, 0.59 ) }
    dend_34 { pt3dadd( -108.381, 15.9965, -35.5393, 0.59 ) }
    dend_34 { pt3dadd( -108.965, 16.5394, -35.8648, 0.22 ) }
    dend_34 { pt3dadd( -109.936, 17.4927, -36.5862, 2.28 ) }
    dend_34 { pt3dadd( -110.423, 17.9883, -37.0273, 2.73 ) }
    dend_34 { pt3dadd( -110.942, 18.5027, -37.5804, 3.02 ) }
    dend_34 { pt3dadd( -113.024, 20.4372, -39.847, 0.22 ) }
    dend_34 { pt3dadd( -113.49, 20.8416, -40.3521, 0.22 ) }
    dend_34 { pt3dadd( -113.947, 21.1967, -40.8482, 0.96 ) }
    dend_34 { pt3dadd( -114.338, 21.4722, -41.2578, 1.25 ) }
    dend_34 { pt3dadd( -115.438, 22.2182, -42.2543, 0.22 ) }
    dend_34 { pt3dadd( -115.918, 22.5373, -42.6164, 0.81 ) }
    dend_34 { pt3dadd( -116.27, 22.7634, -42.804, 1.11 ) }
    dend_34 { pt3dadd( -117.463, 23.5216, -43.3983, 0.22 ) }
    dend_34 { pt3dadd( -117.866, 23.7829, -43.5989, 0.59 ) }
    dend_34 { pt3dadd( -118.22, 24.0156, -43.7742, 0.59 ) }
    dend_34 { pt3dadd( -119.079, 24.5924, -44.2036, 0.22 ) }
    dend_34 { pt3dadd( -119.721, 25.0161, -44.521, 0.52 ) }
    dend_34 { pt3dadd( -120.606, 25.5979, -44.8964, 0.22 ) }
    dend_34 { pt3dadd( -121.731, 26.3274, -45.2605, 2.14 ) }
    dend_34 { pt3dadd( -122.351, 26.7208, -45.4492, 2.8 ) }
    dend_34 { pt3dadd( -122.763, 26.9812, -45.5684, 2.8 ) }
    dend_34 { pt3dadd( -124.84, 28.3361, -46.1289, 0.22 ) }
    dend_34 { pt3dadd( -126.326, 29.3368, -46.5304, 0.22 ) }
    dend_34 { pt3dadd( -127.258, 29.9991, -46.7596, 0.96 ) }
    dend_34 { pt3dadd( -127.74, 30.3618, -46.8638, 1.33 ) }
    dend_34 { pt3dadd( -128.099, 30.649, -46.9451, 1.33 ) }
    dend_34 { pt3dadd( -129.221, 31.5781, -47.257, 0.22 ) }
    dend_34 { pt3dadd( -130.101, 32.3355, -47.5795, 0.22 ) }
    dend_34 { pt3dadd( -131.137, 33.2149, -48.0425, 1.84 ) }
    dend_34 { pt3dadd( -131.536, 33.5477, -48.2415, 2.36 ) }
    dend_34 { pt3dadd( -132.001, 33.9217, -48.484, 2.36 ) }
    dend_34 { pt3dadd( -133.62, 35.1426, -49.3967, 0.22 ) }
    dend_34 { pt3dadd( -134.369, 35.6767, -49.8453, 0.22 ) }
    dend_34 { pt3dadd( -135.042, 36.1437, -50.2609, 1.25 ) }
    dend_34 { pt3dadd( -135.45, 36.4208, -50.511, 1.69 ) }
    dend_34 { pt3dadd( -136.092, 36.8595, -50.8868, 1.77 ) }
    dend_34 { pt3dadd( -137.978, 38.1594, -51.9456, 0.22 ) }
    dend_34 { pt3dadd( -138.314, 38.3973, -52.138, 0.37 ) }
    dend_34 { pt3dadd( -138.584, 38.5897, -52.2859, 0.37 ) }
    dend_34 { pt3dadd( -139.414, 39.1565, -52.7771, 0.22 ) }
    dend_34 { pt3dadd( -140.113, 39.6215, -53.1814, 1.33 ) }
    dend_34 { pt3dadd( -140.692, 39.992, -53.5319, 1.62 ) }
    dend_34 { pt3dadd( -142.064, 40.8313, -54.4166, 0.22 ) }
    dend_34 { pt3dadd( -142.576, 41.1286, -54.7584, 0.52 ) }
    dend_34 { pt3dadd( -144.491, 42.2006, -56.0361, 0.22 ) }
    dend_34 { pt3dadd( -145.5, 42.7396, -56.7068, 1.47 ) }
    dend_34 { pt3dadd( -146.113, 43.063, -57.0863, 2.28 ) }
    dend_34 { pt3dadd( -146.547, 43.2881, -57.3296, 2.8 ) }
    dend_34 { pt3dadd( -148.578, 44.3313, -58.3947, 0.22 ) }
    dend_34 { pt3dadd( -149.184, 44.6349, -58.6928, 0.44 ) }
    dend_34 { pt3dadd( -149.781, 44.9277, -58.9544, 0.44 ) }
    dend_34 { pt3dadd( -150.549, 45.2923, -59.3111, 0.96 ) }
    dend_34 { pt3dadd( -150.948, 45.4881, -59.4949, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -151.614, 45.813, -59.816, 1.4 ) }
    dend_34 { pt3dadd( -153.01, 46.4975, -60.4909, 0.22 ) }
    dend_34 { pt3dadd( -154.13, 47.0264, -60.9564, 0.88 ) }
    dend_34 { pt3dadd( -155.064, 47.4467, -61.3091, 0.22 ) }
    dend_34 { pt3dadd( -156.069, 47.8833, -61.6597, 2.06 ) }
    dend_34 { pt3dadd( -156.649, 48.1352, -61.8377, 2.8 ) }
    dend_34 { pt3dadd( -157.239, 48.3948, -61.9755, 2.8 ) }
    dend_34 { pt3dadd( -160.684, 49.9545, -62.5657, 0.22 ) }
    dend_34 { pt3dadd( -161.655, 50.4088, -62.693, 0.22 ) }
    dend_34 { pt3dadd( -162.318, 50.7376, -62.7428, 1.55 ) }
    dend_34 { pt3dadd( -162.992, 51.0903, -62.778, 2.06 ) }
    dend_34 { pt3dadd( -165.015, 52.2263, -62.854, 0.22 ) }
    dend_34 { pt3dadd( -165.904, 52.7514, -62.8936, 0.37 ) }
    dend_34 { pt3dadd( -166.576, 53.1889, -62.9325, 0.22 ) }
    dend_34 { pt3dadd( -168.029, 54.1629, -63.0468, 2.28 ) }
    dend_34 { pt3dadd( -168.749, 54.6483, -63.1437, 3.02 ) }
    dend_34 { pt3dadd( -168.92, 54.762, -63.1803, 3.02 ) }
    dend_34 { pt3dadd( -170.757, 55.9841, -63.7326, 0.22 ) }
    dend_34 { pt3dadd( -171.374, 56.3765, -64.0035, 0.22 ) }
    dend_34 { pt3dadd( -171.999, 56.748, -64.3377, 1.03 ) }
    dend_34 { pt3dadd( -172.444, 56.9986, -64.6046, 1.03 ) }
    dend_34 { pt3dadd( -173.36, 57.4733, -65.2204, 0.22 ) }
    dend_34 { pt3dadd( -173.777, 57.6824, -65.5349, 0.66 ) }
    dend_34 { pt3dadd( -175.639, 58.5935, -67.0067, 0.22 ) }
    dend_34 { pt3dadd( -176.578, 59.0458, -67.7351, 1.47 ) }
    dend_34 { pt3dadd( -177.045, 59.268, -68.0957, 1.92 ) }
    dend_34 { pt3dadd( -179.509, 60.434, -69.9661, 0.22 ) }
    dend_34 { pt3dadd( -180.703, 60.9943, -70.8832, 0.22 ) }
    dend_34 { pt3dadd( -181.452, 61.3423, -71.4588, 0.22 ) }
    dend_34 { pt3dadd( -182.435, 61.8025, -72.179, 1.92 ) }
    dend_34 { pt3dadd( -182.981, 62.0671, -72.5983, 2.21 ) }
    dend_34 { pt3dadd( -183.165, 62.1622, -72.741, 2.21 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 32/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -36.7115, -0.223507, 13.4455, 0.29 ) }
    dend_31 { pt3dadd( -37.3442, -0.114629, 13.0611, 0.29 ) }
    dend_31 { pt3dadd( -37.7015, -0.0625112, 12.7798, 0.29 ) }
    dend_31 { pt3dadd( -38.3698, 0.047913, 12.445, 0.29 ) }
    dend_31 { pt3dadd( -39.0974, 0.166898, 12.2707, 1.11 ) }
    dend_31 { pt3dadd( -40.2141, 0.31305, 12.168, 1.55 ) }
    dend_31 { pt3dadd( -40.6698, 0.356748, 12.1443, 1.77 ) }
    dend_31 { pt3dadd( -41.5206, 0.434375, 12.111, 1.47 ) }
    dend_31 { pt3dadd( -44.241, 0.646212, 12.3524, 0.29 ) }
    dend_31 { pt3dadd( -44.8222, 0.663487, 12.5702, 0.29 ) }
    dend_31 { pt3dadd( -45.217, 0.677145, 12.8566, 0.59 ) }
    dend_31 { pt3dadd( -45.5563, 0.689607, 13.1922, 0.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 44/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.7115, -0.223507, 13.4455, 0.44 ) }
    dend_30 { pt3dadd( -35.9065, -1.50535, 13.9552, 0.44 ) }
    dend_30 { pt3dadd( -35.3895, -2.45018, 14.3552, 0.44 ) }
    dend_30 { pt3dadd( -34.9773, -3.31297, 14.7647, 0.44 ) }
    dend_30 { pt3dadd( -34.5199, -4.24801, 15.3584, 0.74 ) }
    dend_30 { pt3dadd( -34.1756, -4.90981, 15.9227, 0.96 ) }
    dend_30 { pt3dadd( -33.8103, -5.53403, 16.6216, 0.74 ) }
    dend_30 { pt3dadd( -33.5969, -5.89318, 17.2381, 0.52 ) }
    dend_30 { pt3dadd( -33.4148, -6.26281, 18.0557, 0.52 ) }
    dend_30 { pt3dadd( -33.2221, -6.91711, 19.6572, 0.66 ) }
    dend_30 { pt3dadd( -33.1846, -7.41309, 20.8141, 0.66 ) }
    dend_30 { pt3dadd( -33.232, -7.86322, 21.7009, 0.66 ) }
    dend_30 { pt3dadd( -33.3724, -8.46198, 22.6922, 0.66 ) }
    dend_30 { pt3dadd( -33.5427, -9.03147, 23.3792, 0.66 ) }
    dend_30 { pt3dadd( -33.8111, -9.79856, 24.0628, 0.44 ) }
    dend_30 { pt3dadd( -34.0952, -10.5413, 24.5185, 0.29 ) }
    dend_30 { pt3dadd( -34.4455, -11.4502, 24.9486, 1.33 ) }
    dend_30 { pt3dadd( -34.714, -12.1358, 25.2249, 2.14 ) }
    dend_30 { pt3dadd( -34.9357, -12.7056, 25.4665, 2.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 63/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.04409, 39.2853, -5.42122, 0.22 ) }
    dend_25 { pt3dadd( 0.79749, 40.6381, -6.03108, 0.22 ) }
    dend_25 { pt3dadd( 0.347005, 41.127, -6.25146, 0.81 ) }
    dend_25 { pt3dadd( 0.139674, 41.352, -6.35289, 0.81 ) }
    dend_25 { pt3dadd( -0.645019, 42.2036, -6.73678, 0.22 ) }
    dend_25 { pt3dadd( -0.928296, 42.511, -6.87536, 0.81 ) }
    dend_25 { pt3dadd( -1.10132, 42.6988, -6.96001, 0.96 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 70/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 2.04409, 39.2853, -5.42122, 0.29 ) }
    dend_22 { pt3dadd( 2.15482, 41.2602, -6.31141, 0.29 ) }
    dend_22 { pt3dadd( 2.1963, 41.7625, -6.55159, 0.29 ) }
    dend_22 { pt3dadd( 2.26232, 42.4267, -6.87095, 0.29 ) }
    dend_22 { pt3dadd( 2.32917, 43.2072, -7.22225, 1.03 ) }
    dend_22 { pt3dadd( 2.35514, 43.6058, -7.38347, 1.33 ) }
    dend_22 { pt3dadd( 2.37216, 44.0035, -7.52763, 1.03 ) }
    dend_22 { pt3dadd( 2.40814, 44.7458, -7.75214, 0.59 ) }
    dend_22 { pt3dadd( 2.40553, 45.0214, -7.83683, 0.59 ) }
    dend_22 { pt3dadd( 2.34576, 45.737, -8.05029, 0.22 ) }
    dend_22 { pt3dadd( 2.23161, 46.5115, -8.25576, 0.22 ) }
    dend_22 { pt3dadd( 2.05125, 47.5363, -8.51383, 2.65 ) }
    dend_22 { pt3dadd( 1.96502, 47.9985, -8.6219, 3.09 ) }
    dend_22 { pt3dadd( 1.90553, 48.31, -8.68514, 3.54 ) }
    dend_22 { pt3dadd( 1.87611, 48.4658, -8.71927, 3.68 ) }
    dend_22 { pt3dadd( 1.60324, 50.0323, -9.0896, 0.22 ) }
    dend_22 { pt3dadd( 1.53181, 50.5393, -9.16284, 0.81 ) }
    dend_22 { pt3dadd( 1.50393, 50.8219, -9.17323, 0.81 ) }
    dend_22 { pt3dadd( 1.48756, 51.1543, -9.15169, 0.52 ) }
    dend_22 { pt3dadd( 1.48787, 51.799, -9.03256, 0.22 ) }
    dend_22 { pt3dadd( 1.50389, 52.2635, -8.88336, 0.22 ) }
    dend_22 { pt3dadd( 1.61043, 53.5702, -8.19805, 1.84 ) }
    dend_22 { pt3dadd( 1.63337, 53.8345, -8.02812, 2.06 ) }
    dend_22 { pt3dadd( 1.65433, 54.1109, -7.83104, 2.06 ) }
    dend_22 { pt3dadd( 1.69741, 54.7121, -7.33599, 1.25 ) }
    dend_22 { pt3dadd( 1.71798, 55.3273, -6.7847, 0.22 ) }
    dend_22 { pt3dadd( 1.71874, 55.9118, -6.26227, 0.22 ) }
    dend_22 { pt3dadd( 1.68733, 56.9038, -5.4155, 3.46 ) }
    dend_22 { pt3dadd( 1.66794, 57.3193, -5.0681, 3.83 ) }
    dend_22 { pt3dadd( 1.61738, 58.2141, -4.34328, 3.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( 1.54008, 59.5415, -3.29256, 0.37 ) }
    dend_22 { pt3dadd( 1.51981, 59.9252, -2.99868, 0.59 ) }
    dend_22 { pt3dadd( 1.49883, 60.2109, -2.80541, 0.81 ) }
    dend_22 { pt3dadd( 1.47064, 60.494, -2.64044, 0.81 ) }
    dend_22 { pt3dadd( 1.42613, 60.9218, -2.41499, 0.52 ) }
    dend_22 { pt3dadd( 1.35277, 61.48, -2.15678, 0.22 ) }
    dend_22 { pt3dadd( 1.28373, 61.9615, -1.93708, 0.22 ) }
    dend_22 { pt3dadd( 1.14231, 62.8531, -1.52187, 0.22 ) }
    dend_22 { pt3dadd( 0.92262, 64.121, -0.933874, 2.65 ) }
    dend_22 { pt3dadd( 0.84226, 64.5354, -0.745733, 3.24 ) }
    dend_22 { pt3dadd( 0.75035, 64.9535, -0.561172, 3.54 ) }
    dend_22 { pt3dadd( 0.700869, 65.1554, -0.474895, 3.54 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 12/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 39.1695, -47.5537, -16.276, 0.29 ) }
    dend_19 { pt3dadd( 39.1396, -48.8439, -15.4849, 0.29 ) }
    dend_19 { pt3dadd( 39.2393, -50.4471, -14.5062, 0.15 ) }
    dend_19 { pt3dadd( 39.2927, -50.9224, -14.2137, 0.52 ) }
    dend_19 { pt3dadd( 39.5078, -52.3594, -13.2991, 2.95 ) }
    dend_19 { pt3dadd( 39.6523, -53.1648, -12.7816, 2.36 ) }
    dend_19 { pt3dadd( 39.9405, -54.5507, -11.8607, 0.29 ) }
    dend_19 { pt3dadd( 40.3386, -55.7526, -11.1037, 0.22 ) }
    dend_19 { pt3dadd( 40.6586, -56.4741, -10.6615, 1.4 ) }
    dend_19 { pt3dadd( 40.9838, -57.0291, -10.2746, 1.92 ) }
    dend_19 { pt3dadd( 41.1682, -57.2691, -10.0721, 2.43 ) }
    dend_19 { pt3dadd( 41.5058, -57.6419, -9.73313, 2.43 ) }
    dend_19 { pt3dadd( 42.5829, -58.6789, -8.7025, 0.29 ) }
    dend_19 { pt3dadd( 43.2839, -59.3004, -8.08515, 0.29 ) }
    dend_19 { pt3dadd( 44.1382, -60.0109, -7.36443, 1.77 ) }
    dend_19 { pt3dadd( 44.859, -60.5946, -6.76995, 2.5 ) }
    dend_19 { pt3dadd( 45.2518, -60.9088, -6.43569, 3.02 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 39.1695, -47.5537, -16.276, 2.14 ) }
    dend_18 { pt3dadd( 39.292, -47.8007, -16.4273, 2.14 ) }
    dend_18 { pt3dadd( 39.4173, -48.0268, -16.5295, 2.14 ) }
    dend_18 { pt3dadd( 40.2176, -49.3665, -17.023, 0.22 ) }
    dend_18 { pt3dadd( 40.6462, -50.0414, -17.2506, 0.22 ) }
    dend_18 { pt3dadd( 41.0713, -50.6735, -17.4459, 1.69 ) }
    dend_18 { pt3dadd( 41.6102, -51.4446, -17.6564, 2.14 ) }
    dend_18 { pt3dadd( 42.717, -52.9871, -18.0028, 0.22 ) }
    dend_18 { pt3dadd( 43.416, -53.9442, -18.1787, 0.22 ) }
    dend_18 { pt3dadd( 43.9532, -54.6576, -18.2788, 1.69 ) }
    dend_18 { pt3dadd( 44.3354, -55.1494, -18.3397, 2.06 ) }
    dend_18 { pt3dadd( 45.3785, -56.4709, -18.4773, 0.22 ) }
    dend_18 { pt3dadd( 46.097, -57.3701, -18.5456, 0.22 ) }
    dend_18 { pt3dadd( 46.4485, -57.8281, -18.6088, 1.69 ) }
    dend_18 { pt3dadd( 46.8057, -58.3115, -18.6677, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_1 (entry count 44/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 17.9995, 1.01096, -4.70046, 1.55 ) }
    dend_10 { pt3dadd( 19.579, 0.554545, -4.95565, 1.55 ) }
    dend_10 { pt3dadd( 21.1997, 0.086217, -5.2175, 0.74 ) }
    dend_10 { pt3dadd( 22.3092, -0.234391, -5.39675, 1.18 ) }
    dend_10 { pt3dadd( 23.2957, -0.519428, -5.55612, 1.55 ) }
    dend_10 { pt3dadd( 24.0778, -0.745427, -5.68248, 1.77 ) }
    dend_10 { pt3dadd( 25.0742, -1.03334, -5.84346, 1.77 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 17.9995, 1.01096, -4.70046, 0.96 ) }
    dend_9 { pt3dadd( 17.4023, -0.539162, -4.53632, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 17.9995, 1.01096, -4.70046, 2.8 ) }
    dend_2 { pt3dadd( 18.8718, 2.55083, -5.02917, 2.8 ) }
    dend_2 { pt3dadd( 19.5383, 3.84336, -5.15747, 1.84 ) }
    dend_2 { pt3dadd( 19.8507, 4.49008, -5.14851, 1.47 ) }
    dend_2 { pt3dadd( 20.2517, 5.36926, -5.00482, 1.25 ) }
    dend_2 { pt3dadd( 20.5817, 6.10585, -4.83649, 1.18 ) }
    dend_2 { pt3dadd( 20.9413, 6.92146, -4.58304, 1.18 ) }
    dend_2 { pt3dadd( 21.3594, 7.95532, -4.1199, 1.11 ) }
    dend_2 { pt3dadd( 21.7462, 8.96145, -3.58556, 1.33 ) }
    dend_2 { pt3dadd( 22.4438, 10.7948, -2.49445, 2.58 ) }
    dend_2 { pt3dadd( 22.635, 11.2764, -2.17551, 3.02 ) }
    dend_2 { pt3dadd( 23.0712, 12.3296, -1.42108, 3.54 ) }
    dend_2 { pt3dadd( 23.2393, 12.73, -1.12489, 3.68 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 66/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -38.2795, -17.3031, -0.968809, 0.37 ) }
    dend_39 { pt3dadd( -42.0887, -17.4286, -0.242705, 0.37 ) }
    dend_39 { pt3dadd( -42.7849, -17.4634, -0.113845, 0.37 ) }
    dend_39 { pt3dadd( -43.7473, -17.5129, 0.0464537, 0.22 ) }
    dend_39 { pt3dadd( -45.0733, -17.5983, 0.189179, 0.22 ) }
    dend_39 { pt3dadd( -46.4847, -17.6714, 0.319698, 1.55 ) }
    dend_39 { pt3dadd( -47.2767, -17.7057, 0.384394, 2.58 ) }
    dend_39 { pt3dadd( -47.6926, -17.7313, 0.386441, 2.87 ) }
    dend_39 { pt3dadd( -48.6843, -17.7721, 0.392605, 2.28 ) }
    dend_39 { pt3dadd( -50.5419, -17.789, 0.382774, 0.22 ) }
    dend_39 { pt3dadd( -51.5504, -17.7503, 0.364375, 0.66 ) }
    dend_39 { pt3dadd( -52.0808, -17.6985, 0.338749, 0.88 ) }
    dend_39 { pt3dadd( -52.8891, -17.5697, 0.294467, 0.22 ) }
    dend_39 { pt3dadd( -53.8461, -17.3899, 0.239843, 0.22 ) }
    dend_39 { pt3dadd( -54.6626, -17.2161, 0.211134, 0.37 ) }
    dend_39 { pt3dadd( -55.1807, -17.1036, 0.212617, 0.37 ) }
    dend_39 { pt3dadd( -55.7365, -16.9918, 0.191146, 0.37 ) }
    dend_39 { pt3dadd( -56.133, -16.9047, 0.176299, 0.37 ) }
    dend_39 { pt3dadd( -56.7071, -16.7679, 0.1581, 0.22 ) }
    dend_39 { pt3dadd( -57.3839, -16.619, 0.162176, 0.22 ) }
    dend_39 { pt3dadd( -58.0963, -16.6011, 0.217941, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 87/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -38.2795, -17.3031, -0.968809, 0.52 ) }
    dend_38 { pt3dadd( -38.2495, -19.7086, -1.85126, 0.52 ) }
    dend_38 { pt3dadd( -38.2567, -20.2758, -1.99249, 0.52 ) }
    dend_38 { pt3dadd( -38.2546, -20.8496, -2.10164, 0.29 ) }
    dend_38 { pt3dadd( -38.2354, -21.6021, -2.21445, 0.52 ) }
    dend_38 { pt3dadd( -38.1671, -22.7522, -2.32694, 0.29 ) }
    dend_38 { pt3dadd( -38.1159, -23.2813, -2.36384, 0.29 ) }
    dend_38 { pt3dadd( -37.9352, -24.6264, -2.30644, 2.43 ) }
    dend_38 { pt3dadd( -37.8594, -25.1194, -2.28331, 3.02 ) }
    dend_38 { pt3dadd( -37.77, -25.6018, -2.25514, 3.02 ) }
    dend_38 { pt3dadd( -37.4235, -27.1288, -2.12797, 0.22 ) }
    dend_38 { pt3dadd( -37.1503, -28.0444, -2.06088, 0.22 ) }
    dend_38 { pt3dadd( -37.0077, -28.4799, -2.03045, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 0/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -183.165, 62.1622, -72.741, 0.22 ) }
    dend_36 { pt3dadd( -184.674, 63.9183, -73.5287, 0.22 ) }
    dend_36 { pt3dadd( -185.207, 64.4953, -73.7995, 0.22 ) }
    dend_36 { pt3dadd( -185.631, 64.9262, -74.0256, 0.88 ) }
    dend_36 { pt3dadd( -186.106, 65.3636, -74.2952, 0.88 ) }
    dend_36 { pt3dadd( -186.955, 66.0186, -74.6947, 0.22 ) }
    dend_36 { pt3dadd( -187.396, 66.3306, -74.8876, 0.22 ) }
    dend_36 { pt3dadd( -187.712, 66.5117, -75.0061, 0.66 ) }
    dend_36 { pt3dadd( -188.292, 66.8403, -75.2354, 0.66 ) }
    dend_36 { pt3dadd( -189.204, 67.3717, -75.5951, 0.22 ) }
    dend_36 { pt3dadd( -191.07, 68.4947, -76.368, 0.22 ) }
    dend_36 { pt3dadd( -191.749, 68.9106, -76.6403, 0.59 ) }
    dend_36 { pt3dadd( -192.12, 69.1434, -76.7872, 0.81 ) }
    dend_36 { pt3dadd( -193.581, 70.0743, -77.3635, 0.22 ) }
    dend_36 { pt3dadd( -194.597, 70.7504, -77.7527, 1.11 ) }
    dend_36 { pt3dadd( -195.354, 71.3081, -78.0695, 1.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -183.165, 62.1622, -72.741, 0.22 ) }
    dend_35 { pt3dadd( -184.977, 62.8797, -72.4015, 0.22 ) }
    dend_35 { pt3dadd( -186.293, 63.4313, -72.1143, 0.22 ) }
    dend_35 { pt3dadd( -186.525, 63.5377, -72.0585, 0.52 ) }
    dend_35 { pt3dadd( -186.84, 63.698, -71.9935, 0.52 ) }
    dend_35 { pt3dadd( -187.982, 64.3291, -71.7903, 0.22 ) }
    dend_35 { pt3dadd( -189.159, 65.0316, -71.613, 2.28 ) }
    dend_35 { pt3dadd( -189.48, 65.2526, -71.571, 2.65 ) }
    dend_35 { pt3dadd( -190.001, 65.598, -71.5688, 2.65 ) }
    dend_35 { pt3dadd( -192.489, 67.1456, -71.7767, 0.22 ) }
    dend_35 { pt3dadd( -193.497, 67.7383, -71.9383, 0.66 ) }
    dend_35 { pt3dadd( -194.661, 68.3792, -72.2321, 0.22 ) }
    dend_35 { pt3dadd( -195.519, 68.8145, -72.4916, 0.88 ) }
    dend_35 { pt3dadd( -197.952, 69.9458, -73.2957, 0.22 ) }
    dend_35 { pt3dadd( -198.329, 70.1018, -73.4294, 0.52 ) }
    dend_35 { pt3dadd( -198.729, 70.2459, -73.5835, 0.52 ) }
    dend_35 { pt3dadd( -200.432, 70.7853, -74.1092, 0.22 ) }
    dend_35 { pt3dadd( -200.999, 70.9528, -74.241, 0.22 ) }
    dend_35 { pt3dadd( -201.996, 71.2702, -74.3446, 1.03 ) }
    dend_35 { pt3dadd( -202.454, 71.4371, -74.3412, 1.4 ) }
    dend_35 { pt3dadd( -202.91, 71.6128, -74.3309, 1.4 ) }
    dend_35 { pt3dadd( -205.766, 72.7489, -74.2126, 0.22 ) }
    dend_35 { pt3dadd( -207.905, 73.6155, -74.0825, 0.22 ) }
    dend_35 { pt3dadd( -209.543, 74.2944, -73.9728, 1.25 ) }
    dend_35 { pt3dadd( -210.04, 74.4975, -73.9446, 1.4 ) }
    dend_35 { pt3dadd( -211.403, 75.0531, -73.8619, 0.22 ) }
    dend_35 { pt3dadd( -213.483, 75.9111, -73.7542, 0.22 ) }
    dend_35 { pt3dadd( -214.505, 76.3317, -73.755, 0.74 ) }
    dend_35 { pt3dadd( -214.903, 76.4873, -73.794, 0.74 ) }
    dend_35 { pt3dadd( -216.476, 77.0659, -74.0474, 0.22 ) }
    dend_35 { pt3dadd( -217.301, 77.3504, -74.1932, 1.33 ) }
    dend_35 { pt3dadd( -218.093, 77.6015, -74.3533, 1.77 ) }
    dend_35 { pt3dadd( -220.097, 78.2159, -74.9086, 0.22 ) }
    dend_35 { pt3dadd( -221.777, 78.7279, -75.4636, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.700869, 65.1554, -0.474895, 0.29 ) }
    dend_24 { pt3dadd( -1.3028, 67.7225, -1.79536, 0.29 ) }
    dend_24 { pt3dadd( -1.9483, 68.5843, -2.16142, 0.29 ) }
    dend_24 { pt3dadd( -2.77318, 69.7406, -2.62587, 1.11 ) }
    dend_24 { pt3dadd( -2.94962, 69.9979, -2.72188, 1.25 ) }
    dend_24 { pt3dadd( -3.14012, 70.2834, -2.82088, 1.25 ) }
    dend_24 { pt3dadd( -3.4174, 70.704, -2.95771, 0.96 ) }
    dend_24 { pt3dadd( -4.21327, 72.1434, -3.24394, 0.22 ) }
    dend_24 { pt3dadd( -4.66038, 72.9891, -3.42388, 0.22 ) }
    dend_24 { pt3dadd( -4.86385, 73.4347, -3.47389, 0.74 ) }
    dend_24 { pt3dadd( -5.06325, 73.9084, -3.49166, 0.96 ) }
    dend_24 { pt3dadd( -5.20204, 74.2607, -3.47531, 0.96 ) }
    dend_24 { pt3dadd( -5.61466, 75.4614, -3.32814, 0.22 ) }
    dend_24 { pt3dadd( -5.88629, 76.4799, -3.1392, 0.22 ) }
    dend_24 { pt3dadd( -6.25441, 78.2716, -2.7401, 1.47 ) }
    dend_24 { pt3dadd( -6.36408, 78.9052, -2.59105, 1.92 ) }
    dend_24 { pt3dadd( -6.4699, 79.5548, -2.4217, 1.92 ) }
    dend_24 { pt3dadd( -6.59976, 80.3484, -2.19457, 1.25 ) }
    dend_24 { pt3dadd( -6.90692, 81.9408, -1.70479, 0.22 ) }
    dend_24 { pt3dadd( -7.36528, 83.8729, -1.12036, 0.22 ) }
    dend_24 { pt3dadd( -7.81958, 85.4035, -0.750177, 1.4 ) }
    dend_24 { pt3dadd( -7.98576, 85.8975, -0.641357, 1.62 ) }
    dend_24 { pt3dadd( -8.22695, 86.4567, -0.534197, 1.62 ) }
    dend_24 { pt3dadd( -9.17279, 88.263, -0.228873, 0.22 ) }
    dend_24 { pt3dadd( -10.1881, 89.9228, 0.027942, 0.22 ) }
    dend_24 { pt3dadd( -11.3298, 91.6343, 0.257803, 1.99 ) }
    dend_24 { pt3dadd( -11.5305, 91.9255, 0.288657, 2.5 ) }
    dend_24 { pt3dadd( -13.2589, 94.4307, 0.491185, 0.22 ) }
    dend_24 { pt3dadd( -14.1251, 95.6463, 0.563945, 1.33 ) }
    dend_24 { pt3dadd( -14.3064, 95.8804, 0.571782, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.700869, 65.1554, -0.474895, 0.29 ) }
    dend_23 { pt3dadd( 0.214185, 67.8302, 0.314843, 0.29 ) }
    dend_23 { pt3dadd( -0.0705177, 69.0681, 0.744509, 0.29 ) }
    dend_23 { pt3dadd( -0.321315, 70.0504, 1.11858, 0.29 ) }
    dend_23 { pt3dadd( -0.576323, 71.0913, 1.50631, 0.29 ) }
    dend_23 { pt3dadd( -0.90867, 72.5402, 2.05252, 1.18 ) }
    dend_23 { pt3dadd( -1.07704, 73.3543, 2.37975, 1.77 ) }
    dend_23 { pt3dadd( -1.19883, 73.9751, 2.66452, 1.77 ) }
    dend_23 { pt3dadd( -1.26557, 74.3958, 2.8714, 1.92 ) }
    dend_23 { pt3dadd( -1.40353, 76.2531, 3.81411, 0.22 ) }
    dend_23 { pt3dadd( -1.35965, 77.0361, 4.2161, 0.22 ) }
    dend_23 { pt3dadd( -1.12233, 78.2101, 4.84366, 1.11 ) }
    dend_23 { pt3dadd( -0.950412, 78.7321, 5.15928, 1.33 ) }
    dend_23 { pt3dadd( -0.758159, 79.1977, 5.4971, 1.33 ) }
    dend_23 { pt3dadd( -0.528794, 79.6923, 5.93242, 1.11 ) }
    dend_23 { pt3dadd( -0.283437, 80.2075, 6.50214, 0.88 ) }
    dend_23 { pt3dadd( 0.0453733, 81.0662, 7.49203, 0.37 ) }
    dend_23 { pt3dadd( 0.157084, 81.4277, 7.92106, 0.37 ) }
    dend_23 { pt3dadd( 0.366867, 82.3235, 9.0105, 0.96 ) }
    dend_23 { pt3dadd( 0.482017, 82.9913, 9.78726, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 0.626643, 84.255, 11.1961, 0.29 ) }
    dend_23 { pt3dadd( 0.720527, 85.2334, 12.2526, 1.11 ) }
    dend_23 { pt3dadd( 0.77166, 85.7441, 12.7909, 1.33 ) }
    dend_23 { pt3dadd( 0.87795, 86.6019, 13.6853, 0.81 ) }
    dend_23 { pt3dadd( 0.97798, 87.2517, 14.3478, 0.37 ) }
    dend_23 { pt3dadd( 1.16105, 88.1626, 15.2233, 0.74 ) }
    dend_23 { pt3dadd( 1.36947, 89.0257, 16.0099, 0.44 ) }
    dend_23 { pt3dadd( 1.71538, 90.2853, 17.1235, 1.47 ) }
    dend_23 { pt3dadd( 1.7944, 90.5643, 17.3592, 1.99 ) }
    dend_23 { pt3dadd( 1.96005, 91.1148, 17.8127, 1.99 ) }
    dend_23 { pt3dadd( 2.42178, 92.7308, 19.1641, 0.22 ) }
    dend_23 { pt3dadd( 2.57356, 93.2969, 19.6298, 0.22 ) }
    dend_23 { pt3dadd( 2.83307, 94.29, 20.3963, 1.4 ) }
    dend_23 { pt3dadd( 2.96497, 94.764, 20.7468, 1.4 ) }
    dend_23 { pt3dadd( 3.37909, 96.1368, 21.7417, 0.29 ) }
    dend_23 { pt3dadd( 3.88325, 97.5806, 22.7846, 0.22 ) }
    dend_23 { pt3dadd( 4.18206, 98.3693, 23.3552, 0.22 ) }
    dend_23 { pt3dadd( 4.5869, 99.3003, 23.983, 1.18 ) }
    dend_23 { pt3dadd( 4.82787, 99.8126, 24.3165, 1.84 ) }
    dend_23 { pt3dadd( 5.1176, 100.363, 24.6663, 1.47 ) }
    dend_23 { pt3dadd( 5.78243, 101.426, 25.2665, 0.22 ) }
    dend_23 { pt3dadd( 6.18383, 101.942, 25.5284, 0.22 ) }
    dend_23 { pt3dadd( 6.94524, 102.859, 26.0218, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 23/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 25.0742, -1.03334, -5.84346, 0.66 ) }
    dend_12 { pt3dadd( 25.3092, -1.31539, -7.96582, 0.66 ) }
    dend_12 { pt3dadd( 25.6347, -1.64679, -10.596, 0.66 ) }
    dend_12 { pt3dadd( 25.7254, -1.7386, -11.2263, 1.62 ) }
    dend_12 { pt3dadd( 25.8004, -1.82726, -11.7869, 2.65 ) }
    dend_12 { pt3dadd( 25.9172, -1.96552, -12.6612, 2.95 ) }
    dend_12 { pt3dadd( 26.179, -2.27519, -14.6194, 0.81 ) }
    dend_12 { pt3dadd( 26.5584, -2.88209, -17.7559, 2.28 ) }
    dend_12 { pt3dadd( 26.6501, -3.01928, -18.4603, 3.17 ) }
    dend_12 { pt3dadd( 26.7365, -3.1146, -19.0456, 3.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 25.0742, -1.03334, -5.84346, 0.66 ) }
    dend_11 { pt3dadd( 26.0033, -2.33247, -5.21037, 0.66 ) }
    dend_11 { pt3dadd( 26.4369, -2.99807, -4.9103, 0.74 ) }
    dend_11 { pt3dadd( 26.742, -3.49744, -4.71298, 0.81 ) }
    dend_11 { pt3dadd( 27.2314, -4.33458, -4.4085, 0.59 ) }
    dend_11 { pt3dadd( 27.6499, -5.07261, -4.15306, 0.52 ) }
    dend_11 { pt3dadd( 28.0309, -5.76833, -3.92541, 0.29 ) }
    dend_11 { pt3dadd( 28.4158, -6.55319, -3.70482, 0.29 ) }
    dend_11 { pt3dadd( 28.9127, -7.63526, -3.42361, 1.33 ) }
    dend_11 { pt3dadd( 29.167, -8.25047, -3.27818, 1.92 ) }
    dend_11 { pt3dadd( 29.2714, -8.53179, -3.21963, 2.14 ) }
    dend_11 { pt3dadd( 29.4365, -9.02012, -3.11586, 1.92 ) }
    dend_11 { pt3dadd( 29.7118, -9.89569, -2.92391, 0.96 ) }
    dend_11 { pt3dadd( 29.9707, -10.8061, -2.71766, 0.22 ) }
    dend_11 { pt3dadd( 30.1745, -11.5752, -2.53356, 0.22 ) }
    dend_11 { pt3dadd( 30.2887, -11.9355, -2.45116, 0.88 ) }
    dend_11 { pt3dadd( 30.5828, -12.6684, -2.28456, 1.55 ) }
    dend_11 { pt3dadd( 30.7167, -12.9292, -2.22497, 1.69 ) }
    dend_11 { pt3dadd( 31.0266, -13.4245, -2.11401, 1.33 ) }
    dend_11 { pt3dadd( 31.7572, -14.4114, -1.89621, 0.29 ) }
    dend_11 { pt3dadd( 32.6146, -15.4436, -1.66101, 0.29 ) }
    dend_11 { pt3dadd( 33.3983, -16.3151, -1.45542, 0.29 ) }
    dend_11 { pt3dadd( 34.187, -17.1207, -1.25908, 1.33 ) }
    dend_11 { pt3dadd( 34.7206, -17.6134, -1.13431, 1.62 ) }
    dend_11 { pt3dadd( 35.0769, -17.9121, -1.05531, 1.69 ) }
    dend_11 { pt3dadd( 36.1362, -18.7231, -0.845154, 0.29 ) }
    dend_11 { pt3dadd( 37.1348, -19.4427, -0.665919, 0.29 ) }
    dend_11 { pt3dadd( 37.7447, -19.8522, -0.573154, 0.29 ) }
    dend_11 { pt3dadd( 38.9797, -20.6175, -0.384831, 1.77 ) }
    dend_11 { pt3dadd( 39.3558, -20.8263, -0.328144, 2.58 ) }
    dend_11 { pt3dadd( 39.9869, -21.1376, -0.235735, 3.02 ) }
    dend_11 { pt3dadd( 40.3531, -21.2855, -0.176051, 3.17 ) }
    dend_11 { pt3dadd( 40.6311, -21.3839, -0.123649, 3.17 ) }
    dend_11 { pt3dadd( 41.8359, -21.7911, 0.138739, 1.55 ) }
    dend_11 { pt3dadd( 43.075, -22.1843, 0.44154, 0.22 ) }
    dend_11 { pt3dadd( 43.5095, -22.3149, 0.553349, 0.22 ) }
    dend_11 { pt3dadd( 44.4191, -22.5913, 0.824409, 1.03 ) }
    dend_11 { pt3dadd( 44.7649, -22.7009, 0.947154, 1.25 ) }
    dend_11 { pt3dadd( 45.1341, -22.8264, 1.08811, 1.33 ) }
    dend_11 { pt3dadd( 45.6579, -23.0062, 1.30947, 0.88 ) }
    dend_11 { pt3dadd( 46.0039, -23.1324, 1.47434, 0.29 ) }
    dend_11 { pt3dadd( 47.1572, -23.5831, 2.03549, 0.22 ) }
    dend_11 { pt3dadd( 48.366, -24.1151, 2.62959, 1.84 ) }
    dend_11 { pt3dadd( 49.0543, -24.4568, 2.97126, 2.65 ) }
    dend_11 { pt3dadd( 49.6291, -24.7738, 3.26958, 2.5 ) }
    dend_11 { pt3dadd( 50.0073, -25.0053, 3.47402, 1.92 ) }
    dend_11 { pt3dadd( 51.1716, -25.7628, 4.13366, 0.29 ) }
    dend_11 { pt3dadd( 52.0031, -26.3305, 4.64253, 0.29 ) }
    dend_11 { pt3dadd( 52.8404, -26.9048, 5.20934, 0.22 ) }
    dend_11 { pt3dadd( 53.6099, -27.3736, 5.70879, 0.22 ) }
    dend_11 { pt3dadd( 54.5874, -27.9188, 6.30483, 2.73 ) }
    dend_11 { pt3dadd( 55.2576, -28.2628, 6.69977, 3.24 ) }
    dend_11 { pt3dadd( 56.081, -28.6529, 7.18059, 2.58 ) }
    dend_11 { pt3dadd( 58.1784, -29.538, 8.31852, 0.22 ) }
    dend_11 { pt3dadd( 60.9876, -30.6499, 9.67825, 0.22 ) }
    dend_11 { pt3dadd( 62.2413, -31.1434, 10.214, 2.06 ) }
    dend_11 { pt3dadd( 62.6734, -31.3141, 10.3826, 2.65 ) }
    dend_11 { pt3dadd( 63.3142, -31.5675, 10.6117, 2.8 ) }
    dend_11 { pt3dadd( 65.3405, -32.3774, 11.262, 0.22 ) }
    dend_11 { pt3dadd( 67.9807, -33.4602, 12.03, 0.22 ) }
    dend_11 { pt3dadd( 69.0929, -33.9512, 12.3666, 1.25 ) }
    dend_11 { pt3dadd( 69.6927, -34.2238, 12.5427, 1.69 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 95/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.2393, 12.73, -1.12489, 0.88 ) }
    dend_6 { pt3dadd( 24.5431, 12.5601, -1.71899, 0.88 ) }
    dend_6 { pt3dadd( 25.455, 12.4562, -1.94906, 0.29 ) }
    dend_6 { pt3dadd( 27.0421, 12.2949, -1.97754, 0.37 ) }
    dend_6 { pt3dadd( 27.6076, 12.2295, -1.8117, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( 28.4337, 12.1156, -1.25787, 0.44 ) }
    dend_6 { pt3dadd( 29.1588, 12.0093, -0.654432, 0.74 ) }
    dend_6 { pt3dadd( 30.9487, 11.7671, 1.35677, 1.03 ) }
    dend_6 { pt3dadd( 31.4778, 11.6935, 2.06723, 1.03 ) }
    dend_6 { pt3dadd( 32.2978, 11.5975, 3.21513, 0.66 ) }
    dend_6 { pt3dadd( 33.2593, 11.5078, 4.49805, 0.44 ) }
    dend_6 { pt3dadd( 33.6656, 11.4908, 4.99471, 0.59 ) }
    dend_6 { pt3dadd( 34.2124, 11.5036, 5.54815, 0.29 ) }
    dend_6 { pt3dadd( 34.9807, 11.539, 6.05586, 0.29 ) }
    dend_6 { pt3dadd( 35.9812, 11.6225, 6.58304, 1.4 ) }
    dend_6 { pt3dadd( 36.7846, 11.7273, 6.8742, 1.92 ) }
    dend_6 { pt3dadd( 37.5441, 11.8478, 7.05468, 1.62 ) }
    dend_6 { pt3dadd( 38.1517, 11.957, 7.18901, 0.81 ) }
    dend_6 { pt3dadd( 38.4811, 12.0225, 7.2521, 0.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 14/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 23.2393, 12.73, -1.12489, 1.69 ) }
    dend_3 { pt3dadd( 23.4683, 14.0829, -0.332701, 1.69 ) }
    dend_3 { pt3dadd( 23.6039, 14.8834, 0.136054, 1.25 ) }
    dend_3 { pt3dadd( 23.7501, 15.7469, 0.641666, 1.33 ) }
    dend_3 { pt3dadd( 23.831, 16.2249, 0.921525, 1.33 ) }
    dend_3 { pt3dadd( 23.9048, 16.6606, 1.17665, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 26.7365, -3.1146, -19.0456, 0.44 ) }
    dend_14 { pt3dadd( 26.7693, -4.49112, -19.9472, 0.44 ) }
    dend_14 { pt3dadd( 27.1842, -6.64704, -21.1235, 0.29 ) }
    dend_14 { pt3dadd( 27.3928, -7.4569, -21.5713, 1.03 ) }
    dend_14 { pt3dadd( 27.5587, -8.06267, -21.8984, 1.33 ) }
    dend_14 { pt3dadd( 27.8554, -9.12056, -22.4469, 0.22 ) }
    dend_14 { pt3dadd( 28.3635, -10.8858, -23.326, 0.22 ) }
    dend_14 { pt3dadd( 28.9141, -12.4692, -24.0766, 1.47 ) }
    dend_14 { pt3dadd( 29.2978, -13.5003, -24.5202, 1.77 ) }
    dend_14 { pt3dadd( 29.7546, -14.7513, -25.1571, 0.15 ) }
    dend_14 { pt3dadd( 29.9514, -15.3413, -25.5345, 0.15 ) }
    dend_14 { pt3dadd( 30.2739, -16.5502, -26.4679, 2.36 ) }
    dend_14 { pt3dadd( 30.3671, -17.0329, -26.8823, 2.95 ) }
    dend_14 { pt3dadd( 30.4599, -17.6545, -27.4484, 2.95 ) }
    dend_14 { pt3dadd( 30.6831, -19.2231, -28.9344, 0.66 ) }
    dend_14 { pt3dadd( 30.8493, -20.4364, -30.2067, 0.22 ) }
    dend_14 { pt3dadd( 30.9562, -21.3422, -31.2302, 0.22 ) }
    dend_14 { pt3dadd( 31.0005, -21.848, -31.8383, 1.11 ) }
    dend_14 { pt3dadd( 31.0268, -22.1581, -32.1981, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 39/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 26.7365, -3.1146, -19.0456, 0.22 ) }
    dend_13 { pt3dadd( 27.7046, -1.67861, -20.2792, 0.22 ) }
    dend_13 { pt3dadd( 28.4495, -0.669278, -21.1603, 0.22 ) }
    dend_13 { pt3dadd( 29.3581, 0.515548, -22.1388, 1.99 ) }
    dend_13 { pt3dadd( 29.7201, 0.99079, -22.5144, 2.43 ) }
    dend_13 { pt3dadd( 30.6915, 2.30857, -23.5447, 0.44 ) }
    dend_13 { pt3dadd( 30.9974, 2.73489, -23.8971, 0.96 ) }
    dend_13 { pt3dadd( 31.5387, 3.5413, -24.5615, 0.22 ) }
    dend_13 { pt3dadd( 32.4349, 5.00454, -25.7024, 0.22 ) }
    dend_13 { pt3dadd( 32.7816, 5.62169, -26.1504, 1.47 ) }
    dend_13 { pt3dadd( 33.0662, 6.24712, -26.7093, 1.47 ) }
    dend_13 { pt3dadd( 33.7154, 7.9681, -28.2659, 0.15 ) }
    dend_13 { pt3dadd( 34.0405, 8.96802, -29.1722, 0.15 ) }
    dend_13 { pt3dadd( 34.3054, 9.92726, -30.0188, 1.84 ) }
    dend_13 { pt3dadd( 34.3842, 10.2688, -30.3077, 2.14 ) }
    dend_13 { pt3dadd( 35.1966, 13.9554, -33.2758, 0.22 ) }
    dend_13 { pt3dadd( 35.5373, 15.5232, -34.4904, 0.22 ) }
    dend_13 { pt3dadd( 35.6111, 15.877, -34.7585, 0.22 ) }
    dend_13 { pt3dadd( 35.8346, 16.8693, -35.5284, 0.22 ) }
    dend_13 { pt3dadd( 36.098, 18.022, -36.3659, 1.55 ) }
    dend_13 { pt3dadd( 36.1906, 18.4233, -36.6251, 1.55 ) }
    dend_13 { pt3dadd( 36.7125, 20.6192, -37.8194, 0.22 ) }
    dend_13 { pt3dadd( 36.9181, 21.4013, -38.3866, 0.22 ) }
    dend_13 { pt3dadd( 37.107, 22.0202, -38.8631, 0.22 ) }
    dend_13 { pt3dadd( 37.3111, 22.6092, -39.3471, 0.96 ) }
    dend_13 { pt3dadd( 37.6087, 23.4059, -40.0034, 1.77 ) }
    dend_13 { pt3dadd( 37.7402, 23.7061, -40.2671, 1.77 ) }
    dend_13 { pt3dadd( 38.5422, 25.3352, -41.7935, 0.22 ) }
    dend_13 { pt3dadd( 38.8721, 25.9562, -42.4201, 0.81 ) }
    dend_13 { pt3dadd( 39.2464, 26.6143, -43.1412, 0.22 ) }
    dend_13 { pt3dadd( 39.8934, 27.7053, -44.4159, 1.62 ) }
    dend_13 { pt3dadd( 41.194, 29.8619, -46.9715, 0.22 ) }
    dend_13 { pt3dadd( 41.815, 30.8605, -48.2367, 0.66 ) }
    dend_13 { pt3dadd( 42.2473, 31.5279, -49.1501, 1.18 ) }
    dend_13 { pt3dadd( 42.5246, 31.949, -49.7591, 1.18 ) }
    dend_13 { pt3dadd( 43.096, 32.8158, -51.0438, 0.81 ) }
    dend_13 { pt3dadd( 43.3393, 33.1872, -51.5995, 1.33 ) }
    dend_13 { pt3dadd( 43.9658, 34.2088, -53.1133, 1.18 ) }
    dend_13 { pt3dadd( 44.4798, 35.0797, -54.3556, 0.29 ) }
    dend_13 { pt3dadd( 44.7935, 35.6386, -55.1026, 0.81 ) }
    dend_13 { pt3dadd( 44.944, 35.9218, -55.4479, 0.81 ) }
    dend_13 { pt3dadd( 45.6628, 37.3014, -56.9738, 0.22 ) }
    dend_13 { pt3dadd( 45.9116, 37.7942, -57.4972, 0.22 ) }
    dend_13 { pt3dadd( 46.1048, 38.1998, -57.8626, 0.66 ) }
    dend_13 { pt3dadd( 46.3161, 38.6704, -58.2592, 0.66 ) }
    dend_13 { pt3dadd( 46.5864, 39.2487, -58.7297, 0.29 ) }
    dend_13 { pt3dadd( 46.9554, 40.0111, -59.2946, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 38.4811, 12.0225, 7.2521, 0.66 ) }
    dend_8 { pt3dadd( 38.8883, 11.8228, 8.91975, 0.66 ) }
    dend_8 { pt3dadd( 39.1163, 11.7337, 9.68787, 0.66 ) }
    dend_8 { pt3dadd( 39.4229, 11.6229, 10.5916, 0.66 ) }
    dend_8 { pt3dadd( 39.8914, 11.4644, 11.6562, 0.44 ) }
    dend_8 { pt3dadd( 40.5452, 11.2431, 13.1421, 0.66 ) }
    dend_8 { pt3dadd( 41.4765, 10.928, 15.2583, 1.55 ) }
    dend_8 { pt3dadd( 41.969, 10.8131, 16.1706, 2.14 ) }
    dend_8 { pt3dadd( 42.3408, 10.7443, 16.7976, 2.36 ) }
    dend_8 { pt3dadd( 43.5783, 10.4959, 18.7138, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 96/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 38.4811, 12.0225, 7.2521, 0.22 ) }
    dend_7 { pt3dadd( 40.3406, 11.6285, 6.70679, 0.22 ) }
    dend_7 { pt3dadd( 41.9519, 11.3503, 6.36886, 1.47 ) }
    dend_7 { pt3dadd( 42.5632, 11.2612, 6.265, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 43.0614, 11.1958, 6.19466, 1.84 ) }
    dend_7 { pt3dadd( 43.8029, 11.1065, 6.11056, 0.74 ) }
    dend_7 { pt3dadd( 44.8165, 10.9951, 6.00884, 0.22 ) }
    dend_7 { pt3dadd( 45.6995, 10.9458, 6.05317, 0.22 ) }
    dend_7 { pt3dadd( 46.619, 10.9244, 6.17906, 0.88 ) }
    dend_7 { pt3dadd( 47.1349, 10.9116, 6.26674, 0.88 ) }
    dend_7 { pt3dadd( 47.7764, 10.9021, 6.43381, 0.29 ) }
    dend_7 { pt3dadd( 48.2729, 10.9117, 6.65241, 0.22 ) }
    dend_7 { pt3dadd( 49.5072, 10.9236, 7.36265, 1.18 ) }
    dend_7 { pt3dadd( 49.9079, 10.9271, 7.64332, 1.47 ) }
    dend_7 { pt3dadd( 50.3228, 10.9184, 7.97653, 0.96 ) }
    dend_7 { pt3dadd( 51.6736, 10.8471, 9.07942, 0.22 ) }
    dend_7 { pt3dadd( 53.2864, 10.7386, 10.4038, 1.69 ) }
    dend_7 { pt3dadd( 54.1529, 10.6638, 11.1032, 2.73 ) }
    dend_7 { pt3dadd( 54.9544, 10.5825, 11.7068, 3.02 ) }
    dend_7 { pt3dadd( 56.5447, 10.4067, 12.7989, 0.15 ) }
    dend_7 { pt3dadd( 57.573, 10.2972, 13.427, 0.15 ) }
    dend_7 { pt3dadd( 58.7997, 10.1779, 14.0728, 1.4 ) }
    dend_7 { pt3dadd( 59.3102, 10.1453, 14.304, 1.92 ) }
    dend_7 { pt3dadd( 60.184, 10.1506, 14.6707, 0.96 ) }
    dend_7 { pt3dadd( 61.8174, 10.2315, 15.2885, 0.22 ) }
    dend_7 { pt3dadd( 63.0964, 10.3503, 15.7275, 0.22 ) }
    dend_7 { pt3dadd( 64.0026, 10.4497, 16.0221, 1.47 ) }
    dend_7 { pt3dadd( 65.129, 10.5652, 16.3502, 2.5 ) }
    dend_7 { pt3dadd( 66.9273, 10.7393, 16.8376, 0.22 ) }
    dend_7 { pt3dadd( 67.0718, 10.7516, 16.8727, 0.44 ) }
    dend_7 { pt3dadd( 68.4524, 10.8414, 17.1456, 0.22 ) }
    dend_7 { pt3dadd( 69.8317, 10.8491, 17.3407, 0.22 ) }
    dend_7 { pt3dadd( 71.5206, 10.7739, 17.4897, 2.36 ) }
    dend_7 { pt3dadd( 72.1395, 10.7239, 17.5213, 2.95 ) }
    dend_7 { pt3dadd( 72.5659, 10.6759, 17.5281, 3.02 ) }
    dend_7 { pt3dadd( 73.6544, 10.5467, 17.5506, 1.33 ) }
    dend_7 { pt3dadd( 75.6638, 10.2934, 17.597, 0.22 ) }
    dend_7 { pt3dadd( 77.0841, 10.0981, 17.6253, 0.44 ) }
    dend_7 { pt3dadd( 77.9104, 9.98088, 17.6422, 0.37 ) }
    dend_7 { pt3dadd( 78.5685, 9.8876, 17.6673, 1.47 ) }
    dend_7 { pt3dadd( 79.3408, 9.77601, 17.7133, 1.92 ) }
    dend_7 { pt3dadd( 79.8452, 9.69617, 17.7476, 1.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 38/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 23.9048, 16.6606, 1.17665, 0.15 ) }
    dend_5 { pt3dadd( 24.7072, 16.9534, 1.70664, 0.15 ) }
    dend_5 { pt3dadd( 25.9003, 17.4594, 2.77887, 1.4 ) }
    dend_5 { pt3dadd( 26.276, 17.6265, 3.18619, 1.99 ) }
    dend_5 { pt3dadd( 27.0796, 18.0226, 4.13008, 2.21 ) }
    dend_5 { pt3dadd( 27.3113, 18.1553, 4.41069, 2.5 ) }
    dend_5 { pt3dadd( 27.7205, 18.4227, 4.90529, 2.14 ) }
    dend_5 { pt3dadd( 28.789, 19.3521, 6.36854, 0.66 ) }
    dend_5 { pt3dadd( 29.3459, 20.0816, 7.21311, 0.52 ) }
    dend_5 { pt3dadd( 29.5657, 20.4745, 7.54367, 0.52 ) }
    dend_5 { pt3dadd( 29.7988, 21.1002, 7.89222, 0.44 ) }
    dend_5 { pt3dadd( 29.9585, 21.6537, 8.13293, 0.29 ) }
    dend_5 { pt3dadd( 30.1721, 22.5945, 8.53012, 0.29 ) }
    dend_5 { pt3dadd( 30.3154, 23.4328, 8.87863, 0.59 ) }
    dend_5 { pt3dadd( 30.4085, 23.8641, 9.16747, 0.59 ) }
    dend_5 { pt3dadd( 30.5932, 24.296, 9.76236, 0.37 ) }
    dend_5 { pt3dadd( 30.8017, 24.5723, 10.4129, 0.37 ) }
    dend_5 { pt3dadd( 31.3561, 25.0973, 12.0464, 2.14 ) }
    dend_5 { pt3dadd( 31.5948, 25.2743, 12.7039, 2.95 ) }
    dend_5 { pt3dadd( 32.0861, 25.5706, 13.9054, 3.17 ) }
    dend_5 { pt3dadd( 32.6755, 25.8925, 15.1668, 3.02 ) }
    dend_5 { pt3dadd( 33.4019, 26.2355, 16.3852, 0.66 ) }
    dend_5 { pt3dadd( 33.7248, 26.3838, 16.7968, 0.52 ) }
    dend_5 { pt3dadd( 34.1849, 26.6037, 17.2163, 0.81 ) }
    dend_5 { pt3dadd( 34.7073, 26.8692, 17.5798, 0.81 ) }
    dend_5 { pt3dadd( 35.1559, 27.1105, 17.8167, 0.52 ) }
    dend_5 { pt3dadd( 36.7705, 27.9534, 18.5027, 0.44 ) }
    dend_5 { pt3dadd( 37.6528, 28.4069, 18.8636, 1.47 ) }
    dend_5 { pt3dadd( 38.4914, 28.8586, 19.2358, 2.65 ) }
    dend_5 { pt3dadd( 38.9975, 29.1542, 19.4813, 3.17 ) }
    dend_5 { pt3dadd( 39.3667, 29.4023, 19.6979, 2.95 ) }
    dend_5 { pt3dadd( 40.5471, 30.3226, 20.4793, 0.96 ) }
    dend_5 { pt3dadd( 41.2329, 30.9742, 20.9871, 0.29 ) }
    dend_5 { pt3dadd( 41.606, 31.3921, 21.2838, 0.29 ) }
    dend_5 { pt3dadd( 41.9444, 31.8331, 21.5719, 0.29 ) }
    dend_5 { pt3dadd( 42.7756, 33.0353, 22.2847, 1.55 ) }
    dend_5 { pt3dadd( 43.0347, 33.4423, 22.5186, 2.06 ) }
    dend_5 { pt3dadd( 43.3475, 33.9776, 22.8192, 1.99 ) }
    dend_5 { pt3dadd( 44.1897, 35.4225, 23.631, 0.22 ) }
    dend_5 { pt3dadd( 44.7748, 36.4262, 24.2112, 0.22 ) }
    dend_5 { pt3dadd( 45.118, 37.0362, 24.5668, 0.22 ) }
    dend_5 { pt3dadd( 46.0085, 38.6754, 25.5026, 2.36 ) }
    dend_5 { pt3dadd( 46.3712, 39.3629, 25.8984, 2.95 ) }
    dend_5 { pt3dadd( 46.6213, 39.8576, 26.1786, 3.17 ) }
    dend_5 { pt3dadd( 47.4655, 41.5888, 27.1435, 0.29 ) }
    dend_5 { pt3dadd( 47.8009, 42.2798, 27.4933, 0.22 ) }
    dend_5 { pt3dadd( 48.1974, 43.2493, 27.8163, 0.22 ) }
    dend_5 { pt3dadd( 48.4042, 43.88, 27.9251, 1.25 ) }
    dend_5 { pt3dadd( 48.6897, 44.9702, 28.0564, 1.92 ) }
    dend_5 { pt3dadd( 48.786, 45.4478, 28.097, 2.65 ) }
    dend_5 { pt3dadd( 48.9087, 46.1178, 28.1497, 2.5 ) }
    dend_5 { pt3dadd( 49.4714, 48.9468, 28.4324, 0.22 ) }
    dend_5 { pt3dadd( 49.7407, 50.0557, 28.5843, 0.22 ) }
    dend_5 { pt3dadd( 50.211, 51.6312, 28.8981, 0.22 ) }
    dend_5 { pt3dadd( 50.4397, 52.2719, 29.0637, 0.22 ) }
    dend_5 { pt3dadd( 51.0178, 53.6845, 29.5315, 1.99 ) }
    dend_5 { pt3dadd( 51.1882, 54.0518, 29.6842, 2.5 ) }
    dend_5 { pt3dadd( 51.9901, 55.4778, 30.3967, 0.22 ) }
    dend_5 { pt3dadd( 52.5794, 56.4725, 30.8773, 0.22 ) }
    dend_5 { pt3dadd( 52.8845, 56.9703, 31.1112, 0.22 ) }
    dend_5 { pt3dadd( 53.5473, 58.0804, 31.6307, 2.28 ) }
    dend_5 { pt3dadd( 54.4879, 59.8431, 32.4091, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( 55.0449, 60.942, 32.9031, 1.47 ) }
    dend_5 { pt3dadd( 55.2578, 61.4004, 33.1107, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 23.9048, 16.6606, 1.17665, 0.96 ) }
    dend_4 { pt3dadd( 23.5046, 17.353, 1.05148, 0.96 ) }
    dend_4 { pt3dadd( 23.0926, 18.2685, 0.915656, 0.81 ) }
    dend_4 { pt3dadd( 22.6293, 19.6347, 0.752171, 0.52 ) }
    dend_4 { pt3dadd( 22.3901, 20.6714, 0.656793, 0.52 ) }
    dend_4 { pt3dadd( 22.22, 21.8525, 0.534053, 0.52 ) }
    dend_4 { pt3dadd( 22.1233, 22.9263, 0.411602, 0.66 ) }
    dend_4 { pt3dadd( 22.1394, 24.1864, 0.235869, 0.96 ) }
    dend_4 { pt3dadd( 22.2649, 25.0024, 0.116924, 1.11 ) }
    dend_4 { pt3dadd( 22.5387, 25.9205, 0.0212741, 1.25 ) }
    dend_4 { pt3dadd( 22.938, 27.0026, -0.0362907, 1.25 ) }
    dend_4 { pt3dadd( 23.0349, 27.264, -0.0309669, 1.33 ) }
    dend_4 { pt3dadd( 23.2813, 28.0474, 0.0302024, 0.88 ) }
    dend_4 { pt3dadd( 23.4737, 28.9746, 0.16771, 0.59 ) }
    dend_4 { pt3dadd( 23.5895, 30.0458, 0.42574, 0.52 ) }
    dend_4 { pt3dadd( 23.6151, 31.1054, 0.752958, 0.52 ) }
    dend_4 { pt3dadd( 23.5771, 32.3747, 1.22273, 1.25 ) }
    dend_4 { pt3dadd( 23.5194, 33.1485, 1.51794, 1.77 ) }
    dend_4 { pt3dadd( 23.3932, 34.1367, 1.90842, 1.77 ) }
    dend_4 { pt3dadd( 23.1883, 35.3431, 2.43282, 1.47 ) }
    dend_4 { pt3dadd( 22.918, 36.7414, 3.12501, 1.99 ) }
    dend_4 { pt3dadd( 22.7999, 37.3292, 3.44995, 2.58 ) }
    dend_4 { pt3dadd( 22.6779, 37.8981, 3.80091, 2.87 ) }
    dend_4 { pt3dadd( 22.5675, 38.3535, 4.11568, 2.87 ) }
    dend_4 { pt3dadd( 22.2999, 39.3239, 4.87688, 2.06 ) }
    dend_4 { pt3dadd( 21.9847, 40.1926, 5.66753, 1.25 ) }
    dend_4 { pt3dadd( 21.7019, 40.8435, 6.31422, 0.81 ) }
    dend_4 { pt3dadd( 21.4305, 41.4383, 6.89023, 0.59 ) }
    dend_4 { pt3dadd( 21.113, 42.1224, 7.51017, 0.29 ) }
    dend_4 { pt3dadd( 20.9626, 42.4573, 7.78246, 0.29 ) }
    dend_4 { pt3dadd( 20.7146, 43.0327, 8.20354, 0.44 ) }
    dend_4 { pt3dadd( 20.3743, 43.9466, 8.82155, 0.59 ) }
    dend_4 { pt3dadd( 20.1462, 44.6916, 9.34553, 1.11 ) }
    dend_4 { pt3dadd( 20.0249, 45.257, 9.78117, 1.33 ) }
    dend_4 { pt3dadd( 19.9889, 45.655, 10.147, 1.47 ) }
    dend_4 { pt3dadd( 20.0118, 46.167, 10.7141, 1.33 ) }
    dend_4 { pt3dadd( 20.0932, 46.6014, 11.3299, 0.81 ) }
    dend_4 { pt3dadd( 20.1976, 46.8881, 11.8531, 0.59 ) }
    dend_4 { pt3dadd( 20.401, 47.2968, 12.7696, 0.37 ) }
    dend_4 { pt3dadd( 20.6221, 47.7506, 13.9393, 0.37 ) }
    dend_4 { pt3dadd( 20.792, 48.1543, 15.032, 1.47 ) }
    dend_4 { pt3dadd( 20.867, 48.4073, 15.6844, 1.77 ) }
    dend_4 { pt3dadd( 20.9378, 48.784, 16.6049, 1.77 ) }
    dend_4 { pt3dadd( 20.9781, 49.2127, 17.5712, 1.4 ) }
    dend_4 { pt3dadd( 20.9488, 49.9213, 18.9607, 0.29 ) }
    dend_4 { pt3dadd( 20.92, 50.0846, 19.2167, 0.29 ) }
    dend_4 { pt3dadd( 20.764, 50.774, 20.0816, 1.03 ) }
    dend_4 { pt3dadd( 20.6864, 51.1168, 20.4493, 1.18 ) }
    dend_4 { pt3dadd( 20.6348, 51.3549, 20.673, 1.18 ) }
    dend_4 { pt3dadd( 20.5196, 52.0139, 21.2317, 0.22 ) }
    dend_4 { pt3dadd( 20.4687, 52.6133, 21.6855, 0.22 ) }
    dend_4 { pt3dadd( 20.4151, 54.0198, 22.7038, 2.43 ) }
    dend_4 { pt3dadd( 20.4109, 54.6311, 23.1272, 2.65 ) }
    dend_4 { pt3dadd( 20.4174, 55.0483, 23.4037, 2.8 ) }
    dend_4 { pt3dadd( 20.4236, 55.3381, 23.5751, 2.8 ) }
    dend_4 { pt3dadd( 20.4484, 57.159, 24.4417, 0.37 ) }
    dend_4 { pt3dadd( 20.436, 58.0195, 24.7371, 0.29 ) }
    dend_4 { pt3dadd( 20.3932, 58.9102, 24.9385, 0.29 ) }
    dend_4 { pt3dadd( 20.3103, 60.0768, 25.1073, 0.88 ) }
    dend_4 { pt3dadd( 20.1912, 61.4567, 25.2887, 1.47 ) }
    dend_4 { pt3dadd( 20.0631, 62.6834, 25.4605, 2.28 ) }
    dend_4 { pt3dadd( 19.9351, 63.8004, 25.6734, 2.5 ) }
    dend_4 { pt3dadd( 19.8683, 64.4436, 25.8427, 2.8 ) }
    dend_4 { pt3dadd( 19.7553, 65.9397, 26.4194, 0.88 ) }
    dend_4 { pt3dadd( 19.7003, 67.2068, 27.1426, 0.44 ) }
    dend_4 { pt3dadd( 19.6926, 68.535, 28.1727, 0.44 ) }
    dend_4 { pt3dadd( 19.7195, 69.6861, 29.2743, 0.37 ) }
    dend_4 { pt3dadd( 19.7576, 70.5275, 30.2112, 0.37 ) }
    dend_4 { pt3dadd( 19.8071, 71.6129, 31.5407, 1.55 ) }
    dend_4 { pt3dadd( 19.7759, 72.7858, 32.8845, 3.09 ) }
    dend_4 { pt3dadd( 19.7099, 73.3959, 33.4821, 3.68 ) }
    dend_4 { pt3dadd( 19.5486, 74.1988, 34.1151, 4.13 ) }
    dend_4 { pt3dadd( 19.3836, 74.7714, 34.455, 4.13 ) }
    dend_4 { pt3dadd( 19.01, 75.8223, 34.9237, 3.76 ) }
    dend_4 { pt3dadd( 17.6956, 78.9908, 35.9693, 0.44 ) }
    dend_4 { pt3dadd( 17.1724, 80.1854, 36.2522, 0.37 ) }
    dend_4 { pt3dadd( 16.4908, 81.7089, 36.5349, 1.03 ) }
    dend_4 { pt3dadd( 16.0613, 82.6652, 36.6749, 1.11 ) }
    dend_4 { pt3dadd( 15.6937, 83.4908, 36.7776, 1.11 ) }
    dend_4 { pt3dadd( 15.1579, 84.7659, 36.9152, 0.22 ) }
    dend_4 { pt3dadd( 14.8282, 85.8112, 37.1134, 0.74 ) }
    dend_4 { pt3dadd( 14.7405, 86.2378, 37.2275, 0.74 ) }
    dend_4 { pt3dadd( 14.6905, 86.7068, 37.3998, 0.44 ) }
    dend_4 { pt3dadd( 14.6693, 87.0869, 37.5791, 0.22 ) }
    dend_4 { pt3dadd( 14.6277, 88.1689, 38.1599, 0.22 ) }
    dend_4 { pt3dadd( 14.5504, 90.2638, 39.3715, 3.39 ) }
    dend_4 { pt3dadd( 14.4955, 91.3362, 40.0377, 4.13 ) }
    dend_4 { pt3dadd( 14.4712, 91.7954, 40.3325, 4.35 ) }
    dend_4 { pt3dadd( 14.3328, 94.4424, 41.9998, 0.29 ) }
    dend_4 { pt3dadd( 14.3016, 95.1196, 42.408, 0.52 ) }
    dend_4 { pt3dadd( 14.2629, 95.9197, 42.872, 0.59 ) }
    dend_4 { pt3dadd( 14.2286, 96.4474, 43.1367, 0.59 ) }
    dend_4 { pt3dadd( 14.1478, 97.5658, 43.6281, 0.29 ) }
    dend_4 { pt3dadd( 14.0763, 98.5869, 44.0357, 0.29 ) }
    dend_4 { pt3dadd( 13.9742, 100.016, 44.5191, 1.62 ) }
    dend_4 { pt3dadd( 13.8671, 101.335, 44.9178, 2.43 ) }
    dend_4 { pt3dadd( 13.8124, 102.045, 45.1316, 2.43 ) }
    dend_4 { pt3dadd( 13.6929, 103.734, 45.6594, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 13.6438, 104.537, 45.9274, 0.29 ) }
    dend_4 { pt3dadd( 13.6217, 105.242, 46.2041, 0.22 ) }
    dend_4 { pt3dadd( 13.6209, 105.843, 46.4529, 0.22 ) }
    dend_4 { pt3dadd( 13.6409, 107.126, 46.9765, 0.22 ) }
    dend_4 { pt3dadd( 13.6783, 108.584, 47.5907, 1.84 ) }
    dend_4 { pt3dadd( 13.6949, 109.314, 47.875, 2.8 ) }
    dend_4 { pt3dadd( 13.704, 110.03, 48.1377, 2.87 ) }
    dend_4 { pt3dadd( 13.7052, 110.916, 48.4525, 2.28 ) }
    dend_4 { pt3dadd( 13.6412, 112.845, 49.0828, 0.29 ) }
    dend_4 { pt3dadd( 13.5859, 113.481, 49.251, 0.22 ) }
    dend_4 { pt3dadd( 13.4574, 114.623, 49.5199, 0.81 ) }
    dend_4 { pt3dadd( 13.3947, 115.108, 49.6303, 0.96 ) }
    dend_4 { pt3dadd( 13.3189, 115.678, 49.7643, 0.37 ) }
    dend_4 { pt3dadd( 13.2443, 116.375, 49.9928, 0.15 ) }
    dend_4 { pt3dadd( 13.1736, 117.246, 50.3578, 0.29 ) }
    dend_4 { pt3dadd( 13.1397, 117.78, 50.6253, 0.29 ) }
    dend_4 { pt3dadd( 13.1087, 118.578, 51.0929, 0.15 ) }
    dend_4 { pt3dadd( 13.1033, 119.006, 51.3517, 0.15 ) }
    dend_4 { pt3dadd( 13.1305, 120.432, 52.2452, 1.84 ) }
    dend_4 { pt3dadd( 13.1567, 120.982, 52.6085, 2.36 ) }
    dend_4 { pt3dadd( 13.1915, 121.54, 52.9944, 2.5 ) }
    dend_4 { pt3dadd( 13.239, 122.363, 53.5674, 1.84 ) }
    dend_4 { pt3dadd( 13.3225, 123.706, 54.5423, 0.22 ) }
    dend_4 { pt3dadd( 13.3501, 124.21, 54.9121, 0.22 ) }
    dend_4 { pt3dadd( 13.4141, 125.276, 55.6665, 1.11 ) }
    dend_4 { pt3dadd( 13.4391, 125.615, 55.9157, 1.25 ) }
    dend_4 { pt3dadd( 13.4668, 125.95, 56.1667, 0.66 ) }
    dend_4 { pt3dadd( 13.5729, 127.029, 57.0119, 0.22 ) }
    dend_4 { pt3dadd( 13.697, 127.821, 57.6127, 0.22 ) }
    dend_4 { pt3dadd( 13.8972, 128.861, 58.3581, 0.22 ) }
    dend_4 { pt3dadd( 14.307, 130.692, 59.6142, 2.43 ) }
    dend_4 { pt3dadd( 14.4641, 131.382, 60.071, 2.87 ) }
    dend_4 { pt3dadd( 14.5138, 131.605, 60.2128, 2.87 ) }
    dend_4 { pt3dadd( 15.0112, 133.906, 61.6895, 0.22 ) }
    dend_4 { pt3dadd( 15.1537, 134.643, 62.1843, 0.74 ) }
    dend_4 { pt3dadd( 15.2161, 135.055, 62.4705, 0.74 ) }
    dend_4 { pt3dadd( 15.3133, 136.082, 63.1839, 0.22 ) }
    dend_4 { pt3dadd( 15.3089, 136.781, 63.67, 0.22 ) }
    dend_4 { pt3dadd( 15.127, 138.27, 64.6758, 2.14 ) }
    dend_4 { pt3dadd( 14.9381, 138.941, 65.12, 2.87 ) }
    dend_4 { pt3dadd( 14.8145, 139.277, 65.3292, 3.09 ) }
    dend_4 { pt3dadd( 14.505, 140.019, 65.734, 2.43 ) }
    dend_4 { pt3dadd( 13.7837, 141.695, 66.532, 0.37 ) }
    dend_4 { pt3dadd( 13.4687, 142.466, 66.852, 0.29 ) }
    dend_4 { pt3dadd( 13.2046, 143.183, 67.1101, 0.37 ) }
    dend_4 { pt3dadd( 12.998, 143.924, 67.3971, 0.29 ) }
    dend_4 { pt3dadd( 12.8607, 144.691, 67.7276, 0.29 ) }
    dend_4 { pt3dadd( 12.7865, 145.552, 68.1547, 0.37 ) }
    dend_4 { pt3dadd( 12.7918, 146.217, 68.5445, 0.59 ) }
    dend_4 { pt3dadd( 12.8003, 146.755, 68.8879, 0.59 ) }
    dend_4 { pt3dadd( 12.8009, 147.622, 69.4588, 0.22 ) }
    dend_4 { pt3dadd( 12.766, 148.533, 70.062, 1.33 ) }
    dend_4 { pt3dadd( 12.6954, 149.188, 70.5011, 1.62 ) }
    dend_4 { pt3dadd( 12.6071, 149.761, 70.8595, 1.25 ) }
    dend_4 { pt3dadd( 12.3478, 151.237, 71.7351, 0.29 ) }
    dend_4 { pt3dadd( 12.2421, 151.831, 72.0756, 0.52 ) }
    dend_4 { pt3dadd( 12.1714, 152.286, 72.336, 0.52 ) }
    dend_4 { pt3dadd( 12.0388, 153.26, 72.8147, 0.22 ) }
    dend_4 { pt3dadd( 11.8988, 154.558, 73.3749, 1.92 ) }
    dend_4 { pt3dadd( 11.8283, 155.421, 73.7114, 2.73 ) }
    dend_4 { pt3dadd( 11.8045, 155.84, 73.8608, 2.95 ) }
    dend_4 { pt3dadd( 11.7776, 156.426, 74.0595, 3.24 ) }
    dend_4 { pt3dadd( 11.6692, 159.306, 74.9698, 0.29 ) }
    dend_4 { pt3dadd( 11.6535, 159.956, 75.1629, 0.29 ) }
    dend_4 { pt3dadd( 11.6639, 160.996, 75.464, 0.88 ) }
    dend_4 { pt3dadd( 11.6936, 161.717, 75.6722, 0.88 ) }
    dend_4 { pt3dadd( 11.731, 162.364, 75.8489, 0.88 ) }
    dend_4 { pt3dadd( 11.907, 163.652, 76.311, 0.29 ) }
    dend_4 { pt3dadd( 12.1109, 164.643, 76.7662, 0.29 ) }
    dend_4 { pt3dadd( 12.5411, 166.611, 77.7429, 2.43 ) }
    dend_4 { pt3dadd( 12.6583, 167.114, 78.0072, 3.02 ) }
    dend_4 { pt3dadd( 12.8545, 167.866, 78.4194, 3.24 ) }
    dend_4 { pt3dadd( 13.7497, 170.947, 80.2491, 0.22 ) }
    dend_4 { pt3dadd( 14.0676, 171.945, 80.896, 0.52 ) }
    dend_4 { pt3dadd( 14.2015, 172.35, 81.1742, 0.52 ) }
    dend_4 { pt3dadd( 14.4123, 172.939, 81.5812, 0.22 ) }
    dend_4 { pt3dadd( 14.5888, 173.404, 81.8828, 0.22 ) }
    dend_4 { pt3dadd( 15.0498, 174.583, 82.5969, 1.33 ) }
    dend_4 { pt3dadd( 15.2374, 175.098, 82.835, 1.69 ) }
    dend_4 { pt3dadd( 15.3939, 175.525, 83.0339, 1.69 ) }
    dend_4 { pt3dadd( 15.9369, 177.148, 83.7999, 0.22 ) }
    dend_4 { pt3dadd( 16.126, 177.809, 84.1697, 0.66 ) }
    dend_4 { pt3dadd( 16.2081, 178.162, 84.395, 0.66 ) }
    dend_4 { pt3dadd( 16.3187, 178.71, 84.7832, 0.66 ) }
    dend_4 { pt3dadd( 16.457, 179.512, 85.424, 0.22 ) }
    dend_4 { pt3dadd( 16.5035, 179.913, 85.7355, 0.22 ) }
    dend_4 { pt3dadd( 16.6146, 181.613, 87.1293, 1.99 ) }
    dend_4 { pt3dadd( 16.6413, 182.122, 87.5352, 2.65 ) }
    dend_4 { pt3dadd( 16.6634, 182.504, 87.8254, 2.8 ) }
    dend_4 { pt3dadd( 16.7177, 183.184, 88.3194, 2.14 ) }
    dend_4 { pt3dadd( 16.9765, 184.723, 89.4909, 0.22 ) }
    dend_4 { pt3dadd( 17.2385, 185.758, 90.2811, 0.22 ) }
    dend_4 { pt3dadd( 17.5931, 186.867, 91.0964, 1.25 ) }
    dend_4 { pt3dadd( 17.7396, 187.27, 91.4019, 1.47 ) }
    dend_4 { pt3dadd( 17.8978, 187.65, 91.7258, 1.25 ) }
    dend_4 { pt3dadd( 18.5387, 188.943, 93.0482, 0.52 ) }
    dend_4 { pt3dadd( 18.8047, 189.422, 93.6272, 0.29 ) }
    dend_4 { pt3dadd( 19.0453, 189.883, 94.1826, 0.29 ) }
    dend_4 { pt3dadd( 19.3169, 190.407, 94.7951, 0.29 ) }
    dend_4 { pt3dadd( 19.8853, 191.6, 96.0792, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( 20.1236, 192.194, 96.6662, 2.28 ) }
    dend_4 { pt3dadd( 20.2729, 192.699, 97.1239, 2.5 ) }
    dend_4 { pt3dadd( 20.7381, 194.481, 98.831, 0.29 ) }
    dend_4 { pt3dadd( 20.9506, 195.353, 99.6911, 0.22 ) }
    dend_4 { pt3dadd( 21.101, 196.035, 100.382, 0.22 ) }
    dend_4 { pt3dadd( 21.1753, 196.48, 100.848, 0.22 ) }
    dend_4 { pt3dadd( 21.3014, 197.198, 101.714, 0.22 ) }
    dend_4 { pt3dadd( 21.5009, 198.365, 103.31, 1.77 ) }
    dend_4 { pt3dadd( 21.5628, 198.73, 103.85, 2.36 ) }
    dend_4 { pt3dadd( 21.6443, 199.084, 104.396, 2.65 ) }
    dend_4 { pt3dadd( 21.8167, 199.586, 105.168, 2.8 ) }
    dend_4 { pt3dadd( 22.6452, 201.236, 107.513, 0.29 ) }
    dend_4 { pt3dadd( 22.9545, 201.723, 108.14, 0.22 ) }
    dend_4 { pt3dadd( 23.3622, 202.294, 108.788, 0.22 ) }
    dend_4 { pt3dadd( 23.7196, 202.7, 109.237, 0.22 ) }
    dend_4 { pt3dadd( 24.0947, 203.062, 109.598, 0.22 ) }
    dend_4 { pt3dadd( 25.2994, 204.07, 110.477, 1.47 ) }
    dend_4 { pt3dadd( 25.6061, 204.295, 110.654, 1.99 ) }
    dend_4 { pt3dadd( 25.9896, 204.547, 110.869, 1.99 ) }
    dend_4 { pt3dadd( 27.8573, 205.698, 111.966, 0.15 ) }
    dend_4 { pt3dadd( 28.5469, 206.111, 112.383, 0.29 ) }
    dend_4 { pt3dadd( 28.8597, 206.276, 112.555, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 31.0268, -22.1581, -32.1981, 0.22 ) }
    dend_16 { pt3dadd( 30.6593, -25.2036, -34.3066, 0.22 ) }
    dend_16 { pt3dadd( 30.5626, -25.9698, -34.8124, 1.11 ) }
    dend_16 { pt3dadd( 30.5099, -26.387, -35.0923, 1.11 ) }
    dend_16 { pt3dadd( 30.3621, -27.7322, -35.9477, 0.22 ) }
    dend_16 { pt3dadd( 30.0873, -30.7043, -37.7405, 0.22 ) }
    dend_16 { pt3dadd( 30.0006, -32.0013, -38.5459, 2.06 ) }
    dend_16 { pt3dadd( 29.9873, -32.8892, -39.0624, 2.65 ) }
    dend_16 { pt3dadd( 30.0062, -33.6383, -39.514, 2.65 ) }
    dend_16 { pt3dadd( 30.0892, -35.0171, -40.3398, 1.03 ) }
    dend_16 { pt3dadd( 30.2018, -36.0132, -40.9244, 0.22 ) }
    dend_16 { pt3dadd( 30.5412, -37.7622, -41.8121, 0.52 ) }
    dend_16 { pt3dadd( 30.648, -38.1793, -42.0064, 0.52 ) }
    dend_16 { pt3dadd( 30.7807, -38.6132, -42.1997, 0.29 ) }
    dend_16 { pt3dadd( 31.0568, -39.5733, -42.6679, 1.03 ) }
    dend_16 { pt3dadd( 31.2304, -40.2391, -43.0236, 0.96 ) }
    dend_16 { pt3dadd( 31.4079, -41.0917, -43.5428, 0.59 ) }
    dend_16 { pt3dadd( 31.5095, -41.9214, -44.1422, 1.84 ) }
    dend_16 { pt3dadd( 31.5647, -42.5415, -44.6578, 2.36 ) }
    dend_16 { pt3dadd( 31.6589, -44.3177, -46.3568, 0.88 ) }
    dend_16 { pt3dadd( 31.7126, -44.9048, -46.9679, 0.29 ) }
    dend_16 { pt3dadd( 31.8592, -46.1652, -48.2878, 0.29 ) }
    dend_16 { pt3dadd( 32.1096, -47.8971, -50.1082, 1.69 ) }
    dend_16 { pt3dadd( 32.2035, -48.3965, -50.6192, 2.21 ) }
    dend_16 { pt3dadd( 32.4101, -49.3024, -51.5028, 2.21 ) }
    dend_16 { pt3dadd( 33.4652, -53.2435, -55.1205, 0.44 ) }
    dend_16 { pt3dadd( 33.6326, -53.8175, -55.6195, 0.74 ) }
    dend_16 { pt3dadd( 33.6824, -53.9752, -55.7439, 0.74 ) }
    dend_16 { pt3dadd( 33.9922, -54.8842, -56.4335, 0.22 ) }
    dend_16 { pt3dadd( 34.4274, -56.214, -57.4172, 0.88 ) }
    dend_16 { pt3dadd( 34.5064, -56.466, -57.6, 0.88 ) }
    dend_16 { pt3dadd( 34.8251, -57.7005, -58.5712, 0.22 ) }
    dend_16 { pt3dadd( 35.027, -58.6036, -59.2882, 0.22 ) }
    dend_16 { pt3dadd( 35.3126, -60.2057, -60.556, 1.84 ) }
    dend_16 { pt3dadd( 35.382, -60.7881, -61.0131, 2.21 ) }
    dend_16 { pt3dadd( 35.4707, -61.5556, -61.5993, 2.21 ) }
    dend_16 { pt3dadd( 35.816, -64.3207, -63.7307, 0.29 ) }
    dend_16 { pt3dadd( 35.949, -65.4173, -64.6081, 0.15 ) }
    dend_16 { pt3dadd( 36.0816, -66.6502, -65.5868, 0.96 ) }
    dend_16 { pt3dadd( 36.2342, -68.3567, -66.9405, 0.22 ) }
    dend_16 { pt3dadd( 36.4386, -71.5199, -69.5705, 0.22 ) }
    dend_16 { pt3dadd( 36.4925, -73.2607, -71.0413, 2.21 ) }
    dend_16 { pt3dadd( 36.4918, -74.6217, -72.2463, 2.8 ) }
    dend_16 { pt3dadd( 36.4324, -76.8517, -74.3283, 0.22 ) }
    dend_16 { pt3dadd( 36.3715, -77.9214, -75.3264, 1.03 ) }
    dend_16 { pt3dadd( 36.0909, -80.8526, -78.0756, 0.22 ) }
    dend_16 { pt3dadd( 35.8617, -82.3061, -79.4499, 1.77 ) }
    dend_16 { pt3dadd( 35.6669, -83.3876, -80.4595, 2.06 ) }
    dend_16 { pt3dadd( 35.2556, -85.6696, -82.5651, 0.22 ) }
    dend_16 { pt3dadd( 35.0905, -86.5913, -83.4386, 1.33 ) }
    dend_16 { pt3dadd( 34.9027, -87.6995, -84.46, 1.62 ) }
    dend_16 { pt3dadd( 34.5091, -90.2154, -86.6137, 0.22 ) }
    dend_16 { pt3dadd( 34.4447, -90.6492, -86.9723, 0.74 ) }
    dend_16 { pt3dadd( 34.3661, -91.1327, -87.3647, 0.74 ) }
    dend_16 { pt3dadd( 34.1567, -92.4518, -88.4485, 0.22 ) }
    dend_16 { pt3dadd( 34.0463, -93.3623, -89.1609, 0.22 ) }
    dend_16 { pt3dadd( 33.9721, -94.2194, -89.7541, 1.03 ) }
    dend_16 { pt3dadd( 33.936, -95.0231, -90.2422, 1.11 ) }
    dend_16 { pt3dadd( 33.8997, -96.9537, -91.4948, 0.22 ) }
    dend_16 { pt3dadd( 33.9082, -98.6611, -92.519, 0.22 ) }
    dend_16 { pt3dadd( 33.9478, -100.064, -93.3167, 1.92 ) }
    dend_16 { pt3dadd( 33.9691, -100.658, -93.6448, 2.58 ) }
    dend_16 { pt3dadd( 33.9946, -101.17, -93.9208, 2.58 ) }
    dend_16 { pt3dadd( 34.2033, -104.809, -95.7405, 0.29 ) }
    dend_16 { pt3dadd( 34.3883, -107.672, -97.0946, 0.29 ) }
    dend_16 { pt3dadd( 34.4386, -108.431, -97.4869, 1.03 ) }
    dend_16 { pt3dadd( 34.5021, -109.375, -98.0232, 1.25 ) }
    dend_16 { pt3dadd( 34.8192, -113.307, -100.291, 0.22 ) }
    dend_16 { pt3dadd( 34.9578, -114.409, -101.007, 0.74 ) }
    dend_16 { pt3dadd( 35.0304, -114.815, -101.287, 0.74 ) }
    dend_16 { pt3dadd( 35.4777, -116.861, -102.888, 0.22 ) }
    dend_16 { pt3dadd( 35.7223, -117.856, -103.693, 1.69 ) }
    dend_16 { pt3dadd( 35.9259, -118.564, -104.287, 2.5 ) }
    dend_16 { pt3dadd( 37.5178, -123.402, -108.347, 0.22 ) }
    dend_16 { pt3dadd( 37.7931, -124.19, -108.984, 0.74 ) }
    dend_16 { pt3dadd( 38.0606, -124.913, -109.51, 0.74 ) }
    dend_16 { pt3dadd( 38.3693, -125.691, -110.015, 0.22 ) }
    dend_16 { pt3dadd( 39.6225, -128.701, -111.84, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_16 { pt3dadd( 40.2011, -130.014, -112.547, 1.99 ) }
    dend_16 { pt3dadd( 40.5117, -130.678, -112.823, 2.21 ) }
    dend_16 { pt3dadd( 41.3326, -132.465, -113.538, 0.22 ) }
    dend_16 { pt3dadd( 41.8463, -133.575, -113.961, 0.96 ) }
    dend_16 { pt3dadd( 42.0653, -134.067, -114.139, 1.18 ) }
    dend_16 { pt3dadd( 43.0635, -136.415, -114.92, 0.22 ) }
    dend_16 { pt3dadd( 43.3607, -137.156, -115.182, 0.22 ) }
    dend_16 { pt3dadd( 43.7588, -138.15, -115.545, 0.81 ) }
    dend_16 { pt3dadd( 44.0112, -138.767, -115.796, 0.81 ) }
    dend_16 { pt3dadd( 45.0511, -141.149, -117.113, 0.22 ) }
    dend_16 { pt3dadd( 45.4547, -142.018, -117.704, 0.44 ) }
    dend_16 { pt3dadd( 45.7455, -142.61, -118.169, 0.15 ) }
    dend_16 { pt3dadd( 46.3932, -143.8, -119.194, 1.11 ) }
    dend_16 { pt3dadd( 47.2844, -145.281, -120.609, 0.22 ) }
    dend_16 { pt3dadd( 48.8861, -147.744, -123.099, 1.03 ) }
    dend_16 { pt3dadd( 49.4048, -148.452, -123.894, 0.81 ) }
    dend_16 { pt3dadd( 49.7403, -148.884, -124.487, 0.52 ) }
    dend_16 { pt3dadd( 50.0748, -149.295, -125.153, 0.81 ) }
    dend_16 { pt3dadd( 50.3398, -149.601, -125.722, 0.81 ) }
    dend_16 { pt3dadd( 50.9371, -150.333, -126.986, 0.22 ) }
    dend_16 { pt3dadd( 51.562, -151.168, -128.302, 0.96 ) }
    dend_16 { pt3dadd( 53.3565, -153.729, -132.299, 0.37 ) }
    dend_16 { pt3dadd( 54.3046, -155.188, -134.505, 1.4 ) }
    dend_16 { pt3dadd( 55.0429, -156.434, -136.3, 1.03 ) }
    dend_16 { pt3dadd( 55.9213, -158.048, -138.53, 0.22 ) }
    dend_16 { pt3dadd( 56.2274, -158.678, -139.397, 0.96 ) }
    dend_16 { pt3dadd( 56.4552, -159.203, -140.062, 0.96 ) }
    dend_16 { pt3dadd( 56.7764, -160.036, -140.986, 0.59 ) }
    dend_16 { pt3dadd( 57.1504, -161.044, -142.113, 1.18 ) }
    dend_16 { pt3dadd( 57.5227, -161.992, -143.2, 1.33 ) }
    dend_16 { pt3dadd( 59.1756, -165.68, -147.557, 0.22 ) }
    dend_16 { pt3dadd( 59.4194, -166.174, -148.115, 0.88 ) }
    dend_16 { pt3dadd( 59.6344, -166.569, -148.535, 0.88 ) }
    dend_16 { pt3dadd( 60.6355, -168.187, -150.176, 0.22 ) }
    dend_16 { pt3dadd( 61.9724, -169.92, -151.773, 0.22 ) }
    dend_16 { pt3dadd( 62.7829, -170.779, -152.459, 1.18 ) }
    dend_16 { pt3dadd( 63.2531, -171.184, -152.736, 1.47 ) }
    dend_16 { pt3dadd( 64.2001, -171.791, -153.254, 0.15 ) }
    dend_16 { pt3dadd( 65.3403, -172.373, -153.921, 0.44 ) }
    dend_16 { pt3dadd( 68.1836, -173.545, -155.593, 0.22 ) }
    dend_16 { pt3dadd( 69.0385, -173.848, -156.148, 0.74 ) }
    dend_16 { pt3dadd( 69.6261, -174.038, -156.569, 0.74 ) }
    dend_16 { pt3dadd( 74.6478, -175.548, -160.441, 0.29 ) }
    dend_16 { pt3dadd( 76.943, -176.196, -162.279, 1.03 ) }
    dend_16 { pt3dadd( 77.4553, -176.328, -162.701, 1.03 ) }
    dend_16 { pt3dadd( 79.5129, -176.887, -164.377, 0.29 ) }
    dend_16 { pt3dadd( 80.5216, -177.204, -165.166, 0.74 ) }
    dend_16 { pt3dadd( 82.0392, -177.777, -166.269, 0.22 ) }
    dend_16 { pt3dadd( 83.4344, -178.44, -167.156, 1.84 ) }
    dend_16 { pt3dadd( 84.1363, -178.818, -167.511, 1.84 ) }
    dend_16 { pt3dadd( 87.2158, -180.664, -168.873, 0.15 ) }
    dend_16 { pt3dadd( 88.1904, -181.335, -169.191, 0.74 ) }
    dend_16 { pt3dadd( 88.7486, -181.785, -169.343, 0.74 ) }
    dend_16 { pt3dadd( 89.4285, -182.427, -169.488, 0.22 ) }
    dend_16 { pt3dadd( 90.0917, -183.162, -169.633, 0.59 ) }
    dend_16 { pt3dadd( 90.3286, -183.458, -169.683, 0.59 ) }
    dend_16 { pt3dadd( 91.3175, -184.901, -169.967, 0.22 ) }
    dend_16 { pt3dadd( 91.7356, -185.572, -170.121, 0.74 ) }
    dend_16 { pt3dadd( 91.9367, -185.922, -170.225, 0.74 ) }
    dend_16 { pt3dadd( 92.7437, -187.473, -170.742, 0.15 ) }
    dend_16 { pt3dadd( 93.2929, -188.61, -171.145, 0.15 ) }
    dend_16 { pt3dadd( 93.7335, -189.55, -171.528, 0.59 ) }
    dend_16 { pt3dadd( 94.0336, -190.195, -171.805, 0.59 ) }
    dend_16 { pt3dadd( 95.2013, -192.699, -172.871, 0.22 ) }
    dend_16 { pt3dadd( 95.5736, -193.506, -173.214, 0.74 ) }
    dend_16 { pt3dadd( 95.791, -193.985, -173.412, 0.74 ) }
    dend_16 { pt3dadd( 97.1195, -196.932, -174.64, 0.22 ) }
    dend_16 { pt3dadd( 98.1243, -199.066, -175.483, 0.22 ) }
    dend_16 { pt3dadd( 98.4992, -199.829, -175.785, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 31.0268, -22.1581, -32.1981, 0.22 ) }
    dend_15 { pt3dadd( 32.3688, -23.5147, -32.3921, 0.22 ) }
    dend_15 { pt3dadd( 34.174, -25.3395, -32.653, 0.22 ) }
    dend_15 { pt3dadd( 34.7229, -25.8943, -32.7323, 0.74 ) }
    dend_15 { pt3dadd( 35.3674, -26.5458, -32.8255, 0.74 ) }
    dend_15 { pt3dadd( 37.3289, -28.5286, -33.109, 0.22 ) }
    dend_15 { pt3dadd( 37.9115, -29.1176, -33.1932, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_47 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_42 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_41 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_5 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_45 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_31 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_8 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 5
    dend_47 nseg = 3
    dend_26 nseg = 5
    dend_17 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 9
    dend_34 nseg = 9
    dend_35 nseg = 3
    dend_23 nseg = 3
    dend_11 nseg = 3
    dend_13 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 11
    dend_16 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_NBC_ebdeb060a6_0_0


