// Cell: cNAC187_L23_LBC_95f37b59ec_0_0
/*
{
  "id" : "cNAC187_L23_LBC_95f37b59ec_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.94076, -9.8712, -1.65398, 2.77643", "-2.68752, -8.89837, -1.49144, 3.78775", "-2.43427, -7.92553, -1.32889, 4.91862", "-2.18103, -6.95269, -1.16635, 5.95702", "-1.92778, -5.97986, -1.00381, 6.99541", "-1.67453, -5.00702, -0.841265, 8.01733", "-1.42129, -4.03418, -0.678723, 8.72435", "-1.16804, -3.06135, -0.516181, 9.35315", "-0.914798, -2.08851, -0.353638, 9.98195", "-0.661552, -1.11567, -0.191096, 10.5", "-0.408307, -0.142835, -0.0285532, 10.7936", "-0.155061, 0.830002, 0.133989, 11.1592", "0.0981843, 1.80284, 0.296532, 11.5247", "0.35143, 2.77568, 0.459074, 11.423", "0.604675, 3.74851, 0.621617, 11.7952", "0.857921, 4.72135, 0.784159, 12.2515", "1.11117, 5.69419, 0.946702, 11.9034", "1.36441, 6.66702, 1.10924, 10.4337", "1.61766, 7.63986, 1.27179, 8.34249", "1.8709, 8.6127, 1.43433, 5.63558", "2.12415, 9.58553, 1.59687, 3.26719" ]
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.931045, 7.08157, 20.757, 0.83", "0.665304, 10.5867, 20.7792, 0.83", "0.564127, 13.6878, 20.794, 0.83", "0.570604, 16.0274, 20.8023, 1.11", "0.61751, 18.177, 20.8084, 0.83", "0.687667, 20.8753, 20.8156, 0.83", "0.762815, 22.4031, 20.8185, 0.83", "0.911205, 23.5899, 20.8602, 0.83", "1.04093, 24.6378, 20.9755, 1.11", "1.23285, 26.0245, 21.211, 0.83", "1.367, 26.983, 21.4126, 1.11", "1.52347, 28.6037, 21.7947, 0.83", "1.78686, 30.8159, 22.302, 1.11", "2.07385, 33.2515, 22.83, 0.83", "2.28493, 35.1256, 23.188, 0.55", "2.49183, 36.9481, 23.461, 0.55", "2.59535, 38.1609, 23.5919, 0.83", "2.72668, 40.9334, 23.778, 0.83", "2.80908, 42.6441, 23.8126, 0.83", "2.8852, 45.0863, 23.8109, 0.55", "2.97719, 48.7417, 23.8087, 1.11", "2.97416, 51.2265, 23.943, 0.83", "2.92599, 52.9019, 24.108, 1.11", "2.76797, 55.7524, 24.5038, 0.55", "2.69234, 57.0063, 24.7389, 0.55", "2.35522, 60.313, 25.5234, 0.55", "1.8887, 63.8582, 26.5835, 0.83", "1.6397, 65.4779, 27.1559, 0.55", "1.4816, 66.5773, 27.5725, 0.83", "1.24954, 68.1302, 28.1819, 0.83", "0.983115, 70.2329, 28.9628, 0.83", "0.625607, 73.8679, 30.2228, 1.11", "0.480513, 76.401, 30.9683, 0.55", "0.387141, 79.6451, 31.933, 0.83", "0.397273, 81.0823, 32.3426, 0.55", "0.467045, 83.164, 32.9115, 0.83", "0.579405, 84.7185, 33.331, 0.28", "0.696456, 85.8725, 33.5909, 0.55", "0.835445, 86.895, 33.7698, 0.28", "1.03008, 89.2423, 34.1537, 0.83", "1.09224, 97.6942, 35.7887, 0.83", "-0.251791, 105.528, 39.0389, 0.83", "-1.5817, 112.732, 43.4702, 0.83", "-3.35626, 120.37, 46.9566, 0.83", "-4.74403, 128.08, 50.4611, 0.83", "-5.76314, 136.234, 53.0016, 0.83", "-7.84005, 144.507, 54.1747, 0.83", "-9.0105, 153.046, 54.2322, 0.83", "-10.8332, 161.425, 53.4123, 0.83", "-12.6733, 169.803, 52.6312, 0.83", "-14.9603, 177.974, 51.1915, 0.83", "-17.8788, 185.986, 50.0581, 0.83", "-20.0518, 194.312, 49.6805, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "1.84105, 8.53707, 11.867, 1.38", "2.44895, 9.34263, 12.0854, 1.38", "3.02207, 10.102, 12.2912, 1.38", "3.97149, 11.3601, 12.6323, 1.11", "4.76101, 12.4063, 12.9159, 1.11", "6.39204, 14.5676, 13.5018, 0.83", "8.12362, 16.8622, 14.1239, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.61104, 4.15007, -0.263001, 2.77", "6.56032, 4.61686, -0.368053, 2.77", "9.37669, 6.00179, -0.67973, 1.66", "13.8648, 8.20878, -1.17641, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.58105, 7.13282, -5.263, 0.83", "4.46325, 7.90652, -5.29657, 0.83", "5.54525, 9.03603, -5.24677, 0.83", "7.18092, 10.93, -5.46716, 0.83", "8.526, 12.513, -5.85822, 0.83", "9.54432, 13.6534, -6.19909, 0.83", "10.923, 15.1304, -6.68356, 0.83", "11.9291, 16.2423, -7.06857, 0.83", "14.4106, 19.2819, -8.14776, 1.11", "15.3859, 20.6022, -8.59212, 0.55", "16.125, 21.6351, -8.90131, 0.55", "16.803, 22.5776, -9.13443, 0.55", "18.0787, 24.3541, -9.48539, 1.11", "19.4139, 26.3177, -9.68874, 0.83", "20.6181, 28.2235, -9.66374, 0.83", "21.5964, 29.9005, -9.62757, 0.55", "22.593, 31.7254, -9.61566, 0.55", "22.9803, 32.4597, -9.60837, 0.83", "24.1819, 34.7734, -9.60078, 0.55", "24.5271, 35.4499, -9.59981, 0.55", "25.1669, 36.8104, -9.63197, 1.11", "25.5666, 37.6743, -9.65549, 1.11", "25.9541, 38.5409, -9.70065, 0.28", "26.4178, 39.6248, -9.84793, 0.55", "26.7267, 40.4522, -10.055, 0.28", "27.0081, 41.3052, -10.3318, 0.83", "27.7666, 43.7278, -11.2161, 0.55", "28.1998, 45.0019, -11.7147, 0.55", "28.8191, 46.7784, -12.4286, 0.83", "29.3424, 48.3152, -13.0303, 0.83", "29.7527, 49.5275, -13.4775, 0.55", "30.3068, 51.0856, -14.0438, 0.55", "30.8685, 52.618, -14.5761, 0.55", "31.096, 53.1421, -14.7119, 0.55", "31.8301, 54.4906, -14.9286, 1.38", "32.6506, 55.7381, -15.065, 0.55", "33.1952, 56.4786, -15.0731, 0.83", "33.4462, 56.8055, -15.0484, 0.28", "34.185, 57.7508, -14.9039, 0.83", "34.8683, 58.5649, -14.7491, 0.28", "35.5208, 59.2819, -14.532, 0.28", "36.8442, 60.8064, -14.0544, 0.55", "37.4373, 61.5091, -13.8218, 0.55", "38.4633, 62.7354, -13.3982, 0.55", "39.4173, 63.9236, -12.9839, 0.55", "40.477, 65.2834, -12.5387, 0.83", "41.3256, 66.4093, -12.2333, 0.83", "41.9127, 67.2608, -12.0636, 0.28", "42.1945, 67.7323, -11.9552, 0.83", "42.8711, 68.954, -11.6987, 0.28", "42.9537, 69.1276, -11.6691, 0.83", "43.5536, 70.5347, -11.5464, 0.28", "43.9433, 71.4774, -11.4596, 0.83", "44.4907, 72.8898, -11.4023, 0.28", "45.0491, 74.3478, -11.3679, 1.11", "45.412, 75.2233, -11.3553, 1.11", "45.7986, 76.039, -11.3795, 0.55", "46.3329, 76.9846, -11.4619, 0.28", "46.7158, 77.601, -11.5478, 0.55", "47.2408, 78.4222, -11.7315, 0.28", "47.7455, 79.1892, -11.8685, 0.83", "48.8264, 80.5916, -12.1041, 0.55", "49.2216, 81.0584, -12.1755, 0.55", "50.3603, 82.3181, -12.3399, 1.11", "52.0168, 84.1001, -12.5051, 0.28", "53.0542, 85.0972, -12.5745, 0.83", "54.2017, 86.131, -12.5692, 0.28", "54.7814, 86.6511, -12.5204, 0.83", "55.7412, 87.5119, -12.4052, 0.28", "56.239, 87.9539, -12.3227, 0.83", "57.7975, 89.4124, -12.0116, 0.83", "58.4404, 90.0724, -11.9013, 0.28", "59.9833, 91.8137, -11.634, 0.28", "60.7507, 92.7107, -11.5111, 1.11", "62.4707, 94.8274, -11.2572, 0.28", "63.287, 95.8697, -11.1386, 1.11", "64.0704, 96.9538, -11.0312, 0.28", "64.527, 97.5729, -10.9798, 0.83", "65.464, 98.8272, -10.8652, 0.28", "65.7091, 99.1674, -10.8292, 0.55", "66.1894, 99.8484, -10.7683, 0.28", "66.4409, 100.18, -10.7283, 0.55", "67.1259, 100.988, -10.6226, 0.28", "67.5415, 101.372, -10.557, 0.55", "68.3671, 102.004, -10.477, 0.28", "68.8452, 102.329, -10.483, 0.55", "69.9124, 102.98, -10.5747, 0.28", "70.2421, 103.154, -10.5969, 0.83", "71.5622, 103.786, -10.7124, 0.28", "72.2412, 104.085, -10.7697, 0.83", "73.6792, 104.768, -10.8766, 0.28", "75.1235, 105.518, -10.9401, 0.28", "76.488, 106.341, -11.0631, 1.11", "77.3657, 106.937, -11.1637, 0.28", "78.1469, 107.534, -11.2514, 0.55", "79.0055, 108.266, -11.3327, 0.28", "79.7438, 108.998, -11.4108, 0.83", "81.2809, 110.813, -11.5136, 0.28", "81.5247, 111.157, -11.5212, 0.55", "82.3111, 112.363, -11.4693, 0.55", "83.141, 113.76, -11.3561, 0.28", "83.6839, 114.788, -11.1661, 1.11", "84.284, 116.291, -10.7487, 0.28", "84.5806, 117.347, -10.4599, 0.55", "84.9101, 119.271, -10.1075, 0.28", "84.9435, 120.063, -10.0431, 0.83", "84.8668, 122.436, -9.76393, 0.28", "84.7355, 124.139, -9.61733, 0.28", "84.4127, 126.728, -9.54427, 0.55", "84.1577, 128.26, -9.54329, 0.28", "83.6384, 130.465, -9.65149, 0.28", "83.0197, 133.369, -10.0256, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.11895, -10.6099, -2.573, 2.22", "-1.22552, -12.8944, -1.38125, 2.22", "-1.41671, -16.9929, 0.756805, 2.77", "-1.73642, -23.8461, 4.33198, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.67895, -9.02118, -5.133, 1.94", "-6.52358, -9.88676, -5.133, 1.94", "-9.76503, -10.8731, -5.133, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-5.96896, 2.04882, 10.787, 1.11", "-7.53044, 3.10445, 11.5722, 0.83", "-10.4354, 4.91039, 12.7293, 0.55", "-11.2006, 5.40889, 12.9903, 0.83", "-12.7753, 6.42254, 13.5126, 0.55", "-14.53, 7.55203, 14.0946, 0.83", "-16.532, 8.84069, 14.7586, 0.55", "-19.0121, 10.3966, 15.5447, 0.55", "-21.7198, 11.9851, 16.1899, 0.55", "-23.2399, 12.884, 16.5405, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.12895, -1.70268, 5.667, 2.49", "-0.847059, -6.27076, 5.667, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.12415, 9.58553, 1.59687, 1.11", "5.90296, 24.1017, 1.59687, 1.11", "9.68178, 38.618, 1.59687, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "8.12362, 16.8622, 14.1239, 0.55", "9.06839, 17.9367, 13.68, 0.55", "10.3935, 19.4404, 13.0336, 0.55", "11.6295, 20.7005, 12.5442, 0.83", "12.8299, 21.8197, 12.1517, 0.83", "14.4493, 23.2388, 11.6941, 0.55", "15.6309, 24.2275, 11.3969, 0.55", "16.8489, 25.1689, 11.1557, 0.83", "18.3767, 26.3418, 10.9451, 0.55", "19.686, 27.3251, 10.9804, 0.55", "20.5392, 27.9933, 11.118, 0.28", "21.36, 28.6781, 11.3657, 0.28", "22.5655, 29.7273, 11.9342, 0.55", "24.2086, 31.3071, 12.889, 0.55", "26.0349, 33.1811, 14.0798, 0.28", "26.391, 33.5193, 14.3352, 0.28", "27.2106, 34.2586, 14.9394, 0.55", "28.3078, 35.1106, 15.6209, 0.28", "29.6879, 36.0082, 16.2198, 0.55", "30.5783, 36.5324, 16.4628, 0.28", "31.7186, 37.1851, 16.6319, 0.83", "33.2442, 38.0144, 16.7866, 0.55", "35.2004, 39.0702, 16.914, 0.55", "37.1005, 40.1518, 16.9289, 0.55", "39.198, 41.3983, 16.896, 0.55", "39.4971, 41.5789, 16.8809, 0.28", "40.5726, 42.2005, 16.7848, 0.28", "41.8339, 42.8675, 16.5592, 0.55", "42.8531, 43.4088, 16.288, 0.28", "43.2603, 43.6223, 16.1344, 0.55", "44.1908, 44.0945, 15.5055, 0.55", "44.8922, 44.5033, 14.9604, 0.55", "46.2346, 45.3904, 13.8698, 0.55", "47.1494, 46.0012, 13.1621, 0.28", "49.052, 47.2856, 11.8407, 0.83", "52.6097, 49.8116, 9.59095, 0.55", "53.8994, 50.7751, 8.84787, 0.55", "55.2767, 51.8112, 8.04231, 0.83", "56.4282, 52.6821, 7.49252, 0.28", "57.2637, 53.3131, 7.18242, 0.83", "58.2321, 54.042, 6.97223, 0.28", "59.1466, 54.7874, 6.97004, 0.83", "62.0811, 57.1332, 7.3416, 0.28", "64.1752, 58.9926, 7.83552, 0.55", "65.6012, 60.3799, 8.34672, 0.28", "66.3029, 61.1105, 8.56325, 0.28", "67.5265, 62.3884, 8.8994, 0.83", "69.6816, 64.5589, 9.44058, 0.28", "70.6778, 65.4686, 9.62387, 0.83", "72.3356, 66.7932, 9.52449, 0.28", "75.6463, 69.3669, 8.93265, 0.55", "77.146, 70.4108, 8.55031, 0.28", "77.9715, 70.8938, 8.2334, 0.28", "79.1404, 71.5295, 7.51826, 0.55", "80.6696, 72.1562, 6.59731, 0.83", "87.1823, 78.1, 5.72159, 0.83", "93.7663, 84.0305, 5.60906, 0.83", "101.211, 88.6747, 6.6025, 0.83", "109.243, 91.7304, 8.51257, 0.83", "117.257, 93.4302, 11.7039, 0.83", "124.304, 94.7583, 16.7903, 0.83", "131.805, 95.0667, 21.36, 0.83", "138.948, 93.8052, 26.3334, 0.83", "146.811, 93.8582, 30.2607, 0.83", "153.769, 93.5156, 35.6204, 0.83", "161.566, 93.1157, 39.6602, 0.83" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "8.12362, 16.8622, 14.1239, 0.55", "9.41768, 17.0067, 15.7718, 0.55", "10.1871, 17.2417, 16.8902, 0.55", "11.5713, 17.618, 19.0404, 0.55", "13.6965, 18.1404, 22.3921, 0.55", "14.4416, 18.2701, 23.5439, 0.83", "15.1551, 18.3578, 24.5124, 0.83", "16.7749, 18.5237, 26.8117, 0.83", "17.8803, 18.5452, 28.2254, 0.55", "19.264, 18.3622, 29.7015, 0.83", "20.4207, 18.0195, 30.6971, 0.55", "22.1812, 17.3924, 32.0834, 0.55", "24.6008, 16.3915, 33.8087, 0.83", "26.9515, 15.3104, 35.2554, 0.83", "28.3677, 14.6023, 36.0829, 0.55", "29.7374, 13.7933, 36.8598, 0.83", "31.2439, 12.8179, 37.7251, 0.55", "32.175, 12.1131, 38.29, 0.83", "33.1946, 11.2718, 38.8394, 0.83", "34.3099, 10.3747, 39.4641, 0.83", "36.2757, 8.74391, 40.5772, 0.83", "37.0869, 7.92731, 41.0352, 0.55", "37.6984, 7.19752, 41.3891, 0.83", "38.2767, 6.4303, 41.7085, 0.83", "39.5577, 4.40255, 42.4193, 0.83", "40.3562, 2.78569, 42.9286, 0.83", "41.1252, 0.594811, 43.7682, 0.83", "41.6957, -1.20351, 44.4548, 0.83", "42.3085, -3.28446, 45.2641, 0.55", "42.7165, -5.09251, 45.9654, 0.55", "43.0424, -7.40583, 46.8863, 0.55", "43.4749, -10.7475, 48.505, 0.55", "48.9764, -14.0441, 54.5074, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "13.8648, 8.20878, -1.17641, 0.83", "14.7902, 13.1276, -0.167446, 0.83", "15.3002, 15.8094, 0.123185, 0.83", "15.8629, 18.2052, 0.805119, 0.83", "17.2842, 23.1021, 2.49945, 0.83", "18.1166, 25.5353, 3.33892, 0.83", "19.3742, 28.9914, 4.49752, 0.28", "20.3047, 31.2234, 5.45407, 0.83", "23.7946, 38.2434, 8.8599, 0.55", "25.1154, 40.6302, 10.1126, 0.55", "27.2689, 44.1547, 12.0643, 0.55", "27.977, 45.1893, 12.7699, 0.55", "30.2869, 48.3159, 15.2991, 0.55", "31.0321, 49.2222, 16.0742, 0.28", "31.8993, 50.2, 16.852, 0.55", "33.5488, 51.875, 18.4558, 0.55", "35.0693, 53.2511, 19.9661, 0.28", "35.6778, 53.8016, 20.544, 0.28", "36.2036, 54.2619, 20.94, 0.55", "37.1034, 54.9517, 21.585, 0.28", "38.6901, 56.0036, 22.5808, 0.55", "39.1449, 56.2762, 22.8077, 0.55", "40.342, 56.999, 23.351, 0.55", "42.8921, 58.4476, 24.5327, 0.28", "44.4233, 59.2696, 25.2445, 0.55", "45.9397, 60.0267, 25.9284, 0.28", "46.9055, 60.4884, 26.3794, 0.28", "48.5482, 61.2086, 27.0816, 0.55", "53.7334, 68.8277, 31.4447, 0.55", "60.3122, 76.0518, 34.3219, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "13.8648, 8.20878, -1.17641, 1.11", "17.4257, 6.64149, -2.20106, 1.11", "19.929, 5.62523, -3.19893, 1.11", "21.6374, 5.13991, -3.95083, 1.11", "23.4965, 4.78713, -4.82609, 1.38", "26.7208, 4.17534, -6.344, 2.22", "29.5501, 3.63848, -7.67598, 1.38", "32.2064, 3.07727, -9.11859, 0.83", "34.8934, 2.62922, -10.8871, 1.38", "36.6209, 2.5521, -12.1006, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.73642, -23.8461, 4.33198, 1.38", "-2.77096, -25.1742, 4.6163, 1.38", "-4.76164, -27.7298, 5.16339, 0.83", "-5.47261, -28.6425, 5.35879, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.73642, -23.8461, 4.33198, 1.38", "-0.67183, -26.8853, 4.25316, 1.38" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.76503, -10.8731, -5.133, 1.38", "-12.561, -13.4382, -5.15405, 1.38", "-16.3587, -16.9223, -5.18263, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.76503, -10.8731, -5.133, 0.55", "-10.2494, -9.71675, -5.84548, 0.55", "-10.8051, -7.84668, -7.12264, 0.55", "-11.0969, -6.6218, -7.97435, 0.55", "-11.3906, -4.90613, -9.06441, 0.55", "-11.5072, -3.94326, -9.65154, 0.55", "-11.5913, -2.53206, -10.5265, 0.55", "-11.4883, -1.06655, -11.3924, 0.28", "-11.3878, -0.534398, -11.6825, 0.55", "-10.9676, 0.740441, -12.411, 0.28", "-10.6125, 1.58981, -12.8097, 0.55", "-10.0377, 2.88911, -13.2475, 0.28", "-9.61485, 3.81443, -13.4584, 0.55", "-9.0258, 5.10365, -13.6851, 0.28", "-8.74125, 5.72799, -13.8027, 0.55", "-7.99061, 7.37478, -14.1564, 0.28", "-7.55311, 8.35528, -14.382, 0.55", "-6.5629, 10.6027, -15.0033, 0.28", "-6.25525, 11.2751, -15.2353, 0.55", "-5.84439, 12.098, -15.5397, 0.28", "-5.50364, 12.766, -15.8027, 0.55", "-4.7023, 14.2211, -16.4757, 0.28", "-4.12249, 15.2937, -16.9583, 0.55", "-3.58035, 16.3794, -17.4166, 0.28", "-2.80536, 17.8813, -18.088, 0.28", "-2.28104, 18.8626, -18.5179, 0.55", "-1.21489, 20.9202, -19.4654, 0.28", "-0.928067, 21.4814, -19.7447, 1.11", "-0.254509, 22.9064, -20.4977, 0.55", "0.370272, 24.3226, -21.3087, 0.28", "0.796805, 25.3163, -21.9013, 0.83", "1.29597, 26.4483, -22.612, 0.28", "1.54443, 26.9619, -23.0088, 0.55", "1.92385, 27.569, -23.5491, 0.28", "2.2805, 28.0581, -24.0654, 0.83", "2.82529, 28.7673, -24.9006, 0.28", "3.66796, 29.8363, -26.1359, 0.55", "5.23735, 31.6711, -28.3535, 0.28", "6.03841, 32.5511, -29.4902, 0.55", "7.23118, 33.7618, -31.1918, 0.28", "8.42992, 34.9387, -32.9576, 0.28", "9.3273, 35.8243, -34.3242, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-23.2399, 12.884, 16.5405, 0.55", "-24.2106, 15.8886, 15.1598, 0.55", "-24.7695, 17.592, 14.5383, 0.55", "-25.3602, 19.1516, 14.0586, 0.55", "-26.9257, 22.8153, 13.0158, 0.55", "-27.9243, 24.8956, 12.3486, 0.28", "-29.0988, 27.26, 11.5861, 0.55", "-29.6409, 28.2959, 11.2912, 0.28", "-30.6347, 30.1354, 10.7569, 0.55", "-31.7839, 32.2275, 10.1912, 0.55", "-33.5036, 35.256, 9.53957, 0.28", "-34.2941, 36.6982, 9.19378, 0.55", "-35.1843, 38.3688, 8.8332, 0.28", "-35.7844, 39.5538, 8.63845, 0.55", "-36.2561, 40.5436, 8.50548, 0.55", "-36.9415, 41.9829, 8.37604, 0.28", "-37.8327, 43.8082, 8.21737, 0.55", "-38.6268, 45.3312, 8.09506, 0.28", "-39.3021, 46.465, 7.94959, 0.55", "-41.0899, 49.1014, 7.48152, 0.28", "-41.5552, 49.6818, 7.3545, 0.55", "-43.0041, 51.2697, 6.95313, 0.28", "-44.5332, 52.8186, 6.55366, 0.55", "-47.0381, 55.2736, 5.95728, 0.28", "-48.2952, 56.5085, 5.68161, 0.55", "-49.7, 57.9333, 5.4214, 0.28", "-50.7385, 59.0607, 5.20927, 0.55", "-51.4425, 59.8861, 5.05916, 0.28", "-51.5945, 60.101, 5.00206, 0.83", "-52.7074, 62.1733, 4.51915, 0.28", "-53.2026, 63.3186, 4.30036, 0.83", "-53.7388, 64.7393, 4.09569, 0.28", "-53.9425, 65.3094, 4.05663, 0.83", "-54.887, 68.0435, 4.06701, 0.28", "-55.3658, 69.5286, 4.27439, 0.55", "-56.0547, 71.8488, 4.91472, 0.28", "-56.4212, 73.2349, 5.42893, 0.55", "-56.8033, 74.8855, 6.16371, 0.28", "-57.059, 76.0725, 6.72675, 0.55", "-57.4823, 78.3695, 7.88516, 0.28", "-57.5591, 78.9142, 8.14421, 0.55", "-57.689, 79.9169, 8.54758, 0.28", "-57.7941, 80.7107, 8.84538, 0.55", "-58.0407, 82.2333, 9.35058, 0.28", "-58.364, 83.7647, 9.81219, 0.55", "-58.9217, 85.7622, 10.3114, 0.28", "-59.3191, 87.0165, 10.633, 0.55", "-59.9598, 88.7686, 11.0851, 0.28", "-60.1065, 89.1047, 11.171, 0.55", "-60.7801, 90.5521, 11.5289, 0.28", "-61.4013, 91.823, 11.7736, 0.55", "-61.7676, 92.5949, 11.8707, 0.28", "-62.1661, 93.4657, 11.9794, 0.55", "-63.0007, 95.3728, 12.2086, 0.55", "-63.6267, 96.8769, 12.3739, 0.83", "-64.1901, 98.3482, 12.5042, 0.55", "-64.8798, 100.378, 12.6905, 0.83", "-70.0068, 108.518, 13.4522, 0.83", "-76.818, 114.867, 15.7511, 0.83", "-83.3072, 120.403, 20.103, 0.83", "-90.2097, 125.917, 23.7872, 0.83", "-97.8014, 131.016, 26.5647, 0.83", "-104.589, 136.68, 30.2472, 0.83", "-111.166, 142.671, 33.815, 0.83", "-118.133, 147.925, 37.7343, 0.83", "-123.616, 153.411, 43.3592, 0.83", "-129.205, 157.275, 50.0635, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.2399, 12.884, 16.5405, 0.55", "-24.8792, 12.8286, 16.6169, 0.55", "-26.2977, 12.6446, 16.961, 0.55", "-29.2137, 12.1931, 17.7613, 0.55", "-31.5174, 11.8383, 18.436, 0.55", "-34.3689, 11.3254, 19.2861, 0.55", "-39.0848, 10.3914, 20.492, 0.55", "-44.0785, 9.23503, 21.7499, 0.55", "-46.9777, 8.43894, 22.5014, 0.55", "-50.1326, 7.34269, 23.3012, 0.55", "-52.3382, 6.41973, 23.8238, 0.55", "-55.5518, 4.83725, 24.2941, 0.55", "-56.4458, 4.31923, 24.2645, 0.83", "-58.5242, 3.0223, 23.8595, 0.83", "-61.0407, 1.27105, 23.1167, 0.55", "-63.2606, -0.377357, 22.2058, 0.55", "-65.5051, -1.94651, 21.1813, 0.83", "-67.339, -3.21782, 20.337, 0.28", "-69.0785, -4.38658, 19.4508, 0.55", "-71.5861, -6.09817, 18.2885, 0.55", "-72.7321, -6.94004, 17.84, 0.55", "-74.1783, -7.99048, 17.3554, 0.55", "-76.2563, -9.54573, 16.9187, 0.28", "-77.5191, -10.5315, 16.7612, 0.83", "-80.6225, -13.1817, 16.4814, 0.28", "-81.706, -14.211, 16.5481, 0.55", "-90.4162, -18.4691, 18.44, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.847059, -6.27076, 5.667, 2.22", "-3.18304, -9.09093, 2.89373, 2.22", "-5.33247, -11.6859, 0.341945, 1.38", "-8.77679, -15.8441, -3.74713, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.847059, -6.27076, 5.667, 1.66", "2.65212, -6.90891, 3.60295, 1.66", "7.66635, -7.82336, 0.64522, 1.66", "16.1097, -9.3632, -4.33527, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.68178, 38.618, 1.59687, 0.28", "13.4606, 53.1342, 1.59687, 0.28", "17.2394, 67.6504, 1.59687, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "36.6209, 2.5521, -12.1006, 0.83", "35.3378, 3.90253, -11.8947, 0.83", "33.9649, 4.913, -11.6728, 0.83", "33.0629, 5.51335, -11.6743, 0.83", "31.6968, 6.55449, -11.7958, 0.83", "30.6216, 7.4144, -11.9221, 0.55", "29.8286, 8.05751, -12.0986, 0.83", "28.9832, 8.74021, -12.2789, 0.83", "27.5693, 9.99223, -12.6612, 0.55", "26.0047, 11.4487, -13.1601, 0.55", "25.1902, 12.3039, -13.4814, 0.55", "23.7647, 14.0476, -14.1545, 0.83", "22.8557, 15.3081, -14.6112, 1.11", "21.5915, 17.2285, -15.2557, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "36.6209, 2.5521, -12.1006, 0.55", "43.2487, 2.48367, -0.37319, 0.55", "44.0465, 2.4756, 0.879019, 0.55", "45.8939, 2.61245, 3.39308, 1.11", "48.5353, 2.80813, 6.98783, 0.55", "50.1338, 2.92656, 9.16334, 0.55", "50.5323, 2.95608, 9.70561, 0.83", "52.9779, 3.17322, 11.0309, 0.55", "55.3245, 3.53597, 12.6476, 1.11", "63.0127, 5.67792, 21.664, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-5.47261, -28.6425, 5.35879, 0.83", "-4.74841, -30.011, 4.62384, 0.83", "-4.04208, -31.3774, 3.79412, 0.83", "-3.55735, -32.5127, 3.02547, 0.83", "-2.77536, -34.8351, 1.51476, 0.28", "-2.3068, -36.4033, 0.515204, 0.83", "-1.54056, -38.8791, -1.0688, 0.28", "-1.2674, -39.6806, -1.60981, 0.83", "-0.453739, -41.85, -3.06192, 0.28", "0.177957, -43.6834, -4.21631, 0.55", "0.402228, -44.3467, -4.61724, 0.28", "1.06203, -46.1767, -5.56462, 0.55", "1.72857, -47.9048, -6.32802, 0.55", "2.58948, -50.048, -7.23383, 0.55", "3.61269, -52.3887, -8.17246, 0.28", "3.98849, -53.2639, -8.52457, 0.83", "4.51263, -54.6403, -9.00609, 0.28", "4.98988, -56.0366, -9.43162, 0.55", "5.45759, -57.5672, -9.9708, 0.55", "5.8848, -59.0102, -10.5187, 0.55", "6.44793, -60.6848, -11.2052, 0.83", "6.95679, -62.1507, -11.8301, 0.55", "8.11775, -65.2868, -13.229, 0.55", "9.30472, -68.3865, -14.6172, 2.22", "10.2321, -70.7185, -15.6735, 0.55", "11.0154, -72.5991, -16.5478, 0.55", "11.9355, -74.7294, -17.5484, 0.28", "12.6049, -76.2321, -18.3084, 0.55", "13.4303, -78.0065, -19.2028, 0.28", "13.9828, -79.1775, -19.7488, 0.83", "14.5026, -80.3744, -20.3249, 0.28", "15.1681, -82.1417, -21.1321, 0.55", "15.8811, -84.4496, -22.0596, 0.28", "16.2172, -85.7413, -22.517, 0.55", "16.4917, -87.0965, -22.983, 0.55", "16.7543, -88.8122, -23.5346, 0.28", "16.945, -90.169, -23.9381, 0.55", "17.3575, -93.2067, -24.7634, 0.28", "17.4944, -94.1973, -24.9949, 0.55", "17.8528, -96.698, -25.6685, 0.28", "18.0105, -97.5472, -25.9224, 0.55", "18.5015, -99.844, -26.7214, 0.28", "18.6807, -100.622, -27.0437, 0.55", "19.293, -103.081, -28.1952, 0.28", "19.6841, -104.477, -28.9259, 0.83", "20.2654, -106.528, -30.044, 0.28", "20.6874, -108.156, -30.9817, 0.55", "21.1895, -110.189, -32.2153, 0.28", "21.4675, -111.19, -32.802, 0.55", "22.449, -114.405, -34.5326, 0.28", "22.9796, -116.098, -35.3987, 0.55", "23.4153, -117.423, -36.0065, 0.55", "24.0303, -119.187, -36.7158, 0.55", "25.3277, -122.631, -37.9322, 0.28", "25.7196, -123.66, -38.2706, 0.55", "27.165, -127.233, -39.3114, 0.28", "27.9468, -128.933, -39.8704, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.47261, -28.6425, 5.35879, 0.55", "-7.86238, -30.422, 7.46929, 0.55", "-10.1402, -32.1027, 9.67301, 0.55", "-12.5463, -33.7194, 12.0759, 0.55", "-15.6276, -35.5392, 15.0415, 0.55", "-17.4857, -36.5137, 16.7794, 0.55", "-18.297, -36.9175, 17.5469, 0.55", "-19.7493, -37.6071, 18.9028, 0.83", "-21.3826, -38.2607, 20.5168, 0.83", "-23.5622, -39.1087, 22.6563, 0.55", "-24.3575, -39.4859, 23.4828, 0.55", "-26.2727, -40.537, 25.5842, 0.55", "-28.4109, -41.9508, 27.9515, 0.83", "-31.3401, -44.1957, 31.11, 0.28", "-32.6571, -45.3946, 32.5921, 1.11", "-34.5346, -47.411, 34.8593, 0.55", "-35.5039, -48.5649, 36.0255, 0.55", "-36.387, -49.6728, 37.0378, 0.83", "-37.1712, -50.7363, 37.9361, 0.28", "-37.5293, -51.2149, 38.2236, 0.55", "-38.679, -52.7089, 39.0132, 0.28", "-39.3295, -53.5064, 39.3268, 0.55", "-40.7242, -55.0857, 39.9179, 0.28", "-41.9032, -56.3252, 40.3846, 0.55", "-43.4311, -57.8265, 41.0134, 0.28", "-44.2145, -58.5025, 41.3408, 0.55", "-45.9944, -59.8535, 42.071, 0.28", "-48.4559, -61.58, 43.1241, 0.83", "-51.4201, -63.4964, 44.4566, 0.55", "-53.0323, -64.4593, 45.2305, 0.55", "-55.1872, -65.5794, 46.3209, 0.55", "-57.5084, -66.6378, 47.5491, 0.28", "-58.2821, -66.9476, 47.9813, 0.55", "-60.1703, -67.5848, 49.0474, 0.28", "-60.7334, -67.7438, 49.3632, 0.83", "-63.4433, -68.5004, 50.9468, 0.28", "-65.2026, -68.9686, 52.1224, 0.83", "-66.8828, -69.3218, 53.3899, 0.28", "-67.8499, -69.4581, 54.142, 0.83", "-69.4781, -69.5502, 55.4687, 0.28", "-70.772, -69.4989, 56.5672, 0.55", "-72.3333, -69.2186, 57.9775, 0.28", "-72.978, -68.9456, 58.6193, 0.83", "-74.0584, -68.2018, 59.8899, 0.28", "-74.3782, -67.9356, 60.3097, 0.55", "-74.9655, -67.4631, 61.0822, 0.28", "-75.4863, -67.1078, 61.7672, 0.55", "-77.6105, -66.6034, 64.3794, 0.28", "-78.0347, -66.6127, 64.8833, 0.83", "-78.7561, -66.7456, 65.6416, 0.83", "-81.0283, -67.4278, 67.9432, 0.28", "-82.3503, -67.9888, 69.1035, 0.83", "-85.9245, -69.8546, 71.8762, 0.28", "-86.7215, -70.305, 72.4333, 0.83", "-88.4276, -71.3238, 73.6122, 0.28", "-90.5294, -72.6485, 75.0307, 0.83", "-93.6124, -74.819, 76.9758, 0.28", "-94.5262, -75.4751, 77.4661, 0.83", "-100.925, -78.4004, 85.5226, 0.83", "-106.59, -79.5646, 94.4971, 0.83", "-111.58, -81.8693, 103.662, 0.83", "-117.651, -83.0394, 112.366, 0.83", "-123.61, -85.7789, 120.811, 0.83", "-127.885, -88.5452, 130.212, 0.83", "-133.336, -90.494, 139.19, 0.83", "-138.71, -90.5858, 148.411, 0.83", "-145.064, -90.9729, 156.978, 0.83", "-151.994, -89.8285, 165.014, 0.83", "-159.534, -88.6832, 172.48, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-0.67183, -26.8853, 4.25316, 0.55", "-1.52507, -29.8809, 5.50281, 0.55", "-1.97492, -31.5445, 6.10299, 0.55", "-2.54809, -33.695, 6.78228, 1.11", "-3.07253, -35.6808, 7.38875, 0.83", "-3.64461, -37.8067, 8.02382, 1.66", "-4.15234, -39.8384, 8.70706, 0.83", "-4.34281, -40.6996, 9.01766, 0.55", "-4.70934, -42.2108, 9.59015, 1.11", "-5.01581, -43.2869, 9.9952, 0.55", "-5.49164, -44.8418, 10.569, 1.11", "-6.38589, -47.6435, 11.6892, 0.55", "-6.92155, -49.1449, 12.3538, 0.55", "-7.20128, -49.8505, 12.6672, 0.83", "-7.99167, -51.6277, 13.3721, 0.55", "-8.48759, -52.6076, 13.6856, 0.83", "-9.11528, -53.8389, 14.0517, 0.28", "-9.56561, -54.7221, 14.2733, 1.11", "-9.95897, -55.5707, 14.508, 1.11", "-10.5782, -57.1483, 14.9435, 0.55", "-10.9299, -58.2024, 15.2338, 0.55", "-11.6796, -60.636, 15.9211, 0.55", "-12.0786, -62.1801, 16.4113, 0.55", "-12.3907, -63.6902, 16.9147, 0.55", "-12.5771, -64.8295, 17.29, 0.55", "-12.7134, -65.7741, 17.6087, 0.83", "-12.8471, -66.6441, 17.8852, 0.83", "-13.2138, -68.3429, 18.3506, 0.28", "-13.3615, -68.8121, 18.4477, 0.55", "-13.9353, -70.0995, 18.613, 0.28", "-14.2742, -70.644, 18.5783, 0.55", "-14.9309, -71.5513, 18.4194, 0.28", "-15.4426, -72.1693, 18.3089, 0.83", "-17.7081, -74.7709, 17.8405, 0.28", "-18.5541, -75.7414, 17.6902, 0.83", "-20.8205, -78.3266, 17.3657, 0.55", "-21.7532, -79.4242, 17.2693, 1.38", "-23.167, -81.136, 17.1853, 0.55", "-24.0072, -82.2125, 17.2266, 0.55", "-25.0042, -83.6425, 17.5368, 0.28", "-25.4664, -84.3033, 17.746, 0.83", "-25.9627, -85.0038, 18.0784, 0.28", "-26.0926, -85.176, 18.1508, 0.83", "-26.9732, -86.2715, 18.5274, 0.28", "-27.9003, -87.3711, 18.8833, 0.55", "-28.6834, -88.2904, 19.0629, 0.28", "-29.0069, -88.6787, 19.0739, 0.55", "-30.0656, -90.0155, 18.9908, 0.28", "-30.3497, -90.4281, 18.9468, 0.55", "-30.9871, -91.4334, 18.6807, 0.55", "-31.8122, -92.7623, 18.2687, 0.28", "-32.3091, -93.5415, 18.024, 0.55", "-32.913, -94.4363, 17.7522, 0.28", "-33.6381, -95.5583, 17.456, 1.11", "-35.2257, -97.7524, 16.866, 0.55", "-35.8754, -98.6191, 16.7485, 0.83", "-36.8175, -100.107, 16.8407, 0.28", "-37.0518, -100.498, 16.8766, 0.83", "-37.7749, -101.825, 17.0384, 0.28", "-38.2338, -102.944, 17.2456, 0.55", "-39.1215, -105.477, 17.6913, 0.55", "-39.7174, -107.101, 17.8268, 0.55", "-40.5507, -109.579, 17.9712, 0.28", "-40.7718, -110.353, 18.0455, 0.28", "-41.1584, -111.677, 18.1314, 0.83", "-41.6885, -113.451, 18.1229, 0.28", "-42.201, -114.886, 18.0242, 0.28", "-42.6393, -115.966, 17.9945, 0.83", "-43.7812, -118.7, 18.1773, 0.28", "-44.4971, -120.297, 18.5004, 0.55", "-45.4313, -122.328, 18.9981, 0.28", "-46.0002, -123.607, 19.3774, 0.83", "-46.8962, -125.421, 19.9583, 1.38", "-47.465, -126.374, 20.2959, 0.55", "-49.2824, -128.804, 21.2722, 1.66", "-53.5815, -135.661, 22.2633, 1.66", "-57.6726, -142.447, 24.1702, 1.66", "-61.7401, -149.069, 26.6026, 1.66", "-66.4202, -155.645, 27.6838, 1.66", "-70.859, -162.479, 27.9372, 1.66", "-75.4352, -168.903, 29.9357, 1.66", "-80.2557, -174.68, 32.9693, 1.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-0.67183, -26.8853, 4.25316, 0.83", "0.373018, -29.1041, 2.97901, 0.83", "1.65032, -31.8166, 1.42139, 0.83", "2.24667, -33.083, 0.694158, 0.83", "3.43047, -35.5969, -0.749458, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.3587, -16.9223, -5.18263, 0.83", "-18.3406, -19.0682, -6.63631, 0.83", "-18.9768, -20.1362, -7.17189, 0.83", "-19.4649, -21.3093, -7.67118, 0.83", "-20.2665, -23.2359, -8.4911, 1.94", "-21.2273, -25.5448, -9.47379, 0.55", "-22.3406, -28.2206, -10.6126, 0.55", "-22.6782, -29.4561, -10.9996, 0.55", "-23.184, -31.8737, -11.717, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-16.3587, -16.9223, -5.18263, 0.83", "-16.9639, -17.9442, -5.35436, 0.83", "-17.7154, -18.8799, -5.424, 0.55", "-18.882, -20.1449, -5.4052, 0.55", "-20.1647, -21.3724, -5.34174, 0.55", "-21.4132, -22.4288, -5.22692, 0.55", "-22.6886, -23.4178, -5.08681, 0.55", "-25.0761, -24.877, -4.86447, 0.55", "-26.0338, -25.3247, -4.7575, 0.28", "-27.1853, -25.7353, -4.57813, 0.55", "-28.2743, -25.9773, -4.37606, 0.55", "-28.8976, -26.0619, -4.27622, 0.55", "-29.9954, -26.1211, -4.14303, 0.55", "-31.0026, -26.1585, -4.16942, 0.28", "-31.3215, -26.1496, -4.1996, 0.28", "-32.4238, -26.091, -4.36609, 0.83", "-33.9642, -26.077, -4.83944, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.77679, -15.8441, -3.74713, 1.11", "-11.9249, -13.3249, -2.07671, 1.11", "-13.3048, -12.2207, -1.34454, 0.83", "-15.73, -10.2799, -0.0576921, 1.38", "-20.4575, -6.4968, 2.45078, 0.83", "-22.0944, -5.18691, 3.31934, 0.83", "-25.082, -2.79609, 4.90462, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.77679, -15.8441, -3.74713, 1.11", "-9.06246, -16.9605, -3.84239, 1.11", "-9.55878, -18.9616, -4.05727, 1.11", "-10.1693, -21.3292, -4.32249, 1.11", "-10.8254, -23.8734, -4.6075, 1.11", "-11.2555, -25.541, -4.79431, 1.11", "-11.731, -27.3851, -5.00089, 1.11", "-11.9958, -28.4084, -5.1248, 1.11", "-12.5504, -30.5952, -5.42796, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.1097, -9.3632, -4.33527, 0.55", "17.4084, -9.95886, -2.63315, 0.55", "19.1233, -10.9881, -0.298718, 0.55", "20.6379, -11.9915, 1.58007, 0.83", "21.5115, -12.5698, 2.55499, 0.83", "22.9712, -13.5049, 4.10137, 0.83", "24.5087, -14.453, 5.77897, 0.55", "25.4561, -15.0687, 6.96695, 0.55", "27.2366, -15.7167, 9.0314, 0.83", "27.6703, -15.5153, 10.0582, 0.83", "27.9427, -14.879, 11.3586, 0.28", "28.2285, -14.0703, 12.6731, 0.83", "28.5854, -13.2961, 13.8792, 0.55", "28.8383, -12.8775, 14.5653, 0.55", "29.7101, -11.5087, 16.7508, 0.55", "30.7199, -10.1094, 18.8226, 0.55", "31.2924, -9.45273, 19.6707, 0.55", "32.2863, -8.44643, 20.9311, 0.55", "33.1994, -7.53991, 22.0042, 0.55", "34.2829, -6.52998, 23.1499, 0.55", "35.2048, -5.75484, 23.9832, 0.55", "36.2551, -4.85169, 24.9114, 0.55", "38.0231, -3.21695, 26.5613, 0.55", "39.0112, -2.23763, 27.4983, 0.55", "39.6654, -1.58313, 28.1698, 0.55", "40.6713, -0.764337, 29.3421, 0.55", "45.3233, 2.10483, 35.4315, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "16.1097, -9.3632, -4.33527, 0.55", "16.7105, -10.4454, -4.12662, 0.55", "17.3654, -11.4961, -3.89771, 0.55", "18.1786, -12.8063, -3.53586, 0.55", "19.4878, -14.9813, -2.89709, 0.55", "20.2547, -16.2333, -2.52798, 0.55", "21.6571, -18.505, -1.77514, 0.55", "22.4419, -19.8042, -1.26617, 0.55", "23.4222, -21.4958, -0.482548, 0.55", "24.1566, -22.7618, 0.14307, 0.55", "24.8855, -24.0235, 0.820342, 0.28", "25.7981, -25.6401, 1.67662, 0.83", "26.6803, -27.3423, 2.66091, 0.83", "27.4565, -28.8901, 3.60551, 1.11", "28.2207, -30.3216, 4.47507, 0.83", "29.4586, -32.6474, 5.93489, 0.83", "30.3254, -34.3251, 6.9883, 0.83", "31.5172, -36.5839, 8.3324, 0.55", "32.1911, -37.8048, 9.06712, 0.55", "33.1641, -39.4411, 10.0962, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "63.0127, 5.67792, 21.664, 0.55", "70.5416, 6.30002, 31.1358, 0.55", "77.5821, 8.55423, 40.7543, 0.55", "85.2996, 9.78243, 50.0184, 0.55", "93.9954, 10.8592, 58.3889, 0.55", "101.648, 10.1896, 67.7513, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "63.0127, 5.67792, 21.664, 0.55", "66.5174, 6.68442, 26.2457, 0.55", "69.5649, 7.03995, 31.2297, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "27.9468, -128.933, -39.8704, 0.28", "29.2023, -131.346, -40.3347, 0.28", "30.0136, -132.935, -40.7123, 0.28", "30.9019, -134.631, -41.1082, 0.83", "31.7199, -136.203, -41.463, 0.28", "32.3571, -137.482, -41.7478, 0.55", "33.7116, -140.233, -42.3865, 0.28", "33.9198, -140.648, -42.4949, 0.55", "34.4556, -142.161, -43.0592, 0.28", "34.5591, -142.631, -43.2792, 0.55", "34.8932, -144.893, -44.3268, 0.28", "34.9431, -145.744, -44.7055, 0.28", "34.9862, -146.623, -45.0281, 0.55", "35.1544, -151.199, -46.4925, 0.28", "35.1925, -152.704, -46.928, 0.28", "35.1616, -155.081, -47.5956, 0.83", "34.9168, -159.33, -48.6558, 0.28", "34.6874, -162.419, -49.3617, 0.55", "34.5685, -163.95, -49.6626, 0.55", "34.5483, -164.524, -49.7395, 0.55", "34.2345, -167.854, -50.3336, 0.28", "34.0934, -168.546, -50.517, 0.55", "33.3861, -171.004, -51.4832, 0.28", "33.2712, -171.311, -51.6474, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "27.9468, -128.933, -39.8704, 0.28", "22.2823, -132.169, -46.6198, 0.28", "21.1117, -132.838, -48.0146, 0.28", "19.7191, -133.633, -49.6739, 0.55", "15.3624, -136.122, -54.865, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.43047, -35.5969, -0.749458, 0.83", "4.51701, -39.4308, -0.89481, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "3.43047, -35.5969, -0.749458, 0.83", "5.6941, -35.6067, -2.2096, 0.83", "7.38032, -35.5319, -3.24405, 0.83", "10.3477, -35.4206, -4.81722, 1.11", "14.3093, -35.2548, -7.39745, 0.83", "16.3926, -35.2513, -8.85387, 0.83", "18.4196, -35.2472, -10.3374, 0.83", "20.0261, -35.2928, -11.7212, 0.55", "21.7838, -35.4449, -13.3429, 0.83", "25.894, -35.8086, -17.1045, 0.55", "27.5004, -35.8228, -18.414, 0.55", "29.9976, -35.8175, -20.453, 0.55", "31.5122, -35.8452, -21.7068, 0.55", "33.2781, -35.913, -23.1522, 0.83", "35.3047, -35.9428, -24.7132, 0.83", "36.8525, -35.967, -25.6904, 0.55", "38.8182, -35.9571, -26.9426, 0.55", "40.8275, -36.0124, -28.1489, 0.55", "41.8601, -36.0291, -28.7357, 0.83", "43.3697, -36.0764, -29.7059, 0.28", "44.5911, -36.1789, -30.6873, 0.83", "45.5097, -36.2595, -31.4885, 0.28", "46.583, -36.3437, -32.4873, 0.83", "47.8438, -36.4479, -33.8562, 0.28", "49.2102, -36.5516, -35.5056, 0.28", "50.9231, -36.6611, -37.6758, 1.11", "52.543, -36.794, -39.8337, 0.28", "53.2367, -36.8585, -40.878, 0.83", "55.9788, -37.0151, -45.041, 0.28", "56.3283, -37.0357, -45.6007, 0.83", "57.4201, -37.0809, -47.1661, 0.28", "59.0265, -37.2147, -49.3433, 0.55", "61.3854, -37.4996, -52.3745, 0.83", "63.6856, -37.8293, -54.9704, 0.28", "66.3792, -38.3151, -57.8599, 0.55", "68.5443, -38.7071, -60.1356, 0.28", "70.3355, -39.0857, -61.8726, 0.83", "71.4933, -39.3423, -62.9445, 0.28", "72.5933, -39.6143, -63.8812, 0.83", "75.9971, -40.538, -66.5699, 0.28", "77.1108, -40.809, -67.4147, 0.28", "78.6647, -41.1717, -68.7734, 0.83", "82.3879, -41.8181, -71.922, 0.28", "84.3477, -42.1446, -73.6677, 0.28", "86.2405, -42.5225, -75.3669, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-23.184, -31.8737, -11.717, 0.55", "-25.2011, -31.9096, -12.9055, 0.55", "-27.5863, -31.8325, -14.3323, 0.83", "-30.0284, -31.6861, -15.7609, 0.28", "-32.1181, -31.5818, -16.9412, 0.55", "-34.1884, -31.5136, -18.1261, 0.28", "-34.8722, -31.4956, -18.5171, 0.55", "-35.9324, -31.5053, -19.1494, 0.55", "-37.6503, -31.5518, -20.114, 0.55", "-38.7163, -31.5866, -20.6312, 0.55", "-41.208, -31.716, -21.7917, 0.55", "-42.2221, -31.842, -22.2386, 0.55", "-44.4855, -32.3036, -23.1589, 0.55", "-47.8671, -33.1745, -24.4271, 1.11", "-49.8013, -33.7625, -25.0844, 0.28", "-50.516, -33.9852, -25.3156, 0.55", "-51.923, -34.4097, -25.7294, 0.28", "-53.9007, -34.9362, -26.3243, 0.83", "-55.735, -35.2602, -26.8686, 0.55", "-57.4407, -35.3445, -27.3612, 0.83", "-59.4304, -35.0504, -28.0467, 0.55", "-60.715, -34.6982, -28.9986, 0.28", "-61.4861, -34.4238, -29.8147, 0.55", "-62.1734, -34.2973, -31.0946, 0.28", "-62.4553, -34.3334, -31.8067, 0.83", "-62.9323, -34.4872, -33.1351, 0.83", "-65.3355, -35.6953, -39.6816, 0.28", "-65.6074, -36.0091, -41.0785, 0.55", "-66.5605, -34.8035, -35.7784, 0.28", "-67.3344, -34.5748, -34.5262, 0.55", "-68.926, -34.3494, -32.6957, 0.28", "-69.9248, -34.2266, -31.6935, 0.55", "-82.8167, -32.5236, -19.6681, 0.55", "-84.0443, -32.3299, -18.5565, 0.28", "-84.9426, -32.1725, -17.7878, 0.55", "-86.3364, -31.9616, -16.6463, 0.28", "-88.4539, -31.7111, -14.979, 0.83", "-90.7763, -31.4863, -13.4744, 0.28", "-92.7503, -31.4957, -13.4265, 0.55", "-95.8271, -31.4783, -13.2882, 0.55", "-97.3147, -31.4228, -13.2196, 0.83", "-98.4404, -31.3719, -13.1819, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-23.184, -31.8737, -11.717, 0.55", "-23.0789, -33.3617, -12.0069, 0.55", "-22.9859, -35.368, -12.416, 0.83", "-22.9515, -37.8064, -12.8348, 0.55", "-23.0409, -40.8493, -13.2559, 0.83", "-23.3179, -45.0661, -13.6909, 0.55", "-23.448, -46.3237, -13.7821, 0.28", "-23.7028, -47.827, -13.8692, 0.28", "-24.0917, -49.6172, -13.9345, 0.28", "-24.7099, -52.0635, -13.9065, 0.83", "-25.2336, -53.8907, -13.7913, 0.28", "-26.063, -56.569, -13.4645, 2.22", "-27.1064, -59.8364, -13.1219, 0.28", "-27.5877, -61.3056, -12.9947, 0.83", "-28.2268, -63.1988, -12.8835, 0.28", "-28.6424, -64.4108, -12.8362, 0.28", "-28.9762, -65.3053, -12.8246, 0.55", "-29.7507, -67.2505, -12.9051, 0.28", "-29.9853, -67.814, -12.9526, 0.55", "-30.9037, -69.947, -13.2215, 0.28", "-31.4786, -71.4111, -13.602, 0.55", "-32.1049, -73.1815, -14.1765, 0.55", "-32.9574, -75.8274, -15.1409, 0.28", "-33.2082, -76.645, -15.463, 0.28", "-33.7917, -78.6091, -16.2606, 0.83", "-35.0581, -82.9212, -17.8828, 0.28", "-35.4612, -84.317, -18.368, 0.83", "-36.0398, -86.404, -19.0282, 0.28", "-36.2789, -87.2103, -19.2644, 0.55", "-37.2175, -90.1951, -20.0826, 0.28", "-37.7977, -92.2581, -20.7705, 0.55", "-38.7401, -95.0776, -21.5855, 0.28", "-38.9327, -95.7064, -21.8394, 0.55", "-39.4134, -97.4705, -22.6975, 0.28", "-39.6096, -98.3154, -23.124, 0.55", "-40.4949, -103.069, -25.7038, 0.28", "-40.9275, -105.808, -27.3105, 0.55", "-41.3854, -108.898, -29.011, 0.28", "-41.5136, -110.004, -29.6036, 0.55", "-41.6889, -111.844, -30.3824, 0.28", "-41.7673, -112.505, -30.5698, 0.55", "-42.0299, -113.993, -30.681, 0.28", "-42.1248, -114.663, -30.729, 0.55", "-42.5744, -116.999, -30.6377, 0.28", "-43.0517, -118.861, -30.5197, 0.55", "-43.6405, -120.635, -30.3749, 0.28", "-43.9659, -121.515, -30.2416, 0.55", "-44.3538, -122.556, -30.0712, 0.28", "-44.5559, -123.123, -29.9824, 0.55", "-45.361, -125.254, -29.6595, 0.28", "-46.0899, -127.365, -29.5775, 0.55", "-46.789, -129.764, -29.5899, 0.28", "-47.2344, -131.335, -29.6347, 0.55", "-47.6494, -132.804, -29.8122, 0.55", "-47.9375, -133.838, -29.9902, 0.55", "-48.966, -137.487, -30.9212, 0.28", "-50.2186, -141.401, -32.0701, 0.28", "-51.0335, -143.639, -32.6939, 0.83", "-52.9594, -148.416, -33.895, 0.28", "-53.5054, -149.653, -34.1965, 0.55", "-54.8257, -152.439, -34.8372, 0.28", "-55.8862, -154.432, -35.2352, 1.11", "-57.4655, -157.188, -35.6781, 0.28", "-57.7966, -157.773, -35.6645, 0.55", "-58.5455, -159.093, -35.314, 0.28", "-59.0399, -160.017, -35.0079, 0.55", "-59.8544, -161.597, -34.384, 0.28", "-60.3821, -162.658, -34.016, 0.55", "-61.912, -165.754, -33.0853, 0.28", "-62.2812, -166.613, -32.8651, 0.55", "-62.8077, -168.074, -32.5289, 0.28", "-63.1401, -169.292, -32.2616, 0.55", "-63.9184, -173.05, -31.5191, 0.28", "-63.9759, -173.676, -31.4571, 0.83", "-64.1134, -177.464, -31.3377, 0.28", "-64.119, -178.774, -31.3208, 0.55", "-64.0895, -181.281, -31.3146, 0.28", "-64.051, -182.841, -31.3585, 0.55", "-63.9158, -189.41, -31.7762, 0.28", "-63.9314, -191.619, -32.0376, 0.83", "-64.0544, -194.586, -32.5506, 0.28", "-64.1214, -195.437, -32.7444, 0.55", "-64.3462, -197.554, -33.3944, 0.28", "-64.4842, -198.599, -33.7453, 0.55", "-65.0677, -201.899, -34.9331, 0.28", "-65.1031, -202.172, -35.071, 0.55", "-65.27, -203.868, -35.9386, 0.28", "-65.3874, -205.41, -36.6802, 0.83", "-65.5525, -207.741, -37.5723, 0.28", "-65.5944, -208.4, -37.7397, 0.55", "-65.9892, -214.296, -38.6635, 0.28", "-66.1935, -217.616, -39.1144, 0.28", "-66.2515, -218.734, -39.1976, 0.55", "-66.4478, -221.642, -39.0104, 0.28", "-66.5199, -222.506, -38.7393, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-33.9642, -26.077, -4.83944, 0.55", "-34.7569, -26.3821, -6.39452, 0.55", "-35.1742, -26.5804, -7.1999, 0.55", "-35.9638, -26.9685, -8.56153, 0.55", "-37.272, -27.4966, -10.5706, 0.55", "-39.0578, -28.0778, -13.1481, 0.55", "-40.9187, -28.5328, -15.6965, 0.28", "-41.7737, -28.6952, -16.9013, 0.28", "-42.8835, -28.8187, -18.2593, 0.55", "-44.2958, -28.8423, -19.6178, 0.28", "-44.9193, -28.8936, -20.2996, 0.55", "-45.6066, -29.0047, -21.139, 0.28", "-46.2807, -29.1765, -22.0917, 0.83", "-47.5154, -29.6186, -24.1884, 0.28", "-48.025, -29.8927, -25.2216, 0.55", "-50.8566, -32.1375, -31.8333, 0.55", "-51.1074, -32.3888, -32.4817, 0.55", "-51.485, -32.8793, -33.6432, 0.55", "-51.7307, -33.3205, -34.6771, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-33.9642, -26.077, -4.83944, 0.83", "-34.7901, -25.4835, -5.44931, 0.83", "-35.8673, -24.7095, -6.24467, 1.11", "-37.153, -23.7856, -7.19402, 1.11", "-38.787, -22.6115, -8.40052, 0.28", "-40.2324, -21.5729, -9.46778, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-25.082, -2.79609, 4.90462, 0.83", "-24.4449, -0.32495, 5.22205, 0.83", "-24.0163, 1.88499, 5.44488, 0.83", "-23.5909, 6.24837, 5.88127, 0.83", "-23.448, 9.99803, 6.44295, 0.83", "-23.5116, 13.5507, 7.07621, 0.83", "-23.6584, 15.9918, 7.52937, 0.83", "-24.0891, 18.181, 8.00001, 0.83", "-25.1901, 21.4347, 8.79968, 0.83", "-26.569, 24.2004, 9.52495, 0.83", "-27.3272, 25.4876, 9.82911, 0.83", "-28.7376, 27.7983, 10.4301, 0.83", "-30.2652, 30.4936, 11.1184, 0.55", "-30.9833, 31.8212, 11.4199, 0.83", "-32.0471, 33.9358, 11.7756, 0.83", "-32.6781, 35.243, 11.9012, 0.28", "-33.5891, 37.4143, 12.121, 0.55", "-34.2965, 39.3314, 12.3416, 0.28", "-34.8352, 41.9273, 12.5579, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-25.082, -2.79609, 4.90462, 0.83", "-26.5455, -2.44406, 4.15311, 0.83", "-28.3562, -2.08171, 3.38927, 0.83", "-29.6889, -1.96474, 2.72192, 0.83", "-32.5178, -1.96615, 1.23896, 0.83", "-35.3049, -2.0398, -0.224727, 0.83", "-36.499, -2.07136, -0.851857, 0.83", "-38.4577, -2.09661, -2.00154, 0.83", "-41.5849, -2.08593, -3.97408, 0.55", "-42.5113, -2.20428, -4.58827, 0.55", "-43.5851, -2.64415, -5.25583, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.5504, -30.5952, -5.42796, 0.83", "-13.2962, -34.0384, -5.42625, 0.83", "-14.1253, -37.7328, -5.38285, 1.11", "-14.908, -40.6185, -5.31572, 0.83", "-15.4503, -42.6728, -5.28304, 0.55", "-15.718, -43.7612, -5.27938, 0.83", "-16.8233, -47.9676, -5.27004, 0.83", "-17.4267, -50.2498, -5.2214, 0.83", "-18.5687, -54.3521, -5.10931, 0.83", "-19.3339, -56.8925, -4.99762, 0.55", "-20.4248, -60.2845, -4.86458, 0.55", "-21.5838, -63.7847, -4.72173, 0.55", "-23.0907, -68.0223, -4.54603, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-12.5504, -30.5952, -5.42796, 0.83", "-11.3523, -34.0944, -6.06929, 0.83", "-10.7832, -36.487, -6.72999, 0.83", "-10.3667, -39.0863, -7.50542, 0.55", "-10.134, -41.2716, -8.18403, 0.83", "-10.0516, -44.1338, -9.08796, 0.83", "-10.1027, -46.671, -9.84739, 0.83", "-10.4315, -49.9439, -11.0046, 0.55", "-10.7585, -52.3153, -11.769, 0.55", "-10.8922, -52.983, -12.0276, 0.83", "-11.484, -54.8553, -12.8018, 0.55", "-11.9485, -55.996, -13.318, 0.55", "-12.7669, -57.9795, -14.266, 1.11", "-13.4549, -59.741, -15.1623, 1.11", "-14.737, -62.9878, -17.0106, 0.55", "-15.3893, -64.8963, -18.1581, 1.11", "-16.1959, -67.6019, -19.839, 0.55", "-16.3215, -67.9789, -20.0732, 0.83", "-17.4283, -71.0682, -21.9098, 0.28", "-17.5524, -71.4522, -22.1336, 0.55", "-17.9979, -73.357, -23.0582, 0.28", "-18.1992, -74.4312, -23.4947, 0.83", "-18.5406, -76.4673, -24.1233, 0.55", "-18.8876, -78.1667, -24.5261, 0.83", "-19.4017, -80.3862, -24.907, 0.28", "-19.876, -82.2218, -25.2238, 0.83", "-20.6387, -85.2477, -25.5977, 0.28", "-21.189, -87.9632, -25.8771, 0.83", "-21.4649, -89.8136, -25.9651, 0.28", "-21.619, -91.0755, -25.9588, 0.28", "-21.7852, -93.0008, -25.9327, 0.83", "-21.9454, -96.3152, -25.9849, 0.28", "-21.9289, -99.057, -26.0927, 0.55", "-21.8336, -101.407, -26.0919, 0.28", "-21.6518, -104.261, -26.0406, 0.28", "-21.5378, -106.265, -25.9861, 0.55", "-21.483, -107.71, -25.9459, 0.28", "-21.4972, -109.199, -25.922, 0.55", "-21.5666, -111.68, -25.8211, 0.28", "-21.6809, -113.486, -25.7403, 1.38", "-22.0764, -117.344, -25.8415, 0.28", "-22.2344, -118.533, -25.9435, 0.55", "-22.5668, -120.718, -26.2507, 0.28", "-22.9363, -122.751, -26.7021, 0.28", "-23.457, -125.263, -27.3972, 1.11", "-24.5609, -130.328, -28.6585, 0.28", "-25.2987, -133.6, -29.4209, 0.28", "-25.5907, -134.913, -29.6153, 0.83", "-26.5059, -138.938, -30.2399, 0.28", "-26.8778, -140.58, -30.4536, 0.55", "-27.7007, -144.722, -30.7789, 0.28", "-27.8279, -145.389, -30.7772, 0.83", "-28.7677, -149.993, -30.8546, 0.28", "-29.7418, -155.04, -31.0145, 0.55", "-30.0125, -156.498, -30.8968, 0.28", "-30.1242, -157.221, -30.819, 0.55", "-30.3457, -158.835, -30.6008, 0.55", "-30.5579, -160.653, -30.2705, 0.55", "-30.7724, -163.241, -29.6679, 0.55", "-31.1521, -168.305, -28.1013, 0.28", "-31.3012, -170.901, -27.3224, 0.28", "-31.3309, -171.592, -27.1129, 0.83", "-31.3261, -174.13, -26.336, 0.28", "-31.2653, -175.267, -26.0104, 0.55", "-31.1245, -178.272, -25.4168, 0.28", "-31.1078, -178.593, -25.4258, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "45.3233, 2.10483, 35.4315, 0.55", "51.9625, 5.2569, 42.2849, 0.55", "57.5537, 8.70818, 49.888, 0.55", "62.8635, 11.0218, 58.0717, 0.55", "66.5844, 12.3877, 67.2612, 0.55", "71.8118, 12.6063, 75.7857, 0.55", "77.5755, 13.9885, 83.858, 0.55", "82.738, 16.6689, 92.0306, 0.55", "88.1033, 19.9049, 99.879, 0.55", "94.6183, 22.8859, 106.92, 0.55", "101.746, 26.4186, 113.079, 0.55", "107.454, 29.7844, 120.632, 0.55", "113.071, 34.2837, 127.682, 0.55", "117.347, 39.6829, 135.054, 0.55", "121.272, 44.5159, 142.969, 0.55", "123.98, 49.1029, 151.498, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "45.3233, 2.10483, 35.4315, 0.55", "49.2758, 3.53549, 41.9558, 0.55", "52.3536, 5.53782, 48.8005, 0.55", "55.5437, 8.62412, 55.2015, 0.55", "59.5503, 12.0657, 60.9439, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "33.1641, -39.4411, 10.0962, 0.55", "34.164, -40.5334, 10.0343, 0.55", "34.684, -41.1076, 9.9857, 0.55", "36.0137, -42.6167, 9.8489, 0.55", "38.1805, -44.9851, 9.61373, 0.55", "39.2337, -46.1021, 9.50826, 0.55", "40.6238, -47.6243, 9.37955, 0.28", "41.337, -48.4437, 9.32365, 0.83", "42.1307, -49.3304, 9.29095, 0.83", "43.5897, -50.9175, 9.22958, 0.55", "44.8504, -52.3047, 9.18744, 0.55", "46.0697, -53.715, 9.19182, 0.55", "46.8628, -54.6531, 9.26376, 0.28", "47.4829, -55.3593, 9.32788, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "33.1641, -39.4411, 10.0962, 0.55", "33.4835, -41.2775, 10.2429, 0.55", "33.8291, -42.9235, 10.387, 0.55", "34.1584, -44.6107, 10.9988, 0.55", "34.4242, -45.9585, 11.6496, 0.55", "34.6836, -47.3965, 12.4627, 0.28", "34.8505, -48.4286, 13.0789, 0.55", "34.9733, -49.1058, 13.5748, 0.55", "35.6413, -53.2055, 16.8745, 0.28", "35.6671, -53.4689, 17.0862, 0.55", "35.716, -54.5455, 17.8735, 0.28", "35.7633, -55.1711, 18.2719, 0.55", "35.8423, -56.6221, 19.1367, 0.28", "35.8848, -57.9045, 19.7426, 0.28", "35.9674, -59.4894, 20.0561, 0.55", "36.054, -61.1499, 20.3373, 0.55", "36.1781, -62.8212, 20.5212, 0.55", "37.6731, -70.325, 24.4303, 0.55", "39.6747, -77.9954, 27.7678, 0.55", "42.7596, -85.6842, 30.0998, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "101.648, 10.1896, 67.7513, 0.55", "106.351, 9.24563, 73.5257, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "101.648, 10.1896, 67.7513, 0.55", "108.046, 15.6681, 72.3983, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "69.5649, 7.03995, 31.2297, 0.55", "76.5796, 6.61978, 40.8311, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "69.5649, 7.03995, 31.2297, 0.55", "77.1506, 7.14854, 42.1054, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "4.51701, -39.4308, -0.89481, 0.83", "6.49376, -41.2572, -1.26591, 0.83", "8.9142, -43.5113, -1.61139, 0.83", "10.0642, -44.6295, -1.80597, 0.28", "11.6637, -46.3696, -2.1114, 0.55", "12.6746, -47.532, -2.31397, 0.83", "13.8359, -48.9072, -2.57548, 0.28", "14.4455, -49.6822, -2.69166, 0.55", "15.8694, -51.5464, -2.88026, 0.28", "16.9972, -53.1395, -3.0416, 1.11", "17.883, -54.4947, -3.22358, 1.11", "19.1108, -56.39, -3.5319, 0.28", "20.1173, -57.8968, -3.85039, 0.83", "21.1662, -59.4562, -4.16893, 0.28", "21.5847, -60.0453, -4.2777, 0.55", "23.0484, -62.0732, -4.59831, 0.28", "23.7571, -63.0766, -4.73258, 0.55", "26.5839, -67.1507, -5.20081, 0.83", "28.4318, -69.8154, -5.47603, 0.28", "29.8218, -71.7666, -5.61774, 0.55", "30.8104, -73.1403, -5.67263, 0.28", "32.0614, -74.8963, -5.63686, 0.55", "32.5697, -75.6212, -5.59521, 0.55", "33.3166, -76.676, -5.47639, 0.28", "33.8859, -77.4999, -5.39057, 0.55", "35.2226, -79.5939, -5.30747, 0.28", "36.4788, -81.6395, -5.36002, 0.55", "37.0883, -82.7416, -5.40213, 0.28", "37.4504, -83.4412, -5.43372, 0.83", "38.1341, -84.9589, -5.55914, 0.83", "38.8599, -86.9442, -5.75351, 0.28", "38.9655, -87.3064, -5.79379, 0.55", "39.405, -89.1141, -6.04821, 0.28", "39.5615, -89.7965, -6.13374, 0.55", "40.0821, -91.9107, -6.36425, 0.28", "40.5482, -93.5121, -6.4993, 0.55", "40.9726, -94.8339, -6.63842, 0.28", "41.7652, -97.0546, -6.90342, 1.38", "42.6325, -99.277, -7.08118, 0.28", "42.9297, -100.008, -7.11509, 0.55", "43.812, -102.139, -7.13838, 0.55", "45.263, -105.623, -7.12001, 0.55", "46.2929, -108.092, -7.14146, 0.55", "48.0889, -112.382, -7.21313, 0.28", "48.7685, -113.994, -7.18233, 1.11", "49.4391, -115.577, -7.09705, 0.28", "49.7947, -116.368, -7.01862, 0.83", "50.7812, -118.371, -6.66885, 0.28", "50.9071, -118.608, -6.63097, 0.55", "52.807, -121.787, -6.29087, 0.28", "53.1139, -122.24, -6.22737, 0.83", "53.9773, -123.454, -6.06065, 0.28", "54.2803, -123.9, -6.02, 0.83", "54.9186, -124.86, -5.9126, 0.28", "56.1524, -126.731, -5.77096, 0.83", "58.8363, -130.744, -5.66687, 0.28", "60.0395, -132.536, -5.66988, 0.83", "61.4657, -134.64, -5.71716, 0.28", "62.7868, -136.479, -5.796, 0.55", "63.6469, -137.599, -5.83406, 0.28", "65.3689, -139.744, -5.87828, 1.11", "66.8113, -141.475, -5.91008, 0.28", "67.7623, -142.482, -5.91659, 0.55", "69.21, -143.862, -5.95245, 0.55", "70.6517, -145.155, -6.04623, 0.55", "71.9624, -146.259, -6.14316, 0.28", "72.1713, -146.427, -6.15813, 0.83", "75.2516, -148.782, -6.36195, 0.28", "76.9231, -150.015, -6.56222, 0.55", "79.0212, -151.514, -6.91937, 0.28", "80.756, -152.738, -7.29048, 0.83", "82.3962, -153.866, -7.66562, 0.28", "83.0819, -154.346, -7.82031, 0.55", "85.7589, -156.266, -8.39144, 0.28", "87.1967, -157.239, -8.67364, 1.11", "93.2032, -165.121, -10.0283, 1.11", "97.9735, -173.945, -10.4356, 1.11", "102.923, -182.656, -9.9164, 1.11", "108.165, -191.194, -9.55341, 1.11", "113.154, -199.771, -8.11931, 1.11", "119.459, -207.164, -5.85004, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.51701, -39.4308, -0.89481, 0.28", "4.53721, -40.8995, -0.685963, 0.28", "4.57402, -41.9825, -0.549586, 0.83", "4.62134, -43.3816, -0.482853, 0.28", "4.64268, -45.2585, -0.462203, 0.83", "4.54288, -47.9338, -0.558931, 0.55", "4.46683, -49.0583, -0.61949, 0.28", "4.41119, -50.4626, -0.658849, 0.83", "4.31388, -52.8697, -0.716895, 0.28", "4.25905, -55.3392, -0.564575, 0.83", "4.20403, -58.4229, -0.110336, 0.28", "4.17799, -59.506, 0.0767419, 0.83", "4.14366, -62.8939, 0.717274, 0.28", "4.15687, -65.7134, 1.36623, 0.83", "4.29485, -70.4497, 2.76797, 0.28", "4.41519, -72.2019, 3.38003, 0.83", "4.72366, -74.9274, 4.51504, 0.28", "4.86712, -76.2471, 5.0633, 0.55", "2.63104, -88.6802, 5.61824, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-51.7307, -33.3205, -34.6771, 0.28", "-54.789, -32.3423, -37.4555, 0.28", "-55.3366, -32.1671, -37.9529, 0.55", "-57.1378, -31.591, -39.5892, 0.28", "-58.2652, -31.2304, -40.6135, 0.55", "-58.9344, -31.0163, -41.2214, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-51.7307, -33.3205, -34.6771, 0.28", "-52.8027, -34.9978, -35.099, 0.28", "-53.6864, -35.7494, -35.1162, 0.55", "-56.0624, -37.2466, -34.809, 0.28", "-57.0146, -37.9518, -34.8238, 0.55", "-59.2455, -39.7271, -34.9601, 0.28", "-60.0156, -40.3399, -35.0072, 0.55", "-62.1294, -41.729, -35.0206, 0.28", "-63.4014, -42.4364, -34.9631, 0.83", "-67.0549, -44.1448, -34.5937, 0.28", "-67.9402, -44.6976, -34.5947, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-40.2324, -21.5729, -9.46778, 0.28", "-41.4144, -19.6393, -10.0499, 0.28", "-41.8677, -18.9061, -10.4336, 0.55", "-42.7863, -17.523, -11.3771, 0.28", "-43.3082, -16.7892, -11.8888, 0.83", "-44.6282, -14.9722, -13.1463, 0.28", "-44.9177, -14.5732, -13.4227, 0.55", "-46.7183, -12.2505, -15.0387, 0.28", "-47.4097, -11.386, -15.7024, 0.55", "-48.2332, -10.3206, -16.6107, 0.28", "-48.7665, -9.63287, -17.242, 0.55", "-49.0603, -9.22864, -17.67, 0.28", "-49.6675, -8.39887, -18.4364, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-40.2324, -21.5729, -9.46778, 0.55", "-42.7558, -20.303, -10.0891, 0.55", "-43.7645, -19.9289, -10.3096, 0.55", "-45.2944, -19.5594, -10.7064, 0.83", "-47.716, -19.1891, -11.3709, 0.28", "-48.5295, -19.1511, -11.6198, 0.55", "-49.8327, -19.1558, -12.0417, 0.55", "-51.5367, -19.4239, -12.4929, 0.83", "-53.7487, -19.967, -13.0901, 0.28", "-54.4311, -20.1909, -13.2837, 0.55", "-56.1314, -20.8952, -13.8159, 0.28", "-56.4679, -21.0271, -13.922, 0.55", "-58.9063, -22.021, -14.6467, 0.28", "-60.3947, -22.4927, -15.0424, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-34.8352, 41.9273, 12.5579, 0.83", "-34.7611, 48.0551, 13.9006, 0.83", "-34.8758, 51.1931, 14.384, 0.55", "-34.9369, 52.4945, 14.5606, 0.55", "-35.0715, 56.6583, 15.0984, 0.83", "-35.085, 60.1818, 15.5249, 0.55", "-35.0332, 62.4946, 15.8534, 0.55", "-34.6426, 66.8031, 16.4154, 0.55", "-34.5273, 68.0351, 16.6014, 0.83", "-34.1298, 71.5702, 17.1193, 0.28", "-33.7736, 73.845, 17.4715, 0.83", "-33.1678, 76.6816, 17.9624, 0.28", "-32.5152, 78.859, 18.3849, 0.83", "-30.8609, 91.9868, 22.1697, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-34.8352, 41.9273, 12.5579, 0.55", "-36.3409, 42.0379, 12.8117, 0.55", "-39.9451, 42.3027, 13.4191, 0.55", "-47.4667, 43.1752, 14.5872, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-43.5851, -2.64415, -5.25583, 0.83", "-46.4179, -2.40841, -4.47369, 0.83", "-48.3724, -2.00875, -3.83013, 0.83", "-50.2334, -1.58209, -3.18802, 0.55", "-51.9, -1.19138, -2.60952, 0.55", "-54.0001, -0.679049, -1.80486, 0.55", "-55.9324, -0.196383, -1.03464, 0.83", "-58.733, 0.535681, 0.0870939, 0.83", "-60.047, 0.929731, 0.579335, 0.55", "-60.8705, 1.20652, 0.855339, 0.83", "-63.658, 2.1702, 1.72611, 0.28", "-64.737, 2.53412, 1.91177, 0.83", "-65.6212, 2.80558, 1.96215, 0.83", "-68.0421, 3.51699, 1.84751, 0.28", "-68.9109, 3.7826, 1.75462, 0.83", "-70.018, 4.10169, 1.58713, 0.83", "-73.5, 4.94095, 0.940749, 0.55", "-75.9716, 5.41391, 0.546573, 0.28", "-77.0981, 5.53223, 0.323013, 0.83", "-78.8956, 5.49321, -0.0699737, 0.28", "-80.296, 5.24136, -0.451605, 0.55", "-81.5341, 4.78436, -0.845679, 0.28", "-82.233, 4.39944, -1.08596, 0.55", "-85.348, 2.30767, -2.43235, 0.28", "-86.7484, 1.24068, -3.07647, 0.28", "-88.5348, -0.300125, -3.90622, 0.83", "-89.759, -1.4285, -4.47141, 0.28", "-90.2201, -1.86053, -4.67043, 0.83", "-91.142, -2.73631, -4.96292, 0.28", "-91.8816, -3.45962, -5.08469, 0.55", "-92.8303, -4.35521, -5.229, 0.28", "-93.6228, -5.04229, -5.31536, 0.83", "-95.0072, -6.0899, -5.39142, 0.28", "-95.8504, -6.71397, -5.46347, 0.55", "-97.1339, -7.63336, -5.59198, 0.28", "-97.7922, -8.09087, -5.66303, 0.55", "-99.7261, -9.37539, -5.88529, 0.28", "-102.319, -10.8738, -6.33562, 0.55", "-104.246, -11.8134, -6.74252, 0.28", "-104.991, -12.0974, -6.91236, 0.83", "-106.072, -12.3883, -7.14091, 0.28", "-107.061, -12.6017, -7.37291, 0.83", "-110.441, -12.9978, -8.3095, 0.28", "-110.998, -13.0022, -8.47941, 0.83", "-112.959, -12.8022, -8.97211, 0.28", "-113.794, -12.6579, -9.19469, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-43.5851, -2.64415, -5.25583, 0.55", "-43.794, -4.36751, -5.60128, 0.55", "-44.1595, -7.25937, -6.16852, 0.55", "-44.4379, -8.89043, -6.42675, 1.11", "-44.7734, -10.4564, -6.85794, 0.55", "-45.2242, -12.3, -7.47201, 0.55", "-45.6717, -13.9188, -8.07545, 0.55", "-46.0868, -15.2114, -8.63207, 0.28", "-46.9549, -17.2927, -9.65803, 1.11", "-48.4967, -20.8322, -11.5275, 0.28", "-49.1488, -22.17, -12.2403, 0.28", "-49.4659, -22.7637, -12.5591, 0.55", "-49.9738, -23.6077, -13.0039, 0.28", "-50.6331, -24.7139, -13.5849, 0.28", "-51.3352, -25.8475, -14.1439, 0.55", "-52.3853, -27.5337, -14.7865, 0.28", "-53.1289, -28.7167, -15.2628, 0.55", "-54.1015, -30.2996, -15.9114, 0.28", "-55.2747, -32.1343, -16.7385, 0.28", "-56.0802, -33.2958, -17.2862, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-23.0907, -68.0223, -4.54603, 0.55", "-26.3155, -69.6816, -4.17942, 0.55", "-28.5515, -70.9098, -3.91832, 0.55", "-29.7554, -71.5597, -3.77648, 0.28", "-31.6523, -72.5996, -3.55415, 0.55", "-32.9215, -73.3009, -3.40319, 0.28", "-34.1844, -74.0079, -3.25301, 0.55", "-35.5754, -74.8328, -3.06706, 0.55", "-36.7795, -75.612, -2.8701, 0.28", "-37.2032, -75.9502, -2.79296, 0.55", "-37.753, -76.4694, -2.69291, 0.28", "-38.4193, -77.1972, -2.57955, 0.55", "-39.2016, -78.1631, -2.43515, 0.28", "-40.0419, -79.2086, -2.24352, 0.55", "-40.5325, -79.8479, -2.11733, 0.28", "-41.0304, -80.4958, -2.00345, 0.83", "-41.9629, -81.729, -1.81602, 0.28", "-42.28, -82.1656, -1.78112, 0.55", "-43.1316, -83.3762, -1.76714, 0.28", "-43.2959, -83.6125, -1.77142, 0.83", "-44.2587, -85.0077, -1.82301, 0.28", "-44.7464, -85.7296, -1.84596, 0.83", "-45.9966, -87.6131, -2.10526, 0.28", "-47.1325, -89.1428, -2.35045, 0.28", "-48.0577, -90.269, -2.54207, 0.55", "-49.4274, -91.7827, -2.78316, 0.55", "-50.8689, -93.224, -2.92135, 1.11", "-53.8877, -95.9857, -3.05963, 0.28", "-56.2372, -97.9346, -3.04366, 0.83", "-57.9338, -99.1837, -3.04233, 0.28", "-58.8975, -99.8297, -3.07146, 0.55", "-61.1634, -101.332, -3.11839, 0.28", "-61.6021, -101.625, -3.11149, 0.28", "-62.5679, -102.343, -3.02533, 0.55", "-64.4413, -104.087, -2.81598, 0.28", "-65.8986, -105.709, -2.57816, 0.83", "-68.0209, -108.533, -2.07841, 0.28", "-68.5137, -109.307, -1.93247, 0.83", "-69.5356, -111.19, -1.45413, 0.83", "-70.6364, -113.436, -0.739761, 0.28", "-71.1587, -114.611, -0.309543, 0.83", "-71.8271, -116.136, 0.265029, 0.28", "-72.2702, -117.092, 0.583894, 0.55", "-73.2919, -119.221, 1.20243, 0.28", "-73.713, -120.109, 1.39519, 0.55", "-74.5353, -121.836, 1.62998, 0.83", "-74.858, -122.581, 1.71939, 0.83", "-75.49, -124.193, 1.86735, 0.28", "-75.8504, -125.263, 1.87011, 0.55", "-76.6445, -128.214, 1.59907, 0.28", "-76.697, -128.481, 1.55357, 0.55", "-76.9978, -130.562, 1.03297, 0.28", "-77.0576, -131.077, 0.878069, 0.55", "-77.2445, -133.684, -0.139688, 0.28", "-77.2582, -134.021, -0.300729, 0.55", "-77.2172, -135.243, -1.06837, 0.28", "-77.2157, -135.473, -1.23452, 0.55", "-81.565, -144.112, 0.562081, 0.55", "-86.8214, -152.09, 2.83912, 0.55", "-92.511, -160.109, 2.95135, 0.55", "-98.7465, -167.409, 4.9543, 0.55", "-103.774, -175.641, 6.84688, 0.55", "-107.817, -184.27, 9.266, 0.55", "-112.795, -191.754, 13.1591, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-23.0907, -68.0223, -4.54603, 0.55", "-23.3731, -69.2081, -4.56187, 0.55", "-23.6252, -70.2428, -4.57854, 0.55", "-23.9273, -71.4076, -4.59843, 0.28", "-24.0479, -71.8321, -4.60606, 0.55", "-24.6189, -73.4976, -4.63641, 0.55", "-25.06, -74.6678, -4.65863, 0.28", "-25.5633, -75.9425, -4.66504, 0.28", "-25.7325, -76.3458, -4.64099, 0.55", "-26.2109, -77.4455, -4.52211, 0.55", "-27.0717, -79.345, -4.23568, 0.55", "-27.7163, -80.7573, -3.97159, 0.55", "-28.0033, -81.4623, -3.83347, 0.55", "-28.814, -83.6461, -3.4412, 0.28", "-29.017, -84.2273, -3.34156, 0.83", "-29.4374, -85.5186, -3.12839, 0.55", "-29.7616, -86.6608, -2.96971, 0.55", "-30.2858, -88.5413, -2.77683, 0.55", "-30.661, -89.8673, -2.69208, 0.83", "-30.915, -90.8228, -2.67328, 0.28", "-31.0157, -91.2051, -2.65957, 0.55", "-31.3364, -92.4813, -2.53372, 0.28", "-31.3493, -92.5286, -2.52621, 0.55", "-31.7227, -93.8702, -2.0294, 0.28", "-31.9171, -94.578, -1.68624, 0.83", "-32.0759, -95.1076, -1.40427, 0.83", "-32.703, -96.9167, -0.457045, 0.28", "-32.8801, -97.3913, -0.219645, 0.55", "-33.9898, -100.382, 1.14227, 0.28", "-34.3991, -101.534, 1.62089, 0.28", "-34.5864, -102.08, 1.82329, 0.83", "-35.1712, -103.747, 2.33208, 0.28", "-35.5547, -104.896, 2.57548, 0.28", "-35.7191, -105.5, 2.655, 0.55", "-36.0364, -107.002, 2.64458, 0.55", "-36.1518, -107.781, 2.64098, 0.55", "-36.3052, -108.78, 2.64045, 0.28", "-36.4021, -109.397, 2.68268, 0.28", "-36.5068, -110.005, 2.75048, 0.55", "-36.8682, -111.94, 3.0103, 0.28", "-37.1181, -113.085, 3.1795, 0.83", "-37.4314, -114.359, 3.30147, 0.83", "-37.8312, -115.791, 3.37398, 0.55", "-38.2905, -117.226, 3.42949, 0.28", "-38.5434, -117.98, 3.44666, 0.28", "-38.7185, -118.504, 3.46933, 0.55", "-39.355, -120.459, 3.54692, 0.28", "-39.5379, -121.029, 3.55715, 0.55", "-40.0146, -122.41, 3.54518, 0.28", "-40.3643, -123.357, 3.56462, 0.83", "-40.9693, -125.05, 3.65162, 0.28", "-41.0962, -125.418, 3.68256, 0.55", "-41.7337, -127.258, 3.96336, 0.28", "-41.9311, -127.815, 4.04123, 0.55", "-42.245, -128.749, 4.18953, 0.55", "-42.4933, -129.507, 4.35917, 0.28", "-42.597, -129.872, 4.44623, 0.55", "-42.9135, -131.194, 4.80886, 0.28", "-42.99, -131.557, 4.93019, 0.55", "-43.386, -133.644, 5.69607, 0.28", "-43.4939, -134.315, 5.96695, 0.55", "-43.6876, -135.594, 6.5177, 0.28", "-43.7543, -136.116, 6.74118, 0.55", "-46.8359, -142.508, 6.60438, 0.55", "-49.1449, -149.206, 6.15407, 0.55", "-52.6554, -155.244, 4.93988, 0.55", "-55.3103, -161.549, 3.0821, 0.55", "-57.9372, -168.119, 2.51683, 0.55", "-59.8256, -174.96, 2.66324, 0.55", "-60.8017, -181.978, 2.32996, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "59.5503, 12.0657, 60.9439, 0.55", "65.3358, 16.8347, 68.9709, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "59.5503, 12.0657, 60.9439, 0.55", "65.5131, 16.0415, 72.484, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "47.4829, -55.3593, 9.32788, 0.55", "47.9015, -56.0828, 11.0035, 0.55", "48.6924, -57.3325, 13.4905, 0.55", "49.0625, -57.8249, 14.3326, 0.55", "54.0841, -64.1623, 23.7592, 0.28", "54.6769, -64.9013, 24.6403, 0.83", "56.4607, -67.1741, 26.8706, 0.28", "57.439, -68.5429, 27.8635, 0.28", "59.2341, -71.1234, 28.7775, 0.28", "59.8848, -71.9515, 28.7933, 0.55", "61.661, -74.0614, 28.0295, 0.28", "62.2174, -74.7874, 27.8284, 0.28", "63.0599, -76.0196, 27.7118, 0.55", "64.0779, -77.6011, 27.6597, 0.55", "65.7057, -80.5411, 27.9703, 0.55", "71.9516, -87.92, 32.1448, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "47.4829, -55.3593, 9.32788, 0.55", "49.1871, -58.124, 9.74474, 0.55", "50.7334, -60.6677, 10.1051, 0.55", "51.9326, -62.6452, 10.3566, 0.55", "53.4694, -65.1379, 10.6617, 0.28", "54.741, -67.1071, 10.8895, 0.55", "56.6274, -69.8574, 11.2085, 0.55", "57.6777, -71.2561, 11.4138, 0.28", "58.5552, -72.3971, 11.5885, 0.28", "59.0228, -72.9487, 11.7005, 0.28", "60.4204, -74.4884, 12.0339, 0.55", "61.7706, -75.7745, 12.3183, 0.55", "63.68, -77.4052, 12.6623, 0.28", "64.2439, -77.8628, 12.7679, 0.55", "66.5848, -79.7327, 13.2309, 0.28", "67.5347, -80.5078, 13.4113, 0.55", "69.959, -82.511, 13.8307, 0.28", "70.5215, -82.9492, 13.8562, 0.55", "78.0521, -91.3876, 16.7256, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "42.7596, -85.6842, 30.0998, 0.55", "44.7039, -94.9987, 33.9808, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "42.7596, -85.6842, 30.0998, 0.55", "44.3219, -93.4237, 32.7505, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "axon_0", "axon_0", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_44", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_LBC_95f37b59ec_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_71, id: dend_71, parent: soma_0
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: soma_0
create dend_68
public dend_68
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_67, id: dend_67, parent: dend_57
create dend_67
public dend_67
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_58
create dend_66
public dend_66
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_71(0), soma_0(0.4999999896865996)
    connect dend_68(0), soma_0(0.4999999896865996)
    connect dend_57(0), soma_0(0.4999999896865996)
    connect dend_56(0), soma_0(0.4999999896865996)
    connect dend_43(0), soma_0(0.4999999896865996)
    connect dend_30(0), soma_0(0.4999999896865996)
    connect dend_27(0), soma_0(0.4999999896865996)
    connect dend_0(0), soma_0(0.4999999896865996)
    connect axon_0(0), soma_0(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_67(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.94076, -9.8712, -1.65398, 2.77643 ) }
    soma_0 { pt3dadd( -2.68752, -8.89837, -1.49144, 3.78775 ) }
    soma_0 { pt3dadd( -2.43427, -7.92553, -1.32889, 4.91862 ) }
    soma_0 { pt3dadd( -2.18103, -6.95269, -1.16635, 5.95702 ) }
    soma_0 { pt3dadd( -1.92778, -5.97986, -1.00381, 6.99541 ) }
    soma_0 { pt3dadd( -1.67453, -5.00702, -0.841265, 8.01733 ) }
    soma_0 { pt3dadd( -1.42129, -4.03418, -0.678723, 8.72435 ) }
    soma_0 { pt3dadd( -1.16804, -3.06135, -0.516181, 9.35315 ) }
    soma_0 { pt3dadd( -0.914798, -2.08851, -0.353638, 9.98195 ) }
    soma_0 { pt3dadd( -0.661552, -1.11567, -0.191096, 10.5 ) }
    soma_0 { pt3dadd( -0.408307, -0.142835, -0.0285532, 10.7936 ) }
    soma_0 { pt3dadd( -0.155061, 0.830002, 0.133989, 11.1592 ) }
    soma_0 { pt3dadd( 0.0981843, 1.80284, 0.296532, 11.5247 ) }
    soma_0 { pt3dadd( 0.35143, 2.77568, 0.459074, 11.423 ) }
    soma_0 { pt3dadd( 0.604675, 3.74851, 0.621617, 11.7952 ) }
    soma_0 { pt3dadd( 0.857921, 4.72135, 0.784159, 12.2515 ) }
    soma_0 { pt3dadd( 1.11117, 5.69419, 0.946702, 11.9034 ) }
    soma_0 { pt3dadd( 1.36441, 6.66702, 1.10924, 10.4337 ) }
    soma_0 { pt3dadd( 1.61766, 7.63986, 1.27179, 8.34249 ) }
    soma_0 { pt3dadd( 1.8709, 8.6127, 1.43433, 5.63558 ) }
    soma_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 3.26719 ) }
    // Section: dend_71, id: dend_71, parent: soma_0 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.931045, 7.08157, 20.757, 0.83 ) }
    dend_71 { pt3dadd( 0.665304, 10.5867, 20.7792, 0.83 ) }
    dend_71 { pt3dadd( 0.564127, 13.6878, 20.794, 0.83 ) }
    dend_71 { pt3dadd( 0.570604, 16.0274, 20.8023, 1.11 ) }
    dend_71 { pt3dadd( 0.61751, 18.177, 20.8084, 0.83 ) }
    dend_71 { pt3dadd( 0.687667, 20.8753, 20.8156, 0.83 ) }
    dend_71 { pt3dadd( 0.762815, 22.4031, 20.8185, 0.83 ) }
    dend_71 { pt3dadd( 0.911205, 23.5899, 20.8602, 0.83 ) }
    dend_71 { pt3dadd( 1.04093, 24.6378, 20.9755, 1.11 ) }
    dend_71 { pt3dadd( 1.23285, 26.0245, 21.211, 0.83 ) }
    dend_71 { pt3dadd( 1.367, 26.983, 21.4126, 1.11 ) }
    dend_71 { pt3dadd( 1.52347, 28.6037, 21.7947, 0.83 ) }
    dend_71 { pt3dadd( 1.78686, 30.8159, 22.302, 1.11 ) }
    dend_71 { pt3dadd( 2.07385, 33.2515, 22.83, 0.83 ) }
    dend_71 { pt3dadd( 2.28493, 35.1256, 23.188, 0.55 ) }
    dend_71 { pt3dadd( 2.49183, 36.9481, 23.461, 0.55 ) }
    dend_71 { pt3dadd( 2.59535, 38.1609, 23.5919, 0.83 ) }
    dend_71 { pt3dadd( 2.72668, 40.9334, 23.778, 0.83 ) }
    dend_71 { pt3dadd( 2.80908, 42.6441, 23.8126, 0.83 ) }
    dend_71 { pt3dadd( 2.8852, 45.0863, 23.8109, 0.55 ) }
    dend_71 { pt3dadd( 2.97719, 48.7417, 23.8087, 1.11 ) }
    dend_71 { pt3dadd( 2.97416, 51.2265, 23.943, 0.83 ) }
    dend_71 { pt3dadd( 2.92599, 52.9019, 24.108, 1.11 ) }
    dend_71 { pt3dadd( 2.76797, 55.7524, 24.5038, 0.55 ) }
    dend_71 { pt3dadd( 2.69234, 57.0063, 24.7389, 0.55 ) }
    dend_71 { pt3dadd( 2.35522, 60.313, 25.5234, 0.55 ) }
    dend_71 { pt3dadd( 1.8887, 63.8582, 26.5835, 0.83 ) }
    dend_71 { pt3dadd( 1.6397, 65.4779, 27.1559, 0.55 ) }
    dend_71 { pt3dadd( 1.4816, 66.5773, 27.5725, 0.83 ) }
    dend_71 { pt3dadd( 1.24954, 68.1302, 28.1819, 0.83 ) }
    dend_71 { pt3dadd( 0.983115, 70.2329, 28.9628, 0.83 ) }
    dend_71 { pt3dadd( 0.625607, 73.8679, 30.2228, 1.11 ) }
    dend_71 { pt3dadd( 0.480513, 76.401, 30.9683, 0.55 ) }
    dend_71 { pt3dadd( 0.387141, 79.6451, 31.933, 0.83 ) }
    dend_71 { pt3dadd( 0.397273, 81.0823, 32.3426, 0.55 ) }
    dend_71 { pt3dadd( 0.467045, 83.164, 32.9115, 0.83 ) }
    dend_71 { pt3dadd( 0.579405, 84.7185, 33.331, 0.28 ) }
    dend_71 { pt3dadd( 0.696456, 85.8725, 33.5909, 0.55 ) }
    dend_71 { pt3dadd( 0.835445, 86.895, 33.7698, 0.28 ) }
    dend_71 { pt3dadd( 1.03008, 89.2423, 34.1537, 0.83 ) }
    dend_71 { pt3dadd( 1.09224, 97.6942, 35.7887, 0.83 ) }
    dend_71 { pt3dadd( -0.251791, 105.528, 39.0389, 0.83 ) }
    dend_71 { pt3dadd( -1.5817, 112.732, 43.4702, 0.83 ) }
    dend_71 { pt3dadd( -3.35626, 120.37, 46.9566, 0.83 ) }
    dend_71 { pt3dadd( -4.74403, 128.08, 50.4611, 0.83 ) }
    dend_71 { pt3dadd( -5.76314, 136.234, 53.0016, 0.83 ) }
    dend_71 { pt3dadd( -7.84005, 144.507, 54.1747, 0.83 ) }
    dend_71 { pt3dadd( -9.0105, 153.046, 54.2322, 0.83 ) }
    dend_71 { pt3dadd( -10.8332, 161.425, 53.4123, 0.83 ) }
    dend_71 { pt3dadd( -12.6733, 169.803, 52.6312, 0.83 ) }
    dend_71 { pt3dadd( -14.9603, 177.974, 51.1915, 0.83 ) }
    dend_71 { pt3dadd( -17.8788, 185.986, 50.0581, 0.83 ) }
    dend_71 { pt3dadd( -20.0518, 194.312, 49.6805, 0.83 ) }
    // Section: dend_68, id: dend_68, parent: soma_0 (entry count 74/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 1.84105, 8.53707, 11.867, 1.38 ) }
    dend_68 { pt3dadd( 2.44895, 9.34263, 12.0854, 1.38 ) }
    dend_68 { pt3dadd( 3.02207, 10.102, 12.2912, 1.38 ) }
    dend_68 { pt3dadd( 3.97149, 11.3601, 12.6323, 1.11 ) }
    dend_68 { pt3dadd( 4.76101, 12.4063, 12.9159, 1.11 ) }
    dend_68 { pt3dadd( 6.39204, 14.5676, 13.5018, 0.83 ) }
    dend_68 { pt3dadd( 8.12362, 16.8622, 14.1239, 1.11 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 81/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.61104, 4.15007, -0.263001, 2.77 ) }
    dend_57 { pt3dadd( 6.56032, 4.61686, -0.368053, 2.77 ) }
    dend_57 { pt3dadd( 9.37669, 6.00179, -0.67973, 1.66 ) }
    dend_57 { pt3dadd( 13.8648, 8.20878, -1.17641, 1.66 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 85/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.58105, 7.13282, -5.263, 0.83 ) }
    dend_56 { pt3dadd( 4.46325, 7.90652, -5.29657, 0.83 ) }
    dend_56 { pt3dadd( 5.54525, 9.03603, -5.24677, 0.83 ) }
    dend_56 { pt3dadd( 7.18092, 10.93, -5.46716, 0.83 ) }
    dend_56 { pt3dadd( 8.526, 12.513, -5.85822, 0.83 ) }
    dend_56 { pt3dadd( 9.54432, 13.6534, -6.19909, 0.83 ) }
    dend_56 { pt3dadd( 10.923, 15.1304, -6.68356, 0.83 ) }
    dend_56 { pt3dadd( 11.9291, 16.2423, -7.06857, 0.83 ) }
    dend_56 { pt3dadd( 14.4106, 19.2819, -8.14776, 1.11 ) }
    dend_56 { pt3dadd( 15.3859, 20.6022, -8.59212, 0.55 ) }
    dend_56 { pt3dadd( 16.125, 21.6351, -8.90131, 0.55 ) }
    dend_56 { pt3dadd( 16.803, 22.5776, -9.13443, 0.55 ) }
    dend_56 { pt3dadd( 18.0787, 24.3541, -9.48539, 1.11 ) }
    dend_56 { pt3dadd( 19.4139, 26.3177, -9.68874, 0.83 ) }
    dend_56 { pt3dadd( 20.6181, 28.2235, -9.66374, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 21.5964, 29.9005, -9.62757, 0.55 ) }
    dend_56 { pt3dadd( 22.593, 31.7254, -9.61566, 0.55 ) }
    dend_56 { pt3dadd( 22.9803, 32.4597, -9.60837, 0.83 ) }
    dend_56 { pt3dadd( 24.1819, 34.7734, -9.60078, 0.55 ) }
    dend_56 { pt3dadd( 24.5271, 35.4499, -9.59981, 0.55 ) }
    dend_56 { pt3dadd( 25.1669, 36.8104, -9.63197, 1.11 ) }
    dend_56 { pt3dadd( 25.5666, 37.6743, -9.65549, 1.11 ) }
    dend_56 { pt3dadd( 25.9541, 38.5409, -9.70065, 0.28 ) }
    dend_56 { pt3dadd( 26.4178, 39.6248, -9.84793, 0.55 ) }
    dend_56 { pt3dadd( 26.7267, 40.4522, -10.055, 0.28 ) }
    dend_56 { pt3dadd( 27.0081, 41.3052, -10.3318, 0.83 ) }
    dend_56 { pt3dadd( 27.7666, 43.7278, -11.2161, 0.55 ) }
    dend_56 { pt3dadd( 28.1998, 45.0019, -11.7147, 0.55 ) }
    dend_56 { pt3dadd( 28.8191, 46.7784, -12.4286, 0.83 ) }
    dend_56 { pt3dadd( 29.3424, 48.3152, -13.0303, 0.83 ) }
    dend_56 { pt3dadd( 29.7527, 49.5275, -13.4775, 0.55 ) }
    dend_56 { pt3dadd( 30.3068, 51.0856, -14.0438, 0.55 ) }
    dend_56 { pt3dadd( 30.8685, 52.618, -14.5761, 0.55 ) }
    dend_56 { pt3dadd( 31.096, 53.1421, -14.7119, 0.55 ) }
    dend_56 { pt3dadd( 31.8301, 54.4906, -14.9286, 1.38 ) }
    dend_56 { pt3dadd( 32.6506, 55.7381, -15.065, 0.55 ) }
    dend_56 { pt3dadd( 33.1952, 56.4786, -15.0731, 0.83 ) }
    dend_56 { pt3dadd( 33.4462, 56.8055, -15.0484, 0.28 ) }
    dend_56 { pt3dadd( 34.185, 57.7508, -14.9039, 0.83 ) }
    dend_56 { pt3dadd( 34.8683, 58.5649, -14.7491, 0.28 ) }
    dend_56 { pt3dadd( 35.5208, 59.2819, -14.532, 0.28 ) }
    dend_56 { pt3dadd( 36.8442, 60.8064, -14.0544, 0.55 ) }
    dend_56 { pt3dadd( 37.4373, 61.5091, -13.8218, 0.55 ) }
    dend_56 { pt3dadd( 38.4633, 62.7354, -13.3982, 0.55 ) }
    dend_56 { pt3dadd( 39.4173, 63.9236, -12.9839, 0.55 ) }
    dend_56 { pt3dadd( 40.477, 65.2834, -12.5387, 0.83 ) }
    dend_56 { pt3dadd( 41.3256, 66.4093, -12.2333, 0.83 ) }
    dend_56 { pt3dadd( 41.9127, 67.2608, -12.0636, 0.28 ) }
    dend_56 { pt3dadd( 42.1945, 67.7323, -11.9552, 0.83 ) }
    dend_56 { pt3dadd( 42.8711, 68.954, -11.6987, 0.28 ) }
    dend_56 { pt3dadd( 42.9537, 69.1276, -11.6691, 0.83 ) }
    dend_56 { pt3dadd( 43.5536, 70.5347, -11.5464, 0.28 ) }
    dend_56 { pt3dadd( 43.9433, 71.4774, -11.4596, 0.83 ) }
    dend_56 { pt3dadd( 44.4907, 72.8898, -11.4023, 0.28 ) }
    dend_56 { pt3dadd( 45.0491, 74.3478, -11.3679, 1.11 ) }
    dend_56 { pt3dadd( 45.412, 75.2233, -11.3553, 1.11 ) }
    dend_56 { pt3dadd( 45.7986, 76.039, -11.3795, 0.55 ) }
    dend_56 { pt3dadd( 46.3329, 76.9846, -11.4619, 0.28 ) }
    dend_56 { pt3dadd( 46.7158, 77.601, -11.5478, 0.55 ) }
    dend_56 { pt3dadd( 47.2408, 78.4222, -11.7315, 0.28 ) }
    dend_56 { pt3dadd( 47.7455, 79.1892, -11.8685, 0.83 ) }
    dend_56 { pt3dadd( 48.8264, 80.5916, -12.1041, 0.55 ) }
    dend_56 { pt3dadd( 49.2216, 81.0584, -12.1755, 0.55 ) }
    dend_56 { pt3dadd( 50.3603, 82.3181, -12.3399, 1.11 ) }
    dend_56 { pt3dadd( 52.0168, 84.1001, -12.5051, 0.28 ) }
    dend_56 { pt3dadd( 53.0542, 85.0972, -12.5745, 0.83 ) }
    dend_56 { pt3dadd( 54.2017, 86.131, -12.5692, 0.28 ) }
    dend_56 { pt3dadd( 54.7814, 86.6511, -12.5204, 0.83 ) }
    dend_56 { pt3dadd( 55.7412, 87.5119, -12.4052, 0.28 ) }
    dend_56 { pt3dadd( 56.239, 87.9539, -12.3227, 0.83 ) }
    dend_56 { pt3dadd( 57.7975, 89.4124, -12.0116, 0.83 ) }
    dend_56 { pt3dadd( 58.4404, 90.0724, -11.9013, 0.28 ) }
    dend_56 { pt3dadd( 59.9833, 91.8137, -11.634, 0.28 ) }
    dend_56 { pt3dadd( 60.7507, 92.7107, -11.5111, 1.11 ) }
    dend_56 { pt3dadd( 62.4707, 94.8274, -11.2572, 0.28 ) }
    dend_56 { pt3dadd( 63.287, 95.8697, -11.1386, 1.11 ) }
    dend_56 { pt3dadd( 64.0704, 96.9538, -11.0312, 0.28 ) }
    dend_56 { pt3dadd( 64.527, 97.5729, -10.9798, 0.83 ) }
    dend_56 { pt3dadd( 65.464, 98.8272, -10.8652, 0.28 ) }
    dend_56 { pt3dadd( 65.7091, 99.1674, -10.8292, 0.55 ) }
    dend_56 { pt3dadd( 66.1894, 99.8484, -10.7683, 0.28 ) }
    dend_56 { pt3dadd( 66.4409, 100.18, -10.7283, 0.55 ) }
    dend_56 { pt3dadd( 67.1259, 100.988, -10.6226, 0.28 ) }
    dend_56 { pt3dadd( 67.5415, 101.372, -10.557, 0.55 ) }
    dend_56 { pt3dadd( 68.3671, 102.004, -10.477, 0.28 ) }
    dend_56 { pt3dadd( 68.8452, 102.329, -10.483, 0.55 ) }
    dend_56 { pt3dadd( 69.9124, 102.98, -10.5747, 0.28 ) }
    dend_56 { pt3dadd( 70.2421, 103.154, -10.5969, 0.83 ) }
    dend_56 { pt3dadd( 71.5622, 103.786, -10.7124, 0.28 ) }
    dend_56 { pt3dadd( 72.2412, 104.085, -10.7697, 0.83 ) }
    dend_56 { pt3dadd( 73.6792, 104.768, -10.8766, 0.28 ) }
    dend_56 { pt3dadd( 75.1235, 105.518, -10.9401, 0.28 ) }
    dend_56 { pt3dadd( 76.488, 106.341, -11.0631, 1.11 ) }
    dend_56 { pt3dadd( 77.3657, 106.937, -11.1637, 0.28 ) }
    dend_56 { pt3dadd( 78.1469, 107.534, -11.2514, 0.55 ) }
    dend_56 { pt3dadd( 79.0055, 108.266, -11.3327, 0.28 ) }
    dend_56 { pt3dadd( 79.7438, 108.998, -11.4108, 0.83 ) }
    dend_56 { pt3dadd( 81.2809, 110.813, -11.5136, 0.28 ) }
    dend_56 { pt3dadd( 81.5247, 111.157, -11.5212, 0.55 ) }
    dend_56 { pt3dadd( 82.3111, 112.363, -11.4693, 0.55 ) }
    dend_56 { pt3dadd( 83.141, 113.76, -11.3561, 0.28 ) }
    dend_56 { pt3dadd( 83.6839, 114.788, -11.1661, 1.11 ) }
    dend_56 { pt3dadd( 84.284, 116.291, -10.7487, 0.28 ) }
    dend_56 { pt3dadd( 84.5806, 117.347, -10.4599, 0.55 ) }
    dend_56 { pt3dadd( 84.9101, 119.271, -10.1075, 0.28 ) }
    dend_56 { pt3dadd( 84.9435, 120.063, -10.0431, 0.83 ) }
    dend_56 { pt3dadd( 84.8668, 122.436, -9.76393, 0.28 ) }
    dend_56 { pt3dadd( 84.7355, 124.139, -9.61733, 0.28 ) }
    dend_56 { pt3dadd( 84.4127, 126.728, -9.54427, 0.55 ) }
    dend_56 { pt3dadd( 84.1577, 128.26, -9.54329, 0.28 ) }
    dend_56 { pt3dadd( 83.6384, 130.465, -9.65149, 0.28 ) }
    dend_56 { pt3dadd( 83.0197, 133.369, -10.0256, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 97/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.11895, -10.6099, -2.573, 2.22 ) }
    dend_43 { pt3dadd( -1.22552, -12.8944, -1.38125, 2.22 ) }
    dend_43 { pt3dadd( -1.41671, -16.9929, 0.756805, 2.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( -1.73642, -23.8461, 4.33198, 2.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.67895, -9.02118, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -6.52358, -9.88676, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -9.76503, -10.8731, -5.133, 2.49 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -5.96896, 2.04882, 10.787, 1.11 ) }
    dend_27 { pt3dadd( -7.53044, 3.10445, 11.5722, 0.83 ) }
    dend_27 { pt3dadd( -10.4354, 4.91039, 12.7293, 0.55 ) }
    dend_27 { pt3dadd( -11.2006, 5.40889, 12.9903, 0.83 ) }
    dend_27 { pt3dadd( -12.7753, 6.42254, 13.5126, 0.55 ) }
    dend_27 { pt3dadd( -14.53, 7.55203, 14.0946, 0.83 ) }
    dend_27 { pt3dadd( -16.532, 8.84069, 14.7586, 0.55 ) }
    dend_27 { pt3dadd( -19.0121, 10.3966, 15.5447, 0.55 ) }
    dend_27 { pt3dadd( -21.7198, 11.9851, 16.1899, 0.55 ) }
    dend_27 { pt3dadd( -23.2399, 12.884, 16.5405, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.12895, -1.70268, 5.667, 2.49 ) }
    dend_0 { pt3dadd( -0.847059, -6.27076, 5.667, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 5.90296, 24.1017, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 9.68178, 38.618, 1.59687, 1.11 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 19/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 8.12362, 16.8622, 14.1239, 0.55 ) }
    dend_70 { pt3dadd( 9.06839, 17.9367, 13.68, 0.55 ) }
    dend_70 { pt3dadd( 10.3935, 19.4404, 13.0336, 0.55 ) }
    dend_70 { pt3dadd( 11.6295, 20.7005, 12.5442, 0.83 ) }
    dend_70 { pt3dadd( 12.8299, 21.8197, 12.1517, 0.83 ) }
    dend_70 { pt3dadd( 14.4493, 23.2388, 11.6941, 0.55 ) }
    dend_70 { pt3dadd( 15.6309, 24.2275, 11.3969, 0.55 ) }
    dend_70 { pt3dadd( 16.8489, 25.1689, 11.1557, 0.83 ) }
    dend_70 { pt3dadd( 18.3767, 26.3418, 10.9451, 0.55 ) }
    dend_70 { pt3dadd( 19.686, 27.3251, 10.9804, 0.55 ) }
    dend_70 { pt3dadd( 20.5392, 27.9933, 11.118, 0.28 ) }
    dend_70 { pt3dadd( 21.36, 28.6781, 11.3657, 0.28 ) }
    dend_70 { pt3dadd( 22.5655, 29.7273, 11.9342, 0.55 ) }
    dend_70 { pt3dadd( 24.2086, 31.3071, 12.889, 0.55 ) }
    dend_70 { pt3dadd( 26.0349, 33.1811, 14.0798, 0.28 ) }
    dend_70 { pt3dadd( 26.391, 33.5193, 14.3352, 0.28 ) }
    dend_70 { pt3dadd( 27.2106, 34.2586, 14.9394, 0.55 ) }
    dend_70 { pt3dadd( 28.3078, 35.1106, 15.6209, 0.28 ) }
    dend_70 { pt3dadd( 29.6879, 36.0082, 16.2198, 0.55 ) }
    dend_70 { pt3dadd( 30.5783, 36.5324, 16.4628, 0.28 ) }
    dend_70 { pt3dadd( 31.7186, 37.1851, 16.6319, 0.83 ) }
    dend_70 { pt3dadd( 33.2442, 38.0144, 16.7866, 0.55 ) }
    dend_70 { pt3dadd( 35.2004, 39.0702, 16.914, 0.55 ) }
    dend_70 { pt3dadd( 37.1005, 40.1518, 16.9289, 0.55 ) }
    dend_70 { pt3dadd( 39.198, 41.3983, 16.896, 0.55 ) }
    dend_70 { pt3dadd( 39.4971, 41.5789, 16.8809, 0.28 ) }
    dend_70 { pt3dadd( 40.5726, 42.2005, 16.7848, 0.28 ) }
    dend_70 { pt3dadd( 41.8339, 42.8675, 16.5592, 0.55 ) }
    dend_70 { pt3dadd( 42.8531, 43.4088, 16.288, 0.28 ) }
    dend_70 { pt3dadd( 43.2603, 43.6223, 16.1344, 0.55 ) }
    dend_70 { pt3dadd( 44.1908, 44.0945, 15.5055, 0.55 ) }
    dend_70 { pt3dadd( 44.8922, 44.5033, 14.9604, 0.55 ) }
    dend_70 { pt3dadd( 46.2346, 45.3904, 13.8698, 0.55 ) }
    dend_70 { pt3dadd( 47.1494, 46.0012, 13.1621, 0.28 ) }
    dend_70 { pt3dadd( 49.052, 47.2856, 11.8407, 0.83 ) }
    dend_70 { pt3dadd( 52.6097, 49.8116, 9.59095, 0.55 ) }
    dend_70 { pt3dadd( 53.8994, 50.7751, 8.84787, 0.55 ) }
    dend_70 { pt3dadd( 55.2767, 51.8112, 8.04231, 0.83 ) }
    dend_70 { pt3dadd( 56.4282, 52.6821, 7.49252, 0.28 ) }
    dend_70 { pt3dadd( 57.2637, 53.3131, 7.18242, 0.83 ) }
    dend_70 { pt3dadd( 58.2321, 54.042, 6.97223, 0.28 ) }
    dend_70 { pt3dadd( 59.1466, 54.7874, 6.97004, 0.83 ) }
    dend_70 { pt3dadd( 62.0811, 57.1332, 7.3416, 0.28 ) }
    dend_70 { pt3dadd( 64.1752, 58.9926, 7.83552, 0.55 ) }
    dend_70 { pt3dadd( 65.6012, 60.3799, 8.34672, 0.28 ) }
    dend_70 { pt3dadd( 66.3029, 61.1105, 8.56325, 0.28 ) }
    dend_70 { pt3dadd( 67.5265, 62.3884, 8.8994, 0.83 ) }
    dend_70 { pt3dadd( 69.6816, 64.5589, 9.44058, 0.28 ) }
    dend_70 { pt3dadd( 70.6778, 65.4686, 9.62387, 0.83 ) }
    dend_70 { pt3dadd( 72.3356, 66.7932, 9.52449, 0.28 ) }
    dend_70 { pt3dadd( 75.6463, 69.3669, 8.93265, 0.55 ) }
    dend_70 { pt3dadd( 77.146, 70.4108, 8.55031, 0.28 ) }
    dend_70 { pt3dadd( 77.9715, 70.8938, 8.2334, 0.28 ) }
    dend_70 { pt3dadd( 79.1404, 71.5295, 7.51826, 0.55 ) }
    dend_70 { pt3dadd( 80.6696, 72.1562, 6.59731, 0.83 ) }
    dend_70 { pt3dadd( 87.1823, 78.1, 5.72159, 0.83 ) }
    dend_70 { pt3dadd( 93.7663, 84.0305, 5.60906, 0.83 ) }
    dend_70 { pt3dadd( 101.211, 88.6747, 6.6025, 0.83 ) }
    dend_70 { pt3dadd( 109.243, 91.7304, 8.51257, 0.83 ) }
    dend_70 { pt3dadd( 117.257, 93.4302, 11.7039, 0.83 ) }
    dend_70 { pt3dadd( 124.304, 94.7583, 16.7903, 0.83 ) }
    dend_70 { pt3dadd( 131.805, 95.0667, 21.36, 0.83 ) }
    dend_70 { pt3dadd( 138.948, 93.8052, 26.3334, 0.83 ) }
    dend_70 { pt3dadd( 146.811, 93.8582, 30.2607, 0.83 ) }
    dend_70 { pt3dadd( 153.769, 93.5156, 35.6204, 0.83 ) }
    dend_70 { pt3dadd( 161.566, 93.1157, 39.6602, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 8.12362, 16.8622, 14.1239, 0.55 ) }
    dend_69 { pt3dadd( 9.41768, 17.0067, 15.7718, 0.55 ) }
    dend_69 { pt3dadd( 10.1871, 17.2417, 16.8902, 0.55 ) }
    dend_69 { pt3dadd( 11.5713, 17.618, 19.0404, 0.55 ) }
    dend_69 { pt3dadd( 13.6965, 18.1404, 22.3921, 0.55 ) }
    dend_69 { pt3dadd( 14.4416, 18.2701, 23.5439, 0.83 ) }
    dend_69 { pt3dadd( 15.1551, 18.3578, 24.5124, 0.83 ) }
    dend_69 { pt3dadd( 16.7749, 18.5237, 26.8117, 0.83 ) }
    dend_69 { pt3dadd( 17.8803, 18.5452, 28.2254, 0.55 ) }
    dend_69 { pt3dadd( 19.264, 18.3622, 29.7015, 0.83 ) }
    dend_69 { pt3dadd( 20.4207, 18.0195, 30.6971, 0.55 ) }
    dend_69 { pt3dadd( 22.1812, 17.3924, 32.0834, 0.55 ) }
    dend_69 { pt3dadd( 24.6008, 16.3915, 33.8087, 0.83 ) }
    dend_69 { pt3dadd( 26.9515, 15.3104, 35.2554, 0.83 ) }
    dend_69 { pt3dadd( 28.3677, 14.6023, 36.0829, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_69 { pt3dadd( 29.7374, 13.7933, 36.8598, 0.83 ) }
    dend_69 { pt3dadd( 31.2439, 12.8179, 37.7251, 0.55 ) }
    dend_69 { pt3dadd( 32.175, 12.1131, 38.29, 0.83 ) }
    dend_69 { pt3dadd( 33.1946, 11.2718, 38.8394, 0.83 ) }
    dend_69 { pt3dadd( 34.3099, 10.3747, 39.4641, 0.83 ) }
    dend_69 { pt3dadd( 36.2757, 8.74391, 40.5772, 0.83 ) }
    dend_69 { pt3dadd( 37.0869, 7.92731, 41.0352, 0.55 ) }
    dend_69 { pt3dadd( 37.6984, 7.19752, 41.3891, 0.83 ) }
    dend_69 { pt3dadd( 38.2767, 6.4303, 41.7085, 0.83 ) }
    dend_69 { pt3dadd( 39.5577, 4.40255, 42.4193, 0.83 ) }
    dend_69 { pt3dadd( 40.3562, 2.78569, 42.9286, 0.83 ) }
    dend_69 { pt3dadd( 41.1252, 0.594811, 43.7682, 0.83 ) }
    dend_69 { pt3dadd( 41.6957, -1.20351, 44.4548, 0.83 ) }
    dend_69 { pt3dadd( 42.3085, -3.28446, 45.2641, 0.55 ) }
    dend_69 { pt3dadd( 42.7165, -5.09251, 45.9654, 0.55 ) }
    dend_69 { pt3dadd( 43.0424, -7.40583, 46.8863, 0.55 ) }
    dend_69 { pt3dadd( 43.4749, -10.7475, 48.505, 0.55 ) }
    dend_69 { pt3dadd( 48.9764, -14.0441, 54.5074, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_57 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 13.8648, 8.20878, -1.17641, 0.83 ) }
    dend_67 { pt3dadd( 14.7902, 13.1276, -0.167446, 0.83 ) }
    dend_67 { pt3dadd( 15.3002, 15.8094, 0.123185, 0.83 ) }
    dend_67 { pt3dadd( 15.8629, 18.2052, 0.805119, 0.83 ) }
    dend_67 { pt3dadd( 17.2842, 23.1021, 2.49945, 0.83 ) }
    dend_67 { pt3dadd( 18.1166, 25.5353, 3.33892, 0.83 ) }
    dend_67 { pt3dadd( 19.3742, 28.9914, 4.49752, 0.28 ) }
    dend_67 { pt3dadd( 20.3047, 31.2234, 5.45407, 0.83 ) }
    dend_67 { pt3dadd( 23.7946, 38.2434, 8.8599, 0.55 ) }
    dend_67 { pt3dadd( 25.1154, 40.6302, 10.1126, 0.55 ) }
    dend_67 { pt3dadd( 27.2689, 44.1547, 12.0643, 0.55 ) }
    dend_67 { pt3dadd( 27.977, 45.1893, 12.7699, 0.55 ) }
    dend_67 { pt3dadd( 30.2869, 48.3159, 15.2991, 0.55 ) }
    dend_67 { pt3dadd( 31.0321, 49.2222, 16.0742, 0.28 ) }
    dend_67 { pt3dadd( 31.8993, 50.2, 16.852, 0.55 ) }
    dend_67 { pt3dadd( 33.5488, 51.875, 18.4558, 0.55 ) }
    dend_67 { pt3dadd( 35.0693, 53.2511, 19.9661, 0.28 ) }
    dend_67 { pt3dadd( 35.6778, 53.8016, 20.544, 0.28 ) }
    dend_67 { pt3dadd( 36.2036, 54.2619, 20.94, 0.55 ) }
    dend_67 { pt3dadd( 37.1034, 54.9517, 21.585, 0.28 ) }
    dend_67 { pt3dadd( 38.6901, 56.0036, 22.5808, 0.55 ) }
    dend_67 { pt3dadd( 39.1449, 56.2762, 22.8077, 0.55 ) }
    dend_67 { pt3dadd( 40.342, 56.999, 23.351, 0.55 ) }
    dend_67 { pt3dadd( 42.8921, 58.4476, 24.5327, 0.28 ) }
    dend_67 { pt3dadd( 44.4233, 59.2696, 25.2445, 0.55 ) }
    dend_67 { pt3dadd( 45.9397, 60.0267, 25.9284, 0.28 ) }
    dend_67 { pt3dadd( 46.9055, 60.4884, 26.3794, 0.28 ) }
    dend_67 { pt3dadd( 48.5482, 61.2086, 27.0816, 0.55 ) }
    dend_67 { pt3dadd( 53.7334, 68.8277, 31.4447, 0.55 ) }
    dend_67 { pt3dadd( 60.3122, 76.0518, 34.3219, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 13.8648, 8.20878, -1.17641, 1.11 ) }
    dend_58 { pt3dadd( 17.4257, 6.64149, -2.20106, 1.11 ) }
    dend_58 { pt3dadd( 19.929, 5.62523, -3.19893, 1.11 ) }
    dend_58 { pt3dadd( 21.6374, 5.13991, -3.95083, 1.11 ) }
    dend_58 { pt3dadd( 23.4965, 4.78713, -4.82609, 1.38 ) }
    dend_58 { pt3dadd( 26.7208, 4.17534, -6.344, 2.22 ) }
    dend_58 { pt3dadd( 29.5501, 3.63848, -7.67598, 1.38 ) }
    dend_58 { pt3dadd( 32.2064, 3.07727, -9.11859, 0.83 ) }
    dend_58 { pt3dadd( 34.8934, 2.62922, -10.8871, 1.38 ) }
    dend_58 { pt3dadd( 36.6209, 2.5521, -12.1006, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.73642, -23.8461, 4.33198, 1.38 ) }
    dend_51 { pt3dadd( -2.77096, -25.1742, 4.6163, 1.38 ) }
    dend_51 { pt3dadd( -4.76164, -27.7298, 5.16339, 0.83 ) }
    dend_51 { pt3dadd( -5.47261, -28.6425, 5.35879, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.73642, -23.8461, 4.33198, 1.38 ) }
    dend_44 { pt3dadd( -0.67183, -26.8853, 4.25316, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.76503, -10.8731, -5.133, 1.38 ) }
    dend_32 { pt3dadd( -12.561, -13.4382, -5.15405, 1.38 ) }
    dend_32 { pt3dadd( -16.3587, -16.9223, -5.18263, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 67/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.76503, -10.8731, -5.133, 0.55 ) }
    dend_31 { pt3dadd( -10.2494, -9.71675, -5.84548, 0.55 ) }
    dend_31 { pt3dadd( -10.8051, -7.84668, -7.12264, 0.55 ) }
    dend_31 { pt3dadd( -11.0969, -6.6218, -7.97435, 0.55 ) }
    dend_31 { pt3dadd( -11.3906, -4.90613, -9.06441, 0.55 ) }
    dend_31 { pt3dadd( -11.5072, -3.94326, -9.65154, 0.55 ) }
    dend_31 { pt3dadd( -11.5913, -2.53206, -10.5265, 0.55 ) }
    dend_31 { pt3dadd( -11.4883, -1.06655, -11.3924, 0.28 ) }
    dend_31 { pt3dadd( -11.3878, -0.534398, -11.6825, 0.55 ) }
    dend_31 { pt3dadd( -10.9676, 0.740441, -12.411, 0.28 ) }
    dend_31 { pt3dadd( -10.6125, 1.58981, -12.8097, 0.55 ) }
    dend_31 { pt3dadd( -10.0377, 2.88911, -13.2475, 0.28 ) }
    dend_31 { pt3dadd( -9.61485, 3.81443, -13.4584, 0.55 ) }
    dend_31 { pt3dadd( -9.0258, 5.10365, -13.6851, 0.28 ) }
    dend_31 { pt3dadd( -8.74125, 5.72799, -13.8027, 0.55 ) }
    dend_31 { pt3dadd( -7.99061, 7.37478, -14.1564, 0.28 ) }
    dend_31 { pt3dadd( -7.55311, 8.35528, -14.382, 0.55 ) }
    dend_31 { pt3dadd( -6.5629, 10.6027, -15.0033, 0.28 ) }
    dend_31 { pt3dadd( -6.25525, 11.2751, -15.2353, 0.55 ) }
    dend_31 { pt3dadd( -5.84439, 12.098, -15.5397, 0.28 ) }
    dend_31 { pt3dadd( -5.50364, 12.766, -15.8027, 0.55 ) }
    dend_31 { pt3dadd( -4.7023, 14.2211, -16.4757, 0.28 ) }
    dend_31 { pt3dadd( -4.12249, 15.2937, -16.9583, 0.55 ) }
    dend_31 { pt3dadd( -3.58035, 16.3794, -17.4166, 0.28 ) }
    dend_31 { pt3dadd( -2.80536, 17.8813, -18.088, 0.28 ) }
    dend_31 { pt3dadd( -2.28104, 18.8626, -18.5179, 0.55 ) }
    dend_31 { pt3dadd( -1.21489, 20.9202, -19.4654, 0.28 ) }
    dend_31 { pt3dadd( -0.928067, 21.4814, -19.7447, 1.11 ) }
    dend_31 { pt3dadd( -0.254509, 22.9064, -20.4977, 0.55 ) }
    dend_31 { pt3dadd( 0.370272, 24.3226, -21.3087, 0.28 ) }
    dend_31 { pt3dadd( 0.796805, 25.3163, -21.9013, 0.83 ) }
    dend_31 { pt3dadd( 1.29597, 26.4483, -22.612, 0.28 ) }
    dend_31 { pt3dadd( 1.54443, 26.9619, -23.0088, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 1.92385, 27.569, -23.5491, 0.28 ) }
    dend_31 { pt3dadd( 2.2805, 28.0581, -24.0654, 0.83 ) }
    dend_31 { pt3dadd( 2.82529, 28.7673, -24.9006, 0.28 ) }
    dend_31 { pt3dadd( 3.66796, 29.8363, -26.1359, 0.55 ) }
    dend_31 { pt3dadd( 5.23735, 31.6711, -28.3535, 0.28 ) }
    dend_31 { pt3dadd( 6.03841, 32.5511, -29.4902, 0.55 ) }
    dend_31 { pt3dadd( 7.23118, 33.7618, -31.1918, 0.28 ) }
    dend_31 { pt3dadd( 8.42992, 34.9387, -32.9576, 0.28 ) }
    dend_31 { pt3dadd( 9.3273, 35.8243, -34.3242, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -23.2399, 12.884, 16.5405, 0.55 ) }
    dend_29 { pt3dadd( -24.2106, 15.8886, 15.1598, 0.55 ) }
    dend_29 { pt3dadd( -24.7695, 17.592, 14.5383, 0.55 ) }
    dend_29 { pt3dadd( -25.3602, 19.1516, 14.0586, 0.55 ) }
    dend_29 { pt3dadd( -26.9257, 22.8153, 13.0158, 0.55 ) }
    dend_29 { pt3dadd( -27.9243, 24.8956, 12.3486, 0.28 ) }
    dend_29 { pt3dadd( -29.0988, 27.26, 11.5861, 0.55 ) }
    dend_29 { pt3dadd( -29.6409, 28.2959, 11.2912, 0.28 ) }
    dend_29 { pt3dadd( -30.6347, 30.1354, 10.7569, 0.55 ) }
    dend_29 { pt3dadd( -31.7839, 32.2275, 10.1912, 0.55 ) }
    dend_29 { pt3dadd( -33.5036, 35.256, 9.53957, 0.28 ) }
    dend_29 { pt3dadd( -34.2941, 36.6982, 9.19378, 0.55 ) }
    dend_29 { pt3dadd( -35.1843, 38.3688, 8.8332, 0.28 ) }
    dend_29 { pt3dadd( -35.7844, 39.5538, 8.63845, 0.55 ) }
    dend_29 { pt3dadd( -36.2561, 40.5436, 8.50548, 0.55 ) }
    dend_29 { pt3dadd( -36.9415, 41.9829, 8.37604, 0.28 ) }
    dend_29 { pt3dadd( -37.8327, 43.8082, 8.21737, 0.55 ) }
    dend_29 { pt3dadd( -38.6268, 45.3312, 8.09506, 0.28 ) }
    dend_29 { pt3dadd( -39.3021, 46.465, 7.94959, 0.55 ) }
    dend_29 { pt3dadd( -41.0899, 49.1014, 7.48152, 0.28 ) }
    dend_29 { pt3dadd( -41.5552, 49.6818, 7.3545, 0.55 ) }
    dend_29 { pt3dadd( -43.0041, 51.2697, 6.95313, 0.28 ) }
    dend_29 { pt3dadd( -44.5332, 52.8186, 6.55366, 0.55 ) }
    dend_29 { pt3dadd( -47.0381, 55.2736, 5.95728, 0.28 ) }
    dend_29 { pt3dadd( -48.2952, 56.5085, 5.68161, 0.55 ) }
    dend_29 { pt3dadd( -49.7, 57.9333, 5.4214, 0.28 ) }
    dend_29 { pt3dadd( -50.7385, 59.0607, 5.20927, 0.55 ) }
    dend_29 { pt3dadd( -51.4425, 59.8861, 5.05916, 0.28 ) }
    dend_29 { pt3dadd( -51.5945, 60.101, 5.00206, 0.83 ) }
    dend_29 { pt3dadd( -52.7074, 62.1733, 4.51915, 0.28 ) }
    dend_29 { pt3dadd( -53.2026, 63.3186, 4.30036, 0.83 ) }
    dend_29 { pt3dadd( -53.7388, 64.7393, 4.09569, 0.28 ) }
    dend_29 { pt3dadd( -53.9425, 65.3094, 4.05663, 0.83 ) }
    dend_29 { pt3dadd( -54.887, 68.0435, 4.06701, 0.28 ) }
    dend_29 { pt3dadd( -55.3658, 69.5286, 4.27439, 0.55 ) }
    dend_29 { pt3dadd( -56.0547, 71.8488, 4.91472, 0.28 ) }
    dend_29 { pt3dadd( -56.4212, 73.2349, 5.42893, 0.55 ) }
    dend_29 { pt3dadd( -56.8033, 74.8855, 6.16371, 0.28 ) }
    dend_29 { pt3dadd( -57.059, 76.0725, 6.72675, 0.55 ) }
    dend_29 { pt3dadd( -57.4823, 78.3695, 7.88516, 0.28 ) }
    dend_29 { pt3dadd( -57.5591, 78.9142, 8.14421, 0.55 ) }
    dend_29 { pt3dadd( -57.689, 79.9169, 8.54758, 0.28 ) }
    dend_29 { pt3dadd( -57.7941, 80.7107, 8.84538, 0.55 ) }
    dend_29 { pt3dadd( -58.0407, 82.2333, 9.35058, 0.28 ) }
    dend_29 { pt3dadd( -58.364, 83.7647, 9.81219, 0.55 ) }
    dend_29 { pt3dadd( -58.9217, 85.7622, 10.3114, 0.28 ) }
    dend_29 { pt3dadd( -59.3191, 87.0165, 10.633, 0.55 ) }
    dend_29 { pt3dadd( -59.9598, 88.7686, 11.0851, 0.28 ) }
    dend_29 { pt3dadd( -60.1065, 89.1047, 11.171, 0.55 ) }
    dend_29 { pt3dadd( -60.7801, 90.5521, 11.5289, 0.28 ) }
    dend_29 { pt3dadd( -61.4013, 91.823, 11.7736, 0.55 ) }
    dend_29 { pt3dadd( -61.7676, 92.5949, 11.8707, 0.28 ) }
    dend_29 { pt3dadd( -62.1661, 93.4657, 11.9794, 0.55 ) }
    dend_29 { pt3dadd( -63.0007, 95.3728, 12.2086, 0.55 ) }
    dend_29 { pt3dadd( -63.6267, 96.8769, 12.3739, 0.83 ) }
    dend_29 { pt3dadd( -64.1901, 98.3482, 12.5042, 0.55 ) }
    dend_29 { pt3dadd( -64.8798, 100.378, 12.6905, 0.83 ) }
    dend_29 { pt3dadd( -70.0068, 108.518, 13.4522, 0.83 ) }
    dend_29 { pt3dadd( -76.818, 114.867, 15.7511, 0.83 ) }
    dend_29 { pt3dadd( -83.3072, 120.403, 20.103, 0.83 ) }
    dend_29 { pt3dadd( -90.2097, 125.917, 23.7872, 0.83 ) }
    dend_29 { pt3dadd( -97.8014, 131.016, 26.5647, 0.83 ) }
    dend_29 { pt3dadd( -104.589, 136.68, 30.2472, 0.83 ) }
    dend_29 { pt3dadd( -111.166, 142.671, 33.815, 0.83 ) }
    dend_29 { pt3dadd( -118.133, 147.925, 37.7343, 0.83 ) }
    dend_29 { pt3dadd( -123.616, 153.411, 43.3592, 0.83 ) }
    dend_29 { pt3dadd( -129.205, 157.275, 50.0635, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.2399, 12.884, 16.5405, 0.55 ) }
    dend_28 { pt3dadd( -24.8792, 12.8286, 16.6169, 0.55 ) }
    dend_28 { pt3dadd( -26.2977, 12.6446, 16.961, 0.55 ) }
    dend_28 { pt3dadd( -29.2137, 12.1931, 17.7613, 0.55 ) }
    dend_28 { pt3dadd( -31.5174, 11.8383, 18.436, 0.55 ) }
    dend_28 { pt3dadd( -34.3689, 11.3254, 19.2861, 0.55 ) }
    dend_28 { pt3dadd( -39.0848, 10.3914, 20.492, 0.55 ) }
    dend_28 { pt3dadd( -44.0785, 9.23503, 21.7499, 0.55 ) }
    dend_28 { pt3dadd( -46.9777, 8.43894, 22.5014, 0.55 ) }
    dend_28 { pt3dadd( -50.1326, 7.34269, 23.3012, 0.55 ) }
    dend_28 { pt3dadd( -52.3382, 6.41973, 23.8238, 0.55 ) }
    dend_28 { pt3dadd( -55.5518, 4.83725, 24.2941, 0.55 ) }
    dend_28 { pt3dadd( -56.4458, 4.31923, 24.2645, 0.83 ) }
    dend_28 { pt3dadd( -58.5242, 3.0223, 23.8595, 0.83 ) }
    dend_28 { pt3dadd( -61.0407, 1.27105, 23.1167, 0.55 ) }
    dend_28 { pt3dadd( -63.2606, -0.377357, 22.2058, 0.55 ) }
    dend_28 { pt3dadd( -65.5051, -1.94651, 21.1813, 0.83 ) }
    dend_28 { pt3dadd( -67.339, -3.21782, 20.337, 0.28 ) }
    dend_28 { pt3dadd( -69.0785, -4.38658, 19.4508, 0.55 ) }
    dend_28 { pt3dadd( -71.5861, -6.09817, 18.2885, 0.55 ) }
    dend_28 { pt3dadd( -72.7321, -6.94004, 17.84, 0.55 ) }
    dend_28 { pt3dadd( -74.1783, -7.99048, 17.3554, 0.55 ) }
    dend_28 { pt3dadd( -76.2563, -9.54573, 16.9187, 0.28 ) }
    dend_28 { pt3dadd( -77.5191, -10.5315, 16.7612, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( -80.6225, -13.1817, 16.4814, 0.28 ) }
    dend_28 { pt3dadd( -81.706, -14.211, 16.5481, 0.55 ) }
    dend_28 { pt3dadd( -90.4162, -18.4691, 18.44, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 3/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.847059, -6.27076, 5.667, 2.22 ) }
    dend_14 { pt3dadd( -3.18304, -9.09093, 2.89373, 2.22 ) }
    dend_14 { pt3dadd( -5.33247, -11.6859, 0.341945, 1.38 ) }
    dend_14 { pt3dadd( -8.77679, -15.8441, -3.74713, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.847059, -6.27076, 5.667, 1.66 ) }
    dend_1 { pt3dadd( 2.65212, -6.90891, 3.60295, 1.66 ) }
    dend_1 { pt3dadd( 7.66635, -7.82336, 0.64522, 1.66 ) }
    dend_1 { pt3dadd( 16.1097, -9.3632, -4.33527, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.68178, 38.618, 1.59687, 0.28 ) }
    axon_1 { pt3dadd( 13.4606, 53.1342, 1.59687, 0.28 ) }
    axon_1 { pt3dadd( 17.2394, 67.6504, 1.59687, 0.28 ) }
    // Section: dend_66, id: dend_66, parent: dend_58 (entry count 14/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 36.6209, 2.5521, -12.1006, 0.83 ) }
    dend_66 { pt3dadd( 35.3378, 3.90253, -11.8947, 0.83 ) }
    dend_66 { pt3dadd( 33.9649, 4.913, -11.6728, 0.83 ) }
    dend_66 { pt3dadd( 33.0629, 5.51335, -11.6743, 0.83 ) }
    dend_66 { pt3dadd( 31.6968, 6.55449, -11.7958, 0.83 ) }
    dend_66 { pt3dadd( 30.6216, 7.4144, -11.9221, 0.55 ) }
    dend_66 { pt3dadd( 29.8286, 8.05751, -12.0986, 0.83 ) }
    dend_66 { pt3dadd( 28.9832, 8.74021, -12.2789, 0.83 ) }
    dend_66 { pt3dadd( 27.5693, 9.99223, -12.6612, 0.55 ) }
    dend_66 { pt3dadd( 26.0047, 11.4487, -13.1601, 0.55 ) }
    dend_66 { pt3dadd( 25.1902, 12.3039, -13.4814, 0.55 ) }
    dend_66 { pt3dadd( 23.7647, 14.0476, -14.1545, 0.83 ) }
    dend_66 { pt3dadd( 22.8557, 15.3081, -14.6112, 1.11 ) }
    dend_66 { pt3dadd( 21.5915, 17.2285, -15.2557, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 28/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 36.6209, 2.5521, -12.1006, 0.55 ) }
    dend_59 { pt3dadd( 43.2487, 2.48367, -0.37319, 0.55 ) }
    dend_59 { pt3dadd( 44.0465, 2.4756, 0.879019, 0.55 ) }
    dend_59 { pt3dadd( 45.8939, 2.61245, 3.39308, 1.11 ) }
    dend_59 { pt3dadd( 48.5353, 2.80813, 6.98783, 0.55 ) }
    dend_59 { pt3dadd( 50.1338, 2.92656, 9.16334, 0.55 ) }
    dend_59 { pt3dadd( 50.5323, 2.95608, 9.70561, 0.83 ) }
    dend_59 { pt3dadd( 52.9779, 3.17322, 11.0309, 0.55 ) }
    dend_59 { pt3dadd( 55.3245, 3.53597, 12.6476, 1.11 ) }
    dend_59 { pt3dadd( 63.0127, 5.67792, 21.664, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -5.47261, -28.6425, 5.35879, 0.83 ) }
    dend_53 { pt3dadd( -4.74841, -30.011, 4.62384, 0.83 ) }
    dend_53 { pt3dadd( -4.04208, -31.3774, 3.79412, 0.83 ) }
    dend_53 { pt3dadd( -3.55735, -32.5127, 3.02547, 0.83 ) }
    dend_53 { pt3dadd( -2.77536, -34.8351, 1.51476, 0.28 ) }
    dend_53 { pt3dadd( -2.3068, -36.4033, 0.515204, 0.83 ) }
    dend_53 { pt3dadd( -1.54056, -38.8791, -1.0688, 0.28 ) }
    dend_53 { pt3dadd( -1.2674, -39.6806, -1.60981, 0.83 ) }
    dend_53 { pt3dadd( -0.453739, -41.85, -3.06192, 0.28 ) }
    dend_53 { pt3dadd( 0.177957, -43.6834, -4.21631, 0.55 ) }
    dend_53 { pt3dadd( 0.402228, -44.3467, -4.61724, 0.28 ) }
    dend_53 { pt3dadd( 1.06203, -46.1767, -5.56462, 0.55 ) }
    dend_53 { pt3dadd( 1.72857, -47.9048, -6.32802, 0.55 ) }
    dend_53 { pt3dadd( 2.58948, -50.048, -7.23383, 0.55 ) }
    dend_53 { pt3dadd( 3.61269, -52.3887, -8.17246, 0.28 ) }
    dend_53 { pt3dadd( 3.98849, -53.2639, -8.52457, 0.83 ) }
    dend_53 { pt3dadd( 4.51263, -54.6403, -9.00609, 0.28 ) }
    dend_53 { pt3dadd( 4.98988, -56.0366, -9.43162, 0.55 ) }
    dend_53 { pt3dadd( 5.45759, -57.5672, -9.9708, 0.55 ) }
    dend_53 { pt3dadd( 5.8848, -59.0102, -10.5187, 0.55 ) }
    dend_53 { pt3dadd( 6.44793, -60.6848, -11.2052, 0.83 ) }
    dend_53 { pt3dadd( 6.95679, -62.1507, -11.8301, 0.55 ) }
    dend_53 { pt3dadd( 8.11775, -65.2868, -13.229, 0.55 ) }
    dend_53 { pt3dadd( 9.30472, -68.3865, -14.6172, 2.22 ) }
    dend_53 { pt3dadd( 10.2321, -70.7185, -15.6735, 0.55 ) }
    dend_53 { pt3dadd( 11.0154, -72.5991, -16.5478, 0.55 ) }
    dend_53 { pt3dadd( 11.9355, -74.7294, -17.5484, 0.28 ) }
    dend_53 { pt3dadd( 12.6049, -76.2321, -18.3084, 0.55 ) }
    dend_53 { pt3dadd( 13.4303, -78.0065, -19.2028, 0.28 ) }
    dend_53 { pt3dadd( 13.9828, -79.1775, -19.7488, 0.83 ) }
    dend_53 { pt3dadd( 14.5026, -80.3744, -20.3249, 0.28 ) }
    dend_53 { pt3dadd( 15.1681, -82.1417, -21.1321, 0.55 ) }
    dend_53 { pt3dadd( 15.8811, -84.4496, -22.0596, 0.28 ) }
    dend_53 { pt3dadd( 16.2172, -85.7413, -22.517, 0.55 ) }
    dend_53 { pt3dadd( 16.4917, -87.0965, -22.983, 0.55 ) }
    dend_53 { pt3dadd( 16.7543, -88.8122, -23.5346, 0.28 ) }
    dend_53 { pt3dadd( 16.945, -90.169, -23.9381, 0.55 ) }
    dend_53 { pt3dadd( 17.3575, -93.2067, -24.7634, 0.28 ) }
    dend_53 { pt3dadd( 17.4944, -94.1973, -24.9949, 0.55 ) }
    dend_53 { pt3dadd( 17.8528, -96.698, -25.6685, 0.28 ) }
    dend_53 { pt3dadd( 18.0105, -97.5472, -25.9224, 0.55 ) }
    dend_53 { pt3dadd( 18.5015, -99.844, -26.7214, 0.28 ) }
    dend_53 { pt3dadd( 18.6807, -100.622, -27.0437, 0.55 ) }
    dend_53 { pt3dadd( 19.293, -103.081, -28.1952, 0.28 ) }
    dend_53 { pt3dadd( 19.6841, -104.477, -28.9259, 0.83 ) }
    dend_53 { pt3dadd( 20.2654, -106.528, -30.044, 0.28 ) }
    dend_53 { pt3dadd( 20.6874, -108.156, -30.9817, 0.55 ) }
    dend_53 { pt3dadd( 21.1895, -110.189, -32.2153, 0.28 ) }
    dend_53 { pt3dadd( 21.4675, -111.19, -32.802, 0.55 ) }
    dend_53 { pt3dadd( 22.449, -114.405, -34.5326, 0.28 ) }
    dend_53 { pt3dadd( 22.9796, -116.098, -35.3987, 0.55 ) }
    dend_53 { pt3dadd( 23.4153, -117.423, -36.0065, 0.55 ) }
    dend_53 { pt3dadd( 24.0303, -119.187, -36.7158, 0.55 ) }
    dend_53 { pt3dadd( 25.3277, -122.631, -37.9322, 0.28 ) }
    dend_53 { pt3dadd( 25.7196, -123.66, -38.2706, 0.55 ) }
    dend_53 { pt3dadd( 27.165, -127.233, -39.3114, 0.28 ) }
    dend_53 { pt3dadd( 27.9468, -128.933, -39.8704, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 95/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.47261, -28.6425, 5.35879, 0.55 ) }
    dend_52 { pt3dadd( -7.86238, -30.422, 7.46929, 0.55 ) }
    dend_52 { pt3dadd( -10.1402, -32.1027, 9.67301, 0.55 ) }
    dend_52 { pt3dadd( -12.5463, -33.7194, 12.0759, 0.55 ) }
    dend_52 { pt3dadd( -15.6276, -35.5392, 15.0415, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( -17.4857, -36.5137, 16.7794, 0.55 ) }
    dend_52 { pt3dadd( -18.297, -36.9175, 17.5469, 0.55 ) }
    dend_52 { pt3dadd( -19.7493, -37.6071, 18.9028, 0.83 ) }
    dend_52 { pt3dadd( -21.3826, -38.2607, 20.5168, 0.83 ) }
    dend_52 { pt3dadd( -23.5622, -39.1087, 22.6563, 0.55 ) }
    dend_52 { pt3dadd( -24.3575, -39.4859, 23.4828, 0.55 ) }
    dend_52 { pt3dadd( -26.2727, -40.537, 25.5842, 0.55 ) }
    dend_52 { pt3dadd( -28.4109, -41.9508, 27.9515, 0.83 ) }
    dend_52 { pt3dadd( -31.3401, -44.1957, 31.11, 0.28 ) }
    dend_52 { pt3dadd( -32.6571, -45.3946, 32.5921, 1.11 ) }
    dend_52 { pt3dadd( -34.5346, -47.411, 34.8593, 0.55 ) }
    dend_52 { pt3dadd( -35.5039, -48.5649, 36.0255, 0.55 ) }
    dend_52 { pt3dadd( -36.387, -49.6728, 37.0378, 0.83 ) }
    dend_52 { pt3dadd( -37.1712, -50.7363, 37.9361, 0.28 ) }
    dend_52 { pt3dadd( -37.5293, -51.2149, 38.2236, 0.55 ) }
    dend_52 { pt3dadd( -38.679, -52.7089, 39.0132, 0.28 ) }
    dend_52 { pt3dadd( -39.3295, -53.5064, 39.3268, 0.55 ) }
    dend_52 { pt3dadd( -40.7242, -55.0857, 39.9179, 0.28 ) }
    dend_52 { pt3dadd( -41.9032, -56.3252, 40.3846, 0.55 ) }
    dend_52 { pt3dadd( -43.4311, -57.8265, 41.0134, 0.28 ) }
    dend_52 { pt3dadd( -44.2145, -58.5025, 41.3408, 0.55 ) }
    dend_52 { pt3dadd( -45.9944, -59.8535, 42.071, 0.28 ) }
    dend_52 { pt3dadd( -48.4559, -61.58, 43.1241, 0.83 ) }
    dend_52 { pt3dadd( -51.4201, -63.4964, 44.4566, 0.55 ) }
    dend_52 { pt3dadd( -53.0323, -64.4593, 45.2305, 0.55 ) }
    dend_52 { pt3dadd( -55.1872, -65.5794, 46.3209, 0.55 ) }
    dend_52 { pt3dadd( -57.5084, -66.6378, 47.5491, 0.28 ) }
    dend_52 { pt3dadd( -58.2821, -66.9476, 47.9813, 0.55 ) }
    dend_52 { pt3dadd( -60.1703, -67.5848, 49.0474, 0.28 ) }
    dend_52 { pt3dadd( -60.7334, -67.7438, 49.3632, 0.83 ) }
    dend_52 { pt3dadd( -63.4433, -68.5004, 50.9468, 0.28 ) }
    dend_52 { pt3dadd( -65.2026, -68.9686, 52.1224, 0.83 ) }
    dend_52 { pt3dadd( -66.8828, -69.3218, 53.3899, 0.28 ) }
    dend_52 { pt3dadd( -67.8499, -69.4581, 54.142, 0.83 ) }
    dend_52 { pt3dadd( -69.4781, -69.5502, 55.4687, 0.28 ) }
    dend_52 { pt3dadd( -70.772, -69.4989, 56.5672, 0.55 ) }
    dend_52 { pt3dadd( -72.3333, -69.2186, 57.9775, 0.28 ) }
    dend_52 { pt3dadd( -72.978, -68.9456, 58.6193, 0.83 ) }
    dend_52 { pt3dadd( -74.0584, -68.2018, 59.8899, 0.28 ) }
    dend_52 { pt3dadd( -74.3782, -67.9356, 60.3097, 0.55 ) }
    dend_52 { pt3dadd( -74.9655, -67.4631, 61.0822, 0.28 ) }
    dend_52 { pt3dadd( -75.4863, -67.1078, 61.7672, 0.55 ) }
    dend_52 { pt3dadd( -77.6105, -66.6034, 64.3794, 0.28 ) }
    dend_52 { pt3dadd( -78.0347, -66.6127, 64.8833, 0.83 ) }
    dend_52 { pt3dadd( -78.7561, -66.7456, 65.6416, 0.83 ) }
    dend_52 { pt3dadd( -81.0283, -67.4278, 67.9432, 0.28 ) }
    dend_52 { pt3dadd( -82.3503, -67.9888, 69.1035, 0.83 ) }
    dend_52 { pt3dadd( -85.9245, -69.8546, 71.8762, 0.28 ) }
    dend_52 { pt3dadd( -86.7215, -70.305, 72.4333, 0.83 ) }
    dend_52 { pt3dadd( -88.4276, -71.3238, 73.6122, 0.28 ) }
    dend_52 { pt3dadd( -90.5294, -72.6485, 75.0307, 0.83 ) }
    dend_52 { pt3dadd( -93.6124, -74.819, 76.9758, 0.28 ) }
    dend_52 { pt3dadd( -94.5262, -75.4751, 77.4661, 0.83 ) }
    dend_52 { pt3dadd( -100.925, -78.4004, 85.5226, 0.83 ) }
    dend_52 { pt3dadd( -106.59, -79.5646, 94.4971, 0.83 ) }
    dend_52 { pt3dadd( -111.58, -81.8693, 103.662, 0.83 ) }
    dend_52 { pt3dadd( -117.651, -83.0394, 112.366, 0.83 ) }
    dend_52 { pt3dadd( -123.61, -85.7789, 120.811, 0.83 ) }
    dend_52 { pt3dadd( -127.885, -88.5452, 130.212, 0.83 ) }
    dend_52 { pt3dadd( -133.336, -90.494, 139.19, 0.83 ) }
    dend_52 { pt3dadd( -138.71, -90.5858, 148.411, 0.83 ) }
    dend_52 { pt3dadd( -145.064, -90.9729, 156.978, 0.83 ) }
    dend_52 { pt3dadd( -151.994, -89.8285, 165.014, 0.83 ) }
    dend_52 { pt3dadd( -159.534, -88.6832, 172.48, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -0.67183, -26.8853, 4.25316, 0.55 ) }
    dend_50 { pt3dadd( -1.52507, -29.8809, 5.50281, 0.55 ) }
    dend_50 { pt3dadd( -1.97492, -31.5445, 6.10299, 0.55 ) }
    dend_50 { pt3dadd( -2.54809, -33.695, 6.78228, 1.11 ) }
    dend_50 { pt3dadd( -3.07253, -35.6808, 7.38875, 0.83 ) }
    dend_50 { pt3dadd( -3.64461, -37.8067, 8.02382, 1.66 ) }
    dend_50 { pt3dadd( -4.15234, -39.8384, 8.70706, 0.83 ) }
    dend_50 { pt3dadd( -4.34281, -40.6996, 9.01766, 0.55 ) }
    dend_50 { pt3dadd( -4.70934, -42.2108, 9.59015, 1.11 ) }
    dend_50 { pt3dadd( -5.01581, -43.2869, 9.9952, 0.55 ) }
    dend_50 { pt3dadd( -5.49164, -44.8418, 10.569, 1.11 ) }
    dend_50 { pt3dadd( -6.38589, -47.6435, 11.6892, 0.55 ) }
    dend_50 { pt3dadd( -6.92155, -49.1449, 12.3538, 0.55 ) }
    dend_50 { pt3dadd( -7.20128, -49.8505, 12.6672, 0.83 ) }
    dend_50 { pt3dadd( -7.99167, -51.6277, 13.3721, 0.55 ) }
    dend_50 { pt3dadd( -8.48759, -52.6076, 13.6856, 0.83 ) }
    dend_50 { pt3dadd( -9.11528, -53.8389, 14.0517, 0.28 ) }
    dend_50 { pt3dadd( -9.56561, -54.7221, 14.2733, 1.11 ) }
    dend_50 { pt3dadd( -9.95897, -55.5707, 14.508, 1.11 ) }
    dend_50 { pt3dadd( -10.5782, -57.1483, 14.9435, 0.55 ) }
    dend_50 { pt3dadd( -10.9299, -58.2024, 15.2338, 0.55 ) }
    dend_50 { pt3dadd( -11.6796, -60.636, 15.9211, 0.55 ) }
    dend_50 { pt3dadd( -12.0786, -62.1801, 16.4113, 0.55 ) }
    dend_50 { pt3dadd( -12.3907, -63.6902, 16.9147, 0.55 ) }
    dend_50 { pt3dadd( -12.5771, -64.8295, 17.29, 0.55 ) }
    dend_50 { pt3dadd( -12.7134, -65.7741, 17.6087, 0.83 ) }
    dend_50 { pt3dadd( -12.8471, -66.6441, 17.8852, 0.83 ) }
    dend_50 { pt3dadd( -13.2138, -68.3429, 18.3506, 0.28 ) }
    dend_50 { pt3dadd( -13.3615, -68.8121, 18.4477, 0.55 ) }
    dend_50 { pt3dadd( -13.9353, -70.0995, 18.613, 0.28 ) }
    dend_50 { pt3dadd( -14.2742, -70.644, 18.5783, 0.55 ) }
    dend_50 { pt3dadd( -14.9309, -71.5513, 18.4194, 0.28 ) }
    dend_50 { pt3dadd( -15.4426, -72.1693, 18.3089, 0.83 ) }
    dend_50 { pt3dadd( -17.7081, -74.7709, 17.8405, 0.28 ) }
    dend_50 { pt3dadd( -18.5541, -75.7414, 17.6902, 0.83 ) }
    dend_50 { pt3dadd( -20.8205, -78.3266, 17.3657, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_50 { pt3dadd( -21.7532, -79.4242, 17.2693, 1.38 ) }
    dend_50 { pt3dadd( -23.167, -81.136, 17.1853, 0.55 ) }
    dend_50 { pt3dadd( -24.0072, -82.2125, 17.2266, 0.55 ) }
    dend_50 { pt3dadd( -25.0042, -83.6425, 17.5368, 0.28 ) }
    dend_50 { pt3dadd( -25.4664, -84.3033, 17.746, 0.83 ) }
    dend_50 { pt3dadd( -25.9627, -85.0038, 18.0784, 0.28 ) }
    dend_50 { pt3dadd( -26.0926, -85.176, 18.1508, 0.83 ) }
    dend_50 { pt3dadd( -26.9732, -86.2715, 18.5274, 0.28 ) }
    dend_50 { pt3dadd( -27.9003, -87.3711, 18.8833, 0.55 ) }
    dend_50 { pt3dadd( -28.6834, -88.2904, 19.0629, 0.28 ) }
    dend_50 { pt3dadd( -29.0069, -88.6787, 19.0739, 0.55 ) }
    dend_50 { pt3dadd( -30.0656, -90.0155, 18.9908, 0.28 ) }
    dend_50 { pt3dadd( -30.3497, -90.4281, 18.9468, 0.55 ) }
    dend_50 { pt3dadd( -30.9871, -91.4334, 18.6807, 0.55 ) }
    dend_50 { pt3dadd( -31.8122, -92.7623, 18.2687, 0.28 ) }
    dend_50 { pt3dadd( -32.3091, -93.5415, 18.024, 0.55 ) }
    dend_50 { pt3dadd( -32.913, -94.4363, 17.7522, 0.28 ) }
    dend_50 { pt3dadd( -33.6381, -95.5583, 17.456, 1.11 ) }
    dend_50 { pt3dadd( -35.2257, -97.7524, 16.866, 0.55 ) }
    dend_50 { pt3dadd( -35.8754, -98.6191, 16.7485, 0.83 ) }
    dend_50 { pt3dadd( -36.8175, -100.107, 16.8407, 0.28 ) }
    dend_50 { pt3dadd( -37.0518, -100.498, 16.8766, 0.83 ) }
    dend_50 { pt3dadd( -37.7749, -101.825, 17.0384, 0.28 ) }
    dend_50 { pt3dadd( -38.2338, -102.944, 17.2456, 0.55 ) }
    dend_50 { pt3dadd( -39.1215, -105.477, 17.6913, 0.55 ) }
    dend_50 { pt3dadd( -39.7174, -107.101, 17.8268, 0.55 ) }
    dend_50 { pt3dadd( -40.5507, -109.579, 17.9712, 0.28 ) }
    dend_50 { pt3dadd( -40.7718, -110.353, 18.0455, 0.28 ) }
    dend_50 { pt3dadd( -41.1584, -111.677, 18.1314, 0.83 ) }
    dend_50 { pt3dadd( -41.6885, -113.451, 18.1229, 0.28 ) }
    dend_50 { pt3dadd( -42.201, -114.886, 18.0242, 0.28 ) }
    dend_50 { pt3dadd( -42.6393, -115.966, 17.9945, 0.83 ) }
    dend_50 { pt3dadd( -43.7812, -118.7, 18.1773, 0.28 ) }
    dend_50 { pt3dadd( -44.4971, -120.297, 18.5004, 0.55 ) }
    dend_50 { pt3dadd( -45.4313, -122.328, 18.9981, 0.28 ) }
    dend_50 { pt3dadd( -46.0002, -123.607, 19.3774, 0.83 ) }
    dend_50 { pt3dadd( -46.8962, -125.421, 19.9583, 1.38 ) }
    dend_50 { pt3dadd( -47.465, -126.374, 20.2959, 0.55 ) }
    dend_50 { pt3dadd( -49.2824, -128.804, 21.2722, 1.66 ) }
    dend_50 { pt3dadd( -53.5815, -135.661, 22.2633, 1.66 ) }
    dend_50 { pt3dadd( -57.6726, -142.447, 24.1702, 1.66 ) }
    dend_50 { pt3dadd( -61.7401, -149.069, 26.6026, 1.66 ) }
    dend_50 { pt3dadd( -66.4202, -155.645, 27.6838, 1.66 ) }
    dend_50 { pt3dadd( -70.859, -162.479, 27.9372, 1.66 ) }
    dend_50 { pt3dadd( -75.4352, -168.903, 29.9357, 1.66 ) }
    dend_50 { pt3dadd( -80.2557, -174.68, 32.9693, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -0.67183, -26.8853, 4.25316, 0.83 ) }
    dend_45 { pt3dadd( 0.373018, -29.1041, 2.97901, 0.83 ) }
    dend_45 { pt3dadd( 1.65032, -31.8166, 1.42139, 0.83 ) }
    dend_45 { pt3dadd( 2.24667, -33.083, 0.694158, 0.83 ) }
    dend_45 { pt3dadd( 3.43047, -35.5969, -0.749458, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.3587, -16.9223, -5.18263, 0.83 ) }
    dend_40 { pt3dadd( -18.3406, -19.0682, -6.63631, 0.83 ) }
    dend_40 { pt3dadd( -18.9768, -20.1362, -7.17189, 0.83 ) }
    dend_40 { pt3dadd( -19.4649, -21.3093, -7.67118, 0.83 ) }
    dend_40 { pt3dadd( -20.2665, -23.2359, -8.4911, 1.94 ) }
    dend_40 { pt3dadd( -21.2273, -25.5448, -9.47379, 0.55 ) }
    dend_40 { pt3dadd( -22.3406, -28.2206, -10.6126, 0.55 ) }
    dend_40 { pt3dadd( -22.6782, -29.4561, -10.9996, 0.55 ) }
    dend_40 { pt3dadd( -23.184, -31.8737, -11.717, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 60/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -16.3587, -16.9223, -5.18263, 0.83 ) }
    dend_33 { pt3dadd( -16.9639, -17.9442, -5.35436, 0.83 ) }
    dend_33 { pt3dadd( -17.7154, -18.8799, -5.424, 0.55 ) }
    dend_33 { pt3dadd( -18.882, -20.1449, -5.4052, 0.55 ) }
    dend_33 { pt3dadd( -20.1647, -21.3724, -5.34174, 0.55 ) }
    dend_33 { pt3dadd( -21.4132, -22.4288, -5.22692, 0.55 ) }
    dend_33 { pt3dadd( -22.6886, -23.4178, -5.08681, 0.55 ) }
    dend_33 { pt3dadd( -25.0761, -24.877, -4.86447, 0.55 ) }
    dend_33 { pt3dadd( -26.0338, -25.3247, -4.7575, 0.28 ) }
    dend_33 { pt3dadd( -27.1853, -25.7353, -4.57813, 0.55 ) }
    dend_33 { pt3dadd( -28.2743, -25.9773, -4.37606, 0.55 ) }
    dend_33 { pt3dadd( -28.8976, -26.0619, -4.27622, 0.55 ) }
    dend_33 { pt3dadd( -29.9954, -26.1211, -4.14303, 0.55 ) }
    dend_33 { pt3dadd( -31.0026, -26.1585, -4.16942, 0.28 ) }
    dend_33 { pt3dadd( -31.3215, -26.1496, -4.1996, 0.28 ) }
    dend_33 { pt3dadd( -32.4238, -26.091, -4.36609, 0.83 ) }
    dend_33 { pt3dadd( -33.9642, -26.077, -4.83944, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 77/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.77679, -15.8441, -3.74713, 1.11 ) }
    dend_20 { pt3dadd( -11.9249, -13.3249, -2.07671, 1.11 ) }
    dend_20 { pt3dadd( -13.3048, -12.2207, -1.34454, 0.83 ) }
    dend_20 { pt3dadd( -15.73, -10.2799, -0.0576921, 1.38 ) }
    dend_20 { pt3dadd( -20.4575, -6.4968, 2.45078, 0.83 ) }
    dend_20 { pt3dadd( -22.0944, -5.18691, 3.31934, 0.83 ) }
    dend_20 { pt3dadd( -25.082, -2.79609, 4.90462, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.77679, -15.8441, -3.74713, 1.11 ) }
    dend_15 { pt3dadd( -9.06246, -16.9605, -3.84239, 1.11 ) }
    dend_15 { pt3dadd( -9.55878, -18.9616, -4.05727, 1.11 ) }
    dend_15 { pt3dadd( -10.1693, -21.3292, -4.32249, 1.11 ) }
    dend_15 { pt3dadd( -10.8254, -23.8734, -4.6075, 1.11 ) }
    dend_15 { pt3dadd( -11.2555, -25.541, -4.79431, 1.11 ) }
    dend_15 { pt3dadd( -11.731, -27.3851, -5.00089, 1.11 ) }
    dend_15 { pt3dadd( -11.9958, -28.4084, -5.1248, 1.11 ) }
    dend_15 { pt3dadd( -12.5504, -30.5952, -5.42796, 1.38 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.1097, -9.3632, -4.33527, 0.55 ) }
    dend_9 { pt3dadd( 17.4084, -9.95886, -2.63315, 0.55 ) }
    dend_9 { pt3dadd( 19.1233, -10.9881, -0.298718, 0.55 ) }
    dend_9 { pt3dadd( 20.6379, -11.9915, 1.58007, 0.83 ) }
    dend_9 { pt3dadd( 21.5115, -12.5698, 2.55499, 0.83 ) }
    dend_9 { pt3dadd( 22.9712, -13.5049, 4.10137, 0.83 ) }
    dend_9 { pt3dadd( 24.5087, -14.453, 5.77897, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( 25.4561, -15.0687, 6.96695, 0.55 ) }
    dend_9 { pt3dadd( 27.2366, -15.7167, 9.0314, 0.83 ) }
    dend_9 { pt3dadd( 27.6703, -15.5153, 10.0582, 0.83 ) }
    dend_9 { pt3dadd( 27.9427, -14.879, 11.3586, 0.28 ) }
    dend_9 { pt3dadd( 28.2285, -14.0703, 12.6731, 0.83 ) }
    dend_9 { pt3dadd( 28.5854, -13.2961, 13.8792, 0.55 ) }
    dend_9 { pt3dadd( 28.8383, -12.8775, 14.5653, 0.55 ) }
    dend_9 { pt3dadd( 29.7101, -11.5087, 16.7508, 0.55 ) }
    dend_9 { pt3dadd( 30.7199, -10.1094, 18.8226, 0.55 ) }
    dend_9 { pt3dadd( 31.2924, -9.45273, 19.6707, 0.55 ) }
    dend_9 { pt3dadd( 32.2863, -8.44643, 20.9311, 0.55 ) }
    dend_9 { pt3dadd( 33.1994, -7.53991, 22.0042, 0.55 ) }
    dend_9 { pt3dadd( 34.2829, -6.52998, 23.1499, 0.55 ) }
    dend_9 { pt3dadd( 35.2048, -5.75484, 23.9832, 0.55 ) }
    dend_9 { pt3dadd( 36.2551, -4.85169, 24.9114, 0.55 ) }
    dend_9 { pt3dadd( 38.0231, -3.21695, 26.5613, 0.55 ) }
    dend_9 { pt3dadd( 39.0112, -2.23763, 27.4983, 0.55 ) }
    dend_9 { pt3dadd( 39.6654, -1.58313, 28.1698, 0.55 ) }
    dend_9 { pt3dadd( 40.6713, -0.764337, 29.3421, 0.55 ) }
    dend_9 { pt3dadd( 45.3233, 2.10483, 35.4315, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 16.1097, -9.3632, -4.33527, 0.55 ) }
    dend_2 { pt3dadd( 16.7105, -10.4454, -4.12662, 0.55 ) }
    dend_2 { pt3dadd( 17.3654, -11.4961, -3.89771, 0.55 ) }
    dend_2 { pt3dadd( 18.1786, -12.8063, -3.53586, 0.55 ) }
    dend_2 { pt3dadd( 19.4878, -14.9813, -2.89709, 0.55 ) }
    dend_2 { pt3dadd( 20.2547, -16.2333, -2.52798, 0.55 ) }
    dend_2 { pt3dadd( 21.6571, -18.505, -1.77514, 0.55 ) }
    dend_2 { pt3dadd( 22.4419, -19.8042, -1.26617, 0.55 ) }
    dend_2 { pt3dadd( 23.4222, -21.4958, -0.482548, 0.55 ) }
    dend_2 { pt3dadd( 24.1566, -22.7618, 0.14307, 0.55 ) }
    dend_2 { pt3dadd( 24.8855, -24.0235, 0.820342, 0.28 ) }
    dend_2 { pt3dadd( 25.7981, -25.6401, 1.67662, 0.83 ) }
    dend_2 { pt3dadd( 26.6803, -27.3423, 2.66091, 0.83 ) }
    dend_2 { pt3dadd( 27.4565, -28.8901, 3.60551, 1.11 ) }
    dend_2 { pt3dadd( 28.2207, -30.3216, 4.47507, 0.83 ) }
    dend_2 { pt3dadd( 29.4586, -32.6474, 5.93489, 0.83 ) }
    dend_2 { pt3dadd( 30.3254, -34.3251, 6.9883, 0.83 ) }
    dend_2 { pt3dadd( 31.5172, -36.5839, 8.3324, 0.55 ) }
    dend_2 { pt3dadd( 32.1911, -37.8048, 9.06712, 0.55 ) }
    dend_2 { pt3dadd( 33.1641, -39.4411, 10.0962, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 40/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 63.0127, 5.67792, 21.664, 0.55 ) }
    dend_63 { pt3dadd( 70.5416, 6.30002, 31.1358, 0.55 ) }
    dend_63 { pt3dadd( 77.5821, 8.55423, 40.7543, 0.55 ) }
    dend_63 { pt3dadd( 85.2996, 9.78243, 50.0184, 0.55 ) }
    dend_63 { pt3dadd( 93.9954, 10.8592, 58.3889, 0.55 ) }
    dend_63 { pt3dadd( 101.648, 10.1896, 67.7513, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 46/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 63.0127, 5.67792, 21.664, 0.55 ) }
    dend_60 { pt3dadd( 66.5174, 6.68442, 26.2457, 0.55 ) }
    dend_60 { pt3dadd( 69.5649, 7.03995, 31.2297, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 27.9468, -128.933, -39.8704, 0.28 ) }
    dend_55 { pt3dadd( 29.2023, -131.346, -40.3347, 0.28 ) }
    dend_55 { pt3dadd( 30.0136, -132.935, -40.7123, 0.28 ) }
    dend_55 { pt3dadd( 30.9019, -134.631, -41.1082, 0.83 ) }
    dend_55 { pt3dadd( 31.7199, -136.203, -41.463, 0.28 ) }
    dend_55 { pt3dadd( 32.3571, -137.482, -41.7478, 0.55 ) }
    dend_55 { pt3dadd( 33.7116, -140.233, -42.3865, 0.28 ) }
    dend_55 { pt3dadd( 33.9198, -140.648, -42.4949, 0.55 ) }
    dend_55 { pt3dadd( 34.4556, -142.161, -43.0592, 0.28 ) }
    dend_55 { pt3dadd( 34.5591, -142.631, -43.2792, 0.55 ) }
    dend_55 { pt3dadd( 34.8932, -144.893, -44.3268, 0.28 ) }
    dend_55 { pt3dadd( 34.9431, -145.744, -44.7055, 0.28 ) }
    dend_55 { pt3dadd( 34.9862, -146.623, -45.0281, 0.55 ) }
    dend_55 { pt3dadd( 35.1544, -151.199, -46.4925, 0.28 ) }
    dend_55 { pt3dadd( 35.1925, -152.704, -46.928, 0.28 ) }
    dend_55 { pt3dadd( 35.1616, -155.081, -47.5956, 0.83 ) }
    dend_55 { pt3dadd( 34.9168, -159.33, -48.6558, 0.28 ) }
    dend_55 { pt3dadd( 34.6874, -162.419, -49.3617, 0.55 ) }
    dend_55 { pt3dadd( 34.5685, -163.95, -49.6626, 0.55 ) }
    dend_55 { pt3dadd( 34.5483, -164.524, -49.7395, 0.55 ) }
    dend_55 { pt3dadd( 34.2345, -167.854, -50.3336, 0.28 ) }
    dend_55 { pt3dadd( 34.0934, -168.546, -50.517, 0.55 ) }
    dend_55 { pt3dadd( 33.3861, -171.004, -51.4832, 0.28 ) }
    dend_55 { pt3dadd( 33.2712, -171.311, -51.6474, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 73/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 27.9468, -128.933, -39.8704, 0.28 ) }
    dend_54 { pt3dadd( 22.2823, -132.169, -46.6198, 0.28 ) }
    dend_54 { pt3dadd( 21.1117, -132.838, -48.0146, 0.28 ) }
    dend_54 { pt3dadd( 19.7191, -133.633, -49.6739, 0.55 ) }
    dend_54 { pt3dadd( 15.3624, -136.122, -54.865, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.43047, -35.5969, -0.749458, 0.83 ) }
    dend_47 { pt3dadd( 4.51701, -39.4308, -0.89481, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 3.43047, -35.5969, -0.749458, 0.83 ) }
    dend_46 { pt3dadd( 5.6941, -35.6067, -2.2096, 0.83 ) }
    dend_46 { pt3dadd( 7.38032, -35.5319, -3.24405, 0.83 ) }
    dend_46 { pt3dadd( 10.3477, -35.4206, -4.81722, 1.11 ) }
    dend_46 { pt3dadd( 14.3093, -35.2548, -7.39745, 0.83 ) }
    dend_46 { pt3dadd( 16.3926, -35.2513, -8.85387, 0.83 ) }
    dend_46 { pt3dadd( 18.4196, -35.2472, -10.3374, 0.83 ) }
    dend_46 { pt3dadd( 20.0261, -35.2928, -11.7212, 0.55 ) }
    dend_46 { pt3dadd( 21.7838, -35.4449, -13.3429, 0.83 ) }
    dend_46 { pt3dadd( 25.894, -35.8086, -17.1045, 0.55 ) }
    dend_46 { pt3dadd( 27.5004, -35.8228, -18.414, 0.55 ) }
    dend_46 { pt3dadd( 29.9976, -35.8175, -20.453, 0.55 ) }
    dend_46 { pt3dadd( 31.5122, -35.8452, -21.7068, 0.55 ) }
    dend_46 { pt3dadd( 33.2781, -35.913, -23.1522, 0.83 ) }
    dend_46 { pt3dadd( 35.3047, -35.9428, -24.7132, 0.83 ) }
    dend_46 { pt3dadd( 36.8525, -35.967, -25.6904, 0.55 ) }
    dend_46 { pt3dadd( 38.8182, -35.9571, -26.9426, 0.55 ) }
    dend_46 { pt3dadd( 40.8275, -36.0124, -28.1489, 0.55 ) }
    dend_46 { pt3dadd( 41.8601, -36.0291, -28.7357, 0.83 ) }
    dend_46 { pt3dadd( 43.3697, -36.0764, -29.7059, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_46 { pt3dadd( 44.5911, -36.1789, -30.6873, 0.83 ) }
    dend_46 { pt3dadd( 45.5097, -36.2595, -31.4885, 0.28 ) }
    dend_46 { pt3dadd( 46.583, -36.3437, -32.4873, 0.83 ) }
    dend_46 { pt3dadd( 47.8438, -36.4479, -33.8562, 0.28 ) }
    dend_46 { pt3dadd( 49.2102, -36.5516, -35.5056, 0.28 ) }
    dend_46 { pt3dadd( 50.9231, -36.6611, -37.6758, 1.11 ) }
    dend_46 { pt3dadd( 52.543, -36.794, -39.8337, 0.28 ) }
    dend_46 { pt3dadd( 53.2367, -36.8585, -40.878, 0.83 ) }
    dend_46 { pt3dadd( 55.9788, -37.0151, -45.041, 0.28 ) }
    dend_46 { pt3dadd( 56.3283, -37.0357, -45.6007, 0.83 ) }
    dend_46 { pt3dadd( 57.4201, -37.0809, -47.1661, 0.28 ) }
    dend_46 { pt3dadd( 59.0265, -37.2147, -49.3433, 0.55 ) }
    dend_46 { pt3dadd( 61.3854, -37.4996, -52.3745, 0.83 ) }
    dend_46 { pt3dadd( 63.6856, -37.8293, -54.9704, 0.28 ) }
    dend_46 { pt3dadd( 66.3792, -38.3151, -57.8599, 0.55 ) }
    dend_46 { pt3dadd( 68.5443, -38.7071, -60.1356, 0.28 ) }
    dend_46 { pt3dadd( 70.3355, -39.0857, -61.8726, 0.83 ) }
    dend_46 { pt3dadd( 71.4933, -39.3423, -62.9445, 0.28 ) }
    dend_46 { pt3dadd( 72.5933, -39.6143, -63.8812, 0.83 ) }
    dend_46 { pt3dadd( 75.9971, -40.538, -66.5699, 0.28 ) }
    dend_46 { pt3dadd( 77.1108, -40.809, -67.4147, 0.28 ) }
    dend_46 { pt3dadd( 78.6647, -41.1717, -68.7734, 0.83 ) }
    dend_46 { pt3dadd( 82.3879, -41.8181, -71.922, 0.28 ) }
    dend_46 { pt3dadd( 84.3477, -42.1446, -73.6677, 0.28 ) }
    dend_46 { pt3dadd( 86.2405, -42.5225, -75.3669, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -23.184, -31.8737, -11.717, 0.55 ) }
    dend_42 { pt3dadd( -25.2011, -31.9096, -12.9055, 0.55 ) }
    dend_42 { pt3dadd( -27.5863, -31.8325, -14.3323, 0.83 ) }
    dend_42 { pt3dadd( -30.0284, -31.6861, -15.7609, 0.28 ) }
    dend_42 { pt3dadd( -32.1181, -31.5818, -16.9412, 0.55 ) }
    dend_42 { pt3dadd( -34.1884, -31.5136, -18.1261, 0.28 ) }
    dend_42 { pt3dadd( -34.8722, -31.4956, -18.5171, 0.55 ) }
    dend_42 { pt3dadd( -35.9324, -31.5053, -19.1494, 0.55 ) }
    dend_42 { pt3dadd( -37.6503, -31.5518, -20.114, 0.55 ) }
    dend_42 { pt3dadd( -38.7163, -31.5866, -20.6312, 0.55 ) }
    dend_42 { pt3dadd( -41.208, -31.716, -21.7917, 0.55 ) }
    dend_42 { pt3dadd( -42.2221, -31.842, -22.2386, 0.55 ) }
    dend_42 { pt3dadd( -44.4855, -32.3036, -23.1589, 0.55 ) }
    dend_42 { pt3dadd( -47.8671, -33.1745, -24.4271, 1.11 ) }
    dend_42 { pt3dadd( -49.8013, -33.7625, -25.0844, 0.28 ) }
    dend_42 { pt3dadd( -50.516, -33.9852, -25.3156, 0.55 ) }
    dend_42 { pt3dadd( -51.923, -34.4097, -25.7294, 0.28 ) }
    dend_42 { pt3dadd( -53.9007, -34.9362, -26.3243, 0.83 ) }
    dend_42 { pt3dadd( -55.735, -35.2602, -26.8686, 0.55 ) }
    dend_42 { pt3dadd( -57.4407, -35.3445, -27.3612, 0.83 ) }
    dend_42 { pt3dadd( -59.4304, -35.0504, -28.0467, 0.55 ) }
    dend_42 { pt3dadd( -60.715, -34.6982, -28.9986, 0.28 ) }
    dend_42 { pt3dadd( -61.4861, -34.4238, -29.8147, 0.55 ) }
    dend_42 { pt3dadd( -62.1734, -34.2973, -31.0946, 0.28 ) }
    dend_42 { pt3dadd( -62.4553, -34.3334, -31.8067, 0.83 ) }
    dend_42 { pt3dadd( -62.9323, -34.4872, -33.1351, 0.83 ) }
    dend_42 { pt3dadd( -65.3355, -35.6953, -39.6816, 0.28 ) }
    dend_42 { pt3dadd( -65.6074, -36.0091, -41.0785, 0.55 ) }
    dend_42 { pt3dadd( -66.5605, -34.8035, -35.7784, 0.28 ) }
    dend_42 { pt3dadd( -67.3344, -34.5748, -34.5262, 0.55 ) }
    dend_42 { pt3dadd( -68.926, -34.3494, -32.6957, 0.28 ) }
    dend_42 { pt3dadd( -69.9248, -34.2266, -31.6935, 0.55 ) }
    dend_42 { pt3dadd( -82.8167, -32.5236, -19.6681, 0.55 ) }
    dend_42 { pt3dadd( -84.0443, -32.3299, -18.5565, 0.28 ) }
    dend_42 { pt3dadd( -84.9426, -32.1725, -17.7878, 0.55 ) }
    dend_42 { pt3dadd( -86.3364, -31.9616, -16.6463, 0.28 ) }
    dend_42 { pt3dadd( -88.4539, -31.7111, -14.979, 0.83 ) }
    dend_42 { pt3dadd( -90.7763, -31.4863, -13.4744, 0.28 ) }
    dend_42 { pt3dadd( -92.7503, -31.4957, -13.4265, 0.55 ) }
    dend_42 { pt3dadd( -95.8271, -31.4783, -13.2882, 0.55 ) }
    dend_42 { pt3dadd( -97.3147, -31.4228, -13.2196, 0.83 ) }
    dend_42 { pt3dadd( -98.4404, -31.3719, -13.1819, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -23.184, -31.8737, -11.717, 0.55 ) }
    dend_41 { pt3dadd( -23.0789, -33.3617, -12.0069, 0.55 ) }
    dend_41 { pt3dadd( -22.9859, -35.368, -12.416, 0.83 ) }
    dend_41 { pt3dadd( -22.9515, -37.8064, -12.8348, 0.55 ) }
    dend_41 { pt3dadd( -23.0409, -40.8493, -13.2559, 0.83 ) }
    dend_41 { pt3dadd( -23.3179, -45.0661, -13.6909, 0.55 ) }
    dend_41 { pt3dadd( -23.448, -46.3237, -13.7821, 0.28 ) }
    dend_41 { pt3dadd( -23.7028, -47.827, -13.8692, 0.28 ) }
    dend_41 { pt3dadd( -24.0917, -49.6172, -13.9345, 0.28 ) }
    dend_41 { pt3dadd( -24.7099, -52.0635, -13.9065, 0.83 ) }
    dend_41 { pt3dadd( -25.2336, -53.8907, -13.7913, 0.28 ) }
    dend_41 { pt3dadd( -26.063, -56.569, -13.4645, 2.22 ) }
    dend_41 { pt3dadd( -27.1064, -59.8364, -13.1219, 0.28 ) }
    dend_41 { pt3dadd( -27.5877, -61.3056, -12.9947, 0.83 ) }
    dend_41 { pt3dadd( -28.2268, -63.1988, -12.8835, 0.28 ) }
    dend_41 { pt3dadd( -28.6424, -64.4108, -12.8362, 0.28 ) }
    dend_41 { pt3dadd( -28.9762, -65.3053, -12.8246, 0.55 ) }
    dend_41 { pt3dadd( -29.7507, -67.2505, -12.9051, 0.28 ) }
    dend_41 { pt3dadd( -29.9853, -67.814, -12.9526, 0.55 ) }
    dend_41 { pt3dadd( -30.9037, -69.947, -13.2215, 0.28 ) }
    dend_41 { pt3dadd( -31.4786, -71.4111, -13.602, 0.55 ) }
    dend_41 { pt3dadd( -32.1049, -73.1815, -14.1765, 0.55 ) }
    dend_41 { pt3dadd( -32.9574, -75.8274, -15.1409, 0.28 ) }
    dend_41 { pt3dadd( -33.2082, -76.645, -15.463, 0.28 ) }
    dend_41 { pt3dadd( -33.7917, -78.6091, -16.2606, 0.83 ) }
    dend_41 { pt3dadd( -35.0581, -82.9212, -17.8828, 0.28 ) }
    dend_41 { pt3dadd( -35.4612, -84.317, -18.368, 0.83 ) }
    dend_41 { pt3dadd( -36.0398, -86.404, -19.0282, 0.28 ) }
    dend_41 { pt3dadd( -36.2789, -87.2103, -19.2644, 0.55 ) }
    dend_41 { pt3dadd( -37.2175, -90.1951, -20.0826, 0.28 ) }
    dend_41 { pt3dadd( -37.7977, -92.2581, -20.7705, 0.55 ) }
    dend_41 { pt3dadd( -38.7401, -95.0776, -21.5855, 0.28 ) }
    dend_41 { pt3dadd( -38.9327, -95.7064, -21.8394, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( -39.4134, -97.4705, -22.6975, 0.28 ) }
    dend_41 { pt3dadd( -39.6096, -98.3154, -23.124, 0.55 ) }
    dend_41 { pt3dadd( -40.4949, -103.069, -25.7038, 0.28 ) }
    dend_41 { pt3dadd( -40.9275, -105.808, -27.3105, 0.55 ) }
    dend_41 { pt3dadd( -41.3854, -108.898, -29.011, 0.28 ) }
    dend_41 { pt3dadd( -41.5136, -110.004, -29.6036, 0.55 ) }
    dend_41 { pt3dadd( -41.6889, -111.844, -30.3824, 0.28 ) }
    dend_41 { pt3dadd( -41.7673, -112.505, -30.5698, 0.55 ) }
    dend_41 { pt3dadd( -42.0299, -113.993, -30.681, 0.28 ) }
    dend_41 { pt3dadd( -42.1248, -114.663, -30.729, 0.55 ) }
    dend_41 { pt3dadd( -42.5744, -116.999, -30.6377, 0.28 ) }
    dend_41 { pt3dadd( -43.0517, -118.861, -30.5197, 0.55 ) }
    dend_41 { pt3dadd( -43.6405, -120.635, -30.3749, 0.28 ) }
    dend_41 { pt3dadd( -43.9659, -121.515, -30.2416, 0.55 ) }
    dend_41 { pt3dadd( -44.3538, -122.556, -30.0712, 0.28 ) }
    dend_41 { pt3dadd( -44.5559, -123.123, -29.9824, 0.55 ) }
    dend_41 { pt3dadd( -45.361, -125.254, -29.6595, 0.28 ) }
    dend_41 { pt3dadd( -46.0899, -127.365, -29.5775, 0.55 ) }
    dend_41 { pt3dadd( -46.789, -129.764, -29.5899, 0.28 ) }
    dend_41 { pt3dadd( -47.2344, -131.335, -29.6347, 0.55 ) }
    dend_41 { pt3dadd( -47.6494, -132.804, -29.8122, 0.55 ) }
    dend_41 { pt3dadd( -47.9375, -133.838, -29.9902, 0.55 ) }
    dend_41 { pt3dadd( -48.966, -137.487, -30.9212, 0.28 ) }
    dend_41 { pt3dadd( -50.2186, -141.401, -32.0701, 0.28 ) }
    dend_41 { pt3dadd( -51.0335, -143.639, -32.6939, 0.83 ) }
    dend_41 { pt3dadd( -52.9594, -148.416, -33.895, 0.28 ) }
    dend_41 { pt3dadd( -53.5054, -149.653, -34.1965, 0.55 ) }
    dend_41 { pt3dadd( -54.8257, -152.439, -34.8372, 0.28 ) }
    dend_41 { pt3dadd( -55.8862, -154.432, -35.2352, 1.11 ) }
    dend_41 { pt3dadd( -57.4655, -157.188, -35.6781, 0.28 ) }
    dend_41 { pt3dadd( -57.7966, -157.773, -35.6645, 0.55 ) }
    dend_41 { pt3dadd( -58.5455, -159.093, -35.314, 0.28 ) }
    dend_41 { pt3dadd( -59.0399, -160.017, -35.0079, 0.55 ) }
    dend_41 { pt3dadd( -59.8544, -161.597, -34.384, 0.28 ) }
    dend_41 { pt3dadd( -60.3821, -162.658, -34.016, 0.55 ) }
    dend_41 { pt3dadd( -61.912, -165.754, -33.0853, 0.28 ) }
    dend_41 { pt3dadd( -62.2812, -166.613, -32.8651, 0.55 ) }
    dend_41 { pt3dadd( -62.8077, -168.074, -32.5289, 0.28 ) }
    dend_41 { pt3dadd( -63.1401, -169.292, -32.2616, 0.55 ) }
    dend_41 { pt3dadd( -63.9184, -173.05, -31.5191, 0.28 ) }
    dend_41 { pt3dadd( -63.9759, -173.676, -31.4571, 0.83 ) }
    dend_41 { pt3dadd( -64.1134, -177.464, -31.3377, 0.28 ) }
    dend_41 { pt3dadd( -64.119, -178.774, -31.3208, 0.55 ) }
    dend_41 { pt3dadd( -64.0895, -181.281, -31.3146, 0.28 ) }
    dend_41 { pt3dadd( -64.051, -182.841, -31.3585, 0.55 ) }
    dend_41 { pt3dadd( -63.9158, -189.41, -31.7762, 0.28 ) }
    dend_41 { pt3dadd( -63.9314, -191.619, -32.0376, 0.83 ) }
    dend_41 { pt3dadd( -64.0544, -194.586, -32.5506, 0.28 ) }
    dend_41 { pt3dadd( -64.1214, -195.437, -32.7444, 0.55 ) }
    dend_41 { pt3dadd( -64.3462, -197.554, -33.3944, 0.28 ) }
    dend_41 { pt3dadd( -64.4842, -198.599, -33.7453, 0.55 ) }
    dend_41 { pt3dadd( -65.0677, -201.899, -34.9331, 0.28 ) }
    dend_41 { pt3dadd( -65.1031, -202.172, -35.071, 0.55 ) }
    dend_41 { pt3dadd( -65.27, -203.868, -35.9386, 0.28 ) }
    dend_41 { pt3dadd( -65.3874, -205.41, -36.6802, 0.83 ) }
    dend_41 { pt3dadd( -65.5525, -207.741, -37.5723, 0.28 ) }
    dend_41 { pt3dadd( -65.5944, -208.4, -37.7397, 0.55 ) }
    dend_41 { pt3dadd( -65.9892, -214.296, -38.6635, 0.28 ) }
    dend_41 { pt3dadd( -66.1935, -217.616, -39.1144, 0.28 ) }
    dend_41 { pt3dadd( -66.2515, -218.734, -39.1976, 0.55 ) }
    dend_41 { pt3dadd( -66.4478, -221.642, -39.0104, 0.28 ) }
    dend_41 { pt3dadd( -66.5199, -222.506, -38.7393, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -33.9642, -26.077, -4.83944, 0.55 ) }
    dend_37 { pt3dadd( -34.7569, -26.3821, -6.39452, 0.55 ) }
    dend_37 { pt3dadd( -35.1742, -26.5804, -7.1999, 0.55 ) }
    dend_37 { pt3dadd( -35.9638, -26.9685, -8.56153, 0.55 ) }
    dend_37 { pt3dadd( -37.272, -27.4966, -10.5706, 0.55 ) }
    dend_37 { pt3dadd( -39.0578, -28.0778, -13.1481, 0.55 ) }
    dend_37 { pt3dadd( -40.9187, -28.5328, -15.6965, 0.28 ) }
    dend_37 { pt3dadd( -41.7737, -28.6952, -16.9013, 0.28 ) }
    dend_37 { pt3dadd( -42.8835, -28.8187, -18.2593, 0.55 ) }
    dend_37 { pt3dadd( -44.2958, -28.8423, -19.6178, 0.28 ) }
    dend_37 { pt3dadd( -44.9193, -28.8936, -20.2996, 0.55 ) }
    dend_37 { pt3dadd( -45.6066, -29.0047, -21.139, 0.28 ) }
    dend_37 { pt3dadd( -46.2807, -29.1765, -22.0917, 0.83 ) }
    dend_37 { pt3dadd( -47.5154, -29.6186, -24.1884, 0.28 ) }
    dend_37 { pt3dadd( -48.025, -29.8927, -25.2216, 0.55 ) }
    dend_37 { pt3dadd( -50.8566, -32.1375, -31.8333, 0.55 ) }
    dend_37 { pt3dadd( -51.1074, -32.3888, -32.4817, 0.55 ) }
    dend_37 { pt3dadd( -51.485, -32.8793, -33.6432, 0.55 ) }
    dend_37 { pt3dadd( -51.7307, -33.3205, -34.6771, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -33.9642, -26.077, -4.83944, 0.83 ) }
    dend_34 { pt3dadd( -34.7901, -25.4835, -5.44931, 0.83 ) }
    dend_34 { pt3dadd( -35.8673, -24.7095, -6.24467, 1.11 ) }
    dend_34 { pt3dadd( -37.153, -23.7856, -7.19402, 1.11 ) }
    dend_34 { pt3dadd( -38.787, -22.6115, -8.40052, 0.28 ) }
    dend_34 { pt3dadd( -40.2324, -21.5729, -9.46778, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -25.082, -2.79609, 4.90462, 0.83 ) }
    dend_24 { pt3dadd( -24.4449, -0.32495, 5.22205, 0.83 ) }
    dend_24 { pt3dadd( -24.0163, 1.88499, 5.44488, 0.83 ) }
    dend_24 { pt3dadd( -23.5909, 6.24837, 5.88127, 0.83 ) }
    dend_24 { pt3dadd( -23.448, 9.99803, 6.44295, 0.83 ) }
    dend_24 { pt3dadd( -23.5116, 13.5507, 7.07621, 0.83 ) }
    dend_24 { pt3dadd( -23.6584, 15.9918, 7.52937, 0.83 ) }
    dend_24 { pt3dadd( -24.0891, 18.181, 8.00001, 0.83 ) }
    dend_24 { pt3dadd( -25.1901, 21.4347, 8.79968, 0.83 ) }
    dend_24 { pt3dadd( -26.569, 24.2004, 9.52495, 0.83 ) }
    dend_24 { pt3dadd( -27.3272, 25.4876, 9.82911, 0.83 ) }
    dend_24 { pt3dadd( -28.7376, 27.7983, 10.4301, 0.83 ) }
    dend_24 { pt3dadd( -30.2652, 30.4936, 11.1184, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_24 { pt3dadd( -30.9833, 31.8212, 11.4199, 0.83 ) }
    dend_24 { pt3dadd( -32.0471, 33.9358, 11.7756, 0.83 ) }
    dend_24 { pt3dadd( -32.6781, 35.243, 11.9012, 0.28 ) }
    dend_24 { pt3dadd( -33.5891, 37.4143, 12.121, 0.55 ) }
    dend_24 { pt3dadd( -34.2965, 39.3314, 12.3416, 0.28 ) }
    dend_24 { pt3dadd( -34.8352, 41.9273, 12.5579, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 6/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -25.082, -2.79609, 4.90462, 0.83 ) }
    dend_21 { pt3dadd( -26.5455, -2.44406, 4.15311, 0.83 ) }
    dend_21 { pt3dadd( -28.3562, -2.08171, 3.38927, 0.83 ) }
    dend_21 { pt3dadd( -29.6889, -1.96474, 2.72192, 0.83 ) }
    dend_21 { pt3dadd( -32.5178, -1.96615, 1.23896, 0.83 ) }
    dend_21 { pt3dadd( -35.3049, -2.0398, -0.224727, 0.83 ) }
    dend_21 { pt3dadd( -36.499, -2.07136, -0.851857, 0.83 ) }
    dend_21 { pt3dadd( -38.4577, -2.09661, -2.00154, 0.83 ) }
    dend_21 { pt3dadd( -41.5849, -2.08593, -3.97408, 0.55 ) }
    dend_21 { pt3dadd( -42.5113, -2.20428, -4.58827, 0.55 ) }
    dend_21 { pt3dadd( -43.5851, -2.64415, -5.25583, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.5504, -30.5952, -5.42796, 0.83 ) }
    dend_17 { pt3dadd( -13.2962, -34.0384, -5.42625, 0.83 ) }
    dend_17 { pt3dadd( -14.1253, -37.7328, -5.38285, 1.11 ) }
    dend_17 { pt3dadd( -14.908, -40.6185, -5.31572, 0.83 ) }
    dend_17 { pt3dadd( -15.4503, -42.6728, -5.28304, 0.55 ) }
    dend_17 { pt3dadd( -15.718, -43.7612, -5.27938, 0.83 ) }
    dend_17 { pt3dadd( -16.8233, -47.9676, -5.27004, 0.83 ) }
    dend_17 { pt3dadd( -17.4267, -50.2498, -5.2214, 0.83 ) }
    dend_17 { pt3dadd( -18.5687, -54.3521, -5.10931, 0.83 ) }
    dend_17 { pt3dadd( -19.3339, -56.8925, -4.99762, 0.55 ) }
    dend_17 { pt3dadd( -20.4248, -60.2845, -4.86458, 0.55 ) }
    dend_17 { pt3dadd( -21.5838, -63.7847, -4.72173, 0.55 ) }
    dend_17 { pt3dadd( -23.0907, -68.0223, -4.54603, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -12.5504, -30.5952, -5.42796, 0.83 ) }
    dend_16 { pt3dadd( -11.3523, -34.0944, -6.06929, 0.83 ) }
    dend_16 { pt3dadd( -10.7832, -36.487, -6.72999, 0.83 ) }
    dend_16 { pt3dadd( -10.3667, -39.0863, -7.50542, 0.55 ) }
    dend_16 { pt3dadd( -10.134, -41.2716, -8.18403, 0.83 ) }
    dend_16 { pt3dadd( -10.0516, -44.1338, -9.08796, 0.83 ) }
    dend_16 { pt3dadd( -10.1027, -46.671, -9.84739, 0.83 ) }
    dend_16 { pt3dadd( -10.4315, -49.9439, -11.0046, 0.55 ) }
    dend_16 { pt3dadd( -10.7585, -52.3153, -11.769, 0.55 ) }
    dend_16 { pt3dadd( -10.8922, -52.983, -12.0276, 0.83 ) }
    dend_16 { pt3dadd( -11.484, -54.8553, -12.8018, 0.55 ) }
    dend_16 { pt3dadd( -11.9485, -55.996, -13.318, 0.55 ) }
    dend_16 { pt3dadd( -12.7669, -57.9795, -14.266, 1.11 ) }
    dend_16 { pt3dadd( -13.4549, -59.741, -15.1623, 1.11 ) }
    dend_16 { pt3dadd( -14.737, -62.9878, -17.0106, 0.55 ) }
    dend_16 { pt3dadd( -15.3893, -64.8963, -18.1581, 1.11 ) }
    dend_16 { pt3dadd( -16.1959, -67.6019, -19.839, 0.55 ) }
    dend_16 { pt3dadd( -16.3215, -67.9789, -20.0732, 0.83 ) }
    dend_16 { pt3dadd( -17.4283, -71.0682, -21.9098, 0.28 ) }
    dend_16 { pt3dadd( -17.5524, -71.4522, -22.1336, 0.55 ) }
    dend_16 { pt3dadd( -17.9979, -73.357, -23.0582, 0.28 ) }
    dend_16 { pt3dadd( -18.1992, -74.4312, -23.4947, 0.83 ) }
    dend_16 { pt3dadd( -18.5406, -76.4673, -24.1233, 0.55 ) }
    dend_16 { pt3dadd( -18.8876, -78.1667, -24.5261, 0.83 ) }
    dend_16 { pt3dadd( -19.4017, -80.3862, -24.907, 0.28 ) }
    dend_16 { pt3dadd( -19.876, -82.2218, -25.2238, 0.83 ) }
    dend_16 { pt3dadd( -20.6387, -85.2477, -25.5977, 0.28 ) }
    dend_16 { pt3dadd( -21.189, -87.9632, -25.8771, 0.83 ) }
    dend_16 { pt3dadd( -21.4649, -89.8136, -25.9651, 0.28 ) }
    dend_16 { pt3dadd( -21.619, -91.0755, -25.9588, 0.28 ) }
    dend_16 { pt3dadd( -21.7852, -93.0008, -25.9327, 0.83 ) }
    dend_16 { pt3dadd( -21.9454, -96.3152, -25.9849, 0.28 ) }
    dend_16 { pt3dadd( -21.9289, -99.057, -26.0927, 0.55 ) }
    dend_16 { pt3dadd( -21.8336, -101.407, -26.0919, 0.28 ) }
    dend_16 { pt3dadd( -21.6518, -104.261, -26.0406, 0.28 ) }
    dend_16 { pt3dadd( -21.5378, -106.265, -25.9861, 0.55 ) }
    dend_16 { pt3dadd( -21.483, -107.71, -25.9459, 0.28 ) }
    dend_16 { pt3dadd( -21.4972, -109.199, -25.922, 0.55 ) }
    dend_16 { pt3dadd( -21.5666, -111.68, -25.8211, 0.28 ) }
    dend_16 { pt3dadd( -21.6809, -113.486, -25.7403, 1.38 ) }
    dend_16 { pt3dadd( -22.0764, -117.344, -25.8415, 0.28 ) }
    dend_16 { pt3dadd( -22.2344, -118.533, -25.9435, 0.55 ) }
    dend_16 { pt3dadd( -22.5668, -120.718, -26.2507, 0.28 ) }
    dend_16 { pt3dadd( -22.9363, -122.751, -26.7021, 0.28 ) }
    dend_16 { pt3dadd( -23.457, -125.263, -27.3972, 1.11 ) }
    dend_16 { pt3dadd( -24.5609, -130.328, -28.6585, 0.28 ) }
    dend_16 { pt3dadd( -25.2987, -133.6, -29.4209, 0.28 ) }
    dend_16 { pt3dadd( -25.5907, -134.913, -29.6153, 0.83 ) }
    dend_16 { pt3dadd( -26.5059, -138.938, -30.2399, 0.28 ) }
    dend_16 { pt3dadd( -26.8778, -140.58, -30.4536, 0.55 ) }
    dend_16 { pt3dadd( -27.7007, -144.722, -30.7789, 0.28 ) }
    dend_16 { pt3dadd( -27.8279, -145.389, -30.7772, 0.83 ) }
    dend_16 { pt3dadd( -28.7677, -149.993, -30.8546, 0.28 ) }
    dend_16 { pt3dadd( -29.7418, -155.04, -31.0145, 0.55 ) }
    dend_16 { pt3dadd( -30.0125, -156.498, -30.8968, 0.28 ) }
    dend_16 { pt3dadd( -30.1242, -157.221, -30.819, 0.55 ) }
    dend_16 { pt3dadd( -30.3457, -158.835, -30.6008, 0.55 ) }
    dend_16 { pt3dadd( -30.5579, -160.653, -30.2705, 0.55 ) }
    dend_16 { pt3dadd( -30.7724, -163.241, -29.6679, 0.55 ) }
    dend_16 { pt3dadd( -31.1521, -168.305, -28.1013, 0.28 ) }
    dend_16 { pt3dadd( -31.3012, -170.901, -27.3224, 0.28 ) }
    dend_16 { pt3dadd( -31.3309, -171.592, -27.1129, 0.83 ) }
    dend_16 { pt3dadd( -31.3261, -174.13, -26.336, 0.28 ) }
    dend_16 { pt3dadd( -31.2653, -175.267, -26.0104, 0.55 ) }
    dend_16 { pt3dadd( -31.1245, -178.272, -25.4168, 0.28 ) }
    dend_16 { pt3dadd( -31.1078, -178.593, -25.4258, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 45.3233, 2.10483, 35.4315, 0.55 ) }
    dend_13 { pt3dadd( 51.9625, 5.2569, 42.2849, 0.55 ) }
    dend_13 { pt3dadd( 57.5537, 8.70818, 49.888, 0.55 ) }
    dend_13 { pt3dadd( 62.8635, 11.0218, 58.0717, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( 66.5844, 12.3877, 67.2612, 0.55 ) }
    dend_13 { pt3dadd( 71.8118, 12.6063, 75.7857, 0.55 ) }
    dend_13 { pt3dadd( 77.5755, 13.9885, 83.858, 0.55 ) }
    dend_13 { pt3dadd( 82.738, 16.6689, 92.0306, 0.55 ) }
    dend_13 { pt3dadd( 88.1033, 19.9049, 99.879, 0.55 ) }
    dend_13 { pt3dadd( 94.6183, 22.8859, 106.92, 0.55 ) }
    dend_13 { pt3dadd( 101.746, 26.4186, 113.079, 0.55 ) }
    dend_13 { pt3dadd( 107.454, 29.7844, 120.632, 0.55 ) }
    dend_13 { pt3dadd( 113.071, 34.2837, 127.682, 0.55 ) }
    dend_13 { pt3dadd( 117.347, 39.6829, 135.054, 0.55 ) }
    dend_13 { pt3dadd( 121.272, 44.5159, 142.969, 0.55 ) }
    dend_13 { pt3dadd( 123.98, 49.1029, 151.498, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 12/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 45.3233, 2.10483, 35.4315, 0.55 ) }
    dend_10 { pt3dadd( 49.2758, 3.53549, 41.9558, 0.55 ) }
    dend_10 { pt3dadd( 52.3536, 5.53782, 48.8005, 0.55 ) }
    dend_10 { pt3dadd( 55.5437, 8.62412, 55.2015, 0.55 ) }
    dend_10 { pt3dadd( 59.5503, 12.0657, 60.9439, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 33.1641, -39.4411, 10.0962, 0.55 ) }
    dend_6 { pt3dadd( 34.164, -40.5334, 10.0343, 0.55 ) }
    dend_6 { pt3dadd( 34.684, -41.1076, 9.9857, 0.55 ) }
    dend_6 { pt3dadd( 36.0137, -42.6167, 9.8489, 0.55 ) }
    dend_6 { pt3dadd( 38.1805, -44.9851, 9.61373, 0.55 ) }
    dend_6 { pt3dadd( 39.2337, -46.1021, 9.50826, 0.55 ) }
    dend_6 { pt3dadd( 40.6238, -47.6243, 9.37955, 0.28 ) }
    dend_6 { pt3dadd( 41.337, -48.4437, 9.32365, 0.83 ) }
    dend_6 { pt3dadd( 42.1307, -49.3304, 9.29095, 0.83 ) }
    dend_6 { pt3dadd( 43.5897, -50.9175, 9.22958, 0.55 ) }
    dend_6 { pt3dadd( 44.8504, -52.3047, 9.18744, 0.55 ) }
    dend_6 { pt3dadd( 46.0697, -53.715, 9.19182, 0.55 ) }
    dend_6 { pt3dadd( 46.8628, -54.6531, 9.26376, 0.28 ) }
    dend_6 { pt3dadd( 47.4829, -55.3593, 9.32788, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 33.1641, -39.4411, 10.0962, 0.55 ) }
    dend_3 { pt3dadd( 33.4835, -41.2775, 10.2429, 0.55 ) }
    dend_3 { pt3dadd( 33.8291, -42.9235, 10.387, 0.55 ) }
    dend_3 { pt3dadd( 34.1584, -44.6107, 10.9988, 0.55 ) }
    dend_3 { pt3dadd( 34.4242, -45.9585, 11.6496, 0.55 ) }
    dend_3 { pt3dadd( 34.6836, -47.3965, 12.4627, 0.28 ) }
    dend_3 { pt3dadd( 34.8505, -48.4286, 13.0789, 0.55 ) }
    dend_3 { pt3dadd( 34.9733, -49.1058, 13.5748, 0.55 ) }
    dend_3 { pt3dadd( 35.6413, -53.2055, 16.8745, 0.28 ) }
    dend_3 { pt3dadd( 35.6671, -53.4689, 17.0862, 0.55 ) }
    dend_3 { pt3dadd( 35.716, -54.5455, 17.8735, 0.28 ) }
    dend_3 { pt3dadd( 35.7633, -55.1711, 18.2719, 0.55 ) }
    dend_3 { pt3dadd( 35.8423, -56.6221, 19.1367, 0.28 ) }
    dend_3 { pt3dadd( 35.8848, -57.9045, 19.7426, 0.28 ) }
    dend_3 { pt3dadd( 35.9674, -59.4894, 20.0561, 0.55 ) }
    dend_3 { pt3dadd( 36.054, -61.1499, 20.3373, 0.55 ) }
    dend_3 { pt3dadd( 36.1781, -62.8212, 20.5212, 0.55 ) }
    dend_3 { pt3dadd( 37.6731, -70.325, 24.4303, 0.55 ) }
    dend_3 { pt3dadd( 39.6747, -77.9954, 27.7678, 0.55 ) }
    dend_3 { pt3dadd( 42.7596, -85.6842, 30.0998, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 51/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 101.648, 10.1896, 67.7513, 0.55 ) }
    dend_65 { pt3dadd( 106.351, 9.24563, 73.5257, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 53/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 101.648, 10.1896, 67.7513, 0.55 ) }
    dend_64 { pt3dadd( 108.046, 15.6681, 72.3983, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 55/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 69.5649, 7.03995, 31.2297, 0.55 ) }
    dend_62 { pt3dadd( 76.5796, 6.61978, 40.8311, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 69.5649, 7.03995, 31.2297, 0.55 ) }
    dend_61 { pt3dadd( 77.1506, 7.14854, 42.1054, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 4.51701, -39.4308, -0.89481, 0.83 ) }
    dend_49 { pt3dadd( 6.49376, -41.2572, -1.26591, 0.83 ) }
    dend_49 { pt3dadd( 8.9142, -43.5113, -1.61139, 0.83 ) }
    dend_49 { pt3dadd( 10.0642, -44.6295, -1.80597, 0.28 ) }
    dend_49 { pt3dadd( 11.6637, -46.3696, -2.1114, 0.55 ) }
    dend_49 { pt3dadd( 12.6746, -47.532, -2.31397, 0.83 ) }
    dend_49 { pt3dadd( 13.8359, -48.9072, -2.57548, 0.28 ) }
    dend_49 { pt3dadd( 14.4455, -49.6822, -2.69166, 0.55 ) }
    dend_49 { pt3dadd( 15.8694, -51.5464, -2.88026, 0.28 ) }
    dend_49 { pt3dadd( 16.9972, -53.1395, -3.0416, 1.11 ) }
    dend_49 { pt3dadd( 17.883, -54.4947, -3.22358, 1.11 ) }
    dend_49 { pt3dadd( 19.1108, -56.39, -3.5319, 0.28 ) }
    dend_49 { pt3dadd( 20.1173, -57.8968, -3.85039, 0.83 ) }
    dend_49 { pt3dadd( 21.1662, -59.4562, -4.16893, 0.28 ) }
    dend_49 { pt3dadd( 21.5847, -60.0453, -4.2777, 0.55 ) }
    dend_49 { pt3dadd( 23.0484, -62.0732, -4.59831, 0.28 ) }
    dend_49 { pt3dadd( 23.7571, -63.0766, -4.73258, 0.55 ) }
    dend_49 { pt3dadd( 26.5839, -67.1507, -5.20081, 0.83 ) }
    dend_49 { pt3dadd( 28.4318, -69.8154, -5.47603, 0.28 ) }
    dend_49 { pt3dadd( 29.8218, -71.7666, -5.61774, 0.55 ) }
    dend_49 { pt3dadd( 30.8104, -73.1403, -5.67263, 0.28 ) }
    dend_49 { pt3dadd( 32.0614, -74.8963, -5.63686, 0.55 ) }
    dend_49 { pt3dadd( 32.5697, -75.6212, -5.59521, 0.55 ) }
    dend_49 { pt3dadd( 33.3166, -76.676, -5.47639, 0.28 ) }
    dend_49 { pt3dadd( 33.8859, -77.4999, -5.39057, 0.55 ) }
    dend_49 { pt3dadd( 35.2226, -79.5939, -5.30747, 0.28 ) }
    dend_49 { pt3dadd( 36.4788, -81.6395, -5.36002, 0.55 ) }
    dend_49 { pt3dadd( 37.0883, -82.7416, -5.40213, 0.28 ) }
    dend_49 { pt3dadd( 37.4504, -83.4412, -5.43372, 0.83 ) }
    dend_49 { pt3dadd( 38.1341, -84.9589, -5.55914, 0.83 ) }
    dend_49 { pt3dadd( 38.8599, -86.9442, -5.75351, 0.28 ) }
    dend_49 { pt3dadd( 38.9655, -87.3064, -5.79379, 0.55 ) }
    dend_49 { pt3dadd( 39.405, -89.1141, -6.04821, 0.28 ) }
    dend_49 { pt3dadd( 39.5615, -89.7965, -6.13374, 0.55 ) }
    dend_49 { pt3dadd( 40.0821, -91.9107, -6.36425, 0.28 ) }
    dend_49 { pt3dadd( 40.5482, -93.5121, -6.4993, 0.55 ) }
    dend_49 { pt3dadd( 40.9726, -94.8339, -6.63842, 0.28 ) }
    dend_49 { pt3dadd( 41.7652, -97.0546, -6.90342, 1.38 ) }
    dend_49 { pt3dadd( 42.6325, -99.277, -7.08118, 0.28 ) }
    dend_49 { pt3dadd( 42.9297, -100.008, -7.11509, 0.55 ) }
    dend_49 { pt3dadd( 43.812, -102.139, -7.13838, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_49 { pt3dadd( 45.263, -105.623, -7.12001, 0.55 ) }
    dend_49 { pt3dadd( 46.2929, -108.092, -7.14146, 0.55 ) }
    dend_49 { pt3dadd( 48.0889, -112.382, -7.21313, 0.28 ) }
    dend_49 { pt3dadd( 48.7685, -113.994, -7.18233, 1.11 ) }
    dend_49 { pt3dadd( 49.4391, -115.577, -7.09705, 0.28 ) }
    dend_49 { pt3dadd( 49.7947, -116.368, -7.01862, 0.83 ) }
    dend_49 { pt3dadd( 50.7812, -118.371, -6.66885, 0.28 ) }
    dend_49 { pt3dadd( 50.9071, -118.608, -6.63097, 0.55 ) }
    dend_49 { pt3dadd( 52.807, -121.787, -6.29087, 0.28 ) }
    dend_49 { pt3dadd( 53.1139, -122.24, -6.22737, 0.83 ) }
    dend_49 { pt3dadd( 53.9773, -123.454, -6.06065, 0.28 ) }
    dend_49 { pt3dadd( 54.2803, -123.9, -6.02, 0.83 ) }
    dend_49 { pt3dadd( 54.9186, -124.86, -5.9126, 0.28 ) }
    dend_49 { pt3dadd( 56.1524, -126.731, -5.77096, 0.83 ) }
    dend_49 { pt3dadd( 58.8363, -130.744, -5.66687, 0.28 ) }
    dend_49 { pt3dadd( 60.0395, -132.536, -5.66988, 0.83 ) }
    dend_49 { pt3dadd( 61.4657, -134.64, -5.71716, 0.28 ) }
    dend_49 { pt3dadd( 62.7868, -136.479, -5.796, 0.55 ) }
    dend_49 { pt3dadd( 63.6469, -137.599, -5.83406, 0.28 ) }
    dend_49 { pt3dadd( 65.3689, -139.744, -5.87828, 1.11 ) }
    dend_49 { pt3dadd( 66.8113, -141.475, -5.91008, 0.28 ) }
    dend_49 { pt3dadd( 67.7623, -142.482, -5.91659, 0.55 ) }
    dend_49 { pt3dadd( 69.21, -143.862, -5.95245, 0.55 ) }
    dend_49 { pt3dadd( 70.6517, -145.155, -6.04623, 0.55 ) }
    dend_49 { pt3dadd( 71.9624, -146.259, -6.14316, 0.28 ) }
    dend_49 { pt3dadd( 72.1713, -146.427, -6.15813, 0.83 ) }
    dend_49 { pt3dadd( 75.2516, -148.782, -6.36195, 0.28 ) }
    dend_49 { pt3dadd( 76.9231, -150.015, -6.56222, 0.55 ) }
    dend_49 { pt3dadd( 79.0212, -151.514, -6.91937, 0.28 ) }
    dend_49 { pt3dadd( 80.756, -152.738, -7.29048, 0.83 ) }
    dend_49 { pt3dadd( 82.3962, -153.866, -7.66562, 0.28 ) }
    dend_49 { pt3dadd( 83.0819, -154.346, -7.82031, 0.55 ) }
    dend_49 { pt3dadd( 85.7589, -156.266, -8.39144, 0.28 ) }
    dend_49 { pt3dadd( 87.1967, -157.239, -8.67364, 1.11 ) }
    dend_49 { pt3dadd( 93.2032, -165.121, -10.0283, 1.11 ) }
    dend_49 { pt3dadd( 97.9735, -173.945, -10.4356, 1.11 ) }
    dend_49 { pt3dadd( 102.923, -182.656, -9.9164, 1.11 ) }
    dend_49 { pt3dadd( 108.165, -191.194, -9.55341, 1.11 ) }
    dend_49 { pt3dadd( 113.154, -199.771, -8.11931, 1.11 ) }
    dend_49 { pt3dadd( 119.459, -207.164, -5.85004, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.51701, -39.4308, -0.89481, 0.28 ) }
    dend_48 { pt3dadd( 4.53721, -40.8995, -0.685963, 0.28 ) }
    dend_48 { pt3dadd( 4.57402, -41.9825, -0.549586, 0.83 ) }
    dend_48 { pt3dadd( 4.62134, -43.3816, -0.482853, 0.28 ) }
    dend_48 { pt3dadd( 4.64268, -45.2585, -0.462203, 0.83 ) }
    dend_48 { pt3dadd( 4.54288, -47.9338, -0.558931, 0.55 ) }
    dend_48 { pt3dadd( 4.46683, -49.0583, -0.61949, 0.28 ) }
    dend_48 { pt3dadd( 4.41119, -50.4626, -0.658849, 0.83 ) }
    dend_48 { pt3dadd( 4.31388, -52.8697, -0.716895, 0.28 ) }
    dend_48 { pt3dadd( 4.25905, -55.3392, -0.564575, 0.83 ) }
    dend_48 { pt3dadd( 4.20403, -58.4229, -0.110336, 0.28 ) }
    dend_48 { pt3dadd( 4.17799, -59.506, 0.0767419, 0.83 ) }
    dend_48 { pt3dadd( 4.14366, -62.8939, 0.717274, 0.28 ) }
    dend_48 { pt3dadd( 4.15687, -65.7134, 1.36623, 0.83 ) }
    dend_48 { pt3dadd( 4.29485, -70.4497, 2.76797, 0.28 ) }
    dend_48 { pt3dadd( 4.41519, -72.2019, 3.38003, 0.83 ) }
    dend_48 { pt3dadd( 4.72366, -74.9274, 4.51504, 0.28 ) }
    dend_48 { pt3dadd( 4.86712, -76.2471, 5.0633, 0.55 ) }
    dend_48 { pt3dadd( 2.63104, -88.6802, 5.61824, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -51.7307, -33.3205, -34.6771, 0.28 ) }
    dend_39 { pt3dadd( -54.789, -32.3423, -37.4555, 0.28 ) }
    dend_39 { pt3dadd( -55.3366, -32.1671, -37.9529, 0.55 ) }
    dend_39 { pt3dadd( -57.1378, -31.591, -39.5892, 0.28 ) }
    dend_39 { pt3dadd( -58.2652, -31.2304, -40.6135, 0.55 ) }
    dend_39 { pt3dadd( -58.9344, -31.0163, -41.2214, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 65/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -51.7307, -33.3205, -34.6771, 0.28 ) }
    dend_38 { pt3dadd( -52.8027, -34.9978, -35.099, 0.28 ) }
    dend_38 { pt3dadd( -53.6864, -35.7494, -35.1162, 0.55 ) }
    dend_38 { pt3dadd( -56.0624, -37.2466, -34.809, 0.28 ) }
    dend_38 { pt3dadd( -57.0146, -37.9518, -34.8238, 0.55 ) }
    dend_38 { pt3dadd( -59.2455, -39.7271, -34.9601, 0.28 ) }
    dend_38 { pt3dadd( -60.0156, -40.3399, -35.0072, 0.55 ) }
    dend_38 { pt3dadd( -62.1294, -41.729, -35.0206, 0.28 ) }
    dend_38 { pt3dadd( -63.4014, -42.4364, -34.9631, 0.83 ) }
    dend_38 { pt3dadd( -67.0549, -44.1448, -34.5937, 0.28 ) }
    dend_38 { pt3dadd( -67.9402, -44.6976, -34.5947, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -40.2324, -21.5729, -9.46778, 0.28 ) }
    dend_36 { pt3dadd( -41.4144, -19.6393, -10.0499, 0.28 ) }
    dend_36 { pt3dadd( -41.8677, -18.9061, -10.4336, 0.55 ) }
    dend_36 { pt3dadd( -42.7863, -17.523, -11.3771, 0.28 ) }
    dend_36 { pt3dadd( -43.3082, -16.7892, -11.8888, 0.83 ) }
    dend_36 { pt3dadd( -44.6282, -14.9722, -13.1463, 0.28 ) }
    dend_36 { pt3dadd( -44.9177, -14.5732, -13.4227, 0.55 ) }
    dend_36 { pt3dadd( -46.7183, -12.2505, -15.0387, 0.28 ) }
    dend_36 { pt3dadd( -47.4097, -11.386, -15.7024, 0.55 ) }
    dend_36 { pt3dadd( -48.2332, -10.3206, -16.6107, 0.28 ) }
    dend_36 { pt3dadd( -48.7665, -9.63287, -17.242, 0.55 ) }
    dend_36 { pt3dadd( -49.0603, -9.22864, -17.67, 0.28 ) }
    dend_36 { pt3dadd( -49.6675, -8.39887, -18.4364, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -40.2324, -21.5729, -9.46778, 0.55 ) }
    dend_35 { pt3dadd( -42.7558, -20.303, -10.0891, 0.55 ) }
    dend_35 { pt3dadd( -43.7645, -19.9289, -10.3096, 0.55 ) }
    dend_35 { pt3dadd( -45.2944, -19.5594, -10.7064, 0.83 ) }
    dend_35 { pt3dadd( -47.716, -19.1891, -11.3709, 0.28 ) }
    dend_35 { pt3dadd( -48.5295, -19.1511, -11.6198, 0.55 ) }
    dend_35 { pt3dadd( -49.8327, -19.1558, -12.0417, 0.55 ) }
    dend_35 { pt3dadd( -51.5367, -19.4239, -12.4929, 0.83 ) }
    dend_35 { pt3dadd( -53.7487, -19.967, -13.0901, 0.28 ) }
    dend_35 { pt3dadd( -54.4311, -20.1909, -13.2837, 0.55 ) }
    dend_35 { pt3dadd( -56.1314, -20.8952, -13.8159, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_35 { pt3dadd( -56.4679, -21.0271, -13.922, 0.55 ) }
    dend_35 { pt3dadd( -58.9063, -22.021, -14.6467, 0.28 ) }
    dend_35 { pt3dadd( -60.3947, -22.4927, -15.0424, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -34.8352, 41.9273, 12.5579, 0.83 ) }
    dend_26 { pt3dadd( -34.7611, 48.0551, 13.9006, 0.83 ) }
    dend_26 { pt3dadd( -34.8758, 51.1931, 14.384, 0.55 ) }
    dend_26 { pt3dadd( -34.9369, 52.4945, 14.5606, 0.55 ) }
    dend_26 { pt3dadd( -35.0715, 56.6583, 15.0984, 0.83 ) }
    dend_26 { pt3dadd( -35.085, 60.1818, 15.5249, 0.55 ) }
    dend_26 { pt3dadd( -35.0332, 62.4946, 15.8534, 0.55 ) }
    dend_26 { pt3dadd( -34.6426, 66.8031, 16.4154, 0.55 ) }
    dend_26 { pt3dadd( -34.5273, 68.0351, 16.6014, 0.83 ) }
    dend_26 { pt3dadd( -34.1298, 71.5702, 17.1193, 0.28 ) }
    dend_26 { pt3dadd( -33.7736, 73.845, 17.4715, 0.83 ) }
    dend_26 { pt3dadd( -33.1678, 76.6816, 17.9624, 0.28 ) }
    dend_26 { pt3dadd( -32.5152, 78.859, 18.3849, 0.83 ) }
    dend_26 { pt3dadd( -30.8609, 91.9868, 22.1697, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 17/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -34.8352, 41.9273, 12.5579, 0.55 ) }
    dend_25 { pt3dadd( -36.3409, 42.0379, 12.8117, 0.55 ) }
    dend_25 { pt3dadd( -39.9451, 42.3027, 13.4191, 0.55 ) }
    dend_25 { pt3dadd( -47.4667, 43.1752, 14.5872, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -43.5851, -2.64415, -5.25583, 0.83 ) }
    dend_23 { pt3dadd( -46.4179, -2.40841, -4.47369, 0.83 ) }
    dend_23 { pt3dadd( -48.3724, -2.00875, -3.83013, 0.83 ) }
    dend_23 { pt3dadd( -50.2334, -1.58209, -3.18802, 0.55 ) }
    dend_23 { pt3dadd( -51.9, -1.19138, -2.60952, 0.55 ) }
    dend_23 { pt3dadd( -54.0001, -0.679049, -1.80486, 0.55 ) }
    dend_23 { pt3dadd( -55.9324, -0.196383, -1.03464, 0.83 ) }
    dend_23 { pt3dadd( -58.733, 0.535681, 0.0870939, 0.83 ) }
    dend_23 { pt3dadd( -60.047, 0.929731, 0.579335, 0.55 ) }
    dend_23 { pt3dadd( -60.8705, 1.20652, 0.855339, 0.83 ) }
    dend_23 { pt3dadd( -63.658, 2.1702, 1.72611, 0.28 ) }
    dend_23 { pt3dadd( -64.737, 2.53412, 1.91177, 0.83 ) }
    dend_23 { pt3dadd( -65.6212, 2.80558, 1.96215, 0.83 ) }
    dend_23 { pt3dadd( -68.0421, 3.51699, 1.84751, 0.28 ) }
    dend_23 { pt3dadd( -68.9109, 3.7826, 1.75462, 0.83 ) }
    dend_23 { pt3dadd( -70.018, 4.10169, 1.58713, 0.83 ) }
    dend_23 { pt3dadd( -73.5, 4.94095, 0.940749, 0.55 ) }
    dend_23 { pt3dadd( -75.9716, 5.41391, 0.546573, 0.28 ) }
    dend_23 { pt3dadd( -77.0981, 5.53223, 0.323013, 0.83 ) }
    dend_23 { pt3dadd( -78.8956, 5.49321, -0.0699737, 0.28 ) }
    dend_23 { pt3dadd( -80.296, 5.24136, -0.451605, 0.55 ) }
    dend_23 { pt3dadd( -81.5341, 4.78436, -0.845679, 0.28 ) }
    dend_23 { pt3dadd( -82.233, 4.39944, -1.08596, 0.55 ) }
    dend_23 { pt3dadd( -85.348, 2.30767, -2.43235, 0.28 ) }
    dend_23 { pt3dadd( -86.7484, 1.24068, -3.07647, 0.28 ) }
    dend_23 { pt3dadd( -88.5348, -0.300125, -3.90622, 0.83 ) }
    dend_23 { pt3dadd( -89.759, -1.4285, -4.47141, 0.28 ) }
    dend_23 { pt3dadd( -90.2201, -1.86053, -4.67043, 0.83 ) }
    dend_23 { pt3dadd( -91.142, -2.73631, -4.96292, 0.28 ) }
    dend_23 { pt3dadd( -91.8816, -3.45962, -5.08469, 0.55 ) }
    dend_23 { pt3dadd( -92.8303, -4.35521, -5.229, 0.28 ) }
    dend_23 { pt3dadd( -93.6228, -5.04229, -5.31536, 0.83 ) }
    dend_23 { pt3dadd( -95.0072, -6.0899, -5.39142, 0.28 ) }
    dend_23 { pt3dadd( -95.8504, -6.71397, -5.46347, 0.55 ) }
    dend_23 { pt3dadd( -97.1339, -7.63336, -5.59198, 0.28 ) }
    dend_23 { pt3dadd( -97.7922, -8.09087, -5.66303, 0.55 ) }
    dend_23 { pt3dadd( -99.7261, -9.37539, -5.88529, 0.28 ) }
    dend_23 { pt3dadd( -102.319, -10.8738, -6.33562, 0.55 ) }
    dend_23 { pt3dadd( -104.246, -11.8134, -6.74252, 0.28 ) }
    dend_23 { pt3dadd( -104.991, -12.0974, -6.91236, 0.83 ) }
    dend_23 { pt3dadd( -106.072, -12.3883, -7.14091, 0.28 ) }
    dend_23 { pt3dadd( -107.061, -12.6017, -7.37291, 0.83 ) }
    dend_23 { pt3dadd( -110.441, -12.9978, -8.3095, 0.28 ) }
    dend_23 { pt3dadd( -110.998, -13.0022, -8.47941, 0.83 ) }
    dend_23 { pt3dadd( -112.959, -12.8022, -8.97211, 0.28 ) }
    dend_23 { pt3dadd( -113.794, -12.6579, -9.19469, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 67/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -43.5851, -2.64415, -5.25583, 0.55 ) }
    dend_22 { pt3dadd( -43.794, -4.36751, -5.60128, 0.55 ) }
    dend_22 { pt3dadd( -44.1595, -7.25937, -6.16852, 0.55 ) }
    dend_22 { pt3dadd( -44.4379, -8.89043, -6.42675, 1.11 ) }
    dend_22 { pt3dadd( -44.7734, -10.4564, -6.85794, 0.55 ) }
    dend_22 { pt3dadd( -45.2242, -12.3, -7.47201, 0.55 ) }
    dend_22 { pt3dadd( -45.6717, -13.9188, -8.07545, 0.55 ) }
    dend_22 { pt3dadd( -46.0868, -15.2114, -8.63207, 0.28 ) }
    dend_22 { pt3dadd( -46.9549, -17.2927, -9.65803, 1.11 ) }
    dend_22 { pt3dadd( -48.4967, -20.8322, -11.5275, 0.28 ) }
    dend_22 { pt3dadd( -49.1488, -22.17, -12.2403, 0.28 ) }
    dend_22 { pt3dadd( -49.4659, -22.7637, -12.5591, 0.55 ) }
    dend_22 { pt3dadd( -49.9738, -23.6077, -13.0039, 0.28 ) }
    dend_22 { pt3dadd( -50.6331, -24.7139, -13.5849, 0.28 ) }
    dend_22 { pt3dadd( -51.3352, -25.8475, -14.1439, 0.55 ) }
    dend_22 { pt3dadd( -52.3853, -27.5337, -14.7865, 0.28 ) }
    dend_22 { pt3dadd( -53.1289, -28.7167, -15.2628, 0.55 ) }
    dend_22 { pt3dadd( -54.1015, -30.2996, -15.9114, 0.28 ) }
    dend_22 { pt3dadd( -55.2747, -32.1343, -16.7385, 0.28 ) }
    dend_22 { pt3dadd( -56.0802, -33.2958, -17.2862, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -23.0907, -68.0223, -4.54603, 0.55 ) }
    dend_19 { pt3dadd( -26.3155, -69.6816, -4.17942, 0.55 ) }
    dend_19 { pt3dadd( -28.5515, -70.9098, -3.91832, 0.55 ) }
    dend_19 { pt3dadd( -29.7554, -71.5597, -3.77648, 0.28 ) }
    dend_19 { pt3dadd( -31.6523, -72.5996, -3.55415, 0.55 ) }
    dend_19 { pt3dadd( -32.9215, -73.3009, -3.40319, 0.28 ) }
    dend_19 { pt3dadd( -34.1844, -74.0079, -3.25301, 0.55 ) }
    dend_19 { pt3dadd( -35.5754, -74.8328, -3.06706, 0.55 ) }
    dend_19 { pt3dadd( -36.7795, -75.612, -2.8701, 0.28 ) }
    dend_19 { pt3dadd( -37.2032, -75.9502, -2.79296, 0.55 ) }
    dend_19 { pt3dadd( -37.753, -76.4694, -2.69291, 0.28 ) }
    dend_19 { pt3dadd( -38.4193, -77.1972, -2.57955, 0.55 ) }
    dend_19 { pt3dadd( -39.2016, -78.1631, -2.43515, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( -40.0419, -79.2086, -2.24352, 0.55 ) }
    dend_19 { pt3dadd( -40.5325, -79.8479, -2.11733, 0.28 ) }
    dend_19 { pt3dadd( -41.0304, -80.4958, -2.00345, 0.83 ) }
    dend_19 { pt3dadd( -41.9629, -81.729, -1.81602, 0.28 ) }
    dend_19 { pt3dadd( -42.28, -82.1656, -1.78112, 0.55 ) }
    dend_19 { pt3dadd( -43.1316, -83.3762, -1.76714, 0.28 ) }
    dend_19 { pt3dadd( -43.2959, -83.6125, -1.77142, 0.83 ) }
    dend_19 { pt3dadd( -44.2587, -85.0077, -1.82301, 0.28 ) }
    dend_19 { pt3dadd( -44.7464, -85.7296, -1.84596, 0.83 ) }
    dend_19 { pt3dadd( -45.9966, -87.6131, -2.10526, 0.28 ) }
    dend_19 { pt3dadd( -47.1325, -89.1428, -2.35045, 0.28 ) }
    dend_19 { pt3dadd( -48.0577, -90.269, -2.54207, 0.55 ) }
    dend_19 { pt3dadd( -49.4274, -91.7827, -2.78316, 0.55 ) }
    dend_19 { pt3dadd( -50.8689, -93.224, -2.92135, 1.11 ) }
    dend_19 { pt3dadd( -53.8877, -95.9857, -3.05963, 0.28 ) }
    dend_19 { pt3dadd( -56.2372, -97.9346, -3.04366, 0.83 ) }
    dend_19 { pt3dadd( -57.9338, -99.1837, -3.04233, 0.28 ) }
    dend_19 { pt3dadd( -58.8975, -99.8297, -3.07146, 0.55 ) }
    dend_19 { pt3dadd( -61.1634, -101.332, -3.11839, 0.28 ) }
    dend_19 { pt3dadd( -61.6021, -101.625, -3.11149, 0.28 ) }
    dend_19 { pt3dadd( -62.5679, -102.343, -3.02533, 0.55 ) }
    dend_19 { pt3dadd( -64.4413, -104.087, -2.81598, 0.28 ) }
    dend_19 { pt3dadd( -65.8986, -105.709, -2.57816, 0.83 ) }
    dend_19 { pt3dadd( -68.0209, -108.533, -2.07841, 0.28 ) }
    dend_19 { pt3dadd( -68.5137, -109.307, -1.93247, 0.83 ) }
    dend_19 { pt3dadd( -69.5356, -111.19, -1.45413, 0.83 ) }
    dend_19 { pt3dadd( -70.6364, -113.436, -0.739761, 0.28 ) }
    dend_19 { pt3dadd( -71.1587, -114.611, -0.309543, 0.83 ) }
    dend_19 { pt3dadd( -71.8271, -116.136, 0.265029, 0.28 ) }
    dend_19 { pt3dadd( -72.2702, -117.092, 0.583894, 0.55 ) }
    dend_19 { pt3dadd( -73.2919, -119.221, 1.20243, 0.28 ) }
    dend_19 { pt3dadd( -73.713, -120.109, 1.39519, 0.55 ) }
    dend_19 { pt3dadd( -74.5353, -121.836, 1.62998, 0.83 ) }
    dend_19 { pt3dadd( -74.858, -122.581, 1.71939, 0.83 ) }
    dend_19 { pt3dadd( -75.49, -124.193, 1.86735, 0.28 ) }
    dend_19 { pt3dadd( -75.8504, -125.263, 1.87011, 0.55 ) }
    dend_19 { pt3dadd( -76.6445, -128.214, 1.59907, 0.28 ) }
    dend_19 { pt3dadd( -76.697, -128.481, 1.55357, 0.55 ) }
    dend_19 { pt3dadd( -76.9978, -130.562, 1.03297, 0.28 ) }
    dend_19 { pt3dadd( -77.0576, -131.077, 0.878069, 0.55 ) }
    dend_19 { pt3dadd( -77.2445, -133.684, -0.139688, 0.28 ) }
    dend_19 { pt3dadd( -77.2582, -134.021, -0.300729, 0.55 ) }
    dend_19 { pt3dadd( -77.2172, -135.243, -1.06837, 0.28 ) }
    dend_19 { pt3dadd( -77.2157, -135.473, -1.23452, 0.55 ) }
    dend_19 { pt3dadd( -81.565, -144.112, 0.562081, 0.55 ) }
    dend_19 { pt3dadd( -86.8214, -152.09, 2.83912, 0.55 ) }
    dend_19 { pt3dadd( -92.511, -160.109, 2.95135, 0.55 ) }
    dend_19 { pt3dadd( -98.7465, -167.409, 4.9543, 0.55 ) }
    dend_19 { pt3dadd( -103.774, -175.641, 6.84688, 0.55 ) }
    dend_19 { pt3dadd( -107.817, -184.27, 9.266, 0.55 ) }
    dend_19 { pt3dadd( -112.795, -191.754, 13.1591, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -23.0907, -68.0223, -4.54603, 0.55 ) }
    dend_18 { pt3dadd( -23.3731, -69.2081, -4.56187, 0.55 ) }
    dend_18 { pt3dadd( -23.6252, -70.2428, -4.57854, 0.55 ) }
    dend_18 { pt3dadd( -23.9273, -71.4076, -4.59843, 0.28 ) }
    dend_18 { pt3dadd( -24.0479, -71.8321, -4.60606, 0.55 ) }
    dend_18 { pt3dadd( -24.6189, -73.4976, -4.63641, 0.55 ) }
    dend_18 { pt3dadd( -25.06, -74.6678, -4.65863, 0.28 ) }
    dend_18 { pt3dadd( -25.5633, -75.9425, -4.66504, 0.28 ) }
    dend_18 { pt3dadd( -25.7325, -76.3458, -4.64099, 0.55 ) }
    dend_18 { pt3dadd( -26.2109, -77.4455, -4.52211, 0.55 ) }
    dend_18 { pt3dadd( -27.0717, -79.345, -4.23568, 0.55 ) }
    dend_18 { pt3dadd( -27.7163, -80.7573, -3.97159, 0.55 ) }
    dend_18 { pt3dadd( -28.0033, -81.4623, -3.83347, 0.55 ) }
    dend_18 { pt3dadd( -28.814, -83.6461, -3.4412, 0.28 ) }
    dend_18 { pt3dadd( -29.017, -84.2273, -3.34156, 0.83 ) }
    dend_18 { pt3dadd( -29.4374, -85.5186, -3.12839, 0.55 ) }
    dend_18 { pt3dadd( -29.7616, -86.6608, -2.96971, 0.55 ) }
    dend_18 { pt3dadd( -30.2858, -88.5413, -2.77683, 0.55 ) }
    dend_18 { pt3dadd( -30.661, -89.8673, -2.69208, 0.83 ) }
    dend_18 { pt3dadd( -30.915, -90.8228, -2.67328, 0.28 ) }
    dend_18 { pt3dadd( -31.0157, -91.2051, -2.65957, 0.55 ) }
    dend_18 { pt3dadd( -31.3364, -92.4813, -2.53372, 0.28 ) }
    dend_18 { pt3dadd( -31.3493, -92.5286, -2.52621, 0.55 ) }
    dend_18 { pt3dadd( -31.7227, -93.8702, -2.0294, 0.28 ) }
    dend_18 { pt3dadd( -31.9171, -94.578, -1.68624, 0.83 ) }
    dend_18 { pt3dadd( -32.0759, -95.1076, -1.40427, 0.83 ) }
    dend_18 { pt3dadd( -32.703, -96.9167, -0.457045, 0.28 ) }
    dend_18 { pt3dadd( -32.8801, -97.3913, -0.219645, 0.55 ) }
    dend_18 { pt3dadd( -33.9898, -100.382, 1.14227, 0.28 ) }
    dend_18 { pt3dadd( -34.3991, -101.534, 1.62089, 0.28 ) }
    dend_18 { pt3dadd( -34.5864, -102.08, 1.82329, 0.83 ) }
    dend_18 { pt3dadd( -35.1712, -103.747, 2.33208, 0.28 ) }
    dend_18 { pt3dadd( -35.5547, -104.896, 2.57548, 0.28 ) }
    dend_18 { pt3dadd( -35.7191, -105.5, 2.655, 0.55 ) }
    dend_18 { pt3dadd( -36.0364, -107.002, 2.64458, 0.55 ) }
    dend_18 { pt3dadd( -36.1518, -107.781, 2.64098, 0.55 ) }
    dend_18 { pt3dadd( -36.3052, -108.78, 2.64045, 0.28 ) }
    dend_18 { pt3dadd( -36.4021, -109.397, 2.68268, 0.28 ) }
    dend_18 { pt3dadd( -36.5068, -110.005, 2.75048, 0.55 ) }
    dend_18 { pt3dadd( -36.8682, -111.94, 3.0103, 0.28 ) }
    dend_18 { pt3dadd( -37.1181, -113.085, 3.1795, 0.83 ) }
    dend_18 { pt3dadd( -37.4314, -114.359, 3.30147, 0.83 ) }
    dend_18 { pt3dadd( -37.8312, -115.791, 3.37398, 0.55 ) }
    dend_18 { pt3dadd( -38.2905, -117.226, 3.42949, 0.28 ) }
    dend_18 { pt3dadd( -38.5434, -117.98, 3.44666, 0.28 ) }
    dend_18 { pt3dadd( -38.7185, -118.504, 3.46933, 0.55 ) }
    dend_18 { pt3dadd( -39.355, -120.459, 3.54692, 0.28 ) }
    dend_18 { pt3dadd( -39.5379, -121.029, 3.55715, 0.55 ) }
    dend_18 { pt3dadd( -40.0146, -122.41, 3.54518, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( -40.3643, -123.357, 3.56462, 0.83 ) }
    dend_18 { pt3dadd( -40.9693, -125.05, 3.65162, 0.28 ) }
    dend_18 { pt3dadd( -41.0962, -125.418, 3.68256, 0.55 ) }
    dend_18 { pt3dadd( -41.7337, -127.258, 3.96336, 0.28 ) }
    dend_18 { pt3dadd( -41.9311, -127.815, 4.04123, 0.55 ) }
    dend_18 { pt3dadd( -42.245, -128.749, 4.18953, 0.55 ) }
    dend_18 { pt3dadd( -42.4933, -129.507, 4.35917, 0.28 ) }
    dend_18 { pt3dadd( -42.597, -129.872, 4.44623, 0.55 ) }
    dend_18 { pt3dadd( -42.9135, -131.194, 4.80886, 0.28 ) }
    dend_18 { pt3dadd( -42.99, -131.557, 4.93019, 0.55 ) }
    dend_18 { pt3dadd( -43.386, -133.644, 5.69607, 0.28 ) }
    dend_18 { pt3dadd( -43.4939, -134.315, 5.96695, 0.55 ) }
    dend_18 { pt3dadd( -43.6876, -135.594, 6.5177, 0.28 ) }
    dend_18 { pt3dadd( -43.7543, -136.116, 6.74118, 0.55 ) }
    dend_18 { pt3dadd( -46.8359, -142.508, 6.60438, 0.55 ) }
    dend_18 { pt3dadd( -49.1449, -149.206, 6.15407, 0.55 ) }
    dend_18 { pt3dadd( -52.6554, -155.244, 4.93988, 0.55 ) }
    dend_18 { pt3dadd( -55.3103, -161.549, 3.0821, 0.55 ) }
    dend_18 { pt3dadd( -57.9372, -168.119, 2.51683, 0.55 ) }
    dend_18 { pt3dadd( -59.8256, -174.96, 2.66324, 0.55 ) }
    dend_18 { pt3dadd( -60.8017, -181.978, 2.32996, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 59.5503, 12.0657, 60.9439, 0.55 ) }
    dend_12 { pt3dadd( 65.3358, 16.8347, 68.9709, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 59.5503, 12.0657, 60.9439, 0.55 ) }
    dend_11 { pt3dadd( 65.5131, 16.0415, 72.484, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 47.4829, -55.3593, 9.32788, 0.55 ) }
    dend_8 { pt3dadd( 47.9015, -56.0828, 11.0035, 0.55 ) }
    dend_8 { pt3dadd( 48.6924, -57.3325, 13.4905, 0.55 ) }
    dend_8 { pt3dadd( 49.0625, -57.8249, 14.3326, 0.55 ) }
    dend_8 { pt3dadd( 54.0841, -64.1623, 23.7592, 0.28 ) }
    dend_8 { pt3dadd( 54.6769, -64.9013, 24.6403, 0.83 ) }
    dend_8 { pt3dadd( 56.4607, -67.1741, 26.8706, 0.28 ) }
    dend_8 { pt3dadd( 57.439, -68.5429, 27.8635, 0.28 ) }
    dend_8 { pt3dadd( 59.2341, -71.1234, 28.7775, 0.28 ) }
    dend_8 { pt3dadd( 59.8848, -71.9515, 28.7933, 0.55 ) }
    dend_8 { pt3dadd( 61.661, -74.0614, 28.0295, 0.28 ) }
    dend_8 { pt3dadd( 62.2174, -74.7874, 27.8284, 0.28 ) }
    dend_8 { pt3dadd( 63.0599, -76.0196, 27.7118, 0.55 ) }
    dend_8 { pt3dadd( 64.0779, -77.6011, 27.6597, 0.55 ) }
    dend_8 { pt3dadd( 65.7057, -80.5411, 27.9703, 0.55 ) }
    dend_8 { pt3dadd( 71.9516, -87.92, 32.1448, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 47.4829, -55.3593, 9.32788, 0.55 ) }
    dend_7 { pt3dadd( 49.1871, -58.124, 9.74474, 0.55 ) }
    dend_7 { pt3dadd( 50.7334, -60.6677, 10.1051, 0.55 ) }
    dend_7 { pt3dadd( 51.9326, -62.6452, 10.3566, 0.55 ) }
    dend_7 { pt3dadd( 53.4694, -65.1379, 10.6617, 0.28 ) }
    dend_7 { pt3dadd( 54.741, -67.1071, 10.8895, 0.55 ) }
    dend_7 { pt3dadd( 56.6274, -69.8574, 11.2085, 0.55 ) }
    dend_7 { pt3dadd( 57.6777, -71.2561, 11.4138, 0.28 ) }
    dend_7 { pt3dadd( 58.5552, -72.3971, 11.5885, 0.28 ) }
    dend_7 { pt3dadd( 59.0228, -72.9487, 11.7005, 0.28 ) }
    dend_7 { pt3dadd( 60.4204, -74.4884, 12.0339, 0.55 ) }
    dend_7 { pt3dadd( 61.7706, -75.7745, 12.3183, 0.55 ) }
    dend_7 { pt3dadd( 63.68, -77.4052, 12.6623, 0.28 ) }
    dend_7 { pt3dadd( 64.2439, -77.8628, 12.7679, 0.55 ) }
    dend_7 { pt3dadd( 66.5848, -79.7327, 13.2309, 0.28 ) }
    dend_7 { pt3dadd( 67.5347, -80.5078, 13.4113, 0.55 ) }
    dend_7 { pt3dadd( 69.959, -82.511, 13.8307, 0.28 ) }
    dend_7 { pt3dadd( 70.5215, -82.9492, 13.8562, 0.55 ) }
    dend_7 { pt3dadd( 78.0521, -91.3876, 16.7256, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 42.7596, -85.6842, 30.0998, 0.55 ) }
    dend_5 { pt3dadd( 44.7039, -94.9987, 33.9808, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 42.7596, -85.6842, 30.0998, 0.55 ) }
    dend_4 { pt3dadd( 44.3219, -93.4237, 32.7505, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_71 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_56 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_59 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_63 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_55 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_46 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_19 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_18 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_8 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_7 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_57 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_68 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_43 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_58 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_34 OneSecGrp_SectionRef_45.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_60 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_38 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_62 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_25 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_61 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_4 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_5 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_11 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_65 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_66 all.append()
    dend_66 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_71 nseg = 9
    dend_56 nseg = 7
    dend_70 nseg = 9
    dend_69 nseg = 3
    dend_67 nseg = 5
    dend_31 nseg = 3
    dend_29 nseg = 9
    dend_28 nseg = 3
    dend_59 nseg = 3
    dend_53 nseg = 5
    dend_52 nseg = 13
    dend_50 nseg = 9
    dend_9 nseg = 3
    dend_63 nseg = 3
    dend_55 nseg = 3
    dend_46 nseg = 5
    dend_42 nseg = 5
    dend_41 nseg = 11
    dend_24 nseg = 3
    dend_16 nseg = 7
    dend_13 nseg = 7
    dend_3 nseg = 3
    dend_49 nseg = 11
    dend_48 nseg = 3
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_19 nseg = 9
    dend_18 nseg = 7
    dend_8 nseg = 3
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_LBC_95f37b59ec_0_0


