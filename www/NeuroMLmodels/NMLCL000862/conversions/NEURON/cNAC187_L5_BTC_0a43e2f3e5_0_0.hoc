// Cell: cNAC187_L5_BTC_0a43e2f3e5_0_0
/*
{
  "id" : "cNAC187_L5_BTC_0a43e2f3e5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.79879, 12.4163, -5.65686, 1.10185", "-0.780248, 11.3268, -5.18349, 1.63297", "-0.761706, 10.2373, -4.71013, 2.68141", "-0.743165, 9.14783, -4.23676, 3.59289", "-0.724623, 8.05833, -3.7634, 4.52551", "-0.706081, 6.96884, -3.29004, 5.77296", "-0.687539, 5.87934, -2.81667, 7.05591", "-0.668997, 4.78984, -2.34331, 7.8981", "-0.650455, 3.70034, -1.86994, 8.60513", "-0.631913, 2.61085, -1.39658, 9.05081", "-0.613372, 1.52135, -0.923215, 9.49138", "-0.59483, 0.431853, -0.449851, 9.92405", "-0.576288, -0.657644, 0.0235132, 10.0896", "-0.557746, -1.74714, 0.496877, 9.7354", "-0.539204, -2.83664, 0.970241, 9.3741", "-0.520662, -3.92614, 1.44361, 8.98289", "-0.50212, -5.01563, 1.91697, 8.2325", "-0.483579, -6.10513, 2.39033, 7.41598", "-0.465037, -7.19463, 2.8637, 6.43666", "-0.446495, -8.28412, 3.33706, 5.40957", "-0.427953, -9.37362, 3.81043, 3.13747" ]
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.562971, 11.8432, -13.8565, 1.39", "2.4026, 14.3465, -3.42759, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.72297, 1.55695, 2.93347, 1.11", "8.14042, 4.4877, 4.66431, 1.11", "10.6928, 6.77938, 5.96115, 1.11", "11.862, 7.93259, 6.55635, 1.11", "13.7851, 9.81383, 7.72029, 1.66", "14.978, 11.0181, 8.4755, 0.83", "16.4716, 12.4774, 9.41372, 0.83", "17.5027, 13.45, 10.0729, 1.11", "18.6358, 14.5464, 10.8007, 0.28", "21.5187, 17.2394, 12.853, 0.83", "23.4375, 19.0794, 14.2791, 0.83", "25.2578, 20.8364, 15.6748, 0.83", "26.682, 22.0431, 16.7974, 0.83", "28.2249, 23.1728, 18.0082, 0.83", "30.6992, 24.8921, 19.9367, 0.83", "31.8564, 25.7004, 20.826, 0.83", "34.1156, 27.1465, 22.7365, 0.83", "37.144, 29.0506, 25.5011, 0.83", "38.4857, 29.7863, 26.7469, 0.83", "44.6452, 33.6987, 29.6486, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.09703, -6.8378, 2.32347, 2.77", "-1.65132, -9.58949, 2.71851, 2.77", "-1.88871, -10.7681, 2.8877, 2.49", "-2.16689, -12.149, 3.08596, 2.49", "-2.48261, -13.7164, 3.31097, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.427953, -9.37362, 3.81043, 1.02885", "-0.172709, -24.3714, 3.81043, 1.02885", "0.0825348, -39.3693, 3.81043, 1.02885" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.4026, 14.3465, -3.42759, 0.55", "-1.79035, 16.9531, -11.1841, 0.55", "-2.15205, 17.1779, -11.8532, 2.49", "-5.0469, 18.9775, -17.2084, 2.22", "-6.89673, 20.1274, -20.6304, 2.22", "-9.72112, 21.8832, -25.8552, 2.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "2.4026, 14.3465, -3.42759, 1.39", "3.90356, 16.5952, -11.1775, 1.39", "5.32919, 18.9259, -17.9405, 1.11", "7.06529, 21.9629, -25.7873, 1.11", "7.93542, 23.5003, -29.5047, 1.11", "8.77911, 24.8948, -33.0452, 1.11", "9.21996, 25.6234, -34.8952, 1.11", "9.79051, 26.6244, -37.0549, 1.11", "11.225, 29.2186, -42.1026, 1.11", "11.65, 29.9255, -43.4148, 1.11", "14.0423, 33.8566, -52.1106, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "44.6452, 33.6987, 29.6486, 0.83", "41.4221, 30.4775, 24.8602, 0.83", "38.1892, 26.6546, 20.5693, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "44.6452, 33.6987, 29.6486, 0.83", "32.8407, 30.8757, 32.8711, 0.83", "21.9776, 26.6919, 37.4956, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.48261, -13.7164, 3.31097, 1.11", "0.89805, -15.8351, 3.6298, 1.11", "3.11365, -17.1948, 3.84063, 1.11", "6.15117, -19.0089, 4.12145, 1.11", "9.27484, -20.7374, 4.60957, 1.11", "13.5576, -23.0632, 5.3919, 1.11", "19.765, -26.366, 6.55076, 1.11", "21.3051, -27.1556, 6.95358, 1.11", "24.7111, -28.8112, 7.87275, 1.11", "30.5109, -31.5875, 9.52362, 1.11", "35.0347, -33.7423, 10.8714, 1.11", "41.1755, -36.7531, 12.9937, 1.11", "45.861, -39.1993, 14.8784, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.48261, -13.7164, 3.31097, 2.49", "-3.02202, -16.8281, 8.74388, 2.49", "-3.20569, -17.8877, 10.5938, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "0.0825348, -39.3693, 3.81043, 0.28", "0.337779, -54.3671, 3.81043, 0.28", "0.593023, -69.3649, 3.81043, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.72112, 21.8832, -25.8552, 1.11", "-10.9369, 21.8986, -32.6033, 1.11", "-12.0664, 21.913, -38.8721, 1.11", "-12.6364, 21.9202, -42.0357, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.72112, 21.8832, -25.8552, 1.94", "-6.85944, 23.3282, -19.3621, 1.94" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "14.0423, 33.8566, -52.1106, 0.55", "14.5233, 34.4239, -53.3376, 0.55", "15.0505, 35.1288, -54.4877, 1.39", "15.5438, 35.8002, -55.39, 0.55", "18.7579, 40.4006, -60.6157, 0.55", "19.5283, 41.5957, -61.7099, 0.55", "20.8583, 43.8382, -63.2191, 0.55", "21.323, 44.7209, -63.8117, 0.83", "21.866, 45.8326, -64.4983, 0.55", "22.3036, 46.7916, -65.0752, 0.55", "23.2558, 48.7547, -66.138, 0.55", "24.6046, 51.256, -67.8946, 0.83", "27.4248, 55.7848, -71.5817, 0.55", "27.9725, 56.5758, -72.3972, 0.55", "29.5605, 58.5436, -74.8984, 0.55", "30.3044, 59.2731, -76.0289, 0.55", "31.7391, 60.4059, -78.0211, 0.55", "32.9261, 61.1974, -79.4658, 0.83", "36.6914, 63.5044, -83.1487, 0.83", "38.0367, 64.2938, -84.4189, 0.28", "40.7264, 65.8483, -86.7588, 0.28", "42.6798, 67.0232, -88.4798, 0.28", "44.0685, 67.8644, -89.6413, 0.55", "44.6893, 68.2273, -90.0747, 0.28", "47.4811, 69.7867, -91.3176, 0.28", "48.8837, 70.5502, -92.2679, 0.28", "50.0834, 71.1403, -93.3024, 0.28", "50.6812, 71.4046, -93.8693, 0.28", "53.2525, 72.437, -96.5405, 0.28", "53.9811, 72.7027, -97.3071, 0.28", "60.3039, 74.8632, -104.833, 0.28", "62.5104, 75.4938, -107.552, 0.55", "63.666, 75.7957, -108.919, 0.55", "65.6882, 76.3376, -111.222, 0.28", "66.651, 76.617, -112.285, 0.28", "70.6891, 77.847, -116.103, 0.28", "72.7478, 78.5243, -117.7, 0.28", "75.197, 79.4298, -119.655, 0.28", "81.7515, 82.0992, -124.708, 0.28", "83.5522, 82.8446, -126.01, 0.28", "85.2091, 83.5675, -127.178, 0.28", "88.1186, 84.9254, -129.053, 0.55", "89.0831, 85.4037, -129.729, 0.28", "90.2439, 85.9778, -130.556, 0.28", "95.0952, 88.273, -133.58, 0.28", "96.079, 88.6934, -134.195, 0.28", "98.6065, 89.6715, -135.791, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "14.0423, 33.8566, -52.1106, 1.11", "20.7247, 38.2519, -50.1835, 1.11", "22.4927, 40.1091, -50.4729, 1.11", "24.5195, 42.2353, -50.9431, 0.55", "25.8, 43.3906, -51.7398, 0.55", "26.7253, 44.1589, -52.4248, 0.55", "27.7607, 44.9798, -53.2023, 0.55", "29.5549, 46.5091, -54.8374, 0.55", "31.2806, 47.9637, -56.4649, 0.55", "35.4739, 51.2469, -60.3307, 0.55", "36.0054, 51.6111, -60.843, 0.83", "37.3749, 52.4545, -62.2294, 0.83", "38.611, 53.136, -63.5498, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "45.861, -39.1993, 14.8784, 0.55", "47.7957, -41.9412, 16.0464, 0.55", "49.9149, -44.4246, 17.1348, 0.55", "51.5657, -46.359, 17.9826, 0.55", "54.5562, -49.8634, 19.5185, 0.28", "56.3009, -51.9079, 20.4146, 0.28", "57.937, -53.8252, 21.2549, 0.28", "59.5424, -55.4501, 22.3494, 0.28", "65.6478, -62.5737, 26.3127, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "45.861, -39.1993, 14.8784, 0.83", "47.2473, -39.9773, 14.6093, 0.83", "49.7706, -41.2825, 14.1807, 0.83", "52.1227, -42.3046, 13.8022, 0.83", "53.8077, -42.9983, 13.5488, 0.83", "54.9003, -43.4589, 13.4011, 0.83", "59.5224, -45.3874, 12.8363, 0.83", "62.0096, -46.4915, 12.6004, 0.83", "64.5834, -47.6916, 12.3309, 0.83", "66.3058, -48.537, 12.1191, 0.83", "69.1945, -50.2392, 11.3999, 0.83", "72.4037, -52.3776, 10.3257, 0.83", "75.6047, -54.6448, 9.1508, 0.83", "79.098, -57.1395, 7.87592, 0.83", "83.3534, -60.2201, 6.19058, 0.83", "90.5199, -65.1732, 3.22011, 0.83", "92.5614, -66.5145, 2.36669, 0.83", "95.9998, -68.7134, 0.985402, 0.83", "100.782, -71.5954, -0.732131, 0.83", "106.712, -74.9317, -2.45837, 0.55", "109.074, -76.1488, -3.0174, 0.55", "112.233, -77.6252, -3.52273, 0.55", "115.497, -79.1023, -4.06323, 0.55", "119.281, -80.8275, -4.52189, 0.55", "123.418, -82.6672, -4.63161, 0.55", "124.849, -83.1808, -4.46132, 0.55", "125.734, -83.4876, -4.29696, 0.28", "130.51, -84.9994, -3.20041, 0.28", "135.257, -86.3518, -1.94407, 0.28", "138.787, -87.3005, -0.84564, 0.28", "144.574, -88.8818, 1.23216, 0.28", "148.092, -89.8079, 2.55068, 0.28", "149.461, -90.142, 3.07361, 0.28", "158.377, -95.6348, 0.268195, 0.28", "167.859, -100.054, -2.66207, 0.28", "176.829, -106.066, -3.35437, 0.28", "185.663, -112.075, -1.71416, 0.28", "193.867, -119.058, -2.35524, 0.28", "201.252, -126.697, -4.15548, 0.28", "209.865, -132.669, -6.88897, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.20569, -17.8877, 10.5938, 0.83", "-5.56632, -18.5422, 9.50522, 0.83", "-7.10245, -18.9673, 8.91511, 0.83", "-12.7309, -20.4073, 7.05349, 0.83", "-17.3334, -21.7095, 5.48368, 0.83", "-18.9262, -22.1985, 4.93727, 0.83", "-22.6333, -23.4734, 3.73499, 0.83", "-23.6457, -23.8362, 3.48825, 0.83", "-25.5474, -24.5703, 3.19036, 0.83", "-27.7813, -25.5014, 3.14373, 0.83", "-28.1986, -25.6738, 3.12849, 0.83", "-29.9304, -26.3462, 3.29038, 0.83", "-31.9174, -27.1189, 3.69295, 0.83", "-34.0249, -27.9394, 4.19339, 0.83", "-35.6919, -28.5647, 4.69674, 0.83", "-38.7629, -29.559, 5.79493, 0.83", "-40.7783, -30.1522, 6.50754, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.20569, -17.8877, 10.5938, 2.22", "-4.08215, -21.722, 10.169, 2.22", "-5.08883, -26.1259, 9.68112, 2.22", "-5.60437, -28.3813, 9.43122, 2.22", "-6.02233, -30.2097, 9.22868, 2.22", "-7.84434, -38.1805, 8.34563, 2.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-12.6364, 21.9202, -42.0357, 0.83", "-13.4347, 22.417, -43.2205, 0.83", "-16.3367, 24.788, -49.6883, 0.83", "-18.6861, 26.9105, -55.5007, 0.83", "-19.6723, 27.8407, -58.2885, 0.83", "-19.9892, 28.1317, -59.1797, 0.83", "-22.9848, 30.8784, -68.3673, 0.83", "-27.4886, 35.0581, -83.3448, 0.83", "-28.3099, 35.8472, -86.2348, 0.83", "-31.6502, 39.087, -96.6828, 0.55", "-32.5749, 39.9405, -99.1767, 0.83", "-37.4971, 44.4535, -110.876, 0.55", "-38.1862, 45.0453, -112.148, 0.55", "-39.7844, 46.4218, -114.455, 0.55", "-45.5509, 51.655, -122.644, 0.55", "-47.4207, 53.4937, -125.041, 0.83", "-54.0713, 61.0717, -133.595, 0.55", "-57.1313, 65.0599, -137.405, 0.55", "-58.1903, 66.6991, -139.062, 0.55", "-61.7337, 73.4169, -146.029, 0.55", "-63.6517, 77.9248, -150.762, 0.55", "-65.1926, 82.0408, -154.849, 0.83", "-66.0691, 84.785, -157.178, 0.55", "-67.8894, 91.3451, -162.635, 0.55", "-68.7481, 94.7037, -165.656, 0.55", "-69.9541, 99.6499, -170.053, 0.55", "-70.4445, 101.701, -172.14, 0.55", "-71.0925, 103.957, -174.548, 0.83", "-71.7999, 106.305, -176.837, 0.55", "-74.4541, 114.759, -184.217, 0.55", "-75.2138, 117.255, -186.518, 0.55", "-76.4008, 121.087, -190.173, 0.55", "-77.4609, 124.181, -193.061, 0.55", "-78.4728, 127.08, -195.698, 0.83", "-78.6421, 127.572, -196.168, 0.55", "-81.4189, 134.792, -202.977, 0.55", "-82.8922, 138.41, -206.764, 0.55", "-84.5836, 142.525, -211.251, 0.83", "-85.5227, 144.79, -213.861, 0.55", "-88.8131, 152.476, -223.188, 0.55", "-89.6476, 154.367, -225.468, 0.55", "-91.4397, 157.906, -229.634, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-12.6364, 21.9202, -42.0357, 1.11", "-12.5891, 21.6724, -41.1876, 1.11", "-12.5352, 21.3898, -40.22, 1.11", "-11.9596, 18.3715, -29.8869, 1.11", "-11.8821, 17.9651, -28.4958, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-6.85944, 23.3282, -19.3621, 1.11", "-8.37164, 24.4446, -18.7325, 1.11", "-9.19689, 25.0783, -18.3689, 1.11", "-10.8412, 26.4668, -17.7895, 1.11", "-12.2839, 27.7635, -17.3865, 1.11", "-14.8452, 30.1118, -16.9741, 1.11", "-17.1583, 32.2481, -16.4358, 1.11", "-19.7083, 34.5665, -15.6862, 1.11", "-21.9322, 36.5642, -14.8028, 1.11", "-24.0706, 38.4621, -13.723, 0.83", "-26.6929, 40.6807, -12.2573, 0.83", "-31.1015, 44.1539, -9.42725, 0.83", "-33.4486, 45.8765, -7.83668, 0.83", "-36.7735, 48.1707, -5.47799, 0.83", "-38.3731, 49.1919, -4.34216, 0.83", "-40.2785, 50.3452, -3.07949, 0.83", "-41.8303, 51.252, -2.18831, 0.83", "-44.5274, 52.8292, -0.963138, 0.83", "-47.3528, 54.5441, 0.202804, 0.83", "-49.4544, 55.812, 0.969993, 0.55", "-51.1772, 56.876, 1.58934, 0.55", "-52.5412, 57.718, 2.09858, 0.55", "-57.6002, 60.987, 4.25764, 0.55", "-58.991, 61.9123, 4.89439, 0.83", "-61.1358, 63.4457, 5.85304, 0.83", "-63.1734, 65.0057, 6.79797, 0.83", "-64.9795, 66.4877, 7.5607, 0.83", "-67.3883, 68.5337, 8.53734, 0.55", "-69.1181, 70.022, 9.13441, 0.55", "-71.9677, 72.56, 10.2526, 0.55", "-72.4497, 73.0284, 10.4596, 0.55", "-74.677, 75.2701, 11.4774, 0.55", "-76.672, 77.2662, 12.3665, 0.55", "-77.2479, 77.8069, 12.5838, 0.55", "-78.1484, 78.6757, 12.996, 0.55", "-78.9132, 79.473, 13.4537, 0.55", "-80.5551, 81.203, 14.5136, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.85944, 23.3282, -19.3621, 1.66", "-7.01523, 26.9687, -18.1615, 1.66", "-7.09852, 28.9151, -17.5195, 1.66", "-7.24609, 32.3633, -16.3822, 1.39", "-7.38691, 35.6541, -15.2969, 1.39" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-40.7783, -30.1522, 6.50754, 0.55", "-44.1381, -33.4551, 10.9036, 0.55", "-47.1957, -36.4608, 14.9043, 0.55", "-48.205, -37.453, 16.2249, 0.28", "-49.5767, -38.8014, 18.0197, 0.28", "-52.7112, -41.8827, 22.121, 0.28", "-54.2492, -43.3947, 24.1335, 0.28", "-60.8896, -48.3207, 32.9116, 0.28", "-67.0103, -52.6105, 42.3954, 0.28", "-71.7672, -58.0197, 52.0655, 0.28", "-78.102, -62.4711, 61.3263, 0.28", "-83.4674, -65.2392, 71.8144, 0.28", "-89.7873, -65.7286, 82.1404, 0.28", "-94.3104, -66.3308, 93.3655, 0.28", "-98.9182, -64.8172, 104.464, 0.28", "-102.505, -61.5326, 115.532, 0.28", "-105.172, -57.352, 126.538, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-40.7783, -30.1522, 6.50754, 0.55", "-42.2626, -29.9417, 6.38213, 0.55", "-45.1636, -29.6852, 6.26319, 0.55", "-46.6312, -29.5983, 6.31821, 0.55", "-49.6425, -29.6017, 6.65862, 0.55", "-52.8304, -29.6054, 7.01899, 0.55", "-53.1938, -29.6058, 7.06007, 0.55", "-55.9575, -29.7111, 7.41748, 0.55", "-59.2403, -29.934, 7.87409, 0.55", "-63.1304, -30.3265, 8.66684, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.84434, -38.1805, 8.34563, 0.83", "-8.39794, -40.2484, 6.44514, 0.83", "-8.53712, -40.769, 5.94535, 0.83", "-8.83175, -41.924, 4.72728, 0.83", "-8.96109, -42.4413, 4.22121, 0.83", "-9.80875, -45.6593, 0.869862, 0.83", "-10.1064, -46.7891, -0.306835, 0.83", "-10.4143, -47.7054, -1.38323, 0.83", "-11.1193, -49.7229, -3.89533, 0.83", "-11.5565, -50.9886, -5.57512, 0.83", "-12.1688, -52.8066, -7.92212, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.84434, -38.1805, 8.34563, 1.94", "-8.52006, -47.7474, 14.1673, 1.94", "-8.57531, -50.447, 15.6616, 1.94", "-8.4788, -52.4182, 16.6878, 1.94", "-8.29834, -55.3419, 18.0252, 1.94", "-8.16902, -57.4371, 18.9836, 1.94", "-8.05698, -59.2524, 19.814, 1.94", "-7.80325, -63.1649, 19.8355, 1.94", "-7.54244, -64.7851, 19.968, 1.94", "-7.0401, -66.5982, 20.4233, 1.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-91.4397, 157.906, -229.634, 0.55", "-91.6891, 162.701, -237.578, 0.55", "-91.7771, 164.393, -240.383, 0.83", "-92.0993, 170.586, -250.645, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-91.4397, 157.906, -229.634, 0.28", "-94.8572, 162.684, -231.155, 0.28", "-98.1734, 167.321, -232.632, 0.55", "-104.026, 175.503, -235.238, 0.55", "-107.961, 181.005, -236.99, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.8821, 17.9651, -28.4958, 0.83", "-6.29677, 21.3555, -33.4662, 0.83", "3.28975, 27.461, -42.9133, 0.83", "5.66053, 28.8388, -45.4737, 0.83", "7.75592, 30.0566, -47.7366, 0.83", "13.1365, 33.1836, -53.5473, 0.83", "15.2545, 34.4146, -55.8347, 0.83", "21.7873, 37.937, -63.43, 0.83", "27.9581, 41.4547, -69.7165, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.8821, 17.9651, -28.4958, 0.83", "-21.3583, 16.2032, -10.1382, 0.83", "-22.9782, 15.8135, -6.46223, 0.83", "-24.3569, 15.3293, -2.51813, 0.83", "-24.3163, 14.7381, -0.0766993, 0.83", "-24.8105, 15.3173, -1.86821, 0.83", "-25.4861, 15.9397, -3.88881, 0.83", "-26.9207, 16.8707, -7.16827, 0.83", "-27.5864, 17.2104, -8.69573, 0.83", "-30.0096, 18.19, -13.8305, 0.83", "-31.4638, 18.5297, -16.7815, 0.83", "-33.184, 18.6112, -20.216, 0.83", "-34.3308, 18.4644, -22.2443, 0.83", "-35.6191, 18.0744, -24.1651, 0.83", "-37.9433, 17.0478, -26.9463, 0.83", "-39.8613, 16.0002, -28.6701, 0.83", "-41.2417, 15.2865, -29.7041, 0.83", "-42.9744, 14.4936, -30.8186, 0.83", "-45.7796, 13.4333, -32.6946, 0.83", "-48.5511, 12.643, -34.7259, 0.83", "-50.1101, 12.2925, -35.647, 0.83", "-54.0952, 11.5026, -37.9735, 0.83", "-56.9282, 11.0559, -39.674, 0.83", "-60.8511, 10.6749, -42.3058, 0.55", "-64.0716, 10.6832, -44.722, 0.55", "-71.3227, 11.7313, -50.7225, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-80.5551, 81.203, 14.5136, 0.55", "-83.0034, 81.6512, 16.6354, 0.55", "-88.2582, 82.6133, 21.1895, 0.55", "-93.7313, 83.6153, 25.9327, 0.55", "-104.516, 84.6052, 35.7723, 0.55", "-115.742, 86.3348, 44.9961, 0.55", "-125.346, 90.2843, 55.2825, 0.55", "-134.189, 92.4087, 66.7434, 0.55", "-142.952, 92.4822, 78.4587, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-80.5551, 81.203, 14.5136, 0.55", "-81.4717, 84.1801, 15.6387, 0.55", "-81.8784, 85.9055, 16.0284, 0.55", "-82.8836, 91.5663, 16.815, 0.55", "-83.7411, 96.3567, 17.8364, 0.55", "-84.493, 100.657, 18.9093, 0.55", "-85.0996, 103.943, 19.7259, 0.55", "-85.9175, 108.754, 20.886, 0.55", "-86.493, 112.345, 21.5627, 0.55", "-87.6534, 119.587, 22.1672, 0.28", "-88.1377, 122.24, 22.4695, 0.55", "-88.8007, 125.36, 22.8753, 0.28", "-89.6483, 128.657, 23.3744, 0.28", "-90.5044, 131.62, 23.9158, 0.55", "-91.865, 136.214, 24.2597, 0.55", "-93.4514, 142.333, 23.6141, 0.55", "-94.3323, 153.999, 26.8061, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.38691, 35.6541, -15.2969, 1.11", "-9.34622, 37.1195, -13.9551, 1.11", "-12.9084, 39.7247, -11.1826, 1.11", "-17.0623, 42.6516, -7.7337, 1.11", "-19.3666, 44.3482, -5.81387, 0.83", "-29.7511, 51.7602, 3.70932, 1.11", "-31.9297, 53.3728, 5.80428, 1.11", "-35.6573, 55.9608, 9.95692, 1.11", "-40.239, 58.8961, 15.3843, 1.11", "-42.0341, 59.9223, 17.5872, 1.11", "-47.9429, 63.2175, 24.6484, 1.11", "-49.9657, 64.2787, 26.8065, 0.55", "-54.7519, 66.5428, 31.9236, 0.55", "-57.3556, 67.6792, 34.6793, 0.55", "-61.421, 69.328, 38.684, 0.83", "-63.5342, 70.1526, 40.6842, 0.83", "-68.3217, 72.2844, 45.1517, 0.83", "-69.5167, 72.9063, 46.3722, 0.83", "-72.6997, 75.0357, 49.8743, 0.83", "-74.2451, 76.3252, 51.7433, 0.83", "-79.6529, 81.3037, 58.0129, 0.83", "-83.0025, 84.6859, 61.8317, 0.83", "-84.8101, 86.7791, 63.8719, 0.83", "-87.9798, 90.7413, 67.3202, 0.83", "-90.3194, 94.0081, 69.8602, 0.83", "-92.1945, 96.8327, 71.8399, 0.83", "-94.2519, 100.312, 73.3891, 0.83", "-95.1747, 101.758, 73.826, 0.83", "-96.8476, 104.005, 74.3515, 0.83", "-105.271, 109.509, 86.1325, 0.83", "-111.812, 116.103, 98.514, 0.83", "-117.572, 122.807, 111.225, 0.83", "-122.188, 130.659, 123.714, 0.83", "-124.34, 139.306, 136.345, 0.83", "-124.137, 150.66, 146.741, 0.83", "-124.763, 163.32, 155.38, 0.83", "-125.442, 176.614, 162.953, 0.83", "-125.292, 188.965, 172.083, 0.83", "-125.237, 202.574, 179.103, 0.83", "-123.015, 215.408, 187.262, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-7.38691, 35.6541, -15.2969, 1.11", "-4.29225, 36.5117, -14.7689, 1.11", "-1.58276, 37.2536, -14.149, 1.11", "1.64313, 38.2398, -13.4512, 1.11", "4.26596, 39.0957, -12.901, 1.11", "7.47262, 40.1821, -12.3803, 1.11", "11.3051, 41.5897, -11.8631, 1.11", "14.7958, 42.9988, -11.5368, 1.11", "23.5222, 46.9516, -11.1845, 1.11", "27.3175, 49.0125, -11.2085, 0.83", "31.6876, 51.8272, -11.569, 0.83", "33.9268, 53.5393, -11.9307, 0.83", "37.4468, 56.6978, -12.8224, 0.83", "39.7945, 59.2888, -13.7103, 0.83", "42.4507, 63.1112, -15.1343, 0.83", "44.4045, 66.3979, -16.303, 0.83", "45.7131, 68.7106, -17.0046, 0.83", "46.5161, 70.0148, -17.3534, 0.83", "49.2106, 73.8882, -18.1141, 0.83", "51.3323, 76.4064, -18.5493, 0.83", "52.9221, 77.965, -18.714, 0.83", "55.5885, 80.1631, -18.8194, 0.83", "57.9347, 81.9188, -18.885, 0.83", "60.5926, 83.781, -18.8379, 0.83", "62.1447, 84.854, -18.7194, 0.83", "64.2644, 86.4025, -18.5581, 0.83", "68.424, 89.7456, -18.2131, 0.83", "70.4848, 91.7369, -18.2711, 0.83", "72.3127, 93.709, -18.4691, 0.83", "74.7139, 96.5069, -18.8577, 0.83", "77.1969, 99.6228, -19.3367, 0.83", "79.4462, 102.583, -19.8453, 0.83", "84.0818, 109.029, -21.5423, 0.83", "85.0741, 110.451, -22.0451, 0.55", "86.7746, 112.971, -23.2387, 0.55", "87.8246, 114.657, -24.1566, 0.55", "89.5472, 117.626, -25.6565, 0.55", "92.9245, 123.932, -28.3354, 0.55", "93.6532, 125.353, -28.7646, 0.55", "95.5247, 129.109, -29.6878, 0.83", "97.9193, 133.91, -30.4822, 0.55", "100.358, 138.986, -30.8605, 0.55", "101.509, 141.633, -30.7672, 0.28", "102.651, 144.537, -30.3518, 0.28", "103.673, 147.382, -29.8807, 0.55", "105.083, 151.656, -29.0359, 0.28", "105.961, 154.398, -28.6854, 0.55", "106.754, 157.05, -28.7066, 0.55", "107.414, 159.401, -28.7177, 0.28", "108.106, 162.078, -28.6736, 0.28", "108.688, 164.464, -28.5961, 0.28", "110.051, 169.897, -28.4333, 0.55", "111.835, 176.158, -28.2203, 0.28", "113.295, 180.947, -28.0319, 0.28", "114.758, 185.494, -27.8008, 0.28", "115.264, 187.056, -27.6841, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-105.172, -57.352, 126.538, 0.28", "-109.285, -60.3348, 135.381, 0.28", "-113.346, -63.0131, 144.349, 0.28", "-116.425, -65.7405, 153.689, 0.28", "-120.86, -68.7322, 162.37, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-105.172, -57.352, 126.538, 0.28", "-111.513, -59.918, 138.247, 0.28", "-116.612, -63.7854, 150.192, 0.28", "-123.275, -68.7836, 160.848, 0.28", "-131.096, -74.2319, 170.419, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.1688, -52.8066, -7.92212, 0.83", "-11.754, -54.1566, -10.2332, 0.83", "-11.6001, -55.247, -12.5909, 0.83", "-11.5315, -56.2314, -14.7874, 0.83", "-11.4946, -56.7229, -15.805, 0.83", "-11.3591, -58.5842, -19.3906, 0.83", "-11.3376, -59.8741, -21.7888, 0.83", "-11.4225, -62.1239, -26.0305, 0.83", "-11.4972, -63.0181, -27.8006, 0.55", "-11.5397, -64.0784, -29.7995, 0.55", "-11.5712, -64.5721, -30.6799, 0.55", "-11.6302, -66.0612, -32.9926, 0.55", "-11.6574, -66.8778, -34.2112, 0.55", "-11.3989, -69.2422, -37.4667, 0.55", "-11.2883, -70.1771, -39.0239, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-12.1688, -52.8066, -7.92212, 0.83", "-13.7436, -55.5683, -7.19591, 0.83", "-14.4268, -56.6506, -6.87723, 0.83", "-15.0791, -57.757, -6.58233, 0.83", "-16.3361, -59.9647, -6.02615, 0.83", "-17.1141, -61.3502, -5.68675, 0.83", "-18.0676, -63.0059, -5.26976, 0.83", "-18.592, -63.9894, -4.97786, 0.83", "-19.6078, -65.68, -4.47257, 0.83", "-20.0416, -66.3475, -4.28408, 0.83", "-20.6553, -67.2669, -4.0533, 0.83", "-21.1573, -68.1194, -3.86014, 0.83", "-21.7367, -69.2835, -3.63624, 0.83", "-22.38, -71.0203, -3.07971, 0.83", "-23.0585, -73.5617, -2.0587, 0.83", "-23.3812, -75.1836, -1.33667, 0.83", "-23.6704, -77.2234, -0.409056, 0.83", "-23.7265, -78.5282, 0.211451, 0.83", "-23.5859, -83.9456, 2.81862, 0.83", "-23.4472, -85.7896, 3.67213, 0.83", "-23.3441, -87.0931, 4.30217, 0.83", "-23.199, -89.1323, 5.35067, 0.83", "-22.957, -91.8743, 6.85337, 0.83", "-22.847, -93.5154, 7.73464, 0.83", "-22.8584, -95.9476, 8.9476, 0.83", "-22.8785, -97.8578, 9.95572, 0.83", "-22.9621, -101.082, 11.8269, 0.83", "-23.2102, -104.259, 13.8091, 0.83", "-23.4515, -105.72, 14.7727, 0.83", "-23.8068, -107.35, 16.0363, 0.83", "-24.2487, -108.759, 17.2963, 0.83", "-25.0808, -110.772, 19.1411, 0.83", "-25.8622, -112.037, 20.5364, 0.83", "-26.5929, -113.093, 21.8145, 0.83", "-27.5909, -114.615, 23.8256, 0.83", "-28.0881, -115.362, 24.8571, 0.83", "-28.563, -116.007, 25.7921, 0.83", "-30.1848, -118.292, 28.8232, 0.83", "-30.8244, -119.184, 30.057, 0.55", "-31.0202, -119.49, 30.4054, 0.55", "-31.8883, -120.924, 31.6688, 0.55", "-32.2985, -121.46, 32.1366, 0.28", "-32.7879, -121.95, 32.5808, 0.28", "-34.008, -122.748, 33.2338, 0.28", "-35.7944, -123.7, 34.2135, 0.28", "-36.4487, -124.055, 34.5717, 0.28", "-38.1069, -125.002, 35.4741, 0.28", "-40.3336, -131.614, 39.7068, 0.28", "-44.4158, -137.559, 43.5727, 0.28", "-49.814, -142.803, 46.8373, 0.28", "-55.3871, -147.007, 51.2055, 0.28", "-60.0158, -151.596, 56.2268, 0.28" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.0401, -66.5982, 20.4233, 0.55", "-5.40012, -70.2648, 21.9302, 0.55", "-4.88406, -71.4186, 22.4044, 0.55", "-4.31162, -72.6985, 22.9304, 0.55", "-3.79613, -73.851, 23.4041, 0.55", "-0.457619, -78.7395, 24.6568, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.0401, -66.5982, 20.4233, 1.66", "-7.56403, -67.8685, 20.7594, 1.66", "-7.82644, -68.7372, 20.9556, 1.66", "-8.27642, -70.7927, 21.332, 1.11", "-8.51992, -72.1946, 21.7319, 1.11", "-8.71496, -73.5164, 22.1523, 1.11", "-8.79692, -74.871, 22.7217, 1.11", "-8.73563, -75.8754, 23.2199, 1.11", "-8.55836, -77.3436, 23.9929, 1.11", "-8.09621, -80.2388, 25.554, 1.11", "-7.92346, -81.1534, 26.0293, 1.11", "-7.27176, -84.1698, 27.6261, 1.11", "-6.98774, -85.3297, 28.1984, 1.11", "-6.5651, -86.9614, 28.9994, 1.11", "-6.23858, -88.0607, 29.4913, 1.39", "-5.87154, -89.1746, 29.7981, 1.39", "-5.62568, -90.0131, 29.9555, 1.11", "-5.2871, -92.0628, 29.8801, 1.39", "-5.18717, -99.4534, 31.012, 1.39", "-4.99679, -106.749, 32.6603, 1.39", "-4.38054, -114.028, 34.2845, 1.39", "-4.38525, -121.259, 36.2221, 1.39", "-4.76411, -128.54, 37.9065, 1.39", "-4.1005, -135.955, 38.59, 1.39", "-3.51348, -143.396, 38.2169, 1.39", "-1.96336, -150.526, 36.5247, 1.39", "-0.817898, -157.592, 34.3118, 1.39" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "27.9581, 41.4547, -69.7165, 0.55", "28.6417, 45.8887, -69.8983, 0.55", "30.0396, 53.0443, -69.1582, 0.55", "32.6862, 65.116, -68.0556, 0.55", "33.3738, 68.1517, -68.1683, 0.55", "38.4659, 90.6613, -70.3716, 0.55", "41.0904, 103.592, -72.4279, 0.55", "41.3774, 104.872, -72.6527, 0.83", "42.0316, 107.691, -73.1372, 0.28", "43.7723, 113.989, -76.5724, 0.28", "44.1013, 115.117, -77.5197, 0.28", "44.9646, 117.765, -80.2097, 0.28", "45.7415, 120.283, -82.7046, 0.28", "46.9011, 123.437, -86.1371, 0.28", "51.032, 132.707, -96.4833, 0.28", "51.3633, 133.309, -97.1554, 0.83", "52.3664, 134.646, -99.1335, 0.28", "52.8447, 135.145, -99.9752, 0.83", "60.4271, 141.529, -112.6, 0.28", "61.8631, 142.527, -114.887, 0.28", "63.4794, 143.31, -117.335, 0.28", "73.0651, 147.515, -132.288, 0.28", "79.5491, 149.977, -142.862, 0.28", "80.4929, 150.22, -144.345, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "27.9581, 41.4547, -69.7165, 0.55", "33.8161, 44.6206, -74.2394, 0.55", "35.5852, 45.5552, -75.9, 1.11", "40.6421, 48.131, -80.4533, 0.55", "41.8045, 48.7181, -81.4329, 0.55", "42.8664, 49.2472, -82.3492, 0.55", "45.2819, 50.4273, -84.2984, 1.11", "54.4475, 54.8999, -91.0817, 0.28", "56.8284, 55.9742, -92.7118, 0.28", "60.3526, 57.4546, -94.7253, 0.55", "66.4381, 59.7702, -98.29, 0.28", "70.451, 61.2554, -100.512, 0.28", "72.1905, 61.9058, -101.357, 0.55", "74.2002, 62.7092, -102.017, 0.55", "78.5615, 64.6124, -103.419, 0.28", "85.5436, 67.9467, -105.312, 0.28", "89.9873, 70.3477, -107.084, 0.28", "91.9617, 71.4804, -108.103, 0.55", "95.0008, 73.2505, -109.776, 0.28", "97.4815, 74.7141, -111.21, 0.55", "99.6224, 76.0197, -112.515, 0.55", "109.631, 82.0559, -118.283, 0.28", "114.776, 84.9705, -121.827, 0.28", "116.714, 85.9883, -123.297, 0.28", "118.194, 86.7044, -124.533, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-71.3227, 11.7313, -50.7225, 0.28", "-72.7718, 11.266, -49.0416, 0.28", "-74.5545, 10.51, -46.735, 0.28", "-75.7067, 10.0504, -45.3071, 0.55", "-76.1774, 9.90147, -44.8086, 0.28", "-82.6069, 7.8678, -37.9995, 0.28", "-83.8058, 7.48857, -36.7298, 0.28", "-88.7519, 5.43938, -30.8052, 0.28", "-89.6778, 4.94429, -29.478, 0.83", "-95.357, 1.30941, -20.1468, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-71.3227, 11.7313, -50.7225, 0.55", "-73.2086, 10.6401, -56.5105, 0.55", "-74.4125, 9.95071, -59.6442, 0.55", "-75.4666, 9.38215, -62.783, 0.55", "-76.1874, 9.04181, -64.7991, 0.55", "-77.7783, 8.31578, -68.8211, 0.55", "-78.9249, 7.78695, -71.2525, 0.28", "-79.5278, 7.50732, -72.2296, 0.83", "-85.6538, 4.49351, -81.0099, 0.83", "-86.7919, 3.90235, -82.47, 0.83", "-88.4153, 3.03387, -84.2253, 0.83", "-91.8944, 1.08402, -87.3134, 0.83", "-93.4144, 0.171188, -88.5099, 0.28", "-95.5391, -1.10535, -89.8165, 0.28", "-96.8047, -1.86701, -90.3048, 0.55", "-98.2308, -2.75673, -90.9129, 0.28", "-99.9576, -3.81119, -91.6847, 0.28", "-101.891, -4.94414, -92.5972, 0.28", "-104.25, -6.20185, -93.6634, 0.28", "-105.091, -6.56652, -93.9836, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_20", "dend_17", "dend_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_20", "dend_17", "dend_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BTC_0a43e2f3e5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_20(0), soma_0(0.49999961371666685)
    connect dend_17(0), soma_0(0.49999961371666685)
    connect dend_0(0), soma_0(0.49999961371666685)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.79879, 12.4163, -5.65686, 1.10185 ) }
    soma_0 { pt3dadd( -0.780248, 11.3268, -5.18349, 1.63297 ) }
    soma_0 { pt3dadd( -0.761706, 10.2373, -4.71013, 2.68141 ) }
    soma_0 { pt3dadd( -0.743165, 9.14783, -4.23676, 3.59289 ) }
    soma_0 { pt3dadd( -0.724623, 8.05833, -3.7634, 4.52551 ) }
    soma_0 { pt3dadd( -0.706081, 6.96884, -3.29004, 5.77296 ) }
    soma_0 { pt3dadd( -0.687539, 5.87934, -2.81667, 7.05591 ) }
    soma_0 { pt3dadd( -0.668997, 4.78984, -2.34331, 7.8981 ) }
    soma_0 { pt3dadd( -0.650455, 3.70034, -1.86994, 8.60513 ) }
    soma_0 { pt3dadd( -0.631913, 2.61085, -1.39658, 9.05081 ) }
    soma_0 { pt3dadd( -0.613372, 1.52135, -0.923215, 9.49138 ) }
    soma_0 { pt3dadd( -0.59483, 0.431853, -0.449851, 9.92405 ) }
    soma_0 { pt3dadd( -0.576288, -0.657644, 0.0235132, 10.0896 ) }
    soma_0 { pt3dadd( -0.557746, -1.74714, 0.496877, 9.7354 ) }
    soma_0 { pt3dadd( -0.539204, -2.83664, 0.970241, 9.3741 ) }
    soma_0 { pt3dadd( -0.520662, -3.92614, 1.44361, 8.98289 ) }
    soma_0 { pt3dadd( -0.50212, -5.01563, 1.91697, 8.2325 ) }
    soma_0 { pt3dadd( -0.483579, -6.10513, 2.39033, 7.41598 ) }
    soma_0 { pt3dadd( -0.465037, -7.19463, 2.8637, 6.43666 ) }
    soma_0 { pt3dadd( -0.446495, -8.28412, 3.33706, 5.40957 ) }
    soma_0 { pt3dadd( -0.427953, -9.37362, 3.81043, 3.13747 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.562971, 11.8432, -13.8565, 1.39 ) }
    dend_20 { pt3dadd( 2.4026, 14.3465, -3.42759, 1.39 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 23/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.72297, 1.55695, 2.93347, 1.11 ) }
    dend_17 { pt3dadd( 8.14042, 4.4877, 4.66431, 1.11 ) }
    dend_17 { pt3dadd( 10.6928, 6.77938, 5.96115, 1.11 ) }
    dend_17 { pt3dadd( 11.862, 7.93259, 6.55635, 1.11 ) }
    dend_17 { pt3dadd( 13.7851, 9.81383, 7.72029, 1.66 ) }
    dend_17 { pt3dadd( 14.978, 11.0181, 8.4755, 0.83 ) }
    dend_17 { pt3dadd( 16.4716, 12.4774, 9.41372, 0.83 ) }
    dend_17 { pt3dadd( 17.5027, 13.45, 10.0729, 1.11 ) }
    dend_17 { pt3dadd( 18.6358, 14.5464, 10.8007, 0.28 ) }
    dend_17 { pt3dadd( 21.5187, 17.2394, 12.853, 0.83 ) }
    dend_17 { pt3dadd( 23.4375, 19.0794, 14.2791, 0.83 ) }
    dend_17 { pt3dadd( 25.2578, 20.8364, 15.6748, 0.83 ) }
    dend_17 { pt3dadd( 26.682, 22.0431, 16.7974, 0.83 ) }
    dend_17 { pt3dadd( 28.2249, 23.1728, 18.0082, 0.83 ) }
    dend_17 { pt3dadd( 30.6992, 24.8921, 19.9367, 0.83 ) }
    dend_17 { pt3dadd( 31.8564, 25.7004, 20.826, 0.83 ) }
    dend_17 { pt3dadd( 34.1156, 27.1465, 22.7365, 0.83 ) }
    dend_17 { pt3dadd( 37.144, 29.0506, 25.5011, 0.83 ) }
    dend_17 { pt3dadd( 38.4857, 29.7863, 26.7469, 0.83 ) }
    dend_17 { pt3dadd( 44.6452, 33.6987, 29.6486, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.09703, -6.8378, 2.32347, 2.77 ) }
    dend_0 { pt3dadd( -1.65132, -9.58949, 2.71851, 2.77 ) }
    dend_0 { pt3dadd( -1.88871, -10.7681, 2.8877, 2.49 ) }
    dend_0 { pt3dadd( -2.16689, -12.149, 3.08596, 2.49 ) }
    dend_0 { pt3dadd( -2.48261, -13.7164, 3.31097, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 48/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.427953, -9.37362, 3.81043, 1.02885 ) }
    axon_0 { pt3dadd( -0.172709, -24.3714, 3.81043, 1.02885 ) }
    axon_0 { pt3dadd( 0.0825348, -39.3693, 3.81043, 1.02885 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.4026, 14.3465, -3.42759, 0.55 ) }
    dend_24 { pt3dadd( -1.79035, 16.9531, -11.1841, 0.55 ) }
    dend_24 { pt3dadd( -2.15205, 17.1779, -11.8532, 2.49 ) }
    dend_24 { pt3dadd( -5.0469, 18.9775, -17.2084, 2.22 ) }
    dend_24 { pt3dadd( -6.89673, 20.1274, -20.6304, 2.22 ) }
    dend_24 { pt3dadd( -9.72112, 21.8832, -25.8552, 2.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 2.4026, 14.3465, -3.42759, 1.39 ) }
    dend_21 { pt3dadd( 3.90356, 16.5952, -11.1775, 1.39 ) }
    dend_21 { pt3dadd( 5.32919, 18.9259, -17.9405, 1.11 ) }
    dend_21 { pt3dadd( 7.06529, 21.9629, -25.7873, 1.11 ) }
    dend_21 { pt3dadd( 7.93542, 23.5003, -29.5047, 1.11 ) }
    dend_21 { pt3dadd( 8.77911, 24.8948, -33.0452, 1.11 ) }
    dend_21 { pt3dadd( 9.21996, 25.6234, -34.8952, 1.11 ) }
    dend_21 { pt3dadd( 9.79051, 26.6244, -37.0549, 1.11 ) }
    dend_21 { pt3dadd( 11.225, 29.2186, -42.1026, 1.11 ) }
    dend_21 { pt3dadd( 11.65, 29.9255, -43.4148, 1.11 ) }
    dend_21 { pt3dadd( 14.0423, 33.8566, -52.1106, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 44.6452, 33.6987, 29.6486, 0.83 ) }
    dend_19 { pt3dadd( 41.4221, 30.4775, 24.8602, 0.83 ) }
    dend_19 { pt3dadd( 38.1892, 26.6546, 20.5693, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 44.6452, 33.6987, 29.6486, 0.83 ) }
    dend_18 { pt3dadd( 32.8407, 30.8757, 32.8711, 0.83 ) }
    dend_18 { pt3dadd( 21.9776, 26.6919, 37.4956, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.48261, -13.7164, 3.31097, 1.11 ) }
    dend_14 { pt3dadd( 0.89805, -15.8351, 3.6298, 1.11 ) }
    dend_14 { pt3dadd( 3.11365, -17.1948, 3.84063, 1.11 ) }
    dend_14 { pt3dadd( 6.15117, -19.0089, 4.12145, 1.11 ) }
    dend_14 { pt3dadd( 9.27484, -20.7374, 4.60957, 1.11 ) }
    dend_14 { pt3dadd( 13.5576, -23.0632, 5.3919, 1.11 ) }
    dend_14 { pt3dadd( 19.765, -26.366, 6.55076, 1.11 ) }
    dend_14 { pt3dadd( 21.3051, -27.1556, 6.95358, 1.11 ) }
    dend_14 { pt3dadd( 24.7111, -28.8112, 7.87275, 1.11 ) }
    dend_14 { pt3dadd( 30.5109, -31.5875, 9.52362, 1.11 ) }
    dend_14 { pt3dadd( 35.0347, -33.7423, 10.8714, 1.11 ) }
    dend_14 { pt3dadd( 41.1755, -36.7531, 12.9937, 1.11 ) }
    dend_14 { pt3dadd( 45.861, -39.1993, 14.8784, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.48261, -13.7164, 3.31097, 2.49 ) }
    dend_1 { pt3dadd( -3.02202, -16.8281, 8.74388, 2.49 ) }
    dend_1 { pt3dadd( -3.20569, -17.8877, 10.5938, 2.49 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 90/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 0.0825348, -39.3693, 3.81043, 0.28 ) }
    axon_1 { pt3dadd( 0.337779, -54.3671, 3.81043, 0.28 ) }
    axon_1 { pt3dadd( 0.593023, -69.3649, 3.81043, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.72112, 21.8832, -25.8552, 1.11 ) }
    dend_32 { pt3dadd( -10.9369, 21.8986, -32.6033, 1.11 ) }
    dend_32 { pt3dadd( -12.0664, 21.913, -38.8721, 1.11 ) }
    dend_32 { pt3dadd( -12.6364, 21.9202, -42.0357, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 97/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.72112, 21.8832, -25.8552, 1.94 ) }
    dend_25 { pt3dadd( -6.85944, 23.3282, -19.3621, 1.94 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 14.0423, 33.8566, -52.1106, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 14.5233, 34.4239, -53.3376, 0.55 ) }
    dend_23 { pt3dadd( 15.0505, 35.1288, -54.4877, 1.39 ) }
    dend_23 { pt3dadd( 15.5438, 35.8002, -55.39, 0.55 ) }
    dend_23 { pt3dadd( 18.7579, 40.4006, -60.6157, 0.55 ) }
    dend_23 { pt3dadd( 19.5283, 41.5957, -61.7099, 0.55 ) }
    dend_23 { pt3dadd( 20.8583, 43.8382, -63.2191, 0.55 ) }
    dend_23 { pt3dadd( 21.323, 44.7209, -63.8117, 0.83 ) }
    dend_23 { pt3dadd( 21.866, 45.8326, -64.4983, 0.55 ) }
    dend_23 { pt3dadd( 22.3036, 46.7916, -65.0752, 0.55 ) }
    dend_23 { pt3dadd( 23.2558, 48.7547, -66.138, 0.55 ) }
    dend_23 { pt3dadd( 24.6046, 51.256, -67.8946, 0.83 ) }
    dend_23 { pt3dadd( 27.4248, 55.7848, -71.5817, 0.55 ) }
    dend_23 { pt3dadd( 27.9725, 56.5758, -72.3972, 0.55 ) }
    dend_23 { pt3dadd( 29.5605, 58.5436, -74.8984, 0.55 ) }
    dend_23 { pt3dadd( 30.3044, 59.2731, -76.0289, 0.55 ) }
    dend_23 { pt3dadd( 31.7391, 60.4059, -78.0211, 0.55 ) }
    dend_23 { pt3dadd( 32.9261, 61.1974, -79.4658, 0.83 ) }
    dend_23 { pt3dadd( 36.6914, 63.5044, -83.1487, 0.83 ) }
    dend_23 { pt3dadd( 38.0367, 64.2938, -84.4189, 0.28 ) }
    dend_23 { pt3dadd( 40.7264, 65.8483, -86.7588, 0.28 ) }
    dend_23 { pt3dadd( 42.6798, 67.0232, -88.4798, 0.28 ) }
    dend_23 { pt3dadd( 44.0685, 67.8644, -89.6413, 0.55 ) }
    dend_23 { pt3dadd( 44.6893, 68.2273, -90.0747, 0.28 ) }
    dend_23 { pt3dadd( 47.4811, 69.7867, -91.3176, 0.28 ) }
    dend_23 { pt3dadd( 48.8837, 70.5502, -92.2679, 0.28 ) }
    dend_23 { pt3dadd( 50.0834, 71.1403, -93.3024, 0.28 ) }
    dend_23 { pt3dadd( 50.6812, 71.4046, -93.8693, 0.28 ) }
    dend_23 { pt3dadd( 53.2525, 72.437, -96.5405, 0.28 ) }
    dend_23 { pt3dadd( 53.9811, 72.7027, -97.3071, 0.28 ) }
    dend_23 { pt3dadd( 60.3039, 74.8632, -104.833, 0.28 ) }
    dend_23 { pt3dadd( 62.5104, 75.4938, -107.552, 0.55 ) }
    dend_23 { pt3dadd( 63.666, 75.7957, -108.919, 0.55 ) }
    dend_23 { pt3dadd( 65.6882, 76.3376, -111.222, 0.28 ) }
    dend_23 { pt3dadd( 66.651, 76.617, -112.285, 0.28 ) }
    dend_23 { pt3dadd( 70.6891, 77.847, -116.103, 0.28 ) }
    dend_23 { pt3dadd( 72.7478, 78.5243, -117.7, 0.28 ) }
    dend_23 { pt3dadd( 75.197, 79.4298, -119.655, 0.28 ) }
    dend_23 { pt3dadd( 81.7515, 82.0992, -124.708, 0.28 ) }
    dend_23 { pt3dadd( 83.5522, 82.8446, -126.01, 0.28 ) }
    dend_23 { pt3dadd( 85.2091, 83.5675, -127.178, 0.28 ) }
    dend_23 { pt3dadd( 88.1186, 84.9254, -129.053, 0.55 ) }
    dend_23 { pt3dadd( 89.0831, 85.4037, -129.729, 0.28 ) }
    dend_23 { pt3dadd( 90.2439, 85.9778, -130.556, 0.28 ) }
    dend_23 { pt3dadd( 95.0952, 88.273, -133.58, 0.28 ) }
    dend_23 { pt3dadd( 96.079, 88.6934, -134.195, 0.28 ) }
    dend_23 { pt3dadd( 98.6065, 89.6715, -135.791, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 46/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 14.0423, 33.8566, -52.1106, 1.11 ) }
    dend_22 { pt3dadd( 20.7247, 38.2519, -50.1835, 1.11 ) }
    dend_22 { pt3dadd( 22.4927, 40.1091, -50.4729, 1.11 ) }
    dend_22 { pt3dadd( 24.5195, 42.2353, -50.9431, 0.55 ) }
    dend_22 { pt3dadd( 25.8, 43.3906, -51.7398, 0.55 ) }
    dend_22 { pt3dadd( 26.7253, 44.1589, -52.4248, 0.55 ) }
    dend_22 { pt3dadd( 27.7607, 44.9798, -53.2023, 0.55 ) }
    dend_22 { pt3dadd( 29.5549, 46.5091, -54.8374, 0.55 ) }
    dend_22 { pt3dadd( 31.2806, 47.9637, -56.4649, 0.55 ) }
    dend_22 { pt3dadd( 35.4739, 51.2469, -60.3307, 0.55 ) }
    dend_22 { pt3dadd( 36.0054, 51.6111, -60.843, 0.83 ) }
    dend_22 { pt3dadd( 37.3749, 52.4545, -62.2294, 0.83 ) }
    dend_22 { pt3dadd( 38.611, 53.136, -63.5498, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 45.861, -39.1993, 14.8784, 0.55 ) }
    dend_16 { pt3dadd( 47.7957, -41.9412, 16.0464, 0.55 ) }
    dend_16 { pt3dadd( 49.9149, -44.4246, 17.1348, 0.55 ) }
    dend_16 { pt3dadd( 51.5657, -46.359, 17.9826, 0.55 ) }
    dend_16 { pt3dadd( 54.5562, -49.8634, 19.5185, 0.28 ) }
    dend_16 { pt3dadd( 56.3009, -51.9079, 20.4146, 0.28 ) }
    dend_16 { pt3dadd( 57.937, -53.8252, 21.2549, 0.28 ) }
    dend_16 { pt3dadd( 59.5424, -55.4501, 22.3494, 0.28 ) }
    dend_16 { pt3dadd( 65.6478, -62.5737, 26.3127, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 45.861, -39.1993, 14.8784, 0.83 ) }
    dend_15 { pt3dadd( 47.2473, -39.9773, 14.6093, 0.83 ) }
    dend_15 { pt3dadd( 49.7706, -41.2825, 14.1807, 0.83 ) }
    dend_15 { pt3dadd( 52.1227, -42.3046, 13.8022, 0.83 ) }
    dend_15 { pt3dadd( 53.8077, -42.9983, 13.5488, 0.83 ) }
    dend_15 { pt3dadd( 54.9003, -43.4589, 13.4011, 0.83 ) }
    dend_15 { pt3dadd( 59.5224, -45.3874, 12.8363, 0.83 ) }
    dend_15 { pt3dadd( 62.0096, -46.4915, 12.6004, 0.83 ) }
    dend_15 { pt3dadd( 64.5834, -47.6916, 12.3309, 0.83 ) }
    dend_15 { pt3dadd( 66.3058, -48.537, 12.1191, 0.83 ) }
    dend_15 { pt3dadd( 69.1945, -50.2392, 11.3999, 0.83 ) }
    dend_15 { pt3dadd( 72.4037, -52.3776, 10.3257, 0.83 ) }
    dend_15 { pt3dadd( 75.6047, -54.6448, 9.1508, 0.83 ) }
    dend_15 { pt3dadd( 79.098, -57.1395, 7.87592, 0.83 ) }
    dend_15 { pt3dadd( 83.3534, -60.2201, 6.19058, 0.83 ) }
    dend_15 { pt3dadd( 90.5199, -65.1732, 3.22011, 0.83 ) }
    dend_15 { pt3dadd( 92.5614, -66.5145, 2.36669, 0.83 ) }
    dend_15 { pt3dadd( 95.9998, -68.7134, 0.985402, 0.83 ) }
    dend_15 { pt3dadd( 100.782, -71.5954, -0.732131, 0.83 ) }
    dend_15 { pt3dadd( 106.712, -74.9317, -2.45837, 0.55 ) }
    dend_15 { pt3dadd( 109.074, -76.1488, -3.0174, 0.55 ) }
    dend_15 { pt3dadd( 112.233, -77.6252, -3.52273, 0.55 ) }
    dend_15 { pt3dadd( 115.497, -79.1023, -4.06323, 0.55 ) }
    dend_15 { pt3dadd( 119.281, -80.8275, -4.52189, 0.55 ) }
    dend_15 { pt3dadd( 123.418, -82.6672, -4.63161, 0.55 ) }
    dend_15 { pt3dadd( 124.849, -83.1808, -4.46132, 0.55 ) }
    dend_15 { pt3dadd( 125.734, -83.4876, -4.29696, 0.28 ) }
    dend_15 { pt3dadd( 130.51, -84.9994, -3.20041, 0.28 ) }
    dend_15 { pt3dadd( 135.257, -86.3518, -1.94407, 0.28 ) }
    dend_15 { pt3dadd( 138.787, -87.3005, -0.84564, 0.28 ) }
    dend_15 { pt3dadd( 144.574, -88.8818, 1.23216, 0.28 ) }
    dend_15 { pt3dadd( 148.092, -89.8079, 2.55068, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_15 { pt3dadd( 149.461, -90.142, 3.07361, 0.28 ) }
    dend_15 { pt3dadd( 158.377, -95.6348, 0.268195, 0.28 ) }
    dend_15 { pt3dadd( 167.859, -100.054, -2.66207, 0.28 ) }
    dend_15 { pt3dadd( 176.829, -106.066, -3.35437, 0.28 ) }
    dend_15 { pt3dadd( 185.663, -112.075, -1.71416, 0.28 ) }
    dend_15 { pt3dadd( 193.867, -119.058, -2.35524, 0.28 ) }
    dend_15 { pt3dadd( 201.252, -126.697, -4.15548, 0.28 ) }
    dend_15 { pt3dadd( 209.865, -132.669, -6.88897, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 8/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.20569, -17.8877, 10.5938, 0.83 ) }
    dend_9 { pt3dadd( -5.56632, -18.5422, 9.50522, 0.83 ) }
    dend_9 { pt3dadd( -7.10245, -18.9673, 8.91511, 0.83 ) }
    dend_9 { pt3dadd( -12.7309, -20.4073, 7.05349, 0.83 ) }
    dend_9 { pt3dadd( -17.3334, -21.7095, 5.48368, 0.83 ) }
    dend_9 { pt3dadd( -18.9262, -22.1985, 4.93727, 0.83 ) }
    dend_9 { pt3dadd( -22.6333, -23.4734, 3.73499, 0.83 ) }
    dend_9 { pt3dadd( -23.6457, -23.8362, 3.48825, 0.83 ) }
    dend_9 { pt3dadd( -25.5474, -24.5703, 3.19036, 0.83 ) }
    dend_9 { pt3dadd( -27.7813, -25.5014, 3.14373, 0.83 ) }
    dend_9 { pt3dadd( -28.1986, -25.6738, 3.12849, 0.83 ) }
    dend_9 { pt3dadd( -29.9304, -26.3462, 3.29038, 0.83 ) }
    dend_9 { pt3dadd( -31.9174, -27.1189, 3.69295, 0.83 ) }
    dend_9 { pt3dadd( -34.0249, -27.9394, 4.19339, 0.83 ) }
    dend_9 { pt3dadd( -35.6919, -28.5647, 4.69674, 0.83 ) }
    dend_9 { pt3dadd( -38.7629, -29.559, 5.79493, 0.83 ) }
    dend_9 { pt3dadd( -40.7783, -30.1522, 6.50754, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.20569, -17.8877, 10.5938, 2.22 ) }
    dend_2 { pt3dadd( -4.08215, -21.722, 10.169, 2.22 ) }
    dend_2 { pt3dadd( -5.08883, -26.1259, 9.68112, 2.22 ) }
    dend_2 { pt3dadd( -5.60437, -28.3813, 9.43122, 2.22 ) }
    dend_2 { pt3dadd( -6.02233, -30.2097, 9.22868, 2.22 ) }
    dend_2 { pt3dadd( -7.84434, -38.1805, 8.34563, 2.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -12.6364, 21.9202, -42.0357, 0.83 ) }
    dend_40 { pt3dadd( -13.4347, 22.417, -43.2205, 0.83 ) }
    dend_40 { pt3dadd( -16.3367, 24.788, -49.6883, 0.83 ) }
    dend_40 { pt3dadd( -18.6861, 26.9105, -55.5007, 0.83 ) }
    dend_40 { pt3dadd( -19.6723, 27.8407, -58.2885, 0.83 ) }
    dend_40 { pt3dadd( -19.9892, 28.1317, -59.1797, 0.83 ) }
    dend_40 { pt3dadd( -22.9848, 30.8784, -68.3673, 0.83 ) }
    dend_40 { pt3dadd( -27.4886, 35.0581, -83.3448, 0.83 ) }
    dend_40 { pt3dadd( -28.3099, 35.8472, -86.2348, 0.83 ) }
    dend_40 { pt3dadd( -31.6502, 39.087, -96.6828, 0.55 ) }
    dend_40 { pt3dadd( -32.5749, 39.9405, -99.1767, 0.83 ) }
    dend_40 { pt3dadd( -37.4971, 44.4535, -110.876, 0.55 ) }
    dend_40 { pt3dadd( -38.1862, 45.0453, -112.148, 0.55 ) }
    dend_40 { pt3dadd( -39.7844, 46.4218, -114.455, 0.55 ) }
    dend_40 { pt3dadd( -45.5509, 51.655, -122.644, 0.55 ) }
    dend_40 { pt3dadd( -47.4207, 53.4937, -125.041, 0.83 ) }
    dend_40 { pt3dadd( -54.0713, 61.0717, -133.595, 0.55 ) }
    dend_40 { pt3dadd( -57.1313, 65.0599, -137.405, 0.55 ) }
    dend_40 { pt3dadd( -58.1903, 66.6991, -139.062, 0.55 ) }
    dend_40 { pt3dadd( -61.7337, 73.4169, -146.029, 0.55 ) }
    dend_40 { pt3dadd( -63.6517, 77.9248, -150.762, 0.55 ) }
    dend_40 { pt3dadd( -65.1926, 82.0408, -154.849, 0.83 ) }
    dend_40 { pt3dadd( -66.0691, 84.785, -157.178, 0.55 ) }
    dend_40 { pt3dadd( -67.8894, 91.3451, -162.635, 0.55 ) }
    dend_40 { pt3dadd( -68.7481, 94.7037, -165.656, 0.55 ) }
    dend_40 { pt3dadd( -69.9541, 99.6499, -170.053, 0.55 ) }
    dend_40 { pt3dadd( -70.4445, 101.701, -172.14, 0.55 ) }
    dend_40 { pt3dadd( -71.0925, 103.957, -174.548, 0.83 ) }
    dend_40 { pt3dadd( -71.7999, 106.305, -176.837, 0.55 ) }
    dend_40 { pt3dadd( -74.4541, 114.759, -184.217, 0.55 ) }
    dend_40 { pt3dadd( -75.2138, 117.255, -186.518, 0.55 ) }
    dend_40 { pt3dadd( -76.4008, 121.087, -190.173, 0.55 ) }
    dend_40 { pt3dadd( -77.4609, 124.181, -193.061, 0.55 ) }
    dend_40 { pt3dadd( -78.4728, 127.08, -195.698, 0.83 ) }
    dend_40 { pt3dadd( -78.6421, 127.572, -196.168, 0.55 ) }
    dend_40 { pt3dadd( -81.4189, 134.792, -202.977, 0.55 ) }
    dend_40 { pt3dadd( -82.8922, 138.41, -206.764, 0.55 ) }
    dend_40 { pt3dadd( -84.5836, 142.525, -211.251, 0.83 ) }
    dend_40 { pt3dadd( -85.5227, 144.79, -213.861, 0.55 ) }
    dend_40 { pt3dadd( -88.8131, 152.476, -223.188, 0.55 ) }
    dend_40 { pt3dadd( -89.6476, 154.367, -225.468, 0.55 ) }
    dend_40 { pt3dadd( -91.4397, 157.906, -229.634, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -12.6364, 21.9202, -42.0357, 1.11 ) }
    dend_33 { pt3dadd( -12.5891, 21.6724, -41.1876, 1.11 ) }
    dend_33 { pt3dadd( -12.5352, 21.3898, -40.22, 1.11 ) }
    dend_33 { pt3dadd( -11.9596, 18.3715, -29.8869, 1.11 ) }
    dend_33 { pt3dadd( -11.8821, 17.9651, -28.4958, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 78/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -6.85944, 23.3282, -19.3621, 1.11 ) }
    dend_29 { pt3dadd( -8.37164, 24.4446, -18.7325, 1.11 ) }
    dend_29 { pt3dadd( -9.19689, 25.0783, -18.3689, 1.11 ) }
    dend_29 { pt3dadd( -10.8412, 26.4668, -17.7895, 1.11 ) }
    dend_29 { pt3dadd( -12.2839, 27.7635, -17.3865, 1.11 ) }
    dend_29 { pt3dadd( -14.8452, 30.1118, -16.9741, 1.11 ) }
    dend_29 { pt3dadd( -17.1583, 32.2481, -16.4358, 1.11 ) }
    dend_29 { pt3dadd( -19.7083, 34.5665, -15.6862, 1.11 ) }
    dend_29 { pt3dadd( -21.9322, 36.5642, -14.8028, 1.11 ) }
    dend_29 { pt3dadd( -24.0706, 38.4621, -13.723, 0.83 ) }
    dend_29 { pt3dadd( -26.6929, 40.6807, -12.2573, 0.83 ) }
    dend_29 { pt3dadd( -31.1015, 44.1539, -9.42725, 0.83 ) }
    dend_29 { pt3dadd( -33.4486, 45.8765, -7.83668, 0.83 ) }
    dend_29 { pt3dadd( -36.7735, 48.1707, -5.47799, 0.83 ) }
    dend_29 { pt3dadd( -38.3731, 49.1919, -4.34216, 0.83 ) }
    dend_29 { pt3dadd( -40.2785, 50.3452, -3.07949, 0.83 ) }
    dend_29 { pt3dadd( -41.8303, 51.252, -2.18831, 0.83 ) }
    dend_29 { pt3dadd( -44.5274, 52.8292, -0.963138, 0.83 ) }
    dend_29 { pt3dadd( -47.3528, 54.5441, 0.202804, 0.83 ) }
    dend_29 { pt3dadd( -49.4544, 55.812, 0.969993, 0.55 ) }
    dend_29 { pt3dadd( -51.1772, 56.876, 1.58934, 0.55 ) }
    dend_29 { pt3dadd( -52.5412, 57.718, 2.09858, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( -57.6002, 60.987, 4.25764, 0.55 ) }
    dend_29 { pt3dadd( -58.991, 61.9123, 4.89439, 0.83 ) }
    dend_29 { pt3dadd( -61.1358, 63.4457, 5.85304, 0.83 ) }
    dend_29 { pt3dadd( -63.1734, 65.0057, 6.79797, 0.83 ) }
    dend_29 { pt3dadd( -64.9795, 66.4877, 7.5607, 0.83 ) }
    dend_29 { pt3dadd( -67.3883, 68.5337, 8.53734, 0.55 ) }
    dend_29 { pt3dadd( -69.1181, 70.022, 9.13441, 0.55 ) }
    dend_29 { pt3dadd( -71.9677, 72.56, 10.2526, 0.55 ) }
    dend_29 { pt3dadd( -72.4497, 73.0284, 10.4596, 0.55 ) }
    dend_29 { pt3dadd( -74.677, 75.2701, 11.4774, 0.55 ) }
    dend_29 { pt3dadd( -76.672, 77.2662, 12.3665, 0.55 ) }
    dend_29 { pt3dadd( -77.2479, 77.8069, 12.5838, 0.55 ) }
    dend_29 { pt3dadd( -78.1484, 78.6757, 12.996, 0.55 ) }
    dend_29 { pt3dadd( -78.9132, 79.473, 13.4537, 0.55 ) }
    dend_29 { pt3dadd( -80.5551, 81.203, 14.5136, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.85944, 23.3282, -19.3621, 1.66 ) }
    dend_26 { pt3dadd( -7.01523, 26.9687, -18.1615, 1.66 ) }
    dend_26 { pt3dadd( -7.09852, 28.9151, -17.5195, 1.66 ) }
    dend_26 { pt3dadd( -7.24609, 32.3633, -16.3822, 1.39 ) }
    dend_26 { pt3dadd( -7.38691, 35.6541, -15.2969, 1.39 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 20/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -40.7783, -30.1522, 6.50754, 0.55 ) }
    dend_11 { pt3dadd( -44.1381, -33.4551, 10.9036, 0.55 ) }
    dend_11 { pt3dadd( -47.1957, -36.4608, 14.9043, 0.55 ) }
    dend_11 { pt3dadd( -48.205, -37.453, 16.2249, 0.28 ) }
    dend_11 { pt3dadd( -49.5767, -38.8014, 18.0197, 0.28 ) }
    dend_11 { pt3dadd( -52.7112, -41.8827, 22.121, 0.28 ) }
    dend_11 { pt3dadd( -54.2492, -43.3947, 24.1335, 0.28 ) }
    dend_11 { pt3dadd( -60.8896, -48.3207, 32.9116, 0.28 ) }
    dend_11 { pt3dadd( -67.0103, -52.6105, 42.3954, 0.28 ) }
    dend_11 { pt3dadd( -71.7672, -58.0197, 52.0655, 0.28 ) }
    dend_11 { pt3dadd( -78.102, -62.4711, 61.3263, 0.28 ) }
    dend_11 { pt3dadd( -83.4674, -65.2392, 71.8144, 0.28 ) }
    dend_11 { pt3dadd( -89.7873, -65.7286, 82.1404, 0.28 ) }
    dend_11 { pt3dadd( -94.3104, -66.3308, 93.3655, 0.28 ) }
    dend_11 { pt3dadd( -98.9182, -64.8172, 104.464, 0.28 ) }
    dend_11 { pt3dadd( -102.505, -61.5326, 115.532, 0.28 ) }
    dend_11 { pt3dadd( -105.172, -57.352, 126.538, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -40.7783, -30.1522, 6.50754, 0.55 ) }
    dend_10 { pt3dadd( -42.2626, -29.9417, 6.38213, 0.55 ) }
    dend_10 { pt3dadd( -45.1636, -29.6852, 6.26319, 0.55 ) }
    dend_10 { pt3dadd( -46.6312, -29.5983, 6.31821, 0.55 ) }
    dend_10 { pt3dadd( -49.6425, -29.6017, 6.65862, 0.55 ) }
    dend_10 { pt3dadd( -52.8304, -29.6054, 7.01899, 0.55 ) }
    dend_10 { pt3dadd( -53.1938, -29.6058, 7.06007, 0.55 ) }
    dend_10 { pt3dadd( -55.9575, -29.7111, 7.41748, 0.55 ) }
    dend_10 { pt3dadd( -59.2403, -29.934, 7.87409, 0.55 ) }
    dend_10 { pt3dadd( -63.1304, -30.3265, 8.66684, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 47/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.84434, -38.1805, 8.34563, 0.83 ) }
    dend_6 { pt3dadd( -8.39794, -40.2484, 6.44514, 0.83 ) }
    dend_6 { pt3dadd( -8.53712, -40.769, 5.94535, 0.83 ) }
    dend_6 { pt3dadd( -8.83175, -41.924, 4.72728, 0.83 ) }
    dend_6 { pt3dadd( -8.96109, -42.4413, 4.22121, 0.83 ) }
    dend_6 { pt3dadd( -9.80875, -45.6593, 0.869862, 0.83 ) }
    dend_6 { pt3dadd( -10.1064, -46.7891, -0.306835, 0.83 ) }
    dend_6 { pt3dadd( -10.4143, -47.7054, -1.38323, 0.83 ) }
    dend_6 { pt3dadd( -11.1193, -49.7229, -3.89533, 0.83 ) }
    dend_6 { pt3dadd( -11.5565, -50.9886, -5.57512, 0.83 ) }
    dend_6 { pt3dadd( -12.1688, -52.8066, -7.92212, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.84434, -38.1805, 8.34563, 1.94 ) }
    dend_3 { pt3dadd( -8.52006, -47.7474, 14.1673, 1.94 ) }
    dend_3 { pt3dadd( -8.57531, -50.447, 15.6616, 1.94 ) }
    dend_3 { pt3dadd( -8.4788, -52.4182, 16.6878, 1.94 ) }
    dend_3 { pt3dadd( -8.29834, -55.3419, 18.0252, 1.94 ) }
    dend_3 { pt3dadd( -8.16902, -57.4371, 18.9836, 1.94 ) }
    dend_3 { pt3dadd( -8.05698, -59.2524, 19.814, 1.94 ) }
    dend_3 { pt3dadd( -7.80325, -63.1649, 19.8355, 1.94 ) }
    dend_3 { pt3dadd( -7.54244, -64.7851, 19.968, 1.94 ) }
    dend_3 { pt3dadd( -7.0401, -66.5982, 20.4233, 1.66 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 68/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -91.4397, 157.906, -229.634, 0.55 ) }
    dend_42 { pt3dadd( -91.6891, 162.701, -237.578, 0.55 ) }
    dend_42 { pt3dadd( -91.7771, 164.393, -240.383, 0.83 ) }
    dend_42 { pt3dadd( -92.0993, 170.586, -250.645, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 72/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -91.4397, 157.906, -229.634, 0.28 ) }
    dend_41 { pt3dadd( -94.8572, 162.684, -231.155, 0.28 ) }
    dend_41 { pt3dadd( -98.1734, 167.321, -232.632, 0.55 ) }
    dend_41 { pt3dadd( -104.026, 175.503, -235.238, 0.55 ) }
    dend_41 { pt3dadd( -107.961, 181.005, -236.99, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 77/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.8821, 17.9651, -28.4958, 0.83 ) }
    dend_37 { pt3dadd( -6.29677, 21.3555, -33.4662, 0.83 ) }
    dend_37 { pt3dadd( 3.28975, 27.461, -42.9133, 0.83 ) }
    dend_37 { pt3dadd( 5.66053, 28.8388, -45.4737, 0.83 ) }
    dend_37 { pt3dadd( 7.75592, 30.0566, -47.7366, 0.83 ) }
    dend_37 { pt3dadd( 13.1365, 33.1836, -53.5473, 0.83 ) }
    dend_37 { pt3dadd( 15.2545, 34.4146, -55.8347, 0.83 ) }
    dend_37 { pt3dadd( 21.7873, 37.937, -63.43, 0.83 ) }
    dend_37 { pt3dadd( 27.9581, 41.4547, -69.7165, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.8821, 17.9651, -28.4958, 0.83 ) }
    dend_34 { pt3dadd( -21.3583, 16.2032, -10.1382, 0.83 ) }
    dend_34 { pt3dadd( -22.9782, 15.8135, -6.46223, 0.83 ) }
    dend_34 { pt3dadd( -24.3569, 15.3293, -2.51813, 0.83 ) }
    dend_34 { pt3dadd( -24.3163, 14.7381, -0.0766993, 0.83 ) }
    dend_34 { pt3dadd( -24.8105, 15.3173, -1.86821, 0.83 ) }
    dend_34 { pt3dadd( -25.4861, 15.9397, -3.88881, 0.83 ) }
    dend_34 { pt3dadd( -26.9207, 16.8707, -7.16827, 0.83 ) }
    dend_34 { pt3dadd( -27.5864, 17.2104, -8.69573, 0.83 ) }
    dend_34 { pt3dadd( -30.0096, 18.19, -13.8305, 0.83 ) }
    dend_34 { pt3dadd( -31.4638, 18.5297, -16.7815, 0.83 ) }
    dend_34 { pt3dadd( -33.184, 18.6112, -20.216, 0.83 ) }
    dend_34 { pt3dadd( -34.3308, 18.4644, -22.2443, 0.83 ) }
    dend_34 { pt3dadd( -35.6191, 18.0744, -24.1651, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( -37.9433, 17.0478, -26.9463, 0.83 ) }
    dend_34 { pt3dadd( -39.8613, 16.0002, -28.6701, 0.83 ) }
    dend_34 { pt3dadd( -41.2417, 15.2865, -29.7041, 0.83 ) }
    dend_34 { pt3dadd( -42.9744, 14.4936, -30.8186, 0.83 ) }
    dend_34 { pt3dadd( -45.7796, 13.4333, -32.6946, 0.83 ) }
    dend_34 { pt3dadd( -48.5511, 12.643, -34.7259, 0.83 ) }
    dend_34 { pt3dadd( -50.1101, 12.2925, -35.647, 0.83 ) }
    dend_34 { pt3dadd( -54.0952, 11.5026, -37.9735, 0.83 ) }
    dend_34 { pt3dadd( -56.9282, 11.0559, -39.674, 0.83 ) }
    dend_34 { pt3dadd( -60.8511, 10.6749, -42.3058, 0.55 ) }
    dend_34 { pt3dadd( -64.0716, 10.6832, -44.722, 0.55 ) }
    dend_34 { pt3dadd( -71.3227, 11.7313, -50.7225, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 12/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -80.5551, 81.203, 14.5136, 0.55 ) }
    dend_31 { pt3dadd( -83.0034, 81.6512, 16.6354, 0.55 ) }
    dend_31 { pt3dadd( -88.2582, 82.6133, 21.1895, 0.55 ) }
    dend_31 { pt3dadd( -93.7313, 83.6153, 25.9327, 0.55 ) }
    dend_31 { pt3dadd( -104.516, 84.6052, 35.7723, 0.55 ) }
    dend_31 { pt3dadd( -115.742, 86.3348, 44.9961, 0.55 ) }
    dend_31 { pt3dadd( -125.346, 90.2843, 55.2825, 0.55 ) }
    dend_31 { pt3dadd( -134.189, 92.4087, 66.7434, 0.55 ) }
    dend_31 { pt3dadd( -142.952, 92.4822, 78.4587, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -80.5551, 81.203, 14.5136, 0.55 ) }
    dend_30 { pt3dadd( -81.4717, 84.1801, 15.6387, 0.55 ) }
    dend_30 { pt3dadd( -81.8784, 85.9055, 16.0284, 0.55 ) }
    dend_30 { pt3dadd( -82.8836, 91.5663, 16.815, 0.55 ) }
    dend_30 { pt3dadd( -83.7411, 96.3567, 17.8364, 0.55 ) }
    dend_30 { pt3dadd( -84.493, 100.657, 18.9093, 0.55 ) }
    dend_30 { pt3dadd( -85.0996, 103.943, 19.7259, 0.55 ) }
    dend_30 { pt3dadd( -85.9175, 108.754, 20.886, 0.55 ) }
    dend_30 { pt3dadd( -86.493, 112.345, 21.5627, 0.55 ) }
    dend_30 { pt3dadd( -87.6534, 119.587, 22.1672, 0.28 ) }
    dend_30 { pt3dadd( -88.1377, 122.24, 22.4695, 0.55 ) }
    dend_30 { pt3dadd( -88.8007, 125.36, 22.8753, 0.28 ) }
    dend_30 { pt3dadd( -89.6483, 128.657, 23.3744, 0.28 ) }
    dend_30 { pt3dadd( -90.5044, 131.62, 23.9158, 0.55 ) }
    dend_30 { pt3dadd( -91.865, 136.214, 24.2597, 0.55 ) }
    dend_30 { pt3dadd( -93.4514, 142.333, 23.6141, 0.55 ) }
    dend_30 { pt3dadd( -94.3323, 153.999, 26.8061, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.38691, 35.6541, -15.2969, 1.11 ) }
    dend_28 { pt3dadd( -9.34622, 37.1195, -13.9551, 1.11 ) }
    dend_28 { pt3dadd( -12.9084, 39.7247, -11.1826, 1.11 ) }
    dend_28 { pt3dadd( -17.0623, 42.6516, -7.7337, 1.11 ) }
    dend_28 { pt3dadd( -19.3666, 44.3482, -5.81387, 0.83 ) }
    dend_28 { pt3dadd( -29.7511, 51.7602, 3.70932, 1.11 ) }
    dend_28 { pt3dadd( -31.9297, 53.3728, 5.80428, 1.11 ) }
    dend_28 { pt3dadd( -35.6573, 55.9608, 9.95692, 1.11 ) }
    dend_28 { pt3dadd( -40.239, 58.8961, 15.3843, 1.11 ) }
    dend_28 { pt3dadd( -42.0341, 59.9223, 17.5872, 1.11 ) }
    dend_28 { pt3dadd( -47.9429, 63.2175, 24.6484, 1.11 ) }
    dend_28 { pt3dadd( -49.9657, 64.2787, 26.8065, 0.55 ) }
    dend_28 { pt3dadd( -54.7519, 66.5428, 31.9236, 0.55 ) }
    dend_28 { pt3dadd( -57.3556, 67.6792, 34.6793, 0.55 ) }
    dend_28 { pt3dadd( -61.421, 69.328, 38.684, 0.83 ) }
    dend_28 { pt3dadd( -63.5342, 70.1526, 40.6842, 0.83 ) }
    dend_28 { pt3dadd( -68.3217, 72.2844, 45.1517, 0.83 ) }
    dend_28 { pt3dadd( -69.5167, 72.9063, 46.3722, 0.83 ) }
    dend_28 { pt3dadd( -72.6997, 75.0357, 49.8743, 0.83 ) }
    dend_28 { pt3dadd( -74.2451, 76.3252, 51.7433, 0.83 ) }
    dend_28 { pt3dadd( -79.6529, 81.3037, 58.0129, 0.83 ) }
    dend_28 { pt3dadd( -83.0025, 84.6859, 61.8317, 0.83 ) }
    dend_28 { pt3dadd( -84.8101, 86.7791, 63.8719, 0.83 ) }
    dend_28 { pt3dadd( -87.9798, 90.7413, 67.3202, 0.83 ) }
    dend_28 { pt3dadd( -90.3194, 94.0081, 69.8602, 0.83 ) }
    dend_28 { pt3dadd( -92.1945, 96.8327, 71.8399, 0.83 ) }
    dend_28 { pt3dadd( -94.2519, 100.312, 73.3891, 0.83 ) }
    dend_28 { pt3dadd( -95.1747, 101.758, 73.826, 0.83 ) }
    dend_28 { pt3dadd( -96.8476, 104.005, 74.3515, 0.83 ) }
    dend_28 { pt3dadd( -105.271, 109.509, 86.1325, 0.83 ) }
    dend_28 { pt3dadd( -111.812, 116.103, 98.514, 0.83 ) }
    dend_28 { pt3dadd( -117.572, 122.807, 111.225, 0.83 ) }
    dend_28 { pt3dadd( -122.188, 130.659, 123.714, 0.83 ) }
    dend_28 { pt3dadd( -124.34, 139.306, 136.345, 0.83 ) }
    dend_28 { pt3dadd( -124.137, 150.66, 146.741, 0.83 ) }
    dend_28 { pt3dadd( -124.763, 163.32, 155.38, 0.83 ) }
    dend_28 { pt3dadd( -125.442, 176.614, 162.953, 0.83 ) }
    dend_28 { pt3dadd( -125.292, 188.965, 172.083, 0.83 ) }
    dend_28 { pt3dadd( -125.237, 202.574, 179.103, 0.83 ) }
    dend_28 { pt3dadd( -123.015, 215.408, 187.262, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 78/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -7.38691, 35.6541, -15.2969, 1.11 ) }
    dend_27 { pt3dadd( -4.29225, 36.5117, -14.7689, 1.11 ) }
    dend_27 { pt3dadd( -1.58276, 37.2536, -14.149, 1.11 ) }
    dend_27 { pt3dadd( 1.64313, 38.2398, -13.4512, 1.11 ) }
    dend_27 { pt3dadd( 4.26596, 39.0957, -12.901, 1.11 ) }
    dend_27 { pt3dadd( 7.47262, 40.1821, -12.3803, 1.11 ) }
    dend_27 { pt3dadd( 11.3051, 41.5897, -11.8631, 1.11 ) }
    dend_27 { pt3dadd( 14.7958, 42.9988, -11.5368, 1.11 ) }
    dend_27 { pt3dadd( 23.5222, 46.9516, -11.1845, 1.11 ) }
    dend_27 { pt3dadd( 27.3175, 49.0125, -11.2085, 0.83 ) }
    dend_27 { pt3dadd( 31.6876, 51.8272, -11.569, 0.83 ) }
    dend_27 { pt3dadd( 33.9268, 53.5393, -11.9307, 0.83 ) }
    dend_27 { pt3dadd( 37.4468, 56.6978, -12.8224, 0.83 ) }
    dend_27 { pt3dadd( 39.7945, 59.2888, -13.7103, 0.83 ) }
    dend_27 { pt3dadd( 42.4507, 63.1112, -15.1343, 0.83 ) }
    dend_27 { pt3dadd( 44.4045, 66.3979, -16.303, 0.83 ) }
    dend_27 { pt3dadd( 45.7131, 68.7106, -17.0046, 0.83 ) }
    dend_27 { pt3dadd( 46.5161, 70.0148, -17.3534, 0.83 ) }
    dend_27 { pt3dadd( 49.2106, 73.8882, -18.1141, 0.83 ) }
    dend_27 { pt3dadd( 51.3323, 76.4064, -18.5493, 0.83 ) }
    dend_27 { pt3dadd( 52.9221, 77.965, -18.714, 0.83 ) }
    dend_27 { pt3dadd( 55.5885, 80.1631, -18.8194, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 57.9347, 81.9188, -18.885, 0.83 ) }
    dend_27 { pt3dadd( 60.5926, 83.781, -18.8379, 0.83 ) }
    dend_27 { pt3dadd( 62.1447, 84.854, -18.7194, 0.83 ) }
    dend_27 { pt3dadd( 64.2644, 86.4025, -18.5581, 0.83 ) }
    dend_27 { pt3dadd( 68.424, 89.7456, -18.2131, 0.83 ) }
    dend_27 { pt3dadd( 70.4848, 91.7369, -18.2711, 0.83 ) }
    dend_27 { pt3dadd( 72.3127, 93.709, -18.4691, 0.83 ) }
    dend_27 { pt3dadd( 74.7139, 96.5069, -18.8577, 0.83 ) }
    dend_27 { pt3dadd( 77.1969, 99.6228, -19.3367, 0.83 ) }
    dend_27 { pt3dadd( 79.4462, 102.583, -19.8453, 0.83 ) }
    dend_27 { pt3dadd( 84.0818, 109.029, -21.5423, 0.83 ) }
    dend_27 { pt3dadd( 85.0741, 110.451, -22.0451, 0.55 ) }
    dend_27 { pt3dadd( 86.7746, 112.971, -23.2387, 0.55 ) }
    dend_27 { pt3dadd( 87.8246, 114.657, -24.1566, 0.55 ) }
    dend_27 { pt3dadd( 89.5472, 117.626, -25.6565, 0.55 ) }
    dend_27 { pt3dadd( 92.9245, 123.932, -28.3354, 0.55 ) }
    dend_27 { pt3dadd( 93.6532, 125.353, -28.7646, 0.55 ) }
    dend_27 { pt3dadd( 95.5247, 129.109, -29.6878, 0.83 ) }
    dend_27 { pt3dadd( 97.9193, 133.91, -30.4822, 0.55 ) }
    dend_27 { pt3dadd( 100.358, 138.986, -30.8605, 0.55 ) }
    dend_27 { pt3dadd( 101.509, 141.633, -30.7672, 0.28 ) }
    dend_27 { pt3dadd( 102.651, 144.537, -30.3518, 0.28 ) }
    dend_27 { pt3dadd( 103.673, 147.382, -29.8807, 0.55 ) }
    dend_27 { pt3dadd( 105.083, 151.656, -29.0359, 0.28 ) }
    dend_27 { pt3dadd( 105.961, 154.398, -28.6854, 0.55 ) }
    dend_27 { pt3dadd( 106.754, 157.05, -28.7066, 0.55 ) }
    dend_27 { pt3dadd( 107.414, 159.401, -28.7177, 0.28 ) }
    dend_27 { pt3dadd( 108.106, 162.078, -28.6736, 0.28 ) }
    dend_27 { pt3dadd( 108.688, 164.464, -28.5961, 0.28 ) }
    dend_27 { pt3dadd( 110.051, 169.897, -28.4333, 0.55 ) }
    dend_27 { pt3dadd( 111.835, 176.158, -28.2203, 0.28 ) }
    dend_27 { pt3dadd( 113.295, 180.947, -28.0319, 0.28 ) }
    dend_27 { pt3dadd( 114.758, 185.494, -27.8008, 0.28 ) }
    dend_27 { pt3dadd( 115.264, 187.056, -27.6841, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -105.172, -57.352, 126.538, 0.28 ) }
    dend_13 { pt3dadd( -109.285, -60.3348, 135.381, 0.28 ) }
    dend_13 { pt3dadd( -113.346, -63.0131, 144.349, 0.28 ) }
    dend_13 { pt3dadd( -116.425, -65.7405, 153.689, 0.28 ) }
    dend_13 { pt3dadd( -120.86, -68.7322, 162.37, 0.28 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -105.172, -57.352, 126.538, 0.28 ) }
    dend_12 { pt3dadd( -111.513, -59.918, 138.247, 0.28 ) }
    dend_12 { pt3dadd( -116.612, -63.7854, 150.192, 0.28 ) }
    dend_12 { pt3dadd( -123.275, -68.7836, 160.848, 0.28 ) }
    dend_12 { pt3dadd( -131.096, -74.2319, 170.419, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 44/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.1688, -52.8066, -7.92212, 0.83 ) }
    dend_8 { pt3dadd( -11.754, -54.1566, -10.2332, 0.83 ) }
    dend_8 { pt3dadd( -11.6001, -55.247, -12.5909, 0.83 ) }
    dend_8 { pt3dadd( -11.5315, -56.2314, -14.7874, 0.83 ) }
    dend_8 { pt3dadd( -11.4946, -56.7229, -15.805, 0.83 ) }
    dend_8 { pt3dadd( -11.3591, -58.5842, -19.3906, 0.83 ) }
    dend_8 { pt3dadd( -11.3376, -59.8741, -21.7888, 0.83 ) }
    dend_8 { pt3dadd( -11.4225, -62.1239, -26.0305, 0.83 ) }
    dend_8 { pt3dadd( -11.4972, -63.0181, -27.8006, 0.55 ) }
    dend_8 { pt3dadd( -11.5397, -64.0784, -29.7995, 0.55 ) }
    dend_8 { pt3dadd( -11.5712, -64.5721, -30.6799, 0.55 ) }
    dend_8 { pt3dadd( -11.6302, -66.0612, -32.9926, 0.55 ) }
    dend_8 { pt3dadd( -11.6574, -66.8778, -34.2112, 0.55 ) }
    dend_8 { pt3dadd( -11.3989, -69.2422, -37.4667, 0.55 ) }
    dend_8 { pt3dadd( -11.2883, -70.1771, -39.0239, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -12.1688, -52.8066, -7.92212, 0.83 ) }
    dend_7 { pt3dadd( -13.7436, -55.5683, -7.19591, 0.83 ) }
    dend_7 { pt3dadd( -14.4268, -56.6506, -6.87723, 0.83 ) }
    dend_7 { pt3dadd( -15.0791, -57.757, -6.58233, 0.83 ) }
    dend_7 { pt3dadd( -16.3361, -59.9647, -6.02615, 0.83 ) }
    dend_7 { pt3dadd( -17.1141, -61.3502, -5.68675, 0.83 ) }
    dend_7 { pt3dadd( -18.0676, -63.0059, -5.26976, 0.83 ) }
    dend_7 { pt3dadd( -18.592, -63.9894, -4.97786, 0.83 ) }
    dend_7 { pt3dadd( -19.6078, -65.68, -4.47257, 0.83 ) }
    dend_7 { pt3dadd( -20.0416, -66.3475, -4.28408, 0.83 ) }
    dend_7 { pt3dadd( -20.6553, -67.2669, -4.0533, 0.83 ) }
    dend_7 { pt3dadd( -21.1573, -68.1194, -3.86014, 0.83 ) }
    dend_7 { pt3dadd( -21.7367, -69.2835, -3.63624, 0.83 ) }
    dend_7 { pt3dadd( -22.38, -71.0203, -3.07971, 0.83 ) }
    dend_7 { pt3dadd( -23.0585, -73.5617, -2.0587, 0.83 ) }
    dend_7 { pt3dadd( -23.3812, -75.1836, -1.33667, 0.83 ) }
    dend_7 { pt3dadd( -23.6704, -77.2234, -0.409056, 0.83 ) }
    dend_7 { pt3dadd( -23.7265, -78.5282, 0.211451, 0.83 ) }
    dend_7 { pt3dadd( -23.5859, -83.9456, 2.81862, 0.83 ) }
    dend_7 { pt3dadd( -23.4472, -85.7896, 3.67213, 0.83 ) }
    dend_7 { pt3dadd( -23.3441, -87.0931, 4.30217, 0.83 ) }
    dend_7 { pt3dadd( -23.199, -89.1323, 5.35067, 0.83 ) }
    dend_7 { pt3dadd( -22.957, -91.8743, 6.85337, 0.83 ) }
    dend_7 { pt3dadd( -22.847, -93.5154, 7.73464, 0.83 ) }
    dend_7 { pt3dadd( -22.8584, -95.9476, 8.9476, 0.83 ) }
    dend_7 { pt3dadd( -22.8785, -97.8578, 9.95572, 0.83 ) }
    dend_7 { pt3dadd( -22.9621, -101.082, 11.8269, 0.83 ) }
    dend_7 { pt3dadd( -23.2102, -104.259, 13.8091, 0.83 ) }
    dend_7 { pt3dadd( -23.4515, -105.72, 14.7727, 0.83 ) }
    dend_7 { pt3dadd( -23.8068, -107.35, 16.0363, 0.83 ) }
    dend_7 { pt3dadd( -24.2487, -108.759, 17.2963, 0.83 ) }
    dend_7 { pt3dadd( -25.0808, -110.772, 19.1411, 0.83 ) }
    dend_7 { pt3dadd( -25.8622, -112.037, 20.5364, 0.83 ) }
    dend_7 { pt3dadd( -26.5929, -113.093, 21.8145, 0.83 ) }
    dend_7 { pt3dadd( -27.5909, -114.615, 23.8256, 0.83 ) }
    dend_7 { pt3dadd( -28.0881, -115.362, 24.8571, 0.83 ) }
    dend_7 { pt3dadd( -28.563, -116.007, 25.7921, 0.83 ) }
    dend_7 { pt3dadd( -30.1848, -118.292, 28.8232, 0.83 ) }
    dend_7 { pt3dadd( -30.8244, -119.184, 30.057, 0.55 ) }
    dend_7 { pt3dadd( -31.0202, -119.49, 30.4054, 0.55 ) }
    dend_7 { pt3dadd( -31.8883, -120.924, 31.6688, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( -32.2985, -121.46, 32.1366, 0.28 ) }
    dend_7 { pt3dadd( -32.7879, -121.95, 32.5808, 0.28 ) }
    dend_7 { pt3dadd( -34.008, -122.748, 33.2338, 0.28 ) }
    dend_7 { pt3dadd( -35.7944, -123.7, 34.2135, 0.28 ) }
    dend_7 { pt3dadd( -36.4487, -124.055, 34.5717, 0.28 ) }
    dend_7 { pt3dadd( -38.1069, -125.002, 35.4741, 0.28 ) }
    dend_7 { pt3dadd( -40.3336, -131.614, 39.7068, 0.28 ) }
    dend_7 { pt3dadd( -44.4158, -137.559, 43.5727, 0.28 ) }
    dend_7 { pt3dadd( -49.814, -142.803, 46.8373, 0.28 ) }
    dend_7 { pt3dadd( -55.3871, -147.007, 51.2055, 0.28 ) }
    dend_7 { pt3dadd( -60.0158, -151.596, 56.2268, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.0401, -66.5982, 20.4233, 0.55 ) }
    dend_5 { pt3dadd( -5.40012, -70.2648, 21.9302, 0.55 ) }
    dend_5 { pt3dadd( -4.88406, -71.4186, 22.4044, 0.55 ) }
    dend_5 { pt3dadd( -4.31162, -72.6985, 22.9304, 0.55 ) }
    dend_5 { pt3dadd( -3.79613, -73.851, 23.4041, 0.55 ) }
    dend_5 { pt3dadd( -0.457619, -78.7395, 24.6568, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 17/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.0401, -66.5982, 20.4233, 1.66 ) }
    dend_4 { pt3dadd( -7.56403, -67.8685, 20.7594, 1.66 ) }
    dend_4 { pt3dadd( -7.82644, -68.7372, 20.9556, 1.66 ) }
    dend_4 { pt3dadd( -8.27642, -70.7927, 21.332, 1.11 ) }
    dend_4 { pt3dadd( -8.51992, -72.1946, 21.7319, 1.11 ) }
    dend_4 { pt3dadd( -8.71496, -73.5164, 22.1523, 1.11 ) }
    dend_4 { pt3dadd( -8.79692, -74.871, 22.7217, 1.11 ) }
    dend_4 { pt3dadd( -8.73563, -75.8754, 23.2199, 1.11 ) }
    dend_4 { pt3dadd( -8.55836, -77.3436, 23.9929, 1.11 ) }
    dend_4 { pt3dadd( -8.09621, -80.2388, 25.554, 1.11 ) }
    dend_4 { pt3dadd( -7.92346, -81.1534, 26.0293, 1.11 ) }
    dend_4 { pt3dadd( -7.27176, -84.1698, 27.6261, 1.11 ) }
    dend_4 { pt3dadd( -6.98774, -85.3297, 28.1984, 1.11 ) }
    dend_4 { pt3dadd( -6.5651, -86.9614, 28.9994, 1.11 ) }
    dend_4 { pt3dadd( -6.23858, -88.0607, 29.4913, 1.39 ) }
    dend_4 { pt3dadd( -5.87154, -89.1746, 29.7981, 1.39 ) }
    dend_4 { pt3dadd( -5.62568, -90.0131, 29.9555, 1.11 ) }
    dend_4 { pt3dadd( -5.2871, -92.0628, 29.8801, 1.39 ) }
    dend_4 { pt3dadd( -5.18717, -99.4534, 31.012, 1.39 ) }
    dend_4 { pt3dadd( -4.99679, -106.749, 32.6603, 1.39 ) }
    dend_4 { pt3dadd( -4.38054, -114.028, 34.2845, 1.39 ) }
    dend_4 { pt3dadd( -4.38525, -121.259, 36.2221, 1.39 ) }
    dend_4 { pt3dadd( -4.76411, -128.54, 37.9065, 1.39 ) }
    dend_4 { pt3dadd( -4.1005, -135.955, 38.59, 1.39 ) }
    dend_4 { pt3dadd( -3.51348, -143.396, 38.2169, 1.39 ) }
    dend_4 { pt3dadd( -1.96336, -150.526, 36.5247, 1.39 ) }
    dend_4 { pt3dadd( -0.817898, -157.592, 34.3118, 1.39 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 27.9581, 41.4547, -69.7165, 0.55 ) }
    dend_39 { pt3dadd( 28.6417, 45.8887, -69.8983, 0.55 ) }
    dend_39 { pt3dadd( 30.0396, 53.0443, -69.1582, 0.55 ) }
    dend_39 { pt3dadd( 32.6862, 65.116, -68.0556, 0.55 ) }
    dend_39 { pt3dadd( 33.3738, 68.1517, -68.1683, 0.55 ) }
    dend_39 { pt3dadd( 38.4659, 90.6613, -70.3716, 0.55 ) }
    dend_39 { pt3dadd( 41.0904, 103.592, -72.4279, 0.55 ) }
    dend_39 { pt3dadd( 41.3774, 104.872, -72.6527, 0.83 ) }
    dend_39 { pt3dadd( 42.0316, 107.691, -73.1372, 0.28 ) }
    dend_39 { pt3dadd( 43.7723, 113.989, -76.5724, 0.28 ) }
    dend_39 { pt3dadd( 44.1013, 115.117, -77.5197, 0.28 ) }
    dend_39 { pt3dadd( 44.9646, 117.765, -80.2097, 0.28 ) }
    dend_39 { pt3dadd( 45.7415, 120.283, -82.7046, 0.28 ) }
    dend_39 { pt3dadd( 46.9011, 123.437, -86.1371, 0.28 ) }
    dend_39 { pt3dadd( 51.032, 132.707, -96.4833, 0.28 ) }
    dend_39 { pt3dadd( 51.3633, 133.309, -97.1554, 0.83 ) }
    dend_39 { pt3dadd( 52.3664, 134.646, -99.1335, 0.28 ) }
    dend_39 { pt3dadd( 52.8447, 135.145, -99.9752, 0.83 ) }
    dend_39 { pt3dadd( 60.4271, 141.529, -112.6, 0.28 ) }
    dend_39 { pt3dadd( 61.8631, 142.527, -114.887, 0.28 ) }
    dend_39 { pt3dadd( 63.4794, 143.31, -117.335, 0.28 ) }
    dend_39 { pt3dadd( 73.0651, 147.515, -132.288, 0.28 ) }
    dend_39 { pt3dadd( 79.5491, 149.977, -142.862, 0.28 ) }
    dend_39 { pt3dadd( 80.4929, 150.22, -144.345, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 27.9581, 41.4547, -69.7165, 0.55 ) }
    dend_38 { pt3dadd( 33.8161, 44.6206, -74.2394, 0.55 ) }
    dend_38 { pt3dadd( 35.5852, 45.5552, -75.9, 1.11 ) }
    dend_38 { pt3dadd( 40.6421, 48.131, -80.4533, 0.55 ) }
    dend_38 { pt3dadd( 41.8045, 48.7181, -81.4329, 0.55 ) }
    dend_38 { pt3dadd( 42.8664, 49.2472, -82.3492, 0.55 ) }
    dend_38 { pt3dadd( 45.2819, 50.4273, -84.2984, 1.11 ) }
    dend_38 { pt3dadd( 54.4475, 54.8999, -91.0817, 0.28 ) }
    dend_38 { pt3dadd( 56.8284, 55.9742, -92.7118, 0.28 ) }
    dend_38 { pt3dadd( 60.3526, 57.4546, -94.7253, 0.55 ) }
    dend_38 { pt3dadd( 66.4381, 59.7702, -98.29, 0.28 ) }
    dend_38 { pt3dadd( 70.451, 61.2554, -100.512, 0.28 ) }
    dend_38 { pt3dadd( 72.1905, 61.9058, -101.357, 0.55 ) }
    dend_38 { pt3dadd( 74.2002, 62.7092, -102.017, 0.55 ) }
    dend_38 { pt3dadd( 78.5615, 64.6124, -103.419, 0.28 ) }
    dend_38 { pt3dadd( 85.5436, 67.9467, -105.312, 0.28 ) }
    dend_38 { pt3dadd( 89.9873, 70.3477, -107.084, 0.28 ) }
    dend_38 { pt3dadd( 91.9617, 71.4804, -108.103, 0.55 ) }
    dend_38 { pt3dadd( 95.0008, 73.2505, -109.776, 0.28 ) }
    dend_38 { pt3dadd( 97.4815, 74.7141, -111.21, 0.55 ) }
    dend_38 { pt3dadd( 99.6224, 76.0197, -112.515, 0.55 ) }
    dend_38 { pt3dadd( 109.631, 82.0559, -118.283, 0.28 ) }
    dend_38 { pt3dadd( 114.776, 84.9705, -121.827, 0.28 ) }
    dend_38 { pt3dadd( 116.714, 85.9883, -123.297, 0.28 ) }
    dend_38 { pt3dadd( 118.194, 86.7044, -124.533, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 93/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -71.3227, 11.7313, -50.7225, 0.28 ) }
    dend_36 { pt3dadd( -72.7718, 11.266, -49.0416, 0.28 ) }
    dend_36 { pt3dadd( -74.5545, 10.51, -46.735, 0.28 ) }
    dend_36 { pt3dadd( -75.7067, 10.0504, -45.3071, 0.55 ) }
    dend_36 { pt3dadd( -76.1774, 9.90147, -44.8086, 0.28 ) }
    dend_36 { pt3dadd( -82.6069, 7.8678, -37.9995, 0.28 ) }
    dend_36 { pt3dadd( -83.8058, 7.48857, -36.7298, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -88.7519, 5.43938, -30.8052, 0.28 ) }
    dend_36 { pt3dadd( -89.6778, 4.94429, -29.478, 0.83 ) }
    dend_36 { pt3dadd( -95.357, 1.30941, -20.1468, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 3/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -71.3227, 11.7313, -50.7225, 0.55 ) }
    dend_35 { pt3dadd( -73.2086, 10.6401, -56.5105, 0.55 ) }
    dend_35 { pt3dadd( -74.4125, 9.95071, -59.6442, 0.55 ) }
    dend_35 { pt3dadd( -75.4666, 9.38215, -62.783, 0.55 ) }
    dend_35 { pt3dadd( -76.1874, 9.04181, -64.7991, 0.55 ) }
    dend_35 { pt3dadd( -77.7783, 8.31578, -68.8211, 0.55 ) }
    dend_35 { pt3dadd( -78.9249, 7.78695, -71.2525, 0.28 ) }
    dend_35 { pt3dadd( -79.5278, 7.50732, -72.2296, 0.83 ) }
    dend_35 { pt3dadd( -85.6538, 4.49351, -81.0099, 0.83 ) }
    dend_35 { pt3dadd( -86.7919, 3.90235, -82.47, 0.83 ) }
    dend_35 { pt3dadd( -88.4153, 3.03387, -84.2253, 0.83 ) }
    dend_35 { pt3dadd( -91.8944, 1.08402, -87.3134, 0.83 ) }
    dend_35 { pt3dadd( -93.4144, 0.171188, -88.5099, 0.28 ) }
    dend_35 { pt3dadd( -95.5391, -1.10535, -89.8165, 0.28 ) }
    dend_35 { pt3dadd( -96.8047, -1.86701, -90.3048, 0.55 ) }
    dend_35 { pt3dadd( -98.2308, -2.75673, -90.9129, 0.28 ) }
    dend_35 { pt3dadd( -99.9576, -3.81119, -91.6847, 0.28 ) }
    dend_35 { pt3dadd( -101.891, -4.94414, -92.5972, 0.28 ) }
    dend_35 { pt3dadd( -104.25, -6.20185, -93.6634, 0.28 ) }
    dend_35 { pt3dadd( -105.091, -6.56652, -93.9836, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_2 = new SectionList()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_21 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_15 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_30 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_28 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_27 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_38 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_20 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_32 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_19 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 3
    dend_23 nseg = 7
    dend_15 nseg = 9
    dend_9 nseg = 3
    dend_40 nseg = 13
    dend_29 nseg = 5
    dend_11 nseg = 7
    dend_37 nseg = 3
    dend_34 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 3
    dend_28 nseg = 15
    dend_27 nseg = 11
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_7 nseg = 7
    dend_4 nseg = 5
    dend_39 nseg = 9
    dend_38 nseg = 5
    dend_36 nseg = 3
    dend_35 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BTC_0a43e2f3e5_0_0


