// Cell: cACint209_L23_DBC_8060414f1a_0_0
/*
{
  "id" : "cACint209_L23_DBC_8060414f1a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.36129, -7.58075, 0.00144685, 3.22785", "2.18013, -6.85906, 0.00129054, 6.03886", "1.99896, -6.13737, 0.00113423, 7.42316", "1.81779, -5.41568, 9.77923E-4, 8.36559", "1.63662, -4.69399, 8.21614E-4, 9.26167", "1.45546, -3.9723, 6.65304E-4, 9.90915", "1.27429, -3.25061, 5.08995E-4, 10.4263", "1.09312, -2.52892, 3.52686E-4, 10.8393", "0.911955, -1.80723, 1.96376E-4, 11.2188", "0.730788, -1.08554, 4.00668E-5, 11.4122", "0.54962, -0.363848, -1.16243E-4, 11.4389", "0.368453, 0.357841, -2.72552E-4, 11.3929", "0.187285, 1.07953, -4.28861E-4, 11.2923", "0.00611797, 1.80122, -5.85171E-4, 10.9441", "-0.175049, 2.52291, -7.4148E-4, 10.5254", "-0.356217, 3.2446, -8.9779E-4, 10.1407", "-0.537384, 3.96629, -0.0010541, 9.5776", "-0.718552, 4.68798, -0.00121041, 8.87208", "-0.899719, 5.40967, -0.00136672, 7.79472", "-1.08089, 6.13136, -0.00152303, 6.05918", "-1.26205, 6.85305, -0.00167934, 3.96403" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.04582, 6.79849, -2.62764, 1.8", "1.02897, 7.78891, -3.05702, 0.96", "1.01118, 8.8343, -3.51023, 0.72", "0.982929, 10.4939, -4.22971, 0.96", "0.964189, 11.5954, -4.70725, 1.32", "0.938686, 13.0938, -5.35687, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.0441755, -6.79301, 6.04236, 1.68", "-0.10732, -7.41925, 6.3616, 0.72", "-0.229629, -8.63225, 6.97995, 0.96", "-0.302118, -9.35117, 7.34642, 1.32", "-0.37763, -10.1, 7.72819, 0.96", "-0.415387, -10.4745, 7.91907, 0.96", "-0.501598, -11.3295, 8.35492, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.07582, 7.09099, 2.85236, 1.68", "-0.0255855, 7.7426, 2.97495, 1.68", "0.068499, 8.63668, 3.44812, 1.44", "0.225201, 9.27568, 3.88183, 0.96", "0.362953, 9.78483, 4.27249, 0.84", "0.48091, 10.2487, 4.63246, 0.96", "0.740522, 11.412, 5.63524, 0.84", "0.899706, 12.0294, 6.23663, 0.72", "1.03007, 12.5047, 6.73465, 0.72", "1.18859, 13.1043, 7.35037, 0.84", "1.26267, 13.4677, 7.67999, 0.96", "1.43086, 14.6354, 8.54704, 0.24", "1.48831, 15.1671, 8.82752, 0.24", "1.53153, 15.5999, 9.0265, 0.6", "1.58287, 16.1928, 9.26269, 1.44", "1.63542, 16.9749, 9.52046, 1.56", "1.65703, 17.6367, 9.70746, 1.56", "1.65613, 18.3707, 9.85688, 1.56", "1.60568, 19.6488, 10.1137, 0.6", "1.55322, 20.3445, 10.244, 0.48", "1.47966, 21.0197, 10.3712, 0.48", "1.43184, 21.4274, 10.4444, 0.96", "1.33432, 22.3587, 10.6222, 0.6", "1.28224, 23.0443, 10.759, 0.6", "1.25846, 23.7475, 10.8975, 0.96", "1.2437, 24.9859, 11.1794, 0.84", "1.23515, 25.6715, 11.3554, 0.84", "1.18927, 26.7629, 11.654, 0.72", "1.09057, 27.8322, 11.9599, 0.84", "1.06134, 28.0581, 12.022, 0.84", "0.961569, 28.6664, 12.1771, 0.72", "0.803175, 29.5808, 12.3749, 0.48", "0.675781, 30.4484, 12.5214, 0.48", "0.596601, 31.1873, 12.6116, 0.6", "0.547659, 31.8773, 12.6994, 0.84", "0.528657, 32.2251, 12.7601, 0.84", "0.510558, 32.715, 12.8596, 0.48", "0.473053, 33.7467, 13.083, 0.48", "0.438338, 34.7446, 13.3435, 0.48", "0.370786, 35.9766, 13.7342, 0.6", "0.288215, 36.8948, 14.0582, 1.08", "0.217608, 37.4513, 14.2494, 1.32", "0.134308, 37.9469, 14.4127, 1.32", "-0.00319783, 38.6307, 14.6301, 0.84", "-0.146298, 39.4082, 14.8308, 0.6", "-0.256024, 40.0923, 14.9763, 0.48", "-0.364591, 40.8516, 15.0967, 0.6", "-0.426384, 41.3142, 15.1641, 0.48", "-0.490233, 41.8307, 15.217, 0.48", "-0.560917, 42.2968, 15.2107, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.15581, -6.60776, -6.17764, 1.44", "2.76593, -7.30272, -6.25737, 1.08", "2.19299, -8.18248, -6.36014, 1.44", "1.61161, -9.02894, -6.52765, 1.56", "0.891642, -10.0677, -6.79961, 1.56", "-0.0343734, -11.433, -7.20177, 1.2", "-0.562881, -12.2459, -7.49317, 0.72", "-0.88328, -12.6863, -7.67592, 0.72", "-1.64692, -13.6486, -8.15962, 1.56", "-1.92475, -13.9941, -8.37499, 1.8", "-2.18676, -14.3494, -8.66125, 2.16", "-2.5556, -15.0814, -9.40811, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.91582, -4.34576, -0.277637, 1.32", "5.37583, -4.76008, -0.817988, 1.2", "5.96435, -5.14243, -1.58453, 0.72", "6.37624, -5.32284, -2.10069, 0.72", "7.17278, -5.58439, -3.02162, 1.68", "7.74675, -5.72131, -3.64766, 2.04", "8.90393, -5.93429, -4.83859, 1.92", "9.69746, -6.01363, -5.60032, 1.92", "10.5377, -6.07287, -6.33094, 0.96", "11.047, -6.12181, -6.71634, 0.96", "12.0443, -6.29476, -7.34865, 1.44", "12.6274, -6.46911, -7.66582, 1.92", "13.4758, -6.78784, -8.02788, 1.56", "14.3649, -7.20253, -8.35462, 1.2", "15.1715, -7.66966, -8.63344, 1.2", "16.027, -8.24989, -8.91556, 1.56", "16.3641, -8.52336, -9.00091, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.46419, -1.79126, 0.432363, 0.96", "-4.78983, -1.68732, 0.815358, 0.6", "-5.43895, -1.37902, 1.47968, 0.72", "-5.51047, -1.3456, 1.54187, 0.72", "-6.18079, -1.12358, 2.08554, 0.72", "-6.49099, -1.06782, 2.33657, 0.72", "-6.9059, -1.03111, 2.67724, 0.72", "-7.23863, -1.02672, 2.98122, 0.72", "-7.57793, -1.04816, 3.28287, 0.72", "-8.37724, -1.13955, 4.01325, 0.72", "-9.15277, -1.26893, 4.71448, 0.84", "-9.77217, -1.40763, 5.29564, 1.08", "-10.4286, -1.59084, 5.94981, 1.44", "-10.7716, -1.69462, 6.31737, 1.68", "-11.2707, -1.8329, 6.88518, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.77419, 5.47249, -7.59764, 1.08", "-4.07771, 6.128, -7.759, 1.08", "-4.40244, 6.75929, -8.00054, 0.84", "-4.63738, 7.14501, -8.19769, 0.12", "-4.9429, 7.56779, -8.43328, 0.12", "-5.34378, 8.06868, -8.71744, 0.84", "-6.32367, 9.28969, -9.38243, 0.84", "-6.91889, 10.0233, -9.78524, 0.84", "-7.56517, 10.8426, -10.2036, 0.48", "-8.11047, 11.5559, -10.5306, 0.12", "-8.42617, 11.9794, -10.7191, 0.12", "-8.98729, 12.7591, -11.0451, 0.6", "-9.48251, 13.4873, -11.2919, 0.6", "-10.0347, 14.3471, -11.5807, 0.72", "-10.2819, 14.7511, -11.7142, 1.08", "-10.8906, 15.7503, -12.1004, 0.6", "-11.3354, 16.4529, -12.3809, 0.36", "-11.7362, 17.0827, -12.6453, 0.12", "-12.2799, 17.9582, -13.0117, 0.48", "-12.7367, 18.7435, -13.33, 0.48", "-13.4587, 20.0868, -13.8212, 0.48", "-14.0842, 21.3581, -14.256, 0.6", "-14.6612, 22.6666, -14.7295, 0.36", "-14.8703, 23.1944, -14.9269, 0.36", "-15.2209, 24.1615, -15.2926, 1.2", "-15.4765, 24.9097, -15.5794, 1.08", "-15.7728, 25.7916, -15.9256, 0.72", "-16.0448, 26.5732, -16.2505, 0.24", "-16.3924, 27.495, -16.6138, 0.24", "-16.5768, 27.9696, -16.792, 0.72", "-16.9419, 28.8501, -17.0732, 0.84", "-17.2742, 29.6338, -17.3028, 0.48", "-17.4703, 30.0772, -17.401, 0.24", "-17.7687, 30.7063, -17.5147, 0.12", "-17.9667, 31.1145, -17.5906, 0.96", "-18.4513, 32.1346, -17.7471, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.26205, 6.85305, -0.00167934, 0.923536", "-4.91421, 21.4016, -0.00167934, 0.923536", "-8.56637, 35.9502, -0.00167934, 0.923536" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "0.938686, 13.0938, -5.35687, 0.36", "1.56261, 13.6853, -5.45901, 0.36", "2.33366, 14.3402, -5.64461, 0.48", "2.9182, 14.8089, -5.81177, 0.48", "3.56019, 15.3163, -5.99182, 0.48", "4.73683, 16.2498, -6.28853, 0.48", "5.25759, 16.6667, -6.46697, 0.96", "5.69105, 17.0265, -6.67381, 0.96", "6.37468, 17.6466, -7.11888, 0.48", "6.73615, 18.0046, -7.38614, 0.48", "7.08617, 18.3489, -7.68192, 0.48", "8.14269, 19.4512, -8.62326, 0.36", "8.50268, 19.8132, -8.97403, 0.36", "8.95949, 20.252, -9.41196, 0.84", "9.36099, 20.6087, -9.78043, 0.84", "10.5166, 21.5317, -10.7602, 0.48", "10.7596, 21.7079, -10.9319, 0.48", "11.5567, 22.235, -11.3521, 0.96", "12.068, 22.5566, -11.5993, 1.32", "12.7284, 22.9847, -11.9105, 1.08", "13.593, 23.6314, -12.3371, 0.12", "14.1249, 24.1196, -12.6079, 0.12", "14.2881, 24.2871, -12.7139, 0.48", "14.832, 24.896, -13.1055, 0.72", "15.1673, 25.2924, -13.3719, 0.12", "15.6195, 25.8668, -13.7218, 0.12", "16.0489, 26.4529, -14.0296, 0.48", "16.5999, 27.2111, -14.3907, 0.72", "17.0354, 27.802, -14.6149, 0.12", "17.5657, 28.4985, -14.7816, 0.12", "18.0122, 29.0782, -14.8562, 0.96", "18.2634, 29.405, -14.8703, 1.08", "18.828, 30.2, -14.84, 0.6", "19.3246, 30.9642, -14.7705, 0.6", "19.8852, 31.8474, -14.7587, 0.36", "20.4059, 32.6703, -14.7803, 0.24", "20.7155, 33.1519, -14.8297, 0.84", "20.9103, 33.4525, -14.8749, 1.08", "21.2634, 33.9931, -15.0001, 0.6", "22.2345, 35.4129, -15.5318, 0.24", "22.6168, 35.9795, -15.8019, 0.24", "22.9329, 36.4625, -16.0547, 0.72", "23.2527, 36.9794, -16.3281, 1.2", "23.6391, 37.6406, -16.6789, 0.6", "24.1096, 38.4921, -17.0814, 0.12", "24.5167, 39.2726, -17.3849, 0.12", "24.7148, 39.6589, -17.5399, 0.36", "24.8538, 39.9444, -17.6377, 0.36", "25.1287, 40.4981, -17.8119, 0.12", "25.5762, 41.3261, -18.0883, 0.12", "25.9496, 41.9666, -18.3091, 0.84", "26.0732, 42.1469, -18.3761, 1.2", "26.5207, 42.7384, -18.5849, 1.2", "27.0144, 43.3454, -18.81, 0.96", "27.7535, 44.2356, -19.1268, 0.36", "28.327, 44.8613, -19.4736, 0.36", "28.7902, 45.3159, -19.8009, 0.36", "29.1233, 45.6155, -20.054, 0.36", "29.8126, 46.1912, -20.6059, 0.6", "30.0893, 46.4156, -20.8253, 0.84", "31.5539, 47.6115, -21.956, 0.84", "32.1139, 48.0624, -22.4029, 0.12", "32.4306, 48.3379, -22.6526, 0.12", "32.6448, 48.5306, -22.8043, 0.12", "32.9292, 48.8068, -22.9418, 0.6", "33.2564, 49.1545, -23.0354, 0.6", "33.5659, 49.5286, -23.0506, 0.12", "33.9203, 49.9679, -23.0687, 0.12", "34.3637, 50.5207, -23.1061, 0.72", "34.8114, 51.1035, -23.1537, 0.96", "35.1867, 51.5987, -23.2474, 0.12", "35.7477, 52.2983, -23.4165, 0.12", "36.0485, 52.6648, -23.5228, 0.84", "36.3472, 53.0292, -23.6325, 0.96", "36.6322, 53.3919, -23.7319, 0.48", "37.3221, 54.2914, -24.0089, 0.12", "37.8735, 55.0272, -24.2496, 0.12", "38.4427, 55.8532, -24.5134, 0.12", "38.6501, 56.1926, -24.6191, 0.96", "38.887, 56.6062, -24.7764, 0.96", "39.1918, 57.2047, -25.0081, 0.24", "39.3283, 57.5321, -25.1091, 0.12", "39.5885, 58.2756, -25.3303, 0.12", "39.7922, 58.9056, -25.4916, 0.72", "40.2177, 60.2436, -25.7935, 0.12", "40.4154, 60.8844, -25.9116, 0.12", "40.9052, 62.4601, -26.1493, 0.12", "41.1234, 63.1329, -26.2723, 0.12", "41.3466, 63.7915, -26.4117, 0.12", "41.444, 64.0904, -26.4771, 0.96", "41.5659, 64.5378, -26.5672, 1.32", "41.7103, 65.1156, -26.7397, 1.32", "41.974, 66.3804, -27.2633, 0.12", "42.0984, 67.1185, -27.5915, 0.12", "42.1477, 67.5435, -27.7807, 0.12", "42.1924, 68.1646, -28.055, 0.84", "42.21, 68.8469, -28.3347, 0.12", "42.2033, 69.5532, -28.6029, 0.12", "42.1855, 70.1959, -28.8214, 0.12", "42.1845, 70.6263, -28.991, 0.84", "42.2168, 71.1907, -29.2165, 0.12", "42.2983, 71.8129, -29.4539, 0.12", "42.4254, 72.4699, -29.6696, 0.72", "42.5721, 72.9963, -29.8302, 0.72", "42.7691, 73.5135, -29.9905, 0.12", "43.0236, 74.0819, -30.1537, 0.12", "43.2387, 74.5317, -30.2567, 0.24", "43.4791, 74.9494, -30.3963, 0.24", "43.7234, 75.3483, -30.5607, 0.24", "44.0985, 75.9645, -30.8517, 0.72", "44.2646, 76.2399, -30.9958, 1.2", "44.5505, 76.7159, -31.2699, 1.2", "45.3875, 78.0803, -32.1028, 0.12", "45.864, 78.822, -32.5604, 0.12", "46.1466, 79.2343, -32.8279, 0.48", "46.4244, 79.6043, -33.072, 0.12", "46.6543, 79.8904, -33.2622, 0.12", "47.027, 80.3235, -33.5297, 0.6", "47.2286, 80.5278, -33.6672, 0.6", "48.1196, 81.2601, -34.3525, 0.12", "48.6617, 81.6783, -34.7946, 0.12", "48.7638, 81.7594, -34.8809, 0.72", "49.0973, 82.0319, -35.1636, 0.72", "50.2791, 82.9644, -36.2373, 0.6", "50.8896, 83.4522, -36.7948, 0.12", "51.2814, 83.7817, -37.1451, 0.12", "51.5894, 84.0493, -37.4454, 0.12", "51.9251, 84.3807, -37.7745, 0.6", "52.9476, 85.5053, -38.701, 0.12", "53.3312, 86.046, -38.9958, 0.12", "53.5961, 86.486, -39.1983, 0.72", "54.2125, 87.6501, -39.7094, 0.12", "54.6937, 88.6923, -40.1229, 0.12", "54.969, 89.4224, -40.3574, 0.12", "55.4506, 91.0133, -40.7516, 0.12", "55.6399, 91.7216, -40.9214, 0.84", "55.7962, 92.4226, -41.0611, 0.12", "56.0176, 93.6406, -41.2345, 0.12", "56.12, 94.2715, -41.3281, 0.6", "56.2242, 94.9543, -41.421, 0.12", "56.2976, 95.3539, -41.4606, 0.12", "56.5242, 96.4757, -41.5128, 0.12", "56.6692, 97.1201, -41.5239, 0.72", "56.8259, 97.7818, -41.5309, 0.12", "57.1804, 99.0669, -41.5457, 0.24", "57.2693, 99.3751, -41.5413, 0.24", "57.3414, 99.6183, -41.539, 0.12", "57.6867, 100.726, -41.5243, 0.12", "57.8649, 101.276, -41.5069, 0.12", "58.1076, 101.952, -41.4601, 0.12", "58.1465, 102.059, -41.4493, 0.72", "58.3496, 102.597, -41.3838, 0.84", "58.567, 103.158, -41.3023, 0.12", "58.9589, 104.11, -41.1442, 0.12", "59.3709, 105.07, -40.9915, 0.12", "59.5479, 105.49, -40.9301, 0.12", "59.6873, 105.818, -40.8839, 0.72", "59.9877, 106.513, -40.7887, 0.84", "60.1957, 107.006, -40.7259, 0.12", "60.6291, 108.075, -40.58, 0.12", "61.0436, 109.107, -40.4537, 0.12", "61.2758, 109.69, -40.3867, 0.12", "61.3993, 109.985, -40.3511, 0.6", "61.7114, 110.667, -40.2644, 0.72", "61.9225, 111.104, -40.2041, 0.12", "62.6427, 112.513, -40.012, 0.12", "62.855, 112.918, -39.9577, 0.12", "63.3224, 113.816, -39.8382, 0.12", "63.5428, 114.265, -39.7782, 0.84", "63.6873, 114.586, -39.7196, 0.96", "63.8724, 115.049, -39.6167, 0.96", "64.1293, 115.742, -39.4238, 0.6", "64.3635, 116.397, -39.2348, 0.6", "64.6919, 117.377, -38.9501, 0.6", "64.9967, 118.283, -38.6774, 0.12", "65.4062, 119.485, -38.3232, 0.12", "65.8026, 120.663, -37.98, 0.12", "65.9021, 120.957, -37.896, 0.36", "66.0288, 121.334, -37.7968, 0.36", "66.1092, 121.57, -37.7454, 0.12", "66.3785, 122.345, -37.6253, 0.12", "66.4472, 122.56, -37.5941, 0.36", "66.5401, 122.872, -37.5518, 0.12", "66.7269, 123.448, -37.4696, 0.12", "67.0671, 124.34, -37.3515, 0.12", "67.2948, 124.858, -37.2855, 0.48", "67.5683, 125.392, -37.2123, 0.48", "67.6936, 125.612, -37.1808, 0.12", "68.0728, 126.23, -37.0862, 0.12", "68.438, 126.773, -36.9918, 0.12", "68.7662, 127.233, -36.9035, 0.6", "69.2323, 127.881, -36.7718, 0.72", "69.5674, 128.333, -36.7094, 0.36", "69.9934, 128.926, -36.6566, 0.36", "70.5323, 129.722, -36.6158, 0.48", "70.7985, 130.127, -36.6013, 0.24", "71.0628, 130.533, -36.5984, 0.24", "71.7814, 131.637, -36.6133, 0.24", "72.1227, 132.153, -36.6254, 0.24", "72.5783, 132.829, -36.6351, 0.36", "72.7788, 133.13, -36.6416, 0.12", "73.0036, 133.475, -36.6401, 0.12", "73.2764, 133.905, -36.6177, 0.24", "73.393, 134.101, -36.5986, 0.12", "73.7872, 134.812, -36.5619, 0.12", "74.1173, 135.47, -36.5395, 0.6", "74.3934, 136.064, -36.5201, 0.72", "74.561, 136.438, -36.5063, 0.72", "74.7645, 136.915, -36.4849, 0.12", "75.2067, 137.995, -36.4014, 0.12", "75.6046, 139.046, -36.2878, 0.12", "75.7975, 139.566, -36.2104, 0.48", "75.91, 139.863, -36.1598, 0.12", "76.1522, 140.469, -36.0402, 0.12", "76.4746, 141.189, -35.901, 0.12", "76.8814, 142.002, -35.7699, 0.12", "77.1412, 142.507, -35.7066, 0.12", "77.3953, 143.012, -35.6363, 0.6", "77.6395, 143.522, -35.5671, 0.6", "77.9932, 144.281, -35.4644, 0.12", "78.5973, 145.686, -35.2854, 0.12", "79.0711, 146.955, -35.12, 0.12", "79.2763, 147.624, -35.0516, 0.72", "79.3684, 148.027, -35.0209, 0.72", "79.4285, 148.435, -34.9974, 0.24", "79.5069, 149.465, -34.9739, 0.24", "79.501, 150.143, -34.9842, 0.24", "79.4795, 150.733, -35.0022, 0.48", "79.4583, 151.411, -35.0175, 0.6", "79.4527, 151.73, -35.0082, 0.6", "79.432, 152.342, -34.9728, 0.6", "79.332, 153.674, -34.8656, 0.12", "79.2335, 154.484, -34.7593, 0.12", "79.0815, 155.365, -34.6242, 0.12", "78.9213, 156.193, -34.4997, 0.12", "78.8894, 156.348, -34.4783, 0.36", "78.6398, 157.484, -34.337, 0.36", "78.4997, 158.112, -34.3042, 0.12", "78.2286, 159.221, -34.2481, 0.12", "78.1468, 159.55, -34.233, 0.48", "78.0174, 160.101, -34.2125, 0.48", "77.9757, 160.35, -34.2043, 0.12", "77.8629, 161.363, -34.1864, 0.12", "77.8539, 161.466, -34.1898, 0.72", "77.8218, 161.916, -34.21, 0.12", "77.7823, 162.808, -34.2493, 0.12", "77.7847, 163.74, -34.2787, 0.12", "77.8383, 164.528, -34.2953, 0.36", "77.966, 165.242, -34.3684, 0.12", "78.2499, 166.34, -34.5365, 0.12", "78.6464, 167.517, -34.7575, 0.48", "79.031, 168.376, -34.9697, 0.48", "79.4737, 169.147, -35.1928, 0.84", "80.7247, 170.859, -35.7813, 0.24", "81.3227, 171.528, -36.0403, 0.12", "81.7227, 171.895, -36.2045, 0.48", "82.3906, 172.421, -36.4546, 0.36", "82.9324, 172.801, -36.6947, 0.36", "83.5708, 173.218, -36.9467, 0.72", "83.9972, 173.473, -37.1012, 0.96", "84.5548, 173.79, -37.3049, 0.96", "85.2792, 174.208, -37.5443, 1.08", "87.3109, 175.426, -38.1342, 0.12", "88.2657, 175.994, -38.3834, 0.12", "89.0437, 176.452, -38.5286, 0.36", "89.9484, 176.971, -38.7174, 0.12", "90.7678, 177.433, -38.8635, 0.12", "90.9922, 177.56, -38.879, 0.36", "91.5195, 177.84, -38.8451, 0.12", "92.1152, 178.109, -38.871, 0.12", "93.4293, 178.685, -38.9859, 0.36", "93.9004, 178.883, -39.066, 0.6", "94.4557, 179.149, -39.1571, 1.08", "95.1778, 179.533, -39.2458, 0.24", "96.0178, 180.007, -39.3029, 0.12", "96.4567, 180.262, -39.3184, 0.48", "96.673, 180.402, -39.3097, 0.12", "97.8542, 181.259, -39.3062, 0.12", "98.1641, 181.534, -39.3142, 0.6", "98.4073, 181.799, -39.3586, 0.6", "98.9345, 182.511, -39.5782, 0.12", "99.2545, 183.016, -39.8052, 0.12", "99.4725, 183.464, -40.0556, 0.12", "99.6168, 184.014, -40.3986, 0.48", "99.781, 185.252, -41.2674, 0.12", "99.8102, 185.785, -41.6947, 0.12", "99.7957, 186.155, -41.9674, 0.36", "99.7736, 186.457, -42.1728, 0.12", "99.6959, 187.415, -42.7716, 0.12", "99.5916, 188.801, -43.5608, 0.72", "99.5378, 189.769, -43.9634, 0.12", "99.4953, 191.677, -44.6587, 0.12", "99.4901, 192.53, -44.9554, 0.12", "99.4913, 192.655, -44.9945, 0.48", "99.4968, 192.902, -45.0515, 0.12", "99.5292, 195.489, -45.2294, 0.12", "99.5323, 195.602, -45.2259, 0.48" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.938686, 13.0938, -5.35687, 1.08", "0.771677, 14.011, -5.08681, 1.08", "0.58048, 15.0816, -4.78993, 1.08", "0.314775, 16.5761, -4.41835, 1.08", "0.119287, 17.6756, -4.14497, 0.84", "-0.0848414, 18.8238, -3.8595, 0.36", "-0.175874, 19.3358, -3.7322, 0.36", "-0.26705, 19.8278, -3.60447, 0.36", "-0.394194, 20.5307, -3.40074, 0.6" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.501598, -11.3295, 8.35492, 1.32", "-0.500902, -11.9368, 8.31493, 1.32", "-0.499768, -12.2307, 8.2861, 1.44", "-0.496746, -12.9603, 8.24232, 1.32", "-0.485266, -13.8577, 8.21548, 1.08", "-0.481661, -14.5835, 8.21416, 1.08", "-0.495627, -15.3816, 8.22565, 0.84", "-0.533323, -16.2537, 8.25083, 0.84", "-0.581954, -17.1061, 8.28424, 0.84", "-0.6707, -18.1362, 8.33558, 0.96", "-0.775683, -18.9006, 8.36743, 0.96", "-0.92095, -19.6685, 8.42936, 0.96", "-1.07011, -20.3083, 8.50007, 0.96", "-1.36084, -21.3261, 8.61205, 0.72", "-1.56692, -21.9515, 8.67375, 0.84", "-1.9686, -23.0721, 8.78792, 0.84", "-2.53408, -24.6078, 8.94889, 0.96", "-2.74758, -25.1753, 9.01755, 1.2", "-2.94432, -25.6665, 9.08808, 1.68", "-3.25884, -26.3293, 9.20994, 1.68" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.501598, -11.3295, 8.35492, 0.6", "0.065085, -11.5049, 8.75345, 0.6", "1.0363, -11.8152, 9.80018, 0.48", "1.51965, -11.9646, 10.3667, 0.48", "2.70905, -12.3423, 11.7867, 0.48", "3.16048, -12.5118, 12.3318, 0.48", "3.82095, -12.7476, 13.1452, 1.32", "5.65747, -13.3916, 15.6918, 0.96", "5.93268, -13.4748, 16.1003, 0.36", "6.11251, -13.4998, 16.4036, 0.36", "6.53116, -13.4482, 17.1698, 0.36", "7.1473, -13.2058, 18.3427, 0.48", "7.65812, -12.8867, 19.2499, 0.48", "7.94003, -12.7022, 19.6654, 0.48", "8.57058, -12.3166, 20.58, 0.12", "8.78709, -12.1938, 20.8589, 0.12", "9.23526, -11.9404, 21.3384, 0.48", "9.68265, -11.7259, 21.7148, 0.48", "10.5147, -11.351, 22.2393, 0.6", "11.0652, -11.0845, 22.5128, 0.12", "11.762, -10.7165, 22.7709, 0.48", "12.7477, -10.1321, 23.0577, 0.48", "13.1097, -9.89054, 23.1474, 0.48", "13.632, -9.48675, 23.2375, 0.48", "14.2084, -8.95948, 23.3065, 0.48", "15.1843, -7.93408, 23.4142, 0.48", "16.0554, -6.93018, 23.4945, 0.48", "16.9167, -5.88369, 23.5483, 0.48", "17.5747, -5.01063, 23.5724, 0.12", "18.0525, -4.29486, 23.5737, 0.12", "18.3729, -3.77218, 23.5797, 0.12", "18.7496, -3.09321, 23.5891, 0.84", "19.0222, -2.65086, 23.6151, 1.2", "19.3528, -2.27346, 23.6934, 1.44", "20.1056, -1.67308, 23.9292, 0.72", "20.8399, -1.19408, 24.1603, 0.36", "21.3806, -0.869338, 24.3705, 0.48", "22.0798, -0.437027, 24.6826, 0.48", "23.2616, 0.33411, 25.248, 0.36", "23.9828, 0.831613, 25.6009, 0.36", "24.4051, 1.12243, 25.8127, 0.36", "25.5839, 1.99958, 26.4044, 0.12", "26.1817, 2.52797, 26.7453, 1.08", "26.5134, 2.91169, 26.9626, 1.2", "26.8151, 3.40497, 27.1704, 1.08", "35.593, 6.60995, 31.7025, 1.08", "43.3719, 11.6668, 36.2814, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.560917, 42.2968, 15.2107, 0.12", "-0.047534, 43.4599, 14.832, 0.12", "0.419717, 44.6185, 14.4921, 0.12", "0.716722, 45.4006, 14.2786, 0.12", "1.12022, 46.5119, 13.9987, 0.12", "1.38407, 47.2634, 13.7426, 0.12", "1.76641, 48.3679, 13.3085, 0.12", "2.09512, 49.3326, 12.9137, 0.12", "2.21184, 49.6987, 12.7121, 0.12", "2.43919, 50.546, 12.1345, 0.96", "2.73893, 52.0907, 10.9176, 0.12", "2.78547, 52.3807, 10.6637, 0.12", "2.82728, 52.6204, 10.4247, 0.36", "2.97861, 53.3777, 9.62805, 0.12", "3.02602, 53.5855, 9.41847, 0.12", "3.2142, 54.3247, 8.78244, 0.12", "3.31366, 54.683, 8.55837, 0.12", "3.48281, 55.265, 8.22233, 0.12", "3.60408, 55.6595, 8.03098, 0.12", "3.8174, 56.3573, 7.73702, 0.12", "4.09147, 57.4691, 7.1313, 0.12", "4.19525, 58.0321, 6.76622, 0.12", "4.25718, 58.4981, 6.44387, 0.12", "4.34907, 59.6054, 5.61104, 0.12", "4.36616, 60.0866, 5.22661, 1.2", "4.3277, 61.8592, 3.84182, 0.12", "4.25008, 62.8313, 3.09469, 0.12", "4.23231, 63.0017, 2.96507, 0.48", "4.12503, 63.5437, 2.47306, 0.12", "4.00035, 63.9313, 2.10451, 0.12", "3.54554, 64.8104, 1.1294, 0.12", "3.28405, 65.1996, 0.668867, 1.2", "3.12733, 65.3619, 0.410787, 1.2", "1.62303, 66.622, -1.95838, 0.12", "1.0045, 67.0445, -2.8545, 0.12", "-0.72779, 67.9821, -5.48606, 0.12", "-0.926942, 68.0658, -5.80818, 0.12", "-1.89038, 68.4555, -7.54782, 0.6", "-2.02712, 68.513, -7.81806, 0.6", "-2.2977, 68.6543, -8.53711, 0.6", "-2.46821, 69.0222, -10.3715, 0.12", "-2.21785, 69.2386, -10.6735, 0.12", "-1.26373, 70.2803, -11.4365, 0.12", "-0.886653, 70.8248, -11.6479, 0.6", "-0.612721, 71.3503, -11.7795, 0.12", "-0.293415, 72.019, -11.8893, 0.12", "-0.0204706, 72.8267, -11.9097, 0.12", "0.161131, 73.7691, -11.9098, 0.12", "0.15502, 74.6378, -11.8854, 0.12", "0.09517, 75.2305, -11.8809, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.560917, 42.2968, 15.2107, 0.72", "-0.897305, 42.8514, 15.3609, 0.72", "-1.24454, 43.4413, 15.5141, 0.84", "-1.49848, 43.8766, 15.6247, 1.08", "-1.90073, 44.5553, 15.7662, 0.72", "-2.34525, 45.3297, 15.9043, 0.48", "-2.65746, 45.9052, 15.9925, 0.48", "-2.9038, 46.4014, 16.0542, 0.72", "-3.10299, 46.8208, 16.1019, 0.96", "-3.42712, 47.5301, 16.1764, 0.84", "-3.68002, 48.1025, 16.2386, 0.72", "-3.95732, 48.7628, 16.3264, 0.72", "-4.31753, 49.5693, 16.458, 0.72", "-4.43834, 49.837, 16.5264, 0.72", "-4.60066, 50.2154, 16.6528, 0.72", "-4.94729, 51.0535, 16.976, 0.6", "-5.2093, 51.6209, 17.1642, 0.6", "-5.65609, 52.5734, 17.5006, 0.48", "-6.10649, 53.5348, 17.8367, 0.48", "-6.5569, 54.4407, 18.1269, 0.48", "-7.12885, 55.5438, 18.4524, 0.6", "-7.90102, 57.0511, 18.8842, 0.6", "-8.55025, 58.3537, 19.2335, 0.72", "-9.0658, 59.4225, 19.4911, 0.6", "-9.50308, 60.31, 19.6818, 0.12", "-9.77497, 60.8602, 19.8086, 0.12", "-10.2276, 61.8017, 20.0392, 0.12", "-10.7476, 62.9698, 20.3353, 0.24", "-11.1826, 63.944, 20.5215, 0.24", "-11.3949, 64.4544, 20.6221, 0.24", "-11.5426, 64.8415, 20.7008, 0.6", "-11.7516, 65.3452, 20.79, 0.12", "-11.9656, 65.8073, 20.853, 0.24", "-12.1883, 66.287, 20.9113, 0.24", "-12.2506, 66.4199, 20.9265, 0.24", "-12.5224, 66.9799, 20.9966, 0.36", "-12.9953, 67.9256, 21.1553, 0.36", "-13.3569, 68.6193, 21.2995, 0.36", "-13.5367, 68.9231, 21.3853, 0.48", "-14.0541, 69.7159, 21.6578, 0.48", "-14.514, 70.367, 21.9149, 0.48", "-14.8727, 70.8479, 22.1386, 0.6", "-15.1579, 71.2323, 22.3362, 0.72", "-15.7073, 72.0378, 22.7487, 0.36", "-16.1101, 72.7006, 23.0641, 0.36", "-16.156, 72.7875, 23.1, 0.48", "-16.4058, 73.3493, 23.2877, 0.36", "-16.6833, 74.1153, 23.4719, 0.36", "-16.978, 75.0968, 23.6425, 0.36", "-17.2175, 76.0116, 23.7524, 0.36", "-17.3782, 76.6212, 23.8163, 0.36", "-17.5135, 77.1131, 23.8618, 0.6", "-17.8293, 78.2023, 23.9481, 0.84", "-17.9881, 78.724, 23.9906, 0.36", "-18.2513, 79.5651, 24.0622, 0.36", "-18.5076, 80.4063, 24.1322, 0.36", "-18.8604, 81.5972, 24.2296, 0.36", "-19.0278, 82.1976, 24.2763, 0.48", "-19.1048, 82.4997, 24.298, 0.48", "-19.1737, 82.8212, 24.3174, 0.24", "-19.3345, 83.7401, 24.3685, 0.24", "-19.4247, 84.3573, 24.4043, 0.6", "-19.5225, 85.077, 24.4502, 0.6", "-19.5908, 85.592, 24.485, 0.48", "-19.7148, 86.5184, 24.5536, 0.48", "-19.7897, 87.0918, 24.5969, 0.12", "-19.9356, 88.2162, 24.6794, 0.12", "-20.0592, 89.1342, 24.7437, 0.12", "-20.0879, 89.34, 24.7572, 0.72", "-20.1914, 90.0541, 24.7993, 0.84", "-20.3382, 90.9846, 24.8402, 0.36", "-20.5769, 92.4083, 24.8805, 0.36", "-20.7383, 93.3224, 24.9032, 0.36", "-20.8756, 94.0381, 24.9211, 0.36", "-21.0253, 94.7499, 24.9438, 0.48", "-21.2609, 95.7763, 24.9839, 0.96", "-21.335, 96.0795, 24.9983, 0.96", "-21.5123, 96.7767, 25.0365, 0.36", "-21.7312, 97.6056, 25.0894, 0.36", "-22.0816, 98.9104, 25.1835, 0.36", "-22.4067, 100.109, 25.2808, 0.36", "-22.5189, 100.509, 25.3186, 0.48", "-22.614, 100.823, 25.3507, 0.36", "-22.8136, 101.412, 25.4117, 0.36", "-23.1319, 102.287, 25.5016, 0.48", "-23.2557, 102.591, 25.5353, 0.36", "-23.8719, 104.035, 25.702, 0.36", "-24.4348, 105.319, 25.8532, 0.48", "-24.8562, 106.261, 25.9647, 0.96", "-25.037, 106.648, 26.0117, 0.6", "-25.5058, 107.6, 26.1312, 0.72", "-29.3649, 115.306, 27.3254, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.5556, -15.0814, -9.40811, 1.56", "-2.8528, -14.8407, -11.267, 1.56", "-4.15203, -13.7884, -19.3934, 1.44", "-5.23047, -12.9149, -26.1389, 2.04", "-5.59918, -12.6163, -28.445, 1.32", "-5.75077, -12.4935, -29.3932, 1.2", "-5.83594, -12.4245, -29.9259, 0.12" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.5556, -15.0814, -9.40811, 0.48", "-3.12454, -16.2063, -9.25477, 0.48", "-3.35683, -16.6387, -9.17583, 0.48", "-3.69815, -17.2653, -9.05512, 0.72", "-4.15832, -18.138, -8.93454, 1.2", "-4.68334, -19.1457, -8.79583, 0.6", "-5.06651, -19.9019, -8.69592, 0.36", "-5.49027, -20.7377, -8.60889, 0.36", "-5.82188, -21.4097, -8.54175, 0.48", "-6.30516, -22.4414, -8.41768, 0.84", "-6.709, -23.4268, -8.29212, 0.72", "-6.94201, -24.1035, -8.20041, 0.72", "-7.17309, -24.8669, -8.0816, 0.72", "-7.33288, -25.4299, -8.00046, 0.72", "-7.59366, -26.4069, -7.84133, 0.84", "-7.84904, -27.4277, -7.63801, 0.84", "-8.01946, -28.1676, -7.48943, 0.48", "-8.149, -28.7542, -7.36874, 0.6", "-8.27384, -29.331, -7.24556, 1.08", "-8.38268, -29.8091, -7.14508, 1.32", "-8.64958, -30.9498, -6.9445, 0.96", "-8.8822, -31.9306, -6.76232, 0.96", "-9.14861, -33.0911, -6.54947, 0.72", "-9.45364, -34.434, -6.30708, 0.72", "-9.71634, -35.6217, -6.10341, 0.96", "-9.98025, -36.8243, -5.90471, 1.2", "-10.1936, -37.7995, -5.76582, 0.6", "-10.3205, -38.3815, -5.68943, 0.6", "-10.5266, -39.3313, -5.5584, 0.6", "-10.6651, -40.0239, -5.48157, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.5556, -15.0814, -9.40811, 1.44", "-2.11555, -15.9308, -9.83035, 1.44", "-1.57018, -17.452, -10.4521, 0.72", "-1.46808, -17.9791, -10.6217, 0.12", "-1.45259, -18.3613, -10.7133, 0.24", "-1.47096, -18.6668, -10.7667, 0.24", "-1.56615, -19.5752, -10.8898, 0.24", "-1.70666, -20.2513, -10.9693, 0.48", "-1.88275, -20.9258, -11.0477, 0.6", "-2.10373, -21.7541, -11.1901, 0.36", "-2.35636, -22.6737, -11.3819, 0.36", "-2.52688, -23.3302, -11.5378, 0.36", "-2.71124, -24.2146, -11.792, 0.72", "-2.83629, -25.124, -12.0792, 0.36", "-2.87342, -25.7942, -12.3103, 0.36", "-2.85755, -26.259, -12.4719, 0.6", "-2.83189, -26.6502, -12.6166, 0.6", "-2.79215, -27.4084, -12.9052, 0.36", "-2.78127, -28.1645, -13.1724, 0.36", "-2.80036, -28.8542, -13.4337, 0.36", "-2.83681, -29.5987, -13.731, 0.48", "-2.93119, -30.6621, -14.1892, 0.6", "-3.05064, -31.3913, -14.5094, 0.84", "-3.18127, -31.9203, -14.7407, 0.84", "-3.43299, -32.7106, -15.0811, 0.36", "-3.7932, -33.706, -15.505, 0.36", "-4.07595, -34.4494, -15.815, 0.48", "-4.28213, -35.0665, -16.0395, 0.48", "-4.5391, -35.9213, -16.3336, 0.84", "-4.83836, -36.9862, -16.7045, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.3641, -8.52336, -9.00091, 0.6", "18.0382, -9.40009, -7.91559, 0.6", "18.8556, -9.78247, -7.56401, 0.6", "19.856, -10.2422, -7.28538, 0.6", "20.5175, -10.5559, -7.16972, 0.6", "21.6344, -11.0877, -6.94214, 0.48", "22.2537, -11.3927, -6.80743, 0.84", "22.9708, -11.7611, -6.74068, 0.84", "23.756, -12.1801, -6.67837, 0.36", "25.0455, -12.986, -6.59159, 0.48", "26.1193, -13.7739, -6.46566, 0.96", "26.4227, -14.046, -6.40626, 1.08", "27.03, -14.7168, -6.29247, 0.48", "27.2567, -15.0126, -6.24118, 0.48", "27.715, -15.6975, -6.11869, 0.72", "28.1316, -16.4215, -6.00937, 1.2", "28.6931, -17.4872, -5.88045, 1.32", "29.1102, -18.2823, -5.73638, 0.6", "29.5855, -19.1856, -5.50415, 0.96", "29.9366, -19.8361, -5.31197, 0.96", "30.3202, -20.5284, -5.09222, 0.6", "30.6898, -21.1965, -4.86736, 0.6", "31.1868, -22.1551, -4.53954, 0.72", "31.4754, -22.7692, -4.33909, 0.84", "31.8798, -23.7108, -4.05423, 1.08", "32.2209, -24.5878, -3.7956, 1.08", "32.5289, -25.4565, -3.55228, 0.48", "32.9291, -26.6704, -3.25784, 0.48", "33.153, -27.4319, -3.10699, 0.48", "33.4372, -28.4985, -2.88643, 0.96", "33.6733, -29.4908, -2.65282, 0.96", "33.8495, -30.2429, -2.47346, 0.6", "34.0267, -30.9825, -2.30497, 0.48", "34.1785, -31.6101, -2.16425, 0.6", "34.4432, -32.658, -1.91499, 0.84", "34.7106, -33.6539, -1.67861, 0.6", "34.9603, -34.5147, -1.46741, 0.48", "35.1459, -35.1345, -1.32025, 0.48", "35.4146, -35.9872, -1.12716, 0.6", "35.7117, -36.826, -0.960272, 0.96", "36.0978, -37.8248, -0.816011, 1.08", "36.4468, -38.6864, -0.707465, 0.84", "36.744, -39.4357, -0.616215, 0.6", "36.9897, -40.0472, -0.555577, 0.48", "37.366, -40.9698, -0.496355, 0.6", "37.7432, -41.9261, -0.464623, 0.84", "38.0824, -42.7982, -0.439317, 0.96", "38.4067, -43.6539, -0.410158, 1.08", "38.6668, -44.3796, -0.376434, 0.72", "38.8927, -45.086, -0.334991, 0.48", "39.1191, -45.8556, -0.276108, 0.48", "39.2605, -46.3512, -0.225363, 0.48", "39.4687, -47.1233, -0.141069, 0.84", "39.5599, -47.4952, -0.0962679, 0.96", "39.7228, -48.264, 0.00837064, 0.96", "39.853, -48.9051, 0.116087, 0.6", "39.9367, -49.3084, 0.186533, 0.48", "40.1185, -50.193, 0.327058, 0.48", "40.254, -50.8268, 0.455616, 0.6", "40.4526, -51.7044, 0.663871, 0.84", "40.6566, -52.6166, 0.905896, 0.72", "40.8264, -53.3657, 1.11863, 0.48", "41.0643, -54.3904, 1.41986, 0.6", "41.3092, -55.361, 1.70771, 0.48", "41.5199, -56.1066, 1.92399, 0.72", "41.7501, -56.839, 2.12545, 1.08", "41.9749, -57.4949, 2.28852, 0.6", "42.2566, -58.2479, 2.45982, 0.6", "42.6115, -59.1096, 2.65967, 0.6", "42.8622, -59.7099, 2.7814, 0.6", "43.1378, -60.3511, 2.92721, 0.84", "43.3914, -60.9472, 3.07426, 0.84", "43.6781, -61.708, 3.27294, 0.84", "43.9583, -62.5768, 3.47385, 0.48", "44.0931, -63.0778, 3.57579, 0.84", "44.2235, -63.7049, 3.6849, 1.2", "44.3482, -64.48, 3.79459, 1.44", "44.4535, -65.2645, 3.84186, 0.84", "44.54, -66.1632, 3.78744, 0.48", "44.5573, -66.4556, 3.74425, 0.72", "44.5811, -66.9796, 3.63564, 0.84", "44.6043, -67.4946, 3.51088, 0.84", "44.645, -68.3775, 3.26588, 0.6", "44.7025, -69.4682, 2.97633, 0.48", "44.7491, -70.3883, 2.72405, 0.48", "44.7831, -70.9849, 2.55888, 0.6", "44.8312, -71.6256, 2.38519, 0.72", "44.9096, -72.4091, 2.19893, 0.72", "45.046, -73.4275, 1.98697, 0.84", "45.2746, -74.6235, 1.76202, 0.84", "45.451, -75.3896, 1.64505, 0.84", "45.5858, -75.9214, 1.59173, 0.6", "45.8391, -76.8415, 1.53504, 0.48", "46.0947, -77.6969, 1.52164, 0.48", "46.3867, -78.6144, 1.54416, 0.48", "46.6559, -79.4467, 1.61204, 0.48", "46.8181, -79.9652, 1.65961, 0.48", "46.972, -80.4819, 1.74033, 0.6", "47.2666, -81.5165, 1.96587, 0.6", "47.4408, -82.1372, 2.14049, 0.84", "47.5347, -82.5056, 2.25359, 1.08", "47.7002, -83.1424, 2.40023, 1.08", "47.9844, -84.1735, 2.53059, 0.6", "48.1185, -84.5623, 2.44832, 0.6", "48.2721, -84.8717, 2.20299, 0.72", "48.4467, -85.1511, 1.84599, 0.84", "49.0305, -85.9192, 0.673802, 0.84", "49.5398, -86.4387, -0.300986, 1.08", "50.2227, -86.9731, -1.51475, 0.72", "50.474, -87.1221, -1.90548, 0.72", "51.0814, -87.4157, -2.70503, 0.6", "51.4814, -87.5894, -3.12434, 0.6", "52.0748, -87.8618, -3.58247, 0.6", "52.5381, -88.1244, -3.85461, 0.6", "53.199, -88.5818, -4.161, 0.6", "53.6528, -89.0135, -4.39974, 1.08", "54.0707, -89.5593, -4.62512, 1.08", "54.4748, -90.2184, -4.90552, 0.6", "54.7691, -90.7517, -5.17825, 0.6", "54.9643, -91.0713, -5.39006, 0.6", "55.4758, -91.7395, -6.02508, 0.6", "55.7335, -92.0019, -6.34219, 0.6", "56.3035, -92.465, -6.98552, 0.84", "57.0623, -92.9599, -7.73394, 0.84", "57.8946, -93.4277, -8.47479, 0.96", "58.8491, -93.9073, -9.25, 0.84", "59.3626, -94.152, -9.61397, 0.6", "59.8877, -94.421, -9.94145, 0.72", "60.3323, -94.6775, -10.1679, 0.72", "60.9803, -95.1076, -10.4116, 0.48", "61.4736, -95.4887, -10.5615, 0.48", "62.0369, -95.9778, -10.6923, 0.48", "62.6637, -96.5865, -10.845, 0.48", "63.3391, -97.3261, -11.0029, 0.36", "63.95, -98.0551, -11.1225, 0.36", "64.3543, -98.5528, -11.1825, 0.6", "64.9964, -99.3569, -11.2592, 0.6", "65.3668, -99.823, -11.2975, 0.48", "66.0016, -100.604, -11.3361, 0.48", "66.6711, -101.4, -11.3402, 0.48", "67.4303, -102.263, -11.3284, 0.48", "67.8812, -102.753, -11.3087, 0.6", "68.3648, -103.269, -11.2776, 0.6", "68.9611, -103.9, -11.2215, 0.84", "69.4035, -104.396, -11.1702, 0.48", "69.8703, -104.973, -11.1031, 0.48", "70.1466, -105.361, -11.0527, 0.48", "70.5434, -105.942, -11.0112, 0.72", "71.0174, -106.636, -10.9939, 0.84", "71.7012, -107.685, -11.0403, 0.48", "72.0873, -108.285, -11.0933, 0.48", "72.8276, -109.437, -11.273, 0.48", "73.4131, -110.318, -11.4581, 0.6", "73.7451, -110.79, -11.5847, 0.6", "74.2871, -111.494, -11.8321, 0.48", "74.8069, -112.112, -12.0892, 0.48", "75.356, -112.734, -12.3583, 0.84", "75.7904, -113.206, -12.5472, 0.84", "76.0359, -113.483, -12.6237, 0.84", "76.6162, -114.17, -12.784, 0.6", "77.0335, -114.683, -12.8681, 0.48", "77.3802, -115.151, -12.9235, 0.48", "77.868, -115.846, -12.9964, 0.48", "78.2569, -116.436, -13.0633, 0.48", "78.7064, -117.121, -13.1306, 0.36", "79.1531, -117.781, -13.1637, 0.36", "79.4782, -118.223, -13.1589, 0.6", "80.04, -118.947, -13.1151, 0.6", "80.5122, -119.547, -13.0487, 0.6", "81.3991, -120.637, -12.8274, 0.6", "82.2609, -121.646, -12.5377, 0.6", "83.0306, -122.532, -12.2429, 0.36", "83.3179, -122.871, -12.1175, 0.36", "83.9522, -123.692, -11.7953, 0.36", "84.5921, -124.622, -11.449, 0.84", "85.0615, -125.393, -11.19, 0.6", "85.5682, -126.291, -10.9455, 0.6", "85.9645, -127.017, -10.768, 0.36", "86.5324, -128.029, -10.5286, 0.36", "86.9135, -128.699, -10.3808, 0.36", "87.3793, -129.52, -10.2311, 0.48", "88.1885, -130.938, -9.97743, 0.48", "88.6019, -131.669, -9.84884, 0.48", "89.0039, -132.41, -9.74747, 0.72", "89.2586, -132.931, -9.69096, 0.72", "89.5257, -133.693, -9.65084, 0.48", "89.6818, -134.67, -9.78418, 0.48", "89.7032, -135.304, -9.97994, 0.48", "89.6887, -136.25, -10.3728, 0.6", "89.6545, -137.008, -10.7716, 0.6", "89.6139, -137.914, -11.3254, 0.48", "89.5595, -139.725, -12.5795, 0.48", "89.5634, -140.333, -13.0312, 0.48", "89.5858, -140.563, -13.2054, 0.48", "89.7886, -141.607, -13.9636, 0.84", "90.0013, -142.383, -14.4891, 0.96", "90.3182, -143.355, -15.0805, 0.96", "90.4207, -143.693, -15.2431, 0.96", "90.6581, -144.662, -15.6932, 0.48", "90.7986, -145.358, -15.9899, 0.84", "90.9486, -146.137, -16.2668, 0.48", "91.0884, -146.88, -16.5026, 0.48", "91.2139, -147.547, -16.6906, 0.6", "91.4529, -148.796, -17.0494, 0.6", "91.6452, -149.794, -17.3188, 0.36", "91.8011, -150.516, -17.5158, 0.36", "91.9076, -150.909, -17.6169, 0.6", "92.0277, -151.255, -17.6988, 0.6", "92.36, -151.981, -17.8727, 0.24", "92.5873, -152.392, -17.9494, 0.24", "92.7378, -152.645, -17.9937, 0.24", "92.9467, -153.005, -18.0546, 0.48", "93.3234, -153.632, -18.143, 0.36", "93.601, -154.071, -18.1827, 0.36", "93.8926, -154.515, -18.1934, 0.36", "94.2533, -155.073, -18.2187, 0.6", "94.6055, -155.625, -18.2417, 0.6", "94.9168, -156.095, -18.2563, 0.6", "95.3967, -156.788, -18.2606, 0.84", "95.8765, -157.482, -18.2655, 0.84", "96.3526, -158.206, -18.2639, 0.24", "96.6345, -158.675, -18.2566, 0.24", "96.8311, -158.995, -18.2473, 0.48", "97.2493, -159.635, -18.2197, 0.48", "97.7524, -160.313, -18.1787, 0.48", "98.2944, -160.941, -18.125, 0.24", "98.5843, -161.245, -18.0883, 0.24", "99.3864, -162.052, -17.9953, 0.24", "99.6843, -162.349, -17.9625, 0.6", "100.243, -162.888, -17.9069, 0.6", "100.721, -163.352, -17.8622, 0.6", "101.011, -163.643, -17.8441, 0.6", "101.631, -164.287, -17.8202, 0.36", "102.043, -164.718, -17.8137, 0.36", "102.309, -164.976, -17.8149, 0.72", "103.08, -165.642, -17.8315, 0.72", "103.755, -166.158, -17.8529, 0.72", "104.245, -166.503, -17.8689, 0.48", "104.963, -166.975, -17.8919, 0.48", "105.877, -167.554, -17.9152, 0.48", "106.536, -167.965, -17.9168, 0.36", "107.184, -168.361, -17.9006, 0.36", "107.828, -168.784, -17.8563, 0.36", "108.135, -169.005, -17.8294, 0.6", "108.43, -169.241, -17.7974, 0.6", "109.011, -169.746, -17.723, 0.72", "109.429, -170.114, -17.6683, 0.48", "109.748, -170.389, -17.6285, 0.48", "110.122, -170.692, -17.5982, 0.6", "110.716, -171.159, -17.5698, 0.6", "111.038, -171.417, -17.5621, 0.36", "111.495, -171.803, -17.5591, 0.48", "111.778, -172.054, -17.5624, 0.48", "112.519, -172.731, -17.5793, 0.36", "112.924, -173.115, -17.5902, 0.36", "113.434, -173.622, -17.6005, 0.6", "114.054, -174.255, -17.6062, 0.6", "114.526, -174.78, -17.5995, 0.36", "114.886, -175.215, -17.5853, 0.36", "115.222, -175.658, -17.5801, 0.36", "115.832, -176.54, -17.586, 0.36", "116.13, -177.009, -17.5923, 0.72", "116.523, -177.713, -17.6204, 0.72", "116.894, -178.458, -17.656, 0.84", "117.467, -179.724, -17.7248, 0.48", "117.88, -180.706, -17.804, 0.36", "118.118, -181.31, -17.8627, 0.36", "118.472, -182.216, -17.9533, 0.72", "118.784, -182.98, -18.0224, 0.72", "119.181, -183.895, -18.0799, 0.72", "119.565, -184.704, -18.0984, 0.6", "119.896, -185.295, -18.1032, 0.12", "120.303, -185.942, -18.0885, 0.12", "120.562, -186.31, -18.0613, 0.48", "120.973, -186.825, -18.0143, 0.6", "121.41, -187.33, -17.9556, 0.48", "121.976, -187.951, -17.8658, 0.36", "122.257, -188.262, -17.8246, 0.36", "122.89, -188.976, -17.7401, 0.36", "123.537, -189.668, -17.577, 0.36", "124.04, -190.146, -17.3906, 0.36", "124.604, -190.602, -17.1304, 0.36", "125.006, -190.885, -16.9162, 0.72", "125.571, -191.252, -16.5845, 1.08", "127.041, -192.151, -15.6471, 0.96", "127.614, -192.499, -15.294, 0.36", "127.941, -192.7, -15.113, 0.36", "128.504, -193.078, -14.8657, 0.36", "129.022, -193.481, -14.7251, 0.36", "129.511, -193.935, -14.7001, 0.36", "130.083, -194.482, -14.7754, 0.48", "130.478, -194.846, -14.8317, 0.48", "130.923, -195.206, -14.8902, 0.36", "131.394, -195.524, -14.9187, 0.36", "132.172, -195.978, -14.9178, 0.36", "133.562, -196.707, -14.8293, 0.36", "134.171, -196.996, -14.7549, 0.36", "134.778, -197.274, -14.666, 0.72", "135.704, -197.709, -14.502, 0.6", "136.027, -197.881, -14.4374, 0.48", "136.592, -198.222, -14.3135, 0.48", "137.486, -198.8, -14.1252, 0.48", "138.124, -199.213, -13.9851, 0.6", "138.521, -199.477, -13.9056, 0.96", "139.061, -199.843, -13.8182, 1.08", "139.517, -200.145, -13.7354, 0.84", "140.316, -200.681, -13.5719, 0.48", "140.948, -201.089, -13.435, 0.24", "141.768, -201.558, -13.2731, 0.36", "142.243, -201.807, -13.19, 0.36", "142.617, -202.0, -13.1314, 0.6", "143.126, -202.31, -13.0549, 0.6", "143.451, -202.543, -13.0151, 0.36", "143.988, -202.963, -12.9816, 0.24", "144.36, -203.269, -12.9559, 0.24", "144.653, -203.525, -12.9469, 0.36", "145.032, -203.901, -12.9419, 0.36", "145.415, -204.318, -12.9421, 0.48", "145.879, -204.901, -12.9413, 0.48", "146.362, -205.601, -12.9797, 0.72", "146.698, -206.116, -13.0286, 0.72", "146.91, -206.452, -13.0672, 0.72", "147.247, -207.02, -13.1339, 0.6", "147.492, -207.474, -13.1975, 0.6", "147.893, -208.266, -13.3147, 0.48", "148.239, -208.952, -13.4126, 0.36", "148.624, -209.681, -13.501, 0.36", "148.962, -210.305, -13.5852, 0.36", "149.308, -210.968, -13.6717, 0.48", "149.518, -211.396, -13.7143, 0.48", "149.698, -211.838, -13.7302, 0.6", "149.85, -212.288, -13.7396, 0.6", "149.993, -212.769, -13.7616, 0.6", "150.133, -213.296, -13.7857, 0.6", "150.312, -214.071, -13.8001, 0.48", "150.464, -214.86, -13.8338, 0.48", "150.573, -215.51, -13.8664, 0.6", "150.718, -216.358, -13.9261, 0.72", "150.844, -217.007, -13.9941, 0.72", "151.102, -218.142, -14.1939, 0.72", "151.315, -218.917, -14.3553, 1.08", "151.507, -219.538, -14.4879, 1.08", "151.757, -220.292, -14.6399, 0.72", "152.134, -221.315, -14.8087, 0.48", "152.65, -222.575, -15.0205, 0.96", "153.232, -223.909, -15.253, 0.36", "153.462, -224.445, -15.3323, 0.36", "153.675, -224.995, -15.3951, 0.72", "154.119, -226.29, -15.4743, 0.84", "154.359, -227.105, -15.4839, 0.84", "154.519, -227.751, -15.4685, 0.48", "154.699, -228.696, -15.4415, 0.48", "154.905, -229.991, -15.4286, 0.48", "155.023, -230.935, -15.4248, 0.48", "155.089, -231.593, -15.4201, 0.48", "155.133, -232.125, -15.425, 0.72", "155.188, -232.797, -15.4514, 0.72", "155.271, -233.851, -15.551, 0.36", "155.287, -234.22, -15.6149, 0.36", "155.299, -234.754, -15.7271, 0.36", "155.328, -235.601, -15.9071, 0.24", "155.362, -236.771, -16.1318, 0.24", "155.375, -237.054, -16.177, 0.72", "155.429, -237.824, -16.2465, 0.36", "155.515, -238.612, -16.2883, 0.36", "155.594, -239.157, -16.306, 0.36", "155.726, -239.86, -16.2983, 0.48", "155.788, -240.139, -16.2954, 0.12", "156.048, -241.032, -16.1957, 0.12", "156.234, -241.522, -16.0913, 0.12", "156.448, -242.0, -15.9652, 0.84", "156.748, -242.568, -15.8032, 0.96", "157.099, -243.157, -15.64, 0.96", "157.849, -244.325, -15.2269, 0.24", "158.157, -244.786, -15.0414, 0.48", "158.903, -245.85, -14.5849, 0.48", "159.764, -247.017, -14.0627, 0.48", "160.33, -247.761, -13.7439, 0.48", "161.261, -248.98, -13.2707, 0.48", "161.732, -249.605, -13.0679, 0.48", "162.171, -250.166, -12.8356, 0.84", "162.447, -250.507, -12.6557, 0.84", "162.774, -250.885, -12.4124, 0.12", "163.235, -251.385, -12.0544, 0.12", "163.318, -251.464, -11.9863, 0.36", "164.201, -252.214, -11.0475, 0.12", "164.412, -252.403, -10.7617, 0.12", "164.819, -252.776, -10.1604, 0.12", "164.819, -252.776, -10.1604, 0.36", "165.361, -253.251, -9.17023, 0.12", "165.548, -253.434, -8.84937, 0.12", "165.721, -253.636, -8.54722, 0.72", "165.951, -253.965, -8.1042, 0.84", "166.659, -255.222, -6.64277, 0.6", "166.822, -255.536, -6.31721, 0.12", "167.085, -256.042, -5.87561, 0.12", "167.424, -256.62, -5.38517, 0.12", "167.785, -257.185, -4.94977, 0.12", "168.051, -257.583, -4.70479, 0.12", "168.051, -257.583, -4.70479, 0.6", "168.511, -258.234, -4.40626, 0.6", "169.017, -258.946, -4.093, 0.48", "169.387, -259.449, -3.89056, 0.48", "169.888, -260.134, -3.61708, 0.48", "170.31, -260.741, -3.39779, 0.24", "170.733, -261.398, -3.19212, 0.24", "170.94, -261.724, -3.05589, 0.6", "171.227, -262.161, -2.84514, 0.72", "171.606, -262.697, -2.55965, 0.72", "171.902, -263.078, -2.35018, 0.12", "172.262, -263.495, -2.12403, 0.12", "173.613, -264.9, -1.31784, 0.12", "174.014, -265.282, -1.09526, 0.96", "174.393, -265.624, -0.909699, 0.12", "174.96, -266.095, -0.68652, 0.12", "175.188, -266.273, -0.613592, 0.12", "175.497, -266.497, -0.547046, 0.6", "175.842, -266.739, -0.505045, 0.6", "176.386, -267.082, -0.381241, 0.48", "176.791, -267.317, -0.25638, 0.48", "177.413, -267.657, -0.0450826, 0.72", "177.947, -267.937, 0.136643, 0.36", "178.523, -268.232, 0.331095, 0.12", "179.187, -268.561, 0.588117, 0.12", "179.435, -268.682, 0.693448, 0.48", "179.838, -268.895, 0.857332, 0.6", "180.431, -269.248, 1.07455, 0.72", "180.732, -269.444, 1.19633, 0.72", "181.543, -269.984, 1.55365, 0.12", "181.739, -270.118, 1.6528, 0.12", "182.327, -270.502, 1.99552, 0.12", "182.629, -270.692, 2.18328, 0.12", "183.269, -271.081, 2.61566, 0.48", "183.571, -271.258, 2.81498, 0.48", "183.9, -271.439, 3.00572, 0.96", "184.696, -271.833, 3.4415, 0.48", "185.099, -272.011, 3.64407, 0.48", "185.692, -272.247, 3.89337, 0.48", "186.112, -272.378, 4.07795, 0.48", "186.505, -272.442, 4.29922, 0.12", "186.621, -272.441, 4.36797, 0.12", "186.991, -272.386, 4.57772, 0.72", "187.36, -272.306, 4.78054, 0.72", "188.741, -271.991, 5.45043, 0.12", "189.454, -271.833, 5.76141, 0.12", "190.33, -271.665, 6.109, 0.12", "190.61, -271.617, 6.21447, 0.12", "191.066, -271.539, 6.37767, 0.48", "191.813, -271.413, 6.60206, 0.48", "192.642, -271.281, 6.77766, 0.72", "193.215, -271.191, 6.89224, 0.84", "194.481, -270.974, 7.18402, 0.36", "195.276, -270.852, 7.37297, 0.12", "195.979, -270.765, 7.54826, 0.24", "196.636, -270.715, 7.70559, 0.24", "197.233, -270.722, 7.80854, 0.24", "197.766, -270.764, 7.85847, 0.72", "198.544, -270.888, 7.83942, 0.72", "199.151, -271.02, 7.7423, 0.72", "199.988, -271.22, 7.5293, 0.36", "200.778, -271.371, 7.24925, 0.48", "201.284, -271.423, 7.01964, 0.6", "201.988, -271.433, 6.6346, 0.6", "203.021, -271.363, 5.93955, 0.12", "203.348, -271.323, 5.68855, 0.12", "203.913, -271.248, 5.22647, 0.12", "204.392, -271.198, 4.85159, 0.48", "204.544, -271.2, 4.73438, 0.48", "205.227, -271.328, 4.26278, 0.12", "205.458, -271.434, 4.09949, 0.12", "205.901, -271.679, 3.77054, 0.12", "206.181, -271.85, 3.57311, 0.48", "206.578, -272.065, 3.28228, 0.48", "206.99, -272.212, 2.96188, 0.12", "207.636, -272.309, 2.45166, 0.6", "208.206, -272.325, 1.99653, 0.72", "208.546, -272.301, 1.73601, 0.72", "209.215, -272.229, 1.2444, 0.72", "210.066, -272.12, 0.686294, 0.12", "210.398, -272.073, 0.500653, 0.12", "210.916, -272.005, 0.244391, 0.12", "211.3, -271.96, 0.0662904, 0.12", "211.806, -271.897, -0.138795, 0.6", "212.704, -271.785, -0.423197, 0.6", "213.401, -271.671, -0.605171, 0.72", "213.868, -271.573, -0.718826, 0.12", "214.397, -271.437, -0.833144, 0.12", "214.929, -271.298, -0.92919, 0.6", "215.467, -271.169, -1.00461, 0.6", "216.016, -271.082, -1.06565, 0.84", "217.107, -271.029, -1.07646, 0.84", "217.919, -271.076, -1.01196, 0.36", "218.596, -271.196, -0.880245, 0.36", "219.048, -271.322, -0.749976, 0.36", "219.806, -271.604, -0.475763, 0.36", "220.961, -272.139, -4.07695E-4, 0.72", "221.359, -272.355, 0.172704, 0.72", "222.208, -272.835, 0.528568, 0.36", "222.669, -273.091, 0.69841, 0.36", "223.187, -273.361, 0.837001, 0.36", "223.584, -273.56, 0.891743, 0.48", "224.045, -273.797, 0.883716, 0.24", "224.395, -273.996, 0.865006, 0.24", "224.847, -274.318, 0.783437, 0.6", "225.42, -274.798, 0.65943, 0.6", "225.734, -275.073, 0.588176, 0.6", "226.373, -275.616, 0.447179, 0.96", "226.832, -275.988, 0.345312, 0.96", "227.755, -276.657, 0.076483, 0.36", "228.159, -276.894, -0.0628915, 0.36", "228.754, -277.162, -0.281953, 0.36", "229.187, -277.303, -0.435433, 0.36", "229.586, -277.394, -0.561033, 0.72", "230.336, -277.511, -0.748079, 0.36", "230.929, -277.565, -0.82567, 0.36", "231.529, -277.623, -0.872776, 0.36", "232.084, -277.687, -0.888097, 0.36", "232.807, -277.778, -0.878164, 0.48", "233.491, -277.855, -0.844419, 0.48", "234.337, -277.935, -0.7889, 0.36", "234.941, -277.976, -0.761998, 0.36", "235.641, -278.006, -0.748771, 0.36", "236.318, -278.028, -0.755211, 0.36", "236.724, -278.04, -0.773612, 0.36", "237.363, -278.058, -0.830581, 0.24", "237.765, -278.069, -0.88653, 0.24", "238.302, -278.072, -0.960021, 0.36", "238.722, -278.071, -1.02663, 0.36", "239.273, -278.069, -1.11905, 0.12", "239.695, -278.083, -1.18583, 0.72", "240.365, -278.141, -1.26302, 1.2", "240.915, -278.227, -1.31208, 1.2", "242.041, -278.467, -1.40615, 0.36", "242.302, -278.531, -1.42668, 0.36", "243.226, -278.797, -1.48926, 0.36", "243.928, -279.055, -1.52378, 0.84", "244.63, -279.392, -1.53805, 0.48", "245.156, -279.694, -1.5329, 0.36", "245.716, -280.06, -1.49245, 0.24", "246.182, -280.382, -1.44908, 0.24", "246.76, -280.793, -1.38772, 0.24", "247.578, -281.397, -1.31755, 0.24", "247.957, -281.694, -1.27989, 0.6", "248.345, -282.003, -1.23793, 0.48", "248.579, -282.188, -1.21615, 0.36", "249.365, -282.749, -1.17666, 0.36", "249.867, -283.046, -1.17756, 0.12", "250.378, -283.281, -1.20621, 0.12", "250.936, -283.502, -1.25852, 0.12", "251.117, -283.562, -1.26984, 0.48", "251.418, -283.646, -1.27002, 0.12", "251.841, -283.756, -1.24015, 0.12", "252.622, -283.983, -1.12839, 0.72", "253.028, -284.097, -1.06043, 0.72", "253.919, -284.349, -0.900138, 0.24", "254.373, -284.486, -0.794561, 0.24", "254.751, -284.624, -0.689267, 0.24", "255.115, -284.792, -0.545941, 0.24", "255.702, -285.102, -0.259108, 0.24", "255.923, -285.23, -0.144551, 0.24", "256.839, -285.779, 0.305155, 0.24", "257.315, -286.056, 0.519314, 0.96", "258.244, -286.58, 0.902192, 0.48", "258.839, -286.909, 1.11265, 0.36", "259.3, -287.17, 1.24435, 0.6", "259.985, -287.519, 1.39871, 0.84", "260.547, -287.769, 1.47484, 0.12", "260.802, -287.856, 1.49453, 0.12", "261.63, -288.068, 1.50515, 0.12", "262.396, -288.228, 1.51622, 0.96", "263.296, -288.383, 1.54697, 0.12", "263.778, -288.451, 1.56921, 0.12", "264.5, -288.522, 1.64537, 0.12", "264.8, -288.533, 1.68045, 0.12", "265.101, -288.515, 1.71486, 0.12", "265.821, -288.429, 1.78897, 0.48", "266.396, -288.355, 1.82191, 0.48", "267.311, -288.27, 1.87569, 0.12", "267.798, -288.255, 1.90512, 0.12", "268.356, -288.254, 1.92975, 0.12", "268.851, -288.264, 1.93102, 0.36", "269.287, -288.296, 1.90894, 0.12", "269.767, -288.367, 1.85938, 0.12", "270.029, -288.418, 1.81463, 0.12", "270.552, -288.522, 1.72775, 0.6", "270.93, -288.559, 1.66729, 0.12", "271.6, -288.55, 1.56438, 0.12", "272.28, -288.491, 1.46259, 0.12", "272.545, -288.449, 1.41956, 0.36", "272.806, -288.395, 1.37564, 0.24", "273.909, -288.119, 1.15781, 0.24", "274.316, -288.015, 1.07632, 0.48", "274.617, -287.932, 1.01162, 0.12", "275.085, -287.799, 0.906446, 0.12", "275.487, -287.686, 0.813934, 0.36", "275.938, -287.566, 0.708346, 0.12", "278.383, -286.994, 0.131027, 0.12", "278.741, -286.915, 0.0497415, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.3641, -8.52336, -9.00091, 0.36", "17.0692, -8.18584, -9.01386, 0.36", "17.6537, -7.9205, -8.99947, 0.36", "18.0937, -7.70997, -8.98433, 0.48", "18.5493, -7.47023, -8.97305, 0.48", "19.2452, -7.00658, -8.91456, 0.12", "19.7764, -6.56352, -8.86375, 0.12", "19.962, -6.35012, -8.82921, 0.48", "20.2437, -5.90124, -8.7774, 0.48", "20.4387, -5.47318, -8.74503, 0.24", "20.8181, -4.41273, -8.6869, 0.36", "21.0877, -3.48668, -8.67069, 0.36", "21.3115, -2.5519, -8.6595, 0.6", "21.475, -1.79531, -8.65612, 1.08", "21.6677, -0.824036, -8.65513, 0.84", "21.798, -0.132534, -8.66193, 0.48", "21.9598, 0.73404, -8.70042, 0.96", "22.0437, 1.20469, -8.71366, 1.08", "22.1916, 1.91716, -8.73591, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.2707, -1.8329, 6.88518, 0.48", "-11.9555, -1.16393, 6.49576, 0.48", "-12.4163, -0.731989, 6.28999, 0.24", "-12.9278, -0.314045, 6.11056, 0.24", "-13.5418, 0.106906, 5.93837, 0.72", "-13.9094, 0.322843, 5.85381, 0.96", "-14.7863, 0.75325, 5.68602, 0.48", "-15.5619, 1.00553, 5.61215, 0.36", "-16.1785, 1.12337, 5.58372, 0.36", "-16.9649, 1.17305, 5.55631, 0.6", "-17.3931, 1.16717, 5.53831, 0.36", "-18.0141, 1.13638, 5.52451, 0.48", "-18.8688, 1.08664, 5.56054, 0.72", "-19.5909, 1.0382, 5.61521, 1.08", "-20.3376, 0.98898, 5.71451, 0.96", "-20.979, 0.930305, 5.8386, 0.96", "-21.6415, 0.854381, 6.02316, 0.72", "-22.614, 0.699881, 6.42354, 0.6", "-23.363, 0.472352, 6.91477, 0.36", "-23.5621, 0.360185, 7.14411, 0.36", "-23.8663, 0.0899112, 7.65223, 0.36", "-24.2457, -0.302062, 8.39374, 0.48", "-24.483, -0.54681, 8.8659, 0.48", "-24.8178, -0.822143, 9.39896, 0.48", "-25.3169, -1.00176, 9.92696, 0.48", "-25.9042, -1.09138, 10.3563, 0.48", "-26.7033, -1.16062, 10.8166, 0.48", "-27.1818, -1.20889, 11.0197, 0.24", "-27.622, -1.26058, 11.1692, 0.24", "-28.1593, -1.30604, 11.3381, 0.6", "-28.7414, -1.35289, 11.4951, 0.6", "-29.3249, -1.34133, 11.6343, 0.72", "-30.0849, -1.2124, 11.7412, 0.12", "-30.4639, -1.05562, 11.8152, 0.12", "-31.2452, -0.635851, 11.9945, 0.12", "-31.7667, -0.308042, 12.1179, 0.48", "-32.5715, 0.250491, 12.3383, 0.6", "-32.9819, 0.529957, 12.4652, 0.6", "-33.9637, 1.07307, 12.8698, 0.36", "-34.4536, 1.2172, 13.1442, 0.36", "-34.7111, 1.21867, 13.3188, 0.36", "-35.0078, 1.17862, 13.5425, 0.36", "-35.44, 1.0984, 13.8916, 0.6", "-36.1722, 0.990867, 14.4639, 0.84", "-37.1175, 0.910785, 15.1436, 0.6", "-37.7909, 0.90568, 15.6303, 0.48", "-38.1305, 0.919857, 15.8757, 0.48", "-38.6251, 0.967907, 16.2337, 0.36", "-39.0503, 1.03907, 16.5398, 0.36", "-39.5151, 1.14189, 16.8358, 0.48", "-40.0805, 1.29648, 17.0845, 0.72", "-40.1706, 1.33168, 17.1208, 0.72", "-40.7562, 1.59654, 17.3244, 0.72", "-41.1476, 1.80112, 17.4593, 0.48", "-41.66, 2.08786, 17.6176, 0.48", "-42.2427, 2.4321, 17.7695, 0.6", "-43.3344, 3.01777, 18.0031, 0.24", "-44.0029, 3.2995, 18.129, 0.24", "-45.1536, 3.67087, 18.3179, 0.48", "-45.8715, 3.83243, 18.4229, 0.36", "-46.1762, 3.87942, 18.4587, 0.36", "-47.3131, 3.94313, 18.5699, 0.36", "-48.3754, 3.85593, 18.6317, 0.36", "-48.7809, 3.77305, 18.6596, 0.36", "-49.2841, 3.61293, 18.6868, 0.36", "-49.9799, 3.34715, 18.7484, 0.36", "-50.5508, 3.10939, 18.8116, 0.24", "-50.9535, 2.91296, 18.8714, 0.24", "-51.3932, 2.6298, 18.9595, 0.24", "-51.7978, 2.33808, 19.0912, 0.24", "-52.2104, 2.04533, 19.2477, 0.24", "-52.4763, 1.88198, 19.3615, 0.24", "-52.8345, 1.70593, 19.5285, 0.48", "-53.7449, 1.28816, 19.9823, 0.36", "-54.4665, 1.00211, 20.374, 0.24", "-55.0898, 0.834853, 20.7643, 0.24", "-55.7643, 0.673912, 21.2352, 0.48", "-56.3287, 0.550543, 21.6558, 0.24", "-56.8387, 0.438838, 22.0564, 0.24", "-57.3815, 0.27822, 22.5052, 0.12", "-58.4632, -0.284705, 23.4453, 1.68", "-59.0074, -0.771433, 24.0132, 0.36", "-59.1101, -0.907348, 24.1271, 0.36", "-59.3929, -1.33933, 24.4107, 0.24", "-59.8356, -2.09757, 24.8083, 0.24", "-60.0026, -2.44838, 24.9461, 0.24", "-60.2293, -2.99413, 25.1028, 0.24", "-60.3985, -3.34993, 25.2091, 0.24", "-60.7457, -3.98928, 25.3986, 0.24", "-61.0547, -4.45949, 25.5353, 0.24", "-61.5321, -5.09058, 25.7157, 0.24", "-61.725, -5.32842, 25.7832, 0.24", "-61.9239, -5.56526, 25.8506, 0.24", "-62.2864, -6.07967, 26.0046, 0.24", "-62.4865, -6.43118, 26.1151, 0.24", "-62.9537, -7.02195, 26.2907, 0.24", "-71.0362, -7.96366, 29.204, 0.24", "-79.4076, -7.96107, 31.3417, 0.24", "-87.5486, -7.42747, 34.182, 0.24", "-95.6178, -6.78442, 37.1982, 0.24", "-103.294, -6.76894, 41.1715, 0.24", "-110.9, -6.04806, 45.2076, 0.24", "-118.304, -6.33044, 49.6563, 0.24", "-124.997, -6.69004, 55.1106, 0.24", "-130.916, -6.01771, 61.3725, 0.24", "-136.729, -6.91181, 67.6937, 0.24", "-142.109, -9.57863, 73.8622, 0.24", "-147.298, -11.7074, 80.4011, 0.24" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-11.2707, -1.8329, 6.88518, 0.12", "-11.437, -5.9269, 1.61192, 0.12", "-11.4834, -6.42322, 1.06172, 0.12", "-11.5502, -6.825, 0.70225, 0.48", "-11.6369, -7.14687, 0.500705, 0.48", "-12.0096, -8.1386, 0.124423, 0.48", "-12.2973, -8.74625, -0.0166949, 0.12", "-12.8105, -9.38152, 0.275877, 0.6", "-13.2042, -9.81084, 0.451423, 0.6", "-13.7334, -10.3618, 0.642585, 0.6", "-14.1493, -10.7989, 0.761971, 0.6", "-14.6178, -11.3096, 0.853013, 0.24", "-14.9882, -11.6998, 0.968582, 0.24", "-15.2256, -11.9355, 1.06436, 0.24", "-15.5351, -12.2217, 1.20338, 0.84", "-15.8981, -12.5323, 1.37592, 0.96", "-16.468, -12.9942, 1.64937, 0.96", "-17.5958, -13.8751, 2.18436, 0.72", "-18.1974, -14.3052, 2.43453, 0.6", "-19.1729, -14.9369, 2.78134, 0.6", "-19.4895, -15.1206, 2.87561, 0.6", "-19.9779, -15.3674, 2.98765, 0.36", "-20.6328, -15.6566, 3.08661, 0.36", "-21.5743, -16.0275, 3.13301, 0.36", "-22.1757, -16.2212, 3.16894, 0.36", "-22.4446, -16.2879, 3.18684, 0.6", "-22.9849, -16.4072, 3.23286, 1.08", "-23.3676, -16.4837, 3.27609, 1.08", "-23.8649, -16.5826, 3.34592, 1.08", "-24.634, -16.7664, 3.47629, 0.12", "-25.0995, -16.9064, 3.57631, 0.12", "-25.4268, -17.0295, 3.65364, 0.12", "-25.7487, -17.1654, 3.74608, 0.12", "-26.2004, -17.3631, 3.87983, 0.6", "-26.8604, -17.6498, 4.06655, 0.6", "-27.309, -17.8397, 4.18489, 0.72", "-28.3514, -18.2572, 4.45625, 0.84", "-29.2044, -18.5879, 4.66765, 0.48", "-29.787, -18.7963, 4.7984, 0.48", "-30.4884, -19.041, 4.94871, 0.48", "-30.9675, -19.2103, 5.04335, 0.36", "-31.3322, -19.3332, 5.10116, 0.36", "-32.0154, -19.5478, 5.20448, 0.36", "-32.7575, -19.7519, 5.35882, 0.36", "-33.7421, -19.9844, 5.62556, 0.36", "-34.3813, -20.1153, 5.81024, 0.36", "-34.9859, -20.2248, 5.9624, 0.36", "-35.6324, -20.3123, 6.10033, 0.36", "-36.9606, -20.4271, 6.32819, 0.48", "-37.6998, -20.4726, 6.40773, 0.72", "-38.3995, -20.4987, 6.40467, 0.72", "-39.3302, -20.5751, 6.29224, 0.36", "-39.8317, -20.6541, 6.18267, 0.36", "-40.1962, -20.7526, 6.07515, 0.36", "-40.6314, -20.9198, 5.93103, 0.6", "-41.4084, -21.2981, 5.72135, 0.72", "-42.3906, -21.8366, 5.58548, 0.72", "-43.053, -22.2025, 5.60278, 0.36", "-43.8675, -22.5599, 5.77143, 0.36", "-44.409, -22.7427, 5.99526, 0.36", "-44.8684, -22.8577, 6.28395, 0.36", "-45.5925, -22.9849, 6.8921, 0.48", "-46.4243, -23.0873, 7.67056, 0.48", "-47.9427, -23.1233, 9.28684, 0.48", "-48.5567, -23.0879, 9.9491, 0.48", "-48.9318, -23.072, 10.3455, 0.48", "-49.3578, -23.0586, 10.7966, 0.48", "-50.0347, -23.0983, 11.4666, 0.48", "-51.5777, -23.3942, 12.9046, 0.48", "-51.9782, -23.5317, 13.2163, 0.48", "-52.464, -23.5878, 13.5982, 0.48", "-61.7081, -26.9616, 16.744, 0.48", "-70.849, -30.01, 20.4734, 0.48", "-80.6237, -32.4411, 22.8227, 0.48", "-90.664, -34.7663, 23.7297, 0.48", "-100.467, -38.0643, 23.727, 0.48", "-109.899, -42.1705, 24.6902, 0.48", "-118.679, -47.3129, 26.3628, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-18.4513, 32.1346, -17.7471, 0.12", "-19.8833, 32.4945, -17.908, 0.12", "-20.9618, 32.7167, -18.2043, 0.12", "-21.2563, 32.7735, -18.2971, 0.12", "-21.7676, 32.8489, -18.4542, 0.6", "-22.3658, 32.9219, -18.6312, 0.84", "-22.7153, 32.9559, -18.7295, 0.84", "-23.5163, 32.9968, -19.0598, 0.12", "-24.0496, 32.99, -19.2579, 0.12", "-24.6489, 32.9761, -19.5012, 0.12", "-24.8933, 32.9874, -19.6071, 0.96", "-25.2221, 33.0232, -19.7605, 0.96", "-26.1551, 33.1497, -20.2014, 0.24", "-26.7244, 33.2115, -20.4596, 0.24", "-26.9971, 33.2285, -20.6149, 0.24", "-27.7074, 33.2498, -21.0684, 0.6", "-28.0777, 33.2381, -21.3268, 0.24", "-28.2948, 33.2271, -21.481, 0.24", "-28.8093, 33.1681, -21.8119, 0.24", "-29.3669, 33.0507, -22.1893, 0.84", "-29.7297, 32.9456, -22.4278, 0.84", "-30.3157, 32.7771, -22.7673, 0.24", "-30.5999, 32.7325, -22.8933, 0.24", "-30.8601, 32.7158, -22.9982, 0.24", "-31.2118, 32.7123, -23.1187, 0.24", "-31.3113, 32.709, -23.1447, 0.12", "-31.8578, 32.6858, -23.2736, 0.12", "-32.3746, 32.6645, -23.4304, 0.48", "-32.8904, 32.6443, -23.6254, 0.12", "-33.3063, 32.635, -23.805, 0.12", "-33.7184, 32.6383, -23.9935, 0.48", "-34.0101, 32.6439, -24.1258, 0.48", "-34.9393, 32.6844, -24.5425, 0.12", "-35.5049, 32.7326, -24.8118, 0.12", "-35.6131, 32.7455, -24.8743, 0.12", "-35.9988, 32.8098, -25.1616, 0.6", "-36.4159, 32.8767, -25.4965, 0.6", "-36.7245, 32.9169, -25.7435, 0.6", "-37.2996, 32.987, -26.1756, 0.72", "-38.1437, 33.0877, -26.8695, 0.36", "-38.6564, 33.1545, -27.2906, 0.12", "-39.1485, 33.2188, -27.7053, 0.12", "-39.3657, 33.2477, -27.8811, 0.72", "-39.6505, 33.2842, -28.1086, 0.84", "-40.1338, 33.348, -28.4448, 0.12", "-40.62, 33.4082, -28.7338, 0.12", "-41.0661, 33.4575, -28.9874, 0.6", "-41.3647, 33.4942, -29.1901, 0.72", "-42.2649, 33.5845, -29.8048, 0.12", "-42.6351, 33.6099, -30.0491, 0.12", "-43.0708, 33.6413, -30.3547, 0.12", "-43.2964, 33.6573, -30.5214, 0.48", "-44.0999, 33.7352, -31.0919, 0.12", "-44.7844, 33.8356, -31.6491, 0.12", "-44.9924, 33.8747, -31.8191, 1.08", "-45.8633, 34.0663, -32.5647, 0.12", "-46.0678, 34.1178, -32.7501, 0.12", "-46.4685, 34.2386, -33.091, 0.84", "-47.5088, 34.5942, -33.8839, 0.12", "-48.0474, 34.8072, -34.3027, 0.12", "-48.3325, 34.9291, -34.4959, 0.36", "-48.7511, 35.1179, -34.7224, 0.12", "-49.5266, 35.5156, -35.1073, 0.12", "-49.7702, 35.6667, -35.2462, 0.36", "-50.0549, 35.897, -35.4126, 0.12", "-50.5571, 36.4336, -35.7881, 0.12", "-50.6987, 36.6045, -35.8994, 0.48", "-50.846, 36.792, -36.0107, 0.48", "-51.5995, 37.7783, -36.7094, 0.12", "-52.0309, 38.3172, -37.119, 0.12", "-52.4107, 38.7628, -37.4664, 0.12", "-52.7608, 39.1348, -37.7661, 0.12", "-53.1013, 39.4497, -38.0059, 0.6", "-53.8451, 40.0262, -38.5076, 0.12", "-54.0563, 40.161, -38.6312, 0.12", "-54.3028, 40.2925, -38.785, 0.12", "-54.7667, 40.516, -39.0808, 0.12", "-55.1625, 40.6939, -39.3206, 0.48", "-56.2623, 41.1402, -39.8848, 0.12", "-56.5736, 41.2535, -40.0392, 0.12", "-57.2563, 41.4622, -40.3851, 0.6", "-57.5688, 41.5399, -40.5345, 0.12", "-57.977, 41.6249, -40.7108, 0.12", "-58.4856, 41.7177, -40.8907, 0.6", "-59.5121, 41.8814, -41.1985, 0.12", "-60.4391, 42.012, -41.4918, 0.12", "-61.0348, 42.0872, -41.6834, 0.12", "-61.4871, 42.1361, -41.8223, 0.12", "-62.1088, 42.1965, -41.99, 0.12", "-63.0364, 42.2856, -42.1917, 0.12", "-63.6561, 42.3457, -42.2749, 0.12", "-64.0248, 42.3837, -42.3204, 0.84", "-64.5361, 42.4458, -42.3745, 1.2", "-65.0309, 42.5276, -42.411, 0.12", "-65.4991, 42.6352, -42.4261, 0.12", "-66.1862, 42.8389, -42.4263, 0.12", "-66.7949, 43.0519, -42.4373, 0.48", "-67.086, 43.1661, -42.4542, 0.12", "-67.7797, 43.4721, -42.5202, 0.12", "-68.2487, 43.6787, -42.5798, 0.12", "-68.7076, 43.8741, -42.6441, 0.48", "-69.1723, 44.0677, -42.7393, 0.48", "-69.5562, 44.2191, -42.8336, 0.12", "-70.2696, 44.4833, -43.0551, 0.12", "-70.8199, 44.682, -43.2798, 0.12", "-71.2017, 44.8202, -43.4572, 0.48", "-71.7663, 45.0199, -43.7308, 0.12", "-72.3785, 45.2259, -44.0284, 0.12", "-73.2262, 45.5153, -44.4266, 0.84", "-73.8116, 45.7222, -44.7617, 0.12", "-74.1084, 45.8432, -44.9516, 0.12", "-74.5274, 46.0361, -45.2153, 0.12", "-74.9907, 46.289, -45.5813, 0.12", "-75.2469, 46.4384, -45.8115, 0.36", "-75.9899, 46.9282, -46.5504, 0.12", "-76.2534, 47.1314, -46.8544, 0.12", "-76.5066, 47.3733, -47.2433, 0.48", "-77.241, 48.3152, -48.8697, 0.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-18.4513, 32.1346, -17.7471, 0.12", "-18.5325, 32.5796, -17.7535, 0.12", "-18.654, 33.1933, -17.8049, 0.12", "-18.7402, 33.6021, -17.8468, 0.72", "-18.8112, 33.9436, -17.8868, 0.96", "-18.8574, 34.1586, -17.9126, 0.96", "-18.9869, 34.7815, -18.0279, 0.12", "-19.1518, 35.5866, -18.2332, 0.12", "-19.2058, 35.86, -18.3101, 0.48", "-19.2905, 36.268, -18.427, 0.24", "-19.4178, 36.8102, -18.5884, 0.24", "-19.6144, 37.6142, -18.8163, 0.72", "-19.7276, 38.0725, -18.927, 0.96", "-19.8617, 38.6055, -19.059, 0.36", "-19.9437, 38.9327, -19.1349, 0.36", "-20.0551, 39.3675, -19.2197, 0.12", "-20.1707, 39.7849, -19.2812, 0.12", "-20.3392, 40.322, -19.323, 0.12", "-20.42, 40.5589, -19.3427, 0.6", "-20.5692, 40.9849, -19.3808, 0.12", "-20.7056, 41.3813, -19.4112, 0.12", "-20.8497, 41.8051, -19.4353, 0.48", "-20.961, 42.0919, -19.4533, 0.96", "-21.0818, 42.3806, -19.4707, 0.96", "-21.2055, 42.6687, -19.485, 0.12", "-21.4141, 43.1118, -19.5029, 0.12", "-21.6281, 43.5486, -19.5231, 0.12", "-21.7176, 43.7301, -19.5308, 0.6", "-21.7651, 43.8171, -19.5344, 0.6", "-21.8782, 43.9857, -19.5421, 0.12", "-22.0517, 44.2227, -19.5973, 0.12", "-22.2664, 44.5115, -19.7088, 0.12", "-22.4719, 44.8024, -19.8413, 0.72", "-22.6021, 44.9966, -19.9423, 0.96", "-22.9154, 45.4801, -20.2383, 0.48", "-23.4308, 46.2778, -20.7707, 0.12", "-23.6321, 46.5815, -20.9889, 0.12", "-23.8086, 46.8329, -21.1787, 0.12", "-24.0132, 47.1111, -21.3881, 0.48", "-24.2261, 47.3913, -21.5977, 0.12", "-24.5408, 47.7704, -21.8489, 0.12", "-24.7034, 47.9469, -21.9354, 1.08", "-24.9003, 48.1479, -22.0278, 1.32", "-25.0694, 48.3205, -22.1098, 0.96", "-25.471, 48.7395, -22.296, 0.24", "-25.9191, 49.2223, -22.5416, 0.24", "-26.2534, 49.5794, -22.7556, 0.24", "-26.5761, 49.9167, -22.9753, 0.24", "-26.9262, 50.2553, -23.2107, 0.96", "-27.1174, 50.427, -23.3601, 1.2", "-27.6402, 50.873, -23.7978, 0.36", "-27.942, 51.1194, -24.0739, 0.12", "-28.1032, 51.247, -24.2223, 0.72", "-28.4429, 51.5294, -24.5365, 0.72", "-29.2341, 52.2082, -25.2273, 0.24", "-29.4302, 52.3847, -25.395, 0.12", "-29.6198, 52.5626, -25.5473, 0.12", "-29.8032, 52.7502, -25.6948, 0.24", "-30.2661, 53.2516, -26.038, 0.48", "-30.4936, 53.5214, -26.2054, 0.12", "-30.7035, 53.7755, -26.3299, 0.12", "-30.763, 53.8475, -26.3655, 0.72", "-31.0327, 54.1761, -26.5206, 0.84", "-31.2414, 54.4325, -26.6309, 0.84", "-31.7564, 55.0663, -26.9486, 0.36", "-32.0147, 55.3939, -27.1358, 0.12", "-32.2304, 55.6757, -27.3117, 0.6", "-32.4172, 55.9256, -27.4786, 1.08", "-32.5303, 56.0882, -27.5825, 1.08", "-33.0342, 56.8451, -28.0231, 0.12", "-33.2235, 57.1361, -28.1635, 0.12", "-33.3486, 57.3361, -28.2587, 0.48", "-33.5455, 57.6701, -28.3946, 0.12", "-33.9305, 58.3264, -28.6119, 0.12", "-34.0605, 58.5381, -28.6631, 0.72", "-34.2782, 58.8821, -28.7118, 0.84", "-34.499, 59.2159, -28.7597, 0.12", "-34.8258, 59.691, -28.8239, 0.12", "-35.0291, 59.975, -28.8574, 0.12", "-35.3289, 60.3697, -28.9058, 0.6", "-35.5246, 60.622, -28.9328, 0.36", "-35.7111, 60.8546, -28.9532, 0.6", "-35.9663, 61.1743, -28.9917, 0.84", "-36.0989, 61.3443, -29.0185, 0.84", "-36.3972, 61.7496, -29.0864, 0.24", "-36.7388, 62.2345, -29.1824, 0.12", "-36.9887, 62.6015, -29.2603, 0.48", "-37.4049, 63.2419, -29.4046, 0.12", "-37.7579, 63.8165, -29.5385, 0.12", "-37.9443, 64.1375, -29.6134, 0.48", "-38.0924, 64.4074, -29.6734, 0.12", "-38.2954, 64.7956, -29.747, 0.12", "-38.3588, 64.9195, -29.7659, 0.36", "-38.5518, 65.2926, -29.8173, 0.12", "-38.6567, 65.4858, -29.8492, 0.12", "-38.9506, 66.0019, -29.9319, 0.48", "-39.2213, 66.4587, -29.9995, 1.2", "-39.4299, 66.7924, -30.0517, 0.6", "-39.6494, 67.1389, -30.1127, 0.12", "-40.0523, 67.7678, -30.2301, 0.12", "-40.504, 68.4688, -30.3641, 0.12", "-40.6394, 68.6796, -30.4039, 0.12", "-40.8279, 68.9666, -30.4542, 0.6", "-41.0638, 69.3299, -30.5217, 0.12", "-41.3138, 69.7169, -30.5961, 0.12", "-41.4718, 69.9632, -30.6557, 0.72", "-41.638, 70.2201, -30.7304, 0.72", "-41.7706, 70.4224, -30.7897, 0.72", "-42.043, 70.8607, -30.9565, 0.12", "-42.3286, 71.3501, -31.1577, 0.12", "-42.4851, 71.64, -31.2824, 0.12", "-42.7625, 72.1929, -31.5104, 0.48", "-42.9651, 72.6234, -31.687, 0.48", "-43.307, 73.3756, -31.9808, 0.12", "-43.5536, 73.9353, -32.1776, 0.12", "-43.6896, 74.2658, -32.3027, 0.12", "-43.8678, 74.7124, -32.4661, 0.12", "-43.9559, 74.9334, -32.5376, 0.72", "-44.0838, 75.2464, -32.6329, 0.72", "-44.1959, 75.5, -32.6933, 0.48", "-44.383, 75.9255, -32.8075, 0.12", "-44.5863, 76.4282, -32.996, 0.12", "-44.6801, 76.6851, -33.1006, 0.36", "-44.7678, 76.9257, -33.1885, 0.12", "-44.9081, 77.3049, -33.3072, 0.12", "-45.0077, 77.567, -33.3791, 0.48", "-45.3781, 78.5286, -33.603, 0.24", "-45.6016, 79.1009, -33.7405, 0.24", "-45.9584, 80.0111, -33.9478, 0.24", "-46.3094, 80.8995, -34.1251, 0.24", "-46.3926, 81.1017, -34.1624, 0.24", "-46.503, 81.36, -34.2007, 0.48", "-46.6675, 81.7232, -34.2351, 0.12", "-46.8586, 82.0949, -34.2878, 0.12", "-47.0036, 82.3421, -34.3308, 0.12", "-47.1707, 82.5854, -34.3757, 0.48", "-47.2992, 82.7577, -34.4073, 0.72", "-47.632, 83.172, -34.4773, 0.12", "-48.2385, 83.8883, -34.5811, 0.12", "-48.7316, 84.457, -34.6965, 0.12", "-49.0216, 84.7944, -34.7752, 0.12", "-49.1306, 84.9253, -34.8071, 0.84", "-49.349, 85.1968, -34.8754, 0.96", "-49.6866, 85.6367, -34.9822, 0.72", "-50.0526, 86.1517, -35.1106, 0.12", "-50.5131, 86.8056, -35.2741, 0.12", "-50.7209, 87.1081, -35.3707, 0.36", "-51.0635, 87.6157, -35.551, 0.12", "-51.3502, 88.0706, -35.7179, 0.12", "-51.5011, 88.331, -35.8103, 0.12", "-51.6364, 88.575, -35.8897, 0.72", "-52.0888, 89.393, -36.1797, 0.12", "-52.3907, 89.9399, -36.4177, 0.12", "-52.6409, 90.3899, -36.6333, 0.12", "-52.7661, 90.6194, -36.7468, 0.12", "-52.9077, 90.9014, -36.9046, 0.12", "-53.0826, 91.2812, -37.1262, 0.36", "-53.3529, 91.8568, -37.4605, 0.12", "-53.5617, 92.2839, -37.7685, 0.12", "-53.6434, 92.4375, -37.8903, 0.48", "-53.9541, 93.0691, -38.3192, 0.24", "-53.9769, 93.1266, -38.3532, 0.12", "-54.0656, 93.3922, -38.4975, 0.12", "-54.1519, 93.6565, -38.6058, 0.12", "-54.2397, 93.9184, -38.7067, 0.12", "-54.4727, 94.6152, -38.9363, 0.12", "-54.5889, 95.0057, -39.0733, 0.36", "-54.6734, 95.374, -39.2228, 0.12", "-54.8356, 96.1492, -39.5284, 0.12", "-54.8864, 96.3808, -39.6073, 0.6", "-54.9466, 96.6159, -39.6785, 0.6", "-55.2228, 97.4807, -39.9176, 0.12", "-55.3808, 97.9188, -40.0556, 0.12", "-55.8356, 99.056, -40.4497, 0.12", "-56.1993, 99.8759, -40.7664, 0.12", "-56.3627, 100.21, -40.8966, 0.12", "-56.5052, 100.455, -40.9921, 0.84", "-57.1405, 101.418, -41.3985, 0.12", "-57.3578, 101.72, -41.5638, 0.12", "-57.6021, 102.056, -41.7825, 0.12", "-57.8103, 102.345, -41.9653, 0.12", "-58.0476, 102.68, -42.1414, 0.48", "-58.4546, 103.262, -42.3657, 0.12", "-58.7193, 103.64, -42.4377, 0.12", "-59.115, 104.214, -42.5167, 0.12", "-59.4293, 104.663, -42.5586, 0.12", "-59.7721, 105.146, -42.5839, 0.48", "-59.944, 105.39, -42.5864, 0.12", "-60.7601, 106.495, -42.5315, 0.12", "-61.0912, 106.928, -42.5096, 0.12", "-61.4695, 107.395, -42.4869, 0.12", "-61.6544, 107.629, -42.4756, 0.6" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.56637, 35.9502, -0.00167934, 0.12", "-12.2185, 50.4988, -0.00167934, 0.12", "-15.8707, 65.0474, -0.00167934, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-0.394194, 20.5307, -3.40074, 0.96", "-0.462248, 20.8544, -3.94116, 0.96", "-0.593863, 21.2377, -4.48966, 0.96", "-0.77501, 21.6007, -4.92489, 0.6", "-1.84953, 23.4864, -6.97864, 0.72", "-2.09679, 23.9001, -7.39281, 0.12", "-2.43617, 24.4624, -7.89467, 0.12", "-2.80467, 25.111, -8.43288, 0.24", "-3.35027, 26.0891, -9.14223, 0.6", "-3.88459, 27.0345, -9.71212, 0.6", "-4.16999, 27.5296, -9.95991, 0.12", "-4.63274, 28.414, -10.4378, 0.12", "-5.03379, 29.2585, -10.9195, 0.12", "-5.32153, 29.9312, -11.3483, 0.48", "-5.45613, 30.2618, -11.5763, 0.48", "-5.81839, 31.1046, -12.2819, 0.12", "-6.07549, 31.6267, -12.805, 0.12", "-6.27136, 31.9866, -13.2419, 0.6", "-6.61007, 32.5351, -13.9609, 0.12", "-6.86171, 32.9352, -14.5543, 0.12", "-7.41628, 33.7951, -15.8637, 0.12", "-7.69768, 34.1887, -16.4482, 0.12", "-7.94437, 34.508, -16.9349, 0.12", "-8.20027, 34.816, -17.3787, 0.96", "-8.83698, 35.5107, -18.2827, 0.12", "-9.07827, 35.776, -18.6347, 0.12", "-9.52678, 36.2363, -19.201, 0.12", "-9.84987, 36.5416, -19.5834, 0.96", "-10.2345, 36.8829, -20.0133, 1.08", "-10.3899, 37.0133, -20.1839, 1.08", "-11.4815, 37.9008, -21.3304, 0.24", "-12.0403, 38.3696, -21.9613, 0.12", "-12.6386, 38.8889, -22.6661, 0.12", "-12.9432, 39.1522, -23.016, 0.72", "-13.19, 39.3691, -23.2894, 0.72", "-13.7509, 39.8831, -23.8382, 0.36", "-14.0525, 40.1684, -24.0657, 0.12", "-14.3555, 40.4849, -24.2931, 0.12", "-14.6134, 40.7705, -24.4732, 0.48", "-14.8693, 41.0503, -24.6269, 0.12", "-15.3525, 41.5893, -24.921, 0.12", "-15.6239, 41.8853, -25.0752, 0.12", "-16.0704, 42.3442, -25.3248, 0.84", "-16.466, 42.7266, -25.5258, 0.72", "-16.7666, 42.995, -25.6623, 0.12", "-17.1039, 43.2715, -25.7917, 0.12", "-17.6107, 43.6707, -25.9655, 0.12", "-18.1353, 44.0919, -26.1274, 0.12", "-18.6341, 44.4955, -26.262, 0.48", "-19.2132, 44.9615, -26.399, 0.6", "-19.5678, 45.2532, -26.476, 0.24", "-20.0618, 45.6774, -26.6224, 0.24", "-20.3618, 45.9512, -26.7484, 0.12", "-20.6943, 46.2778, -26.9301, 0.12", "-20.9614, 46.5447, -27.1075, 0.6", "-21.4488, 47.0098, -27.4507, 0.84", "-22.2437, 47.7103, -28.0186, 0.12", "-22.6953, 48.0784, -28.3335, 0.12", "-23.1115, 48.3955, -28.61, 0.24", "-23.3811, 48.5923, -28.7794, 0.12", "-24.0876, 49.082, -29.1836, 0.12", "-24.4929, 49.3516, -29.4143, 0.48", "-24.9466, 49.6548, -29.6545, 0.12", "-25.3163, 49.916, -29.8724, 0.12", "-25.497, 50.0553, -29.9881, 0.48", "-25.8867, 50.4149, -30.2477, 0.48", "-26.3791, 50.9559, -30.6865, 0.12", "-26.6977, 51.3321, -31.0109, 0.12", "-27.054, 51.8009, -31.4728, 0.48", "-27.2085, 52.0258, -31.6962, 0.12", "-27.7312, 52.8234, -32.434, 0.12", "-28.3779, 53.8458, -33.3097, 0.84", "-28.6372, 54.2618, -33.6358, 0.84", "-29.1661, 55.1397, -34.3203, 0.12", "-29.6478, 55.9695, -34.9713, 0.12", "-30.2459, 57.0021, -35.7567, 0.12", "-30.4286, 57.3134, -35.9778, 0.6", "-30.6595, 57.7101, -36.2461, 0.72", "-30.9288, 58.195, -36.619, 0.12", "-31.3576, 58.9388, -37.2307, 0.12", "-31.5823, 59.3352, -37.6049, 0.12", "-31.7461, 59.6488, -37.9498, 0.72", "-32.1849, 60.4709, -38.8444, 0.72", "-32.4948, 61.0347, -39.4411, 0.12", "-32.974, 61.9634, -40.4212, 0.12", "-33.11, 62.2493, -40.7051, 0.48", "-33.4433, 63.0054, -41.3743, 0.12", "-33.9867, 64.2565, -42.3554, 0.12", "-34.0716, 64.4594, -42.4991, 0.48", "-34.4163, 65.3474, -43.0511, 0.12", "-34.6895, 66.1653, -43.5433, 0.12", "-35.0195, 67.2222, -44.1299, 0.12", "-35.0854, 67.4458, -44.2493, 0.48", "-35.2933, 68.2485, -44.687, 0.12", "-35.7872, 70.1217, -45.7393, 0.12", "-35.9171, 70.5816, -45.9909, 0.6", "-35.9994, 70.8811, -46.1554, 0.72", "-36.208, 71.5983, -46.5381, 0.12", "-36.4376, 72.3293, -46.8983, 0.24", "-36.6421, 72.8923, -47.1428, 0.12", "-36.9308, 73.6225, -47.4563, 0.12", "-37.4731, 74.8961, -47.9546, 0.12", "-37.6656, 75.3271, -48.1083, 0.48", "-37.7136, 75.4298, -48.1367, 0.12", "-37.9769, 75.9741, -48.2777, 0.12", "-38.0931, 76.2048, -48.3182, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-0.394194, 20.5307, -3.40074, 0.96", "-0.500697, 21.4038, -3.40486, 0.96", "-0.568379, 21.9551, -3.40873, 0.96", "-0.68811, 22.8327, -3.41921, 0.6", "-0.791404, 23.5994, -3.42929, 0.48", "-0.949289, 24.8045, -3.44606, 0.48", "-1.13686, 26.2392, -3.46834, 0.48", "-1.20885, 26.7788, -3.46982, 0.96", "-1.28875, 27.3696, -3.46355, 1.44", "-1.38036, 28.0275, -3.44971, 1.08", "-1.48572, 28.795, -3.42708, 0.84", "-1.62151, 29.7786, -3.39227, 0.84", "-1.6992, 30.4418, -3.36749, 0.36", "-1.81691, 31.6491, -3.32806, 0.36", "-1.85322, 32.09, -3.30745, 0.72", "-1.91701, 32.9629, -3.25978, 1.32", "-1.93946, 33.4044, -3.23333, 1.32", "-1.96371, 34.2955, -3.18213, 0.6", "-1.97473, 35.178, -3.14203, 0.48", "-1.982, 35.9508, -3.10213, 0.6", "-1.98917, 36.3977, -3.07902, 0.96", "-2.00664, 37.0691, -3.02893, 0.84", "-2.0449, 38.052, -2.94274, 0.72", "-2.08609, 38.8133, -2.86918, 0.72", "-2.11825, 39.3747, -2.81797, 1.08", "-2.14373, 39.8067, -2.78981, 1.2", "-2.22377, 40.9003, -2.70393, 0.6", "-2.29044, 41.6606, -2.64078, 0.6", "-2.32303, 41.9901, -2.61389, 0.96", "-2.3839, 42.5411, -2.57704, 0.96", "-2.45403, 43.1336, -2.55866, 0.84", "-2.58774, 44.1891, -2.5624, 0.36", "-2.754, 45.3905, -2.60895, 0.36", "-2.85435, 46.047, -2.62835, 0.72", "-2.98368, 46.8218, -2.63926, 1.08", "-3.17044, 47.8338, -2.64337, 0.6", "-3.33712, 48.6945, -2.64505, 0.48", "-3.4494, 49.248, -2.65272, 0.48", "-3.64723, 50.1963, -2.65725, 1.2", "-3.83727, 51.081, -2.65419, 0.48", "-4.08233, 52.1744, -2.641, 0.48", "-4.21423, 52.7382, -2.61813, 0.12", "-4.41605, 53.598, -2.57811, 0.12", "-4.48424, 53.9223, -2.55269, 0.12", "-4.54091, 54.2575, -2.51987, 0.96", "-4.62808, 54.9202, -2.43532, 0.96", "-4.72217, 55.7997, -2.30197, 0.72", "-4.7629, 56.2354, -2.23219, 0.84", "-4.86039, 57.3558, -2.03901, 0.48", "-4.94429, 58.4426, -1.86274, 0.48", "-5.00325, 59.3084, -1.7363, 0.48", "-5.05221, 60.0845, -1.64393, 1.08", "-5.07543, 60.5158, -1.60458, 1.32", "-5.13596, 61.8012, -1.50552, 0.36", "-5.19058, 63.2324, -1.42828, 0.36", "-5.21505, 64.0984, -1.38606, 0.48", "-5.23362, 65.518, -1.32868, 0.6", "-5.23704, 66.4329, -1.30116, 0.72", "-5.24406, 67.2065, -1.29169, 0.72", "-5.25865, 67.7766, -1.29672, 0.72", "-5.31254, 68.7711, -1.32437, 0.36", "-5.42809, 70.0899, -1.32164, 0.48", "-5.61927, 71.7218, -1.27932, 0.48", "-5.75261, 72.6176, -1.24188, 0.48", "-6.01971, 74.1505, -1.15494, 0.96", "-6.38532, 76.0147, -1.00799, 0.48", "-6.676, 77.346, -0.882094, 0.12", "-6.8027, 77.8862, -0.824593, 0.12", "-7.05904, 78.9705, -0.699869, 0.72", "-7.13432, 79.3011, -0.657324, 0.84", "-7.28455, 79.9932, -0.572279, 0.48", "-7.53746, 81.187, -0.419115, 0.48", "-7.73919, 82.262, -0.317335, 0.48", "-7.83348, 82.7955, -0.261747, 0.96", "-7.96939, 83.6301, -0.166794, 0.36", "-8.15529, 84.8226, -0.0336137, 0.36", "-8.31194, 85.8683, 0.0762747, 0.36", "-8.46457, 86.9553, 0.193781, 0.36", "-8.54081, 87.4958, 0.245803, 0.84", "-8.58777, 87.8234, 0.275213, 0.84", "-8.68267, 88.4888, 0.320105, 0.36", "-8.76338, 89.0255, 0.364326, 0.12", "-8.84, 89.5736, 0.377413, 0.96", "-8.93118, 90.2317, 0.379004, 1.32", "-9.07174, 91.1854, 0.419052, 0.36", "-9.23423, 92.2747, 0.491192, 0.36", "-9.42316, 93.5504, 0.59867, 0.6", "-9.59969, 94.8063, 0.704273, 0.48", "-9.71567, 95.6726, 0.773218, 0.48", "-9.87676, 96.9508, 0.861757, 0.84", "-9.96117, 97.6091, 0.891171, 0.96", "-9.99322, 97.8281, 0.899503, 0.96", "-10.0894, 98.3708, 0.930664, 0.36", "-10.1989, 98.922, 0.988529, 0.36", "-10.3014, 99.467, 1.02446, 0.84", "-10.4121, 100.158, 1.04041, 1.32", "-10.48, 100.6, 1.07522, 0.96", "-10.6027, 101.522, 1.18691, 0.36", "-10.7364, 102.71, 1.37047, 0.36", "-10.7918, 103.465, 1.48501, 0.36", "-10.8132, 104.123, 1.57758, 0.36", "-10.806, 104.934, 1.6817, 0.72", "-10.7882, 105.516, 1.76209, 0.36", "-10.7482, 106.394, 1.87565, 0.24", "-10.7235, 106.946, 1.9559, 0.84", "-10.7044, 107.508, 2.03714, 0.84", "-10.701, 107.966, 2.0914, 0.72", "-10.7255, 108.69, 2.19148, 0.12", "-10.7912, 109.559, 2.34901, 0.12", "-10.8583, 110.196, 2.49317, 0.48", "-10.8945, 110.52, 2.55935, 0.24", "-11.0439, 111.815, 2.76424, 0.24", "-11.1475, 112.705, 2.8809, 0.72", "-11.207, 113.253, 2.93403, 1.08", "-11.3099, 114.16, 3.0167, 0.96", "-11.4289, 115.128, 3.11197, 0.72", "-11.5277, 115.901, 3.18637, 0.6", "-11.616, 116.601, 3.24222, 0.12", "-11.7076, 117.257, 3.29964, 0.12", "-11.8286, 118.01, 3.43141, 0.12", "-11.9437, 118.675, 3.59193, 0.48", "-12.0015, 118.98, 3.68359, 0.12", "-12.2275, 120.115, 4.04401, 0.12", "-12.412, 121.021, 4.30706, 0.6", "-12.6018, 121.901, 4.54514, 0.12", "-12.8141, 122.956, 4.77061, 0.12", "-12.8772, 123.297, 4.82308, 0.12", "-12.9874, 123.936, 4.89983, 0.6", "-13.2111, 125.349, 5.01608, 1.08", "-13.3202, 126.138, 5.04749, 1.08", "-13.4839, 127.479, 5.07111, 0.48", "-13.5752, 128.352, 5.09462, 0.12", "-13.7033, 129.814, 5.14107, 0.12", "-13.7384, 130.357, 5.15935, 0.12", "-13.7818, 131.345, 5.19306, 0.12", "-13.8019, 132.045, 5.21077, 0.72", "-13.8141, 132.506, 5.21756, 0.12", "-13.8265, 133.17, 5.20955, 0.12", "-13.8446, 134.493, 5.15742, 0.48", "-13.8617, 135.624, 5.0927, 0.6", "-13.8773, 136.398, 5.03624, 0.6", "-13.896, 136.95, 5.00095, 0.84", "-13.9366, 137.715, 4.97098, 0.6", "-14.0043, 138.588, 4.96505, 0.72", "-14.0801, 139.279, 4.97962, 0.36", "-14.2202, 140.253, 5.05226, 0.48", "-14.4363, 141.482, 5.17982, 0.48", "-14.659, 142.724, 5.33377, 0.6", "-14.846, 143.701, 5.47022, 0.48", "-14.9578, 144.249, 5.55289, 0.48", "-15.2054, 145.39, 5.7886, 0.12", "-15.3602, 146.089, 5.9587, 0.12", "-15.5641, 147.023, 6.19243, 0.12", "-15.6453, 147.403, 6.28604, 0.96", "-15.768, 147.941, 6.41032, 1.08", "-16.0985, 149.29, 6.68009, 0.36", "-16.2378, 149.82, 6.76504, 0.36", "-16.5939, 151.088, 6.95062, 0.36", "-16.8371, 151.853, 7.03542, 0.36", "-17.0966, 152.649, 7.08647, 0.24", "-17.2874, 153.219, 7.08685, 0.24", "-17.4329, 153.646, 7.05361, 0.6", "-17.5463, 153.958, 7.02699, 0.6", "-17.7918, 154.608, 6.9934, 0.36", "-18.0917, 155.398, 6.97326, 0.36", "-18.4397, 156.33, 6.96906, 0.24", "-18.9397, 157.713, 6.99021, 0.24", "-19.275, 158.696, 7.01757, 0.24", "-19.5147, 159.45, 7.05073, 0.24", "-19.605, 159.779, 7.07133, 0.6", "-19.7053, 160.209, 7.10155, 0.6", "-19.7947, 160.656, 7.13162, 0.6", "-19.9304, 161.521, 7.17787, 0.36", "-19.9661, 161.766, 7.18119, 0.12", "-20.1083, 162.63, 7.14919, 0.12", "-20.2365, 163.309, 7.10768, 0.12", "-20.3373, 163.753, 7.06926, 0.36", "-20.4006, 163.991, 7.04432, 0.12", "-20.6387, 164.786, 6.94525, 0.12", "-20.7647, 165.208, 6.89052, 0.48", "-20.8576, 165.558, 6.84631, 0.12", "-20.9427, 165.997, 6.79952, 0.12", "-21.039, 166.875, 6.72809, 0.12", "-21.0931, 167.575, 6.67848, 0.72", "-21.1103, 168.129, 6.64885, 0.84", "-21.1136, 168.624, 6.63269, 0.36", "-21.0912, 169.318, 6.63626, 0.36", "-21.0388, 169.811, 6.64528, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.25884, -26.3293, 9.20994, 0.6", "-4.56524, -27.7366, 7.67745, 0.6", "-5.05317, -28.2757, 7.09669, 0.48", "-5.60556, -28.9037, 6.46692, 0.48", "-6.18353, -29.6003, 5.82752, 0.48", "-6.59998, -30.1167, 5.40938, 0.48", "-7.31802, -31.0351, 4.7482, 0.6", "-7.90072, -31.855, 4.31322, 0.72", "-8.706, -33.0174, 3.69682, 0.84", "-9.37459, -34.0209, 3.19629, 0.84", "-9.85838, -34.7679, 2.89652, 1.08", "-10.272, -35.4486, 2.68133, 1.32", "-10.7006, -36.2249, 2.49621, 1.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.25884, -26.3293, 9.20994, 0.96", "-3.23885, -27.6426, 9.94779, 0.96", "-3.20907, -28.216, 10.213, 0.6", "-3.12424, -29.1249, 10.6479, 0.48", "-3.02748, -29.9496, 11.0315, 0.12", "-2.90582, -30.8574, 11.4568, 0.12", "-2.84819, -31.2695, 11.6466, 0.72", "-2.73877, -32.2274, 12.0146, 0.72", "-2.63527, -33.2032, 12.4401, 0.6", "-2.58917, -33.6695, 12.6701, 0.6", "-2.54784, -34.3689, 13.0192, 0.36", "-2.5332, -34.6946, 13.1929, 0.36", "-2.5089, -35.4037, 13.5643, 0.36", "-2.46064, -36.6837, 14.2466, 0.36", "-2.42276, -37.39, 14.589, 0.6", "-2.36486, -37.9569, 14.8696, 0.6", "-2.26535, -38.523, 15.1345, 0.72", "-2.15551, -38.9772, 15.3434, 0.84", "-1.89268, -39.8621, 15.7158, 0.6", "-1.72577, -40.4354, 15.9317, 0.48", "-1.62347, -40.934, 16.1443, 0.36", "-1.56872, -41.5831, 16.4924, 0.36", "-1.57438, -41.8959, 16.6701, 0.6", "-1.61306, -42.381, 16.9413, 0.72", "-1.7032, -43.2541, 17.3781, 0.72", "-1.73015, -43.9919, 17.8097, 0.48", "-1.7044, -44.7094, 18.2355, 0.6", "-1.65525, -45.2835, 18.5848, 0.84", "-1.59953, -45.7359, 18.8404, 1.08", "-1.47976, -46.4797, 19.2338, 1.32", "-1.12045, -48.4105, 20.126, 0.72", "-0.9951, -49.0755, 20.3958, 0.36", "-0.743494, -50.5165, 20.9279, 0.48", "-0.612075, -51.4673, 21.2693, 0.6", "-0.575713, -51.8361, 21.3887, 0.84", "-0.530742, -52.6974, 21.6163, 0.84", "-0.524344, -53.6887, 21.7852, 0.72", "-0.516734, -54.6121, 21.9089, 0.48", "-0.469063, -55.5987, 22.0205, 0.36", "-0.420074, -56.2166, 22.0914, 0.36", "-0.33795, -56.964, 22.1711, 0.6", "-0.207811, -57.8315, 22.2516, 0.6", "-0.0185683, -58.6967, 22.3458, 0.6", "0.247343, -59.596, 22.4445, 0.6", "0.617616, -60.5536, 22.5528, 0.48", "0.955062, -61.3223, 22.6792, 0.48", "1.27701, -62.0261, 22.8426, 0.6", "1.70727, -62.998, 23.1435, 0.36", "1.92451, -63.5527, 23.332, 0.36", "2.29717, -64.6373, 23.6838, 0.36", "2.66706, -65.8607, 24.0809, 0.48", "2.86459, -66.6275, 24.3101, 0.48", "3.0797, -67.6418, 24.5672, 0.48", "3.24099, -68.6477, 24.8187, 0.48", "3.33397, -69.3739, 25.012, 0.72", "3.39934, -69.9842, 25.2065, 0.72", "3.45234, -70.4186, 25.3537, 0.72", "3.5678, -71.1241, 25.6068, 0.84", "3.78259, -72.3122, 26.0893, 0.12", "3.93054, -73.087, 26.4915, 0.12", "4.12364, -74.0719, 27.0892, 0.48", "4.20775, -74.4946, 27.3811, 0.6", "4.32598, -75.0804, 27.8281, 0.6", "4.22878, -85.3698, 29.9428, 0.6", "3.98086, -95.5203, 32.6636, 0.6", "2.20707, -104.988, 36.9483, 0.6", "2.13338, -114.042, 42.3906, 0.6", "3.4414, -124.123, 45.0912, 0.6", "4.92474, -134.477, 46.0437, 0.6", "8.5332, -144.362, 46.4418, 0.6", "12.3575, -154.109, 47.6203, 0.6", "16.7482, -163.687, 48.074, 0.6", "22.1275, -172.656, 49.6352, 0.6", "26.107, -181.883, 52.8842, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "43.3719, 11.6668, 36.2814, 0.48", "51.5107, 16.5776, 42.0592, 0.48", "58.5063, 22.8656, 47.9356, 0.48", "65.4333, 29.2001, 53.8416, 0.48", "73.3682, 34.47, 59.5704, 0.48", "80.7005, 39.3879, 66.3447, 0.48", "87.2917, 43.3875, 74.4018, 0.48", "92.6434, 48.2671, 82.864, 0.48", "99.4366, 51.7671, 90.9963, 0.48", "105.298, 54.3684, 100.147, 0.48", "112.045, 58.0646, 108.226, 0.48", "119.977, 61.3995, 115.33, 0.48", "128.689, 65.0266, 121.267, 0.48", "136.347, 67.8115, 128.903, 0.48", "144.427, 70.2665, 136.215, 0.48", "153.764, 72.5982, 141.883, 0.48", "164.034, 74.515, 145.831, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "43.3719, 11.6668, 36.2814, 0.36", "50.1902, 15.1575, 40.4495, 0.48", "57.3625, 19.3717, 43.0286, 0.48", "63.6494, 23.9001, 46.9768, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.83594, -12.4245, -29.9259, 0.48", "-7.9098, -12.0908, -32.5423, 0.48", "-8.46353, -11.9805, -33.2177, 0.48", "-8.60615, -11.9536, -33.3692, 0.12", "-9.02667, -11.8734, -33.8124, 0.12", "-9.70258, -11.7537, -34.5054, 0.72", "-10.1995, -11.6711, -35.0281, 0.84", "-10.928, -11.5615, -35.6912, 0.12", "-11.8073, -11.4373, -36.5438, 0.12", "-12.5628, -11.3321, -37.2723, 0.84", "-12.7945, -11.3075, -37.4878, 0.84", "-13.6756, -11.2545, -38.2683, 0.12", "-13.8902, -11.2474, -38.4528, 0.12", "-14.2523, -11.2405, -38.7154, 0.12", "-14.4789, -11.2316, -38.8767, 1.08", "-14.9651, -11.2068, -39.1608, 0.84", "-15.8107, -11.1485, -39.61, 0.12", "-16.4773, -11.0813, -39.9517, 0.12", "-16.7571, -11.034, -40.1781, 0.48", "-17.1641, -10.9366, -40.615, 0.12", "-17.5531, -10.8197, -41.0865, 0.12", "-17.7397, -10.7393, -41.387, 0.84", "-18.1058, -10.5626, -42.0495, 1.08", "-18.9849, -10.1452, -43.7913, 0.6", "-19.2481, -10.0215, -44.3247, 0.84", "-19.4065, -9.94884, -44.651, 0.84", "-20.3327, -9.5556, -46.5349, 0.12", "-20.5062, -9.49344, -46.8474, 0.12", "-20.7523, -9.42819, -47.2064, 0.12", "-20.9362, -9.39202, -47.4122, 0.48", "-21.3199, -9.33352, -47.8115, 0.12", "-22.2238, -9.2272, -48.6685, 0.12", "-22.6417, -9.1894, -48.9893, 0.12", "-23.2083, -9.11384, -49.439, 0.84", "-23.4135, -9.07966, -49.6016, 0.84", "-24.2062, -8.94534, -50.2074, 0.12", "-24.4969, -8.89587, -50.419, 0.12", "-24.7828, -8.84513, -50.6182, 0.12", "-25.7569, -8.67024, -51.2551, 0.12", "-25.9039, -8.64067, -51.3474, 0.72", "-26.5576, -8.49498, -51.7464, 0.72", "-27.1339, -8.35499, -52.0941, 0.12", "-27.4856, -8.265, -52.3428, 0.12", "-27.9638, -8.13925, -52.7102, 0.48", "-28.6137, -7.96277, -53.2375, 0.12", "-28.8117, -7.90618, -53.4028, 0.12", "-29.2996, -7.73936, -53.8992, 0.72", "-29.9093, -7.51061, -54.5889, 0.12", "-30.0785, -7.44751, -54.8097, 0.12", "-30.126, -7.43139, -54.882, 0.6", "-30.323, -7.37794, -55.182, 0.6", "-31.1952, -7.17218, -56.4739, 0.48", "-31.4504, -7.12031, -56.8395, 0.48", "-32.1777, -7.01788, -57.8607, 0.72", "-32.8582, -6.96356, -58.7586, 0.12", "-33.1058, -6.96177, -59.0604, 0.12", "-33.399, -6.98105, -59.3918, 0.48", "-34.2089, -7.11704, -60.1592, 0.12", "-34.9364, -7.30527, -60.8486, 0.12", "-35.4295, -7.48058, -61.2749, 0.12", "-35.7769, -7.63658, -61.5534, 0.12", "-36.1319, -7.83877, -61.8743, 0.6", "-36.4465, -8.04176, -62.1979, 0.6", "-37.1054, -8.50261, -62.8863, 0.12", "-37.3408, -8.66615, -63.1428, 0.12", "-37.6056, -8.83649, -63.4468, 0.12", "-38.3381, -9.26558, -64.2262, 0.12", "-38.9449, -9.58808, -64.8902, 0.12", "-39.197, -9.70644, -65.1617, 0.12", "-39.4188, -9.79412, -65.3695, 0.12", "-39.7179, -9.89774, -65.639, 0.6", "-40.2586, -10.0688, -66.1314, 0.6", "-41.5102, -10.4332, -67.0584, 0.12", "-41.8228, -10.5283, -67.2757, 0.12", "-42.3248, -10.6721, -67.6563, 0.12", "-42.6574, -10.7541, -67.8988, 0.36", "-43.5291, -10.9255, -68.4838, 0.12", "-44.4736, -11.0556, -69.081, 0.12", "-45.2212, -11.1567, -69.4632, 0.36", "-45.8937, -11.2439, -69.8028, 0.12", "-46.7627, -11.3434, -70.2542, 0.12", "-47.0896, -11.3678, -70.4093, 0.48", "-47.6556, -11.4028, -70.6935, 0.12", "-48.2003, -11.4399, -71.0164, 0.12", "-48.5115, -11.4614, -71.2149, 0.36", "-49.0266, -11.4962, -71.6532, 0.12", "-49.4017, -11.4842, -72.1726, 0.12", "-49.8414, -11.4162, -72.9796, 0.6", "-49.9147, -11.3877, -73.16, 0.6", "-50.2222, -11.1768, -74.118, 0.12", "-50.5173, -10.826, -75.4006, 0.48", "-50.7729, -10.2968, -77.0628, 0.12", "-50.8133, -10.1215, -77.5255, 0.12", "-50.8489, -9.69585, -78.4785, 0.12", "-50.8457, -9.55433, -78.815, 0.6", "-50.779, -9.0554, -80.0761, 0.48", "-50.6926, -8.65876, -81.2095, 0.24", "-50.6643, -8.49885, -81.821, 0.24", "-50.6753, -8.12571, -83.8023, 0.84", "-50.8279, -7.78945, -86.0324, 0.48", "-50.8766, -7.75413, -86.4214, 0.48", "-50.9515, -7.74342, -86.8077, 0.6", "-51.4477, -7.80585, -88.6705, 0.6", "-52.1557, -7.96093, -90.9575, 0.12", "-52.571, -8.069, -92.0324, 0.12", "-53.2913, -8.20736, -93.5772, 0.12", "-53.5639, -8.24608, -94.149, 0.12", "-53.8613, -8.28667, -94.7621, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.83594, -12.4245, -29.9259, 0.12", "-6.08732, -12.2134, -29.8982, 0.12", "-6.40838, -11.9273, -29.8553, 0.12", "-6.93055, -11.4181, -29.9993, 0.12", "-7.19248, -11.1116, -30.1349, 0.6", "-7.47687, -10.7131, -30.3868, 0.84", "-7.64897, -10.453, -30.5797, 0.6", "-7.92375, -9.99724, -30.9508, 0.6", "-8.60343, -8.7292, -32.2092, 0.12", "-8.84675, -8.21813, -32.7938, 0.12", "-9.21464, -7.44373, -33.7012, 0.72", "-9.48186, -6.89423, -34.3405, 0.72", "-9.62242, -6.6219, -34.6459, 0.72", "-10.1047, -5.70508, -35.6567, 0.72", "-10.5542, -4.92624, -36.4739, 0.12", "-10.9481, -4.29426, -37.1609, 0.12", "-11.1574, -3.96777, -37.4916, 0.12", "-11.3793, -3.61226, -37.8176, 0.72", "-11.9189, -2.7755, -38.5394, 0.84", "-12.4968, -1.94794, -39.1603, 0.12", "-12.7224, -1.64549, -39.4015, 0.12", "-13.3447, -0.827601, -40.0961, 0.12", "-13.8139, -0.22733, -40.5818, 0.12", "-14.1441, 0.223827, -40.9404, 0.6", "-14.4381, 0.639634, -41.2359, 0.6", "-15.0064, 1.48106, -41.8112, 0.12", "-15.2184, 1.80731, -42.0465, 0.12", "-15.5434, 2.31858, -42.4224, 0.12", "-16.4745, 3.7727, -43.4869, 0.12", "-16.752, 4.20674, -43.8298, 0.12", "-16.9105, 4.45908, -44.0357, 0.48", "-17.468, 5.32744, -44.7172, 0.36", "-17.6136, 5.53352, -44.9178, 0.36", "-17.8746, 5.87197, -45.2633, 0.72", "-18.801, 6.98355, -46.3522, 0.12", "-19.087, 7.34397, -46.7568, 0.12", "-19.2989, 7.63904, -47.1157, 0.6", "-20.1051, 8.81717, -48.6207, 0.12", "-20.6342, 9.59709, -49.6327, 0.12", "-20.832, 9.89041, -50.0083, 0.96", "-21.5918, 11.0069, -51.3681, 0.96", "-21.9578, 11.538, -52.0465, 0.12", "-22.0765, 11.7169, -52.2651, 0.12", "-22.2846, 12.0434, -52.6121, 0.12", "-22.4244, 12.2649, -52.8706, 0.12", "-22.8729, 13.0395, -53.5985, 0.12", "-23.1979, 13.6353, -54.0462, 0.84", "-23.4173, 14.0866, -54.3456, 0.96", "-23.5186, 14.3154, -54.4855, 0.96", "-24.0229, 15.5176, -55.2447, 0.12", "-24.5107, 16.6786, -55.9305, 0.12", "-25.072, 18.018, -56.6555, 0.12", "-25.492, 19.0501, -57.1891, 0.12", "-25.6731, 19.5124, -57.4131, 0.72", "-26.1796, 20.8212, -57.9943, 0.12", "-26.6722, 22.0867, -58.48, 0.12", "-26.7441, 22.2639, -58.5452, 0.48", "-26.7967, 22.3913, -58.5824, 0.12", "-27.2139, 23.3173, -58.8336, 0.12", "-27.695, 24.2646, -59.0093, 0.6", "-27.8733, 24.5811, -59.0475, 0.12", "-28.427, 25.5082, -59.1708, 0.12", "-28.7558, 26.0617, -59.2397, 0.36", "-28.8973, 26.3018, -59.2672, 0.12", "-29.7655, 27.8641, -59.4009, 0.12", "-30.0193, 28.3608, -59.4219, 0.72", "-30.3164, 28.9998, -59.4436, 0.48", "-30.4719, 29.4304, -59.4578, 0.12", "-30.5104, 29.5608, -59.4703, 0.12", "-30.8611, 30.9929, -59.6699, 0.12", "-30.9303, 31.3441, -59.7277, 0.24", "-30.9714, 31.5389, -59.7567, 0.12", "-31.279, 32.8804, -59.9626, 0.12", "-31.5639, 33.9874, -60.1846, 0.48", "-31.6454, 34.2877, -60.2524, 0.12", "-32.0225, 35.6464, -60.5929, 0.12", "-32.3159, 36.7155, -60.8607, 0.12", "-32.4794, 37.2861, -61.0133, 0.6", "-32.7415, 38.1373, -61.2374, 0.12", "-33.0426, 39.1139, -61.4499, 0.12", "-33.1326, 39.4025, -61.5215, 0.48", "-33.2395, 39.7343, -61.625, 0.48", "-33.4138, 40.2606, -61.807, 0.12", "-33.7387, 41.2425, -62.1129, 0.12", "-33.8812, 41.7177, -62.1994, 0.48" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.6651, -40.0239, -5.48157, 0.72", "-11.2832, -40.7502, -5.64707, 0.72", "-11.5651, -41.1114, -5.74995, 0.48", "-11.9665, -41.6652, -5.88487, 0.48", "-12.4479, -42.3781, -6.03943, 0.48", "-12.6651, -42.7067, -6.10536, 0.6", "-13.1349, -43.4212, -6.24103, 0.84", "-13.3049, -43.6944, -6.29992, 0.96", "-13.6724, -44.2661, -6.41531, 0.48", "-13.8978, -44.6014, -6.47811, 0.36", "-14.3363, -45.2005, -6.55753, 0.36", "-14.6936, -45.6543, -6.59425, 0.72", "-14.9988, -46.0153, -6.60319, 0.36", "-15.2611, -46.3173, -6.61638, 0.72", "-15.6001, -46.7098, -6.64393, 1.08", "-15.951, -47.1436, -6.67839, 1.08", "-16.2047, -47.4924, -6.70883, 0.72", "-16.4478, -47.8521, -6.74687, 0.72", "-16.6413, -48.1481, -6.78571, 0.72", "-16.923, -48.5696, -6.8563, 0.72", "-17.296, -49.122, -6.96804, 0.36", "-17.5543, -49.5065, -7.0597, 0.36", "-17.8339, -49.9315, -7.15417, 0.48", "-18.0996, -50.368, -7.23802, 0.48", "-18.3104, -50.7639, -7.296, 0.36", "-18.4834, -51.1585, -7.35237, 0.48", "-18.6141, -51.5164, -7.39888, 0.48", "-18.8285, -52.2006, -7.49164, 0.48", "-18.9917, -52.8166, -7.58786, 0.48", "-19.1518, -53.5069, -7.70478, 0.48", "-19.298, -54.1888, -7.82714, 0.36", "-19.4135, -54.7073, -7.92668, 0.6", "-19.5722, -55.3187, -8.05174, 0.72", "-19.6964, -55.7303, -8.14791, 0.36", "-19.832, -56.1028, -8.22956, 0.48", "-19.9954, -56.4656, -8.29737, 0.48", "-20.1923, -56.8403, -8.3665, 0.36", "-20.4714, -57.3313, -8.51307, 0.36", "-20.7468, -57.7775, -8.7064, 0.48", "-20.9978, -58.1439, -8.89966, 0.6", "-21.4061, -58.7356, -9.27085, 0.96", "-21.8373, -59.3705, -9.71577, 0.96", "-22.2766, -60.0744, -10.2255, 0.48", "-22.5672, -60.6126, -10.6055, 0.48", "-22.7815, -61.0501, -10.9007, 0.6", "-23.0576, -61.663, -11.295, 0.84", "-23.2279, -62.0514, -11.5108, 0.6", "-23.4507, -62.5278, -11.7269, 0.72", "-23.7674, -63.1512, -11.9544, 0.36", "-23.9739, -63.5382, -12.0853, 0.36", "-24.2127, -63.9758, -12.2264, 0.48", "-24.5321, -64.5533, -12.3976, 0.48", "-24.816, -65.0913, -12.5581, 0.48", "-25.0196, -65.4957, -12.68, 0.6", "-25.2059, -65.8844, -12.7945, 0.84", "-25.4472, -66.4546, -12.9546, 0.84", "-25.7154, -67.1251, -13.1341, 0.84", "-25.9137, -67.6191, -13.2586, 0.48", "-26.1122, -68.0705, -13.3641, 0.48", "-26.3358, -68.5218, -13.483, 0.6", "-26.5113, -68.8308, -13.5795, 0.6", "-26.7811, -69.2519, -13.7365, 0.36", "-26.9969, -69.57, -13.866, 0.36", "-27.1682, -69.8426, -13.9726, 0.36", "-27.3433, -70.1545, -14.0822, 0.6", "-27.5174, -70.5082, -14.1889, 0.84", "-27.6932, -70.8872, -14.2854, 0.84", "-27.9757, -71.5492, -14.4446, 0.36", "-28.2358, -72.1395, -14.5812, 0.36", "-28.4135, -72.522, -14.6724, 0.36", "-28.5309, -72.7419, -14.7291, 0.72", "-28.7723, -73.1245, -14.8653, 0.96", "-29.1553, -73.6512, -15.121, 0.36", "-29.3882, -73.9361, -15.2947, 0.36", "-29.5601, -74.1462, -15.4328, 0.72", "-29.7919, -74.4601, -15.6302, 0.72", "-30.1574, -75.0045, -15.9497, 0.36", "-30.2473, -75.143, -16.0252, 0.36", "-30.4926, -75.5157, -16.221, 0.48", "-30.8479, -76.0788, -16.5219, 0.48", "-31.1193, -76.5424, -16.7519, 0.48", "-31.2819, -76.8611, -16.9133, 0.48", "-31.4385, -77.2191, -17.1168, 0.48", "-31.5771, -77.5403, -17.3362, 0.36", "-31.7035, -77.8071, -17.557, 0.6", "-31.8746, -78.1372, -17.8788, 0.72", "-32.0758, -78.4959, -18.2379, 0.72", "-32.276, -78.8607, -18.5878, 0.48", "-32.3644, -79.0183, -18.7309, 0.36", "-32.4837, -79.2673, -18.9691, 0.36", "-32.5728, -79.453, -19.1868, 0.6", "-32.7165, -79.7183, -19.5522, 0.6", "-32.8851, -80.004, -19.9696, 0.6", "-32.9747, -80.1556, -20.2069, 0.6", "-33.3511, -80.8694, -21.3356, 0.72", "-33.515, -81.2485, -21.9114, 0.48", "-33.5911, -81.4579, -22.2019, 0.48", "-33.6367, -81.5981, -22.3801, 0.48", "-33.7222, -81.7917, -22.6132, 0.72", "-33.8408, -81.9779, -22.8596, 0.84", "-34.0254, -82.2171, -23.1957, 0.84", "-34.2186, -82.5227, -23.6331, 0.48", "-34.3015, -82.6731, -23.8737, 0.48", "-34.4939, -83.0286, -24.4458, 0.72", "-34.7676, -83.551, -25.2722, 0.72", "-34.9965, -84.0553, -25.9905, 0.36", "-35.0496, -84.1983, -26.1771, 0.36", "-35.1407, -84.5095, -26.5631, 0.36", "-35.235, -84.9528, -27.1341, 0.6", "-35.2546, -85.124, -27.3571, 0.84", "-35.3019, -85.6608, -28.0554, 0.36", "-35.318, -86.0109, -28.5286, 0.48", "-35.2982, -86.399, -29.151, 0.96", "-35.2295, -86.8884, -30.0764, 0.96", "-35.1629, -87.3038, -31.0334, 0.48", "-35.1506, -87.3599, -31.2084, 0.48", "-35.105, -87.4953, -31.7163, 0.72", "-34.9564, -87.8457, -32.9733, 0.36", "-34.8916, -87.9655, -33.3706, 0.6", "-34.7944, -88.147, -33.9154, 0.72", "-34.3838, -89.0043, -36.3892, 0.48", "-34.3376, -89.1261, -36.7132, 0.36", "-34.2811, -89.3256, -37.1928, 0.36", "-34.2381, -89.4888, -37.4863, 0.36", "-34.2007, -89.6385, -37.7388, 0.36", "-34.1495, -89.8152, -38.0344, 0.48", "-34.1366, -89.992, -38.3224, 0.48", "-34.0327, -90.2534, -38.901, 0.36", "-33.9752, -90.348, -39.1216, 0.36", "-33.7172, -90.6743, -39.8251, 0.36", "-33.3531, -91.0468, -40.6082, 0.48", "-33.212, -91.1828, -40.8852, 0.6", "-32.6408, -91.7319, -41.9087, 0.36", "-32.4546, -91.9167, -42.2179, 0.36", "-32.242, -92.1486, -42.563, 0.48", "-31.9812, -92.5491, -43.0754, 0.12", "-31.8926, -92.8018, -43.3957, 0.12", "-31.8737, -92.9017, -43.5239, 0.12", "-31.874, -92.9529, -43.5877, 0.6", "-31.8982, -93.149, -43.8531, 0.84", "-32.0392, -93.7839, -44.6826, 0.6", "-32.1634, -94.2812, -45.2308, 0.6", "-32.1895, -94.3889, -45.3685, 0.12", "-32.2688, -94.6131, -45.7021, 0.12", "-32.3145, -94.7148, -45.8808, 0.24", "-32.4264, -94.908, -46.2551, 0.24", "-32.5354, -95.0512, -46.542, 0.24", "-33.064, -95.5852, -47.6729, 0.48", "-33.2597, -95.7712, -48.0731, 0.48", "-33.4985, -96.0158, -48.5867, 0.48", "-33.6153, -96.1526, -48.8658, 0.36", "-33.6911, -96.2627, -49.0886, 0.12", "-33.9447, -96.5856, -49.7085, 0.12", "-34.0995, -96.7578, -49.9402, 0.48", "-34.2879, -97.0284, -50.3305, 0.6", "-34.4746, -97.3716, -50.849, 0.6", "-34.5979, -97.7443, -51.4523, 0.12", "-34.642, -98.264, -52.2961, 0.12", "-34.5842, -98.949, -53.4381, 0.12", "-34.4842, -99.9363, -55.1692, 0.12", "-34.4771, -100.026, -55.3215, 0.12", "-34.4668, -100.151, -55.5165, 0.12", "-34.4532, -100.39, -55.8656, 0.72", "-34.4307, -100.539, -56.0596, 0.84", "-34.4245, -100.633, -56.1935, 0.84", "-34.4737, -100.782, -56.3702, 0.48", "-34.6158, -101.182, -56.868, 0.12", "-34.6984, -101.439, -57.1744, 0.12", "-34.7695, -101.899, -57.7411, 0.36", "-34.7726, -102.332, -58.2565, 0.12", "-34.7604, -102.536, -58.5222, 0.12", "-34.7429, -102.689, -58.7308, 0.48", "-34.7179, -102.903, -59.0266, 0.6", "-34.6853, -103.49, -59.8772, 0.12", "-34.697, -103.661, -60.1645, 0.12", "-34.716, -103.95, -60.6145, 0.12", "-34.7355, -104.036, -60.7529, 0.12", "-34.7962, -104.187, -60.9997, 0.48", "-34.8919, -104.374, -61.2763, 0.84", "-35.3475, -105.241, -62.3623, 0.36", "-35.4451, -105.45, -62.5943, 0.36", "-35.6562, -105.968, -63.0958, 0.36", "-35.8709, -106.424, -63.503, 0.6", "-36.0505, -106.776, -63.805, 0.6", "-36.3094, -107.234, -64.164, 0.6", "-36.506, -107.537, -64.3673, 0.6", "-36.7287, -107.879, -64.6015, 0.12", "-37.2412, -108.679, -65.1322, 0.12", "-37.505, -109.038, -65.3683, 0.6", "-37.7061, -109.283, -65.5348, 0.6", "-37.8165, -109.409, -65.6142, 0.6", "-38.0472, -109.668, -65.7742, 0.12", "-38.22, -109.871, -65.8966, 0.12", "-38.2883, -109.95, -65.9465, 0.12", "-38.4127, -110.051, -66.0208, 0.12", "-38.6514, -110.214, -66.1952, 0.12", "-38.8612, -110.342, -66.3599, 0.12", "-39.2038, -110.505, -66.6252, 0.6", "-39.5907, -110.679, -67.0233, 0.6", "-39.8427, -110.798, -67.3262, 0.6", "-40.2893, -111.037, -67.9279, 0.12", "-40.3907, -111.097, -68.0692, 0.12", "-40.7107, -111.308, -68.5059, 0.48", "-41.3435, -111.768, -69.3094, 0.12", "-41.5199, -111.92, -69.5404, 0.12", "-41.7372, -112.133, -69.8037, 0.12", "-42.0543, -112.498, -70.1959, 0.12", "-42.266, -112.783, -70.4651, 0.6", "-42.3783, -112.969, -70.6036, 0.6", "-42.5871, -113.406, -70.9419, 0.24", "-42.6963, -113.701, -71.2129, 0.24", "-42.8736, -114.275, -71.8014, 0.24", "-42.921, -114.473, -72.0091, 0.48", "-42.9778, -114.795, -72.3735, 0.48", "-43.0842, -115.725, -73.4691, 0.36", "-43.0928, -115.887, -73.6707, 0.36", "-43.1172, -116.138, -74.003, 0.36", "-43.1456, -116.354, -74.2732, 0.36", "-43.206, -116.873, -74.9033, 0.48", "-43.2421, -117.188, -75.2835, 0.48", "-43.2814, -117.55, -75.6332, 0.12", "-43.2832, -118.002, -76.0589, 0.12", "-43.2508, -118.321, -76.3489, 0.12", "-43.2351, -118.446, -76.4564, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.6651, -40.0239, -5.48157, 0.48", "-10.7372, -41.0855, -5.10481, 0.48", "-10.7924, -41.9394, -4.81134, 0.6", "-10.8246, -43.1175, -4.42281, 0.6", "-10.8226, -43.9779, -4.14875, 0.6", "-10.8092, -44.6752, -3.93654, 0.36", "-10.7923, -45.1594, -3.75538, 0.36", "-10.7833, -45.4104, -3.63147, 0.36", "-10.708, -45.9797, -3.33076, 0.6", "-10.652, -46.2343, -3.20355, 0.72", "-10.562, -46.554, -2.99903, 0.72", "-10.2262, -47.5946, -2.22068, 0.72", "-10.1059, -47.9502, -1.93795, 0.72", "-9.9097, -48.5134, -1.45689, 0.24", "-9.69987, -49.0948, -0.949306, 0.24", "-9.41228, -49.8043, -0.353976, 0.48", "-9.17335, -50.3396, 0.0868596, 0.6", "-8.90016, -50.9041, 0.517518, 0.6", "-8.42124, -51.8686, 1.2928, 0.36", "-8.24802, -52.2102, 1.5664, 0.36", "-7.91068, -52.8888, 2.09279, 0.36", "-7.71342, -53.327, 2.42117, 0.6", "-7.544, -53.7477, 2.73764, 0.6", "-7.29164, -54.5128, 3.30819, 0.36", "-7.14291, -55.0548, 3.71028, 0.36", "-6.99906, -55.6039, 4.11828, 0.36", "-6.82112, -56.3287, 4.72324, 0.48", "-6.71897, -56.7226, 5.0748, 0.48", "-6.61958, -57.0945, 5.42754, 0.48", "-6.42581, -57.7235, 6.03525, 0.48", "-6.19537, -58.4227, 6.74179, 0.48", "-5.83369, -59.4745, 7.74691, 0.48", "-5.69055, -59.9128, 8.12761, 0.36", "-5.62932, -60.1078, 8.28961, 0.36", "-5.51636, -60.4787, 8.554, 0.48", "-5.36617, -61.0691, 8.90655, 0.36", "-5.21521, -61.7548, 9.26707, 0.36", "-5.08647, -62.3394, 9.52105, 0.48", "-4.88717, -63.1817, 9.90304, 0.36", "-4.61018, -64.1918, 10.3796, 0.36", "-4.34504, -65.0593, 10.8047, 0.36", "-4.05157, -65.9015, 11.2264, 0.36", "-3.82983, -66.4835, 11.5463, 0.36", "-3.45652, -67.3842, 12.0595, 0.36", "-3.14313, -68.1431, 12.4738, 0.48", "-2.87276, -68.8158, 12.8302, 0.84", "-2.5442, -69.6331, 13.2225, 0.48", "-2.32721, -70.2326, 13.5353, 0.24", "-2.10997, -70.9374, 13.9198, 0.24", "-1.87427, -71.8188, 14.3931, 0.24", "-1.67674, -72.6223, 14.829, 0.24", "-1.52444, -73.2564, 15.2145, 0.24", "-1.24908, -74.4215, 15.9606, 0.72", "-1.16726, -74.7516, 16.1726, 0.72", "-0.965059, -75.5132, 16.6455, 0.36", "-0.773453, -76.1487, 17.011, 0.36", "-0.367765, -77.4607, 17.6388, 0.24", "-0.118848, -78.306, 17.9459, 0.24", "0.0671899, -78.954, 18.124, 0.24", "0.275295, -79.7744, 18.3354, 0.24", "0.405967, -80.3945, 18.4745, 0.36", "0.524363, -81.0327, 18.5878, 0.36", "0.628383, -81.6685, 18.6579, 0.48", "0.735259, -82.496, 18.7739, 0.48", "0.785681, -83.0084, 18.8592, 0.48", "0.823262, -83.5299, 18.9595, 0.6", "0.85904, -84.038, 19.0441, 0.72", "0.90768, -84.665, 19.1289, 0.72", "0.988099, -85.5689, 19.2256, 0.24", "1.06263, -86.3347, 19.3141, 0.24", "1.12343, -86.842, 19.3899, 0.48", "1.21941, -87.5147, 19.5082, 0.6", "1.36828, -88.4147, 19.6911, 0.36", "1.56858, -89.4381, 19.9258, 0.36", "1.78519, -90.4066, 20.1373, 0.36", "1.95575, -91.1273, 20.279, 0.36", "2.05378, -91.5081, 20.3456, 0.24", "2.07234, -91.5798, 20.3601, 0.48", "2.2841, -92.4032, 20.5346, 0.6", "2.47561, -93.0999, 20.68, 0.36", "2.64031, -93.7037, 20.7939, 0.36", "2.71056, -93.9781, 20.8529, 0.48", "2.93539, -94.8901, 21.0551, 0.48", "3.05298, -95.3788, 21.1782, 0.36", "3.25662, -96.2471, 21.4209, 0.36", "3.45489, -97.1207, 21.6768, 0.36", "3.62967, -97.8879, 21.902, 0.36", "3.8494, -98.8844, 22.1753, 0.36", "4.07513, -99.8803, 22.4167, 0.36", "4.16174, -100.268, 22.5144, 0.48", "4.26469, -100.758, 22.6432, 0.48", "4.40131, -101.36, 22.8261, 0.48", "4.58933, -102.118, 23.0726, 0.48", "4.79917, -102.864, 23.3189, 0.48", "5.0577, -103.731, 23.5837, 0.6", "5.14387, -104.0, 23.6617, 0.6", "5.42475, -104.83, 23.8856, 0.36", "5.79207, -105.833, 24.1348, 0.36", "6.05678, -106.523, 24.3047, 0.36", "6.45236, -107.478, 24.535, 0.36", "6.86151, -108.407, 24.7447, 0.36", "7.13939, -109.036, 24.8677, 0.36", "7.37542, -109.562, 24.9341, 0.36", "7.53552, -109.903, 24.9673, 0.48", "7.81764, -110.496, 25.0099, 0.48", "8.18167, -111.275, 25.048, 0.48", "8.56198, -112.139, 25.0734, 0.48", "8.96849, -113.115, 25.0912, 0.48", "9.13304, -113.552, 25.0946, 0.48", "9.42166, -114.361, 25.1008, 0.48", "9.62544, -114.975, 25.1063, 0.48", "9.71895, -115.249, 25.1084, 0.6", "9.81902, -115.521, 25.1161, 0.72", "10.036, -116.137, 25.1527, 0.48", "10.2721, -116.792, 25.1862, 0.48", "10.3771, -117.062, 25.2005, 0.48", "10.6975, -117.8, 25.2512, 0.36", "10.9716, -118.386, 25.2982, 0.36", "11.2101, -118.851, 25.3414, 0.36", "11.5722, -119.513, 25.4146, 0.36", "11.8842, -120.066, 25.5032, 0.48", "12.2768, -120.786, 25.6424, 0.6", "12.916, -122.008, 25.9124, 0.48", "13.3277, -122.811, 26.0979, 0.36", "13.8738, -123.872, 26.3344, 0.36", "14.2275, -124.601, 26.485, 0.6", "14.6033, -125.415, 26.6198, 0.6", "14.9777, -126.263, 26.7317, 0.6", "15.3486, -127.119, 26.8008, 0.6", "15.9126, -128.428, 26.8486, 0.48", "16.5624, -129.972, 26.8451, 0.48", "16.92, -130.823, 26.8199, 0.48", "17.4469, -132.048, 26.7546, 0.48", "17.8306, -132.935, 26.6914, 0.24", "18.1621, -133.726, 26.6256, 0.24", "18.7011, -135.054, 26.5016, 0.24", "18.975, -135.755, 26.4361, 0.24", "19.2629, -136.549, 26.3867, 0.6", "19.3732, -136.89, 26.379, 0.84", "19.5225, -137.401, 26.3982, 0.84", "19.7196, -138.133, 26.4482, 0.48", "19.9983, -139.274, 26.5678, 0.36", "20.1608, -140.058, 26.677, 0.36", "20.3239, -140.928, 26.8395, 0.36", "20.4576, -141.588, 26.9743, 0.36", "20.6104, -142.216, 27.1166, 0.36", "20.7382, -142.692, 27.2328, 0.48", "20.9639, -143.46, 27.4067, 0.48", "21.1034, -143.921, 27.497, 0.36", "21.38, -144.775, 27.6355, 0.36", "21.6546, -145.547, 27.7641, 0.36", "21.8918, -146.13, 27.8632, 0.36", "22.397, -147.187, 28.0504, 0.36", "22.707, -147.766, 28.1378, 0.36", "23.1696, -148.564, 28.2391, 0.36", "23.6101, -149.267, 28.3193, 0.48", "24.0842, -149.953, 28.3937, 0.48", "24.9188, -151.044, 28.5148, 0.48", "25.3369, -151.545, 28.5991, 0.12", "25.7493, -152.028, 28.7067, 0.12", "26.0918, -152.449, 28.8193, 0.24", "26.3669, -152.813, 28.9331, 0.24", "26.9102, -153.529, 29.2017, 0.12", "27.5195, -154.289, 29.5379, 0.36", "27.9066, -154.751, 29.7906, 0.6", "28.2211, -155.119, 30.0026, 0.36", "28.5573, -155.51, 30.208, 0.36", "29.345, -156.435, 30.6343, 0.36", "29.6771, -156.83, 30.7868, 0.36", "30.2253, -157.578, 30.9814, 0.24", "30.5042, -158.032, 31.0809, 0.24", "30.8545, -158.755, 31.1871, 0.36", "30.9835, -159.11, 31.1962, 0.36", "31.0855, -159.491, 31.1668, 0.36", "31.3464, -160.485, 31.0407, 0.36", "31.5154, -161.12, 30.9878, 0.48", "31.671, -161.698, 31.0101, 0.48", "31.8656, -162.365, 31.1105, 0.12", "32.1562, -163.34, 31.3006, 0.12", "32.2894, -163.775, 31.4026, 0.48", "32.6924, -164.922, 31.744, 0.12", "33.0282, -165.754, 32.0423, 0.12", "33.2078, -166.153, 32.2088, 0.6", "33.5193, -166.797, 32.4919, 0.12", "33.7434, -167.19, 32.6159, 0.12", "34.128, -167.8, 32.7177, 0.12", "34.4402, -168.25, 32.6943, 0.12", "34.5971, -168.495, 32.6916, 0.72", "34.9063, -169.066, 32.713, 0.72", "35.3821, -170.076, 32.8057, 0.48", "35.5164, -170.439, 32.8335, 0.48", "35.7675, -171.302, 32.8959, 0.12", "36.2301, -173.194, 33.0507, 0.12", "36.319, -173.591, 33.0912, 0.12", "36.3979, -174.046, 33.1494, 0.6", "36.5259, -174.997, 33.3059, 0.12", "36.5539, -175.205, 33.3309, 0.12", "36.6882, -176.166, 33.4012, 0.12", "36.7634, -176.693, 33.383, 0.12", "36.8115, -177.231, 33.374, 0.48", "36.8228, -177.618, 33.3851, 0.12", "36.7881, -178.516, 33.4531, 0.12", "36.7496, -179.328, 33.5217, 0.12", "36.7312, -179.792, 33.5426, 0.96", "36.7188, -180.48, 33.5502, 0.48", "36.7248, -181.078, 33.5431, 0.36", "36.7253, -181.442, 33.5267, 0.36", "36.7077, -182.162, 33.4733, 0.36", "36.6493, -183.099, 33.3829, 0.24", "36.5965, -183.991, 33.2595, 0.24", "36.5671, -184.371, 33.1918, 0.24", "36.5504, -184.664, 33.1346, 0.6", "36.5198, -185.305, 33.0216, 0.72", "36.4874, -185.764, 32.9506, 0.84", "36.4497, -186.508, 32.8782, 0.12", "36.4483, -186.903, 32.8256, 0.12", "36.4629, -187.591, 32.7254, 0.12", "36.4896, -188.091, 32.6536, 0.12", "36.5164, -188.345, 32.62, 0.12", "36.5912, -188.854, 32.5712, 0.6", "36.682, -189.51, 32.5396, 0.12", "36.7662, -190.269, 32.5064, 0.12", "36.7916, -190.555, 32.4791, 0.48", "36.8568, -191.185, 32.4072, 0.48", "36.9371, -191.753, 32.3441, 0.48", "37.1168, -192.756, 32.2504, 0.48", "37.2353, -193.321, 32.2139, 0.6", "37.4507, -194.223, 32.1151, 0.12", "37.5931, -194.839, 32.0283, 0.12", "37.7386, -195.469, 31.9239, 0.24", "37.9037, -196.126, 31.8101, 0.24", "38.1375, -196.9, 31.6564, 0.48", "38.3647, -197.576, 31.5099, 0.12", "38.5176, -198.066, 31.4042, 0.12", "38.5837, -198.338, 31.3309, 0.6", "38.6388, -198.726, 31.2138, 0.6", "38.696, -199.566, 30.8337, 0.12", "38.6904, -200.179, 30.5099, 0.12", "38.666, -200.537, 30.3109, 0.12", "38.6195, -200.927, 30.0722, 0.6", "38.5045, -201.566, 29.682, 0.6", "38.1925, -203.015, 28.7987, 0.12", "38.0393, -203.662, 28.3895, 0.12", "38.0074, -203.824, 28.2922, 0.36", "37.9904, -203.999, 28.2013, 0.12", "37.9687, -204.706, 27.8949, 0.12", "37.9727, -205.37, 27.6745, 0.84", "37.9771, -206.336, 27.4635, 0.12", "38.0016, -207.342, 27.1904, 0.12", "38.0441, -208.383, 26.8394, 0.12", "38.0607, -208.766, 26.6967, 0.72", "38.0802, -209.372, 26.4623, 0.96", "38.0846, -209.76, 26.3201, 0.96", "38.0617, -211.066, 25.864, 0.48", "38.0185, -211.755, 25.6028, 0.12", "37.9355, -212.587, 25.2539, 0.12", "37.815, -213.407, 24.9131, 0.12", "37.7378, -213.763, 24.7771, 0.12", "37.5529, -214.392, 24.5708, 0.12", "37.3559, -214.911, 24.407, 0.96", "36.9788, -215.784, 24.0786, 0.12", "36.6591, -216.481, 23.7562, 0.12", "36.2302, -217.379, 23.2815, 0.12", "36.0535, -217.753, 23.0596, 0.12", "35.6018, -218.754, 22.4487, 0.48", "35.454, -219.09, 22.2413, 0.12", "35.3094, -219.487, 21.9089, 0.12", "35.2772, -219.616, 21.7797, 0.36", "35.2046, -219.95, 21.4095, 0.12", "35.0502, -220.753, 20.488, 0.12", "34.9242, -221.453, 19.6719, 1.32", "34.6097, -223.26, 17.4609, 0.84", "34.5706, -223.493, 17.146, 0.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.83836, -36.9862, -16.7045, 0.36", "-4.81586, -38.0518, -17.8671, 0.36", "-4.76635, -38.6787, -18.5282, 0.36", "-4.70673, -39.2338, -19.0386, 0.6", "-4.60546, -39.9299, -19.6064, 0.96", "-4.51925, -40.39, -19.9121, 0.84", "-4.18111, -41.7985, -20.6564, 0.36", "-3.98952, -42.3352, -20.8237, 0.36", "-3.57205, -43.3012, -21.0061, 0.36", "-3.32132, -43.8426, -21.0453, 0.48", "-2.80179, -44.9501, -21.0276, 0.48", "-2.35643, -45.8618, -20.9672, 0.12", "-1.84828, -46.8457, -20.8531, 0.12", "-1.44341, -47.5319, -20.8011, 0.12", "-1.30359, -47.7584, -20.7938, 0.84", "-1.00757, -48.2629, -20.8075, 0.84", "-0.554159, -49.0958, -20.9172, 0.36", "-0.250462, -49.7, -21.0256, 0.12", "0.378087, -50.9587, -21.2926, 0.12", "0.582168, -51.3214, -21.3727, 0.48", "0.793378, -51.6848, -21.4605, 0.48", "1.12667, -52.2621, -21.5984, 0.36", "1.26755, -52.5573, -21.6769, 0.36", "1.49566, -53.1648, -21.9062, 0.48", "1.68774, -53.9013, -22.4017, 0.36", "1.81553, -54.474, -22.8598, 0.48", "1.87835, -54.8259, -23.1702, 0.72", "1.95413, -55.4701, -23.8046, 0.72", "1.98706, -56.1723, -24.5225, 0.72", "2.02471, -57.5726, -26.0157, 0.12", "2.03705, -57.8305, -26.293, 0.12", "2.04739, -57.9059, -26.3721, 0.48", "2.1989, -58.5609, -27.0363, 0.48", "2.46682, -59.3785, -27.7571, 0.12", "2.68438, -59.9264, -28.1996, 0.12", "2.85403, -60.3176, -28.4734, 0.12", "2.97039, -60.6226, -28.6927, 0.48", "3.16551, -61.1974, -29.1247, 0.84", "3.39862, -61.9552, -29.6881, 0.84", "3.62055, -62.9919, -30.4377, 0.12", "3.63105, -63.0883, -30.5071, 0.12", "3.64515, -63.7129, -30.9455, 0.12", "3.60323, -64.4631, -31.5633, 0.12", "3.56202, -64.9153, -31.9516, 0.12", "3.49707, -65.7303, -32.6252, 0.12", "3.45519, -66.384, -33.175, 0.84", "3.43789, -66.8995, -33.631, 0.72", "3.44098, -68.471, -35.0554, 0.24", "3.45062, -68.7593, -35.3773, 0.24", "3.52823, -69.4506, -36.2677, 0.24", "3.69114, -70.1298, -37.2125, 0.6", "3.82458, -70.5437, -37.7935, 0.84", "3.91616, -70.7564, -38.0953, 0.6", "4.76441, -72.4373, -40.3018, 0.12", "4.89354, -72.6796, -40.6303, 0.12", "5.08114, -73.0183, -41.0959, 0.12", "5.12576, -73.1062, -41.1939, 0.48", "5.27304, -73.4632, -41.524, 0.48", "5.38867, -73.8573, -41.7762, 0.48", "5.50387, -74.5116, -41.9803, 0.36", "5.5604, -74.9162, -42.106, 0.36", "5.65017, -75.6208, -42.3137, 0.36", "5.74294, -76.237, -42.5249, 0.12", "5.84184, -76.8728, -42.7547, 0.12", "5.91656, -77.3467, -42.9313, 0.6", "6.00726, -77.9339, -43.1396, 0.84", "6.08311, -78.3897, -43.2997, 0.84", "6.24285, -79.3559, -43.6883, 0.36", "6.32089, -79.8879, -43.9262, 0.36", "6.38256, -80.393, -44.185, 0.48", "6.43655, -80.8136, -44.4114, 0.48", "6.49917, -81.2443, -44.6371, 0.72", "6.65063, -82.1816, -45.0685, 0.72", "6.78898, -82.9121, -45.3497, 0.36", "6.83234, -83.0926, -45.4253, 0.24", "6.96692, -83.5593, -45.6182, 0.12", "7.22129, -84.3401, -45.8895, 0.12", "7.44502, -84.9891, -46.0369, 0.12", "7.48675, -85.0997, -46.0468, 0.48", "7.78963, -85.8341, -46.1007, 0.6", "7.9335, -86.1694, -46.1296, 0.6", "8.26959, -86.9062, -46.194, 0.12", "8.70159, -87.8115, -46.2674, 0.12", "8.92367, -88.2631, -46.2975, 0.36", "9.20312, -88.8503, -46.3252, 0.12", "9.50616, -89.4945, -46.3594, 0.12", "9.89803, -90.3636, -46.4491, 0.12", "10.083, -90.8015, -46.5156, 0.12", "10.2406, -91.1949, -46.5754, 0.48", "10.4073, -91.6405, -46.636, 0.48", "10.5944, -92.1647, -46.7056, 0.12", "11.0252, -93.4577, -46.915, 0.12", "11.0882, -93.683, -46.9528, 0.48", "11.1818, -94.0416, -47.0083, 0.48", "11.2647, -94.4026, -47.0637, 0.48", "11.3519, -94.8112, -47.1194, 0.12", "11.4622, -95.3897, -47.1787, 0.12", "11.659, -96.5642, -47.3008, 0.12", "11.7355, -97.0856, -47.3482, 0.24", "11.7853, -97.4104, -47.3665, 0.12", "11.9021, -98.1492, -47.3812, 0.12", "12.0548, -99.0807, -47.366, 0.12", "12.1159, -99.4302, -47.3548, 0.12", "12.2413, -100.128, -47.3173, 0.12", "12.3812, -100.84, -47.2652, 0.48", "12.438, -101.079, -47.2433, 0.48", "12.4952, -101.309, -47.2223, 0.48", "12.5353, -101.471, -47.2088, 0.12", "12.6292, -101.832, -47.1853, 0.12", "12.7787, -102.452, -47.1631, 0.12", "12.9114, -103.179, -47.1597, 0.12", "12.95, -103.44, -47.181, 0.72", "12.9878, -103.765, -47.2499, 0.84", "13.0133, -104.237, -47.402, 0.24", "12.9963, -104.894, -47.6737, 0.24", "12.9674, -105.316, -47.8684, 0.24", "12.9428, -106.208, -48.2762, 0.36", "12.9644, -106.911, -48.616, 0.12", "12.9966, -107.389, -48.8474, 0.12", "13.0394, -107.958, -49.1135, 0.12", "13.1205, -108.646, -49.4028, 0.12", "13.2666, -109.497, -49.7184, 0.48", "13.4119, -110.143, -49.8985, 0.12", "13.5278, -110.57, -50.0387, 0.12", "13.6551, -110.992, -50.2176, 0.12", "13.7866, -111.419, -50.4205, 0.12", "13.9156, -111.87, -50.6799, 0.6", "14.0213, -112.27, -50.9272, 0.6", "14.3315, -113.4, -51.6157, 0.12", "14.5046, -113.991, -52.0196, 0.12", "14.6656, -114.592, -52.4293, 0.12", "14.8496, -115.335, -52.8915, 0.6", "14.9314, -115.66, -53.0632, 0.6", "15.0181, -115.992, -53.217, 0.6", "15.2266, -116.774, -53.4906, 0.12", "15.5118, -117.766, -53.7882, 0.12", "15.7588, -118.597, -54.0094, 0.12", "15.9871, -119.308, -54.1559, 0.36", "16.0709, -119.534, -54.2103, 0.12", "16.2858, -120.083, -54.3494, 0.12", "16.4413, -120.471, -54.4455, 0.48", "16.6932, -121.136, -54.7177, 0.12", "16.8153, -121.635, -55.0184, 0.12", "16.8898, -122.423, -55.5817, 0.12", "16.879, -122.764, -55.8445, 0.6", "16.8435, -122.975, -56.0041, 0.6", "16.5423, -124.012, -56.8038, 0.12", "16.273, -124.717, -57.3188, 0.12", "16.0863, -125.133, -57.5964, 0.36", "15.8216, -125.661, -57.9056, 0.36", "15.4432, -126.467, -58.3262, 0.36", "15.1275, -127.119, -58.6113, 0.12", "14.8585, -127.633, -58.788, 0.12", "14.5148, -128.198, -58.971, 0.48", "14.3169, -128.505, -59.0653, 0.12", "13.821, -129.204, -59.2623, 0.12", "13.3654, -129.785, -59.4046, 0.6", "12.9779, -130.261, -59.4974, 0.12", "12.5305, -130.758, -59.5963, 0.12", "11.8518, -131.447, -59.7337, 0.12", "11.5779, -131.705, -59.7808, 0.12", "10.9391, -132.245, -59.8663, 0.48", "10.591, -132.534, -59.9064, 0.12", "9.98761, -132.993, -59.9529, 0.12", "9.57162, -133.27, -59.9821, 0.48", "9.04618, -133.561, -60.0262, 0.48", "8.89476, -133.639, -60.0391, 0.12", "8.43126, -133.853, -60.0766, 0.12", "7.9351, -134.074, -60.1126, 0.48", "7.48581, -134.285, -60.1461, 0.48", "6.8764, -134.575, -60.1891, 0.12", "6.27979, -134.84, -60.2308, 0.12", "5.87853, -135.007, -60.2494, 0.12", "5.72684, -135.069, -60.2535, 0.12", "5.31954, -135.224, -60.2568, 0.48", "4.70944, -135.45, -60.2487, 0.48", "4.13971, -135.65, -60.2293, 0.48", "3.48828, -135.86, -60.2105, 0.12", "3.0698, -135.983, -60.2018, 0.12", "2.00308, -136.231, -60.1934, 0.12", "1.56551, -136.313, -60.1947, 0.12", "1.3267, -136.351, -60.2084, 0.6", "0.836795, -136.434, -60.2594, 0.6", "0.346584, -136.531, -60.3275, 0.24", "-0.939213, -136.841, -60.5238, 0.24", "-1.40353, -137.006, -60.5984, 0.48", "-2.16636, -137.351, -60.7195, 0.12", "-2.81971, -137.731, -60.8733, 0.12", "-3.42176, -138.167, -61.0526, 0.12", "-3.84971, -138.559, -61.2031, 0.12", "-4.61212, -139.465, -61.5056, 0.12", "-4.85196, -139.809, -61.5978, 0.48", "-5.51738, -140.999, -61.8207, 0.48", "-5.70609, -141.385, -61.8825, 0.12", "-6.01768, -142.101, -61.9799, 0.12", "-6.43943, -143.184, -62.0992, 0.12", "-6.93629, -144.693, -62.2148, 0.12", "-7.47094, -146.678, -62.342, 0.12", "-7.54421, -147.051, -62.3557, 0.72", "-7.62119, -147.627, -62.3891, 0.48", "-7.63189, -147.793, -62.3984, 0.12", "-7.60684, -148.796, -62.4522, 0.12", "-7.45923, -149.875, -62.5027, 0.12", "-7.27182, -150.638, -62.5258, 0.12", "-7.1747, -151.0, -62.529, 0.36", "-6.99466, -151.635, -62.5191, 0.12", "-6.79952, -152.328, -62.4931, 0.12", "-6.59053, -153.084, -62.4409, 0.12", "-6.37242, -153.905, -62.358, 0.12", "-6.23993, -154.63, -62.9637, 0.12", "-6.18597, -155.029, -63.9035, 0.12", "-6.17804, -155.096, -64.1359, 0.12", "-6.16817, -155.187, -64.6169, 0.72", "-6.15892, -155.231, -65.1048, 1.08", "-6.122, -155.361, -72.9623, 0.84", "-6.11764, -155.238, -75.4125, 0.12", "-6.11471, -155.195, -75.8853, 0.12", "-6.10201, -155.119, -76.6185, 0.12", "-6.0348, -154.863, -78.7457, 0.48", "-5.93418, -154.589, -80.756, 0.6", "-5.77793, -154.304, -82.6188, 0.6", "-5.53404, -154.135, -85.5663, 0.12", "-5.48116, -154.154, -86.2167, 0.12", "-5.45419, -154.193, -86.4835, 0.12", "-5.41491, -154.268, -86.7102, 0.72", "-5.24568, -154.536, -87.2261, 0.72", "-4.57816, -155.437, -88.4498, 0.12", "-4.45522, -155.565, -88.5965, 0.12", "-3.84553, -156.095, -89.2458, 0.12", "-2.80677, -156.803, -90.4845, 0.12", "-2.58449, -156.906, -90.7523, 0.12", "-1.87983, -157.089, -91.5731, 0.12", "-1.70241, -157.107, -91.7773, 0.72", "-1.39787, -157.126, -92.1608, 0.72", "-0.0065142, -157.194, -94.3123, 0.12", "0.270225, -157.216, -94.7781, 0.12", "0.39413, -157.227, -95.0189, 0.48", "0.699355, -157.238, -95.8668, 0.12", "0.881448, -157.226, -96.488, 0.12", "1.13631, -157.203, -97.3848, 0.72", "1.23979, -157.211, -97.7539, 0.84", "1.61089, -157.25, -99.3162, 1.32", "1.97825, -157.225, -101.237, 0.6", "2.0301, -157.186, -101.614, 0.6" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "22.1916, 1.91716, -8.73591, 0.48", "22.2889, 2.36437, -9.46916, 0.48", "22.3737, 2.86414, -10.3816, 0.12", "22.5025, 3.44965, -11.479, 0.12", "22.5849, 3.77583, -12.0634, 1.2", "22.6305, 3.94015, -12.3741, 1.2", "23.0582, 5.32643, -15.0547, 0.12", "23.2703, 5.79909, -16.0663, 0.12", "23.3897, 6.00868, -16.5275, 0.12", "23.5481, 6.22525, -17.0324, 0.12", "24.0266, 6.73384, -18.4999, 0.72", "24.2689, 6.94771, -19.1518, 0.84", "24.6063, 7.18139, -19.8164, 0.12", "24.7423, 7.247, -20.055, 0.12", "25.0442, 7.34371, -20.6023, 0.72", "26.4722, 7.62541, -23.0924, 0.12", "26.7737, 7.6731, -23.5696, 0.12", "27.2581, 7.73764, -24.3204, 0.12", "27.4714, 7.77368, -24.6574, 0.96", "28.5171, 8.03494, -26.2286, 0.12", "28.7575, 8.09635, -26.6116, 0.12", "29.197, 8.23955, -27.2688, 0.6", "29.5995, 8.37185, -27.8857, 0.12", "30.2867, 8.61757, -28.9497, 0.12", "30.9289, 8.85807, -29.9205, 0.72", "32.2439, 9.40139, -31.793, 0.12", "32.755, 9.61441, -32.5279, 0.12", "33.2022, 9.79965, -33.1642, 0.12", "33.4084, 9.89541, -33.4399, 0.6", "34.1474, 10.2564, -34.3322, 0.12", "34.3796, 10.3788, -34.5744, 0.12", "34.8193, 10.6198, -34.9579, 0.6", "34.9866, 10.6924, -35.133, 0.12", "35.3896, 10.8341, -35.5881, 0.12", "35.9965, 10.993, -36.2144, 0.6", "36.3786, 11.0719, -36.5618, 0.6", "37.3367, 11.2002, -37.3858, 0.48", "37.9721, 11.2678, -37.9219, 0.12", "38.3844, 11.3182, -38.2638, 0.12", "39.1845, 11.4222, -38.879, 0.12", "39.6102, 11.5019, -39.1718, 0.12", "40.111, 11.6151, -39.5641, 0.48", "40.7554, 11.7977, -40.0754, 0.48", "40.9609, 11.8546, -40.2471, 0.48", "41.3262, 11.9516, -40.5844, 0.12", "41.5193, 12.0031, -40.785, 0.12", "42.508, 12.184, -41.9536, 0.12", "43.0295, 12.2449, -42.5594, 1.44", "43.6554, 12.2823, -43.253, 0.12", "43.9617, 12.2792, -43.6006, 0.12", "44.2321, 12.2351, -43.9637, 0.24", "45.2367, 11.9982, -45.3254, 0.12", "45.8598, 11.8391, -46.125, 0.12", "46.1031, 11.7738, -46.4374, 0.72", "46.9221, 11.5756, -47.4463, 0.12", "48.9175, 11.1472, -49.7841, 0.12", "49.5108, 11.0442, -50.4416, 0.12", "50.0581, 10.9884, -50.9881, 0.12", "50.4707, 10.9744, -51.3775, 0.12", "51.0009, 11.0267, -51.7987, 0.72", "51.2228, 11.0918, -51.926, 0.72", "51.9294, 11.4136, -52.2449, 0.12", "52.6725, 11.7952, -52.6311, 0.12", "53.2484, 12.0928, -52.9815, 0.12", "54.0764, 12.5258, -53.5246, 0.12", "54.6376, 12.8231, -53.8979, 0.12", "55.341, 13.205, -54.3585, 0.48", "55.6021, 13.3357, -54.5646, 0.48", "56.2346, 13.5968, -55.154, 0.12", "56.736, 13.7659, -55.6605, 0.12", "57.3487, 13.928, -56.3299, 0.12", "57.5393, 13.9833, -56.5447, 0.48", "58.9774, 14.4461, -58.1313, 0.12", "59.5948, 14.6385, -58.9502, 0.12", "59.8547, 14.7356, -59.3119, 0.36", "60.1466, 14.8497, -59.7444, 0.12", "60.6765, 15.0698, -60.5754, 0.12", "60.8102, 15.1312, -60.7809, 0.36", "62.0836, 15.8481, -62.5614, 0.12", "62.8688, 16.287, -63.8563, 0.12", "62.8688, 16.287, -63.8563, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "22.1916, 1.91716, -8.73591, 0.36", "22.9436, 2.70215, -8.85966, 0.36", "23.8579, 3.60757, -8.98473, 0.36", "24.4727, 4.17771, -9.05976, 0.96", "25.0853, 4.74192, -9.08172, 1.2", "25.7008, 5.31557, -9.069, 0.96", "26.1711, 5.77025, -9.04055, 0.72", "26.7113, 6.30292, -8.93706, 0.72", "27.0823, 6.68857, -8.80257, 0.72", "27.7636, 7.43187, -8.45198, 0.36", "27.8885, 7.56846, -8.37388, 0.36", "28.3294, 8.01107, -8.05358, 0.6", "28.5852, 8.21633, -7.8601, 0.6", "29.5888, 8.80647, -7.06094, 0.48", "30.2901, 9.15074, -6.49057, 0.48", "30.8526, 9.43055, -6.03316, 0.48", "31.5417, 9.74714, -5.43062, 0.96", "32.4059, 10.0782, -4.67195, 0.72", "33.2429, 10.3392, -3.91986, 0.72", "33.9077, 10.5068, -3.33616, 0.48", "35.0259, 10.8364, -2.38354, 0.72", "35.9632, 11.2163, -1.64747, 0.72", "36.5912, 11.5635, -1.19035, 0.72", "37.602, 12.2739, -0.505837, 0.48", "38.1103, 12.6999, -0.205376, 0.36", "38.9618, 13.4812, 0.228859, 0.36", "39.5898, 14.1243, 0.496117, 0.36", "40.22, 14.8625, 0.706839, 0.84", "40.7138, 15.4628, 0.852618, 0.84", "41.3147, 16.1979, 0.975005, 0.48", "41.9012, 16.8994, 1.09905, 0.48", "42.2822, 17.3363, 1.18558, 0.6", "42.8767, 18.0343, 1.31897, 0.72", "43.4816, 18.7647, 1.45535, 0.36", "43.9523, 19.3421, 1.57363, 0.36", "44.5643, 20.1169, 1.7376, 0.48", "44.9635, 20.6517, 1.84784, 0.96", "45.5704, 21.5149, 2.02651, 1.08", "46.1277, 22.356, 2.18912, 0.36", "46.818, 23.4259, 2.3645, 0.36", "47.5277, 24.4976, 2.52651, 0.48", "47.6869, 24.735, 2.55747, 0.48", "48.0362, 25.2576, 2.61735, 0.12", "48.5983, 26.1318, 2.71119, 0.12", "49.1645, 27.0884, 2.79621, 0.48", "49.5314, 27.7583, 2.85829, 0.36", "49.9064, 28.4934, 2.92195, 0.36", "50.3173, 29.326, 2.98332, 0.48", "50.4926, 29.6829, 3.00417, 0.12", "50.9893, 30.6793, 3.05721, 0.12", "51.1688, 31.0092, 3.08476, 0.12", "51.6167, 31.8344, 3.0776, 0.48", "51.8159, 32.2029, 3.05656, 0.24", "52.1695, 32.8773, 2.99228, 0.24", "52.4562, 33.4493, 2.92494, 0.48", "52.9075, 34.4366, 2.80272, 0.96", "53.6431, 36.1628, 2.64002, 0.96", "53.8668, 36.7185, 2.60701, 0.12", "54.1652, 37.538, 2.58586, 0.12", "54.324, 38.0268, 2.61258, 0.24", "54.6088, 38.9663, 2.73548, 0.24", "54.8176, 39.6834, 2.8734, 0.36", "55.0475, 40.4425, 3.09005, 0.36", "55.0953, 40.6071, 3.13147, 0.24", "55.3765, 41.6016, 3.42886, 0.24", "55.6306, 42.5072, 3.70462, 0.48", "55.7657, 43.0035, 3.85502, 0.24", "55.9399, 43.6015, 4.01714, 0.24", "56.2434, 44.601, 4.26911, 0.72", "56.5572, 45.5896, 4.48819, 0.12", "57.0437, 47.086, 4.76198, 0.12", "57.1709, 47.47, 4.83489, 0.12", "57.5496, 48.6084, 5.04005, 0.12", "57.72, 49.1099, 5.12211, 0.96", "57.9342, 49.7588, 5.21654, 0.96", "58.272, 50.8125, 5.33474, 0.48", "58.5636, 51.7498, 5.44794, 0.36", "58.9521, 52.9964, 5.59823, 0.36", "59.127, 53.5469, 5.66166, 0.36", "59.4267, 54.4014, 5.76751, 0.6", "59.6343, 54.9407, 5.83361, 0.12", "59.8948, 55.5357, 5.90155, 0.12", "60.2224, 56.193, 5.96395, 0.12", "60.8094, 57.1921, 6.05539, 0.12", "61.2249, 57.8693, 6.11375, 0.48", "61.473, 58.265, 6.14443, 0.12", "61.9777, 59.0614, 6.20269, 0.12", "62.2289, 59.4556, 6.22811, 0.12", "63.1454, 60.9534, 6.30896, 0.12", "63.4683, 61.5061, 6.35198, 0.12", "63.887, 62.2146, 6.41319, 0.12", "63.9808, 62.3725, 6.4315, 0.48", "64.356, 63.0178, 6.51825, 0.48", "64.6206, 63.4809, 6.58715, 0.12", "65.1397, 64.3711, 6.77636, 0.12", "65.7652, 65.3952, 7.05436, 0.12", "66.2376, 66.2252, 7.29096, 0.48", "66.6045, 66.9295, 7.51396, 0.72", "66.8439, 67.4185, 7.69423, 0.72", "67.1837, 68.2028, 7.99508, 0.72", "67.5673, 69.2325, 8.3854, 0.12", "68.1324, 71.0351, 9.07975, 0.12", "68.3731, 71.8377, 9.37796, 0.48", "68.5916, 72.5856, 9.62696, 0.12", "68.9623, 73.7584, 10.0157, 0.12", "69.1593, 74.3788, 10.14, 0.6", "69.4755, 75.3032, 10.2165, 0.6", "69.7541, 76.0083, 10.185, 0.48", "70.2022, 77.0054, 10.0365, 0.48", "70.9038, 78.4119, 9.73573, 0.36", "72.2287, 80.7344, 9.15012, 0.12", "72.7413, 81.5582, 8.92502, 0.12", "73.577, 82.7926, 8.64654, 0.12", "74.1178, 83.5248, 8.52773, 0.12", "74.3581, 83.8161, 8.50454, 0.6", "74.796, 84.3152, 8.52253, 0.84", "75.2446, 84.7678, 8.65019, 0.6", "76.2511, 85.7038, 8.96871, 0.12", "76.72, 86.1355, 9.12904, 0.12", "77.0121, 86.4203, 9.23862, 0.72", "77.5768, 87.0482, 9.46137, 0.72", "77.8656, 87.4118, 9.5765, 0.48", "78.0248, 87.6497, 9.635, 0.12", "78.449, 88.397, 9.73676, 0.12", "78.6576, 88.8237, 9.7975, 0.72", "78.9248, 89.43, 9.83653, 0.96", "79.0348, 89.6939, 9.85272, 0.96", "79.2764, 90.3156, 9.8791, 0.12", "79.6102, 91.1824, 9.89188, 0.12", "79.8023, 91.6828, 9.86908, 0.12", "80.169, 92.5974, 9.74583, 0.24", "85.6698, 101.783, 11.6644, 0.24", "91.599, 110.597, 14.0703, 0.24", "97.9198, 119.348, 15.5602, 0.24", "103.267, 128.215, 18.9209, 0.24", "108.392, 136.318, 24.13, 0.24", "113.37, 144.759, 28.9017, 0.24", "119.38, 151.878, 34.6508, 0.24", "125.643, 158.322, 40.9406, 0.24", "130.085, 165.209, 48.2047, 0.24", "135.69, 172.226, 54.4682, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.7006, -36.2249, 2.49621, 0.48", "-10.8307, -36.949, 2.32126, 0.48", "-11.0544, -38.1414, 2.05092, 0.48", "-11.1994, -38.8969, 1.88704, 0.36", "-11.3311, -39.5698, 1.74945, 0.36", "-11.4802, -40.3481, 1.60175, 0.36", "-11.5918, -40.947, 1.49514, 0.6", "-11.6851, -41.4725, 1.42552, 0.84", "-11.773, -41.9503, 1.40474, 1.08", "-11.8675, -42.4113, 1.40756, 1.32", "-11.9657, -42.8665, 1.40919, 1.32", "-12.0129, -43.0945, 1.41076, 1.32", "-12.1722, -43.9882, 1.42337, 0.84", "-12.2904, -44.7145, 1.43665, 0.6", "-12.3497, -45.0748, 1.44049, 0.84", "-12.4502, -45.683, 1.44027, 0.84", "-12.5312, -46.1316, 1.4342, 0.6", "-12.6931, -46.9387, 1.42624, 0.6", "-12.917, -47.9788, 1.41514, 0.72", "-13.0825, -48.687, 1.41811, 0.72", "-13.2581, -49.3734, 1.42995, 0.72", "-13.473, -50.1157, 1.44779, 0.72", "-13.7801, -51.1012, 1.46824, 0.36", "-14.0397, -51.8988, 1.50217, 0.36", "-14.153, -52.2489, 1.52481, 0.36", "-14.2285, -52.4878, 1.55184, 0.72", "-14.3284, -52.8011, 1.62515, 0.96", "-14.5134, -53.4516, 1.84651, 0.96", "-14.6805, -54.0915, 2.10599, 0.84", "-14.8346, -54.7285, 2.38017, 0.6", "-14.9696, -55.318, 2.6721, 0.48", "-15.1916, -56.3594, 3.20399, 0.48", "-15.3018, -56.8808, 3.47089, 0.6", "-15.4319, -57.5344, 3.76736, 0.84", "-15.5704, -58.2891, 4.04227, 0.84", "-15.7829, -59.5936, 4.42128, 0.72", "-15.8918, -60.3845, 4.57763, 0.6", "-15.9388, -60.7987, 4.62449, 0.72", "-16.0478, -61.83, 4.71102, 0.36", "-16.1108, -62.6344, 4.80952, 0.12", "-16.1398, -63.0929, 4.88353, 0.12", "-16.1568, -63.4428, 4.94452, 0.48", "-16.1882, -64.1128, 5.10009, 0.84", "-16.233, -64.908, 5.3197, 0.84", "-16.3989, -66.843, 5.99479, 0.48", "-16.4734, -67.599, 6.2754, 0.36", "-16.5074, -67.9164, 6.39242, 0.36", "-16.561, -68.3577, 6.57623, 0.72", "-16.6255, -68.8319, 6.78463, 0.84", "-16.7721, -69.8885, 7.23844, 0.72", "-16.888, -70.6143, 7.57285, 0.72", "-17.0037, -71.3407, 7.93012, 0.72", "-17.2024, -72.6512, 8.60043, 0.6", "-17.2727, -73.1683, 8.86748, 0.6", "-17.3733, -73.8976, 9.2229, 0.72", "-17.602, -75.2731, 9.89272, 1.2", "-17.7275, -75.8874, 10.2071, 1.32", "-17.8435, -76.392, 10.4562, 1.32", "-17.9896, -77.0166, 10.7217, 0.48", "-18.2077, -77.9658, 11.0979, 0.48", "-18.4285, -78.9758, 11.4716, 0.96", "-18.5822, -79.7836, 11.7218, 0.72", "-18.6995, -80.4425, 11.925, 0.48", "-18.7907, -81.0096, 12.1004, 0.48", "-18.907, -81.8866, 12.3614, 0.48", "-18.9646, -82.5862, 12.5454, 0.48", "-18.9956, -83.147, 12.6535, 0.72", "-19.0277, -83.7311, 12.7518, 1.08", "-19.0764, -84.631, 12.9018, 0.36", "-19.0927, -84.8588, 12.9468, 0.36", "-19.156, -85.6452, 13.1064, 0.48", "-19.2156, -86.3383, 13.2366, 0.6", "-19.2896, -87.0172, 13.3834, 1.08", "-19.3818, -87.6935, 13.5322, 1.2", "-19.54, -88.6487, 13.7296, 0.72", "-19.6624, -89.3132, 13.8642, 0.72", "-19.7995, -89.9955, 13.9969, 0.48", "-20.0211, -90.9898, 14.1668, 0.36", "-20.2963, -92.037, 14.3384, 0.36", "-20.5022, -92.7376, 14.4396, 0.36", "-20.739, -93.5035, 14.5258, 0.48", "-20.9443, -94.1682, 14.5987, 0.72", "-21.2317, -95.163, 14.7181, 0.72", "-21.4925, -96.1262, 14.8284, 0.36", "-21.6562, -96.6934, 14.8972, 0.36", "-21.8727, -97.3816, 14.9955, 0.6", "-22.2466, -98.4661, 15.159, 0.6", "-22.4741, -99.111, 15.2522, 0.36", "-22.852, -100.175, 15.405, 0.36", "-23.2055, -101.175, 15.5307, 0.36", "-23.5814, -102.236, 15.6616, 0.48", "-23.8055, -102.873, 15.7375, 0.6", "-24.2231, -104.119, 15.8666, 0.6", "-24.4179, -104.772, 15.9275, 0.48", "-24.6691, -105.801, 16.0261, 0.48", "-24.83, -106.588, 16.0929, 0.48", "-24.9557, -107.276, 16.1372, 0.84", "-25.1645, -108.533, 16.2141, 0.72", "-25.2519, -109.125, 16.2455, 0.36", "-25.3379, -109.817, 16.2741, 0.36", "-25.4395, -110.749, 16.3117, 0.36", "-25.5233, -111.56, 16.3425, 0.48", "-25.5938, -112.339, 16.3698, 0.6", "-25.7039, -113.603, 16.4099, 0.6", "-25.7693, -114.422, 16.4481, 0.6", "-25.8097, -114.991, 16.4846, 0.6", "-25.8711, -116.278, 16.5929, 0.6", "-25.8882, -116.856, 16.65, 0.72", "-25.8894, -117.468, 16.7322, 0.96", "-25.8376, -118.674, 16.9275, 0.36", "-25.776, -119.367, 17.056, 0.36", "-25.6623, -120.185, 17.213, 0.72", "-25.4724, -121.214, 17.4063, 0.84", "-25.2408, -122.45, 17.6193, 0.36", "-25.0524, -123.457, 17.8096, 0.36", "-24.9241, -124.172, 17.9479, 0.36", "-24.8148, -124.876, 18.0913, 0.24", "-24.7112, -125.901, 18.2948, 0.24", "-24.6733, -126.978, 18.4961, 0.36", "-24.6925, -127.822, 18.6351, 0.48", "-24.7404, -128.51, 18.7447, 0.36", "-24.8107, -129.303, 18.8651, 0.36", "-24.882, -130.137, 18.9917, 0.36", "-24.9211, -130.748, 19.0717, 0.36", "-24.9347, -131.225, 19.1161, 0.6", "-24.9374, -131.796, 19.1407, 0.36", "-24.9294, -132.261, 19.1646, 0.36", "-24.9069, -132.843, 19.1992, 0.36", "-24.8864, -133.19, 19.2203, 0.6", "-24.8698, -133.545, 19.2395, 0.6", "-24.8531, -134.023, 19.2562, 0.48", "-24.8385, -134.493, 19.2651, 0.48", "-24.8198, -135.013, 19.2693, 0.48", "-24.7945, -135.386, 19.2717, 0.72", "-24.7434, -135.964, 19.333, 0.72", "-24.6908, -136.491, 19.4228, 0.48", "-24.6322, -137.047, 19.544, 0.36", "-24.5726, -137.62, 19.689, 0.36", "-24.5048, -138.263, 19.8658, 0.36", "-24.3949, -139.677, 20.2639, 0.24", "-24.4031, -140.239, 20.4126, 0.24", "-24.4485, -140.577, 20.4895, 0.6", "-24.6184, -141.249, 20.6016, 0.72", "-24.7444, -141.601, 20.6334, 0.36", "-24.9898, -142.17, 20.6409, 0.36", "-25.488, -143.152, 20.5724, 0.36", "-25.8156, -143.74, 20.5252, 0.36", "-26.2161, -144.413, 20.4685, 0.36", "-26.7136, -145.227, 20.399, 0.36", "-27.152, -145.945, 20.3391, 0.36", "-27.905, -147.228, 20.2365, 0.48", "-28.5858, -148.471, 20.1458, 0.48", "-28.9009, -149.048, 20.1033, 0.6", "-29.2003, -149.6, 20.0572, 0.6", "-29.446, -150.056, 20.0144, 0.36", "-29.871, -150.917, 19.9309, 0.36", "-30.0928, -151.457, 19.8803, 0.48", "-30.2642, -151.927, 19.8383, 0.48", "-30.3748, -152.223, 19.8122, 0.6", "-30.5291, -152.605, 19.7993, 0.6", "-30.8565, -153.363, 19.81, 0.36", "-31.1362, -153.975, 19.8412, 0.12", "-31.4007, -154.546, 19.9055, 0.12", "-31.8705, -155.594, 20.0723, 0.12", "-32.1654, -156.249, 20.2019, 0.6", "-32.3626, -156.721, 20.3069, 0.72", "-32.6911, -157.628, 20.5201, 0.36", "-32.8549, -158.19, 20.6495, 0.12", "-32.9921, -158.746, 20.7627, 0.12", "-32.9921, -158.746, 20.7627, 0.36", "-33.1379, -159.437, 20.8227, 0.24", "-33.3237, -160.339, 20.8645, 0.24", "-33.4406, -160.949, 20.8685, 0.24", "-33.553, -161.52, 20.8641, 0.36", "-33.7097, -162.23, 20.865, 0.36", "-33.9268, -163.09, 20.8693, 0.36", "-34.0714, -163.602, 20.8717, 0.36", "-34.2397, -164.171, 20.8841, 0.36", "-34.393, -164.706, 20.9024, 0.12", "-34.703, -165.801, 20.9518, 0.24", "-35.0441, -166.998, 21.0184, 0.24", "-35.5002, -168.619, 21.1199, 0.24", "-35.6232, -169.057, 21.1483, 0.12", "-35.9205, -170.088, 21.1906, 0.12", "-35.9932, -170.329, 21.193, 0.36", "-36.2052, -171.009, 21.1923, 0.36", "-36.5348, -171.88, 21.163, 0.36", "-36.9126, -172.48, 21.0904, 0.72", "-37.2362, -172.803, 21.0152, 0.48", "-37.7229, -173.196, 20.899, 0.48", "-38.0095, -173.394, 20.8298, 0.12", "-38.88, -173.871, 20.6175, 0.12", "-40.3276, -174.505, 20.2772, 0.12", "-41.4385, -174.948, 20.034, 0.12", "-44.5591, -184.145, 20.3497, 0.12", "-48.4062, -193.078, 20.6623, 0.12", "-53.7449, -201.117, 19.0981, 0.12", "-59.9683, -208.677, 19.2332, 0.12", "-65.6209, -216.557, 20.4866, 0.12", "-71.305, -224.404, 21.8053, 0.12", "-78.1293, -231.442, 21.3296, 0.12", "-85.6611, -237.325, 18.9234, 0.12", "-93.3512, -242.374, 15.3215, 0.12", "-102.083, -246.085, 12.466, 0.12", "-110.917, -250.038, 10.3671, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.7006, -36.2249, 2.49621, 0.48", "-11.3208, -36.6904, 2.63693, 0.48", "-11.7966, -37.0674, 2.72945, 0.48", "-12.208, -37.3973, 2.83052, 0.48", "-13.1448, -38.2075, 3.0858, 0.48", "-13.4543, -38.4918, 3.16773, 0.48", "-13.7514, -38.7902, 3.2428, 0.36", "-14.1024, -39.1782, 3.35366, 0.36", "-14.4444, -39.6002, 3.4502, 0.72", "-14.7237, -39.9887, 3.53388, 1.2", "-14.9996, -40.4385, 3.60462, 1.2", "-15.3436, -41.0673, 3.72171, 0.48", "-15.5884, -41.5639, 3.81711, 0.36", "-15.7755, -41.9927, 3.89386, 0.36", "-16.0189, -42.5915, 3.97461, 0.84", "-16.2074, -43.0549, 4.02731, 0.84", "-16.4879, -43.7549, 4.08276, 0.36", "-16.6679, -44.203, 4.10062, 0.72", "-16.8562, -44.6696, 4.10174, 0.84", "-17.2084, -45.4936, 4.081, 0.12", "-17.5385, -46.2317, 4.0362, 0.12", "-17.9626, -47.1028, 3.97845, 0.12", "-18.2047, -47.5523, 3.94293, 0.6", "-18.3671, -47.8456, 3.91815, 0.6", "-18.6442, -48.3552, 3.87604, 0.12", "-18.8254, -48.7018, 3.85524, 0.12", "-19.0556, -49.1806, 3.84135, 0.6", "-19.3561, -49.8574, 3.85835, 0.6", "-19.4967, -50.2046, 3.88061, 0.6", "-19.6601, -50.6572, 3.92123, 0.48", "-19.7991, -51.0832, 3.98348, 0.72", "-19.9385, -51.5182, 4.07276, 0.72", "-20.1017, -52.0626, 4.21297, 0.36", "-20.1526, -52.2301, 4.26072, 0.36", "-20.3681, -52.8098, 4.40776, 0.6", "-20.6237, -53.4014, 4.52521, 0.36", "-20.7216, -53.5945, 4.56039, 0.24", "-20.9128, -53.9315, 4.619, 0.24", "-21.1277, -54.2906, 4.67117, 0.24", "-21.5118, -54.9206, 4.7555, 0.6", "-21.7551, -55.3258, 4.8062, 0.6", "-22.0757, -55.8946, 4.85781, 0.48", "-22.1623, -56.0629, 4.8737, 0.48", "-22.3391, -56.4464, 4.91328, 0.36", "-22.6152, -57.1033, 4.99671, 0.36", "-22.7234, -57.3689, 5.03753, 0.48", "-22.9484, -57.9109, 5.11529, 0.48", "-23.1419, -58.3498, 5.17645, 0.72", "-23.2651, -58.603, 5.2183, 0.84", "-23.5829, -59.2001, 5.34231, 0.72", "-23.8482, -59.6739, 5.45215, 0.36", "-24.1039, -60.0982, 5.54902, 0.36", "-24.3677, -60.4847, 5.64883, 0.24", "-24.7884, -61.0513, 5.79807, 0.24", "-25.0914, -61.4482, 5.89666, 0.12", "-25.3782, -61.8313, 5.98148, 0.12", "-25.6252, -62.1658, 6.05698, 0.12", "-25.919, -62.5521, 6.17177, 0.12", "-26.1197, -62.8108, 6.27723, 0.12", "-26.2895, -63.0276, 6.40108, 0.12", "-26.3988, -63.1912, 6.50022, 0.72", "-26.6123, -63.5472, 6.73154, 0.96", "-26.899, -64.0866, 7.07897, 0.84", "-27.1517, -64.6506, 7.41481, 0.72", "-27.3441, -65.1349, 7.69627, 0.36", "-27.5683, -65.7704, 8.02925, 0.24", "-27.6528, -66.046, 8.14885, 0.84", "-27.719, -66.2926, 8.22963, 0.84", "-27.8493, -66.8341, 8.33799, 0.72", "-27.9878, -67.4214, 8.41794, 0.48", "-28.1355, -67.9888, 8.48929, 0.24", "-28.3042, -68.5584, 8.56081, 0.24", "-28.4351, -68.9492, 8.61986, 0.12", "-28.8148, -69.9683, 8.79341, 0.12", "-29.108, -70.6423, 8.90639, 0.12", "-29.2563, -70.9548, 8.96486, 0.48", "-29.5334, -71.518, 9.08538, 0.6", "-29.872, -72.2084, 9.2364, 0.48", "-30.0975, -72.6617, 9.32605, 0.36", "-30.4361, -73.3048, 9.43951, 0.48", "-30.7632, -73.9183, 9.52245, 0.24", "-30.986, -74.3359, 9.57795, 0.24", "-31.393, -75.1233, 9.68764, 0.24", "-31.7665, -75.9093, 9.79207, 0.24", "-31.9777, -76.3842, 9.85262, 0.6", "-32.049, -76.575, 9.87368, 0.6", "-32.2427, -77.2434, 9.92852, 0.24", "-32.3621, -77.7879, 9.97303, 0.24", "-32.4316, -78.3483, 10.02, 0.48", "-32.4248, -78.9145, 10.0352, 0.36", "-32.3461, -79.7602, 10.0122, 0.36", "-32.2563, -80.4325, 9.96272, 0.36", "-32.2266, -80.64, 9.93522, 0.84", "-32.1945, -80.9265, 9.89294, 0.84", "-32.1067, -81.9822, 9.74651, 0.24", "-32.0952, -82.2559, 9.71635, 0.24", "-32.1064, -82.4655, 9.69219, 0.24", "-32.2202, -83.2157, 9.62062, 0.24", "-32.3318, -83.7971, 9.58556, 0.36", "-32.3865, -84.0457, 9.5781, 0.12", "-32.4945, -84.5155, 9.58216, 0.12", "-32.6935, -85.5458, 9.60356, 0.12", "-32.8643, -86.72, 9.64659, 0.12", "-32.9568, -87.6553, 9.69469, 0.12", "-32.9948, -88.1173, 9.71916, 0.48", "-33.0366, -88.6892, 9.7494, 0.48", "-33.0598, -89.1886, 9.78268, 0.48", "-33.0643, -89.8535, 9.83998, 0.36", "-33.0657, -90.2216, 9.87374, 0.36", "-33.1025, -90.8233, 9.91722, 0.48", "-33.1434, -91.124, 9.93054, 0.12", "-33.1979, -91.3206, 9.94451, 0.12", "-33.3086, -91.5975, 9.97317, 0.12", "-33.4971, -91.974, 10.0277, 0.6", "-33.6798, -92.3202, 10.0955, 0.84", "-33.779, -92.5032, 10.138, 0.84", "-34.1813, -93.2142, 10.2873, 0.12", "-34.2732, -93.3782, 10.3144, 0.12", "-34.3682, -93.5663, 10.34, 0.12", "-34.458, -93.7487, 10.3673, 0.12", "-34.7233, -94.2933, 10.4404, 0.36", "-34.967, -94.7763, 10.5196, 0.36", "-35.2957, -95.4122, 10.6216, 0.36", "-35.5202, -95.8146, 10.6982, 0.36", "-35.8104, -96.3337, 10.81, 0.6", "-36.0072, -96.677, 10.8877, 0.6", "-36.375, -97.2902, 11.0233, 0.36", "-36.5176, -97.5142, 11.0668, 0.36", "-36.709, -97.7995, 11.1204, 0.36", "-37.0256, -98.2609, 11.1855, 0.36", "-37.2404, -98.6021, 11.2023, 0.36", "-37.5964, -99.1883, 11.1944, 0.48", "-37.7662, -99.4753, 11.1487, 0.48" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "164.034, 74.515, 145.831, 0.48", "171.893, 78.5713, 152.707, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "164.034, 74.515, 145.831, 0.36", "170.376, 77.7161, 152.248, 0.48", "176.521, 80.2355, 159.157, 0.48", "181.912, 81.9017, 166.912, 0.48", "188.009, 82.7361, 174.28, 0.48", "193.743, 81.6601, 181.909, 0.48", "200.869, 80.0669, 188.14, 0.48", "208.372, 77.1336, 193.325, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-43.2351, -118.446, -76.4564, 0.12", "-43.7968, -118.544, -77.3409, 0.12", "-44.1075, -118.604, -77.824, 0.12", "-45.2466, -118.833, -79.5214, 0.6", "-45.5773, -118.909, -80.0638, 0.6", "-46.1036, -119.058, -80.9836, 0.36", "-46.5906, -119.209, -81.8275, 0.36", "-46.7981, -119.297, -82.1946, 0.6", "-46.9536, -119.378, -82.4618, 0.6", "-48.0268, -120.09, -84.2126, 0.24", "-48.499, -120.439, -84.9769, 0.24", "-48.7558, -120.645, -85.412, 0.24", "-49.2662, -121.073, -86.3038, 0.24", "-49.5027, -121.283, -86.7303, 0.24", "-50.0256, -121.768, -87.6859, 0.6", "-50.1719, -121.906, -87.9332, 0.6", "-51.0751, -122.743, -89.4887, 0.12", "-51.2237, -122.883, -89.7556, 0.12", "-51.4012, -123.035, -90.0592, 0.48", "-51.8659, -123.374, -90.722, 0.12", "-52.1139, -123.527, -90.9705, 0.12", "-52.3918, -123.678, -91.1874, 0.12", "-52.6385, -123.799, -91.3103, 0.12", "-53.0004, -123.961, -91.5076, 0.48", "-53.6545, -124.22, -91.8559, 0.6", "-54.0188, -124.353, -92.0321, 0.6", "-54.5882, -124.566, -92.3131, 0.12", "-55.0162, -124.737, -92.565, 0.12", "-55.5272, -124.964, -92.899, 0.12", "-56.0115, -125.229, -93.2352, 0.12", "-56.3494, -125.465, -93.4704, 0.6", "-56.6588, -125.711, -93.6845, 0.6", "-57.3638, -126.316, -94.2121, 0.12", "-57.5495, -126.487, -94.3614, 0.12", "-57.9614, -126.892, -94.7261, 0.12", "-58.2383, -127.173, -94.987, 0.6", "-58.3723, -127.309, -95.1198, 0.6", "-59.1063, -128.08, -95.8333, 0.12", "-59.4032, -128.422, -96.1048, 0.12", "-60.0548, -129.204, -96.6968, 0.24", "-60.4302, -129.651, -97.0378, 0.36", "-60.7844, -130.064, -97.3411, 0.12", "-61.1984, -130.535, -97.652, 0.12", "-61.7399, -131.129, -97.9642, 0.12", "-62.0582, -131.426, -98.1474, 0.48", "-62.4056, -131.676, -98.3227, 0.12", "-62.6726, -131.796, -98.4496, 0.12", "-63.1597, -131.928, -98.6517, 0.12", "-63.4776, -131.978, -98.7774, 0.36", "-64.47, -132.07, -99.1499, 0.12", "-65.0066, -132.121, -99.3388, 0.12", "-65.7198, -132.215, -99.561, 0.12", "-66.1362, -132.288, -99.6818, 0.48", "-66.5866, -132.394, -99.7969, 0.48", "-67.0177, -132.521, -99.8768, 0.36", "-67.334, -132.637, -99.8751, 0.36", "-67.7744, -132.812, -99.8308, 0.36", "-68.1282, -132.946, -99.7658, 0.36", "-68.3987, -133.046, -99.702, 0.36", "-69.1729, -133.331, -99.4899, 0.48", "-70.1725, -133.74, -99.1933, 0.12", "-70.5513, -133.923, -99.0854, 0.12", "-71.0043, -134.175, -98.9693, 0.12", "-71.3156, -134.388, -98.9043, 0.12", "-71.5303, -134.594, -98.8788, 0.12", "-71.8666, -135.088, -98.8838, 0.12", "-72.2513, -135.828, -98.9506, 0.6", "-72.3474, -136.073, -98.9714, 0.12", "-72.5013, -136.572, -99.012, 0.12", "-72.7439, -137.47, -99.0837, 0.12", "-72.9456, -138.275, -99.1504, 0.12", "-73.0771, -138.811, -99.1942, 0.12", "-73.219, -139.418, -99.2386, 0.12", "-73.2635, -139.621, -99.2513, 0.12", "-73.3614, -140.046, -99.2776, 0.36", "-73.4161, -140.28, -99.2957, 0.12", "-73.6078, -141.006, -99.363, 0.12", "-73.7866, -141.604, -99.4212, 0.12", "-73.9224, -142.01, -99.4616, 0.6", "-74.1078, -142.562, -99.5186, 0.6", "-74.2539, -143.004, -99.5648, 0.12", "-74.4835, -143.661, -99.6409, 0.12", "-74.6869, -144.209, -99.7122, 0.12", "-74.8542, -144.642, -99.7691, 0.6", "-75.0015, -145.039, -99.8191, 0.6", "-75.1505, -145.483, -99.87, 0.6", "-75.2334, -145.736, -99.8957, 0.12", "-75.5032, -146.541, -99.9781, 0.12", "-75.7444, -147.232, -100.076, 0.12", "-75.9394, -147.744, -100.164, 0.12", "-76.1951, -148.378, -100.283, 0.12", "-76.4226, -148.933, -100.393, 0.12", "-76.591, -149.361, -100.477, 0.36", "-76.8055, -149.904, -100.637, 0.12", "-76.9328, -150.23, -100.755, 0.12", "-77.1826, -150.899, -101.021, 0.12", "-77.4644, -151.682, -101.326, 0.12", "-77.6565, -152.23, -101.54, 0.12", "-78.0237, -153.289, -102.122, 0.12", "-78.1293, -153.594, -102.319, 0.36", "-78.2733, -153.99, -102.621, 0.12", "-78.6074, -154.869, -103.537, 0.12", "-78.7369, -155.169, -103.91, 0.6", "-79.3646, -156.471, -105.667, 0.12", "-79.5487, -156.813, -106.17, 0.12", "-79.637, -156.966, -106.412, 0.6", "-80.2585, -157.926, -108.043, 0.12", "-80.5866, -158.345, -108.79, 0.12", "-80.7355, -158.498, -109.009, 0.12", "-81.0586, -158.767, -109.275, 0.36", "-81.4621, -159.065, -109.547, 0.12", "-81.7998, -159.301, -109.694, 0.12", "-82.2647, -159.611, -109.794, 0.12", "-83.1224, -160.179, -109.975, 0.12", "-84.2134, -160.905, -110.196, 0.12", "-84.5195, -161.115, -110.25, 0.12", "-85.5069, -161.759, -110.421, 0.12", "-85.7008, -161.891, -110.454, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-43.2351, -118.446, -76.4564, 0.12", "-43.2289, -118.474, -76.4687, 0.12", "-43.2147, -118.56, -76.4976, 0.6", "-43.144, -118.819, -76.5635, 0.72", "-42.9342, -119.372, -76.7333, 0.48", "-42.7889, -119.708, -76.8331, 0.48", "-42.6429, -120.046, -76.9274, 0.24", "-42.4741, -120.448, -77.0501, 0.24", "-42.2505, -121.045, -77.233, 0.24", "-42.015, -121.686, -77.4236, 0.12", "-41.8403, -122.136, -77.5466, 0.12", "-41.6328, -122.623, -77.6879, 0.12", "-41.4394, -123.025, -77.8152, 0.48", "-41.1879, -123.609, -78.0041, 0.36", "-41.1224, -123.882, -78.0774, 0.12", "-41.0654, -124.225, -78.1962, 0.12", "-41.0307, -124.412, -78.2743, 0.36", "-40.9658, -124.717, -78.4032, 0.12", "-40.825, -125.333, -78.6033, 0.12", "-40.5934, -126.311, -78.8724, 0.12", "-40.3466, -127.372, -79.1476, 0.12", "-40.1805, -128.075, -79.3114, 0.12", "-40.0615, -128.511, -79.3971, 0.12", "-39.7906, -129.273, -79.5206, 0.48", "-39.6448, -129.562, -79.5555, 0.48", "-39.3497, -130.023, -79.6051, 0.24", "-39.0903, -130.415, -79.633, 0.24", "-38.8698, -130.752, -79.6808, 0.24", "-38.5276, -131.289, -79.8105, 0.12", "-38.1379, -131.939, -80.0238, 0.12", "-37.8417, -132.475, -80.1967, 0.12", "-37.7167, -132.709, -80.2757, 0.24", "-37.4603, -133.169, -80.4561, 0.36", "-37.2346, -133.565, -80.6195, 0.12", "-37.1092, -133.795, -80.7106, 0.12", "-36.9382, -134.14, -80.8363, 0.12", "-36.7198, -134.626, -80.9701, 0.36", "-36.4469, -135.224, -81.1009, 0.12", "-36.2553, -135.632, -81.1592, 0.12", "-36.0963, -135.961, -81.2016, 0.12", "-35.8253, -136.54, -81.2751, 0.12", "-35.5708, -137.135, -81.3335, 0.12", "-35.4733, -137.371, -81.3474, 0.12", "-35.2045, -138.061, -81.3598, 0.6", "-34.9458, -138.772, -81.3586, 0.12", "-34.5093, -139.935, -81.3532, 0.12", "-33.8948, -141.53, -81.3393, 0.12", "-33.2249, -143.29, -81.3156, 0.12", "-32.9596, -144.017, -81.3007, 0.12", "-32.7212, -144.727, -81.2639, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-37.7662, -99.4753, 11.1487, 0.48", "-38.0541, -100.809, 11.3382, 0.48", "-38.309, -102.096, 11.4819, 0.36", "-38.4153, -102.679, 11.5367, 0.12", "-38.5972, -103.66, 11.6898, 0.12", "-38.7713, -104.508, 11.8436, 0.12", "-38.8905, -105.051, 11.9476, 0.6", "-39.0664, -105.76, 12.0488, 0.6", "-39.1649, -106.182, 12.0597, 0.6", "-39.397, -107.575, 11.9721, 0.12", "-39.4524, -108.288, 11.8779, 0.12", "-39.4272, -108.724, 11.793, 0.12", "-39.0359, -109.959, 11.4718, 0.12", "-37.2501, -111.894, 10.8617, 0.12", "-36.3468, -112.411, 10.7037, 0.12", "-35.5161, -112.735, 10.6108, 0.12", "-33.9967, -113.183, 10.5647, 0.12", "-32.554, -113.547, 10.6118, 0.12", "-31.3594, -113.763, 10.7158, 0.12", "-30.3962, -113.879, 10.894, 0.36", "-30.0739, -113.921, 10.9536, 0.12", "-28.8019, -114.189, 11.19, 0.12", "-28.0149, -114.472, 11.3374, 0.24", "-22.7512, -125.23, 12.8571, 0.24", "-16.9078, -135.691, 14.4414, 0.24", "-11.4012, -146.305, 16.1606, 0.24", "-5.30765, -156.711, 17.0094, 0.24", "0.439406, -166.975, 19.8228, 0.24", "8.13605, -176.307, 20.7719, 0.24", "17.3702, -184.246, 21.1925, 0.24", "25.3088, -193.213, 19.1434, 0.24", "33.5308, -202.109, 18.1845, 0.24" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-37.7662, -99.4753, 11.1487, 0.12", "-38.3814, -99.6124, 10.8064, 0.12", "-38.7254, -99.7404, 10.6358, 0.12", "-39.4774, -100.072, 10.1625, 0.12", "-39.7949, -100.202, 9.94732, 0.12", "-40.5258, -100.499, 9.45209, 0.12", "-42.0886, -101.136, 8.39312, 0.12", "-42.4405, -101.313, 8.15404, 0.12", "-43.3741, -101.848, 7.53757, 0.84", "-44.1104, -102.325, 7.09805, 0.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-44.1104, -102.325, 7.09805, 0.12", "-44.3892, -102.248, 7.11227, 0.12", "-44.8287, -102.159, 7.13188, 0.12", "-45.4034, -102.069, 7.15494, 0.12", "-46.1536, -101.98, 7.18188, 0.12", "-46.7632, -101.924, 7.20192, 0.12", "-47.8409, -101.821, 7.28952, 0.24", "-48.1889, -101.801, 7.32931, 0.12", "-48.5304, -101.796, 7.38035, 0.12", "-49.0006, -101.784, 7.47011, 0.12", "-49.2078, -101.763, 7.51951, 0.12", "-50.0438, -101.583, 7.74152, 0.24", "-50.4861, -101.45, 7.86346, 0.12", "-50.7401, -101.367, 7.94207, 0.12", "-51.3563, -101.169, 8.13588, 0.36", "-51.8756, -101.02, 8.31591, 0.36", "-52.4552, -100.88, 8.5159, 0.36", "-52.7177, -100.835, 8.59872, 0.12", "-53.4862, -100.738, 8.8479, 0.12", "-53.9995, -100.725, 9.02533, 0.12", "-54.6232, -100.807, 9.24691, 1.44", "-54.8679, -100.877, 9.33908, 1.92", "-55.2238, -101.028, 9.47783, 1.92", "-55.5459, -101.221, 9.59859, 1.92", "-56.0641, -101.71, 9.71613, 0.12", "-56.3118, -102.118, 9.72612, 0.12", "-56.4228, -102.492, 9.66837, 0.36", "-56.4555, -102.695, 9.63129, 0.12", "-56.4588, -103.125, 9.53338, 0.12", "-56.3203, -104.049, 9.25429, 1.68", "-56.2294, -104.292, 9.11992, 1.92", "-56.1493, -104.44, 9.0121, 1.92", "-61.4888, -105.671, 10.339, 1.92", "-66.9498, -106.605, 11.3965, 1.92", "-72.3436, -106.844, 13.0401, 1.92", "-77.5447, -107.881, 14.9595, 1.92", "-82.4401, -109.55, 17.1923, 1.92", "-87.403, -111.91, 18.3697, 1.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-44.1104, -102.325, 7.09805, 0.48", "-44.641, -102.756, 6.95883, 0.48", "-45.2761, -103.107, 6.79991, 0.48", "-46.2374, -103.555, 6.56391, 0.48", "-46.9073, -103.847, 6.40131, 0.12", "-48.1398, -104.367, 6.0505, 0.12", "-49.4121, -104.858, 5.65823, 0.12", "-50.8229, -105.319, 5.2372, 0.12", "-51.5854, -105.521, 4.99948, 0.12", "-52.2818, -105.659, 4.77351, 0.12", "-53.2149, -105.819, 4.45121, 0.6", "-54.007, -105.941, 4.14212, 0.6", "-63.6252, -110.296, 2.44252, 0.6" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "axon_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "axon_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_DBC_8060414f1a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_11
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, axon_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, axon_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4499999836411719)
    connect dend_25(0), soma_0(0.4499999836411719)
    connect dend_22(0), soma_0(0.4499999836411719)
    connect dend_11(0), soma_0(0.4499999836411719)
    connect dend_6(0), soma_0(0.4499999836411719)
    connect dend_3(0), soma_0(0.4499999836411719)
    connect dend_0(0), soma_0(0.4499999836411719)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_14(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.36129, -7.58075, 0.00144685, 3.22785 ) }
    soma_0 { pt3dadd( 2.18013, -6.85906, 0.00129054, 6.03886 ) }
    soma_0 { pt3dadd( 1.99896, -6.13737, 0.00113423, 7.42316 ) }
    soma_0 { pt3dadd( 1.81779, -5.41568, 9.77923E-4, 8.36559 ) }
    soma_0 { pt3dadd( 1.63662, -4.69399, 8.21614E-4, 9.26167 ) }
    soma_0 { pt3dadd( 1.45546, -3.9723, 6.65304E-4, 9.90915 ) }
    soma_0 { pt3dadd( 1.27429, -3.25061, 5.08995E-4, 10.4263 ) }
    soma_0 { pt3dadd( 1.09312, -2.52892, 3.52686E-4, 10.8393 ) }
    soma_0 { pt3dadd( 0.911955, -1.80723, 1.96376E-4, 11.2188 ) }
    soma_0 { pt3dadd( 0.730788, -1.08554, 4.00668E-5, 11.4122 ) }
    soma_0 { pt3dadd( 0.54962, -0.363848, -1.16243E-4, 11.4389 ) }
    soma_0 { pt3dadd( 0.368453, 0.357841, -2.72552E-4, 11.3929 ) }
    soma_0 { pt3dadd( 0.187285, 1.07953, -4.28861E-4, 11.2923 ) }
    soma_0 { pt3dadd( 0.00611797, 1.80122, -5.85171E-4, 10.9441 ) }
    soma_0 { pt3dadd( -0.175049, 2.52291, -7.4148E-4, 10.5254 ) }
    soma_0 { pt3dadd( -0.356217, 3.2446, -8.9779E-4, 10.1407 ) }
    soma_0 { pt3dadd( -0.537384, 3.96629, -0.0010541, 9.5776 ) }
    soma_0 { pt3dadd( -0.718552, 4.68798, -0.00121041, 8.87208 ) }
    soma_0 { pt3dadd( -0.899719, 5.40967, -0.00136672, 7.79472 ) }
    soma_0 { pt3dadd( -1.08089, 6.13136, -0.00152303, 6.05918 ) }
    soma_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 3.96403 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.04582, 6.79849, -2.62764, 1.8 ) }
    apic_0 { pt3dadd( 1.02897, 7.78891, -3.05702, 0.96 ) }
    apic_0 { pt3dadd( 1.01118, 8.8343, -3.51023, 0.72 ) }
    apic_0 { pt3dadd( 0.982929, 10.4939, -4.22971, 0.96 ) }
    apic_0 { pt3dadd( 0.964189, 11.5954, -4.70725, 1.32 ) }
    apic_0 { pt3dadd( 0.938686, 13.0938, -5.35687, 1.32 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.0441755, -6.79301, 6.04236, 1.68 ) }
    dend_25 { pt3dadd( -0.10732, -7.41925, 6.3616, 0.72 ) }
    dend_25 { pt3dadd( -0.229629, -8.63225, 6.97995, 0.96 ) }
    dend_25 { pt3dadd( -0.302118, -9.35117, 7.34642, 1.32 ) }
    dend_25 { pt3dadd( -0.37763, -10.1, 7.72819, 0.96 ) }
    dend_25 { pt3dadd( -0.415387, -10.4745, 7.91907, 0.96 ) }
    dend_25 { pt3dadd( -0.501598, -11.3295, 8.35492, 1.08 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.07582, 7.09099, 2.85236, 1.68 ) }
    dend_22 { pt3dadd( -0.0255855, 7.7426, 2.97495, 1.68 ) }
    dend_22 { pt3dadd( 0.068499, 8.63668, 3.44812, 1.44 ) }
    dend_22 { pt3dadd( 0.225201, 9.27568, 3.88183, 0.96 ) }
    dend_22 { pt3dadd( 0.362953, 9.78483, 4.27249, 0.84 ) }
    dend_22 { pt3dadd( 0.48091, 10.2487, 4.63246, 0.96 ) }
    dend_22 { pt3dadd( 0.740522, 11.412, 5.63524, 0.84 ) }
    dend_22 { pt3dadd( 0.899706, 12.0294, 6.23663, 0.72 ) }
    dend_22 { pt3dadd( 1.03007, 12.5047, 6.73465, 0.72 ) }
    dend_22 { pt3dadd( 1.18859, 13.1043, 7.35037, 0.84 ) }
    dend_22 { pt3dadd( 1.26267, 13.4677, 7.67999, 0.96 ) }
    dend_22 { pt3dadd( 1.43086, 14.6354, 8.54704, 0.24 ) }
    dend_22 { pt3dadd( 1.48831, 15.1671, 8.82752, 0.24 ) }
    dend_22 { pt3dadd( 1.53153, 15.5999, 9.0265, 0.6 ) }
    dend_22 { pt3dadd( 1.58287, 16.1928, 9.26269, 1.44 ) }
    dend_22 { pt3dadd( 1.63542, 16.9749, 9.52046, 1.56 ) }
    dend_22 { pt3dadd( 1.65703, 17.6367, 9.70746, 1.56 ) }
    dend_22 { pt3dadd( 1.65613, 18.3707, 9.85688, 1.56 ) }
    dend_22 { pt3dadd( 1.60568, 19.6488, 10.1137, 0.6 ) }
    dend_22 { pt3dadd( 1.55322, 20.3445, 10.244, 0.48 ) }
    dend_22 { pt3dadd( 1.47966, 21.0197, 10.3712, 0.48 ) }
    dend_22 { pt3dadd( 1.43184, 21.4274, 10.4444, 0.96 ) }
    dend_22 { pt3dadd( 1.33432, 22.3587, 10.6222, 0.6 ) }
    dend_22 { pt3dadd( 1.28224, 23.0443, 10.759, 0.6 ) }
    dend_22 { pt3dadd( 1.25846, 23.7475, 10.8975, 0.96 ) }
    dend_22 { pt3dadd( 1.2437, 24.9859, 11.1794, 0.84 ) }
    dend_22 { pt3dadd( 1.23515, 25.6715, 11.3554, 0.84 ) }
    dend_22 { pt3dadd( 1.18927, 26.7629, 11.654, 0.72 ) }
    dend_22 { pt3dadd( 1.09057, 27.8322, 11.9599, 0.84 ) }
    dend_22 { pt3dadd( 1.06134, 28.0581, 12.022, 0.84 ) }
    dend_22 { pt3dadd( 0.961569, 28.6664, 12.1771, 0.72 ) }
    dend_22 { pt3dadd( 0.803175, 29.5808, 12.3749, 0.48 ) }
    dend_22 { pt3dadd( 0.675781, 30.4484, 12.5214, 0.48 ) }
    dend_22 { pt3dadd( 0.596601, 31.1873, 12.6116, 0.6 ) }
    dend_22 { pt3dadd( 0.547659, 31.8773, 12.6994, 0.84 ) }
    dend_22 { pt3dadd( 0.528657, 32.2251, 12.7601, 0.84 ) }
    dend_22 { pt3dadd( 0.510558, 32.715, 12.8596, 0.48 ) }
    dend_22 { pt3dadd( 0.473053, 33.7467, 13.083, 0.48 ) }
    dend_22 { pt3dadd( 0.438338, 34.7446, 13.3435, 0.48 ) }
    dend_22 { pt3dadd( 0.370786, 35.9766, 13.7342, 0.6 ) }
    dend_22 { pt3dadd( 0.288215, 36.8948, 14.0582, 1.08 ) }
    dend_22 { pt3dadd( 0.217608, 37.4513, 14.2494, 1.32 ) }
    dend_22 { pt3dadd( 0.134308, 37.9469, 14.4127, 1.32 ) }
    dend_22 { pt3dadd( -0.00319783, 38.6307, 14.6301, 0.84 ) }
    dend_22 { pt3dadd( -0.146298, 39.4082, 14.8308, 0.6 ) }
    dend_22 { pt3dadd( -0.256024, 40.0923, 14.9763, 0.48 ) }
    dend_22 { pt3dadd( -0.364591, 40.8516, 15.0967, 0.6 ) }
    dend_22 { pt3dadd( -0.426384, 41.3142, 15.1641, 0.48 ) }
    dend_22 { pt3dadd( -0.490233, 41.8307, 15.217, 0.48 ) }
    dend_22 { pt3dadd( -0.560917, 42.2968, 15.2107, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.15581, -6.60776, -6.17764, 1.44 ) }
    dend_11 { pt3dadd( 2.76593, -7.30272, -6.25737, 1.08 ) }
    dend_11 { pt3dadd( 2.19299, -8.18248, -6.36014, 1.44 ) }
    dend_11 { pt3dadd( 1.61161, -9.02894, -6.52765, 1.56 ) }
    dend_11 { pt3dadd( 0.891642, -10.0677, -6.79961, 1.56 ) }
    dend_11 { pt3dadd( -0.0343734, -11.433, -7.20177, 1.2 ) }
    dend_11 { pt3dadd( -0.562881, -12.2459, -7.49317, 0.72 ) }
    dend_11 { pt3dadd( -0.88328, -12.6863, -7.67592, 0.72 ) }
    dend_11 { pt3dadd( -1.64692, -13.6486, -8.15962, 1.56 ) }
    dend_11 { pt3dadd( -1.92475, -13.9941, -8.37499, 1.8 ) }
    dend_11 { pt3dadd( -2.18676, -14.3494, -8.66125, 2.16 ) }
    dend_11 { pt3dadd( -2.5556, -15.0814, -9.40811, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.91582, -4.34576, -0.277637, 1.32 ) }
    dend_6 { pt3dadd( 5.37583, -4.76008, -0.817988, 1.2 ) }
    dend_6 { pt3dadd( 5.96435, -5.14243, -1.58453, 0.72 ) }
    dend_6 { pt3dadd( 6.37624, -5.32284, -2.10069, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_6 { pt3dadd( 7.17278, -5.58439, -3.02162, 1.68 ) }
    dend_6 { pt3dadd( 7.74675, -5.72131, -3.64766, 2.04 ) }
    dend_6 { pt3dadd( 8.90393, -5.93429, -4.83859, 1.92 ) }
    dend_6 { pt3dadd( 9.69746, -6.01363, -5.60032, 1.92 ) }
    dend_6 { pt3dadd( 10.5377, -6.07287, -6.33094, 0.96 ) }
    dend_6 { pt3dadd( 11.047, -6.12181, -6.71634, 0.96 ) }
    dend_6 { pt3dadd( 12.0443, -6.29476, -7.34865, 1.44 ) }
    dend_6 { pt3dadd( 12.6274, -6.46911, -7.66582, 1.92 ) }
    dend_6 { pt3dadd( 13.4758, -6.78784, -8.02788, 1.56 ) }
    dend_6 { pt3dadd( 14.3649, -7.20253, -8.35462, 1.2 ) }
    dend_6 { pt3dadd( 15.1715, -7.66966, -8.63344, 1.2 ) }
    dend_6 { pt3dadd( 16.027, -8.24989, -8.91556, 1.56 ) }
    dend_6 { pt3dadd( 16.3641, -8.52336, -9.00091, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 13/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.46419, -1.79126, 0.432363, 0.96 ) }
    dend_3 { pt3dadd( -4.78983, -1.68732, 0.815358, 0.6 ) }
    dend_3 { pt3dadd( -5.43895, -1.37902, 1.47968, 0.72 ) }
    dend_3 { pt3dadd( -5.51047, -1.3456, 1.54187, 0.72 ) }
    dend_3 { pt3dadd( -6.18079, -1.12358, 2.08554, 0.72 ) }
    dend_3 { pt3dadd( -6.49099, -1.06782, 2.33657, 0.72 ) }
    dend_3 { pt3dadd( -6.9059, -1.03111, 2.67724, 0.72 ) }
    dend_3 { pt3dadd( -7.23863, -1.02672, 2.98122, 0.72 ) }
    dend_3 { pt3dadd( -7.57793, -1.04816, 3.28287, 0.72 ) }
    dend_3 { pt3dadd( -8.37724, -1.13955, 4.01325, 0.72 ) }
    dend_3 { pt3dadd( -9.15277, -1.26893, 4.71448, 0.84 ) }
    dend_3 { pt3dadd( -9.77217, -1.40763, 5.29564, 1.08 ) }
    dend_3 { pt3dadd( -10.4286, -1.59084, 5.94981, 1.44 ) }
    dend_3 { pt3dadd( -10.7716, -1.69462, 6.31737, 1.68 ) }
    dend_3 { pt3dadd( -11.2707, -1.8329, 6.88518, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.77419, 5.47249, -7.59764, 1.08 ) }
    dend_0 { pt3dadd( -4.07771, 6.128, -7.759, 1.08 ) }
    dend_0 { pt3dadd( -4.40244, 6.75929, -8.00054, 0.84 ) }
    dend_0 { pt3dadd( -4.63738, 7.14501, -8.19769, 0.12 ) }
    dend_0 { pt3dadd( -4.9429, 7.56779, -8.43328, 0.12 ) }
    dend_0 { pt3dadd( -5.34378, 8.06868, -8.71744, 0.84 ) }
    dend_0 { pt3dadd( -6.32367, 9.28969, -9.38243, 0.84 ) }
    dend_0 { pt3dadd( -6.91889, 10.0233, -9.78524, 0.84 ) }
    dend_0 { pt3dadd( -7.56517, 10.8426, -10.2036, 0.48 ) }
    dend_0 { pt3dadd( -8.11047, 11.5559, -10.5306, 0.12 ) }
    dend_0 { pt3dadd( -8.42617, 11.9794, -10.7191, 0.12 ) }
    dend_0 { pt3dadd( -8.98729, 12.7591, -11.0451, 0.6 ) }
    dend_0 { pt3dadd( -9.48251, 13.4873, -11.2919, 0.6 ) }
    dend_0 { pt3dadd( -10.0347, 14.3471, -11.5807, 0.72 ) }
    dend_0 { pt3dadd( -10.2819, 14.7511, -11.7142, 1.08 ) }
    dend_0 { pt3dadd( -10.8906, 15.7503, -12.1004, 0.6 ) }
    dend_0 { pt3dadd( -11.3354, 16.4529, -12.3809, 0.36 ) }
    dend_0 { pt3dadd( -11.7362, 17.0827, -12.6453, 0.12 ) }
    dend_0 { pt3dadd( -12.2799, 17.9582, -13.0117, 0.48 ) }
    dend_0 { pt3dadd( -12.7367, 18.7435, -13.33, 0.48 ) }
    dend_0 { pt3dadd( -13.4587, 20.0868, -13.8212, 0.48 ) }
    dend_0 { pt3dadd( -14.0842, 21.3581, -14.256, 0.6 ) }
    dend_0 { pt3dadd( -14.6612, 22.6666, -14.7295, 0.36 ) }
    dend_0 { pt3dadd( -14.8703, 23.1944, -14.9269, 0.36 ) }
    dend_0 { pt3dadd( -15.2209, 24.1615, -15.2926, 1.2 ) }
    dend_0 { pt3dadd( -15.4765, 24.9097, -15.5794, 1.08 ) }
    dend_0 { pt3dadd( -15.7728, 25.7916, -15.9256, 0.72 ) }
    dend_0 { pt3dadd( -16.0448, 26.5732, -16.2505, 0.24 ) }
    dend_0 { pt3dadd( -16.3924, 27.495, -16.6138, 0.24 ) }
    dend_0 { pt3dadd( -16.5768, 27.9696, -16.792, 0.72 ) }
    dend_0 { pt3dadd( -16.9419, 28.8501, -17.0732, 0.84 ) }
    dend_0 { pt3dadd( -17.2742, 29.6338, -17.3028, 0.48 ) }
    dend_0 { pt3dadd( -17.4703, 30.0772, -17.401, 0.24 ) }
    dend_0 { pt3dadd( -17.7687, 30.7063, -17.5147, 0.12 ) }
    dend_0 { pt3dadd( -17.9667, 31.1145, -17.5906, 0.96 ) }
    dend_0 { pt3dadd( -18.4513, 32.1346, -17.7471, 1.44 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 0.923536 ) }
    axon_0 { pt3dadd( -4.91421, 21.4016, -0.00167934, 0.923536 ) }
    axon_0 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.923536 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 67/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 0.938686, 13.0938, -5.35687, 0.36 ) }
    apic_4 { pt3dadd( 1.56261, 13.6853, -5.45901, 0.36 ) }
    apic_4 { pt3dadd( 2.33366, 14.3402, -5.64461, 0.48 ) }
    apic_4 { pt3dadd( 2.9182, 14.8089, -5.81177, 0.48 ) }
    apic_4 { pt3dadd( 3.56019, 15.3163, -5.99182, 0.48 ) }
    apic_4 { pt3dadd( 4.73683, 16.2498, -6.28853, 0.48 ) }
    apic_4 { pt3dadd( 5.25759, 16.6667, -6.46697, 0.96 ) }
    apic_4 { pt3dadd( 5.69105, 17.0265, -6.67381, 0.96 ) }
    apic_4 { pt3dadd( 6.37468, 17.6466, -7.11888, 0.48 ) }
    apic_4 { pt3dadd( 6.73615, 18.0046, -7.38614, 0.48 ) }
    apic_4 { pt3dadd( 7.08617, 18.3489, -7.68192, 0.48 ) }
    apic_4 { pt3dadd( 8.14269, 19.4512, -8.62326, 0.36 ) }
    apic_4 { pt3dadd( 8.50268, 19.8132, -8.97403, 0.36 ) }
    apic_4 { pt3dadd( 8.95949, 20.252, -9.41196, 0.84 ) }
    apic_4 { pt3dadd( 9.36099, 20.6087, -9.78043, 0.84 ) }
    apic_4 { pt3dadd( 10.5166, 21.5317, -10.7602, 0.48 ) }
    apic_4 { pt3dadd( 10.7596, 21.7079, -10.9319, 0.48 ) }
    apic_4 { pt3dadd( 11.5567, 22.235, -11.3521, 0.96 ) }
    apic_4 { pt3dadd( 12.068, 22.5566, -11.5993, 1.32 ) }
    apic_4 { pt3dadd( 12.7284, 22.9847, -11.9105, 1.08 ) }
    apic_4 { pt3dadd( 13.593, 23.6314, -12.3371, 0.12 ) }
    apic_4 { pt3dadd( 14.1249, 24.1196, -12.6079, 0.12 ) }
    apic_4 { pt3dadd( 14.2881, 24.2871, -12.7139, 0.48 ) }
    apic_4 { pt3dadd( 14.832, 24.896, -13.1055, 0.72 ) }
    apic_4 { pt3dadd( 15.1673, 25.2924, -13.3719, 0.12 ) }
    apic_4 { pt3dadd( 15.6195, 25.8668, -13.7218, 0.12 ) }
    apic_4 { pt3dadd( 16.0489, 26.4529, -14.0296, 0.48 ) }
    apic_4 { pt3dadd( 16.5999, 27.2111, -14.3907, 0.72 ) }
    apic_4 { pt3dadd( 17.0354, 27.802, -14.6149, 0.12 ) }
    apic_4 { pt3dadd( 17.5657, 28.4985, -14.7816, 0.12 ) }
    apic_4 { pt3dadd( 18.0122, 29.0782, -14.8562, 0.96 ) }
    apic_4 { pt3dadd( 18.2634, 29.405, -14.8703, 1.08 ) }
    apic_4 { pt3dadd( 18.828, 30.2, -14.84, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_4 { pt3dadd( 19.3246, 30.9642, -14.7705, 0.6 ) }
    apic_4 { pt3dadd( 19.8852, 31.8474, -14.7587, 0.36 ) }
    apic_4 { pt3dadd( 20.4059, 32.6703, -14.7803, 0.24 ) }
    apic_4 { pt3dadd( 20.7155, 33.1519, -14.8297, 0.84 ) }
    apic_4 { pt3dadd( 20.9103, 33.4525, -14.8749, 1.08 ) }
    apic_4 { pt3dadd( 21.2634, 33.9931, -15.0001, 0.6 ) }
    apic_4 { pt3dadd( 22.2345, 35.4129, -15.5318, 0.24 ) }
    apic_4 { pt3dadd( 22.6168, 35.9795, -15.8019, 0.24 ) }
    apic_4 { pt3dadd( 22.9329, 36.4625, -16.0547, 0.72 ) }
    apic_4 { pt3dadd( 23.2527, 36.9794, -16.3281, 1.2 ) }
    apic_4 { pt3dadd( 23.6391, 37.6406, -16.6789, 0.6 ) }
    apic_4 { pt3dadd( 24.1096, 38.4921, -17.0814, 0.12 ) }
    apic_4 { pt3dadd( 24.5167, 39.2726, -17.3849, 0.12 ) }
    apic_4 { pt3dadd( 24.7148, 39.6589, -17.5399, 0.36 ) }
    apic_4 { pt3dadd( 24.8538, 39.9444, -17.6377, 0.36 ) }
    apic_4 { pt3dadd( 25.1287, 40.4981, -17.8119, 0.12 ) }
    apic_4 { pt3dadd( 25.5762, 41.3261, -18.0883, 0.12 ) }
    apic_4 { pt3dadd( 25.9496, 41.9666, -18.3091, 0.84 ) }
    apic_4 { pt3dadd( 26.0732, 42.1469, -18.3761, 1.2 ) }
    apic_4 { pt3dadd( 26.5207, 42.7384, -18.5849, 1.2 ) }
    apic_4 { pt3dadd( 27.0144, 43.3454, -18.81, 0.96 ) }
    apic_4 { pt3dadd( 27.7535, 44.2356, -19.1268, 0.36 ) }
    apic_4 { pt3dadd( 28.327, 44.8613, -19.4736, 0.36 ) }
    apic_4 { pt3dadd( 28.7902, 45.3159, -19.8009, 0.36 ) }
    apic_4 { pt3dadd( 29.1233, 45.6155, -20.054, 0.36 ) }
    apic_4 { pt3dadd( 29.8126, 46.1912, -20.6059, 0.6 ) }
    apic_4 { pt3dadd( 30.0893, 46.4156, -20.8253, 0.84 ) }
    apic_4 { pt3dadd( 31.5539, 47.6115, -21.956, 0.84 ) }
    apic_4 { pt3dadd( 32.1139, 48.0624, -22.4029, 0.12 ) }
    apic_4 { pt3dadd( 32.4306, 48.3379, -22.6526, 0.12 ) }
    apic_4 { pt3dadd( 32.6448, 48.5306, -22.8043, 0.12 ) }
    apic_4 { pt3dadd( 32.9292, 48.8068, -22.9418, 0.6 ) }
    apic_4 { pt3dadd( 33.2564, 49.1545, -23.0354, 0.6 ) }
    apic_4 { pt3dadd( 33.5659, 49.5286, -23.0506, 0.12 ) }
    apic_4 { pt3dadd( 33.9203, 49.9679, -23.0687, 0.12 ) }
    apic_4 { pt3dadd( 34.3637, 50.5207, -23.1061, 0.72 ) }
    apic_4 { pt3dadd( 34.8114, 51.1035, -23.1537, 0.96 ) }
    apic_4 { pt3dadd( 35.1867, 51.5987, -23.2474, 0.12 ) }
    apic_4 { pt3dadd( 35.7477, 52.2983, -23.4165, 0.12 ) }
    apic_4 { pt3dadd( 36.0485, 52.6648, -23.5228, 0.84 ) }
    apic_4 { pt3dadd( 36.3472, 53.0292, -23.6325, 0.96 ) }
    apic_4 { pt3dadd( 36.6322, 53.3919, -23.7319, 0.48 ) }
    apic_4 { pt3dadd( 37.3221, 54.2914, -24.0089, 0.12 ) }
    apic_4 { pt3dadd( 37.8735, 55.0272, -24.2496, 0.12 ) }
    apic_4 { pt3dadd( 38.4427, 55.8532, -24.5134, 0.12 ) }
    apic_4 { pt3dadd( 38.6501, 56.1926, -24.6191, 0.96 ) }
    apic_4 { pt3dadd( 38.887, 56.6062, -24.7764, 0.96 ) }
    apic_4 { pt3dadd( 39.1918, 57.2047, -25.0081, 0.24 ) }
    apic_4 { pt3dadd( 39.3283, 57.5321, -25.1091, 0.12 ) }
    apic_4 { pt3dadd( 39.5885, 58.2756, -25.3303, 0.12 ) }
    apic_4 { pt3dadd( 39.7922, 58.9056, -25.4916, 0.72 ) }
    apic_4 { pt3dadd( 40.2177, 60.2436, -25.7935, 0.12 ) }
    apic_4 { pt3dadd( 40.4154, 60.8844, -25.9116, 0.12 ) }
    apic_4 { pt3dadd( 40.9052, 62.4601, -26.1493, 0.12 ) }
    apic_4 { pt3dadd( 41.1234, 63.1329, -26.2723, 0.12 ) }
    apic_4 { pt3dadd( 41.3466, 63.7915, -26.4117, 0.12 ) }
    apic_4 { pt3dadd( 41.444, 64.0904, -26.4771, 0.96 ) }
    apic_4 { pt3dadd( 41.5659, 64.5378, -26.5672, 1.32 ) }
    apic_4 { pt3dadd( 41.7103, 65.1156, -26.7397, 1.32 ) }
    apic_4 { pt3dadd( 41.974, 66.3804, -27.2633, 0.12 ) }
    apic_4 { pt3dadd( 42.0984, 67.1185, -27.5915, 0.12 ) }
    apic_4 { pt3dadd( 42.1477, 67.5435, -27.7807, 0.12 ) }
    apic_4 { pt3dadd( 42.1924, 68.1646, -28.055, 0.84 ) }
    apic_4 { pt3dadd( 42.21, 68.8469, -28.3347, 0.12 ) }
    apic_4 { pt3dadd( 42.2033, 69.5532, -28.6029, 0.12 ) }
    apic_4 { pt3dadd( 42.1855, 70.1959, -28.8214, 0.12 ) }
    apic_4 { pt3dadd( 42.1845, 70.6263, -28.991, 0.84 ) }
    apic_4 { pt3dadd( 42.2168, 71.1907, -29.2165, 0.12 ) }
    apic_4 { pt3dadd( 42.2983, 71.8129, -29.4539, 0.12 ) }
    apic_4 { pt3dadd( 42.4254, 72.4699, -29.6696, 0.72 ) }
    apic_4 { pt3dadd( 42.5721, 72.9963, -29.8302, 0.72 ) }
    apic_4 { pt3dadd( 42.7691, 73.5135, -29.9905, 0.12 ) }
    apic_4 { pt3dadd( 43.0236, 74.0819, -30.1537, 0.12 ) }
    apic_4 { pt3dadd( 43.2387, 74.5317, -30.2567, 0.24 ) }
    apic_4 { pt3dadd( 43.4791, 74.9494, -30.3963, 0.24 ) }
    apic_4 { pt3dadd( 43.7234, 75.3483, -30.5607, 0.24 ) }
    apic_4 { pt3dadd( 44.0985, 75.9645, -30.8517, 0.72 ) }
    apic_4 { pt3dadd( 44.2646, 76.2399, -30.9958, 1.2 ) }
    apic_4 { pt3dadd( 44.5505, 76.7159, -31.2699, 1.2 ) }
    apic_4 { pt3dadd( 45.3875, 78.0803, -32.1028, 0.12 ) }
    apic_4 { pt3dadd( 45.864, 78.822, -32.5604, 0.12 ) }
    apic_4 { pt3dadd( 46.1466, 79.2343, -32.8279, 0.48 ) }
    apic_4 { pt3dadd( 46.4244, 79.6043, -33.072, 0.12 ) }
    apic_4 { pt3dadd( 46.6543, 79.8904, -33.2622, 0.12 ) }
    apic_4 { pt3dadd( 47.027, 80.3235, -33.5297, 0.6 ) }
    apic_4 { pt3dadd( 47.2286, 80.5278, -33.6672, 0.6 ) }
    apic_4 { pt3dadd( 48.1196, 81.2601, -34.3525, 0.12 ) }
    apic_4 { pt3dadd( 48.6617, 81.6783, -34.7946, 0.12 ) }
    apic_4 { pt3dadd( 48.7638, 81.7594, -34.8809, 0.72 ) }
    apic_4 { pt3dadd( 49.0973, 82.0319, -35.1636, 0.72 ) }
    apic_4 { pt3dadd( 50.2791, 82.9644, -36.2373, 0.6 ) }
    apic_4 { pt3dadd( 50.8896, 83.4522, -36.7948, 0.12 ) }
    apic_4 { pt3dadd( 51.2814, 83.7817, -37.1451, 0.12 ) }
    apic_4 { pt3dadd( 51.5894, 84.0493, -37.4454, 0.12 ) }
    apic_4 { pt3dadd( 51.9251, 84.3807, -37.7745, 0.6 ) }
    apic_4 { pt3dadd( 52.9476, 85.5053, -38.701, 0.12 ) }
    apic_4 { pt3dadd( 53.3312, 86.046, -38.9958, 0.12 ) }
    apic_4 { pt3dadd( 53.5961, 86.486, -39.1983, 0.72 ) }
    apic_4 { pt3dadd( 54.2125, 87.6501, -39.7094, 0.12 ) }
    apic_4 { pt3dadd( 54.6937, 88.6923, -40.1229, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_4 { pt3dadd( 54.969, 89.4224, -40.3574, 0.12 ) }
    apic_4 { pt3dadd( 55.4506, 91.0133, -40.7516, 0.12 ) }
    apic_4 { pt3dadd( 55.6399, 91.7216, -40.9214, 0.84 ) }
    apic_4 { pt3dadd( 55.7962, 92.4226, -41.0611, 0.12 ) }
    apic_4 { pt3dadd( 56.0176, 93.6406, -41.2345, 0.12 ) }
    apic_4 { pt3dadd( 56.12, 94.2715, -41.3281, 0.6 ) }
    apic_4 { pt3dadd( 56.2242, 94.9543, -41.421, 0.12 ) }
    apic_4 { pt3dadd( 56.2976, 95.3539, -41.4606, 0.12 ) }
    apic_4 { pt3dadd( 56.5242, 96.4757, -41.5128, 0.12 ) }
    apic_4 { pt3dadd( 56.6692, 97.1201, -41.5239, 0.72 ) }
    apic_4 { pt3dadd( 56.8259, 97.7818, -41.5309, 0.12 ) }
    apic_4 { pt3dadd( 57.1804, 99.0669, -41.5457, 0.24 ) }
    apic_4 { pt3dadd( 57.2693, 99.3751, -41.5413, 0.24 ) }
    apic_4 { pt3dadd( 57.3414, 99.6183, -41.539, 0.12 ) }
    apic_4 { pt3dadd( 57.6867, 100.726, -41.5243, 0.12 ) }
    apic_4 { pt3dadd( 57.8649, 101.276, -41.5069, 0.12 ) }
    apic_4 { pt3dadd( 58.1076, 101.952, -41.4601, 0.12 ) }
    apic_4 { pt3dadd( 58.1465, 102.059, -41.4493, 0.72 ) }
    apic_4 { pt3dadd( 58.3496, 102.597, -41.3838, 0.84 ) }
    apic_4 { pt3dadd( 58.567, 103.158, -41.3023, 0.12 ) }
    apic_4 { pt3dadd( 58.9589, 104.11, -41.1442, 0.12 ) }
    apic_4 { pt3dadd( 59.3709, 105.07, -40.9915, 0.12 ) }
    apic_4 { pt3dadd( 59.5479, 105.49, -40.9301, 0.12 ) }
    apic_4 { pt3dadd( 59.6873, 105.818, -40.8839, 0.72 ) }
    apic_4 { pt3dadd( 59.9877, 106.513, -40.7887, 0.84 ) }
    apic_4 { pt3dadd( 60.1957, 107.006, -40.7259, 0.12 ) }
    apic_4 { pt3dadd( 60.6291, 108.075, -40.58, 0.12 ) }
    apic_4 { pt3dadd( 61.0436, 109.107, -40.4537, 0.12 ) }
    apic_4 { pt3dadd( 61.2758, 109.69, -40.3867, 0.12 ) }
    apic_4 { pt3dadd( 61.3993, 109.985, -40.3511, 0.6 ) }
    apic_4 { pt3dadd( 61.7114, 110.667, -40.2644, 0.72 ) }
    apic_4 { pt3dadd( 61.9225, 111.104, -40.2041, 0.12 ) }
    apic_4 { pt3dadd( 62.6427, 112.513, -40.012, 0.12 ) }
    apic_4 { pt3dadd( 62.855, 112.918, -39.9577, 0.12 ) }
    apic_4 { pt3dadd( 63.3224, 113.816, -39.8382, 0.12 ) }
    apic_4 { pt3dadd( 63.5428, 114.265, -39.7782, 0.84 ) }
    apic_4 { pt3dadd( 63.6873, 114.586, -39.7196, 0.96 ) }
    apic_4 { pt3dadd( 63.8724, 115.049, -39.6167, 0.96 ) }
    apic_4 { pt3dadd( 64.1293, 115.742, -39.4238, 0.6 ) }
    apic_4 { pt3dadd( 64.3635, 116.397, -39.2348, 0.6 ) }
    apic_4 { pt3dadd( 64.6919, 117.377, -38.9501, 0.6 ) }
    apic_4 { pt3dadd( 64.9967, 118.283, -38.6774, 0.12 ) }
    apic_4 { pt3dadd( 65.4062, 119.485, -38.3232, 0.12 ) }
    apic_4 { pt3dadd( 65.8026, 120.663, -37.98, 0.12 ) }
    apic_4 { pt3dadd( 65.9021, 120.957, -37.896, 0.36 ) }
    apic_4 { pt3dadd( 66.0288, 121.334, -37.7968, 0.36 ) }
    apic_4 { pt3dadd( 66.1092, 121.57, -37.7454, 0.12 ) }
    apic_4 { pt3dadd( 66.3785, 122.345, -37.6253, 0.12 ) }
    apic_4 { pt3dadd( 66.4472, 122.56, -37.5941, 0.36 ) }
    apic_4 { pt3dadd( 66.5401, 122.872, -37.5518, 0.12 ) }
    apic_4 { pt3dadd( 66.7269, 123.448, -37.4696, 0.12 ) }
    apic_4 { pt3dadd( 67.0671, 124.34, -37.3515, 0.12 ) }
    apic_4 { pt3dadd( 67.2948, 124.858, -37.2855, 0.48 ) }
    apic_4 { pt3dadd( 67.5683, 125.392, -37.2123, 0.48 ) }
    apic_4 { pt3dadd( 67.6936, 125.612, -37.1808, 0.12 ) }
    apic_4 { pt3dadd( 68.0728, 126.23, -37.0862, 0.12 ) }
    apic_4 { pt3dadd( 68.438, 126.773, -36.9918, 0.12 ) }
    apic_4 { pt3dadd( 68.7662, 127.233, -36.9035, 0.6 ) }
    apic_4 { pt3dadd( 69.2323, 127.881, -36.7718, 0.72 ) }
    apic_4 { pt3dadd( 69.5674, 128.333, -36.7094, 0.36 ) }
    apic_4 { pt3dadd( 69.9934, 128.926, -36.6566, 0.36 ) }
    apic_4 { pt3dadd( 70.5323, 129.722, -36.6158, 0.48 ) }
    apic_4 { pt3dadd( 70.7985, 130.127, -36.6013, 0.24 ) }
    apic_4 { pt3dadd( 71.0628, 130.533, -36.5984, 0.24 ) }
    apic_4 { pt3dadd( 71.7814, 131.637, -36.6133, 0.24 ) }
    apic_4 { pt3dadd( 72.1227, 132.153, -36.6254, 0.24 ) }
    apic_4 { pt3dadd( 72.5783, 132.829, -36.6351, 0.36 ) }
    apic_4 { pt3dadd( 72.7788, 133.13, -36.6416, 0.12 ) }
    apic_4 { pt3dadd( 73.0036, 133.475, -36.6401, 0.12 ) }
    apic_4 { pt3dadd( 73.2764, 133.905, -36.6177, 0.24 ) }
    apic_4 { pt3dadd( 73.393, 134.101, -36.5986, 0.12 ) }
    apic_4 { pt3dadd( 73.7872, 134.812, -36.5619, 0.12 ) }
    apic_4 { pt3dadd( 74.1173, 135.47, -36.5395, 0.6 ) }
    apic_4 { pt3dadd( 74.3934, 136.064, -36.5201, 0.72 ) }
    apic_4 { pt3dadd( 74.561, 136.438, -36.5063, 0.72 ) }
    apic_4 { pt3dadd( 74.7645, 136.915, -36.4849, 0.12 ) }
    apic_4 { pt3dadd( 75.2067, 137.995, -36.4014, 0.12 ) }
    apic_4 { pt3dadd( 75.6046, 139.046, -36.2878, 0.12 ) }
    apic_4 { pt3dadd( 75.7975, 139.566, -36.2104, 0.48 ) }
    apic_4 { pt3dadd( 75.91, 139.863, -36.1598, 0.12 ) }
    apic_4 { pt3dadd( 76.1522, 140.469, -36.0402, 0.12 ) }
    apic_4 { pt3dadd( 76.4746, 141.189, -35.901, 0.12 ) }
    apic_4 { pt3dadd( 76.8814, 142.002, -35.7699, 0.12 ) }
    apic_4 { pt3dadd( 77.1412, 142.507, -35.7066, 0.12 ) }
    apic_4 { pt3dadd( 77.3953, 143.012, -35.6363, 0.6 ) }
    apic_4 { pt3dadd( 77.6395, 143.522, -35.5671, 0.6 ) }
    apic_4 { pt3dadd( 77.9932, 144.281, -35.4644, 0.12 ) }
    apic_4 { pt3dadd( 78.5973, 145.686, -35.2854, 0.12 ) }
    apic_4 { pt3dadd( 79.0711, 146.955, -35.12, 0.12 ) }
    apic_4 { pt3dadd( 79.2763, 147.624, -35.0516, 0.72 ) }
    apic_4 { pt3dadd( 79.3684, 148.027, -35.0209, 0.72 ) }
    apic_4 { pt3dadd( 79.4285, 148.435, -34.9974, 0.24 ) }
    apic_4 { pt3dadd( 79.5069, 149.465, -34.9739, 0.24 ) }
    apic_4 { pt3dadd( 79.501, 150.143, -34.9842, 0.24 ) }
    apic_4 { pt3dadd( 79.4795, 150.733, -35.0022, 0.48 ) }
    apic_4 { pt3dadd( 79.4583, 151.411, -35.0175, 0.6 ) }
    apic_4 { pt3dadd( 79.4527, 151.73, -35.0082, 0.6 ) }
    apic_4 { pt3dadd( 79.432, 152.342, -34.9728, 0.6 ) }
    apic_4 { pt3dadd( 79.332, 153.674, -34.8656, 0.12 ) }
    apic_4 { pt3dadd( 79.2335, 154.484, -34.7593, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_4 { pt3dadd( 79.0815, 155.365, -34.6242, 0.12 ) }
    apic_4 { pt3dadd( 78.9213, 156.193, -34.4997, 0.12 ) }
    apic_4 { pt3dadd( 78.8894, 156.348, -34.4783, 0.36 ) }
    apic_4 { pt3dadd( 78.6398, 157.484, -34.337, 0.36 ) }
    apic_4 { pt3dadd( 78.4997, 158.112, -34.3042, 0.12 ) }
    apic_4 { pt3dadd( 78.2286, 159.221, -34.2481, 0.12 ) }
    apic_4 { pt3dadd( 78.1468, 159.55, -34.233, 0.48 ) }
    apic_4 { pt3dadd( 78.0174, 160.101, -34.2125, 0.48 ) }
    apic_4 { pt3dadd( 77.9757, 160.35, -34.2043, 0.12 ) }
    apic_4 { pt3dadd( 77.8629, 161.363, -34.1864, 0.12 ) }
    apic_4 { pt3dadd( 77.8539, 161.466, -34.1898, 0.72 ) }
    apic_4 { pt3dadd( 77.8218, 161.916, -34.21, 0.12 ) }
    apic_4 { pt3dadd( 77.7823, 162.808, -34.2493, 0.12 ) }
    apic_4 { pt3dadd( 77.7847, 163.74, -34.2787, 0.12 ) }
    apic_4 { pt3dadd( 77.8383, 164.528, -34.2953, 0.36 ) }
    apic_4 { pt3dadd( 77.966, 165.242, -34.3684, 0.12 ) }
    apic_4 { pt3dadd( 78.2499, 166.34, -34.5365, 0.12 ) }
    apic_4 { pt3dadd( 78.6464, 167.517, -34.7575, 0.48 ) }
    apic_4 { pt3dadd( 79.031, 168.376, -34.9697, 0.48 ) }
    apic_4 { pt3dadd( 79.4737, 169.147, -35.1928, 0.84 ) }
    apic_4 { pt3dadd( 80.7247, 170.859, -35.7813, 0.24 ) }
    apic_4 { pt3dadd( 81.3227, 171.528, -36.0403, 0.12 ) }
    apic_4 { pt3dadd( 81.7227, 171.895, -36.2045, 0.48 ) }
    apic_4 { pt3dadd( 82.3906, 172.421, -36.4546, 0.36 ) }
    apic_4 { pt3dadd( 82.9324, 172.801, -36.6947, 0.36 ) }
    apic_4 { pt3dadd( 83.5708, 173.218, -36.9467, 0.72 ) }
    apic_4 { pt3dadd( 83.9972, 173.473, -37.1012, 0.96 ) }
    apic_4 { pt3dadd( 84.5548, 173.79, -37.3049, 0.96 ) }
    apic_4 { pt3dadd( 85.2792, 174.208, -37.5443, 1.08 ) }
    apic_4 { pt3dadd( 87.3109, 175.426, -38.1342, 0.12 ) }
    apic_4 { pt3dadd( 88.2657, 175.994, -38.3834, 0.12 ) }
    apic_4 { pt3dadd( 89.0437, 176.452, -38.5286, 0.36 ) }
    apic_4 { pt3dadd( 89.9484, 176.971, -38.7174, 0.12 ) }
    apic_4 { pt3dadd( 90.7678, 177.433, -38.8635, 0.12 ) }
    apic_4 { pt3dadd( 90.9922, 177.56, -38.879, 0.36 ) }
    apic_4 { pt3dadd( 91.5195, 177.84, -38.8451, 0.12 ) }
    apic_4 { pt3dadd( 92.1152, 178.109, -38.871, 0.12 ) }
    apic_4 { pt3dadd( 93.4293, 178.685, -38.9859, 0.36 ) }
    apic_4 { pt3dadd( 93.9004, 178.883, -39.066, 0.6 ) }
    apic_4 { pt3dadd( 94.4557, 179.149, -39.1571, 1.08 ) }
    apic_4 { pt3dadd( 95.1778, 179.533, -39.2458, 0.24 ) }
    apic_4 { pt3dadd( 96.0178, 180.007, -39.3029, 0.12 ) }
    apic_4 { pt3dadd( 96.4567, 180.262, -39.3184, 0.48 ) }
    apic_4 { pt3dadd( 96.673, 180.402, -39.3097, 0.12 ) }
    apic_4 { pt3dadd( 97.8542, 181.259, -39.3062, 0.12 ) }
    apic_4 { pt3dadd( 98.1641, 181.534, -39.3142, 0.6 ) }
    apic_4 { pt3dadd( 98.4073, 181.799, -39.3586, 0.6 ) }
    apic_4 { pt3dadd( 98.9345, 182.511, -39.5782, 0.12 ) }
    apic_4 { pt3dadd( 99.2545, 183.016, -39.8052, 0.12 ) }
    apic_4 { pt3dadd( 99.4725, 183.464, -40.0556, 0.12 ) }
    apic_4 { pt3dadd( 99.6168, 184.014, -40.3986, 0.48 ) }
    apic_4 { pt3dadd( 99.781, 185.252, -41.2674, 0.12 ) }
    apic_4 { pt3dadd( 99.8102, 185.785, -41.6947, 0.12 ) }
    apic_4 { pt3dadd( 99.7957, 186.155, -41.9674, 0.36 ) }
    apic_4 { pt3dadd( 99.7736, 186.457, -42.1728, 0.12 ) }
    apic_4 { pt3dadd( 99.6959, 187.415, -42.7716, 0.12 ) }
    apic_4 { pt3dadd( 99.5916, 188.801, -43.5608, 0.72 ) }
    apic_4 { pt3dadd( 99.5378, 189.769, -43.9634, 0.12 ) }
    apic_4 { pt3dadd( 99.4953, 191.677, -44.6587, 0.12 ) }
    apic_4 { pt3dadd( 99.4901, 192.53, -44.9554, 0.12 ) }
    apic_4 { pt3dadd( 99.4913, 192.655, -44.9945, 0.48 ) }
    apic_4 { pt3dadd( 99.4968, 192.902, -45.0515, 0.12 ) }
    apic_4 { pt3dadd( 99.5292, 195.489, -45.2294, 0.12 ) }
    apic_4 { pt3dadd( 99.5323, 195.602, -45.2259, 0.48 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.938686, 13.0938, -5.35687, 1.08 ) }
    apic_1 { pt3dadd( 0.771677, 14.011, -5.08681, 1.08 ) }
    apic_1 { pt3dadd( 0.58048, 15.0816, -4.78993, 1.08 ) }
    apic_1 { pt3dadd( 0.314775, 16.5761, -4.41835, 1.08 ) }
    apic_1 { pt3dadd( 0.119287, 17.6756, -4.14497, 0.84 ) }
    apic_1 { pt3dadd( -0.0848414, 18.8238, -3.8595, 0.36 ) }
    apic_1 { pt3dadd( -0.175874, 19.3358, -3.7322, 0.36 ) }
    apic_1 { pt3dadd( -0.26705, 19.8278, -3.60447, 0.36 ) }
    apic_1 { pt3dadd( -0.394194, 20.5307, -3.40074, 0.6 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.501598, -11.3295, 8.35492, 1.32 ) }
    dend_31 { pt3dadd( -0.500902, -11.9368, 8.31493, 1.32 ) }
    dend_31 { pt3dadd( -0.499768, -12.2307, 8.2861, 1.44 ) }
    dend_31 { pt3dadd( -0.496746, -12.9603, 8.24232, 1.32 ) }
    dend_31 { pt3dadd( -0.485266, -13.8577, 8.21548, 1.08 ) }
    dend_31 { pt3dadd( -0.481661, -14.5835, 8.21416, 1.08 ) }
    dend_31 { pt3dadd( -0.495627, -15.3816, 8.22565, 0.84 ) }
    dend_31 { pt3dadd( -0.533323, -16.2537, 8.25083, 0.84 ) }
    dend_31 { pt3dadd( -0.581954, -17.1061, 8.28424, 0.84 ) }
    dend_31 { pt3dadd( -0.6707, -18.1362, 8.33558, 0.96 ) }
    dend_31 { pt3dadd( -0.775683, -18.9006, 8.36743, 0.96 ) }
    dend_31 { pt3dadd( -0.92095, -19.6685, 8.42936, 0.96 ) }
    dend_31 { pt3dadd( -1.07011, -20.3083, 8.50007, 0.96 ) }
    dend_31 { pt3dadd( -1.36084, -21.3261, 8.61205, 0.72 ) }
    dend_31 { pt3dadd( -1.56692, -21.9515, 8.67375, 0.84 ) }
    dend_31 { pt3dadd( -1.9686, -23.0721, 8.78792, 0.84 ) }
    dend_31 { pt3dadd( -2.53408, -24.6078, 8.94889, 0.96 ) }
    dend_31 { pt3dadd( -2.74758, -25.1753, 9.01755, 1.2 ) }
    dend_31 { pt3dadd( -2.94432, -25.6665, 9.08808, 1.68 ) }
    dend_31 { pt3dadd( -3.25884, -26.3293, 9.20994, 1.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 93/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.501598, -11.3295, 8.35492, 0.6 ) }
    dend_26 { pt3dadd( 0.065085, -11.5049, 8.75345, 0.6 ) }
    dend_26 { pt3dadd( 1.0363, -11.8152, 9.80018, 0.48 ) }
    dend_26 { pt3dadd( 1.51965, -11.9646, 10.3667, 0.48 ) }
    dend_26 { pt3dadd( 2.70905, -12.3423, 11.7867, 0.48 ) }
    dend_26 { pt3dadd( 3.16048, -12.5118, 12.3318, 0.48 ) }
    dend_26 { pt3dadd( 3.82095, -12.7476, 13.1452, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 5.65747, -13.3916, 15.6918, 0.96 ) }
    dend_26 { pt3dadd( 5.93268, -13.4748, 16.1003, 0.36 ) }
    dend_26 { pt3dadd( 6.11251, -13.4998, 16.4036, 0.36 ) }
    dend_26 { pt3dadd( 6.53116, -13.4482, 17.1698, 0.36 ) }
    dend_26 { pt3dadd( 7.1473, -13.2058, 18.3427, 0.48 ) }
    dend_26 { pt3dadd( 7.65812, -12.8867, 19.2499, 0.48 ) }
    dend_26 { pt3dadd( 7.94003, -12.7022, 19.6654, 0.48 ) }
    dend_26 { pt3dadd( 8.57058, -12.3166, 20.58, 0.12 ) }
    dend_26 { pt3dadd( 8.78709, -12.1938, 20.8589, 0.12 ) }
    dend_26 { pt3dadd( 9.23526, -11.9404, 21.3384, 0.48 ) }
    dend_26 { pt3dadd( 9.68265, -11.7259, 21.7148, 0.48 ) }
    dend_26 { pt3dadd( 10.5147, -11.351, 22.2393, 0.6 ) }
    dend_26 { pt3dadd( 11.0652, -11.0845, 22.5128, 0.12 ) }
    dend_26 { pt3dadd( 11.762, -10.7165, 22.7709, 0.48 ) }
    dend_26 { pt3dadd( 12.7477, -10.1321, 23.0577, 0.48 ) }
    dend_26 { pt3dadd( 13.1097, -9.89054, 23.1474, 0.48 ) }
    dend_26 { pt3dadd( 13.632, -9.48675, 23.2375, 0.48 ) }
    dend_26 { pt3dadd( 14.2084, -8.95948, 23.3065, 0.48 ) }
    dend_26 { pt3dadd( 15.1843, -7.93408, 23.4142, 0.48 ) }
    dend_26 { pt3dadd( 16.0554, -6.93018, 23.4945, 0.48 ) }
    dend_26 { pt3dadd( 16.9167, -5.88369, 23.5483, 0.48 ) }
    dend_26 { pt3dadd( 17.5747, -5.01063, 23.5724, 0.12 ) }
    dend_26 { pt3dadd( 18.0525, -4.29486, 23.5737, 0.12 ) }
    dend_26 { pt3dadd( 18.3729, -3.77218, 23.5797, 0.12 ) }
    dend_26 { pt3dadd( 18.7496, -3.09321, 23.5891, 0.84 ) }
    dend_26 { pt3dadd( 19.0222, -2.65086, 23.6151, 1.2 ) }
    dend_26 { pt3dadd( 19.3528, -2.27346, 23.6934, 1.44 ) }
    dend_26 { pt3dadd( 20.1056, -1.67308, 23.9292, 0.72 ) }
    dend_26 { pt3dadd( 20.8399, -1.19408, 24.1603, 0.36 ) }
    dend_26 { pt3dadd( 21.3806, -0.869338, 24.3705, 0.48 ) }
    dend_26 { pt3dadd( 22.0798, -0.437027, 24.6826, 0.48 ) }
    dend_26 { pt3dadd( 23.2616, 0.33411, 25.248, 0.36 ) }
    dend_26 { pt3dadd( 23.9828, 0.831613, 25.6009, 0.36 ) }
    dend_26 { pt3dadd( 24.4051, 1.12243, 25.8127, 0.36 ) }
    dend_26 { pt3dadd( 25.5839, 1.99958, 26.4044, 0.12 ) }
    dend_26 { pt3dadd( 26.1817, 2.52797, 26.7453, 1.08 ) }
    dend_26 { pt3dadd( 26.5134, 2.91169, 26.9626, 1.2 ) }
    dend_26 { pt3dadd( 26.8151, 3.40497, 27.1704, 1.08 ) }
    dend_26 { pt3dadd( 35.593, 6.60995, 31.7025, 1.08 ) }
    dend_26 { pt3dadd( 43.3719, 11.6668, 36.2814, 1.08 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.560917, 42.2968, 15.2107, 0.12 ) }
    dend_24 { pt3dadd( -0.047534, 43.4599, 14.832, 0.12 ) }
    dend_24 { pt3dadd( 0.419717, 44.6185, 14.4921, 0.12 ) }
    dend_24 { pt3dadd( 0.716722, 45.4006, 14.2786, 0.12 ) }
    dend_24 { pt3dadd( 1.12022, 46.5119, 13.9987, 0.12 ) }
    dend_24 { pt3dadd( 1.38407, 47.2634, 13.7426, 0.12 ) }
    dend_24 { pt3dadd( 1.76641, 48.3679, 13.3085, 0.12 ) }
    dend_24 { pt3dadd( 2.09512, 49.3326, 12.9137, 0.12 ) }
    dend_24 { pt3dadd( 2.21184, 49.6987, 12.7121, 0.12 ) }
    dend_24 { pt3dadd( 2.43919, 50.546, 12.1345, 0.96 ) }
    dend_24 { pt3dadd( 2.73893, 52.0907, 10.9176, 0.12 ) }
    dend_24 { pt3dadd( 2.78547, 52.3807, 10.6637, 0.12 ) }
    dend_24 { pt3dadd( 2.82728, 52.6204, 10.4247, 0.36 ) }
    dend_24 { pt3dadd( 2.97861, 53.3777, 9.62805, 0.12 ) }
    dend_24 { pt3dadd( 3.02602, 53.5855, 9.41847, 0.12 ) }
    dend_24 { pt3dadd( 3.2142, 54.3247, 8.78244, 0.12 ) }
    dend_24 { pt3dadd( 3.31366, 54.683, 8.55837, 0.12 ) }
    dend_24 { pt3dadd( 3.48281, 55.265, 8.22233, 0.12 ) }
    dend_24 { pt3dadd( 3.60408, 55.6595, 8.03098, 0.12 ) }
    dend_24 { pt3dadd( 3.8174, 56.3573, 7.73702, 0.12 ) }
    dend_24 { pt3dadd( 4.09147, 57.4691, 7.1313, 0.12 ) }
    dend_24 { pt3dadd( 4.19525, 58.0321, 6.76622, 0.12 ) }
    dend_24 { pt3dadd( 4.25718, 58.4981, 6.44387, 0.12 ) }
    dend_24 { pt3dadd( 4.34907, 59.6054, 5.61104, 0.12 ) }
    dend_24 { pt3dadd( 4.36616, 60.0866, 5.22661, 1.2 ) }
    dend_24 { pt3dadd( 4.3277, 61.8592, 3.84182, 0.12 ) }
    dend_24 { pt3dadd( 4.25008, 62.8313, 3.09469, 0.12 ) }
    dend_24 { pt3dadd( 4.23231, 63.0017, 2.96507, 0.48 ) }
    dend_24 { pt3dadd( 4.12503, 63.5437, 2.47306, 0.12 ) }
    dend_24 { pt3dadd( 4.00035, 63.9313, 2.10451, 0.12 ) }
    dend_24 { pt3dadd( 3.54554, 64.8104, 1.1294, 0.12 ) }
    dend_24 { pt3dadd( 3.28405, 65.1996, 0.668867, 1.2 ) }
    dend_24 { pt3dadd( 3.12733, 65.3619, 0.410787, 1.2 ) }
    dend_24 { pt3dadd( 1.62303, 66.622, -1.95838, 0.12 ) }
    dend_24 { pt3dadd( 1.0045, 67.0445, -2.8545, 0.12 ) }
    dend_24 { pt3dadd( -0.72779, 67.9821, -5.48606, 0.12 ) }
    dend_24 { pt3dadd( -0.926942, 68.0658, -5.80818, 0.12 ) }
    dend_24 { pt3dadd( -1.89038, 68.4555, -7.54782, 0.6 ) }
    dend_24 { pt3dadd( -2.02712, 68.513, -7.81806, 0.6 ) }
    dend_24 { pt3dadd( -2.2977, 68.6543, -8.53711, 0.6 ) }
    dend_24 { pt3dadd( -2.46821, 69.0222, -10.3715, 0.12 ) }
    dend_24 { pt3dadd( -2.21785, 69.2386, -10.6735, 0.12 ) }
    dend_24 { pt3dadd( -1.26373, 70.2803, -11.4365, 0.12 ) }
    dend_24 { pt3dadd( -0.886653, 70.8248, -11.6479, 0.6 ) }
    dend_24 { pt3dadd( -0.612721, 71.3503, -11.7795, 0.12 ) }
    dend_24 { pt3dadd( -0.293415, 72.019, -11.8893, 0.12 ) }
    dend_24 { pt3dadd( -0.0204706, 72.8267, -11.9097, 0.12 ) }
    dend_24 { pt3dadd( 0.161131, 73.7691, -11.9098, 0.12 ) }
    dend_24 { pt3dadd( 0.15502, 74.6378, -11.8854, 0.12 ) }
    dend_24 { pt3dadd( 0.09517, 75.2305, -11.8809, 0.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 90/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.560917, 42.2968, 15.2107, 0.72 ) }
    dend_23 { pt3dadd( -0.897305, 42.8514, 15.3609, 0.72 ) }
    dend_23 { pt3dadd( -1.24454, 43.4413, 15.5141, 0.84 ) }
    dend_23 { pt3dadd( -1.49848, 43.8766, 15.6247, 1.08 ) }
    dend_23 { pt3dadd( -1.90073, 44.5553, 15.7662, 0.72 ) }
    dend_23 { pt3dadd( -2.34525, 45.3297, 15.9043, 0.48 ) }
    dend_23 { pt3dadd( -2.65746, 45.9052, 15.9925, 0.48 ) }
    dend_23 { pt3dadd( -2.9038, 46.4014, 16.0542, 0.72 ) }
    dend_23 { pt3dadd( -3.10299, 46.8208, 16.1019, 0.96 ) }
    dend_23 { pt3dadd( -3.42712, 47.5301, 16.1764, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -3.68002, 48.1025, 16.2386, 0.72 ) }
    dend_23 { pt3dadd( -3.95732, 48.7628, 16.3264, 0.72 ) }
    dend_23 { pt3dadd( -4.31753, 49.5693, 16.458, 0.72 ) }
    dend_23 { pt3dadd( -4.43834, 49.837, 16.5264, 0.72 ) }
    dend_23 { pt3dadd( -4.60066, 50.2154, 16.6528, 0.72 ) }
    dend_23 { pt3dadd( -4.94729, 51.0535, 16.976, 0.6 ) }
    dend_23 { pt3dadd( -5.2093, 51.6209, 17.1642, 0.6 ) }
    dend_23 { pt3dadd( -5.65609, 52.5734, 17.5006, 0.48 ) }
    dend_23 { pt3dadd( -6.10649, 53.5348, 17.8367, 0.48 ) }
    dend_23 { pt3dadd( -6.5569, 54.4407, 18.1269, 0.48 ) }
    dend_23 { pt3dadd( -7.12885, 55.5438, 18.4524, 0.6 ) }
    dend_23 { pt3dadd( -7.90102, 57.0511, 18.8842, 0.6 ) }
    dend_23 { pt3dadd( -8.55025, 58.3537, 19.2335, 0.72 ) }
    dend_23 { pt3dadd( -9.0658, 59.4225, 19.4911, 0.6 ) }
    dend_23 { pt3dadd( -9.50308, 60.31, 19.6818, 0.12 ) }
    dend_23 { pt3dadd( -9.77497, 60.8602, 19.8086, 0.12 ) }
    dend_23 { pt3dadd( -10.2276, 61.8017, 20.0392, 0.12 ) }
    dend_23 { pt3dadd( -10.7476, 62.9698, 20.3353, 0.24 ) }
    dend_23 { pt3dadd( -11.1826, 63.944, 20.5215, 0.24 ) }
    dend_23 { pt3dadd( -11.3949, 64.4544, 20.6221, 0.24 ) }
    dend_23 { pt3dadd( -11.5426, 64.8415, 20.7008, 0.6 ) }
    dend_23 { pt3dadd( -11.7516, 65.3452, 20.79, 0.12 ) }
    dend_23 { pt3dadd( -11.9656, 65.8073, 20.853, 0.24 ) }
    dend_23 { pt3dadd( -12.1883, 66.287, 20.9113, 0.24 ) }
    dend_23 { pt3dadd( -12.2506, 66.4199, 20.9265, 0.24 ) }
    dend_23 { pt3dadd( -12.5224, 66.9799, 20.9966, 0.36 ) }
    dend_23 { pt3dadd( -12.9953, 67.9256, 21.1553, 0.36 ) }
    dend_23 { pt3dadd( -13.3569, 68.6193, 21.2995, 0.36 ) }
    dend_23 { pt3dadd( -13.5367, 68.9231, 21.3853, 0.48 ) }
    dend_23 { pt3dadd( -14.0541, 69.7159, 21.6578, 0.48 ) }
    dend_23 { pt3dadd( -14.514, 70.367, 21.9149, 0.48 ) }
    dend_23 { pt3dadd( -14.8727, 70.8479, 22.1386, 0.6 ) }
    dend_23 { pt3dadd( -15.1579, 71.2323, 22.3362, 0.72 ) }
    dend_23 { pt3dadd( -15.7073, 72.0378, 22.7487, 0.36 ) }
    dend_23 { pt3dadd( -16.1101, 72.7006, 23.0641, 0.36 ) }
    dend_23 { pt3dadd( -16.156, 72.7875, 23.1, 0.48 ) }
    dend_23 { pt3dadd( -16.4058, 73.3493, 23.2877, 0.36 ) }
    dend_23 { pt3dadd( -16.6833, 74.1153, 23.4719, 0.36 ) }
    dend_23 { pt3dadd( -16.978, 75.0968, 23.6425, 0.36 ) }
    dend_23 { pt3dadd( -17.2175, 76.0116, 23.7524, 0.36 ) }
    dend_23 { pt3dadd( -17.3782, 76.6212, 23.8163, 0.36 ) }
    dend_23 { pt3dadd( -17.5135, 77.1131, 23.8618, 0.6 ) }
    dend_23 { pt3dadd( -17.8293, 78.2023, 23.9481, 0.84 ) }
    dend_23 { pt3dadd( -17.9881, 78.724, 23.9906, 0.36 ) }
    dend_23 { pt3dadd( -18.2513, 79.5651, 24.0622, 0.36 ) }
    dend_23 { pt3dadd( -18.5076, 80.4063, 24.1322, 0.36 ) }
    dend_23 { pt3dadd( -18.8604, 81.5972, 24.2296, 0.36 ) }
    dend_23 { pt3dadd( -19.0278, 82.1976, 24.2763, 0.48 ) }
    dend_23 { pt3dadd( -19.1048, 82.4997, 24.298, 0.48 ) }
    dend_23 { pt3dadd( -19.1737, 82.8212, 24.3174, 0.24 ) }
    dend_23 { pt3dadd( -19.3345, 83.7401, 24.3685, 0.24 ) }
    dend_23 { pt3dadd( -19.4247, 84.3573, 24.4043, 0.6 ) }
    dend_23 { pt3dadd( -19.5225, 85.077, 24.4502, 0.6 ) }
    dend_23 { pt3dadd( -19.5908, 85.592, 24.485, 0.48 ) }
    dend_23 { pt3dadd( -19.7148, 86.5184, 24.5536, 0.48 ) }
    dend_23 { pt3dadd( -19.7897, 87.0918, 24.5969, 0.12 ) }
    dend_23 { pt3dadd( -19.9356, 88.2162, 24.6794, 0.12 ) }
    dend_23 { pt3dadd( -20.0592, 89.1342, 24.7437, 0.12 ) }
    dend_23 { pt3dadd( -20.0879, 89.34, 24.7572, 0.72 ) }
    dend_23 { pt3dadd( -20.1914, 90.0541, 24.7993, 0.84 ) }
    dend_23 { pt3dadd( -20.3382, 90.9846, 24.8402, 0.36 ) }
    dend_23 { pt3dadd( -20.5769, 92.4083, 24.8805, 0.36 ) }
    dend_23 { pt3dadd( -20.7383, 93.3224, 24.9032, 0.36 ) }
    dend_23 { pt3dadd( -20.8756, 94.0381, 24.9211, 0.36 ) }
    dend_23 { pt3dadd( -21.0253, 94.7499, 24.9438, 0.48 ) }
    dend_23 { pt3dadd( -21.2609, 95.7763, 24.9839, 0.96 ) }
    dend_23 { pt3dadd( -21.335, 96.0795, 24.9983, 0.96 ) }
    dend_23 { pt3dadd( -21.5123, 96.7767, 25.0365, 0.36 ) }
    dend_23 { pt3dadd( -21.7312, 97.6056, 25.0894, 0.36 ) }
    dend_23 { pt3dadd( -22.0816, 98.9104, 25.1835, 0.36 ) }
    dend_23 { pt3dadd( -22.4067, 100.109, 25.2808, 0.36 ) }
    dend_23 { pt3dadd( -22.5189, 100.509, 25.3186, 0.48 ) }
    dend_23 { pt3dadd( -22.614, 100.823, 25.3507, 0.36 ) }
    dend_23 { pt3dadd( -22.8136, 101.412, 25.4117, 0.36 ) }
    dend_23 { pt3dadd( -23.1319, 102.287, 25.5016, 0.48 ) }
    dend_23 { pt3dadd( -23.2557, 102.591, 25.5353, 0.36 ) }
    dend_23 { pt3dadd( -23.8719, 104.035, 25.702, 0.36 ) }
    dend_23 { pt3dadd( -24.4348, 105.319, 25.8532, 0.48 ) }
    dend_23 { pt3dadd( -24.8562, 106.261, 25.9647, 0.96 ) }
    dend_23 { pt3dadd( -25.037, 106.648, 26.0117, 0.6 ) }
    dend_23 { pt3dadd( -25.5058, 107.6, 26.1312, 0.72 ) }
    dend_23 { pt3dadd( -29.3649, 115.306, 27.3254, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.5556, -15.0814, -9.40811, 1.56 ) }
    dend_19 { pt3dadd( -2.8528, -14.8407, -11.267, 1.56 ) }
    dend_19 { pt3dadd( -4.15203, -13.7884, -19.3934, 1.44 ) }
    dend_19 { pt3dadd( -5.23047, -12.9149, -26.1389, 2.04 ) }
    dend_19 { pt3dadd( -5.59918, -12.6163, -28.445, 1.32 ) }
    dend_19 { pt3dadd( -5.75077, -12.4935, -29.3932, 1.2 ) }
    dend_19 { pt3dadd( -5.83594, -12.4245, -29.9259, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_11 (entry count 89/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.5556, -15.0814, -9.40811, 0.48 ) }
    dend_14 { pt3dadd( -3.12454, -16.2063, -9.25477, 0.48 ) }
    dend_14 { pt3dadd( -3.35683, -16.6387, -9.17583, 0.48 ) }
    dend_14 { pt3dadd( -3.69815, -17.2653, -9.05512, 0.72 ) }
    dend_14 { pt3dadd( -4.15832, -18.138, -8.93454, 1.2 ) }
    dend_14 { pt3dadd( -4.68334, -19.1457, -8.79583, 0.6 ) }
    dend_14 { pt3dadd( -5.06651, -19.9019, -8.69592, 0.36 ) }
    dend_14 { pt3dadd( -5.49027, -20.7377, -8.60889, 0.36 ) }
    dend_14 { pt3dadd( -5.82188, -21.4097, -8.54175, 0.48 ) }
    dend_14 { pt3dadd( -6.30516, -22.4414, -8.41768, 0.84 ) }
    dend_14 { pt3dadd( -6.709, -23.4268, -8.29212, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( -6.94201, -24.1035, -8.20041, 0.72 ) }
    dend_14 { pt3dadd( -7.17309, -24.8669, -8.0816, 0.72 ) }
    dend_14 { pt3dadd( -7.33288, -25.4299, -8.00046, 0.72 ) }
    dend_14 { pt3dadd( -7.59366, -26.4069, -7.84133, 0.84 ) }
    dend_14 { pt3dadd( -7.84904, -27.4277, -7.63801, 0.84 ) }
    dend_14 { pt3dadd( -8.01946, -28.1676, -7.48943, 0.48 ) }
    dend_14 { pt3dadd( -8.149, -28.7542, -7.36874, 0.6 ) }
    dend_14 { pt3dadd( -8.27384, -29.331, -7.24556, 1.08 ) }
    dend_14 { pt3dadd( -8.38268, -29.8091, -7.14508, 1.32 ) }
    dend_14 { pt3dadd( -8.64958, -30.9498, -6.9445, 0.96 ) }
    dend_14 { pt3dadd( -8.8822, -31.9306, -6.76232, 0.96 ) }
    dend_14 { pt3dadd( -9.14861, -33.0911, -6.54947, 0.72 ) }
    dend_14 { pt3dadd( -9.45364, -34.434, -6.30708, 0.72 ) }
    dend_14 { pt3dadd( -9.71634, -35.6217, -6.10341, 0.96 ) }
    dend_14 { pt3dadd( -9.98025, -36.8243, -5.90471, 1.2 ) }
    dend_14 { pt3dadd( -10.1936, -37.7995, -5.76582, 0.6 ) }
    dend_14 { pt3dadd( -10.3205, -38.3815, -5.68943, 0.6 ) }
    dend_14 { pt3dadd( -10.5266, -39.3313, -5.5584, 0.6 ) }
    dend_14 { pt3dadd( -10.6651, -40.0239, -5.48157, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.5556, -15.0814, -9.40811, 1.44 ) }
    dend_12 { pt3dadd( -2.11555, -15.9308, -9.83035, 1.44 ) }
    dend_12 { pt3dadd( -1.57018, -17.452, -10.4521, 0.72 ) }
    dend_12 { pt3dadd( -1.46808, -17.9791, -10.6217, 0.12 ) }
    dend_12 { pt3dadd( -1.45259, -18.3613, -10.7133, 0.24 ) }
    dend_12 { pt3dadd( -1.47096, -18.6668, -10.7667, 0.24 ) }
    dend_12 { pt3dadd( -1.56615, -19.5752, -10.8898, 0.24 ) }
    dend_12 { pt3dadd( -1.70666, -20.2513, -10.9693, 0.48 ) }
    dend_12 { pt3dadd( -1.88275, -20.9258, -11.0477, 0.6 ) }
    dend_12 { pt3dadd( -2.10373, -21.7541, -11.1901, 0.36 ) }
    dend_12 { pt3dadd( -2.35636, -22.6737, -11.3819, 0.36 ) }
    dend_12 { pt3dadd( -2.52688, -23.3302, -11.5378, 0.36 ) }
    dend_12 { pt3dadd( -2.71124, -24.2146, -11.792, 0.72 ) }
    dend_12 { pt3dadd( -2.83629, -25.124, -12.0792, 0.36 ) }
    dend_12 { pt3dadd( -2.87342, -25.7942, -12.3103, 0.36 ) }
    dend_12 { pt3dadd( -2.85755, -26.259, -12.4719, 0.6 ) }
    dend_12 { pt3dadd( -2.83189, -26.6502, -12.6166, 0.6 ) }
    dend_12 { pt3dadd( -2.79215, -27.4084, -12.9052, 0.36 ) }
    dend_12 { pt3dadd( -2.78127, -28.1645, -13.1724, 0.36 ) }
    dend_12 { pt3dadd( -2.80036, -28.8542, -13.4337, 0.36 ) }
    dend_12 { pt3dadd( -2.83681, -29.5987, -13.731, 0.48 ) }
    dend_12 { pt3dadd( -2.93119, -30.6621, -14.1892, 0.6 ) }
    dend_12 { pt3dadd( -3.05064, -31.3913, -14.5094, 0.84 ) }
    dend_12 { pt3dadd( -3.18127, -31.9203, -14.7407, 0.84 ) }
    dend_12 { pt3dadd( -3.43299, -32.7106, -15.0811, 0.36 ) }
    dend_12 { pt3dadd( -3.7932, -33.706, -15.505, 0.36 ) }
    dend_12 { pt3dadd( -4.07595, -34.4494, -15.815, 0.48 ) }
    dend_12 { pt3dadd( -4.28213, -35.0665, -16.0395, 0.48 ) }
    dend_12 { pt3dadd( -4.5391, -35.9213, -16.3336, 0.84 ) }
    dend_12 { pt3dadd( -4.83836, -36.9862, -16.7045, 1.32 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 49/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.3641, -8.52336, -9.00091, 0.6 ) }
    dend_10 { pt3dadd( 18.0382, -9.40009, -7.91559, 0.6 ) }
    dend_10 { pt3dadd( 18.8556, -9.78247, -7.56401, 0.6 ) }
    dend_10 { pt3dadd( 19.856, -10.2422, -7.28538, 0.6 ) }
    dend_10 { pt3dadd( 20.5175, -10.5559, -7.16972, 0.6 ) }
    dend_10 { pt3dadd( 21.6344, -11.0877, -6.94214, 0.48 ) }
    dend_10 { pt3dadd( 22.2537, -11.3927, -6.80743, 0.84 ) }
    dend_10 { pt3dadd( 22.9708, -11.7611, -6.74068, 0.84 ) }
    dend_10 { pt3dadd( 23.756, -12.1801, -6.67837, 0.36 ) }
    dend_10 { pt3dadd( 25.0455, -12.986, -6.59159, 0.48 ) }
    dend_10 { pt3dadd( 26.1193, -13.7739, -6.46566, 0.96 ) }
    dend_10 { pt3dadd( 26.4227, -14.046, -6.40626, 1.08 ) }
    dend_10 { pt3dadd( 27.03, -14.7168, -6.29247, 0.48 ) }
    dend_10 { pt3dadd( 27.2567, -15.0126, -6.24118, 0.48 ) }
    dend_10 { pt3dadd( 27.715, -15.6975, -6.11869, 0.72 ) }
    dend_10 { pt3dadd( 28.1316, -16.4215, -6.00937, 1.2 ) }
    dend_10 { pt3dadd( 28.6931, -17.4872, -5.88045, 1.32 ) }
    dend_10 { pt3dadd( 29.1102, -18.2823, -5.73638, 0.6 ) }
    dend_10 { pt3dadd( 29.5855, -19.1856, -5.50415, 0.96 ) }
    dend_10 { pt3dadd( 29.9366, -19.8361, -5.31197, 0.96 ) }
    dend_10 { pt3dadd( 30.3202, -20.5284, -5.09222, 0.6 ) }
    dend_10 { pt3dadd( 30.6898, -21.1965, -4.86736, 0.6 ) }
    dend_10 { pt3dadd( 31.1868, -22.1551, -4.53954, 0.72 ) }
    dend_10 { pt3dadd( 31.4754, -22.7692, -4.33909, 0.84 ) }
    dend_10 { pt3dadd( 31.8798, -23.7108, -4.05423, 1.08 ) }
    dend_10 { pt3dadd( 32.2209, -24.5878, -3.7956, 1.08 ) }
    dend_10 { pt3dadd( 32.5289, -25.4565, -3.55228, 0.48 ) }
    dend_10 { pt3dadd( 32.9291, -26.6704, -3.25784, 0.48 ) }
    dend_10 { pt3dadd( 33.153, -27.4319, -3.10699, 0.48 ) }
    dend_10 { pt3dadd( 33.4372, -28.4985, -2.88643, 0.96 ) }
    dend_10 { pt3dadd( 33.6733, -29.4908, -2.65282, 0.96 ) }
    dend_10 { pt3dadd( 33.8495, -30.2429, -2.47346, 0.6 ) }
    dend_10 { pt3dadd( 34.0267, -30.9825, -2.30497, 0.48 ) }
    dend_10 { pt3dadd( 34.1785, -31.6101, -2.16425, 0.6 ) }
    dend_10 { pt3dadd( 34.4432, -32.658, -1.91499, 0.84 ) }
    dend_10 { pt3dadd( 34.7106, -33.6539, -1.67861, 0.6 ) }
    dend_10 { pt3dadd( 34.9603, -34.5147, -1.46741, 0.48 ) }
    dend_10 { pt3dadd( 35.1459, -35.1345, -1.32025, 0.48 ) }
    dend_10 { pt3dadd( 35.4146, -35.9872, -1.12716, 0.6 ) }
    dend_10 { pt3dadd( 35.7117, -36.826, -0.960272, 0.96 ) }
    dend_10 { pt3dadd( 36.0978, -37.8248, -0.816011, 1.08 ) }
    dend_10 { pt3dadd( 36.4468, -38.6864, -0.707465, 0.84 ) }
    dend_10 { pt3dadd( 36.744, -39.4357, -0.616215, 0.6 ) }
    dend_10 { pt3dadd( 36.9897, -40.0472, -0.555577, 0.48 ) }
    dend_10 { pt3dadd( 37.366, -40.9698, -0.496355, 0.6 ) }
    dend_10 { pt3dadd( 37.7432, -41.9261, -0.464623, 0.84 ) }
    dend_10 { pt3dadd( 38.0824, -42.7982, -0.439317, 0.96 ) }
    dend_10 { pt3dadd( 38.4067, -43.6539, -0.410158, 1.08 ) }
    dend_10 { pt3dadd( 38.6668, -44.3796, -0.376434, 0.72 ) }
    dend_10 { pt3dadd( 38.8927, -45.086, -0.334991, 0.48 ) }
    dend_10 { pt3dadd( 39.1191, -45.8556, -0.276108, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_10 { pt3dadd( 39.2605, -46.3512, -0.225363, 0.48 ) }
    dend_10 { pt3dadd( 39.4687, -47.1233, -0.141069, 0.84 ) }
    dend_10 { pt3dadd( 39.5599, -47.4952, -0.0962679, 0.96 ) }
    dend_10 { pt3dadd( 39.7228, -48.264, 0.00837064, 0.96 ) }
    dend_10 { pt3dadd( 39.853, -48.9051, 0.116087, 0.6 ) }
    dend_10 { pt3dadd( 39.9367, -49.3084, 0.186533, 0.48 ) }
    dend_10 { pt3dadd( 40.1185, -50.193, 0.327058, 0.48 ) }
    dend_10 { pt3dadd( 40.254, -50.8268, 0.455616, 0.6 ) }
    dend_10 { pt3dadd( 40.4526, -51.7044, 0.663871, 0.84 ) }
    dend_10 { pt3dadd( 40.6566, -52.6166, 0.905896, 0.72 ) }
    dend_10 { pt3dadd( 40.8264, -53.3657, 1.11863, 0.48 ) }
    dend_10 { pt3dadd( 41.0643, -54.3904, 1.41986, 0.6 ) }
    dend_10 { pt3dadd( 41.3092, -55.361, 1.70771, 0.48 ) }
    dend_10 { pt3dadd( 41.5199, -56.1066, 1.92399, 0.72 ) }
    dend_10 { pt3dadd( 41.7501, -56.839, 2.12545, 1.08 ) }
    dend_10 { pt3dadd( 41.9749, -57.4949, 2.28852, 0.6 ) }
    dend_10 { pt3dadd( 42.2566, -58.2479, 2.45982, 0.6 ) }
    dend_10 { pt3dadd( 42.6115, -59.1096, 2.65967, 0.6 ) }
    dend_10 { pt3dadd( 42.8622, -59.7099, 2.7814, 0.6 ) }
    dend_10 { pt3dadd( 43.1378, -60.3511, 2.92721, 0.84 ) }
    dend_10 { pt3dadd( 43.3914, -60.9472, 3.07426, 0.84 ) }
    dend_10 { pt3dadd( 43.6781, -61.708, 3.27294, 0.84 ) }
    dend_10 { pt3dadd( 43.9583, -62.5768, 3.47385, 0.48 ) }
    dend_10 { pt3dadd( 44.0931, -63.0778, 3.57579, 0.84 ) }
    dend_10 { pt3dadd( 44.2235, -63.7049, 3.6849, 1.2 ) }
    dend_10 { pt3dadd( 44.3482, -64.48, 3.79459, 1.44 ) }
    dend_10 { pt3dadd( 44.4535, -65.2645, 3.84186, 0.84 ) }
    dend_10 { pt3dadd( 44.54, -66.1632, 3.78744, 0.48 ) }
    dend_10 { pt3dadd( 44.5573, -66.4556, 3.74425, 0.72 ) }
    dend_10 { pt3dadd( 44.5811, -66.9796, 3.63564, 0.84 ) }
    dend_10 { pt3dadd( 44.6043, -67.4946, 3.51088, 0.84 ) }
    dend_10 { pt3dadd( 44.645, -68.3775, 3.26588, 0.6 ) }
    dend_10 { pt3dadd( 44.7025, -69.4682, 2.97633, 0.48 ) }
    dend_10 { pt3dadd( 44.7491, -70.3883, 2.72405, 0.48 ) }
    dend_10 { pt3dadd( 44.7831, -70.9849, 2.55888, 0.6 ) }
    dend_10 { pt3dadd( 44.8312, -71.6256, 2.38519, 0.72 ) }
    dend_10 { pt3dadd( 44.9096, -72.4091, 2.19893, 0.72 ) }
    dend_10 { pt3dadd( 45.046, -73.4275, 1.98697, 0.84 ) }
    dend_10 { pt3dadd( 45.2746, -74.6235, 1.76202, 0.84 ) }
    dend_10 { pt3dadd( 45.451, -75.3896, 1.64505, 0.84 ) }
    dend_10 { pt3dadd( 45.5858, -75.9214, 1.59173, 0.6 ) }
    dend_10 { pt3dadd( 45.8391, -76.8415, 1.53504, 0.48 ) }
    dend_10 { pt3dadd( 46.0947, -77.6969, 1.52164, 0.48 ) }
    dend_10 { pt3dadd( 46.3867, -78.6144, 1.54416, 0.48 ) }
    dend_10 { pt3dadd( 46.6559, -79.4467, 1.61204, 0.48 ) }
    dend_10 { pt3dadd( 46.8181, -79.9652, 1.65961, 0.48 ) }
    dend_10 { pt3dadd( 46.972, -80.4819, 1.74033, 0.6 ) }
    dend_10 { pt3dadd( 47.2666, -81.5165, 1.96587, 0.6 ) }
    dend_10 { pt3dadd( 47.4408, -82.1372, 2.14049, 0.84 ) }
    dend_10 { pt3dadd( 47.5347, -82.5056, 2.25359, 1.08 ) }
    dend_10 { pt3dadd( 47.7002, -83.1424, 2.40023, 1.08 ) }
    dend_10 { pt3dadd( 47.9844, -84.1735, 2.53059, 0.6 ) }
    dend_10 { pt3dadd( 48.1185, -84.5623, 2.44832, 0.6 ) }
    dend_10 { pt3dadd( 48.2721, -84.8717, 2.20299, 0.72 ) }
    dend_10 { pt3dadd( 48.4467, -85.1511, 1.84599, 0.84 ) }
    dend_10 { pt3dadd( 49.0305, -85.9192, 0.673802, 0.84 ) }
    dend_10 { pt3dadd( 49.5398, -86.4387, -0.300986, 1.08 ) }
    dend_10 { pt3dadd( 50.2227, -86.9731, -1.51475, 0.72 ) }
    dend_10 { pt3dadd( 50.474, -87.1221, -1.90548, 0.72 ) }
    dend_10 { pt3dadd( 51.0814, -87.4157, -2.70503, 0.6 ) }
    dend_10 { pt3dadd( 51.4814, -87.5894, -3.12434, 0.6 ) }
    dend_10 { pt3dadd( 52.0748, -87.8618, -3.58247, 0.6 ) }
    dend_10 { pt3dadd( 52.5381, -88.1244, -3.85461, 0.6 ) }
    dend_10 { pt3dadd( 53.199, -88.5818, -4.161, 0.6 ) }
    dend_10 { pt3dadd( 53.6528, -89.0135, -4.39974, 1.08 ) }
    dend_10 { pt3dadd( 54.0707, -89.5593, -4.62512, 1.08 ) }
    dend_10 { pt3dadd( 54.4748, -90.2184, -4.90552, 0.6 ) }
    dend_10 { pt3dadd( 54.7691, -90.7517, -5.17825, 0.6 ) }
    dend_10 { pt3dadd( 54.9643, -91.0713, -5.39006, 0.6 ) }
    dend_10 { pt3dadd( 55.4758, -91.7395, -6.02508, 0.6 ) }
    dend_10 { pt3dadd( 55.7335, -92.0019, -6.34219, 0.6 ) }
    dend_10 { pt3dadd( 56.3035, -92.465, -6.98552, 0.84 ) }
    dend_10 { pt3dadd( 57.0623, -92.9599, -7.73394, 0.84 ) }
    dend_10 { pt3dadd( 57.8946, -93.4277, -8.47479, 0.96 ) }
    dend_10 { pt3dadd( 58.8491, -93.9073, -9.25, 0.84 ) }
    dend_10 { pt3dadd( 59.3626, -94.152, -9.61397, 0.6 ) }
    dend_10 { pt3dadd( 59.8877, -94.421, -9.94145, 0.72 ) }
    dend_10 { pt3dadd( 60.3323, -94.6775, -10.1679, 0.72 ) }
    dend_10 { pt3dadd( 60.9803, -95.1076, -10.4116, 0.48 ) }
    dend_10 { pt3dadd( 61.4736, -95.4887, -10.5615, 0.48 ) }
    dend_10 { pt3dadd( 62.0369, -95.9778, -10.6923, 0.48 ) }
    dend_10 { pt3dadd( 62.6637, -96.5865, -10.845, 0.48 ) }
    dend_10 { pt3dadd( 63.3391, -97.3261, -11.0029, 0.36 ) }
    dend_10 { pt3dadd( 63.95, -98.0551, -11.1225, 0.36 ) }
    dend_10 { pt3dadd( 64.3543, -98.5528, -11.1825, 0.6 ) }
    dend_10 { pt3dadd( 64.9964, -99.3569, -11.2592, 0.6 ) }
    dend_10 { pt3dadd( 65.3668, -99.823, -11.2975, 0.48 ) }
    dend_10 { pt3dadd( 66.0016, -100.604, -11.3361, 0.48 ) }
    dend_10 { pt3dadd( 66.6711, -101.4, -11.3402, 0.48 ) }
    dend_10 { pt3dadd( 67.4303, -102.263, -11.3284, 0.48 ) }
    dend_10 { pt3dadd( 67.8812, -102.753, -11.3087, 0.6 ) }
    dend_10 { pt3dadd( 68.3648, -103.269, -11.2776, 0.6 ) }
    dend_10 { pt3dadd( 68.9611, -103.9, -11.2215, 0.84 ) }
    dend_10 { pt3dadd( 69.4035, -104.396, -11.1702, 0.48 ) }
    dend_10 { pt3dadd( 69.8703, -104.973, -11.1031, 0.48 ) }
    dend_10 { pt3dadd( 70.1466, -105.361, -11.0527, 0.48 ) }
    dend_10 { pt3dadd( 70.5434, -105.942, -11.0112, 0.72 ) }
    dend_10 { pt3dadd( 71.0174, -106.636, -10.9939, 0.84 ) }
    dend_10 { pt3dadd( 71.7012, -107.685, -11.0403, 0.48 ) }
    dend_10 { pt3dadd( 72.0873, -108.285, -11.0933, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( 72.8276, -109.437, -11.273, 0.48 ) }
    dend_10 { pt3dadd( 73.4131, -110.318, -11.4581, 0.6 ) }
    dend_10 { pt3dadd( 73.7451, -110.79, -11.5847, 0.6 ) }
    dend_10 { pt3dadd( 74.2871, -111.494, -11.8321, 0.48 ) }
    dend_10 { pt3dadd( 74.8069, -112.112, -12.0892, 0.48 ) }
    dend_10 { pt3dadd( 75.356, -112.734, -12.3583, 0.84 ) }
    dend_10 { pt3dadd( 75.7904, -113.206, -12.5472, 0.84 ) }
    dend_10 { pt3dadd( 76.0359, -113.483, -12.6237, 0.84 ) }
    dend_10 { pt3dadd( 76.6162, -114.17, -12.784, 0.6 ) }
    dend_10 { pt3dadd( 77.0335, -114.683, -12.8681, 0.48 ) }
    dend_10 { pt3dadd( 77.3802, -115.151, -12.9235, 0.48 ) }
    dend_10 { pt3dadd( 77.868, -115.846, -12.9964, 0.48 ) }
    dend_10 { pt3dadd( 78.2569, -116.436, -13.0633, 0.48 ) }
    dend_10 { pt3dadd( 78.7064, -117.121, -13.1306, 0.36 ) }
    dend_10 { pt3dadd( 79.1531, -117.781, -13.1637, 0.36 ) }
    dend_10 { pt3dadd( 79.4782, -118.223, -13.1589, 0.6 ) }
    dend_10 { pt3dadd( 80.04, -118.947, -13.1151, 0.6 ) }
    dend_10 { pt3dadd( 80.5122, -119.547, -13.0487, 0.6 ) }
    dend_10 { pt3dadd( 81.3991, -120.637, -12.8274, 0.6 ) }
    dend_10 { pt3dadd( 82.2609, -121.646, -12.5377, 0.6 ) }
    dend_10 { pt3dadd( 83.0306, -122.532, -12.2429, 0.36 ) }
    dend_10 { pt3dadd( 83.3179, -122.871, -12.1175, 0.36 ) }
    dend_10 { pt3dadd( 83.9522, -123.692, -11.7953, 0.36 ) }
    dend_10 { pt3dadd( 84.5921, -124.622, -11.449, 0.84 ) }
    dend_10 { pt3dadd( 85.0615, -125.393, -11.19, 0.6 ) }
    dend_10 { pt3dadd( 85.5682, -126.291, -10.9455, 0.6 ) }
    dend_10 { pt3dadd( 85.9645, -127.017, -10.768, 0.36 ) }
    dend_10 { pt3dadd( 86.5324, -128.029, -10.5286, 0.36 ) }
    dend_10 { pt3dadd( 86.9135, -128.699, -10.3808, 0.36 ) }
    dend_10 { pt3dadd( 87.3793, -129.52, -10.2311, 0.48 ) }
    dend_10 { pt3dadd( 88.1885, -130.938, -9.97743, 0.48 ) }
    dend_10 { pt3dadd( 88.6019, -131.669, -9.84884, 0.48 ) }
    dend_10 { pt3dadd( 89.0039, -132.41, -9.74747, 0.72 ) }
    dend_10 { pt3dadd( 89.2586, -132.931, -9.69096, 0.72 ) }
    dend_10 { pt3dadd( 89.5257, -133.693, -9.65084, 0.48 ) }
    dend_10 { pt3dadd( 89.6818, -134.67, -9.78418, 0.48 ) }
    dend_10 { pt3dadd( 89.7032, -135.304, -9.97994, 0.48 ) }
    dend_10 { pt3dadd( 89.6887, -136.25, -10.3728, 0.6 ) }
    dend_10 { pt3dadd( 89.6545, -137.008, -10.7716, 0.6 ) }
    dend_10 { pt3dadd( 89.6139, -137.914, -11.3254, 0.48 ) }
    dend_10 { pt3dadd( 89.5595, -139.725, -12.5795, 0.48 ) }
    dend_10 { pt3dadd( 89.5634, -140.333, -13.0312, 0.48 ) }
    dend_10 { pt3dadd( 89.5858, -140.563, -13.2054, 0.48 ) }
    dend_10 { pt3dadd( 89.7886, -141.607, -13.9636, 0.84 ) }
    dend_10 { pt3dadd( 90.0013, -142.383, -14.4891, 0.96 ) }
    dend_10 { pt3dadd( 90.3182, -143.355, -15.0805, 0.96 ) }
    dend_10 { pt3dadd( 90.4207, -143.693, -15.2431, 0.96 ) }
    dend_10 { pt3dadd( 90.6581, -144.662, -15.6932, 0.48 ) }
    dend_10 { pt3dadd( 90.7986, -145.358, -15.9899, 0.84 ) }
    dend_10 { pt3dadd( 90.9486, -146.137, -16.2668, 0.48 ) }
    dend_10 { pt3dadd( 91.0884, -146.88, -16.5026, 0.48 ) }
    dend_10 { pt3dadd( 91.2139, -147.547, -16.6906, 0.6 ) }
    dend_10 { pt3dadd( 91.4529, -148.796, -17.0494, 0.6 ) }
    dend_10 { pt3dadd( 91.6452, -149.794, -17.3188, 0.36 ) }
    dend_10 { pt3dadd( 91.8011, -150.516, -17.5158, 0.36 ) }
    dend_10 { pt3dadd( 91.9076, -150.909, -17.6169, 0.6 ) }
    dend_10 { pt3dadd( 92.0277, -151.255, -17.6988, 0.6 ) }
    dend_10 { pt3dadd( 92.36, -151.981, -17.8727, 0.24 ) }
    dend_10 { pt3dadd( 92.5873, -152.392, -17.9494, 0.24 ) }
    dend_10 { pt3dadd( 92.7378, -152.645, -17.9937, 0.24 ) }
    dend_10 { pt3dadd( 92.9467, -153.005, -18.0546, 0.48 ) }
    dend_10 { pt3dadd( 93.3234, -153.632, -18.143, 0.36 ) }
    dend_10 { pt3dadd( 93.601, -154.071, -18.1827, 0.36 ) }
    dend_10 { pt3dadd( 93.8926, -154.515, -18.1934, 0.36 ) }
    dend_10 { pt3dadd( 94.2533, -155.073, -18.2187, 0.6 ) }
    dend_10 { pt3dadd( 94.6055, -155.625, -18.2417, 0.6 ) }
    dend_10 { pt3dadd( 94.9168, -156.095, -18.2563, 0.6 ) }
    dend_10 { pt3dadd( 95.3967, -156.788, -18.2606, 0.84 ) }
    dend_10 { pt3dadd( 95.8765, -157.482, -18.2655, 0.84 ) }
    dend_10 { pt3dadd( 96.3526, -158.206, -18.2639, 0.24 ) }
    dend_10 { pt3dadd( 96.6345, -158.675, -18.2566, 0.24 ) }
    dend_10 { pt3dadd( 96.8311, -158.995, -18.2473, 0.48 ) }
    dend_10 { pt3dadd( 97.2493, -159.635, -18.2197, 0.48 ) }
    dend_10 { pt3dadd( 97.7524, -160.313, -18.1787, 0.48 ) }
    dend_10 { pt3dadd( 98.2944, -160.941, -18.125, 0.24 ) }
    dend_10 { pt3dadd( 98.5843, -161.245, -18.0883, 0.24 ) }
    dend_10 { pt3dadd( 99.3864, -162.052, -17.9953, 0.24 ) }
    dend_10 { pt3dadd( 99.6843, -162.349, -17.9625, 0.6 ) }
    dend_10 { pt3dadd( 100.243, -162.888, -17.9069, 0.6 ) }
    dend_10 { pt3dadd( 100.721, -163.352, -17.8622, 0.6 ) }
    dend_10 { pt3dadd( 101.011, -163.643, -17.8441, 0.6 ) }
    dend_10 { pt3dadd( 101.631, -164.287, -17.8202, 0.36 ) }
    dend_10 { pt3dadd( 102.043, -164.718, -17.8137, 0.36 ) }
    dend_10 { pt3dadd( 102.309, -164.976, -17.8149, 0.72 ) }
    dend_10 { pt3dadd( 103.08, -165.642, -17.8315, 0.72 ) }
    dend_10 { pt3dadd( 103.755, -166.158, -17.8529, 0.72 ) }
    dend_10 { pt3dadd( 104.245, -166.503, -17.8689, 0.48 ) }
    dend_10 { pt3dadd( 104.963, -166.975, -17.8919, 0.48 ) }
    dend_10 { pt3dadd( 105.877, -167.554, -17.9152, 0.48 ) }
    dend_10 { pt3dadd( 106.536, -167.965, -17.9168, 0.36 ) }
    dend_10 { pt3dadd( 107.184, -168.361, -17.9006, 0.36 ) }
    dend_10 { pt3dadd( 107.828, -168.784, -17.8563, 0.36 ) }
    dend_10 { pt3dadd( 108.135, -169.005, -17.8294, 0.6 ) }
    dend_10 { pt3dadd( 108.43, -169.241, -17.7974, 0.6 ) }
    dend_10 { pt3dadd( 109.011, -169.746, -17.723, 0.72 ) }
    dend_10 { pt3dadd( 109.429, -170.114, -17.6683, 0.48 ) }
    dend_10 { pt3dadd( 109.748, -170.389, -17.6285, 0.48 ) }
    dend_10 { pt3dadd( 110.122, -170.692, -17.5982, 0.6 ) }
    dend_10 { pt3dadd( 110.716, -171.159, -17.5698, 0.6 ) }
    dend_10 { pt3dadd( 111.038, -171.417, -17.5621, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 111.495, -171.803, -17.5591, 0.48 ) }
    dend_10 { pt3dadd( 111.778, -172.054, -17.5624, 0.48 ) }
    dend_10 { pt3dadd( 112.519, -172.731, -17.5793, 0.36 ) }
    dend_10 { pt3dadd( 112.924, -173.115, -17.5902, 0.36 ) }
    dend_10 { pt3dadd( 113.434, -173.622, -17.6005, 0.6 ) }
    dend_10 { pt3dadd( 114.054, -174.255, -17.6062, 0.6 ) }
    dend_10 { pt3dadd( 114.526, -174.78, -17.5995, 0.36 ) }
    dend_10 { pt3dadd( 114.886, -175.215, -17.5853, 0.36 ) }
    dend_10 { pt3dadd( 115.222, -175.658, -17.5801, 0.36 ) }
    dend_10 { pt3dadd( 115.832, -176.54, -17.586, 0.36 ) }
    dend_10 { pt3dadd( 116.13, -177.009, -17.5923, 0.72 ) }
    dend_10 { pt3dadd( 116.523, -177.713, -17.6204, 0.72 ) }
    dend_10 { pt3dadd( 116.894, -178.458, -17.656, 0.84 ) }
    dend_10 { pt3dadd( 117.467, -179.724, -17.7248, 0.48 ) }
    dend_10 { pt3dadd( 117.88, -180.706, -17.804, 0.36 ) }
    dend_10 { pt3dadd( 118.118, -181.31, -17.8627, 0.36 ) }
    dend_10 { pt3dadd( 118.472, -182.216, -17.9533, 0.72 ) }
    dend_10 { pt3dadd( 118.784, -182.98, -18.0224, 0.72 ) }
    dend_10 { pt3dadd( 119.181, -183.895, -18.0799, 0.72 ) }
    dend_10 { pt3dadd( 119.565, -184.704, -18.0984, 0.6 ) }
    dend_10 { pt3dadd( 119.896, -185.295, -18.1032, 0.12 ) }
    dend_10 { pt3dadd( 120.303, -185.942, -18.0885, 0.12 ) }
    dend_10 { pt3dadd( 120.562, -186.31, -18.0613, 0.48 ) }
    dend_10 { pt3dadd( 120.973, -186.825, -18.0143, 0.6 ) }
    dend_10 { pt3dadd( 121.41, -187.33, -17.9556, 0.48 ) }
    dend_10 { pt3dadd( 121.976, -187.951, -17.8658, 0.36 ) }
    dend_10 { pt3dadd( 122.257, -188.262, -17.8246, 0.36 ) }
    dend_10 { pt3dadd( 122.89, -188.976, -17.7401, 0.36 ) }
    dend_10 { pt3dadd( 123.537, -189.668, -17.577, 0.36 ) }
    dend_10 { pt3dadd( 124.04, -190.146, -17.3906, 0.36 ) }
    dend_10 { pt3dadd( 124.604, -190.602, -17.1304, 0.36 ) }
    dend_10 { pt3dadd( 125.006, -190.885, -16.9162, 0.72 ) }
    dend_10 { pt3dadd( 125.571, -191.252, -16.5845, 1.08 ) }
    dend_10 { pt3dadd( 127.041, -192.151, -15.6471, 0.96 ) }
    dend_10 { pt3dadd( 127.614, -192.499, -15.294, 0.36 ) }
    dend_10 { pt3dadd( 127.941, -192.7, -15.113, 0.36 ) }
    dend_10 { pt3dadd( 128.504, -193.078, -14.8657, 0.36 ) }
    dend_10 { pt3dadd( 129.022, -193.481, -14.7251, 0.36 ) }
    dend_10 { pt3dadd( 129.511, -193.935, -14.7001, 0.36 ) }
    dend_10 { pt3dadd( 130.083, -194.482, -14.7754, 0.48 ) }
    dend_10 { pt3dadd( 130.478, -194.846, -14.8317, 0.48 ) }
    dend_10 { pt3dadd( 130.923, -195.206, -14.8902, 0.36 ) }
    dend_10 { pt3dadd( 131.394, -195.524, -14.9187, 0.36 ) }
    dend_10 { pt3dadd( 132.172, -195.978, -14.9178, 0.36 ) }
    dend_10 { pt3dadd( 133.562, -196.707, -14.8293, 0.36 ) }
    dend_10 { pt3dadd( 134.171, -196.996, -14.7549, 0.36 ) }
    dend_10 { pt3dadd( 134.778, -197.274, -14.666, 0.72 ) }
    dend_10 { pt3dadd( 135.704, -197.709, -14.502, 0.6 ) }
    dend_10 { pt3dadd( 136.027, -197.881, -14.4374, 0.48 ) }
    dend_10 { pt3dadd( 136.592, -198.222, -14.3135, 0.48 ) }
    dend_10 { pt3dadd( 137.486, -198.8, -14.1252, 0.48 ) }
    dend_10 { pt3dadd( 138.124, -199.213, -13.9851, 0.6 ) }
    dend_10 { pt3dadd( 138.521, -199.477, -13.9056, 0.96 ) }
    dend_10 { pt3dadd( 139.061, -199.843, -13.8182, 1.08 ) }
    dend_10 { pt3dadd( 139.517, -200.145, -13.7354, 0.84 ) }
    dend_10 { pt3dadd( 140.316, -200.681, -13.5719, 0.48 ) }
    dend_10 { pt3dadd( 140.948, -201.089, -13.435, 0.24 ) }
    dend_10 { pt3dadd( 141.768, -201.558, -13.2731, 0.36 ) }
    dend_10 { pt3dadd( 142.243, -201.807, -13.19, 0.36 ) }
    dend_10 { pt3dadd( 142.617, -202.0, -13.1314, 0.6 ) }
    dend_10 { pt3dadd( 143.126, -202.31, -13.0549, 0.6 ) }
    dend_10 { pt3dadd( 143.451, -202.543, -13.0151, 0.36 ) }
    dend_10 { pt3dadd( 143.988, -202.963, -12.9816, 0.24 ) }
    dend_10 { pt3dadd( 144.36, -203.269, -12.9559, 0.24 ) }
    dend_10 { pt3dadd( 144.653, -203.525, -12.9469, 0.36 ) }
    dend_10 { pt3dadd( 145.032, -203.901, -12.9419, 0.36 ) }
    dend_10 { pt3dadd( 145.415, -204.318, -12.9421, 0.48 ) }
    dend_10 { pt3dadd( 145.879, -204.901, -12.9413, 0.48 ) }
    dend_10 { pt3dadd( 146.362, -205.601, -12.9797, 0.72 ) }
    dend_10 { pt3dadd( 146.698, -206.116, -13.0286, 0.72 ) }
    dend_10 { pt3dadd( 146.91, -206.452, -13.0672, 0.72 ) }
    dend_10 { pt3dadd( 147.247, -207.02, -13.1339, 0.6 ) }
    dend_10 { pt3dadd( 147.492, -207.474, -13.1975, 0.6 ) }
    dend_10 { pt3dadd( 147.893, -208.266, -13.3147, 0.48 ) }
    dend_10 { pt3dadd( 148.239, -208.952, -13.4126, 0.36 ) }
    dend_10 { pt3dadd( 148.624, -209.681, -13.501, 0.36 ) }
    dend_10 { pt3dadd( 148.962, -210.305, -13.5852, 0.36 ) }
    dend_10 { pt3dadd( 149.308, -210.968, -13.6717, 0.48 ) }
    dend_10 { pt3dadd( 149.518, -211.396, -13.7143, 0.48 ) }
    dend_10 { pt3dadd( 149.698, -211.838, -13.7302, 0.6 ) }
    dend_10 { pt3dadd( 149.85, -212.288, -13.7396, 0.6 ) }
    dend_10 { pt3dadd( 149.993, -212.769, -13.7616, 0.6 ) }
    dend_10 { pt3dadd( 150.133, -213.296, -13.7857, 0.6 ) }
    dend_10 { pt3dadd( 150.312, -214.071, -13.8001, 0.48 ) }
    dend_10 { pt3dadd( 150.464, -214.86, -13.8338, 0.48 ) }
    dend_10 { pt3dadd( 150.573, -215.51, -13.8664, 0.6 ) }
    dend_10 { pt3dadd( 150.718, -216.358, -13.9261, 0.72 ) }
    dend_10 { pt3dadd( 150.844, -217.007, -13.9941, 0.72 ) }
    dend_10 { pt3dadd( 151.102, -218.142, -14.1939, 0.72 ) }
    dend_10 { pt3dadd( 151.315, -218.917, -14.3553, 1.08 ) }
    dend_10 { pt3dadd( 151.507, -219.538, -14.4879, 1.08 ) }
    dend_10 { pt3dadd( 151.757, -220.292, -14.6399, 0.72 ) }
    dend_10 { pt3dadd( 152.134, -221.315, -14.8087, 0.48 ) }
    dend_10 { pt3dadd( 152.65, -222.575, -15.0205, 0.96 ) }
    dend_10 { pt3dadd( 153.232, -223.909, -15.253, 0.36 ) }
    dend_10 { pt3dadd( 153.462, -224.445, -15.3323, 0.36 ) }
    dend_10 { pt3dadd( 153.675, -224.995, -15.3951, 0.72 ) }
    dend_10 { pt3dadd( 154.119, -226.29, -15.4743, 0.84 ) }
    dend_10 { pt3dadd( 154.359, -227.105, -15.4839, 0.84 ) }
    dend_10 { pt3dadd( 154.519, -227.751, -15.4685, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_10 { pt3dadd( 154.699, -228.696, -15.4415, 0.48 ) }
    dend_10 { pt3dadd( 154.905, -229.991, -15.4286, 0.48 ) }
    dend_10 { pt3dadd( 155.023, -230.935, -15.4248, 0.48 ) }
    dend_10 { pt3dadd( 155.089, -231.593, -15.4201, 0.48 ) }
    dend_10 { pt3dadd( 155.133, -232.125, -15.425, 0.72 ) }
    dend_10 { pt3dadd( 155.188, -232.797, -15.4514, 0.72 ) }
    dend_10 { pt3dadd( 155.271, -233.851, -15.551, 0.36 ) }
    dend_10 { pt3dadd( 155.287, -234.22, -15.6149, 0.36 ) }
    dend_10 { pt3dadd( 155.299, -234.754, -15.7271, 0.36 ) }
    dend_10 { pt3dadd( 155.328, -235.601, -15.9071, 0.24 ) }
    dend_10 { pt3dadd( 155.362, -236.771, -16.1318, 0.24 ) }
    dend_10 { pt3dadd( 155.375, -237.054, -16.177, 0.72 ) }
    dend_10 { pt3dadd( 155.429, -237.824, -16.2465, 0.36 ) }
    dend_10 { pt3dadd( 155.515, -238.612, -16.2883, 0.36 ) }
    dend_10 { pt3dadd( 155.594, -239.157, -16.306, 0.36 ) }
    dend_10 { pt3dadd( 155.726, -239.86, -16.2983, 0.48 ) }
    dend_10 { pt3dadd( 155.788, -240.139, -16.2954, 0.12 ) }
    dend_10 { pt3dadd( 156.048, -241.032, -16.1957, 0.12 ) }
    dend_10 { pt3dadd( 156.234, -241.522, -16.0913, 0.12 ) }
    dend_10 { pt3dadd( 156.448, -242.0, -15.9652, 0.84 ) }
    dend_10 { pt3dadd( 156.748, -242.568, -15.8032, 0.96 ) }
    dend_10 { pt3dadd( 157.099, -243.157, -15.64, 0.96 ) }
    dend_10 { pt3dadd( 157.849, -244.325, -15.2269, 0.24 ) }
    dend_10 { pt3dadd( 158.157, -244.786, -15.0414, 0.48 ) }
    dend_10 { pt3dadd( 158.903, -245.85, -14.5849, 0.48 ) }
    dend_10 { pt3dadd( 159.764, -247.017, -14.0627, 0.48 ) }
    dend_10 { pt3dadd( 160.33, -247.761, -13.7439, 0.48 ) }
    dend_10 { pt3dadd( 161.261, -248.98, -13.2707, 0.48 ) }
    dend_10 { pt3dadd( 161.732, -249.605, -13.0679, 0.48 ) }
    dend_10 { pt3dadd( 162.171, -250.166, -12.8356, 0.84 ) }
    dend_10 { pt3dadd( 162.447, -250.507, -12.6557, 0.84 ) }
    dend_10 { pt3dadd( 162.774, -250.885, -12.4124, 0.12 ) }
    dend_10 { pt3dadd( 163.235, -251.385, -12.0544, 0.12 ) }
    dend_10 { pt3dadd( 163.318, -251.464, -11.9863, 0.36 ) }
    dend_10 { pt3dadd( 164.201, -252.214, -11.0475, 0.12 ) }
    dend_10 { pt3dadd( 164.412, -252.403, -10.7617, 0.12 ) }
    dend_10 { pt3dadd( 164.819, -252.776, -10.1604, 0.12 ) }
    dend_10 { pt3dadd( 164.819, -252.776, -10.1604, 0.36 ) }
    dend_10 { pt3dadd( 165.361, -253.251, -9.17023, 0.12 ) }
    dend_10 { pt3dadd( 165.548, -253.434, -8.84937, 0.12 ) }
    dend_10 { pt3dadd( 165.721, -253.636, -8.54722, 0.72 ) }
    dend_10 { pt3dadd( 165.951, -253.965, -8.1042, 0.84 ) }
    dend_10 { pt3dadd( 166.659, -255.222, -6.64277, 0.6 ) }
    dend_10 { pt3dadd( 166.822, -255.536, -6.31721, 0.12 ) }
    dend_10 { pt3dadd( 167.085, -256.042, -5.87561, 0.12 ) }
    dend_10 { pt3dadd( 167.424, -256.62, -5.38517, 0.12 ) }
    dend_10 { pt3dadd( 167.785, -257.185, -4.94977, 0.12 ) }
    dend_10 { pt3dadd( 168.051, -257.583, -4.70479, 0.12 ) }
    dend_10 { pt3dadd( 168.051, -257.583, -4.70479, 0.6 ) }
    dend_10 { pt3dadd( 168.511, -258.234, -4.40626, 0.6 ) }
    dend_10 { pt3dadd( 169.017, -258.946, -4.093, 0.48 ) }
    dend_10 { pt3dadd( 169.387, -259.449, -3.89056, 0.48 ) }
    dend_10 { pt3dadd( 169.888, -260.134, -3.61708, 0.48 ) }
    dend_10 { pt3dadd( 170.31, -260.741, -3.39779, 0.24 ) }
    dend_10 { pt3dadd( 170.733, -261.398, -3.19212, 0.24 ) }
    dend_10 { pt3dadd( 170.94, -261.724, -3.05589, 0.6 ) }
    dend_10 { pt3dadd( 171.227, -262.161, -2.84514, 0.72 ) }
    dend_10 { pt3dadd( 171.606, -262.697, -2.55965, 0.72 ) }
    dend_10 { pt3dadd( 171.902, -263.078, -2.35018, 0.12 ) }
    dend_10 { pt3dadd( 172.262, -263.495, -2.12403, 0.12 ) }
    dend_10 { pt3dadd( 173.613, -264.9, -1.31784, 0.12 ) }
    dend_10 { pt3dadd( 174.014, -265.282, -1.09526, 0.96 ) }
    dend_10 { pt3dadd( 174.393, -265.624, -0.909699, 0.12 ) }
    dend_10 { pt3dadd( 174.96, -266.095, -0.68652, 0.12 ) }
    dend_10 { pt3dadd( 175.188, -266.273, -0.613592, 0.12 ) }
    dend_10 { pt3dadd( 175.497, -266.497, -0.547046, 0.6 ) }
    dend_10 { pt3dadd( 175.842, -266.739, -0.505045, 0.6 ) }
    dend_10 { pt3dadd( 176.386, -267.082, -0.381241, 0.48 ) }
    dend_10 { pt3dadd( 176.791, -267.317, -0.25638, 0.48 ) }
    dend_10 { pt3dadd( 177.413, -267.657, -0.0450826, 0.72 ) }
    dend_10 { pt3dadd( 177.947, -267.937, 0.136643, 0.36 ) }
    dend_10 { pt3dadd( 178.523, -268.232, 0.331095, 0.12 ) }
    dend_10 { pt3dadd( 179.187, -268.561, 0.588117, 0.12 ) }
    dend_10 { pt3dadd( 179.435, -268.682, 0.693448, 0.48 ) }
    dend_10 { pt3dadd( 179.838, -268.895, 0.857332, 0.6 ) }
    dend_10 { pt3dadd( 180.431, -269.248, 1.07455, 0.72 ) }
    dend_10 { pt3dadd( 180.732, -269.444, 1.19633, 0.72 ) }
    dend_10 { pt3dadd( 181.543, -269.984, 1.55365, 0.12 ) }
    dend_10 { pt3dadd( 181.739, -270.118, 1.6528, 0.12 ) }
    dend_10 { pt3dadd( 182.327, -270.502, 1.99552, 0.12 ) }
    dend_10 { pt3dadd( 182.629, -270.692, 2.18328, 0.12 ) }
    dend_10 { pt3dadd( 183.269, -271.081, 2.61566, 0.48 ) }
    dend_10 { pt3dadd( 183.571, -271.258, 2.81498, 0.48 ) }
    dend_10 { pt3dadd( 183.9, -271.439, 3.00572, 0.96 ) }
    dend_10 { pt3dadd( 184.696, -271.833, 3.4415, 0.48 ) }
    dend_10 { pt3dadd( 185.099, -272.011, 3.64407, 0.48 ) }
    dend_10 { pt3dadd( 185.692, -272.247, 3.89337, 0.48 ) }
    dend_10 { pt3dadd( 186.112, -272.378, 4.07795, 0.48 ) }
    dend_10 { pt3dadd( 186.505, -272.442, 4.29922, 0.12 ) }
    dend_10 { pt3dadd( 186.621, -272.441, 4.36797, 0.12 ) }
    dend_10 { pt3dadd( 186.991, -272.386, 4.57772, 0.72 ) }
    dend_10 { pt3dadd( 187.36, -272.306, 4.78054, 0.72 ) }
    dend_10 { pt3dadd( 188.741, -271.991, 5.45043, 0.12 ) }
    dend_10 { pt3dadd( 189.454, -271.833, 5.76141, 0.12 ) }
    dend_10 { pt3dadd( 190.33, -271.665, 6.109, 0.12 ) }
    dend_10 { pt3dadd( 190.61, -271.617, 6.21447, 0.12 ) }
    dend_10 { pt3dadd( 191.066, -271.539, 6.37767, 0.48 ) }
    dend_10 { pt3dadd( 191.813, -271.413, 6.60206, 0.48 ) }
    dend_10 { pt3dadd( 192.642, -271.281, 6.77766, 0.72 ) }
    dend_10 { pt3dadd( 193.215, -271.191, 6.89224, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 194.481, -270.974, 7.18402, 0.36 ) }
    dend_10 { pt3dadd( 195.276, -270.852, 7.37297, 0.12 ) }
    dend_10 { pt3dadd( 195.979, -270.765, 7.54826, 0.24 ) }
    dend_10 { pt3dadd( 196.636, -270.715, 7.70559, 0.24 ) }
    dend_10 { pt3dadd( 197.233, -270.722, 7.80854, 0.24 ) }
    dend_10 { pt3dadd( 197.766, -270.764, 7.85847, 0.72 ) }
    dend_10 { pt3dadd( 198.544, -270.888, 7.83942, 0.72 ) }
    dend_10 { pt3dadd( 199.151, -271.02, 7.7423, 0.72 ) }
    dend_10 { pt3dadd( 199.988, -271.22, 7.5293, 0.36 ) }
    dend_10 { pt3dadd( 200.778, -271.371, 7.24925, 0.48 ) }
    dend_10 { pt3dadd( 201.284, -271.423, 7.01964, 0.6 ) }
    dend_10 { pt3dadd( 201.988, -271.433, 6.6346, 0.6 ) }
    dend_10 { pt3dadd( 203.021, -271.363, 5.93955, 0.12 ) }
    dend_10 { pt3dadd( 203.348, -271.323, 5.68855, 0.12 ) }
    dend_10 { pt3dadd( 203.913, -271.248, 5.22647, 0.12 ) }
    dend_10 { pt3dadd( 204.392, -271.198, 4.85159, 0.48 ) }
    dend_10 { pt3dadd( 204.544, -271.2, 4.73438, 0.48 ) }
    dend_10 { pt3dadd( 205.227, -271.328, 4.26278, 0.12 ) }
    dend_10 { pt3dadd( 205.458, -271.434, 4.09949, 0.12 ) }
    dend_10 { pt3dadd( 205.901, -271.679, 3.77054, 0.12 ) }
    dend_10 { pt3dadd( 206.181, -271.85, 3.57311, 0.48 ) }
    dend_10 { pt3dadd( 206.578, -272.065, 3.28228, 0.48 ) }
    dend_10 { pt3dadd( 206.99, -272.212, 2.96188, 0.12 ) }
    dend_10 { pt3dadd( 207.636, -272.309, 2.45166, 0.6 ) }
    dend_10 { pt3dadd( 208.206, -272.325, 1.99653, 0.72 ) }
    dend_10 { pt3dadd( 208.546, -272.301, 1.73601, 0.72 ) }
    dend_10 { pt3dadd( 209.215, -272.229, 1.2444, 0.72 ) }
    dend_10 { pt3dadd( 210.066, -272.12, 0.686294, 0.12 ) }
    dend_10 { pt3dadd( 210.398, -272.073, 0.500653, 0.12 ) }
    dend_10 { pt3dadd( 210.916, -272.005, 0.244391, 0.12 ) }
    dend_10 { pt3dadd( 211.3, -271.96, 0.0662904, 0.12 ) }
    dend_10 { pt3dadd( 211.806, -271.897, -0.138795, 0.6 ) }
    dend_10 { pt3dadd( 212.704, -271.785, -0.423197, 0.6 ) }
    dend_10 { pt3dadd( 213.401, -271.671, -0.605171, 0.72 ) }
    dend_10 { pt3dadd( 213.868, -271.573, -0.718826, 0.12 ) }
    dend_10 { pt3dadd( 214.397, -271.437, -0.833144, 0.12 ) }
    dend_10 { pt3dadd( 214.929, -271.298, -0.92919, 0.6 ) }
    dend_10 { pt3dadd( 215.467, -271.169, -1.00461, 0.6 ) }
    dend_10 { pt3dadd( 216.016, -271.082, -1.06565, 0.84 ) }
    dend_10 { pt3dadd( 217.107, -271.029, -1.07646, 0.84 ) }
    dend_10 { pt3dadd( 217.919, -271.076, -1.01196, 0.36 ) }
    dend_10 { pt3dadd( 218.596, -271.196, -0.880245, 0.36 ) }
    dend_10 { pt3dadd( 219.048, -271.322, -0.749976, 0.36 ) }
    dend_10 { pt3dadd( 219.806, -271.604, -0.475763, 0.36 ) }
    dend_10 { pt3dadd( 220.961, -272.139, -4.07695E-4, 0.72 ) }
    dend_10 { pt3dadd( 221.359, -272.355, 0.172704, 0.72 ) }
    dend_10 { pt3dadd( 222.208, -272.835, 0.528568, 0.36 ) }
    dend_10 { pt3dadd( 222.669, -273.091, 0.69841, 0.36 ) }
    dend_10 { pt3dadd( 223.187, -273.361, 0.837001, 0.36 ) }
    dend_10 { pt3dadd( 223.584, -273.56, 0.891743, 0.48 ) }
    dend_10 { pt3dadd( 224.045, -273.797, 0.883716, 0.24 ) }
    dend_10 { pt3dadd( 224.395, -273.996, 0.865006, 0.24 ) }
    dend_10 { pt3dadd( 224.847, -274.318, 0.783437, 0.6 ) }
    dend_10 { pt3dadd( 225.42, -274.798, 0.65943, 0.6 ) }
    dend_10 { pt3dadd( 225.734, -275.073, 0.588176, 0.6 ) }
    dend_10 { pt3dadd( 226.373, -275.616, 0.447179, 0.96 ) }
    dend_10 { pt3dadd( 226.832, -275.988, 0.345312, 0.96 ) }
    dend_10 { pt3dadd( 227.755, -276.657, 0.076483, 0.36 ) }
    dend_10 { pt3dadd( 228.159, -276.894, -0.0628915, 0.36 ) }
    dend_10 { pt3dadd( 228.754, -277.162, -0.281953, 0.36 ) }
    dend_10 { pt3dadd( 229.187, -277.303, -0.435433, 0.36 ) }
    dend_10 { pt3dadd( 229.586, -277.394, -0.561033, 0.72 ) }
    dend_10 { pt3dadd( 230.336, -277.511, -0.748079, 0.36 ) }
    dend_10 { pt3dadd( 230.929, -277.565, -0.82567, 0.36 ) }
    dend_10 { pt3dadd( 231.529, -277.623, -0.872776, 0.36 ) }
    dend_10 { pt3dadd( 232.084, -277.687, -0.888097, 0.36 ) }
    dend_10 { pt3dadd( 232.807, -277.778, -0.878164, 0.48 ) }
    dend_10 { pt3dadd( 233.491, -277.855, -0.844419, 0.48 ) }
    dend_10 { pt3dadd( 234.337, -277.935, -0.7889, 0.36 ) }
    dend_10 { pt3dadd( 234.941, -277.976, -0.761998, 0.36 ) }
    dend_10 { pt3dadd( 235.641, -278.006, -0.748771, 0.36 ) }
    dend_10 { pt3dadd( 236.318, -278.028, -0.755211, 0.36 ) }
    dend_10 { pt3dadd( 236.724, -278.04, -0.773612, 0.36 ) }
    dend_10 { pt3dadd( 237.363, -278.058, -0.830581, 0.24 ) }
    dend_10 { pt3dadd( 237.765, -278.069, -0.88653, 0.24 ) }
    dend_10 { pt3dadd( 238.302, -278.072, -0.960021, 0.36 ) }
    dend_10 { pt3dadd( 238.722, -278.071, -1.02663, 0.36 ) }
    dend_10 { pt3dadd( 239.273, -278.069, -1.11905, 0.12 ) }
    dend_10 { pt3dadd( 239.695, -278.083, -1.18583, 0.72 ) }
    dend_10 { pt3dadd( 240.365, -278.141, -1.26302, 1.2 ) }
    dend_10 { pt3dadd( 240.915, -278.227, -1.31208, 1.2 ) }
    dend_10 { pt3dadd( 242.041, -278.467, -1.40615, 0.36 ) }
    dend_10 { pt3dadd( 242.302, -278.531, -1.42668, 0.36 ) }
    dend_10 { pt3dadd( 243.226, -278.797, -1.48926, 0.36 ) }
    dend_10 { pt3dadd( 243.928, -279.055, -1.52378, 0.84 ) }
    dend_10 { pt3dadd( 244.63, -279.392, -1.53805, 0.48 ) }
    dend_10 { pt3dadd( 245.156, -279.694, -1.5329, 0.36 ) }
    dend_10 { pt3dadd( 245.716, -280.06, -1.49245, 0.24 ) }
    dend_10 { pt3dadd( 246.182, -280.382, -1.44908, 0.24 ) }
    dend_10 { pt3dadd( 246.76, -280.793, -1.38772, 0.24 ) }
    dend_10 { pt3dadd( 247.578, -281.397, -1.31755, 0.24 ) }
    dend_10 { pt3dadd( 247.957, -281.694, -1.27989, 0.6 ) }
    dend_10 { pt3dadd( 248.345, -282.003, -1.23793, 0.48 ) }
    dend_10 { pt3dadd( 248.579, -282.188, -1.21615, 0.36 ) }
    dend_10 { pt3dadd( 249.365, -282.749, -1.17666, 0.36 ) }
    dend_10 { pt3dadd( 249.867, -283.046, -1.17756, 0.12 ) }
    dend_10 { pt3dadd( 250.378, -283.281, -1.20621, 0.12 ) }
    dend_10 { pt3dadd( 250.936, -283.502, -1.25852, 0.12 ) }
    dend_10 { pt3dadd( 251.117, -283.562, -1.26984, 0.48 ) }
    dend_10 { pt3dadd( 251.418, -283.646, -1.27002, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 251.841, -283.756, -1.24015, 0.12 ) }
    dend_10 { pt3dadd( 252.622, -283.983, -1.12839, 0.72 ) }
    dend_10 { pt3dadd( 253.028, -284.097, -1.06043, 0.72 ) }
    dend_10 { pt3dadd( 253.919, -284.349, -0.900138, 0.24 ) }
    dend_10 { pt3dadd( 254.373, -284.486, -0.794561, 0.24 ) }
    dend_10 { pt3dadd( 254.751, -284.624, -0.689267, 0.24 ) }
    dend_10 { pt3dadd( 255.115, -284.792, -0.545941, 0.24 ) }
    dend_10 { pt3dadd( 255.702, -285.102, -0.259108, 0.24 ) }
    dend_10 { pt3dadd( 255.923, -285.23, -0.144551, 0.24 ) }
    dend_10 { pt3dadd( 256.839, -285.779, 0.305155, 0.24 ) }
    dend_10 { pt3dadd( 257.315, -286.056, 0.519314, 0.96 ) }
    dend_10 { pt3dadd( 258.244, -286.58, 0.902192, 0.48 ) }
    dend_10 { pt3dadd( 258.839, -286.909, 1.11265, 0.36 ) }
    dend_10 { pt3dadd( 259.3, -287.17, 1.24435, 0.6 ) }
    dend_10 { pt3dadd( 259.985, -287.519, 1.39871, 0.84 ) }
    dend_10 { pt3dadd( 260.547, -287.769, 1.47484, 0.12 ) }
    dend_10 { pt3dadd( 260.802, -287.856, 1.49453, 0.12 ) }
    dend_10 { pt3dadd( 261.63, -288.068, 1.50515, 0.12 ) }
    dend_10 { pt3dadd( 262.396, -288.228, 1.51622, 0.96 ) }
    dend_10 { pt3dadd( 263.296, -288.383, 1.54697, 0.12 ) }
    dend_10 { pt3dadd( 263.778, -288.451, 1.56921, 0.12 ) }
    dend_10 { pt3dadd( 264.5, -288.522, 1.64537, 0.12 ) }
    dend_10 { pt3dadd( 264.8, -288.533, 1.68045, 0.12 ) }
    dend_10 { pt3dadd( 265.101, -288.515, 1.71486, 0.12 ) }
    dend_10 { pt3dadd( 265.821, -288.429, 1.78897, 0.48 ) }
    dend_10 { pt3dadd( 266.396, -288.355, 1.82191, 0.48 ) }
    dend_10 { pt3dadd( 267.311, -288.27, 1.87569, 0.12 ) }
    dend_10 { pt3dadd( 267.798, -288.255, 1.90512, 0.12 ) }
    dend_10 { pt3dadd( 268.356, -288.254, 1.92975, 0.12 ) }
    dend_10 { pt3dadd( 268.851, -288.264, 1.93102, 0.36 ) }
    dend_10 { pt3dadd( 269.287, -288.296, 1.90894, 0.12 ) }
    dend_10 { pt3dadd( 269.767, -288.367, 1.85938, 0.12 ) }
    dend_10 { pt3dadd( 270.029, -288.418, 1.81463, 0.12 ) }
    dend_10 { pt3dadd( 270.552, -288.522, 1.72775, 0.6 ) }
    dend_10 { pt3dadd( 270.93, -288.559, 1.66729, 0.12 ) }
    dend_10 { pt3dadd( 271.6, -288.55, 1.56438, 0.12 ) }
    dend_10 { pt3dadd( 272.28, -288.491, 1.46259, 0.12 ) }
    dend_10 { pt3dadd( 272.545, -288.449, 1.41956, 0.36 ) }
    dend_10 { pt3dadd( 272.806, -288.395, 1.37564, 0.24 ) }
    dend_10 { pt3dadd( 273.909, -288.119, 1.15781, 0.24 ) }
    dend_10 { pt3dadd( 274.316, -288.015, 1.07632, 0.48 ) }
    dend_10 { pt3dadd( 274.617, -287.932, 1.01162, 0.12 ) }
    dend_10 { pt3dadd( 275.085, -287.799, 0.906446, 0.12 ) }
    dend_10 { pt3dadd( 275.487, -287.686, 0.813934, 0.36 ) }
    dend_10 { pt3dadd( 275.938, -287.566, 0.708346, 0.12 ) }
    dend_10 { pt3dadd( 278.383, -286.994, 0.131027, 0.12 ) }
    dend_10 { pt3dadd( 278.741, -286.915, 0.0497415, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.3641, -8.52336, -9.00091, 0.36 ) }
    dend_7 { pt3dadd( 17.0692, -8.18584, -9.01386, 0.36 ) }
    dend_7 { pt3dadd( 17.6537, -7.9205, -8.99947, 0.36 ) }
    dend_7 { pt3dadd( 18.0937, -7.70997, -8.98433, 0.48 ) }
    dend_7 { pt3dadd( 18.5493, -7.47023, -8.97305, 0.48 ) }
    dend_7 { pt3dadd( 19.2452, -7.00658, -8.91456, 0.12 ) }
    dend_7 { pt3dadd( 19.7764, -6.56352, -8.86375, 0.12 ) }
    dend_7 { pt3dadd( 19.962, -6.35012, -8.82921, 0.48 ) }
    dend_7 { pt3dadd( 20.2437, -5.90124, -8.7774, 0.48 ) }
    dend_7 { pt3dadd( 20.4387, -5.47318, -8.74503, 0.24 ) }
    dend_7 { pt3dadd( 20.8181, -4.41273, -8.6869, 0.36 ) }
    dend_7 { pt3dadd( 21.0877, -3.48668, -8.67069, 0.36 ) }
    dend_7 { pt3dadd( 21.3115, -2.5519, -8.6595, 0.6 ) }
    dend_7 { pt3dadd( 21.475, -1.79531, -8.65612, 1.08 ) }
    dend_7 { pt3dadd( 21.6677, -0.824036, -8.65513, 0.84 ) }
    dend_7 { pt3dadd( 21.798, -0.132534, -8.66193, 0.48 ) }
    dend_7 { pt3dadd( 21.9598, 0.73404, -8.70042, 0.96 ) }
    dend_7 { pt3dadd( 22.0437, 1.20469, -8.71366, 1.08 ) }
    dend_7 { pt3dadd( 22.1916, 1.91716, -8.73591, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.2707, -1.8329, 6.88518, 0.48 ) }
    dend_5 { pt3dadd( -11.9555, -1.16393, 6.49576, 0.48 ) }
    dend_5 { pt3dadd( -12.4163, -0.731989, 6.28999, 0.24 ) }
    dend_5 { pt3dadd( -12.9278, -0.314045, 6.11056, 0.24 ) }
    dend_5 { pt3dadd( -13.5418, 0.106906, 5.93837, 0.72 ) }
    dend_5 { pt3dadd( -13.9094, 0.322843, 5.85381, 0.96 ) }
    dend_5 { pt3dadd( -14.7863, 0.75325, 5.68602, 0.48 ) }
    dend_5 { pt3dadd( -15.5619, 1.00553, 5.61215, 0.36 ) }
    dend_5 { pt3dadd( -16.1785, 1.12337, 5.58372, 0.36 ) }
    dend_5 { pt3dadd( -16.9649, 1.17305, 5.55631, 0.6 ) }
    dend_5 { pt3dadd( -17.3931, 1.16717, 5.53831, 0.36 ) }
    dend_5 { pt3dadd( -18.0141, 1.13638, 5.52451, 0.48 ) }
    dend_5 { pt3dadd( -18.8688, 1.08664, 5.56054, 0.72 ) }
    dend_5 { pt3dadd( -19.5909, 1.0382, 5.61521, 1.08 ) }
    dend_5 { pt3dadd( -20.3376, 0.98898, 5.71451, 0.96 ) }
    dend_5 { pt3dadd( -20.979, 0.930305, 5.8386, 0.96 ) }
    dend_5 { pt3dadd( -21.6415, 0.854381, 6.02316, 0.72 ) }
    dend_5 { pt3dadd( -22.614, 0.699881, 6.42354, 0.6 ) }
    dend_5 { pt3dadd( -23.363, 0.472352, 6.91477, 0.36 ) }
    dend_5 { pt3dadd( -23.5621, 0.360185, 7.14411, 0.36 ) }
    dend_5 { pt3dadd( -23.8663, 0.0899112, 7.65223, 0.36 ) }
    dend_5 { pt3dadd( -24.2457, -0.302062, 8.39374, 0.48 ) }
    dend_5 { pt3dadd( -24.483, -0.54681, 8.8659, 0.48 ) }
    dend_5 { pt3dadd( -24.8178, -0.822143, 9.39896, 0.48 ) }
    dend_5 { pt3dadd( -25.3169, -1.00176, 9.92696, 0.48 ) }
    dend_5 { pt3dadd( -25.9042, -1.09138, 10.3563, 0.48 ) }
    dend_5 { pt3dadd( -26.7033, -1.16062, 10.8166, 0.48 ) }
    dend_5 { pt3dadd( -27.1818, -1.20889, 11.0197, 0.24 ) }
    dend_5 { pt3dadd( -27.622, -1.26058, 11.1692, 0.24 ) }
    dend_5 { pt3dadd( -28.1593, -1.30604, 11.3381, 0.6 ) }
    dend_5 { pt3dadd( -28.7414, -1.35289, 11.4951, 0.6 ) }
    dend_5 { pt3dadd( -29.3249, -1.34133, 11.6343, 0.72 ) }
    dend_5 { pt3dadd( -30.0849, -1.2124, 11.7412, 0.12 ) }
    dend_5 { pt3dadd( -30.4639, -1.05562, 11.8152, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( -31.2452, -0.635851, 11.9945, 0.12 ) }
    dend_5 { pt3dadd( -31.7667, -0.308042, 12.1179, 0.48 ) }
    dend_5 { pt3dadd( -32.5715, 0.250491, 12.3383, 0.6 ) }
    dend_5 { pt3dadd( -32.9819, 0.529957, 12.4652, 0.6 ) }
    dend_5 { pt3dadd( -33.9637, 1.07307, 12.8698, 0.36 ) }
    dend_5 { pt3dadd( -34.4536, 1.2172, 13.1442, 0.36 ) }
    dend_5 { pt3dadd( -34.7111, 1.21867, 13.3188, 0.36 ) }
    dend_5 { pt3dadd( -35.0078, 1.17862, 13.5425, 0.36 ) }
    dend_5 { pt3dadd( -35.44, 1.0984, 13.8916, 0.6 ) }
    dend_5 { pt3dadd( -36.1722, 0.990867, 14.4639, 0.84 ) }
    dend_5 { pt3dadd( -37.1175, 0.910785, 15.1436, 0.6 ) }
    dend_5 { pt3dadd( -37.7909, 0.90568, 15.6303, 0.48 ) }
    dend_5 { pt3dadd( -38.1305, 0.919857, 15.8757, 0.48 ) }
    dend_5 { pt3dadd( -38.6251, 0.967907, 16.2337, 0.36 ) }
    dend_5 { pt3dadd( -39.0503, 1.03907, 16.5398, 0.36 ) }
    dend_5 { pt3dadd( -39.5151, 1.14189, 16.8358, 0.48 ) }
    dend_5 { pt3dadd( -40.0805, 1.29648, 17.0845, 0.72 ) }
    dend_5 { pt3dadd( -40.1706, 1.33168, 17.1208, 0.72 ) }
    dend_5 { pt3dadd( -40.7562, 1.59654, 17.3244, 0.72 ) }
    dend_5 { pt3dadd( -41.1476, 1.80112, 17.4593, 0.48 ) }
    dend_5 { pt3dadd( -41.66, 2.08786, 17.6176, 0.48 ) }
    dend_5 { pt3dadd( -42.2427, 2.4321, 17.7695, 0.6 ) }
    dend_5 { pt3dadd( -43.3344, 3.01777, 18.0031, 0.24 ) }
    dend_5 { pt3dadd( -44.0029, 3.2995, 18.129, 0.24 ) }
    dend_5 { pt3dadd( -45.1536, 3.67087, 18.3179, 0.48 ) }
    dend_5 { pt3dadd( -45.8715, 3.83243, 18.4229, 0.36 ) }
    dend_5 { pt3dadd( -46.1762, 3.87942, 18.4587, 0.36 ) }
    dend_5 { pt3dadd( -47.3131, 3.94313, 18.5699, 0.36 ) }
    dend_5 { pt3dadd( -48.3754, 3.85593, 18.6317, 0.36 ) }
    dend_5 { pt3dadd( -48.7809, 3.77305, 18.6596, 0.36 ) }
    dend_5 { pt3dadd( -49.2841, 3.61293, 18.6868, 0.36 ) }
    dend_5 { pt3dadd( -49.9799, 3.34715, 18.7484, 0.36 ) }
    dend_5 { pt3dadd( -50.5508, 3.10939, 18.8116, 0.24 ) }
    dend_5 { pt3dadd( -50.9535, 2.91296, 18.8714, 0.24 ) }
    dend_5 { pt3dadd( -51.3932, 2.6298, 18.9595, 0.24 ) }
    dend_5 { pt3dadd( -51.7978, 2.33808, 19.0912, 0.24 ) }
    dend_5 { pt3dadd( -52.2104, 2.04533, 19.2477, 0.24 ) }
    dend_5 { pt3dadd( -52.4763, 1.88198, 19.3615, 0.24 ) }
    dend_5 { pt3dadd( -52.8345, 1.70593, 19.5285, 0.48 ) }
    dend_5 { pt3dadd( -53.7449, 1.28816, 19.9823, 0.36 ) }
    dend_5 { pt3dadd( -54.4665, 1.00211, 20.374, 0.24 ) }
    dend_5 { pt3dadd( -55.0898, 0.834853, 20.7643, 0.24 ) }
    dend_5 { pt3dadd( -55.7643, 0.673912, 21.2352, 0.48 ) }
    dend_5 { pt3dadd( -56.3287, 0.550543, 21.6558, 0.24 ) }
    dend_5 { pt3dadd( -56.8387, 0.438838, 22.0564, 0.24 ) }
    dend_5 { pt3dadd( -57.3815, 0.27822, 22.5052, 0.12 ) }
    dend_5 { pt3dadd( -58.4632, -0.284705, 23.4453, 1.68 ) }
    dend_5 { pt3dadd( -59.0074, -0.771433, 24.0132, 0.36 ) }
    dend_5 { pt3dadd( -59.1101, -0.907348, 24.1271, 0.36 ) }
    dend_5 { pt3dadd( -59.3929, -1.33933, 24.4107, 0.24 ) }
    dend_5 { pt3dadd( -59.8356, -2.09757, 24.8083, 0.24 ) }
    dend_5 { pt3dadd( -60.0026, -2.44838, 24.9461, 0.24 ) }
    dend_5 { pt3dadd( -60.2293, -2.99413, 25.1028, 0.24 ) }
    dend_5 { pt3dadd( -60.3985, -3.34993, 25.2091, 0.24 ) }
    dend_5 { pt3dadd( -60.7457, -3.98928, 25.3986, 0.24 ) }
    dend_5 { pt3dadd( -61.0547, -4.45949, 25.5353, 0.24 ) }
    dend_5 { pt3dadd( -61.5321, -5.09058, 25.7157, 0.24 ) }
    dend_5 { pt3dadd( -61.725, -5.32842, 25.7832, 0.24 ) }
    dend_5 { pt3dadd( -61.9239, -5.56526, 25.8506, 0.24 ) }
    dend_5 { pt3dadd( -62.2864, -6.07967, 26.0046, 0.24 ) }
    dend_5 { pt3dadd( -62.4865, -6.43118, 26.1151, 0.24 ) }
    dend_5 { pt3dadd( -62.9537, -7.02195, 26.2907, 0.24 ) }
    dend_5 { pt3dadd( -71.0362, -7.96366, 29.204, 0.24 ) }
    dend_5 { pt3dadd( -79.4076, -7.96107, 31.3417, 0.24 ) }
    dend_5 { pt3dadd( -87.5486, -7.42747, 34.182, 0.24 ) }
    dend_5 { pt3dadd( -95.6178, -6.78442, 37.1982, 0.24 ) }
    dend_5 { pt3dadd( -103.294, -6.76894, 41.1715, 0.24 ) }
    dend_5 { pt3dadd( -110.9, -6.04806, 45.2076, 0.24 ) }
    dend_5 { pt3dadd( -118.304, -6.33044, 49.6563, 0.24 ) }
    dend_5 { pt3dadd( -124.997, -6.69004, 55.1106, 0.24 ) }
    dend_5 { pt3dadd( -130.916, -6.01771, 61.3725, 0.24 ) }
    dend_5 { pt3dadd( -136.729, -6.91181, 67.6937, 0.24 ) }
    dend_5 { pt3dadd( -142.109, -9.57863, 73.8622, 0.24 ) }
    dend_5 { pt3dadd( -147.298, -11.7074, 80.4011, 0.24 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -11.2707, -1.8329, 6.88518, 0.12 ) }
    dend_4 { pt3dadd( -11.437, -5.9269, 1.61192, 0.12 ) }
    dend_4 { pt3dadd( -11.4834, -6.42322, 1.06172, 0.12 ) }
    dend_4 { pt3dadd( -11.5502, -6.825, 0.70225, 0.48 ) }
    dend_4 { pt3dadd( -11.6369, -7.14687, 0.500705, 0.48 ) }
    dend_4 { pt3dadd( -12.0096, -8.1386, 0.124423, 0.48 ) }
    dend_4 { pt3dadd( -12.2973, -8.74625, -0.0166949, 0.12 ) }
    dend_4 { pt3dadd( -12.8105, -9.38152, 0.275877, 0.6 ) }
    dend_4 { pt3dadd( -13.2042, -9.81084, 0.451423, 0.6 ) }
    dend_4 { pt3dadd( -13.7334, -10.3618, 0.642585, 0.6 ) }
    dend_4 { pt3dadd( -14.1493, -10.7989, 0.761971, 0.6 ) }
    dend_4 { pt3dadd( -14.6178, -11.3096, 0.853013, 0.24 ) }
    dend_4 { pt3dadd( -14.9882, -11.6998, 0.968582, 0.24 ) }
    dend_4 { pt3dadd( -15.2256, -11.9355, 1.06436, 0.24 ) }
    dend_4 { pt3dadd( -15.5351, -12.2217, 1.20338, 0.84 ) }
    dend_4 { pt3dadd( -15.8981, -12.5323, 1.37592, 0.96 ) }
    dend_4 { pt3dadd( -16.468, -12.9942, 1.64937, 0.96 ) }
    dend_4 { pt3dadd( -17.5958, -13.8751, 2.18436, 0.72 ) }
    dend_4 { pt3dadd( -18.1974, -14.3052, 2.43453, 0.6 ) }
    dend_4 { pt3dadd( -19.1729, -14.9369, 2.78134, 0.6 ) }
    dend_4 { pt3dadd( -19.4895, -15.1206, 2.87561, 0.6 ) }
    dend_4 { pt3dadd( -19.9779, -15.3674, 2.98765, 0.36 ) }
    dend_4 { pt3dadd( -20.6328, -15.6566, 3.08661, 0.36 ) }
    dend_4 { pt3dadd( -21.5743, -16.0275, 3.13301, 0.36 ) }
    dend_4 { pt3dadd( -22.1757, -16.2212, 3.16894, 0.36 ) }
    dend_4 { pt3dadd( -22.4446, -16.2879, 3.18684, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( -22.9849, -16.4072, 3.23286, 1.08 ) }
    dend_4 { pt3dadd( -23.3676, -16.4837, 3.27609, 1.08 ) }
    dend_4 { pt3dadd( -23.8649, -16.5826, 3.34592, 1.08 ) }
    dend_4 { pt3dadd( -24.634, -16.7664, 3.47629, 0.12 ) }
    dend_4 { pt3dadd( -25.0995, -16.9064, 3.57631, 0.12 ) }
    dend_4 { pt3dadd( -25.4268, -17.0295, 3.65364, 0.12 ) }
    dend_4 { pt3dadd( -25.7487, -17.1654, 3.74608, 0.12 ) }
    dend_4 { pt3dadd( -26.2004, -17.3631, 3.87983, 0.6 ) }
    dend_4 { pt3dadd( -26.8604, -17.6498, 4.06655, 0.6 ) }
    dend_4 { pt3dadd( -27.309, -17.8397, 4.18489, 0.72 ) }
    dend_4 { pt3dadd( -28.3514, -18.2572, 4.45625, 0.84 ) }
    dend_4 { pt3dadd( -29.2044, -18.5879, 4.66765, 0.48 ) }
    dend_4 { pt3dadd( -29.787, -18.7963, 4.7984, 0.48 ) }
    dend_4 { pt3dadd( -30.4884, -19.041, 4.94871, 0.48 ) }
    dend_4 { pt3dadd( -30.9675, -19.2103, 5.04335, 0.36 ) }
    dend_4 { pt3dadd( -31.3322, -19.3332, 5.10116, 0.36 ) }
    dend_4 { pt3dadd( -32.0154, -19.5478, 5.20448, 0.36 ) }
    dend_4 { pt3dadd( -32.7575, -19.7519, 5.35882, 0.36 ) }
    dend_4 { pt3dadd( -33.7421, -19.9844, 5.62556, 0.36 ) }
    dend_4 { pt3dadd( -34.3813, -20.1153, 5.81024, 0.36 ) }
    dend_4 { pt3dadd( -34.9859, -20.2248, 5.9624, 0.36 ) }
    dend_4 { pt3dadd( -35.6324, -20.3123, 6.10033, 0.36 ) }
    dend_4 { pt3dadd( -36.9606, -20.4271, 6.32819, 0.48 ) }
    dend_4 { pt3dadd( -37.6998, -20.4726, 6.40773, 0.72 ) }
    dend_4 { pt3dadd( -38.3995, -20.4987, 6.40467, 0.72 ) }
    dend_4 { pt3dadd( -39.3302, -20.5751, 6.29224, 0.36 ) }
    dend_4 { pt3dadd( -39.8317, -20.6541, 6.18267, 0.36 ) }
    dend_4 { pt3dadd( -40.1962, -20.7526, 6.07515, 0.36 ) }
    dend_4 { pt3dadd( -40.6314, -20.9198, 5.93103, 0.6 ) }
    dend_4 { pt3dadd( -41.4084, -21.2981, 5.72135, 0.72 ) }
    dend_4 { pt3dadd( -42.3906, -21.8366, 5.58548, 0.72 ) }
    dend_4 { pt3dadd( -43.053, -22.2025, 5.60278, 0.36 ) }
    dend_4 { pt3dadd( -43.8675, -22.5599, 5.77143, 0.36 ) }
    dend_4 { pt3dadd( -44.409, -22.7427, 5.99526, 0.36 ) }
    dend_4 { pt3dadd( -44.8684, -22.8577, 6.28395, 0.36 ) }
    dend_4 { pt3dadd( -45.5925, -22.9849, 6.8921, 0.48 ) }
    dend_4 { pt3dadd( -46.4243, -23.0873, 7.67056, 0.48 ) }
    dend_4 { pt3dadd( -47.9427, -23.1233, 9.28684, 0.48 ) }
    dend_4 { pt3dadd( -48.5567, -23.0879, 9.9491, 0.48 ) }
    dend_4 { pt3dadd( -48.9318, -23.072, 10.3455, 0.48 ) }
    dend_4 { pt3dadd( -49.3578, -23.0586, 10.7966, 0.48 ) }
    dend_4 { pt3dadd( -50.0347, -23.0983, 11.4666, 0.48 ) }
    dend_4 { pt3dadd( -51.5777, -23.3942, 12.9046, 0.48 ) }
    dend_4 { pt3dadd( -51.9782, -23.5317, 13.2163, 0.48 ) }
    dend_4 { pt3dadd( -52.464, -23.5878, 13.5982, 0.48 ) }
    dend_4 { pt3dadd( -61.7081, -26.9616, 16.744, 0.48 ) }
    dend_4 { pt3dadd( -70.849, -30.01, 20.4734, 0.48 ) }
    dend_4 { pt3dadd( -80.6237, -32.4411, 22.8227, 0.48 ) }
    dend_4 { pt3dadd( -90.664, -34.7663, 23.7297, 0.48 ) }
    dend_4 { pt3dadd( -100.467, -38.0643, 23.727, 0.48 ) }
    dend_4 { pt3dadd( -109.899, -42.1705, 24.6902, 0.48 ) }
    dend_4 { pt3dadd( -118.679, -47.3129, 26.3628, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -18.4513, 32.1346, -17.7471, 0.12 ) }
    dend_2 { pt3dadd( -19.8833, 32.4945, -17.908, 0.12 ) }
    dend_2 { pt3dadd( -20.9618, 32.7167, -18.2043, 0.12 ) }
    dend_2 { pt3dadd( -21.2563, 32.7735, -18.2971, 0.12 ) }
    dend_2 { pt3dadd( -21.7676, 32.8489, -18.4542, 0.6 ) }
    dend_2 { pt3dadd( -22.3658, 32.9219, -18.6312, 0.84 ) }
    dend_2 { pt3dadd( -22.7153, 32.9559, -18.7295, 0.84 ) }
    dend_2 { pt3dadd( -23.5163, 32.9968, -19.0598, 0.12 ) }
    dend_2 { pt3dadd( -24.0496, 32.99, -19.2579, 0.12 ) }
    dend_2 { pt3dadd( -24.6489, 32.9761, -19.5012, 0.12 ) }
    dend_2 { pt3dadd( -24.8933, 32.9874, -19.6071, 0.96 ) }
    dend_2 { pt3dadd( -25.2221, 33.0232, -19.7605, 0.96 ) }
    dend_2 { pt3dadd( -26.1551, 33.1497, -20.2014, 0.24 ) }
    dend_2 { pt3dadd( -26.7244, 33.2115, -20.4596, 0.24 ) }
    dend_2 { pt3dadd( -26.9971, 33.2285, -20.6149, 0.24 ) }
    dend_2 { pt3dadd( -27.7074, 33.2498, -21.0684, 0.6 ) }
    dend_2 { pt3dadd( -28.0777, 33.2381, -21.3268, 0.24 ) }
    dend_2 { pt3dadd( -28.2948, 33.2271, -21.481, 0.24 ) }
    dend_2 { pt3dadd( -28.8093, 33.1681, -21.8119, 0.24 ) }
    dend_2 { pt3dadd( -29.3669, 33.0507, -22.1893, 0.84 ) }
    dend_2 { pt3dadd( -29.7297, 32.9456, -22.4278, 0.84 ) }
    dend_2 { pt3dadd( -30.3157, 32.7771, -22.7673, 0.24 ) }
    dend_2 { pt3dadd( -30.5999, 32.7325, -22.8933, 0.24 ) }
    dend_2 { pt3dadd( -30.8601, 32.7158, -22.9982, 0.24 ) }
    dend_2 { pt3dadd( -31.2118, 32.7123, -23.1187, 0.24 ) }
    dend_2 { pt3dadd( -31.3113, 32.709, -23.1447, 0.12 ) }
    dend_2 { pt3dadd( -31.8578, 32.6858, -23.2736, 0.12 ) }
    dend_2 { pt3dadd( -32.3746, 32.6645, -23.4304, 0.48 ) }
    dend_2 { pt3dadd( -32.8904, 32.6443, -23.6254, 0.12 ) }
    dend_2 { pt3dadd( -33.3063, 32.635, -23.805, 0.12 ) }
    dend_2 { pt3dadd( -33.7184, 32.6383, -23.9935, 0.48 ) }
    dend_2 { pt3dadd( -34.0101, 32.6439, -24.1258, 0.48 ) }
    dend_2 { pt3dadd( -34.9393, 32.6844, -24.5425, 0.12 ) }
    dend_2 { pt3dadd( -35.5049, 32.7326, -24.8118, 0.12 ) }
    dend_2 { pt3dadd( -35.6131, 32.7455, -24.8743, 0.12 ) }
    dend_2 { pt3dadd( -35.9988, 32.8098, -25.1616, 0.6 ) }
    dend_2 { pt3dadd( -36.4159, 32.8767, -25.4965, 0.6 ) }
    dend_2 { pt3dadd( -36.7245, 32.9169, -25.7435, 0.6 ) }
    dend_2 { pt3dadd( -37.2996, 32.987, -26.1756, 0.72 ) }
    dend_2 { pt3dadd( -38.1437, 33.0877, -26.8695, 0.36 ) }
    dend_2 { pt3dadd( -38.6564, 33.1545, -27.2906, 0.12 ) }
    dend_2 { pt3dadd( -39.1485, 33.2188, -27.7053, 0.12 ) }
    dend_2 { pt3dadd( -39.3657, 33.2477, -27.8811, 0.72 ) }
    dend_2 { pt3dadd( -39.6505, 33.2842, -28.1086, 0.84 ) }
    dend_2 { pt3dadd( -40.1338, 33.348, -28.4448, 0.12 ) }
    dend_2 { pt3dadd( -40.62, 33.4082, -28.7338, 0.12 ) }
    dend_2 { pt3dadd( -41.0661, 33.4575, -28.9874, 0.6 ) }
    dend_2 { pt3dadd( -41.3647, 33.4942, -29.1901, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -42.2649, 33.5845, -29.8048, 0.12 ) }
    dend_2 { pt3dadd( -42.6351, 33.6099, -30.0491, 0.12 ) }
    dend_2 { pt3dadd( -43.0708, 33.6413, -30.3547, 0.12 ) }
    dend_2 { pt3dadd( -43.2964, 33.6573, -30.5214, 0.48 ) }
    dend_2 { pt3dadd( -44.0999, 33.7352, -31.0919, 0.12 ) }
    dend_2 { pt3dadd( -44.7844, 33.8356, -31.6491, 0.12 ) }
    dend_2 { pt3dadd( -44.9924, 33.8747, -31.8191, 1.08 ) }
    dend_2 { pt3dadd( -45.8633, 34.0663, -32.5647, 0.12 ) }
    dend_2 { pt3dadd( -46.0678, 34.1178, -32.7501, 0.12 ) }
    dend_2 { pt3dadd( -46.4685, 34.2386, -33.091, 0.84 ) }
    dend_2 { pt3dadd( -47.5088, 34.5942, -33.8839, 0.12 ) }
    dend_2 { pt3dadd( -48.0474, 34.8072, -34.3027, 0.12 ) }
    dend_2 { pt3dadd( -48.3325, 34.9291, -34.4959, 0.36 ) }
    dend_2 { pt3dadd( -48.7511, 35.1179, -34.7224, 0.12 ) }
    dend_2 { pt3dadd( -49.5266, 35.5156, -35.1073, 0.12 ) }
    dend_2 { pt3dadd( -49.7702, 35.6667, -35.2462, 0.36 ) }
    dend_2 { pt3dadd( -50.0549, 35.897, -35.4126, 0.12 ) }
    dend_2 { pt3dadd( -50.5571, 36.4336, -35.7881, 0.12 ) }
    dend_2 { pt3dadd( -50.6987, 36.6045, -35.8994, 0.48 ) }
    dend_2 { pt3dadd( -50.846, 36.792, -36.0107, 0.48 ) }
    dend_2 { pt3dadd( -51.5995, 37.7783, -36.7094, 0.12 ) }
    dend_2 { pt3dadd( -52.0309, 38.3172, -37.119, 0.12 ) }
    dend_2 { pt3dadd( -52.4107, 38.7628, -37.4664, 0.12 ) }
    dend_2 { pt3dadd( -52.7608, 39.1348, -37.7661, 0.12 ) }
    dend_2 { pt3dadd( -53.1013, 39.4497, -38.0059, 0.6 ) }
    dend_2 { pt3dadd( -53.8451, 40.0262, -38.5076, 0.12 ) }
    dend_2 { pt3dadd( -54.0563, 40.161, -38.6312, 0.12 ) }
    dend_2 { pt3dadd( -54.3028, 40.2925, -38.785, 0.12 ) }
    dend_2 { pt3dadd( -54.7667, 40.516, -39.0808, 0.12 ) }
    dend_2 { pt3dadd( -55.1625, 40.6939, -39.3206, 0.48 ) }
    dend_2 { pt3dadd( -56.2623, 41.1402, -39.8848, 0.12 ) }
    dend_2 { pt3dadd( -56.5736, 41.2535, -40.0392, 0.12 ) }
    dend_2 { pt3dadd( -57.2563, 41.4622, -40.3851, 0.6 ) }
    dend_2 { pt3dadd( -57.5688, 41.5399, -40.5345, 0.12 ) }
    dend_2 { pt3dadd( -57.977, 41.6249, -40.7108, 0.12 ) }
    dend_2 { pt3dadd( -58.4856, 41.7177, -40.8907, 0.6 ) }
    dend_2 { pt3dadd( -59.5121, 41.8814, -41.1985, 0.12 ) }
    dend_2 { pt3dadd( -60.4391, 42.012, -41.4918, 0.12 ) }
    dend_2 { pt3dadd( -61.0348, 42.0872, -41.6834, 0.12 ) }
    dend_2 { pt3dadd( -61.4871, 42.1361, -41.8223, 0.12 ) }
    dend_2 { pt3dadd( -62.1088, 42.1965, -41.99, 0.12 ) }
    dend_2 { pt3dadd( -63.0364, 42.2856, -42.1917, 0.12 ) }
    dend_2 { pt3dadd( -63.6561, 42.3457, -42.2749, 0.12 ) }
    dend_2 { pt3dadd( -64.0248, 42.3837, -42.3204, 0.84 ) }
    dend_2 { pt3dadd( -64.5361, 42.4458, -42.3745, 1.2 ) }
    dend_2 { pt3dadd( -65.0309, 42.5276, -42.411, 0.12 ) }
    dend_2 { pt3dadd( -65.4991, 42.6352, -42.4261, 0.12 ) }
    dend_2 { pt3dadd( -66.1862, 42.8389, -42.4263, 0.12 ) }
    dend_2 { pt3dadd( -66.7949, 43.0519, -42.4373, 0.48 ) }
    dend_2 { pt3dadd( -67.086, 43.1661, -42.4542, 0.12 ) }
    dend_2 { pt3dadd( -67.7797, 43.4721, -42.5202, 0.12 ) }
    dend_2 { pt3dadd( -68.2487, 43.6787, -42.5798, 0.12 ) }
    dend_2 { pt3dadd( -68.7076, 43.8741, -42.6441, 0.48 ) }
    dend_2 { pt3dadd( -69.1723, 44.0677, -42.7393, 0.48 ) }
    dend_2 { pt3dadd( -69.5562, 44.2191, -42.8336, 0.12 ) }
    dend_2 { pt3dadd( -70.2696, 44.4833, -43.0551, 0.12 ) }
    dend_2 { pt3dadd( -70.8199, 44.682, -43.2798, 0.12 ) }
    dend_2 { pt3dadd( -71.2017, 44.8202, -43.4572, 0.48 ) }
    dend_2 { pt3dadd( -71.7663, 45.0199, -43.7308, 0.12 ) }
    dend_2 { pt3dadd( -72.3785, 45.2259, -44.0284, 0.12 ) }
    dend_2 { pt3dadd( -73.2262, 45.5153, -44.4266, 0.84 ) }
    dend_2 { pt3dadd( -73.8116, 45.7222, -44.7617, 0.12 ) }
    dend_2 { pt3dadd( -74.1084, 45.8432, -44.9516, 0.12 ) }
    dend_2 { pt3dadd( -74.5274, 46.0361, -45.2153, 0.12 ) }
    dend_2 { pt3dadd( -74.9907, 46.289, -45.5813, 0.12 ) }
    dend_2 { pt3dadd( -75.2469, 46.4384, -45.8115, 0.36 ) }
    dend_2 { pt3dadd( -75.9899, 46.9282, -46.5504, 0.12 ) }
    dend_2 { pt3dadd( -76.2534, 47.1314, -46.8544, 0.12 ) }
    dend_2 { pt3dadd( -76.5066, 47.3733, -47.2433, 0.48 ) }
    dend_2 { pt3dadd( -77.241, 48.3152, -48.8697, 0.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -18.4513, 32.1346, -17.7471, 0.12 ) }
    dend_1 { pt3dadd( -18.5325, 32.5796, -17.7535, 0.12 ) }
    dend_1 { pt3dadd( -18.654, 33.1933, -17.8049, 0.12 ) }
    dend_1 { pt3dadd( -18.7402, 33.6021, -17.8468, 0.72 ) }
    dend_1 { pt3dadd( -18.8112, 33.9436, -17.8868, 0.96 ) }
    dend_1 { pt3dadd( -18.8574, 34.1586, -17.9126, 0.96 ) }
    dend_1 { pt3dadd( -18.9869, 34.7815, -18.0279, 0.12 ) }
    dend_1 { pt3dadd( -19.1518, 35.5866, -18.2332, 0.12 ) }
    dend_1 { pt3dadd( -19.2058, 35.86, -18.3101, 0.48 ) }
    dend_1 { pt3dadd( -19.2905, 36.268, -18.427, 0.24 ) }
    dend_1 { pt3dadd( -19.4178, 36.8102, -18.5884, 0.24 ) }
    dend_1 { pt3dadd( -19.6144, 37.6142, -18.8163, 0.72 ) }
    dend_1 { pt3dadd( -19.7276, 38.0725, -18.927, 0.96 ) }
    dend_1 { pt3dadd( -19.8617, 38.6055, -19.059, 0.36 ) }
    dend_1 { pt3dadd( -19.9437, 38.9327, -19.1349, 0.36 ) }
    dend_1 { pt3dadd( -20.0551, 39.3675, -19.2197, 0.12 ) }
    dend_1 { pt3dadd( -20.1707, 39.7849, -19.2812, 0.12 ) }
    dend_1 { pt3dadd( -20.3392, 40.322, -19.323, 0.12 ) }
    dend_1 { pt3dadd( -20.42, 40.5589, -19.3427, 0.6 ) }
    dend_1 { pt3dadd( -20.5692, 40.9849, -19.3808, 0.12 ) }
    dend_1 { pt3dadd( -20.7056, 41.3813, -19.4112, 0.12 ) }
    dend_1 { pt3dadd( -20.8497, 41.8051, -19.4353, 0.48 ) }
    dend_1 { pt3dadd( -20.961, 42.0919, -19.4533, 0.96 ) }
    dend_1 { pt3dadd( -21.0818, 42.3806, -19.4707, 0.96 ) }
    dend_1 { pt3dadd( -21.2055, 42.6687, -19.485, 0.12 ) }
    dend_1 { pt3dadd( -21.4141, 43.1118, -19.5029, 0.12 ) }
    dend_1 { pt3dadd( -21.6281, 43.5486, -19.5231, 0.12 ) }
    dend_1 { pt3dadd( -21.7176, 43.7301, -19.5308, 0.6 ) }
    dend_1 { pt3dadd( -21.7651, 43.8171, -19.5344, 0.6 ) }
    dend_1 { pt3dadd( -21.8782, 43.9857, -19.5421, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_1 { pt3dadd( -22.0517, 44.2227, -19.5973, 0.12 ) }
    dend_1 { pt3dadd( -22.2664, 44.5115, -19.7088, 0.12 ) }
    dend_1 { pt3dadd( -22.4719, 44.8024, -19.8413, 0.72 ) }
    dend_1 { pt3dadd( -22.6021, 44.9966, -19.9423, 0.96 ) }
    dend_1 { pt3dadd( -22.9154, 45.4801, -20.2383, 0.48 ) }
    dend_1 { pt3dadd( -23.4308, 46.2778, -20.7707, 0.12 ) }
    dend_1 { pt3dadd( -23.6321, 46.5815, -20.9889, 0.12 ) }
    dend_1 { pt3dadd( -23.8086, 46.8329, -21.1787, 0.12 ) }
    dend_1 { pt3dadd( -24.0132, 47.1111, -21.3881, 0.48 ) }
    dend_1 { pt3dadd( -24.2261, 47.3913, -21.5977, 0.12 ) }
    dend_1 { pt3dadd( -24.5408, 47.7704, -21.8489, 0.12 ) }
    dend_1 { pt3dadd( -24.7034, 47.9469, -21.9354, 1.08 ) }
    dend_1 { pt3dadd( -24.9003, 48.1479, -22.0278, 1.32 ) }
    dend_1 { pt3dadd( -25.0694, 48.3205, -22.1098, 0.96 ) }
    dend_1 { pt3dadd( -25.471, 48.7395, -22.296, 0.24 ) }
    dend_1 { pt3dadd( -25.9191, 49.2223, -22.5416, 0.24 ) }
    dend_1 { pt3dadd( -26.2534, 49.5794, -22.7556, 0.24 ) }
    dend_1 { pt3dadd( -26.5761, 49.9167, -22.9753, 0.24 ) }
    dend_1 { pt3dadd( -26.9262, 50.2553, -23.2107, 0.96 ) }
    dend_1 { pt3dadd( -27.1174, 50.427, -23.3601, 1.2 ) }
    dend_1 { pt3dadd( -27.6402, 50.873, -23.7978, 0.36 ) }
    dend_1 { pt3dadd( -27.942, 51.1194, -24.0739, 0.12 ) }
    dend_1 { pt3dadd( -28.1032, 51.247, -24.2223, 0.72 ) }
    dend_1 { pt3dadd( -28.4429, 51.5294, -24.5365, 0.72 ) }
    dend_1 { pt3dadd( -29.2341, 52.2082, -25.2273, 0.24 ) }
    dend_1 { pt3dadd( -29.4302, 52.3847, -25.395, 0.12 ) }
    dend_1 { pt3dadd( -29.6198, 52.5626, -25.5473, 0.12 ) }
    dend_1 { pt3dadd( -29.8032, 52.7502, -25.6948, 0.24 ) }
    dend_1 { pt3dadd( -30.2661, 53.2516, -26.038, 0.48 ) }
    dend_1 { pt3dadd( -30.4936, 53.5214, -26.2054, 0.12 ) }
    dend_1 { pt3dadd( -30.7035, 53.7755, -26.3299, 0.12 ) }
    dend_1 { pt3dadd( -30.763, 53.8475, -26.3655, 0.72 ) }
    dend_1 { pt3dadd( -31.0327, 54.1761, -26.5206, 0.84 ) }
    dend_1 { pt3dadd( -31.2414, 54.4325, -26.6309, 0.84 ) }
    dend_1 { pt3dadd( -31.7564, 55.0663, -26.9486, 0.36 ) }
    dend_1 { pt3dadd( -32.0147, 55.3939, -27.1358, 0.12 ) }
    dend_1 { pt3dadd( -32.2304, 55.6757, -27.3117, 0.6 ) }
    dend_1 { pt3dadd( -32.4172, 55.9256, -27.4786, 1.08 ) }
    dend_1 { pt3dadd( -32.5303, 56.0882, -27.5825, 1.08 ) }
    dend_1 { pt3dadd( -33.0342, 56.8451, -28.0231, 0.12 ) }
    dend_1 { pt3dadd( -33.2235, 57.1361, -28.1635, 0.12 ) }
    dend_1 { pt3dadd( -33.3486, 57.3361, -28.2587, 0.48 ) }
    dend_1 { pt3dadd( -33.5455, 57.6701, -28.3946, 0.12 ) }
    dend_1 { pt3dadd( -33.9305, 58.3264, -28.6119, 0.12 ) }
    dend_1 { pt3dadd( -34.0605, 58.5381, -28.6631, 0.72 ) }
    dend_1 { pt3dadd( -34.2782, 58.8821, -28.7118, 0.84 ) }
    dend_1 { pt3dadd( -34.499, 59.2159, -28.7597, 0.12 ) }
    dend_1 { pt3dadd( -34.8258, 59.691, -28.8239, 0.12 ) }
    dend_1 { pt3dadd( -35.0291, 59.975, -28.8574, 0.12 ) }
    dend_1 { pt3dadd( -35.3289, 60.3697, -28.9058, 0.6 ) }
    dend_1 { pt3dadd( -35.5246, 60.622, -28.9328, 0.36 ) }
    dend_1 { pt3dadd( -35.7111, 60.8546, -28.9532, 0.6 ) }
    dend_1 { pt3dadd( -35.9663, 61.1743, -28.9917, 0.84 ) }
    dend_1 { pt3dadd( -36.0989, 61.3443, -29.0185, 0.84 ) }
    dend_1 { pt3dadd( -36.3972, 61.7496, -29.0864, 0.24 ) }
    dend_1 { pt3dadd( -36.7388, 62.2345, -29.1824, 0.12 ) }
    dend_1 { pt3dadd( -36.9887, 62.6015, -29.2603, 0.48 ) }
    dend_1 { pt3dadd( -37.4049, 63.2419, -29.4046, 0.12 ) }
    dend_1 { pt3dadd( -37.7579, 63.8165, -29.5385, 0.12 ) }
    dend_1 { pt3dadd( -37.9443, 64.1375, -29.6134, 0.48 ) }
    dend_1 { pt3dadd( -38.0924, 64.4074, -29.6734, 0.12 ) }
    dend_1 { pt3dadd( -38.2954, 64.7956, -29.747, 0.12 ) }
    dend_1 { pt3dadd( -38.3588, 64.9195, -29.7659, 0.36 ) }
    dend_1 { pt3dadd( -38.5518, 65.2926, -29.8173, 0.12 ) }
    dend_1 { pt3dadd( -38.6567, 65.4858, -29.8492, 0.12 ) }
    dend_1 { pt3dadd( -38.9506, 66.0019, -29.9319, 0.48 ) }
    dend_1 { pt3dadd( -39.2213, 66.4587, -29.9995, 1.2 ) }
    dend_1 { pt3dadd( -39.4299, 66.7924, -30.0517, 0.6 ) }
    dend_1 { pt3dadd( -39.6494, 67.1389, -30.1127, 0.12 ) }
    dend_1 { pt3dadd( -40.0523, 67.7678, -30.2301, 0.12 ) }
    dend_1 { pt3dadd( -40.504, 68.4688, -30.3641, 0.12 ) }
    dend_1 { pt3dadd( -40.6394, 68.6796, -30.4039, 0.12 ) }
    dend_1 { pt3dadd( -40.8279, 68.9666, -30.4542, 0.6 ) }
    dend_1 { pt3dadd( -41.0638, 69.3299, -30.5217, 0.12 ) }
    dend_1 { pt3dadd( -41.3138, 69.7169, -30.5961, 0.12 ) }
    dend_1 { pt3dadd( -41.4718, 69.9632, -30.6557, 0.72 ) }
    dend_1 { pt3dadd( -41.638, 70.2201, -30.7304, 0.72 ) }
    dend_1 { pt3dadd( -41.7706, 70.4224, -30.7897, 0.72 ) }
    dend_1 { pt3dadd( -42.043, 70.8607, -30.9565, 0.12 ) }
    dend_1 { pt3dadd( -42.3286, 71.3501, -31.1577, 0.12 ) }
    dend_1 { pt3dadd( -42.4851, 71.64, -31.2824, 0.12 ) }
    dend_1 { pt3dadd( -42.7625, 72.1929, -31.5104, 0.48 ) }
    dend_1 { pt3dadd( -42.9651, 72.6234, -31.687, 0.48 ) }
    dend_1 { pt3dadd( -43.307, 73.3756, -31.9808, 0.12 ) }
    dend_1 { pt3dadd( -43.5536, 73.9353, -32.1776, 0.12 ) }
    dend_1 { pt3dadd( -43.6896, 74.2658, -32.3027, 0.12 ) }
    dend_1 { pt3dadd( -43.8678, 74.7124, -32.4661, 0.12 ) }
    dend_1 { pt3dadd( -43.9559, 74.9334, -32.5376, 0.72 ) }
    dend_1 { pt3dadd( -44.0838, 75.2464, -32.6329, 0.72 ) }
    dend_1 { pt3dadd( -44.1959, 75.5, -32.6933, 0.48 ) }
    dend_1 { pt3dadd( -44.383, 75.9255, -32.8075, 0.12 ) }
    dend_1 { pt3dadd( -44.5863, 76.4282, -32.996, 0.12 ) }
    dend_1 { pt3dadd( -44.6801, 76.6851, -33.1006, 0.36 ) }
    dend_1 { pt3dadd( -44.7678, 76.9257, -33.1885, 0.12 ) }
    dend_1 { pt3dadd( -44.9081, 77.3049, -33.3072, 0.12 ) }
    dend_1 { pt3dadd( -45.0077, 77.567, -33.3791, 0.48 ) }
    dend_1 { pt3dadd( -45.3781, 78.5286, -33.603, 0.24 ) }
    dend_1 { pt3dadd( -45.6016, 79.1009, -33.7405, 0.24 ) }
    dend_1 { pt3dadd( -45.9584, 80.0111, -33.9478, 0.24 ) }
    dend_1 { pt3dadd( -46.3094, 80.8995, -34.1251, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_1 { pt3dadd( -46.3926, 81.1017, -34.1624, 0.24 ) }
    dend_1 { pt3dadd( -46.503, 81.36, -34.2007, 0.48 ) }
    dend_1 { pt3dadd( -46.6675, 81.7232, -34.2351, 0.12 ) }
    dend_1 { pt3dadd( -46.8586, 82.0949, -34.2878, 0.12 ) }
    dend_1 { pt3dadd( -47.0036, 82.3421, -34.3308, 0.12 ) }
    dend_1 { pt3dadd( -47.1707, 82.5854, -34.3757, 0.48 ) }
    dend_1 { pt3dadd( -47.2992, 82.7577, -34.4073, 0.72 ) }
    dend_1 { pt3dadd( -47.632, 83.172, -34.4773, 0.12 ) }
    dend_1 { pt3dadd( -48.2385, 83.8883, -34.5811, 0.12 ) }
    dend_1 { pt3dadd( -48.7316, 84.457, -34.6965, 0.12 ) }
    dend_1 { pt3dadd( -49.0216, 84.7944, -34.7752, 0.12 ) }
    dend_1 { pt3dadd( -49.1306, 84.9253, -34.8071, 0.84 ) }
    dend_1 { pt3dadd( -49.349, 85.1968, -34.8754, 0.96 ) }
    dend_1 { pt3dadd( -49.6866, 85.6367, -34.9822, 0.72 ) }
    dend_1 { pt3dadd( -50.0526, 86.1517, -35.1106, 0.12 ) }
    dend_1 { pt3dadd( -50.5131, 86.8056, -35.2741, 0.12 ) }
    dend_1 { pt3dadd( -50.7209, 87.1081, -35.3707, 0.36 ) }
    dend_1 { pt3dadd( -51.0635, 87.6157, -35.551, 0.12 ) }
    dend_1 { pt3dadd( -51.3502, 88.0706, -35.7179, 0.12 ) }
    dend_1 { pt3dadd( -51.5011, 88.331, -35.8103, 0.12 ) }
    dend_1 { pt3dadd( -51.6364, 88.575, -35.8897, 0.72 ) }
    dend_1 { pt3dadd( -52.0888, 89.393, -36.1797, 0.12 ) }
    dend_1 { pt3dadd( -52.3907, 89.9399, -36.4177, 0.12 ) }
    dend_1 { pt3dadd( -52.6409, 90.3899, -36.6333, 0.12 ) }
    dend_1 { pt3dadd( -52.7661, 90.6194, -36.7468, 0.12 ) }
    dend_1 { pt3dadd( -52.9077, 90.9014, -36.9046, 0.12 ) }
    dend_1 { pt3dadd( -53.0826, 91.2812, -37.1262, 0.36 ) }
    dend_1 { pt3dadd( -53.3529, 91.8568, -37.4605, 0.12 ) }
    dend_1 { pt3dadd( -53.5617, 92.2839, -37.7685, 0.12 ) }
    dend_1 { pt3dadd( -53.6434, 92.4375, -37.8903, 0.48 ) }
    dend_1 { pt3dadd( -53.9541, 93.0691, -38.3192, 0.24 ) }
    dend_1 { pt3dadd( -53.9769, 93.1266, -38.3532, 0.12 ) }
    dend_1 { pt3dadd( -54.0656, 93.3922, -38.4975, 0.12 ) }
    dend_1 { pt3dadd( -54.1519, 93.6565, -38.6058, 0.12 ) }
    dend_1 { pt3dadd( -54.2397, 93.9184, -38.7067, 0.12 ) }
    dend_1 { pt3dadd( -54.4727, 94.6152, -38.9363, 0.12 ) }
    dend_1 { pt3dadd( -54.5889, 95.0057, -39.0733, 0.36 ) }
    dend_1 { pt3dadd( -54.6734, 95.374, -39.2228, 0.12 ) }
    dend_1 { pt3dadd( -54.8356, 96.1492, -39.5284, 0.12 ) }
    dend_1 { pt3dadd( -54.8864, 96.3808, -39.6073, 0.6 ) }
    dend_1 { pt3dadd( -54.9466, 96.6159, -39.6785, 0.6 ) }
    dend_1 { pt3dadd( -55.2228, 97.4807, -39.9176, 0.12 ) }
    dend_1 { pt3dadd( -55.3808, 97.9188, -40.0556, 0.12 ) }
    dend_1 { pt3dadd( -55.8356, 99.056, -40.4497, 0.12 ) }
    dend_1 { pt3dadd( -56.1993, 99.8759, -40.7664, 0.12 ) }
    dend_1 { pt3dadd( -56.3627, 100.21, -40.8966, 0.12 ) }
    dend_1 { pt3dadd( -56.5052, 100.455, -40.9921, 0.84 ) }
    dend_1 { pt3dadd( -57.1405, 101.418, -41.3985, 0.12 ) }
    dend_1 { pt3dadd( -57.3578, 101.72, -41.5638, 0.12 ) }
    dend_1 { pt3dadd( -57.6021, 102.056, -41.7825, 0.12 ) }
    dend_1 { pt3dadd( -57.8103, 102.345, -41.9653, 0.12 ) }
    dend_1 { pt3dadd( -58.0476, 102.68, -42.1414, 0.48 ) }
    dend_1 { pt3dadd( -58.4546, 103.262, -42.3657, 0.12 ) }
    dend_1 { pt3dadd( -58.7193, 103.64, -42.4377, 0.12 ) }
    dend_1 { pt3dadd( -59.115, 104.214, -42.5167, 0.12 ) }
    dend_1 { pt3dadd( -59.4293, 104.663, -42.5586, 0.12 ) }
    dend_1 { pt3dadd( -59.7721, 105.146, -42.5839, 0.48 ) }
    dend_1 { pt3dadd( -59.944, 105.39, -42.5864, 0.12 ) }
    dend_1 { pt3dadd( -60.7601, 106.495, -42.5315, 0.12 ) }
    dend_1 { pt3dadd( -61.0912, 106.928, -42.5096, 0.12 ) }
    dend_1 { pt3dadd( -61.4695, 107.395, -42.4869, 0.12 ) }
    dend_1 { pt3dadd( -61.6544, 107.629, -42.4756, 0.6 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.12 ) }
    axon_1 { pt3dadd( -12.2185, 50.4988, -0.00167934, 0.12 ) }
    axon_1 { pt3dadd( -15.8707, 65.0474, -0.00167934, 0.12 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 65/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -0.394194, 20.5307, -3.40074, 0.96 ) }
    apic_3 { pt3dadd( -0.462248, 20.8544, -3.94116, 0.96 ) }
    apic_3 { pt3dadd( -0.593863, 21.2377, -4.48966, 0.96 ) }
    apic_3 { pt3dadd( -0.77501, 21.6007, -4.92489, 0.6 ) }
    apic_3 { pt3dadd( -1.84953, 23.4864, -6.97864, 0.72 ) }
    apic_3 { pt3dadd( -2.09679, 23.9001, -7.39281, 0.12 ) }
    apic_3 { pt3dadd( -2.43617, 24.4624, -7.89467, 0.12 ) }
    apic_3 { pt3dadd( -2.80467, 25.111, -8.43288, 0.24 ) }
    apic_3 { pt3dadd( -3.35027, 26.0891, -9.14223, 0.6 ) }
    apic_3 { pt3dadd( -3.88459, 27.0345, -9.71212, 0.6 ) }
    apic_3 { pt3dadd( -4.16999, 27.5296, -9.95991, 0.12 ) }
    apic_3 { pt3dadd( -4.63274, 28.414, -10.4378, 0.12 ) }
    apic_3 { pt3dadd( -5.03379, 29.2585, -10.9195, 0.12 ) }
    apic_3 { pt3dadd( -5.32153, 29.9312, -11.3483, 0.48 ) }
    apic_3 { pt3dadd( -5.45613, 30.2618, -11.5763, 0.48 ) }
    apic_3 { pt3dadd( -5.81839, 31.1046, -12.2819, 0.12 ) }
    apic_3 { pt3dadd( -6.07549, 31.6267, -12.805, 0.12 ) }
    apic_3 { pt3dadd( -6.27136, 31.9866, -13.2419, 0.6 ) }
    apic_3 { pt3dadd( -6.61007, 32.5351, -13.9609, 0.12 ) }
    apic_3 { pt3dadd( -6.86171, 32.9352, -14.5543, 0.12 ) }
    apic_3 { pt3dadd( -7.41628, 33.7951, -15.8637, 0.12 ) }
    apic_3 { pt3dadd( -7.69768, 34.1887, -16.4482, 0.12 ) }
    apic_3 { pt3dadd( -7.94437, 34.508, -16.9349, 0.12 ) }
    apic_3 { pt3dadd( -8.20027, 34.816, -17.3787, 0.96 ) }
    apic_3 { pt3dadd( -8.83698, 35.5107, -18.2827, 0.12 ) }
    apic_3 { pt3dadd( -9.07827, 35.776, -18.6347, 0.12 ) }
    apic_3 { pt3dadd( -9.52678, 36.2363, -19.201, 0.12 ) }
    apic_3 { pt3dadd( -9.84987, 36.5416, -19.5834, 0.96 ) }
    apic_3 { pt3dadd( -10.2345, 36.8829, -20.0133, 1.08 ) }
    apic_3 { pt3dadd( -10.3899, 37.0133, -20.1839, 1.08 ) }
    apic_3 { pt3dadd( -11.4815, 37.9008, -21.3304, 0.24 ) }
    apic_3 { pt3dadd( -12.0403, 38.3696, -21.9613, 0.12 ) }
    apic_3 { pt3dadd( -12.6386, 38.8889, -22.6661, 0.12 ) }
    apic_3 { pt3dadd( -12.9432, 39.1522, -23.016, 0.72 ) }
    apic_3 { pt3dadd( -13.19, 39.3691, -23.2894, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_3 { pt3dadd( -13.7509, 39.8831, -23.8382, 0.36 ) }
    apic_3 { pt3dadd( -14.0525, 40.1684, -24.0657, 0.12 ) }
    apic_3 { pt3dadd( -14.3555, 40.4849, -24.2931, 0.12 ) }
    apic_3 { pt3dadd( -14.6134, 40.7705, -24.4732, 0.48 ) }
    apic_3 { pt3dadd( -14.8693, 41.0503, -24.6269, 0.12 ) }
    apic_3 { pt3dadd( -15.3525, 41.5893, -24.921, 0.12 ) }
    apic_3 { pt3dadd( -15.6239, 41.8853, -25.0752, 0.12 ) }
    apic_3 { pt3dadd( -16.0704, 42.3442, -25.3248, 0.84 ) }
    apic_3 { pt3dadd( -16.466, 42.7266, -25.5258, 0.72 ) }
    apic_3 { pt3dadd( -16.7666, 42.995, -25.6623, 0.12 ) }
    apic_3 { pt3dadd( -17.1039, 43.2715, -25.7917, 0.12 ) }
    apic_3 { pt3dadd( -17.6107, 43.6707, -25.9655, 0.12 ) }
    apic_3 { pt3dadd( -18.1353, 44.0919, -26.1274, 0.12 ) }
    apic_3 { pt3dadd( -18.6341, 44.4955, -26.262, 0.48 ) }
    apic_3 { pt3dadd( -19.2132, 44.9615, -26.399, 0.6 ) }
    apic_3 { pt3dadd( -19.5678, 45.2532, -26.476, 0.24 ) }
    apic_3 { pt3dadd( -20.0618, 45.6774, -26.6224, 0.24 ) }
    apic_3 { pt3dadd( -20.3618, 45.9512, -26.7484, 0.12 ) }
    apic_3 { pt3dadd( -20.6943, 46.2778, -26.9301, 0.12 ) }
    apic_3 { pt3dadd( -20.9614, 46.5447, -27.1075, 0.6 ) }
    apic_3 { pt3dadd( -21.4488, 47.0098, -27.4507, 0.84 ) }
    apic_3 { pt3dadd( -22.2437, 47.7103, -28.0186, 0.12 ) }
    apic_3 { pt3dadd( -22.6953, 48.0784, -28.3335, 0.12 ) }
    apic_3 { pt3dadd( -23.1115, 48.3955, -28.61, 0.24 ) }
    apic_3 { pt3dadd( -23.3811, 48.5923, -28.7794, 0.12 ) }
    apic_3 { pt3dadd( -24.0876, 49.082, -29.1836, 0.12 ) }
    apic_3 { pt3dadd( -24.4929, 49.3516, -29.4143, 0.48 ) }
    apic_3 { pt3dadd( -24.9466, 49.6548, -29.6545, 0.12 ) }
    apic_3 { pt3dadd( -25.3163, 49.916, -29.8724, 0.12 ) }
    apic_3 { pt3dadd( -25.497, 50.0553, -29.9881, 0.48 ) }
    apic_3 { pt3dadd( -25.8867, 50.4149, -30.2477, 0.48 ) }
    apic_3 { pt3dadd( -26.3791, 50.9559, -30.6865, 0.12 ) }
    apic_3 { pt3dadd( -26.6977, 51.3321, -31.0109, 0.12 ) }
    apic_3 { pt3dadd( -27.054, 51.8009, -31.4728, 0.48 ) }
    apic_3 { pt3dadd( -27.2085, 52.0258, -31.6962, 0.12 ) }
    apic_3 { pt3dadd( -27.7312, 52.8234, -32.434, 0.12 ) }
    apic_3 { pt3dadd( -28.3779, 53.8458, -33.3097, 0.84 ) }
    apic_3 { pt3dadd( -28.6372, 54.2618, -33.6358, 0.84 ) }
    apic_3 { pt3dadd( -29.1661, 55.1397, -34.3203, 0.12 ) }
    apic_3 { pt3dadd( -29.6478, 55.9695, -34.9713, 0.12 ) }
    apic_3 { pt3dadd( -30.2459, 57.0021, -35.7567, 0.12 ) }
    apic_3 { pt3dadd( -30.4286, 57.3134, -35.9778, 0.6 ) }
    apic_3 { pt3dadd( -30.6595, 57.7101, -36.2461, 0.72 ) }
    apic_3 { pt3dadd( -30.9288, 58.195, -36.619, 0.12 ) }
    apic_3 { pt3dadd( -31.3576, 58.9388, -37.2307, 0.12 ) }
    apic_3 { pt3dadd( -31.5823, 59.3352, -37.6049, 0.12 ) }
    apic_3 { pt3dadd( -31.7461, 59.6488, -37.9498, 0.72 ) }
    apic_3 { pt3dadd( -32.1849, 60.4709, -38.8444, 0.72 ) }
    apic_3 { pt3dadd( -32.4948, 61.0347, -39.4411, 0.12 ) }
    apic_3 { pt3dadd( -32.974, 61.9634, -40.4212, 0.12 ) }
    apic_3 { pt3dadd( -33.11, 62.2493, -40.7051, 0.48 ) }
    apic_3 { pt3dadd( -33.4433, 63.0054, -41.3743, 0.12 ) }
    apic_3 { pt3dadd( -33.9867, 64.2565, -42.3554, 0.12 ) }
    apic_3 { pt3dadd( -34.0716, 64.4594, -42.4991, 0.48 ) }
    apic_3 { pt3dadd( -34.4163, 65.3474, -43.0511, 0.12 ) }
    apic_3 { pt3dadd( -34.6895, 66.1653, -43.5433, 0.12 ) }
    apic_3 { pt3dadd( -35.0195, 67.2222, -44.1299, 0.12 ) }
    apic_3 { pt3dadd( -35.0854, 67.4458, -44.2493, 0.48 ) }
    apic_3 { pt3dadd( -35.2933, 68.2485, -44.687, 0.12 ) }
    apic_3 { pt3dadd( -35.7872, 70.1217, -45.7393, 0.12 ) }
    apic_3 { pt3dadd( -35.9171, 70.5816, -45.9909, 0.6 ) }
    apic_3 { pt3dadd( -35.9994, 70.8811, -46.1554, 0.72 ) }
    apic_3 { pt3dadd( -36.208, 71.5983, -46.5381, 0.12 ) }
    apic_3 { pt3dadd( -36.4376, 72.3293, -46.8983, 0.24 ) }
    apic_3 { pt3dadd( -36.6421, 72.8923, -47.1428, 0.12 ) }
    apic_3 { pt3dadd( -36.9308, 73.6225, -47.4563, 0.12 ) }
    apic_3 { pt3dadd( -37.4731, 74.8961, -47.9546, 0.12 ) }
    apic_3 { pt3dadd( -37.6656, 75.3271, -48.1083, 0.48 ) }
    apic_3 { pt3dadd( -37.7136, 75.4298, -48.1367, 0.12 ) }
    apic_3 { pt3dadd( -37.9769, 75.9741, -48.2777, 0.12 ) }
    apic_3 { pt3dadd( -38.0931, 76.2048, -48.3182, 0.48 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -0.394194, 20.5307, -3.40074, 0.96 ) }
    apic_2 { pt3dadd( -0.500697, 21.4038, -3.40486, 0.96 ) }
    apic_2 { pt3dadd( -0.568379, 21.9551, -3.40873, 0.96 ) }
    apic_2 { pt3dadd( -0.68811, 22.8327, -3.41921, 0.6 ) }
    apic_2 { pt3dadd( -0.791404, 23.5994, -3.42929, 0.48 ) }
    apic_2 { pt3dadd( -0.949289, 24.8045, -3.44606, 0.48 ) }
    apic_2 { pt3dadd( -1.13686, 26.2392, -3.46834, 0.48 ) }
    apic_2 { pt3dadd( -1.20885, 26.7788, -3.46982, 0.96 ) }
    apic_2 { pt3dadd( -1.28875, 27.3696, -3.46355, 1.44 ) }
    apic_2 { pt3dadd( -1.38036, 28.0275, -3.44971, 1.08 ) }
    apic_2 { pt3dadd( -1.48572, 28.795, -3.42708, 0.84 ) }
    apic_2 { pt3dadd( -1.62151, 29.7786, -3.39227, 0.84 ) }
    apic_2 { pt3dadd( -1.6992, 30.4418, -3.36749, 0.36 ) }
    apic_2 { pt3dadd( -1.81691, 31.6491, -3.32806, 0.36 ) }
    apic_2 { pt3dadd( -1.85322, 32.09, -3.30745, 0.72 ) }
    apic_2 { pt3dadd( -1.91701, 32.9629, -3.25978, 1.32 ) }
    apic_2 { pt3dadd( -1.93946, 33.4044, -3.23333, 1.32 ) }
    apic_2 { pt3dadd( -1.96371, 34.2955, -3.18213, 0.6 ) }
    apic_2 { pt3dadd( -1.97473, 35.178, -3.14203, 0.48 ) }
    apic_2 { pt3dadd( -1.982, 35.9508, -3.10213, 0.6 ) }
    apic_2 { pt3dadd( -1.98917, 36.3977, -3.07902, 0.96 ) }
    apic_2 { pt3dadd( -2.00664, 37.0691, -3.02893, 0.84 ) }
    apic_2 { pt3dadd( -2.0449, 38.052, -2.94274, 0.72 ) }
    apic_2 { pt3dadd( -2.08609, 38.8133, -2.86918, 0.72 ) }
    apic_2 { pt3dadd( -2.11825, 39.3747, -2.81797, 1.08 ) }
    apic_2 { pt3dadd( -2.14373, 39.8067, -2.78981, 1.2 ) }
    apic_2 { pt3dadd( -2.22377, 40.9003, -2.70393, 0.6 ) }
    apic_2 { pt3dadd( -2.29044, 41.6606, -2.64078, 0.6 ) }
    apic_2 { pt3dadd( -2.32303, 41.9901, -2.61389, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_2 { pt3dadd( -2.3839, 42.5411, -2.57704, 0.96 ) }
    apic_2 { pt3dadd( -2.45403, 43.1336, -2.55866, 0.84 ) }
    apic_2 { pt3dadd( -2.58774, 44.1891, -2.5624, 0.36 ) }
    apic_2 { pt3dadd( -2.754, 45.3905, -2.60895, 0.36 ) }
    apic_2 { pt3dadd( -2.85435, 46.047, -2.62835, 0.72 ) }
    apic_2 { pt3dadd( -2.98368, 46.8218, -2.63926, 1.08 ) }
    apic_2 { pt3dadd( -3.17044, 47.8338, -2.64337, 0.6 ) }
    apic_2 { pt3dadd( -3.33712, 48.6945, -2.64505, 0.48 ) }
    apic_2 { pt3dadd( -3.4494, 49.248, -2.65272, 0.48 ) }
    apic_2 { pt3dadd( -3.64723, 50.1963, -2.65725, 1.2 ) }
    apic_2 { pt3dadd( -3.83727, 51.081, -2.65419, 0.48 ) }
    apic_2 { pt3dadd( -4.08233, 52.1744, -2.641, 0.48 ) }
    apic_2 { pt3dadd( -4.21423, 52.7382, -2.61813, 0.12 ) }
    apic_2 { pt3dadd( -4.41605, 53.598, -2.57811, 0.12 ) }
    apic_2 { pt3dadd( -4.48424, 53.9223, -2.55269, 0.12 ) }
    apic_2 { pt3dadd( -4.54091, 54.2575, -2.51987, 0.96 ) }
    apic_2 { pt3dadd( -4.62808, 54.9202, -2.43532, 0.96 ) }
    apic_2 { pt3dadd( -4.72217, 55.7997, -2.30197, 0.72 ) }
    apic_2 { pt3dadd( -4.7629, 56.2354, -2.23219, 0.84 ) }
    apic_2 { pt3dadd( -4.86039, 57.3558, -2.03901, 0.48 ) }
    apic_2 { pt3dadd( -4.94429, 58.4426, -1.86274, 0.48 ) }
    apic_2 { pt3dadd( -5.00325, 59.3084, -1.7363, 0.48 ) }
    apic_2 { pt3dadd( -5.05221, 60.0845, -1.64393, 1.08 ) }
    apic_2 { pt3dadd( -5.07543, 60.5158, -1.60458, 1.32 ) }
    apic_2 { pt3dadd( -5.13596, 61.8012, -1.50552, 0.36 ) }
    apic_2 { pt3dadd( -5.19058, 63.2324, -1.42828, 0.36 ) }
    apic_2 { pt3dadd( -5.21505, 64.0984, -1.38606, 0.48 ) }
    apic_2 { pt3dadd( -5.23362, 65.518, -1.32868, 0.6 ) }
    apic_2 { pt3dadd( -5.23704, 66.4329, -1.30116, 0.72 ) }
    apic_2 { pt3dadd( -5.24406, 67.2065, -1.29169, 0.72 ) }
    apic_2 { pt3dadd( -5.25865, 67.7766, -1.29672, 0.72 ) }
    apic_2 { pt3dadd( -5.31254, 68.7711, -1.32437, 0.36 ) }
    apic_2 { pt3dadd( -5.42809, 70.0899, -1.32164, 0.48 ) }
    apic_2 { pt3dadd( -5.61927, 71.7218, -1.27932, 0.48 ) }
    apic_2 { pt3dadd( -5.75261, 72.6176, -1.24188, 0.48 ) }
    apic_2 { pt3dadd( -6.01971, 74.1505, -1.15494, 0.96 ) }
    apic_2 { pt3dadd( -6.38532, 76.0147, -1.00799, 0.48 ) }
    apic_2 { pt3dadd( -6.676, 77.346, -0.882094, 0.12 ) }
    apic_2 { pt3dadd( -6.8027, 77.8862, -0.824593, 0.12 ) }
    apic_2 { pt3dadd( -7.05904, 78.9705, -0.699869, 0.72 ) }
    apic_2 { pt3dadd( -7.13432, 79.3011, -0.657324, 0.84 ) }
    apic_2 { pt3dadd( -7.28455, 79.9932, -0.572279, 0.48 ) }
    apic_2 { pt3dadd( -7.53746, 81.187, -0.419115, 0.48 ) }
    apic_2 { pt3dadd( -7.73919, 82.262, -0.317335, 0.48 ) }
    apic_2 { pt3dadd( -7.83348, 82.7955, -0.261747, 0.96 ) }
    apic_2 { pt3dadd( -7.96939, 83.6301, -0.166794, 0.36 ) }
    apic_2 { pt3dadd( -8.15529, 84.8226, -0.0336137, 0.36 ) }
    apic_2 { pt3dadd( -8.31194, 85.8683, 0.0762747, 0.36 ) }
    apic_2 { pt3dadd( -8.46457, 86.9553, 0.193781, 0.36 ) }
    apic_2 { pt3dadd( -8.54081, 87.4958, 0.245803, 0.84 ) }
    apic_2 { pt3dadd( -8.58777, 87.8234, 0.275213, 0.84 ) }
    apic_2 { pt3dadd( -8.68267, 88.4888, 0.320105, 0.36 ) }
    apic_2 { pt3dadd( -8.76338, 89.0255, 0.364326, 0.12 ) }
    apic_2 { pt3dadd( -8.84, 89.5736, 0.377413, 0.96 ) }
    apic_2 { pt3dadd( -8.93118, 90.2317, 0.379004, 1.32 ) }
    apic_2 { pt3dadd( -9.07174, 91.1854, 0.419052, 0.36 ) }
    apic_2 { pt3dadd( -9.23423, 92.2747, 0.491192, 0.36 ) }
    apic_2 { pt3dadd( -9.42316, 93.5504, 0.59867, 0.6 ) }
    apic_2 { pt3dadd( -9.59969, 94.8063, 0.704273, 0.48 ) }
    apic_2 { pt3dadd( -9.71567, 95.6726, 0.773218, 0.48 ) }
    apic_2 { pt3dadd( -9.87676, 96.9508, 0.861757, 0.84 ) }
    apic_2 { pt3dadd( -9.96117, 97.6091, 0.891171, 0.96 ) }
    apic_2 { pt3dadd( -9.99322, 97.8281, 0.899503, 0.96 ) }
    apic_2 { pt3dadd( -10.0894, 98.3708, 0.930664, 0.36 ) }
    apic_2 { pt3dadd( -10.1989, 98.922, 0.988529, 0.36 ) }
    apic_2 { pt3dadd( -10.3014, 99.467, 1.02446, 0.84 ) }
    apic_2 { pt3dadd( -10.4121, 100.158, 1.04041, 1.32 ) }
    apic_2 { pt3dadd( -10.48, 100.6, 1.07522, 0.96 ) }
    apic_2 { pt3dadd( -10.6027, 101.522, 1.18691, 0.36 ) }
    apic_2 { pt3dadd( -10.7364, 102.71, 1.37047, 0.36 ) }
    apic_2 { pt3dadd( -10.7918, 103.465, 1.48501, 0.36 ) }
    apic_2 { pt3dadd( -10.8132, 104.123, 1.57758, 0.36 ) }
    apic_2 { pt3dadd( -10.806, 104.934, 1.6817, 0.72 ) }
    apic_2 { pt3dadd( -10.7882, 105.516, 1.76209, 0.36 ) }
    apic_2 { pt3dadd( -10.7482, 106.394, 1.87565, 0.24 ) }
    apic_2 { pt3dadd( -10.7235, 106.946, 1.9559, 0.84 ) }
    apic_2 { pt3dadd( -10.7044, 107.508, 2.03714, 0.84 ) }
    apic_2 { pt3dadd( -10.701, 107.966, 2.0914, 0.72 ) }
    apic_2 { pt3dadd( -10.7255, 108.69, 2.19148, 0.12 ) }
    apic_2 { pt3dadd( -10.7912, 109.559, 2.34901, 0.12 ) }
    apic_2 { pt3dadd( -10.8583, 110.196, 2.49317, 0.48 ) }
    apic_2 { pt3dadd( -10.8945, 110.52, 2.55935, 0.24 ) }
    apic_2 { pt3dadd( -11.0439, 111.815, 2.76424, 0.24 ) }
    apic_2 { pt3dadd( -11.1475, 112.705, 2.8809, 0.72 ) }
    apic_2 { pt3dadd( -11.207, 113.253, 2.93403, 1.08 ) }
    apic_2 { pt3dadd( -11.3099, 114.16, 3.0167, 0.96 ) }
    apic_2 { pt3dadd( -11.4289, 115.128, 3.11197, 0.72 ) }
    apic_2 { pt3dadd( -11.5277, 115.901, 3.18637, 0.6 ) }
    apic_2 { pt3dadd( -11.616, 116.601, 3.24222, 0.12 ) }
    apic_2 { pt3dadd( -11.7076, 117.257, 3.29964, 0.12 ) }
    apic_2 { pt3dadd( -11.8286, 118.01, 3.43141, 0.12 ) }
    apic_2 { pt3dadd( -11.9437, 118.675, 3.59193, 0.48 ) }
    apic_2 { pt3dadd( -12.0015, 118.98, 3.68359, 0.12 ) }
    apic_2 { pt3dadd( -12.2275, 120.115, 4.04401, 0.12 ) }
    apic_2 { pt3dadd( -12.412, 121.021, 4.30706, 0.6 ) }
    apic_2 { pt3dadd( -12.6018, 121.901, 4.54514, 0.12 ) }
    apic_2 { pt3dadd( -12.8141, 122.956, 4.77061, 0.12 ) }
    apic_2 { pt3dadd( -12.8772, 123.297, 4.82308, 0.12 ) }
    apic_2 { pt3dadd( -12.9874, 123.936, 4.89983, 0.6 ) }
    apic_2 { pt3dadd( -13.2111, 125.349, 5.01608, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_2 { pt3dadd( -13.3202, 126.138, 5.04749, 1.08 ) }
    apic_2 { pt3dadd( -13.4839, 127.479, 5.07111, 0.48 ) }
    apic_2 { pt3dadd( -13.5752, 128.352, 5.09462, 0.12 ) }
    apic_2 { pt3dadd( -13.7033, 129.814, 5.14107, 0.12 ) }
    apic_2 { pt3dadd( -13.7384, 130.357, 5.15935, 0.12 ) }
    apic_2 { pt3dadd( -13.7818, 131.345, 5.19306, 0.12 ) }
    apic_2 { pt3dadd( -13.8019, 132.045, 5.21077, 0.72 ) }
    apic_2 { pt3dadd( -13.8141, 132.506, 5.21756, 0.12 ) }
    apic_2 { pt3dadd( -13.8265, 133.17, 5.20955, 0.12 ) }
    apic_2 { pt3dadd( -13.8446, 134.493, 5.15742, 0.48 ) }
    apic_2 { pt3dadd( -13.8617, 135.624, 5.0927, 0.6 ) }
    apic_2 { pt3dadd( -13.8773, 136.398, 5.03624, 0.6 ) }
    apic_2 { pt3dadd( -13.896, 136.95, 5.00095, 0.84 ) }
    apic_2 { pt3dadd( -13.9366, 137.715, 4.97098, 0.6 ) }
    apic_2 { pt3dadd( -14.0043, 138.588, 4.96505, 0.72 ) }
    apic_2 { pt3dadd( -14.0801, 139.279, 4.97962, 0.36 ) }
    apic_2 { pt3dadd( -14.2202, 140.253, 5.05226, 0.48 ) }
    apic_2 { pt3dadd( -14.4363, 141.482, 5.17982, 0.48 ) }
    apic_2 { pt3dadd( -14.659, 142.724, 5.33377, 0.6 ) }
    apic_2 { pt3dadd( -14.846, 143.701, 5.47022, 0.48 ) }
    apic_2 { pt3dadd( -14.9578, 144.249, 5.55289, 0.48 ) }
    apic_2 { pt3dadd( -15.2054, 145.39, 5.7886, 0.12 ) }
    apic_2 { pt3dadd( -15.3602, 146.089, 5.9587, 0.12 ) }
    apic_2 { pt3dadd( -15.5641, 147.023, 6.19243, 0.12 ) }
    apic_2 { pt3dadd( -15.6453, 147.403, 6.28604, 0.96 ) }
    apic_2 { pt3dadd( -15.768, 147.941, 6.41032, 1.08 ) }
    apic_2 { pt3dadd( -16.0985, 149.29, 6.68009, 0.36 ) }
    apic_2 { pt3dadd( -16.2378, 149.82, 6.76504, 0.36 ) }
    apic_2 { pt3dadd( -16.5939, 151.088, 6.95062, 0.36 ) }
    apic_2 { pt3dadd( -16.8371, 151.853, 7.03542, 0.36 ) }
    apic_2 { pt3dadd( -17.0966, 152.649, 7.08647, 0.24 ) }
    apic_2 { pt3dadd( -17.2874, 153.219, 7.08685, 0.24 ) }
    apic_2 { pt3dadd( -17.4329, 153.646, 7.05361, 0.6 ) }
    apic_2 { pt3dadd( -17.5463, 153.958, 7.02699, 0.6 ) }
    apic_2 { pt3dadd( -17.7918, 154.608, 6.9934, 0.36 ) }
    apic_2 { pt3dadd( -18.0917, 155.398, 6.97326, 0.36 ) }
    apic_2 { pt3dadd( -18.4397, 156.33, 6.96906, 0.24 ) }
    apic_2 { pt3dadd( -18.9397, 157.713, 6.99021, 0.24 ) }
    apic_2 { pt3dadd( -19.275, 158.696, 7.01757, 0.24 ) }
    apic_2 { pt3dadd( -19.5147, 159.45, 7.05073, 0.24 ) }
    apic_2 { pt3dadd( -19.605, 159.779, 7.07133, 0.6 ) }
    apic_2 { pt3dadd( -19.7053, 160.209, 7.10155, 0.6 ) }
    apic_2 { pt3dadd( -19.7947, 160.656, 7.13162, 0.6 ) }
    apic_2 { pt3dadd( -19.9304, 161.521, 7.17787, 0.36 ) }
    apic_2 { pt3dadd( -19.9661, 161.766, 7.18119, 0.12 ) }
    apic_2 { pt3dadd( -20.1083, 162.63, 7.14919, 0.12 ) }
    apic_2 { pt3dadd( -20.2365, 163.309, 7.10768, 0.12 ) }
    apic_2 { pt3dadd( -20.3373, 163.753, 7.06926, 0.36 ) }
    apic_2 { pt3dadd( -20.4006, 163.991, 7.04432, 0.12 ) }
    apic_2 { pt3dadd( -20.6387, 164.786, 6.94525, 0.12 ) }
    apic_2 { pt3dadd( -20.7647, 165.208, 6.89052, 0.48 ) }
    apic_2 { pt3dadd( -20.8576, 165.558, 6.84631, 0.12 ) }
    apic_2 { pt3dadd( -20.9427, 165.997, 6.79952, 0.12 ) }
    apic_2 { pt3dadd( -21.039, 166.875, 6.72809, 0.12 ) }
    apic_2 { pt3dadd( -21.0931, 167.575, 6.67848, 0.72 ) }
    apic_2 { pt3dadd( -21.1103, 168.129, 6.64885, 0.84 ) }
    apic_2 { pt3dadd( -21.1136, 168.624, 6.63269, 0.36 ) }
    apic_2 { pt3dadd( -21.0912, 169.318, 6.63626, 0.36 ) }
    apic_2 { pt3dadd( -21.0388, 169.811, 6.64528, 0.48 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.25884, -26.3293, 9.20994, 0.6 ) }
    dend_33 { pt3dadd( -4.56524, -27.7366, 7.67745, 0.6 ) }
    dend_33 { pt3dadd( -5.05317, -28.2757, 7.09669, 0.48 ) }
    dend_33 { pt3dadd( -5.60556, -28.9037, 6.46692, 0.48 ) }
    dend_33 { pt3dadd( -6.18353, -29.6003, 5.82752, 0.48 ) }
    dend_33 { pt3dadd( -6.59998, -30.1167, 5.40938, 0.48 ) }
    dend_33 { pt3dadd( -7.31802, -31.0351, 4.7482, 0.6 ) }
    dend_33 { pt3dadd( -7.90072, -31.855, 4.31322, 0.72 ) }
    dend_33 { pt3dadd( -8.706, -33.0174, 3.69682, 0.84 ) }
    dend_33 { pt3dadd( -9.37459, -34.0209, 3.19629, 0.84 ) }
    dend_33 { pt3dadd( -9.85838, -34.7679, 2.89652, 1.08 ) }
    dend_33 { pt3dadd( -10.272, -35.4486, 2.68133, 1.32 ) }
    dend_33 { pt3dadd( -10.7006, -36.2249, 2.49621, 1.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.25884, -26.3293, 9.20994, 0.96 ) }
    dend_32 { pt3dadd( -3.23885, -27.6426, 9.94779, 0.96 ) }
    dend_32 { pt3dadd( -3.20907, -28.216, 10.213, 0.6 ) }
    dend_32 { pt3dadd( -3.12424, -29.1249, 10.6479, 0.48 ) }
    dend_32 { pt3dadd( -3.02748, -29.9496, 11.0315, 0.12 ) }
    dend_32 { pt3dadd( -2.90582, -30.8574, 11.4568, 0.12 ) }
    dend_32 { pt3dadd( -2.84819, -31.2695, 11.6466, 0.72 ) }
    dend_32 { pt3dadd( -2.73877, -32.2274, 12.0146, 0.72 ) }
    dend_32 { pt3dadd( -2.63527, -33.2032, 12.4401, 0.6 ) }
    dend_32 { pt3dadd( -2.58917, -33.6695, 12.6701, 0.6 ) }
    dend_32 { pt3dadd( -2.54784, -34.3689, 13.0192, 0.36 ) }
    dend_32 { pt3dadd( -2.5332, -34.6946, 13.1929, 0.36 ) }
    dend_32 { pt3dadd( -2.5089, -35.4037, 13.5643, 0.36 ) }
    dend_32 { pt3dadd( -2.46064, -36.6837, 14.2466, 0.36 ) }
    dend_32 { pt3dadd( -2.42276, -37.39, 14.589, 0.6 ) }
    dend_32 { pt3dadd( -2.36486, -37.9569, 14.8696, 0.6 ) }
    dend_32 { pt3dadd( -2.26535, -38.523, 15.1345, 0.72 ) }
    dend_32 { pt3dadd( -2.15551, -38.9772, 15.3434, 0.84 ) }
    dend_32 { pt3dadd( -1.89268, -39.8621, 15.7158, 0.6 ) }
    dend_32 { pt3dadd( -1.72577, -40.4354, 15.9317, 0.48 ) }
    dend_32 { pt3dadd( -1.62347, -40.934, 16.1443, 0.36 ) }
    dend_32 { pt3dadd( -1.56872, -41.5831, 16.4924, 0.36 ) }
    dend_32 { pt3dadd( -1.57438, -41.8959, 16.6701, 0.6 ) }
    dend_32 { pt3dadd( -1.61306, -42.381, 16.9413, 0.72 ) }
    dend_32 { pt3dadd( -1.7032, -43.2541, 17.3781, 0.72 ) }
    dend_32 { pt3dadd( -1.73015, -43.9919, 17.8097, 0.48 ) }
    dend_32 { pt3dadd( -1.7044, -44.7094, 18.2355, 0.6 ) }
    dend_32 { pt3dadd( -1.65525, -45.2835, 18.5848, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -1.59953, -45.7359, 18.8404, 1.08 ) }
    dend_32 { pt3dadd( -1.47976, -46.4797, 19.2338, 1.32 ) }
    dend_32 { pt3dadd( -1.12045, -48.4105, 20.126, 0.72 ) }
    dend_32 { pt3dadd( -0.9951, -49.0755, 20.3958, 0.36 ) }
    dend_32 { pt3dadd( -0.743494, -50.5165, 20.9279, 0.48 ) }
    dend_32 { pt3dadd( -0.612075, -51.4673, 21.2693, 0.6 ) }
    dend_32 { pt3dadd( -0.575713, -51.8361, 21.3887, 0.84 ) }
    dend_32 { pt3dadd( -0.530742, -52.6974, 21.6163, 0.84 ) }
    dend_32 { pt3dadd( -0.524344, -53.6887, 21.7852, 0.72 ) }
    dend_32 { pt3dadd( -0.516734, -54.6121, 21.9089, 0.48 ) }
    dend_32 { pt3dadd( -0.469063, -55.5987, 22.0205, 0.36 ) }
    dend_32 { pt3dadd( -0.420074, -56.2166, 22.0914, 0.36 ) }
    dend_32 { pt3dadd( -0.33795, -56.964, 22.1711, 0.6 ) }
    dend_32 { pt3dadd( -0.207811, -57.8315, 22.2516, 0.6 ) }
    dend_32 { pt3dadd( -0.0185683, -58.6967, 22.3458, 0.6 ) }
    dend_32 { pt3dadd( 0.247343, -59.596, 22.4445, 0.6 ) }
    dend_32 { pt3dadd( 0.617616, -60.5536, 22.5528, 0.48 ) }
    dend_32 { pt3dadd( 0.955062, -61.3223, 22.6792, 0.48 ) }
    dend_32 { pt3dadd( 1.27701, -62.0261, 22.8426, 0.6 ) }
    dend_32 { pt3dadd( 1.70727, -62.998, 23.1435, 0.36 ) }
    dend_32 { pt3dadd( 1.92451, -63.5527, 23.332, 0.36 ) }
    dend_32 { pt3dadd( 2.29717, -64.6373, 23.6838, 0.36 ) }
    dend_32 { pt3dadd( 2.66706, -65.8607, 24.0809, 0.48 ) }
    dend_32 { pt3dadd( 2.86459, -66.6275, 24.3101, 0.48 ) }
    dend_32 { pt3dadd( 3.0797, -67.6418, 24.5672, 0.48 ) }
    dend_32 { pt3dadd( 3.24099, -68.6477, 24.8187, 0.48 ) }
    dend_32 { pt3dadd( 3.33397, -69.3739, 25.012, 0.72 ) }
    dend_32 { pt3dadd( 3.39934, -69.9842, 25.2065, 0.72 ) }
    dend_32 { pt3dadd( 3.45234, -70.4186, 25.3537, 0.72 ) }
    dend_32 { pt3dadd( 3.5678, -71.1241, 25.6068, 0.84 ) }
    dend_32 { pt3dadd( 3.78259, -72.3122, 26.0893, 0.12 ) }
    dend_32 { pt3dadd( 3.93054, -73.087, 26.4915, 0.12 ) }
    dend_32 { pt3dadd( 4.12364, -74.0719, 27.0892, 0.48 ) }
    dend_32 { pt3dadd( 4.20775, -74.4946, 27.3811, 0.6 ) }
    dend_32 { pt3dadd( 4.32598, -75.0804, 27.8281, 0.6 ) }
    dend_32 { pt3dadd( 4.22878, -85.3698, 29.9428, 0.6 ) }
    dend_32 { pt3dadd( 3.98086, -95.5203, 32.6636, 0.6 ) }
    dend_32 { pt3dadd( 2.20707, -104.988, 36.9483, 0.6 ) }
    dend_32 { pt3dadd( 2.13338, -114.042, 42.3906, 0.6 ) }
    dend_32 { pt3dadd( 3.4414, -124.123, 45.0912, 0.6 ) }
    dend_32 { pt3dadd( 4.92474, -134.477, 46.0437, 0.6 ) }
    dend_32 { pt3dadd( 8.5332, -144.362, 46.4418, 0.6 ) }
    dend_32 { pt3dadd( 12.3575, -154.109, 47.6203, 0.6 ) }
    dend_32 { pt3dadd( 16.7482, -163.687, 48.074, 0.6 ) }
    dend_32 { pt3dadd( 22.1275, -172.656, 49.6352, 0.6 ) }
    dend_32 { pt3dadd( 26.107, -181.883, 52.8842, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 43.3719, 11.6668, 36.2814, 0.48 ) }
    dend_28 { pt3dadd( 51.5107, 16.5776, 42.0592, 0.48 ) }
    dend_28 { pt3dadd( 58.5063, 22.8656, 47.9356, 0.48 ) }
    dend_28 { pt3dadd( 65.4333, 29.2001, 53.8416, 0.48 ) }
    dend_28 { pt3dadd( 73.3682, 34.47, 59.5704, 0.48 ) }
    dend_28 { pt3dadd( 80.7005, 39.3879, 66.3447, 0.48 ) }
    dend_28 { pt3dadd( 87.2917, 43.3875, 74.4018, 0.48 ) }
    dend_28 { pt3dadd( 92.6434, 48.2671, 82.864, 0.48 ) }
    dend_28 { pt3dadd( 99.4366, 51.7671, 90.9963, 0.48 ) }
    dend_28 { pt3dadd( 105.298, 54.3684, 100.147, 0.48 ) }
    dend_28 { pt3dadd( 112.045, 58.0646, 108.226, 0.48 ) }
    dend_28 { pt3dadd( 119.977, 61.3995, 115.33, 0.48 ) }
    dend_28 { pt3dadd( 128.689, 65.0266, 121.267, 0.48 ) }
    dend_28 { pt3dadd( 136.347, 67.8115, 128.903, 0.48 ) }
    dend_28 { pt3dadd( 144.427, 70.2665, 136.215, 0.48 ) }
    dend_28 { pt3dadd( 153.764, 72.5982, 141.883, 0.48 ) }
    dend_28 { pt3dadd( 164.034, 74.515, 145.831, 0.48 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 43.3719, 11.6668, 36.2814, 0.36 ) }
    dend_27 { pt3dadd( 50.1902, 15.1575, 40.4495, 0.48 ) }
    dend_27 { pt3dadd( 57.3625, 19.3717, 43.0286, 0.48 ) }
    dend_27 { pt3dadd( 63.6494, 23.9001, 46.9768, 0.48 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.83594, -12.4245, -29.9259, 0.48 ) }
    dend_21 { pt3dadd( -7.9098, -12.0908, -32.5423, 0.48 ) }
    dend_21 { pt3dadd( -8.46353, -11.9805, -33.2177, 0.48 ) }
    dend_21 { pt3dadd( -8.60615, -11.9536, -33.3692, 0.12 ) }
    dend_21 { pt3dadd( -9.02667, -11.8734, -33.8124, 0.12 ) }
    dend_21 { pt3dadd( -9.70258, -11.7537, -34.5054, 0.72 ) }
    dend_21 { pt3dadd( -10.1995, -11.6711, -35.0281, 0.84 ) }
    dend_21 { pt3dadd( -10.928, -11.5615, -35.6912, 0.12 ) }
    dend_21 { pt3dadd( -11.8073, -11.4373, -36.5438, 0.12 ) }
    dend_21 { pt3dadd( -12.5628, -11.3321, -37.2723, 0.84 ) }
    dend_21 { pt3dadd( -12.7945, -11.3075, -37.4878, 0.84 ) }
    dend_21 { pt3dadd( -13.6756, -11.2545, -38.2683, 0.12 ) }
    dend_21 { pt3dadd( -13.8902, -11.2474, -38.4528, 0.12 ) }
    dend_21 { pt3dadd( -14.2523, -11.2405, -38.7154, 0.12 ) }
    dend_21 { pt3dadd( -14.4789, -11.2316, -38.8767, 1.08 ) }
    dend_21 { pt3dadd( -14.9651, -11.2068, -39.1608, 0.84 ) }
    dend_21 { pt3dadd( -15.8107, -11.1485, -39.61, 0.12 ) }
    dend_21 { pt3dadd( -16.4773, -11.0813, -39.9517, 0.12 ) }
    dend_21 { pt3dadd( -16.7571, -11.034, -40.1781, 0.48 ) }
    dend_21 { pt3dadd( -17.1641, -10.9366, -40.615, 0.12 ) }
    dend_21 { pt3dadd( -17.5531, -10.8197, -41.0865, 0.12 ) }
    dend_21 { pt3dadd( -17.7397, -10.7393, -41.387, 0.84 ) }
    dend_21 { pt3dadd( -18.1058, -10.5626, -42.0495, 1.08 ) }
    dend_21 { pt3dadd( -18.9849, -10.1452, -43.7913, 0.6 ) }
    dend_21 { pt3dadd( -19.2481, -10.0215, -44.3247, 0.84 ) }
    dend_21 { pt3dadd( -19.4065, -9.94884, -44.651, 0.84 ) }
    dend_21 { pt3dadd( -20.3327, -9.5556, -46.5349, 0.12 ) }
    dend_21 { pt3dadd( -20.5062, -9.49344, -46.8474, 0.12 ) }
    dend_21 { pt3dadd( -20.7523, -9.42819, -47.2064, 0.12 ) }
    dend_21 { pt3dadd( -20.9362, -9.39202, -47.4122, 0.48 ) }
    dend_21 { pt3dadd( -21.3199, -9.33352, -47.8115, 0.12 ) }
    dend_21 { pt3dadd( -22.2238, -9.2272, -48.6685, 0.12 ) }
    dend_21 { pt3dadd( -22.6417, -9.1894, -48.9893, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -23.2083, -9.11384, -49.439, 0.84 ) }
    dend_21 { pt3dadd( -23.4135, -9.07966, -49.6016, 0.84 ) }
    dend_21 { pt3dadd( -24.2062, -8.94534, -50.2074, 0.12 ) }
    dend_21 { pt3dadd( -24.4969, -8.89587, -50.419, 0.12 ) }
    dend_21 { pt3dadd( -24.7828, -8.84513, -50.6182, 0.12 ) }
    dend_21 { pt3dadd( -25.7569, -8.67024, -51.2551, 0.12 ) }
    dend_21 { pt3dadd( -25.9039, -8.64067, -51.3474, 0.72 ) }
    dend_21 { pt3dadd( -26.5576, -8.49498, -51.7464, 0.72 ) }
    dend_21 { pt3dadd( -27.1339, -8.35499, -52.0941, 0.12 ) }
    dend_21 { pt3dadd( -27.4856, -8.265, -52.3428, 0.12 ) }
    dend_21 { pt3dadd( -27.9638, -8.13925, -52.7102, 0.48 ) }
    dend_21 { pt3dadd( -28.6137, -7.96277, -53.2375, 0.12 ) }
    dend_21 { pt3dadd( -28.8117, -7.90618, -53.4028, 0.12 ) }
    dend_21 { pt3dadd( -29.2996, -7.73936, -53.8992, 0.72 ) }
    dend_21 { pt3dadd( -29.9093, -7.51061, -54.5889, 0.12 ) }
    dend_21 { pt3dadd( -30.0785, -7.44751, -54.8097, 0.12 ) }
    dend_21 { pt3dadd( -30.126, -7.43139, -54.882, 0.6 ) }
    dend_21 { pt3dadd( -30.323, -7.37794, -55.182, 0.6 ) }
    dend_21 { pt3dadd( -31.1952, -7.17218, -56.4739, 0.48 ) }
    dend_21 { pt3dadd( -31.4504, -7.12031, -56.8395, 0.48 ) }
    dend_21 { pt3dadd( -32.1777, -7.01788, -57.8607, 0.72 ) }
    dend_21 { pt3dadd( -32.8582, -6.96356, -58.7586, 0.12 ) }
    dend_21 { pt3dadd( -33.1058, -6.96177, -59.0604, 0.12 ) }
    dend_21 { pt3dadd( -33.399, -6.98105, -59.3918, 0.48 ) }
    dend_21 { pt3dadd( -34.2089, -7.11704, -60.1592, 0.12 ) }
    dend_21 { pt3dadd( -34.9364, -7.30527, -60.8486, 0.12 ) }
    dend_21 { pt3dadd( -35.4295, -7.48058, -61.2749, 0.12 ) }
    dend_21 { pt3dadd( -35.7769, -7.63658, -61.5534, 0.12 ) }
    dend_21 { pt3dadd( -36.1319, -7.83877, -61.8743, 0.6 ) }
    dend_21 { pt3dadd( -36.4465, -8.04176, -62.1979, 0.6 ) }
    dend_21 { pt3dadd( -37.1054, -8.50261, -62.8863, 0.12 ) }
    dend_21 { pt3dadd( -37.3408, -8.66615, -63.1428, 0.12 ) }
    dend_21 { pt3dadd( -37.6056, -8.83649, -63.4468, 0.12 ) }
    dend_21 { pt3dadd( -38.3381, -9.26558, -64.2262, 0.12 ) }
    dend_21 { pt3dadd( -38.9449, -9.58808, -64.8902, 0.12 ) }
    dend_21 { pt3dadd( -39.197, -9.70644, -65.1617, 0.12 ) }
    dend_21 { pt3dadd( -39.4188, -9.79412, -65.3695, 0.12 ) }
    dend_21 { pt3dadd( -39.7179, -9.89774, -65.639, 0.6 ) }
    dend_21 { pt3dadd( -40.2586, -10.0688, -66.1314, 0.6 ) }
    dend_21 { pt3dadd( -41.5102, -10.4332, -67.0584, 0.12 ) }
    dend_21 { pt3dadd( -41.8228, -10.5283, -67.2757, 0.12 ) }
    dend_21 { pt3dadd( -42.3248, -10.6721, -67.6563, 0.12 ) }
    dend_21 { pt3dadd( -42.6574, -10.7541, -67.8988, 0.36 ) }
    dend_21 { pt3dadd( -43.5291, -10.9255, -68.4838, 0.12 ) }
    dend_21 { pt3dadd( -44.4736, -11.0556, -69.081, 0.12 ) }
    dend_21 { pt3dadd( -45.2212, -11.1567, -69.4632, 0.36 ) }
    dend_21 { pt3dadd( -45.8937, -11.2439, -69.8028, 0.12 ) }
    dend_21 { pt3dadd( -46.7627, -11.3434, -70.2542, 0.12 ) }
    dend_21 { pt3dadd( -47.0896, -11.3678, -70.4093, 0.48 ) }
    dend_21 { pt3dadd( -47.6556, -11.4028, -70.6935, 0.12 ) }
    dend_21 { pt3dadd( -48.2003, -11.4399, -71.0164, 0.12 ) }
    dend_21 { pt3dadd( -48.5115, -11.4614, -71.2149, 0.36 ) }
    dend_21 { pt3dadd( -49.0266, -11.4962, -71.6532, 0.12 ) }
    dend_21 { pt3dadd( -49.4017, -11.4842, -72.1726, 0.12 ) }
    dend_21 { pt3dadd( -49.8414, -11.4162, -72.9796, 0.6 ) }
    dend_21 { pt3dadd( -49.9147, -11.3877, -73.16, 0.6 ) }
    dend_21 { pt3dadd( -50.2222, -11.1768, -74.118, 0.12 ) }
    dend_21 { pt3dadd( -50.5173, -10.826, -75.4006, 0.48 ) }
    dend_21 { pt3dadd( -50.7729, -10.2968, -77.0628, 0.12 ) }
    dend_21 { pt3dadd( -50.8133, -10.1215, -77.5255, 0.12 ) }
    dend_21 { pt3dadd( -50.8489, -9.69585, -78.4785, 0.12 ) }
    dend_21 { pt3dadd( -50.8457, -9.55433, -78.815, 0.6 ) }
    dend_21 { pt3dadd( -50.779, -9.0554, -80.0761, 0.48 ) }
    dend_21 { pt3dadd( -50.6926, -8.65876, -81.2095, 0.24 ) }
    dend_21 { pt3dadd( -50.6643, -8.49885, -81.821, 0.24 ) }
    dend_21 { pt3dadd( -50.6753, -8.12571, -83.8023, 0.84 ) }
    dend_21 { pt3dadd( -50.8279, -7.78945, -86.0324, 0.48 ) }
    dend_21 { pt3dadd( -50.8766, -7.75413, -86.4214, 0.48 ) }
    dend_21 { pt3dadd( -50.9515, -7.74342, -86.8077, 0.6 ) }
    dend_21 { pt3dadd( -51.4477, -7.80585, -88.6705, 0.6 ) }
    dend_21 { pt3dadd( -52.1557, -7.96093, -90.9575, 0.12 ) }
    dend_21 { pt3dadd( -52.571, -8.069, -92.0324, 0.12 ) }
    dend_21 { pt3dadd( -53.2913, -8.20736, -93.5772, 0.12 ) }
    dend_21 { pt3dadd( -53.5639, -8.24608, -94.149, 0.12 ) }
    dend_21 { pt3dadd( -53.8613, -8.28667, -94.7621, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 75/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.83594, -12.4245, -29.9259, 0.12 ) }
    dend_20 { pt3dadd( -6.08732, -12.2134, -29.8982, 0.12 ) }
    dend_20 { pt3dadd( -6.40838, -11.9273, -29.8553, 0.12 ) }
    dend_20 { pt3dadd( -6.93055, -11.4181, -29.9993, 0.12 ) }
    dend_20 { pt3dadd( -7.19248, -11.1116, -30.1349, 0.6 ) }
    dend_20 { pt3dadd( -7.47687, -10.7131, -30.3868, 0.84 ) }
    dend_20 { pt3dadd( -7.64897, -10.453, -30.5797, 0.6 ) }
    dend_20 { pt3dadd( -7.92375, -9.99724, -30.9508, 0.6 ) }
    dend_20 { pt3dadd( -8.60343, -8.7292, -32.2092, 0.12 ) }
    dend_20 { pt3dadd( -8.84675, -8.21813, -32.7938, 0.12 ) }
    dend_20 { pt3dadd( -9.21464, -7.44373, -33.7012, 0.72 ) }
    dend_20 { pt3dadd( -9.48186, -6.89423, -34.3405, 0.72 ) }
    dend_20 { pt3dadd( -9.62242, -6.6219, -34.6459, 0.72 ) }
    dend_20 { pt3dadd( -10.1047, -5.70508, -35.6567, 0.72 ) }
    dend_20 { pt3dadd( -10.5542, -4.92624, -36.4739, 0.12 ) }
    dend_20 { pt3dadd( -10.9481, -4.29426, -37.1609, 0.12 ) }
    dend_20 { pt3dadd( -11.1574, -3.96777, -37.4916, 0.12 ) }
    dend_20 { pt3dadd( -11.3793, -3.61226, -37.8176, 0.72 ) }
    dend_20 { pt3dadd( -11.9189, -2.7755, -38.5394, 0.84 ) }
    dend_20 { pt3dadd( -12.4968, -1.94794, -39.1603, 0.12 ) }
    dend_20 { pt3dadd( -12.7224, -1.64549, -39.4015, 0.12 ) }
    dend_20 { pt3dadd( -13.3447, -0.827601, -40.0961, 0.12 ) }
    dend_20 { pt3dadd( -13.8139, -0.22733, -40.5818, 0.12 ) }
    dend_20 { pt3dadd( -14.1441, 0.223827, -40.9404, 0.6 ) }
    dend_20 { pt3dadd( -14.4381, 0.639634, -41.2359, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_20 { pt3dadd( -15.0064, 1.48106, -41.8112, 0.12 ) }
    dend_20 { pt3dadd( -15.2184, 1.80731, -42.0465, 0.12 ) }
    dend_20 { pt3dadd( -15.5434, 2.31858, -42.4224, 0.12 ) }
    dend_20 { pt3dadd( -16.4745, 3.7727, -43.4869, 0.12 ) }
    dend_20 { pt3dadd( -16.752, 4.20674, -43.8298, 0.12 ) }
    dend_20 { pt3dadd( -16.9105, 4.45908, -44.0357, 0.48 ) }
    dend_20 { pt3dadd( -17.468, 5.32744, -44.7172, 0.36 ) }
    dend_20 { pt3dadd( -17.6136, 5.53352, -44.9178, 0.36 ) }
    dend_20 { pt3dadd( -17.8746, 5.87197, -45.2633, 0.72 ) }
    dend_20 { pt3dadd( -18.801, 6.98355, -46.3522, 0.12 ) }
    dend_20 { pt3dadd( -19.087, 7.34397, -46.7568, 0.12 ) }
    dend_20 { pt3dadd( -19.2989, 7.63904, -47.1157, 0.6 ) }
    dend_20 { pt3dadd( -20.1051, 8.81717, -48.6207, 0.12 ) }
    dend_20 { pt3dadd( -20.6342, 9.59709, -49.6327, 0.12 ) }
    dend_20 { pt3dadd( -20.832, 9.89041, -50.0083, 0.96 ) }
    dend_20 { pt3dadd( -21.5918, 11.0069, -51.3681, 0.96 ) }
    dend_20 { pt3dadd( -21.9578, 11.538, -52.0465, 0.12 ) }
    dend_20 { pt3dadd( -22.0765, 11.7169, -52.2651, 0.12 ) }
    dend_20 { pt3dadd( -22.2846, 12.0434, -52.6121, 0.12 ) }
    dend_20 { pt3dadd( -22.4244, 12.2649, -52.8706, 0.12 ) }
    dend_20 { pt3dadd( -22.8729, 13.0395, -53.5985, 0.12 ) }
    dend_20 { pt3dadd( -23.1979, 13.6353, -54.0462, 0.84 ) }
    dend_20 { pt3dadd( -23.4173, 14.0866, -54.3456, 0.96 ) }
    dend_20 { pt3dadd( -23.5186, 14.3154, -54.4855, 0.96 ) }
    dend_20 { pt3dadd( -24.0229, 15.5176, -55.2447, 0.12 ) }
    dend_20 { pt3dadd( -24.5107, 16.6786, -55.9305, 0.12 ) }
    dend_20 { pt3dadd( -25.072, 18.018, -56.6555, 0.12 ) }
    dend_20 { pt3dadd( -25.492, 19.0501, -57.1891, 0.12 ) }
    dend_20 { pt3dadd( -25.6731, 19.5124, -57.4131, 0.72 ) }
    dend_20 { pt3dadd( -26.1796, 20.8212, -57.9943, 0.12 ) }
    dend_20 { pt3dadd( -26.6722, 22.0867, -58.48, 0.12 ) }
    dend_20 { pt3dadd( -26.7441, 22.2639, -58.5452, 0.48 ) }
    dend_20 { pt3dadd( -26.7967, 22.3913, -58.5824, 0.12 ) }
    dend_20 { pt3dadd( -27.2139, 23.3173, -58.8336, 0.12 ) }
    dend_20 { pt3dadd( -27.695, 24.2646, -59.0093, 0.6 ) }
    dend_20 { pt3dadd( -27.8733, 24.5811, -59.0475, 0.12 ) }
    dend_20 { pt3dadd( -28.427, 25.5082, -59.1708, 0.12 ) }
    dend_20 { pt3dadd( -28.7558, 26.0617, -59.2397, 0.36 ) }
    dend_20 { pt3dadd( -28.8973, 26.3018, -59.2672, 0.12 ) }
    dend_20 { pt3dadd( -29.7655, 27.8641, -59.4009, 0.12 ) }
    dend_20 { pt3dadd( -30.0193, 28.3608, -59.4219, 0.72 ) }
    dend_20 { pt3dadd( -30.3164, 28.9998, -59.4436, 0.48 ) }
    dend_20 { pt3dadd( -30.4719, 29.4304, -59.4578, 0.12 ) }
    dend_20 { pt3dadd( -30.5104, 29.5608, -59.4703, 0.12 ) }
    dend_20 { pt3dadd( -30.8611, 30.9929, -59.6699, 0.12 ) }
    dend_20 { pt3dadd( -30.9303, 31.3441, -59.7277, 0.24 ) }
    dend_20 { pt3dadd( -30.9714, 31.5389, -59.7567, 0.12 ) }
    dend_20 { pt3dadd( -31.279, 32.8804, -59.9626, 0.12 ) }
    dend_20 { pt3dadd( -31.5639, 33.9874, -60.1846, 0.48 ) }
    dend_20 { pt3dadd( -31.6454, 34.2877, -60.2524, 0.12 ) }
    dend_20 { pt3dadd( -32.0225, 35.6464, -60.5929, 0.12 ) }
    dend_20 { pt3dadd( -32.3159, 36.7155, -60.8607, 0.12 ) }
    dend_20 { pt3dadd( -32.4794, 37.2861, -61.0133, 0.6 ) }
    dend_20 { pt3dadd( -32.7415, 38.1373, -61.2374, 0.12 ) }
    dend_20 { pt3dadd( -33.0426, 39.1139, -61.4499, 0.12 ) }
    dend_20 { pt3dadd( -33.1326, 39.4025, -61.5215, 0.48 ) }
    dend_20 { pt3dadd( -33.2395, 39.7343, -61.625, 0.48 ) }
    dend_20 { pt3dadd( -33.4138, 40.2606, -61.807, 0.12 ) }
    dend_20 { pt3dadd( -33.7387, 41.2425, -62.1129, 0.12 ) }
    dend_20 { pt3dadd( -33.8812, 41.7177, -62.1994, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.6651, -40.0239, -5.48157, 0.72 ) }
    dend_16 { pt3dadd( -11.2832, -40.7502, -5.64707, 0.72 ) }
    dend_16 { pt3dadd( -11.5651, -41.1114, -5.74995, 0.48 ) }
    dend_16 { pt3dadd( -11.9665, -41.6652, -5.88487, 0.48 ) }
    dend_16 { pt3dadd( -12.4479, -42.3781, -6.03943, 0.48 ) }
    dend_16 { pt3dadd( -12.6651, -42.7067, -6.10536, 0.6 ) }
    dend_16 { pt3dadd( -13.1349, -43.4212, -6.24103, 0.84 ) }
    dend_16 { pt3dadd( -13.3049, -43.6944, -6.29992, 0.96 ) }
    dend_16 { pt3dadd( -13.6724, -44.2661, -6.41531, 0.48 ) }
    dend_16 { pt3dadd( -13.8978, -44.6014, -6.47811, 0.36 ) }
    dend_16 { pt3dadd( -14.3363, -45.2005, -6.55753, 0.36 ) }
    dend_16 { pt3dadd( -14.6936, -45.6543, -6.59425, 0.72 ) }
    dend_16 { pt3dadd( -14.9988, -46.0153, -6.60319, 0.36 ) }
    dend_16 { pt3dadd( -15.2611, -46.3173, -6.61638, 0.72 ) }
    dend_16 { pt3dadd( -15.6001, -46.7098, -6.64393, 1.08 ) }
    dend_16 { pt3dadd( -15.951, -47.1436, -6.67839, 1.08 ) }
    dend_16 { pt3dadd( -16.2047, -47.4924, -6.70883, 0.72 ) }
    dend_16 { pt3dadd( -16.4478, -47.8521, -6.74687, 0.72 ) }
    dend_16 { pt3dadd( -16.6413, -48.1481, -6.78571, 0.72 ) }
    dend_16 { pt3dadd( -16.923, -48.5696, -6.8563, 0.72 ) }
    dend_16 { pt3dadd( -17.296, -49.122, -6.96804, 0.36 ) }
    dend_16 { pt3dadd( -17.5543, -49.5065, -7.0597, 0.36 ) }
    dend_16 { pt3dadd( -17.8339, -49.9315, -7.15417, 0.48 ) }
    dend_16 { pt3dadd( -18.0996, -50.368, -7.23802, 0.48 ) }
    dend_16 { pt3dadd( -18.3104, -50.7639, -7.296, 0.36 ) }
    dend_16 { pt3dadd( -18.4834, -51.1585, -7.35237, 0.48 ) }
    dend_16 { pt3dadd( -18.6141, -51.5164, -7.39888, 0.48 ) }
    dend_16 { pt3dadd( -18.8285, -52.2006, -7.49164, 0.48 ) }
    dend_16 { pt3dadd( -18.9917, -52.8166, -7.58786, 0.48 ) }
    dend_16 { pt3dadd( -19.1518, -53.5069, -7.70478, 0.48 ) }
    dend_16 { pt3dadd( -19.298, -54.1888, -7.82714, 0.36 ) }
    dend_16 { pt3dadd( -19.4135, -54.7073, -7.92668, 0.6 ) }
    dend_16 { pt3dadd( -19.5722, -55.3187, -8.05174, 0.72 ) }
    dend_16 { pt3dadd( -19.6964, -55.7303, -8.14791, 0.36 ) }
    dend_16 { pt3dadd( -19.832, -56.1028, -8.22956, 0.48 ) }
    dend_16 { pt3dadd( -19.9954, -56.4656, -8.29737, 0.48 ) }
    dend_16 { pt3dadd( -20.1923, -56.8403, -8.3665, 0.36 ) }
    dend_16 { pt3dadd( -20.4714, -57.3313, -8.51307, 0.36 ) }
    dend_16 { pt3dadd( -20.7468, -57.7775, -8.7064, 0.48 ) }
    dend_16 { pt3dadd( -20.9978, -58.1439, -8.89966, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_16 { pt3dadd( -21.4061, -58.7356, -9.27085, 0.96 ) }
    dend_16 { pt3dadd( -21.8373, -59.3705, -9.71577, 0.96 ) }
    dend_16 { pt3dadd( -22.2766, -60.0744, -10.2255, 0.48 ) }
    dend_16 { pt3dadd( -22.5672, -60.6126, -10.6055, 0.48 ) }
    dend_16 { pt3dadd( -22.7815, -61.0501, -10.9007, 0.6 ) }
    dend_16 { pt3dadd( -23.0576, -61.663, -11.295, 0.84 ) }
    dend_16 { pt3dadd( -23.2279, -62.0514, -11.5108, 0.6 ) }
    dend_16 { pt3dadd( -23.4507, -62.5278, -11.7269, 0.72 ) }
    dend_16 { pt3dadd( -23.7674, -63.1512, -11.9544, 0.36 ) }
    dend_16 { pt3dadd( -23.9739, -63.5382, -12.0853, 0.36 ) }
    dend_16 { pt3dadd( -24.2127, -63.9758, -12.2264, 0.48 ) }
    dend_16 { pt3dadd( -24.5321, -64.5533, -12.3976, 0.48 ) }
    dend_16 { pt3dadd( -24.816, -65.0913, -12.5581, 0.48 ) }
    dend_16 { pt3dadd( -25.0196, -65.4957, -12.68, 0.6 ) }
    dend_16 { pt3dadd( -25.2059, -65.8844, -12.7945, 0.84 ) }
    dend_16 { pt3dadd( -25.4472, -66.4546, -12.9546, 0.84 ) }
    dend_16 { pt3dadd( -25.7154, -67.1251, -13.1341, 0.84 ) }
    dend_16 { pt3dadd( -25.9137, -67.6191, -13.2586, 0.48 ) }
    dend_16 { pt3dadd( -26.1122, -68.0705, -13.3641, 0.48 ) }
    dend_16 { pt3dadd( -26.3358, -68.5218, -13.483, 0.6 ) }
    dend_16 { pt3dadd( -26.5113, -68.8308, -13.5795, 0.6 ) }
    dend_16 { pt3dadd( -26.7811, -69.2519, -13.7365, 0.36 ) }
    dend_16 { pt3dadd( -26.9969, -69.57, -13.866, 0.36 ) }
    dend_16 { pt3dadd( -27.1682, -69.8426, -13.9726, 0.36 ) }
    dend_16 { pt3dadd( -27.3433, -70.1545, -14.0822, 0.6 ) }
    dend_16 { pt3dadd( -27.5174, -70.5082, -14.1889, 0.84 ) }
    dend_16 { pt3dadd( -27.6932, -70.8872, -14.2854, 0.84 ) }
    dend_16 { pt3dadd( -27.9757, -71.5492, -14.4446, 0.36 ) }
    dend_16 { pt3dadd( -28.2358, -72.1395, -14.5812, 0.36 ) }
    dend_16 { pt3dadd( -28.4135, -72.522, -14.6724, 0.36 ) }
    dend_16 { pt3dadd( -28.5309, -72.7419, -14.7291, 0.72 ) }
    dend_16 { pt3dadd( -28.7723, -73.1245, -14.8653, 0.96 ) }
    dend_16 { pt3dadd( -29.1553, -73.6512, -15.121, 0.36 ) }
    dend_16 { pt3dadd( -29.3882, -73.9361, -15.2947, 0.36 ) }
    dend_16 { pt3dadd( -29.5601, -74.1462, -15.4328, 0.72 ) }
    dend_16 { pt3dadd( -29.7919, -74.4601, -15.6302, 0.72 ) }
    dend_16 { pt3dadd( -30.1574, -75.0045, -15.9497, 0.36 ) }
    dend_16 { pt3dadd( -30.2473, -75.143, -16.0252, 0.36 ) }
    dend_16 { pt3dadd( -30.4926, -75.5157, -16.221, 0.48 ) }
    dend_16 { pt3dadd( -30.8479, -76.0788, -16.5219, 0.48 ) }
    dend_16 { pt3dadd( -31.1193, -76.5424, -16.7519, 0.48 ) }
    dend_16 { pt3dadd( -31.2819, -76.8611, -16.9133, 0.48 ) }
    dend_16 { pt3dadd( -31.4385, -77.2191, -17.1168, 0.48 ) }
    dend_16 { pt3dadd( -31.5771, -77.5403, -17.3362, 0.36 ) }
    dend_16 { pt3dadd( -31.7035, -77.8071, -17.557, 0.6 ) }
    dend_16 { pt3dadd( -31.8746, -78.1372, -17.8788, 0.72 ) }
    dend_16 { pt3dadd( -32.0758, -78.4959, -18.2379, 0.72 ) }
    dend_16 { pt3dadd( -32.276, -78.8607, -18.5878, 0.48 ) }
    dend_16 { pt3dadd( -32.3644, -79.0183, -18.7309, 0.36 ) }
    dend_16 { pt3dadd( -32.4837, -79.2673, -18.9691, 0.36 ) }
    dend_16 { pt3dadd( -32.5728, -79.453, -19.1868, 0.6 ) }
    dend_16 { pt3dadd( -32.7165, -79.7183, -19.5522, 0.6 ) }
    dend_16 { pt3dadd( -32.8851, -80.004, -19.9696, 0.6 ) }
    dend_16 { pt3dadd( -32.9747, -80.1556, -20.2069, 0.6 ) }
    dend_16 { pt3dadd( -33.3511, -80.8694, -21.3356, 0.72 ) }
    dend_16 { pt3dadd( -33.515, -81.2485, -21.9114, 0.48 ) }
    dend_16 { pt3dadd( -33.5911, -81.4579, -22.2019, 0.48 ) }
    dend_16 { pt3dadd( -33.6367, -81.5981, -22.3801, 0.48 ) }
    dend_16 { pt3dadd( -33.7222, -81.7917, -22.6132, 0.72 ) }
    dend_16 { pt3dadd( -33.8408, -81.9779, -22.8596, 0.84 ) }
    dend_16 { pt3dadd( -34.0254, -82.2171, -23.1957, 0.84 ) }
    dend_16 { pt3dadd( -34.2186, -82.5227, -23.6331, 0.48 ) }
    dend_16 { pt3dadd( -34.3015, -82.6731, -23.8737, 0.48 ) }
    dend_16 { pt3dadd( -34.4939, -83.0286, -24.4458, 0.72 ) }
    dend_16 { pt3dadd( -34.7676, -83.551, -25.2722, 0.72 ) }
    dend_16 { pt3dadd( -34.9965, -84.0553, -25.9905, 0.36 ) }
    dend_16 { pt3dadd( -35.0496, -84.1983, -26.1771, 0.36 ) }
    dend_16 { pt3dadd( -35.1407, -84.5095, -26.5631, 0.36 ) }
    dend_16 { pt3dadd( -35.235, -84.9528, -27.1341, 0.6 ) }
    dend_16 { pt3dadd( -35.2546, -85.124, -27.3571, 0.84 ) }
    dend_16 { pt3dadd( -35.3019, -85.6608, -28.0554, 0.36 ) }
    dend_16 { pt3dadd( -35.318, -86.0109, -28.5286, 0.48 ) }
    dend_16 { pt3dadd( -35.2982, -86.399, -29.151, 0.96 ) }
    dend_16 { pt3dadd( -35.2295, -86.8884, -30.0764, 0.96 ) }
    dend_16 { pt3dadd( -35.1629, -87.3038, -31.0334, 0.48 ) }
    dend_16 { pt3dadd( -35.1506, -87.3599, -31.2084, 0.48 ) }
    dend_16 { pt3dadd( -35.105, -87.4953, -31.7163, 0.72 ) }
    dend_16 { pt3dadd( -34.9564, -87.8457, -32.9733, 0.36 ) }
    dend_16 { pt3dadd( -34.8916, -87.9655, -33.3706, 0.6 ) }
    dend_16 { pt3dadd( -34.7944, -88.147, -33.9154, 0.72 ) }
    dend_16 { pt3dadd( -34.3838, -89.0043, -36.3892, 0.48 ) }
    dend_16 { pt3dadd( -34.3376, -89.1261, -36.7132, 0.36 ) }
    dend_16 { pt3dadd( -34.2811, -89.3256, -37.1928, 0.36 ) }
    dend_16 { pt3dadd( -34.2381, -89.4888, -37.4863, 0.36 ) }
    dend_16 { pt3dadd( -34.2007, -89.6385, -37.7388, 0.36 ) }
    dend_16 { pt3dadd( -34.1495, -89.8152, -38.0344, 0.48 ) }
    dend_16 { pt3dadd( -34.1366, -89.992, -38.3224, 0.48 ) }
    dend_16 { pt3dadd( -34.0327, -90.2534, -38.901, 0.36 ) }
    dend_16 { pt3dadd( -33.9752, -90.348, -39.1216, 0.36 ) }
    dend_16 { pt3dadd( -33.7172, -90.6743, -39.8251, 0.36 ) }
    dend_16 { pt3dadd( -33.3531, -91.0468, -40.6082, 0.48 ) }
    dend_16 { pt3dadd( -33.212, -91.1828, -40.8852, 0.6 ) }
    dend_16 { pt3dadd( -32.6408, -91.7319, -41.9087, 0.36 ) }
    dend_16 { pt3dadd( -32.4546, -91.9167, -42.2179, 0.36 ) }
    dend_16 { pt3dadd( -32.242, -92.1486, -42.563, 0.48 ) }
    dend_16 { pt3dadd( -31.9812, -92.5491, -43.0754, 0.12 ) }
    dend_16 { pt3dadd( -31.8926, -92.8018, -43.3957, 0.12 ) }
    dend_16 { pt3dadd( -31.8737, -92.9017, -43.5239, 0.12 ) }
    dend_16 { pt3dadd( -31.874, -92.9529, -43.5877, 0.6 ) }
    dend_16 { pt3dadd( -31.8982, -93.149, -43.8531, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( -32.0392, -93.7839, -44.6826, 0.6 ) }
    dend_16 { pt3dadd( -32.1634, -94.2812, -45.2308, 0.6 ) }
    dend_16 { pt3dadd( -32.1895, -94.3889, -45.3685, 0.12 ) }
    dend_16 { pt3dadd( -32.2688, -94.6131, -45.7021, 0.12 ) }
    dend_16 { pt3dadd( -32.3145, -94.7148, -45.8808, 0.24 ) }
    dend_16 { pt3dadd( -32.4264, -94.908, -46.2551, 0.24 ) }
    dend_16 { pt3dadd( -32.5354, -95.0512, -46.542, 0.24 ) }
    dend_16 { pt3dadd( -33.064, -95.5852, -47.6729, 0.48 ) }
    dend_16 { pt3dadd( -33.2597, -95.7712, -48.0731, 0.48 ) }
    dend_16 { pt3dadd( -33.4985, -96.0158, -48.5867, 0.48 ) }
    dend_16 { pt3dadd( -33.6153, -96.1526, -48.8658, 0.36 ) }
    dend_16 { pt3dadd( -33.6911, -96.2627, -49.0886, 0.12 ) }
    dend_16 { pt3dadd( -33.9447, -96.5856, -49.7085, 0.12 ) }
    dend_16 { pt3dadd( -34.0995, -96.7578, -49.9402, 0.48 ) }
    dend_16 { pt3dadd( -34.2879, -97.0284, -50.3305, 0.6 ) }
    dend_16 { pt3dadd( -34.4746, -97.3716, -50.849, 0.6 ) }
    dend_16 { pt3dadd( -34.5979, -97.7443, -51.4523, 0.12 ) }
    dend_16 { pt3dadd( -34.642, -98.264, -52.2961, 0.12 ) }
    dend_16 { pt3dadd( -34.5842, -98.949, -53.4381, 0.12 ) }
    dend_16 { pt3dadd( -34.4842, -99.9363, -55.1692, 0.12 ) }
    dend_16 { pt3dadd( -34.4771, -100.026, -55.3215, 0.12 ) }
    dend_16 { pt3dadd( -34.4668, -100.151, -55.5165, 0.12 ) }
    dend_16 { pt3dadd( -34.4532, -100.39, -55.8656, 0.72 ) }
    dend_16 { pt3dadd( -34.4307, -100.539, -56.0596, 0.84 ) }
    dend_16 { pt3dadd( -34.4245, -100.633, -56.1935, 0.84 ) }
    dend_16 { pt3dadd( -34.4737, -100.782, -56.3702, 0.48 ) }
    dend_16 { pt3dadd( -34.6158, -101.182, -56.868, 0.12 ) }
    dend_16 { pt3dadd( -34.6984, -101.439, -57.1744, 0.12 ) }
    dend_16 { pt3dadd( -34.7695, -101.899, -57.7411, 0.36 ) }
    dend_16 { pt3dadd( -34.7726, -102.332, -58.2565, 0.12 ) }
    dend_16 { pt3dadd( -34.7604, -102.536, -58.5222, 0.12 ) }
    dend_16 { pt3dadd( -34.7429, -102.689, -58.7308, 0.48 ) }
    dend_16 { pt3dadd( -34.7179, -102.903, -59.0266, 0.6 ) }
    dend_16 { pt3dadd( -34.6853, -103.49, -59.8772, 0.12 ) }
    dend_16 { pt3dadd( -34.697, -103.661, -60.1645, 0.12 ) }
    dend_16 { pt3dadd( -34.716, -103.95, -60.6145, 0.12 ) }
    dend_16 { pt3dadd( -34.7355, -104.036, -60.7529, 0.12 ) }
    dend_16 { pt3dadd( -34.7962, -104.187, -60.9997, 0.48 ) }
    dend_16 { pt3dadd( -34.8919, -104.374, -61.2763, 0.84 ) }
    dend_16 { pt3dadd( -35.3475, -105.241, -62.3623, 0.36 ) }
    dend_16 { pt3dadd( -35.4451, -105.45, -62.5943, 0.36 ) }
    dend_16 { pt3dadd( -35.6562, -105.968, -63.0958, 0.36 ) }
    dend_16 { pt3dadd( -35.8709, -106.424, -63.503, 0.6 ) }
    dend_16 { pt3dadd( -36.0505, -106.776, -63.805, 0.6 ) }
    dend_16 { pt3dadd( -36.3094, -107.234, -64.164, 0.6 ) }
    dend_16 { pt3dadd( -36.506, -107.537, -64.3673, 0.6 ) }
    dend_16 { pt3dadd( -36.7287, -107.879, -64.6015, 0.12 ) }
    dend_16 { pt3dadd( -37.2412, -108.679, -65.1322, 0.12 ) }
    dend_16 { pt3dadd( -37.505, -109.038, -65.3683, 0.6 ) }
    dend_16 { pt3dadd( -37.7061, -109.283, -65.5348, 0.6 ) }
    dend_16 { pt3dadd( -37.8165, -109.409, -65.6142, 0.6 ) }
    dend_16 { pt3dadd( -38.0472, -109.668, -65.7742, 0.12 ) }
    dend_16 { pt3dadd( -38.22, -109.871, -65.8966, 0.12 ) }
    dend_16 { pt3dadd( -38.2883, -109.95, -65.9465, 0.12 ) }
    dend_16 { pt3dadd( -38.4127, -110.051, -66.0208, 0.12 ) }
    dend_16 { pt3dadd( -38.6514, -110.214, -66.1952, 0.12 ) }
    dend_16 { pt3dadd( -38.8612, -110.342, -66.3599, 0.12 ) }
    dend_16 { pt3dadd( -39.2038, -110.505, -66.6252, 0.6 ) }
    dend_16 { pt3dadd( -39.5907, -110.679, -67.0233, 0.6 ) }
    dend_16 { pt3dadd( -39.8427, -110.798, -67.3262, 0.6 ) }
    dend_16 { pt3dadd( -40.2893, -111.037, -67.9279, 0.12 ) }
    dend_16 { pt3dadd( -40.3907, -111.097, -68.0692, 0.12 ) }
    dend_16 { pt3dadd( -40.7107, -111.308, -68.5059, 0.48 ) }
    dend_16 { pt3dadd( -41.3435, -111.768, -69.3094, 0.12 ) }
    dend_16 { pt3dadd( -41.5199, -111.92, -69.5404, 0.12 ) }
    dend_16 { pt3dadd( -41.7372, -112.133, -69.8037, 0.12 ) }
    dend_16 { pt3dadd( -42.0543, -112.498, -70.1959, 0.12 ) }
    dend_16 { pt3dadd( -42.266, -112.783, -70.4651, 0.6 ) }
    dend_16 { pt3dadd( -42.3783, -112.969, -70.6036, 0.6 ) }
    dend_16 { pt3dadd( -42.5871, -113.406, -70.9419, 0.24 ) }
    dend_16 { pt3dadd( -42.6963, -113.701, -71.2129, 0.24 ) }
    dend_16 { pt3dadd( -42.8736, -114.275, -71.8014, 0.24 ) }
    dend_16 { pt3dadd( -42.921, -114.473, -72.0091, 0.48 ) }
    dend_16 { pt3dadd( -42.9778, -114.795, -72.3735, 0.48 ) }
    dend_16 { pt3dadd( -43.0842, -115.725, -73.4691, 0.36 ) }
    dend_16 { pt3dadd( -43.0928, -115.887, -73.6707, 0.36 ) }
    dend_16 { pt3dadd( -43.1172, -116.138, -74.003, 0.36 ) }
    dend_16 { pt3dadd( -43.1456, -116.354, -74.2732, 0.36 ) }
    dend_16 { pt3dadd( -43.206, -116.873, -74.9033, 0.48 ) }
    dend_16 { pt3dadd( -43.2421, -117.188, -75.2835, 0.48 ) }
    dend_16 { pt3dadd( -43.2814, -117.55, -75.6332, 0.12 ) }
    dend_16 { pt3dadd( -43.2832, -118.002, -76.0589, 0.12 ) }
    dend_16 { pt3dadd( -43.2508, -118.321, -76.3489, 0.12 ) }
    dend_16 { pt3dadd( -43.2351, -118.446, -76.4564, 0.12 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.6651, -40.0239, -5.48157, 0.48 ) }
    dend_15 { pt3dadd( -10.7372, -41.0855, -5.10481, 0.48 ) }
    dend_15 { pt3dadd( -10.7924, -41.9394, -4.81134, 0.6 ) }
    dend_15 { pt3dadd( -10.8246, -43.1175, -4.42281, 0.6 ) }
    dend_15 { pt3dadd( -10.8226, -43.9779, -4.14875, 0.6 ) }
    dend_15 { pt3dadd( -10.8092, -44.6752, -3.93654, 0.36 ) }
    dend_15 { pt3dadd( -10.7923, -45.1594, -3.75538, 0.36 ) }
    dend_15 { pt3dadd( -10.7833, -45.4104, -3.63147, 0.36 ) }
    dend_15 { pt3dadd( -10.708, -45.9797, -3.33076, 0.6 ) }
    dend_15 { pt3dadd( -10.652, -46.2343, -3.20355, 0.72 ) }
    dend_15 { pt3dadd( -10.562, -46.554, -2.99903, 0.72 ) }
    dend_15 { pt3dadd( -10.2262, -47.5946, -2.22068, 0.72 ) }
    dend_15 { pt3dadd( -10.1059, -47.9502, -1.93795, 0.72 ) }
    dend_15 { pt3dadd( -9.9097, -48.5134, -1.45689, 0.24 ) }
    dend_15 { pt3dadd( -9.69987, -49.0948, -0.949306, 0.24 ) }
    dend_15 { pt3dadd( -9.41228, -49.8043, -0.353976, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( -9.17335, -50.3396, 0.0868596, 0.6 ) }
    dend_15 { pt3dadd( -8.90016, -50.9041, 0.517518, 0.6 ) }
    dend_15 { pt3dadd( -8.42124, -51.8686, 1.2928, 0.36 ) }
    dend_15 { pt3dadd( -8.24802, -52.2102, 1.5664, 0.36 ) }
    dend_15 { pt3dadd( -7.91068, -52.8888, 2.09279, 0.36 ) }
    dend_15 { pt3dadd( -7.71342, -53.327, 2.42117, 0.6 ) }
    dend_15 { pt3dadd( -7.544, -53.7477, 2.73764, 0.6 ) }
    dend_15 { pt3dadd( -7.29164, -54.5128, 3.30819, 0.36 ) }
    dend_15 { pt3dadd( -7.14291, -55.0548, 3.71028, 0.36 ) }
    dend_15 { pt3dadd( -6.99906, -55.6039, 4.11828, 0.36 ) }
    dend_15 { pt3dadd( -6.82112, -56.3287, 4.72324, 0.48 ) }
    dend_15 { pt3dadd( -6.71897, -56.7226, 5.0748, 0.48 ) }
    dend_15 { pt3dadd( -6.61958, -57.0945, 5.42754, 0.48 ) }
    dend_15 { pt3dadd( -6.42581, -57.7235, 6.03525, 0.48 ) }
    dend_15 { pt3dadd( -6.19537, -58.4227, 6.74179, 0.48 ) }
    dend_15 { pt3dadd( -5.83369, -59.4745, 7.74691, 0.48 ) }
    dend_15 { pt3dadd( -5.69055, -59.9128, 8.12761, 0.36 ) }
    dend_15 { pt3dadd( -5.62932, -60.1078, 8.28961, 0.36 ) }
    dend_15 { pt3dadd( -5.51636, -60.4787, 8.554, 0.48 ) }
    dend_15 { pt3dadd( -5.36617, -61.0691, 8.90655, 0.36 ) }
    dend_15 { pt3dadd( -5.21521, -61.7548, 9.26707, 0.36 ) }
    dend_15 { pt3dadd( -5.08647, -62.3394, 9.52105, 0.48 ) }
    dend_15 { pt3dadd( -4.88717, -63.1817, 9.90304, 0.36 ) }
    dend_15 { pt3dadd( -4.61018, -64.1918, 10.3796, 0.36 ) }
    dend_15 { pt3dadd( -4.34504, -65.0593, 10.8047, 0.36 ) }
    dend_15 { pt3dadd( -4.05157, -65.9015, 11.2264, 0.36 ) }
    dend_15 { pt3dadd( -3.82983, -66.4835, 11.5463, 0.36 ) }
    dend_15 { pt3dadd( -3.45652, -67.3842, 12.0595, 0.36 ) }
    dend_15 { pt3dadd( -3.14313, -68.1431, 12.4738, 0.48 ) }
    dend_15 { pt3dadd( -2.87276, -68.8158, 12.8302, 0.84 ) }
    dend_15 { pt3dadd( -2.5442, -69.6331, 13.2225, 0.48 ) }
    dend_15 { pt3dadd( -2.32721, -70.2326, 13.5353, 0.24 ) }
    dend_15 { pt3dadd( -2.10997, -70.9374, 13.9198, 0.24 ) }
    dend_15 { pt3dadd( -1.87427, -71.8188, 14.3931, 0.24 ) }
    dend_15 { pt3dadd( -1.67674, -72.6223, 14.829, 0.24 ) }
    dend_15 { pt3dadd( -1.52444, -73.2564, 15.2145, 0.24 ) }
    dend_15 { pt3dadd( -1.24908, -74.4215, 15.9606, 0.72 ) }
    dend_15 { pt3dadd( -1.16726, -74.7516, 16.1726, 0.72 ) }
    dend_15 { pt3dadd( -0.965059, -75.5132, 16.6455, 0.36 ) }
    dend_15 { pt3dadd( -0.773453, -76.1487, 17.011, 0.36 ) }
    dend_15 { pt3dadd( -0.367765, -77.4607, 17.6388, 0.24 ) }
    dend_15 { pt3dadd( -0.118848, -78.306, 17.9459, 0.24 ) }
    dend_15 { pt3dadd( 0.0671899, -78.954, 18.124, 0.24 ) }
    dend_15 { pt3dadd( 0.275295, -79.7744, 18.3354, 0.24 ) }
    dend_15 { pt3dadd( 0.405967, -80.3945, 18.4745, 0.36 ) }
    dend_15 { pt3dadd( 0.524363, -81.0327, 18.5878, 0.36 ) }
    dend_15 { pt3dadd( 0.628383, -81.6685, 18.6579, 0.48 ) }
    dend_15 { pt3dadd( 0.735259, -82.496, 18.7739, 0.48 ) }
    dend_15 { pt3dadd( 0.785681, -83.0084, 18.8592, 0.48 ) }
    dend_15 { pt3dadd( 0.823262, -83.5299, 18.9595, 0.6 ) }
    dend_15 { pt3dadd( 0.85904, -84.038, 19.0441, 0.72 ) }
    dend_15 { pt3dadd( 0.90768, -84.665, 19.1289, 0.72 ) }
    dend_15 { pt3dadd( 0.988099, -85.5689, 19.2256, 0.24 ) }
    dend_15 { pt3dadd( 1.06263, -86.3347, 19.3141, 0.24 ) }
    dend_15 { pt3dadd( 1.12343, -86.842, 19.3899, 0.48 ) }
    dend_15 { pt3dadd( 1.21941, -87.5147, 19.5082, 0.6 ) }
    dend_15 { pt3dadd( 1.36828, -88.4147, 19.6911, 0.36 ) }
    dend_15 { pt3dadd( 1.56858, -89.4381, 19.9258, 0.36 ) }
    dend_15 { pt3dadd( 1.78519, -90.4066, 20.1373, 0.36 ) }
    dend_15 { pt3dadd( 1.95575, -91.1273, 20.279, 0.36 ) }
    dend_15 { pt3dadd( 2.05378, -91.5081, 20.3456, 0.24 ) }
    dend_15 { pt3dadd( 2.07234, -91.5798, 20.3601, 0.48 ) }
    dend_15 { pt3dadd( 2.2841, -92.4032, 20.5346, 0.6 ) }
    dend_15 { pt3dadd( 2.47561, -93.0999, 20.68, 0.36 ) }
    dend_15 { pt3dadd( 2.64031, -93.7037, 20.7939, 0.36 ) }
    dend_15 { pt3dadd( 2.71056, -93.9781, 20.8529, 0.48 ) }
    dend_15 { pt3dadd( 2.93539, -94.8901, 21.0551, 0.48 ) }
    dend_15 { pt3dadd( 3.05298, -95.3788, 21.1782, 0.36 ) }
    dend_15 { pt3dadd( 3.25662, -96.2471, 21.4209, 0.36 ) }
    dend_15 { pt3dadd( 3.45489, -97.1207, 21.6768, 0.36 ) }
    dend_15 { pt3dadd( 3.62967, -97.8879, 21.902, 0.36 ) }
    dend_15 { pt3dadd( 3.8494, -98.8844, 22.1753, 0.36 ) }
    dend_15 { pt3dadd( 4.07513, -99.8803, 22.4167, 0.36 ) }
    dend_15 { pt3dadd( 4.16174, -100.268, 22.5144, 0.48 ) }
    dend_15 { pt3dadd( 4.26469, -100.758, 22.6432, 0.48 ) }
    dend_15 { pt3dadd( 4.40131, -101.36, 22.8261, 0.48 ) }
    dend_15 { pt3dadd( 4.58933, -102.118, 23.0726, 0.48 ) }
    dend_15 { pt3dadd( 4.79917, -102.864, 23.3189, 0.48 ) }
    dend_15 { pt3dadd( 5.0577, -103.731, 23.5837, 0.6 ) }
    dend_15 { pt3dadd( 5.14387, -104.0, 23.6617, 0.6 ) }
    dend_15 { pt3dadd( 5.42475, -104.83, 23.8856, 0.36 ) }
    dend_15 { pt3dadd( 5.79207, -105.833, 24.1348, 0.36 ) }
    dend_15 { pt3dadd( 6.05678, -106.523, 24.3047, 0.36 ) }
    dend_15 { pt3dadd( 6.45236, -107.478, 24.535, 0.36 ) }
    dend_15 { pt3dadd( 6.86151, -108.407, 24.7447, 0.36 ) }
    dend_15 { pt3dadd( 7.13939, -109.036, 24.8677, 0.36 ) }
    dend_15 { pt3dadd( 7.37542, -109.562, 24.9341, 0.36 ) }
    dend_15 { pt3dadd( 7.53552, -109.903, 24.9673, 0.48 ) }
    dend_15 { pt3dadd( 7.81764, -110.496, 25.0099, 0.48 ) }
    dend_15 { pt3dadd( 8.18167, -111.275, 25.048, 0.48 ) }
    dend_15 { pt3dadd( 8.56198, -112.139, 25.0734, 0.48 ) }
    dend_15 { pt3dadd( 8.96849, -113.115, 25.0912, 0.48 ) }
    dend_15 { pt3dadd( 9.13304, -113.552, 25.0946, 0.48 ) }
    dend_15 { pt3dadd( 9.42166, -114.361, 25.1008, 0.48 ) }
    dend_15 { pt3dadd( 9.62544, -114.975, 25.1063, 0.48 ) }
    dend_15 { pt3dadd( 9.71895, -115.249, 25.1084, 0.6 ) }
    dend_15 { pt3dadd( 9.81902, -115.521, 25.1161, 0.72 ) }
    dend_15 { pt3dadd( 10.036, -116.137, 25.1527, 0.48 ) }
    dend_15 { pt3dadd( 10.2721, -116.792, 25.1862, 0.48 ) }
    dend_15 { pt3dadd( 10.3771, -117.062, 25.2005, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_15 { pt3dadd( 10.6975, -117.8, 25.2512, 0.36 ) }
    dend_15 { pt3dadd( 10.9716, -118.386, 25.2982, 0.36 ) }
    dend_15 { pt3dadd( 11.2101, -118.851, 25.3414, 0.36 ) }
    dend_15 { pt3dadd( 11.5722, -119.513, 25.4146, 0.36 ) }
    dend_15 { pt3dadd( 11.8842, -120.066, 25.5032, 0.48 ) }
    dend_15 { pt3dadd( 12.2768, -120.786, 25.6424, 0.6 ) }
    dend_15 { pt3dadd( 12.916, -122.008, 25.9124, 0.48 ) }
    dend_15 { pt3dadd( 13.3277, -122.811, 26.0979, 0.36 ) }
    dend_15 { pt3dadd( 13.8738, -123.872, 26.3344, 0.36 ) }
    dend_15 { pt3dadd( 14.2275, -124.601, 26.485, 0.6 ) }
    dend_15 { pt3dadd( 14.6033, -125.415, 26.6198, 0.6 ) }
    dend_15 { pt3dadd( 14.9777, -126.263, 26.7317, 0.6 ) }
    dend_15 { pt3dadd( 15.3486, -127.119, 26.8008, 0.6 ) }
    dend_15 { pt3dadd( 15.9126, -128.428, 26.8486, 0.48 ) }
    dend_15 { pt3dadd( 16.5624, -129.972, 26.8451, 0.48 ) }
    dend_15 { pt3dadd( 16.92, -130.823, 26.8199, 0.48 ) }
    dend_15 { pt3dadd( 17.4469, -132.048, 26.7546, 0.48 ) }
    dend_15 { pt3dadd( 17.8306, -132.935, 26.6914, 0.24 ) }
    dend_15 { pt3dadd( 18.1621, -133.726, 26.6256, 0.24 ) }
    dend_15 { pt3dadd( 18.7011, -135.054, 26.5016, 0.24 ) }
    dend_15 { pt3dadd( 18.975, -135.755, 26.4361, 0.24 ) }
    dend_15 { pt3dadd( 19.2629, -136.549, 26.3867, 0.6 ) }
    dend_15 { pt3dadd( 19.3732, -136.89, 26.379, 0.84 ) }
    dend_15 { pt3dadd( 19.5225, -137.401, 26.3982, 0.84 ) }
    dend_15 { pt3dadd( 19.7196, -138.133, 26.4482, 0.48 ) }
    dend_15 { pt3dadd( 19.9983, -139.274, 26.5678, 0.36 ) }
    dend_15 { pt3dadd( 20.1608, -140.058, 26.677, 0.36 ) }
    dend_15 { pt3dadd( 20.3239, -140.928, 26.8395, 0.36 ) }
    dend_15 { pt3dadd( 20.4576, -141.588, 26.9743, 0.36 ) }
    dend_15 { pt3dadd( 20.6104, -142.216, 27.1166, 0.36 ) }
    dend_15 { pt3dadd( 20.7382, -142.692, 27.2328, 0.48 ) }
    dend_15 { pt3dadd( 20.9639, -143.46, 27.4067, 0.48 ) }
    dend_15 { pt3dadd( 21.1034, -143.921, 27.497, 0.36 ) }
    dend_15 { pt3dadd( 21.38, -144.775, 27.6355, 0.36 ) }
    dend_15 { pt3dadd( 21.6546, -145.547, 27.7641, 0.36 ) }
    dend_15 { pt3dadd( 21.8918, -146.13, 27.8632, 0.36 ) }
    dend_15 { pt3dadd( 22.397, -147.187, 28.0504, 0.36 ) }
    dend_15 { pt3dadd( 22.707, -147.766, 28.1378, 0.36 ) }
    dend_15 { pt3dadd( 23.1696, -148.564, 28.2391, 0.36 ) }
    dend_15 { pt3dadd( 23.6101, -149.267, 28.3193, 0.48 ) }
    dend_15 { pt3dadd( 24.0842, -149.953, 28.3937, 0.48 ) }
    dend_15 { pt3dadd( 24.9188, -151.044, 28.5148, 0.48 ) }
    dend_15 { pt3dadd( 25.3369, -151.545, 28.5991, 0.12 ) }
    dend_15 { pt3dadd( 25.7493, -152.028, 28.7067, 0.12 ) }
    dend_15 { pt3dadd( 26.0918, -152.449, 28.8193, 0.24 ) }
    dend_15 { pt3dadd( 26.3669, -152.813, 28.9331, 0.24 ) }
    dend_15 { pt3dadd( 26.9102, -153.529, 29.2017, 0.12 ) }
    dend_15 { pt3dadd( 27.5195, -154.289, 29.5379, 0.36 ) }
    dend_15 { pt3dadd( 27.9066, -154.751, 29.7906, 0.6 ) }
    dend_15 { pt3dadd( 28.2211, -155.119, 30.0026, 0.36 ) }
    dend_15 { pt3dadd( 28.5573, -155.51, 30.208, 0.36 ) }
    dend_15 { pt3dadd( 29.345, -156.435, 30.6343, 0.36 ) }
    dend_15 { pt3dadd( 29.6771, -156.83, 30.7868, 0.36 ) }
    dend_15 { pt3dadd( 30.2253, -157.578, 30.9814, 0.24 ) }
    dend_15 { pt3dadd( 30.5042, -158.032, 31.0809, 0.24 ) }
    dend_15 { pt3dadd( 30.8545, -158.755, 31.1871, 0.36 ) }
    dend_15 { pt3dadd( 30.9835, -159.11, 31.1962, 0.36 ) }
    dend_15 { pt3dadd( 31.0855, -159.491, 31.1668, 0.36 ) }
    dend_15 { pt3dadd( 31.3464, -160.485, 31.0407, 0.36 ) }
    dend_15 { pt3dadd( 31.5154, -161.12, 30.9878, 0.48 ) }
    dend_15 { pt3dadd( 31.671, -161.698, 31.0101, 0.48 ) }
    dend_15 { pt3dadd( 31.8656, -162.365, 31.1105, 0.12 ) }
    dend_15 { pt3dadd( 32.1562, -163.34, 31.3006, 0.12 ) }
    dend_15 { pt3dadd( 32.2894, -163.775, 31.4026, 0.48 ) }
    dend_15 { pt3dadd( 32.6924, -164.922, 31.744, 0.12 ) }
    dend_15 { pt3dadd( 33.0282, -165.754, 32.0423, 0.12 ) }
    dend_15 { pt3dadd( 33.2078, -166.153, 32.2088, 0.6 ) }
    dend_15 { pt3dadd( 33.5193, -166.797, 32.4919, 0.12 ) }
    dend_15 { pt3dadd( 33.7434, -167.19, 32.6159, 0.12 ) }
    dend_15 { pt3dadd( 34.128, -167.8, 32.7177, 0.12 ) }
    dend_15 { pt3dadd( 34.4402, -168.25, 32.6943, 0.12 ) }
    dend_15 { pt3dadd( 34.5971, -168.495, 32.6916, 0.72 ) }
    dend_15 { pt3dadd( 34.9063, -169.066, 32.713, 0.72 ) }
    dend_15 { pt3dadd( 35.3821, -170.076, 32.8057, 0.48 ) }
    dend_15 { pt3dadd( 35.5164, -170.439, 32.8335, 0.48 ) }
    dend_15 { pt3dadd( 35.7675, -171.302, 32.8959, 0.12 ) }
    dend_15 { pt3dadd( 36.2301, -173.194, 33.0507, 0.12 ) }
    dend_15 { pt3dadd( 36.319, -173.591, 33.0912, 0.12 ) }
    dend_15 { pt3dadd( 36.3979, -174.046, 33.1494, 0.6 ) }
    dend_15 { pt3dadd( 36.5259, -174.997, 33.3059, 0.12 ) }
    dend_15 { pt3dadd( 36.5539, -175.205, 33.3309, 0.12 ) }
    dend_15 { pt3dadd( 36.6882, -176.166, 33.4012, 0.12 ) }
    dend_15 { pt3dadd( 36.7634, -176.693, 33.383, 0.12 ) }
    dend_15 { pt3dadd( 36.8115, -177.231, 33.374, 0.48 ) }
    dend_15 { pt3dadd( 36.8228, -177.618, 33.3851, 0.12 ) }
    dend_15 { pt3dadd( 36.7881, -178.516, 33.4531, 0.12 ) }
    dend_15 { pt3dadd( 36.7496, -179.328, 33.5217, 0.12 ) }
    dend_15 { pt3dadd( 36.7312, -179.792, 33.5426, 0.96 ) }
    dend_15 { pt3dadd( 36.7188, -180.48, 33.5502, 0.48 ) }
    dend_15 { pt3dadd( 36.7248, -181.078, 33.5431, 0.36 ) }
    dend_15 { pt3dadd( 36.7253, -181.442, 33.5267, 0.36 ) }
    dend_15 { pt3dadd( 36.7077, -182.162, 33.4733, 0.36 ) }
    dend_15 { pt3dadd( 36.6493, -183.099, 33.3829, 0.24 ) }
    dend_15 { pt3dadd( 36.5965, -183.991, 33.2595, 0.24 ) }
    dend_15 { pt3dadd( 36.5671, -184.371, 33.1918, 0.24 ) }
    dend_15 { pt3dadd( 36.5504, -184.664, 33.1346, 0.6 ) }
    dend_15 { pt3dadd( 36.5198, -185.305, 33.0216, 0.72 ) }
    dend_15 { pt3dadd( 36.4874, -185.764, 32.9506, 0.84 ) }
    dend_15 { pt3dadd( 36.4497, -186.508, 32.8782, 0.12 ) }
    dend_15 { pt3dadd( 36.4483, -186.903, 32.8256, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_15 { pt3dadd( 36.4629, -187.591, 32.7254, 0.12 ) }
    dend_15 { pt3dadd( 36.4896, -188.091, 32.6536, 0.12 ) }
    dend_15 { pt3dadd( 36.5164, -188.345, 32.62, 0.12 ) }
    dend_15 { pt3dadd( 36.5912, -188.854, 32.5712, 0.6 ) }
    dend_15 { pt3dadd( 36.682, -189.51, 32.5396, 0.12 ) }
    dend_15 { pt3dadd( 36.7662, -190.269, 32.5064, 0.12 ) }
    dend_15 { pt3dadd( 36.7916, -190.555, 32.4791, 0.48 ) }
    dend_15 { pt3dadd( 36.8568, -191.185, 32.4072, 0.48 ) }
    dend_15 { pt3dadd( 36.9371, -191.753, 32.3441, 0.48 ) }
    dend_15 { pt3dadd( 37.1168, -192.756, 32.2504, 0.48 ) }
    dend_15 { pt3dadd( 37.2353, -193.321, 32.2139, 0.6 ) }
    dend_15 { pt3dadd( 37.4507, -194.223, 32.1151, 0.12 ) }
    dend_15 { pt3dadd( 37.5931, -194.839, 32.0283, 0.12 ) }
    dend_15 { pt3dadd( 37.7386, -195.469, 31.9239, 0.24 ) }
    dend_15 { pt3dadd( 37.9037, -196.126, 31.8101, 0.24 ) }
    dend_15 { pt3dadd( 38.1375, -196.9, 31.6564, 0.48 ) }
    dend_15 { pt3dadd( 38.3647, -197.576, 31.5099, 0.12 ) }
    dend_15 { pt3dadd( 38.5176, -198.066, 31.4042, 0.12 ) }
    dend_15 { pt3dadd( 38.5837, -198.338, 31.3309, 0.6 ) }
    dend_15 { pt3dadd( 38.6388, -198.726, 31.2138, 0.6 ) }
    dend_15 { pt3dadd( 38.696, -199.566, 30.8337, 0.12 ) }
    dend_15 { pt3dadd( 38.6904, -200.179, 30.5099, 0.12 ) }
    dend_15 { pt3dadd( 38.666, -200.537, 30.3109, 0.12 ) }
    dend_15 { pt3dadd( 38.6195, -200.927, 30.0722, 0.6 ) }
    dend_15 { pt3dadd( 38.5045, -201.566, 29.682, 0.6 ) }
    dend_15 { pt3dadd( 38.1925, -203.015, 28.7987, 0.12 ) }
    dend_15 { pt3dadd( 38.0393, -203.662, 28.3895, 0.12 ) }
    dend_15 { pt3dadd( 38.0074, -203.824, 28.2922, 0.36 ) }
    dend_15 { pt3dadd( 37.9904, -203.999, 28.2013, 0.12 ) }
    dend_15 { pt3dadd( 37.9687, -204.706, 27.8949, 0.12 ) }
    dend_15 { pt3dadd( 37.9727, -205.37, 27.6745, 0.84 ) }
    dend_15 { pt3dadd( 37.9771, -206.336, 27.4635, 0.12 ) }
    dend_15 { pt3dadd( 38.0016, -207.342, 27.1904, 0.12 ) }
    dend_15 { pt3dadd( 38.0441, -208.383, 26.8394, 0.12 ) }
    dend_15 { pt3dadd( 38.0607, -208.766, 26.6967, 0.72 ) }
    dend_15 { pt3dadd( 38.0802, -209.372, 26.4623, 0.96 ) }
    dend_15 { pt3dadd( 38.0846, -209.76, 26.3201, 0.96 ) }
    dend_15 { pt3dadd( 38.0617, -211.066, 25.864, 0.48 ) }
    dend_15 { pt3dadd( 38.0185, -211.755, 25.6028, 0.12 ) }
    dend_15 { pt3dadd( 37.9355, -212.587, 25.2539, 0.12 ) }
    dend_15 { pt3dadd( 37.815, -213.407, 24.9131, 0.12 ) }
    dend_15 { pt3dadd( 37.7378, -213.763, 24.7771, 0.12 ) }
    dend_15 { pt3dadd( 37.5529, -214.392, 24.5708, 0.12 ) }
    dend_15 { pt3dadd( 37.3559, -214.911, 24.407, 0.96 ) }
    dend_15 { pt3dadd( 36.9788, -215.784, 24.0786, 0.12 ) }
    dend_15 { pt3dadd( 36.6591, -216.481, 23.7562, 0.12 ) }
    dend_15 { pt3dadd( 36.2302, -217.379, 23.2815, 0.12 ) }
    dend_15 { pt3dadd( 36.0535, -217.753, 23.0596, 0.12 ) }
    dend_15 { pt3dadd( 35.6018, -218.754, 22.4487, 0.48 ) }
    dend_15 { pt3dadd( 35.454, -219.09, 22.2413, 0.12 ) }
    dend_15 { pt3dadd( 35.3094, -219.487, 21.9089, 0.12 ) }
    dend_15 { pt3dadd( 35.2772, -219.616, 21.7797, 0.36 ) }
    dend_15 { pt3dadd( 35.2046, -219.95, 21.4095, 0.12 ) }
    dend_15 { pt3dadd( 35.0502, -220.753, 20.488, 0.12 ) }
    dend_15 { pt3dadd( 34.9242, -221.453, 19.6719, 1.32 ) }
    dend_15 { pt3dadd( 34.6097, -223.26, 17.4609, 0.84 ) }
    dend_15 { pt3dadd( 34.5706, -223.493, 17.146, 0.84 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.83836, -36.9862, -16.7045, 0.36 ) }
    dend_13 { pt3dadd( -4.81586, -38.0518, -17.8671, 0.36 ) }
    dend_13 { pt3dadd( -4.76635, -38.6787, -18.5282, 0.36 ) }
    dend_13 { pt3dadd( -4.70673, -39.2338, -19.0386, 0.6 ) }
    dend_13 { pt3dadd( -4.60546, -39.9299, -19.6064, 0.96 ) }
    dend_13 { pt3dadd( -4.51925, -40.39, -19.9121, 0.84 ) }
    dend_13 { pt3dadd( -4.18111, -41.7985, -20.6564, 0.36 ) }
    dend_13 { pt3dadd( -3.98952, -42.3352, -20.8237, 0.36 ) }
    dend_13 { pt3dadd( -3.57205, -43.3012, -21.0061, 0.36 ) }
    dend_13 { pt3dadd( -3.32132, -43.8426, -21.0453, 0.48 ) }
    dend_13 { pt3dadd( -2.80179, -44.9501, -21.0276, 0.48 ) }
    dend_13 { pt3dadd( -2.35643, -45.8618, -20.9672, 0.12 ) }
    dend_13 { pt3dadd( -1.84828, -46.8457, -20.8531, 0.12 ) }
    dend_13 { pt3dadd( -1.44341, -47.5319, -20.8011, 0.12 ) }
    dend_13 { pt3dadd( -1.30359, -47.7584, -20.7938, 0.84 ) }
    dend_13 { pt3dadd( -1.00757, -48.2629, -20.8075, 0.84 ) }
    dend_13 { pt3dadd( -0.554159, -49.0958, -20.9172, 0.36 ) }
    dend_13 { pt3dadd( -0.250462, -49.7, -21.0256, 0.12 ) }
    dend_13 { pt3dadd( 0.378087, -50.9587, -21.2926, 0.12 ) }
    dend_13 { pt3dadd( 0.582168, -51.3214, -21.3727, 0.48 ) }
    dend_13 { pt3dadd( 0.793378, -51.6848, -21.4605, 0.48 ) }
    dend_13 { pt3dadd( 1.12667, -52.2621, -21.5984, 0.36 ) }
    dend_13 { pt3dadd( 1.26755, -52.5573, -21.6769, 0.36 ) }
    dend_13 { pt3dadd( 1.49566, -53.1648, -21.9062, 0.48 ) }
    dend_13 { pt3dadd( 1.68774, -53.9013, -22.4017, 0.36 ) }
    dend_13 { pt3dadd( 1.81553, -54.474, -22.8598, 0.48 ) }
    dend_13 { pt3dadd( 1.87835, -54.8259, -23.1702, 0.72 ) }
    dend_13 { pt3dadd( 1.95413, -55.4701, -23.8046, 0.72 ) }
    dend_13 { pt3dadd( 1.98706, -56.1723, -24.5225, 0.72 ) }
    dend_13 { pt3dadd( 2.02471, -57.5726, -26.0157, 0.12 ) }
    dend_13 { pt3dadd( 2.03705, -57.8305, -26.293, 0.12 ) }
    dend_13 { pt3dadd( 2.04739, -57.9059, -26.3721, 0.48 ) }
    dend_13 { pt3dadd( 2.1989, -58.5609, -27.0363, 0.48 ) }
    dend_13 { pt3dadd( 2.46682, -59.3785, -27.7571, 0.12 ) }
    dend_13 { pt3dadd( 2.68438, -59.9264, -28.1996, 0.12 ) }
    dend_13 { pt3dadd( 2.85403, -60.3176, -28.4734, 0.12 ) }
    dend_13 { pt3dadd( 2.97039, -60.6226, -28.6927, 0.48 ) }
    dend_13 { pt3dadd( 3.16551, -61.1974, -29.1247, 0.84 ) }
    dend_13 { pt3dadd( 3.39862, -61.9552, -29.6881, 0.84 ) }
    dend_13 { pt3dadd( 3.62055, -62.9919, -30.4377, 0.12 ) }
    dend_13 { pt3dadd( 3.63105, -63.0883, -30.5071, 0.12 ) }
    dend_13 { pt3dadd( 3.64515, -63.7129, -30.9455, 0.12 ) }
    dend_13 { pt3dadd( 3.60323, -64.4631, -31.5633, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_13 { pt3dadd( 3.56202, -64.9153, -31.9516, 0.12 ) }
    dend_13 { pt3dadd( 3.49707, -65.7303, -32.6252, 0.12 ) }
    dend_13 { pt3dadd( 3.45519, -66.384, -33.175, 0.84 ) }
    dend_13 { pt3dadd( 3.43789, -66.8995, -33.631, 0.72 ) }
    dend_13 { pt3dadd( 3.44098, -68.471, -35.0554, 0.24 ) }
    dend_13 { pt3dadd( 3.45062, -68.7593, -35.3773, 0.24 ) }
    dend_13 { pt3dadd( 3.52823, -69.4506, -36.2677, 0.24 ) }
    dend_13 { pt3dadd( 3.69114, -70.1298, -37.2125, 0.6 ) }
    dend_13 { pt3dadd( 3.82458, -70.5437, -37.7935, 0.84 ) }
    dend_13 { pt3dadd( 3.91616, -70.7564, -38.0953, 0.6 ) }
    dend_13 { pt3dadd( 4.76441, -72.4373, -40.3018, 0.12 ) }
    dend_13 { pt3dadd( 4.89354, -72.6796, -40.6303, 0.12 ) }
    dend_13 { pt3dadd( 5.08114, -73.0183, -41.0959, 0.12 ) }
    dend_13 { pt3dadd( 5.12576, -73.1062, -41.1939, 0.48 ) }
    dend_13 { pt3dadd( 5.27304, -73.4632, -41.524, 0.48 ) }
    dend_13 { pt3dadd( 5.38867, -73.8573, -41.7762, 0.48 ) }
    dend_13 { pt3dadd( 5.50387, -74.5116, -41.9803, 0.36 ) }
    dend_13 { pt3dadd( 5.5604, -74.9162, -42.106, 0.36 ) }
    dend_13 { pt3dadd( 5.65017, -75.6208, -42.3137, 0.36 ) }
    dend_13 { pt3dadd( 5.74294, -76.237, -42.5249, 0.12 ) }
    dend_13 { pt3dadd( 5.84184, -76.8728, -42.7547, 0.12 ) }
    dend_13 { pt3dadd( 5.91656, -77.3467, -42.9313, 0.6 ) }
    dend_13 { pt3dadd( 6.00726, -77.9339, -43.1396, 0.84 ) }
    dend_13 { pt3dadd( 6.08311, -78.3897, -43.2997, 0.84 ) }
    dend_13 { pt3dadd( 6.24285, -79.3559, -43.6883, 0.36 ) }
    dend_13 { pt3dadd( 6.32089, -79.8879, -43.9262, 0.36 ) }
    dend_13 { pt3dadd( 6.38256, -80.393, -44.185, 0.48 ) }
    dend_13 { pt3dadd( 6.43655, -80.8136, -44.4114, 0.48 ) }
    dend_13 { pt3dadd( 6.49917, -81.2443, -44.6371, 0.72 ) }
    dend_13 { pt3dadd( 6.65063, -82.1816, -45.0685, 0.72 ) }
    dend_13 { pt3dadd( 6.78898, -82.9121, -45.3497, 0.36 ) }
    dend_13 { pt3dadd( 6.83234, -83.0926, -45.4253, 0.24 ) }
    dend_13 { pt3dadd( 6.96692, -83.5593, -45.6182, 0.12 ) }
    dend_13 { pt3dadd( 7.22129, -84.3401, -45.8895, 0.12 ) }
    dend_13 { pt3dadd( 7.44502, -84.9891, -46.0369, 0.12 ) }
    dend_13 { pt3dadd( 7.48675, -85.0997, -46.0468, 0.48 ) }
    dend_13 { pt3dadd( 7.78963, -85.8341, -46.1007, 0.6 ) }
    dend_13 { pt3dadd( 7.9335, -86.1694, -46.1296, 0.6 ) }
    dend_13 { pt3dadd( 8.26959, -86.9062, -46.194, 0.12 ) }
    dend_13 { pt3dadd( 8.70159, -87.8115, -46.2674, 0.12 ) }
    dend_13 { pt3dadd( 8.92367, -88.2631, -46.2975, 0.36 ) }
    dend_13 { pt3dadd( 9.20312, -88.8503, -46.3252, 0.12 ) }
    dend_13 { pt3dadd( 9.50616, -89.4945, -46.3594, 0.12 ) }
    dend_13 { pt3dadd( 9.89803, -90.3636, -46.4491, 0.12 ) }
    dend_13 { pt3dadd( 10.083, -90.8015, -46.5156, 0.12 ) }
    dend_13 { pt3dadd( 10.2406, -91.1949, -46.5754, 0.48 ) }
    dend_13 { pt3dadd( 10.4073, -91.6405, -46.636, 0.48 ) }
    dend_13 { pt3dadd( 10.5944, -92.1647, -46.7056, 0.12 ) }
    dend_13 { pt3dadd( 11.0252, -93.4577, -46.915, 0.12 ) }
    dend_13 { pt3dadd( 11.0882, -93.683, -46.9528, 0.48 ) }
    dend_13 { pt3dadd( 11.1818, -94.0416, -47.0083, 0.48 ) }
    dend_13 { pt3dadd( 11.2647, -94.4026, -47.0637, 0.48 ) }
    dend_13 { pt3dadd( 11.3519, -94.8112, -47.1194, 0.12 ) }
    dend_13 { pt3dadd( 11.4622, -95.3897, -47.1787, 0.12 ) }
    dend_13 { pt3dadd( 11.659, -96.5642, -47.3008, 0.12 ) }
    dend_13 { pt3dadd( 11.7355, -97.0856, -47.3482, 0.24 ) }
    dend_13 { pt3dadd( 11.7853, -97.4104, -47.3665, 0.12 ) }
    dend_13 { pt3dadd( 11.9021, -98.1492, -47.3812, 0.12 ) }
    dend_13 { pt3dadd( 12.0548, -99.0807, -47.366, 0.12 ) }
    dend_13 { pt3dadd( 12.1159, -99.4302, -47.3548, 0.12 ) }
    dend_13 { pt3dadd( 12.2413, -100.128, -47.3173, 0.12 ) }
    dend_13 { pt3dadd( 12.3812, -100.84, -47.2652, 0.48 ) }
    dend_13 { pt3dadd( 12.438, -101.079, -47.2433, 0.48 ) }
    dend_13 { pt3dadd( 12.4952, -101.309, -47.2223, 0.48 ) }
    dend_13 { pt3dadd( 12.5353, -101.471, -47.2088, 0.12 ) }
    dend_13 { pt3dadd( 12.6292, -101.832, -47.1853, 0.12 ) }
    dend_13 { pt3dadd( 12.7787, -102.452, -47.1631, 0.12 ) }
    dend_13 { pt3dadd( 12.9114, -103.179, -47.1597, 0.12 ) }
    dend_13 { pt3dadd( 12.95, -103.44, -47.181, 0.72 ) }
    dend_13 { pt3dadd( 12.9878, -103.765, -47.2499, 0.84 ) }
    dend_13 { pt3dadd( 13.0133, -104.237, -47.402, 0.24 ) }
    dend_13 { pt3dadd( 12.9963, -104.894, -47.6737, 0.24 ) }
    dend_13 { pt3dadd( 12.9674, -105.316, -47.8684, 0.24 ) }
    dend_13 { pt3dadd( 12.9428, -106.208, -48.2762, 0.36 ) }
    dend_13 { pt3dadd( 12.9644, -106.911, -48.616, 0.12 ) }
    dend_13 { pt3dadd( 12.9966, -107.389, -48.8474, 0.12 ) }
    dend_13 { pt3dadd( 13.0394, -107.958, -49.1135, 0.12 ) }
    dend_13 { pt3dadd( 13.1205, -108.646, -49.4028, 0.12 ) }
    dend_13 { pt3dadd( 13.2666, -109.497, -49.7184, 0.48 ) }
    dend_13 { pt3dadd( 13.4119, -110.143, -49.8985, 0.12 ) }
    dend_13 { pt3dadd( 13.5278, -110.57, -50.0387, 0.12 ) }
    dend_13 { pt3dadd( 13.6551, -110.992, -50.2176, 0.12 ) }
    dend_13 { pt3dadd( 13.7866, -111.419, -50.4205, 0.12 ) }
    dend_13 { pt3dadd( 13.9156, -111.87, -50.6799, 0.6 ) }
    dend_13 { pt3dadd( 14.0213, -112.27, -50.9272, 0.6 ) }
    dend_13 { pt3dadd( 14.3315, -113.4, -51.6157, 0.12 ) }
    dend_13 { pt3dadd( 14.5046, -113.991, -52.0196, 0.12 ) }
    dend_13 { pt3dadd( 14.6656, -114.592, -52.4293, 0.12 ) }
    dend_13 { pt3dadd( 14.8496, -115.335, -52.8915, 0.6 ) }
    dend_13 { pt3dadd( 14.9314, -115.66, -53.0632, 0.6 ) }
    dend_13 { pt3dadd( 15.0181, -115.992, -53.217, 0.6 ) }
    dend_13 { pt3dadd( 15.2266, -116.774, -53.4906, 0.12 ) }
    dend_13 { pt3dadd( 15.5118, -117.766, -53.7882, 0.12 ) }
    dend_13 { pt3dadd( 15.7588, -118.597, -54.0094, 0.12 ) }
    dend_13 { pt3dadd( 15.9871, -119.308, -54.1559, 0.36 ) }
    dend_13 { pt3dadd( 16.0709, -119.534, -54.2103, 0.12 ) }
    dend_13 { pt3dadd( 16.2858, -120.083, -54.3494, 0.12 ) }
    dend_13 { pt3dadd( 16.4413, -120.471, -54.4455, 0.48 ) }
    dend_13 { pt3dadd( 16.6932, -121.136, -54.7177, 0.12 ) }
    dend_13 { pt3dadd( 16.8153, -121.635, -55.0184, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_13 { pt3dadd( 16.8898, -122.423, -55.5817, 0.12 ) }
    dend_13 { pt3dadd( 16.879, -122.764, -55.8445, 0.6 ) }
    dend_13 { pt3dadd( 16.8435, -122.975, -56.0041, 0.6 ) }
    dend_13 { pt3dadd( 16.5423, -124.012, -56.8038, 0.12 ) }
    dend_13 { pt3dadd( 16.273, -124.717, -57.3188, 0.12 ) }
    dend_13 { pt3dadd( 16.0863, -125.133, -57.5964, 0.36 ) }
    dend_13 { pt3dadd( 15.8216, -125.661, -57.9056, 0.36 ) }
    dend_13 { pt3dadd( 15.4432, -126.467, -58.3262, 0.36 ) }
    dend_13 { pt3dadd( 15.1275, -127.119, -58.6113, 0.12 ) }
    dend_13 { pt3dadd( 14.8585, -127.633, -58.788, 0.12 ) }
    dend_13 { pt3dadd( 14.5148, -128.198, -58.971, 0.48 ) }
    dend_13 { pt3dadd( 14.3169, -128.505, -59.0653, 0.12 ) }
    dend_13 { pt3dadd( 13.821, -129.204, -59.2623, 0.12 ) }
    dend_13 { pt3dadd( 13.3654, -129.785, -59.4046, 0.6 ) }
    dend_13 { pt3dadd( 12.9779, -130.261, -59.4974, 0.12 ) }
    dend_13 { pt3dadd( 12.5305, -130.758, -59.5963, 0.12 ) }
    dend_13 { pt3dadd( 11.8518, -131.447, -59.7337, 0.12 ) }
    dend_13 { pt3dadd( 11.5779, -131.705, -59.7808, 0.12 ) }
    dend_13 { pt3dadd( 10.9391, -132.245, -59.8663, 0.48 ) }
    dend_13 { pt3dadd( 10.591, -132.534, -59.9064, 0.12 ) }
    dend_13 { pt3dadd( 9.98761, -132.993, -59.9529, 0.12 ) }
    dend_13 { pt3dadd( 9.57162, -133.27, -59.9821, 0.48 ) }
    dend_13 { pt3dadd( 9.04618, -133.561, -60.0262, 0.48 ) }
    dend_13 { pt3dadd( 8.89476, -133.639, -60.0391, 0.12 ) }
    dend_13 { pt3dadd( 8.43126, -133.853, -60.0766, 0.12 ) }
    dend_13 { pt3dadd( 7.9351, -134.074, -60.1126, 0.48 ) }
    dend_13 { pt3dadd( 7.48581, -134.285, -60.1461, 0.48 ) }
    dend_13 { pt3dadd( 6.8764, -134.575, -60.1891, 0.12 ) }
    dend_13 { pt3dadd( 6.27979, -134.84, -60.2308, 0.12 ) }
    dend_13 { pt3dadd( 5.87853, -135.007, -60.2494, 0.12 ) }
    dend_13 { pt3dadd( 5.72684, -135.069, -60.2535, 0.12 ) }
    dend_13 { pt3dadd( 5.31954, -135.224, -60.2568, 0.48 ) }
    dend_13 { pt3dadd( 4.70944, -135.45, -60.2487, 0.48 ) }
    dend_13 { pt3dadd( 4.13971, -135.65, -60.2293, 0.48 ) }
    dend_13 { pt3dadd( 3.48828, -135.86, -60.2105, 0.12 ) }
    dend_13 { pt3dadd( 3.0698, -135.983, -60.2018, 0.12 ) }
    dend_13 { pt3dadd( 2.00308, -136.231, -60.1934, 0.12 ) }
    dend_13 { pt3dadd( 1.56551, -136.313, -60.1947, 0.12 ) }
    dend_13 { pt3dadd( 1.3267, -136.351, -60.2084, 0.6 ) }
    dend_13 { pt3dadd( 0.836795, -136.434, -60.2594, 0.6 ) }
    dend_13 { pt3dadd( 0.346584, -136.531, -60.3275, 0.24 ) }
    dend_13 { pt3dadd( -0.939213, -136.841, -60.5238, 0.24 ) }
    dend_13 { pt3dadd( -1.40353, -137.006, -60.5984, 0.48 ) }
    dend_13 { pt3dadd( -2.16636, -137.351, -60.7195, 0.12 ) }
    dend_13 { pt3dadd( -2.81971, -137.731, -60.8733, 0.12 ) }
    dend_13 { pt3dadd( -3.42176, -138.167, -61.0526, 0.12 ) }
    dend_13 { pt3dadd( -3.84971, -138.559, -61.2031, 0.12 ) }
    dend_13 { pt3dadd( -4.61212, -139.465, -61.5056, 0.12 ) }
    dend_13 { pt3dadd( -4.85196, -139.809, -61.5978, 0.48 ) }
    dend_13 { pt3dadd( -5.51738, -140.999, -61.8207, 0.48 ) }
    dend_13 { pt3dadd( -5.70609, -141.385, -61.8825, 0.12 ) }
    dend_13 { pt3dadd( -6.01768, -142.101, -61.9799, 0.12 ) }
    dend_13 { pt3dadd( -6.43943, -143.184, -62.0992, 0.12 ) }
    dend_13 { pt3dadd( -6.93629, -144.693, -62.2148, 0.12 ) }
    dend_13 { pt3dadd( -7.47094, -146.678, -62.342, 0.12 ) }
    dend_13 { pt3dadd( -7.54421, -147.051, -62.3557, 0.72 ) }
    dend_13 { pt3dadd( -7.62119, -147.627, -62.3891, 0.48 ) }
    dend_13 { pt3dadd( -7.63189, -147.793, -62.3984, 0.12 ) }
    dend_13 { pt3dadd( -7.60684, -148.796, -62.4522, 0.12 ) }
    dend_13 { pt3dadd( -7.45923, -149.875, -62.5027, 0.12 ) }
    dend_13 { pt3dadd( -7.27182, -150.638, -62.5258, 0.12 ) }
    dend_13 { pt3dadd( -7.1747, -151.0, -62.529, 0.36 ) }
    dend_13 { pt3dadd( -6.99466, -151.635, -62.5191, 0.12 ) }
    dend_13 { pt3dadd( -6.79952, -152.328, -62.4931, 0.12 ) }
    dend_13 { pt3dadd( -6.59053, -153.084, -62.4409, 0.12 ) }
    dend_13 { pt3dadd( -6.37242, -153.905, -62.358, 0.12 ) }
    dend_13 { pt3dadd( -6.23993, -154.63, -62.9637, 0.12 ) }
    dend_13 { pt3dadd( -6.18597, -155.029, -63.9035, 0.12 ) }
    dend_13 { pt3dadd( -6.17804, -155.096, -64.1359, 0.12 ) }
    dend_13 { pt3dadd( -6.16817, -155.187, -64.6169, 0.72 ) }
    dend_13 { pt3dadd( -6.15892, -155.231, -65.1048, 1.08 ) }
    dend_13 { pt3dadd( -6.122, -155.361, -72.9623, 0.84 ) }
    dend_13 { pt3dadd( -6.11764, -155.238, -75.4125, 0.12 ) }
    dend_13 { pt3dadd( -6.11471, -155.195, -75.8853, 0.12 ) }
    dend_13 { pt3dadd( -6.10201, -155.119, -76.6185, 0.12 ) }
    dend_13 { pt3dadd( -6.0348, -154.863, -78.7457, 0.48 ) }
    dend_13 { pt3dadd( -5.93418, -154.589, -80.756, 0.6 ) }
    dend_13 { pt3dadd( -5.77793, -154.304, -82.6188, 0.6 ) }
    dend_13 { pt3dadd( -5.53404, -154.135, -85.5663, 0.12 ) }
    dend_13 { pt3dadd( -5.48116, -154.154, -86.2167, 0.12 ) }
    dend_13 { pt3dadd( -5.45419, -154.193, -86.4835, 0.12 ) }
    dend_13 { pt3dadd( -5.41491, -154.268, -86.7102, 0.72 ) }
    dend_13 { pt3dadd( -5.24568, -154.536, -87.2261, 0.72 ) }
    dend_13 { pt3dadd( -4.57816, -155.437, -88.4498, 0.12 ) }
    dend_13 { pt3dadd( -4.45522, -155.565, -88.5965, 0.12 ) }
    dend_13 { pt3dadd( -3.84553, -156.095, -89.2458, 0.12 ) }
    dend_13 { pt3dadd( -2.80677, -156.803, -90.4845, 0.12 ) }
    dend_13 { pt3dadd( -2.58449, -156.906, -90.7523, 0.12 ) }
    dend_13 { pt3dadd( -1.87983, -157.089, -91.5731, 0.12 ) }
    dend_13 { pt3dadd( -1.70241, -157.107, -91.7773, 0.72 ) }
    dend_13 { pt3dadd( -1.39787, -157.126, -92.1608, 0.72 ) }
    dend_13 { pt3dadd( -0.0065142, -157.194, -94.3123, 0.12 ) }
    dend_13 { pt3dadd( 0.270225, -157.216, -94.7781, 0.12 ) }
    dend_13 { pt3dadd( 0.39413, -157.227, -95.0189, 0.48 ) }
    dend_13 { pt3dadd( 0.699355, -157.238, -95.8668, 0.12 ) }
    dend_13 { pt3dadd( 0.881448, -157.226, -96.488, 0.12 ) }
    dend_13 { pt3dadd( 1.13631, -157.203, -97.3848, 0.72 ) }
    dend_13 { pt3dadd( 1.23979, -157.211, -97.7539, 0.84 ) }
    dend_13 { pt3dadd( 1.61089, -157.25, -99.3162, 1.32 ) }
    dend_13 { pt3dadd( 1.97825, -157.225, -101.237, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( 2.0301, -157.186, -101.614, 0.6 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 1/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 22.1916, 1.91716, -8.73591, 0.48 ) }
    dend_9 { pt3dadd( 22.2889, 2.36437, -9.46916, 0.48 ) }
    dend_9 { pt3dadd( 22.3737, 2.86414, -10.3816, 0.12 ) }
    dend_9 { pt3dadd( 22.5025, 3.44965, -11.479, 0.12 ) }
    dend_9 { pt3dadd( 22.5849, 3.77583, -12.0634, 1.2 ) }
    dend_9 { pt3dadd( 22.6305, 3.94015, -12.3741, 1.2 ) }
    dend_9 { pt3dadd( 23.0582, 5.32643, -15.0547, 0.12 ) }
    dend_9 { pt3dadd( 23.2703, 5.79909, -16.0663, 0.12 ) }
    dend_9 { pt3dadd( 23.3897, 6.00868, -16.5275, 0.12 ) }
    dend_9 { pt3dadd( 23.5481, 6.22525, -17.0324, 0.12 ) }
    dend_9 { pt3dadd( 24.0266, 6.73384, -18.4999, 0.72 ) }
    dend_9 { pt3dadd( 24.2689, 6.94771, -19.1518, 0.84 ) }
    dend_9 { pt3dadd( 24.6063, 7.18139, -19.8164, 0.12 ) }
    dend_9 { pt3dadd( 24.7423, 7.247, -20.055, 0.12 ) }
    dend_9 { pt3dadd( 25.0442, 7.34371, -20.6023, 0.72 ) }
    dend_9 { pt3dadd( 26.4722, 7.62541, -23.0924, 0.12 ) }
    dend_9 { pt3dadd( 26.7737, 7.6731, -23.5696, 0.12 ) }
    dend_9 { pt3dadd( 27.2581, 7.73764, -24.3204, 0.12 ) }
    dend_9 { pt3dadd( 27.4714, 7.77368, -24.6574, 0.96 ) }
    dend_9 { pt3dadd( 28.5171, 8.03494, -26.2286, 0.12 ) }
    dend_9 { pt3dadd( 28.7575, 8.09635, -26.6116, 0.12 ) }
    dend_9 { pt3dadd( 29.197, 8.23955, -27.2688, 0.6 ) }
    dend_9 { pt3dadd( 29.5995, 8.37185, -27.8857, 0.12 ) }
    dend_9 { pt3dadd( 30.2867, 8.61757, -28.9497, 0.12 ) }
    dend_9 { pt3dadd( 30.9289, 8.85807, -29.9205, 0.72 ) }
    dend_9 { pt3dadd( 32.2439, 9.40139, -31.793, 0.12 ) }
    dend_9 { pt3dadd( 32.755, 9.61441, -32.5279, 0.12 ) }
    dend_9 { pt3dadd( 33.2022, 9.79965, -33.1642, 0.12 ) }
    dend_9 { pt3dadd( 33.4084, 9.89541, -33.4399, 0.6 ) }
    dend_9 { pt3dadd( 34.1474, 10.2564, -34.3322, 0.12 ) }
    dend_9 { pt3dadd( 34.3796, 10.3788, -34.5744, 0.12 ) }
    dend_9 { pt3dadd( 34.8193, 10.6198, -34.9579, 0.6 ) }
    dend_9 { pt3dadd( 34.9866, 10.6924, -35.133, 0.12 ) }
    dend_9 { pt3dadd( 35.3896, 10.8341, -35.5881, 0.12 ) }
    dend_9 { pt3dadd( 35.9965, 10.993, -36.2144, 0.6 ) }
    dend_9 { pt3dadd( 36.3786, 11.0719, -36.5618, 0.6 ) }
    dend_9 { pt3dadd( 37.3367, 11.2002, -37.3858, 0.48 ) }
    dend_9 { pt3dadd( 37.9721, 11.2678, -37.9219, 0.12 ) }
    dend_9 { pt3dadd( 38.3844, 11.3182, -38.2638, 0.12 ) }
    dend_9 { pt3dadd( 39.1845, 11.4222, -38.879, 0.12 ) }
    dend_9 { pt3dadd( 39.6102, 11.5019, -39.1718, 0.12 ) }
    dend_9 { pt3dadd( 40.111, 11.6151, -39.5641, 0.48 ) }
    dend_9 { pt3dadd( 40.7554, 11.7977, -40.0754, 0.48 ) }
    dend_9 { pt3dadd( 40.9609, 11.8546, -40.2471, 0.48 ) }
    dend_9 { pt3dadd( 41.3262, 11.9516, -40.5844, 0.12 ) }
    dend_9 { pt3dadd( 41.5193, 12.0031, -40.785, 0.12 ) }
    dend_9 { pt3dadd( 42.508, 12.184, -41.9536, 0.12 ) }
    dend_9 { pt3dadd( 43.0295, 12.2449, -42.5594, 1.44 ) }
    dend_9 { pt3dadd( 43.6554, 12.2823, -43.253, 0.12 ) }
    dend_9 { pt3dadd( 43.9617, 12.2792, -43.6006, 0.12 ) }
    dend_9 { pt3dadd( 44.2321, 12.2351, -43.9637, 0.24 ) }
    dend_9 { pt3dadd( 45.2367, 11.9982, -45.3254, 0.12 ) }
    dend_9 { pt3dadd( 45.8598, 11.8391, -46.125, 0.12 ) }
    dend_9 { pt3dadd( 46.1031, 11.7738, -46.4374, 0.72 ) }
    dend_9 { pt3dadd( 46.9221, 11.5756, -47.4463, 0.12 ) }
    dend_9 { pt3dadd( 48.9175, 11.1472, -49.7841, 0.12 ) }
    dend_9 { pt3dadd( 49.5108, 11.0442, -50.4416, 0.12 ) }
    dend_9 { pt3dadd( 50.0581, 10.9884, -50.9881, 0.12 ) }
    dend_9 { pt3dadd( 50.4707, 10.9744, -51.3775, 0.12 ) }
    dend_9 { pt3dadd( 51.0009, 11.0267, -51.7987, 0.72 ) }
    dend_9 { pt3dadd( 51.2228, 11.0918, -51.926, 0.72 ) }
    dend_9 { pt3dadd( 51.9294, 11.4136, -52.2449, 0.12 ) }
    dend_9 { pt3dadd( 52.6725, 11.7952, -52.6311, 0.12 ) }
    dend_9 { pt3dadd( 53.2484, 12.0928, -52.9815, 0.12 ) }
    dend_9 { pt3dadd( 54.0764, 12.5258, -53.5246, 0.12 ) }
    dend_9 { pt3dadd( 54.6376, 12.8231, -53.8979, 0.12 ) }
    dend_9 { pt3dadd( 55.341, 13.205, -54.3585, 0.48 ) }
    dend_9 { pt3dadd( 55.6021, 13.3357, -54.5646, 0.48 ) }
    dend_9 { pt3dadd( 56.2346, 13.5968, -55.154, 0.12 ) }
    dend_9 { pt3dadd( 56.736, 13.7659, -55.6605, 0.12 ) }
    dend_9 { pt3dadd( 57.3487, 13.928, -56.3299, 0.12 ) }
    dend_9 { pt3dadd( 57.5393, 13.9833, -56.5447, 0.48 ) }
    dend_9 { pt3dadd( 58.9774, 14.4461, -58.1313, 0.12 ) }
    dend_9 { pt3dadd( 59.5948, 14.6385, -58.9502, 0.12 ) }
    dend_9 { pt3dadd( 59.8547, 14.7356, -59.3119, 0.36 ) }
    dend_9 { pt3dadd( 60.1466, 14.8497, -59.7444, 0.12 ) }
    dend_9 { pt3dadd( 60.6765, 15.0698, -60.5754, 0.12 ) }
    dend_9 { pt3dadd( 60.8102, 15.1312, -60.7809, 0.36 ) }
    dend_9 { pt3dadd( 62.0836, 15.8481, -62.5614, 0.12 ) }
    dend_9 { pt3dadd( 62.8688, 16.287, -63.8563, 0.12 ) }
    dend_9 { pt3dadd( 62.8688, 16.287, -63.8563, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 22.1916, 1.91716, -8.73591, 0.36 ) }
    dend_8 { pt3dadd( 22.9436, 2.70215, -8.85966, 0.36 ) }
    dend_8 { pt3dadd( 23.8579, 3.60757, -8.98473, 0.36 ) }
    dend_8 { pt3dadd( 24.4727, 4.17771, -9.05976, 0.96 ) }
    dend_8 { pt3dadd( 25.0853, 4.74192, -9.08172, 1.2 ) }
    dend_8 { pt3dadd( 25.7008, 5.31557, -9.069, 0.96 ) }
    dend_8 { pt3dadd( 26.1711, 5.77025, -9.04055, 0.72 ) }
    dend_8 { pt3dadd( 26.7113, 6.30292, -8.93706, 0.72 ) }
    dend_8 { pt3dadd( 27.0823, 6.68857, -8.80257, 0.72 ) }
    dend_8 { pt3dadd( 27.7636, 7.43187, -8.45198, 0.36 ) }
    dend_8 { pt3dadd( 27.8885, 7.56846, -8.37388, 0.36 ) }
    dend_8 { pt3dadd( 28.3294, 8.01107, -8.05358, 0.6 ) }
    dend_8 { pt3dadd( 28.5852, 8.21633, -7.8601, 0.6 ) }
    dend_8 { pt3dadd( 29.5888, 8.80647, -7.06094, 0.48 ) }
    dend_8 { pt3dadd( 30.2901, 9.15074, -6.49057, 0.48 ) }
    dend_8 { pt3dadd( 30.8526, 9.43055, -6.03316, 0.48 ) }
    dend_8 { pt3dadd( 31.5417, 9.74714, -5.43062, 0.96 ) }
    dend_8 { pt3dadd( 32.4059, 10.0782, -4.67195, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_8 { pt3dadd( 33.2429, 10.3392, -3.91986, 0.72 ) }
    dend_8 { pt3dadd( 33.9077, 10.5068, -3.33616, 0.48 ) }
    dend_8 { pt3dadd( 35.0259, 10.8364, -2.38354, 0.72 ) }
    dend_8 { pt3dadd( 35.9632, 11.2163, -1.64747, 0.72 ) }
    dend_8 { pt3dadd( 36.5912, 11.5635, -1.19035, 0.72 ) }
    dend_8 { pt3dadd( 37.602, 12.2739, -0.505837, 0.48 ) }
    dend_8 { pt3dadd( 38.1103, 12.6999, -0.205376, 0.36 ) }
    dend_8 { pt3dadd( 38.9618, 13.4812, 0.228859, 0.36 ) }
    dend_8 { pt3dadd( 39.5898, 14.1243, 0.496117, 0.36 ) }
    dend_8 { pt3dadd( 40.22, 14.8625, 0.706839, 0.84 ) }
    dend_8 { pt3dadd( 40.7138, 15.4628, 0.852618, 0.84 ) }
    dend_8 { pt3dadd( 41.3147, 16.1979, 0.975005, 0.48 ) }
    dend_8 { pt3dadd( 41.9012, 16.8994, 1.09905, 0.48 ) }
    dend_8 { pt3dadd( 42.2822, 17.3363, 1.18558, 0.6 ) }
    dend_8 { pt3dadd( 42.8767, 18.0343, 1.31897, 0.72 ) }
    dend_8 { pt3dadd( 43.4816, 18.7647, 1.45535, 0.36 ) }
    dend_8 { pt3dadd( 43.9523, 19.3421, 1.57363, 0.36 ) }
    dend_8 { pt3dadd( 44.5643, 20.1169, 1.7376, 0.48 ) }
    dend_8 { pt3dadd( 44.9635, 20.6517, 1.84784, 0.96 ) }
    dend_8 { pt3dadd( 45.5704, 21.5149, 2.02651, 1.08 ) }
    dend_8 { pt3dadd( 46.1277, 22.356, 2.18912, 0.36 ) }
    dend_8 { pt3dadd( 46.818, 23.4259, 2.3645, 0.36 ) }
    dend_8 { pt3dadd( 47.5277, 24.4976, 2.52651, 0.48 ) }
    dend_8 { pt3dadd( 47.6869, 24.735, 2.55747, 0.48 ) }
    dend_8 { pt3dadd( 48.0362, 25.2576, 2.61735, 0.12 ) }
    dend_8 { pt3dadd( 48.5983, 26.1318, 2.71119, 0.12 ) }
    dend_8 { pt3dadd( 49.1645, 27.0884, 2.79621, 0.48 ) }
    dend_8 { pt3dadd( 49.5314, 27.7583, 2.85829, 0.36 ) }
    dend_8 { pt3dadd( 49.9064, 28.4934, 2.92195, 0.36 ) }
    dend_8 { pt3dadd( 50.3173, 29.326, 2.98332, 0.48 ) }
    dend_8 { pt3dadd( 50.4926, 29.6829, 3.00417, 0.12 ) }
    dend_8 { pt3dadd( 50.9893, 30.6793, 3.05721, 0.12 ) }
    dend_8 { pt3dadd( 51.1688, 31.0092, 3.08476, 0.12 ) }
    dend_8 { pt3dadd( 51.6167, 31.8344, 3.0776, 0.48 ) }
    dend_8 { pt3dadd( 51.8159, 32.2029, 3.05656, 0.24 ) }
    dend_8 { pt3dadd( 52.1695, 32.8773, 2.99228, 0.24 ) }
    dend_8 { pt3dadd( 52.4562, 33.4493, 2.92494, 0.48 ) }
    dend_8 { pt3dadd( 52.9075, 34.4366, 2.80272, 0.96 ) }
    dend_8 { pt3dadd( 53.6431, 36.1628, 2.64002, 0.96 ) }
    dend_8 { pt3dadd( 53.8668, 36.7185, 2.60701, 0.12 ) }
    dend_8 { pt3dadd( 54.1652, 37.538, 2.58586, 0.12 ) }
    dend_8 { pt3dadd( 54.324, 38.0268, 2.61258, 0.24 ) }
    dend_8 { pt3dadd( 54.6088, 38.9663, 2.73548, 0.24 ) }
    dend_8 { pt3dadd( 54.8176, 39.6834, 2.8734, 0.36 ) }
    dend_8 { pt3dadd( 55.0475, 40.4425, 3.09005, 0.36 ) }
    dend_8 { pt3dadd( 55.0953, 40.6071, 3.13147, 0.24 ) }
    dend_8 { pt3dadd( 55.3765, 41.6016, 3.42886, 0.24 ) }
    dend_8 { pt3dadd( 55.6306, 42.5072, 3.70462, 0.48 ) }
    dend_8 { pt3dadd( 55.7657, 43.0035, 3.85502, 0.24 ) }
    dend_8 { pt3dadd( 55.9399, 43.6015, 4.01714, 0.24 ) }
    dend_8 { pt3dadd( 56.2434, 44.601, 4.26911, 0.72 ) }
    dend_8 { pt3dadd( 56.5572, 45.5896, 4.48819, 0.12 ) }
    dend_8 { pt3dadd( 57.0437, 47.086, 4.76198, 0.12 ) }
    dend_8 { pt3dadd( 57.1709, 47.47, 4.83489, 0.12 ) }
    dend_8 { pt3dadd( 57.5496, 48.6084, 5.04005, 0.12 ) }
    dend_8 { pt3dadd( 57.72, 49.1099, 5.12211, 0.96 ) }
    dend_8 { pt3dadd( 57.9342, 49.7588, 5.21654, 0.96 ) }
    dend_8 { pt3dadd( 58.272, 50.8125, 5.33474, 0.48 ) }
    dend_8 { pt3dadd( 58.5636, 51.7498, 5.44794, 0.36 ) }
    dend_8 { pt3dadd( 58.9521, 52.9964, 5.59823, 0.36 ) }
    dend_8 { pt3dadd( 59.127, 53.5469, 5.66166, 0.36 ) }
    dend_8 { pt3dadd( 59.4267, 54.4014, 5.76751, 0.6 ) }
    dend_8 { pt3dadd( 59.6343, 54.9407, 5.83361, 0.12 ) }
    dend_8 { pt3dadd( 59.8948, 55.5357, 5.90155, 0.12 ) }
    dend_8 { pt3dadd( 60.2224, 56.193, 5.96395, 0.12 ) }
    dend_8 { pt3dadd( 60.8094, 57.1921, 6.05539, 0.12 ) }
    dend_8 { pt3dadd( 61.2249, 57.8693, 6.11375, 0.48 ) }
    dend_8 { pt3dadd( 61.473, 58.265, 6.14443, 0.12 ) }
    dend_8 { pt3dadd( 61.9777, 59.0614, 6.20269, 0.12 ) }
    dend_8 { pt3dadd( 62.2289, 59.4556, 6.22811, 0.12 ) }
    dend_8 { pt3dadd( 63.1454, 60.9534, 6.30896, 0.12 ) }
    dend_8 { pt3dadd( 63.4683, 61.5061, 6.35198, 0.12 ) }
    dend_8 { pt3dadd( 63.887, 62.2146, 6.41319, 0.12 ) }
    dend_8 { pt3dadd( 63.9808, 62.3725, 6.4315, 0.48 ) }
    dend_8 { pt3dadd( 64.356, 63.0178, 6.51825, 0.48 ) }
    dend_8 { pt3dadd( 64.6206, 63.4809, 6.58715, 0.12 ) }
    dend_8 { pt3dadd( 65.1397, 64.3711, 6.77636, 0.12 ) }
    dend_8 { pt3dadd( 65.7652, 65.3952, 7.05436, 0.12 ) }
    dend_8 { pt3dadd( 66.2376, 66.2252, 7.29096, 0.48 ) }
    dend_8 { pt3dadd( 66.6045, 66.9295, 7.51396, 0.72 ) }
    dend_8 { pt3dadd( 66.8439, 67.4185, 7.69423, 0.72 ) }
    dend_8 { pt3dadd( 67.1837, 68.2028, 7.99508, 0.72 ) }
    dend_8 { pt3dadd( 67.5673, 69.2325, 8.3854, 0.12 ) }
    dend_8 { pt3dadd( 68.1324, 71.0351, 9.07975, 0.12 ) }
    dend_8 { pt3dadd( 68.3731, 71.8377, 9.37796, 0.48 ) }
    dend_8 { pt3dadd( 68.5916, 72.5856, 9.62696, 0.12 ) }
    dend_8 { pt3dadd( 68.9623, 73.7584, 10.0157, 0.12 ) }
    dend_8 { pt3dadd( 69.1593, 74.3788, 10.14, 0.6 ) }
    dend_8 { pt3dadd( 69.4755, 75.3032, 10.2165, 0.6 ) }
    dend_8 { pt3dadd( 69.7541, 76.0083, 10.185, 0.48 ) }
    dend_8 { pt3dadd( 70.2022, 77.0054, 10.0365, 0.48 ) }
    dend_8 { pt3dadd( 70.9038, 78.4119, 9.73573, 0.36 ) }
    dend_8 { pt3dadd( 72.2287, 80.7344, 9.15012, 0.12 ) }
    dend_8 { pt3dadd( 72.7413, 81.5582, 8.92502, 0.12 ) }
    dend_8 { pt3dadd( 73.577, 82.7926, 8.64654, 0.12 ) }
    dend_8 { pt3dadd( 74.1178, 83.5248, 8.52773, 0.12 ) }
    dend_8 { pt3dadd( 74.3581, 83.8161, 8.50454, 0.6 ) }
    dend_8 { pt3dadd( 74.796, 84.3152, 8.52253, 0.84 ) }
    dend_8 { pt3dadd( 75.2446, 84.7678, 8.65019, 0.6 ) }
    dend_8 { pt3dadd( 76.2511, 85.7038, 8.96871, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_8 { pt3dadd( 76.72, 86.1355, 9.12904, 0.12 ) }
    dend_8 { pt3dadd( 77.0121, 86.4203, 9.23862, 0.72 ) }
    dend_8 { pt3dadd( 77.5768, 87.0482, 9.46137, 0.72 ) }
    dend_8 { pt3dadd( 77.8656, 87.4118, 9.5765, 0.48 ) }
    dend_8 { pt3dadd( 78.0248, 87.6497, 9.635, 0.12 ) }
    dend_8 { pt3dadd( 78.449, 88.397, 9.73676, 0.12 ) }
    dend_8 { pt3dadd( 78.6576, 88.8237, 9.7975, 0.72 ) }
    dend_8 { pt3dadd( 78.9248, 89.43, 9.83653, 0.96 ) }
    dend_8 { pt3dadd( 79.0348, 89.6939, 9.85272, 0.96 ) }
    dend_8 { pt3dadd( 79.2764, 90.3156, 9.8791, 0.12 ) }
    dend_8 { pt3dadd( 79.6102, 91.1824, 9.89188, 0.12 ) }
    dend_8 { pt3dadd( 79.8023, 91.6828, 9.86908, 0.12 ) }
    dend_8 { pt3dadd( 80.169, 92.5974, 9.74583, 0.24 ) }
    dend_8 { pt3dadd( 85.6698, 101.783, 11.6644, 0.24 ) }
    dend_8 { pt3dadd( 91.599, 110.597, 14.0703, 0.24 ) }
    dend_8 { pt3dadd( 97.9198, 119.348, 15.5602, 0.24 ) }
    dend_8 { pt3dadd( 103.267, 128.215, 18.9209, 0.24 ) }
    dend_8 { pt3dadd( 108.392, 136.318, 24.13, 0.24 ) }
    dend_8 { pt3dadd( 113.37, 144.759, 28.9017, 0.24 ) }
    dend_8 { pt3dadd( 119.38, 151.878, 34.6508, 0.24 ) }
    dend_8 { pt3dadd( 125.643, 158.322, 40.9406, 0.24 ) }
    dend_8 { pt3dadd( 130.085, 165.209, 48.2047, 0.24 ) }
    dend_8 { pt3dadd( 135.69, 172.226, 54.4682, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.7006, -36.2249, 2.49621, 0.48 ) }
    dend_39 { pt3dadd( -10.8307, -36.949, 2.32126, 0.48 ) }
    dend_39 { pt3dadd( -11.0544, -38.1414, 2.05092, 0.48 ) }
    dend_39 { pt3dadd( -11.1994, -38.8969, 1.88704, 0.36 ) }
    dend_39 { pt3dadd( -11.3311, -39.5698, 1.74945, 0.36 ) }
    dend_39 { pt3dadd( -11.4802, -40.3481, 1.60175, 0.36 ) }
    dend_39 { pt3dadd( -11.5918, -40.947, 1.49514, 0.6 ) }
    dend_39 { pt3dadd( -11.6851, -41.4725, 1.42552, 0.84 ) }
    dend_39 { pt3dadd( -11.773, -41.9503, 1.40474, 1.08 ) }
    dend_39 { pt3dadd( -11.8675, -42.4113, 1.40756, 1.32 ) }
    dend_39 { pt3dadd( -11.9657, -42.8665, 1.40919, 1.32 ) }
    dend_39 { pt3dadd( -12.0129, -43.0945, 1.41076, 1.32 ) }
    dend_39 { pt3dadd( -12.1722, -43.9882, 1.42337, 0.84 ) }
    dend_39 { pt3dadd( -12.2904, -44.7145, 1.43665, 0.6 ) }
    dend_39 { pt3dadd( -12.3497, -45.0748, 1.44049, 0.84 ) }
    dend_39 { pt3dadd( -12.4502, -45.683, 1.44027, 0.84 ) }
    dend_39 { pt3dadd( -12.5312, -46.1316, 1.4342, 0.6 ) }
    dend_39 { pt3dadd( -12.6931, -46.9387, 1.42624, 0.6 ) }
    dend_39 { pt3dadd( -12.917, -47.9788, 1.41514, 0.72 ) }
    dend_39 { pt3dadd( -13.0825, -48.687, 1.41811, 0.72 ) }
    dend_39 { pt3dadd( -13.2581, -49.3734, 1.42995, 0.72 ) }
    dend_39 { pt3dadd( -13.473, -50.1157, 1.44779, 0.72 ) }
    dend_39 { pt3dadd( -13.7801, -51.1012, 1.46824, 0.36 ) }
    dend_39 { pt3dadd( -14.0397, -51.8988, 1.50217, 0.36 ) }
    dend_39 { pt3dadd( -14.153, -52.2489, 1.52481, 0.36 ) }
    dend_39 { pt3dadd( -14.2285, -52.4878, 1.55184, 0.72 ) }
    dend_39 { pt3dadd( -14.3284, -52.8011, 1.62515, 0.96 ) }
    dend_39 { pt3dadd( -14.5134, -53.4516, 1.84651, 0.96 ) }
    dend_39 { pt3dadd( -14.6805, -54.0915, 2.10599, 0.84 ) }
    dend_39 { pt3dadd( -14.8346, -54.7285, 2.38017, 0.6 ) }
    dend_39 { pt3dadd( -14.9696, -55.318, 2.6721, 0.48 ) }
    dend_39 { pt3dadd( -15.1916, -56.3594, 3.20399, 0.48 ) }
    dend_39 { pt3dadd( -15.3018, -56.8808, 3.47089, 0.6 ) }
    dend_39 { pt3dadd( -15.4319, -57.5344, 3.76736, 0.84 ) }
    dend_39 { pt3dadd( -15.5704, -58.2891, 4.04227, 0.84 ) }
    dend_39 { pt3dadd( -15.7829, -59.5936, 4.42128, 0.72 ) }
    dend_39 { pt3dadd( -15.8918, -60.3845, 4.57763, 0.6 ) }
    dend_39 { pt3dadd( -15.9388, -60.7987, 4.62449, 0.72 ) }
    dend_39 { pt3dadd( -16.0478, -61.83, 4.71102, 0.36 ) }
    dend_39 { pt3dadd( -16.1108, -62.6344, 4.80952, 0.12 ) }
    dend_39 { pt3dadd( -16.1398, -63.0929, 4.88353, 0.12 ) }
    dend_39 { pt3dadd( -16.1568, -63.4428, 4.94452, 0.48 ) }
    dend_39 { pt3dadd( -16.1882, -64.1128, 5.10009, 0.84 ) }
    dend_39 { pt3dadd( -16.233, -64.908, 5.3197, 0.84 ) }
    dend_39 { pt3dadd( -16.3989, -66.843, 5.99479, 0.48 ) }
    dend_39 { pt3dadd( -16.4734, -67.599, 6.2754, 0.36 ) }
    dend_39 { pt3dadd( -16.5074, -67.9164, 6.39242, 0.36 ) }
    dend_39 { pt3dadd( -16.561, -68.3577, 6.57623, 0.72 ) }
    dend_39 { pt3dadd( -16.6255, -68.8319, 6.78463, 0.84 ) }
    dend_39 { pt3dadd( -16.7721, -69.8885, 7.23844, 0.72 ) }
    dend_39 { pt3dadd( -16.888, -70.6143, 7.57285, 0.72 ) }
    dend_39 { pt3dadd( -17.0037, -71.3407, 7.93012, 0.72 ) }
    dend_39 { pt3dadd( -17.2024, -72.6512, 8.60043, 0.6 ) }
    dend_39 { pt3dadd( -17.2727, -73.1683, 8.86748, 0.6 ) }
    dend_39 { pt3dadd( -17.3733, -73.8976, 9.2229, 0.72 ) }
    dend_39 { pt3dadd( -17.602, -75.2731, 9.89272, 1.2 ) }
    dend_39 { pt3dadd( -17.7275, -75.8874, 10.2071, 1.32 ) }
    dend_39 { pt3dadd( -17.8435, -76.392, 10.4562, 1.32 ) }
    dend_39 { pt3dadd( -17.9896, -77.0166, 10.7217, 0.48 ) }
    dend_39 { pt3dadd( -18.2077, -77.9658, 11.0979, 0.48 ) }
    dend_39 { pt3dadd( -18.4285, -78.9758, 11.4716, 0.96 ) }
    dend_39 { pt3dadd( -18.5822, -79.7836, 11.7218, 0.72 ) }
    dend_39 { pt3dadd( -18.6995, -80.4425, 11.925, 0.48 ) }
    dend_39 { pt3dadd( -18.7907, -81.0096, 12.1004, 0.48 ) }
    dend_39 { pt3dadd( -18.907, -81.8866, 12.3614, 0.48 ) }
    dend_39 { pt3dadd( -18.9646, -82.5862, 12.5454, 0.48 ) }
    dend_39 { pt3dadd( -18.9956, -83.147, 12.6535, 0.72 ) }
    dend_39 { pt3dadd( -19.0277, -83.7311, 12.7518, 1.08 ) }
    dend_39 { pt3dadd( -19.0764, -84.631, 12.9018, 0.36 ) }
    dend_39 { pt3dadd( -19.0927, -84.8588, 12.9468, 0.36 ) }
    dend_39 { pt3dadd( -19.156, -85.6452, 13.1064, 0.48 ) }
    dend_39 { pt3dadd( -19.2156, -86.3383, 13.2366, 0.6 ) }
    dend_39 { pt3dadd( -19.2896, -87.0172, 13.3834, 1.08 ) }
    dend_39 { pt3dadd( -19.3818, -87.6935, 13.5322, 1.2 ) }
    dend_39 { pt3dadd( -19.54, -88.6487, 13.7296, 0.72 ) }
    dend_39 { pt3dadd( -19.6624, -89.3132, 13.8642, 0.72 ) }
    dend_39 { pt3dadd( -19.7995, -89.9955, 13.9969, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_39 { pt3dadd( -20.0211, -90.9898, 14.1668, 0.36 ) }
    dend_39 { pt3dadd( -20.2963, -92.037, 14.3384, 0.36 ) }
    dend_39 { pt3dadd( -20.5022, -92.7376, 14.4396, 0.36 ) }
    dend_39 { pt3dadd( -20.739, -93.5035, 14.5258, 0.48 ) }
    dend_39 { pt3dadd( -20.9443, -94.1682, 14.5987, 0.72 ) }
    dend_39 { pt3dadd( -21.2317, -95.163, 14.7181, 0.72 ) }
    dend_39 { pt3dadd( -21.4925, -96.1262, 14.8284, 0.36 ) }
    dend_39 { pt3dadd( -21.6562, -96.6934, 14.8972, 0.36 ) }
    dend_39 { pt3dadd( -21.8727, -97.3816, 14.9955, 0.6 ) }
    dend_39 { pt3dadd( -22.2466, -98.4661, 15.159, 0.6 ) }
    dend_39 { pt3dadd( -22.4741, -99.111, 15.2522, 0.36 ) }
    dend_39 { pt3dadd( -22.852, -100.175, 15.405, 0.36 ) }
    dend_39 { pt3dadd( -23.2055, -101.175, 15.5307, 0.36 ) }
    dend_39 { pt3dadd( -23.5814, -102.236, 15.6616, 0.48 ) }
    dend_39 { pt3dadd( -23.8055, -102.873, 15.7375, 0.6 ) }
    dend_39 { pt3dadd( -24.2231, -104.119, 15.8666, 0.6 ) }
    dend_39 { pt3dadd( -24.4179, -104.772, 15.9275, 0.48 ) }
    dend_39 { pt3dadd( -24.6691, -105.801, 16.0261, 0.48 ) }
    dend_39 { pt3dadd( -24.83, -106.588, 16.0929, 0.48 ) }
    dend_39 { pt3dadd( -24.9557, -107.276, 16.1372, 0.84 ) }
    dend_39 { pt3dadd( -25.1645, -108.533, 16.2141, 0.72 ) }
    dend_39 { pt3dadd( -25.2519, -109.125, 16.2455, 0.36 ) }
    dend_39 { pt3dadd( -25.3379, -109.817, 16.2741, 0.36 ) }
    dend_39 { pt3dadd( -25.4395, -110.749, 16.3117, 0.36 ) }
    dend_39 { pt3dadd( -25.5233, -111.56, 16.3425, 0.48 ) }
    dend_39 { pt3dadd( -25.5938, -112.339, 16.3698, 0.6 ) }
    dend_39 { pt3dadd( -25.7039, -113.603, 16.4099, 0.6 ) }
    dend_39 { pt3dadd( -25.7693, -114.422, 16.4481, 0.6 ) }
    dend_39 { pt3dadd( -25.8097, -114.991, 16.4846, 0.6 ) }
    dend_39 { pt3dadd( -25.8711, -116.278, 16.5929, 0.6 ) }
    dend_39 { pt3dadd( -25.8882, -116.856, 16.65, 0.72 ) }
    dend_39 { pt3dadd( -25.8894, -117.468, 16.7322, 0.96 ) }
    dend_39 { pt3dadd( -25.8376, -118.674, 16.9275, 0.36 ) }
    dend_39 { pt3dadd( -25.776, -119.367, 17.056, 0.36 ) }
    dend_39 { pt3dadd( -25.6623, -120.185, 17.213, 0.72 ) }
    dend_39 { pt3dadd( -25.4724, -121.214, 17.4063, 0.84 ) }
    dend_39 { pt3dadd( -25.2408, -122.45, 17.6193, 0.36 ) }
    dend_39 { pt3dadd( -25.0524, -123.457, 17.8096, 0.36 ) }
    dend_39 { pt3dadd( -24.9241, -124.172, 17.9479, 0.36 ) }
    dend_39 { pt3dadd( -24.8148, -124.876, 18.0913, 0.24 ) }
    dend_39 { pt3dadd( -24.7112, -125.901, 18.2948, 0.24 ) }
    dend_39 { pt3dadd( -24.6733, -126.978, 18.4961, 0.36 ) }
    dend_39 { pt3dadd( -24.6925, -127.822, 18.6351, 0.48 ) }
    dend_39 { pt3dadd( -24.7404, -128.51, 18.7447, 0.36 ) }
    dend_39 { pt3dadd( -24.8107, -129.303, 18.8651, 0.36 ) }
    dend_39 { pt3dadd( -24.882, -130.137, 18.9917, 0.36 ) }
    dend_39 { pt3dadd( -24.9211, -130.748, 19.0717, 0.36 ) }
    dend_39 { pt3dadd( -24.9347, -131.225, 19.1161, 0.6 ) }
    dend_39 { pt3dadd( -24.9374, -131.796, 19.1407, 0.36 ) }
    dend_39 { pt3dadd( -24.9294, -132.261, 19.1646, 0.36 ) }
    dend_39 { pt3dadd( -24.9069, -132.843, 19.1992, 0.36 ) }
    dend_39 { pt3dadd( -24.8864, -133.19, 19.2203, 0.6 ) }
    dend_39 { pt3dadd( -24.8698, -133.545, 19.2395, 0.6 ) }
    dend_39 { pt3dadd( -24.8531, -134.023, 19.2562, 0.48 ) }
    dend_39 { pt3dadd( -24.8385, -134.493, 19.2651, 0.48 ) }
    dend_39 { pt3dadd( -24.8198, -135.013, 19.2693, 0.48 ) }
    dend_39 { pt3dadd( -24.7945, -135.386, 19.2717, 0.72 ) }
    dend_39 { pt3dadd( -24.7434, -135.964, 19.333, 0.72 ) }
    dend_39 { pt3dadd( -24.6908, -136.491, 19.4228, 0.48 ) }
    dend_39 { pt3dadd( -24.6322, -137.047, 19.544, 0.36 ) }
    dend_39 { pt3dadd( -24.5726, -137.62, 19.689, 0.36 ) }
    dend_39 { pt3dadd( -24.5048, -138.263, 19.8658, 0.36 ) }
    dend_39 { pt3dadd( -24.3949, -139.677, 20.2639, 0.24 ) }
    dend_39 { pt3dadd( -24.4031, -140.239, 20.4126, 0.24 ) }
    dend_39 { pt3dadd( -24.4485, -140.577, 20.4895, 0.6 ) }
    dend_39 { pt3dadd( -24.6184, -141.249, 20.6016, 0.72 ) }
    dend_39 { pt3dadd( -24.7444, -141.601, 20.6334, 0.36 ) }
    dend_39 { pt3dadd( -24.9898, -142.17, 20.6409, 0.36 ) }
    dend_39 { pt3dadd( -25.488, -143.152, 20.5724, 0.36 ) }
    dend_39 { pt3dadd( -25.8156, -143.74, 20.5252, 0.36 ) }
    dend_39 { pt3dadd( -26.2161, -144.413, 20.4685, 0.36 ) }
    dend_39 { pt3dadd( -26.7136, -145.227, 20.399, 0.36 ) }
    dend_39 { pt3dadd( -27.152, -145.945, 20.3391, 0.36 ) }
    dend_39 { pt3dadd( -27.905, -147.228, 20.2365, 0.48 ) }
    dend_39 { pt3dadd( -28.5858, -148.471, 20.1458, 0.48 ) }
    dend_39 { pt3dadd( -28.9009, -149.048, 20.1033, 0.6 ) }
    dend_39 { pt3dadd( -29.2003, -149.6, 20.0572, 0.6 ) }
    dend_39 { pt3dadd( -29.446, -150.056, 20.0144, 0.36 ) }
    dend_39 { pt3dadd( -29.871, -150.917, 19.9309, 0.36 ) }
    dend_39 { pt3dadd( -30.0928, -151.457, 19.8803, 0.48 ) }
    dend_39 { pt3dadd( -30.2642, -151.927, 19.8383, 0.48 ) }
    dend_39 { pt3dadd( -30.3748, -152.223, 19.8122, 0.6 ) }
    dend_39 { pt3dadd( -30.5291, -152.605, 19.7993, 0.6 ) }
    dend_39 { pt3dadd( -30.8565, -153.363, 19.81, 0.36 ) }
    dend_39 { pt3dadd( -31.1362, -153.975, 19.8412, 0.12 ) }
    dend_39 { pt3dadd( -31.4007, -154.546, 19.9055, 0.12 ) }
    dend_39 { pt3dadd( -31.8705, -155.594, 20.0723, 0.12 ) }
    dend_39 { pt3dadd( -32.1654, -156.249, 20.2019, 0.6 ) }
    dend_39 { pt3dadd( -32.3626, -156.721, 20.3069, 0.72 ) }
    dend_39 { pt3dadd( -32.6911, -157.628, 20.5201, 0.36 ) }
    dend_39 { pt3dadd( -32.8549, -158.19, 20.6495, 0.12 ) }
    dend_39 { pt3dadd( -32.9921, -158.746, 20.7627, 0.12 ) }
    dend_39 { pt3dadd( -32.9921, -158.746, 20.7627, 0.36 ) }
    dend_39 { pt3dadd( -33.1379, -159.437, 20.8227, 0.24 ) }
    dend_39 { pt3dadd( -33.3237, -160.339, 20.8645, 0.24 ) }
    dend_39 { pt3dadd( -33.4406, -160.949, 20.8685, 0.24 ) }
    dend_39 { pt3dadd( -33.553, -161.52, 20.8641, 0.36 ) }
    dend_39 { pt3dadd( -33.7097, -162.23, 20.865, 0.36 ) }
    dend_39 { pt3dadd( -33.9268, -163.09, 20.8693, 0.36 ) }
    dend_39 { pt3dadd( -34.0714, -163.602, 20.8717, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_39 { pt3dadd( -34.2397, -164.171, 20.8841, 0.36 ) }
    dend_39 { pt3dadd( -34.393, -164.706, 20.9024, 0.12 ) }
    dend_39 { pt3dadd( -34.703, -165.801, 20.9518, 0.24 ) }
    dend_39 { pt3dadd( -35.0441, -166.998, 21.0184, 0.24 ) }
    dend_39 { pt3dadd( -35.5002, -168.619, 21.1199, 0.24 ) }
    dend_39 { pt3dadd( -35.6232, -169.057, 21.1483, 0.12 ) }
    dend_39 { pt3dadd( -35.9205, -170.088, 21.1906, 0.12 ) }
    dend_39 { pt3dadd( -35.9932, -170.329, 21.193, 0.36 ) }
    dend_39 { pt3dadd( -36.2052, -171.009, 21.1923, 0.36 ) }
    dend_39 { pt3dadd( -36.5348, -171.88, 21.163, 0.36 ) }
    dend_39 { pt3dadd( -36.9126, -172.48, 21.0904, 0.72 ) }
    dend_39 { pt3dadd( -37.2362, -172.803, 21.0152, 0.48 ) }
    dend_39 { pt3dadd( -37.7229, -173.196, 20.899, 0.48 ) }
    dend_39 { pt3dadd( -38.0095, -173.394, 20.8298, 0.12 ) }
    dend_39 { pt3dadd( -38.88, -173.871, 20.6175, 0.12 ) }
    dend_39 { pt3dadd( -40.3276, -174.505, 20.2772, 0.12 ) }
    dend_39 { pt3dadd( -41.4385, -174.948, 20.034, 0.12 ) }
    dend_39 { pt3dadd( -44.5591, -184.145, 20.3497, 0.12 ) }
    dend_39 { pt3dadd( -48.4062, -193.078, 20.6623, 0.12 ) }
    dend_39 { pt3dadd( -53.7449, -201.117, 19.0981, 0.12 ) }
    dend_39 { pt3dadd( -59.9683, -208.677, 19.2332, 0.12 ) }
    dend_39 { pt3dadd( -65.6209, -216.557, 20.4866, 0.12 ) }
    dend_39 { pt3dadd( -71.305, -224.404, 21.8053, 0.12 ) }
    dend_39 { pt3dadd( -78.1293, -231.442, 21.3296, 0.12 ) }
    dend_39 { pt3dadd( -85.6611, -237.325, 18.9234, 0.12 ) }
    dend_39 { pt3dadd( -93.3512, -242.374, 15.3215, 0.12 ) }
    dend_39 { pt3dadd( -102.083, -246.085, 12.466, 0.12 ) }
    dend_39 { pt3dadd( -110.917, -250.038, 10.3671, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.7006, -36.2249, 2.49621, 0.48 ) }
    dend_34 { pt3dadd( -11.3208, -36.6904, 2.63693, 0.48 ) }
    dend_34 { pt3dadd( -11.7966, -37.0674, 2.72945, 0.48 ) }
    dend_34 { pt3dadd( -12.208, -37.3973, 2.83052, 0.48 ) }
    dend_34 { pt3dadd( -13.1448, -38.2075, 3.0858, 0.48 ) }
    dend_34 { pt3dadd( -13.4543, -38.4918, 3.16773, 0.48 ) }
    dend_34 { pt3dadd( -13.7514, -38.7902, 3.2428, 0.36 ) }
    dend_34 { pt3dadd( -14.1024, -39.1782, 3.35366, 0.36 ) }
    dend_34 { pt3dadd( -14.4444, -39.6002, 3.4502, 0.72 ) }
    dend_34 { pt3dadd( -14.7237, -39.9887, 3.53388, 1.2 ) }
    dend_34 { pt3dadd( -14.9996, -40.4385, 3.60462, 1.2 ) }
    dend_34 { pt3dadd( -15.3436, -41.0673, 3.72171, 0.48 ) }
    dend_34 { pt3dadd( -15.5884, -41.5639, 3.81711, 0.36 ) }
    dend_34 { pt3dadd( -15.7755, -41.9927, 3.89386, 0.36 ) }
    dend_34 { pt3dadd( -16.0189, -42.5915, 3.97461, 0.84 ) }
    dend_34 { pt3dadd( -16.2074, -43.0549, 4.02731, 0.84 ) }
    dend_34 { pt3dadd( -16.4879, -43.7549, 4.08276, 0.36 ) }
    dend_34 { pt3dadd( -16.6679, -44.203, 4.10062, 0.72 ) }
    dend_34 { pt3dadd( -16.8562, -44.6696, 4.10174, 0.84 ) }
    dend_34 { pt3dadd( -17.2084, -45.4936, 4.081, 0.12 ) }
    dend_34 { pt3dadd( -17.5385, -46.2317, 4.0362, 0.12 ) }
    dend_34 { pt3dadd( -17.9626, -47.1028, 3.97845, 0.12 ) }
    dend_34 { pt3dadd( -18.2047, -47.5523, 3.94293, 0.6 ) }
    dend_34 { pt3dadd( -18.3671, -47.8456, 3.91815, 0.6 ) }
    dend_34 { pt3dadd( -18.6442, -48.3552, 3.87604, 0.12 ) }
    dend_34 { pt3dadd( -18.8254, -48.7018, 3.85524, 0.12 ) }
    dend_34 { pt3dadd( -19.0556, -49.1806, 3.84135, 0.6 ) }
    dend_34 { pt3dadd( -19.3561, -49.8574, 3.85835, 0.6 ) }
    dend_34 { pt3dadd( -19.4967, -50.2046, 3.88061, 0.6 ) }
    dend_34 { pt3dadd( -19.6601, -50.6572, 3.92123, 0.48 ) }
    dend_34 { pt3dadd( -19.7991, -51.0832, 3.98348, 0.72 ) }
    dend_34 { pt3dadd( -19.9385, -51.5182, 4.07276, 0.72 ) }
    dend_34 { pt3dadd( -20.1017, -52.0626, 4.21297, 0.36 ) }
    dend_34 { pt3dadd( -20.1526, -52.2301, 4.26072, 0.36 ) }
    dend_34 { pt3dadd( -20.3681, -52.8098, 4.40776, 0.6 ) }
    dend_34 { pt3dadd( -20.6237, -53.4014, 4.52521, 0.36 ) }
    dend_34 { pt3dadd( -20.7216, -53.5945, 4.56039, 0.24 ) }
    dend_34 { pt3dadd( -20.9128, -53.9315, 4.619, 0.24 ) }
    dend_34 { pt3dadd( -21.1277, -54.2906, 4.67117, 0.24 ) }
    dend_34 { pt3dadd( -21.5118, -54.9206, 4.7555, 0.6 ) }
    dend_34 { pt3dadd( -21.7551, -55.3258, 4.8062, 0.6 ) }
    dend_34 { pt3dadd( -22.0757, -55.8946, 4.85781, 0.48 ) }
    dend_34 { pt3dadd( -22.1623, -56.0629, 4.8737, 0.48 ) }
    dend_34 { pt3dadd( -22.3391, -56.4464, 4.91328, 0.36 ) }
    dend_34 { pt3dadd( -22.6152, -57.1033, 4.99671, 0.36 ) }
    dend_34 { pt3dadd( -22.7234, -57.3689, 5.03753, 0.48 ) }
    dend_34 { pt3dadd( -22.9484, -57.9109, 5.11529, 0.48 ) }
    dend_34 { pt3dadd( -23.1419, -58.3498, 5.17645, 0.72 ) }
    dend_34 { pt3dadd( -23.2651, -58.603, 5.2183, 0.84 ) }
    dend_34 { pt3dadd( -23.5829, -59.2001, 5.34231, 0.72 ) }
    dend_34 { pt3dadd( -23.8482, -59.6739, 5.45215, 0.36 ) }
    dend_34 { pt3dadd( -24.1039, -60.0982, 5.54902, 0.36 ) }
    dend_34 { pt3dadd( -24.3677, -60.4847, 5.64883, 0.24 ) }
    dend_34 { pt3dadd( -24.7884, -61.0513, 5.79807, 0.24 ) }
    dend_34 { pt3dadd( -25.0914, -61.4482, 5.89666, 0.12 ) }
    dend_34 { pt3dadd( -25.3782, -61.8313, 5.98148, 0.12 ) }
    dend_34 { pt3dadd( -25.6252, -62.1658, 6.05698, 0.12 ) }
    dend_34 { pt3dadd( -25.919, -62.5521, 6.17177, 0.12 ) }
    dend_34 { pt3dadd( -26.1197, -62.8108, 6.27723, 0.12 ) }
    dend_34 { pt3dadd( -26.2895, -63.0276, 6.40108, 0.12 ) }
    dend_34 { pt3dadd( -26.3988, -63.1912, 6.50022, 0.72 ) }
    dend_34 { pt3dadd( -26.6123, -63.5472, 6.73154, 0.96 ) }
    dend_34 { pt3dadd( -26.899, -64.0866, 7.07897, 0.84 ) }
    dend_34 { pt3dadd( -27.1517, -64.6506, 7.41481, 0.72 ) }
    dend_34 { pt3dadd( -27.3441, -65.1349, 7.69627, 0.36 ) }
    dend_34 { pt3dadd( -27.5683, -65.7704, 8.02925, 0.24 ) }
    dend_34 { pt3dadd( -27.6528, -66.046, 8.14885, 0.84 ) }
    dend_34 { pt3dadd( -27.719, -66.2926, 8.22963, 0.84 ) }
    dend_34 { pt3dadd( -27.8493, -66.8341, 8.33799, 0.72 ) }
    dend_34 { pt3dadd( -27.9878, -67.4214, 8.41794, 0.48 ) }
    dend_34 { pt3dadd( -28.1355, -67.9888, 8.48929, 0.24 ) }
    dend_34 { pt3dadd( -28.3042, -68.5584, 8.56081, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_34 { pt3dadd( -28.4351, -68.9492, 8.61986, 0.12 ) }
    dend_34 { pt3dadd( -28.8148, -69.9683, 8.79341, 0.12 ) }
    dend_34 { pt3dadd( -29.108, -70.6423, 8.90639, 0.12 ) }
    dend_34 { pt3dadd( -29.2563, -70.9548, 8.96486, 0.48 ) }
    dend_34 { pt3dadd( -29.5334, -71.518, 9.08538, 0.6 ) }
    dend_34 { pt3dadd( -29.872, -72.2084, 9.2364, 0.48 ) }
    dend_34 { pt3dadd( -30.0975, -72.6617, 9.32605, 0.36 ) }
    dend_34 { pt3dadd( -30.4361, -73.3048, 9.43951, 0.48 ) }
    dend_34 { pt3dadd( -30.7632, -73.9183, 9.52245, 0.24 ) }
    dend_34 { pt3dadd( -30.986, -74.3359, 9.57795, 0.24 ) }
    dend_34 { pt3dadd( -31.393, -75.1233, 9.68764, 0.24 ) }
    dend_34 { pt3dadd( -31.7665, -75.9093, 9.79207, 0.24 ) }
    dend_34 { pt3dadd( -31.9777, -76.3842, 9.85262, 0.6 ) }
    dend_34 { pt3dadd( -32.049, -76.575, 9.87368, 0.6 ) }
    dend_34 { pt3dadd( -32.2427, -77.2434, 9.92852, 0.24 ) }
    dend_34 { pt3dadd( -32.3621, -77.7879, 9.97303, 0.24 ) }
    dend_34 { pt3dadd( -32.4316, -78.3483, 10.02, 0.48 ) }
    dend_34 { pt3dadd( -32.4248, -78.9145, 10.0352, 0.36 ) }
    dend_34 { pt3dadd( -32.3461, -79.7602, 10.0122, 0.36 ) }
    dend_34 { pt3dadd( -32.2563, -80.4325, 9.96272, 0.36 ) }
    dend_34 { pt3dadd( -32.2266, -80.64, 9.93522, 0.84 ) }
    dend_34 { pt3dadd( -32.1945, -80.9265, 9.89294, 0.84 ) }
    dend_34 { pt3dadd( -32.1067, -81.9822, 9.74651, 0.24 ) }
    dend_34 { pt3dadd( -32.0952, -82.2559, 9.71635, 0.24 ) }
    dend_34 { pt3dadd( -32.1064, -82.4655, 9.69219, 0.24 ) }
    dend_34 { pt3dadd( -32.2202, -83.2157, 9.62062, 0.24 ) }
    dend_34 { pt3dadd( -32.3318, -83.7971, 9.58556, 0.36 ) }
    dend_34 { pt3dadd( -32.3865, -84.0457, 9.5781, 0.12 ) }
    dend_34 { pt3dadd( -32.4945, -84.5155, 9.58216, 0.12 ) }
    dend_34 { pt3dadd( -32.6935, -85.5458, 9.60356, 0.12 ) }
    dend_34 { pt3dadd( -32.8643, -86.72, 9.64659, 0.12 ) }
    dend_34 { pt3dadd( -32.9568, -87.6553, 9.69469, 0.12 ) }
    dend_34 { pt3dadd( -32.9948, -88.1173, 9.71916, 0.48 ) }
    dend_34 { pt3dadd( -33.0366, -88.6892, 9.7494, 0.48 ) }
    dend_34 { pt3dadd( -33.0598, -89.1886, 9.78268, 0.48 ) }
    dend_34 { pt3dadd( -33.0643, -89.8535, 9.83998, 0.36 ) }
    dend_34 { pt3dadd( -33.0657, -90.2216, 9.87374, 0.36 ) }
    dend_34 { pt3dadd( -33.1025, -90.8233, 9.91722, 0.48 ) }
    dend_34 { pt3dadd( -33.1434, -91.124, 9.93054, 0.12 ) }
    dend_34 { pt3dadd( -33.1979, -91.3206, 9.94451, 0.12 ) }
    dend_34 { pt3dadd( -33.3086, -91.5975, 9.97317, 0.12 ) }
    dend_34 { pt3dadd( -33.4971, -91.974, 10.0277, 0.6 ) }
    dend_34 { pt3dadd( -33.6798, -92.3202, 10.0955, 0.84 ) }
    dend_34 { pt3dadd( -33.779, -92.5032, 10.138, 0.84 ) }
    dend_34 { pt3dadd( -34.1813, -93.2142, 10.2873, 0.12 ) }
    dend_34 { pt3dadd( -34.2732, -93.3782, 10.3144, 0.12 ) }
    dend_34 { pt3dadd( -34.3682, -93.5663, 10.34, 0.12 ) }
    dend_34 { pt3dadd( -34.458, -93.7487, 10.3673, 0.12 ) }
    dend_34 { pt3dadd( -34.7233, -94.2933, 10.4404, 0.36 ) }
    dend_34 { pt3dadd( -34.967, -94.7763, 10.5196, 0.36 ) }
    dend_34 { pt3dadd( -35.2957, -95.4122, 10.6216, 0.36 ) }
    dend_34 { pt3dadd( -35.5202, -95.8146, 10.6982, 0.36 ) }
    dend_34 { pt3dadd( -35.8104, -96.3337, 10.81, 0.6 ) }
    dend_34 { pt3dadd( -36.0072, -96.677, 10.8877, 0.6 ) }
    dend_34 { pt3dadd( -36.375, -97.2902, 11.0233, 0.36 ) }
    dend_34 { pt3dadd( -36.5176, -97.5142, 11.0668, 0.36 ) }
    dend_34 { pt3dadd( -36.709, -97.7995, 11.1204, 0.36 ) }
    dend_34 { pt3dadd( -37.0256, -98.2609, 11.1855, 0.36 ) }
    dend_34 { pt3dadd( -37.2404, -98.6021, 11.2023, 0.36 ) }
    dend_34 { pt3dadd( -37.5964, -99.1883, 11.1944, 0.48 ) }
    dend_34 { pt3dadd( -37.7662, -99.4753, 11.1487, 0.48 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 164.034, 74.515, 145.831, 0.48 ) }
    dend_30 { pt3dadd( 171.893, 78.5713, 152.707, 0.48 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 63/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 164.034, 74.515, 145.831, 0.36 ) }
    dend_29 { pt3dadd( 170.376, 77.7161, 152.248, 0.48 ) }
    dend_29 { pt3dadd( 176.521, 80.2355, 159.157, 0.48 ) }
    dend_29 { pt3dadd( 181.912, 81.9017, 166.912, 0.48 ) }
    dend_29 { pt3dadd( 188.009, 82.7361, 174.28, 0.48 ) }
    dend_29 { pt3dadd( 193.743, 81.6601, 181.909, 0.48 ) }
    dend_29 { pt3dadd( 200.869, 80.0669, 188.14, 0.48 ) }
    dend_29 { pt3dadd( 208.372, 77.1336, 193.325, 0.48 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -43.2351, -118.446, -76.4564, 0.12 ) }
    dend_18 { pt3dadd( -43.7968, -118.544, -77.3409, 0.12 ) }
    dend_18 { pt3dadd( -44.1075, -118.604, -77.824, 0.12 ) }
    dend_18 { pt3dadd( -45.2466, -118.833, -79.5214, 0.6 ) }
    dend_18 { pt3dadd( -45.5773, -118.909, -80.0638, 0.6 ) }
    dend_18 { pt3dadd( -46.1036, -119.058, -80.9836, 0.36 ) }
    dend_18 { pt3dadd( -46.5906, -119.209, -81.8275, 0.36 ) }
    dend_18 { pt3dadd( -46.7981, -119.297, -82.1946, 0.6 ) }
    dend_18 { pt3dadd( -46.9536, -119.378, -82.4618, 0.6 ) }
    dend_18 { pt3dadd( -48.0268, -120.09, -84.2126, 0.24 ) }
    dend_18 { pt3dadd( -48.499, -120.439, -84.9769, 0.24 ) }
    dend_18 { pt3dadd( -48.7558, -120.645, -85.412, 0.24 ) }
    dend_18 { pt3dadd( -49.2662, -121.073, -86.3038, 0.24 ) }
    dend_18 { pt3dadd( -49.5027, -121.283, -86.7303, 0.24 ) }
    dend_18 { pt3dadd( -50.0256, -121.768, -87.6859, 0.6 ) }
    dend_18 { pt3dadd( -50.1719, -121.906, -87.9332, 0.6 ) }
    dend_18 { pt3dadd( -51.0751, -122.743, -89.4887, 0.12 ) }
    dend_18 { pt3dadd( -51.2237, -122.883, -89.7556, 0.12 ) }
    dend_18 { pt3dadd( -51.4012, -123.035, -90.0592, 0.48 ) }
    dend_18 { pt3dadd( -51.8659, -123.374, -90.722, 0.12 ) }
    dend_18 { pt3dadd( -52.1139, -123.527, -90.9705, 0.12 ) }
    dend_18 { pt3dadd( -52.3918, -123.678, -91.1874, 0.12 ) }
    dend_18 { pt3dadd( -52.6385, -123.799, -91.3103, 0.12 ) }
    dend_18 { pt3dadd( -53.0004, -123.961, -91.5076, 0.48 ) }
    dend_18 { pt3dadd( -53.6545, -124.22, -91.8559, 0.6 ) }
    dend_18 { pt3dadd( -54.0188, -124.353, -92.0321, 0.6 ) }
    dend_18 { pt3dadd( -54.5882, -124.566, -92.3131, 0.12 ) }
    dend_18 { pt3dadd( -55.0162, -124.737, -92.565, 0.12 ) }
    dend_18 { pt3dadd( -55.5272, -124.964, -92.899, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_18 { pt3dadd( -56.0115, -125.229, -93.2352, 0.12 ) }
    dend_18 { pt3dadd( -56.3494, -125.465, -93.4704, 0.6 ) }
    dend_18 { pt3dadd( -56.6588, -125.711, -93.6845, 0.6 ) }
    dend_18 { pt3dadd( -57.3638, -126.316, -94.2121, 0.12 ) }
    dend_18 { pt3dadd( -57.5495, -126.487, -94.3614, 0.12 ) }
    dend_18 { pt3dadd( -57.9614, -126.892, -94.7261, 0.12 ) }
    dend_18 { pt3dadd( -58.2383, -127.173, -94.987, 0.6 ) }
    dend_18 { pt3dadd( -58.3723, -127.309, -95.1198, 0.6 ) }
    dend_18 { pt3dadd( -59.1063, -128.08, -95.8333, 0.12 ) }
    dend_18 { pt3dadd( -59.4032, -128.422, -96.1048, 0.12 ) }
    dend_18 { pt3dadd( -60.0548, -129.204, -96.6968, 0.24 ) }
    dend_18 { pt3dadd( -60.4302, -129.651, -97.0378, 0.36 ) }
    dend_18 { pt3dadd( -60.7844, -130.064, -97.3411, 0.12 ) }
    dend_18 { pt3dadd( -61.1984, -130.535, -97.652, 0.12 ) }
    dend_18 { pt3dadd( -61.7399, -131.129, -97.9642, 0.12 ) }
    dend_18 { pt3dadd( -62.0582, -131.426, -98.1474, 0.48 ) }
    dend_18 { pt3dadd( -62.4056, -131.676, -98.3227, 0.12 ) }
    dend_18 { pt3dadd( -62.6726, -131.796, -98.4496, 0.12 ) }
    dend_18 { pt3dadd( -63.1597, -131.928, -98.6517, 0.12 ) }
    dend_18 { pt3dadd( -63.4776, -131.978, -98.7774, 0.36 ) }
    dend_18 { pt3dadd( -64.47, -132.07, -99.1499, 0.12 ) }
    dend_18 { pt3dadd( -65.0066, -132.121, -99.3388, 0.12 ) }
    dend_18 { pt3dadd( -65.7198, -132.215, -99.561, 0.12 ) }
    dend_18 { pt3dadd( -66.1362, -132.288, -99.6818, 0.48 ) }
    dend_18 { pt3dadd( -66.5866, -132.394, -99.7969, 0.48 ) }
    dend_18 { pt3dadd( -67.0177, -132.521, -99.8768, 0.36 ) }
    dend_18 { pt3dadd( -67.334, -132.637, -99.8751, 0.36 ) }
    dend_18 { pt3dadd( -67.7744, -132.812, -99.8308, 0.36 ) }
    dend_18 { pt3dadd( -68.1282, -132.946, -99.7658, 0.36 ) }
    dend_18 { pt3dadd( -68.3987, -133.046, -99.702, 0.36 ) }
    dend_18 { pt3dadd( -69.1729, -133.331, -99.4899, 0.48 ) }
    dend_18 { pt3dadd( -70.1725, -133.74, -99.1933, 0.12 ) }
    dend_18 { pt3dadd( -70.5513, -133.923, -99.0854, 0.12 ) }
    dend_18 { pt3dadd( -71.0043, -134.175, -98.9693, 0.12 ) }
    dend_18 { pt3dadd( -71.3156, -134.388, -98.9043, 0.12 ) }
    dend_18 { pt3dadd( -71.5303, -134.594, -98.8788, 0.12 ) }
    dend_18 { pt3dadd( -71.8666, -135.088, -98.8838, 0.12 ) }
    dend_18 { pt3dadd( -72.2513, -135.828, -98.9506, 0.6 ) }
    dend_18 { pt3dadd( -72.3474, -136.073, -98.9714, 0.12 ) }
    dend_18 { pt3dadd( -72.5013, -136.572, -99.012, 0.12 ) }
    dend_18 { pt3dadd( -72.7439, -137.47, -99.0837, 0.12 ) }
    dend_18 { pt3dadd( -72.9456, -138.275, -99.1504, 0.12 ) }
    dend_18 { pt3dadd( -73.0771, -138.811, -99.1942, 0.12 ) }
    dend_18 { pt3dadd( -73.219, -139.418, -99.2386, 0.12 ) }
    dend_18 { pt3dadd( -73.2635, -139.621, -99.2513, 0.12 ) }
    dend_18 { pt3dadd( -73.3614, -140.046, -99.2776, 0.36 ) }
    dend_18 { pt3dadd( -73.4161, -140.28, -99.2957, 0.12 ) }
    dend_18 { pt3dadd( -73.6078, -141.006, -99.363, 0.12 ) }
    dend_18 { pt3dadd( -73.7866, -141.604, -99.4212, 0.12 ) }
    dend_18 { pt3dadd( -73.9224, -142.01, -99.4616, 0.6 ) }
    dend_18 { pt3dadd( -74.1078, -142.562, -99.5186, 0.6 ) }
    dend_18 { pt3dadd( -74.2539, -143.004, -99.5648, 0.12 ) }
    dend_18 { pt3dadd( -74.4835, -143.661, -99.6409, 0.12 ) }
    dend_18 { pt3dadd( -74.6869, -144.209, -99.7122, 0.12 ) }
    dend_18 { pt3dadd( -74.8542, -144.642, -99.7691, 0.6 ) }
    dend_18 { pt3dadd( -75.0015, -145.039, -99.8191, 0.6 ) }
    dend_18 { pt3dadd( -75.1505, -145.483, -99.87, 0.6 ) }
    dend_18 { pt3dadd( -75.2334, -145.736, -99.8957, 0.12 ) }
    dend_18 { pt3dadd( -75.5032, -146.541, -99.9781, 0.12 ) }
    dend_18 { pt3dadd( -75.7444, -147.232, -100.076, 0.12 ) }
    dend_18 { pt3dadd( -75.9394, -147.744, -100.164, 0.12 ) }
    dend_18 { pt3dadd( -76.1951, -148.378, -100.283, 0.12 ) }
    dend_18 { pt3dadd( -76.4226, -148.933, -100.393, 0.12 ) }
    dend_18 { pt3dadd( -76.591, -149.361, -100.477, 0.36 ) }
    dend_18 { pt3dadd( -76.8055, -149.904, -100.637, 0.12 ) }
    dend_18 { pt3dadd( -76.9328, -150.23, -100.755, 0.12 ) }
    dend_18 { pt3dadd( -77.1826, -150.899, -101.021, 0.12 ) }
    dend_18 { pt3dadd( -77.4644, -151.682, -101.326, 0.12 ) }
    dend_18 { pt3dadd( -77.6565, -152.23, -101.54, 0.12 ) }
    dend_18 { pt3dadd( -78.0237, -153.289, -102.122, 0.12 ) }
    dend_18 { pt3dadd( -78.1293, -153.594, -102.319, 0.36 ) }
    dend_18 { pt3dadd( -78.2733, -153.99, -102.621, 0.12 ) }
    dend_18 { pt3dadd( -78.6074, -154.869, -103.537, 0.12 ) }
    dend_18 { pt3dadd( -78.7369, -155.169, -103.91, 0.6 ) }
    dend_18 { pt3dadd( -79.3646, -156.471, -105.667, 0.12 ) }
    dend_18 { pt3dadd( -79.5487, -156.813, -106.17, 0.12 ) }
    dend_18 { pt3dadd( -79.637, -156.966, -106.412, 0.6 ) }
    dend_18 { pt3dadd( -80.2585, -157.926, -108.043, 0.12 ) }
    dend_18 { pt3dadd( -80.5866, -158.345, -108.79, 0.12 ) }
    dend_18 { pt3dadd( -80.7355, -158.498, -109.009, 0.12 ) }
    dend_18 { pt3dadd( -81.0586, -158.767, -109.275, 0.36 ) }
    dend_18 { pt3dadd( -81.4621, -159.065, -109.547, 0.12 ) }
    dend_18 { pt3dadd( -81.7998, -159.301, -109.694, 0.12 ) }
    dend_18 { pt3dadd( -82.2647, -159.611, -109.794, 0.12 ) }
    dend_18 { pt3dadd( -83.1224, -160.179, -109.975, 0.12 ) }
    dend_18 { pt3dadd( -84.2134, -160.905, -110.196, 0.12 ) }
    dend_18 { pt3dadd( -84.5195, -161.115, -110.25, 0.12 ) }
    dend_18 { pt3dadd( -85.5069, -161.759, -110.421, 0.12 ) }
    dend_18 { pt3dadd( -85.7008, -161.891, -110.454, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -43.2351, -118.446, -76.4564, 0.12 ) }
    dend_17 { pt3dadd( -43.2289, -118.474, -76.4687, 0.12 ) }
    dend_17 { pt3dadd( -43.2147, -118.56, -76.4976, 0.6 ) }
    dend_17 { pt3dadd( -43.144, -118.819, -76.5635, 0.72 ) }
    dend_17 { pt3dadd( -42.9342, -119.372, -76.7333, 0.48 ) }
    dend_17 { pt3dadd( -42.7889, -119.708, -76.8331, 0.48 ) }
    dend_17 { pt3dadd( -42.6429, -120.046, -76.9274, 0.24 ) }
    dend_17 { pt3dadd( -42.4741, -120.448, -77.0501, 0.24 ) }
    dend_17 { pt3dadd( -42.2505, -121.045, -77.233, 0.24 ) }
    dend_17 { pt3dadd( -42.015, -121.686, -77.4236, 0.12 ) }
    dend_17 { pt3dadd( -41.8403, -122.136, -77.5466, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_17 { pt3dadd( -41.6328, -122.623, -77.6879, 0.12 ) }
    dend_17 { pt3dadd( -41.4394, -123.025, -77.8152, 0.48 ) }
    dend_17 { pt3dadd( -41.1879, -123.609, -78.0041, 0.36 ) }
    dend_17 { pt3dadd( -41.1224, -123.882, -78.0774, 0.12 ) }
    dend_17 { pt3dadd( -41.0654, -124.225, -78.1962, 0.12 ) }
    dend_17 { pt3dadd( -41.0307, -124.412, -78.2743, 0.36 ) }
    dend_17 { pt3dadd( -40.9658, -124.717, -78.4032, 0.12 ) }
    dend_17 { pt3dadd( -40.825, -125.333, -78.6033, 0.12 ) }
    dend_17 { pt3dadd( -40.5934, -126.311, -78.8724, 0.12 ) }
    dend_17 { pt3dadd( -40.3466, -127.372, -79.1476, 0.12 ) }
    dend_17 { pt3dadd( -40.1805, -128.075, -79.3114, 0.12 ) }
    dend_17 { pt3dadd( -40.0615, -128.511, -79.3971, 0.12 ) }
    dend_17 { pt3dadd( -39.7906, -129.273, -79.5206, 0.48 ) }
    dend_17 { pt3dadd( -39.6448, -129.562, -79.5555, 0.48 ) }
    dend_17 { pt3dadd( -39.3497, -130.023, -79.6051, 0.24 ) }
    dend_17 { pt3dadd( -39.0903, -130.415, -79.633, 0.24 ) }
    dend_17 { pt3dadd( -38.8698, -130.752, -79.6808, 0.24 ) }
    dend_17 { pt3dadd( -38.5276, -131.289, -79.8105, 0.12 ) }
    dend_17 { pt3dadd( -38.1379, -131.939, -80.0238, 0.12 ) }
    dend_17 { pt3dadd( -37.8417, -132.475, -80.1967, 0.12 ) }
    dend_17 { pt3dadd( -37.7167, -132.709, -80.2757, 0.24 ) }
    dend_17 { pt3dadd( -37.4603, -133.169, -80.4561, 0.36 ) }
    dend_17 { pt3dadd( -37.2346, -133.565, -80.6195, 0.12 ) }
    dend_17 { pt3dadd( -37.1092, -133.795, -80.7106, 0.12 ) }
    dend_17 { pt3dadd( -36.9382, -134.14, -80.8363, 0.12 ) }
    dend_17 { pt3dadd( -36.7198, -134.626, -80.9701, 0.36 ) }
    dend_17 { pt3dadd( -36.4469, -135.224, -81.1009, 0.12 ) }
    dend_17 { pt3dadd( -36.2553, -135.632, -81.1592, 0.12 ) }
    dend_17 { pt3dadd( -36.0963, -135.961, -81.2016, 0.12 ) }
    dend_17 { pt3dadd( -35.8253, -136.54, -81.2751, 0.12 ) }
    dend_17 { pt3dadd( -35.5708, -137.135, -81.3335, 0.12 ) }
    dend_17 { pt3dadd( -35.4733, -137.371, -81.3474, 0.12 ) }
    dend_17 { pt3dadd( -35.2045, -138.061, -81.3598, 0.6 ) }
    dend_17 { pt3dadd( -34.9458, -138.772, -81.3586, 0.12 ) }
    dend_17 { pt3dadd( -34.5093, -139.935, -81.3532, 0.12 ) }
    dend_17 { pt3dadd( -33.8948, -141.53, -81.3393, 0.12 ) }
    dend_17 { pt3dadd( -33.2249, -143.29, -81.3156, 0.12 ) }
    dend_17 { pt3dadd( -32.9596, -144.017, -81.3007, 0.12 ) }
    dend_17 { pt3dadd( -32.7212, -144.727, -81.2639, 0.48 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 39/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -37.7662, -99.4753, 11.1487, 0.48 ) }
    dend_38 { pt3dadd( -38.0541, -100.809, 11.3382, 0.48 ) }
    dend_38 { pt3dadd( -38.309, -102.096, 11.4819, 0.36 ) }
    dend_38 { pt3dadd( -38.4153, -102.679, 11.5367, 0.12 ) }
    dend_38 { pt3dadd( -38.5972, -103.66, 11.6898, 0.12 ) }
    dend_38 { pt3dadd( -38.7713, -104.508, 11.8436, 0.12 ) }
    dend_38 { pt3dadd( -38.8905, -105.051, 11.9476, 0.6 ) }
    dend_38 { pt3dadd( -39.0664, -105.76, 12.0488, 0.6 ) }
    dend_38 { pt3dadd( -39.1649, -106.182, 12.0597, 0.6 ) }
    dend_38 { pt3dadd( -39.397, -107.575, 11.9721, 0.12 ) }
    dend_38 { pt3dadd( -39.4524, -108.288, 11.8779, 0.12 ) }
    dend_38 { pt3dadd( -39.4272, -108.724, 11.793, 0.12 ) }
    dend_38 { pt3dadd( -39.0359, -109.959, 11.4718, 0.12 ) }
    dend_38 { pt3dadd( -37.2501, -111.894, 10.8617, 0.12 ) }
    dend_38 { pt3dadd( -36.3468, -112.411, 10.7037, 0.12 ) }
    dend_38 { pt3dadd( -35.5161, -112.735, 10.6108, 0.12 ) }
    dend_38 { pt3dadd( -33.9967, -113.183, 10.5647, 0.12 ) }
    dend_38 { pt3dadd( -32.554, -113.547, 10.6118, 0.12 ) }
    dend_38 { pt3dadd( -31.3594, -113.763, 10.7158, 0.12 ) }
    dend_38 { pt3dadd( -30.3962, -113.879, 10.894, 0.36 ) }
    dend_38 { pt3dadd( -30.0739, -113.921, 10.9536, 0.12 ) }
    dend_38 { pt3dadd( -28.8019, -114.189, 11.19, 0.12 ) }
    dend_38 { pt3dadd( -28.0149, -114.472, 11.3374, 0.24 ) }
    dend_38 { pt3dadd( -22.7512, -125.23, 12.8571, 0.24 ) }
    dend_38 { pt3dadd( -16.9078, -135.691, 14.4414, 0.24 ) }
    dend_38 { pt3dadd( -11.4012, -146.305, 16.1606, 0.24 ) }
    dend_38 { pt3dadd( -5.30765, -156.711, 17.0094, 0.24 ) }
    dend_38 { pt3dadd( 0.439406, -166.975, 19.8228, 0.24 ) }
    dend_38 { pt3dadd( 8.13605, -176.307, 20.7719, 0.24 ) }
    dend_38 { pt3dadd( 17.3702, -184.246, 21.1925, 0.24 ) }
    dend_38 { pt3dadd( 25.3088, -193.213, 19.1434, 0.24 ) }
    dend_38 { pt3dadd( 33.5308, -202.109, 18.1845, 0.24 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -37.7662, -99.4753, 11.1487, 0.12 ) }
    dend_35 { pt3dadd( -38.3814, -99.6124, 10.8064, 0.12 ) }
    dend_35 { pt3dadd( -38.7254, -99.7404, 10.6358, 0.12 ) }
    dend_35 { pt3dadd( -39.4774, -100.072, 10.1625, 0.12 ) }
    dend_35 { pt3dadd( -39.7949, -100.202, 9.94732, 0.12 ) }
    dend_35 { pt3dadd( -40.5258, -100.499, 9.45209, 0.12 ) }
    dend_35 { pt3dadd( -42.0886, -101.136, 8.39312, 0.12 ) }
    dend_35 { pt3dadd( -42.4405, -101.313, 8.15404, 0.12 ) }
    dend_35 { pt3dadd( -43.3741, -101.848, 7.53757, 0.84 ) }
    dend_35 { pt3dadd( -44.1104, -102.325, 7.09805, 0.84 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -44.1104, -102.325, 7.09805, 0.12 ) }
    dend_37 { pt3dadd( -44.3892, -102.248, 7.11227, 0.12 ) }
    dend_37 { pt3dadd( -44.8287, -102.159, 7.13188, 0.12 ) }
    dend_37 { pt3dadd( -45.4034, -102.069, 7.15494, 0.12 ) }
    dend_37 { pt3dadd( -46.1536, -101.98, 7.18188, 0.12 ) }
    dend_37 { pt3dadd( -46.7632, -101.924, 7.20192, 0.12 ) }
    dend_37 { pt3dadd( -47.8409, -101.821, 7.28952, 0.24 ) }
    dend_37 { pt3dadd( -48.1889, -101.801, 7.32931, 0.12 ) }
    dend_37 { pt3dadd( -48.5304, -101.796, 7.38035, 0.12 ) }
    dend_37 { pt3dadd( -49.0006, -101.784, 7.47011, 0.12 ) }
    dend_37 { pt3dadd( -49.2078, -101.763, 7.51951, 0.12 ) }
    dend_37 { pt3dadd( -50.0438, -101.583, 7.74152, 0.24 ) }
    dend_37 { pt3dadd( -50.4861, -101.45, 7.86346, 0.12 ) }
    dend_37 { pt3dadd( -50.7401, -101.367, 7.94207, 0.12 ) }
    dend_37 { pt3dadd( -51.3563, -101.169, 8.13588, 0.36 ) }
    dend_37 { pt3dadd( -51.8756, -101.02, 8.31591, 0.36 ) }
    dend_37 { pt3dadd( -52.4552, -100.88, 8.5159, 0.36 ) }
    dend_37 { pt3dadd( -52.7177, -100.835, 8.59872, 0.12 ) }
    dend_37 { pt3dadd( -53.4862, -100.738, 8.8479, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_37 { pt3dadd( -53.9995, -100.725, 9.02533, 0.12 ) }
    dend_37 { pt3dadd( -54.6232, -100.807, 9.24691, 1.44 ) }
    dend_37 { pt3dadd( -54.8679, -100.877, 9.33908, 1.92 ) }
    dend_37 { pt3dadd( -55.2238, -101.028, 9.47783, 1.92 ) }
    dend_37 { pt3dadd( -55.5459, -101.221, 9.59859, 1.92 ) }
    dend_37 { pt3dadd( -56.0641, -101.71, 9.71613, 0.12 ) }
    dend_37 { pt3dadd( -56.3118, -102.118, 9.72612, 0.12 ) }
    dend_37 { pt3dadd( -56.4228, -102.492, 9.66837, 0.36 ) }
    dend_37 { pt3dadd( -56.4555, -102.695, 9.63129, 0.12 ) }
    dend_37 { pt3dadd( -56.4588, -103.125, 9.53338, 0.12 ) }
    dend_37 { pt3dadd( -56.3203, -104.049, 9.25429, 1.68 ) }
    dend_37 { pt3dadd( -56.2294, -104.292, 9.11992, 1.92 ) }
    dend_37 { pt3dadd( -56.1493, -104.44, 9.0121, 1.92 ) }
    dend_37 { pt3dadd( -61.4888, -105.671, 10.339, 1.92 ) }
    dend_37 { pt3dadd( -66.9498, -106.605, 11.3965, 1.92 ) }
    dend_37 { pt3dadd( -72.3436, -106.844, 13.0401, 1.92 ) }
    dend_37 { pt3dadd( -77.5447, -107.881, 14.9595, 1.92 ) }
    dend_37 { pt3dadd( -82.4401, -109.55, 17.1923, 1.92 ) }
    dend_37 { pt3dadd( -87.403, -111.91, 18.3697, 1.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -44.1104, -102.325, 7.09805, 0.48 ) }
    dend_36 { pt3dadd( -44.641, -102.756, 6.95883, 0.48 ) }
    dend_36 { pt3dadd( -45.2761, -103.107, 6.79991, 0.48 ) }
    dend_36 { pt3dadd( -46.2374, -103.555, 6.56391, 0.48 ) }
    dend_36 { pt3dadd( -46.9073, -103.847, 6.40131, 0.12 ) }
    dend_36 { pt3dadd( -48.1398, -104.367, 6.0505, 0.12 ) }
    dend_36 { pt3dadd( -49.4121, -104.858, 5.65823, 0.12 ) }
    dend_36 { pt3dadd( -50.8229, -105.319, 5.2372, 0.12 ) }
    dend_36 { pt3dadd( -51.5854, -105.521, 4.99948, 0.12 ) }
    dend_36 { pt3dadd( -52.2818, -105.659, 4.77351, 0.12 ) }
    dend_36 { pt3dadd( -53.2149, -105.819, 4.45121, 0.6 ) }
    dend_36 { pt3dadd( -54.007, -105.941, 4.14212, 0.6 ) }
    dend_36 { pt3dadd( -63.6252, -110.296, 2.44252, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, axon_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, axon_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_5 = new SectionList()
    apic_0 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    apic_4 ModelViewParmSubset_5.append()
    apic_1 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    apic_3 ModelViewParmSubset_5.append()
    apic_2 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_19 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_33 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_4 nseg = 11
    dend_26 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_10 nseg = 23
    dend_5 nseg = 9
    dend_4 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 5
    apic_3 nseg = 5
    apic_2 nseg = 7
    dend_32 nseg = 9
    dend_28 nseg = 9
    dend_21 nseg = 5
    dend_20 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_13 nseg = 9
    dend_9 nseg = 3
    dend_8 nseg = 11
    dend_39 nseg = 13
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_18 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_DBC_8060414f1a_0_0


