// Cell: bAC217_L6_BP_b41e8e0c23_0_0
/*
{
  "id" : "bAC217_L6_BP_b41e8e0c23_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.37774, 2.40803, 0.83", "-3.83359, 9.26387, 3.00164, 0.83", "-7.72558, 12.3559, 3.58861, 1.11", "-10.0204, 14.1778, 3.89394, 0.83", "-12.2498, 15.9324, 4.16751, 0.83", "-13.5698, 16.933, 4.31742, 1.11", "-17.7034, 20.0595, 4.79788, 1.11", "-25.0967, 25.4123, 5.64719, 0.83", "-27.7603, 27.2672, 5.92766, 0.83", "-29.8696, 28.6924, 6.10186, 0.83", "-31.9264, 30.1049, 6.25266, 0.83", "-33.6007, 31.2691, 6.33402, 0.55", "-34.8592, 32.0573, 6.41659, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.57824, -5.68197, 0.55", "4.44223, 6.32187, -6.17773, 0.55", "6.88481, 6.86346, -6.72321, 0.55", "8.30214, 7.00017, -7.44498, 0.83", "10.5453, 7.14567, -8.78573, 0.55", "11.6282, 7.2159, -9.43293, 1.38", "14.2906, 7.38859, -11.0242, 0.55", "15.4246, 7.33011, -11.7835, 0.83", "21.2904, 6.25768, -16.0497, 0.55", "21.8579, 6.11347, -16.519, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.45401, 2.42803, 1.11", "-0.691215, -11.3955, 3.45685, 1.11", "-0.753022, -16.9852, 5.41187, 1.11", "-0.778194, -19.2617, 6.20808, 0.83", "-0.811637, -22.2862, 7.26589, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.78199, -1.26197, 1.11", "0.890392, 10.4457, -1.4174, 1.11", "0.964314, 12.7931, -1.42908, 1.11", "1.05833, 16.6252, -1.31398, 1.38", "1.06669, 16.8387, -1.30343, 1.38", "1.32074, 19.4825, -1.12796, 0.83", "1.68109, 22.2814, -0.784497, 0.83", "2.30281, 25.4499, 0.0044883, 0.83", "2.6642, 26.6554, 0.463812, 0.83", "3.0279, 27.5307, 0.894795, 1.11", "4.11277, 29.6656, 2.02673, 0.55", "5.37361, 31.8978, 3.38026, 0.83", "7.05787, 34.1996, 4.95022, 0.55", "7.92875, 35.1581, 5.67569, 0.83", "9.13445, 36.4588, 6.79339, 0.55", "10.6142, 38.114, 8.2913, 0.55", "12.6584, 40.604, 10.5562, 0.55", "14.9096, 43.4479, 13.0547, 0.55", "16.2978, 45.2966, 14.893, 0.55", "17.9611, 47.6377, 17.4597, 0.55", "18.3015, 48.1083, 18.0389, 0.83", "19.1889, 49.3535, 19.666, 0.55", "19.9468, 50.325, 20.9504, 0.83", "21.6778, 52.9687, 23.9829, 0.55", "22.3586, 53.9311, 24.8853, 0.83", "23.0232, 54.641, 25.5191, 0.55", "23.6985, 55.2522, 26.0229, 0.83", "25.219, 56.3908, 26.9686, 0.83", "27.2521, 57.9366, 28.0241, 0.83", "28.5157, 58.9546, 28.5257, 0.55", "29.4776, 59.8337, 28.9122, 0.55", "32.0039, 62.1051, 29.8856, 0.83", "33.6438, 63.5607, 30.4448, 0.55", "36.1464, 65.6926, 31.1886, 0.55", "38.4519, 67.4809, 31.777, 0.55", "40.5214, 68.9961, 32.247, 0.55", "43.1519, 70.7716, 32.7205, 0.55", "44.7677, 71.644, 32.9598, 0.55", "45.8861, 72.1341, 32.9904, 0.55", "47.3885, 72.5036, 32.9101, 0.55", "49.6542, 72.6808, 32.6149, 0.55", "51.0746, 72.61, 32.3806, 0.55", "53.1352, 72.4525, 32.1807, 0.55", "57.0213, 72.2839, 32.1411, 0.55", "60.0455, 72.2985, 32.3223, 0.55", "63.2283, 72.4737, 32.7025, 0.55", "65.2506, 72.6609, 33.1068, 0.55", "70.4611, 73.6491, 34.4994, 0.55", "73.5154, 74.4874, 35.5564, 0.55", "75.7796, 75.2791, 36.5676, 0.55", "77.1469, 76.0067, 37.2338, 0.55", "78.7304, 77.0815, 37.994, 0.55", "81.4353, 79.1895, 39.024, 0.55", "82.0654, 79.6952, 39.1703, 0.55", "83.8875, 81.047, 39.4691, 0.55", "85.5606, 82.4839, 39.7341, 0.83", "86.4752, 83.2806, 39.8637, 0.55", "87.8491, 84.6451, 39.9995, 0.83", "94.87, 91.962, 42.6487, 0.83", "101.011, 100.318, 44.4133, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-34.8592, 32.0573, 6.41659, 0.55", "-36.0489, 33.283, 5.53594, 0.55", "-37.3425, 34.6158, 4.57832, 0.55", "-38.9037, 36.2243, 3.42268, 0.55", "-40.1928, 37.5524, 2.46843, 0.83", "-41.273, 38.6653, 1.66878, 0.55", "-43.2782, 40.7312, 0.1845, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-34.8592, 32.0573, 6.41659, 0.55", "-36.2283, 32.3396, 6.20518, 0.55", "-37.6918, 32.5855, 6.12404, 0.55", "-39.3531, 32.8594, 6.07251, 0.55", "-41.769, 33.2181, 6.21797, 0.55", "-43.7972, 33.4508, 6.48033, 0.55", "-45.9286, 33.6567, 6.84443, 0.55", "-47.9994, 33.7022, 7.41053, 0.55", "-49.7905, 33.5564, 8.06042, 0.55", "-52.0336, 33.2045, 9.09895, 0.55", "-53.0151, 32.9726, 9.68083, 0.55", "-54.0773, 32.7085, 10.3536, 0.55", "-55.9483, 32.1051, 11.4501, 0.55", "-56.9374, 31.7949, 11.8804, 0.55", "-57.9733, 31.4382, 12.3236, 0.55", "-59.1999, 31.036, 12.7284, 0.55", "-60.5312, 30.6289, 13.1336, 0.55", "-62.4294, 30.0452, 13.6707, 0.55", "-64.954, 29.449, 14.171, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "21.8579, 6.11347, -16.519, 0.55", "27.6617, 6.96721, -17.7857, 0.55", "30.9564, 7.38785, -19.0108, 0.55", "34.1808, 7.67245, -20.3021, 0.55", "36.3682, 7.78014, -21.2059, 0.55", "39.5528, 7.85771, -22.5217, 0.55", "46.1287, 7.94479, -25.4868, 0.55", "53.5624, 8.12544, -29.354, 0.55", "57.1171, 8.05213, -31.5349, 0.55", "59.0078, 7.99818, -32.8409, 0.55", "61.0796, 7.97173, -34.3554, 0.55", "64.758, 7.8148, -37.0706, 0.55", "66.0775, 7.68878, -38.1228, 0.55", "71.674, 7.418, -42.9849, 0.55", "75.6363, 7.37187, -46.7116, 0.55", "77.9236, 7.40857, -48.91, 0.55", "80.2011, 7.42376, -51.1061, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "21.8579, 6.11347, -16.519, 0.83", "23.7951, 7.78887, -16.7528, 0.83", "24.9063, 8.73447, -16.9421, 0.55", "26.5459, 10.1367, -17.3824, 0.83", "27.6458, 11.1038, -17.7215, 0.55", "29.154, 12.4877, -18.1737, 0.83", "30.9564, 14.2061, -18.6514, 0.55", "31.8723, 15.0032, -18.8345, 0.55", "34.0195, 16.5491, -19.0262, 0.83", "35.9908, 17.7482, -18.8727, 0.55", "37.087, 18.4282, -18.6711, 0.83", "38.713, 19.5246, -18.19, 0.55", "41.019, 21.2093, -17.1821, 0.55", "44.2379, 23.3997, -15.5629, 0.55", "47.3106, 25.4112, -13.7603, 0.55", "49.7462, 26.9854, -12.2782, 0.55", "53.7566, 29.606, -9.81582, 0.55", "56.671, 31.6311, -7.96236, 0.55", "58.3995, 33.0331, -6.80525, 0.55", "61.5208, 35.994, -4.71671, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.811637, -22.2862, 7.26589, 0.83", "-1.12325, -25.8173, 7.1279, 0.83", "-1.42684, -29.2576, 6.99347, 0.83", "-1.76581, -33.0987, 6.84337, 0.83", "-1.94281, -35.1045, 6.76499, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.811637, -22.2862, 7.26589, 0.55", "-0.207639, -23.7536, 8.05233, 0.55", "0.39038, -25.5374, 9.13166, 0.55", "0.874312, -27.8475, 10.7228, 0.55", "1.01095, -28.7407, 11.3801, 0.83", "1.23441, -31.0085, 13.3535, 0.55", "1.26652, -32.1719, 14.4187, 0.55", "1.30946, -34.4325, 16.5928, 0.83", "1.27888, -36.1052, 18.3331, 0.55", "1.13283, -37.4739, 19.7812, 0.55", "0.788404, -40.06, 22.4948, 0.55", "0.50941, -42.1207, 24.634, 0.55", "0.323772, -43.7763, 26.362, 0.55", "0.203602, -45.5411, 28.1179, 0.28", "0.204333, -46.281, 28.8059, 0.55", "0.218483, -47.6487, 29.9944, 0.28", "0.425011, -49.8012, 31.4607, 0.55", "-0.387535, -56.8237, 37.1544, 0.55", "-1.17286, -63.3083, 43.4294, 0.55", "-1.167, -68.6957, 50.6647, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-43.2782, 40.7312, 0.1845, 0.55", "-46.97, 40.9054, 1.24089, 0.55", "-48.5642, 40.8589, 1.83219, 0.83", "-50.4801, 40.6676, 2.71286, 0.55", "-51.9718, 40.4922, 3.49675, 0.83", "-55.8712, 40.1584, 5.55367, 0.55", "-57.3493, 40.0505, 6.34751, 0.28", "-59.8528, 39.8502, 7.84707, 0.55", "-63.2086, 39.6013, 9.85086, 0.55", "-65.7347, 39.4373, 11.2783, 0.55", "-69.089, 39.2401, 13.0974, 0.28", "-69.9405, 39.2166, 13.4856, 0.55", "-71.6895, 39.2005, 14.2381, 0.28", "-72.8546, 39.2411, 14.6622, 0.55", "-75.1925, 39.3547, 15.3467, 0.28", "-76.5523, 39.3683, 15.6681, 0.55", "-78.9599, 39.2262, 16.2102, 0.28", "-80.5656, 39.1339, 16.5218, 0.55", "-91.2601, 36.8567, 22.0824, 0.55", "-101.35, 33.228, 28.0585, 0.55", "-111.143, 28.4498, 33.7424, 0.55", "-120.784, 22.4355, 38.4854, 0.55", "-129.412, 16.4651, 44.9146, 0.55", "-138.792, 11.1314, 50.8113, 0.55", "-148.371, 7.65396, 57.6497, 0.55", "-157.891, 3.26865, 64.0526, 0.55", "-167.257, -0.428569, 71.0706, 0.55", "-176.167, -4.43893, 78.5026, 0.55", "-184.03, -9.99652, 86.1452, 0.55", "-192.032, -14.4921, 94.3007, 0.55", "-200.119, -20.0651, 101.696, 0.55", "-206.96, -26.3942, 109.728, 0.55", "-212.013, -32.3045, 119.245, 0.55", "-216.851, -40.2072, 127.384, 0.55", "-220.022, -48.5119, 135.941, 0.55", "-223.858, -56.3114, 144.681, 0.55", "-228.978, -63.1721, 153.525, 0.55", "-236.437, -67.8644, 162.076, 0.55", "-242.92, -73.9965, 170.538, 0.55", "-247.382, -78.5949, 181.006, 0.55", "-253.633, -82.0482, 190.98, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-43.2782, 40.7312, 0.1845, 0.55", "-44.365, 42.0246, -1.86067, 0.55", "-45.0274, 43.4077, -4.01273, 0.55", "-45.5702, 45.003, -6.22122, 0.55", "-45.91, 46.0019, -7.60415, 0.55", "-46.5299, 47.824, -10.1268, 0.83", "-46.9835, 49.1571, -11.9724, 0.55", "-47.3428, 50.9989, -14.6317, 0.83", "-47.325, 52.1466, -16.045, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-64.954, 29.449, 14.171, 0.28", "-65.8059, 27.616, 14.2076, 0.28", "-66.22, 26.8136, 14.1641, 0.28", "-66.7563, 25.6746, 14.0632, 0.55", "-67.1954, 24.6764, 13.9811, 0.28", "-67.8406, 23.1604, 13.8724, 0.55", "-69.6223, 18.7234, 13.6148, 0.28", "-70.2035, 17.1482, 13.4104, 0.55", "-71.0854, 14.7089, 13.022, 0.28", "-71.5922, 13.2398, 12.7305, 0.55", "-71.9433, 12.2231, 12.5081, 0.28", "-72.3428, 11.058, 12.2612, 0.55", "-73.5325, 7.19358, 11.516, 0.28", "-73.9101, 6.01662, 11.2546, 0.55", "-74.5873, 4.18, 10.6947, 0.28", "-75.1599, 2.97949, 10.2524, 0.28", "-75.6833, 2.1653, 9.9357, 0.55", "-77.521, -0.128763, 9.11027, 0.28", "-78.3786, -1.06025, 8.79544, 0.55", "-80.4861, -3.21079, 7.97281, 0.28", "-82.6032, -5.13461, 7.21293, 0.28", "-84.9159, -7.00011, 6.41831, 0.28", "-85.9793, -7.71406, 6.11802, 0.55", "-90.9186, -14.9377, 4.42194, 0.55", "-96.3744, -21.9866, 4.34613, 0.55", "-101.782, -28.9193, 2.94179, 0.55", "-107.396, -35.4427, 0.727823, 0.55", "-113.149, -41.4665, -2.31525, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-64.954, 29.449, 14.171, 0.55", "-65.7851, 29.3677, 14.294, 0.55", "-68.1287, 29.1767, 14.9443, 0.55", "-69.0087, 29.0872, 15.2382, 0.55", "-71.0764, 28.8164, 15.9685, 0.55", "-74.2576, 28.415, 16.934, 0.55", "-75.9122, 28.2551, 17.4003, 0.28", "-78.4857, 27.943, 18.0823, 0.55", "-80.396, 27.6629, 18.5245, 0.55", "-81.2025, 27.5394, 18.7136, 0.28", "-86.0403, 26.7951, 19.8418, 0.55", "-88.2989, 26.3242, 20.2429, 0.28", "-91.3455, 25.6561, 20.6064, 0.28", "-93.9734, 25.1017, 20.761, 0.55", "-104.262, 24.7393, 23.4198, 0.55", "-114.188, 24.2435, 27.2029, 0.55", "-123.506, 22.7834, 32.1244, 0.55", "-132.591, 23.2397, 37.6315, 0.55", "-140.333, 23.5757, 44.9124, 0.55", "-146.549, 24.7063, 53.4667, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "80.2011, 7.42376, -51.1061, 0.55", "86.3866, 9.5936, -55.6837, 0.55", "88.3141, 10.2526, -57.2736, 0.55", "90.7043, 10.9943, -59.2684, 0.55", "95.0233, 12.4098, -63.1369, 0.55", "99.4736, 13.7631, -67.3509, 0.55", "101.599, 14.2404, -69.4299, 0.83", "103.308, 14.575, -71.3177, 0.55", "104.549, 14.7787, -72.901, 0.83", "107.398, 14.9422, -77.1098, 0.55", "109.668, 14.8526, -80.6934, 0.55", "112.278, 14.6668, -84.6816, 0.55", "115.211, 14.5804, -89.1478, 0.55", "117.16, 14.4958, -92.2187, 0.55", "119.354, 14.4274, -95.7639, 0.55", "121.27, 14.5074, -98.9421, 0.55", "122.509, 14.7561, -101.066, 0.55", "124.01, 15.5957, -105.161, 0.55", "124.787, 16.0865, -107.732, 0.55", "125.337, 16.7236, -111.141, 0.55", "125.957, 17.7144, -116.932, 0.55", "126.06, 17.9005, -118.252, 0.28", "127.425, 19.9594, -134.401, 0.28", "127.965, 20.5577, -139.148, 0.83", "130.185, 22.3141, -156.152, 0.83", "131.32, 22.8057, -164.193, 0.83", "131.896, 22.8515, -167.518, 0.55", "132.62, 22.8392, -170.788, 0.55", "134.935, 22.4262, -177.044, 0.55", "137.541, 21.859, -182.643, 0.28", "138.424, 21.3995, -183.174, 0.55", "140.437, 20.2023, -183.532, 0.28", "141.718, 19.4698, -183.526, 0.55", "143.05, 18.6375, -183.413, 0.28", "144.678, 17.6859, -183.167, 0.55", "147.148, 16.5032, -183.005, 0.28", "149.109, 15.5227, -182.964, 0.55", "151.322, 14.655, -183.03, 0.28", "154.325, 13.6, -183.375, 0.55", "157.712, 12.5793, -183.928, 0.55", "160.697, 11.8004, -184.592, 0.28", "164.832, 10.8562, -185.715, 0.55", "172.022, 9.73755, -188.314, 0.55", "175.24, 9.56306, -189.764, 0.55", "176.636, 9.60426, -190.505, 0.83", "179.295, 9.80184, -192.139, 0.55", "181.16, 10.0569, -193.352, 0.83", "186.216, 10.8886, -196.618, 0.55", "189.237, 11.2341, -198.769, 0.28", "190.489, 11.2458, -199.571, 0.55", "193.831, 10.8148, -201.532, 0.28", "194.97, 10.5251, -202.188, 0.55", "197.279, 9.61926, -203.235, 0.28", "199.565, 8.28064, -203.981, 0.55", "204.125, 4.9393, -204.743, 0.28", "206.202, 3.19481, -204.895, 0.55", "209.234, 0.331743, -205.025, 0.28", "213.075, -3.33615, -205.029, 0.55", "215.867, -5.96868, -204.967, 0.55", "220.76, -10.4029, -204.7, 0.28", "222.795, -12.0443, -204.727, 0.55", "226.361, -14.481, -205.096, 0.28", "229.999, -16.5116, -205.604, 0.55", "232.061, -17.2704, -206.07, 0.28", "234.0, -17.6457, -206.531, 0.55", "239.559, -18.1797, -208.195, 0.28", "243.611, -18.279, -209.335, 0.28", "247.208, -18.1104, -210.274, 0.55", "251.206, -17.7447, -211.45, 0.28", "252.232, -17.61, -211.692, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "80.2011, 7.42376, -51.1061, 0.55", "80.1371, 5.82566, -53.7465, 0.55", "79.9033, 4.44481, -55.8267, 0.28", "79.6877, 3.10339, -57.5872, 0.55", "79.4322, 0.232218, -61.3797, 0.28", "79.4092, 0.0699911, -61.6495, 0.55", "79.3242, -0.736153, -63.165, 0.28", "79.155, -1.29794, -64.5615, 0.55", "78.9141, -1.80767, -66.1278, 0.28", "78.5406, -2.45826, -68.3234, 0.55", "77.6003, -4.12674, -73.7693, 0.55", "76.7029, -5.60799, -78.7848, 0.55", "75.9579, -6.78373, -82.7933, 0.55", "75.1754, -7.95181, -86.6819, 0.55", "74.971, -8.26783, -87.6586, 0.28", "74.7746, -8.64111, -88.6467, 0.55", "74.6009, -9.228, -89.9394, 0.28", "74.4809, -10.4078, -92.1246, 0.55", "74.5597, -13.0145, -95.8284, 0.55", "74.6197, -14.5043, -97.6638, 0.28", "74.5668, -15.951, -99.5928, 0.55", "74.2921, -17.8807, -102.363, 0.28", "73.9289, -19.3802, -104.626, 0.55", "73.245, -21.5865, -107.997, 0.28", "72.5626, -23.9266, -111.391, 0.55", "71.506, -27.2878, -116.35, 0.28", "70.885, -29.0621, -118.994, 0.55", "70.2058, -30.8356, -121.75, 0.28", "69.582, -32.3198, -124.31, 0.28", "68.9027, -34.0757, -127.763, 0.55", "68.464, -35.7813, -130.926, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "61.5208, 35.994, -4.71671, 0.55", "64.9205, 36.3875, -3.60119, 0.55", "67.4407, 36.507, -2.98789, 0.55", "73.0009, 36.619, -1.90266, 0.55", "75.5344, 36.5521, -1.61112, 0.55", "78.3076, 36.4943, -1.44396, 0.55", "82.0526, 36.4017, -1.48801, 0.55", "86.0594, 36.0941, -1.85257, 0.55", "88.1928, 35.8373, -2.25709, 0.55", "92.5931, 35.1452, -3.61733, 0.55", "94.6244, 34.8236, -4.30659, 0.55", "99.4087, 33.9521, -6.00506, 0.55", "102.663, 33.2501, -7.09308, 0.55", "105.048, 32.7503, -7.79241, 0.83", "108.872, 31.834, -8.82927, 0.55", "112.624, 30.8105, -9.66122, 0.83", "115.815, 29.8403, -10.2229, 0.55", "118.633, 29.056, -10.6028, 0.55", "120.218, 28.6992, -10.7604, 0.83", "123.897, 27.9324, -10.9549, 0.28", "125.704, 27.6549, -10.9686, 0.28", "127.476, 27.2553, -11.0315, 0.28", "129.387, 26.8688, -11.1227, 0.28", "132.444, 26.2859, -11.3435, 0.28", "133.668, 26.076, -11.4035, 0.55", "136.561, 25.6846, -11.2933, 0.55", "141.748, 25.0087, -10.8365, 0.55", "143.181, 24.8038, -10.6398, 0.55", "144.461, 24.597, -10.4, 0.83", "147.205, 24.2955, -9.69624, 0.55", "149.586, 24.0493, -9.04979, 0.55", "151.833, 23.829, -8.43199, 0.55", "153.583, 23.6142, -7.99087, 0.55", "156.397, 23.0461, -7.35982, 0.55", "159.769, 22.0437, -6.69841, 0.55", "165.12, 19.8252, -5.83176, 0.55", "168.127, 18.155, -5.3978, 0.55", "170.799, 16.2685, -5.01013, 0.28", "171.62, 15.5387, -4.88571, 0.55", "173.503, 13.4294, -4.54171, 0.28", "175.203, 11.0088, -4.13112, 0.55", "176.886, 7.99289, -3.40261, 0.55", "178.004, 6.04459, -2.82755, 0.28", "178.406, 5.36907, -2.58937, 0.55", "179.436, 3.70465, -1.97155, 0.28", "180.822, 1.56575, -1.10972, 0.55", "184.362, -3.50629, 1.11648, 0.55", "186.189, -6.03522, 2.29935, 0.55", "187.879, -8.34247, 3.40717, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "61.5208, 35.994, -4.71671, 0.55", "63.9476, 36.5034, -3.03435, 0.55", "64.7236, 36.6675, -2.5368, 0.55", "67.6278, 37.1524, -0.82074, 0.55", "70.8639, 37.7525, 1.14911, 0.55", "75.0195, 38.503, 3.78033, 0.55", "76.1667, 38.7122, 4.49978, 0.55", "78.2351, 39.0114, 5.76169, 0.55", "80.49, 39.3981, 7.06793, 0.55", "83.0937, 39.93, 8.48016, 0.55", "85.5427, 40.465, 9.82364, 0.55", "86.8735, 40.8247, 10.5066, 0.55", "88.429, 41.2926, 11.3111, 0.55", "90.3427, 41.9305, 12.2784, 0.83", "93.4575, 42.9977, 13.5334, 0.55", "95.526, 43.6302, 14.2546, 0.83", "98.4113, 44.3833, 15.1409, 0.55", "99.3037, 44.5669, 15.3944, 0.55", "102.09, 45.0035, 16.1073, 0.55", "107.106, 45.5017, 17.1504, 0.55", "110.804, 45.6715, 17.8074, 0.55", "113.755, 45.6659, 18.3785, 0.55", "116.794, 45.4965, 19.0418, 0.55", "117.435, 45.444, 19.1824, 0.28", "118.744, 45.2874, 19.4585, 0.83", "124.13, 44.5665, 20.6132, 0.55", "127.892, 44.0727, 21.3521, 0.55", "130.974, 43.7358, 22.0415, 0.55", "132.818, 43.5276, 22.4695, 0.83", "134.266, 43.3837, 22.8114, 0.28", "135.579, 43.2564, 23.11, 0.55", "145.548, 44.5374, 27.1345, 0.55", "156.198, 44.4244, 29.0487, 0.55", "166.647, 45.575, 31.6277, 0.55", "176.381, 44.8315, 36.2962, 0.55", "185.714, 42.4991, 41.2647, 0.55", "195.838, 39.0186, 43.0164, 0.55", "205.811, 34.6909, 42.8477, 0.55", "216.402, 32.4616, 42.2319, 0.55", "226.955, 29.9834, 42.3158, 0.55", "237.709, 28.8002, 41.8467, 0.55", "248.456, 27.9526, 42.8192, 0.55", "258.839, 25.1276, 44.1463, 0.55", "269.295, 24.1355, 46.7563, 0.55", "279.21, 24.529, 51.0791, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.94281, -35.1045, 6.76499, 1.38", "0.57888, -37.6513, 6.4685, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.94281, -35.1045, 6.76499, 0.55", "-3.21429, -36.6599, 6.78733, 0.55", "-4.62179, -38.6569, 6.81232, 0.55", "-5.71625, -39.9769, 6.84461, 0.55", "-6.63777, -41.0799, 6.72518, 0.55", "-8.64665, -43.3632, 6.27136, 0.55", "-10.0549, -44.8871, 5.91339, 0.55", "-11.3069, -46.2534, 5.54676, 0.55", "-14.5223, -49.5767, 4.60836, 0.55", "-18.3853, -53.4226, 3.51249, 0.55", "-21.3762, -56.3345, 2.61104, 0.55", "-23.2853, -58.2473, 2.00739, 0.55", "-25.4763, -60.5438, 1.3213, 0.55", "-28.258, -63.8426, 0.487193, 0.55", "-29.8881, -66.188, 0.0331189, 0.55", "-31.9027, -69.5668, -0.348963, 0.55", "-33.5125, -72.7371, -0.590404, 0.55", "-35.1445, -76.6989, -0.808224, 0.55", "-36.69, -81.3561, -0.949421, 0.55", "-37.5301, -84.9209, -0.970781, 0.55", "-37.8311, -86.6966, -0.867011, 0.55", "-38.2951, -90.8725, -0.398929, 0.55", "-38.6621, -94.7809, 0.139365, 0.55", "-38.8363, -98.7209, 0.967582, 0.55", "-38.96, -100.981, 1.56278, 0.55", "-39.3028, -107.969, 3.65376, 0.55", "-39.3314, -108.484, 3.81651, 0.55", "-39.4494, -111.635, 4.88893, 0.55", "-39.9176, -117.268, 6.93367, 0.55", "-40.0841, -119.152, 7.50819, 0.55", "-40.4121, -122.095, 7.91338, 0.55", "-40.5047, -123.189, 7.82001, 0.55", "-40.6538, -126.893, 6.82717, 0.55", "-40.6166, -129.295, 5.69205, 0.55", "-40.4503, -133.122, 3.12768, 0.55", "-40.0597, -137.807, -0.360665, 0.28", "-39.9444, -138.966, -1.37523, 0.55", "-39.7631, -140.722, -3.06399, 0.28", "-39.738, -140.986, -3.33218, 0.55", "-39.6106, -142.435, -4.67998, 0.28", "-39.6008, -142.927, -5.02757, 0.55", "-39.6096, -145.482, -6.35409, 0.28", "-39.6455, -146.35, -6.795, 0.55", "-39.7809, -148.862, -7.93095, 0.28", "-39.82, -149.653, -8.28569, 0.55", "-39.9774, -152.382, -9.46657, 0.28", "-40.0433, -153.637, -10.016, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.167, -68.6957, 50.6647, 0.55", "-3.39362, -76.3277, 59.4703, 0.55", "-6.29798, -82.7327, 68.9861, 0.55", "-9.29824, -89.9322, 77.9161, 0.55", "-12.5588, -97.1216, 86.7651, 0.55", "-15.3439, -105.811, 94.4088, 0.55", "-17.7194, -114.184, 102.508, 0.55", "-20.2422, -124.488, 108.033, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.167, -68.6957, 50.6647, 0.55", "1.33391, -78.7882, 58.8296, 0.55", "3.35793, -90.3166, 65.0927, 0.55", "3.43909, -101.59, 72.1139, 0.55", "2.27572, -113.305, 78.32, 0.55", "1.67433, -125.068, 84.5096, 0.55", "1.55233, -136.422, 91.408, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-47.325, 52.1466, -16.045, 0.83", "-46.9039, 53.3001, -17.4428, 0.83", "-45.961, 56.1084, -20.5781, 0.55", "-45.5507, 57.3258, -21.8213, 0.83", "-45.1049, 58.633, -23.0555, 0.55", "-44.6431, 59.9899, -24.1207, 0.55", "-44.4037, 60.6761, -24.5627, 0.28", "-44.2725, 61.1416, -24.7344, 0.55", "-43.7799, 62.7091, -24.9682, 0.28", "-43.5517, 63.3795, -25.0343, 0.55", "-42.7849, 65.7188, -25.167, 0.28", "-42.2237, 67.5821, -25.2075, 0.55", "-41.4835, 70.5144, -25.1763, 0.28", "-40.9207, 73.1056, -25.097, 0.28", "-40.6872, 74.5677, -25.0224, 0.55", "-40.5139, 76.3137, -24.9303, 0.28", "-40.4837, 77.1538, -24.8735, 0.55", "-40.5183, 79.1374, -24.8235, 0.28", "-40.6269, 80.4658, -24.8545, 0.28", "-40.7608, 81.7714, -24.9224, 0.28", "-40.8067, 82.4583, -24.9615, 0.55", "-40.8525, 85.218, -25.1865, 0.28", "-40.8045, 88.4725, -25.514, 0.55", "-40.7722, 89.5945, -25.6318, 0.55", "-40.7565, 90.7225, -25.7259, 0.55", "-40.8458, 93.1302, -25.9603, 0.55", "-41.0024, 94.7194, -26.1447, 0.28", "-41.128, 95.3275, -26.2206, 0.55", "-41.5762, 96.987, -26.3899, 0.28", "-42.1223, 98.7571, -26.6345, 0.55", "-43.1304, 101.32, -27.0738, 0.28", "-43.6592, 102.398, -27.2869, 0.28", "-44.5747, 103.908, -27.718, 0.55", "-45.6262, 105.487, -28.2414, 0.28", "-45.8253, 105.738, -28.3341, 0.55", "-46.5623, 106.545, -28.657, 0.28", "-49.1379, 109.151, -29.7037, 0.55", "-52.7981, 112.399, -31.2916, 0.28", "-53.4856, 112.948, -31.6276, 0.55", "-55.3905, 114.371, -32.5802, 0.28", "-56.1938, 114.955, -33.0032, 0.28", "-56.8973, 115.441, -33.4063, 0.55", "-59.0157, 116.585, -34.7414, 0.28", "-60.5409, 117.233, -35.6115, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-47.325, 52.1466, -16.045, 0.55", "-47.426, 53.9547, -16.0027, 0.55", "-47.5282, 55.0089, -15.8888, 0.28", "-47.7766, 55.7448, -15.6572, 0.55", "-48.3472, 57.4346, -15.1252, 0.28", "-48.7479, 58.6216, -14.7515, 0.55", "-49.4867, 60.8098, -14.0627, 0.28", "-50.0348, 61.9588, -13.515, 0.55", "-52.3305, 64.595, -11.3875, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-113.149, -41.4665, -2.31525, 0.55", "-118.734, -50.3455, -2.963, 0.55", "-122.641, -60.085, -3.97041, 0.55", "-125.659, -69.6541, -7.12442, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-113.149, -41.4665, -2.31525, 0.55", "-118.572, -48.7805, -5.02984, 0.55", "-123.077, -56.2718, -8.76182, 0.55", "-127.202, -63.9019, -12.6604, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-146.549, 24.7063, 53.4667, 0.55", "-153.816, 24.8511, 58.3687, 0.55", "-161.496, 26.1034, 62.4158, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-146.549, 24.7063, 53.4667, 0.55", "-157.965, 23.3378, 58.1722, 0.55", "-169.58, 24.0339, 62.5132, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "68.464, -35.7813, -130.926, 0.28", "71.5622, -36.2252, -138.569, 0.28", "71.8605, -36.3269, -139.275, 0.55", "72.364, -36.4985, -140.466, 0.28", "72.788, -36.6431, -141.469, 0.28", "73.3492, -36.8344, -142.797, 0.55", "74.0891, -37.0866, -144.547, 0.55", "75.0196, -38.1298, -145.831, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "68.464, -35.7813, -130.926, 0.55", "68.8161, -36.5434, -133.164, 0.55", "68.8525, -36.841, -134.148, 0.28", "68.8572, -37.3143, -135.85, 0.55", "68.8676, -38.3569, -139.599, 0.28", "68.8747, -39.0795, -142.197, 0.55", "68.8869, -40.3037, -146.598, 0.28", "68.8276, -41.6031, -152.228, 0.28", "68.7329, -42.1544, -154.839, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "187.879, -8.34247, 3.40717, 0.28", "190.45, -9.5032, 6.31386, 0.28", "193.655, -10.8131, 10.4041, 0.28", "195.669, -11.5935, 13.1378, 0.55", "196.864, -11.945, 14.7017, 0.28", "197.498, -12.1304, 15.5493, 0.28", "200.651, -13.0888, 19.6892, 0.55", "201.356, -13.2088, 20.6942, 0.28", "203.002, -13.4528, 23.456, 0.55", "204.422, -13.7354, 25.7955, 0.28", "205.664, -13.9685, 27.6752, 0.55", "207.143, -14.3481, 29.8336, 0.55", "209.565, -15.2487, 32.9758, 0.55", "210.155, -15.4933, 33.7265, 0.55", "212.278, -16.4519, 36.5055, 0.28", "213.109, -16.8777, 37.6181, 0.55", "214.262, -17.4027, 39.0363, 0.28", "215.906, -18.224, 40.9794, 0.55", "218.703, -19.8556, 43.6919, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "187.879, -8.34247, 3.40717, 0.55", "185.783, -8.74229, 3.21941, 0.55", "184.081, -9.06698, 3.06693, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.57888, -37.6513, 6.4685, 0.83", "0.709044, -37.9228, 6.44823, 0.83", "2.21361, -40.3188, 6.41392, 0.83", "3.53134, -42.4185, 6.24525, 0.55", "4.5826, -44.0937, 6.11068, 0.55", "6.8171, -47.6543, 5.82465, 0.83", "9.5274, -51.973, 5.47772, 0.55", "11.0054, -54.2323, 5.34029, 0.83", "13.6211, -57.8214, 5.27962, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.57888, -37.6513, 6.4685, 0.55", "-0.502872, -39.0619, 2.66916, 0.55", "-1.664, -40.576, -1.40897, 0.55", "-3.03473, -42.3634, -6.22323, 0.55", "-4.69923, -44.5339, -12.0693, 0.55", "-5.64378, -45.7656, -15.3867, 0.55", "-5.83352, -46.013, -16.0532, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "1.55233, -136.422, 91.408, 0.55", "2.32972, -143.147, 95.9557, 0.55", "4.08626, -150.269, 99.5523, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "1.55233, -136.422, 91.408, 0.55", "1.32628, -148.69, 98.2026, 0.55", "0.710541, -160.589, 105.577, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.3305, 64.595, -11.3875, 0.28", "-53.1121, 66.2152, -10.0381, 0.28", "-53.3975, 66.8326, -9.46242, 0.55", "-54.2026, 68.6213, -7.76259, 0.28", "-54.6148, 69.5032, -7.00224, 0.55", "-55.7575, 71.8877, -5.01931, 0.28", "-56.9188, 74.3114, -3.00392, 0.55", "-58.8639, 78.1371, 0.380521, 0.28", "-59.2769, 78.9579, 1.10137, 0.55", "-60.178, 80.8624, 2.61876, 0.28", "-60.5222, 81.6465, 3.21095, 0.55", "-65.1175, 87.225, 8.56891, 0.55", "-70.4256, 93.7167, 11.9032, 0.55", "-74.6528, 100.406, 16.2524, 0.55", "-77.6033, 108.021, 20.1864, 0.55", "-81.584, 115.37, 23.6681, 0.55", "-86.3761, 121.502, 28.2117, 0.55", "-90.5379, 126.96, 34.0237, 0.55", "-93.8685, 131.495, 41.0178, 0.55", "-97.1788, 136.526, 47.6866, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.3305, 64.595, -11.3875, 0.55", "-56.6052, 63.2889, -10.5343, 0.55", "-58.8298, 62.5394, -10.1053, 0.28", "-60.4854, 61.9816, -9.78598, 0.55", "-61.8652, 61.5167, -9.51985, 0.28", "-62.8317, 61.1911, -9.33345, 0.55", "-65.4967, 60.2932, -8.81945, 0.28", "-67.2452, 59.5803, -8.70736, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-125.659, -69.6541, -7.12442, 0.55", "-129.488, -79.8066, -5.91137, 0.55", "-133.086, -89.8412, -3.51214, 0.55", "-135.9, -100.385, -2.93546, 0.55", "-139.78, -110.415, -1.03809, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-125.659, -69.6541, -7.12442, 0.55", "-132.1, -78.2027, -15.5186, 0.55", "-138.128, -85.1325, -25.4968, 0.55", "-145.045, -93.4367, -33.7452, 0.55", "-154.643, -99.5971, -41.0634, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-127.202, -63.9019, -12.6604, 0.55", "-133.329, -71.9944, -21.0625, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-127.202, -63.9019, -12.6604, 0.55", "-130.994, -74.4211, -11.0981, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "75.0196, -38.1298, -145.831, 0.28", "77.6765, -40.0165, -148.792, 0.28", "78.9107, -40.8929, -150.167, 0.55", "81.2643, -42.5642, -152.789, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "75.0196, -38.1298, -145.831, 0.55", "74.3289, -38.7243, -147.307, 0.55", "72.9475, -39.9135, -150.26, 0.28", "72.4975, -40.3009, -151.222, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "68.7329, -42.1544, -154.839, 0.28", "68.9335, -42.9233, -162.454, 0.28", "69.0329, -43.304, -166.224, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "68.7329, -42.1544, -154.839, 0.55", "67.125, -41.443, -154.565, 0.55", "62.6413, -39.4591, -153.804, 0.28", "61.5761, -38.9878, -153.623, 0.55", "58.6624, -37.6986, -153.128, 0.28", "56.7843, -36.8676, -152.809, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.6211, -57.8214, 5.27962, 0.83", "13.6583, -58.0959, 5.24891, 0.83", "14.1966, -61.6843, 4.94583, 0.83", "14.3678, -64.3767, 4.88148, 0.83", "14.3486, -66.9774, 5.0779, 0.83", "14.1975, -70.4377, 5.59199, 0.83", "13.9124, -74.425, 6.32581, 0.83", "13.6073, -78.8733, 7.37403, 0.83", "13.3075, -83.1912, 8.58767, 0.83", "12.6035, -88.5023, 9.94932, 0.83", "12.152, -90.9476, 10.4361, 0.83", "11.808, -92.7884, 10.6885, 0.83", "11.0766, -96.3231, 11.098, 0.83", "10.498, -99.4899, 11.2956, 0.83", "9.63944, -106.246, 10.9888, 0.83", "9.22274, -109.948, 10.3514, 0.83", "8.84223, -113.363, 9.52113, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.6211, -57.8214, 5.27962, 0.55", "12.0657, -61.5979, 5.25704, 0.55", "10.8732, -64.3391, 5.4339, 0.55", "10.1338, -66.0899, 5.72249, 0.55", "9.06897, -68.8251, 6.44731, 0.55", "7.05315, -74.2357, 8.2369, 0.55", "5.43864, -78.3293, 10.0233, 0.55", "4.10411, -81.6085, 11.7945, 0.55", "2.64908, -84.9212, 13.801, 0.55", "1.40237, -87.6682, 15.6014, 0.28", "0.31174, -89.9116, 17.3868, 0.55", "-1.8353, -93.9926, 21.1806, 0.55", "-3.31768, -96.4957, 23.7517, 0.55", "-4.16148, -97.8984, 25.1765, 0.55", "-5.22724, -99.5555, 26.7624, 0.83", "-8.38957, -104.472, 31.14, 0.28", "-9.42909, -106.1, 32.5458, 0.55", "-11.205, -109.037, 35.0019, 0.28", "-11.7598, -109.941, 35.8233, 0.55", "-12.942, -112.064, 37.7262, 0.28", "-13.5954, -113.271, 38.7226, 0.55", "-15.8281, -117.213, 40.904, 0.55", "-19.7711, -127.746, 51.1493, 0.55", "-23.0944, -137.761, 62.0861, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.83352, -46.013, -16.0532, 0.55", "-7.79088, -47.4077, -20.007, 0.55", "-8.38666, -47.7422, -21.1324, 0.55", "-9.91155, -48.5848, -23.8747, 0.55", "-13.3262, -50.2764, -29.6746, 0.28", "-13.8505, -50.5114, -30.4932, 0.55", "-16.0713, -51.5831, -33.7917, 0.55", "-19.2406, -53.0623, -37.9195, 0.55", "-20.4683, -53.5771, -39.4618, 0.28", "-21.5745, -53.9317, -40.7368, 0.28", "-23.5636, -54.4956, -42.6072, 0.55", "-25.9669, -55.042, -44.9934, 0.28", "-28.1839, -55.3114, -47.2564, 0.55", "-29.9203, -55.3458, -48.9689, 0.55", "-31.1105, -55.2468, -50.192, 0.55", "-34.5832, -54.7607, -53.9068, 0.55", "-38.2819, -53.9452, -57.7387, 0.55", "-39.8296, -53.5068, -59.2789, 0.28", "-41.2892, -53.1176, -60.7729, 0.55", "-44.2479, -52.5604, -63.7685, 0.28", "-45.2451, -52.4078, -64.765, 0.83", "-47.1533, -52.0997, -66.4828, 0.28", "-48.581, -52.0044, -67.5215, 0.55", "-50.6629, -51.9493, -68.985, 0.28", "-51.5013, -51.916, -69.5388, 0.55", "-53.0792, -51.889, -70.4772, 0.55", "-55.5052, -51.5878, -71.8013, 0.55", "-57.1216, -51.2873, -72.5756, 0.28", "-58.4627, -50.8768, -73.0964, 0.55", "-60.0523, -50.1936, -73.7177, 0.28", "-60.3127, -50.0598, -73.8286, 0.55", "-62.6134, -48.7606, -75.2591, 0.28", "-64.2377, -47.7782, -76.4787, 0.55", "-66.307, -46.3196, -78.3981, 0.83", "-67.9586, -45.0692, -80.1872, 0.28", "-68.3723, -44.7488, -80.6966, 0.55", "-71.4869, -42.3438, -84.8089, 0.28", "-72.014, -41.9328, -85.5921, 0.55", "-73.5429, -40.5817, -88.0234, 0.28", "-73.9365, -40.2341, -88.6546, 0.55", "-74.9719, -39.3308, -90.1877, 0.28", "-75.722, -38.6812, -91.217, 0.55", "-77.4833, -37.2379, -93.2128, 0.28", "-78.5389, -36.4713, -94.3519, 0.55", "-80.8242, -35.0081, -96.6463, 0.28", "-81.5068, -34.6168, -97.3177, 0.55", "-82.586, -34.102, -98.3268, 0.28", "-83.5138, -33.6701, -99.1321, 0.55", "-85.475, -32.806, -100.678, 0.28", "-86.0708, -32.5614, -101.123, 0.55", "-90.5616, -30.6514, -104.206, 0.28", "-92.1793, -29.861, -105.142, 0.55", "-95.1194, -28.3053, -106.619, 0.28", "-96.4568, -27.5492, -107.244, 0.55", "-99.5657, -25.8428, -108.498, 0.28", "-100.716, -25.2703, -108.91, 0.55", "-104.919, -23.5894, -110.175, 0.28", "-106.667, -23.1138, -110.687, 0.55", "-109.154, -22.8565, -111.389, 0.55", "-110.688, -22.7991, -111.784, 0.55", "-113.863, -22.7703, -112.35, 0.28", "-117.023, -22.7774, -112.714, 0.28", "-119.669, -22.7749, -112.942, 0.55", "-122.972, -22.4969, -112.875, 0.28", "-124.644, -22.1619, -112.631, 0.55", "-128.686, -20.7515, -111.673, 0.28", "-130.819, -19.6394, -110.714, 0.55", "-132.219, -18.7211, -109.815, 0.28", "-133.798, -17.6872, -108.454, 0.55", "-135.776, -16.3274, -106.529, 0.28", "-136.528, -15.8523, -105.808, 0.55", "-140.438, -13.7581, -102.516, 0.28", "-141.758, -13.1042, -101.42, 0.55", "-144.893, -11.671, -98.7378, 0.28", "-146.597, -10.9132, -97.2818, 0.55", "-147.999, -10.2928, -96.0877, 0.55", "-149.678, -9.56451, -94.7041, 0.28", "-150.563, -9.19563, -94.1255, 0.55", "-153.544, -7.86236, -92.3614, 0.28", "-155.104, -6.98565, -91.4054, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.83352, -46.013, -16.0532, 0.55", "-5.03528, -46.1897, -16.6503, 0.55", "-4.20799, -46.2556, -17.2295, 0.55", "-3.13655, -46.2505, -17.8994, 0.55", "-2.23704, -46.1651, -18.4086, 0.55", "3.91215, -44.923, -21.3149, 0.55", "5.306, -44.4808, -21.988, 0.55", "7.36477, -43.6751, -23.0235, 0.55", "8.8229, -43.0548, -23.7655, 0.55", "10.2537, -42.3646, -24.4582, 0.28", "12.4815, -41.174, -25.4205, 0.55", "15.8339, -39.296, -26.6778, 0.28", "16.1156, -39.1916, -26.8563, 0.55", "17.6743, -38.9229, -28.4794, 0.28", "18.5388, -38.8373, -29.7459, 0.55", "19.3443, -38.8629, -31.203, 0.55", "20.7504, -39.0624, -33.8391, 0.55", "23.5227, -39.4963, -39.0033, 0.55", "25.4442, -39.8299, -42.4364, 0.55", "26.1383, -39.9575, -43.6027, 0.55", "30.8826, -40.7246, -51.1583, 0.55", "32.254, -40.8966, -53.1492, 0.55", "33.1073, -40.9929, -54.2078, 0.55", "35.3098, -41.2948, -56.4985, 0.55", "40.9071, -42.4024, -61.6724, 0.55", "42.4728, -42.7831, -62.9983, 0.28", "43.4208, -43.0499, -63.6832, 0.55", "44.8437, -43.5152, -64.6691, 0.28", "45.4573, -43.7759, -65.0272, 0.55", "47.4962, -44.8478, -65.5886, 0.28", "48.8875, -46.1693, -65.1126, 0.55", "49.6925, -47.0998, -64.7633, 0.28", "50.3819, -48.1139, -64.3366, 0.55", "50.9481, -49.2091, -63.8901, 0.28", "51.1922, -49.7725, -63.7046, 0.55", "51.7227, -51.2422, -63.207, 0.28", "51.8798, -51.6834, -63.1344, 0.55", "52.8261, -54.2192, -62.8508, 0.28", "53.3532, -55.3997, -62.8426, 0.55", "54.6722, -57.9353, -63.0437, 0.28", "55.2335, -58.8742, -63.1955, 0.55", "57.2583, -61.9671, -63.815, 0.28", "57.7673, -62.7205, -63.9923, 0.55", "59.353, -65.1091, -64.6557, 0.28", "59.6791, -65.6665, -64.7856, 0.55", "60.4919, -67.1384, -65.1358, 0.28", "61.0026, -67.9961, -65.4098, 0.55", "61.5559, -68.8415, -65.7273, 0.55", "62.6558, -70.5278, -66.3491, 0.28", "63.4691, -71.5773, -66.8041, 0.55", "66.1856, -74.2296, -68.2757, 0.28", "67.2815, -75.1006, -68.8866, 0.55", "68.0475, -75.6561, -69.2926, 0.28", "68.835, -76.1663, -69.69, 0.55", "71.2934, -77.6041, -70.8642, 0.28", "73.1501, -78.7157, -71.7062, 0.55", "76.2732, -80.8053, -72.9189, 0.28", "77.2575, -81.4559, -73.2959, 0.55", "79.1329, -82.6498, -73.8688, 0.28", "79.7516, -83.0402, -74.0131, 0.55", "80.7265, -83.6591, -74.0814, 0.28", "81.5739, -84.1798, -74.0723, 0.55", "83.8285, -85.4685, -73.8237, 0.28", "86.4156, -86.8404, -73.4978, 0.28", "87.707, -87.4727, -73.2444, 0.28", "89.0349, -88.0718, -73.0652, 0.55", "90.9868, -88.8586, -72.8115, 0.28", "91.8515, -89.195, -72.6812, 0.83", "94.0312, -90.0788, -72.2683, 0.28", "94.9891, -90.4856, -72.1398, 0.55", "99.2346, -92.4391, -71.76, 0.28", "101.398, -93.4465, -71.7311, 0.28", "102.995, -94.1823, -71.806, 0.55", "103.947, -94.633, -71.9461, 0.55", "106.507, -95.8677, -72.498, 0.28", "108.907, -97.1249, -73.1008, 0.55", "111.085, -98.3324, -73.6498, 0.28", "113.071, -99.4541, -74.2397, 0.55", "114.712, -100.363, -74.7186, 0.28", "116.055, -101.016, -75.046, 0.55", "119.288, -102.417, -75.7027, 0.28", "120.916, -103.124, -75.9748, 0.55", "123.344, -104.188, -76.302, 0.28", "125.33, -105.003, -76.528, 0.55", "130.0, -106.72, -77.064, 0.28", "131.935, -107.323, -77.3984, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.08626, -150.269, 99.5523, 0.55", "4.90582, -161.258, 104.331, 0.55", "6.19435, -173.074, 106.273, 0.55", "7.18943, -184.492, 109.923, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.08626, -150.269, 99.5523, 0.55", "5.73269, -157.319, 104.339, 0.55", "6.36647, -163.403, 110.45, 0.55", "7.12707, -168.062, 117.644, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.710541, -160.589, 105.577, 0.55", "1.61175, -170.816, 110.914, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.710541, -160.589, 105.577, 0.55", "-0.275835, -169.455, 111.212, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.84223, -113.363, 9.52113, 0.83", "9.81126, -117.618, 10.3761, 0.83", "10.7191, -121.196, 11.3887, 0.83", "11.6216, -124.752, 12.3952, 0.83", "12.4786, -128.129, 13.351, 0.83", "13.7994, -133.334, 14.824, 0.83", "15.1106, -138.501, 16.2863, 0.83", "16.131, -141.907, 17.7418, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.84223, -113.363, 9.52113, 0.55", "9.94882, -114.917, 9.38551, 0.55", "10.7634, -116.138, 9.07867, 0.55", "11.311, -117.044, 8.77286, 0.55", "11.7755, -118.113, 8.313, 0.83", "12.2017, -119.333, 7.66323, 0.55", "12.6186, -120.526, 7.02767, 0.83", "12.9809, -121.825, 6.23653, 0.55", "13.178, -122.581, 5.71122, 0.83", "13.6864, -125.034, 3.84792, 0.55", "13.9152, -126.965, 2.29766, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-23.0944, -137.761, 62.0861, 0.55", "-26.7934, -144.961, 66.1982, 0.55", "-31.7545, -151.351, 70.2503, 0.55", "-37.4227, -156.917, 74.5238, 0.55", "-43.9097, -161.464, 78.7829, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-23.0944, -137.761, 62.0861, 0.55", "-26.1293, -146.722, 69.8718, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.131, -141.907, 17.7418, 0.55", "16.297, -143.929, 18.3324, 0.55", "16.5789, -146.506, 19.15, 0.55", "16.8458, -148.94, 19.9086, 0.55", "17.0156, -150.671, 20.4219, 0.55", "17.2841, -153.764, 21.2908, 0.55", "18.1683, -162.463, 23.5132, 0.55", "18.5381, -165.42, 24.1414, 0.55", "18.8061, -167.509, 24.4809, 0.55", "19.1299, -169.902, 24.6799, 0.55", "19.3483, -171.759, 24.6729, 0.55", "19.9832, -176.103, 24.4795, 0.55", "20.3525, -179.403, 24.3299, 0.55", "20.6528, -181.567, 24.2933, 0.55", "21.415, -187.166, 24.4802, 0.55", "21.9058, -190.925, 24.7698, 0.55", "22.5648, -195.761, 25.4108, 0.55", "23.3882, -201.231, 26.553, 0.55", "24.1036, -204.87, 27.536, 0.55", "24.5788, -207.017, 28.173, 0.55", "24.9802, -208.997, 28.7553, 0.55", "25.5291, -211.509, 29.3746, 0.55", "26.7748, -217.58, 30.4622, 0.55", "27.3342, -219.931, 30.7954, 0.55", "27.895, -222.551, 31.15, 0.55", "28.7049, -226.486, 31.6629, 0.55", "29.1888, -229.515, 32.0885, 0.55", "29.4837, -232.398, 32.4593, 0.55", "29.6443, -235.15, 32.8157, 0.55", "29.7565, -237.835, 33.2027, 0.55", "29.8475, -239.747, 33.4592, 0.55", "30.014, -242.878, 33.772, 0.55", "30.1587, -246.65, 33.8668, 0.55", "30.2739, -248.485, 33.7766, 0.55", "30.391, -250.101, 33.5772, 0.55", "30.7469, -253.152, 33.0212, 0.55", "30.9527, -255.088, 32.6162, 0.55", "31.2336, -257.471, 32.205, 0.55", "31.3702, -259.144, 32.0167, 0.55", "31.6502, -263.49, 31.6956, 0.55", "31.7837, -266.738, 31.6855, 0.55", "31.9119, -271.753, 32.0764, 0.55", "32.0663, -274.977, 32.6284, 0.55", "32.2037, -278.358, 33.3172, 0.28", "32.2261, -279.716, 33.6499, 0.28", "32.2675, -283.001, 34.7544, 0.28", "32.2799, -286.027, 36.0147, 0.28", "32.6667, -290.003, 38.0868, 0.28", "34.6891, -298.997, 40.4387, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "16.131, -141.907, 17.7418, 0.55", "17.6051, -142.414, 18.2864, 0.55", "20.5995, -143.711, 19.6368, 0.55", "23.1662, -144.988, 20.9199, 0.28", "25.9056, -146.439, 22.3838, 0.55", "27.5186, -147.353, 23.4961, 0.28", "30.265, -148.986, 25.6973, 0.55", "31.3413, -149.841, 26.975, 0.28", "31.7125, -150.145, 27.5189, 0.28", "32.3527, -150.57, 28.4634, 0.55", "34.9253, -151.943, 31.8825, 0.28", "36.0383, -152.474, 33.2802, 0.55", "39.5524, -154.037, 37.0303, 0.28", "41.5123, -154.806, 38.9007, 0.28", "44.0047, -155.808, 41.0691, 0.55", "47.8185, -157.395, 43.9383, 0.28", "48.3513, -157.608, 44.2662, 0.55", "51.0221, -158.661, 45.6932, 0.28", "51.2709, -158.761, 45.7954, 0.55", "53.45, -159.95, 46.7828, 0.28", "54.472, -160.599, 47.3217, 0.55", "62.8644, -165.37, 51.7999, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-43.9097, -161.464, 78.7829, 0.55", "-48.8754, -165.596, 85.3923, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-43.9097, -161.464, 78.7829, 0.55", "-50.8628, -171.269, 81.7933, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BP_b41e8e0c23_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.37774, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.83359, 9.26387, 3.00164, 0.83 ) }
    dend_43 { pt3dadd( -7.72558, 12.3559, 3.58861, 1.11 ) }
    dend_43 { pt3dadd( -10.0204, 14.1778, 3.89394, 0.83 ) }
    dend_43 { pt3dadd( -12.2498, 15.9324, 4.16751, 0.83 ) }
    dend_43 { pt3dadd( -13.5698, 16.933, 4.31742, 1.11 ) }
    dend_43 { pt3dadd( -17.7034, 20.0595, 4.79788, 1.11 ) }
    dend_43 { pt3dadd( -25.0967, 25.4123, 5.64719, 0.83 ) }
    dend_43 { pt3dadd( -27.7603, 27.2672, 5.92766, 0.83 ) }
    dend_43 { pt3dadd( -29.8696, 28.6924, 6.10186, 0.83 ) }
    dend_43 { pt3dadd( -31.9264, 30.1049, 6.25266, 0.83 ) }
    dend_43 { pt3dadd( -33.6007, 31.2691, 6.33402, 0.55 ) }
    dend_43 { pt3dadd( -34.8592, 32.0573, 6.41659, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.57824, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.44223, 6.32187, -6.17773, 0.55 ) }
    dend_28 { pt3dadd( 6.88481, 6.86346, -6.72321, 0.55 ) }
    dend_28 { pt3dadd( 8.30214, 7.00017, -7.44498, 0.83 ) }
    dend_28 { pt3dadd( 10.5453, 7.14567, -8.78573, 0.55 ) }
    dend_28 { pt3dadd( 11.6282, 7.2159, -9.43293, 1.38 ) }
    dend_28 { pt3dadd( 14.2906, 7.38859, -11.0242, 0.55 ) }
    dend_28 { pt3dadd( 15.4246, 7.33011, -11.7835, 0.83 ) }
    dend_28 { pt3dadd( 21.2904, 6.25768, -16.0497, 0.55 ) }
    dend_28 { pt3dadd( 21.8579, 6.11347, -16.519, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.45401, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.691215, -11.3955, 3.45685, 1.11 ) }
    dend_1 { pt3dadd( -0.753022, -16.9852, 5.41187, 1.11 ) }
    dend_1 { pt3dadd( -0.778194, -19.2617, 6.20808, 0.83 ) }
    dend_1 { pt3dadd( -0.811637, -22.2862, 7.26589, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.78199, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.890392, 10.4457, -1.4174, 1.11 ) }
    dend_0 { pt3dadd( 0.964314, 12.7931, -1.42908, 1.11 ) }
    dend_0 { pt3dadd( 1.05833, 16.6252, -1.31398, 1.38 ) }
    dend_0 { pt3dadd( 1.06669, 16.8387, -1.30343, 1.38 ) }
    dend_0 { pt3dadd( 1.32074, 19.4825, -1.12796, 0.83 ) }
    dend_0 { pt3dadd( 1.68109, 22.2814, -0.784497, 0.83 ) }
    dend_0 { pt3dadd( 2.30281, 25.4499, 0.0044883, 0.83 ) }
    dend_0 { pt3dadd( 2.6642, 26.6554, 0.463812, 0.83 ) }
    dend_0 { pt3dadd( 3.0279, 27.5307, 0.894795, 1.11 ) }
    dend_0 { pt3dadd( 4.11277, 29.6656, 2.02673, 0.55 ) }
    dend_0 { pt3dadd( 5.37361, 31.8978, 3.38026, 0.83 ) }
    dend_0 { pt3dadd( 7.05787, 34.1996, 4.95022, 0.55 ) }
    dend_0 { pt3dadd( 7.92875, 35.1581, 5.67569, 0.83 ) }
    dend_0 { pt3dadd( 9.13445, 36.4588, 6.79339, 0.55 ) }
    dend_0 { pt3dadd( 10.6142, 38.114, 8.2913, 0.55 ) }
    dend_0 { pt3dadd( 12.6584, 40.604, 10.5562, 0.55 ) }
    dend_0 { pt3dadd( 14.9096, 43.4479, 13.0547, 0.55 ) }
    dend_0 { pt3dadd( 16.2978, 45.2966, 14.893, 0.55 ) }
    dend_0 { pt3dadd( 17.9611, 47.6377, 17.4597, 0.55 ) }
    dend_0 { pt3dadd( 18.3015, 48.1083, 18.0389, 0.83 ) }
    dend_0 { pt3dadd( 19.1889, 49.3535, 19.666, 0.55 ) }
    dend_0 { pt3dadd( 19.9468, 50.325, 20.9504, 0.83 ) }
    dend_0 { pt3dadd( 21.6778, 52.9687, 23.9829, 0.55 ) }
    dend_0 { pt3dadd( 22.3586, 53.9311, 24.8853, 0.83 ) }
    dend_0 { pt3dadd( 23.0232, 54.641, 25.5191, 0.55 ) }
    dend_0 { pt3dadd( 23.6985, 55.2522, 26.0229, 0.83 ) }
    dend_0 { pt3dadd( 25.219, 56.3908, 26.9686, 0.83 ) }
    dend_0 { pt3dadd( 27.2521, 57.9366, 28.0241, 0.83 ) }
    dend_0 { pt3dadd( 28.5157, 58.9546, 28.5257, 0.55 ) }
    dend_0 { pt3dadd( 29.4776, 59.8337, 28.9122, 0.55 ) }
    dend_0 { pt3dadd( 32.0039, 62.1051, 29.8856, 0.83 ) }
    dend_0 { pt3dadd( 33.6438, 63.5607, 30.4448, 0.55 ) }
    dend_0 { pt3dadd( 36.1464, 65.6926, 31.1886, 0.55 ) }
    dend_0 { pt3dadd( 38.4519, 67.4809, 31.777, 0.55 ) }
    dend_0 { pt3dadd( 40.5214, 68.9961, 32.247, 0.55 ) }
    dend_0 { pt3dadd( 43.1519, 70.7716, 32.7205, 0.55 ) }
    dend_0 { pt3dadd( 44.7677, 71.644, 32.9598, 0.55 ) }
    dend_0 { pt3dadd( 45.8861, 72.1341, 32.9904, 0.55 ) }
    dend_0 { pt3dadd( 47.3885, 72.5036, 32.9101, 0.55 ) }
    dend_0 { pt3dadd( 49.6542, 72.6808, 32.6149, 0.55 ) }
    dend_0 { pt3dadd( 51.0746, 72.61, 32.3806, 0.55 ) }
    dend_0 { pt3dadd( 53.1352, 72.4525, 32.1807, 0.55 ) }
    dend_0 { pt3dadd( 57.0213, 72.2839, 32.1411, 0.55 ) }
    dend_0 { pt3dadd( 60.0455, 72.2985, 32.3223, 0.55 ) }
    dend_0 { pt3dadd( 63.2283, 72.4737, 32.7025, 0.55 ) }
    dend_0 { pt3dadd( 65.2506, 72.6609, 33.1068, 0.55 ) }
    dend_0 { pt3dadd( 70.4611, 73.6491, 34.4994, 0.55 ) }
    dend_0 { pt3dadd( 73.5154, 74.4874, 35.5564, 0.55 ) }
    dend_0 { pt3dadd( 75.7796, 75.2791, 36.5676, 0.55 ) }
    dend_0 { pt3dadd( 77.1469, 76.0067, 37.2338, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 78.7304, 77.0815, 37.994, 0.55 ) }
    dend_0 { pt3dadd( 81.4353, 79.1895, 39.024, 0.55 ) }
    dend_0 { pt3dadd( 82.0654, 79.6952, 39.1703, 0.55 ) }
    dend_0 { pt3dadd( 83.8875, 81.047, 39.4691, 0.55 ) }
    dend_0 { pt3dadd( 85.5606, 82.4839, 39.7341, 0.83 ) }
    dend_0 { pt3dadd( 86.4752, 83.2806, 39.8637, 0.55 ) }
    dend_0 { pt3dadd( 87.8491, 84.6451, 39.9995, 0.83 ) }
    dend_0 { pt3dadd( 94.87, 91.962, 42.6487, 0.83 ) }
    dend_0 { pt3dadd( 101.011, 100.318, 44.4133, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -34.8592, 32.0573, 6.41659, 0.55 ) }
    dend_55 { pt3dadd( -36.0489, 33.283, 5.53594, 0.55 ) }
    dend_55 { pt3dadd( -37.3425, 34.6158, 4.57832, 0.55 ) }
    dend_55 { pt3dadd( -38.9037, 36.2243, 3.42268, 0.55 ) }
    dend_55 { pt3dadd( -40.1928, 37.5524, 2.46843, 0.83 ) }
    dend_55 { pt3dadd( -41.273, 38.6653, 1.66878, 0.55 ) }
    dend_55 { pt3dadd( -43.2782, 40.7312, 0.1845, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -34.8592, 32.0573, 6.41659, 0.55 ) }
    dend_44 { pt3dadd( -36.2283, 32.3396, 6.20518, 0.55 ) }
    dend_44 { pt3dadd( -37.6918, 32.5855, 6.12404, 0.55 ) }
    dend_44 { pt3dadd( -39.3531, 32.8594, 6.07251, 0.55 ) }
    dend_44 { pt3dadd( -41.769, 33.2181, 6.21797, 0.55 ) }
    dend_44 { pt3dadd( -43.7972, 33.4508, 6.48033, 0.55 ) }
    dend_44 { pt3dadd( -45.9286, 33.6567, 6.84443, 0.55 ) }
    dend_44 { pt3dadd( -47.9994, 33.7022, 7.41053, 0.55 ) }
    dend_44 { pt3dadd( -49.7905, 33.5564, 8.06042, 0.55 ) }
    dend_44 { pt3dadd( -52.0336, 33.2045, 9.09895, 0.55 ) }
    dend_44 { pt3dadd( -53.0151, 32.9726, 9.68083, 0.55 ) }
    dend_44 { pt3dadd( -54.0773, 32.7085, 10.3536, 0.55 ) }
    dend_44 { pt3dadd( -55.9483, 32.1051, 11.4501, 0.55 ) }
    dend_44 { pt3dadd( -56.9374, 31.7949, 11.8804, 0.55 ) }
    dend_44 { pt3dadd( -57.9733, 31.4382, 12.3236, 0.55 ) }
    dend_44 { pt3dadd( -59.1999, 31.036, 12.7284, 0.55 ) }
    dend_44 { pt3dadd( -60.5312, 30.6289, 13.1336, 0.55 ) }
    dend_44 { pt3dadd( -62.4294, 30.0452, 13.6707, 0.55 ) }
    dend_44 { pt3dadd( -64.954, 29.449, 14.171, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 21.8579, 6.11347, -16.519, 0.55 ) }
    dend_34 { pt3dadd( 27.6617, 6.96721, -17.7857, 0.55 ) }
    dend_34 { pt3dadd( 30.9564, 7.38785, -19.0108, 0.55 ) }
    dend_34 { pt3dadd( 34.1808, 7.67245, -20.3021, 0.55 ) }
    dend_34 { pt3dadd( 36.3682, 7.78014, -21.2059, 0.55 ) }
    dend_34 { pt3dadd( 39.5528, 7.85771, -22.5217, 0.55 ) }
    dend_34 { pt3dadd( 46.1287, 7.94479, -25.4868, 0.55 ) }
    dend_34 { pt3dadd( 53.5624, 8.12544, -29.354, 0.55 ) }
    dend_34 { pt3dadd( 57.1171, 8.05213, -31.5349, 0.55 ) }
    dend_34 { pt3dadd( 59.0078, 7.99818, -32.8409, 0.55 ) }
    dend_34 { pt3dadd( 61.0796, 7.97173, -34.3554, 0.55 ) }
    dend_34 { pt3dadd( 64.758, 7.8148, -37.0706, 0.55 ) }
    dend_34 { pt3dadd( 66.0775, 7.68878, -38.1228, 0.55 ) }
    dend_34 { pt3dadd( 71.674, 7.418, -42.9849, 0.55 ) }
    dend_34 { pt3dadd( 75.6363, 7.37187, -46.7116, 0.55 ) }
    dend_34 { pt3dadd( 77.9236, 7.40857, -48.91, 0.55 ) }
    dend_34 { pt3dadd( 80.2011, 7.42376, -51.1061, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 21.8579, 6.11347, -16.519, 0.83 ) }
    dend_29 { pt3dadd( 23.7951, 7.78887, -16.7528, 0.83 ) }
    dend_29 { pt3dadd( 24.9063, 8.73447, -16.9421, 0.55 ) }
    dend_29 { pt3dadd( 26.5459, 10.1367, -17.3824, 0.83 ) }
    dend_29 { pt3dadd( 27.6458, 11.1038, -17.7215, 0.55 ) }
    dend_29 { pt3dadd( 29.154, 12.4877, -18.1737, 0.83 ) }
    dend_29 { pt3dadd( 30.9564, 14.2061, -18.6514, 0.55 ) }
    dend_29 { pt3dadd( 31.8723, 15.0032, -18.8345, 0.55 ) }
    dend_29 { pt3dadd( 34.0195, 16.5491, -19.0262, 0.83 ) }
    dend_29 { pt3dadd( 35.9908, 17.7482, -18.8727, 0.55 ) }
    dend_29 { pt3dadd( 37.087, 18.4282, -18.6711, 0.83 ) }
    dend_29 { pt3dadd( 38.713, 19.5246, -18.19, 0.55 ) }
    dend_29 { pt3dadd( 41.019, 21.2093, -17.1821, 0.55 ) }
    dend_29 { pt3dadd( 44.2379, 23.3997, -15.5629, 0.55 ) }
    dend_29 { pt3dadd( 47.3106, 25.4112, -13.7603, 0.55 ) }
    dend_29 { pt3dadd( 49.7462, 26.9854, -12.2782, 0.55 ) }
    dend_29 { pt3dadd( 53.7566, 29.606, -9.81582, 0.55 ) }
    dend_29 { pt3dadd( 56.671, 31.6311, -7.96236, 0.55 ) }
    dend_29 { pt3dadd( 58.3995, 33.0331, -6.80525, 0.55 ) }
    dend_29 { pt3dadd( 61.5208, 35.994, -4.71671, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.811637, -22.2862, 7.26589, 0.83 ) }
    dend_11 { pt3dadd( -1.12325, -25.8173, 7.1279, 0.83 ) }
    dend_11 { pt3dadd( -1.42684, -29.2576, 6.99347, 0.83 ) }
    dend_11 { pt3dadd( -1.76581, -33.0987, 6.84337, 0.83 ) }
    dend_11 { pt3dadd( -1.94281, -35.1045, 6.76499, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.811637, -22.2862, 7.26589, 0.55 ) }
    dend_2 { pt3dadd( -0.207639, -23.7536, 8.05233, 0.55 ) }
    dend_2 { pt3dadd( 0.39038, -25.5374, 9.13166, 0.55 ) }
    dend_2 { pt3dadd( 0.874312, -27.8475, 10.7228, 0.55 ) }
    dend_2 { pt3dadd( 1.01095, -28.7407, 11.3801, 0.83 ) }
    dend_2 { pt3dadd( 1.23441, -31.0085, 13.3535, 0.55 ) }
    dend_2 { pt3dadd( 1.26652, -32.1719, 14.4187, 0.55 ) }
    dend_2 { pt3dadd( 1.30946, -34.4325, 16.5928, 0.83 ) }
    dend_2 { pt3dadd( 1.27888, -36.1052, 18.3331, 0.55 ) }
    dend_2 { pt3dadd( 1.13283, -37.4739, 19.7812, 0.55 ) }
    dend_2 { pt3dadd( 0.788404, -40.06, 22.4948, 0.55 ) }
    dend_2 { pt3dadd( 0.50941, -42.1207, 24.634, 0.55 ) }
    dend_2 { pt3dadd( 0.323772, -43.7763, 26.362, 0.55 ) }
    dend_2 { pt3dadd( 0.203602, -45.5411, 28.1179, 0.28 ) }
    dend_2 { pt3dadd( 0.204333, -46.281, 28.8059, 0.55 ) }
    dend_2 { pt3dadd( 0.218483, -47.6487, 29.9944, 0.28 ) }
    dend_2 { pt3dadd( 0.425011, -49.8012, 31.4607, 0.55 ) }
    dend_2 { pt3dadd( -0.387535, -56.8237, 37.1544, 0.55 ) }
    dend_2 { pt3dadd( -1.17286, -63.3083, 43.4294, 0.55 ) }
    dend_2 { pt3dadd( -1.167, -68.6957, 50.6647, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -43.2782, 40.7312, 0.1845, 0.55 ) }
    dend_61 { pt3dadd( -46.97, 40.9054, 1.24089, 0.55 ) }
    dend_61 { pt3dadd( -48.5642, 40.8589, 1.83219, 0.83 ) }
    dend_61 { pt3dadd( -50.4801, 40.6676, 2.71286, 0.55 ) }
    dend_61 { pt3dadd( -51.9718, 40.4922, 3.49675, 0.83 ) }
    dend_61 { pt3dadd( -55.8712, 40.1584, 5.55367, 0.55 ) }
    dend_61 { pt3dadd( -57.3493, 40.0505, 6.34751, 0.28 ) }
    dend_61 { pt3dadd( -59.8528, 39.8502, 7.84707, 0.55 ) }
    dend_61 { pt3dadd( -63.2086, 39.6013, 9.85086, 0.55 ) }
    dend_61 { pt3dadd( -65.7347, 39.4373, 11.2783, 0.55 ) }
    dend_61 { pt3dadd( -69.089, 39.2401, 13.0974, 0.28 ) }
    dend_61 { pt3dadd( -69.9405, 39.2166, 13.4856, 0.55 ) }
    dend_61 { pt3dadd( -71.6895, 39.2005, 14.2381, 0.28 ) }
    dend_61 { pt3dadd( -72.8546, 39.2411, 14.6622, 0.55 ) }
    dend_61 { pt3dadd( -75.1925, 39.3547, 15.3467, 0.28 ) }
    dend_61 { pt3dadd( -76.5523, 39.3683, 15.6681, 0.55 ) }
    dend_61 { pt3dadd( -78.9599, 39.2262, 16.2102, 0.28 ) }
    dend_61 { pt3dadd( -80.5656, 39.1339, 16.5218, 0.55 ) }
    dend_61 { pt3dadd( -91.2601, 36.8567, 22.0824, 0.55 ) }
    dend_61 { pt3dadd( -101.35, 33.228, 28.0585, 0.55 ) }
    dend_61 { pt3dadd( -111.143, 28.4498, 33.7424, 0.55 ) }
    dend_61 { pt3dadd( -120.784, 22.4355, 38.4854, 0.55 ) }
    dend_61 { pt3dadd( -129.412, 16.4651, 44.9146, 0.55 ) }
    dend_61 { pt3dadd( -138.792, 11.1314, 50.8113, 0.55 ) }
    dend_61 { pt3dadd( -148.371, 7.65396, 57.6497, 0.55 ) }
    dend_61 { pt3dadd( -157.891, 3.26865, 64.0526, 0.55 ) }
    dend_61 { pt3dadd( -167.257, -0.428569, 71.0706, 0.55 ) }
    dend_61 { pt3dadd( -176.167, -4.43893, 78.5026, 0.55 ) }
    dend_61 { pt3dadd( -184.03, -9.99652, 86.1452, 0.55 ) }
    dend_61 { pt3dadd( -192.032, -14.4921, 94.3007, 0.55 ) }
    dend_61 { pt3dadd( -200.119, -20.0651, 101.696, 0.55 ) }
    dend_61 { pt3dadd( -206.96, -26.3942, 109.728, 0.55 ) }
    dend_61 { pt3dadd( -212.013, -32.3045, 119.245, 0.55 ) }
    dend_61 { pt3dadd( -216.851, -40.2072, 127.384, 0.55 ) }
    dend_61 { pt3dadd( -220.022, -48.5119, 135.941, 0.55 ) }
    dend_61 { pt3dadd( -223.858, -56.3114, 144.681, 0.55 ) }
    dend_61 { pt3dadd( -228.978, -63.1721, 153.525, 0.55 ) }
    dend_61 { pt3dadd( -236.437, -67.8644, 162.076, 0.55 ) }
    dend_61 { pt3dadd( -242.92, -73.9965, 170.538, 0.55 ) }
    dend_61 { pt3dadd( -247.382, -78.5949, 181.006, 0.55 ) }
    dend_61 { pt3dadd( -253.633, -82.0482, 190.98, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -43.2782, 40.7312, 0.1845, 0.55 ) }
    dend_56 { pt3dadd( -44.365, 42.0246, -1.86067, 0.55 ) }
    dend_56 { pt3dadd( -45.0274, 43.4077, -4.01273, 0.55 ) }
    dend_56 { pt3dadd( -45.5702, 45.003, -6.22122, 0.55 ) }
    dend_56 { pt3dadd( -45.91, 46.0019, -7.60415, 0.55 ) }
    dend_56 { pt3dadd( -46.5299, 47.824, -10.1268, 0.83 ) }
    dend_56 { pt3dadd( -46.9835, 49.1571, -11.9724, 0.55 ) }
    dend_56 { pt3dadd( -47.3428, 50.9989, -14.6317, 0.83 ) }
    dend_56 { pt3dadd( -47.325, 52.1466, -16.045, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -64.954, 29.449, 14.171, 0.28 ) }
    dend_48 { pt3dadd( -65.8059, 27.616, 14.2076, 0.28 ) }
    dend_48 { pt3dadd( -66.22, 26.8136, 14.1641, 0.28 ) }
    dend_48 { pt3dadd( -66.7563, 25.6746, 14.0632, 0.55 ) }
    dend_48 { pt3dadd( -67.1954, 24.6764, 13.9811, 0.28 ) }
    dend_48 { pt3dadd( -67.8406, 23.1604, 13.8724, 0.55 ) }
    dend_48 { pt3dadd( -69.6223, 18.7234, 13.6148, 0.28 ) }
    dend_48 { pt3dadd( -70.2035, 17.1482, 13.4104, 0.55 ) }
    dend_48 { pt3dadd( -71.0854, 14.7089, 13.022, 0.28 ) }
    dend_48 { pt3dadd( -71.5922, 13.2398, 12.7305, 0.55 ) }
    dend_48 { pt3dadd( -71.9433, 12.2231, 12.5081, 0.28 ) }
    dend_48 { pt3dadd( -72.3428, 11.058, 12.2612, 0.55 ) }
    dend_48 { pt3dadd( -73.5325, 7.19358, 11.516, 0.28 ) }
    dend_48 { pt3dadd( -73.9101, 6.01662, 11.2546, 0.55 ) }
    dend_48 { pt3dadd( -74.5873, 4.18, 10.6947, 0.28 ) }
    dend_48 { pt3dadd( -75.1599, 2.97949, 10.2524, 0.28 ) }
    dend_48 { pt3dadd( -75.6833, 2.1653, 9.9357, 0.55 ) }
    dend_48 { pt3dadd( -77.521, -0.128763, 9.11027, 0.28 ) }
    dend_48 { pt3dadd( -78.3786, -1.06025, 8.79544, 0.55 ) }
    dend_48 { pt3dadd( -80.4861, -3.21079, 7.97281, 0.28 ) }
    dend_48 { pt3dadd( -82.6032, -5.13461, 7.21293, 0.28 ) }
    dend_48 { pt3dadd( -84.9159, -7.00011, 6.41831, 0.28 ) }
    dend_48 { pt3dadd( -85.9793, -7.71406, 6.11802, 0.55 ) }
    dend_48 { pt3dadd( -90.9186, -14.9377, 4.42194, 0.55 ) }
    dend_48 { pt3dadd( -96.3744, -21.9866, 4.34613, 0.55 ) }
    dend_48 { pt3dadd( -101.782, -28.9193, 2.94179, 0.55 ) }
    dend_48 { pt3dadd( -107.396, -35.4427, 0.727823, 0.55 ) }
    dend_48 { pt3dadd( -113.149, -41.4665, -2.31525, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -64.954, 29.449, 14.171, 0.55 ) }
    dend_45 { pt3dadd( -65.7851, 29.3677, 14.294, 0.55 ) }
    dend_45 { pt3dadd( -68.1287, 29.1767, 14.9443, 0.55 ) }
    dend_45 { pt3dadd( -69.0087, 29.0872, 15.2382, 0.55 ) }
    dend_45 { pt3dadd( -71.0764, 28.8164, 15.9685, 0.55 ) }
    dend_45 { pt3dadd( -74.2576, 28.415, 16.934, 0.55 ) }
    dend_45 { pt3dadd( -75.9122, 28.2551, 17.4003, 0.28 ) }
    dend_45 { pt3dadd( -78.4857, 27.943, 18.0823, 0.55 ) }
    dend_45 { pt3dadd( -80.396, 27.6629, 18.5245, 0.55 ) }
    dend_45 { pt3dadd( -81.2025, 27.5394, 18.7136, 0.28 ) }
    dend_45 { pt3dadd( -86.0403, 26.7951, 19.8418, 0.55 ) }
    dend_45 { pt3dadd( -88.2989, 26.3242, 20.2429, 0.28 ) }
    dend_45 { pt3dadd( -91.3455, 25.6561, 20.6064, 0.28 ) }
    dend_45 { pt3dadd( -93.9734, 25.1017, 20.761, 0.55 ) }
    dend_45 { pt3dadd( -104.262, 24.7393, 23.4198, 0.55 ) }
    dend_45 { pt3dadd( -114.188, 24.2435, 27.2029, 0.55 ) }
    dend_45 { pt3dadd( -123.506, 22.7834, 32.1244, 0.55 ) }
    dend_45 { pt3dadd( -132.591, 23.2397, 37.6315, 0.55 ) }
    dend_45 { pt3dadd( -140.333, 23.5757, 44.9124, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -146.549, 24.7063, 53.4667, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 80.2011, 7.42376, -51.1061, 0.55 ) }
    dend_42 { pt3dadd( 86.3866, 9.5936, -55.6837, 0.55 ) }
    dend_42 { pt3dadd( 88.3141, 10.2526, -57.2736, 0.55 ) }
    dend_42 { pt3dadd( 90.7043, 10.9943, -59.2684, 0.55 ) }
    dend_42 { pt3dadd( 95.0233, 12.4098, -63.1369, 0.55 ) }
    dend_42 { pt3dadd( 99.4736, 13.7631, -67.3509, 0.55 ) }
    dend_42 { pt3dadd( 101.599, 14.2404, -69.4299, 0.83 ) }
    dend_42 { pt3dadd( 103.308, 14.575, -71.3177, 0.55 ) }
    dend_42 { pt3dadd( 104.549, 14.7787, -72.901, 0.83 ) }
    dend_42 { pt3dadd( 107.398, 14.9422, -77.1098, 0.55 ) }
    dend_42 { pt3dadd( 109.668, 14.8526, -80.6934, 0.55 ) }
    dend_42 { pt3dadd( 112.278, 14.6668, -84.6816, 0.55 ) }
    dend_42 { pt3dadd( 115.211, 14.5804, -89.1478, 0.55 ) }
    dend_42 { pt3dadd( 117.16, 14.4958, -92.2187, 0.55 ) }
    dend_42 { pt3dadd( 119.354, 14.4274, -95.7639, 0.55 ) }
    dend_42 { pt3dadd( 121.27, 14.5074, -98.9421, 0.55 ) }
    dend_42 { pt3dadd( 122.509, 14.7561, -101.066, 0.55 ) }
    dend_42 { pt3dadd( 124.01, 15.5957, -105.161, 0.55 ) }
    dend_42 { pt3dadd( 124.787, 16.0865, -107.732, 0.55 ) }
    dend_42 { pt3dadd( 125.337, 16.7236, -111.141, 0.55 ) }
    dend_42 { pt3dadd( 125.957, 17.7144, -116.932, 0.55 ) }
    dend_42 { pt3dadd( 126.06, 17.9005, -118.252, 0.28 ) }
    dend_42 { pt3dadd( 127.425, 19.9594, -134.401, 0.28 ) }
    dend_42 { pt3dadd( 127.965, 20.5577, -139.148, 0.83 ) }
    dend_42 { pt3dadd( 130.185, 22.3141, -156.152, 0.83 ) }
    dend_42 { pt3dadd( 131.32, 22.8057, -164.193, 0.83 ) }
    dend_42 { pt3dadd( 131.896, 22.8515, -167.518, 0.55 ) }
    dend_42 { pt3dadd( 132.62, 22.8392, -170.788, 0.55 ) }
    dend_42 { pt3dadd( 134.935, 22.4262, -177.044, 0.55 ) }
    dend_42 { pt3dadd( 137.541, 21.859, -182.643, 0.28 ) }
    dend_42 { pt3dadd( 138.424, 21.3995, -183.174, 0.55 ) }
    dend_42 { pt3dadd( 140.437, 20.2023, -183.532, 0.28 ) }
    dend_42 { pt3dadd( 141.718, 19.4698, -183.526, 0.55 ) }
    dend_42 { pt3dadd( 143.05, 18.6375, -183.413, 0.28 ) }
    dend_42 { pt3dadd( 144.678, 17.6859, -183.167, 0.55 ) }
    dend_42 { pt3dadd( 147.148, 16.5032, -183.005, 0.28 ) }
    dend_42 { pt3dadd( 149.109, 15.5227, -182.964, 0.55 ) }
    dend_42 { pt3dadd( 151.322, 14.655, -183.03, 0.28 ) }
    dend_42 { pt3dadd( 154.325, 13.6, -183.375, 0.55 ) }
    dend_42 { pt3dadd( 157.712, 12.5793, -183.928, 0.55 ) }
    dend_42 { pt3dadd( 160.697, 11.8004, -184.592, 0.28 ) }
    dend_42 { pt3dadd( 164.832, 10.8562, -185.715, 0.55 ) }
    dend_42 { pt3dadd( 172.022, 9.73755, -188.314, 0.55 ) }
    dend_42 { pt3dadd( 175.24, 9.56306, -189.764, 0.55 ) }
    dend_42 { pt3dadd( 176.636, 9.60426, -190.505, 0.83 ) }
    dend_42 { pt3dadd( 179.295, 9.80184, -192.139, 0.55 ) }
    dend_42 { pt3dadd( 181.16, 10.0569, -193.352, 0.83 ) }
    dend_42 { pt3dadd( 186.216, 10.8886, -196.618, 0.55 ) }
    dend_42 { pt3dadd( 189.237, 11.2341, -198.769, 0.28 ) }
    dend_42 { pt3dadd( 190.489, 11.2458, -199.571, 0.55 ) }
    dend_42 { pt3dadd( 193.831, 10.8148, -201.532, 0.28 ) }
    dend_42 { pt3dadd( 194.97, 10.5251, -202.188, 0.55 ) }
    dend_42 { pt3dadd( 197.279, 9.61926, -203.235, 0.28 ) }
    dend_42 { pt3dadd( 199.565, 8.28064, -203.981, 0.55 ) }
    dend_42 { pt3dadd( 204.125, 4.9393, -204.743, 0.28 ) }
    dend_42 { pt3dadd( 206.202, 3.19481, -204.895, 0.55 ) }
    dend_42 { pt3dadd( 209.234, 0.331743, -205.025, 0.28 ) }
    dend_42 { pt3dadd( 213.075, -3.33615, -205.029, 0.55 ) }
    dend_42 { pt3dadd( 215.867, -5.96868, -204.967, 0.55 ) }
    dend_42 { pt3dadd( 220.76, -10.4029, -204.7, 0.28 ) }
    dend_42 { pt3dadd( 222.795, -12.0443, -204.727, 0.55 ) }
    dend_42 { pt3dadd( 226.361, -14.481, -205.096, 0.28 ) }
    dend_42 { pt3dadd( 229.999, -16.5116, -205.604, 0.55 ) }
    dend_42 { pt3dadd( 232.061, -17.2704, -206.07, 0.28 ) }
    dend_42 { pt3dadd( 234.0, -17.6457, -206.531, 0.55 ) }
    dend_42 { pt3dadd( 239.559, -18.1797, -208.195, 0.28 ) }
    dend_42 { pt3dadd( 243.611, -18.279, -209.335, 0.28 ) }
    dend_42 { pt3dadd( 247.208, -18.1104, -210.274, 0.55 ) }
    dend_42 { pt3dadd( 251.206, -17.7447, -211.45, 0.28 ) }
    dend_42 { pt3dadd( 252.232, -17.61, -211.692, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 80.2011, 7.42376, -51.1061, 0.55 ) }
    dend_35 { pt3dadd( 80.1371, 5.82566, -53.7465, 0.55 ) }
    dend_35 { pt3dadd( 79.9033, 4.44481, -55.8267, 0.28 ) }
    dend_35 { pt3dadd( 79.6877, 3.10339, -57.5872, 0.55 ) }
    dend_35 { pt3dadd( 79.4322, 0.232218, -61.3797, 0.28 ) }
    dend_35 { pt3dadd( 79.4092, 0.0699911, -61.6495, 0.55 ) }
    dend_35 { pt3dadd( 79.3242, -0.736153, -63.165, 0.28 ) }
    dend_35 { pt3dadd( 79.155, -1.29794, -64.5615, 0.55 ) }
    dend_35 { pt3dadd( 78.9141, -1.80767, -66.1278, 0.28 ) }
    dend_35 { pt3dadd( 78.5406, -2.45826, -68.3234, 0.55 ) }
    dend_35 { pt3dadd( 77.6003, -4.12674, -73.7693, 0.55 ) }
    dend_35 { pt3dadd( 76.7029, -5.60799, -78.7848, 0.55 ) }
    dend_35 { pt3dadd( 75.9579, -6.78373, -82.7933, 0.55 ) }
    dend_35 { pt3dadd( 75.1754, -7.95181, -86.6819, 0.55 ) }
    dend_35 { pt3dadd( 74.971, -8.26783, -87.6586, 0.28 ) }
    dend_35 { pt3dadd( 74.7746, -8.64111, -88.6467, 0.55 ) }
    dend_35 { pt3dadd( 74.6009, -9.228, -89.9394, 0.28 ) }
    dend_35 { pt3dadd( 74.4809, -10.4078, -92.1246, 0.55 ) }
    dend_35 { pt3dadd( 74.5597, -13.0145, -95.8284, 0.55 ) }
    dend_35 { pt3dadd( 74.6197, -14.5043, -97.6638, 0.28 ) }
    dend_35 { pt3dadd( 74.5668, -15.951, -99.5928, 0.55 ) }
    dend_35 { pt3dadd( 74.2921, -17.8807, -102.363, 0.28 ) }
    dend_35 { pt3dadd( 73.9289, -19.3802, -104.626, 0.55 ) }
    dend_35 { pt3dadd( 73.245, -21.5865, -107.997, 0.28 ) }
    dend_35 { pt3dadd( 72.5626, -23.9266, -111.391, 0.55 ) }
    dend_35 { pt3dadd( 71.506, -27.2878, -116.35, 0.28 ) }
    dend_35 { pt3dadd( 70.885, -29.0621, -118.994, 0.55 ) }
    dend_35 { pt3dadd( 70.2058, -30.8356, -121.75, 0.28 ) }
    dend_35 { pt3dadd( 69.582, -32.3198, -124.31, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 68.9027, -34.0757, -127.763, 0.55 ) }
    dend_35 { pt3dadd( 68.464, -35.7813, -130.926, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 61.5208, 35.994, -4.71671, 0.55 ) }
    dend_31 { pt3dadd( 64.9205, 36.3875, -3.60119, 0.55 ) }
    dend_31 { pt3dadd( 67.4407, 36.507, -2.98789, 0.55 ) }
    dend_31 { pt3dadd( 73.0009, 36.619, -1.90266, 0.55 ) }
    dend_31 { pt3dadd( 75.5344, 36.5521, -1.61112, 0.55 ) }
    dend_31 { pt3dadd( 78.3076, 36.4943, -1.44396, 0.55 ) }
    dend_31 { pt3dadd( 82.0526, 36.4017, -1.48801, 0.55 ) }
    dend_31 { pt3dadd( 86.0594, 36.0941, -1.85257, 0.55 ) }
    dend_31 { pt3dadd( 88.1928, 35.8373, -2.25709, 0.55 ) }
    dend_31 { pt3dadd( 92.5931, 35.1452, -3.61733, 0.55 ) }
    dend_31 { pt3dadd( 94.6244, 34.8236, -4.30659, 0.55 ) }
    dend_31 { pt3dadd( 99.4087, 33.9521, -6.00506, 0.55 ) }
    dend_31 { pt3dadd( 102.663, 33.2501, -7.09308, 0.55 ) }
    dend_31 { pt3dadd( 105.048, 32.7503, -7.79241, 0.83 ) }
    dend_31 { pt3dadd( 108.872, 31.834, -8.82927, 0.55 ) }
    dend_31 { pt3dadd( 112.624, 30.8105, -9.66122, 0.83 ) }
    dend_31 { pt3dadd( 115.815, 29.8403, -10.2229, 0.55 ) }
    dend_31 { pt3dadd( 118.633, 29.056, -10.6028, 0.55 ) }
    dend_31 { pt3dadd( 120.218, 28.6992, -10.7604, 0.83 ) }
    dend_31 { pt3dadd( 123.897, 27.9324, -10.9549, 0.28 ) }
    dend_31 { pt3dadd( 125.704, 27.6549, -10.9686, 0.28 ) }
    dend_31 { pt3dadd( 127.476, 27.2553, -11.0315, 0.28 ) }
    dend_31 { pt3dadd( 129.387, 26.8688, -11.1227, 0.28 ) }
    dend_31 { pt3dadd( 132.444, 26.2859, -11.3435, 0.28 ) }
    dend_31 { pt3dadd( 133.668, 26.076, -11.4035, 0.55 ) }
    dend_31 { pt3dadd( 136.561, 25.6846, -11.2933, 0.55 ) }
    dend_31 { pt3dadd( 141.748, 25.0087, -10.8365, 0.55 ) }
    dend_31 { pt3dadd( 143.181, 24.8038, -10.6398, 0.55 ) }
    dend_31 { pt3dadd( 144.461, 24.597, -10.4, 0.83 ) }
    dend_31 { pt3dadd( 147.205, 24.2955, -9.69624, 0.55 ) }
    dend_31 { pt3dadd( 149.586, 24.0493, -9.04979, 0.55 ) }
    dend_31 { pt3dadd( 151.833, 23.829, -8.43199, 0.55 ) }
    dend_31 { pt3dadd( 153.583, 23.6142, -7.99087, 0.55 ) }
    dend_31 { pt3dadd( 156.397, 23.0461, -7.35982, 0.55 ) }
    dend_31 { pt3dadd( 159.769, 22.0437, -6.69841, 0.55 ) }
    dend_31 { pt3dadd( 165.12, 19.8252, -5.83176, 0.55 ) }
    dend_31 { pt3dadd( 168.127, 18.155, -5.3978, 0.55 ) }
    dend_31 { pt3dadd( 170.799, 16.2685, -5.01013, 0.28 ) }
    dend_31 { pt3dadd( 171.62, 15.5387, -4.88571, 0.55 ) }
    dend_31 { pt3dadd( 173.503, 13.4294, -4.54171, 0.28 ) }
    dend_31 { pt3dadd( 175.203, 11.0088, -4.13112, 0.55 ) }
    dend_31 { pt3dadd( 176.886, 7.99289, -3.40261, 0.55 ) }
    dend_31 { pt3dadd( 178.004, 6.04459, -2.82755, 0.28 ) }
    dend_31 { pt3dadd( 178.406, 5.36907, -2.58937, 0.55 ) }
    dend_31 { pt3dadd( 179.436, 3.70465, -1.97155, 0.28 ) }
    dend_31 { pt3dadd( 180.822, 1.56575, -1.10972, 0.55 ) }
    dend_31 { pt3dadd( 184.362, -3.50629, 1.11648, 0.55 ) }
    dend_31 { pt3dadd( 186.189, -6.03522, 2.29935, 0.55 ) }
    dend_31 { pt3dadd( 187.879, -8.34247, 3.40717, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 61.5208, 35.994, -4.71671, 0.55 ) }
    dend_30 { pt3dadd( 63.9476, 36.5034, -3.03435, 0.55 ) }
    dend_30 { pt3dadd( 64.7236, 36.6675, -2.5368, 0.55 ) }
    dend_30 { pt3dadd( 67.6278, 37.1524, -0.82074, 0.55 ) }
    dend_30 { pt3dadd( 70.8639, 37.7525, 1.14911, 0.55 ) }
    dend_30 { pt3dadd( 75.0195, 38.503, 3.78033, 0.55 ) }
    dend_30 { pt3dadd( 76.1667, 38.7122, 4.49978, 0.55 ) }
    dend_30 { pt3dadd( 78.2351, 39.0114, 5.76169, 0.55 ) }
    dend_30 { pt3dadd( 80.49, 39.3981, 7.06793, 0.55 ) }
    dend_30 { pt3dadd( 83.0937, 39.93, 8.48016, 0.55 ) }
    dend_30 { pt3dadd( 85.5427, 40.465, 9.82364, 0.55 ) }
    dend_30 { pt3dadd( 86.8735, 40.8247, 10.5066, 0.55 ) }
    dend_30 { pt3dadd( 88.429, 41.2926, 11.3111, 0.55 ) }
    dend_30 { pt3dadd( 90.3427, 41.9305, 12.2784, 0.83 ) }
    dend_30 { pt3dadd( 93.4575, 42.9977, 13.5334, 0.55 ) }
    dend_30 { pt3dadd( 95.526, 43.6302, 14.2546, 0.83 ) }
    dend_30 { pt3dadd( 98.4113, 44.3833, 15.1409, 0.55 ) }
    dend_30 { pt3dadd( 99.3037, 44.5669, 15.3944, 0.55 ) }
    dend_30 { pt3dadd( 102.09, 45.0035, 16.1073, 0.55 ) }
    dend_30 { pt3dadd( 107.106, 45.5017, 17.1504, 0.55 ) }
    dend_30 { pt3dadd( 110.804, 45.6715, 17.8074, 0.55 ) }
    dend_30 { pt3dadd( 113.755, 45.6659, 18.3785, 0.55 ) }
    dend_30 { pt3dadd( 116.794, 45.4965, 19.0418, 0.55 ) }
    dend_30 { pt3dadd( 117.435, 45.444, 19.1824, 0.28 ) }
    dend_30 { pt3dadd( 118.744, 45.2874, 19.4585, 0.83 ) }
    dend_30 { pt3dadd( 124.13, 44.5665, 20.6132, 0.55 ) }
    dend_30 { pt3dadd( 127.892, 44.0727, 21.3521, 0.55 ) }
    dend_30 { pt3dadd( 130.974, 43.7358, 22.0415, 0.55 ) }
    dend_30 { pt3dadd( 132.818, 43.5276, 22.4695, 0.83 ) }
    dend_30 { pt3dadd( 134.266, 43.3837, 22.8114, 0.28 ) }
    dend_30 { pt3dadd( 135.579, 43.2564, 23.11, 0.55 ) }
    dend_30 { pt3dadd( 145.548, 44.5374, 27.1345, 0.55 ) }
    dend_30 { pt3dadd( 156.198, 44.4244, 29.0487, 0.55 ) }
    dend_30 { pt3dadd( 166.647, 45.575, 31.6277, 0.55 ) }
    dend_30 { pt3dadd( 176.381, 44.8315, 36.2962, 0.55 ) }
    dend_30 { pt3dadd( 185.714, 42.4991, 41.2647, 0.55 ) }
    dend_30 { pt3dadd( 195.838, 39.0186, 43.0164, 0.55 ) }
    dend_30 { pt3dadd( 205.811, 34.6909, 42.8477, 0.55 ) }
    dend_30 { pt3dadd( 216.402, 32.4616, 42.2319, 0.55 ) }
    dend_30 { pt3dadd( 226.955, 29.9834, 42.3158, 0.55 ) }
    dend_30 { pt3dadd( 237.709, 28.8002, 41.8467, 0.55 ) }
    dend_30 { pt3dadd( 248.456, 27.9526, 42.8192, 0.55 ) }
    dend_30 { pt3dadd( 258.839, 25.1276, 44.1463, 0.55 ) }
    dend_30 { pt3dadd( 269.295, 24.1355, 46.7563, 0.55 ) }
    dend_30 { pt3dadd( 279.21, 24.529, 51.0791, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.94281, -35.1045, 6.76499, 1.38 ) }
    dend_13 { pt3dadd( 0.57888, -37.6513, 6.4685, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.94281, -35.1045, 6.76499, 0.55 ) }
    dend_12 { pt3dadd( -3.21429, -36.6599, 6.78733, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.62179, -38.6569, 6.81232, 0.55 ) }
    dend_12 { pt3dadd( -5.71625, -39.9769, 6.84461, 0.55 ) }
    dend_12 { pt3dadd( -6.63777, -41.0799, 6.72518, 0.55 ) }
    dend_12 { pt3dadd( -8.64665, -43.3632, 6.27136, 0.55 ) }
    dend_12 { pt3dadd( -10.0549, -44.8871, 5.91339, 0.55 ) }
    dend_12 { pt3dadd( -11.3069, -46.2534, 5.54676, 0.55 ) }
    dend_12 { pt3dadd( -14.5223, -49.5767, 4.60836, 0.55 ) }
    dend_12 { pt3dadd( -18.3853, -53.4226, 3.51249, 0.55 ) }
    dend_12 { pt3dadd( -21.3762, -56.3345, 2.61104, 0.55 ) }
    dend_12 { pt3dadd( -23.2853, -58.2473, 2.00739, 0.55 ) }
    dend_12 { pt3dadd( -25.4763, -60.5438, 1.3213, 0.55 ) }
    dend_12 { pt3dadd( -28.258, -63.8426, 0.487193, 0.55 ) }
    dend_12 { pt3dadd( -29.8881, -66.188, 0.0331189, 0.55 ) }
    dend_12 { pt3dadd( -31.9027, -69.5668, -0.348963, 0.55 ) }
    dend_12 { pt3dadd( -33.5125, -72.7371, -0.590404, 0.55 ) }
    dend_12 { pt3dadd( -35.1445, -76.6989, -0.808224, 0.55 ) }
    dend_12 { pt3dadd( -36.69, -81.3561, -0.949421, 0.55 ) }
    dend_12 { pt3dadd( -37.5301, -84.9209, -0.970781, 0.55 ) }
    dend_12 { pt3dadd( -37.8311, -86.6966, -0.867011, 0.55 ) }
    dend_12 { pt3dadd( -38.2951, -90.8725, -0.398929, 0.55 ) }
    dend_12 { pt3dadd( -38.6621, -94.7809, 0.139365, 0.55 ) }
    dend_12 { pt3dadd( -38.8363, -98.7209, 0.967582, 0.55 ) }
    dend_12 { pt3dadd( -38.96, -100.981, 1.56278, 0.55 ) }
    dend_12 { pt3dadd( -39.3028, -107.969, 3.65376, 0.55 ) }
    dend_12 { pt3dadd( -39.3314, -108.484, 3.81651, 0.55 ) }
    dend_12 { pt3dadd( -39.4494, -111.635, 4.88893, 0.55 ) }
    dend_12 { pt3dadd( -39.9176, -117.268, 6.93367, 0.55 ) }
    dend_12 { pt3dadd( -40.0841, -119.152, 7.50819, 0.55 ) }
    dend_12 { pt3dadd( -40.4121, -122.095, 7.91338, 0.55 ) }
    dend_12 { pt3dadd( -40.5047, -123.189, 7.82001, 0.55 ) }
    dend_12 { pt3dadd( -40.6538, -126.893, 6.82717, 0.55 ) }
    dend_12 { pt3dadd( -40.6166, -129.295, 5.69205, 0.55 ) }
    dend_12 { pt3dadd( -40.4503, -133.122, 3.12768, 0.55 ) }
    dend_12 { pt3dadd( -40.0597, -137.807, -0.360665, 0.28 ) }
    dend_12 { pt3dadd( -39.9444, -138.966, -1.37523, 0.55 ) }
    dend_12 { pt3dadd( -39.7631, -140.722, -3.06399, 0.28 ) }
    dend_12 { pt3dadd( -39.738, -140.986, -3.33218, 0.55 ) }
    dend_12 { pt3dadd( -39.6106, -142.435, -4.67998, 0.28 ) }
    dend_12 { pt3dadd( -39.6008, -142.927, -5.02757, 0.55 ) }
    dend_12 { pt3dadd( -39.6096, -145.482, -6.35409, 0.28 ) }
    dend_12 { pt3dadd( -39.6455, -146.35, -6.795, 0.55 ) }
    dend_12 { pt3dadd( -39.7809, -148.862, -7.93095, 0.28 ) }
    dend_12 { pt3dadd( -39.82, -149.653, -8.28569, 0.55 ) }
    dend_12 { pt3dadd( -39.9774, -152.382, -9.46657, 0.28 ) }
    dend_12 { pt3dadd( -40.0433, -153.637, -10.016, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.167, -68.6957, 50.6647, 0.55 ) }
    dend_10 { pt3dadd( -3.39362, -76.3277, 59.4703, 0.55 ) }
    dend_10 { pt3dadd( -6.29798, -82.7327, 68.9861, 0.55 ) }
    dend_10 { pt3dadd( -9.29824, -89.9322, 77.9161, 0.55 ) }
    dend_10 { pt3dadd( -12.5588, -97.1216, 86.7651, 0.55 ) }
    dend_10 { pt3dadd( -15.3439, -105.811, 94.4088, 0.55 ) }
    dend_10 { pt3dadd( -17.7194, -114.184, 102.508, 0.55 ) }
    dend_10 { pt3dadd( -20.2422, -124.488, 108.033, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.167, -68.6957, 50.6647, 0.55 ) }
    dend_3 { pt3dadd( 1.33391, -78.7882, 58.8296, 0.55 ) }
    dend_3 { pt3dadd( 3.35793, -90.3166, 65.0927, 0.55 ) }
    dend_3 { pt3dadd( 3.43909, -101.59, 72.1139, 0.55 ) }
    dend_3 { pt3dadd( 2.27572, -113.305, 78.32, 0.55 ) }
    dend_3 { pt3dadd( 1.67433, -125.068, 84.5096, 0.55 ) }
    dend_3 { pt3dadd( 1.55233, -136.422, 91.408, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -47.325, 52.1466, -16.045, 0.83 ) }
    dend_60 { pt3dadd( -46.9039, 53.3001, -17.4428, 0.83 ) }
    dend_60 { pt3dadd( -45.961, 56.1084, -20.5781, 0.55 ) }
    dend_60 { pt3dadd( -45.5507, 57.3258, -21.8213, 0.83 ) }
    dend_60 { pt3dadd( -45.1049, 58.633, -23.0555, 0.55 ) }
    dend_60 { pt3dadd( -44.6431, 59.9899, -24.1207, 0.55 ) }
    dend_60 { pt3dadd( -44.4037, 60.6761, -24.5627, 0.28 ) }
    dend_60 { pt3dadd( -44.2725, 61.1416, -24.7344, 0.55 ) }
    dend_60 { pt3dadd( -43.7799, 62.7091, -24.9682, 0.28 ) }
    dend_60 { pt3dadd( -43.5517, 63.3795, -25.0343, 0.55 ) }
    dend_60 { pt3dadd( -42.7849, 65.7188, -25.167, 0.28 ) }
    dend_60 { pt3dadd( -42.2237, 67.5821, -25.2075, 0.55 ) }
    dend_60 { pt3dadd( -41.4835, 70.5144, -25.1763, 0.28 ) }
    dend_60 { pt3dadd( -40.9207, 73.1056, -25.097, 0.28 ) }
    dend_60 { pt3dadd( -40.6872, 74.5677, -25.0224, 0.55 ) }
    dend_60 { pt3dadd( -40.5139, 76.3137, -24.9303, 0.28 ) }
    dend_60 { pt3dadd( -40.4837, 77.1538, -24.8735, 0.55 ) }
    dend_60 { pt3dadd( -40.5183, 79.1374, -24.8235, 0.28 ) }
    dend_60 { pt3dadd( -40.6269, 80.4658, -24.8545, 0.28 ) }
    dend_60 { pt3dadd( -40.7608, 81.7714, -24.9224, 0.28 ) }
    dend_60 { pt3dadd( -40.8067, 82.4583, -24.9615, 0.55 ) }
    dend_60 { pt3dadd( -40.8525, 85.218, -25.1865, 0.28 ) }
    dend_60 { pt3dadd( -40.8045, 88.4725, -25.514, 0.55 ) }
    dend_60 { pt3dadd( -40.7722, 89.5945, -25.6318, 0.55 ) }
    dend_60 { pt3dadd( -40.7565, 90.7225, -25.7259, 0.55 ) }
    dend_60 { pt3dadd( -40.8458, 93.1302, -25.9603, 0.55 ) }
    dend_60 { pt3dadd( -41.0024, 94.7194, -26.1447, 0.28 ) }
    dend_60 { pt3dadd( -41.128, 95.3275, -26.2206, 0.55 ) }
    dend_60 { pt3dadd( -41.5762, 96.987, -26.3899, 0.28 ) }
    dend_60 { pt3dadd( -42.1223, 98.7571, -26.6345, 0.55 ) }
    dend_60 { pt3dadd( -43.1304, 101.32, -27.0738, 0.28 ) }
    dend_60 { pt3dadd( -43.6592, 102.398, -27.2869, 0.28 ) }
    dend_60 { pt3dadd( -44.5747, 103.908, -27.718, 0.55 ) }
    dend_60 { pt3dadd( -45.6262, 105.487, -28.2414, 0.28 ) }
    dend_60 { pt3dadd( -45.8253, 105.738, -28.3341, 0.55 ) }
    dend_60 { pt3dadd( -46.5623, 106.545, -28.657, 0.28 ) }
    dend_60 { pt3dadd( -49.1379, 109.151, -29.7037, 0.55 ) }
    dend_60 { pt3dadd( -52.7981, 112.399, -31.2916, 0.28 ) }
    dend_60 { pt3dadd( -53.4856, 112.948, -31.6276, 0.55 ) }
    dend_60 { pt3dadd( -55.3905, 114.371, -32.5802, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -56.1938, 114.955, -33.0032, 0.28 ) }
    dend_60 { pt3dadd( -56.8973, 115.441, -33.4063, 0.55 ) }
    dend_60 { pt3dadd( -59.0157, 116.585, -34.7414, 0.28 ) }
    dend_60 { pt3dadd( -60.5409, 117.233, -35.6115, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -47.325, 52.1466, -16.045, 0.55 ) }
    dend_57 { pt3dadd( -47.426, 53.9547, -16.0027, 0.55 ) }
    dend_57 { pt3dadd( -47.5282, 55.0089, -15.8888, 0.28 ) }
    dend_57 { pt3dadd( -47.7766, 55.7448, -15.6572, 0.55 ) }
    dend_57 { pt3dadd( -48.3472, 57.4346, -15.1252, 0.28 ) }
    dend_57 { pt3dadd( -48.7479, 58.6216, -14.7515, 0.55 ) }
    dend_57 { pt3dadd( -49.4867, 60.8098, -14.0627, 0.28 ) }
    dend_57 { pt3dadd( -50.0348, 61.9588, -13.515, 0.55 ) }
    dend_57 { pt3dadd( -52.3305, 64.595, -11.3875, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -113.149, -41.4665, -2.31525, 0.55 ) }
    dend_52 { pt3dadd( -118.734, -50.3455, -2.963, 0.55 ) }
    dend_52 { pt3dadd( -122.641, -60.085, -3.97041, 0.55 ) }
    dend_52 { pt3dadd( -125.659, -69.6541, -7.12442, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -113.149, -41.4665, -2.31525, 0.55 ) }
    dend_49 { pt3dadd( -118.572, -48.7805, -5.02984, 0.55 ) }
    dend_49 { pt3dadd( -123.077, -56.2718, -8.76182, 0.55 ) }
    dend_49 { pt3dadd( -127.202, -63.9019, -12.6604, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -146.549, 24.7063, 53.4667, 0.55 ) }
    dend_47 { pt3dadd( -153.816, 24.8511, 58.3687, 0.55 ) }
    dend_47 { pt3dadd( -161.496, 26.1034, 62.4158, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -146.549, 24.7063, 53.4667, 0.55 ) }
    dend_46 { pt3dadd( -157.965, 23.3378, 58.1722, 0.55 ) }
    dend_46 { pt3dadd( -169.58, 24.0339, 62.5132, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 68.464, -35.7813, -130.926, 0.28 ) }
    dend_39 { pt3dadd( 71.5622, -36.2252, -138.569, 0.28 ) }
    dend_39 { pt3dadd( 71.8605, -36.3269, -139.275, 0.55 ) }
    dend_39 { pt3dadd( 72.364, -36.4985, -140.466, 0.28 ) }
    dend_39 { pt3dadd( 72.788, -36.6431, -141.469, 0.28 ) }
    dend_39 { pt3dadd( 73.3492, -36.8344, -142.797, 0.55 ) }
    dend_39 { pt3dadd( 74.0891, -37.0866, -144.547, 0.55 ) }
    dend_39 { pt3dadd( 75.0196, -38.1298, -145.831, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 68.464, -35.7813, -130.926, 0.55 ) }
    dend_36 { pt3dadd( 68.8161, -36.5434, -133.164, 0.55 ) }
    dend_36 { pt3dadd( 68.8525, -36.841, -134.148, 0.28 ) }
    dend_36 { pt3dadd( 68.8572, -37.3143, -135.85, 0.55 ) }
    dend_36 { pt3dadd( 68.8676, -38.3569, -139.599, 0.28 ) }
    dend_36 { pt3dadd( 68.8747, -39.0795, -142.197, 0.55 ) }
    dend_36 { pt3dadd( 68.8869, -40.3037, -146.598, 0.28 ) }
    dend_36 { pt3dadd( 68.8276, -41.6031, -152.228, 0.28 ) }
    dend_36 { pt3dadd( 68.7329, -42.1544, -154.839, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 187.879, -8.34247, 3.40717, 0.28 ) }
    dend_33 { pt3dadd( 190.45, -9.5032, 6.31386, 0.28 ) }
    dend_33 { pt3dadd( 193.655, -10.8131, 10.4041, 0.28 ) }
    dend_33 { pt3dadd( 195.669, -11.5935, 13.1378, 0.55 ) }
    dend_33 { pt3dadd( 196.864, -11.945, 14.7017, 0.28 ) }
    dend_33 { pt3dadd( 197.498, -12.1304, 15.5493, 0.28 ) }
    dend_33 { pt3dadd( 200.651, -13.0888, 19.6892, 0.55 ) }
    dend_33 { pt3dadd( 201.356, -13.2088, 20.6942, 0.28 ) }
    dend_33 { pt3dadd( 203.002, -13.4528, 23.456, 0.55 ) }
    dend_33 { pt3dadd( 204.422, -13.7354, 25.7955, 0.28 ) }
    dend_33 { pt3dadd( 205.664, -13.9685, 27.6752, 0.55 ) }
    dend_33 { pt3dadd( 207.143, -14.3481, 29.8336, 0.55 ) }
    dend_33 { pt3dadd( 209.565, -15.2487, 32.9758, 0.55 ) }
    dend_33 { pt3dadd( 210.155, -15.4933, 33.7265, 0.55 ) }
    dend_33 { pt3dadd( 212.278, -16.4519, 36.5055, 0.28 ) }
    dend_33 { pt3dadd( 213.109, -16.8777, 37.6181, 0.55 ) }
    dend_33 { pt3dadd( 214.262, -17.4027, 39.0363, 0.28 ) }
    dend_33 { pt3dadd( 215.906, -18.224, 40.9794, 0.55 ) }
    dend_33 { pt3dadd( 218.703, -19.8556, 43.6919, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 187.879, -8.34247, 3.40717, 0.55 ) }
    dend_32 { pt3dadd( 185.783, -8.74229, 3.21941, 0.55 ) }
    dend_32 { pt3dadd( 184.081, -9.06698, 3.06693, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.57888, -37.6513, 6.4685, 0.83 ) }
    dend_17 { pt3dadd( 0.709044, -37.9228, 6.44823, 0.83 ) }
    dend_17 { pt3dadd( 2.21361, -40.3188, 6.41392, 0.83 ) }
    dend_17 { pt3dadd( 3.53134, -42.4185, 6.24525, 0.55 ) }
    dend_17 { pt3dadd( 4.5826, -44.0937, 6.11068, 0.55 ) }
    dend_17 { pt3dadd( 6.8171, -47.6543, 5.82465, 0.83 ) }
    dend_17 { pt3dadd( 9.5274, -51.973, 5.47772, 0.55 ) }
    dend_17 { pt3dadd( 11.0054, -54.2323, 5.34029, 0.83 ) }
    dend_17 { pt3dadd( 13.6211, -57.8214, 5.27962, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.57888, -37.6513, 6.4685, 0.55 ) }
    dend_14 { pt3dadd( -0.502872, -39.0619, 2.66916, 0.55 ) }
    dend_14 { pt3dadd( -1.664, -40.576, -1.40897, 0.55 ) }
    dend_14 { pt3dadd( -3.03473, -42.3634, -6.22323, 0.55 ) }
    dend_14 { pt3dadd( -4.69923, -44.5339, -12.0693, 0.55 ) }
    dend_14 { pt3dadd( -5.64378, -45.7656, -15.3867, 0.55 ) }
    dend_14 { pt3dadd( -5.83352, -46.013, -16.0532, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 1.55233, -136.422, 91.408, 0.55 ) }
    dend_7 { pt3dadd( 2.32972, -143.147, 95.9557, 0.55 ) }
    dend_7 { pt3dadd( 4.08626, -150.269, 99.5523, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 1.55233, -136.422, 91.408, 0.55 ) }
    dend_4 { pt3dadd( 1.32628, -148.69, 98.2026, 0.55 ) }
    dend_4 { pt3dadd( 0.710541, -160.589, 105.577, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.3305, 64.595, -11.3875, 0.28 ) }
    dend_59 { pt3dadd( -53.1121, 66.2152, -10.0381, 0.28 ) }
    dend_59 { pt3dadd( -53.3975, 66.8326, -9.46242, 0.55 ) }
    dend_59 { pt3dadd( -54.2026, 68.6213, -7.76259, 0.28 ) }
    dend_59 { pt3dadd( -54.6148, 69.5032, -7.00224, 0.55 ) }
    dend_59 { pt3dadd( -55.7575, 71.8877, -5.01931, 0.28 ) }
    dend_59 { pt3dadd( -56.9188, 74.3114, -3.00392, 0.55 ) }
    dend_59 { pt3dadd( -58.8639, 78.1371, 0.380521, 0.28 ) }
    dend_59 { pt3dadd( -59.2769, 78.9579, 1.10137, 0.55 ) }
    dend_59 { pt3dadd( -60.178, 80.8624, 2.61876, 0.28 ) }
    dend_59 { pt3dadd( -60.5222, 81.6465, 3.21095, 0.55 ) }
    dend_59 { pt3dadd( -65.1175, 87.225, 8.56891, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -70.4256, 93.7167, 11.9032, 0.55 ) }
    dend_59 { pt3dadd( -74.6528, 100.406, 16.2524, 0.55 ) }
    dend_59 { pt3dadd( -77.6033, 108.021, 20.1864, 0.55 ) }
    dend_59 { pt3dadd( -81.584, 115.37, 23.6681, 0.55 ) }
    dend_59 { pt3dadd( -86.3761, 121.502, 28.2117, 0.55 ) }
    dend_59 { pt3dadd( -90.5379, 126.96, 34.0237, 0.55 ) }
    dend_59 { pt3dadd( -93.8685, 131.495, 41.0178, 0.55 ) }
    dend_59 { pt3dadd( -97.1788, 136.526, 47.6866, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.3305, 64.595, -11.3875, 0.55 ) }
    dend_58 { pt3dadd( -56.6052, 63.2889, -10.5343, 0.55 ) }
    dend_58 { pt3dadd( -58.8298, 62.5394, -10.1053, 0.28 ) }
    dend_58 { pt3dadd( -60.4854, 61.9816, -9.78598, 0.55 ) }
    dend_58 { pt3dadd( -61.8652, 61.5167, -9.51985, 0.28 ) }
    dend_58 { pt3dadd( -62.8317, 61.1911, -9.33345, 0.55 ) }
    dend_58 { pt3dadd( -65.4967, 60.2932, -8.81945, 0.28 ) }
    dend_58 { pt3dadd( -67.2452, 59.5803, -8.70736, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -125.659, -69.6541, -7.12442, 0.55 ) }
    dend_54 { pt3dadd( -129.488, -79.8066, -5.91137, 0.55 ) }
    dend_54 { pt3dadd( -133.086, -89.8412, -3.51214, 0.55 ) }
    dend_54 { pt3dadd( -135.9, -100.385, -2.93546, 0.55 ) }
    dend_54 { pt3dadd( -139.78, -110.415, -1.03809, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -125.659, -69.6541, -7.12442, 0.55 ) }
    dend_53 { pt3dadd( -132.1, -78.2027, -15.5186, 0.55 ) }
    dend_53 { pt3dadd( -138.128, -85.1325, -25.4968, 0.55 ) }
    dend_53 { pt3dadd( -145.045, -93.4367, -33.7452, 0.55 ) }
    dend_53 { pt3dadd( -154.643, -99.5971, -41.0634, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -127.202, -63.9019, -12.6604, 0.55 ) }
    dend_51 { pt3dadd( -133.329, -71.9944, -21.0625, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -127.202, -63.9019, -12.6604, 0.55 ) }
    dend_50 { pt3dadd( -130.994, -74.4211, -11.0981, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 75.0196, -38.1298, -145.831, 0.28 ) }
    dend_41 { pt3dadd( 77.6765, -40.0165, -148.792, 0.28 ) }
    dend_41 { pt3dadd( 78.9107, -40.8929, -150.167, 0.55 ) }
    dend_41 { pt3dadd( 81.2643, -42.5642, -152.789, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 75.0196, -38.1298, -145.831, 0.55 ) }
    dend_40 { pt3dadd( 74.3289, -38.7243, -147.307, 0.55 ) }
    dend_40 { pt3dadd( 72.9475, -39.9135, -150.26, 0.28 ) }
    dend_40 { pt3dadd( 72.4975, -40.3009, -151.222, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 68.7329, -42.1544, -154.839, 0.28 ) }
    dend_38 { pt3dadd( 68.9335, -42.9233, -162.454, 0.28 ) }
    dend_38 { pt3dadd( 69.0329, -43.304, -166.224, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 68.7329, -42.1544, -154.839, 0.55 ) }
    dend_37 { pt3dadd( 67.125, -41.443, -154.565, 0.55 ) }
    dend_37 { pt3dadd( 62.6413, -39.4591, -153.804, 0.28 ) }
    dend_37 { pt3dadd( 61.5761, -38.9878, -153.623, 0.55 ) }
    dend_37 { pt3dadd( 58.6624, -37.6986, -153.128, 0.28 ) }
    dend_37 { pt3dadd( 56.7843, -36.8676, -152.809, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.6211, -57.8214, 5.27962, 0.83 ) }
    dend_23 { pt3dadd( 13.6583, -58.0959, 5.24891, 0.83 ) }
    dend_23 { pt3dadd( 14.1966, -61.6843, 4.94583, 0.83 ) }
    dend_23 { pt3dadd( 14.3678, -64.3767, 4.88148, 0.83 ) }
    dend_23 { pt3dadd( 14.3486, -66.9774, 5.0779, 0.83 ) }
    dend_23 { pt3dadd( 14.1975, -70.4377, 5.59199, 0.83 ) }
    dend_23 { pt3dadd( 13.9124, -74.425, 6.32581, 0.83 ) }
    dend_23 { pt3dadd( 13.6073, -78.8733, 7.37403, 0.83 ) }
    dend_23 { pt3dadd( 13.3075, -83.1912, 8.58767, 0.83 ) }
    dend_23 { pt3dadd( 12.6035, -88.5023, 9.94932, 0.83 ) }
    dend_23 { pt3dadd( 12.152, -90.9476, 10.4361, 0.83 ) }
    dend_23 { pt3dadd( 11.808, -92.7884, 10.6885, 0.83 ) }
    dend_23 { pt3dadd( 11.0766, -96.3231, 11.098, 0.83 ) }
    dend_23 { pt3dadd( 10.498, -99.4899, 11.2956, 0.83 ) }
    dend_23 { pt3dadd( 9.63944, -106.246, 10.9888, 0.83 ) }
    dend_23 { pt3dadd( 9.22274, -109.948, 10.3514, 0.83 ) }
    dend_23 { pt3dadd( 8.84223, -113.363, 9.52113, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.6211, -57.8214, 5.27962, 0.55 ) }
    dend_18 { pt3dadd( 12.0657, -61.5979, 5.25704, 0.55 ) }
    dend_18 { pt3dadd( 10.8732, -64.3391, 5.4339, 0.55 ) }
    dend_18 { pt3dadd( 10.1338, -66.0899, 5.72249, 0.55 ) }
    dend_18 { pt3dadd( 9.06897, -68.8251, 6.44731, 0.55 ) }
    dend_18 { pt3dadd( 7.05315, -74.2357, 8.2369, 0.55 ) }
    dend_18 { pt3dadd( 5.43864, -78.3293, 10.0233, 0.55 ) }
    dend_18 { pt3dadd( 4.10411, -81.6085, 11.7945, 0.55 ) }
    dend_18 { pt3dadd( 2.64908, -84.9212, 13.801, 0.55 ) }
    dend_18 { pt3dadd( 1.40237, -87.6682, 15.6014, 0.28 ) }
    dend_18 { pt3dadd( 0.31174, -89.9116, 17.3868, 0.55 ) }
    dend_18 { pt3dadd( -1.8353, -93.9926, 21.1806, 0.55 ) }
    dend_18 { pt3dadd( -3.31768, -96.4957, 23.7517, 0.55 ) }
    dend_18 { pt3dadd( -4.16148, -97.8984, 25.1765, 0.55 ) }
    dend_18 { pt3dadd( -5.22724, -99.5555, 26.7624, 0.83 ) }
    dend_18 { pt3dadd( -8.38957, -104.472, 31.14, 0.28 ) }
    dend_18 { pt3dadd( -9.42909, -106.1, 32.5458, 0.55 ) }
    dend_18 { pt3dadd( -11.205, -109.037, 35.0019, 0.28 ) }
    dend_18 { pt3dadd( -11.7598, -109.941, 35.8233, 0.55 ) }
    dend_18 { pt3dadd( -12.942, -112.064, 37.7262, 0.28 ) }
    dend_18 { pt3dadd( -13.5954, -113.271, 38.7226, 0.55 ) }
    dend_18 { pt3dadd( -15.8281, -117.213, 40.904, 0.55 ) }
    dend_18 { pt3dadd( -19.7711, -127.746, 51.1493, 0.55 ) }
    dend_18 { pt3dadd( -23.0944, -137.761, 62.0861, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.83352, -46.013, -16.0532, 0.55 ) }
    dend_16 { pt3dadd( -7.79088, -47.4077, -20.007, 0.55 ) }
    dend_16 { pt3dadd( -8.38666, -47.7422, -21.1324, 0.55 ) }
    dend_16 { pt3dadd( -9.91155, -48.5848, -23.8747, 0.55 ) }
    dend_16 { pt3dadd( -13.3262, -50.2764, -29.6746, 0.28 ) }
    dend_16 { pt3dadd( -13.8505, -50.5114, -30.4932, 0.55 ) }
    dend_16 { pt3dadd( -16.0713, -51.5831, -33.7917, 0.55 ) }
    dend_16 { pt3dadd( -19.2406, -53.0623, -37.9195, 0.55 ) }
    dend_16 { pt3dadd( -20.4683, -53.5771, -39.4618, 0.28 ) }
    dend_16 { pt3dadd( -21.5745, -53.9317, -40.7368, 0.28 ) }
    dend_16 { pt3dadd( -23.5636, -54.4956, -42.6072, 0.55 ) }
    dend_16 { pt3dadd( -25.9669, -55.042, -44.9934, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -28.1839, -55.3114, -47.2564, 0.55 ) }
    dend_16 { pt3dadd( -29.9203, -55.3458, -48.9689, 0.55 ) }
    dend_16 { pt3dadd( -31.1105, -55.2468, -50.192, 0.55 ) }
    dend_16 { pt3dadd( -34.5832, -54.7607, -53.9068, 0.55 ) }
    dend_16 { pt3dadd( -38.2819, -53.9452, -57.7387, 0.55 ) }
    dend_16 { pt3dadd( -39.8296, -53.5068, -59.2789, 0.28 ) }
    dend_16 { pt3dadd( -41.2892, -53.1176, -60.7729, 0.55 ) }
    dend_16 { pt3dadd( -44.2479, -52.5604, -63.7685, 0.28 ) }
    dend_16 { pt3dadd( -45.2451, -52.4078, -64.765, 0.83 ) }
    dend_16 { pt3dadd( -47.1533, -52.0997, -66.4828, 0.28 ) }
    dend_16 { pt3dadd( -48.581, -52.0044, -67.5215, 0.55 ) }
    dend_16 { pt3dadd( -50.6629, -51.9493, -68.985, 0.28 ) }
    dend_16 { pt3dadd( -51.5013, -51.916, -69.5388, 0.55 ) }
    dend_16 { pt3dadd( -53.0792, -51.889, -70.4772, 0.55 ) }
    dend_16 { pt3dadd( -55.5052, -51.5878, -71.8013, 0.55 ) }
    dend_16 { pt3dadd( -57.1216, -51.2873, -72.5756, 0.28 ) }
    dend_16 { pt3dadd( -58.4627, -50.8768, -73.0964, 0.55 ) }
    dend_16 { pt3dadd( -60.0523, -50.1936, -73.7177, 0.28 ) }
    dend_16 { pt3dadd( -60.3127, -50.0598, -73.8286, 0.55 ) }
    dend_16 { pt3dadd( -62.6134, -48.7606, -75.2591, 0.28 ) }
    dend_16 { pt3dadd( -64.2377, -47.7782, -76.4787, 0.55 ) }
    dend_16 { pt3dadd( -66.307, -46.3196, -78.3981, 0.83 ) }
    dend_16 { pt3dadd( -67.9586, -45.0692, -80.1872, 0.28 ) }
    dend_16 { pt3dadd( -68.3723, -44.7488, -80.6966, 0.55 ) }
    dend_16 { pt3dadd( -71.4869, -42.3438, -84.8089, 0.28 ) }
    dend_16 { pt3dadd( -72.014, -41.9328, -85.5921, 0.55 ) }
    dend_16 { pt3dadd( -73.5429, -40.5817, -88.0234, 0.28 ) }
    dend_16 { pt3dadd( -73.9365, -40.2341, -88.6546, 0.55 ) }
    dend_16 { pt3dadd( -74.9719, -39.3308, -90.1877, 0.28 ) }
    dend_16 { pt3dadd( -75.722, -38.6812, -91.217, 0.55 ) }
    dend_16 { pt3dadd( -77.4833, -37.2379, -93.2128, 0.28 ) }
    dend_16 { pt3dadd( -78.5389, -36.4713, -94.3519, 0.55 ) }
    dend_16 { pt3dadd( -80.8242, -35.0081, -96.6463, 0.28 ) }
    dend_16 { pt3dadd( -81.5068, -34.6168, -97.3177, 0.55 ) }
    dend_16 { pt3dadd( -82.586, -34.102, -98.3268, 0.28 ) }
    dend_16 { pt3dadd( -83.5138, -33.6701, -99.1321, 0.55 ) }
    dend_16 { pt3dadd( -85.475, -32.806, -100.678, 0.28 ) }
    dend_16 { pt3dadd( -86.0708, -32.5614, -101.123, 0.55 ) }
    dend_16 { pt3dadd( -90.5616, -30.6514, -104.206, 0.28 ) }
    dend_16 { pt3dadd( -92.1793, -29.861, -105.142, 0.55 ) }
    dend_16 { pt3dadd( -95.1194, -28.3053, -106.619, 0.28 ) }
    dend_16 { pt3dadd( -96.4568, -27.5492, -107.244, 0.55 ) }
    dend_16 { pt3dadd( -99.5657, -25.8428, -108.498, 0.28 ) }
    dend_16 { pt3dadd( -100.716, -25.2703, -108.91, 0.55 ) }
    dend_16 { pt3dadd( -104.919, -23.5894, -110.175, 0.28 ) }
    dend_16 { pt3dadd( -106.667, -23.1138, -110.687, 0.55 ) }
    dend_16 { pt3dadd( -109.154, -22.8565, -111.389, 0.55 ) }
    dend_16 { pt3dadd( -110.688, -22.7991, -111.784, 0.55 ) }
    dend_16 { pt3dadd( -113.863, -22.7703, -112.35, 0.28 ) }
    dend_16 { pt3dadd( -117.023, -22.7774, -112.714, 0.28 ) }
    dend_16 { pt3dadd( -119.669, -22.7749, -112.942, 0.55 ) }
    dend_16 { pt3dadd( -122.972, -22.4969, -112.875, 0.28 ) }
    dend_16 { pt3dadd( -124.644, -22.1619, -112.631, 0.55 ) }
    dend_16 { pt3dadd( -128.686, -20.7515, -111.673, 0.28 ) }
    dend_16 { pt3dadd( -130.819, -19.6394, -110.714, 0.55 ) }
    dend_16 { pt3dadd( -132.219, -18.7211, -109.815, 0.28 ) }
    dend_16 { pt3dadd( -133.798, -17.6872, -108.454, 0.55 ) }
    dend_16 { pt3dadd( -135.776, -16.3274, -106.529, 0.28 ) }
    dend_16 { pt3dadd( -136.528, -15.8523, -105.808, 0.55 ) }
    dend_16 { pt3dadd( -140.438, -13.7581, -102.516, 0.28 ) }
    dend_16 { pt3dadd( -141.758, -13.1042, -101.42, 0.55 ) }
    dend_16 { pt3dadd( -144.893, -11.671, -98.7378, 0.28 ) }
    dend_16 { pt3dadd( -146.597, -10.9132, -97.2818, 0.55 ) }
    dend_16 { pt3dadd( -147.999, -10.2928, -96.0877, 0.55 ) }
    dend_16 { pt3dadd( -149.678, -9.56451, -94.7041, 0.28 ) }
    dend_16 { pt3dadd( -150.563, -9.19563, -94.1255, 0.55 ) }
    dend_16 { pt3dadd( -153.544, -7.86236, -92.3614, 0.28 ) }
    dend_16 { pt3dadd( -155.104, -6.98565, -91.4054, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.83352, -46.013, -16.0532, 0.55 ) }
    dend_15 { pt3dadd( -5.03528, -46.1897, -16.6503, 0.55 ) }
    dend_15 { pt3dadd( -4.20799, -46.2556, -17.2295, 0.55 ) }
    dend_15 { pt3dadd( -3.13655, -46.2505, -17.8994, 0.55 ) }
    dend_15 { pt3dadd( -2.23704, -46.1651, -18.4086, 0.55 ) }
    dend_15 { pt3dadd( 3.91215, -44.923, -21.3149, 0.55 ) }
    dend_15 { pt3dadd( 5.306, -44.4808, -21.988, 0.55 ) }
    dend_15 { pt3dadd( 7.36477, -43.6751, -23.0235, 0.55 ) }
    dend_15 { pt3dadd( 8.8229, -43.0548, -23.7655, 0.55 ) }
    dend_15 { pt3dadd( 10.2537, -42.3646, -24.4582, 0.28 ) }
    dend_15 { pt3dadd( 12.4815, -41.174, -25.4205, 0.55 ) }
    dend_15 { pt3dadd( 15.8339, -39.296, -26.6778, 0.28 ) }
    dend_15 { pt3dadd( 16.1156, -39.1916, -26.8563, 0.55 ) }
    dend_15 { pt3dadd( 17.6743, -38.9229, -28.4794, 0.28 ) }
    dend_15 { pt3dadd( 18.5388, -38.8373, -29.7459, 0.55 ) }
    dend_15 { pt3dadd( 19.3443, -38.8629, -31.203, 0.55 ) }
    dend_15 { pt3dadd( 20.7504, -39.0624, -33.8391, 0.55 ) }
    dend_15 { pt3dadd( 23.5227, -39.4963, -39.0033, 0.55 ) }
    dend_15 { pt3dadd( 25.4442, -39.8299, -42.4364, 0.55 ) }
    dend_15 { pt3dadd( 26.1383, -39.9575, -43.6027, 0.55 ) }
    dend_15 { pt3dadd( 30.8826, -40.7246, -51.1583, 0.55 ) }
    dend_15 { pt3dadd( 32.254, -40.8966, -53.1492, 0.55 ) }
    dend_15 { pt3dadd( 33.1073, -40.9929, -54.2078, 0.55 ) }
    dend_15 { pt3dadd( 35.3098, -41.2948, -56.4985, 0.55 ) }
    dend_15 { pt3dadd( 40.9071, -42.4024, -61.6724, 0.55 ) }
    dend_15 { pt3dadd( 42.4728, -42.7831, -62.9983, 0.28 ) }
    dend_15 { pt3dadd( 43.4208, -43.0499, -63.6832, 0.55 ) }
    dend_15 { pt3dadd( 44.8437, -43.5152, -64.6691, 0.28 ) }
    dend_15 { pt3dadd( 45.4573, -43.7759, -65.0272, 0.55 ) }
    dend_15 { pt3dadd( 47.4962, -44.8478, -65.5886, 0.28 ) }
    dend_15 { pt3dadd( 48.8875, -46.1693, -65.1126, 0.55 ) }
    dend_15 { pt3dadd( 49.6925, -47.0998, -64.7633, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 50.3819, -48.1139, -64.3366, 0.55 ) }
    dend_15 { pt3dadd( 50.9481, -49.2091, -63.8901, 0.28 ) }
    dend_15 { pt3dadd( 51.1922, -49.7725, -63.7046, 0.55 ) }
    dend_15 { pt3dadd( 51.7227, -51.2422, -63.207, 0.28 ) }
    dend_15 { pt3dadd( 51.8798, -51.6834, -63.1344, 0.55 ) }
    dend_15 { pt3dadd( 52.8261, -54.2192, -62.8508, 0.28 ) }
    dend_15 { pt3dadd( 53.3532, -55.3997, -62.8426, 0.55 ) }
    dend_15 { pt3dadd( 54.6722, -57.9353, -63.0437, 0.28 ) }
    dend_15 { pt3dadd( 55.2335, -58.8742, -63.1955, 0.55 ) }
    dend_15 { pt3dadd( 57.2583, -61.9671, -63.815, 0.28 ) }
    dend_15 { pt3dadd( 57.7673, -62.7205, -63.9923, 0.55 ) }
    dend_15 { pt3dadd( 59.353, -65.1091, -64.6557, 0.28 ) }
    dend_15 { pt3dadd( 59.6791, -65.6665, -64.7856, 0.55 ) }
    dend_15 { pt3dadd( 60.4919, -67.1384, -65.1358, 0.28 ) }
    dend_15 { pt3dadd( 61.0026, -67.9961, -65.4098, 0.55 ) }
    dend_15 { pt3dadd( 61.5559, -68.8415, -65.7273, 0.55 ) }
    dend_15 { pt3dadd( 62.6558, -70.5278, -66.3491, 0.28 ) }
    dend_15 { pt3dadd( 63.4691, -71.5773, -66.8041, 0.55 ) }
    dend_15 { pt3dadd( 66.1856, -74.2296, -68.2757, 0.28 ) }
    dend_15 { pt3dadd( 67.2815, -75.1006, -68.8866, 0.55 ) }
    dend_15 { pt3dadd( 68.0475, -75.6561, -69.2926, 0.28 ) }
    dend_15 { pt3dadd( 68.835, -76.1663, -69.69, 0.55 ) }
    dend_15 { pt3dadd( 71.2934, -77.6041, -70.8642, 0.28 ) }
    dend_15 { pt3dadd( 73.1501, -78.7157, -71.7062, 0.55 ) }
    dend_15 { pt3dadd( 76.2732, -80.8053, -72.9189, 0.28 ) }
    dend_15 { pt3dadd( 77.2575, -81.4559, -73.2959, 0.55 ) }
    dend_15 { pt3dadd( 79.1329, -82.6498, -73.8688, 0.28 ) }
    dend_15 { pt3dadd( 79.7516, -83.0402, -74.0131, 0.55 ) }
    dend_15 { pt3dadd( 80.7265, -83.6591, -74.0814, 0.28 ) }
    dend_15 { pt3dadd( 81.5739, -84.1798, -74.0723, 0.55 ) }
    dend_15 { pt3dadd( 83.8285, -85.4685, -73.8237, 0.28 ) }
    dend_15 { pt3dadd( 86.4156, -86.8404, -73.4978, 0.28 ) }
    dend_15 { pt3dadd( 87.707, -87.4727, -73.2444, 0.28 ) }
    dend_15 { pt3dadd( 89.0349, -88.0718, -73.0652, 0.55 ) }
    dend_15 { pt3dadd( 90.9868, -88.8586, -72.8115, 0.28 ) }
    dend_15 { pt3dadd( 91.8515, -89.195, -72.6812, 0.83 ) }
    dend_15 { pt3dadd( 94.0312, -90.0788, -72.2683, 0.28 ) }
    dend_15 { pt3dadd( 94.9891, -90.4856, -72.1398, 0.55 ) }
    dend_15 { pt3dadd( 99.2346, -92.4391, -71.76, 0.28 ) }
    dend_15 { pt3dadd( 101.398, -93.4465, -71.7311, 0.28 ) }
    dend_15 { pt3dadd( 102.995, -94.1823, -71.806, 0.55 ) }
    dend_15 { pt3dadd( 103.947, -94.633, -71.9461, 0.55 ) }
    dend_15 { pt3dadd( 106.507, -95.8677, -72.498, 0.28 ) }
    dend_15 { pt3dadd( 108.907, -97.1249, -73.1008, 0.55 ) }
    dend_15 { pt3dadd( 111.085, -98.3324, -73.6498, 0.28 ) }
    dend_15 { pt3dadd( 113.071, -99.4541, -74.2397, 0.55 ) }
    dend_15 { pt3dadd( 114.712, -100.363, -74.7186, 0.28 ) }
    dend_15 { pt3dadd( 116.055, -101.016, -75.046, 0.55 ) }
    dend_15 { pt3dadd( 119.288, -102.417, -75.7027, 0.28 ) }
    dend_15 { pt3dadd( 120.916, -103.124, -75.9748, 0.55 ) }
    dend_15 { pt3dadd( 123.344, -104.188, -76.302, 0.28 ) }
    dend_15 { pt3dadd( 125.33, -105.003, -76.528, 0.55 ) }
    dend_15 { pt3dadd( 130.0, -106.72, -77.064, 0.28 ) }
    dend_15 { pt3dadd( 131.935, -107.323, -77.3984, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.08626, -150.269, 99.5523, 0.55 ) }
    dend_9 { pt3dadd( 4.90582, -161.258, 104.331, 0.55 ) }
    dend_9 { pt3dadd( 6.19435, -173.074, 106.273, 0.55 ) }
    dend_9 { pt3dadd( 7.18943, -184.492, 109.923, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.08626, -150.269, 99.5523, 0.55 ) }
    dend_8 { pt3dadd( 5.73269, -157.319, 104.339, 0.55 ) }
    dend_8 { pt3dadd( 6.36647, -163.403, 110.45, 0.55 ) }
    dend_8 { pt3dadd( 7.12707, -168.062, 117.644, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.710541, -160.589, 105.577, 0.55 ) }
    dend_6 { pt3dadd( 1.61175, -170.816, 110.914, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.710541, -160.589, 105.577, 0.55 ) }
    dend_5 { pt3dadd( -0.275835, -169.455, 111.212, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.84223, -113.363, 9.52113, 0.83 ) }
    dend_25 { pt3dadd( 9.81126, -117.618, 10.3761, 0.83 ) }
    dend_25 { pt3dadd( 10.7191, -121.196, 11.3887, 0.83 ) }
    dend_25 { pt3dadd( 11.6216, -124.752, 12.3952, 0.83 ) }
    dend_25 { pt3dadd( 12.4786, -128.129, 13.351, 0.83 ) }
    dend_25 { pt3dadd( 13.7994, -133.334, 14.824, 0.83 ) }
    dend_25 { pt3dadd( 15.1106, -138.501, 16.2863, 0.83 ) }
    dend_25 { pt3dadd( 16.131, -141.907, 17.7418, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.84223, -113.363, 9.52113, 0.55 ) }
    dend_24 { pt3dadd( 9.94882, -114.917, 9.38551, 0.55 ) }
    dend_24 { pt3dadd( 10.7634, -116.138, 9.07867, 0.55 ) }
    dend_24 { pt3dadd( 11.311, -117.044, 8.77286, 0.55 ) }
    dend_24 { pt3dadd( 11.7755, -118.113, 8.313, 0.83 ) }
    dend_24 { pt3dadd( 12.2017, -119.333, 7.66323, 0.55 ) }
    dend_24 { pt3dadd( 12.6186, -120.526, 7.02767, 0.83 ) }
    dend_24 { pt3dadd( 12.9809, -121.825, 6.23653, 0.55 ) }
    dend_24 { pt3dadd( 13.178, -122.581, 5.71122, 0.83 ) }
    dend_24 { pt3dadd( 13.6864, -125.034, 3.84792, 0.55 ) }
    dend_24 { pt3dadd( 13.9152, -126.965, 2.29766, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -23.0944, -137.761, 62.0861, 0.55 ) }
    dend_20 { pt3dadd( -26.7934, -144.961, 66.1982, 0.55 ) }
    dend_20 { pt3dadd( -31.7545, -151.351, 70.2503, 0.55 ) }
    dend_20 { pt3dadd( -37.4227, -156.917, 74.5238, 0.55 ) }
    dend_20 { pt3dadd( -43.9097, -161.464, 78.7829, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -23.0944, -137.761, 62.0861, 0.55 ) }
    dend_19 { pt3dadd( -26.1293, -146.722, 69.8718, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.131, -141.907, 17.7418, 0.55 ) }
    dend_27 { pt3dadd( 16.297, -143.929, 18.3324, 0.55 ) }
    dend_27 { pt3dadd( 16.5789, -146.506, 19.15, 0.55 ) }
    dend_27 { pt3dadd( 16.8458, -148.94, 19.9086, 0.55 ) }
    dend_27 { pt3dadd( 17.0156, -150.671, 20.4219, 0.55 ) }
    dend_27 { pt3dadd( 17.2841, -153.764, 21.2908, 0.55 ) }
    dend_27 { pt3dadd( 18.1683, -162.463, 23.5132, 0.55 ) }
    dend_27 { pt3dadd( 18.5381, -165.42, 24.1414, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 18.8061, -167.509, 24.4809, 0.55 ) }
    dend_27 { pt3dadd( 19.1299, -169.902, 24.6799, 0.55 ) }
    dend_27 { pt3dadd( 19.3483, -171.759, 24.6729, 0.55 ) }
    dend_27 { pt3dadd( 19.9832, -176.103, 24.4795, 0.55 ) }
    dend_27 { pt3dadd( 20.3525, -179.403, 24.3299, 0.55 ) }
    dend_27 { pt3dadd( 20.6528, -181.567, 24.2933, 0.55 ) }
    dend_27 { pt3dadd( 21.415, -187.166, 24.4802, 0.55 ) }
    dend_27 { pt3dadd( 21.9058, -190.925, 24.7698, 0.55 ) }
    dend_27 { pt3dadd( 22.5648, -195.761, 25.4108, 0.55 ) }
    dend_27 { pt3dadd( 23.3882, -201.231, 26.553, 0.55 ) }
    dend_27 { pt3dadd( 24.1036, -204.87, 27.536, 0.55 ) }
    dend_27 { pt3dadd( 24.5788, -207.017, 28.173, 0.55 ) }
    dend_27 { pt3dadd( 24.9802, -208.997, 28.7553, 0.55 ) }
    dend_27 { pt3dadd( 25.5291, -211.509, 29.3746, 0.55 ) }
    dend_27 { pt3dadd( 26.7748, -217.58, 30.4622, 0.55 ) }
    dend_27 { pt3dadd( 27.3342, -219.931, 30.7954, 0.55 ) }
    dend_27 { pt3dadd( 27.895, -222.551, 31.15, 0.55 ) }
    dend_27 { pt3dadd( 28.7049, -226.486, 31.6629, 0.55 ) }
    dend_27 { pt3dadd( 29.1888, -229.515, 32.0885, 0.55 ) }
    dend_27 { pt3dadd( 29.4837, -232.398, 32.4593, 0.55 ) }
    dend_27 { pt3dadd( 29.6443, -235.15, 32.8157, 0.55 ) }
    dend_27 { pt3dadd( 29.7565, -237.835, 33.2027, 0.55 ) }
    dend_27 { pt3dadd( 29.8475, -239.747, 33.4592, 0.55 ) }
    dend_27 { pt3dadd( 30.014, -242.878, 33.772, 0.55 ) }
    dend_27 { pt3dadd( 30.1587, -246.65, 33.8668, 0.55 ) }
    dend_27 { pt3dadd( 30.2739, -248.485, 33.7766, 0.55 ) }
    dend_27 { pt3dadd( 30.391, -250.101, 33.5772, 0.55 ) }
    dend_27 { pt3dadd( 30.7469, -253.152, 33.0212, 0.55 ) }
    dend_27 { pt3dadd( 30.9527, -255.088, 32.6162, 0.55 ) }
    dend_27 { pt3dadd( 31.2336, -257.471, 32.205, 0.55 ) }
    dend_27 { pt3dadd( 31.3702, -259.144, 32.0167, 0.55 ) }
    dend_27 { pt3dadd( 31.6502, -263.49, 31.6956, 0.55 ) }
    dend_27 { pt3dadd( 31.7837, -266.738, 31.6855, 0.55 ) }
    dend_27 { pt3dadd( 31.9119, -271.753, 32.0764, 0.55 ) }
    dend_27 { pt3dadd( 32.0663, -274.977, 32.6284, 0.55 ) }
    dend_27 { pt3dadd( 32.2037, -278.358, 33.3172, 0.28 ) }
    dend_27 { pt3dadd( 32.2261, -279.716, 33.6499, 0.28 ) }
    dend_27 { pt3dadd( 32.2675, -283.001, 34.7544, 0.28 ) }
    dend_27 { pt3dadd( 32.2799, -286.027, 36.0147, 0.28 ) }
    dend_27 { pt3dadd( 32.6667, -290.003, 38.0868, 0.28 ) }
    dend_27 { pt3dadd( 34.6891, -298.997, 40.4387, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 16.131, -141.907, 17.7418, 0.55 ) }
    dend_26 { pt3dadd( 17.6051, -142.414, 18.2864, 0.55 ) }
    dend_26 { pt3dadd( 20.5995, -143.711, 19.6368, 0.55 ) }
    dend_26 { pt3dadd( 23.1662, -144.988, 20.9199, 0.28 ) }
    dend_26 { pt3dadd( 25.9056, -146.439, 22.3838, 0.55 ) }
    dend_26 { pt3dadd( 27.5186, -147.353, 23.4961, 0.28 ) }
    dend_26 { pt3dadd( 30.265, -148.986, 25.6973, 0.55 ) }
    dend_26 { pt3dadd( 31.3413, -149.841, 26.975, 0.28 ) }
    dend_26 { pt3dadd( 31.7125, -150.145, 27.5189, 0.28 ) }
    dend_26 { pt3dadd( 32.3527, -150.57, 28.4634, 0.55 ) }
    dend_26 { pt3dadd( 34.9253, -151.943, 31.8825, 0.28 ) }
    dend_26 { pt3dadd( 36.0383, -152.474, 33.2802, 0.55 ) }
    dend_26 { pt3dadd( 39.5524, -154.037, 37.0303, 0.28 ) }
    dend_26 { pt3dadd( 41.5123, -154.806, 38.9007, 0.28 ) }
    dend_26 { pt3dadd( 44.0047, -155.808, 41.0691, 0.55 ) }
    dend_26 { pt3dadd( 47.8185, -157.395, 43.9383, 0.28 ) }
    dend_26 { pt3dadd( 48.3513, -157.608, 44.2662, 0.55 ) }
    dend_26 { pt3dadd( 51.0221, -158.661, 45.6932, 0.28 ) }
    dend_26 { pt3dadd( 51.2709, -158.761, 45.7954, 0.55 ) }
    dend_26 { pt3dadd( 53.45, -159.95, 46.7828, 0.28 ) }
    dend_26 { pt3dadd( 54.472, -160.599, 47.3217, 0.55 ) }
    dend_26 { pt3dadd( 62.8644, -165.37, 51.7999, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -43.9097, -161.464, 78.7829, 0.55 ) }
    dend_22 { pt3dadd( -48.8754, -165.596, 85.3923, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -43.9097, -161.464, 78.7829, 0.55 ) }
    dend_21 { pt3dadd( -50.8628, -171.269, 81.7933, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 9
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 17
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 15
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 11
    dend_15 nseg = 9
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BP_b41e8e0c23_0_0


