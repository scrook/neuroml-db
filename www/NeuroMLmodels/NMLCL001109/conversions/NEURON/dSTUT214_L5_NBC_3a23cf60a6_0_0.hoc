// Cell: dSTUT214_L5_NBC_3a23cf60a6_0_0
/*
{
  "id" : "dSTUT214_L5_NBC_3a23cf60a6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -9.21367, -8.14, 3.62", "-1.55142, -9.21367, -8.14, 3.62", "-1.42907, -10.9537, -8.14, 3.62", "-1.32406, -12.447, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 3.90583, -3.81, 1.24", "6.99911, 4.08995, -3.37711, 1.24", "11.7309, 4.47743, -2.10223, 1.24", "16.1968, 4.84313, -0.898967, 1.24", "20.6514, 5.2079, 0.301225, 1.24", "29.8058, 5.95751, 2.76769, 1.24", "36.8585, 6.53504, 4.66791, 1.24", "39.8148, 6.68406, 5.5669, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 4.58984, -1.31, 0.68", "-8.57612, 4.55016, -1.29866, 0.68", "-10.5054, 4.57541, -1.24813, 0.68", "-13.6019, 4.89021, -1.2913, 0.68", "-15.8013, 5.31394, -1.37417, 0.68", "-17.1507, 5.70048, -1.44291, 0.68", "-19.4398, 6.45459, -1.54142, 0.68", "-21.7891, 7.37513, -1.69874, 0.68", "-24.7979, 8.79875, -1.95286, 0.68", "-26.8803, 9.98246, -2.20187, 0.68", "-29.8704, 11.8351, -2.74156, 0.68", "-32.5702, 13.6048, -3.44462, 0.68", "-34.3679, 14.8632, -4.07769, 0.68", "-36.0532, 16.1526, -4.8127, 0.68", "-37.2451, 17.1107, -5.38379, 0.68", "-39.505, 18.8812, -6.45556, 0.68", "-41.1736, 20.1764, -7.32011, 0.68", "-41.9422, 20.7878, -7.71244, 0.68", "-44.6851, 22.9001, -9.12289, 0.68", "-46.8669, 24.5426, -10.2862, 0.68", "-49.9586, 26.7945, -11.8216, 0.68", "-52.0495, 28.3119, -12.7156, 0.57", "-53.832, 29.5476, -13.3997, 0.57", "-55.9773, 30.9509, -14.2499, 0.57", "-56.4684, 31.2149, -14.4917, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -4.60616, -2.56, 1.47", "6.49298, -5.48303, -2.36698, 1.47", "10.2005, -7.76536, -1.86459, 1.47", "14.6946, -10.532, -1.2556, 1.47", "17.5362, -12.2813, -0.87054, 2.6", "17.9713, -12.5491, -0.811579, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31667", "-4.96601, 24.2182, 0.0, 2.31667", "-7.63332, 38.9791, 0.0, 2.31667" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.32406, -12.447, -8.14, 0.12", "-0.0816828, -12.4528, -8.42267, 0.12", "1.63215, -12.5552, -8.81168, 0.12", "2.52665, -12.6118, -9.01454, 0.45", "3.36684, -12.6518, -9.10053, 0.45", "6.55425, -12.7582, -9.44568, 0.45", "7.00523, -12.7772, -9.49659, 1.36", "8.58705, -12.8611, -9.67205, 1.02", "10.761, -12.9777, -9.88198, 0.45", "14.177, -13.1488, -9.81245, 0.45", "17.2765, -13.2473, -9.26494, 0.45", "18.1848, -13.2425, -9.05517, 1.7", "19.9929, -13.199, -8.09487, 0.68", "22.5292, -13.1382, -6.30613, 0.57", "26.507, -13.0533, -3.15816, 0.57", "29.4323, -12.9848, -0.587582, 0.57", "31.7738, -12.9132, 1.75926, 0.57", "40.4089, -12.5346, 11.2326, 0.45", "41.1226, -12.5027, 12.1297, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.32406, -12.447, -8.14, 2.26", "-1.60628, -14.7583, -8.08098, 2.26", "-1.88419, -17.0343, -8.02287, 2.26", "-2.28936, -20.3524, -7.93815, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "39.8148, 6.68406, 5.5669, 0.45", "43.2016, 7.05473, 4.54105, 0.45", "44.8576, 7.07943, 4.58627, 0.45", "45.732, 7.09809, 4.81148, 0.45", "46.8708, 7.18588, 5.2865, 0.45", "49.1084, 7.51088, 6.59775, 0.79", "51.6815, 8.04769, 8.34846, 0.79", "54.1222, 8.71251, 10.3033, 0.79", "55.8994, 9.33625, 11.8882, 0.79", "57.2757, 9.9746, 13.2538, 0.79", "59.2232, 11.2437, 15.5777, 0.79", "60.9362, 12.7932, 17.9251, 0.79", "61.6933, 13.6434, 18.9649, 0.68", "62.3395, 14.4583, 19.7944, 0.68", "63.7078, 16.2, 21.3922, 0.68", "66.5838, 19.8214, 24.737, 0.68", "67.5051, 21.0197, 25.8167, 0.68", "69.053, 22.9877, 27.5737, 0.68", "69.9413, 23.9967, 28.4777, 0.68", "70.7971, 24.7942, 29.2378, 0.57", "73.1016, 26.4561, 30.9061, 0.57", "74.3266, 26.9569, 31.718, 0.57", "76.4124, 26.7251, 33.9818, 0.57", "77.1461, 26.0066, 35.4654, 0.57", "78.1051, 24.5623, 37.956, 0.57", "78.4076, 23.9937, 38.8538, 0.57", "79.5628, 21.1762, 42.8377, 0.57", "80.785, 17.5276, 47.7883, 0.57", "81.5573, 14.5001, 51.8007, 0.57", "81.9034, 12.8415, 54.0688, 0.57", "81.9891, 12.4095, 54.7222, 0.57", "82.1396, 11.6645, 55.8915, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.8148, 6.68406, 5.5669, 0.79", "40.8057, 9.73297, 5.33401, 0.79", "41.3989, 11.9516, 5.28119, 0.79", "41.7057, 13.1314, 5.3012, 0.79", "42.7158, 15.8625, 5.40538, 0.79", "43.8815, 18.2885, 5.54132, 0.79", "44.9328, 20.2367, 5.69581, 0.79", "46.6014, 22.9377, 6.03807, 0.79", "47.8635, 24.8709, 6.27538, 0.79", "50.3775, 28.6268, 6.53141, 0.79", "52.0195, 31.0022, 6.34435, 0.79", "53.8003, 33.3346, 5.44736, 1.02", "54.9466, 34.7448, 4.69244, 1.02", "56.0242, 36.0377, 3.72089, 1.02", "57.4002, 37.8677, 1.89358, 1.02", "59.2188, 40.9435, -2.08993, 1.02", "61.0602, 44.1618, -7.48398, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "17.9713, -12.5491, -0.811579, 0.68", "19.0132, -14.2087, -1.12046, 0.68", "19.3874, -14.7247, -1.15089, 0.68", "21.4634, -17.4408, -1.16042, 0.68", "24.7223, -21.6413, -1.07079, 0.68", "26.8263, -24.3749, -1.13476, 0.68", "28.1291, -26.0663, -1.23161, 0.68", "32.1289, -30.9668, -1.05468, 0.68", "33.9772, -33.1266, -0.803489, 0.68", "34.5531, -33.7592, -0.680636, 0.68", "37.6837, -37.0266, 0.178907, 0.68", "39.9179, -39.1063, 0.793585, 0.68", "45.7042, -44.2784, 2.32973, 0.68", "48.4457, -46.6704, 3.00341, 0.68", "50.0833, -48.0285, 3.40073, 0.68", "52.3493, -49.8477, 3.93903, 0.68", "57.5995, -54.0956, 5.09219, 0.68", "59.6649, -55.896, 5.33214, 0.68", "60.5955, -56.7913, 5.33033, 0.68", "63.0218, -59.2458, 5.25229, 0.68", "64.4974, -60.8374, 5.1703, 0.68", "67.4399, -64.3479, 4.86201, 0.68", "69.2937, -67.0475, 4.62399, 0.68", "70.5623, -69.0073, 4.42178, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "17.9713, -12.5491, -0.811579, 1.24", "23.3704, -13.9786, -0.37603, 1.24", "26.1322, -14.7098, -0.153239, 1.24", "30.557, -15.8813, 0.203708, 1.24", "35.0352, -17.0669, 0.564959, 1.24", "46.9083, -20.2103, 1.52276, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "41.1226, -12.5027, 12.1297, 0.45", "43.0039, -14.0442, 15.4567, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "41.1226, -12.5027, 12.1297, 0.45", "45.8279, -10.7848, 10.0336, 0.45", "48.1376, -10.0391, 9.32434, 0.45", "51.3686, -9.07533, 8.54289, 0.45", "54.9614, -8.31479, 7.86644, 0.45", "56.8869, -8.2049, 7.62743, 0.45", "62.1618, -8.45135, 7.14165, 0.45", "62.6107, -8.52118, 7.15423, 0.45", "62.8094, -8.5765, 7.17065, 2.6", "66.668, -10.1105, 7.61137, 0.57", "71.413, -12.4972, 8.24516, 0.57", "72.7833, -13.2313, 8.38579, 0.57", "72.9017, -13.2931, 8.39043, 2.38", "76.8518, -15.0485, 8.44539, 0.34", "78.347, -15.5384, 8.40802, 0.34", "81.6554, -16.1163, 8.143, 0.45", "84.7894, -16.0591, 7.94155, 0.45", "88.1494, -15.5993, 8.00852, 0.45", "91.2968, -14.8852, 8.39482, 0.45", "94.7828, -13.8155, 9.21044, 0.45", "97.9341, -12.7288, 10.1552, 0.45", "104.899, -10.1517, 12.5522, 0.45", "110.287, -8.20078, 14.7396, 0.45", "115.592, -6.42946, 17.1206, 0.45", "120.69, -4.96479, 19.4685, 0.45", "122.209, -4.6168, 20.1642, 2.38", "124.879, -4.14507, 21.2643, 0.45", "130.158, -3.41918, 22.8877, 0.45", "132.386, -3.14942, 23.396, 0.45", "135.677, -2.7214, 23.9434, 0.45", "142.484, -1.67429, 25.0523, 0.45", "147.335, -0.833455, 25.8345, 0.45", "152.368, -0.0413558, 26.6416, 0.45", "155.489, 0.309808, 27.1167, 0.45", "158.515, 0.522048, 27.5551, 0.45", "164.325, 0.637733, 28.3139, 0.45", "169.028, 0.459039, 28.7495, 0.45", "175.022, -0.0156868, 29.2759, 0.45", "181.051, -0.780855, 29.7982, 0.45", "184.619, -1.35198, 30.0878, 0.45", "186.424, -1.74707, 30.2284, 0.45", "187.384, -2.02515, 30.2452, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.28936, -20.3524, -7.93815, 0.12", "-3.384, -19.5859, -7.39719, 0.12", "-3.58493, -19.4811, -7.235, 0.12", "-4.15487, -19.2441, -6.71238, 0.45", "-4.99411, -19.2625, -5.33487, 0.79", "-5.99472, -19.5494, -3.10384, 0.45", "-6.55024, -19.8387, -1.66083, 0.45", "-7.50912, -20.6463, 1.38198, 0.45", "-7.63966, -20.8286, 1.87167, 0.45", "-8.67749, -23.0711, 7.12362, 0.45", "-9.06647, -24.2671, 9.64086, 0.45", "-9.32753, -25.2338, 11.5488, 0.45", "-9.38998, -25.4702, 12.0335, 0.45", "-9.77684, -26.7406, 14.6871, 0.45", "-10.6923, -29.1853, 19.8566, 0.45", "-11.0453, -29.8469, 21.2003, 0.45", "-11.3472, -30.3194, 22.1295, 0.45", "-11.9983, -31.2249, 23.9446, 0.45", "-12.217, -31.5434, 24.6094, 0.45", "-13.5395, -33.4798, 28.6883, 0.45", "-14.0426, -34.5046, 30.4763, 0.45", "-14.5155, -35.7697, 32.5857, 0.45", "-14.6212, -36.2028, 33.3377, 0.45", "-14.9995, -38.3125, 36.8088, 0.45", "-15.0307, -38.5892, 37.2579, 0.45", "-15.0893, -40.2086, 40.0692, 0.45", "-15.0866, -40.5929, 40.7309, 0.45", "-15.1097, -42.4622, 43.7364, 2.38", "-15.1772, -43.9986, 46.2103, 0.68", "-15.2012, -44.6305, 47.2018, 0.68", "-15.288, -47.2897, 51.8258, 0.68", "-15.3245, -48.3783, 53.8848, 0.45", "-15.3639, -48.8889, 54.8378, 0.45", "-15.5711, -50.0807, 57.3206, 0.45", "-15.7098, -50.6607, 58.6898, 0.45", "-16.4321, -52.56, 63.3112, 0.45", "-16.9501, -53.5597, 65.9699, 0.45", "-17.5215, -54.4443, 68.6008, 0.45", "-19.2986, -56.8974, 75.9942, 0.91", "-19.3414, -56.9578, 76.1659, 3.05", "-19.8596, -57.7322, 78.2331, 0.45", "-20.927, -59.8324, 83.1776, 0.45", "-21.2091, -60.5535, 84.818, 0.45", "-21.5249, -61.6162, 87.1859, 2.15", "-22.4284, -65.6122, 94.6731, 0.57", "-22.5258, -66.1125, 95.6271, 0.57", "-22.9602, -68.7522, 100.698, 0.57", "-23.2674, -70.5098, 103.857, 0.57", "-23.3104, -70.722, 104.252, 1.7", "-23.5209, -71.5901, 105.901, 0.45", "-24.6776, -75.7249, 113.321, 0.45", "-25.2304, -77.4695, 116.466, 0.45", "-25.6687, -78.697, 118.595, 0.45", "-26.5435, -81.096, 122.624, 0.45", "-27.0492, -82.5128, 124.999, 0.45", "-27.4354, -83.5548, 126.752, 0.45", "-28.3919, -86.1057, 130.234, 0.45", "-28.5344, -86.4954, 130.78, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.28936, -20.3524, -7.93815, 1.7", "-1.94796, -22.6128, -6.46201, 1.7", "-1.84786, -23.3627, -6.06311, 1.58", "-1.54588, -25.6669, -5.08836, 1.36", "-1.29675, -27.568, -4.28417, 1.24", "-0.937869, -30.3065, -3.12576, 1.24", "-0.724498, -31.9347, -2.43701, 2.83", "-0.411607, -34.2324, -1.68732, 3.62", "-0.168781, -35.9818, -1.21053, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "61.0602, 44.1618, -7.48398, 0.57", "60.9956, 42.6443, -9.0325, 0.57", "60.9107, 40.6484, -11.0693, 0.57", "60.8623, 39.5112, -12.2297, 0.57", "60.7957, 37.9452, -13.8278, 0.57", "60.7088, 35.904, -15.9107, 0.57", "60.5603, 32.4127, -19.4735, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "61.0602, 44.1618, -7.48398, 1.02", "61.5997, 45.6582, -8.43695, 1.02", "62.8097, 49.014, -10.5739, 1.02", "63.4936, 50.9107, -11.7818, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "70.5623, -69.0073, 4.42178, 0.45", "73.1624, -72.7245, 3.70802, 0.45", "73.6976, -73.4942, 3.58266, 0.45", "74.4967, -74.6725, 3.45569, 0.45", "76.4441, -77.5131, 3.23229, 0.45", "77.2207, -78.6136, 3.0878, 0.45", "77.9447, -79.5814, 2.93567, 0.45", "79.316, -81.2483, 2.67705, 0.45", "81.8233, -84.0825, 2.17866, 0.45", "83.2437, -85.4458, 1.92963, 0.45", "86.0006, -87.6238, 1.36923, 0.45", "88.0575, -88.915, 1.03334, 0.45", "88.9881, -89.409, 1.02907, 0.45", "90.6844, -90.2436, 1.19012, 0.45", "94.2037, -91.9916, 1.75207, 0.45", "96.5398, -93.2626, 2.08416, 0.45", "100.066, -95.3227, 2.57077, 0.45", "107.521, -100.103, 3.39033, 0.45", "110.83, -102.444, 3.67259, 0.45", "113.225, -104.381, 3.79341, 0.45", "117.725, -108.715, 3.7616, 0.45", "118.579, -109.689, 3.70145, 0.45", "120.203, -112.042, 3.27596, 0.45", "121.016, -113.651, 2.83806, 0.45", "122.239, -116.752, 2.09507, 0.45", "123.026, -119.232, 1.64071, 0.45", "123.974, -122.577, 1.18108, 0.45", "124.838, -125.943, 0.717551, 0.45", "125.649, -129.492, 0.212342, 0.45", "125.986, -131.02, -0.00301683, 0.45", "126.529, -133.472, -0.313024, 0.45", "127.653, -138.036, -0.797296, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "70.5623, -69.0073, 4.42178, 0.57", "70.4972, -69.2695, 4.52876, 0.57", "70.1167, -70.5836, 5.52412, 0.57", "69.5954, -72.2007, 6.8665, 0.57", "69.2333, -73.1052, 7.76189, 0.57", "69.1611, -73.2642, 7.92323, 0.57", "68.737, -74.0653, 8.77944, 0.57", "68.0753, -75.0859, 9.98332, 0.57", "67.7291, -75.5127, 10.5451, 0.57", "67.0304, -76.2763, 11.7833, 0.45", "66.6713, -76.6516, 12.3763, 0.45", "66.1767, -77.1681, 13.1592, 0.45", "65.699, -77.6958, 13.9201, 0.45", "65.1488, -78.2942, 14.7724, 0.45", "64.0694, -79.5891, 16.6487, 0.45", "63.8498, -79.899, 17.0797, 0.45", "63.5562, -80.3702, 17.7307, 0.45", "62.8939, -81.5888, 19.3257, 0.45", "62.6679, -82.046, 19.874, 0.45", "61.8489, -83.7702, 21.6363, 0.45", "61.5978, -84.3435, 22.155, 0.45", "61.5474, -84.4741, 22.2662, 0.45", "61.4424, -84.8172, 22.562, 0.45", "61.1829, -85.7575, 23.3796, 0.45", "60.9944, -86.5316, 24.0718, 0.45", "60.6501, -88.0866, 25.5579, 0.45", "60.4295, -89.1527, 26.7446, 0.45", "60.0309, -91.0875, 29.0521, 0.45", "59.7939, -92.1566, 30.3861, 0.45", "59.6828, -92.6018, 30.9875, 0.45", "59.2671, -94.0849, 32.9879, 0.45", "58.7881, -95.4195, 34.6853, 0.45", "58.485, -96.1224, 35.5667, 0.45", "58.1647, -96.7858, 36.3348, 0.45", "57.5906, -98.0365, 37.6198, 0.45", "57.1041, -99.1164, 38.629, 0.45", "56.6619, -100.033, 39.4215, 0.45", "56.2749, -100.759, 40.1556, 0.45", "55.2982, -102.287, 42.0517, 0.45", "54.5703, -103.143, 43.3085, 0.45", "53.8385, -103.749, 44.3433, 0.45", "52.9237, -104.239, 45.3528, 0.45", "50.5297, -105.084, 47.4668, 0.45", "49.3636, -105.35, 48.3457, 0.45", "47.8445, -105.58, 49.2642, 0.45", "46.8198, -105.714, 49.8329, 0.45", "44.8537, -106.019, 50.8531, 0.45", "43.319, -106.333, 51.5965, 0.45", "40.9361, -106.939, 52.9607, 0.45", "39.2482, -107.441, 54.1646, 0.45", "38.1453, -107.813, 55.0082, 0.45", "35.6288, -108.747, 56.999, 0.45", "34.7532, -109.096, 57.7174, 0.45", "30.9951, -110.658, 60.7493, 0.45", "29.9705, -111.1, 61.5694, 0.45", "27.273, -112.298, 63.8939, 0.45", "26.5073, -112.647, 64.549, 0.45", "25.1889, -113.299, 65.6639, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "46.9083, -20.2103, 1.52276, 0.45", "48.8644, -23.4041, 2.41051, 0.45", "49.1742, -23.9075, 2.52704, 1.02", "52.4319, -29.0067, 3.54005, 0.79", "54.4432, -32.1374, 4.00432, 0.79", "55.602, -33.8868, 4.18467, 0.68", "55.8527, -34.2481, 4.2093, 0.68", "57.3794, -36.3262, 4.19242, 0.68", "58.4216, -37.7079, 4.10391, 0.68", "60.6043, -40.4463, 3.75428, 0.68", "62.8027, -43.2591, 3.35147, 0.68", "64.906, -45.9823, 2.92569, 0.68", "66.9004, -48.532, 2.50834, 0.68", "69.3975, -51.7287, 1.96038, 0.68", "72.5166, -55.6579, 1.0716, 0.68", "74.471, -58.069, 0.326359, 0.68", "75.6231, -59.4652, -0.208628, 0.68", "77.0851, -61.1799, -0.940013, 0.68", "79.5457, -63.9046, -2.19299, 0.68", "82.7709, -67.3057, -3.85153, 0.68", "86.5083, -71.0322, -5.69812, 0.68", "88.508, -72.9082, -6.58099, 0.68", "90.4907, -74.7183, -7.35629, 0.68", "91.7721, -75.8697, -7.78481, 0.68", "92.9388, -76.8688, -8.07786, 0.68", "94.5545, -78.3654, -8.27351, 0.68", "95.8404, -79.6455, -8.42184, 0.68", "97.5254, -81.6614, -8.77629, 0.68", "97.9864, -82.3462, -8.9652, 0.68", "99.0813, -84.2998, -9.5829, 0.68", "100.319, -86.8389, -10.55, 0.68", "101.234, -89.0189, -11.4774, 0.68", "102.063, -91.215, -12.4604, 0.68", "103.283, -94.7588, -14.0684, 0.68", "103.845, -96.4466, -14.8035, 0.68", "104.628, -98.7441, -15.7172, 0.68", "105.31, -100.508, -16.3547, 0.68", "106.244, -102.666, -16.9629, 0.68", "106.984, -104.251, -17.3708, 0.68", "107.344, -104.976, -17.527, 0.68", "108.458, -107.082, -17.9367, 0.45", "110.044, -110.102, -18.4597, 0.45", "111.88, -113.597, -19.0863, 0.45", "113.317, -116.383, -19.7125, 0.45", "114.312, -118.354, -20.221, 0.45", "115.469, -120.663, -20.867, 0.45", "117.428, -124.512, -22.0754, 0.45", "118.455, -126.555, -22.753, 0.45", "120.188, -130.076, -23.9863, 0.45", "121.79, -133.26, -25.1362, 0.45", "122.768, -135.197, -25.8884, 0.45", "123.579, -136.743, -26.5461, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "46.9083, -20.2103, 1.52276, 0.68", "49.4606, -18.6304, 4.11704, 0.68", "52.5533, -16.5168, 6.90867, 0.68", "54.8291, -14.9515, 8.43855, 0.68", "56.3917, -13.8914, 9.20627, 0.68", "57.4314, -13.1811, 9.49739, 0.68", "59.9396, -11.5117, 9.60177, 0.68", "61.6179, -10.4165, 9.23376, 0.68", "64.5765, -8.57438, 8.1172, 0.57", "66.9301, -7.16848, 7.03105, 0.57", "70.3517, -5.03915, 5.33307, 0.57", "74.2902, -2.52368, 3.3293, 0.57", "76.484, -1.07013, 2.19566, 0.57", "77.51, -0.32488, 1.62909, 0.57", "80.6852, 2.22993, -0.0648796, 0.57", "84.8586, 5.7806, -2.18268, 0.57", "88.0954, 8.6655, -3.65159, 0.57", "89.2847, 9.81698, -4.19018, 0.57", "91.9576, 12.5826, -5.51902, 0.57", "94.4352, 15.2169, -6.79893, 0.57", "95.5069, 16.4188, -7.35635, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "43.0039, -14.0442, 15.4567, 0.45", "42.3957, -17.9677, 17.001, 0.45", "42.1908, -19.228, 17.4386, 0.45", "41.956, -20.8451, 18.1458, 0.45", "41.7418, -22.4699, 19.004, 0.45", "41.5844, -23.6737, 19.7092, 0.45", "41.3164, -25.9633, 21.1063, 0.45", "41.2481, -26.831, 21.65, 0.45", "41.1198, -29.4319, 23.4122, 0.45", "41.099, -30.7358, 24.4702, 0.45", "41.0993, -31.7387, 25.4498, 0.45", "41.0729, -32.2388, 25.9965, 0.45", "40.995, -32.8249, 26.682, 0.45", "40.8015, -33.5455, 27.4272, 0.45", "40.1685, -35.6046, 29.0724, 0.45", "40.027, -36.0668, 29.374, 0.45", "39.6327, -37.5418, 30.1548, 0.45", "39.3608, -38.4379, 30.3529, 0.45", "39.0071, -39.687, 30.2921, 0.45", "38.5146, -41.9934, 29.6757, 0.45", "38.309, -43.5434, 29.008, 0.45", "38.1821, -44.9151, 28.3147, 0.45", "38.0434, -48.9264, 25.8709, 0.45", "38.0371, -49.6905, 25.3319, 1.02", "38.0218, -50.4687, 24.6735, 0.57", "37.8707, -51.4025, 23.6919, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "43.0039, -14.0442, 15.4567, 0.45", "44.5026, -14.2943, 15.1767, 0.45", "46.0456, -14.5517, 14.8883, 0.45", "48.1903, -14.9096, 14.4875, 0.45", "50.0051, -15.2124, 14.1484, 0.45", "50.9466, -15.3695, 13.9725, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.168781, -35.9818, -1.21053, 0.45", "-0.759587, -37.4643, 0.245486, 0.45", "-0.999118, -38.1506, 0.861948, 0.79", "-3.33025, -44.8297, 6.8614, 1.24", "-4.33638, -47.7125, 9.45083, 1.24", "-5.18629, -50.1477, 11.6382, 1.24", "-6.16373, -52.9482, 14.1537, 1.24", "-6.52017, -53.9647, 15.0837, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.168781, -35.9818, -1.21053, 0.91", "0.97317, -37.0308, -0.586284, 0.91", "1.60223, -37.6086, -0.242408, 0.91", "2.69048, -38.6083, 0.352483, 0.91", "3.44231, -39.299, 0.763474, 0.91", "4.61739, -40.3784, 1.40583, 0.79", "4.85714, -40.5987, 1.53689, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "60.5603, 32.4127, -19.4735, 0.57", "61.537, 30.1479, -19.8149, 0.57", "63.5585, 25.3821, -19.7218, 0.57", "65.7094, 20.2304, -19.7955, 0.45", "68.79, 12.8462, -20.1012, 0.45", "72.1411, 4.68543, -20.3505, 0.45", "73.0578, 2.45296, -20.4187, 0.45", "77.407, -8.27952, -20.6149, 0.45", "80.7425, -16.8655, -20.6199, 0.45", "82.3165, -20.9017, -20.5536, 0.45", "84.1237, -25.3873, -20.5072, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "60.5603, 32.4127, -19.4735, 0.57", "58.3007, 32.308, -21.2458, 0.57", "56.8607, 31.6658, -21.8876, 0.68", "55.6506, 30.9487, -22.4799, 0.68", "54.4396, 30.2311, -23.0726, 0.68", "52.5209, 29.0941, -24.0117, 0.68", "50.685, 28.0061, -24.9102, 0.68", "48.48, 26.9135, -25.9677, 0.68", "46.2067, 25.9334, -26.927, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "63.4936, 50.9107, -11.7818, 0.68", "64.2983, 51.1665, -10.542, 0.68", "64.9838, 51.3844, -9.48603, 0.68", "66.1298, 51.7488, -7.72044, 0.68", "68.4446, 52.4848, -4.1542, 0.68", "69.7401, 52.8967, -2.15838, 0.68", "71.4788, 53.4494, 0.52023, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "63.4936, 50.9107, -11.7818, 0.79", "65.522, 51.5614, -12.0629, 0.79", "68.7491, 52.5968, -12.5101, 0.79", "70.8394, 53.2674, -12.7998, 0.79", "73.1709, 54.0153, -13.123, 0.79", "74.4945, 54.44, -13.3064, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "123.579, -136.743, -26.5461, 0.57", "125.183, -140.055, -26.5242, 0.57", "127.65, -145.005, -26.3564, 0.57", "128.882, -147.387, -26.2689, 0.57", "132.133, -153.474, -26.0605, 0.57", "135.316, -159.323, -25.8166, 0.57", "137.882, -164.038, -25.6199, 0.57", "139.407, -166.731, -25.3899, 0.57", "140.797, -169.138, -25.1206, 0.57", "142.132, -171.375, -24.8742, 0.57", "143.795, -173.911, -24.7028, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "123.579, -136.743, -26.5461, 0.34", "126.328, -138.942, -25.9134, 0.34", "128.307, -140.65, -25.2139, 0.34", "129.155, -141.415, -24.8966, 0.34", "132.948, -145.031, -23.8337, 0.34", "135.965, -148.043, -23.1956, 0.57", "140.013, -152.178, -22.4382, 0.57", "142.687, -155.079, -21.965, 0.57", "145.046, -157.696, -21.7388, 0.57", "149.707, -162.967, -21.6362, 0.57", "152.356, -165.97, -21.7843, 0.57", "154.981, -168.89, -22.2126, 0.57", "158.478, -172.599, -23.1184, 0.57", "163.542, -177.816, -24.6471, 0.57", "167.799, -182.122, -25.9445, 0.57", "170.591, -184.849, -26.649, 0.57", "175.471, -189.445, -27.7785, 0.57", "176.894, -190.728, -28.0803, 0.57", "180.06, -193.44, -28.5808, 0.57", "182.454, -195.374, -28.6952, 0.57", "187.091, -198.774, -28.5581, 0.57", "188.56, -199.776, -28.3792, 0.57", "191.029, -201.369, -27.5332, 0.57", "192.776, -202.421, -26.801, 0.57", "194.553, -203.419, -25.9024, 0.57", "195.776, -204.086, -25.2512, 0.57", "198.713, -205.685, -23.6209, 0.57", "204.898, -209.159, -19.8267, 0.57", "206.566, -210.12, -18.6909, 0.57", "209.766, -212.012, -16.3553, 0.57", "213.003, -214.079, -13.8817, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "95.5069, 16.4188, -7.35635, 0.45", "98.3017, 18.4203, -12.0641, 0.45", "99.7194, 19.4469, -14.445, 0.45", "101.666, 21.1528, -18.0097, 0.45", "102.179, 21.6287, -18.877, 0.45", "102.434, 21.8649, -19.2656, 0.45", "104.852, 24.1538, -22.5532, 0.45", "105.164, 24.4241, -22.8674, 0.45", "107.07, 26.1048, -24.8058, 0.45", "108.513, 27.5565, -26.0951, 0.45", "109.3, 28.3946, -26.7767, 0.45", "111.191, 30.3846, -28.1955, 0.45", "112.91, 32.0252, -28.956, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "95.5069, 16.4188, -7.35635, 0.45", "96.1546, 16.5369, -7.31985, 0.45", "96.5713, 16.6129, -7.29636, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "50.9466, -15.3695, 13.9725, 0.45", "50.1027, -19.6635, 16.592, 0.45", "49.1718, -24.6561, 19.5596, 0.45", "48.645, -27.4265, 21.2481, 0.45", "48.0318, -30.4325, 23.028, 0.45", "47.2947, -33.9663, 25.0124, 0.45", "47.0222, -35.3263, 25.7101, 0.45", "46.6732, -37.0536, 26.4435, 0.45", "46.0163, -41.347, 28.0793, 0.45", "45.6936, -44.6504, 29.0199, 0.45", "45.5275, -47.5533, 29.5916, 0.45", "45.4614, -49.9413, 29.9678, 0.45", "45.5182, -52.1186, 30.3948, 0.45", "45.8571, -55.536, 31.2047, 0.45", "46.3211, -57.6787, 32.0756, 0.45", "46.9179, -59.5786, 33.1724, 0.45", "47.8944, -62.2742, 34.8754, 0.45", "49.0169, -65.0, 36.7239, 0.45", "49.7094, -66.478, 37.7357, 0.45", "52.1638, -71.6471, 40.599, 0.45", "53.8629, -75.0975, 42.1267, 0.45", "55.4207, -78.2137, 43.0789, 0.45", "56.7577, -81.1737, 43.4504, 0.45", "57.9986, -83.9825, 43.6166, 0.45", "60.243, -89.4693, 43.776, 0.45", "61.1476, -91.9541, 43.7771, 0.45", "61.8378, -93.8482, 44.1809, 0.45", "63.3336, -98.1478, 45.417, 0.45", "64.4621, -101.736, 46.6116, 0.45", "65.654, -105.676, 48.3505, 0.45", "66.2772, -107.657, 49.5957, 0.45", "68.4135, -115.151, 54.5831, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "50.9466, -15.3695, 13.9725, 0.45", "53.0544, -16.3781, 13.9315, 0.45", "54.2818, -17.1848, 13.8756, 0.45", "56.2685, -18.6912, 13.7371, 0.45", "58.0313, -20.1513, 13.5912, 0.45", "60.613, -22.4445, 13.3396, 0.45", "63.8666, -25.5267, 12.9897, 0.45", "67.6221, -29.5948, 12.5864, 0.45", "70.3838, -32.9672, 12.012, 0.45", "71.8486, -34.8758, 11.6706, 0.45", "74.4987, -38.5323, 10.9798, 0.45", "76.2058, -40.9878, 10.436, 0.45", "77.9322, -43.6396, 9.77112, 0.45", "81.2242, -49.4674, 8.03555, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-6.52017, -53.9647, 15.0837, 0.12", "-7.34955, -54.7206, 14.6497, 0.12", "-8.77038, -56.6719, 13.6342, 0.57", "-9.77368, -58.4351, 12.9135, 0.57", "-10.5423, -60.0218, 12.5141, 0.57", "-13.109, -65.0471, 11.059, 0.57", "-14.8457, -68.0235, 9.90408, 0.57", "-15.8644, -69.6982, 9.14055, 0.91", "-16.9478, -71.2155, 8.0305, 0.91", "-18.5386, -73.068, 6.18408, 0.91", "-21.4687, -75.3049, 2.54107, 0.68", "-23.9466, -76.1849, -0.749218, 0.68", "-25.1919, -76.4575, -2.43399, 0.68", "-29.3396, -77.0983, -8.36426, 0.68", "-30.3241, -77.1846, -9.84368, 0.68", "-32.6017, -77.2389, -13.4794, 0.68", "-36.4168, -77.1317, -19.8559, 0.68", "-37.8691, -77.0683, -22.429, 0.68", "-40.6575, -77.089, -27.5952, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.52017, -53.9647, 15.0837, 0.79", "-5.83158, -58.1217, 15.4234, 0.79", "-4.90365, -63.7237, 15.8811, 0.79", "-4.47519, -66.3103, 16.0925, 0.79", "-4.14467, -68.3057, 16.2556, 0.79", "-3.99001, -69.2394, 16.3318, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-6.52017, -53.9647, 15.0837, 0.57", "-5.07881, -54.738, 19.2532, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.85714, -40.5987, 1.53689, 1.13", "4.88134, -41.8798, 2.40218, 1.13", "5.02673, -43.8561, 3.62723, 0.91", "5.16449, -45.0497, 4.27323, 0.91", "5.43981, -47.0516, 5.25439, 0.91", "5.74854, -49.2458, 6.22315, 0.91", "5.98567, -51.214, 7.05911, 0.91", "6.12858, -52.5682, 7.55695, 0.91", "6.28609, -54.7913, 8.31934, 0.91", "6.31982, -55.7206, 8.62629, 1.92", "6.34751, -56.965, 9.006, 1.36", "6.34419, -58.8001, 9.58704, 1.02", "6.25857, -60.9704, 10.3517, 1.02", "6.16687, -62.8265, 11.06, 1.02", "6.134, -63.5874, 11.3646, 1.02", "6.11358, -64.4429, 11.7163, 0.68", "6.16701, -65.8109, 12.2337, 0.68", "6.26625, -66.5431, 12.4616, 1.02", "6.42563, -67.1672, 12.6165, 2.15", "6.81961, -68.2086, 12.815, 1.47", "7.55832, -69.8486, 13.1115, 1.13", "8.07762, -70.9707, 13.3049, 0.79", "8.43961, -71.7085, 13.4251, 0.57", "9.16566, -73.0653, 13.6782, 0.57", "9.8235, -74.2019, 13.9155, 0.57", "10.3973, -75.1362, 14.1199, 0.57", "10.9232, -76.0209, 14.2987, 0.57", "11.2617, -76.6717, 14.3887, 0.57", "11.8261, -77.8659, 14.4634, 0.57", "12.1078, -78.569, 14.5555, 0.57", "12.482, -79.6485, 14.7315, 2.83", "12.9297, -81.0597, 15.0469, 1.92", "13.5745, -83.0554, 15.5419, 1.02", "13.9047, -84.1821, 15.8441, 0.68", "14.7127, -86.9747, 16.6357, 0.68", "15.0246, -87.9444, 16.9256, 0.68", "15.5894, -89.5635, 17.4915, 0.68", "15.9329, -90.4576, 17.8351, 0.68", "16.4177, -91.5356, 18.2554, 0.68", "17.153, -92.9638, 18.7598, 0.68", "18.0912, -94.5142, 19.2523, 0.68", "19.4436, -96.5592, 19.9711, 0.68", "20.3042, -97.8132, 20.4287, 0.68", "21.3698, -99.3164, 20.9549, 0.57", "22.143, -100.391, 21.2928, 0.57", "22.8924, -101.456, 21.5059, 0.57", "23.6976, -102.585, 21.5616, 0.57", "24.5923, -103.772, 21.4038, 0.57", "25.783, -105.325, 21.0821, 0.57", "26.3191, -106.014, 20.8815, 1.47", "27.7471, -107.79, 20.2769, 0.68", "28.6213, -108.85, 19.9018, 0.68", "29.8259, -110.23, 19.4351, 0.68", "31.5525, -112.112, 18.8785, 0.68", "33.1513, -113.818, 18.5216, 0.68", "33.8819, -114.569, 18.4083, 0.68", "34.2919, -115.059, 18.4704, 0.68", "34.8073, -116.019, 18.8537, 0.57", "34.9679, -116.522, 19.1363, 0.57", "35.1218, -117.285, 19.6281, 0.57", "35.3567, -118.66, 20.4756, 0.57", "36.129, -123.465, 23.1451, 0.68", "36.6251, -126.334, 24.5171, 0.68", "36.8851, -127.693, 25.0415, 0.68", "37.0963, -128.63, 25.2835, 0.68", "37.9053, -131.156, 25.367, 0.68", "38.2495, -131.909, 25.2016, 0.68", "39.0793, -133.23, 24.5503, 2.04", "39.9092, -134.368, 23.8474, 0.79", "40.8092, -135.544, 23.1217, 0.79", "42.4527, -137.758, 21.9458, 0.79", "43.302, -138.988, 21.4892, 0.79", "44.0318, -140.145, 21.2256, 0.79", "44.7565, -141.492, 21.1462, 0.79", "45.3712, -142.74, 21.2583, 0.68", "46.1165, -144.417, 21.645, 0.68", "46.7191, -145.94, 22.1823, 0.68", "47.1554, -147.32, 22.9451, 0.68", "47.4321, -148.327, 23.6207, 0.68", "47.6692, -149.359, 24.4513, 0.68", "47.8064, -149.947, 24.9597, 1.58", "48.0505, -150.786, 25.6786, 1.58", "49.1703, -154.239, 28.5496, 0.68", "49.6081, -155.446, 29.5457, 0.68", "50.4801, -157.6, 31.2934, 0.68", "51.2751, -159.545, 32.8782, 0.68", "52.0021, -161.215, 34.2194, 0.68", "52.5909, -162.521, 35.2681, 0.68", "53.325, -163.956, 36.3568, 0.68", "53.7986, -164.902, 37.2107, 0.68", "54.6911, -166.569, 38.8552, 0.68", "55.0278, -167.104, 39.399, 0.68", "56.0432, -168.45, 40.7311, 2.38", "56.6237, -169.111, 41.2989, 1.92", "58.4747, -170.986, 42.7336, 0.57", "59.2523, -171.7, 43.1639, 0.57", "62.1289, -174.147, 44.3124, 0.57", "64.1657, -175.855, 45.0407, 0.57", "65.485, -176.93, 45.4422, 0.57", "67.1467, -178.284, 45.9574, 0.57", "68.7257, -179.548, 46.4519, 0.57", "69.7386, -180.415, 46.8957, 0.57", "70.4764, -181.113, 47.3797, 2.15", "71.0746, -181.677, 47.8135, 1.13", "71.9705, -182.544, 48.5212, 0.57", "72.8757, -183.406, 49.0444, 0.57", "73.285, -183.786, 49.2285, 0.57", "73.7957, -184.31, 49.4272, 0.57", "74.4565, -185.03, 49.6508, 0.57", "74.6167, -185.232, 49.7057, 2.38", "76.1481, -187.369, 50.2357, 0.45", "77.118, -188.827, 50.5892, 0.45", "78.1735, -190.474, 51.0022, 0.45", "78.8747, -191.641, 51.3426, 0.45", "80.0281, -193.787, 52.1128, 0.45", "80.3106, -194.377, 52.3542, 0.45", "81.3514, -197.065, 53.6308, 0.45", "82.008, -199.125, 54.6035, 0.45", "82.5118, -201.049, 55.4161, 0.45", "82.8286, -202.85, 56.1395, 0.45", "82.912, -203.703, 56.463, 0.45", "82.987, -205.08, 56.8988, 0.45", "83.0317, -206.889, 57.3132, 0.45", "83.2213, -208.749, 57.4553, 0.45", "83.3285, -209.22, 57.4307, 1.24", "83.7494, -210.387, 57.3151, 0.57", "84.4347, -211.812, 57.2099, 0.57", "85.5411, -213.651, 57.1522, 0.57", "86.6794, -215.338, 57.2074, 1.36", "87.6054, -216.689, 57.4375, 0.57", "88.6569, -218.171, 57.8295, 0.57", "90.0303, -220.068, 58.4952, 0.57", "91.0249, -221.485, 59.1881, 0.57", "91.7232, -222.503, 59.8052, 0.57", "93.1738, -224.715, 61.2151, 0.57", "94.5066, -226.866, 62.49, 0.57", "95.0341, -227.846, 63.022, 0.57", "95.9313, -229.726, 63.8581, 2.38", "96.1936, -230.327, 64.0627, 1.58", "97.2655, -233.095, 64.8788, 0.68", "97.8467, -234.801, 65.2716, 0.68", "98.3995, -236.923, 65.8391, 0.79", "98.8717, -238.914, 66.3882, 0.57", "99.2855, -240.83, 66.9014, 0.57", "99.819, -243.696, 67.7356, 0.57", "100.158, -245.858, 68.4268, 0.57", "100.485, -247.925, 69.0488, 0.57", "100.66, -248.923, 69.3236, 0.57", "100.945, -250.539, 69.7506, 0.57", "101.41, -252.943, 70.2564, 0.57", "101.794, -254.454, 70.4329, 0.57", "102.353, -256.227, 70.4781, 0.57", "102.818, -257.455, 70.3891, 0.57", "103.138, -258.211, 70.3022, 0.57", "103.779, -259.613, 70.1503, 0.57", "104.925, -261.954, 69.9406, 0.57", "105.848, -263.792, 69.9106, 1.13", "106.389, -264.855, 69.9797, 2.38", "106.579, -265.225, 70.0248, 2.38", "107.827, -267.659, 70.4923, 0.79", "108.549, -269.029, 70.7218, 0.79", "109.363, -270.679, 70.9826, 0.57", "110.013, -272.03, 71.1373, 0.57", "110.585, -273.29, 71.2117, 0.57", "111.08, -274.402, 71.209, 0.57", "112.372, -277.186, 71.0246, 0.57", "112.572, -277.653, 70.9986, 2.94", "113.483, -279.784, 70.8759, 0.68", "114.34, -281.827, 70.8386, 0.68", "115.033, -283.434, 70.9007, 0.68", "115.613, -284.738, 71.0177, 0.68", "116.552, -286.792, 71.3209, 0.68", "117.461, -288.726, 71.5809, 0.68", "118.14, -290.133, 71.7532, 0.68", "118.8, -291.463, 71.8878, 0.68", "120.034, -293.994, 72.1655, 0.68", "120.617, -295.187, 72.315, 0.68", "121.226, -296.409, 72.4985, 0.68", "122.677, -299.675, 73.1972, 0.68", "122.984, -300.422, 73.3823, 0.68", "123.889, -303.07, 74.1328, 0.57", "124.087, -303.776, 74.3509, 0.57", "124.2, -304.283, 74.5094, 2.49", "124.814, -307.653, 75.6425, 0.68", "124.937, -308.614, 75.9924, 0.68", "125.364, -311.993, 77.2723, 0.68", "125.519, -313.059, 77.6767, 0.68", "125.927, -315.198, 78.4877, 0.68", "126.458, -317.357, 79.306, 0.68", "127.101, -319.3, 80.0326, 0.68", "127.737, -320.948, 80.7389, 0.68", "128.838, -323.311, 81.8766, 0.68", "129.278, -324.202, 82.3639, 0.68", "129.59, -324.858, 82.7657, 2.72", "130.029, -325.87, 83.3948, 1.92", "130.72, -327.89, 84.6439, 0.91", "130.987, -329.209, 85.4798, 0.91", "131.078, -330.567, 86.3713, 0.68", "131.054, -332.072, 87.4174, 0.68", "130.932, -333.621, 88.587, 0.68", "130.699, -335.609, 90.1712, 0.68", "130.454, -337.003, 91.418, 0.68", "130.034, -338.921, 93.3417, 0.68", "129.654, -340.358, 95.053, 0.68", "129.143, -342.234, 97.5288, 0.68", "128.889, -343.052, 98.7712, 0.68", "128.423, -344.837, 101.556, 0.68", "128.224, -345.91, 103.201, 0.68", "127.901, -348.593, 107.154, 0.68", "127.823, -349.642, 108.605, 0.68", "127.783, -352.176, 111.855, 0.68", "127.844, -353.976, 113.981, 0.68", "127.919, -354.584, 114.604, 0.68", "128.003, -355.119, 115.107, 0.68", "128.277, -356.784, 116.449, 0.68", "128.359, -357.469, 117.029, 0.68", "128.562, -359.322, 118.513, 0.45", "128.554, -360.303, 119.49, 0.45", "128.528, -360.738, 119.938, 0.45", "128.475, -361.407, 120.644, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.85714, -40.5987, 1.53689, 0.79", "6.65039, -39.1007, 1.57619, 0.79", "8.21628, -37.7927, 1.61051, 0.57", "8.93255, -37.1944, 1.62621, 0.34", "9.7474, -36.5137, 1.64407, 0.34", "10.0933, -36.2248, 1.65165, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "84.1237, -25.3873, -20.5072, 0.45", "84.955, -27.3197, -21.9277, 0.45", "86.047, -29.6472, -23.8873, 0.45", "88.3491, -34.3857, -28.1511, 0.45", "90.0134, -37.2943, -31.5503, 0.45", "91.5406, -40.0357, -35.1609, 0.45", "91.924, -40.8149, -36.2242, 0.45", "93.1053, -43.4973, -40.026, 0.45", "94.4869, -46.9488, -45.0186, 0.45", "96.1745, -51.9183, -52.0945, 0.45", "97.0136, -54.8049, -56.2051, 0.45", "97.8866, -58.9218, -61.9819, 0.45", "98.3659, -62.9203, -67.3353, 0.45", "98.3769, -65.7686, -70.9193, 0.45", "97.8091, -69.7719, -75.7443, 0.45", "97.0442, -72.2017, -78.441, 0.45", "96.1928, -74.3391, -80.9428, 0.45", "94.721, -76.7405, -84.0296, 0.45", "93.1708, -78.3388, -86.3314, 0.45", "90.6306, -80.1855, -89.2489, 0.45", "87.0587, -82.1369, -92.5262, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "84.1237, -25.3873, -20.5072, 0.45", "87.0426, -29.4262, -19.9824, 0.45", "88.3565, -31.2443, -19.7461, 0.45", "90.1619, -33.7425, -19.4215, 0.45", "91.1062, -35.0492, -19.2517, 0.45", "93.1384, -37.8611, -18.8863, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "68.4135, -115.151, 54.5831, 0.57", "66.4133, -117.455, 56.8833, 0.57", "64.9143, -119.358, 58.7492, 0.57", "63.7099, -120.959, 60.2536, 0.57", "63.0052, -122.035, 61.154, 0.57", "61.9534, -123.936, 62.6066, 0.57", "60.7661, -126.746, 64.7758, 0.57", "60.2328, -128.557, 66.1736, 0.57", "59.9215, -129.916, 67.0887, 0.57", "59.5629, -132.239, 69.0434, 0.57", "59.1199, -135.429, 71.9086, 0.57", "58.5611, -139.05, 75.696, 0.57", "58.2963, -140.166, 77.0451, 0.57", "57.3893, -142.486, 80.8201, 0.57", "54.4019, -146.435, 90.5105, 0.57", "53.1905, -147.044, 93.2605, 0.57", "51.0808, -147.232, 96.6085, 0.57", "48.7513, -147.083, 99.4552, 0.57", "45.7885, -146.802, 103.054, 0.57", "43.2326, -146.576, 105.813, 0.57", "40.1693, -146.506, 108.816, 0.57", "37.6181, -146.682, 111.613, 0.57", "34.5022, -147.306, 115.25, 0.57", "29.9512, -149.07, 121.114, 0.57", "27.9747, -150.444, 124.44, 0.57", "26.2652, -152.198, 128.269, 0.57", "25.4728, -153.313, 130.767, 0.57", "25.1085, -153.933, 132.316, 0.57", "24.6125, -154.8, 134.523, 0.57", "22.6558, -157.624, 142.47, 0.57", "22.2278, -158.18, 144.123, 0.57", "21.5902, -158.912, 146.354, 0.57", "19.4913, -161.116, 153.386, 0.57", "18.542, -162.078, 156.208, 0.57", "15.5526, -164.964, 163.958, 0.57", "14.8788, -165.612, 165.521, 0.57", "12.2007, -168.211, 171.403, 0.57", "11.4291, -168.962, 172.999, 0.57", "9.60412, -170.667, 176.352, 0.57", "8.64263, -171.559, 177.973, 0.57", "4.32385, -175.659, 184.495, 0.57", "2.26603, -177.634, 187.387, 0.57", "-0.486378, -180.239, 190.563, 0.57", "-4.24838, -183.824, 194.347, 0.57", "-8.77263, -188.14, 198.357, 0.57", "-10.1016, -189.424, 199.262, 0.57", "-12.5306, -191.795, 200.356, 0.57", "-17.3978, -196.32, 200.77, 0.57", "-20.3062, -198.903, 200.159, 0.57", "-23.6712, -201.877, 198.926, 0.57", "-27.4069, -205.145, 197.247, 0.57", "-30.4443, -207.774, 195.72, 0.57", "-42.3365, -218.099, 188.853, 0.57", "-42.5421, -218.28, 188.72, 2.26", "-46.2653, -221.399, 185.618, 0.68", "-47.7684, -222.615, 184.001, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "68.4135, -115.151, 54.5831, 0.57", "69.9549, -117.28, 59.8672, 0.57", "71.0697, -118.811, 63.4715, 0.57", "71.3296, -119.148, 64.1666, 0.57", "72.0699, -120.107, 65.9425, 0.57", "73.5096, -121.957, 69.3826, 0.57", "77.0372, -126.269, 77.3384, 0.57", "77.7939, -127.121, 78.7733, 0.57", "79.4148, -128.877, 81.4786, 0.57", "80.0695, -129.551, 82.427, 0.57", "82.7627, -132.205, 86.0507, 0.57", "83.7213, -133.184, 87.0863, 0.57", "85.2141, -134.76, 88.1313, 0.57", "86.7032, -136.204, 89.2171, 0.57", "88.7739, -138.193, 90.8282, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "81.2242, -49.4674, 8.03555, 0.34", "80.5924, -51.3369, 6.73366, 0.34", "80.2499, -52.7936, 5.63007, 0.34", "79.9069, -54.3801, 4.4613, 0.45", "79.3397, -57.1099, 2.53436, 0.45", "78.8146, -59.6541, 0.679522, 0.45", "78.3533, -61.9664, -0.984, 0.45", "77.851, -64.911, -3.40304, 0.45", "77.7058, -66.1185, -4.41859, 0.45", "77.6261, -66.9831, -5.14632, 0.45", "77.4522, -69.2892, -7.0058, 0.45", "77.3538, -70.8775, -8.16935, 0.45", "77.0976, -75.2204, -11.1745, 0.45", "76.9774, -77.0226, -12.4273, 0.45", "76.9281, -78.1665, -13.2128, 0.45", "76.8261, -80.5294, -14.7062, 0.45", "76.7358, -83.0388, -16.3597, 0.45", "76.6415, -84.5176, -17.4931, 0.45", "76.3855, -87.04, -19.6306, 0.45", "76.2322, -88.2294, -20.7471, 0.45", "75.981, -89.8159, -22.493, 0.45", "75.2736, -93.4535, -26.927, 0.45", "74.941, -95.0287, -29.1665, 0.45", "74.7038, -96.2238, -30.9282, 0.45", "74.4514, -97.6888, -33.0671, 0.45", "73.9821, -100.618, -37.317, 0.23", "73.8809, -101.335, -38.3558, 0.23", "73.551, -103.993, -41.7383, 0.23", "73.4783, -105.04, -43.0204, 0.23", "73.3694, -107.436, -46.0776, 0.45", "73.3504, -108.208, -47.1055, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "81.2242, -49.4674, 8.03555, 0.45", "83.535, -52.1538, 7.87046, 0.45", "85.7664, -54.8213, 7.67683, 0.45", "87.5324, -57.0265, 7.50968, 0.45", "89.8109, -59.91, 7.4556, 0.45", "93.5791, -64.637, 7.47858, 0.45", "96.106, -67.8068, 7.49399, 0.45", "97.5321, -69.708, 7.47913, 0.45", "99.8401, -72.9659, 7.48981, 0.45", "102.175, -76.4047, 7.5187, 0.45", "104.307, -79.4219, 7.73955, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-40.6575, -77.089, -27.5952, 0.57", "-43.4923, -77.0124, -30.9577, 0.57", "-43.8973, -77.0015, -31.4381, 0.57", "-44.7762, -76.9778, -32.4806, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-40.6575, -77.089, -27.5952, 0.68", "-41.2834, -78.2472, -28.148, 0.68", "-42.3622, -79.8606, -29.313, 0.68", "-42.9496, -80.629, -29.9126, 0.68", "-43.4606, -81.2003, -30.3748, 0.68", "-44.7023, -82.4039, -31.5659, 0.68", "-45.2884, -82.9355, -32.1195, 0.68", "-47.1911, -84.5248, -33.9143, 0.68", "-47.8507, -85.0917, -34.4953, 0.68", "-48.6973, -85.8015, -35.1491, 0.68", "-50.4543, -87.2618, -36.3827, 0.68", "-51.8298, -88.3611, -37.1848, 0.68", "-54.0895, -90.1747, -38.366, 0.68", "-56.0284, -91.7346, -39.2559, 0.68", "-58.1309, -93.4229, -40.1523, 0.68", "-59.8071, -94.7856, -40.8186, 0.68", "-61.7827, -96.3555, -41.4738, 0.68", "-63.5712, -97.6702, -42.0478, 0.57", "-65.1598, -98.708, -42.5121, 0.57", "-67.1143, -99.9427, -43.1369, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-3.99001, -69.2394, 16.3318, 0.45", "-7.4215, -69.9023, 19.1527, 0.45", "-8.98387, -70.0216, 20.5151, 0.45", "-12.5924, -70.0535, 23.3358, 0.45", "-13.5602, -70.01, 24.1247, 0.45", "-14.9013, -69.8541, 25.2087, 0.45", "-15.7273, -69.7381, 26.2938, 0.45", "-16.5131, -69.5761, 27.8106, 0.45", "-17.1761, -69.3367, 29.4392, 0.45", "-17.9083, -68.935, 31.0763, 0.45", "-18.4273, -68.5844, 32.2012, 0.45", "-21.6273, -66.3347, 39.1879, 0.45", "-22.3397, -65.8992, 40.6346, 0.45", "-23.8236, -65.1364, 43.3362, 0.45", "-26.1981, -64.0547, 47.2543, 0.45", "-27.1528, -63.7585, 48.5668, 0.45", "-30.0564, -63.4877, 51.899, 0.45", "-31.4631, -63.6509, 53.0229, 0.45", "-32.2958, -63.9225, 53.6654, 0.34", "-33.2284, -64.4257, 54.3355, 0.34", "-35.8329, -66.09, 55.8166, 0.34", "-38.2193, -67.6287, 56.7939, 0.34", "-39.9905, -68.719, 57.2698, 0.34", "-42.093, -69.9137, 57.8534, 0.34", "-45.6276, -71.8099, 58.8946, 0.34", "-50.2154, -74.0664, 60.2976, 0.34", "-51.8012, -74.7057, 60.7561, 0.34", "-52.9089, -75.052, 61.1833, 0.34", "-55.9942, -75.8633, 62.6971, 0.34", "-58.0163, -76.3856, 64.0267, 0.34", "-59.5137, -76.7844, 65.368, 0.34", "-61.1047, -77.2563, 67.1506, 0.34", "-63.1206, -77.9397, 69.3083, 0.34", "-65.6168, -78.9019, 71.923, 0.34", "-68.4155, -80.1005, 74.6711, 0.34", "-71.2159, -81.389, 77.2908, 0.34", "-73.0018, -82.3049, 78.8391, 0.34", "-75.674, -83.8773, 80.991, 0.34", "-77.2024, -84.8166, 82.0424, 0.34", "-78.2728, -85.4721, 82.6744, 0.34", "-81.5162, -87.3852, 84.1141, 0.34", "-83.4435, -88.579, 84.8777, 0.34", "-85.9881, -90.1599, 85.9155, 0.34", "-86.958, -90.7392, 86.3593, 0.34", "-89.3412, -92.0503, 87.3254, 0.34", "-90.62, -92.7275, 87.8037, 0.34", "-93.1023, -94.003, 88.6245, 0.34", "-94.5666, -94.7348, 89.04, 0.34", "-96.1939, -95.5083, 89.4175, 0.34", "-99.1145, -96.8586, 90.034, 0.34", "-101.536, -97.9014, 90.4967, 0.34", "-104.057, -98.8497, 90.9201, 0.34", "-106.435, -99.5855, 91.2961, 0.34", "-108.244, -100.077, 91.6565, 0.34", "-110.011, -100.503, 92.028, 0.34", "-111.707, -100.826, 92.4183, 0.34", "-113.104, -100.977, 92.7801, 0.34", "-115.658, -100.989, 93.5567, 0.34", "-117.436, -100.831, 94.2214, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.99001, -69.2394, 16.3318, 2.72", "-4.17944, -73.827, 23.4694, 2.72", "-4.14219, -75.8202, 26.518, 1.47", "-4.03516, -77.6042, 28.932, 1.13", "-3.57534, -83.4865, 36.3514, 1.13", "-3.4917, -84.6918, 37.6479, 3.39", "-3.38202, -87.1683, 39.8676, 1.81", "-3.13917, -92.4688, 42.8222, 0.68", "-3.09349, -95.448, 43.9816, 0.68", "-3.17387, -97.07, 44.2614, 0.68", "-3.63263, -101.916, 44.2344, 0.68", "-4.11678, -105.215, 44.1256, 0.68", "-4.68601, -108.102, 43.8813, 0.68", "-5.35234, -111.345, 43.4141, 0.68", "-6.17069, -115.091, 43.0105, 0.68", "-6.65919, -117.421, 42.7517, 0.68", "-7.24738, -120.432, 42.5017, 0.68", "-7.71625, -123.111, 42.2543, 0.68", "-8.67917, -128.898, 41.8197, 0.68", "-8.88394, -130.233, 41.8323, 3.51", "-9.29722, -133.353, 42.0869, 1.7", "-9.69513, -135.747, 42.5368, 0.79", "-10.2743, -138.519, 43.3237, 0.79", "-11.4675, -143.626, 45.1745, 0.68", "-12.6285, -148.41, 47.1602, 0.79", "-12.9519, -149.848, 47.7452, 0.45", "-13.9183, -153.903, 50.3802, 0.45", "-14.2408, -155.381, 51.5963, 0.45", "-14.4329, -156.459, 52.6414, 0.68", "-14.8004, -158.976, 55.464, 0.68", "-14.9351, -160.276, 56.9761, 0.68", "-15.6348, -168.589, 66.8667, 2.38", "-15.7374, -169.969, 68.6028, 1.47", "-15.8028, -170.723, 69.5486, 0.79", "-16.0312, -173.617, 73.1197, 0.79", "-16.1702, -175.778, 75.631, 0.79", "-16.2344, -177.381, 77.199, 2.15", "-16.1509, -182.431, 80.5615, 0.79", "-15.9945, -185.47, 82.4168, 0.68", "-15.7826, -187.671, 83.4868, 0.68", "-15.4767, -189.703, 84.2011, 0.68", "-15.3473, -190.518, 84.4072, 0.68", "-14.9431, -193.016, 84.6473, 0.68", "-14.5405, -195.716, 84.5058, 0.68", "-14.2013, -200.508, 84.0424, 0.68", "-14.2302, -201.43, 83.916, 2.6", "-14.4081, -203.003, 83.6715, 2.26", "-15.4889, -208.178, 82.8135, 0.45", "-15.9994, -209.803, 82.5368, 0.45", "-16.9295, -212.224, 82.068, 0.45", "-18.4267, -215.711, 81.3678, 0.45", "-19.937, -219.004, 80.7796, 0.45", "-21.7096, -222.664, 80.2405, 0.45", "-23.6835, -226.539, 79.7883, 0.45", "-25.5838, -230.318, 79.3031, 2.38", "-26.0257, -231.229, 79.1804, 3.51", "-28.1822, -235.662, 78.5946, 0.57", "-29.1368, -237.629, 78.3252, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-5.07881, -54.738, 19.2532, 0.45", "-4.05503, -54.2439, 17.6773, 0.45", "-3.35884, -53.977, 16.8241, 0.45", "-2.29485, -53.696, 15.6493, 0.45", "0.676733, -53.2175, 12.7822, 0.45", "3.39649, -52.8724, 10.2938, 0.45", "6.02698, -52.5391, 7.92662, 0.45", "8.71273, -52.1465, 5.03789, 0.45", "11.0787, -51.775, 2.44986, 0.45", "12.9276, -51.4976, 0.464019, 0.45", "16.4274, -51.0204, -3.18275, 0.45", "18.8414, -50.6676, -5.70001, 0.45", "23.4147, -49.7589, -10.8489, 0.45", "24.9242, -49.3678, -13.0525, 0.45", "25.0775, -49.3109, -13.307, 0.45", "25.3081, -49.2014, -13.7893, 0.45", "26.2447, -48.8206, -15.8111, 0.45", "28.2701, -48.4067, -20.4467, 0.45", "29.4143, -48.3666, -22.7931, 0.45", "30.0136, -48.3936, -24.015, 0.45", "31.4325, -48.5814, -26.9157, 0.45", "32.3315, -48.7915, -28.709, 0.45", "34.5262, -49.4027, -32.9558, 0.45", "36.0439, -49.7427, -35.3638, 0.45", "36.6581, -49.8752, -36.2538, 0.45", "37.3707, -49.9847, -37.1928, 0.45", "38.2085, -50.002, -38.1148, 0.45", "39.4573, -49.8032, -39.2855, 0.45", "41.7679, -49.087, -40.7367, 0.45", "42.8093, -48.7406, -41.4726, 0.45", "45.8218, -47.7124, -43.7196, 0.45", "47.2146, -47.2285, -44.8454, 0.45", "48.4184, -46.8492, -45.8488, 0.45", "50.6976, -46.2537, -47.7472, 0.45", "56.1, -45.2201, -52.0808, 0.45", "56.7521, -45.1163, -52.6099, 0.45", "58.7526, -44.9239, -54.3147, 0.45", "60.1203, -44.8638, -55.5501, 0.45", "60.7429, -44.8678, -56.1331, 0.45", "62.9748, -44.9482, -58.1972, 0.45", "64.9021, -45.0008, -58.9408, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-47.7684, -222.615, 184.001, 0.57", "-48.6554, -223.465, 184.629, 0.57", "-51.2265, -225.59, 186.34, 0.57", "-53.4096, -227.198, 187.735, 0.45", "-55.2781, -228.492, 189.191, 0.45", "-56.6957, -229.432, 190.383, 0.45", "-57.9178, -230.232, 191.508, 0.45", "-59.3009, -231.07, 192.815, 0.45", "-60.7406, -231.799, 194.268, 0.45", "-64.478, -233.497, 198.356, 0.45", "-65.1462, -233.807, 199.166, 0.45", "-66.3001, -234.431, 200.734, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-47.7684, -222.615, 184.001, 0.57", "-48.231, -227.855, 185.958, 0.57", "-48.39, -229.641, 186.656, 0.57", "-48.5886, -231.888, 187.5, 0.57", "-48.8743, -234.919, 188.603, 0.57", "-49.0214, -237.003, 189.41, 0.57", "-49.0757, -238.058, 189.806, 0.57", "-49.0778, -238.25, 189.89, 2.04", "-49.4053, -240.901, 190.775, 0.57", "-49.6415, -241.805, 191.032, 0.57", "-50.2071, -243.091, 191.351, 1.92", "-51.7444, -246.301, 192.601, 0.68", "-52.4495, -247.699, 193.262, 0.68", "-54.4516, -251.341, 195.078, 0.57", "-55.6145, -253.814, 196.699, 0.57", "-56.9666, -257.389, 199.376, 0.57", "-58.4053, -262.877, 203.596, 0.57", "-58.5165, -263.725, 204.271, 0.57", "-58.5537, -265.577, 205.635, 0.45", "-57.6896, -272.938, 211.024, 0.45", "-57.49, -274.152, 211.865, 0.45", "-56.9042, -277.857, 214.29, 0.45", "-56.668, -280.671, 215.831, 0.45", "-56.4947, -282.966, 217.286, 0.45", "-56.475, -287.473, 220.391, 0.45", "-56.7043, -289.252, 221.713, 0.45", "-56.935, -290.747, 223.051, 0.45", "-57.0255, -291.266, 223.604, 0.45", "-57.6804, -295.113, 228.2, 0.11", "-58.0257, -297.232, 230.942, 0.23", "-58.611, -300.385, 234.831, 0.23", "-58.7661, -301.74, 236.588, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "104.307, -79.4219, 7.73955, 0.34", "106.645, -82.2309, 7.36307, 0.34", "109.461, -85.6121, 6.90987, 0.34", "112.225, -88.931, 6.46502, 0.34", "114.211, -91.3164, 6.14531, 0.34", "115.283, -92.6035, 5.97278, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "104.307, -79.4219, 7.73955, 0.45", "106.175, -78.0498, 7.98096, 0.45", "107.578, -76.9815, 8.09007, 0.45", "109.713, -75.3796, 8.23184, 0.45", "111.181, -74.2601, 8.36705, 0.45", "114.107, -72.0271, 8.6747, 0.45", "116.089, -70.585, 8.90377, 0.45", "117.624, -69.5579, 9.12334, 0.45", "119.732, -68.2061, 9.38988, 0.45", "122.178, -66.625, 9.62978, 0.45", "122.479, -66.4193, 9.64348, 1.58", "124.728, -64.8317, 9.73405, 0.34", "126.56, -63.5414, 9.6807, 0.34", "129.64, -61.2954, 9.32208, 0.34", "131.383, -59.9953, 8.95448, 0.34", "133.276, -58.8404, 8.3936, 0.34", "134.505, -58.1753, 7.92754, 0.34", "135.93, -57.5821, 7.34791, 0.34", "138.21, -57.0198, 6.38242, 0.34", "140.012, -56.849, 5.72134, 0.34", "145.036, -56.8001, 4.06597, 0.34", "147.727, -56.8554, 3.14509, 0.34", "150.543, -56.9611, 2.15272, 0.34", "154.889, -57.2534, 0.646981, 0.34", "157.526, -57.5418, -0.278392, 0.34", "160.367, -57.9009, -1.31906, 0.34", "163.173, -58.3156, -2.2347, 0.34", "165.955, -58.7492, -2.98416, 0.34", "167.224, -58.9108, -3.22749, 0.34", "168.737, -59.1295, -3.33918, 0.34", "170.48, -59.4249, -3.3642, 0.34", "171.827, -59.6598, -3.29613, 0.34", "173.383, -59.9159, -3.13446, 0.34", "178.794, -60.7176, -2.5434, 0.34", "181.339, -61.0287, -2.24834, 0.34", "183.897, -61.3161, -1.95061, 0.34", "186.267, -61.5876, -1.69174, 0.34", "190.206, -62.0236, -1.3583, 0.34", "193.301, -62.348, -1.11806, 0.34", "195.239, -62.5047, -0.985498, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-117.436, -100.831, 94.2214, 0.34", "-118.592, -101.252, 95.1154, 0.34", "-121.102, -102.37, 96.5731, 0.34", "-122.135, -102.879, 97.0311, 2.04", "-123.169, -103.416, 97.4325, 1.13", "-124.832, -104.401, 98.0587, 0.79", "-126.014, -105.121, 98.2974, 0.57", "-128.167, -106.416, 98.4425, 0.57", "-132.785, -109.134, 98.3567, 0.57", "-134.874, -110.291, 98.4394, 0.57", "-138.179, -112.022, 98.7364, 0.57", "-144.095, -114.948, 99.544, 0.57", "-147.415, -116.412, 100.056, 0.57", "-148.981, -117.026, 100.327, 0.57", "-155.371, -119.306, 101.617, 0.57", "-157.231, -119.937, 102.056, 0.57", "-158.933, -120.545, 102.587, 0.57", "-161.561, -121.63, 103.605, 0.57", "-164.209, -122.891, 104.721, 0.57", "-165.959, -123.818, 105.515, 0.57", "-168.087, -125.144, 106.499, 0.57", "-173.307, -128.651, 109.172, 0.57", "-176.009, -130.519, 110.643, 0.57", "-179.573, -133.049, 112.651, 0.57", "-182.352, -135.027, 114.217, 0.57", "-185.215, -136.988, 115.777, 0.57", "-187.157, -138.337, 116.843, 0.57", "-189.092, -139.666, 117.812, 0.57", "-191.494, -141.316, 119.029, 0.57", "-192.885, -142.241, 119.638, 0.57", "-194.465, -143.243, 120.315, 0.57", "-197.632, -145.191, 121.713, 0.57", "-200.654, -147.082, 122.88, 0.57", "-202.83, -148.448, 123.589, 0.57", "-205.581, -150.15, 124.323, 0.57", "-207.866, -151.58, 124.799, 0.57", "-209.434, -152.56, 125.032, 0.57", "-212.506, -154.375, 124.998, 0.57", "-214.861, -155.737, 124.758, 0.57", "-217.635, -157.231, 124.041, 0.57", "-220.087, -158.482, 122.997, 0.57", "-222.742, -159.749, 121.581, 0.57", "-227.025, -161.567, 118.882, 0.57", "-228.647, -162.194, 117.866, 0.57", "-234.308, -164.187, 114.378, 0.57", "-238.405, -165.532, 111.855, 0.57", "-239.757, -165.996, 111.071, 0.57", "-243.444, -167.462, 109.273, 0.57", "-247.408, -169.651, 108.414, 0.57", "-249.786, -171.373, 108.474, 0.57", "-250.586, -172.097, 108.745, 0.57", "-252.347, -173.83, 109.576, 0.57", "-253.364, -174.844, 110.05, 0.57", "-256.573, -178.291, 111.351, 0.57", "-258.742, -180.653, 111.706, 0.57", "-259.844, -181.828, 111.605, 0.45", "-260.868, -182.933, 111.331, 0.45", "-262.446, -184.755, 110.447, 0.45", "-264.324, -187.258, 108.538, 0.45", "-265.628, -189.277, 106.521, 0.45", "-267.465, -192.474, 103.066, 0.45", "-268.367, -194.164, 101.22, 0.45", "-269.565, -196.716, 98.6807, 0.45", "-270.773, -199.616, 96.1483, 0.45", "-271.733, -201.8, 94.6111, 0.45", "-272.122, -202.676, 94.1612, 0.45", "-272.871, -204.227, 93.6773, 0.45", "-274.607, -207.338, 93.0476, 0.45", "-275.919, -209.441, 92.9346, 0.45", "-277.858, -212.223, 93.0828, 0.45", "-279.716, -214.679, 93.6005, 0.45", "-281.622, -217.016, 94.3626, 0.45", "-282.899, -218.434, 95.082, 0.45", "-283.784, -219.345, 95.803, 0.45", "-284.678, -220.292, 96.8567, 0.45", "-287.524, -223.688, 100.854, 0.45", "-288.09, -224.399, 101.681, 0.45", "-288.944, -225.717, 103.419, 0.45", "-290.349, -228.321, 106.764, 0.45", "-291.44, -230.8, 109.751, 0.45", "-292.631, -234.137, 113.315, 0.45", "-293.214, -235.97, 114.897, 0.45", "-296.385, -244.98, 121.731, 0.45", "-297.287, -247.367, 123.236, 0.45", "-298.624, -250.494, 124.412, 0.45", "-300.673, -254.893, 125.201, 0.45", "-303.872, -261.586, 125.511, 0.45", "-306.526, -267.104, 125.103, 0.45", "-308.964, -272.022, 124.042, 0.45", "-314.399, -283.293, 121.122, 0.45", "-315.188, -284.967, 120.593, 0.45", "-316.976, -289.138, 119.1, 0.45", "-317.982, -291.862, 117.799, 0.45", "-319.174, -295.708, 115.82, 0.45", "-320.012, -298.668, 114.311, 0.45", "-320.482, -300.257, 113.731, 0.45", "-321.264, -302.477, 112.94, 0.45", "-324.608, -310.63, 110.569, 0.45", "-326.48, -314.958, 110.131, 0.45", "-327.247, -316.676, 110.298, 0.45", "-330.089, -322.762, 111.592, 0.45", "-331.499, -325.696, 112.51, 0.45", "-333.91, -330.21, 114.265, 0.45", "-336.762, -335.348, 117.1, 0.45", "-338.056, -337.622, 118.158, 0.45", "-339.646, -340.86, 119.178, 0.45", "-340.104, -342.341, 119.307, 0.45", "-340.942, -347.653, 118.767, 0.45", "-341.389, -353.912, 117.081, 0.45", "-341.266, -363.671, 113.104, 0.45", "-340.392, -370.223, 110.08, 0.45", "-339.328, -374.067, 108.182, 0.45", "-339.046, -374.778, 107.791, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-117.436, -100.831, 94.2214, 0.34", "-115.602, -99.9507, 95.4512, 0.34", "-114.288, -99.3209, 96.3326, 0.34", "-109.196, -96.8792, 99.7477, 0.34", "-107.792, -96.2057, 100.69, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-29.1368, -237.629, 78.3252, 0.57", "-30.637, -238.46, 78.9137, 0.57", "-33.0418, -240.033, 79.335, 0.57", "-34.3261, -241.009, 79.4233, 0.57", "-35.9978, -242.464, 79.1745, 0.57", "-37.5421, -243.948, 78.8289, 0.57", "-40.2892, -246.673, 78.1361, 0.57", "-41.7783, -248.253, 77.6393, 0.57", "-43.4454, -250.093, 76.9818, 0.57", "-46.4542, -253.428, 75.8191, 0.57", "-49.8388, -257.089, 74.5375, 0.57", "-52.1346, -259.518, 73.8159, 0.57", "-52.945, -260.345, 73.6325, 2.15", "-53.6862, -261.061, 73.5165, 1.36", "-55.2869, -262.487, 73.5053, 0.68", "-56.1867, -263.218, 73.6943, 0.68", "-57.2545, -264.01, 74.0797, 0.57", "-57.863, -264.443, 74.3866, 0.57", "-59.4652, -265.578, 75.2882, 0.57", "-61.2497, -266.81, 76.3323, 0.57", "-62.4286, -267.635, 77.0179, 0.57", "-63.8697, -268.729, 77.7354, 0.57", "-65.245, -269.822, 78.1843, 0.57", "-65.7788, -270.274, 78.2917, 0.57", "-66.5618, -270.988, 78.3396, 0.57", "-67.6133, -271.98, 78.3086, 0.57", "-70.7148, -274.902, 78.1035, 0.57", "-72.6576, -276.753, 77.8311, 0.57", "-74.2928, -278.324, 77.5496, 0.57", "-76.3512, -280.225, 77.1799, 0.57", "-79.0329, -282.615, 76.7874, 0.57", "-82.5555, -285.508, 76.3885, 0.57", "-84.0147, -286.621, 76.206, 1.7", "-85.3362, -287.588, 76.0396, 1.7", "-86.6291, -288.491, 75.7879, 0.68", "-88.9964, -290.046, 75.2327, 0.68", "-90.4633, -291.027, 74.8336, 0.68", "-92.7617, -292.632, 74.2031, 0.68", "-93.3874, -293.105, 74.0166, 1.7", "-94.363, -293.96, 73.6638, 1.7", "-95.0005, -294.602, 73.4021, 1.7", "-95.7289, -295.45, 73.076, 0.68", "-97.4137, -297.665, 72.3622, 0.68", "-99.0316, -299.937, 71.7699, 0.68", "-100.316, -301.849, 71.4018, 0.68", "-100.909, -302.795, 71.272, 0.68", "-102.252, -305.072, 71.0767, 0.68", "-103.478, -307.234, 71.0117, 0.68", "-104.066, -308.336, 71.0687, 0.68", "-105.457, -311.002, 71.4364, 0.68", "-105.853, -311.786, 71.5723, 0.68", "-106.324, -312.741, 71.7565, 1.02", "-106.796, -313.73, 71.9416, 0.45", "-107.439, -315.287, 72.1733, 0.45", "-107.613, -315.764, 72.2045, 0.45", "-108.117, -317.201, 72.2264, 0.45", "-108.717, -318.897, 72.263, 0.45", "-109.382, -320.835, 72.309, 0.45", "-110.126, -323.073, 72.3589, 0.45", "-110.778, -325.086, 72.4317, 0.45", "-111.806, -328.222, 72.5463, 0.45", "-112.1, -329.18, 72.5851, 0.45", "-112.431, -330.369, 72.6375, 1.47", "-112.543, -330.778, 72.6566, 1.47", "-113.085, -332.761, 72.665, 0.68", "-113.724, -335.136, 72.6201, 0.57", "-114.277, -337.278, 72.6155, 0.57", "-114.824, -339.286, 72.7209, 0.57", "-114.989, -339.857, 72.7724, 0.57", "-115.521, -341.618, 73.0777, 0.57", "-116.149, -343.567, 73.7237, 0.57", "-116.646, -345.258, 74.4935, 1.7", "-117.371, -347.955, 75.8477, 0.68", "-117.683, -349.306, 76.5595, 0.68", "-118.189, -351.815, 77.8648, 0.68", "-118.899, -355.496, 79.6484, 0.68", "-119.421, -358.052, 80.6829, 0.68", "-119.642, -359.021, 80.9868, 2.15", "-119.791, -359.616, 81.1262, 2.15", "-120.332, -361.606, 81.3755, 0.68", "-121.06, -363.892, 81.4927, 0.68", "-121.576, -365.354, 81.5625, 0.68", "-122.362, -367.339, 81.7663, 0.68", "-123.192, -369.461, 81.9765, 0.68", "-123.956, -371.544, 82.1753, 0.68", "-125.0, -374.803, 82.4794, 0.68", "-125.567, -376.946, 82.6719, 0.68", "-125.948, -378.586, 82.7626, 0.68", "-126.452, -381.067, 82.7871, 0.68", "-126.624, -382.058, 82.7528, 0.68", "-126.984, -384.586, 82.5478, 0.68", "-127.167, -386.211, 82.314, 0.68", "-127.4, -388.246, 82.0058, 0.68", "-127.679, -390.199, 81.784, 0.68", "-127.981, -391.77, 81.6939, 0.68", "-128.214, -392.775, 81.6344, 0.68", "-128.52, -393.875, 81.6339, 0.68", "-128.642, -394.274, 81.6595, 0.68", "-129.239, -396.133, 81.8713, 0.68", "-129.917, -398.274, 82.2084, 0.68", "-130.365, -399.829, 82.4878, 0.68", "-130.937, -402.005, 82.8838, 0.68", "-131.431, -404.088, 83.3201, 0.68", "-131.55, -404.645, 83.477, 0.68", "-131.818, -406.037, 83.9233, 0.57", "-132.048, -407.289, 84.3284, 0.57", "-132.47, -409.621, 85.0852, 0.57", "-132.826, -411.808, 85.8799, 0.57", "-133.251, -414.2, 86.8772, 0.57", "-133.693, -416.596, 87.8873, 0.57", "-134.131, -418.795, 88.7039, 0.57", "-134.434, -420.337, 89.1502, 1.47", "-135.04, -423.471, 89.8467, 0.45", "-135.347, -424.996, 90.0466, 0.45", "-135.931, -428.218, 90.2329, 0.45", "-136.316, -430.865, 90.4, 0.45", "-136.653, -433.934, 90.5538, 0.45", "-136.622, -436.424, 90.7212, 0.45", "-137.231, -435.699, 89.3674, 0.45", "-138.288, -433.438, 87.206, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-29.1368, -237.629, 78.3252, 0.57", "-30.2157, -239.815, 78.3991, 0.57", "-30.9343, -241.27, 78.4455, 0.57", "-31.9087, -243.317, 78.5057, 0.57", "-33.3808, -246.409, 78.5966, 0.57", "-35.1398, -250.103, 78.7053, 0.57", "-36.2303, -252.394, 78.7727, 2.15", "-37.2181, -254.406, 78.8109, 2.72", "-37.9567, -255.981, 78.8695, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "115.283, -92.6035, 5.97278, 0.45", "119.583, -92.3082, 5.85148, 0.45", "120.606, -92.2522, 5.90308, 0.45", "122.473, -92.0686, 6.10619, 0.45", "124.933, -91.7966, 6.42699, 0.45", "127.182, -91.5588, 6.72998, 0.45", "130.116, -91.1934, 7.13656, 0.45", "131.132, -91.0479, 7.34483, 0.45", "133.992, -90.4745, 7.88449, 0.45", "136.199, -89.8812, 8.26672, 0.45", "137.919, -89.2688, 8.52195, 0.45", "140.289, -88.1161, 8.69601, 0.45", "141.821, -87.1819, 8.69844, 0.45", "143.472, -86.0544, 8.64507, 0.45", "145.153, -84.802, 8.43449, 0.45", "147.006, -83.2762, 8.02064, 0.45", "149.595, -81.0002, 7.33139, 0.45", "150.646, -80.0522, 6.98583, 0.45", "151.762, -79.0426, 6.56174, 0.45", "154.506, -76.6588, 5.40294, 0.45", "155.69, -75.6866, 4.77107, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "115.283, -92.6035, 5.97278, 0.34", "115.659, -95.6097, 4.2099, 0.34", "115.714, -96.7693, 3.47735, 0.34", "115.719, -98.7151, 2.2204, 0.34", "115.671, -102.269, -0.0994253, 0.34", "115.475, -105.464, -2.38235, 0.34", "115.114, -108.774, -4.78814, 0.34", "114.264, -112.173, -7.27408, 0.34", "114.098, -112.612, -7.59715, 0.34", "113.966, -112.855, -7.78857, 1.58", "112.066, -115.601, -9.84717, 0.45", "111.161, -116.809, -10.8347, 0.45", "108.886, -119.815, -13.505, 0.45", "108.153, -120.862, -14.4488, 0.45", "106.412, -123.673, -16.9892, 0.45", "105.857, -124.699, -17.869, 0.45", "104.562, -127.663, -20.2296, 0.45", "104.058, -129.079, -21.4191, 0.45", "103.333, -131.888, -23.6558, 0.45", "102.929, -133.692, -25.0155, 0.45", "102.46, -136.151, -26.6817, 0.45", "101.812, -139.873, -29.2574, 0.45", "101.361, -142.548, -31.0135, 0.45", "100.825, -145.998, -33.2597, 0.45", "100.35, -148.833, -35.0027, 0.45", "99.94, -151.287, -36.5366, 0.45", "99.439, -154.101, -38.3195, 0.45", "98.9136, -156.685, -39.8746, 0.45", "98.4937, -158.281, -40.7616, 0.45", "97.6906, -160.772, -42.3756, 0.45", "97.3856, -161.668, -42.9696, 0.45", "96.4632, -164.175, -44.6714, 0.45", "95.8967, -165.665, -45.644, 0.45", "95.0896, -167.769, -47.0762, 0.45", "93.6331, -171.594, -50.146, 0.45", "92.852, -173.826, -52.1123, 0.45", "92.4494, -175.109, -53.2652, 0.45", "92.1932, -176.216, -54.2262, 0.45", "92.0294, -177.116, -55.045, 0.45", "91.4374, -180.96, -58.4357, 0.45", "91.1624, -182.776, -59.9285, 0.45", "91.0146, -183.844, -60.8528, 0.45", "90.775, -185.741, -62.4486, 0.45", "90.4095, -188.663, -65.4183, 0.45", "90.2463, -190.022, -66.8578, 0.45", "90.1371, -191.029, -67.8555, 0.45", "90.0073, -192.178, -68.9799, 0.45", "89.7384, -194.493, -71.2773, 0.45", "89.2261, -200.242, -75.8992, 0.45", "89.0815, -202.781, -77.2022, 0.45", "88.9569, -205.695, -78.1063, 0.45", "88.7195, -209.143, -78.3507, 0.45", "88.5465, -210.707, -78.16, 0.45", "87.023, -220.381, -75.3587, 0.45", "86.4498, -223.258, -74.1946, 0.45", "86.3223, -223.766, -73.9726, 0.45", "85.4111, -226.738, -72.74, 0.45", "84.6445, -229.016, -71.9791, 0.45", "83.7326, -231.496, -71.6178, 0.45", "83.5388, -231.974, -71.6956, 0.45", "82.9476, -233.497, -72.1866, 0.45", "82.1015, -235.902, -73.2133, 0.45", "81.5347, -237.729, -74.1525, 0.45", "80.7675, -240.471, -75.6642, 0.45", "80.0403, -243.384, -77.3169, 0.45", "79.048, -248.471, -80.0316, 0.45", "78.8049, -250.006, -80.8133, 0.45", "78.587, -251.552, -81.5817, 0.45", "78.3539, -253.361, -82.431, 0.45", "78.163, -255.409, -83.232, 0.45", "78.0181, -259.684, -84.6657, 0.45", "78.0642, -260.795, -84.8522, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-37.9567, -255.981, 78.8695, 0.45", "-39.9748, -258.262, 79.0049, 0.45", "-41.5507, -260.095, 79.1304, 0.45", "-42.9935, -261.792, 79.2549, 0.45", "-45.1318, -264.453, 79.4649, 0.45", "-46.3956, -265.998, 79.6125, 0.45", "-48.309, -268.346, 79.9351, 0.45", "-50.2339, -270.879, 80.3825, 0.45", "-50.7395, -271.543, 80.515, 1.47", "-52.6053, -273.905, 81.1033, 0.45", "-53.7816, -275.413, 81.5379, 0.45", "-54.92, -276.959, 82.1128, 0.45", "-55.6924, -278.124, 82.6013, 0.45", "-57.2133, -280.711, 83.779, 0.45", "-58.2433, -282.574, 84.6413, 0.79", "-59.1628, -284.362, 85.4583, 0.79", "-60.752, -287.8, 87.0377, 0.45", "-61.9314, -290.416, 88.2209, 0.45", "-63.3, -293.736, 89.7333, 0.45", "-63.7024, -294.861, 90.3086, 0.45", "-64.0624, -295.947, 90.8815, 1.92", "-64.6325, -297.97, 92.1473, 1.47", "-65.0449, -299.716, 93.3034, 0.57", "-65.3665, -301.392, 94.4724, 0.57", "-65.7784, -304.249, 96.6786, 0.57", "-66.0364, -306.486, 98.3803, 0.57", "-66.6317, -311.389, 101.961, 0.57", "-66.7681, -312.46, 102.66, 0.57", "-67.1165, -314.659, 103.899, 0.57", "-67.9532, -318.534, 105.552, 0.57", "-68.5301, -320.721, 106.142, 0.57", "-69.1786, -322.827, 106.307, 0.57", "-70.0887, -325.521, 106.299, 0.57", "-71.3859, -329.298, 106.471, 0.57", "-72.7759, -333.209, 106.785, 0.57", "-74.0338, -336.724, 107.062, 0.57", "-76.1358, -342.561, 107.662, 0.57", "-77.8828, -346.88, 108.005, 0.57", "-79.7171, -350.811, 108.253, 0.23", "-80.8489, -353.055, 108.434, 0.23", "-82.1588, -355.436, 108.673, 0.23", "-83.868, -358.398, 108.973, 0.23", "-86.22, -362.284, 109.39, 0.23", "-87.2643, -363.753, 109.226, 0.23", "-88.7685, -365.606, 108.88, 1.7", "-90.5861, -367.587, 108.669, 0.68", "-92.3577, -369.248, 108.665, 0.45", "-93.3774, -370.101, 108.861, 0.45", "-97.6473, -372.969, 110.621, 0.45", "-101.045, -374.613, 112.239, 0.45", "-103.42, -375.471, 113.411, 0.45", "-104.968, -375.954, 114.309, 0.45", "-106.5, -376.485, 115.143, 0.45", "-109.076, -377.835, 116.419, 0.45", "-109.432, -378.09, 116.579, 0.45", "-110.281, -378.788, 116.77, 1.92", "-112.356, -380.79, 117.038, 0.57", "-114.69, -383.372, 117.265, 0.57", "-116.744, -385.871, 117.235, 0.45", "-117.82, -387.293, 117.158, 0.45", "-119.949, -390.144, 117.024, 0.45", "-121.473, -392.269, 116.959, 0.57", "-122.365, -393.557, 116.92, 0.57", "-124.516, -396.767, 116.858, 0.57", "-127.452, -401.028, 116.705, 0.57", "-128.774, -402.962, 116.621, 0.57", "-131.686, -407.259, 116.419, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-37.9567, -255.981, 78.8695, 0.45", "-37.4935, -258.156, 79.0826, 0.45", "-37.2759, -259.104, 79.1635, 0.45", "-36.4858, -262.393, 79.7051, 0.45", "-35.782, -265.483, 80.3358, 0.45", "-35.2523, -268.008, 80.8099, 0.45", "-35.232, -268.102, 80.8238, 1.81", "-34.964, -269.301, 80.9762, 1.7", "-34.3096, -272.368, 81.3509, 0.68", "-33.9066, -274.123, 81.5252, 0.68", "-33.3339, -276.356, 81.8153, 0.68", "-32.5999, -279.021, 82.1721, 0.68", "-32.1121, -280.609, 82.3365, 0.68", "-31.3663, -282.744, 82.4883, 0.68", "-30.5199, -284.858, 82.5568, 0.68", "-29.4306, -287.315, 82.6634, 0.68", "-28.1815, -289.933, 82.8082, 0.68", "-26.6261, -293.068, 82.9283, 0.68", "-25.6352, -295.095, 82.8153, 0.68", "-24.6297, -297.192, 82.5303, 0.68", "-23.9521, -298.67, 82.2278, 0.68", "-23.1878, -300.522, 81.747, 0.68", "-21.7895, -304.205, 80.7233, 0.68", "-20.4319, -307.981, 79.686, 0.57", "-19.8847, -309.562, 79.2672, 0.57", "-19.1669, -311.681, 78.738, 0.57", "-18.2945, -314.185, 78.0683, 0.57", "-17.2859, -316.99, 77.3112, 0.57", "-16.0639, -320.242, 76.4891, 0.57", "-15.3096, -322.023, 76.1357, 0.57", "-14.7235, -323.358, 75.8674, 0.57", "-13.3466, -326.307, 75.4391, 0.57", "-12.9845, -327.004, 75.3639, 0.57", "-12.2174, -328.426, 75.2909, 0.57", "-11.0455, -330.57, 75.4781, 0.57", "-10.6909, -331.199, 75.5737, 2.6", "-9.45216, -333.402, 76.0012, 2.04", "-7.86106, -336.324, 76.3802, 0.57", "-7.20391, -337.543, 76.3869, 0.57", "-5.79948, -340.199, 76.7714, 0.57", "-4.82782, -342.119, 77.1854, 0.57", "-3.68557, -344.403, 77.8585, 0.57", "-1.93431, -348.028, 79.0563, 0.57", "-0.632199, -350.925, 80.1813, 0.57", "2.82837, -359.038, 82.8168, 0.57", "4.68188, -363.757, 84.0323, 0.57", "5.65889, -366.457, 84.6755, 0.57", "6.44259, -368.784, 85.1041, 0.57", "6.86669, -370.187, 85.281, 0.57", "8.43366, -376.238, 84.818, 0.57", "9.09129, -378.861, 83.9979, 0.57", "9.36018, -380.005, 83.5721, 0.57", "9.84114, -382.034, 82.7679, 0.45", "10.0904, -382.988, 82.4367, 0.45", "10.6948, -384.901, 82.0418, 0.45", "11.3884, -386.91, 82.0651, 0.45", "11.733, -387.848, 82.1077, 0.45", "12.1196, -388.91, 82.1833, 0.45", "12.4657, -389.892, 82.2542, 0.45", "13.2969, -392.249, 82.3918, 0.45", "13.8558, -393.896, 82.5124, 0.45", "14.4976, -395.894, 82.6561, 0.45", "15.3216, -398.376, 82.8121, 0.45", "16.0058, -400.502, 82.9098, 0.45", "16.2469, -401.316, 82.9434, 0.45", "16.8484, -403.431, 82.9866, 0.45", "17.8625, -407.049, 83.0796, 0.45", "18.6665, -409.96, 83.1716, 0.45", "19.4782, -412.996, 83.303, 0.45", "20.1939, -415.733, 83.471, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "155.69, -75.6866, 4.77107, 0.45", "156.68, -75.3448, 2.7334, 0.45", "157.556, -75.214, 1.1192, 0.45", "158.626, -75.1716, -0.623626, 0.45", "159.551, -75.1556, -2.21551, 0.45", "163.491, -75.1534, -9.75731, 0.45", "165.812, -75.2064, -14.4545, 0.45", "167.106, -75.1474, -17.5217, 0.45", "167.595, -75.1343, -18.8411, 0.45", "169.126, -75.2612, -23.2194, 0.45", "170.166, -75.4851, -26.1002, 0.45", "170.323, -75.5714, -26.4878, 0.45", "171.683, -76.4134, -29.5479, 0.45", "172.691, -76.9905, -31.7072, 0.45", "173.717, -77.7129, -33.5154, 0.45", "174.876, -78.5239, -35.0181, 0.34", "176.196, -79.417, -36.4361, 0.34", "177.043, -79.9934, -37.2593, 0.34", "177.711, -80.456, -37.8214, 0.34", "179.965, -81.9262, -39.5597, 0.34", "182.768, -83.8186, -41.8316, 0.34", "183.573, -84.4419, -42.4576, 0.34", "184.165, -84.8641, -43.0191, 0.34", "185.318, -85.6485, -44.2468, 0.34", "185.948, -86.0645, -44.9652, 0.34", "187.205, -86.8516, -46.4936, 0.34", "188.288, -87.6403, -47.7781, 0.34", "191.189, -89.5635, -51.4588, 0.34", "192.46, -90.3133, -53.1461, 0.34", "192.784, -90.4834, -53.6032, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "155.69, -75.6866, 4.77107, 0.45", "159.033, -76.1054, 4.83744, 0.45", "161.768, -76.6081, 4.52993, 0.45", "165.082, -77.3653, 4.00604, 0.45", "169.553, -78.5149, 2.52088, 0.45", "172.661, -79.505, 1.18114, 0.45", "177.193, -81.1623, -0.960043, 0.45", "181.732, -83.2596, -3.50505, 0.34", "183.648, -84.3081, -4.66284, 0.34", "190.4, -88.269, -9.17747, 0.34", "194.469, -90.6831, -12.0268, 0.34", "197.369, -92.4439, -13.9699, 0.34", "200.07, -94.1835, -15.671, 0.34", "203.691, -96.6169, -17.5877, 0.34", "207.658, -99.4329, -19.4583, 0.34", "210.708, -101.744, -20.534, 0.34", "213.613, -103.961, -21.512, 0.34", "216.213, -106.122, -22.2839, 0.34", "218.219, -107.941, -22.6649, 0.34", "220.196, -109.991, -22.747, 0.34", "222.3, -112.248, -22.75, 0.34", "224.937, -114.973, -22.7878, 0.34", "229.887, -119.774, -22.9715, 0.45", "234.036, -123.503, -23.0793, 0.45", "237.932, -126.851, -23.0087, 0.45", "242.65, -130.77, -22.8544, 0.45", "244.982, -132.519, -22.8339, 0.45", "247.727, -134.418, -22.9085, 0.45", "249.285, -135.396, -23.0717, 0.45", "256.069, -139.447, -24.1672, 0.45", "260.668, -142.189, -25.0066, 0.45", "265.084, -145.033, -25.7324, 0.45", "266.959, -146.253, -26.0788, 0.45", "273.22, -150.295, -27.1561, 0.45", "276.118, -152.251, -27.6027, 0.45", "280.002, -155.041, -28.0404, 0.45", "282.335, -156.843, -28.0771, 0.45", "283.954, -158.161, -28.0333, 0.45", "288.065, -161.528, -27.884, 0.45", "292.238, -165.081, -27.654, 0.45", "295.921, -168.158, -27.8029, 0.45", "299.902, -171.4, -28.3738, 0.45", "302.899, -173.663, -29.2243, 0.45", "306.064, -175.951, -30.5255, 0.45", "308.463, -177.602, -31.7959, 0.45", "313.233, -180.77, -34.627, 0.45", "315.861, -182.549, -36.2524, 0.45", "320.348, -185.713, -38.9526, 0.45", "324.52, -188.698, -41.2371, 0.45", "327.147, -190.548, -42.5702, 0.45", "329.546, -192.148, -43.8595, 0.45", "332.802, -194.342, -45.5825, 0.45", "334.703, -195.513, -46.637, 0.45", "335.703, -196.115, -47.2272, 0.45", "338.159, -197.502, -48.7633, 0.45", "344.568, -200.816, -52.9014, 0.45", "347.098, -202.028, -54.5974, 0.45", "350.632, -203.627, -57.0678, 0.45", "353.531, -204.927, -59.0881, 0.45", "354.631, -205.45, -59.8684, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "354.631, -205.45, -59.8684, 0.45", "354.249, -208.146, -61.7446, 0.45", "354.139, -209.888, -62.8482, 0.45", "354.163, -211.317, -63.9281, 0.45", "354.255, -211.961, -64.6352, 0.45", "354.57, -212.943, -65.8616, 0.45", "354.941, -213.775, -66.8918, 0.45", "355.759, -214.953, -68.3751, 0.45", "357.324, -216.877, -70.8308, 0.45", "359.445, -219.369, -74.017, 0.45", "360.542, -220.813, -75.6488, 0.45", "361.97, -222.907, -77.7209, 0.45", "362.711, -224.251, -78.8605, 0.45", "363.571, -226.249, -80.0546, 0.45", "364.48, -229.398, -80.8494, 0.45", "365.241, -233.127, -81.2595, 0.45", "365.536, -235.443, -81.2881, 0.45", "365.693, -237.948, -80.8645, 0.45", "365.877, -242.904, -79.4952, 0.45", "366.05, -249.685, -77.1029, 0.45", "366.101, -251.786, -76.3066, 0.45", "366.235, -254.905, -75.1284, 0.45", "366.486, -262.069, -72.2103, 0.45", "366.558, -264.145, -71.3376, 0.45", "366.61, -266.543, -70.4724, 0.45", "366.701, -270.261, -69.4213, 0.45", "366.777, -272.063, -68.8797, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "354.631, -205.45, -59.8684, 0.45", "356.085, -206.381, -59.8395, 0.45", "358.785, -207.939, -59.8322, 0.45", "361.664, -209.327, -59.8261, 0.45", "364.203, -210.501, -59.7889, 0.45", "366.963, -211.778, -59.7477, 0.45", "368.448, -212.451, -59.8367, 0.45", "371.753, -213.827, -60.3944, 0.45", "375.128, -215.111, -61.3107, 0.45", "378.849, -216.463, -62.6882, 0.45", "380.087, -216.909, -63.2063, 0.45", "385.084, -218.705, -65.3963, 0.45", "388.872, -220.153, -67.0643, 0.45", "391.029, -220.992, -67.9466, 0.45", "395.685, -222.734, -69.5919, 0.45", "397.763, -223.52, -70.0992, 0.45", "401.672, -225.098, -70.5899, 0.45", "406.713, -227.243, -70.5926, 0.45", "412.402, -229.944, -70.0339, 0.45", "416.551, -232.132, -69.2066, 0.45", "421.607, -234.869, -67.6853, 0.45", "424.19, -236.27, -66.7498, 0.45", "425.908, -237.139, -66.0295, 0.45", "430.374, -238.864, -64.1104, 0.45", "434.493, -240.045, -62.4427, 0.45", "439.843, -241.066, -60.5627, 0.45", "443.477, -241.384, -59.5478, 0.45", "449.299, -241.438, -58.1464, 0.45", "457.495, -240.884, -56.2834, 0.45", "459.663, -240.52, -55.8143, 0.45", "461.66, -240.011, -55.3916, 0.45", "464.832, -238.777, -54.5069, 0.45", "466.576, -237.659, -53.7849, 0.45", "468.379, -235.299, -52.4248, 0.45", "469.022, -233.652, -51.5162, 0.45", "469.545, -232.024, -50.6514, 0.45", "470.596, -228.519, -48.8489, 0.45", "471.256, -226.472, -47.8197, 0.45", "472.693, -223.066, -46.1591, 0.45", "474.159, -220.617, -44.7263, 0.45", "475.945, -218.436, -43.0931, 0.45", "477.391, -217.003, -41.8609, 0.45", "478.919, -215.922, -40.6489, 0.45", "480.974, -214.973, -39.1287, 0.45", "487.114, -214.275, -34.2852, 0.45", "487.963, -214.442, -33.4911, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "366.777, -272.063, -68.8797, 0.45", "367.287, -274.523, -69.6751, 0.45", "367.876, -276.629, -70.3265, 0.45", "368.602, -278.853, -70.9436, 0.45", "369.284, -280.865, -71.5066, 0.45", "370.471, -284.344, -72.1868, 0.45", "371.023, -286.046, -72.3279, 0.45", "371.791, -288.512, -72.2409, 0.45", "372.532, -290.897, -72.0403, 0.45", "373.665, -294.357, -71.5967, 0.45", "375.396, -299.368, -70.8641, 0.45", "377.27, -304.314, -70.1489, 0.45", "378.935, -308.6, -69.6492, 0.45", "380.003, -311.123, -69.4556, 0.45", "381.799, -314.958, -69.4264, 0.45", "383.046, -317.367, -69.5887, 0.45", "384.641, -320.269, -70.1922, 0.45", "386.225, -322.944, -70.9797, 0.45", "387.897, -325.687, -71.8834, 0.45", "389.369, -328.277, -72.6847, 0.45", "390.801, -331.004, -73.6775, 0.45", "392.561, -334.546, -74.9765, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "366.777, -272.063, -68.8797, 0.45", "368.75, -269.838, -68.908, 0.45", "369.722, -268.742, -68.922, 0.45", "370.819, -267.506, -68.9377, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "392.561, -334.546, -74.9765, 0.45", "391.9, -337.445, -74.4923, 0.45", "391.143, -340.895, -74.137, 0.45", "390.731, -342.9, -74.0236, 0.45", "390.504, -344.133, -73.9992, 0.45", "390.458, -344.408, -74.0044, 0.45", "390.006, -347.332, -74.1004, 0.45", "389.946, -348.025, -74.2305, 0.45", "389.921, -348.668, -74.4109, 0.45", "389.868, -349.341, -74.586, 0.45", "389.767, -350.25, -74.8733, 0.45", "389.613, -351.787, -75.4659, 0.45", "389.495, -353.145, -76.0347, 0.45", "389.332, -354.837, -76.6234, 0.45", "389.208, -355.821, -76.8785, 0.45", "389.034, -357.0, -77.1509, 0.45", "388.76, -358.685, -77.5157, 0.45", "388.452, -360.399, -77.4893, 0.45", "388.124, -362.037, -77.1999, 0.45", "387.847, -363.422, -76.84, 0.45", "387.578, -364.725, -76.3977, 0.45", "387.255, -366.133, -75.8751, 0.45", "385.874, -371.841, -73.8945, 0.45", "385.553, -373.255, -73.4979, 0.45", "385.37, -374.188, -73.3191, 0.45", "384.889, -377.074, -73.0357, 0.45", "384.7, -378.541, -73.0078, 0.45", "384.586, -380.259, -73.2889, 0.45", "384.579, -381.414, -73.819, 0.45", "384.638, -382.715, -74.4924, 0.45", "384.761, -383.876, -75.2304, 0.45", "384.942, -384.686, -75.9501, 0.45", "385.065, -385.09, -76.3028, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "392.561, -334.546, -74.9765, 0.45", "393.028, -335.972, -75.1095, 0.45", "393.974, -338.838, -75.4751, 0.45", "394.887, -342.09, -75.9742, 0.45", "395.1, -343.374, -76.1297, 0.45", "395.258, -345.382, -76.2761, 0.45", "395.314, -347.497, -76.3366, 0.45", "395.233, -348.968, -76.2691, 0.45", "395.016, -351.055, -76.0356, 0.45", "394.267, -356.279, -75.0401, 0.45", "393.74, -359.738, -74.2787, 0.45", "393.47, -361.792, -73.7897, 0.45", "393.121, -365.034, -72.924, 0.45", "393.08, -365.836, -72.7, 0.45", "393.177, -367.667, -72.0811, 0.45", "393.539, -369.48, -71.4903, 0.45", "394.236, -371.953, -70.7417, 0.45", "394.567, -372.883, -70.5002, 0.45", "395.659, -375.577, -69.9819, 0.45", "397.571, -379.862, -69.1834, 0.45", "398.679, -382.239, -68.7, 0.45", "400.291, -385.574, -67.9831, 0.45", "401.339, -387.818, -67.5114, 0.45", "403.453, -392.326, -66.5393, 0.45", "404.114, -393.704, -66.2415, 0.45", "405.596, -396.791, -65.6423, 0.45", "406.105, -398.007, -65.3486, 0.45", "407.371, -401.162, -64.5337, 0.45", "408.473, -404.258, -63.684, 0.45", "408.893, -405.793, -63.1239, 0.45", "409.297, -407.727, -62.2859, 0.45", "410.0, -411.509, -60.735, 0.45", "410.296, -413.349, -60.0215, 0.45", "410.603, -415.295, -59.2996, 0.45", "411.901, -423.22, -56.5749, 0.45", "412.923, -428.66, -54.8663, 0.45", "413.866, -433.105, -53.5901, 0.45", "414.19, -434.403, -53.2929, 0.45", "414.516, -435.801, -52.9565, 0.45", "414.922, -437.558, -52.4978, 0.45", "415.36, -439.444, -51.9129, 0.45", "415.726, -441.353, -51.1211, 0.45", "415.848, -442.114, -50.7393, 0.45", "416.858, -449.186, -46.9492, 0.45", "417.3, -452.529, -45.1493, 0.45", "418.167, -457.84, -42.324, 0.45", "418.305, -458.717, -41.8537, 0.45", "418.474, -459.569, -41.4096, 0.45", "418.827, -461.023, -40.7111, 0.45", "419.843, -464.284, -39.3975, 0.45", "420.849, -467.479, -38.2031, 0.45", "423.379, -475.669, -35.3173, 0.45", "424.412, -479.197, -34.0604, 0.45", "424.909, -480.887, -33.4399, 0.45", "425.335, -482.86, -32.4309, 0.45", "425.756, -485.582, -30.5924, 0.45", "426.053, -488.954, -27.8744, 0.45", "426.12, -490.292, -26.6955, 0.45", "426.087, -491.502, -25.607, 0.45", "425.495, -502.119, -16.2575, 0.45", "425.32, -505.044, -13.7773, 0.45", "425.166, -508.305, -11.1934, 0.45", "425.027, -510.243, -9.65557, 0.45", "424.67, -514.823, -6.12074, 0.45", "424.492, -517.087, -4.51603, 0.45", "424.395, -519.376, -3.17148, 0.45", "424.179, -523.576, -0.688257, 0.45", "423.571, -538.486, 8.85954, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_NBC_3a23cf60a6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -9.21367, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -9.21367, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.42907, -10.9537, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.32406, -12.447, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 3.90583, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 6.99911, 4.08995, -3.37711, 1.24 ) }
    dend_12 { pt3dadd( 11.7309, 4.47743, -2.10223, 1.24 ) }
    dend_12 { pt3dadd( 16.1968, 4.84313, -0.898967, 1.24 ) }
    dend_12 { pt3dadd( 20.6514, 5.2079, 0.301225, 1.24 ) }
    dend_12 { pt3dadd( 29.8058, 5.95751, 2.76769, 1.24 ) }
    dend_12 { pt3dadd( 36.8585, 6.53504, 4.66791, 1.24 ) }
    dend_12 { pt3dadd( 39.8148, 6.68406, 5.5669, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 4.58984, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.57612, 4.55016, -1.29866, 0.68 ) }
    dend_11 { pt3dadd( -10.5054, 4.57541, -1.24813, 0.68 ) }
    dend_11 { pt3dadd( -13.6019, 4.89021, -1.2913, 0.68 ) }
    dend_11 { pt3dadd( -15.8013, 5.31394, -1.37417, 0.68 ) }
    dend_11 { pt3dadd( -17.1507, 5.70048, -1.44291, 0.68 ) }
    dend_11 { pt3dadd( -19.4398, 6.45459, -1.54142, 0.68 ) }
    dend_11 { pt3dadd( -21.7891, 7.37513, -1.69874, 0.68 ) }
    dend_11 { pt3dadd( -24.7979, 8.79875, -1.95286, 0.68 ) }
    dend_11 { pt3dadd( -26.8803, 9.98246, -2.20187, 0.68 ) }
    dend_11 { pt3dadd( -29.8704, 11.8351, -2.74156, 0.68 ) }
    dend_11 { pt3dadd( -32.5702, 13.6048, -3.44462, 0.68 ) }
    dend_11 { pt3dadd( -34.3679, 14.8632, -4.07769, 0.68 ) }
    dend_11 { pt3dadd( -36.0532, 16.1526, -4.8127, 0.68 ) }
    dend_11 { pt3dadd( -37.2451, 17.1107, -5.38379, 0.68 ) }
    dend_11 { pt3dadd( -39.505, 18.8812, -6.45556, 0.68 ) }
    dend_11 { pt3dadd( -41.1736, 20.1764, -7.32011, 0.68 ) }
    dend_11 { pt3dadd( -41.9422, 20.7878, -7.71244, 0.68 ) }
    dend_11 { pt3dadd( -44.6851, 22.9001, -9.12289, 0.68 ) }
    dend_11 { pt3dadd( -46.8669, 24.5426, -10.2862, 0.68 ) }
    dend_11 { pt3dadd( -49.9586, 26.7945, -11.8216, 0.68 ) }
    dend_11 { pt3dadd( -52.0495, 28.3119, -12.7156, 0.57 ) }
    dend_11 { pt3dadd( -53.832, 29.5476, -13.3997, 0.57 ) }
    dend_11 { pt3dadd( -55.9773, 30.9509, -14.2499, 0.57 ) }
    dend_11 { pt3dadd( -56.4684, 31.2149, -14.4917, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -4.60616, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 6.49298, -5.48303, -2.36698, 1.47 ) }
    dend_0 { pt3dadd( 10.2005, -7.76536, -1.86459, 1.47 ) }
    dend_0 { pt3dadd( 14.6946, -10.532, -1.2556, 1.47 ) }
    dend_0 { pt3dadd( 17.5362, -12.2813, -0.87054, 2.6 ) }
    dend_0 { pt3dadd( 17.9713, -12.5491, -0.811579, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31667 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31667 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31667 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.32406, -12.447, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.0816828, -12.4528, -8.42267, 0.12 ) }
    dend_45 { pt3dadd( 1.63215, -12.5552, -8.81168, 0.12 ) }
    dend_45 { pt3dadd( 2.52665, -12.6118, -9.01454, 0.45 ) }
    dend_45 { pt3dadd( 3.36684, -12.6518, -9.10053, 0.45 ) }
    dend_45 { pt3dadd( 6.55425, -12.7582, -9.44568, 0.45 ) }
    dend_45 { pt3dadd( 7.00523, -12.7772, -9.49659, 1.36 ) }
    dend_45 { pt3dadd( 8.58705, -12.8611, -9.67205, 1.02 ) }
    dend_45 { pt3dadd( 10.761, -12.9777, -9.88198, 0.45 ) }
    dend_45 { pt3dadd( 14.177, -13.1488, -9.81245, 0.45 ) }
    dend_45 { pt3dadd( 17.2765, -13.2473, -9.26494, 0.45 ) }
    dend_45 { pt3dadd( 18.1848, -13.2425, -9.05517, 1.7 ) }
    dend_45 { pt3dadd( 19.9929, -13.199, -8.09487, 0.68 ) }
    dend_45 { pt3dadd( 22.5292, -13.1382, -6.30613, 0.57 ) }
    dend_45 { pt3dadd( 26.507, -13.0533, -3.15816, 0.57 ) }
    dend_45 { pt3dadd( 29.4323, -12.9848, -0.587582, 0.57 ) }
    dend_45 { pt3dadd( 31.7738, -12.9132, 1.75926, 0.57 ) }
    dend_45 { pt3dadd( 40.4089, -12.5346, 11.2326, 0.45 ) }
    dend_45 { pt3dadd( 41.1226, -12.5027, 12.1297, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.32406, -12.447, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -1.60628, -14.7583, -8.08098, 2.26 ) }
    dend_24 { pt3dadd( -1.88419, -17.0343, -8.02287, 2.26 ) }
    dend_24 { pt3dadd( -2.28936, -20.3524, -7.93815, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 39.8148, 6.68406, 5.5669, 0.45 ) }
    dend_22 { pt3dadd( 43.2016, 7.05473, 4.54105, 0.45 ) }
    dend_22 { pt3dadd( 44.8576, 7.07943, 4.58627, 0.45 ) }
    dend_22 { pt3dadd( 45.732, 7.09809, 4.81148, 0.45 ) }
    dend_22 { pt3dadd( 46.8708, 7.18588, 5.2865, 0.45 ) }
    dend_22 { pt3dadd( 49.1084, 7.51088, 6.59775, 0.79 ) }
    dend_22 { pt3dadd( 51.6815, 8.04769, 8.34846, 0.79 ) }
    dend_22 { pt3dadd( 54.1222, 8.71251, 10.3033, 0.79 ) }
    dend_22 { pt3dadd( 55.8994, 9.33625, 11.8882, 0.79 ) }
    dend_22 { pt3dadd( 57.2757, 9.9746, 13.2538, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 59.2232, 11.2437, 15.5777, 0.79 ) }
    dend_22 { pt3dadd( 60.9362, 12.7932, 17.9251, 0.79 ) }
    dend_22 { pt3dadd( 61.6933, 13.6434, 18.9649, 0.68 ) }
    dend_22 { pt3dadd( 62.3395, 14.4583, 19.7944, 0.68 ) }
    dend_22 { pt3dadd( 63.7078, 16.2, 21.3922, 0.68 ) }
    dend_22 { pt3dadd( 66.5838, 19.8214, 24.737, 0.68 ) }
    dend_22 { pt3dadd( 67.5051, 21.0197, 25.8167, 0.68 ) }
    dend_22 { pt3dadd( 69.053, 22.9877, 27.5737, 0.68 ) }
    dend_22 { pt3dadd( 69.9413, 23.9967, 28.4777, 0.68 ) }
    dend_22 { pt3dadd( 70.7971, 24.7942, 29.2378, 0.57 ) }
    dend_22 { pt3dadd( 73.1016, 26.4561, 30.9061, 0.57 ) }
    dend_22 { pt3dadd( 74.3266, 26.9569, 31.718, 0.57 ) }
    dend_22 { pt3dadd( 76.4124, 26.7251, 33.9818, 0.57 ) }
    dend_22 { pt3dadd( 77.1461, 26.0066, 35.4654, 0.57 ) }
    dend_22 { pt3dadd( 78.1051, 24.5623, 37.956, 0.57 ) }
    dend_22 { pt3dadd( 78.4076, 23.9937, 38.8538, 0.57 ) }
    dend_22 { pt3dadd( 79.5628, 21.1762, 42.8377, 0.57 ) }
    dend_22 { pt3dadd( 80.785, 17.5276, 47.7883, 0.57 ) }
    dend_22 { pt3dadd( 81.5573, 14.5001, 51.8007, 0.57 ) }
    dend_22 { pt3dadd( 81.9034, 12.8415, 54.0688, 0.57 ) }
    dend_22 { pt3dadd( 81.9891, 12.4095, 54.7222, 0.57 ) }
    dend_22 { pt3dadd( 82.1396, 11.6645, 55.8915, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.8148, 6.68406, 5.5669, 0.79 ) }
    dend_13 { pt3dadd( 40.8057, 9.73297, 5.33401, 0.79 ) }
    dend_13 { pt3dadd( 41.3989, 11.9516, 5.28119, 0.79 ) }
    dend_13 { pt3dadd( 41.7057, 13.1314, 5.3012, 0.79 ) }
    dend_13 { pt3dadd( 42.7158, 15.8625, 5.40538, 0.79 ) }
    dend_13 { pt3dadd( 43.8815, 18.2885, 5.54132, 0.79 ) }
    dend_13 { pt3dadd( 44.9328, 20.2367, 5.69581, 0.79 ) }
    dend_13 { pt3dadd( 46.6014, 22.9377, 6.03807, 0.79 ) }
    dend_13 { pt3dadd( 47.8635, 24.8709, 6.27538, 0.79 ) }
    dend_13 { pt3dadd( 50.3775, 28.6268, 6.53141, 0.79 ) }
    dend_13 { pt3dadd( 52.0195, 31.0022, 6.34435, 0.79 ) }
    dend_13 { pt3dadd( 53.8003, 33.3346, 5.44736, 1.02 ) }
    dend_13 { pt3dadd( 54.9466, 34.7448, 4.69244, 1.02 ) }
    dend_13 { pt3dadd( 56.0242, 36.0377, 3.72089, 1.02 ) }
    dend_13 { pt3dadd( 57.4002, 37.8677, 1.89358, 1.02 ) }
    dend_13 { pt3dadd( 59.2188, 40.9435, -2.08993, 1.02 ) }
    dend_13 { pt3dadd( 61.0602, 44.1618, -7.48398, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 17.9713, -12.5491, -0.811579, 0.68 ) }
    dend_8 { pt3dadd( 19.0132, -14.2087, -1.12046, 0.68 ) }
    dend_8 { pt3dadd( 19.3874, -14.7247, -1.15089, 0.68 ) }
    dend_8 { pt3dadd( 21.4634, -17.4408, -1.16042, 0.68 ) }
    dend_8 { pt3dadd( 24.7223, -21.6413, -1.07079, 0.68 ) }
    dend_8 { pt3dadd( 26.8263, -24.3749, -1.13476, 0.68 ) }
    dend_8 { pt3dadd( 28.1291, -26.0663, -1.23161, 0.68 ) }
    dend_8 { pt3dadd( 32.1289, -30.9668, -1.05468, 0.68 ) }
    dend_8 { pt3dadd( 33.9772, -33.1266, -0.803489, 0.68 ) }
    dend_8 { pt3dadd( 34.5531, -33.7592, -0.680636, 0.68 ) }
    dend_8 { pt3dadd( 37.6837, -37.0266, 0.178907, 0.68 ) }
    dend_8 { pt3dadd( 39.9179, -39.1063, 0.793585, 0.68 ) }
    dend_8 { pt3dadd( 45.7042, -44.2784, 2.32973, 0.68 ) }
    dend_8 { pt3dadd( 48.4457, -46.6704, 3.00341, 0.68 ) }
    dend_8 { pt3dadd( 50.0833, -48.0285, 3.40073, 0.68 ) }
    dend_8 { pt3dadd( 52.3493, -49.8477, 3.93903, 0.68 ) }
    dend_8 { pt3dadd( 57.5995, -54.0956, 5.09219, 0.68 ) }
    dend_8 { pt3dadd( 59.6649, -55.896, 5.33214, 0.68 ) }
    dend_8 { pt3dadd( 60.5955, -56.7913, 5.33033, 0.68 ) }
    dend_8 { pt3dadd( 63.0218, -59.2458, 5.25229, 0.68 ) }
    dend_8 { pt3dadd( 64.4974, -60.8374, 5.1703, 0.68 ) }
    dend_8 { pt3dadd( 67.4399, -64.3479, 4.86201, 0.68 ) }
    dend_8 { pt3dadd( 69.2937, -67.0475, 4.62399, 0.68 ) }
    dend_8 { pt3dadd( 70.5623, -69.0073, 4.42178, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 17.9713, -12.5491, -0.811579, 1.24 ) }
    dend_1 { pt3dadd( 23.3704, -13.9786, -0.37603, 1.24 ) }
    dend_1 { pt3dadd( 26.1322, -14.7098, -0.153239, 1.24 ) }
    dend_1 { pt3dadd( 30.557, -15.8813, 0.203708, 1.24 ) }
    dend_1 { pt3dadd( 35.0352, -17.0669, 0.564959, 1.24 ) }
    dend_1 { pt3dadd( 46.9083, -20.2103, 1.52276, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 41.1226, -12.5027, 12.1297, 0.45 ) }
    dend_47 { pt3dadd( 43.0039, -14.0442, 15.4567, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 41.1226, -12.5027, 12.1297, 0.45 ) }
    dend_46 { pt3dadd( 45.8279, -10.7848, 10.0336, 0.45 ) }
    dend_46 { pt3dadd( 48.1376, -10.0391, 9.32434, 0.45 ) }
    dend_46 { pt3dadd( 51.3686, -9.07533, 8.54289, 0.45 ) }
    dend_46 { pt3dadd( 54.9614, -8.31479, 7.86644, 0.45 ) }
    dend_46 { pt3dadd( 56.8869, -8.2049, 7.62743, 0.45 ) }
    dend_46 { pt3dadd( 62.1618, -8.45135, 7.14165, 0.45 ) }
    dend_46 { pt3dadd( 62.6107, -8.52118, 7.15423, 0.45 ) }
    dend_46 { pt3dadd( 62.8094, -8.5765, 7.17065, 2.6 ) }
    dend_46 { pt3dadd( 66.668, -10.1105, 7.61137, 0.57 ) }
    dend_46 { pt3dadd( 71.413, -12.4972, 8.24516, 0.57 ) }
    dend_46 { pt3dadd( 72.7833, -13.2313, 8.38579, 0.57 ) }
    dend_46 { pt3dadd( 72.9017, -13.2931, 8.39043, 2.38 ) }
    dend_46 { pt3dadd( 76.8518, -15.0485, 8.44539, 0.34 ) }
    dend_46 { pt3dadd( 78.347, -15.5384, 8.40802, 0.34 ) }
    dend_46 { pt3dadd( 81.6554, -16.1163, 8.143, 0.45 ) }
    dend_46 { pt3dadd( 84.7894, -16.0591, 7.94155, 0.45 ) }
    dend_46 { pt3dadd( 88.1494, -15.5993, 8.00852, 0.45 ) }
    dend_46 { pt3dadd( 91.2968, -14.8852, 8.39482, 0.45 ) }
    dend_46 { pt3dadd( 94.7828, -13.8155, 9.21044, 0.45 ) }
    dend_46 { pt3dadd( 97.9341, -12.7288, 10.1552, 0.45 ) }
    dend_46 { pt3dadd( 104.899, -10.1517, 12.5522, 0.45 ) }
    dend_46 { pt3dadd( 110.287, -8.20078, 14.7396, 0.45 ) }
    dend_46 { pt3dadd( 115.592, -6.42946, 17.1206, 0.45 ) }
    dend_46 { pt3dadd( 120.69, -4.96479, 19.4685, 0.45 ) }
    dend_46 { pt3dadd( 122.209, -4.6168, 20.1642, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 124.879, -4.14507, 21.2643, 0.45 ) }
    dend_46 { pt3dadd( 130.158, -3.41918, 22.8877, 0.45 ) }
    dend_46 { pt3dadd( 132.386, -3.14942, 23.396, 0.45 ) }
    dend_46 { pt3dadd( 135.677, -2.7214, 23.9434, 0.45 ) }
    dend_46 { pt3dadd( 142.484, -1.67429, 25.0523, 0.45 ) }
    dend_46 { pt3dadd( 147.335, -0.833455, 25.8345, 0.45 ) }
    dend_46 { pt3dadd( 152.368, -0.0413558, 26.6416, 0.45 ) }
    dend_46 { pt3dadd( 155.489, 0.309808, 27.1167, 0.45 ) }
    dend_46 { pt3dadd( 158.515, 0.522048, 27.5551, 0.45 ) }
    dend_46 { pt3dadd( 164.325, 0.637733, 28.3139, 0.45 ) }
    dend_46 { pt3dadd( 169.028, 0.459039, 28.7495, 0.45 ) }
    dend_46 { pt3dadd( 175.022, -0.0156868, 29.2759, 0.45 ) }
    dend_46 { pt3dadd( 181.051, -0.780855, 29.7982, 0.45 ) }
    dend_46 { pt3dadd( 184.619, -1.35198, 30.0878, 0.45 ) }
    dend_46 { pt3dadd( 186.424, -1.74707, 30.2284, 0.45 ) }
    dend_46 { pt3dadd( 187.384, -2.02515, 30.2452, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.28936, -20.3524, -7.93815, 0.12 ) }
    dend_44 { pt3dadd( -3.384, -19.5859, -7.39719, 0.12 ) }
    dend_44 { pt3dadd( -3.58493, -19.4811, -7.235, 0.12 ) }
    dend_44 { pt3dadd( -4.15487, -19.2441, -6.71238, 0.45 ) }
    dend_44 { pt3dadd( -4.99411, -19.2625, -5.33487, 0.79 ) }
    dend_44 { pt3dadd( -5.99472, -19.5494, -3.10384, 0.45 ) }
    dend_44 { pt3dadd( -6.55024, -19.8387, -1.66083, 0.45 ) }
    dend_44 { pt3dadd( -7.50912, -20.6463, 1.38198, 0.45 ) }
    dend_44 { pt3dadd( -7.63966, -20.8286, 1.87167, 0.45 ) }
    dend_44 { pt3dadd( -8.67749, -23.0711, 7.12362, 0.45 ) }
    dend_44 { pt3dadd( -9.06647, -24.2671, 9.64086, 0.45 ) }
    dend_44 { pt3dadd( -9.32753, -25.2338, 11.5488, 0.45 ) }
    dend_44 { pt3dadd( -9.38998, -25.4702, 12.0335, 0.45 ) }
    dend_44 { pt3dadd( -9.77684, -26.7406, 14.6871, 0.45 ) }
    dend_44 { pt3dadd( -10.6923, -29.1853, 19.8566, 0.45 ) }
    dend_44 { pt3dadd( -11.0453, -29.8469, 21.2003, 0.45 ) }
    dend_44 { pt3dadd( -11.3472, -30.3194, 22.1295, 0.45 ) }
    dend_44 { pt3dadd( -11.9983, -31.2249, 23.9446, 0.45 ) }
    dend_44 { pt3dadd( -12.217, -31.5434, 24.6094, 0.45 ) }
    dend_44 { pt3dadd( -13.5395, -33.4798, 28.6883, 0.45 ) }
    dend_44 { pt3dadd( -14.0426, -34.5046, 30.4763, 0.45 ) }
    dend_44 { pt3dadd( -14.5155, -35.7697, 32.5857, 0.45 ) }
    dend_44 { pt3dadd( -14.6212, -36.2028, 33.3377, 0.45 ) }
    dend_44 { pt3dadd( -14.9995, -38.3125, 36.8088, 0.45 ) }
    dend_44 { pt3dadd( -15.0307, -38.5892, 37.2579, 0.45 ) }
    dend_44 { pt3dadd( -15.0893, -40.2086, 40.0692, 0.45 ) }
    dend_44 { pt3dadd( -15.0866, -40.5929, 40.7309, 0.45 ) }
    dend_44 { pt3dadd( -15.1097, -42.4622, 43.7364, 2.38 ) }
    dend_44 { pt3dadd( -15.1772, -43.9986, 46.2103, 0.68 ) }
    dend_44 { pt3dadd( -15.2012, -44.6305, 47.2018, 0.68 ) }
    dend_44 { pt3dadd( -15.288, -47.2897, 51.8258, 0.68 ) }
    dend_44 { pt3dadd( -15.3245, -48.3783, 53.8848, 0.45 ) }
    dend_44 { pt3dadd( -15.3639, -48.8889, 54.8378, 0.45 ) }
    dend_44 { pt3dadd( -15.5711, -50.0807, 57.3206, 0.45 ) }
    dend_44 { pt3dadd( -15.7098, -50.6607, 58.6898, 0.45 ) }
    dend_44 { pt3dadd( -16.4321, -52.56, 63.3112, 0.45 ) }
    dend_44 { pt3dadd( -16.9501, -53.5597, 65.9699, 0.45 ) }
    dend_44 { pt3dadd( -17.5215, -54.4443, 68.6008, 0.45 ) }
    dend_44 { pt3dadd( -19.2986, -56.8974, 75.9942, 0.91 ) }
    dend_44 { pt3dadd( -19.3414, -56.9578, 76.1659, 3.05 ) }
    dend_44 { pt3dadd( -19.8596, -57.7322, 78.2331, 0.45 ) }
    dend_44 { pt3dadd( -20.927, -59.8324, 83.1776, 0.45 ) }
    dend_44 { pt3dadd( -21.2091, -60.5535, 84.818, 0.45 ) }
    dend_44 { pt3dadd( -21.5249, -61.6162, 87.1859, 2.15 ) }
    dend_44 { pt3dadd( -22.4284, -65.6122, 94.6731, 0.57 ) }
    dend_44 { pt3dadd( -22.5258, -66.1125, 95.6271, 0.57 ) }
    dend_44 { pt3dadd( -22.9602, -68.7522, 100.698, 0.57 ) }
    dend_44 { pt3dadd( -23.2674, -70.5098, 103.857, 0.57 ) }
    dend_44 { pt3dadd( -23.3104, -70.722, 104.252, 1.7 ) }
    dend_44 { pt3dadd( -23.5209, -71.5901, 105.901, 0.45 ) }
    dend_44 { pt3dadd( -24.6776, -75.7249, 113.321, 0.45 ) }
    dend_44 { pt3dadd( -25.2304, -77.4695, 116.466, 0.45 ) }
    dend_44 { pt3dadd( -25.6687, -78.697, 118.595, 0.45 ) }
    dend_44 { pt3dadd( -26.5435, -81.096, 122.624, 0.45 ) }
    dend_44 { pt3dadd( -27.0492, -82.5128, 124.999, 0.45 ) }
    dend_44 { pt3dadd( -27.4354, -83.5548, 126.752, 0.45 ) }
    dend_44 { pt3dadd( -28.3919, -86.1057, 130.234, 0.45 ) }
    dend_44 { pt3dadd( -28.5344, -86.4954, 130.78, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.28936, -20.3524, -7.93815, 1.7 ) }
    dend_25 { pt3dadd( -1.94796, -22.6128, -6.46201, 1.7 ) }
    dend_25 { pt3dadd( -1.84786, -23.3627, -6.06311, 1.58 ) }
    dend_25 { pt3dadd( -1.54588, -25.6669, -5.08836, 1.36 ) }
    dend_25 { pt3dadd( -1.29675, -27.568, -4.28417, 1.24 ) }
    dend_25 { pt3dadd( -0.937869, -30.3065, -3.12576, 1.24 ) }
    dend_25 { pt3dadd( -0.724498, -31.9347, -2.43701, 2.83 ) }
    dend_25 { pt3dadd( -0.411607, -34.2324, -1.68732, 3.62 ) }
    dend_25 { pt3dadd( -0.168781, -35.9818, -1.21053, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 61.0602, 44.1618, -7.48398, 0.57 ) }
    dend_17 { pt3dadd( 60.9956, 42.6443, -9.0325, 0.57 ) }
    dend_17 { pt3dadd( 60.9107, 40.6484, -11.0693, 0.57 ) }
    dend_17 { pt3dadd( 60.8623, 39.5112, -12.2297, 0.57 ) }
    dend_17 { pt3dadd( 60.7957, 37.9452, -13.8278, 0.57 ) }
    dend_17 { pt3dadd( 60.7088, 35.904, -15.9107, 0.57 ) }
    dend_17 { pt3dadd( 60.5603, 32.4127, -19.4735, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 61.0602, 44.1618, -7.48398, 1.02 ) }
    dend_14 { pt3dadd( 61.5997, 45.6582, -8.43695, 1.02 ) }
    dend_14 { pt3dadd( 62.8097, 49.014, -10.5739, 1.02 ) }
    dend_14 { pt3dadd( 63.4936, 50.9107, -11.7818, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 70.5623, -69.0073, 4.42178, 0.45 ) }
    dend_10 { pt3dadd( 73.1624, -72.7245, 3.70802, 0.45 ) }
    dend_10 { pt3dadd( 73.6976, -73.4942, 3.58266, 0.45 ) }
    dend_10 { pt3dadd( 74.4967, -74.6725, 3.45569, 0.45 ) }
    dend_10 { pt3dadd( 76.4441, -77.5131, 3.23229, 0.45 ) }
    dend_10 { pt3dadd( 77.2207, -78.6136, 3.0878, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 77.9447, -79.5814, 2.93567, 0.45 ) }
    dend_10 { pt3dadd( 79.316, -81.2483, 2.67705, 0.45 ) }
    dend_10 { pt3dadd( 81.8233, -84.0825, 2.17866, 0.45 ) }
    dend_10 { pt3dadd( 83.2437, -85.4458, 1.92963, 0.45 ) }
    dend_10 { pt3dadd( 86.0006, -87.6238, 1.36923, 0.45 ) }
    dend_10 { pt3dadd( 88.0575, -88.915, 1.03334, 0.45 ) }
    dend_10 { pt3dadd( 88.9881, -89.409, 1.02907, 0.45 ) }
    dend_10 { pt3dadd( 90.6844, -90.2436, 1.19012, 0.45 ) }
    dend_10 { pt3dadd( 94.2037, -91.9916, 1.75207, 0.45 ) }
    dend_10 { pt3dadd( 96.5398, -93.2626, 2.08416, 0.45 ) }
    dend_10 { pt3dadd( 100.066, -95.3227, 2.57077, 0.45 ) }
    dend_10 { pt3dadd( 107.521, -100.103, 3.39033, 0.45 ) }
    dend_10 { pt3dadd( 110.83, -102.444, 3.67259, 0.45 ) }
    dend_10 { pt3dadd( 113.225, -104.381, 3.79341, 0.45 ) }
    dend_10 { pt3dadd( 117.725, -108.715, 3.7616, 0.45 ) }
    dend_10 { pt3dadd( 118.579, -109.689, 3.70145, 0.45 ) }
    dend_10 { pt3dadd( 120.203, -112.042, 3.27596, 0.45 ) }
    dend_10 { pt3dadd( 121.016, -113.651, 2.83806, 0.45 ) }
    dend_10 { pt3dadd( 122.239, -116.752, 2.09507, 0.45 ) }
    dend_10 { pt3dadd( 123.026, -119.232, 1.64071, 0.45 ) }
    dend_10 { pt3dadd( 123.974, -122.577, 1.18108, 0.45 ) }
    dend_10 { pt3dadd( 124.838, -125.943, 0.717551, 0.45 ) }
    dend_10 { pt3dadd( 125.649, -129.492, 0.212342, 0.45 ) }
    dend_10 { pt3dadd( 125.986, -131.02, -0.00301683, 0.45 ) }
    dend_10 { pt3dadd( 126.529, -133.472, -0.313024, 0.45 ) }
    dend_10 { pt3dadd( 127.653, -138.036, -0.797296, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 70.5623, -69.0073, 4.42178, 0.57 ) }
    dend_9 { pt3dadd( 70.4972, -69.2695, 4.52876, 0.57 ) }
    dend_9 { pt3dadd( 70.1167, -70.5836, 5.52412, 0.57 ) }
    dend_9 { pt3dadd( 69.5954, -72.2007, 6.8665, 0.57 ) }
    dend_9 { pt3dadd( 69.2333, -73.1052, 7.76189, 0.57 ) }
    dend_9 { pt3dadd( 69.1611, -73.2642, 7.92323, 0.57 ) }
    dend_9 { pt3dadd( 68.737, -74.0653, 8.77944, 0.57 ) }
    dend_9 { pt3dadd( 68.0753, -75.0859, 9.98332, 0.57 ) }
    dend_9 { pt3dadd( 67.7291, -75.5127, 10.5451, 0.57 ) }
    dend_9 { pt3dadd( 67.0304, -76.2763, 11.7833, 0.45 ) }
    dend_9 { pt3dadd( 66.6713, -76.6516, 12.3763, 0.45 ) }
    dend_9 { pt3dadd( 66.1767, -77.1681, 13.1592, 0.45 ) }
    dend_9 { pt3dadd( 65.699, -77.6958, 13.9201, 0.45 ) }
    dend_9 { pt3dadd( 65.1488, -78.2942, 14.7724, 0.45 ) }
    dend_9 { pt3dadd( 64.0694, -79.5891, 16.6487, 0.45 ) }
    dend_9 { pt3dadd( 63.8498, -79.899, 17.0797, 0.45 ) }
    dend_9 { pt3dadd( 63.5562, -80.3702, 17.7307, 0.45 ) }
    dend_9 { pt3dadd( 62.8939, -81.5888, 19.3257, 0.45 ) }
    dend_9 { pt3dadd( 62.6679, -82.046, 19.874, 0.45 ) }
    dend_9 { pt3dadd( 61.8489, -83.7702, 21.6363, 0.45 ) }
    dend_9 { pt3dadd( 61.5978, -84.3435, 22.155, 0.45 ) }
    dend_9 { pt3dadd( 61.5474, -84.4741, 22.2662, 0.45 ) }
    dend_9 { pt3dadd( 61.4424, -84.8172, 22.562, 0.45 ) }
    dend_9 { pt3dadd( 61.1829, -85.7575, 23.3796, 0.45 ) }
    dend_9 { pt3dadd( 60.9944, -86.5316, 24.0718, 0.45 ) }
    dend_9 { pt3dadd( 60.6501, -88.0866, 25.5579, 0.45 ) }
    dend_9 { pt3dadd( 60.4295, -89.1527, 26.7446, 0.45 ) }
    dend_9 { pt3dadd( 60.0309, -91.0875, 29.0521, 0.45 ) }
    dend_9 { pt3dadd( 59.7939, -92.1566, 30.3861, 0.45 ) }
    dend_9 { pt3dadd( 59.6828, -92.6018, 30.9875, 0.45 ) }
    dend_9 { pt3dadd( 59.2671, -94.0849, 32.9879, 0.45 ) }
    dend_9 { pt3dadd( 58.7881, -95.4195, 34.6853, 0.45 ) }
    dend_9 { pt3dadd( 58.485, -96.1224, 35.5667, 0.45 ) }
    dend_9 { pt3dadd( 58.1647, -96.7858, 36.3348, 0.45 ) }
    dend_9 { pt3dadd( 57.5906, -98.0365, 37.6198, 0.45 ) }
    dend_9 { pt3dadd( 57.1041, -99.1164, 38.629, 0.45 ) }
    dend_9 { pt3dadd( 56.6619, -100.033, 39.4215, 0.45 ) }
    dend_9 { pt3dadd( 56.2749, -100.759, 40.1556, 0.45 ) }
    dend_9 { pt3dadd( 55.2982, -102.287, 42.0517, 0.45 ) }
    dend_9 { pt3dadd( 54.5703, -103.143, 43.3085, 0.45 ) }
    dend_9 { pt3dadd( 53.8385, -103.749, 44.3433, 0.45 ) }
    dend_9 { pt3dadd( 52.9237, -104.239, 45.3528, 0.45 ) }
    dend_9 { pt3dadd( 50.5297, -105.084, 47.4668, 0.45 ) }
    dend_9 { pt3dadd( 49.3636, -105.35, 48.3457, 0.45 ) }
    dend_9 { pt3dadd( 47.8445, -105.58, 49.2642, 0.45 ) }
    dend_9 { pt3dadd( 46.8198, -105.714, 49.8329, 0.45 ) }
    dend_9 { pt3dadd( 44.8537, -106.019, 50.8531, 0.45 ) }
    dend_9 { pt3dadd( 43.319, -106.333, 51.5965, 0.45 ) }
    dend_9 { pt3dadd( 40.9361, -106.939, 52.9607, 0.45 ) }
    dend_9 { pt3dadd( 39.2482, -107.441, 54.1646, 0.45 ) }
    dend_9 { pt3dadd( 38.1453, -107.813, 55.0082, 0.45 ) }
    dend_9 { pt3dadd( 35.6288, -108.747, 56.999, 0.45 ) }
    dend_9 { pt3dadd( 34.7532, -109.096, 57.7174, 0.45 ) }
    dend_9 { pt3dadd( 30.9951, -110.658, 60.7493, 0.45 ) }
    dend_9 { pt3dadd( 29.9705, -111.1, 61.5694, 0.45 ) }
    dend_9 { pt3dadd( 27.273, -112.298, 63.8939, 0.45 ) }
    dend_9 { pt3dadd( 26.5073, -112.647, 64.549, 0.45 ) }
    dend_9 { pt3dadd( 25.1889, -113.299, 65.6639, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 46.9083, -20.2103, 1.52276, 0.45 ) }
    dend_5 { pt3dadd( 48.8644, -23.4041, 2.41051, 0.45 ) }
    dend_5 { pt3dadd( 49.1742, -23.9075, 2.52704, 1.02 ) }
    dend_5 { pt3dadd( 52.4319, -29.0067, 3.54005, 0.79 ) }
    dend_5 { pt3dadd( 54.4432, -32.1374, 4.00432, 0.79 ) }
    dend_5 { pt3dadd( 55.602, -33.8868, 4.18467, 0.68 ) }
    dend_5 { pt3dadd( 55.8527, -34.2481, 4.2093, 0.68 ) }
    dend_5 { pt3dadd( 57.3794, -36.3262, 4.19242, 0.68 ) }
    dend_5 { pt3dadd( 58.4216, -37.7079, 4.10391, 0.68 ) }
    dend_5 { pt3dadd( 60.6043, -40.4463, 3.75428, 0.68 ) }
    dend_5 { pt3dadd( 62.8027, -43.2591, 3.35147, 0.68 ) }
    dend_5 { pt3dadd( 64.906, -45.9823, 2.92569, 0.68 ) }
    dend_5 { pt3dadd( 66.9004, -48.532, 2.50834, 0.68 ) }
    dend_5 { pt3dadd( 69.3975, -51.7287, 1.96038, 0.68 ) }
    dend_5 { pt3dadd( 72.5166, -55.6579, 1.0716, 0.68 ) }
    dend_5 { pt3dadd( 74.471, -58.069, 0.326359, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 75.6231, -59.4652, -0.208628, 0.68 ) }
    dend_5 { pt3dadd( 77.0851, -61.1799, -0.940013, 0.68 ) }
    dend_5 { pt3dadd( 79.5457, -63.9046, -2.19299, 0.68 ) }
    dend_5 { pt3dadd( 82.7709, -67.3057, -3.85153, 0.68 ) }
    dend_5 { pt3dadd( 86.5083, -71.0322, -5.69812, 0.68 ) }
    dend_5 { pt3dadd( 88.508, -72.9082, -6.58099, 0.68 ) }
    dend_5 { pt3dadd( 90.4907, -74.7183, -7.35629, 0.68 ) }
    dend_5 { pt3dadd( 91.7721, -75.8697, -7.78481, 0.68 ) }
    dend_5 { pt3dadd( 92.9388, -76.8688, -8.07786, 0.68 ) }
    dend_5 { pt3dadd( 94.5545, -78.3654, -8.27351, 0.68 ) }
    dend_5 { pt3dadd( 95.8404, -79.6455, -8.42184, 0.68 ) }
    dend_5 { pt3dadd( 97.5254, -81.6614, -8.77629, 0.68 ) }
    dend_5 { pt3dadd( 97.9864, -82.3462, -8.9652, 0.68 ) }
    dend_5 { pt3dadd( 99.0813, -84.2998, -9.5829, 0.68 ) }
    dend_5 { pt3dadd( 100.319, -86.8389, -10.55, 0.68 ) }
    dend_5 { pt3dadd( 101.234, -89.0189, -11.4774, 0.68 ) }
    dend_5 { pt3dadd( 102.063, -91.215, -12.4604, 0.68 ) }
    dend_5 { pt3dadd( 103.283, -94.7588, -14.0684, 0.68 ) }
    dend_5 { pt3dadd( 103.845, -96.4466, -14.8035, 0.68 ) }
    dend_5 { pt3dadd( 104.628, -98.7441, -15.7172, 0.68 ) }
    dend_5 { pt3dadd( 105.31, -100.508, -16.3547, 0.68 ) }
    dend_5 { pt3dadd( 106.244, -102.666, -16.9629, 0.68 ) }
    dend_5 { pt3dadd( 106.984, -104.251, -17.3708, 0.68 ) }
    dend_5 { pt3dadd( 107.344, -104.976, -17.527, 0.68 ) }
    dend_5 { pt3dadd( 108.458, -107.082, -17.9367, 0.45 ) }
    dend_5 { pt3dadd( 110.044, -110.102, -18.4597, 0.45 ) }
    dend_5 { pt3dadd( 111.88, -113.597, -19.0863, 0.45 ) }
    dend_5 { pt3dadd( 113.317, -116.383, -19.7125, 0.45 ) }
    dend_5 { pt3dadd( 114.312, -118.354, -20.221, 0.45 ) }
    dend_5 { pt3dadd( 115.469, -120.663, -20.867, 0.45 ) }
    dend_5 { pt3dadd( 117.428, -124.512, -22.0754, 0.45 ) }
    dend_5 { pt3dadd( 118.455, -126.555, -22.753, 0.45 ) }
    dend_5 { pt3dadd( 120.188, -130.076, -23.9863, 0.45 ) }
    dend_5 { pt3dadd( 121.79, -133.26, -25.1362, 0.45 ) }
    dend_5 { pt3dadd( 122.768, -135.197, -25.8884, 0.45 ) }
    dend_5 { pt3dadd( 123.579, -136.743, -26.5461, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 46.9083, -20.2103, 1.52276, 0.68 ) }
    dend_2 { pt3dadd( 49.4606, -18.6304, 4.11704, 0.68 ) }
    dend_2 { pt3dadd( 52.5533, -16.5168, 6.90867, 0.68 ) }
    dend_2 { pt3dadd( 54.8291, -14.9515, 8.43855, 0.68 ) }
    dend_2 { pt3dadd( 56.3917, -13.8914, 9.20627, 0.68 ) }
    dend_2 { pt3dadd( 57.4314, -13.1811, 9.49739, 0.68 ) }
    dend_2 { pt3dadd( 59.9396, -11.5117, 9.60177, 0.68 ) }
    dend_2 { pt3dadd( 61.6179, -10.4165, 9.23376, 0.68 ) }
    dend_2 { pt3dadd( 64.5765, -8.57438, 8.1172, 0.57 ) }
    dend_2 { pt3dadd( 66.9301, -7.16848, 7.03105, 0.57 ) }
    dend_2 { pt3dadd( 70.3517, -5.03915, 5.33307, 0.57 ) }
    dend_2 { pt3dadd( 74.2902, -2.52368, 3.3293, 0.57 ) }
    dend_2 { pt3dadd( 76.484, -1.07013, 2.19566, 0.57 ) }
    dend_2 { pt3dadd( 77.51, -0.32488, 1.62909, 0.57 ) }
    dend_2 { pt3dadd( 80.6852, 2.22993, -0.0648796, 0.57 ) }
    dend_2 { pt3dadd( 84.8586, 5.7806, -2.18268, 0.57 ) }
    dend_2 { pt3dadd( 88.0954, 8.6655, -3.65159, 0.57 ) }
    dend_2 { pt3dadd( 89.2847, 9.81698, -4.19018, 0.57 ) }
    dend_2 { pt3dadd( 91.9576, 12.5826, -5.51902, 0.57 ) }
    dend_2 { pt3dadd( 94.4352, 15.2169, -6.79893, 0.57 ) }
    dend_2 { pt3dadd( 95.5069, 16.4188, -7.35635, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 43.0039, -14.0442, 15.4567, 0.45 ) }
    dend_69 { pt3dadd( 42.3957, -17.9677, 17.001, 0.45 ) }
    dend_69 { pt3dadd( 42.1908, -19.228, 17.4386, 0.45 ) }
    dend_69 { pt3dadd( 41.956, -20.8451, 18.1458, 0.45 ) }
    dend_69 { pt3dadd( 41.7418, -22.4699, 19.004, 0.45 ) }
    dend_69 { pt3dadd( 41.5844, -23.6737, 19.7092, 0.45 ) }
    dend_69 { pt3dadd( 41.3164, -25.9633, 21.1063, 0.45 ) }
    dend_69 { pt3dadd( 41.2481, -26.831, 21.65, 0.45 ) }
    dend_69 { pt3dadd( 41.1198, -29.4319, 23.4122, 0.45 ) }
    dend_69 { pt3dadd( 41.099, -30.7358, 24.4702, 0.45 ) }
    dend_69 { pt3dadd( 41.0993, -31.7387, 25.4498, 0.45 ) }
    dend_69 { pt3dadd( 41.0729, -32.2388, 25.9965, 0.45 ) }
    dend_69 { pt3dadd( 40.995, -32.8249, 26.682, 0.45 ) }
    dend_69 { pt3dadd( 40.8015, -33.5455, 27.4272, 0.45 ) }
    dend_69 { pt3dadd( 40.1685, -35.6046, 29.0724, 0.45 ) }
    dend_69 { pt3dadd( 40.027, -36.0668, 29.374, 0.45 ) }
    dend_69 { pt3dadd( 39.6327, -37.5418, 30.1548, 0.45 ) }
    dend_69 { pt3dadd( 39.3608, -38.4379, 30.3529, 0.45 ) }
    dend_69 { pt3dadd( 39.0071, -39.687, 30.2921, 0.45 ) }
    dend_69 { pt3dadd( 38.5146, -41.9934, 29.6757, 0.45 ) }
    dend_69 { pt3dadd( 38.309, -43.5434, 29.008, 0.45 ) }
    dend_69 { pt3dadd( 38.1821, -44.9151, 28.3147, 0.45 ) }
    dend_69 { pt3dadd( 38.0434, -48.9264, 25.8709, 0.45 ) }
    dend_69 { pt3dadd( 38.0371, -49.6905, 25.3319, 1.02 ) }
    dend_69 { pt3dadd( 38.0218, -50.4687, 24.6735, 0.57 ) }
    dend_69 { pt3dadd( 37.8707, -51.4025, 23.6919, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 43.0039, -14.0442, 15.4567, 0.45 ) }
    dend_48 { pt3dadd( 44.5026, -14.2943, 15.1767, 0.45 ) }
    dend_48 { pt3dadd( 46.0456, -14.5517, 14.8883, 0.45 ) }
    dend_48 { pt3dadd( 48.1903, -14.9096, 14.4875, 0.45 ) }
    dend_48 { pt3dadd( 50.0051, -15.2124, 14.1484, 0.45 ) }
    dend_48 { pt3dadd( 50.9466, -15.3695, 13.9725, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.168781, -35.9818, -1.21053, 0.45 ) }
    dend_29 { pt3dadd( -0.759587, -37.4643, 0.245486, 0.45 ) }
    dend_29 { pt3dadd( -0.999118, -38.1506, 0.861948, 0.79 ) }
    dend_29 { pt3dadd( -3.33025, -44.8297, 6.8614, 1.24 ) }
    dend_29 { pt3dadd( -4.33638, -47.7125, 9.45083, 1.24 ) }
    dend_29 { pt3dadd( -5.18629, -50.1477, 11.6382, 1.24 ) }
    dend_29 { pt3dadd( -6.16373, -52.9482, 14.1537, 1.24 ) }
    dend_29 { pt3dadd( -6.52017, -53.9647, 15.0837, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.168781, -35.9818, -1.21053, 0.91 ) }
    dend_26 { pt3dadd( 0.97317, -37.0308, -0.586284, 0.91 ) }
    dend_26 { pt3dadd( 1.60223, -37.6086, -0.242408, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 2.69048, -38.6083, 0.352483, 0.91 ) }
    dend_26 { pt3dadd( 3.44231, -39.299, 0.763474, 0.91 ) }
    dend_26 { pt3dadd( 4.61739, -40.3784, 1.40583, 0.79 ) }
    dend_26 { pt3dadd( 4.85714, -40.5987, 1.53689, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 60.5603, 32.4127, -19.4735, 0.57 ) }
    dend_19 { pt3dadd( 61.537, 30.1479, -19.8149, 0.57 ) }
    dend_19 { pt3dadd( 63.5585, 25.3821, -19.7218, 0.57 ) }
    dend_19 { pt3dadd( 65.7094, 20.2304, -19.7955, 0.45 ) }
    dend_19 { pt3dadd( 68.79, 12.8462, -20.1012, 0.45 ) }
    dend_19 { pt3dadd( 72.1411, 4.68543, -20.3505, 0.45 ) }
    dend_19 { pt3dadd( 73.0578, 2.45296, -20.4187, 0.45 ) }
    dend_19 { pt3dadd( 77.407, -8.27952, -20.6149, 0.45 ) }
    dend_19 { pt3dadd( 80.7425, -16.8655, -20.6199, 0.45 ) }
    dend_19 { pt3dadd( 82.3165, -20.9017, -20.5536, 0.45 ) }
    dend_19 { pt3dadd( 84.1237, -25.3873, -20.5072, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 60.5603, 32.4127, -19.4735, 0.57 ) }
    dend_18 { pt3dadd( 58.3007, 32.308, -21.2458, 0.57 ) }
    dend_18 { pt3dadd( 56.8607, 31.6658, -21.8876, 0.68 ) }
    dend_18 { pt3dadd( 55.6506, 30.9487, -22.4799, 0.68 ) }
    dend_18 { pt3dadd( 54.4396, 30.2311, -23.0726, 0.68 ) }
    dend_18 { pt3dadd( 52.5209, 29.0941, -24.0117, 0.68 ) }
    dend_18 { pt3dadd( 50.685, 28.0061, -24.9102, 0.68 ) }
    dend_18 { pt3dadd( 48.48, 26.9135, -25.9677, 0.68 ) }
    dend_18 { pt3dadd( 46.2067, 25.9334, -26.927, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 63.4936, 50.9107, -11.7818, 0.68 ) }
    dend_16 { pt3dadd( 64.2983, 51.1665, -10.542, 0.68 ) }
    dend_16 { pt3dadd( 64.9838, 51.3844, -9.48603, 0.68 ) }
    dend_16 { pt3dadd( 66.1298, 51.7488, -7.72044, 0.68 ) }
    dend_16 { pt3dadd( 68.4446, 52.4848, -4.1542, 0.68 ) }
    dend_16 { pt3dadd( 69.7401, 52.8967, -2.15838, 0.68 ) }
    dend_16 { pt3dadd( 71.4788, 53.4494, 0.52023, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 63.4936, 50.9107, -11.7818, 0.79 ) }
    dend_15 { pt3dadd( 65.522, 51.5614, -12.0629, 0.79 ) }
    dend_15 { pt3dadd( 68.7491, 52.5968, -12.5101, 0.79 ) }
    dend_15 { pt3dadd( 70.8394, 53.2674, -12.7998, 0.79 ) }
    dend_15 { pt3dadd( 73.1709, 54.0153, -13.123, 0.79 ) }
    dend_15 { pt3dadd( 74.4945, 54.44, -13.3064, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 123.579, -136.743, -26.5461, 0.57 ) }
    dend_7 { pt3dadd( 125.183, -140.055, -26.5242, 0.57 ) }
    dend_7 { pt3dadd( 127.65, -145.005, -26.3564, 0.57 ) }
    dend_7 { pt3dadd( 128.882, -147.387, -26.2689, 0.57 ) }
    dend_7 { pt3dadd( 132.133, -153.474, -26.0605, 0.57 ) }
    dend_7 { pt3dadd( 135.316, -159.323, -25.8166, 0.57 ) }
    dend_7 { pt3dadd( 137.882, -164.038, -25.6199, 0.57 ) }
    dend_7 { pt3dadd( 139.407, -166.731, -25.3899, 0.57 ) }
    dend_7 { pt3dadd( 140.797, -169.138, -25.1206, 0.57 ) }
    dend_7 { pt3dadd( 142.132, -171.375, -24.8742, 0.57 ) }
    dend_7 { pt3dadd( 143.795, -173.911, -24.7028, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 123.579, -136.743, -26.5461, 0.34 ) }
    dend_6 { pt3dadd( 126.328, -138.942, -25.9134, 0.34 ) }
    dend_6 { pt3dadd( 128.307, -140.65, -25.2139, 0.34 ) }
    dend_6 { pt3dadd( 129.155, -141.415, -24.8966, 0.34 ) }
    dend_6 { pt3dadd( 132.948, -145.031, -23.8337, 0.34 ) }
    dend_6 { pt3dadd( 135.965, -148.043, -23.1956, 0.57 ) }
    dend_6 { pt3dadd( 140.013, -152.178, -22.4382, 0.57 ) }
    dend_6 { pt3dadd( 142.687, -155.079, -21.965, 0.57 ) }
    dend_6 { pt3dadd( 145.046, -157.696, -21.7388, 0.57 ) }
    dend_6 { pt3dadd( 149.707, -162.967, -21.6362, 0.57 ) }
    dend_6 { pt3dadd( 152.356, -165.97, -21.7843, 0.57 ) }
    dend_6 { pt3dadd( 154.981, -168.89, -22.2126, 0.57 ) }
    dend_6 { pt3dadd( 158.478, -172.599, -23.1184, 0.57 ) }
    dend_6 { pt3dadd( 163.542, -177.816, -24.6471, 0.57 ) }
    dend_6 { pt3dadd( 167.799, -182.122, -25.9445, 0.57 ) }
    dend_6 { pt3dadd( 170.591, -184.849, -26.649, 0.57 ) }
    dend_6 { pt3dadd( 175.471, -189.445, -27.7785, 0.57 ) }
    dend_6 { pt3dadd( 176.894, -190.728, -28.0803, 0.57 ) }
    dend_6 { pt3dadd( 180.06, -193.44, -28.5808, 0.57 ) }
    dend_6 { pt3dadd( 182.454, -195.374, -28.6952, 0.57 ) }
    dend_6 { pt3dadd( 187.091, -198.774, -28.5581, 0.57 ) }
    dend_6 { pt3dadd( 188.56, -199.776, -28.3792, 0.57 ) }
    dend_6 { pt3dadd( 191.029, -201.369, -27.5332, 0.57 ) }
    dend_6 { pt3dadd( 192.776, -202.421, -26.801, 0.57 ) }
    dend_6 { pt3dadd( 194.553, -203.419, -25.9024, 0.57 ) }
    dend_6 { pt3dadd( 195.776, -204.086, -25.2512, 0.57 ) }
    dend_6 { pt3dadd( 198.713, -205.685, -23.6209, 0.57 ) }
    dend_6 { pt3dadd( 204.898, -209.159, -19.8267, 0.57 ) }
    dend_6 { pt3dadd( 206.566, -210.12, -18.6909, 0.57 ) }
    dend_6 { pt3dadd( 209.766, -212.012, -16.3553, 0.57 ) }
    dend_6 { pt3dadd( 213.003, -214.079, -13.8817, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 95.5069, 16.4188, -7.35635, 0.45 ) }
    dend_4 { pt3dadd( 98.3017, 18.4203, -12.0641, 0.45 ) }
    dend_4 { pt3dadd( 99.7194, 19.4469, -14.445, 0.45 ) }
    dend_4 { pt3dadd( 101.666, 21.1528, -18.0097, 0.45 ) }
    dend_4 { pt3dadd( 102.179, 21.6287, -18.877, 0.45 ) }
    dend_4 { pt3dadd( 102.434, 21.8649, -19.2656, 0.45 ) }
    dend_4 { pt3dadd( 104.852, 24.1538, -22.5532, 0.45 ) }
    dend_4 { pt3dadd( 105.164, 24.4241, -22.8674, 0.45 ) }
    dend_4 { pt3dadd( 107.07, 26.1048, -24.8058, 0.45 ) }
    dend_4 { pt3dadd( 108.513, 27.5565, -26.0951, 0.45 ) }
    dend_4 { pt3dadd( 109.3, 28.3946, -26.7767, 0.45 ) }
    dend_4 { pt3dadd( 111.191, 30.3846, -28.1955, 0.45 ) }
    dend_4 { pt3dadd( 112.91, 32.0252, -28.956, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 95.5069, 16.4188, -7.35635, 0.45 ) }
    dend_3 { pt3dadd( 96.1546, 16.5369, -7.31985, 0.45 ) }
    dend_3 { pt3dadd( 96.5713, 16.6129, -7.29636, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 50.9466, -15.3695, 13.9725, 0.45 ) }
    dend_64 { pt3dadd( 50.1027, -19.6635, 16.592, 0.45 ) }
    dend_64 { pt3dadd( 49.1718, -24.6561, 19.5596, 0.45 ) }
    dend_64 { pt3dadd( 48.645, -27.4265, 21.2481, 0.45 ) }
    dend_64 { pt3dadd( 48.0318, -30.4325, 23.028, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 47.2947, -33.9663, 25.0124, 0.45 ) }
    dend_64 { pt3dadd( 47.0222, -35.3263, 25.7101, 0.45 ) }
    dend_64 { pt3dadd( 46.6732, -37.0536, 26.4435, 0.45 ) }
    dend_64 { pt3dadd( 46.0163, -41.347, 28.0793, 0.45 ) }
    dend_64 { pt3dadd( 45.6936, -44.6504, 29.0199, 0.45 ) }
    dend_64 { pt3dadd( 45.5275, -47.5533, 29.5916, 0.45 ) }
    dend_64 { pt3dadd( 45.4614, -49.9413, 29.9678, 0.45 ) }
    dend_64 { pt3dadd( 45.5182, -52.1186, 30.3948, 0.45 ) }
    dend_64 { pt3dadd( 45.8571, -55.536, 31.2047, 0.45 ) }
    dend_64 { pt3dadd( 46.3211, -57.6787, 32.0756, 0.45 ) }
    dend_64 { pt3dadd( 46.9179, -59.5786, 33.1724, 0.45 ) }
    dend_64 { pt3dadd( 47.8944, -62.2742, 34.8754, 0.45 ) }
    dend_64 { pt3dadd( 49.0169, -65.0, 36.7239, 0.45 ) }
    dend_64 { pt3dadd( 49.7094, -66.478, 37.7357, 0.45 ) }
    dend_64 { pt3dadd( 52.1638, -71.6471, 40.599, 0.45 ) }
    dend_64 { pt3dadd( 53.8629, -75.0975, 42.1267, 0.45 ) }
    dend_64 { pt3dadd( 55.4207, -78.2137, 43.0789, 0.45 ) }
    dend_64 { pt3dadd( 56.7577, -81.1737, 43.4504, 0.45 ) }
    dend_64 { pt3dadd( 57.9986, -83.9825, 43.6166, 0.45 ) }
    dend_64 { pt3dadd( 60.243, -89.4693, 43.776, 0.45 ) }
    dend_64 { pt3dadd( 61.1476, -91.9541, 43.7771, 0.45 ) }
    dend_64 { pt3dadd( 61.8378, -93.8482, 44.1809, 0.45 ) }
    dend_64 { pt3dadd( 63.3336, -98.1478, 45.417, 0.45 ) }
    dend_64 { pt3dadd( 64.4621, -101.736, 46.6116, 0.45 ) }
    dend_64 { pt3dadd( 65.654, -105.676, 48.3505, 0.45 ) }
    dend_64 { pt3dadd( 66.2772, -107.657, 49.5957, 0.45 ) }
    dend_64 { pt3dadd( 68.4135, -115.151, 54.5831, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 50.9466, -15.3695, 13.9725, 0.45 ) }
    dend_49 { pt3dadd( 53.0544, -16.3781, 13.9315, 0.45 ) }
    dend_49 { pt3dadd( 54.2818, -17.1848, 13.8756, 0.45 ) }
    dend_49 { pt3dadd( 56.2685, -18.6912, 13.7371, 0.45 ) }
    dend_49 { pt3dadd( 58.0313, -20.1513, 13.5912, 0.45 ) }
    dend_49 { pt3dadd( 60.613, -22.4445, 13.3396, 0.45 ) }
    dend_49 { pt3dadd( 63.8666, -25.5267, 12.9897, 0.45 ) }
    dend_49 { pt3dadd( 67.6221, -29.5948, 12.5864, 0.45 ) }
    dend_49 { pt3dadd( 70.3838, -32.9672, 12.012, 0.45 ) }
    dend_49 { pt3dadd( 71.8486, -34.8758, 11.6706, 0.45 ) }
    dend_49 { pt3dadd( 74.4987, -38.5323, 10.9798, 0.45 ) }
    dend_49 { pt3dadd( 76.2058, -40.9878, 10.436, 0.45 ) }
    dend_49 { pt3dadd( 77.9322, -43.6396, 9.77112, 0.45 ) }
    dend_49 { pt3dadd( 81.2242, -49.4674, 8.03555, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -6.52017, -53.9647, 15.0837, 0.12 ) }
    dend_41 { pt3dadd( -7.34955, -54.7206, 14.6497, 0.12 ) }
    dend_41 { pt3dadd( -8.77038, -56.6719, 13.6342, 0.57 ) }
    dend_41 { pt3dadd( -9.77368, -58.4351, 12.9135, 0.57 ) }
    dend_41 { pt3dadd( -10.5423, -60.0218, 12.5141, 0.57 ) }
    dend_41 { pt3dadd( -13.109, -65.0471, 11.059, 0.57 ) }
    dend_41 { pt3dadd( -14.8457, -68.0235, 9.90408, 0.57 ) }
    dend_41 { pt3dadd( -15.8644, -69.6982, 9.14055, 0.91 ) }
    dend_41 { pt3dadd( -16.9478, -71.2155, 8.0305, 0.91 ) }
    dend_41 { pt3dadd( -18.5386, -73.068, 6.18408, 0.91 ) }
    dend_41 { pt3dadd( -21.4687, -75.3049, 2.54107, 0.68 ) }
    dend_41 { pt3dadd( -23.9466, -76.1849, -0.749218, 0.68 ) }
    dend_41 { pt3dadd( -25.1919, -76.4575, -2.43399, 0.68 ) }
    dend_41 { pt3dadd( -29.3396, -77.0983, -8.36426, 0.68 ) }
    dend_41 { pt3dadd( -30.3241, -77.1846, -9.84368, 0.68 ) }
    dend_41 { pt3dadd( -32.6017, -77.2389, -13.4794, 0.68 ) }
    dend_41 { pt3dadd( -36.4168, -77.1317, -19.8559, 0.68 ) }
    dend_41 { pt3dadd( -37.8691, -77.0683, -22.429, 0.68 ) }
    dend_41 { pt3dadd( -40.6575, -77.089, -27.5952, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.52017, -53.9647, 15.0837, 0.79 ) }
    dend_32 { pt3dadd( -5.83158, -58.1217, 15.4234, 0.79 ) }
    dend_32 { pt3dadd( -4.90365, -63.7237, 15.8811, 0.79 ) }
    dend_32 { pt3dadd( -4.47519, -66.3103, 16.0925, 0.79 ) }
    dend_32 { pt3dadd( -4.14467, -68.3057, 16.2556, 0.79 ) }
    dend_32 { pt3dadd( -3.99001, -69.2394, 16.3318, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -6.52017, -53.9647, 15.0837, 0.57 ) }
    dend_30 { pt3dadd( -5.07881, -54.738, 19.2532, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.85714, -40.5987, 1.53689, 1.13 ) }
    dend_28 { pt3dadd( 4.88134, -41.8798, 2.40218, 1.13 ) }
    dend_28 { pt3dadd( 5.02673, -43.8561, 3.62723, 0.91 ) }
    dend_28 { pt3dadd( 5.16449, -45.0497, 4.27323, 0.91 ) }
    dend_28 { pt3dadd( 5.43981, -47.0516, 5.25439, 0.91 ) }
    dend_28 { pt3dadd( 5.74854, -49.2458, 6.22315, 0.91 ) }
    dend_28 { pt3dadd( 5.98567, -51.214, 7.05911, 0.91 ) }
    dend_28 { pt3dadd( 6.12858, -52.5682, 7.55695, 0.91 ) }
    dend_28 { pt3dadd( 6.28609, -54.7913, 8.31934, 0.91 ) }
    dend_28 { pt3dadd( 6.31982, -55.7206, 8.62629, 1.92 ) }
    dend_28 { pt3dadd( 6.34751, -56.965, 9.006, 1.36 ) }
    dend_28 { pt3dadd( 6.34419, -58.8001, 9.58704, 1.02 ) }
    dend_28 { pt3dadd( 6.25857, -60.9704, 10.3517, 1.02 ) }
    dend_28 { pt3dadd( 6.16687, -62.8265, 11.06, 1.02 ) }
    dend_28 { pt3dadd( 6.134, -63.5874, 11.3646, 1.02 ) }
    dend_28 { pt3dadd( 6.11358, -64.4429, 11.7163, 0.68 ) }
    dend_28 { pt3dadd( 6.16701, -65.8109, 12.2337, 0.68 ) }
    dend_28 { pt3dadd( 6.26625, -66.5431, 12.4616, 1.02 ) }
    dend_28 { pt3dadd( 6.42563, -67.1672, 12.6165, 2.15 ) }
    dend_28 { pt3dadd( 6.81961, -68.2086, 12.815, 1.47 ) }
    dend_28 { pt3dadd( 7.55832, -69.8486, 13.1115, 1.13 ) }
    dend_28 { pt3dadd( 8.07762, -70.9707, 13.3049, 0.79 ) }
    dend_28 { pt3dadd( 8.43961, -71.7085, 13.4251, 0.57 ) }
    dend_28 { pt3dadd( 9.16566, -73.0653, 13.6782, 0.57 ) }
    dend_28 { pt3dadd( 9.8235, -74.2019, 13.9155, 0.57 ) }
    dend_28 { pt3dadd( 10.3973, -75.1362, 14.1199, 0.57 ) }
    dend_28 { pt3dadd( 10.9232, -76.0209, 14.2987, 0.57 ) }
    dend_28 { pt3dadd( 11.2617, -76.6717, 14.3887, 0.57 ) }
    dend_28 { pt3dadd( 11.8261, -77.8659, 14.4634, 0.57 ) }
    dend_28 { pt3dadd( 12.1078, -78.569, 14.5555, 0.57 ) }
    dend_28 { pt3dadd( 12.482, -79.6485, 14.7315, 2.83 ) }
    dend_28 { pt3dadd( 12.9297, -81.0597, 15.0469, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 13.5745, -83.0554, 15.5419, 1.02 ) }
    dend_28 { pt3dadd( 13.9047, -84.1821, 15.8441, 0.68 ) }
    dend_28 { pt3dadd( 14.7127, -86.9747, 16.6357, 0.68 ) }
    dend_28 { pt3dadd( 15.0246, -87.9444, 16.9256, 0.68 ) }
    dend_28 { pt3dadd( 15.5894, -89.5635, 17.4915, 0.68 ) }
    dend_28 { pt3dadd( 15.9329, -90.4576, 17.8351, 0.68 ) }
    dend_28 { pt3dadd( 16.4177, -91.5356, 18.2554, 0.68 ) }
    dend_28 { pt3dadd( 17.153, -92.9638, 18.7598, 0.68 ) }
    dend_28 { pt3dadd( 18.0912, -94.5142, 19.2523, 0.68 ) }
    dend_28 { pt3dadd( 19.4436, -96.5592, 19.9711, 0.68 ) }
    dend_28 { pt3dadd( 20.3042, -97.8132, 20.4287, 0.68 ) }
    dend_28 { pt3dadd( 21.3698, -99.3164, 20.9549, 0.57 ) }
    dend_28 { pt3dadd( 22.143, -100.391, 21.2928, 0.57 ) }
    dend_28 { pt3dadd( 22.8924, -101.456, 21.5059, 0.57 ) }
    dend_28 { pt3dadd( 23.6976, -102.585, 21.5616, 0.57 ) }
    dend_28 { pt3dadd( 24.5923, -103.772, 21.4038, 0.57 ) }
    dend_28 { pt3dadd( 25.783, -105.325, 21.0821, 0.57 ) }
    dend_28 { pt3dadd( 26.3191, -106.014, 20.8815, 1.47 ) }
    dend_28 { pt3dadd( 27.7471, -107.79, 20.2769, 0.68 ) }
    dend_28 { pt3dadd( 28.6213, -108.85, 19.9018, 0.68 ) }
    dend_28 { pt3dadd( 29.8259, -110.23, 19.4351, 0.68 ) }
    dend_28 { pt3dadd( 31.5525, -112.112, 18.8785, 0.68 ) }
    dend_28 { pt3dadd( 33.1513, -113.818, 18.5216, 0.68 ) }
    dend_28 { pt3dadd( 33.8819, -114.569, 18.4083, 0.68 ) }
    dend_28 { pt3dadd( 34.2919, -115.059, 18.4704, 0.68 ) }
    dend_28 { pt3dadd( 34.8073, -116.019, 18.8537, 0.57 ) }
    dend_28 { pt3dadd( 34.9679, -116.522, 19.1363, 0.57 ) }
    dend_28 { pt3dadd( 35.1218, -117.285, 19.6281, 0.57 ) }
    dend_28 { pt3dadd( 35.3567, -118.66, 20.4756, 0.57 ) }
    dend_28 { pt3dadd( 36.129, -123.465, 23.1451, 0.68 ) }
    dend_28 { pt3dadd( 36.6251, -126.334, 24.5171, 0.68 ) }
    dend_28 { pt3dadd( 36.8851, -127.693, 25.0415, 0.68 ) }
    dend_28 { pt3dadd( 37.0963, -128.63, 25.2835, 0.68 ) }
    dend_28 { pt3dadd( 37.9053, -131.156, 25.367, 0.68 ) }
    dend_28 { pt3dadd( 38.2495, -131.909, 25.2016, 0.68 ) }
    dend_28 { pt3dadd( 39.0793, -133.23, 24.5503, 2.04 ) }
    dend_28 { pt3dadd( 39.9092, -134.368, 23.8474, 0.79 ) }
    dend_28 { pt3dadd( 40.8092, -135.544, 23.1217, 0.79 ) }
    dend_28 { pt3dadd( 42.4527, -137.758, 21.9458, 0.79 ) }
    dend_28 { pt3dadd( 43.302, -138.988, 21.4892, 0.79 ) }
    dend_28 { pt3dadd( 44.0318, -140.145, 21.2256, 0.79 ) }
    dend_28 { pt3dadd( 44.7565, -141.492, 21.1462, 0.79 ) }
    dend_28 { pt3dadd( 45.3712, -142.74, 21.2583, 0.68 ) }
    dend_28 { pt3dadd( 46.1165, -144.417, 21.645, 0.68 ) }
    dend_28 { pt3dadd( 46.7191, -145.94, 22.1823, 0.68 ) }
    dend_28 { pt3dadd( 47.1554, -147.32, 22.9451, 0.68 ) }
    dend_28 { pt3dadd( 47.4321, -148.327, 23.6207, 0.68 ) }
    dend_28 { pt3dadd( 47.6692, -149.359, 24.4513, 0.68 ) }
    dend_28 { pt3dadd( 47.8064, -149.947, 24.9597, 1.58 ) }
    dend_28 { pt3dadd( 48.0505, -150.786, 25.6786, 1.58 ) }
    dend_28 { pt3dadd( 49.1703, -154.239, 28.5496, 0.68 ) }
    dend_28 { pt3dadd( 49.6081, -155.446, 29.5457, 0.68 ) }
    dend_28 { pt3dadd( 50.4801, -157.6, 31.2934, 0.68 ) }
    dend_28 { pt3dadd( 51.2751, -159.545, 32.8782, 0.68 ) }
    dend_28 { pt3dadd( 52.0021, -161.215, 34.2194, 0.68 ) }
    dend_28 { pt3dadd( 52.5909, -162.521, 35.2681, 0.68 ) }
    dend_28 { pt3dadd( 53.325, -163.956, 36.3568, 0.68 ) }
    dend_28 { pt3dadd( 53.7986, -164.902, 37.2107, 0.68 ) }
    dend_28 { pt3dadd( 54.6911, -166.569, 38.8552, 0.68 ) }
    dend_28 { pt3dadd( 55.0278, -167.104, 39.399, 0.68 ) }
    dend_28 { pt3dadd( 56.0432, -168.45, 40.7311, 2.38 ) }
    dend_28 { pt3dadd( 56.6237, -169.111, 41.2989, 1.92 ) }
    dend_28 { pt3dadd( 58.4747, -170.986, 42.7336, 0.57 ) }
    dend_28 { pt3dadd( 59.2523, -171.7, 43.1639, 0.57 ) }
    dend_28 { pt3dadd( 62.1289, -174.147, 44.3124, 0.57 ) }
    dend_28 { pt3dadd( 64.1657, -175.855, 45.0407, 0.57 ) }
    dend_28 { pt3dadd( 65.485, -176.93, 45.4422, 0.57 ) }
    dend_28 { pt3dadd( 67.1467, -178.284, 45.9574, 0.57 ) }
    dend_28 { pt3dadd( 68.7257, -179.548, 46.4519, 0.57 ) }
    dend_28 { pt3dadd( 69.7386, -180.415, 46.8957, 0.57 ) }
    dend_28 { pt3dadd( 70.4764, -181.113, 47.3797, 2.15 ) }
    dend_28 { pt3dadd( 71.0746, -181.677, 47.8135, 1.13 ) }
    dend_28 { pt3dadd( 71.9705, -182.544, 48.5212, 0.57 ) }
    dend_28 { pt3dadd( 72.8757, -183.406, 49.0444, 0.57 ) }
    dend_28 { pt3dadd( 73.285, -183.786, 49.2285, 0.57 ) }
    dend_28 { pt3dadd( 73.7957, -184.31, 49.4272, 0.57 ) }
    dend_28 { pt3dadd( 74.4565, -185.03, 49.6508, 0.57 ) }
    dend_28 { pt3dadd( 74.6167, -185.232, 49.7057, 2.38 ) }
    dend_28 { pt3dadd( 76.1481, -187.369, 50.2357, 0.45 ) }
    dend_28 { pt3dadd( 77.118, -188.827, 50.5892, 0.45 ) }
    dend_28 { pt3dadd( 78.1735, -190.474, 51.0022, 0.45 ) }
    dend_28 { pt3dadd( 78.8747, -191.641, 51.3426, 0.45 ) }
    dend_28 { pt3dadd( 80.0281, -193.787, 52.1128, 0.45 ) }
    dend_28 { pt3dadd( 80.3106, -194.377, 52.3542, 0.45 ) }
    dend_28 { pt3dadd( 81.3514, -197.065, 53.6308, 0.45 ) }
    dend_28 { pt3dadd( 82.008, -199.125, 54.6035, 0.45 ) }
    dend_28 { pt3dadd( 82.5118, -201.049, 55.4161, 0.45 ) }
    dend_28 { pt3dadd( 82.8286, -202.85, 56.1395, 0.45 ) }
    dend_28 { pt3dadd( 82.912, -203.703, 56.463, 0.45 ) }
    dend_28 { pt3dadd( 82.987, -205.08, 56.8988, 0.45 ) }
    dend_28 { pt3dadd( 83.0317, -206.889, 57.3132, 0.45 ) }
    dend_28 { pt3dadd( 83.2213, -208.749, 57.4553, 0.45 ) }
    dend_28 { pt3dadd( 83.3285, -209.22, 57.4307, 1.24 ) }
    dend_28 { pt3dadd( 83.7494, -210.387, 57.3151, 0.57 ) }
    dend_28 { pt3dadd( 84.4347, -211.812, 57.2099, 0.57 ) }
    dend_28 { pt3dadd( 85.5411, -213.651, 57.1522, 0.57 ) }
    dend_28 { pt3dadd( 86.6794, -215.338, 57.2074, 1.36 ) }
    dend_28 { pt3dadd( 87.6054, -216.689, 57.4375, 0.57 ) }
    dend_28 { pt3dadd( 88.6569, -218.171, 57.8295, 0.57 ) }
    dend_28 { pt3dadd( 90.0303, -220.068, 58.4952, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( 91.0249, -221.485, 59.1881, 0.57 ) }
    dend_28 { pt3dadd( 91.7232, -222.503, 59.8052, 0.57 ) }
    dend_28 { pt3dadd( 93.1738, -224.715, 61.2151, 0.57 ) }
    dend_28 { pt3dadd( 94.5066, -226.866, 62.49, 0.57 ) }
    dend_28 { pt3dadd( 95.0341, -227.846, 63.022, 0.57 ) }
    dend_28 { pt3dadd( 95.9313, -229.726, 63.8581, 2.38 ) }
    dend_28 { pt3dadd( 96.1936, -230.327, 64.0627, 1.58 ) }
    dend_28 { pt3dadd( 97.2655, -233.095, 64.8788, 0.68 ) }
    dend_28 { pt3dadd( 97.8467, -234.801, 65.2716, 0.68 ) }
    dend_28 { pt3dadd( 98.3995, -236.923, 65.8391, 0.79 ) }
    dend_28 { pt3dadd( 98.8717, -238.914, 66.3882, 0.57 ) }
    dend_28 { pt3dadd( 99.2855, -240.83, 66.9014, 0.57 ) }
    dend_28 { pt3dadd( 99.819, -243.696, 67.7356, 0.57 ) }
    dend_28 { pt3dadd( 100.158, -245.858, 68.4268, 0.57 ) }
    dend_28 { pt3dadd( 100.485, -247.925, 69.0488, 0.57 ) }
    dend_28 { pt3dadd( 100.66, -248.923, 69.3236, 0.57 ) }
    dend_28 { pt3dadd( 100.945, -250.539, 69.7506, 0.57 ) }
    dend_28 { pt3dadd( 101.41, -252.943, 70.2564, 0.57 ) }
    dend_28 { pt3dadd( 101.794, -254.454, 70.4329, 0.57 ) }
    dend_28 { pt3dadd( 102.353, -256.227, 70.4781, 0.57 ) }
    dend_28 { pt3dadd( 102.818, -257.455, 70.3891, 0.57 ) }
    dend_28 { pt3dadd( 103.138, -258.211, 70.3022, 0.57 ) }
    dend_28 { pt3dadd( 103.779, -259.613, 70.1503, 0.57 ) }
    dend_28 { pt3dadd( 104.925, -261.954, 69.9406, 0.57 ) }
    dend_28 { pt3dadd( 105.848, -263.792, 69.9106, 1.13 ) }
    dend_28 { pt3dadd( 106.389, -264.855, 69.9797, 2.38 ) }
    dend_28 { pt3dadd( 106.579, -265.225, 70.0248, 2.38 ) }
    dend_28 { pt3dadd( 107.827, -267.659, 70.4923, 0.79 ) }
    dend_28 { pt3dadd( 108.549, -269.029, 70.7218, 0.79 ) }
    dend_28 { pt3dadd( 109.363, -270.679, 70.9826, 0.57 ) }
    dend_28 { pt3dadd( 110.013, -272.03, 71.1373, 0.57 ) }
    dend_28 { pt3dadd( 110.585, -273.29, 71.2117, 0.57 ) }
    dend_28 { pt3dadd( 111.08, -274.402, 71.209, 0.57 ) }
    dend_28 { pt3dadd( 112.372, -277.186, 71.0246, 0.57 ) }
    dend_28 { pt3dadd( 112.572, -277.653, 70.9986, 2.94 ) }
    dend_28 { pt3dadd( 113.483, -279.784, 70.8759, 0.68 ) }
    dend_28 { pt3dadd( 114.34, -281.827, 70.8386, 0.68 ) }
    dend_28 { pt3dadd( 115.033, -283.434, 70.9007, 0.68 ) }
    dend_28 { pt3dadd( 115.613, -284.738, 71.0177, 0.68 ) }
    dend_28 { pt3dadd( 116.552, -286.792, 71.3209, 0.68 ) }
    dend_28 { pt3dadd( 117.461, -288.726, 71.5809, 0.68 ) }
    dend_28 { pt3dadd( 118.14, -290.133, 71.7532, 0.68 ) }
    dend_28 { pt3dadd( 118.8, -291.463, 71.8878, 0.68 ) }
    dend_28 { pt3dadd( 120.034, -293.994, 72.1655, 0.68 ) }
    dend_28 { pt3dadd( 120.617, -295.187, 72.315, 0.68 ) }
    dend_28 { pt3dadd( 121.226, -296.409, 72.4985, 0.68 ) }
    dend_28 { pt3dadd( 122.677, -299.675, 73.1972, 0.68 ) }
    dend_28 { pt3dadd( 122.984, -300.422, 73.3823, 0.68 ) }
    dend_28 { pt3dadd( 123.889, -303.07, 74.1328, 0.57 ) }
    dend_28 { pt3dadd( 124.087, -303.776, 74.3509, 0.57 ) }
    dend_28 { pt3dadd( 124.2, -304.283, 74.5094, 2.49 ) }
    dend_28 { pt3dadd( 124.814, -307.653, 75.6425, 0.68 ) }
    dend_28 { pt3dadd( 124.937, -308.614, 75.9924, 0.68 ) }
    dend_28 { pt3dadd( 125.364, -311.993, 77.2723, 0.68 ) }
    dend_28 { pt3dadd( 125.519, -313.059, 77.6767, 0.68 ) }
    dend_28 { pt3dadd( 125.927, -315.198, 78.4877, 0.68 ) }
    dend_28 { pt3dadd( 126.458, -317.357, 79.306, 0.68 ) }
    dend_28 { pt3dadd( 127.101, -319.3, 80.0326, 0.68 ) }
    dend_28 { pt3dadd( 127.737, -320.948, 80.7389, 0.68 ) }
    dend_28 { pt3dadd( 128.838, -323.311, 81.8766, 0.68 ) }
    dend_28 { pt3dadd( 129.278, -324.202, 82.3639, 0.68 ) }
    dend_28 { pt3dadd( 129.59, -324.858, 82.7657, 2.72 ) }
    dend_28 { pt3dadd( 130.029, -325.87, 83.3948, 1.92 ) }
    dend_28 { pt3dadd( 130.72, -327.89, 84.6439, 0.91 ) }
    dend_28 { pt3dadd( 130.987, -329.209, 85.4798, 0.91 ) }
    dend_28 { pt3dadd( 131.078, -330.567, 86.3713, 0.68 ) }
    dend_28 { pt3dadd( 131.054, -332.072, 87.4174, 0.68 ) }
    dend_28 { pt3dadd( 130.932, -333.621, 88.587, 0.68 ) }
    dend_28 { pt3dadd( 130.699, -335.609, 90.1712, 0.68 ) }
    dend_28 { pt3dadd( 130.454, -337.003, 91.418, 0.68 ) }
    dend_28 { pt3dadd( 130.034, -338.921, 93.3417, 0.68 ) }
    dend_28 { pt3dadd( 129.654, -340.358, 95.053, 0.68 ) }
    dend_28 { pt3dadd( 129.143, -342.234, 97.5288, 0.68 ) }
    dend_28 { pt3dadd( 128.889, -343.052, 98.7712, 0.68 ) }
    dend_28 { pt3dadd( 128.423, -344.837, 101.556, 0.68 ) }
    dend_28 { pt3dadd( 128.224, -345.91, 103.201, 0.68 ) }
    dend_28 { pt3dadd( 127.901, -348.593, 107.154, 0.68 ) }
    dend_28 { pt3dadd( 127.823, -349.642, 108.605, 0.68 ) }
    dend_28 { pt3dadd( 127.783, -352.176, 111.855, 0.68 ) }
    dend_28 { pt3dadd( 127.844, -353.976, 113.981, 0.68 ) }
    dend_28 { pt3dadd( 127.919, -354.584, 114.604, 0.68 ) }
    dend_28 { pt3dadd( 128.003, -355.119, 115.107, 0.68 ) }
    dend_28 { pt3dadd( 128.277, -356.784, 116.449, 0.68 ) }
    dend_28 { pt3dadd( 128.359, -357.469, 117.029, 0.68 ) }
    dend_28 { pt3dadd( 128.562, -359.322, 118.513, 0.45 ) }
    dend_28 { pt3dadd( 128.554, -360.303, 119.49, 0.45 ) }
    dend_28 { pt3dadd( 128.528, -360.738, 119.938, 0.45 ) }
    dend_28 { pt3dadd( 128.475, -361.407, 120.644, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.85714, -40.5987, 1.53689, 0.79 ) }
    dend_27 { pt3dadd( 6.65039, -39.1007, 1.57619, 0.79 ) }
    dend_27 { pt3dadd( 8.21628, -37.7927, 1.61051, 0.57 ) }
    dend_27 { pt3dadd( 8.93255, -37.1944, 1.62621, 0.34 ) }
    dend_27 { pt3dadd( 9.7474, -36.5137, 1.64407, 0.34 ) }
    dend_27 { pt3dadd( 10.0933, -36.2248, 1.65165, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 84.1237, -25.3873, -20.5072, 0.45 ) }
    dend_21 { pt3dadd( 84.955, -27.3197, -21.9277, 0.45 ) }
    dend_21 { pt3dadd( 86.047, -29.6472, -23.8873, 0.45 ) }
    dend_21 { pt3dadd( 88.3491, -34.3857, -28.1511, 0.45 ) }
    dend_21 { pt3dadd( 90.0134, -37.2943, -31.5503, 0.45 ) }
    dend_21 { pt3dadd( 91.5406, -40.0357, -35.1609, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 91.924, -40.8149, -36.2242, 0.45 ) }
    dend_21 { pt3dadd( 93.1053, -43.4973, -40.026, 0.45 ) }
    dend_21 { pt3dadd( 94.4869, -46.9488, -45.0186, 0.45 ) }
    dend_21 { pt3dadd( 96.1745, -51.9183, -52.0945, 0.45 ) }
    dend_21 { pt3dadd( 97.0136, -54.8049, -56.2051, 0.45 ) }
    dend_21 { pt3dadd( 97.8866, -58.9218, -61.9819, 0.45 ) }
    dend_21 { pt3dadd( 98.3659, -62.9203, -67.3353, 0.45 ) }
    dend_21 { pt3dadd( 98.3769, -65.7686, -70.9193, 0.45 ) }
    dend_21 { pt3dadd( 97.8091, -69.7719, -75.7443, 0.45 ) }
    dend_21 { pt3dadd( 97.0442, -72.2017, -78.441, 0.45 ) }
    dend_21 { pt3dadd( 96.1928, -74.3391, -80.9428, 0.45 ) }
    dend_21 { pt3dadd( 94.721, -76.7405, -84.0296, 0.45 ) }
    dend_21 { pt3dadd( 93.1708, -78.3388, -86.3314, 0.45 ) }
    dend_21 { pt3dadd( 90.6306, -80.1855, -89.2489, 0.45 ) }
    dend_21 { pt3dadd( 87.0587, -82.1369, -92.5262, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 84.1237, -25.3873, -20.5072, 0.45 ) }
    dend_20 { pt3dadd( 87.0426, -29.4262, -19.9824, 0.45 ) }
    dend_20 { pt3dadd( 88.3565, -31.2443, -19.7461, 0.45 ) }
    dend_20 { pt3dadd( 90.1619, -33.7425, -19.4215, 0.45 ) }
    dend_20 { pt3dadd( 91.1062, -35.0492, -19.2517, 0.45 ) }
    dend_20 { pt3dadd( 93.1384, -37.8611, -18.8863, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 68.4135, -115.151, 54.5831, 0.57 ) }
    dend_66 { pt3dadd( 66.4133, -117.455, 56.8833, 0.57 ) }
    dend_66 { pt3dadd( 64.9143, -119.358, 58.7492, 0.57 ) }
    dend_66 { pt3dadd( 63.7099, -120.959, 60.2536, 0.57 ) }
    dend_66 { pt3dadd( 63.0052, -122.035, 61.154, 0.57 ) }
    dend_66 { pt3dadd( 61.9534, -123.936, 62.6066, 0.57 ) }
    dend_66 { pt3dadd( 60.7661, -126.746, 64.7758, 0.57 ) }
    dend_66 { pt3dadd( 60.2328, -128.557, 66.1736, 0.57 ) }
    dend_66 { pt3dadd( 59.9215, -129.916, 67.0887, 0.57 ) }
    dend_66 { pt3dadd( 59.5629, -132.239, 69.0434, 0.57 ) }
    dend_66 { pt3dadd( 59.1199, -135.429, 71.9086, 0.57 ) }
    dend_66 { pt3dadd( 58.5611, -139.05, 75.696, 0.57 ) }
    dend_66 { pt3dadd( 58.2963, -140.166, 77.0451, 0.57 ) }
    dend_66 { pt3dadd( 57.3893, -142.486, 80.8201, 0.57 ) }
    dend_66 { pt3dadd( 54.4019, -146.435, 90.5105, 0.57 ) }
    dend_66 { pt3dadd( 53.1905, -147.044, 93.2605, 0.57 ) }
    dend_66 { pt3dadd( 51.0808, -147.232, 96.6085, 0.57 ) }
    dend_66 { pt3dadd( 48.7513, -147.083, 99.4552, 0.57 ) }
    dend_66 { pt3dadd( 45.7885, -146.802, 103.054, 0.57 ) }
    dend_66 { pt3dadd( 43.2326, -146.576, 105.813, 0.57 ) }
    dend_66 { pt3dadd( 40.1693, -146.506, 108.816, 0.57 ) }
    dend_66 { pt3dadd( 37.6181, -146.682, 111.613, 0.57 ) }
    dend_66 { pt3dadd( 34.5022, -147.306, 115.25, 0.57 ) }
    dend_66 { pt3dadd( 29.9512, -149.07, 121.114, 0.57 ) }
    dend_66 { pt3dadd( 27.9747, -150.444, 124.44, 0.57 ) }
    dend_66 { pt3dadd( 26.2652, -152.198, 128.269, 0.57 ) }
    dend_66 { pt3dadd( 25.4728, -153.313, 130.767, 0.57 ) }
    dend_66 { pt3dadd( 25.1085, -153.933, 132.316, 0.57 ) }
    dend_66 { pt3dadd( 24.6125, -154.8, 134.523, 0.57 ) }
    dend_66 { pt3dadd( 22.6558, -157.624, 142.47, 0.57 ) }
    dend_66 { pt3dadd( 22.2278, -158.18, 144.123, 0.57 ) }
    dend_66 { pt3dadd( 21.5902, -158.912, 146.354, 0.57 ) }
    dend_66 { pt3dadd( 19.4913, -161.116, 153.386, 0.57 ) }
    dend_66 { pt3dadd( 18.542, -162.078, 156.208, 0.57 ) }
    dend_66 { pt3dadd( 15.5526, -164.964, 163.958, 0.57 ) }
    dend_66 { pt3dadd( 14.8788, -165.612, 165.521, 0.57 ) }
    dend_66 { pt3dadd( 12.2007, -168.211, 171.403, 0.57 ) }
    dend_66 { pt3dadd( 11.4291, -168.962, 172.999, 0.57 ) }
    dend_66 { pt3dadd( 9.60412, -170.667, 176.352, 0.57 ) }
    dend_66 { pt3dadd( 8.64263, -171.559, 177.973, 0.57 ) }
    dend_66 { pt3dadd( 4.32385, -175.659, 184.495, 0.57 ) }
    dend_66 { pt3dadd( 2.26603, -177.634, 187.387, 0.57 ) }
    dend_66 { pt3dadd( -0.486378, -180.239, 190.563, 0.57 ) }
    dend_66 { pt3dadd( -4.24838, -183.824, 194.347, 0.57 ) }
    dend_66 { pt3dadd( -8.77263, -188.14, 198.357, 0.57 ) }
    dend_66 { pt3dadd( -10.1016, -189.424, 199.262, 0.57 ) }
    dend_66 { pt3dadd( -12.5306, -191.795, 200.356, 0.57 ) }
    dend_66 { pt3dadd( -17.3978, -196.32, 200.77, 0.57 ) }
    dend_66 { pt3dadd( -20.3062, -198.903, 200.159, 0.57 ) }
    dend_66 { pt3dadd( -23.6712, -201.877, 198.926, 0.57 ) }
    dend_66 { pt3dadd( -27.4069, -205.145, 197.247, 0.57 ) }
    dend_66 { pt3dadd( -30.4443, -207.774, 195.72, 0.57 ) }
    dend_66 { pt3dadd( -42.3365, -218.099, 188.853, 0.57 ) }
    dend_66 { pt3dadd( -42.5421, -218.28, 188.72, 2.26 ) }
    dend_66 { pt3dadd( -46.2653, -221.399, 185.618, 0.68 ) }
    dend_66 { pt3dadd( -47.7684, -222.615, 184.001, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 68.4135, -115.151, 54.5831, 0.57 ) }
    dend_65 { pt3dadd( 69.9549, -117.28, 59.8672, 0.57 ) }
    dend_65 { pt3dadd( 71.0697, -118.811, 63.4715, 0.57 ) }
    dend_65 { pt3dadd( 71.3296, -119.148, 64.1666, 0.57 ) }
    dend_65 { pt3dadd( 72.0699, -120.107, 65.9425, 0.57 ) }
    dend_65 { pt3dadd( 73.5096, -121.957, 69.3826, 0.57 ) }
    dend_65 { pt3dadd( 77.0372, -126.269, 77.3384, 0.57 ) }
    dend_65 { pt3dadd( 77.7939, -127.121, 78.7733, 0.57 ) }
    dend_65 { pt3dadd( 79.4148, -128.877, 81.4786, 0.57 ) }
    dend_65 { pt3dadd( 80.0695, -129.551, 82.427, 0.57 ) }
    dend_65 { pt3dadd( 82.7627, -132.205, 86.0507, 0.57 ) }
    dend_65 { pt3dadd( 83.7213, -133.184, 87.0863, 0.57 ) }
    dend_65 { pt3dadd( 85.2141, -134.76, 88.1313, 0.57 ) }
    dend_65 { pt3dadd( 86.7032, -136.204, 89.2171, 0.57 ) }
    dend_65 { pt3dadd( 88.7739, -138.193, 90.8282, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 81.2242, -49.4674, 8.03555, 0.34 ) }
    dend_63 { pt3dadd( 80.5924, -51.3369, 6.73366, 0.34 ) }
    dend_63 { pt3dadd( 80.2499, -52.7936, 5.63007, 0.34 ) }
    dend_63 { pt3dadd( 79.9069, -54.3801, 4.4613, 0.45 ) }
    dend_63 { pt3dadd( 79.3397, -57.1099, 2.53436, 0.45 ) }
    dend_63 { pt3dadd( 78.8146, -59.6541, 0.679522, 0.45 ) }
    dend_63 { pt3dadd( 78.3533, -61.9664, -0.984, 0.45 ) }
    dend_63 { pt3dadd( 77.851, -64.911, -3.40304, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 77.7058, -66.1185, -4.41859, 0.45 ) }
    dend_63 { pt3dadd( 77.6261, -66.9831, -5.14632, 0.45 ) }
    dend_63 { pt3dadd( 77.4522, -69.2892, -7.0058, 0.45 ) }
    dend_63 { pt3dadd( 77.3538, -70.8775, -8.16935, 0.45 ) }
    dend_63 { pt3dadd( 77.0976, -75.2204, -11.1745, 0.45 ) }
    dend_63 { pt3dadd( 76.9774, -77.0226, -12.4273, 0.45 ) }
    dend_63 { pt3dadd( 76.9281, -78.1665, -13.2128, 0.45 ) }
    dend_63 { pt3dadd( 76.8261, -80.5294, -14.7062, 0.45 ) }
    dend_63 { pt3dadd( 76.7358, -83.0388, -16.3597, 0.45 ) }
    dend_63 { pt3dadd( 76.6415, -84.5176, -17.4931, 0.45 ) }
    dend_63 { pt3dadd( 76.3855, -87.04, -19.6306, 0.45 ) }
    dend_63 { pt3dadd( 76.2322, -88.2294, -20.7471, 0.45 ) }
    dend_63 { pt3dadd( 75.981, -89.8159, -22.493, 0.45 ) }
    dend_63 { pt3dadd( 75.2736, -93.4535, -26.927, 0.45 ) }
    dend_63 { pt3dadd( 74.941, -95.0287, -29.1665, 0.45 ) }
    dend_63 { pt3dadd( 74.7038, -96.2238, -30.9282, 0.45 ) }
    dend_63 { pt3dadd( 74.4514, -97.6888, -33.0671, 0.45 ) }
    dend_63 { pt3dadd( 73.9821, -100.618, -37.317, 0.23 ) }
    dend_63 { pt3dadd( 73.8809, -101.335, -38.3558, 0.23 ) }
    dend_63 { pt3dadd( 73.551, -103.993, -41.7383, 0.23 ) }
    dend_63 { pt3dadd( 73.4783, -105.04, -43.0204, 0.23 ) }
    dend_63 { pt3dadd( 73.3694, -107.436, -46.0776, 0.45 ) }
    dend_63 { pt3dadd( 73.3504, -108.208, -47.1055, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 81.2242, -49.4674, 8.03555, 0.45 ) }
    dend_50 { pt3dadd( 83.535, -52.1538, 7.87046, 0.45 ) }
    dend_50 { pt3dadd( 85.7664, -54.8213, 7.67683, 0.45 ) }
    dend_50 { pt3dadd( 87.5324, -57.0265, 7.50968, 0.45 ) }
    dend_50 { pt3dadd( 89.8109, -59.91, 7.4556, 0.45 ) }
    dend_50 { pt3dadd( 93.5791, -64.637, 7.47858, 0.45 ) }
    dend_50 { pt3dadd( 96.106, -67.8068, 7.49399, 0.45 ) }
    dend_50 { pt3dadd( 97.5321, -69.708, 7.47913, 0.45 ) }
    dend_50 { pt3dadd( 99.8401, -72.9659, 7.48981, 0.45 ) }
    dend_50 { pt3dadd( 102.175, -76.4047, 7.5187, 0.45 ) }
    dend_50 { pt3dadd( 104.307, -79.4219, 7.73955, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -40.6575, -77.089, -27.5952, 0.57 ) }
    dend_43 { pt3dadd( -43.4923, -77.0124, -30.9577, 0.57 ) }
    dend_43 { pt3dadd( -43.8973, -77.0015, -31.4381, 0.57 ) }
    dend_43 { pt3dadd( -44.7762, -76.9778, -32.4806, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -40.6575, -77.089, -27.5952, 0.68 ) }
    dend_42 { pt3dadd( -41.2834, -78.2472, -28.148, 0.68 ) }
    dend_42 { pt3dadd( -42.3622, -79.8606, -29.313, 0.68 ) }
    dend_42 { pt3dadd( -42.9496, -80.629, -29.9126, 0.68 ) }
    dend_42 { pt3dadd( -43.4606, -81.2003, -30.3748, 0.68 ) }
    dend_42 { pt3dadd( -44.7023, -82.4039, -31.5659, 0.68 ) }
    dend_42 { pt3dadd( -45.2884, -82.9355, -32.1195, 0.68 ) }
    dend_42 { pt3dadd( -47.1911, -84.5248, -33.9143, 0.68 ) }
    dend_42 { pt3dadd( -47.8507, -85.0917, -34.4953, 0.68 ) }
    dend_42 { pt3dadd( -48.6973, -85.8015, -35.1491, 0.68 ) }
    dend_42 { pt3dadd( -50.4543, -87.2618, -36.3827, 0.68 ) }
    dend_42 { pt3dadd( -51.8298, -88.3611, -37.1848, 0.68 ) }
    dend_42 { pt3dadd( -54.0895, -90.1747, -38.366, 0.68 ) }
    dend_42 { pt3dadd( -56.0284, -91.7346, -39.2559, 0.68 ) }
    dend_42 { pt3dadd( -58.1309, -93.4229, -40.1523, 0.68 ) }
    dend_42 { pt3dadd( -59.8071, -94.7856, -40.8186, 0.68 ) }
    dend_42 { pt3dadd( -61.7827, -96.3555, -41.4738, 0.68 ) }
    dend_42 { pt3dadd( -63.5712, -97.6702, -42.0478, 0.57 ) }
    dend_42 { pt3dadd( -65.1598, -98.708, -42.5121, 0.57 ) }
    dend_42 { pt3dadd( -67.1143, -99.9427, -43.1369, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -3.99001, -69.2394, 16.3318, 0.45 ) }
    dend_38 { pt3dadd( -7.4215, -69.9023, 19.1527, 0.45 ) }
    dend_38 { pt3dadd( -8.98387, -70.0216, 20.5151, 0.45 ) }
    dend_38 { pt3dadd( -12.5924, -70.0535, 23.3358, 0.45 ) }
    dend_38 { pt3dadd( -13.5602, -70.01, 24.1247, 0.45 ) }
    dend_38 { pt3dadd( -14.9013, -69.8541, 25.2087, 0.45 ) }
    dend_38 { pt3dadd( -15.7273, -69.7381, 26.2938, 0.45 ) }
    dend_38 { pt3dadd( -16.5131, -69.5761, 27.8106, 0.45 ) }
    dend_38 { pt3dadd( -17.1761, -69.3367, 29.4392, 0.45 ) }
    dend_38 { pt3dadd( -17.9083, -68.935, 31.0763, 0.45 ) }
    dend_38 { pt3dadd( -18.4273, -68.5844, 32.2012, 0.45 ) }
    dend_38 { pt3dadd( -21.6273, -66.3347, 39.1879, 0.45 ) }
    dend_38 { pt3dadd( -22.3397, -65.8992, 40.6346, 0.45 ) }
    dend_38 { pt3dadd( -23.8236, -65.1364, 43.3362, 0.45 ) }
    dend_38 { pt3dadd( -26.1981, -64.0547, 47.2543, 0.45 ) }
    dend_38 { pt3dadd( -27.1528, -63.7585, 48.5668, 0.45 ) }
    dend_38 { pt3dadd( -30.0564, -63.4877, 51.899, 0.45 ) }
    dend_38 { pt3dadd( -31.4631, -63.6509, 53.0229, 0.45 ) }
    dend_38 { pt3dadd( -32.2958, -63.9225, 53.6654, 0.34 ) }
    dend_38 { pt3dadd( -33.2284, -64.4257, 54.3355, 0.34 ) }
    dend_38 { pt3dadd( -35.8329, -66.09, 55.8166, 0.34 ) }
    dend_38 { pt3dadd( -38.2193, -67.6287, 56.7939, 0.34 ) }
    dend_38 { pt3dadd( -39.9905, -68.719, 57.2698, 0.34 ) }
    dend_38 { pt3dadd( -42.093, -69.9137, 57.8534, 0.34 ) }
    dend_38 { pt3dadd( -45.6276, -71.8099, 58.8946, 0.34 ) }
    dend_38 { pt3dadd( -50.2154, -74.0664, 60.2976, 0.34 ) }
    dend_38 { pt3dadd( -51.8012, -74.7057, 60.7561, 0.34 ) }
    dend_38 { pt3dadd( -52.9089, -75.052, 61.1833, 0.34 ) }
    dend_38 { pt3dadd( -55.9942, -75.8633, 62.6971, 0.34 ) }
    dend_38 { pt3dadd( -58.0163, -76.3856, 64.0267, 0.34 ) }
    dend_38 { pt3dadd( -59.5137, -76.7844, 65.368, 0.34 ) }
    dend_38 { pt3dadd( -61.1047, -77.2563, 67.1506, 0.34 ) }
    dend_38 { pt3dadd( -63.1206, -77.9397, 69.3083, 0.34 ) }
    dend_38 { pt3dadd( -65.6168, -78.9019, 71.923, 0.34 ) }
    dend_38 { pt3dadd( -68.4155, -80.1005, 74.6711, 0.34 ) }
    dend_38 { pt3dadd( -71.2159, -81.389, 77.2908, 0.34 ) }
    dend_38 { pt3dadd( -73.0018, -82.3049, 78.8391, 0.34 ) }
    dend_38 { pt3dadd( -75.674, -83.8773, 80.991, 0.34 ) }
    dend_38 { pt3dadd( -77.2024, -84.8166, 82.0424, 0.34 ) }
    dend_38 { pt3dadd( -78.2728, -85.4721, 82.6744, 0.34 ) }
    dend_38 { pt3dadd( -81.5162, -87.3852, 84.1141, 0.34 ) }
    dend_38 { pt3dadd( -83.4435, -88.579, 84.8777, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -85.9881, -90.1599, 85.9155, 0.34 ) }
    dend_38 { pt3dadd( -86.958, -90.7392, 86.3593, 0.34 ) }
    dend_38 { pt3dadd( -89.3412, -92.0503, 87.3254, 0.34 ) }
    dend_38 { pt3dadd( -90.62, -92.7275, 87.8037, 0.34 ) }
    dend_38 { pt3dadd( -93.1023, -94.003, 88.6245, 0.34 ) }
    dend_38 { pt3dadd( -94.5666, -94.7348, 89.04, 0.34 ) }
    dend_38 { pt3dadd( -96.1939, -95.5083, 89.4175, 0.34 ) }
    dend_38 { pt3dadd( -99.1145, -96.8586, 90.034, 0.34 ) }
    dend_38 { pt3dadd( -101.536, -97.9014, 90.4967, 0.34 ) }
    dend_38 { pt3dadd( -104.057, -98.8497, 90.9201, 0.34 ) }
    dend_38 { pt3dadd( -106.435, -99.5855, 91.2961, 0.34 ) }
    dend_38 { pt3dadd( -108.244, -100.077, 91.6565, 0.34 ) }
    dend_38 { pt3dadd( -110.011, -100.503, 92.028, 0.34 ) }
    dend_38 { pt3dadd( -111.707, -100.826, 92.4183, 0.34 ) }
    dend_38 { pt3dadd( -113.104, -100.977, 92.7801, 0.34 ) }
    dend_38 { pt3dadd( -115.658, -100.989, 93.5567, 0.34 ) }
    dend_38 { pt3dadd( -117.436, -100.831, 94.2214, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.99001, -69.2394, 16.3318, 2.72 ) }
    dend_33 { pt3dadd( -4.17944, -73.827, 23.4694, 2.72 ) }
    dend_33 { pt3dadd( -4.14219, -75.8202, 26.518, 1.47 ) }
    dend_33 { pt3dadd( -4.03516, -77.6042, 28.932, 1.13 ) }
    dend_33 { pt3dadd( -3.57534, -83.4865, 36.3514, 1.13 ) }
    dend_33 { pt3dadd( -3.4917, -84.6918, 37.6479, 3.39 ) }
    dend_33 { pt3dadd( -3.38202, -87.1683, 39.8676, 1.81 ) }
    dend_33 { pt3dadd( -3.13917, -92.4688, 42.8222, 0.68 ) }
    dend_33 { pt3dadd( -3.09349, -95.448, 43.9816, 0.68 ) }
    dend_33 { pt3dadd( -3.17387, -97.07, 44.2614, 0.68 ) }
    dend_33 { pt3dadd( -3.63263, -101.916, 44.2344, 0.68 ) }
    dend_33 { pt3dadd( -4.11678, -105.215, 44.1256, 0.68 ) }
    dend_33 { pt3dadd( -4.68601, -108.102, 43.8813, 0.68 ) }
    dend_33 { pt3dadd( -5.35234, -111.345, 43.4141, 0.68 ) }
    dend_33 { pt3dadd( -6.17069, -115.091, 43.0105, 0.68 ) }
    dend_33 { pt3dadd( -6.65919, -117.421, 42.7517, 0.68 ) }
    dend_33 { pt3dadd( -7.24738, -120.432, 42.5017, 0.68 ) }
    dend_33 { pt3dadd( -7.71625, -123.111, 42.2543, 0.68 ) }
    dend_33 { pt3dadd( -8.67917, -128.898, 41.8197, 0.68 ) }
    dend_33 { pt3dadd( -8.88394, -130.233, 41.8323, 3.51 ) }
    dend_33 { pt3dadd( -9.29722, -133.353, 42.0869, 1.7 ) }
    dend_33 { pt3dadd( -9.69513, -135.747, 42.5368, 0.79 ) }
    dend_33 { pt3dadd( -10.2743, -138.519, 43.3237, 0.79 ) }
    dend_33 { pt3dadd( -11.4675, -143.626, 45.1745, 0.68 ) }
    dend_33 { pt3dadd( -12.6285, -148.41, 47.1602, 0.79 ) }
    dend_33 { pt3dadd( -12.9519, -149.848, 47.7452, 0.45 ) }
    dend_33 { pt3dadd( -13.9183, -153.903, 50.3802, 0.45 ) }
    dend_33 { pt3dadd( -14.2408, -155.381, 51.5963, 0.45 ) }
    dend_33 { pt3dadd( -14.4329, -156.459, 52.6414, 0.68 ) }
    dend_33 { pt3dadd( -14.8004, -158.976, 55.464, 0.68 ) }
    dend_33 { pt3dadd( -14.9351, -160.276, 56.9761, 0.68 ) }
    dend_33 { pt3dadd( -15.6348, -168.589, 66.8667, 2.38 ) }
    dend_33 { pt3dadd( -15.7374, -169.969, 68.6028, 1.47 ) }
    dend_33 { pt3dadd( -15.8028, -170.723, 69.5486, 0.79 ) }
    dend_33 { pt3dadd( -16.0312, -173.617, 73.1197, 0.79 ) }
    dend_33 { pt3dadd( -16.1702, -175.778, 75.631, 0.79 ) }
    dend_33 { pt3dadd( -16.2344, -177.381, 77.199, 2.15 ) }
    dend_33 { pt3dadd( -16.1509, -182.431, 80.5615, 0.79 ) }
    dend_33 { pt3dadd( -15.9945, -185.47, 82.4168, 0.68 ) }
    dend_33 { pt3dadd( -15.7826, -187.671, 83.4868, 0.68 ) }
    dend_33 { pt3dadd( -15.4767, -189.703, 84.2011, 0.68 ) }
    dend_33 { pt3dadd( -15.3473, -190.518, 84.4072, 0.68 ) }
    dend_33 { pt3dadd( -14.9431, -193.016, 84.6473, 0.68 ) }
    dend_33 { pt3dadd( -14.5405, -195.716, 84.5058, 0.68 ) }
    dend_33 { pt3dadd( -14.2013, -200.508, 84.0424, 0.68 ) }
    dend_33 { pt3dadd( -14.2302, -201.43, 83.916, 2.6 ) }
    dend_33 { pt3dadd( -14.4081, -203.003, 83.6715, 2.26 ) }
    dend_33 { pt3dadd( -15.4889, -208.178, 82.8135, 0.45 ) }
    dend_33 { pt3dadd( -15.9994, -209.803, 82.5368, 0.45 ) }
    dend_33 { pt3dadd( -16.9295, -212.224, 82.068, 0.45 ) }
    dend_33 { pt3dadd( -18.4267, -215.711, 81.3678, 0.45 ) }
    dend_33 { pt3dadd( -19.937, -219.004, 80.7796, 0.45 ) }
    dend_33 { pt3dadd( -21.7096, -222.664, 80.2405, 0.45 ) }
    dend_33 { pt3dadd( -23.6835, -226.539, 79.7883, 0.45 ) }
    dend_33 { pt3dadd( -25.5838, -230.318, 79.3031, 2.38 ) }
    dend_33 { pt3dadd( -26.0257, -231.229, 79.1804, 3.51 ) }
    dend_33 { pt3dadd( -28.1822, -235.662, 78.5946, 0.57 ) }
    dend_33 { pt3dadd( -29.1368, -237.629, 78.3252, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -5.07881, -54.738, 19.2532, 0.45 ) }
    dend_31 { pt3dadd( -4.05503, -54.2439, 17.6773, 0.45 ) }
    dend_31 { pt3dadd( -3.35884, -53.977, 16.8241, 0.45 ) }
    dend_31 { pt3dadd( -2.29485, -53.696, 15.6493, 0.45 ) }
    dend_31 { pt3dadd( 0.676733, -53.2175, 12.7822, 0.45 ) }
    dend_31 { pt3dadd( 3.39649, -52.8724, 10.2938, 0.45 ) }
    dend_31 { pt3dadd( 6.02698, -52.5391, 7.92662, 0.45 ) }
    dend_31 { pt3dadd( 8.71273, -52.1465, 5.03789, 0.45 ) }
    dend_31 { pt3dadd( 11.0787, -51.775, 2.44986, 0.45 ) }
    dend_31 { pt3dadd( 12.9276, -51.4976, 0.464019, 0.45 ) }
    dend_31 { pt3dadd( 16.4274, -51.0204, -3.18275, 0.45 ) }
    dend_31 { pt3dadd( 18.8414, -50.6676, -5.70001, 0.45 ) }
    dend_31 { pt3dadd( 23.4147, -49.7589, -10.8489, 0.45 ) }
    dend_31 { pt3dadd( 24.9242, -49.3678, -13.0525, 0.45 ) }
    dend_31 { pt3dadd( 25.0775, -49.3109, -13.307, 0.45 ) }
    dend_31 { pt3dadd( 25.3081, -49.2014, -13.7893, 0.45 ) }
    dend_31 { pt3dadd( 26.2447, -48.8206, -15.8111, 0.45 ) }
    dend_31 { pt3dadd( 28.2701, -48.4067, -20.4467, 0.45 ) }
    dend_31 { pt3dadd( 29.4143, -48.3666, -22.7931, 0.45 ) }
    dend_31 { pt3dadd( 30.0136, -48.3936, -24.015, 0.45 ) }
    dend_31 { pt3dadd( 31.4325, -48.5814, -26.9157, 0.45 ) }
    dend_31 { pt3dadd( 32.3315, -48.7915, -28.709, 0.45 ) }
    dend_31 { pt3dadd( 34.5262, -49.4027, -32.9558, 0.45 ) }
    dend_31 { pt3dadd( 36.0439, -49.7427, -35.3638, 0.45 ) }
    dend_31 { pt3dadd( 36.6581, -49.8752, -36.2538, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 37.3707, -49.9847, -37.1928, 0.45 ) }
    dend_31 { pt3dadd( 38.2085, -50.002, -38.1148, 0.45 ) }
    dend_31 { pt3dadd( 39.4573, -49.8032, -39.2855, 0.45 ) }
    dend_31 { pt3dadd( 41.7679, -49.087, -40.7367, 0.45 ) }
    dend_31 { pt3dadd( 42.8093, -48.7406, -41.4726, 0.45 ) }
    dend_31 { pt3dadd( 45.8218, -47.7124, -43.7196, 0.45 ) }
    dend_31 { pt3dadd( 47.2146, -47.2285, -44.8454, 0.45 ) }
    dend_31 { pt3dadd( 48.4184, -46.8492, -45.8488, 0.45 ) }
    dend_31 { pt3dadd( 50.6976, -46.2537, -47.7472, 0.45 ) }
    dend_31 { pt3dadd( 56.1, -45.2201, -52.0808, 0.45 ) }
    dend_31 { pt3dadd( 56.7521, -45.1163, -52.6099, 0.45 ) }
    dend_31 { pt3dadd( 58.7526, -44.9239, -54.3147, 0.45 ) }
    dend_31 { pt3dadd( 60.1203, -44.8638, -55.5501, 0.45 ) }
    dend_31 { pt3dadd( 60.7429, -44.8678, -56.1331, 0.45 ) }
    dend_31 { pt3dadd( 62.9748, -44.9482, -58.1972, 0.45 ) }
    dend_31 { pt3dadd( 64.9021, -45.0008, -58.9408, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -47.7684, -222.615, 184.001, 0.57 ) }
    dend_68 { pt3dadd( -48.6554, -223.465, 184.629, 0.57 ) }
    dend_68 { pt3dadd( -51.2265, -225.59, 186.34, 0.57 ) }
    dend_68 { pt3dadd( -53.4096, -227.198, 187.735, 0.45 ) }
    dend_68 { pt3dadd( -55.2781, -228.492, 189.191, 0.45 ) }
    dend_68 { pt3dadd( -56.6957, -229.432, 190.383, 0.45 ) }
    dend_68 { pt3dadd( -57.9178, -230.232, 191.508, 0.45 ) }
    dend_68 { pt3dadd( -59.3009, -231.07, 192.815, 0.45 ) }
    dend_68 { pt3dadd( -60.7406, -231.799, 194.268, 0.45 ) }
    dend_68 { pt3dadd( -64.478, -233.497, 198.356, 0.45 ) }
    dend_68 { pt3dadd( -65.1462, -233.807, 199.166, 0.45 ) }
    dend_68 { pt3dadd( -66.3001, -234.431, 200.734, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -47.7684, -222.615, 184.001, 0.57 ) }
    dend_67 { pt3dadd( -48.231, -227.855, 185.958, 0.57 ) }
    dend_67 { pt3dadd( -48.39, -229.641, 186.656, 0.57 ) }
    dend_67 { pt3dadd( -48.5886, -231.888, 187.5, 0.57 ) }
    dend_67 { pt3dadd( -48.8743, -234.919, 188.603, 0.57 ) }
    dend_67 { pt3dadd( -49.0214, -237.003, 189.41, 0.57 ) }
    dend_67 { pt3dadd( -49.0757, -238.058, 189.806, 0.57 ) }
    dend_67 { pt3dadd( -49.0778, -238.25, 189.89, 2.04 ) }
    dend_67 { pt3dadd( -49.4053, -240.901, 190.775, 0.57 ) }
    dend_67 { pt3dadd( -49.6415, -241.805, 191.032, 0.57 ) }
    dend_67 { pt3dadd( -50.2071, -243.091, 191.351, 1.92 ) }
    dend_67 { pt3dadd( -51.7444, -246.301, 192.601, 0.68 ) }
    dend_67 { pt3dadd( -52.4495, -247.699, 193.262, 0.68 ) }
    dend_67 { pt3dadd( -54.4516, -251.341, 195.078, 0.57 ) }
    dend_67 { pt3dadd( -55.6145, -253.814, 196.699, 0.57 ) }
    dend_67 { pt3dadd( -56.9666, -257.389, 199.376, 0.57 ) }
    dend_67 { pt3dadd( -58.4053, -262.877, 203.596, 0.57 ) }
    dend_67 { pt3dadd( -58.5165, -263.725, 204.271, 0.57 ) }
    dend_67 { pt3dadd( -58.5537, -265.577, 205.635, 0.45 ) }
    dend_67 { pt3dadd( -57.6896, -272.938, 211.024, 0.45 ) }
    dend_67 { pt3dadd( -57.49, -274.152, 211.865, 0.45 ) }
    dend_67 { pt3dadd( -56.9042, -277.857, 214.29, 0.45 ) }
    dend_67 { pt3dadd( -56.668, -280.671, 215.831, 0.45 ) }
    dend_67 { pt3dadd( -56.4947, -282.966, 217.286, 0.45 ) }
    dend_67 { pt3dadd( -56.475, -287.473, 220.391, 0.45 ) }
    dend_67 { pt3dadd( -56.7043, -289.252, 221.713, 0.45 ) }
    dend_67 { pt3dadd( -56.935, -290.747, 223.051, 0.45 ) }
    dend_67 { pt3dadd( -57.0255, -291.266, 223.604, 0.45 ) }
    dend_67 { pt3dadd( -57.6804, -295.113, 228.2, 0.11 ) }
    dend_67 { pt3dadd( -58.0257, -297.232, 230.942, 0.23 ) }
    dend_67 { pt3dadd( -58.611, -300.385, 234.831, 0.23 ) }
    dend_67 { pt3dadd( -58.7661, -301.74, 236.588, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 104.307, -79.4219, 7.73955, 0.34 ) }
    dend_52 { pt3dadd( 106.645, -82.2309, 7.36307, 0.34 ) }
    dend_52 { pt3dadd( 109.461, -85.6121, 6.90987, 0.34 ) }
    dend_52 { pt3dadd( 112.225, -88.931, 6.46502, 0.34 ) }
    dend_52 { pt3dadd( 114.211, -91.3164, 6.14531, 0.34 ) }
    dend_52 { pt3dadd( 115.283, -92.6035, 5.97278, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 104.307, -79.4219, 7.73955, 0.45 ) }
    dend_51 { pt3dadd( 106.175, -78.0498, 7.98096, 0.45 ) }
    dend_51 { pt3dadd( 107.578, -76.9815, 8.09007, 0.45 ) }
    dend_51 { pt3dadd( 109.713, -75.3796, 8.23184, 0.45 ) }
    dend_51 { pt3dadd( 111.181, -74.2601, 8.36705, 0.45 ) }
    dend_51 { pt3dadd( 114.107, -72.0271, 8.6747, 0.45 ) }
    dend_51 { pt3dadd( 116.089, -70.585, 8.90377, 0.45 ) }
    dend_51 { pt3dadd( 117.624, -69.5579, 9.12334, 0.45 ) }
    dend_51 { pt3dadd( 119.732, -68.2061, 9.38988, 0.45 ) }
    dend_51 { pt3dadd( 122.178, -66.625, 9.62978, 0.45 ) }
    dend_51 { pt3dadd( 122.479, -66.4193, 9.64348, 1.58 ) }
    dend_51 { pt3dadd( 124.728, -64.8317, 9.73405, 0.34 ) }
    dend_51 { pt3dadd( 126.56, -63.5414, 9.6807, 0.34 ) }
    dend_51 { pt3dadd( 129.64, -61.2954, 9.32208, 0.34 ) }
    dend_51 { pt3dadd( 131.383, -59.9953, 8.95448, 0.34 ) }
    dend_51 { pt3dadd( 133.276, -58.8404, 8.3936, 0.34 ) }
    dend_51 { pt3dadd( 134.505, -58.1753, 7.92754, 0.34 ) }
    dend_51 { pt3dadd( 135.93, -57.5821, 7.34791, 0.34 ) }
    dend_51 { pt3dadd( 138.21, -57.0198, 6.38242, 0.34 ) }
    dend_51 { pt3dadd( 140.012, -56.849, 5.72134, 0.34 ) }
    dend_51 { pt3dadd( 145.036, -56.8001, 4.06597, 0.34 ) }
    dend_51 { pt3dadd( 147.727, -56.8554, 3.14509, 0.34 ) }
    dend_51 { pt3dadd( 150.543, -56.9611, 2.15272, 0.34 ) }
    dend_51 { pt3dadd( 154.889, -57.2534, 0.646981, 0.34 ) }
    dend_51 { pt3dadd( 157.526, -57.5418, -0.278392, 0.34 ) }
    dend_51 { pt3dadd( 160.367, -57.9009, -1.31906, 0.34 ) }
    dend_51 { pt3dadd( 163.173, -58.3156, -2.2347, 0.34 ) }
    dend_51 { pt3dadd( 165.955, -58.7492, -2.98416, 0.34 ) }
    dend_51 { pt3dadd( 167.224, -58.9108, -3.22749, 0.34 ) }
    dend_51 { pt3dadd( 168.737, -59.1295, -3.33918, 0.34 ) }
    dend_51 { pt3dadd( 170.48, -59.4249, -3.3642, 0.34 ) }
    dend_51 { pt3dadd( 171.827, -59.6598, -3.29613, 0.34 ) }
    dend_51 { pt3dadd( 173.383, -59.9159, -3.13446, 0.34 ) }
    dend_51 { pt3dadd( 178.794, -60.7176, -2.5434, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 181.339, -61.0287, -2.24834, 0.34 ) }
    dend_51 { pt3dadd( 183.897, -61.3161, -1.95061, 0.34 ) }
    dend_51 { pt3dadd( 186.267, -61.5876, -1.69174, 0.34 ) }
    dend_51 { pt3dadd( 190.206, -62.0236, -1.3583, 0.34 ) }
    dend_51 { pt3dadd( 193.301, -62.348, -1.11806, 0.34 ) }
    dend_51 { pt3dadd( 195.239, -62.5047, -0.985498, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -117.436, -100.831, 94.2214, 0.34 ) }
    dend_40 { pt3dadd( -118.592, -101.252, 95.1154, 0.34 ) }
    dend_40 { pt3dadd( -121.102, -102.37, 96.5731, 0.34 ) }
    dend_40 { pt3dadd( -122.135, -102.879, 97.0311, 2.04 ) }
    dend_40 { pt3dadd( -123.169, -103.416, 97.4325, 1.13 ) }
    dend_40 { pt3dadd( -124.832, -104.401, 98.0587, 0.79 ) }
    dend_40 { pt3dadd( -126.014, -105.121, 98.2974, 0.57 ) }
    dend_40 { pt3dadd( -128.167, -106.416, 98.4425, 0.57 ) }
    dend_40 { pt3dadd( -132.785, -109.134, 98.3567, 0.57 ) }
    dend_40 { pt3dadd( -134.874, -110.291, 98.4394, 0.57 ) }
    dend_40 { pt3dadd( -138.179, -112.022, 98.7364, 0.57 ) }
    dend_40 { pt3dadd( -144.095, -114.948, 99.544, 0.57 ) }
    dend_40 { pt3dadd( -147.415, -116.412, 100.056, 0.57 ) }
    dend_40 { pt3dadd( -148.981, -117.026, 100.327, 0.57 ) }
    dend_40 { pt3dadd( -155.371, -119.306, 101.617, 0.57 ) }
    dend_40 { pt3dadd( -157.231, -119.937, 102.056, 0.57 ) }
    dend_40 { pt3dadd( -158.933, -120.545, 102.587, 0.57 ) }
    dend_40 { pt3dadd( -161.561, -121.63, 103.605, 0.57 ) }
    dend_40 { pt3dadd( -164.209, -122.891, 104.721, 0.57 ) }
    dend_40 { pt3dadd( -165.959, -123.818, 105.515, 0.57 ) }
    dend_40 { pt3dadd( -168.087, -125.144, 106.499, 0.57 ) }
    dend_40 { pt3dadd( -173.307, -128.651, 109.172, 0.57 ) }
    dend_40 { pt3dadd( -176.009, -130.519, 110.643, 0.57 ) }
    dend_40 { pt3dadd( -179.573, -133.049, 112.651, 0.57 ) }
    dend_40 { pt3dadd( -182.352, -135.027, 114.217, 0.57 ) }
    dend_40 { pt3dadd( -185.215, -136.988, 115.777, 0.57 ) }
    dend_40 { pt3dadd( -187.157, -138.337, 116.843, 0.57 ) }
    dend_40 { pt3dadd( -189.092, -139.666, 117.812, 0.57 ) }
    dend_40 { pt3dadd( -191.494, -141.316, 119.029, 0.57 ) }
    dend_40 { pt3dadd( -192.885, -142.241, 119.638, 0.57 ) }
    dend_40 { pt3dadd( -194.465, -143.243, 120.315, 0.57 ) }
    dend_40 { pt3dadd( -197.632, -145.191, 121.713, 0.57 ) }
    dend_40 { pt3dadd( -200.654, -147.082, 122.88, 0.57 ) }
    dend_40 { pt3dadd( -202.83, -148.448, 123.589, 0.57 ) }
    dend_40 { pt3dadd( -205.581, -150.15, 124.323, 0.57 ) }
    dend_40 { pt3dadd( -207.866, -151.58, 124.799, 0.57 ) }
    dend_40 { pt3dadd( -209.434, -152.56, 125.032, 0.57 ) }
    dend_40 { pt3dadd( -212.506, -154.375, 124.998, 0.57 ) }
    dend_40 { pt3dadd( -214.861, -155.737, 124.758, 0.57 ) }
    dend_40 { pt3dadd( -217.635, -157.231, 124.041, 0.57 ) }
    dend_40 { pt3dadd( -220.087, -158.482, 122.997, 0.57 ) }
    dend_40 { pt3dadd( -222.742, -159.749, 121.581, 0.57 ) }
    dend_40 { pt3dadd( -227.025, -161.567, 118.882, 0.57 ) }
    dend_40 { pt3dadd( -228.647, -162.194, 117.866, 0.57 ) }
    dend_40 { pt3dadd( -234.308, -164.187, 114.378, 0.57 ) }
    dend_40 { pt3dadd( -238.405, -165.532, 111.855, 0.57 ) }
    dend_40 { pt3dadd( -239.757, -165.996, 111.071, 0.57 ) }
    dend_40 { pt3dadd( -243.444, -167.462, 109.273, 0.57 ) }
    dend_40 { pt3dadd( -247.408, -169.651, 108.414, 0.57 ) }
    dend_40 { pt3dadd( -249.786, -171.373, 108.474, 0.57 ) }
    dend_40 { pt3dadd( -250.586, -172.097, 108.745, 0.57 ) }
    dend_40 { pt3dadd( -252.347, -173.83, 109.576, 0.57 ) }
    dend_40 { pt3dadd( -253.364, -174.844, 110.05, 0.57 ) }
    dend_40 { pt3dadd( -256.573, -178.291, 111.351, 0.57 ) }
    dend_40 { pt3dadd( -258.742, -180.653, 111.706, 0.57 ) }
    dend_40 { pt3dadd( -259.844, -181.828, 111.605, 0.45 ) }
    dend_40 { pt3dadd( -260.868, -182.933, 111.331, 0.45 ) }
    dend_40 { pt3dadd( -262.446, -184.755, 110.447, 0.45 ) }
    dend_40 { pt3dadd( -264.324, -187.258, 108.538, 0.45 ) }
    dend_40 { pt3dadd( -265.628, -189.277, 106.521, 0.45 ) }
    dend_40 { pt3dadd( -267.465, -192.474, 103.066, 0.45 ) }
    dend_40 { pt3dadd( -268.367, -194.164, 101.22, 0.45 ) }
    dend_40 { pt3dadd( -269.565, -196.716, 98.6807, 0.45 ) }
    dend_40 { pt3dadd( -270.773, -199.616, 96.1483, 0.45 ) }
    dend_40 { pt3dadd( -271.733, -201.8, 94.6111, 0.45 ) }
    dend_40 { pt3dadd( -272.122, -202.676, 94.1612, 0.45 ) }
    dend_40 { pt3dadd( -272.871, -204.227, 93.6773, 0.45 ) }
    dend_40 { pt3dadd( -274.607, -207.338, 93.0476, 0.45 ) }
    dend_40 { pt3dadd( -275.919, -209.441, 92.9346, 0.45 ) }
    dend_40 { pt3dadd( -277.858, -212.223, 93.0828, 0.45 ) }
    dend_40 { pt3dadd( -279.716, -214.679, 93.6005, 0.45 ) }
    dend_40 { pt3dadd( -281.622, -217.016, 94.3626, 0.45 ) }
    dend_40 { pt3dadd( -282.899, -218.434, 95.082, 0.45 ) }
    dend_40 { pt3dadd( -283.784, -219.345, 95.803, 0.45 ) }
    dend_40 { pt3dadd( -284.678, -220.292, 96.8567, 0.45 ) }
    dend_40 { pt3dadd( -287.524, -223.688, 100.854, 0.45 ) }
    dend_40 { pt3dadd( -288.09, -224.399, 101.681, 0.45 ) }
    dend_40 { pt3dadd( -288.944, -225.717, 103.419, 0.45 ) }
    dend_40 { pt3dadd( -290.349, -228.321, 106.764, 0.45 ) }
    dend_40 { pt3dadd( -291.44, -230.8, 109.751, 0.45 ) }
    dend_40 { pt3dadd( -292.631, -234.137, 113.315, 0.45 ) }
    dend_40 { pt3dadd( -293.214, -235.97, 114.897, 0.45 ) }
    dend_40 { pt3dadd( -296.385, -244.98, 121.731, 0.45 ) }
    dend_40 { pt3dadd( -297.287, -247.367, 123.236, 0.45 ) }
    dend_40 { pt3dadd( -298.624, -250.494, 124.412, 0.45 ) }
    dend_40 { pt3dadd( -300.673, -254.893, 125.201, 0.45 ) }
    dend_40 { pt3dadd( -303.872, -261.586, 125.511, 0.45 ) }
    dend_40 { pt3dadd( -306.526, -267.104, 125.103, 0.45 ) }
    dend_40 { pt3dadd( -308.964, -272.022, 124.042, 0.45 ) }
    dend_40 { pt3dadd( -314.399, -283.293, 121.122, 0.45 ) }
    dend_40 { pt3dadd( -315.188, -284.967, 120.593, 0.45 ) }
    dend_40 { pt3dadd( -316.976, -289.138, 119.1, 0.45 ) }
    dend_40 { pt3dadd( -317.982, -291.862, 117.799, 0.45 ) }
    dend_40 { pt3dadd( -319.174, -295.708, 115.82, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -320.012, -298.668, 114.311, 0.45 ) }
    dend_40 { pt3dadd( -320.482, -300.257, 113.731, 0.45 ) }
    dend_40 { pt3dadd( -321.264, -302.477, 112.94, 0.45 ) }
    dend_40 { pt3dadd( -324.608, -310.63, 110.569, 0.45 ) }
    dend_40 { pt3dadd( -326.48, -314.958, 110.131, 0.45 ) }
    dend_40 { pt3dadd( -327.247, -316.676, 110.298, 0.45 ) }
    dend_40 { pt3dadd( -330.089, -322.762, 111.592, 0.45 ) }
    dend_40 { pt3dadd( -331.499, -325.696, 112.51, 0.45 ) }
    dend_40 { pt3dadd( -333.91, -330.21, 114.265, 0.45 ) }
    dend_40 { pt3dadd( -336.762, -335.348, 117.1, 0.45 ) }
    dend_40 { pt3dadd( -338.056, -337.622, 118.158, 0.45 ) }
    dend_40 { pt3dadd( -339.646, -340.86, 119.178, 0.45 ) }
    dend_40 { pt3dadd( -340.104, -342.341, 119.307, 0.45 ) }
    dend_40 { pt3dadd( -340.942, -347.653, 118.767, 0.45 ) }
    dend_40 { pt3dadd( -341.389, -353.912, 117.081, 0.45 ) }
    dend_40 { pt3dadd( -341.266, -363.671, 113.104, 0.45 ) }
    dend_40 { pt3dadd( -340.392, -370.223, 110.08, 0.45 ) }
    dend_40 { pt3dadd( -339.328, -374.067, 108.182, 0.45 ) }
    dend_40 { pt3dadd( -339.046, -374.778, 107.791, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -117.436, -100.831, 94.2214, 0.34 ) }
    dend_39 { pt3dadd( -115.602, -99.9507, 95.4512, 0.34 ) }
    dend_39 { pt3dadd( -114.288, -99.3209, 96.3326, 0.34 ) }
    dend_39 { pt3dadd( -109.196, -96.8792, 99.7477, 0.34 ) }
    dend_39 { pt3dadd( -107.792, -96.2057, 100.69, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -29.1368, -237.629, 78.3252, 0.57 ) }
    dend_37 { pt3dadd( -30.637, -238.46, 78.9137, 0.57 ) }
    dend_37 { pt3dadd( -33.0418, -240.033, 79.335, 0.57 ) }
    dend_37 { pt3dadd( -34.3261, -241.009, 79.4233, 0.57 ) }
    dend_37 { pt3dadd( -35.9978, -242.464, 79.1745, 0.57 ) }
    dend_37 { pt3dadd( -37.5421, -243.948, 78.8289, 0.57 ) }
    dend_37 { pt3dadd( -40.2892, -246.673, 78.1361, 0.57 ) }
    dend_37 { pt3dadd( -41.7783, -248.253, 77.6393, 0.57 ) }
    dend_37 { pt3dadd( -43.4454, -250.093, 76.9818, 0.57 ) }
    dend_37 { pt3dadd( -46.4542, -253.428, 75.8191, 0.57 ) }
    dend_37 { pt3dadd( -49.8388, -257.089, 74.5375, 0.57 ) }
    dend_37 { pt3dadd( -52.1346, -259.518, 73.8159, 0.57 ) }
    dend_37 { pt3dadd( -52.945, -260.345, 73.6325, 2.15 ) }
    dend_37 { pt3dadd( -53.6862, -261.061, 73.5165, 1.36 ) }
    dend_37 { pt3dadd( -55.2869, -262.487, 73.5053, 0.68 ) }
    dend_37 { pt3dadd( -56.1867, -263.218, 73.6943, 0.68 ) }
    dend_37 { pt3dadd( -57.2545, -264.01, 74.0797, 0.57 ) }
    dend_37 { pt3dadd( -57.863, -264.443, 74.3866, 0.57 ) }
    dend_37 { pt3dadd( -59.4652, -265.578, 75.2882, 0.57 ) }
    dend_37 { pt3dadd( -61.2497, -266.81, 76.3323, 0.57 ) }
    dend_37 { pt3dadd( -62.4286, -267.635, 77.0179, 0.57 ) }
    dend_37 { pt3dadd( -63.8697, -268.729, 77.7354, 0.57 ) }
    dend_37 { pt3dadd( -65.245, -269.822, 78.1843, 0.57 ) }
    dend_37 { pt3dadd( -65.7788, -270.274, 78.2917, 0.57 ) }
    dend_37 { pt3dadd( -66.5618, -270.988, 78.3396, 0.57 ) }
    dend_37 { pt3dadd( -67.6133, -271.98, 78.3086, 0.57 ) }
    dend_37 { pt3dadd( -70.7148, -274.902, 78.1035, 0.57 ) }
    dend_37 { pt3dadd( -72.6576, -276.753, 77.8311, 0.57 ) }
    dend_37 { pt3dadd( -74.2928, -278.324, 77.5496, 0.57 ) }
    dend_37 { pt3dadd( -76.3512, -280.225, 77.1799, 0.57 ) }
    dend_37 { pt3dadd( -79.0329, -282.615, 76.7874, 0.57 ) }
    dend_37 { pt3dadd( -82.5555, -285.508, 76.3885, 0.57 ) }
    dend_37 { pt3dadd( -84.0147, -286.621, 76.206, 1.7 ) }
    dend_37 { pt3dadd( -85.3362, -287.588, 76.0396, 1.7 ) }
    dend_37 { pt3dadd( -86.6291, -288.491, 75.7879, 0.68 ) }
    dend_37 { pt3dadd( -88.9964, -290.046, 75.2327, 0.68 ) }
    dend_37 { pt3dadd( -90.4633, -291.027, 74.8336, 0.68 ) }
    dend_37 { pt3dadd( -92.7617, -292.632, 74.2031, 0.68 ) }
    dend_37 { pt3dadd( -93.3874, -293.105, 74.0166, 1.7 ) }
    dend_37 { pt3dadd( -94.363, -293.96, 73.6638, 1.7 ) }
    dend_37 { pt3dadd( -95.0005, -294.602, 73.4021, 1.7 ) }
    dend_37 { pt3dadd( -95.7289, -295.45, 73.076, 0.68 ) }
    dend_37 { pt3dadd( -97.4137, -297.665, 72.3622, 0.68 ) }
    dend_37 { pt3dadd( -99.0316, -299.937, 71.7699, 0.68 ) }
    dend_37 { pt3dadd( -100.316, -301.849, 71.4018, 0.68 ) }
    dend_37 { pt3dadd( -100.909, -302.795, 71.272, 0.68 ) }
    dend_37 { pt3dadd( -102.252, -305.072, 71.0767, 0.68 ) }
    dend_37 { pt3dadd( -103.478, -307.234, 71.0117, 0.68 ) }
    dend_37 { pt3dadd( -104.066, -308.336, 71.0687, 0.68 ) }
    dend_37 { pt3dadd( -105.457, -311.002, 71.4364, 0.68 ) }
    dend_37 { pt3dadd( -105.853, -311.786, 71.5723, 0.68 ) }
    dend_37 { pt3dadd( -106.324, -312.741, 71.7565, 1.02 ) }
    dend_37 { pt3dadd( -106.796, -313.73, 71.9416, 0.45 ) }
    dend_37 { pt3dadd( -107.439, -315.287, 72.1733, 0.45 ) }
    dend_37 { pt3dadd( -107.613, -315.764, 72.2045, 0.45 ) }
    dend_37 { pt3dadd( -108.117, -317.201, 72.2264, 0.45 ) }
    dend_37 { pt3dadd( -108.717, -318.897, 72.263, 0.45 ) }
    dend_37 { pt3dadd( -109.382, -320.835, 72.309, 0.45 ) }
    dend_37 { pt3dadd( -110.126, -323.073, 72.3589, 0.45 ) }
    dend_37 { pt3dadd( -110.778, -325.086, 72.4317, 0.45 ) }
    dend_37 { pt3dadd( -111.806, -328.222, 72.5463, 0.45 ) }
    dend_37 { pt3dadd( -112.1, -329.18, 72.5851, 0.45 ) }
    dend_37 { pt3dadd( -112.431, -330.369, 72.6375, 1.47 ) }
    dend_37 { pt3dadd( -112.543, -330.778, 72.6566, 1.47 ) }
    dend_37 { pt3dadd( -113.085, -332.761, 72.665, 0.68 ) }
    dend_37 { pt3dadd( -113.724, -335.136, 72.6201, 0.57 ) }
    dend_37 { pt3dadd( -114.277, -337.278, 72.6155, 0.57 ) }
    dend_37 { pt3dadd( -114.824, -339.286, 72.7209, 0.57 ) }
    dend_37 { pt3dadd( -114.989, -339.857, 72.7724, 0.57 ) }
    dend_37 { pt3dadd( -115.521, -341.618, 73.0777, 0.57 ) }
    dend_37 { pt3dadd( -116.149, -343.567, 73.7237, 0.57 ) }
    dend_37 { pt3dadd( -116.646, -345.258, 74.4935, 1.7 ) }
    dend_37 { pt3dadd( -117.371, -347.955, 75.8477, 0.68 ) }
    dend_37 { pt3dadd( -117.683, -349.306, 76.5595, 0.68 ) }
    dend_37 { pt3dadd( -118.189, -351.815, 77.8648, 0.68 ) }
    dend_37 { pt3dadd( -118.899, -355.496, 79.6484, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -119.421, -358.052, 80.6829, 0.68 ) }
    dend_37 { pt3dadd( -119.642, -359.021, 80.9868, 2.15 ) }
    dend_37 { pt3dadd( -119.791, -359.616, 81.1262, 2.15 ) }
    dend_37 { pt3dadd( -120.332, -361.606, 81.3755, 0.68 ) }
    dend_37 { pt3dadd( -121.06, -363.892, 81.4927, 0.68 ) }
    dend_37 { pt3dadd( -121.576, -365.354, 81.5625, 0.68 ) }
    dend_37 { pt3dadd( -122.362, -367.339, 81.7663, 0.68 ) }
    dend_37 { pt3dadd( -123.192, -369.461, 81.9765, 0.68 ) }
    dend_37 { pt3dadd( -123.956, -371.544, 82.1753, 0.68 ) }
    dend_37 { pt3dadd( -125.0, -374.803, 82.4794, 0.68 ) }
    dend_37 { pt3dadd( -125.567, -376.946, 82.6719, 0.68 ) }
    dend_37 { pt3dadd( -125.948, -378.586, 82.7626, 0.68 ) }
    dend_37 { pt3dadd( -126.452, -381.067, 82.7871, 0.68 ) }
    dend_37 { pt3dadd( -126.624, -382.058, 82.7528, 0.68 ) }
    dend_37 { pt3dadd( -126.984, -384.586, 82.5478, 0.68 ) }
    dend_37 { pt3dadd( -127.167, -386.211, 82.314, 0.68 ) }
    dend_37 { pt3dadd( -127.4, -388.246, 82.0058, 0.68 ) }
    dend_37 { pt3dadd( -127.679, -390.199, 81.784, 0.68 ) }
    dend_37 { pt3dadd( -127.981, -391.77, 81.6939, 0.68 ) }
    dend_37 { pt3dadd( -128.214, -392.775, 81.6344, 0.68 ) }
    dend_37 { pt3dadd( -128.52, -393.875, 81.6339, 0.68 ) }
    dend_37 { pt3dadd( -128.642, -394.274, 81.6595, 0.68 ) }
    dend_37 { pt3dadd( -129.239, -396.133, 81.8713, 0.68 ) }
    dend_37 { pt3dadd( -129.917, -398.274, 82.2084, 0.68 ) }
    dend_37 { pt3dadd( -130.365, -399.829, 82.4878, 0.68 ) }
    dend_37 { pt3dadd( -130.937, -402.005, 82.8838, 0.68 ) }
    dend_37 { pt3dadd( -131.431, -404.088, 83.3201, 0.68 ) }
    dend_37 { pt3dadd( -131.55, -404.645, 83.477, 0.68 ) }
    dend_37 { pt3dadd( -131.818, -406.037, 83.9233, 0.57 ) }
    dend_37 { pt3dadd( -132.048, -407.289, 84.3284, 0.57 ) }
    dend_37 { pt3dadd( -132.47, -409.621, 85.0852, 0.57 ) }
    dend_37 { pt3dadd( -132.826, -411.808, 85.8799, 0.57 ) }
    dend_37 { pt3dadd( -133.251, -414.2, 86.8772, 0.57 ) }
    dend_37 { pt3dadd( -133.693, -416.596, 87.8873, 0.57 ) }
    dend_37 { pt3dadd( -134.131, -418.795, 88.7039, 0.57 ) }
    dend_37 { pt3dadd( -134.434, -420.337, 89.1502, 1.47 ) }
    dend_37 { pt3dadd( -135.04, -423.471, 89.8467, 0.45 ) }
    dend_37 { pt3dadd( -135.347, -424.996, 90.0466, 0.45 ) }
    dend_37 { pt3dadd( -135.931, -428.218, 90.2329, 0.45 ) }
    dend_37 { pt3dadd( -136.316, -430.865, 90.4, 0.45 ) }
    dend_37 { pt3dadd( -136.653, -433.934, 90.5538, 0.45 ) }
    dend_37 { pt3dadd( -136.622, -436.424, 90.7212, 0.45 ) }
    dend_37 { pt3dadd( -137.231, -435.699, 89.3674, 0.45 ) }
    dend_37 { pt3dadd( -138.288, -433.438, 87.206, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -29.1368, -237.629, 78.3252, 0.57 ) }
    dend_34 { pt3dadd( -30.2157, -239.815, 78.3991, 0.57 ) }
    dend_34 { pt3dadd( -30.9343, -241.27, 78.4455, 0.57 ) }
    dend_34 { pt3dadd( -31.9087, -243.317, 78.5057, 0.57 ) }
    dend_34 { pt3dadd( -33.3808, -246.409, 78.5966, 0.57 ) }
    dend_34 { pt3dadd( -35.1398, -250.103, 78.7053, 0.57 ) }
    dend_34 { pt3dadd( -36.2303, -252.394, 78.7727, 2.15 ) }
    dend_34 { pt3dadd( -37.2181, -254.406, 78.8109, 2.72 ) }
    dend_34 { pt3dadd( -37.9567, -255.981, 78.8695, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 115.283, -92.6035, 5.97278, 0.45 ) }
    dend_54 { pt3dadd( 119.583, -92.3082, 5.85148, 0.45 ) }
    dend_54 { pt3dadd( 120.606, -92.2522, 5.90308, 0.45 ) }
    dend_54 { pt3dadd( 122.473, -92.0686, 6.10619, 0.45 ) }
    dend_54 { pt3dadd( 124.933, -91.7966, 6.42699, 0.45 ) }
    dend_54 { pt3dadd( 127.182, -91.5588, 6.72998, 0.45 ) }
    dend_54 { pt3dadd( 130.116, -91.1934, 7.13656, 0.45 ) }
    dend_54 { pt3dadd( 131.132, -91.0479, 7.34483, 0.45 ) }
    dend_54 { pt3dadd( 133.992, -90.4745, 7.88449, 0.45 ) }
    dend_54 { pt3dadd( 136.199, -89.8812, 8.26672, 0.45 ) }
    dend_54 { pt3dadd( 137.919, -89.2688, 8.52195, 0.45 ) }
    dend_54 { pt3dadd( 140.289, -88.1161, 8.69601, 0.45 ) }
    dend_54 { pt3dadd( 141.821, -87.1819, 8.69844, 0.45 ) }
    dend_54 { pt3dadd( 143.472, -86.0544, 8.64507, 0.45 ) }
    dend_54 { pt3dadd( 145.153, -84.802, 8.43449, 0.45 ) }
    dend_54 { pt3dadd( 147.006, -83.2762, 8.02064, 0.45 ) }
    dend_54 { pt3dadd( 149.595, -81.0002, 7.33139, 0.45 ) }
    dend_54 { pt3dadd( 150.646, -80.0522, 6.98583, 0.45 ) }
    dend_54 { pt3dadd( 151.762, -79.0426, 6.56174, 0.45 ) }
    dend_54 { pt3dadd( 154.506, -76.6588, 5.40294, 0.45 ) }
    dend_54 { pt3dadd( 155.69, -75.6866, 4.77107, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 115.283, -92.6035, 5.97278, 0.34 ) }
    dend_53 { pt3dadd( 115.659, -95.6097, 4.2099, 0.34 ) }
    dend_53 { pt3dadd( 115.714, -96.7693, 3.47735, 0.34 ) }
    dend_53 { pt3dadd( 115.719, -98.7151, 2.2204, 0.34 ) }
    dend_53 { pt3dadd( 115.671, -102.269, -0.0994253, 0.34 ) }
    dend_53 { pt3dadd( 115.475, -105.464, -2.38235, 0.34 ) }
    dend_53 { pt3dadd( 115.114, -108.774, -4.78814, 0.34 ) }
    dend_53 { pt3dadd( 114.264, -112.173, -7.27408, 0.34 ) }
    dend_53 { pt3dadd( 114.098, -112.612, -7.59715, 0.34 ) }
    dend_53 { pt3dadd( 113.966, -112.855, -7.78857, 1.58 ) }
    dend_53 { pt3dadd( 112.066, -115.601, -9.84717, 0.45 ) }
    dend_53 { pt3dadd( 111.161, -116.809, -10.8347, 0.45 ) }
    dend_53 { pt3dadd( 108.886, -119.815, -13.505, 0.45 ) }
    dend_53 { pt3dadd( 108.153, -120.862, -14.4488, 0.45 ) }
    dend_53 { pt3dadd( 106.412, -123.673, -16.9892, 0.45 ) }
    dend_53 { pt3dadd( 105.857, -124.699, -17.869, 0.45 ) }
    dend_53 { pt3dadd( 104.562, -127.663, -20.2296, 0.45 ) }
    dend_53 { pt3dadd( 104.058, -129.079, -21.4191, 0.45 ) }
    dend_53 { pt3dadd( 103.333, -131.888, -23.6558, 0.45 ) }
    dend_53 { pt3dadd( 102.929, -133.692, -25.0155, 0.45 ) }
    dend_53 { pt3dadd( 102.46, -136.151, -26.6817, 0.45 ) }
    dend_53 { pt3dadd( 101.812, -139.873, -29.2574, 0.45 ) }
    dend_53 { pt3dadd( 101.361, -142.548, -31.0135, 0.45 ) }
    dend_53 { pt3dadd( 100.825, -145.998, -33.2597, 0.45 ) }
    dend_53 { pt3dadd( 100.35, -148.833, -35.0027, 0.45 ) }
    dend_53 { pt3dadd( 99.94, -151.287, -36.5366, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 99.439, -154.101, -38.3195, 0.45 ) }
    dend_53 { pt3dadd( 98.9136, -156.685, -39.8746, 0.45 ) }
    dend_53 { pt3dadd( 98.4937, -158.281, -40.7616, 0.45 ) }
    dend_53 { pt3dadd( 97.6906, -160.772, -42.3756, 0.45 ) }
    dend_53 { pt3dadd( 97.3856, -161.668, -42.9696, 0.45 ) }
    dend_53 { pt3dadd( 96.4632, -164.175, -44.6714, 0.45 ) }
    dend_53 { pt3dadd( 95.8967, -165.665, -45.644, 0.45 ) }
    dend_53 { pt3dadd( 95.0896, -167.769, -47.0762, 0.45 ) }
    dend_53 { pt3dadd( 93.6331, -171.594, -50.146, 0.45 ) }
    dend_53 { pt3dadd( 92.852, -173.826, -52.1123, 0.45 ) }
    dend_53 { pt3dadd( 92.4494, -175.109, -53.2652, 0.45 ) }
    dend_53 { pt3dadd( 92.1932, -176.216, -54.2262, 0.45 ) }
    dend_53 { pt3dadd( 92.0294, -177.116, -55.045, 0.45 ) }
    dend_53 { pt3dadd( 91.4374, -180.96, -58.4357, 0.45 ) }
    dend_53 { pt3dadd( 91.1624, -182.776, -59.9285, 0.45 ) }
    dend_53 { pt3dadd( 91.0146, -183.844, -60.8528, 0.45 ) }
    dend_53 { pt3dadd( 90.775, -185.741, -62.4486, 0.45 ) }
    dend_53 { pt3dadd( 90.4095, -188.663, -65.4183, 0.45 ) }
    dend_53 { pt3dadd( 90.2463, -190.022, -66.8578, 0.45 ) }
    dend_53 { pt3dadd( 90.1371, -191.029, -67.8555, 0.45 ) }
    dend_53 { pt3dadd( 90.0073, -192.178, -68.9799, 0.45 ) }
    dend_53 { pt3dadd( 89.7384, -194.493, -71.2773, 0.45 ) }
    dend_53 { pt3dadd( 89.2261, -200.242, -75.8992, 0.45 ) }
    dend_53 { pt3dadd( 89.0815, -202.781, -77.2022, 0.45 ) }
    dend_53 { pt3dadd( 88.9569, -205.695, -78.1063, 0.45 ) }
    dend_53 { pt3dadd( 88.7195, -209.143, -78.3507, 0.45 ) }
    dend_53 { pt3dadd( 88.5465, -210.707, -78.16, 0.45 ) }
    dend_53 { pt3dadd( 87.023, -220.381, -75.3587, 0.45 ) }
    dend_53 { pt3dadd( 86.4498, -223.258, -74.1946, 0.45 ) }
    dend_53 { pt3dadd( 86.3223, -223.766, -73.9726, 0.45 ) }
    dend_53 { pt3dadd( 85.4111, -226.738, -72.74, 0.45 ) }
    dend_53 { pt3dadd( 84.6445, -229.016, -71.9791, 0.45 ) }
    dend_53 { pt3dadd( 83.7326, -231.496, -71.6178, 0.45 ) }
    dend_53 { pt3dadd( 83.5388, -231.974, -71.6956, 0.45 ) }
    dend_53 { pt3dadd( 82.9476, -233.497, -72.1866, 0.45 ) }
    dend_53 { pt3dadd( 82.1015, -235.902, -73.2133, 0.45 ) }
    dend_53 { pt3dadd( 81.5347, -237.729, -74.1525, 0.45 ) }
    dend_53 { pt3dadd( 80.7675, -240.471, -75.6642, 0.45 ) }
    dend_53 { pt3dadd( 80.0403, -243.384, -77.3169, 0.45 ) }
    dend_53 { pt3dadd( 79.048, -248.471, -80.0316, 0.45 ) }
    dend_53 { pt3dadd( 78.8049, -250.006, -80.8133, 0.45 ) }
    dend_53 { pt3dadd( 78.587, -251.552, -81.5817, 0.45 ) }
    dend_53 { pt3dadd( 78.3539, -253.361, -82.431, 0.45 ) }
    dend_53 { pt3dadd( 78.163, -255.409, -83.232, 0.45 ) }
    dend_53 { pt3dadd( 78.0181, -259.684, -84.6657, 0.45 ) }
    dend_53 { pt3dadd( 78.0642, -260.795, -84.8522, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -37.9567, -255.981, 78.8695, 0.45 ) }
    dend_36 { pt3dadd( -39.9748, -258.262, 79.0049, 0.45 ) }
    dend_36 { pt3dadd( -41.5507, -260.095, 79.1304, 0.45 ) }
    dend_36 { pt3dadd( -42.9935, -261.792, 79.2549, 0.45 ) }
    dend_36 { pt3dadd( -45.1318, -264.453, 79.4649, 0.45 ) }
    dend_36 { pt3dadd( -46.3956, -265.998, 79.6125, 0.45 ) }
    dend_36 { pt3dadd( -48.309, -268.346, 79.9351, 0.45 ) }
    dend_36 { pt3dadd( -50.2339, -270.879, 80.3825, 0.45 ) }
    dend_36 { pt3dadd( -50.7395, -271.543, 80.515, 1.47 ) }
    dend_36 { pt3dadd( -52.6053, -273.905, 81.1033, 0.45 ) }
    dend_36 { pt3dadd( -53.7816, -275.413, 81.5379, 0.45 ) }
    dend_36 { pt3dadd( -54.92, -276.959, 82.1128, 0.45 ) }
    dend_36 { pt3dadd( -55.6924, -278.124, 82.6013, 0.45 ) }
    dend_36 { pt3dadd( -57.2133, -280.711, 83.779, 0.45 ) }
    dend_36 { pt3dadd( -58.2433, -282.574, 84.6413, 0.79 ) }
    dend_36 { pt3dadd( -59.1628, -284.362, 85.4583, 0.79 ) }
    dend_36 { pt3dadd( -60.752, -287.8, 87.0377, 0.45 ) }
    dend_36 { pt3dadd( -61.9314, -290.416, 88.2209, 0.45 ) }
    dend_36 { pt3dadd( -63.3, -293.736, 89.7333, 0.45 ) }
    dend_36 { pt3dadd( -63.7024, -294.861, 90.3086, 0.45 ) }
    dend_36 { pt3dadd( -64.0624, -295.947, 90.8815, 1.92 ) }
    dend_36 { pt3dadd( -64.6325, -297.97, 92.1473, 1.47 ) }
    dend_36 { pt3dadd( -65.0449, -299.716, 93.3034, 0.57 ) }
    dend_36 { pt3dadd( -65.3665, -301.392, 94.4724, 0.57 ) }
    dend_36 { pt3dadd( -65.7784, -304.249, 96.6786, 0.57 ) }
    dend_36 { pt3dadd( -66.0364, -306.486, 98.3803, 0.57 ) }
    dend_36 { pt3dadd( -66.6317, -311.389, 101.961, 0.57 ) }
    dend_36 { pt3dadd( -66.7681, -312.46, 102.66, 0.57 ) }
    dend_36 { pt3dadd( -67.1165, -314.659, 103.899, 0.57 ) }
    dend_36 { pt3dadd( -67.9532, -318.534, 105.552, 0.57 ) }
    dend_36 { pt3dadd( -68.5301, -320.721, 106.142, 0.57 ) }
    dend_36 { pt3dadd( -69.1786, -322.827, 106.307, 0.57 ) }
    dend_36 { pt3dadd( -70.0887, -325.521, 106.299, 0.57 ) }
    dend_36 { pt3dadd( -71.3859, -329.298, 106.471, 0.57 ) }
    dend_36 { pt3dadd( -72.7759, -333.209, 106.785, 0.57 ) }
    dend_36 { pt3dadd( -74.0338, -336.724, 107.062, 0.57 ) }
    dend_36 { pt3dadd( -76.1358, -342.561, 107.662, 0.57 ) }
    dend_36 { pt3dadd( -77.8828, -346.88, 108.005, 0.57 ) }
    dend_36 { pt3dadd( -79.7171, -350.811, 108.253, 0.23 ) }
    dend_36 { pt3dadd( -80.8489, -353.055, 108.434, 0.23 ) }
    dend_36 { pt3dadd( -82.1588, -355.436, 108.673, 0.23 ) }
    dend_36 { pt3dadd( -83.868, -358.398, 108.973, 0.23 ) }
    dend_36 { pt3dadd( -86.22, -362.284, 109.39, 0.23 ) }
    dend_36 { pt3dadd( -87.2643, -363.753, 109.226, 0.23 ) }
    dend_36 { pt3dadd( -88.7685, -365.606, 108.88, 1.7 ) }
    dend_36 { pt3dadd( -90.5861, -367.587, 108.669, 0.68 ) }
    dend_36 { pt3dadd( -92.3577, -369.248, 108.665, 0.45 ) }
    dend_36 { pt3dadd( -93.3774, -370.101, 108.861, 0.45 ) }
    dend_36 { pt3dadd( -97.6473, -372.969, 110.621, 0.45 ) }
    dend_36 { pt3dadd( -101.045, -374.613, 112.239, 0.45 ) }
    dend_36 { pt3dadd( -103.42, -375.471, 113.411, 0.45 ) }
    dend_36 { pt3dadd( -104.968, -375.954, 114.309, 0.45 ) }
    dend_36 { pt3dadd( -106.5, -376.485, 115.143, 0.45 ) }
    dend_36 { pt3dadd( -109.076, -377.835, 116.419, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -109.432, -378.09, 116.579, 0.45 ) }
    dend_36 { pt3dadd( -110.281, -378.788, 116.77, 1.92 ) }
    dend_36 { pt3dadd( -112.356, -380.79, 117.038, 0.57 ) }
    dend_36 { pt3dadd( -114.69, -383.372, 117.265, 0.57 ) }
    dend_36 { pt3dadd( -116.744, -385.871, 117.235, 0.45 ) }
    dend_36 { pt3dadd( -117.82, -387.293, 117.158, 0.45 ) }
    dend_36 { pt3dadd( -119.949, -390.144, 117.024, 0.45 ) }
    dend_36 { pt3dadd( -121.473, -392.269, 116.959, 0.57 ) }
    dend_36 { pt3dadd( -122.365, -393.557, 116.92, 0.57 ) }
    dend_36 { pt3dadd( -124.516, -396.767, 116.858, 0.57 ) }
    dend_36 { pt3dadd( -127.452, -401.028, 116.705, 0.57 ) }
    dend_36 { pt3dadd( -128.774, -402.962, 116.621, 0.57 ) }
    dend_36 { pt3dadd( -131.686, -407.259, 116.419, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -37.9567, -255.981, 78.8695, 0.45 ) }
    dend_35 { pt3dadd( -37.4935, -258.156, 79.0826, 0.45 ) }
    dend_35 { pt3dadd( -37.2759, -259.104, 79.1635, 0.45 ) }
    dend_35 { pt3dadd( -36.4858, -262.393, 79.7051, 0.45 ) }
    dend_35 { pt3dadd( -35.782, -265.483, 80.3358, 0.45 ) }
    dend_35 { pt3dadd( -35.2523, -268.008, 80.8099, 0.45 ) }
    dend_35 { pt3dadd( -35.232, -268.102, 80.8238, 1.81 ) }
    dend_35 { pt3dadd( -34.964, -269.301, 80.9762, 1.7 ) }
    dend_35 { pt3dadd( -34.3096, -272.368, 81.3509, 0.68 ) }
    dend_35 { pt3dadd( -33.9066, -274.123, 81.5252, 0.68 ) }
    dend_35 { pt3dadd( -33.3339, -276.356, 81.8153, 0.68 ) }
    dend_35 { pt3dadd( -32.5999, -279.021, 82.1721, 0.68 ) }
    dend_35 { pt3dadd( -32.1121, -280.609, 82.3365, 0.68 ) }
    dend_35 { pt3dadd( -31.3663, -282.744, 82.4883, 0.68 ) }
    dend_35 { pt3dadd( -30.5199, -284.858, 82.5568, 0.68 ) }
    dend_35 { pt3dadd( -29.4306, -287.315, 82.6634, 0.68 ) }
    dend_35 { pt3dadd( -28.1815, -289.933, 82.8082, 0.68 ) }
    dend_35 { pt3dadd( -26.6261, -293.068, 82.9283, 0.68 ) }
    dend_35 { pt3dadd( -25.6352, -295.095, 82.8153, 0.68 ) }
    dend_35 { pt3dadd( -24.6297, -297.192, 82.5303, 0.68 ) }
    dend_35 { pt3dadd( -23.9521, -298.67, 82.2278, 0.68 ) }
    dend_35 { pt3dadd( -23.1878, -300.522, 81.747, 0.68 ) }
    dend_35 { pt3dadd( -21.7895, -304.205, 80.7233, 0.68 ) }
    dend_35 { pt3dadd( -20.4319, -307.981, 79.686, 0.57 ) }
    dend_35 { pt3dadd( -19.8847, -309.562, 79.2672, 0.57 ) }
    dend_35 { pt3dadd( -19.1669, -311.681, 78.738, 0.57 ) }
    dend_35 { pt3dadd( -18.2945, -314.185, 78.0683, 0.57 ) }
    dend_35 { pt3dadd( -17.2859, -316.99, 77.3112, 0.57 ) }
    dend_35 { pt3dadd( -16.0639, -320.242, 76.4891, 0.57 ) }
    dend_35 { pt3dadd( -15.3096, -322.023, 76.1357, 0.57 ) }
    dend_35 { pt3dadd( -14.7235, -323.358, 75.8674, 0.57 ) }
    dend_35 { pt3dadd( -13.3466, -326.307, 75.4391, 0.57 ) }
    dend_35 { pt3dadd( -12.9845, -327.004, 75.3639, 0.57 ) }
    dend_35 { pt3dadd( -12.2174, -328.426, 75.2909, 0.57 ) }
    dend_35 { pt3dadd( -11.0455, -330.57, 75.4781, 0.57 ) }
    dend_35 { pt3dadd( -10.6909, -331.199, 75.5737, 2.6 ) }
    dend_35 { pt3dadd( -9.45216, -333.402, 76.0012, 2.04 ) }
    dend_35 { pt3dadd( -7.86106, -336.324, 76.3802, 0.57 ) }
    dend_35 { pt3dadd( -7.20391, -337.543, 76.3869, 0.57 ) }
    dend_35 { pt3dadd( -5.79948, -340.199, 76.7714, 0.57 ) }
    dend_35 { pt3dadd( -4.82782, -342.119, 77.1854, 0.57 ) }
    dend_35 { pt3dadd( -3.68557, -344.403, 77.8585, 0.57 ) }
    dend_35 { pt3dadd( -1.93431, -348.028, 79.0563, 0.57 ) }
    dend_35 { pt3dadd( -0.632199, -350.925, 80.1813, 0.57 ) }
    dend_35 { pt3dadd( 2.82837, -359.038, 82.8168, 0.57 ) }
    dend_35 { pt3dadd( 4.68188, -363.757, 84.0323, 0.57 ) }
    dend_35 { pt3dadd( 5.65889, -366.457, 84.6755, 0.57 ) }
    dend_35 { pt3dadd( 6.44259, -368.784, 85.1041, 0.57 ) }
    dend_35 { pt3dadd( 6.86669, -370.187, 85.281, 0.57 ) }
    dend_35 { pt3dadd( 8.43366, -376.238, 84.818, 0.57 ) }
    dend_35 { pt3dadd( 9.09129, -378.861, 83.9979, 0.57 ) }
    dend_35 { pt3dadd( 9.36018, -380.005, 83.5721, 0.57 ) }
    dend_35 { pt3dadd( 9.84114, -382.034, 82.7679, 0.45 ) }
    dend_35 { pt3dadd( 10.0904, -382.988, 82.4367, 0.45 ) }
    dend_35 { pt3dadd( 10.6948, -384.901, 82.0418, 0.45 ) }
    dend_35 { pt3dadd( 11.3884, -386.91, 82.0651, 0.45 ) }
    dend_35 { pt3dadd( 11.733, -387.848, 82.1077, 0.45 ) }
    dend_35 { pt3dadd( 12.1196, -388.91, 82.1833, 0.45 ) }
    dend_35 { pt3dadd( 12.4657, -389.892, 82.2542, 0.45 ) }
    dend_35 { pt3dadd( 13.2969, -392.249, 82.3918, 0.45 ) }
    dend_35 { pt3dadd( 13.8558, -393.896, 82.5124, 0.45 ) }
    dend_35 { pt3dadd( 14.4976, -395.894, 82.6561, 0.45 ) }
    dend_35 { pt3dadd( 15.3216, -398.376, 82.8121, 0.45 ) }
    dend_35 { pt3dadd( 16.0058, -400.502, 82.9098, 0.45 ) }
    dend_35 { pt3dadd( 16.2469, -401.316, 82.9434, 0.45 ) }
    dend_35 { pt3dadd( 16.8484, -403.431, 82.9866, 0.45 ) }
    dend_35 { pt3dadd( 17.8625, -407.049, 83.0796, 0.45 ) }
    dend_35 { pt3dadd( 18.6665, -409.96, 83.1716, 0.45 ) }
    dend_35 { pt3dadd( 19.4782, -412.996, 83.303, 0.45 ) }
    dend_35 { pt3dadd( 20.1939, -415.733, 83.471, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 155.69, -75.6866, 4.77107, 0.45 ) }
    dend_62 { pt3dadd( 156.68, -75.3448, 2.7334, 0.45 ) }
    dend_62 { pt3dadd( 157.556, -75.214, 1.1192, 0.45 ) }
    dend_62 { pt3dadd( 158.626, -75.1716, -0.623626, 0.45 ) }
    dend_62 { pt3dadd( 159.551, -75.1556, -2.21551, 0.45 ) }
    dend_62 { pt3dadd( 163.491, -75.1534, -9.75731, 0.45 ) }
    dend_62 { pt3dadd( 165.812, -75.2064, -14.4545, 0.45 ) }
    dend_62 { pt3dadd( 167.106, -75.1474, -17.5217, 0.45 ) }
    dend_62 { pt3dadd( 167.595, -75.1343, -18.8411, 0.45 ) }
    dend_62 { pt3dadd( 169.126, -75.2612, -23.2194, 0.45 ) }
    dend_62 { pt3dadd( 170.166, -75.4851, -26.1002, 0.45 ) }
    dend_62 { pt3dadd( 170.323, -75.5714, -26.4878, 0.45 ) }
    dend_62 { pt3dadd( 171.683, -76.4134, -29.5479, 0.45 ) }
    dend_62 { pt3dadd( 172.691, -76.9905, -31.7072, 0.45 ) }
    dend_62 { pt3dadd( 173.717, -77.7129, -33.5154, 0.45 ) }
    dend_62 { pt3dadd( 174.876, -78.5239, -35.0181, 0.34 ) }
    dend_62 { pt3dadd( 176.196, -79.417, -36.4361, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 177.043, -79.9934, -37.2593, 0.34 ) }
    dend_62 { pt3dadd( 177.711, -80.456, -37.8214, 0.34 ) }
    dend_62 { pt3dadd( 179.965, -81.9262, -39.5597, 0.34 ) }
    dend_62 { pt3dadd( 182.768, -83.8186, -41.8316, 0.34 ) }
    dend_62 { pt3dadd( 183.573, -84.4419, -42.4576, 0.34 ) }
    dend_62 { pt3dadd( 184.165, -84.8641, -43.0191, 0.34 ) }
    dend_62 { pt3dadd( 185.318, -85.6485, -44.2468, 0.34 ) }
    dend_62 { pt3dadd( 185.948, -86.0645, -44.9652, 0.34 ) }
    dend_62 { pt3dadd( 187.205, -86.8516, -46.4936, 0.34 ) }
    dend_62 { pt3dadd( 188.288, -87.6403, -47.7781, 0.34 ) }
    dend_62 { pt3dadd( 191.189, -89.5635, -51.4588, 0.34 ) }
    dend_62 { pt3dadd( 192.46, -90.3133, -53.1461, 0.34 ) }
    dend_62 { pt3dadd( 192.784, -90.4834, -53.6032, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 155.69, -75.6866, 4.77107, 0.45 ) }
    dend_55 { pt3dadd( 159.033, -76.1054, 4.83744, 0.45 ) }
    dend_55 { pt3dadd( 161.768, -76.6081, 4.52993, 0.45 ) }
    dend_55 { pt3dadd( 165.082, -77.3653, 4.00604, 0.45 ) }
    dend_55 { pt3dadd( 169.553, -78.5149, 2.52088, 0.45 ) }
    dend_55 { pt3dadd( 172.661, -79.505, 1.18114, 0.45 ) }
    dend_55 { pt3dadd( 177.193, -81.1623, -0.960043, 0.45 ) }
    dend_55 { pt3dadd( 181.732, -83.2596, -3.50505, 0.34 ) }
    dend_55 { pt3dadd( 183.648, -84.3081, -4.66284, 0.34 ) }
    dend_55 { pt3dadd( 190.4, -88.269, -9.17747, 0.34 ) }
    dend_55 { pt3dadd( 194.469, -90.6831, -12.0268, 0.34 ) }
    dend_55 { pt3dadd( 197.369, -92.4439, -13.9699, 0.34 ) }
    dend_55 { pt3dadd( 200.07, -94.1835, -15.671, 0.34 ) }
    dend_55 { pt3dadd( 203.691, -96.6169, -17.5877, 0.34 ) }
    dend_55 { pt3dadd( 207.658, -99.4329, -19.4583, 0.34 ) }
    dend_55 { pt3dadd( 210.708, -101.744, -20.534, 0.34 ) }
    dend_55 { pt3dadd( 213.613, -103.961, -21.512, 0.34 ) }
    dend_55 { pt3dadd( 216.213, -106.122, -22.2839, 0.34 ) }
    dend_55 { pt3dadd( 218.219, -107.941, -22.6649, 0.34 ) }
    dend_55 { pt3dadd( 220.196, -109.991, -22.747, 0.34 ) }
    dend_55 { pt3dadd( 222.3, -112.248, -22.75, 0.34 ) }
    dend_55 { pt3dadd( 224.937, -114.973, -22.7878, 0.34 ) }
    dend_55 { pt3dadd( 229.887, -119.774, -22.9715, 0.45 ) }
    dend_55 { pt3dadd( 234.036, -123.503, -23.0793, 0.45 ) }
    dend_55 { pt3dadd( 237.932, -126.851, -23.0087, 0.45 ) }
    dend_55 { pt3dadd( 242.65, -130.77, -22.8544, 0.45 ) }
    dend_55 { pt3dadd( 244.982, -132.519, -22.8339, 0.45 ) }
    dend_55 { pt3dadd( 247.727, -134.418, -22.9085, 0.45 ) }
    dend_55 { pt3dadd( 249.285, -135.396, -23.0717, 0.45 ) }
    dend_55 { pt3dadd( 256.069, -139.447, -24.1672, 0.45 ) }
    dend_55 { pt3dadd( 260.668, -142.189, -25.0066, 0.45 ) }
    dend_55 { pt3dadd( 265.084, -145.033, -25.7324, 0.45 ) }
    dend_55 { pt3dadd( 266.959, -146.253, -26.0788, 0.45 ) }
    dend_55 { pt3dadd( 273.22, -150.295, -27.1561, 0.45 ) }
    dend_55 { pt3dadd( 276.118, -152.251, -27.6027, 0.45 ) }
    dend_55 { pt3dadd( 280.002, -155.041, -28.0404, 0.45 ) }
    dend_55 { pt3dadd( 282.335, -156.843, -28.0771, 0.45 ) }
    dend_55 { pt3dadd( 283.954, -158.161, -28.0333, 0.45 ) }
    dend_55 { pt3dadd( 288.065, -161.528, -27.884, 0.45 ) }
    dend_55 { pt3dadd( 292.238, -165.081, -27.654, 0.45 ) }
    dend_55 { pt3dadd( 295.921, -168.158, -27.8029, 0.45 ) }
    dend_55 { pt3dadd( 299.902, -171.4, -28.3738, 0.45 ) }
    dend_55 { pt3dadd( 302.899, -173.663, -29.2243, 0.45 ) }
    dend_55 { pt3dadd( 306.064, -175.951, -30.5255, 0.45 ) }
    dend_55 { pt3dadd( 308.463, -177.602, -31.7959, 0.45 ) }
    dend_55 { pt3dadd( 313.233, -180.77, -34.627, 0.45 ) }
    dend_55 { pt3dadd( 315.861, -182.549, -36.2524, 0.45 ) }
    dend_55 { pt3dadd( 320.348, -185.713, -38.9526, 0.45 ) }
    dend_55 { pt3dadd( 324.52, -188.698, -41.2371, 0.45 ) }
    dend_55 { pt3dadd( 327.147, -190.548, -42.5702, 0.45 ) }
    dend_55 { pt3dadd( 329.546, -192.148, -43.8595, 0.45 ) }
    dend_55 { pt3dadd( 332.802, -194.342, -45.5825, 0.45 ) }
    dend_55 { pt3dadd( 334.703, -195.513, -46.637, 0.45 ) }
    dend_55 { pt3dadd( 335.703, -196.115, -47.2272, 0.45 ) }
    dend_55 { pt3dadd( 338.159, -197.502, -48.7633, 0.45 ) }
    dend_55 { pt3dadd( 344.568, -200.816, -52.9014, 0.45 ) }
    dend_55 { pt3dadd( 347.098, -202.028, -54.5974, 0.45 ) }
    dend_55 { pt3dadd( 350.632, -203.627, -57.0678, 0.45 ) }
    dend_55 { pt3dadd( 353.531, -204.927, -59.0881, 0.45 ) }
    dend_55 { pt3dadd( 354.631, -205.45, -59.8684, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 354.631, -205.45, -59.8684, 0.45 ) }
    dend_57 { pt3dadd( 354.249, -208.146, -61.7446, 0.45 ) }
    dend_57 { pt3dadd( 354.139, -209.888, -62.8482, 0.45 ) }
    dend_57 { pt3dadd( 354.163, -211.317, -63.9281, 0.45 ) }
    dend_57 { pt3dadd( 354.255, -211.961, -64.6352, 0.45 ) }
    dend_57 { pt3dadd( 354.57, -212.943, -65.8616, 0.45 ) }
    dend_57 { pt3dadd( 354.941, -213.775, -66.8918, 0.45 ) }
    dend_57 { pt3dadd( 355.759, -214.953, -68.3751, 0.45 ) }
    dend_57 { pt3dadd( 357.324, -216.877, -70.8308, 0.45 ) }
    dend_57 { pt3dadd( 359.445, -219.369, -74.017, 0.45 ) }
    dend_57 { pt3dadd( 360.542, -220.813, -75.6488, 0.45 ) }
    dend_57 { pt3dadd( 361.97, -222.907, -77.7209, 0.45 ) }
    dend_57 { pt3dadd( 362.711, -224.251, -78.8605, 0.45 ) }
    dend_57 { pt3dadd( 363.571, -226.249, -80.0546, 0.45 ) }
    dend_57 { pt3dadd( 364.48, -229.398, -80.8494, 0.45 ) }
    dend_57 { pt3dadd( 365.241, -233.127, -81.2595, 0.45 ) }
    dend_57 { pt3dadd( 365.536, -235.443, -81.2881, 0.45 ) }
    dend_57 { pt3dadd( 365.693, -237.948, -80.8645, 0.45 ) }
    dend_57 { pt3dadd( 365.877, -242.904, -79.4952, 0.45 ) }
    dend_57 { pt3dadd( 366.05, -249.685, -77.1029, 0.45 ) }
    dend_57 { pt3dadd( 366.101, -251.786, -76.3066, 0.45 ) }
    dend_57 { pt3dadd( 366.235, -254.905, -75.1284, 0.45 ) }
    dend_57 { pt3dadd( 366.486, -262.069, -72.2103, 0.45 ) }
    dend_57 { pt3dadd( 366.558, -264.145, -71.3376, 0.45 ) }
    dend_57 { pt3dadd( 366.61, -266.543, -70.4724, 0.45 ) }
    dend_57 { pt3dadd( 366.701, -270.261, -69.4213, 0.45 ) }
    dend_57 { pt3dadd( 366.777, -272.063, -68.8797, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 354.631, -205.45, -59.8684, 0.45 ) }
    dend_56 { pt3dadd( 356.085, -206.381, -59.8395, 0.45 ) }
    dend_56 { pt3dadd( 358.785, -207.939, -59.8322, 0.45 ) }
    dend_56 { pt3dadd( 361.664, -209.327, -59.8261, 0.45 ) }
    dend_56 { pt3dadd( 364.203, -210.501, -59.7889, 0.45 ) }
    dend_56 { pt3dadd( 366.963, -211.778, -59.7477, 0.45 ) }
    dend_56 { pt3dadd( 368.448, -212.451, -59.8367, 0.45 ) }
    dend_56 { pt3dadd( 371.753, -213.827, -60.3944, 0.45 ) }
    dend_56 { pt3dadd( 375.128, -215.111, -61.3107, 0.45 ) }
    dend_56 { pt3dadd( 378.849, -216.463, -62.6882, 0.45 ) }
    dend_56 { pt3dadd( 380.087, -216.909, -63.2063, 0.45 ) }
    dend_56 { pt3dadd( 385.084, -218.705, -65.3963, 0.45 ) }
    dend_56 { pt3dadd( 388.872, -220.153, -67.0643, 0.45 ) }
    dend_56 { pt3dadd( 391.029, -220.992, -67.9466, 0.45 ) }
    dend_56 { pt3dadd( 395.685, -222.734, -69.5919, 0.45 ) }
    dend_56 { pt3dadd( 397.763, -223.52, -70.0992, 0.45 ) }
    dend_56 { pt3dadd( 401.672, -225.098, -70.5899, 0.45 ) }
    dend_56 { pt3dadd( 406.713, -227.243, -70.5926, 0.45 ) }
    dend_56 { pt3dadd( 412.402, -229.944, -70.0339, 0.45 ) }
    dend_56 { pt3dadd( 416.551, -232.132, -69.2066, 0.45 ) }
    dend_56 { pt3dadd( 421.607, -234.869, -67.6853, 0.45 ) }
    dend_56 { pt3dadd( 424.19, -236.27, -66.7498, 0.45 ) }
    dend_56 { pt3dadd( 425.908, -237.139, -66.0295, 0.45 ) }
    dend_56 { pt3dadd( 430.374, -238.864, -64.1104, 0.45 ) }
    dend_56 { pt3dadd( 434.493, -240.045, -62.4427, 0.45 ) }
    dend_56 { pt3dadd( 439.843, -241.066, -60.5627, 0.45 ) }
    dend_56 { pt3dadd( 443.477, -241.384, -59.5478, 0.45 ) }
    dend_56 { pt3dadd( 449.299, -241.438, -58.1464, 0.45 ) }
    dend_56 { pt3dadd( 457.495, -240.884, -56.2834, 0.45 ) }
    dend_56 { pt3dadd( 459.663, -240.52, -55.8143, 0.45 ) }
    dend_56 { pt3dadd( 461.66, -240.011, -55.3916, 0.45 ) }
    dend_56 { pt3dadd( 464.832, -238.777, -54.5069, 0.45 ) }
    dend_56 { pt3dadd( 466.576, -237.659, -53.7849, 0.45 ) }
    dend_56 { pt3dadd( 468.379, -235.299, -52.4248, 0.45 ) }
    dend_56 { pt3dadd( 469.022, -233.652, -51.5162, 0.45 ) }
    dend_56 { pt3dadd( 469.545, -232.024, -50.6514, 0.45 ) }
    dend_56 { pt3dadd( 470.596, -228.519, -48.8489, 0.45 ) }
    dend_56 { pt3dadd( 471.256, -226.472, -47.8197, 0.45 ) }
    dend_56 { pt3dadd( 472.693, -223.066, -46.1591, 0.45 ) }
    dend_56 { pt3dadd( 474.159, -220.617, -44.7263, 0.45 ) }
    dend_56 { pt3dadd( 475.945, -218.436, -43.0931, 0.45 ) }
    dend_56 { pt3dadd( 477.391, -217.003, -41.8609, 0.45 ) }
    dend_56 { pt3dadd( 478.919, -215.922, -40.6489, 0.45 ) }
    dend_56 { pt3dadd( 480.974, -214.973, -39.1287, 0.45 ) }
    dend_56 { pt3dadd( 487.114, -214.275, -34.2852, 0.45 ) }
    dend_56 { pt3dadd( 487.963, -214.442, -33.4911, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 366.777, -272.063, -68.8797, 0.45 ) }
    dend_59 { pt3dadd( 367.287, -274.523, -69.6751, 0.45 ) }
    dend_59 { pt3dadd( 367.876, -276.629, -70.3265, 0.45 ) }
    dend_59 { pt3dadd( 368.602, -278.853, -70.9436, 0.45 ) }
    dend_59 { pt3dadd( 369.284, -280.865, -71.5066, 0.45 ) }
    dend_59 { pt3dadd( 370.471, -284.344, -72.1868, 0.45 ) }
    dend_59 { pt3dadd( 371.023, -286.046, -72.3279, 0.45 ) }
    dend_59 { pt3dadd( 371.791, -288.512, -72.2409, 0.45 ) }
    dend_59 { pt3dadd( 372.532, -290.897, -72.0403, 0.45 ) }
    dend_59 { pt3dadd( 373.665, -294.357, -71.5967, 0.45 ) }
    dend_59 { pt3dadd( 375.396, -299.368, -70.8641, 0.45 ) }
    dend_59 { pt3dadd( 377.27, -304.314, -70.1489, 0.45 ) }
    dend_59 { pt3dadd( 378.935, -308.6, -69.6492, 0.45 ) }
    dend_59 { pt3dadd( 380.003, -311.123, -69.4556, 0.45 ) }
    dend_59 { pt3dadd( 381.799, -314.958, -69.4264, 0.45 ) }
    dend_59 { pt3dadd( 383.046, -317.367, -69.5887, 0.45 ) }
    dend_59 { pt3dadd( 384.641, -320.269, -70.1922, 0.45 ) }
    dend_59 { pt3dadd( 386.225, -322.944, -70.9797, 0.45 ) }
    dend_59 { pt3dadd( 387.897, -325.687, -71.8834, 0.45 ) }
    dend_59 { pt3dadd( 389.369, -328.277, -72.6847, 0.45 ) }
    dend_59 { pt3dadd( 390.801, -331.004, -73.6775, 0.45 ) }
    dend_59 { pt3dadd( 392.561, -334.546, -74.9765, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 366.777, -272.063, -68.8797, 0.45 ) }
    dend_58 { pt3dadd( 368.75, -269.838, -68.908, 0.45 ) }
    dend_58 { pt3dadd( 369.722, -268.742, -68.922, 0.45 ) }
    dend_58 { pt3dadd( 370.819, -267.506, -68.9377, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 392.561, -334.546, -74.9765, 0.45 ) }
    dend_61 { pt3dadd( 391.9, -337.445, -74.4923, 0.45 ) }
    dend_61 { pt3dadd( 391.143, -340.895, -74.137, 0.45 ) }
    dend_61 { pt3dadd( 390.731, -342.9, -74.0236, 0.45 ) }
    dend_61 { pt3dadd( 390.504, -344.133, -73.9992, 0.45 ) }
    dend_61 { pt3dadd( 390.458, -344.408, -74.0044, 0.45 ) }
    dend_61 { pt3dadd( 390.006, -347.332, -74.1004, 0.45 ) }
    dend_61 { pt3dadd( 389.946, -348.025, -74.2305, 0.45 ) }
    dend_61 { pt3dadd( 389.921, -348.668, -74.4109, 0.45 ) }
    dend_61 { pt3dadd( 389.868, -349.341, -74.586, 0.45 ) }
    dend_61 { pt3dadd( 389.767, -350.25, -74.8733, 0.45 ) }
    dend_61 { pt3dadd( 389.613, -351.787, -75.4659, 0.45 ) }
    dend_61 { pt3dadd( 389.495, -353.145, -76.0347, 0.45 ) }
    dend_61 { pt3dadd( 389.332, -354.837, -76.6234, 0.45 ) }
    dend_61 { pt3dadd( 389.208, -355.821, -76.8785, 0.45 ) }
    dend_61 { pt3dadd( 389.034, -357.0, -77.1509, 0.45 ) }
    dend_61 { pt3dadd( 388.76, -358.685, -77.5157, 0.45 ) }
    dend_61 { pt3dadd( 388.452, -360.399, -77.4893, 0.45 ) }
    dend_61 { pt3dadd( 388.124, -362.037, -77.1999, 0.45 ) }
    dend_61 { pt3dadd( 387.847, -363.422, -76.84, 0.45 ) }
    dend_61 { pt3dadd( 387.578, -364.725, -76.3977, 0.45 ) }
    dend_61 { pt3dadd( 387.255, -366.133, -75.8751, 0.45 ) }
    dend_61 { pt3dadd( 385.874, -371.841, -73.8945, 0.45 ) }
    dend_61 { pt3dadd( 385.553, -373.255, -73.4979, 0.45 ) }
    dend_61 { pt3dadd( 385.37, -374.188, -73.3191, 0.45 ) }
    dend_61 { pt3dadd( 384.889, -377.074, -73.0357, 0.45 ) }
    dend_61 { pt3dadd( 384.7, -378.541, -73.0078, 0.45 ) }
    dend_61 { pt3dadd( 384.586, -380.259, -73.2889, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 384.579, -381.414, -73.819, 0.45 ) }
    dend_61 { pt3dadd( 384.638, -382.715, -74.4924, 0.45 ) }
    dend_61 { pt3dadd( 384.761, -383.876, -75.2304, 0.45 ) }
    dend_61 { pt3dadd( 384.942, -384.686, -75.9501, 0.45 ) }
    dend_61 { pt3dadd( 385.065, -385.09, -76.3028, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 392.561, -334.546, -74.9765, 0.45 ) }
    dend_60 { pt3dadd( 393.028, -335.972, -75.1095, 0.45 ) }
    dend_60 { pt3dadd( 393.974, -338.838, -75.4751, 0.45 ) }
    dend_60 { pt3dadd( 394.887, -342.09, -75.9742, 0.45 ) }
    dend_60 { pt3dadd( 395.1, -343.374, -76.1297, 0.45 ) }
    dend_60 { pt3dadd( 395.258, -345.382, -76.2761, 0.45 ) }
    dend_60 { pt3dadd( 395.314, -347.497, -76.3366, 0.45 ) }
    dend_60 { pt3dadd( 395.233, -348.968, -76.2691, 0.45 ) }
    dend_60 { pt3dadd( 395.016, -351.055, -76.0356, 0.45 ) }
    dend_60 { pt3dadd( 394.267, -356.279, -75.0401, 0.45 ) }
    dend_60 { pt3dadd( 393.74, -359.738, -74.2787, 0.45 ) }
    dend_60 { pt3dadd( 393.47, -361.792, -73.7897, 0.45 ) }
    dend_60 { pt3dadd( 393.121, -365.034, -72.924, 0.45 ) }
    dend_60 { pt3dadd( 393.08, -365.836, -72.7, 0.45 ) }
    dend_60 { pt3dadd( 393.177, -367.667, -72.0811, 0.45 ) }
    dend_60 { pt3dadd( 393.539, -369.48, -71.4903, 0.45 ) }
    dend_60 { pt3dadd( 394.236, -371.953, -70.7417, 0.45 ) }
    dend_60 { pt3dadd( 394.567, -372.883, -70.5002, 0.45 ) }
    dend_60 { pt3dadd( 395.659, -375.577, -69.9819, 0.45 ) }
    dend_60 { pt3dadd( 397.571, -379.862, -69.1834, 0.45 ) }
    dend_60 { pt3dadd( 398.679, -382.239, -68.7, 0.45 ) }
    dend_60 { pt3dadd( 400.291, -385.574, -67.9831, 0.45 ) }
    dend_60 { pt3dadd( 401.339, -387.818, -67.5114, 0.45 ) }
    dend_60 { pt3dadd( 403.453, -392.326, -66.5393, 0.45 ) }
    dend_60 { pt3dadd( 404.114, -393.704, -66.2415, 0.45 ) }
    dend_60 { pt3dadd( 405.596, -396.791, -65.6423, 0.45 ) }
    dend_60 { pt3dadd( 406.105, -398.007, -65.3486, 0.45 ) }
    dend_60 { pt3dadd( 407.371, -401.162, -64.5337, 0.45 ) }
    dend_60 { pt3dadd( 408.473, -404.258, -63.684, 0.45 ) }
    dend_60 { pt3dadd( 408.893, -405.793, -63.1239, 0.45 ) }
    dend_60 { pt3dadd( 409.297, -407.727, -62.2859, 0.45 ) }
    dend_60 { pt3dadd( 410.0, -411.509, -60.735, 0.45 ) }
    dend_60 { pt3dadd( 410.296, -413.349, -60.0215, 0.45 ) }
    dend_60 { pt3dadd( 410.603, -415.295, -59.2996, 0.45 ) }
    dend_60 { pt3dadd( 411.901, -423.22, -56.5749, 0.45 ) }
    dend_60 { pt3dadd( 412.923, -428.66, -54.8663, 0.45 ) }
    dend_60 { pt3dadd( 413.866, -433.105, -53.5901, 0.45 ) }
    dend_60 { pt3dadd( 414.19, -434.403, -53.2929, 0.45 ) }
    dend_60 { pt3dadd( 414.516, -435.801, -52.9565, 0.45 ) }
    dend_60 { pt3dadd( 414.922, -437.558, -52.4978, 0.45 ) }
    dend_60 { pt3dadd( 415.36, -439.444, -51.9129, 0.45 ) }
    dend_60 { pt3dadd( 415.726, -441.353, -51.1211, 0.45 ) }
    dend_60 { pt3dadd( 415.848, -442.114, -50.7393, 0.45 ) }
    dend_60 { pt3dadd( 416.858, -449.186, -46.9492, 0.45 ) }
    dend_60 { pt3dadd( 417.3, -452.529, -45.1493, 0.45 ) }
    dend_60 { pt3dadd( 418.167, -457.84, -42.324, 0.45 ) }
    dend_60 { pt3dadd( 418.305, -458.717, -41.8537, 0.45 ) }
    dend_60 { pt3dadd( 418.474, -459.569, -41.4096, 0.45 ) }
    dend_60 { pt3dadd( 418.827, -461.023, -40.7111, 0.45 ) }
    dend_60 { pt3dadd( 419.843, -464.284, -39.3975, 0.45 ) }
    dend_60 { pt3dadd( 420.849, -467.479, -38.2031, 0.45 ) }
    dend_60 { pt3dadd( 423.379, -475.669, -35.3173, 0.45 ) }
    dend_60 { pt3dadd( 424.412, -479.197, -34.0604, 0.45 ) }
    dend_60 { pt3dadd( 424.909, -480.887, -33.4399, 0.45 ) }
    dend_60 { pt3dadd( 425.335, -482.86, -32.4309, 0.45 ) }
    dend_60 { pt3dadd( 425.756, -485.582, -30.5924, 0.45 ) }
    dend_60 { pt3dadd( 426.053, -488.954, -27.8744, 0.45 ) }
    dend_60 { pt3dadd( 426.12, -490.292, -26.6955, 0.45 ) }
    dend_60 { pt3dadd( 426.087, -491.502, -25.607, 0.45 ) }
    dend_60 { pt3dadd( 425.495, -502.119, -16.2575, 0.45 ) }
    dend_60 { pt3dadd( 425.32, -505.044, -13.7773, 0.45 ) }
    dend_60 { pt3dadd( 425.166, -508.305, -11.1934, 0.45 ) }
    dend_60 { pt3dadd( 425.027, -510.243, -9.65557, 0.45 ) }
    dend_60 { pt3dadd( 424.67, -514.823, -6.12074, 0.45 ) }
    dend_60 { pt3dadd( 424.492, -517.087, -4.51603, 0.45 ) }
    dend_60 { pt3dadd( 424.395, -519.376, -3.17148, 0.45 ) }
    dend_60 { pt3dadd( 424.179, -523.576, -0.688257, 0.45 ) }
    dend_60 { pt3dadd( 423.571, -538.486, 8.85954, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_45 nseg = 3
    dend_22 nseg = 5
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_46 nseg = 7
    dend_44 nseg = 7
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_5 nseg = 7
    dend_2 nseg = 3
    dend_69 nseg = 3
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 7
    dend_64 nseg = 5
    dend_49 nseg = 3
    dend_41 nseg = 3
    dend_28 nseg = 19
    dend_21 nseg = 5
    dend_66 nseg = 13
    dend_65 nseg = 3
    dend_63 nseg = 5
    dend_38 nseg = 7
    dend_33 nseg = 11
    dend_31 nseg = 5
    dend_67 nseg = 5
    dend_51 nseg = 5
    dend_40 nseg = 21
    dend_37 nseg = 13
    dend_54 nseg = 3
    dend_53 nseg = 11
    dend_36 nseg = 9
    dend_35 nseg = 9
    dend_62 nseg = 3
    dend_55 nseg = 13
    dend_57 nseg = 3
    dend_56 nseg = 9
    dend_59 nseg = 3
    dend_61 nseg = 3
    dend_60 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_NBC_3a23cf60a6_0_0


