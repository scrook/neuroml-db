// Cell: cNAC187_L5_BTC_a47bfc03bb_0_0
/*
{
  "id" : "cNAC187_L5_BTC_a47bfc03bb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.88047, -10.716, -1.11504, 1.92098", "-1.70946, -9.6452, -1.01124, 2.92873", "-1.53845, -8.57443, -0.907436, 4.88462", "-1.36745, -7.50365, -0.803634, 6.96834", "-1.19644, -6.43288, -0.699833, 8.71039", "-1.02543, -5.3621, -0.596031, 9.75846", "-0.854423, -4.29132, -0.492229, 10.7595", "-0.683416, -3.22055, -0.388427, 11.4328", "-0.512408, -2.14977, -0.284625, 11.7309", "-0.341401, -1.079, -0.180824, 11.6952", "-0.170393, -0.00821902, -0.0770218, 11.6235", "6.14341E-4, 1.06256, 0.0267799, 11.5198", "0.171622, 2.13333, 0.130582, 11.2257", "0.342629, 3.20411, 0.234383, 10.7284", "0.513637, 4.27489, 0.338185, 9.45222", "0.684644, 5.34566, 0.441987, 7.57235", "0.855652, 6.41644, 0.545789, 5.71519", "1.02666, 7.48721, 0.649591, 4.19151", "1.19767, 8.55799, 0.753392, 3.44771", "1.36867, 9.62877, 0.857194, 2.95035", "1.53968, 10.6995, 0.960996, 1.95307" ]
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "1.39356, 0.697574, -10.5931, 2.8", "1.39356, 0.697574, -10.5931, 2.8", "4.51464, 0.961252, -15.9243, 2.28", "5.05196, 0.980593, -16.8333, 2.28", "5.69874, 0.930132, -18.1238, 2.58", "6.82212, 0.786767, -20.7629, 2.8", "7.83469, 0.633749, -23.6437, 2.58", "8.15336, 0.576012, -24.854, 2.43", "8.81083, 0.378124, -28.0791, 2.43", "9.6476, -0.072096, -33.6682, 1.77", "9.79115, -0.252922, -35.5715, 1.77", "9.73985, -0.504141, -37.8211, 1.84", "9.50594, -0.692427, -39.5221, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.483558, 10.851, 3.03697, 2.06", "0.483558, 10.851, 3.03697, 2.06", "0.23985, 11.5829, 3.50686, 2.06", "-0.250334, 13.3426, 4.5945, 2.06", "-0.448684, 14.2635, 5.09467, 2.06", "-0.64045, 15.4338, 5.68455, 2.06", "-0.766233, 16.3327, 6.12591, 2.28", "-0.925609, 17.8097, 6.79351, 2.5", "-1.00994, 19.2787, 7.41094, 2.65", "-1.03545, 21.0035, 8.03628, 2.73", "-0.986344, 22.1639, 8.46861, 2.95", "-0.883839, 23.123, 8.83583, 3.02", "-0.611192, 24.5036, 9.44526, 2.43", "-0.182778, 25.839, 10.1494, 1.92", "0.0742324, 26.4094, 10.5473, 1.77", "0.572861, 27.3576, 11.3175, 1.77", "1.01169, 28.1636, 12.022, 1.92", "1.83974, 29.7242, 13.4449, 1.69", "2.46932, 31.0212, 14.655, 1.92", "3.17263, 32.758, 16.2785, 1.62", "3.42281, 33.5749, 17.0044, 1.62", "3.59691, 34.475, 17.7301, 1.62", "3.69028, 35.6239, 18.5815, 1.77", "3.69579, 36.5815, 19.2387, 2.06", "3.69076, 37.6602, 19.9603, 2.06", "3.73289, 38.5453, 20.5482, 2.06", "3.80102, 39.3644, 21.1226, 2.21", "4.03453, 41.111, 22.3733, 1.92", "4.30106, 42.5213, 23.4227, 1.77", "4.4975, 43.3252, 24.0474, 1.77", "4.76976, 44.2341, 24.7447, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.95644, -10.6424, -0.843029, 1.84", "-1.95644, -10.6424, -0.843029, 1.84", "-2.07845, -11.5276, -0.763976, 1.4", "-2.17126, -13.1481, -0.630502, 1.03", "-2.12148, -14.6556, -0.471625, 0.96", "-2.04797, -15.3131, -0.393994, 1.18", "-1.91066, -16.0612, -0.300427, 1.25", "-1.6699, -16.8083, -0.200541, 1.25", "-1.27948, -17.5473, -0.094665, 1.25", "-0.617694, -18.3884, 0.0292451, 1.69", "-0.214843, -18.8205, 0.0823312, 1.92", "0.177532, -19.2411, 0.152817, 1.92", "0.823561, -20.0036, 0.356956, 1.33", "1.22786, -20.5806, 0.552307, 1.03", "1.64478, -21.3378, 0.867253, 1.03", "1.95875, -22.0669, 1.18643, 1.4", "2.4111, -23.3958, 1.77433, 1.4", "2.80211, -24.9195, 2.4423, 1.4", "2.97699, -25.9036, 2.85689, 1.25", "3.10901, -27.1612, 3.3472, 0.66", "3.143, -28.2496, 3.70872, 0.74", "3.1186, -29.3471, 3.96827, 1.03", "3.07057, -30.0557, 4.02295, 1.25", "3.00963, -30.6957, 3.98058, 1.25", "2.91798, -31.3795, 3.85802, 1.25", "2.75585, -32.337, 3.59307, 1.11", "2.52652, -33.4752, 3.24012, 1.11", "2.28672, -34.6156, 2.8688, 1.33", "2.10036, -35.5605, 2.55939, 1.33", "1.87236, -36.8898, 2.20916, 1.33", "1.72052, -38.014, 1.96756, 0.88", "1.62887, -39.0961, 1.84468, 1.03", "1.58563, -40.6227, 1.89177, 0.66", "1.65602, -41.6803, 2.11616, 0.66", "2.02363, -43.3439, 2.8659, 0.66", "2.22258, -43.9396, 3.24291, 0.96", "2.77954, -45.4161, 4.32096, 1.18", "3.05623, -46.1508, 4.87823, 1.4", "3.18577, -46.5723, 5.18505, 1.4", "3.4241, -47.9366, 5.96575, 0.88", "3.43064, -49.1126, 6.39391, 0.88", "3.32307, -50.0425, 6.61602, 1.18", "3.12751, -51.0429, 6.73785, 1.03", "2.85794, -52.18, 6.77592, 0.88", "2.5551, -53.3129, 6.74135, 0.88", "2.35983, -54.0194, 6.6537, 1.18", "2.1799, -54.8747, 6.50071, 1.18", "2.11552, -55.5968, 6.34642, 1.18", "2.17788, -56.7565, 6.05909, 1.18", "2.29331, -57.4375, 5.86186, 1.18", "2.48573, -58.2165, 5.62439, 1.18", "2.84397, -59.4605, 5.25692, 0.74", "3.19491, -60.6823, 4.92187, 0.74", "3.50711, -61.9867, 4.61005, 1.03", "3.67362, -63.0599, 4.41033, 0.96", "3.71376, -63.7977, 4.31225, 0.88", "3.67196, -64.6887, 4.22061, 0.88", "3.5255, -65.6724, 4.14596, 0.96", "3.27168, -66.7945, 4.11018, 0.96", "2.95691, -68.0362, 4.16146, 0.96", "2.6927, -69.2774, 4.30534, 1.03", "2.57841, -70.181, 4.48315, 0.81", "2.56421, -70.7456, 4.63445, 0.81", "2.59254, -71.4382, 4.85186, 0.81", "2.65133, -72.4583, 5.19668, 0.74", "2.65248, -73.5449, 5.57194, 0.66", "2.52415, -74.9503, 6.02222, 0.74", "2.36551, -75.7957, 6.26103, 0.74", "2.02615, -77.0396, 6.50998, 0.74", "1.66103, -78.0689, 6.63164, 0.66", "1.11682, -79.2996, 6.61859, 0.66", "0.6264, -80.2208, 6.50572, 0.66", "-0.0693516, -81.3548, 6.21798, 0.81", "-0.610465, -82.1686, 5.9045, 1.18", "-0.890246, -82.5885, 5.69304, 1.4", "-1.55897, -83.665, 5.06993, 1.25", "-1.81203, -84.1237, 4.78725, 0.96", "-2.09273, -84.7527, 4.42056, 0.96", "-2.37011, -85.8042, 3.92438, 0.66", "-2.42009, -86.594, 3.68119, 0.74", "-2.37189, -87.3854, 3.53429, 0.81", "-2.23887, -88.3766, 3.42247, 0.81", "-2.0112, -89.6732, 3.31623, 0.81", "-1.65761, -91.417, 3.22691, 0.66", "-1.25849, -93.2808, 3.16978, 0.66", "-0.921944, -95.0654, 3.121, 0.74", "-0.791465, -96.1109, 3.10265, 0.81", "-0.747825, -97.3627, 3.09611, 0.88", "-0.79941, -97.9672, 3.11602, 0.96", "-0.969212, -98.6938, 3.1782, 0.96", "-1.46184, -99.9343, 3.32993, 0.74", "-2.1618, -101.28, 3.52683, 0.74", "-2.59403, -102.071, 3.65078, 1.03", "-3.08318, -103.086, 3.80497, 1.33", "-3.32387, -103.728, 3.89794, 1.33", "-3.51517, -104.583, 4.02612, 1.33", "-3.56081, -106.092, 4.26959, 0.81", "-3.40934, -107.199, 4.45744, 0.81", "-3.01445, -108.87, 4.74071, 0.81", "-2.74584, -109.825, 4.88556, 0.81", "-2.39227, -111.009, 5.06614, 0.81", "-2.04766, -112.196, 5.25595, 0.59", "-1.78176, -113.336, 5.43449, 0.52", "-1.71332, -113.994, 5.51381, 0.52", "-1.73822, -115.335, 5.57489, 0.52", "-1.81695, -116.106, 5.56139, 0.81", "-1.96899, -116.982, 5.49893, 0.81", "-2.26082, -118.254, 5.36581, 0.74", "-2.63421, -119.703, 5.18702, 0.81", "-3.0498, -121.169, 5.00396, 0.81", "-3.30875, -122.012, 4.89407, 0.96", "-3.56108, -122.774, 4.82222, 0.96", "-3.83752, -123.594, 4.82376, 1.03", "-4.03978, -124.209, 4.92267, 1.03", "-4.29878, -125.106, 5.20891, 0.81", "-4.50384, -125.977, 5.56372, 0.74", "-4.7499, -127.392, 6.14985, 0.66", "-4.94191, -129.063, 6.82927, 0.66", "-5.03603, -130.421, 7.34315, 0.52", "-5.09526, -131.947, 7.84121, 0.52", "-5.11445, -132.89, 8.07507, 0.74", "-5.15013, -134.14, 8.30018, 0.96", "-5.2019, -135.013, 8.39956, 1.03", "-5.30946, -135.98, 8.47336, 1.03", "-5.46653, -137.027, 8.5597, 0.74", "-5.66461, -138.145, 8.72632, 0.52", "-5.84821, -139.153, 8.9446, 0.52", "-6.11814, -140.582, 9.30218, 0.88", "-6.30223, -141.55, 9.53147, 0.74", "-6.49807, -142.764, 9.79046, 0.44", "-6.60087, -143.604, 9.93503, 0.59", "-6.66776, -144.634, 10.0504, 0.59", "-6.64873, -146.193, 10.0822, 0.59", "-6.51713, -147.44, 10.0135, 0.81", "-6.26772, -148.636, 9.91006, 0.81", "-6.04477, -149.391, 9.83484, 0.96", "-5.76957, -150.14, 9.75206, 0.96", "-5.32515, -151.203, 9.64527, 0.74", "-4.88675, -152.318, 9.55943, 0.74", "-4.53915, -153.446, 9.52713, 0.74", "-4.32199, -154.402, 9.56065, 0.74", "-4.12939, -155.561, 9.65534, 0.74", "-3.97826, -156.872, 9.80907, 0.81", "-3.84415, -158.911, 10.0783, 0.81", "-3.8049, -160.587, 10.3373, 0.74", "-3.81268, -161.956, 10.5916, 0.81", "-3.82367, -162.542, 10.7262, 1.03", "-3.84195, -163.237, 10.9375, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.53968, 10.6995, 0.960996, 0.524172", "3.90527, 25.5118, 0.960996, 0.524172", "6.27086, 40.3241, 0.960996, 0.524172" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "9.50594, -0.692427, -39.5221, 0.88", "9.55028, -0.851688, -40.7294, 0.88", "9.54102, -1.77632, -46.5834, 0.88", "9.49698, -1.9252, -47.385, 0.88", "9.27307, -2.37542, -49.4556, 1.25", "8.97384, -2.82615, -51.4282, 1.03", "8.62051, -3.27495, -53.3544, 0.81", "8.3712, -3.51141, -54.5045, 0.81", "7.98124, -3.77599, -55.8634, 1.03", "7.65815, -3.9036, -57.1614, 1.4", "7.28398, -3.99258, -58.9583, 1.4", "7.08111, -4.0164, -60.4899, 1.11", "7.02785, -4.01375, -61.6937, 0.88", "7.0345, -4.03852, -63.1979, 1.11", "7.08759, -4.12637, -65.7671, 1.11", "7.09926, -4.22094, -67.8317, 0.88", "7.04472, -4.30598, -69.3432, 0.74", "6.96703, -4.35183, -70.2111, 0.88", "6.7069, -4.42046, -71.758, 0.59", "6.32726, -4.40823, -73.239, 0.52", "6.02834, -4.29312, -74.0638, 0.74", "5.49045, -3.91129, -75.3875, 0.88", "5.21405, -3.67844, -76.0665, 1.11", "4.84842, -3.36661, -76.9619, 1.25", "4.36039, -3.00122, -78.2145, 1.62", "3.91843, -2.8006, -79.5621, 1.4", "3.74711, -2.78952, -80.3704, 1.18", "3.62422, -2.87081, -81.5085, 0.66", "3.59683, -2.90579, -82.1091, 0.66", "3.57479, -2.88272, -83.2396, 0.66", "3.54892, -2.72716, -84.4548, 0.81", "3.50105, -2.36644, -86.2534, 0.66", "3.44565, -2.09578, -87.4268, 0.81", "3.37673, -1.82068, -88.6775, 0.66", "3.29258, -1.5316, -90.5989, 0.66", "3.21058, -1.42431, -91.603, 0.52", "3.10322, -1.36333, -92.4586, 0.88", "2.89743, -1.31091, -93.7992, 1.03", "2.66469, -1.29501, -95.3104, 1.4", "2.19102, -1.31543, -98.6632, 0.88", "1.95445, -1.28822, -100.336, 0.52", "1.81946, -1.20792, -101.174, 1.18", "1.71738, -1.09393, -101.713, 1.47", "1.6117, -0.92943, -102.171, 1.47", "1.31751, -0.374801, -103.232, 1.03", "1.11325, 0.205548, -104.063, 1.25", "0.886787, 1.33917, -105.839, 0.96", "0.822088, 1.76742, -106.615, 0.81", "0.77308, 2.14951, -107.44, 1.03", "0.74733, 2.41842, -108.053, 1.03", "0.749005, 3.19383, -109.781, 1.18", "0.839119, 3.8945, -111.333, 0.96", "0.935772, 4.3489, -112.321, 1.33", "1.19491, 5.35921, -114.394, 1.47", "1.40269, 6.22465, -115.954, 1.33", "1.54405, 6.90087, -116.953, 0.52", "1.73944, 8.00692, -118.198, 1.33", "1.82033, 8.5235, -118.62, 1.33", "2.01331, 9.88313, -119.472, 0.88", "2.10717, 11.0227, -119.958, 0.66", "2.13412, 11.7421, -120.187, 0.96", "2.14979, 12.4854, -120.391, 1.18", "2.18801, 13.2852, -120.554, 1.33", "2.33217, 14.4232, -120.796, 0.88", "2.60192, 15.4376, -121.049, 0.52", "3.12378, 16.6309, -121.446, 0.52", "3.70001, 17.523, -121.827, 0.52", "4.22426, 18.0363, -122.138, 1.18", "5.00737, 18.5022, -122.564, 0.96", "5.65184, 18.7038, -122.916, 0.52", "6.18824, 18.7634, -123.27, 0.29", "6.99501, 18.6933, -123.991, 0.29", "7.93453, 18.4446, -125.047, 0.37", "8.37437, 18.2811, -125.666, 0.52", "9.08947, 17.9899, -126.783, 1.25", "9.89767, 17.637, -128.154, 1.55", "10.9961, 17.1432, -130.134, 1.18", "11.4361, 16.9537, -130.96, 0.88", "12.5504, 16.5103, -133.025, 1.11", "12.8768, 16.4064, -133.567, 1.11", "13.2546, 16.334, -134.086, 0.59", "13.9373, 16.3232, -134.812, 0.37", "14.7869, 16.4642, -135.584, 0.74", "15.1185, 16.5779, -135.901, 0.74", "15.602, 16.8802, -136.452, 0.37", "15.9141, 17.2791, -137.044, 0.37", "15.9486, 17.7347, -137.679, 0.66", "15.6531, 18.3439, -138.703, 0.52", "15.2941, 18.7398, -139.474, 0.52", "14.9351, 19.0282, -140.132, 0.52", "14.7887, 19.1197, -140.38, 0.88", "13.8576, 19.6263, -142.146, 1.11", "13.0349, 20.0377, -143.92, 0.44", "12.8691, 20.1256, -144.315, 0.59", "12.3861, 20.4316, -145.584, 1.25", "12.0879, 20.6524, -146.445, 1.4", "11.0002, 21.5351, -149.743, 1.18", "10.3533, 22.0696, -151.804, 0.52", "10.19, 22.1938, -152.358, 0.52", "9.90941, 22.3798, -153.309, 0.44", "9.41397, 22.6629, -154.907, 0.66", "8.98235, 22.886, -156.196, 0.88", "8.54106, 23.0967, -157.374, 0.66", "8.12386, 23.347, -158.57, 0.44", "7.83562, 23.5812, -159.446, 0.37", "7.68139, 23.7901, -159.941, 0.52", "7.57852, 24.1235, -160.315, 0.66", "7.48974, 24.8279, -160.845, 0.66", "7.39179, 26.0796, -161.625, 0.66", "7.37019, 26.8338, -162.036, 0.29", "7.37796, 27.6823, -162.496, 0.29", "7.40026, 28.7239, -163.075, 0.88", "7.42738, 30.081, -163.802, 0.37" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "9.50594, -0.692427, -39.5221, 1.84", "10.4544, 1.32696, -40.7759, 1.84", "11.1547, 2.8025, -41.6661, 1.25", "11.505, 3.63488, -42.1613, 1.25", "11.9397, 4.91021, -42.8892, 1.18", "12.2082, 6.0398, -43.5379, 1.18", "12.3911, 7.24269, -44.2585, 1.33", "12.4564, 8.22886, -44.8407, 1.69", "12.3884, 9.13194, -45.5033, 1.69", "12.2195, 9.91334, -46.1477, 1.55", "11.7992, 11.0447, -47.2538, 1.33", "11.3329, 11.9412, -48.5915, 1.25", "10.9915, 12.455, -49.6248, 1.47", "10.4093, 13.2574, -51.4754, 1.92", "10.0028, 13.8195, -52.8242, 2.28", "9.451, 14.6213, -54.7496, 2.73", "8.15958, 16.6596, -59.4243, 1.33", "7.83768, 17.24, -60.6682, 1.18", "7.6406, 17.783, -61.7426, 1.18", "7.54071, 18.3757, -62.7911, 1.4", "7.55128, 18.9707, -63.7849, 1.62", "7.7761, 20.059, -65.5001, 1.69", "8.23766, 21.2196, -67.315, 1.69", "9.39434, 23.2825, -70.9139, 1.33", "10.0388, 24.24, -72.7844, 1.55", "10.6251, 24.9571, -74.3557, 1.92", "11.0844, 25.4132, -75.4723, 2.21", "11.5408, 25.7558, -76.439, 2.43", "11.5736, 25.7739, -76.4968, 2.43" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.76976, 44.2341, 24.7447, 0.88", "6.21373, 43.541, 24.7237, 0.88", "6.88358, 43.1998, 24.7672, 0.88", "8.06231, 42.5955, 24.972, 0.88", "8.96281, 42.1681, 25.1961, 0.88", "11.2226, 41.1872, 25.9183, 0.74", "12.3262, 40.7595, 26.3245, 0.96", "13.1637, 40.4537, 26.7108, 1.11", "14.0982, 40.2488, 27.288, 1.25", "14.7875, 40.2058, 27.8356, 1.77", "15.2574, 40.2809, 28.3227, 1.92", "15.5331, 40.3993, 28.7012, 2.06", "15.9671, 40.6716, 29.245, 1.55", "16.6314, 41.1716, 29.9359, 1.25" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "4.76976, 44.2341, 24.7447, 0.96", "6.27205, 45.4495, 23.9897, 0.96", "7.39086, 46.2721, 23.5533, 0.88", "8.25443, 46.8563, 23.2842, 0.88", "9.39539, 47.5676, 23.0016, 1.18", "10.0731, 47.9621, 22.8709, 1.18", "11.0402, 48.5411, 22.696, 1.18", "11.6863, 48.9134, 22.6417, 1.4", "12.1589, 49.2339, 22.6261, 1.4", "12.6198, 49.691, 22.5951, 0.81", "12.9621, 50.3265, 22.5319, 0.81", "13.1923, 51.6029, 22.2782, 0.66", "13.0959, 52.7905, 21.978, 0.66", "12.9096, 53.6982, 21.7307, 0.74", "12.6848, 54.6065, 21.4592, 0.74", "12.4416, 55.606, 21.1273, 0.59", "12.2235, 56.6342, 20.7323, 0.59", "12.0589, 57.799, 20.2597, 0.81", "12.0364, 58.6733, 19.8943, 1.03", "12.1257, 59.8084, 19.4778, 1.03", "12.3311, 61.1714, 19.0877, 0.74", "12.57, 62.3674, 18.8228, 0.52", "12.7686, 63.3722, 18.6863, 0.52", "12.8882, 64.2264, 18.6424, 0.52", "12.9653, 65.5446, 18.6906, 0.88", "12.9684, 66.6226, 18.7884, 1.18", "12.9688, 67.1886, 18.855, 1.18", "13.0451, 68.2429, 18.9719, 0.88", "13.3587, 69.6046, 19.0406, 0.52", "13.7349, 70.3468, 19.0351, 0.52", "14.4133, 71.2227, 18.9884, 0.66", "15.2113, 72.0597, 18.9278, 0.66", "16.2103, 73.0299, 18.861, 0.66", "17.0717, 73.846, 18.8053, 0.66", "18.1475, 74.9313, 18.7497, 1.11", "18.4576, 75.3239, 18.7354, 1.11", "18.7663, 75.931, 18.7234, 1.11", "19.0243, 77.0763, 18.6748, 0.74", "19.017, 77.9565, 18.6097, 0.74", "18.8634, 78.921, 18.4974, 0.88", "18.6524, 79.7697, 18.3559, 1.11", "18.4166, 80.6808, 18.1589, 1.11", "18.2636, 81.3381, 17.9969, 0.74", "18.1132, 82.2099, 17.7587, 0.74", "18.0546, 83.1166, 17.4951, 0.59", "18.1515, 84.2346, 17.1559, 0.44", "18.4431, 85.2492, 16.847, 0.44", "18.8879, 86.1243, 16.5956, 0.66", "19.3078, 86.751, 16.48, 0.81", "19.7402, 87.295, 16.4393, 0.81", "20.3252, 87.9793, 16.463, 0.81", "20.9984, 88.7723, 16.5724, 0.52", "21.5466, 89.5028, 16.7134, 0.52", "22.3833, 90.8946, 16.9801, 1.11", "22.6804, 91.552, 17.116, 1.11", "22.89, 92.1305, 17.2433, 1.11", "23.0939, 92.7664, 17.3872, 1.11", "23.4019, 93.714, 17.5336, 0.81", "23.7661, 94.833, 17.6292, 0.81", "24.2689, 96.498, 17.653, 0.66", "24.5904, 97.6913, 17.5971, 0.74", "24.9038, 99.062, 17.4668, 0.66", "25.3188, 101.334, 17.11, 0.81", "25.4678, 102.709, 16.8097, 0.81", "25.4584, 104.208, 16.3308, 0.81", "25.2791, 105.467, 15.7497, 0.81", "25.0801, 106.218, 15.3126, 1.03", "24.8551, 106.862, 14.8241, 1.03", "24.5871, 107.572, 14.2163, 0.66", "24.2876, 108.541, 13.3053, 0.96", "24.1169, 109.409, 12.5037, 0.96", "24.0513, 110.134, 11.9134, 1.03", "24.0295, 112.02, 10.4825, 0.59", "24.0468, 112.936, 9.7802, 0.66", "24.0536, 113.476, 9.33023, 0.66", "24.0297, 114.337, 8.56796, 0.66", "23.9504, 115.102, 7.82946, 0.66", "23.7188, 116.301, 6.50883, 0.66", "23.3164, 117.622, 4.94083, 0.66", "22.9115, 118.61, 3.68998, 0.81", "22.5135, 119.39, 2.67508, 0.81", "22.0405, 120.148, 1.68702, 0.81", "21.2243, 121.317, 0.289009, 0.59", "20.6287, 122.169, -0.523777, 0.44", "19.9948, 123.099, -1.17996, 0.44", "19.5658, 123.726, -1.51849, 0.66", "18.9876, 124.558, -1.86901, 0.66", "18.3254, 125.514, -2.18049, 0.66", "17.5924, 126.58, -2.45903, 0.88", "16.8275, 127.74, -2.78532, 0.81", "16.2495, 128.657, -3.05709, 0.81", "15.7586, 129.493, -3.30562, 0.66", "15.4616, 130.03, -3.46436, 0.81", "15.0341, 130.897, -3.70554, 0.81", "14.7544, 131.632, -3.87983, 0.74", "14.527, 132.662, -4.0752, 0.59", "14.3803, 133.84, -4.25134, 0.59", "14.3124, 134.5, -4.35351, 0.59", "14.1657, 135.765, -4.64869, 0.59", "13.9585, 137.195, -5.12505, 0.59", "13.7696, 138.171, -5.53942, 0.59", "13.5062, 139.144, -6.07212, 0.66", "13.0479, 140.305, -6.81114, 0.66", "12.2475, 141.996, -8.03438, 0.96", "11.7138, 142.891, -8.79393, 1.11", "11.402, 143.324, -9.22431, 0.81", "10.9474, 143.887, -9.84757, 0.59", "10.0129, 145.035, -11.1668, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.84195, -163.237, 10.9375, 0.29", "-3.16253, -162.425, 10.4868, 0.29", "-2.78509, -161.874, 10.2237, 0.29", "-2.21247, -160.866, 9.82555, 0.29", "-1.67926, -159.752, 9.47599, 0.29", "-1.31554, -158.866, 9.24062, 0.44", "-0.96416, -157.857, 9.01868, 0.44", "-0.698965, -156.743, 8.85753, 0.37", "-0.468649, -155.493, 8.71666, 0.37", "-0.27242, -153.807, 8.59443, 0.59", "-0.212008, -152.908, 8.56348, 0.59", "-0.18146, -151.956, 8.55183, 0.37", "-0.19253, -151.142, 8.57034, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.84195, -163.237, 10.9375, 0.52", "-2.77054, -164.931, 11.4196, 0.52", "-1.72874, -166.749, 11.8253, 0.52", "-1.17373, -167.803, 12.0118, 0.52", "-0.525273, -169.186, 12.2334, 0.52", "0.234839, -170.903, 12.3735, 0.74", "0.75891, -172.181, 12.3941, 0.96", "1.08009, -173.143, 12.3368, 1.18", "1.31332, -174.135, 12.225, 1.33", "1.48844, -175.5, 12.0681, 1.47", "1.52107, -178.112, 11.7967, 0.74", "1.25919, -180.168, 11.6637, 0.74", "0.910896, -181.432, 11.6826, 0.59", "0.467058, -182.683, 11.8199, 0.59", "-0.155592, -184.282, 12.1253, 0.59", "-0.579279, -185.428, 12.4227, 0.59", "-0.95863, -186.594, 12.8059, 0.59", "-1.34147, -188.293, 13.3439, 0.52", "-1.52405, -190.243, 13.8535, 0.59", "-1.50083, -191.515, 14.1269, 0.59", "-1.3166, -193.352, 14.4335, 0.88", "-1.1031, -194.748, 14.6139, 1.25", "-0.908354, -195.712, 14.7121, 1.25", "-0.658053, -196.856, 14.828, 1.25", "-0.408457, -198.011, 14.9911, 0.96", "-0.114997, -199.271, 15.2315, 0.96", "0.292879, -200.92, 15.6361, 0.74", "0.775028, -202.876, 16.1855, 0.74", "1.15878, -204.507, 16.6715, 0.66", "1.57359, -206.389, 17.2501, 0.66", "1.85295, -207.798, 17.6874, 0.66", "2.16719, -209.773, 18.2965, 0.59", "2.26816, -210.871, 18.6169, 0.81", "2.2634, -212.207, 18.9479, 0.81", "2.12246, -213.722, 19.2653, 0.81", "1.84161, -215.095, 19.5088, 0.66", "1.45156, -216.259, 19.7107, 0.66", "0.854925, -217.523, 19.9699, 0.66", "0.160638, -218.771, 20.2697, 0.74", "-0.49049, -219.894, 20.5732, 0.88", "-1.03617, -220.944, 20.8741, 0.88", "-1.45398, -222.01, 21.1916, 0.74", "-1.86789, -224.042, 21.8488, 0.74", "-1.91808, -225.059, 22.2134, 0.74", "-1.79715, -226.846, 22.8661, 0.59", "-1.49301, -228.841, 23.5746, 0.59", "-1.18827, -230.211, 24.0572, 0.59", "-0.747292, -231.988, 24.642, 0.59", "-0.540494, -232.901, 24.9025, 0.96", "-0.457277, -233.841, 25.1884, 0.96", "-0.572776, -234.69, 25.5056, 0.96", "-0.923309, -235.975, 25.9981, 0.52", "-1.40256, -237.175, 26.4628, 0.52", "-1.96187, -238.238, 26.8703, 0.52", "-3.27304, -240.378, 27.7492, 0.74", "-4.56602, -242.074, 28.6184, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.27086, 40.3241, 0.960996, 0.181933", "8.63644, 55.1364, 0.960996, 0.181933", "11.002, 69.9487, 0.960996, 0.181933" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "11.5736, 25.7739, -76.4968, 1.47", "10.4418, 25.8281, -78.886, 1.47", "8.19889, 26.3765, -83.057, 1.03", "7.51982, 26.6771, -84.4031, 1.03", "7.07546, 27.0474, -85.7281, 1.03", "6.72502, 27.5165, -87.2323, 0.81", "6.5777, 27.8539, -88.2833, 0.66", "6.57488, 28.5506, -90.0505, 1.03", "6.86974, 29.3212, -91.8382, 1.03", "8.3074, 31.1898, -96.546, 0.96", "8.91559, 31.6522, -97.9327, 0.96", "9.90445, 32.0671, -99.7173, 0.74", "10.6564, 32.2206, -101.029, 0.59", "11.1509, 32.2816, -101.875, 0.81", "11.7361, 32.3415, -102.899, 1.03", "12.5928, 32.4823, -104.585, 1.18", "13.4795, 32.8273, -107.239, 1.47", "14.3616, 33.5611, -111.811, 1.18", "14.5159, 33.8707, -113.598, 1.11", "14.5262, 34.0423, -114.743, 1.11", "14.2981, 34.4924, -118.295, 1.11", "13.8559, 34.8134, -121.458, 0.81", "13.6315, 34.8526, -122.496, 0.81", "13.3886, 34.8251, -123.505, 1.11", "12.3633, 34.5316, -127.981, 0.81", "12.0222, 34.4252, -129.569, 0.81", "11.5702, 34.3264, -131.545, 0.96", "11.0864, 34.2387, -133.848, 0.81", "10.6288, 34.2371, -136.275, 0.52", "10.4149, 34.3043, -137.373, 0.52", "10.0857, 34.6079, -138.83, 0.74", "9.68598, 35.507, -141.651, 1.33" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "11.5736, 25.7739, -76.4968, 2.43", "11.2249, 26.1597, -76.7721, 2.43", "10.0445, 27.2643, -77.5439, 0.88", "9.03897, 28.1362, -78.1103, 0.88", "8.36762, 28.7381, -78.4499, 0.88", "7.6305, 29.4602, -78.8075, 0.74", "6.85021, 30.3483, -79.2201, 0.88", "6.38579, 30.9449, -79.4827, 1.03", "5.81154, 31.8616, -79.8746, 1.03", "5.29286, 33.0812, -80.3431, 1.92", "5.05526, 33.8432, -80.6328, 1.55", "4.69208, 35.205, -81.1498, 1.11", "4.35055, 36.4768, -81.6323, 0.96", "3.98142, 37.6069, -82.1221, 0.96", "3.65425, 38.3666, -82.4903, 0.96", "3.30278, 38.9434, -82.8166, 0.96", "2.69244, 39.6809, -83.2685, 0.96", "2.0914, 40.26, -83.6344, 0.96", "1.16111, 41.0472, -84.1455, 0.88", "0.488559, 41.5653, -84.5168, 1.33", "-0.0775443, 42.0262, -84.8761, 1.55", "-0.407337, 42.3458, -85.1267, 1.77", "-0.7734, 42.8199, -85.479, 1.77", "-0.852182, 42.9556, -85.5708, 1.77" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "16.6314, 41.1716, 29.9359, 0.29", "16.6295, 41.0371, 30.6478, 0.29", "16.7342, 40.799, 32.018, 0.29", "16.8477, 40.5676, 33.0966, 0.29", "16.975, 40.3432, 33.9844, 0.29", "17.2629, 40.0021, 35.6299, 0.29", "17.5282, 39.7968, 36.9086, 0.29", "17.8671, 39.5831, 38.3517, 0.29", "18.0558, 39.4743, 39.0177, 0.66", "18.3329, 39.3351, 39.8408, 0.29", "19.0453, 39.1609, 41.6312, 0.29", "19.3544, 39.1893, 42.3301, 0.52", "19.791, 39.3195, 43.2923, 0.22", "20.1065, 39.4766, 43.9602, 0.22", "20.4178, 39.684, 44.5938, 0.22", "20.9775, 40.1386, 45.6924, 0.22", "21.5549, 40.6515, 46.7955, 0.22", "21.8516, 40.9673, 47.3908, 0.29", "22.242, 41.4982, 48.2096, 0.29", "22.4599, 41.8553, 48.711, 0.29", "22.5814, 42.0735, 49.0237, 0.44", "22.9148, 42.7273, 50.0499, 0.22", "23.1217, 43.1883, 50.7243, 0.37", "23.3126, 43.6541, 51.4224, 0.66", "23.5407, 44.2596, 52.3504, 0.81", "23.7417, 44.8456, 53.1843, 0.44", "23.8877, 45.2961, 53.8346, 0.52", "25.6667, 48.6281, 60.7724, 0.52", "26.532, 52.6343, 67.5533, 0.52", "28.3427, 56.31, 74.3243, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "16.6314, 41.1716, 29.9359, 1.47", "16.647, 41.9712, 30.3269, 1.47", "16.668, 42.9764, 30.795, 0.66", "16.7152, 43.7781, 31.161, 0.59", "16.7917, 44.4632, 31.4932, 0.59", "16.8811, 45.2641, 31.8814, 0.74", "16.9472, 45.8572, 32.169, 0.88", "16.9738, 46.2167, 32.3214, 1.11", "16.9853, 46.7557, 32.5745, 1.33", "17.0378, 47.2816, 32.8079, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "10.0129, 145.035, -11.1668, 0.37", "9.78861, 146.194, -11.3512, 0.37", "9.69832, 146.928, -11.4677, 0.44", "9.64508, 147.973, -11.6155, 0.44", "9.65949, 148.923, -11.7491, 0.44", "9.76586, 150.469, -11.9524, 0.52", "9.87545, 151.492, -12.0371, 0.52", "9.97381, 151.991, -12.0494, 0.66", "10.3169, 153.192, -12.0068, 0.66", "10.6822, 154.22, -11.9084, 0.81", "10.9699, 154.925, -11.7883, 0.88", "11.4989, 156.001, -11.562, 0.96", "11.9647, 156.82, -11.3966, 0.96", "12.6352, 157.802, -11.2716, 0.59", "13.3283, 158.692, -11.2469, 0.44", "13.8485, 159.346, -11.307, 0.44", "14.8409, 160.659, -11.5857, 0.66", "15.1647, 161.146, -11.7421, 0.66", "15.9214, 162.554, -12.3122, 0.44", "16.289, 163.547, -12.7537, 0.44", "16.5812, 164.796, -13.2896, 0.59", "16.6918, 165.657, -13.6067, 0.59", "16.7671, 166.847, -13.945, 0.37", "16.8372, 167.998, -14.2194, 0.37", "16.9395, 169.438, -14.492, 0.52", "17.0902, 170.636, -14.6948, 0.52", "17.3649, 172.25, -14.9364, 0.52", "17.6273, 173.676, -15.1346, 0.44", "17.8756, 175.184, -15.332, 0.66", "17.9326, 175.728, -15.3991, 0.88", "17.9795, 177.087, -15.5815, 0.52", "17.9538, 177.95, -15.7074, 0.44", "17.8525, 179.339, -15.9016, 0.44", "17.7807, 180.737, -16.05, 0.66", "17.8061, 181.678, -16.1022, 0.96", "17.9222, 182.684, -16.1243, 0.96", "18.0994, 183.505, -16.0894, 0.96", "18.535, 185.015, -15.9567, 0.37", "18.9795, 186.496, -15.7948, 0.29", "19.4343, 187.792, -15.6237, 0.44", "19.6755, 188.46, -15.5267, 0.44", "20.0958, 189.774, -15.3323, 0.37", "20.2753, 190.455, -15.2288, 0.37", "20.5576, 192.53, -14.9146, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.0129, 145.035, -11.1668, 0.52", "9.14876, 145.161, -11.918, 0.52", "8.23651, 145.504, -12.8027, 0.44", "7.90796, 145.696, -13.1513, 0.37", "7.65691, 145.864, -13.4184, 0.37", "7.18626, 146.179, -13.8973, 0.59", "6.97871, 146.299, -14.1141, 0.66", "6.63157, 146.501, -14.5381, 0.66", "6.30253, 146.655, -15.0118, 0.59", "6.00931, 146.748, -15.4789, 0.59", "5.71855, 146.82, -16.023, 0.59", "5.2974, 146.926, -16.9363, 0.44", "4.91089, 147.062, -17.8583, 0.44", "4.6136, 147.218, -18.6554, 0.44", "4.41656, 147.347, -19.272, 0.44", "4.18405, 147.577, -20.1793, 0.59", "4.05726, 147.797, -20.8187, 0.74", "3.9824, 148.039, -21.2656, 0.88", "3.92793, 148.301, -21.6123, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.19253, -151.142, 8.57034, 0.37", "-0.515138, -149.582, 8.45546, 0.37", "-0.761296, -147.72, 8.36195, 0.37", "-0.92101, -145.562, 8.25964, 0.37", "-0.988218, -143.972, 8.15137, 0.37", "-1.05686, -142.323, 8.00952, 0.37", "-1.13039, -140.942, 7.87162, 0.37", "-1.20176, -139.603, 7.71223, 0.37", "-1.25055, -138.53, 7.56163, 0.37", "-1.24198, -137.363, 7.4022, 0.37", "-1.20978, -136.259, 7.25816, 0.37", "-1.15913, -134.859, 7.0874, 0.37", "-1.08787, -133.449, 6.94379, 0.59", "-1.00311, -132.441, 6.85416, 0.81", "-0.704312, -130.249, 6.71894, 0.29", "-0.499901, -129.182, 6.65448, 0.88", "-0.298204, -128.374, 6.58286, 0.96", "-0.0645841, -127.645, 6.4716, 0.44", "0.46473, -126.244, 6.14338, 0.37", "1.00022, -125.084, 5.66028, 0.37", "1.45064, -124.188, 5.13527, 0.37", "1.81688, -123.483, 4.67919, 0.37", "2.38266, -122.287, 3.92104, 0.52", "2.61395, -121.705, 3.56803, 0.52", "3.32902, -119.463, 2.36478, 0.52", "3.59676, -118.25, 1.77625, 0.52", "3.75026, -117.101, 1.29378, 0.59", "3.84006, -115.766, 0.803976, 0.29", "3.88393, -114.379, 0.356295, 0.29", "3.93702, -113.164, -0.0339468, 0.37", "4.01686, -111.764, -0.467804, 0.59", "4.14732, -110.901, -0.784688, 0.74", "4.33986, -110.112, -1.08963, 0.74", "4.67903, -109.038, -1.49288, 0.66", "5.17821, -107.509, -1.96, 0.59", "5.43109, -106.584, -2.16438, 0.59", "5.63536, -105.431, -2.29288, 0.44", "5.76388, -104.147, -2.3527, 0.37", "5.83126, -102.737, -2.34047, 0.37", "5.87596, -101.474, -2.2967, 0.29", "5.95162, -100.228, -2.22077, 0.29", "6.14619, -98.4784, -2.12623, 0.29", "6.37884, -97.3204, -2.12875, 0.74", "6.60935, -96.6065, -2.19987, 0.74", "7.18887, -95.2445, -2.49596, 0.37", "7.73263, -94.126, -2.88225, 0.59", "8.00278, -93.5657, -3.13393, 0.59", "8.73763, -91.9492, -3.98194, 0.37", "9.11031, -91.0103, -4.49664, 0.37", "9.51892, -89.789, -5.1508, 0.37", "9.74431, -88.9356, -5.55309, 0.52", "9.97259, -87.99, -5.95174, 0.29", "10.1991, -87.0006, -6.26592, 0.29", "10.3845, -86.1908, -6.42641, 0.29", "10.6409, -85.312, -6.57723, 0.29", "10.9038, -84.5149, -6.7121, 0.37", "11.2127, -83.5524, -6.88233, 0.37", "11.4792, -82.5839, -7.06055, 0.44", "11.7056, -81.5354, -7.24239, 0.44", "11.9025, -80.6089, -7.38684, 0.44", "12.1922, -79.4406, -7.56486, 0.29", "12.475, -78.627, -7.69537, 0.29", "13.033, -77.3821, -7.88927, 0.29", "13.5627, -76.3821, -8.02126, 0.74", "14.1, -75.4468, -8.10081, 0.74", "14.6192, -74.6287, -8.11585, 0.74", "15.3676, -73.5946, -8.08325, 0.52", "16.1289, -72.5996, -8.00127, 0.52", "17.2746, -71.1648, -7.82836, 0.52", "17.971, -70.2392, -7.70276, 0.66", "18.6231, -69.2147, -7.58019, 0.44", "19.0469, -68.3996, -7.49508, 0.44", "19.4025, -67.5041, -7.4431, 0.81", "19.6209, -66.7732, -7.45905, 0.81", "19.7797, -65.6737, -7.60092, 0.37", "19.8343, -64.4045, -7.97308, 0.37", "19.8288, -63.2106, -8.38012, 0.37", "19.8253, -62.0869, -8.7936, 0.37", "19.8503, -61.0596, -9.17651, 0.52", "19.927, -60.209, -9.51635, 0.52", "20.3831, -57.8682, -10.5316, 0.37", "21.1574, -55.6737, -11.5381, 0.29", "21.7114, -54.5559, -12.0652, 0.29", "22.1062, -53.9026, -12.3762, 0.29", "22.8889, -52.7012, -12.9455, 0.66", "23.3467, -52.0047, -13.2461, 0.81", "24.2745, -50.5597, -13.7243, 0.44", "24.8064, -49.7401, -13.9299, 0.59", "25.091, -49.231, -13.9845, 0.59", "25.5999, -48.1832, -14.0002, 0.29", "26.0839, -47.101, -13.9263, 0.29", "26.5815, -46.0249, -13.8029, 0.29", "27.4059, -44.2807, -13.5739, 0.29", "28.1678, -42.5556, -13.3835, 0.29", "28.7839, -41.0763, -13.2422, 0.29", "29.5597, -39.2173, -13.0748, 0.29", "30.5294, -36.8607, -12.8776, 0.29", "30.9328, -35.8391, -12.8282, 0.29", "31.6216, -33.9475, -12.8279, 0.29", "32.1619, -32.4492, -12.9207, 0.59", "32.3861, -31.8095, -13.004, 0.59", "32.7981, -30.5754, -13.2457, 0.29", "33.288, -29.1167, -13.5973, 0.66", "33.6367, -28.2415, -13.8392, 0.66", "34.1808, -27.1494, -14.2, 0.37", "34.7521, -26.0536, -14.6482, 0.22", "35.1557, -25.2456, -14.9962, 0.22", "35.491, -24.5511, -15.2948, 0.22", "35.9105, -23.6752, -15.635, 0.44", "36.4804, -22.4732, -16.0443, 0.29", "37.0813, -21.267, -16.3869, 0.29", "37.7007, -20.0463, -16.7298, 0.37", "38.0883, -19.2534, -16.8487, 0.66", "38.3064, -18.7086, -16.8103, 0.66", "38.7243, -17.3501, -16.4517, 0.29", "39.0187, -16.1367, -15.9184, 0.74", "39.1441, -15.354, -15.448, 0.88", "39.4542, -12.5132, -13.503, 0.37", "39.6023, -10.7227, -12.2214, 0.29", "39.6913, -9.37055, -11.2021, 0.29", "39.7535, -7.68968, -9.86065, 0.29", "39.7446, -5.58233, -8.14762, 0.22", "39.7323, -4.69753, -7.44323, 0.22", "39.7038, -3.91591, -6.9517, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.19253, -151.142, 8.57034, 0.29", "-0.699437, -150.827, 8.38266, 0.29", "-1.35249, -150.421, 8.14087, 0.29", "-2.51601, -149.697, 7.71008, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.56602, -242.074, 28.6184, 0.59", "-4.50419, -243.011, 29.155, 0.59", "-4.49123, -244.068, 29.6299, 0.59", "-4.49307, -245.013, 29.9821, 1.03", "-4.49787, -245.526, 30.136, 1.11", "-4.50159, -246.041, 30.3145, 1.11", "-4.48504, -247.695, 30.9686, 0.81", "-4.47816, -248.873, 31.4735, 0.74", "-4.42786, -250.187, 32.0819, 0.59", "-4.29902, -251.612, 32.8189, 0.59", "-4.02746, -253.456, 33.9705, 0.66", "-3.8282, -254.397, 34.664, 0.74", "-3.69006, -254.885, 35.0796, 1.03", "-3.52907, -255.379, 35.5545, 0.81", "-3.30187, -256.026, 36.2201, 0.52", "-3.04978, -256.647, 36.9111, 0.81", "-2.77344, -257.36, 37.5619, 0.59", "-2.60335, -257.945, 38.0108, 0.52", "-2.5493, -258.23, 38.1901, 0.74", "-2.53191, -258.662, 38.4108, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.56602, -242.074, 28.6184, 0.29", "-5.57527, -241.495, 28.3425, 0.29", "-6.61594, -241.05, 28.0277, 0.29", "-7.71486, -240.727, 27.6828, 0.29", "-9.14932, -240.521, 27.2232, 0.22", "-10.8294, -240.55, 26.6774, 0.22", "-12.0189, -240.796, 26.2859, 0.22", "-13.1486, -241.264, 25.8695, 0.22", "-14.1183, -242.013, 25.4973, 0.22", "-14.921, -243.059, 25.1841, 0.22", "-15.3324, -243.784, 25.0205, 0.22", "-15.7084, -244.934, 24.8617, 0.22", "-26.7966, -248.897, 21.7706, 0.22", "-38.0656, -250.499, 17.589, 0.22", "-49.6697, -252.152, 14.4787, 0.22", "-60.8191, -255.126, 10.6789, 0.22", "-71.3443, -256.347, 4.78956, 0.22", "-80.4248, -257.578, -3.14695, 0.22", "-88.8454, -256.909, -11.8394, 0.22", "-97.7408, -258.765, -19.8737, 0.22", "-108.207, -261.858, -25.2158, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "9.68598, 35.507, -141.651, 0.74", "9.45633, 35.8023, -141.858, 0.74", "8.82943, 36.9453, -142.417, 0.74", "7.6599, 39.0777, -143.458, 0.52", "7.30735, 39.7205, -143.772, 1.03", "7.00855, 40.2653, -144.038, 1.03", "6.66769, 40.8868, -144.341, 0.22", "6.06549, 42.2702, -144.934, 0.22" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "9.68598, 35.507, -141.651, 0.96", "10.3277, 35.4356, -144.015, 0.96", "10.5035, 35.4269, -144.899, 0.66", "10.6444, 35.4588, -146.004, 0.44", "10.9811, 35.6475, -148.942, 0.29", "11.4498, 36.0409, -152.95, 1.18", "11.9325, 36.5927, -157.457, 0.59", "12.0378, 36.812, -159.067, 0.44", "12.1486, 37.2322, -161.919, 1.03", "12.1663, 37.7928, -165.057, 0.59", "12.1359, 38.0551, -166.118, 0.52", "12.012, 38.9608, -168.814, 0.81", "11.9779, 39.5197, -170.31, 1.11" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-0.852182, 42.9556, -85.5708, 0.96", "-0.340744, 44.8589, -87.9165, 0.96", "0.126404, 46.0368, -89.4772, 0.74", "0.383516, 46.4306, -90.1515, 0.74", "0.738674, 46.7815, -90.946, 0.88", "1.24522, 47.1126, -91.9503, 0.88", "1.76906, 47.3268, -92.914, 1.03", "2.77124, 47.4691, -94.3692, 1.33", "4.05604, 47.4993, -95.9763, 1.03", "4.96797, 47.5099, -97.0327, 1.33", "5.83641, 47.5531, -98.0011, 1.55", "7.57935, 47.8184, -99.8638, 1.33", "8.3595, 48.0794, -100.663, 0.81", "9.02717, 48.5044, -101.261, 0.81", "10.0029, 49.4307, -102.03, 1.03", "10.8445, 50.3753, -102.749, 1.03", "11.5656, 51.3014, -103.446, 1.25", "12.0596, 51.9785, -103.987, 1.33", "12.6491, 52.8102, -104.715, 1.4", "13.0023, 53.2925, -105.188, 1.4", "14.7226, 55.3704, -107.548, 1.33", "15.4582, 56.1117, -108.563, 1.18", "16.2213, 56.7708, -109.703, 1.18" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-0.852182, 42.9556, -85.5708, 1.55", "-0.869146, 43.7422, -85.6525, 1.55", "-0.817707, 44.532, -85.7807, 0.88", "-0.732475, 45.249, -85.8842, 0.88", "-0.615415, 45.9578, -85.9421, 1.03", "-0.433289, 46.9211, -85.9833, 1.03", "-0.234124, 47.9441, -86.0027, 1.03", "-0.0153309, 48.9191, -85.9972, 1.03", "0.176111, 49.7825, -85.9763, 1.11", "0.425858, 51.0263, -85.9351, 1.18", "0.603626, 52.0714, -85.8938, 0.74", "0.74915, 53.1159, -85.8441, 0.74", "0.880717, 54.0174, -85.7991, 0.74", "1.07634, 55.2215, -85.7512, 0.88", "1.21218, 56.0063, -85.7398, 1.11", "1.32023, 56.6119, -85.7177, 1.33", "1.41618, 57.1528, -85.6646, 1.47", "1.55424, 57.979, -85.5048, 0.81", "1.64243, 58.5889, -85.3138, 0.81", "1.7364, 59.2531, -85.0312, 1.03", "1.88741, 60.2197, -84.5595, 1.11", "2.01504, 60.9204, -84.2019, 0.88", "2.17912, 61.6091, -83.8477, 0.74", "2.38909, 62.2723, -83.5431, 0.59", "2.72934, 62.9392, -83.3144, 0.88", "3.12061, 63.4735, -83.2387, 0.96", "3.45396, 63.8618, -83.2509, 0.96", "3.88876, 64.3754, -83.304, 0.88", "4.31777, 64.9328, -83.3944, 0.74", "4.6462, 65.4589, -83.4866, 0.96", "4.92863, 66.0805, -83.5782, 0.66", "5.25801, 67.072, -83.6928, 0.66", "5.59316, 68.3528, -83.7704, 1.11", "5.71448, 68.8927, -83.767, 1.33", "5.90868, 69.8741, -83.7314, 1.33", "6.14678, 71.245, -83.6531, 0.74", "6.33824, 72.4467, -83.5519, 0.74", "6.48954, 73.4369, -83.4393, 1.03", "6.6241, 74.2114, -83.3258, 1.25" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "28.3427, 56.31, 74.3243, 0.44", "21.09, 58.8182, 85.1625, 0.44", "16.0323, 63.1928, 96.6844, 0.44", "9.69194, 66.0194, 108.013, 0.44", "3.7, 68.3701, 119.628, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "28.3427, 56.31, 74.3243, 0.22", "33.3111, 58.7959, 83.1321, 0.44", "36.9279, 61.0882, 92.602, 0.44", "42.3093, 64.2194, 100.984, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "17.0378, 47.2816, 32.8079, 1.18", "16.8677, 48.3654, 34.9125, 1.18", "16.5531, 50.7609, 38.6048, 0.59", "16.518, 51.2447, 39.2437, 0.59", "16.5181, 51.8265, 39.9504, 0.52", "16.5661, 52.5666, 40.7875, 0.74", "16.6684, 53.3691, 41.6058, 0.59", "16.9124, 54.3824, 42.317, 0.59", "17.1776, 55.2517, 42.77, 0.74", "17.4312, 55.9558, 43.1704, 0.74", "18.205, 57.7144, 44.2927, 1.62", "18.8146, 58.8657, 45.1106, 2.21", "19.3936, 59.8448, 45.8215, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "17.0378, 47.2816, 32.8079, 0.29", "17.1862, 46.0263, 32.9354, 0.29", "17.2769, 45.2594, 33.0133, 0.44", "17.3175, 44.9157, 33.0482, 0.59", "17.4325, 43.9436, 33.1469, 0.52", "18.1589, 36.3569, 33.0488, 0.52", "18.9259, 28.9674, 31.4402, 0.52", "19.4468, 21.3645, 31.0862, 0.52" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.5576, 192.53, -14.9146, 0.37", "20.3635, 193.504, -14.8334, 0.37", "20.3313, 194.022, -14.7445, 0.29", "20.3365, 194.642, -14.5748, 0.29", "20.3565, 195.36, -14.3189, 0.29", "20.3781, 196.381, -13.9363, 0.29", "20.3839, 197.212, -13.6266, 0.29", "20.4231, 198.183, -13.2581, 0.29", "20.4328, 199.304, -12.8548, 0.59", "20.3726, 200.191, -12.5604, 0.37", "20.2602, 200.8, -12.3929, 0.37", "20.1409, 201.216, -12.3054, 0.74", "19.9572, 201.776, -12.2366, 0.74", "19.5676, 202.971, -12.1835, 0.44", "19.2966, 203.876, -12.1937, 0.44", "19.0702, 204.779, -12.1952, 0.44", "18.9324, 205.342, -12.1487, 0.44", "18.6868, 206.292, -12.0228, 0.44", "18.4925, 207.007, -11.9053, 0.44", "18.3049, 207.715, -11.7764, 0.37", "17.9611, 209.062, -11.5376, 0.37", "17.604, 210.459, -11.2887, 0.29", "17.3812, 211.312, -11.1427, 0.29", "17.1542, 212.106, -11.0125, 0.29", "16.8683, 213.104, -10.9137, 0.29", "16.6478, 213.898, -10.8947, 0.29", "16.3763, 214.844, -10.9225, 0.29", "16.1415, 215.614, -10.9544, 0.29", "15.8438, 216.515, -10.9378, 0.29", "15.3608, 217.817, -10.8358, 0.29", "15.1169, 218.395, -10.7611, 0.29", "14.7141, 219.303, -10.6066, 0.29", "14.3918, 220.095, -10.4398, 0.29", "14.0876, 221.074, -10.2175, 0.29", "13.9343, 221.819, -10.0536, 0.29", "13.8829, 222.162, -9.99249, 0.66", "13.8417, 222.564, -9.96628, 0.66", "13.7749, 223.392, -9.98022, 0.29", "13.7163, 224.132, -10.0276, 0.29", "13.6495, 225.051, -10.0971, 0.29", "13.6004, 226.148, -10.165, 0.29", "13.5796, 226.841, -10.2098, 0.29", "13.5561, 227.635, -10.2609, 0.74", "13.5499, 228.125, -10.2877, 0.74", "13.5846, 229.173, -10.3203, 0.29", "13.6507, 229.926, -10.3216, 0.29", "13.7655, 230.767, -10.3015, 0.29", "13.875, 231.505, -10.2787, 0.29", "14.0404, 232.738, -10.2242, 0.29", "14.1157, 233.46, -10.1937, 0.81", "14.18, 234.108, -10.2, 0.81", "14.313, 235.038, -10.2391, 0.37", "14.4964, 235.928, -10.2967, 0.29", "14.6925, 236.695, -10.3884, 0.29", "14.8791, 237.427, -10.5493, 0.29", "15.1413, 238.634, -10.9469, 0.44", "15.2412, 239.198, -11.2043, 0.44", "15.3117, 239.699, -11.4773, 0.44", "15.4319, 240.443, -11.9422, 0.37", "15.5672, 241.13, -12.3988, 0.29", "15.704, 241.709, -12.7868, 0.29", "15.87, 242.263, -13.1751, 0.29", "16.0876, 242.771, -13.577, 0.59", "16.5561, 243.515, -14.1977, 0.96", "16.792, 243.806, -14.4351, 0.96", "17.3351, 244.383, -14.8895, 0.81", "18.1717, 245.233, -15.5212, 0.29", "18.5929, 245.667, -15.8201, 0.29", "19.1753, 246.316, -16.233, 0.29", "19.5122, 246.764, -16.4652, 0.52", "19.9783, 247.494, -16.7717, 0.52", "20.2585, 247.991, -16.9233, 0.52", "20.4909, 248.41, -17.0123, 0.44", "20.9867, 249.293, -17.1597, 0.66", "21.4176, 250.056, -17.2675, 0.37", "21.7348, 250.621, -17.3456, 0.37", "22.0653, 251.262, -17.4419, 0.37", "22.3503, 251.929, -17.6417, 0.29", "22.5629, 252.649, -18.0011, 0.29", "22.6405, 253.271, -18.3838, 0.37", "22.6678, 254.053, -18.8845, 0.52", "22.6512, 254.816, -19.3538, 0.59", "22.6087, 256.029, -20.0771, 0.29", "22.6151, 256.711, -20.4857, 0.29", "22.7338, 258.075, -21.3089, 0.44", "22.8622, 258.718, -21.669, 0.59", "23.0419, 259.308, -21.9598, 0.59", "23.2656, 259.899, -22.2143, 0.29", "23.7118, 260.993, -22.6548, 0.37", "23.9686, 261.703, -22.9463, 0.37", "24.2196, 262.496, -23.2656, 0.59", "24.3725, 263.062, -23.4672, 0.59", "24.5154, 263.672, -23.6558, 0.59", "24.7693, 264.957, -23.9596, 0.37", "25.0158, 266.384, -24.1958, 0.29", "25.2125, 267.463, -24.3255, 0.29", "25.355, 268.193, -24.3954, 0.52", "25.5142, 268.937, -24.453, 0.52", "25.6402, 269.49, -24.4783, 0.44", "25.7715, 270.099, -24.4942, 0.29", "25.8669, 270.714, -24.5354, 0.29", "25.8881, 271.398, -24.6208, 0.44", "25.8273, 272.13, -24.7565, 0.44", "25.7152, 272.804, -24.9135, 0.52", "25.5007, 273.819, -25.1962, 0.29", "25.2923, 274.626, -25.4398, 0.29", "25.0763, 275.388, -25.685, 0.29", "24.9396, 275.879, -25.8493, 0.52", "24.8127, 276.427, -26.0527, 0.52", "24.7584, 276.866, -26.2397, 0.52", "24.8091, 277.691, -26.5978, 0.37", "24.9127, 278.173, -26.8008, 0.37", "25.1388, 278.897, -27.0934, 0.37", "25.5063, 279.936, -27.4979, 0.22", "25.8209, 280.862, -27.8504, 0.22", "26.2123, 282.078, -28.2939, 0.22", "26.4556, 282.893, -28.5466, 0.37", "26.6521, 283.696, -28.7552, 0.52", "26.7276, 284.085, -28.849, 0.52", "26.8618, 285.184, -29.086, 0.22", "26.8852, 286.011, -29.2345, 0.22", "26.7542, 287.573, -29.4825, 0.66", "26.7016, 287.916, -29.5161, 0.66", "26.5237, 288.945, -29.5452, 0.52", "26.4164, 289.647, -29.5175, 0.74", "26.2505, 290.77, -29.3685, 0.29", "26.0936, 291.635, -29.1676, 0.29", "25.9155, 292.489, -28.891, 0.29", "25.7557, 293.262, -28.6169, 0.29", "25.5878, 294.025, -28.3315, 0.29", "25.4251, 294.828, -28.0698, 0.44", "25.2962, 295.654, -27.8585, 0.29", "25.2293, 296.189, -27.7422, 0.29", "25.0902, 297.219, -27.5844, 0.29", "24.9582, 298.011, -27.5107, 0.22", "24.732, 299.366, -27.4889, 0.22", "24.5237, 300.672, -27.5732, 0.22", "24.4222, 301.363, -27.6598, 0.22", "24.3356, 302.043, -27.7746, 0.29", "24.2174, 303.099, -28.023, 0.29", "24.1421, 303.926, -28.305, 0.29", "24.1072, 304.488, -28.5465, 0.29", "24.1006, 304.992, -28.777, 0.29", "24.1588, 305.976, -29.1831, 0.29", "24.293, 307.332, -29.6778, 0.22", "24.405, 308.301, -30.0008, 0.37", "24.4892, 308.996, -30.2262, 0.22", "24.6242, 310.071, -30.5763, 0.22", "24.7539, 311.307, -30.9879, 0.22", "24.8018, 312.004, -31.2226, 0.29", "24.8158, 312.319, -31.3292, 0.29", "24.8466, 313.54, -31.8038, 0.22", "24.8442, 314.266, -32.144, 0.22", "24.8271, 314.933, -32.506, 0.37", "24.8242, 315.61, -32.9178, 0.37", "24.8794, 316.319, -33.3912, 0.22", "24.9874, 317.216, -34.0151, 0.37", "25.0927, 317.941, -34.5273, 0.22", "25.2264, 318.626, -35.0085, 0.22", "25.4197, 319.421, -35.5338, 0.52", "25.7545, 320.631, -36.3226, 0.29", "25.9258, 321.247, -36.7315, 0.29", "26.0708, 321.808, -37.0983, 0.29", "26.2076, 322.355, -37.4488, 0.29", "26.3313, 323.078, -37.8779, 0.29", "26.3741, 323.905, -38.3248, 0.29", "26.2854, 324.749, -38.7364, 0.29", "26.0932, 325.56, -39.1445, 0.29", "25.9145, 326.034, -39.3855, 0.29", "25.6122, 326.685, -39.7272, 0.29", "25.4917, 326.897, -39.8378, 0.29", "24.9664, 327.738, -40.2278, 0.29", "24.611, 328.284, -40.4691, 1.33", "24.4234, 328.577, -40.6009, 1.69", "23.7603, 329.625, -41.0754, 0.22", "23.4218, 330.161, -41.3296, 0.22", "23.188, 330.527, -41.5074, 0.37", "22.8085, 331.085, -41.7868, 0.37", "22.368, 331.661, -42.0858, 0.37", "22.1377, 331.907, -42.2236, 0.37", "21.3302, 332.577, -42.6378, 0.22", "20.9123, 332.86, -42.8761, 0.22", "20.2186, 333.163, -43.2252, 0.22", "19.6183, 333.304, -43.5213, 0.29", "19.1736, 333.367, -43.7359, 0.29", "18.6284, 333.402, -43.99, 0.22", "17.6411, 333.351, -44.414, 0.22", "16.3532, 333.16, -44.9718, 0.22", "15.177, 332.883, -45.4902, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "20.5576, 192.53, -14.9146, 0.22", "22.2975, 193.126, -14.8487, 0.22", "23.0815, 193.359, -14.8193, 0.22", "25.072, 193.949, -14.7449, 0.22", "26.1875, 194.28, -14.7032, 0.22", "26.8495, 194.477, -14.6785, 0.22", "27.7982, 194.758, -14.643, 0.37", "28.9375, 194.955, -14.5949, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.92793, 148.301, -21.6123, 0.29", "4.89516, 148.517, -24.331, 0.29", "5.17708, 148.672, -25.468, 0.29", "5.28717, 148.841, -26.4069, 0.44", "5.3887, 149.446, -28.9145, 0.59", "5.40467, 150.176, -31.1757, 0.44", "5.37409, 150.698, -32.4352, 0.37", "5.23464, 151.197, -33.3334, 0.37", "4.94429, 152.002, -34.4869, 0.37", "4.70899, 152.565, -35.1444, 0.96", "4.07458, 153.918, -36.4461, 0.52", "3.62366, 154.766, -37.2304, 0.52", "3.25186, 155.467, -37.9031, 0.52", "2.90505, 156.148, -38.5433, 0.52", "2.44269, 157.053, -39.3497, 0.59", "2.1086, 157.695, -39.9243, 0.44", "1.6336, 158.691, -40.7864, 0.59", "1.25794, 159.768, -41.7046, 0.66", "1.11217, 160.514, -42.2909, 0.66", "1.10568, 161.295, -42.8675, 0.37", "1.21052, 162.09, -43.6197, 0.37", "1.31697, 162.768, -44.3713, 0.37", "1.36802, 163.114, -44.8733, 0.81", "1.37933, 163.383, -45.4153, 1.03", "1.25638, 163.744, -46.6688, 1.03", "0.461122, 164.134, -50.0845, 0.37", "0.108355, 164.15, -51.0312, 0.29", "-0.414378, 164.112, -52.1056, 0.29", "-0.799384, 164.071, -52.7616, 0.44", "-1.62165, 164.018, -53.8858, 0.44", "-2.45328, 164.031, -54.7424, 0.44", "-3.19594, 164.182, -55.3012, 0.44", "-3.7962, 164.361, -55.7343, 0.59", "-4.31067, 164.511, -56.0695, 0.59", "-5.38524, 164.794, -56.716, 0.37", "-6.22129, 164.995, -57.1974, 0.37", "-7.11592, 165.206, -57.7129, 0.37", "-8.29265, 165.489, -58.3929, 0.37", "-9.57524, 165.826, -59.1205, 0.37", "-10.428, 166.082, -59.5874, 0.37", "-11.6826, 166.483, -60.2252, 0.37", "-12.916, 166.899, -60.7874, 0.37", "-14.0296, 167.312, -61.2894, 0.37", "-14.7906, 167.635, -61.6516, 0.74", "-15.4261, 167.938, -61.9664, 0.74", "-16.9468, 168.685, -62.7541, 0.37", "-17.9669, 169.195, -63.2987, 0.37", "-19.0433, 169.744, -63.9066, 0.37", "-19.6911, 170.125, -64.3005, 0.37", "-20.5851, 170.714, -64.8888, 0.29", "-21.258, 171.268, -65.3817, 0.29", "-21.7313, 171.862, -65.7956, 0.44", "-21.9834, 172.29, -66.0255, 0.59", "-22.299, 172.92, -66.251, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.92793, 148.301, -21.6123, 0.59", "1.29055, 149.327, -20.8672, 0.59", "0.228742, 149.939, -20.6348, 0.59", "-0.891442, 150.696, -20.4931, 0.59", "-1.7319, 151.318, -20.4491, 0.59", "-2.64535, 152.015, -20.4759, 0.59", "-4.06836, 153.082, -20.6394, 0.52", "-5.00044, 153.862, -20.8938, 0.52", "-6.06889, 154.776, -21.2432, 0.66", "-6.63354, 155.246, -21.4365, 0.66", "-7.46273, 155.88, -21.6994, 0.52", "-8.86199, 156.841, -22.0528, 0.52", "-9.77749, 157.457, -22.2197, 0.52", "-10.5149, 158.013, -22.3026, 0.52", "-11.1389, 158.561, -22.3863, 0.74", "-11.7982, 159.164, -22.5206, 0.74", "-12.6819, 159.969, -22.7994, 0.37", "-13.3749, 160.544, -23.1592, 0.37", "-14.2755, 161.173, -23.8029, 0.37", "-15.7099, 162.006, -24.8535, 0.37", "-16.7764, 162.576, -25.6388, 0.29", "-17.7519, 163.104, -26.3133, 0.37", "-18.7619, 163.668, -26.8886, 0.44", "-19.4954, 164.103, -27.2259, 0.66", "-20.6167, 164.827, -27.6544, 0.59", "-21.4617, 165.437, -27.9105, 0.44", "-22.577, 166.323, -28.2495, 0.44", "-23.6802, 167.194, -28.6407, 0.44", "-24.6443, 167.882, -29.046, 0.44", "-25.8658, 168.618, -29.5484, 0.37", "-26.7357, 169.072, -29.9149, 0.37", "-27.5853, 169.441, -30.2851, 0.37", "-29.5173, 170.16, -31.1862, 0.37", "-30.3645, 170.464, -31.6538, 0.37", "-31.964, 171.15, -32.6364, 0.29", "-33.1336, 171.815, -33.4507, 0.29", "-34.3636, 172.709, -34.4404, 0.29", "-34.7724, 173.073, -34.8205, 0.81", "-35.6818, 174.075, -36.0318, 0.81", "-36.5122, 175.002, -37.4614, 0.37", "-37.3542, 175.866, -39.1522, 0.29", "-37.762, 176.224, -39.9751, 0.29", "-38.2279, 176.553, -40.8219, 0.29", "-39.8369, 177.346, -43.4195, 0.29", "-41.3356, 177.739, -45.5144, 0.29", "-41.9511, 177.784, -46.3257, 0.52", "-42.328, 177.776, -46.7954, 0.52", "-43.2355, 177.733, -47.8716, 0.29", "-44.2233, 177.691, -48.904, 0.29", "-45.4379, 177.65, -49.8294, 0.29", "-46.4302, 177.626, -50.4975, 0.52", "-46.771, 177.613, -50.7364, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.51601, -149.697, 7.71008, 0.22", "-3.13782, -149.778, 7.27135, 0.22", "-3.91046, -149.879, 6.72619, 0.22", "-12.2885, -150.963, 1.57893, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.51601, -149.697, 7.71008, 0.22", "-3.23686, -149.722, 7.23279, 0.22", "-3.98518, -149.748, 6.73731, 0.22", "-4.66788, -149.772, 6.28527, 0.22", "-5.54788, -149.803, 5.70259, 0.22", "-6.77519, -149.845, 4.88996, 0.22", "-7.31812, -149.864, 4.53047, 0.22", "-15.4246, -151.089, -0.685695, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.53191, -258.662, 38.4108, 0.96", "-2.25565, -260.45, 38.3534, 0.96", "-2.12209, -261.763, 38.4529, 0.74", "-2.06444, -262.829, 38.6105, 0.66", "-2.05808, -263.94, 38.8353, 1.11", "-2.0752, -264.563, 38.9956, 1.25", "-2.17416, -266.497, 39.5446, 0.88", "-2.29474, -267.507, 39.9301, 0.29", "-2.50204, -268.536, 40.3538, 0.29", "-2.82878, -269.735, 40.9308, 0.29", "-3.11792, -270.671, 41.424, 0.59", "-3.33861, -271.359, 41.7967, 0.66", "-3.6301, -272.255, 42.2566, 0.29", "-3.79634, -272.79, 42.5537, 0.29", "-4.2322, -274.458, 43.4852, 1.11", "-4.39983, -275.256, 43.9431, 1.25", "-4.66348, -276.671, 44.7566, 0.74", "-4.73144, -277.126, 45.0269, 1.03", "-4.79822, -277.874, 45.4747, 1.03", "-4.84376, -278.911, 46.0733, 0.88", "-4.85153, -280.322, 46.7268, 0.52" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-2.53191, -258.662, 38.4108, 0.22", "-2.38661, -260.086, 38.3846, 0.22", "-2.24972, -261.464, 38.3763, 0.22", "-2.12078, -262.461, 38.417, 0.22", "-1.93155, -263.606, 38.5103, 0.22", "-1.6315, -265.133, 38.7172, 0.22", "-1.43789, -266.21, 38.9036, 0.22", "-1.25409, -267.305, 39.1806, 0.22", "-1.1319, -268.298, 39.5093, 0.22", "-1.11459, -268.909, 39.6919, 0.22", "-1.3325, -270.406, 39.9706, 0.22", "-1.80459, -271.503, 39.9221, 0.22", "-2.38635, -272.408, 39.7047, 0.22", "-2.85067, -272.922, 39.4323, 0.22", "-4.14685, -274.139, 38.5312, 0.22", "-5.23019, -275.006, 37.6561, 0.22", "-5.90265, -275.395, 36.9722, 0.22", "-6.3539, -285.867, 37.4109, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "16.2213, 56.7708, -109.703, 0.37", "16.4335, 56.1047, -109.429, 0.37", "17.0244, 54.4122, -108.728, 0.29", "17.4204, 53.3561, -108.307, 0.44", "17.7797, 52.4193, -107.961, 0.37", "18.7561, 50.0158, -106.945, 0.96", "19.2131, 48.9677, -106.467, 0.81", "19.6359, 48.0682, -105.993, 0.59", "20.0504, 47.3098, -105.539, 0.59", "20.5825, 46.4032, -104.994, 0.44", "21.6559, 44.5784, -103.885, 0.66", "22.0139, 43.9703, -103.51, 0.66", "22.3418, 43.4219, -103.115, 0.66", "22.9297, 42.4939, -102.417, 0.37", "23.5923, 41.4163, -101.646, 0.37", "24.5418, 39.8157, -100.617, 0.74", "25.3215, 38.4674, -99.8764, 0.44", "26.3015, 36.7879, -99.0323, 0.37", "27.1812, 35.3034, -98.3664, 0.29", "27.8857, 34.1271, -97.8972, 0.44", "28.6084, 32.9381, -97.5004, 0.52", "29.1027, 32.0722, -97.3044, 0.59", "29.6918, 30.9016, -97.1241, 0.59", "30.369, 29.4443, -96.9454, 0.44", "30.87, 28.3011, -96.789, 0.96", "31.0745, 27.7869, -96.7496, 1.18", "31.3217, 27.1086, -96.7336, 1.18", "31.666, 26.0869, -96.7536, 0.81", "32.0211, 24.9733, -96.8203, 0.66", "32.4098, 23.8482, -96.9235, 0.66", "33.2457, 21.6019, -97.1809, 0.29", "33.6536, 20.5335, -97.3328, 0.29", "33.7342, 20.3298, -97.3706, 0.44", "34.0654, 19.5291, -97.5714, 0.15", "34.4034, 18.6772, -97.8387, 0.15" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "16.2213, 56.7708, -109.703, 1.03", "16.9473, 57.3109, -111.364, 1.03", "17.5262, 57.9286, -112.958, 1.18", "18.161, 58.8552, -114.979, 1.4", "19.5763, 61.1688, -119.47, 1.18", "20.1848, 62.2195, -121.296, 1.03", "20.6957, 63.092, -122.685, 1.03", "21.7874, 64.8474, -125.237, 0.96", "22.7493, 66.3649, -127.174, 0.88", "23.2276, 67.133, -128.017, 0.88", "23.7525, 68.0963, -128.844, 1.33", "24.5347, 69.6091, -130.16, 0.96", "25.1886, 70.9784, -131.446, 0.81", "26.0469, 72.9935, -133.461, 0.81", "26.5608, 74.6854, -135.225, 0.81", "26.7172, 75.6471, -136.244, 0.66", "26.7727, 77.3089, -137.924, 0.66", "26.6172, 79.3375, -139.865, 1.03", "26.4144, 80.611, -141.033, 1.03", "26.0497, 81.9712, -142.188, 0.74", "25.4536, 83.5541, -143.449, 0.74", "24.9261, 84.767, -144.407, 1.11", "24.0881, 86.5689, -145.7, 1.47", "23.9139, 86.916, -145.966, 1.47", "22.6218, 89.2679, -147.804, 0.66", "21.6877, 90.9393, -149.216, 0.88", "20.9686, 92.3522, -150.391, 0.96", "20.3658, 93.7321, -151.498, 1.18", "19.4216, 96.2546, -153.272, 1.4", "18.9224, 97.974, -154.345, 0.66", "18.2984, 101.156, -156.089, 0.96", "18.0833, 102.641, -156.814, 0.52", "17.8308, 104.614, -157.641, 0.52", "17.6026, 106.338, -158.259, 0.81", "17.3497, 107.915, -158.694, 0.96", "17.0695, 109.465, -159.069, 0.96", "16.7748, 111.076, -159.364, 0.74", "16.2356, 113.94, -159.841, 0.66", "15.9743, 115.543, -160.071, 0.66", "15.7427, 117.396, -160.337, 0.74", "15.5581, 119.48, -160.638, 0.74", "15.4482, 121.449, -160.941, 0.74", "15.376, 124.07, -161.368, 1.11", "15.3533, 125.396, -161.576, 1.18", "15.3247, 126.392, -161.758, 1.18", "15.1544, 128.32, -162.147, 0.96", "14.6432, 131.197, -162.759, 0.74", "14.1961, 132.898, -163.113, 0.66", "13.6129, 134.502, -163.43, 0.52", "12.9658, 135.876, -163.671, 0.52", "11.8705, 137.752, -163.94, 0.81", "11.1002, 138.835, -164.045, 1.03", "10.2882, 139.808, -164.15, 0.66", "9.08069, 141.154, -164.338, 0.81", "8.09623, 142.236, -164.51, 0.81", "6.99425, 143.471, -164.716, 0.81", "6.02456, 144.587, -164.9, 0.66", "5.0876, 145.637, -165.097, 0.66", "3.6386, 147.166, -165.421, 0.81", "2.71167, 148.064, -165.63, 0.81", "1.3521, 149.271, -165.941, 0.66", "0.105598, 150.305, -166.302, 0.81", "-1.06038, 151.23, -166.683, 0.66", "-2.15991, 152.183, -167.225, 0.66", "-3.19247, 153.208, -167.949, 0.66", "-4.14232, 154.423, -168.876, 0.88", "-4.96491, 156.109, -170.254, 0.88", "-5.10667, 157.13, -171.116, 1.03", "-4.67223, 160.091, -174.118, 0.37", "-4.38216, 160.724, -175.103, 0.37", "-3.94617, 161.299, -176.288, 0.29", "-3.4594, 161.811, -177.817, 0.29", "-2.75096, 162.507, -180.388, 1.03", "-1.71249, 163.63, -184.944, 1.62", "-0.525307, 165.157, -191.37, 1.18", "-0.20446, 165.745, -193.746, 0.81", "0.417087, 167.893, -201.634, 0.52", "0.459505, 168.283, -202.87, 0.52", "0.436757, 169.08, -204.97, 0.52", "0.324085, 169.857, -206.394, 0.52", "0.126196, 170.908, -207.584, 0.52", "-0.199922, 172.845, -209.123, 0.74", "-0.306207, 174.229, -209.803, 0.44", "-0.363871, 175.514, -210.407, 0.44", "-0.385499, 176.676, -210.894, 0.66", "-0.393218, 178.58, -211.59, 0.37", "-0.374833, 179.856, -211.983, 0.37", "-0.432222, 182.005, -212.556, 0.52", "-0.707711, 184.406, -213.118, 0.52", "-1.01693, 186.205, -213.429, 0.74", "-1.20666, 187.174, -213.548, 0.74", "-1.55444, 188.917, -213.665, 0.52", "-1.86859, 190.647, -213.656, 0.74", "-2.38921, 193.527, -213.431, 0.29", "-2.74414, 195.312, -213.243, 0.52", "-3.12979, 196.902, -213.051, 0.66", "-3.41091, 197.994, -212.9, 0.66", "-3.89619, 200.247, -212.538, 0.44", "-4.10053, 201.755, -212.285, 0.44", "-4.20252, 203.28, -212.051, 0.44", "-4.25428, 205.427, -211.913, 0.59", "-4.23236, 207.381, -212.019, 0.96", "-4.12679, 209.541, -212.502, 0.37", "-3.96299, 211.295, -213.157, 0.37", "-3.74219, 212.807, -213.882, 0.81", "-3.24344, 215.531, -215.352, 0.44", "-2.85429, 217.581, -216.525, 0.44", "-2.49444, 219.655, -217.86, 0.44", "-2.30179, 221.178, -218.929, 0.74", "-2.17171, 222.477, -219.877, 0.74", "-2.00519, 224.074, -220.99, 0.22", "-1.81711, 225.637, -221.754, 0.22" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "6.6241, 74.2114, -83.3258, 0.44", "7.32084, 76.3999, -83.1708, 0.44", "7.83727, 78.214, -83.1585, 0.44", "8.58097, 81.019, -83.3587, 0.81", "8.98614, 82.4945, -83.5745, 0.81", "9.3872, 83.9866, -83.8888, 0.81", "9.61103, 84.8941, -84.1098, 1.03", "9.88087, 86.5862, -84.5614, 0.88", "10.0547, 88.032, -85.0446, 0.74", "10.2413, 89.5189, -85.6035, 0.96", "10.4126, 90.8677, -86.102, 0.96", "10.6205, 92.5469, -86.6691, 0.52", "10.8071, 94.0557, -87.0162, 0.52", "10.8849, 94.7251, -87.0364, 0.74", "11.0385, 95.9267, -86.7702, 0.44", "11.2027, 97.2698, -86.1995, 0.81", "11.3398, 98.4606, -85.5238, 0.81", "11.4826, 100.361, -84.2557, 0.88", "11.4869, 102.218, -82.9005, 1.11", "11.3356, 104.161, -81.4646, 1.11", "11.1225, 105.59, -80.4267, 0.52", "10.992, 106.351, -79.872, 0.52", "10.8161, 107.358, -79.1714, 0.52", "10.7409, 108.309, -78.573, 0.52", "10.8626, 109.353, -77.933, 0.52", "11.26, 110.393, -77.2585, 0.52", "11.9956, 111.678, -76.3709, 0.74", "12.6097, 112.639, -75.7538, 0.66", "13.8166, 114.54, -74.6711, 0.52", "14.4561, 115.661, -74.1266, 0.52", "15.0254, 116.926, -73.6144, 0.52", "15.4242, 118.398, -73.1457, 0.66", "15.5567, 119.811, -72.7882, 0.66", "15.4984, 121.355, -72.4071, 0.37", "15.2741, 122.93, -72.0221, 0.37", "15.0495, 124.101, -71.6983, 0.37", "14.5975, 126.074, -71.0737, 0.74", "14.1475, 127.771, -70.4552, 0.96", "13.6583, 129.205, -69.89, 0.96", "12.9826, 130.678, -69.1703, 0.44", "12.2969, 131.854, -68.4941, 0.37", "11.5508, 132.955, -67.7936, 0.74", "10.7999, 133.905, -67.1582, 0.29", "9.4153, 135.455, -66.107, 0.29", "7.23324, 137.607, -64.7537, 1.03", "6.14386, 138.576, -64.203, 0.96", "5.17204, 139.459, -63.8059, 0.44", "4.55896, 140.094, -63.6031, 0.44", "3.84874, 141.01, -63.4284, 0.44", "2.57357, 143.095, -63.0861, 0.52", "1.90447, 144.438, -62.9406, 0.74", "0.942074, 146.812, -62.6121, 0.37", "0.571262, 148.059, -62.3716, 0.37", "0.311301, 149.503, -62.0196, 0.37", "0.140572, 152.088, -61.3105, 0.52", "0.161949, 153.344, -60.9172, 0.52", "0.215963, 154.58, -60.5367, 0.52", "0.304498, 156.215, -60.076, 0.52", "0.368189, 157.98, -59.6577, 0.74", "0.372106, 159.183, -59.4217, 0.74", "0.305095, 161.056, -59.1443, 0.44", "0.192073, 162.611, -58.8734, 0.44", "0.0910966, 163.737, -58.6485, 0.59", "-0.0150254, 165.385, -58.2891, 0.59", "-0.0524306, 166.744, -57.9342, 0.74", "-0.0325992, 168.349, -57.4529, 0.81", "0.132594, 170.29, -56.7591, 0.52", "0.308697, 171.515, -56.2426, 0.52", "0.638997, 173.204, -55.4553, 0.52", "0.96135, 174.364, -54.8855, 0.52", "1.25672, 175.158, -54.547, 0.52", "2.05399, 176.938, -53.9905, 0.74", "2.92292, 178.771, -53.6573, 0.59", "3.67227, 180.481, -53.5496, 0.59", "4.07559, 181.678, -53.6155, 0.96", "4.48461, 183.545, -53.9044, 0.59", "4.68614, 185.448, -54.3161, 0.59", "4.68391, 187.024, -54.7459, 0.44", "4.55908, 188.323, -55.1289, 0.44", "4.269, 190.041, -55.636, 0.44", "3.96233, 191.523, -56.0177, 0.37", "3.57239, 193.364, -56.3761, 0.29", "3.41952, 194.238, -56.5057, 0.44", "3.24428, 196.085, -56.7005, 0.44", "3.24745, 196.876, -56.755, 0.29", "3.4024, 198.229, -56.7934, 0.29", "3.62784, 199.351, -56.7834, 0.44", "3.96936, 200.512, -56.7245, 0.44", "4.4173, 201.703, -56.6178, 0.44", "5.03912, 203.131, -56.4301, 0.29", "5.45999, 204.115, -56.2817, 0.29", "5.76292, 204.856, -56.1928, 0.44", "6.21192, 206.074, -56.1045, 0.44", "6.58683, 207.286, -56.0965, 0.22", "6.82488, 208.51, -56.2221, 0.29", "6.8528, 209.395, -56.4257, 0.29", "6.63609, 210.655, -56.869, 0.29", "6.39875, 211.521, -57.2481, 0.59", "6.1644, 212.298, -57.6455, 0.59", "5.83268, 213.506, -58.3754, 0.29", "5.65708, 214.489, -59.1198, 0.29", "5.59681, 215.479, -59.9663, 0.44", "5.62341, 216.765, -61.032, 0.44", "5.731, 218.142, -62.1167, 0.74", "5.90052, 219.372, -63.0385, 1.11", "6.31504, 221.637, -64.688, 0.88", "6.46793, 222.491, -65.2995, 0.66", "6.68868, 224.552, -66.8003, 0.44", "6.71076, 225.696, -67.6533, 0.37", "6.64322, 227.006, -68.5898, 0.37", "6.39278, 228.926, -69.8642, 0.96", "6.20482, 229.885, -70.4389, 1.4", "5.72469, 231.991, -71.6781, 0.59", "5.26164, 233.831, -72.7381, 0.37", "4.90972, 235.105, -73.3711, 0.37", "4.56487, 236.316, -73.8499, 0.29", "4.11322, 238.0, -74.255, 0.44", "3.84394, 239.143, -74.3279, 0.44", "3.50755, 240.777, -74.1493, 0.29", "3.04034, 242.99, -73.7391, 0.44", "2.74388, 244.387, -73.4086, 0.44", "2.21453, 247.024, -72.6229, 0.88", "1.62134, 249.7, -71.5922, 0.44", "1.30552, 250.997, -70.9512, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "6.6241, 74.2114, -83.3258, 0.52", "5.49058, 74.9318, -83.3548, 0.52", "4.69949, 75.4137, -83.4099, 0.44", "4.14645, 75.7862, -83.4874, 0.44", "3.6442, 76.1736, -83.5781, 0.59", "3.2579, 76.508, -83.6658, 0.74", "2.70498, 77.0249, -83.8455, 0.44", "2.2467, 77.4959, -84.0818, 0.29", "1.67643, 78.1102, -84.4591, 0.44", "1.29269, 78.5172, -84.7426, 0.37", "0.844302, 79.0173, -85.121, 0.37", "0.126857, 79.9181, -85.82, 0.74", "-0.290585, 80.5256, -86.2855, 0.88", "-0.455474, 80.7925, -86.4782, 0.88", "-0.727562, 81.27, -86.8003, 0.37", "-0.99688, 81.8221, -87.1272, 0.37", "-1.25605, 82.5006, -87.4135, 0.37", "-1.38584, 82.8966, -87.507, 0.52", "-1.55489, 83.3246, -87.5734, 0.52", "-1.86505, 83.8913, -87.6434, 0.66", "-2.20322, 84.3548, -87.7003, 0.66", "-2.66998, 84.8494, -87.7462, 0.66", "-3.04885, 85.1901, -87.7777, 0.37", "-3.50632, 85.5577, -87.8121, 0.44", "-4.28039, 86.1465, -87.8712, 0.44", "-4.80043, 86.5185, -87.9122, 0.59", "-5.40209, 86.9288, -87.9682, 0.66", "-5.82127, 87.2142, -88.0158, 0.66", "-6.43135, 87.6303, -88.0948, 0.37", "-7.32615, 88.2402, -88.2663, 0.29", "-7.83872, 88.574, -88.4101, 0.29", "-8.37232, 88.9133, -88.6113, 0.29", "-8.86555, 89.2097, -88.8717, 0.37", "-9.30707, 89.4613, -89.1874, 0.52", "-9.88051, 89.77, -89.6871, 0.52", "-10.3146, 90.0174, -90.1171, 0.66", "-10.6638, 90.2623, -90.5085, 0.66", "-11.1222, 90.6608, -91.0637, 0.44", "-11.6219, 91.1674, -91.6785, 0.29", "-11.925, 91.5282, -92.0227, 0.29", "-12.3665, 92.1027, -92.4168, 0.29", "-12.8137, 92.6945, -92.7059, 0.44", "-13.2275, 93.2212, -92.8824, 0.74", "-13.5413, 93.6016, -92.9528, 0.74", "-14.1832, 94.3027, -92.9834, 0.52", "-14.7632, 94.8609, -92.9592, 0.52", "-15.4086, 95.4096, -92.8891, 0.74", "-15.8866, 95.791, -92.8114, 0.74", "-16.2208, 96.0649, -92.7685, 0.88", "-16.6788, 96.5023, -92.7212, 0.88", "-17.2726, 97.2441, -92.6821, 0.37", "-17.5609, 97.7692, -92.7065, 0.37", "-17.6832, 98.1105, -92.7505, 0.66", "-17.8825, 99.1101, -92.9175, 0.44", "-17.9354, 99.7369, -93.0481, 0.74", "-17.943, 100.369, -93.2049, 0.74", "-17.9398, 101.107, -93.391, 1.03", "-17.943, 101.543, -93.4713, 0.74", "-17.9781, 102.279, -93.5457, 0.59", "-18.0602, 102.958, -93.5516, 0.52", "-18.1856, 103.516, -93.5337, 0.44", "-18.4712, 104.389, -93.4756, 0.44", "-18.8984, 105.467, -93.3694, 0.52", "-19.2153, 106.174, -93.2943, 0.52", "-19.5534, 106.873, -93.1962, 0.52", "-19.9176, 107.597, -93.0593, 0.52", "-20.2304, 108.164, -92.9313, 0.52", "-20.4174, 108.453, -92.8614, 0.66", "-20.8572, 108.996, -92.72, 0.66", "-21.506, 109.7, -92.4002, 0.37", "-21.8949, 110.112, -92.1361, 0.37", "-22.3454, 110.592, -91.7514, 0.37", "-22.695, 110.99, -91.4052, 0.37", "-22.9886, 111.353, -91.0916, 0.37", "-23.7045, 112.409, -90.2415, 0.74", "-24.0483, 113.018, -89.8404, 0.59", "-24.1369, 113.206, -89.7425, 1.03", "-24.3657, 113.755, -89.5037, 0.74", "-24.6264, 114.345, -89.2771, 0.74", "-25.0171, 115.082, -89.0511, 0.37", "-25.4176, 115.68, -88.8931, 0.52", "-25.7525, 116.071, -88.7505, 0.52", "-25.8758, 116.199, -88.6875, 0.37", "-26.4673, 116.749, -88.3716, 0.37", "-27.016, 117.212, -88.0616, 1.55", "-27.4468, 117.536, -87.8055, 1.55", "-27.9359, 117.893, -87.4713, 0.81", "-28.6177, 118.394, -86.9632, 0.59" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "3.7, 68.3701, 119.628, 0.44", "-1.22658, 72.1599, 127.209, 0.44", "-6.9225, 75.2396, 134.549, 0.44", "-11.1492, 77.1748, 143.154, 0.44", "-15.9945, 77.3111, 151.653, 0.44", "-20.2958, 76.0475, 160.373, 0.44", "-24.1327, 72.8685, 168.877, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "3.7, 68.3701, 119.628, 0.22", "-0.75756, 69.4578, 130.273, 0.44", "-4.02764, 68.9248, 141.369, 0.44", "-5.98067, 69.7674, 152.758, 0.44", "-7.88745, 68.6641, 164.128, 0.44", "-10.5191, 69.4027, 175.387, 0.44", "-12.5915, 71.4733, 186.616, 0.44", "-15.2779, 72.8514, 197.81, 0.44", "-19.3806, 72.3964, 208.629, 0.44", "-22.9957, 71.2777, 219.574, 0.44", "-27.6245, 69.8625, 230.096, 0.44", "-32.8376, 69.1903, 240.414, 0.44", "-39.1303, 70.1933, 250.099, 0.44", "-46.4964, 71.335, 258.982, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "42.3093, 64.2194, 100.984, 0.44", "47.4844, 67.352, 112.536, 0.44", "52.3966, 70.8355, 124.109, 0.44", "56.0825, 72.6214, 136.439, 0.44", "59.5887, 72.9202, 148.927, 0.44", "62.5573, 75.5945, 161.299, 0.44", "63.5102, 78.698, 173.878, 0.44", "63.9948, 80.578, 186.706, 0.44", "62.3216, 81.7866, 199.511, 0.44", "62.2288, 81.0066, 212.465, 0.44", "62.1704, 82.854, 225.305, 0.44", "61.638, 82.6899, 238.268, 0.44", "62.3662, 84.4675, 251.099, 0.44", "62.4614, 88.2981, 263.517, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "42.3093, 64.2194, 100.984, 0.22", "46.38, 66.5818, 109.655, 0.44", "51.8188, 71.0096, 116.764, 0.44", "54.7541, 75.6225, 125.035, 0.44", "56.447, 80.2465, 133.605, 0.44", "58.4805, 83.7007, 142.609, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "19.3936, 59.8448, 45.8215, 1.03", "19.5026, 60.4379, 46.2923, 1.03", "19.6626, 61.1576, 46.9266, 0.44", "19.8969, 61.7983, 47.5617, 0.52", "20.3034, 62.5389, 48.3865, 0.96", "21.0359, 63.45, 49.5744, 1.25", "21.4053, 63.7437, 50.038, 1.4", "21.761, 63.9164, 50.4103, 1.18", "22.7089, 64.1897, 51.2026, 0.29", "23.4499, 64.3465, 51.7325, 0.29", "24.3541, 64.5315, 52.2603, 0.66", "25.6282, 64.8331, 52.897, 0.37", "26.3537, 65.1251, 53.2688, 0.37", "26.9634, 65.578, 53.6399, 0.37", "27.4759, 66.3444, 54.0804, 0.37", "27.8286, 67.203, 54.5126, 0.74", "27.9929, 67.8317, 54.7996, 1.11", "28.1085, 68.5328, 55.1185, 1.11", "28.1672, 69.0195, 55.3333, 1.11", "28.2302, 69.5576, 55.5541, 1.11", "28.3392, 70.3267, 55.8151, 0.88", "28.4982, 71.2774, 56.1381, 1.18", "28.6421, 72.0045, 56.3737, 1.18", "28.8163, 72.7221, 56.5953, 1.03", "29.0377, 73.517, 56.8467, 0.59", "29.2674, 74.3169, 57.0885, 0.37", "29.7039, 75.6001, 57.4682, 0.29", "30.0179, 76.3113, 57.7479, 0.52", "30.2194, 76.6864, 57.9442, 0.66", "30.7772, 77.5199, 58.5077, 0.37", "31.4229, 78.3255, 59.1641, 0.37", "32.0067, 78.9562, 59.7374, 0.59", "32.9952, 79.9317, 60.6454, 1.18", "33.6553, 80.5544, 61.2269, 0.88", "34.3062, 81.1386, 61.7519, 0.29", "34.6921, 81.4593, 62.0344, 0.29", "35.2473, 81.9333, 62.415, 0.52", "35.5967, 82.2912, 62.6304, 0.59", "36.1506, 83.0454, 62.9209, 0.52", "36.546, 83.8251, 63.1266, 0.81", "36.7728, 84.5375, 63.3073, 0.96", "37.0171, 85.4915, 63.5751, 1.11", "37.1823, 86.1326, 63.8084, 1.33", "37.4991, 87.1242, 64.2817, 1.99", "37.9097, 88.0754, 64.8969, 2.21", "38.7274, 89.3676, 66.0175, 0.96", "39.2531, 89.9045, 66.6268, 0.66", "40.2149, 90.6445, 67.6851, 0.29", "41.0399, 91.0874, 68.5283, 0.29", "41.9471, 91.383, 69.3828, 0.29", "42.4562, 91.4492, 69.8395, 0.29", "43.1282, 91.3948, 70.3681, 0.22", "49.1579, 97.5038, 75.073, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.3936, 59.8448, 45.8215, 0.96", "17.6758, 63.4543, 47.1696, 0.96", "17.1439, 64.429, 47.4777, 0.44", "16.3462, 65.5189, 48.0185, 0.37", "15.6429, 66.2988, 48.5921, 0.29", "15.0909, 66.8857, 49.0532, 0.37", "14.6563, 67.3472, 49.4028, 0.37", "14.0092, 68.0204, 49.8696, 0.37", "11.7301, 70.2415, 51.4527, 1.18", "9.93474, 71.9364, 52.6229, 1.18", "9.05627, 72.7543, 53.1525, 0.88", "8.21126, 73.6126, 53.581, 0.88", "7.50539, 74.4112, 53.8372, 0.81", "6.95058, 75.1342, 53.8933, 1.18", "6.30857, 76.098, 53.7062, 1.18", "5.53278, 77.3649, 53.2941, 0.74", "4.57982, 78.884, 52.6362, 0.52", "4.01257, 79.7152, 52.1822, 0.29", "3.44353, 80.4599, 51.6741, 0.29", "3.12208, 80.8592, 51.3324, 0.96", "2.80983, 81.2458, 50.9221, 1.18", "2.02593, 82.2354, 49.5723, 0.22", "1.51724, 82.7909, 48.6269, 0.22", "1.11168, 83.1991, 47.7914, 0.59", "0.716127, 83.5716, 46.9541, 0.52", "0.332823, 83.9184, 46.165, 0.52", "-0.207373, 84.4371, 45.0644, 0.66", "-0.379795, 84.6387, 44.702, 0.66", "-0.773242, 85.1738, 43.7727, 0.29", "-0.945813, 85.3969, 43.4133, 0.29", "-1.32372, 85.8716, 42.7489, 0.29", "-1.49342, 86.0957, 42.4714, 0.74", "-1.9095, 86.7321, 41.687, 0.74", "-2.12221, 87.1669, 41.0557, 0.59", "-2.26267, 87.6204, 40.219, 0.29", "-2.36404, 88.0241, 39.3939, 1.03", "-2.4335, 88.3346, 38.7145, 1.03", "-2.55387, 89.0326, 37.2164, 0.88", "-2.64247, 89.8334, 35.5821, 0.88", "-2.74716, 91.007, 33.3641, 0.37", "-2.7199, 91.4136, 32.5294, 0.88", "-2.67282, 91.7178, 31.9272, 1.33", "-2.55672, 92.3828, 30.7446, 0.37", "-2.51034, 92.6652, 30.3163, 0.22", "-2.38851, 93.3368, 29.4332, 0.22", "-1.68728, 96.5394, 25.5141, 0.66", "-1.48445, 97.0427, 24.7512, 0.29", "-1.24559, 97.5031, 23.9835, 0.22", "-1.0991, 97.7587, 23.5192, 0.22", "-0.659104, 98.5277, 22.0815, 1.11", "-0.425938, 98.9577, 21.289, 1.11", "0.336569, 101.051, 18.2206, 0.37", "0.460889, 101.421, 17.674, 0.29", "0.588559, 101.866, 17.0785, 0.29", "0.706136, 102.514, 16.3418, 0.29", "0.733555, 103.51, 15.4657, 0.29", "0.655838, 104.54, 14.7584, 0.29", "0.56824, 105.006, 14.5331, 0.29", "0.397528, 106.007, 14.0222, 0.66", "0.333281, 106.58, 13.752, 0.81", "0.300482, 107.293, 13.4686, 0.96" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-22.299, 172.92, -66.251, 0.29", "-21.7783, 174.507, -66.8575, 0.29", "-21.5092, 175.121, -67.1796, 0.29", "-21.1771, 175.802, -67.5812, 0.29", "-20.9027, 176.369, -67.9196, 0.52", "-20.5777, 177.079, -68.349, 0.52", "-20.2916, 177.771, -68.7668, 0.66", "-19.9885, 178.742, -69.3904, 0.29", "-19.8855, 179.185, -69.7277, 0.29", "-19.795, 179.739, -70.215, 0.37", "-19.7492, 180.119, -70.5754, 0.37", "-19.7095, 180.479, -70.9664, 0.29", "-19.6558, 181.259, -71.87, 0.29", "-19.6488, 181.601, -72.2816, 0.29", "-19.641, 182.026, -72.8536, 0.29", "-19.6415, 182.464, -73.512, 0.74", "-19.6704, 183.444, -75.203, 0.37", "-19.6681, 183.668, -75.7097, 0.29", "-19.6599, 183.833, -76.1496, 0.29", "-19.6284, 184.095, -76.8384, 0.29", "-19.5939, 184.302, -77.3418, 0.29", "-19.5328, 184.675, -78.1766, 0.52", "-19.3368, 185.751, -80.3401, 0.44", "-19.2739, 185.931, -80.7103, 0.29", "-19.0176, 186.555, -81.9544, 0.81", "-18.6562, 187.337, -83.3984, 0.29", "-18.5089, 187.631, -83.8977, 0.29", "-18.1952, 188.264, -84.8372, 0.96", "-17.6826, 189.43, -86.3613, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-22.299, 172.92, -66.251, 0.29", "-24.2488, 172.815, -66.7006, 0.29", "-25.5683, 173.037, -66.9844, 0.29", "-26.7032, 173.455, -67.2378, 0.29", "-27.5756, 173.84, -67.4598, 0.29", "-28.9431, 174.429, -67.8702, 0.29", "-29.8174, 174.768, -68.2048, 0.29", "-30.9785, 175.264, -68.8077, 0.29", "-32.0331, 175.742, -69.4271, 0.66", "-32.9307, 176.147, -70.0184, 0.66", "-34.1618, 176.661, -70.9419, 0.29", "-35.4029, 177.124, -72.022, 0.29", "-36.0769, 177.359, -72.661, 0.29", "-36.6433, 177.591, -73.3152, 0.29", "-37.0081, 177.829, -73.8442, 0.29", "-37.284, 178.201, -74.3904, 0.29", "-37.4445, 178.613, -74.8265, 0.44", "-37.5577, 179.112, -75.2951, 0.29", "-37.6921, 180.253, -76.7418, 0.29", "-37.733, 180.622, -77.3018, 0.29", "-37.8193, 181.069, -78.0665, 0.29", "-37.914, 181.353, -78.6096, 0.29", "-38.2885, 182.086, -80.1377, 0.74", "-39.2803, 183.309, -82.7922, 0.29", "-40.0296, 183.96, -84.1673, 0.29", "-40.6979, 184.462, -85.125, 0.29", "-41.2926, 184.876, -85.7726, 0.29", "-42.442, 185.626, -86.6598, 0.29", "-44.0922, 186.618, -87.3609, 0.29", "-44.9319, 187.123, -87.4752, 0.37", "-45.9576, 187.753, -87.4629, 0.37", "-46.836, 188.34, -87.3628, 0.37", "-47.4437, 188.787, -87.1937, 0.81", "-48.3959, 189.548, -86.7872, 0.52", "-49.6823, 190.682, -86.1424, 0.29", "-50.4105, 191.348, -85.7616, 0.29", "-51.1756, 192.042, -85.3658, 0.74", "-52.8929, 193.58, -84.5463, 0.37", "-53.5387, 194.178, -84.2607, 0.29", "-54.159, 194.789, -84.0408, 0.22", "-55.1067, 195.784, -83.8584, 0.22", "-55.5643, 196.306, -83.8435, 0.22", "-56.0956, 196.963, -83.9582, 0.44", "-56.3513, 197.298, -84.0941, 0.44", "-56.9118, 198.038, -84.46, 0.29", "-57.7304, 199.112, -85.0543, 0.29", "-58.2991, 199.89, -85.5714, 0.29", "-58.6056, 200.305, -85.8822, 0.29", "-59.0603, 200.863, -86.3656, 0.22", "-59.5109, 201.379, -86.9363, 0.22", "-59.9932, 201.917, -87.7255, 0.22", "-60.5559, 202.604, -89.0336, 0.44", "-60.6977, 202.879, -89.6446, 0.44", "-60.7927, 203.171, -90.3371, 0.22", "-60.8877, 203.89, -92.1094, 0.22", "-60.8283, 204.558, -93.7019, 0.66", "-60.7294, 204.893, -94.4609, 1.03", "-60.3231, 205.881, -96.726, 0.88", "-60.1961, 206.201, -97.4135, 0.59", "-59.9247, 206.797, -98.6386, 0.59", "-59.4463, 207.701, -100.467, 0.74", "-58.5058, 209.22, -103.396, 0.66", "-57.8445, 210.293, -105.3, 0.52", "-57.4135, 211.016, -106.463, 0.74", "-56.6639, 212.327, -108.348, 1.55", "-56.2273, 213.165, -109.378, 1.77", "-55.8773, 213.973, -110.2, 1.92", "-55.2327, 215.936, -111.601, 0.88", "-55.0948, 216.48, -111.884, 0.44", "-54.9118, 217.492, -112.319, 0.29", "-54.8557, 218.75, -112.755, 0.96", "-54.8638, 219.773, -113.065, 0.96", "-54.9274, 221.625, -113.552, 0.37", "-54.9567, 222.792, -113.765, 0.37", "-54.9796, 223.645, -113.925, 0.37", "-55.054, 224.656, -114.144, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-46.771, 177.613, -50.7364, 0.22", "-47.7349, 177.032, -51.7875, 0.22", "-48.1995, 176.792, -52.1296, 0.22", "-48.7158, 176.566, -52.4261, 0.22", "-49.2384, 176.385, -52.6844, 0.29", "-50.0082, 176.175, -53.0388, 0.29", "-50.5055, 176.048, -53.2616, 0.22", "-51.6305, 175.812, -53.647, 0.59", "-52.1602, 175.732, -53.8181, 0.66", "-53.0285, 175.669, -54.1224, 0.22", "-53.946, 175.736, -54.5048, 0.22", "-54.911, 175.98, -54.9955, 0.44", "-55.4665, 176.22, -55.3467, 0.22", "-56.0618, 176.599, -55.8337, 0.22", "-56.6805, 177.104, -56.4129, 0.22", "-57.3841, 177.764, -57.1539, 0.22", "-57.6893, 178.062, -57.503, 0.22", "-57.98, 178.317, -57.837, 0.44", "-58.1362, 178.409, -58.0115, 0.44", "-58.8537, 178.652, -58.7454, 0.22", "-59.4893, 178.792, -59.3051, 0.22", "-59.9606, 178.872, -59.6739, 0.22", "-60.5543, 178.981, -60.0925, 0.22", "-61.5318, 179.183, -60.6836, 0.22", "-62.1463, 179.329, -60.9985, 0.22", "-62.8159, 179.506, -61.2628, 0.22", "-63.6643, 179.779, -61.5203, 0.22", "-64.3422, 180.022, -61.654, 0.22", "-65.3221, 180.409, -61.7277, 0.22", "-65.9681, 180.691, -61.7041, 0.37", "-66.6134, 180.999, -61.6446, 0.22", "-67.1068, 181.253, -61.5675, 0.44", "-67.9143, 181.697, -61.3982, 0.37", "-68.6504, 182.15, -61.1739, 0.22", "-68.9466, 182.369, -61.0533, 0.37", "-69.3502, 182.7, -60.8764, 0.29", "-69.9865, 183.277, -60.6432, 0.44", "-70.7643, 183.998, -60.3598, 0.22", "-71.1904, 184.409, -60.2378, 0.22", "-71.7386, 184.924, -60.1195, 0.22", "-72.1173, 185.267, -60.0517, 0.22", "-72.8072, 185.938, -59.9628, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-46.771, 177.613, -50.7364, 0.37", "-46.9308, 177.84, -51.7507, 0.37", "-47.1334, 178.239, -53.2431, 0.37", "-47.2513, 178.558, -54.2385, 0.37", "-47.3276, 178.893, -55.0832, 0.37", "-47.3935, 179.516, -56.4135, 0.37", "-47.3886, 179.851, -57.0335, 0.29", "-47.2971, 180.335, -57.9923, 0.66", "-47.2233, 180.559, -58.4526, 0.81", "-47.0582, 180.94, -59.2231, 0.59", "-46.8861, 181.278, -59.8824, 0.59", "-46.6334, 181.747, -60.7481, 0.74", "-45.6534, 183.53, -63.856, 0.44", "-45.481, 183.831, -64.3459, 0.44", "-45.3351, 184.07, -64.6928, 0.44", "-45.0463, 184.536, -65.2248, 0.44", "-44.5958, 185.321, -65.8273, 0.44", "-44.0891, 186.296, -66.3111, 0.37", "-43.6597, 187.263, -66.6315, 0.37", "-43.3411, 188.125, -66.9447, 0.37", "-43.0025, 189.239, -67.3844, 0.37", "-42.7669, 190.229, -67.8032, 0.52", "-42.6254, 190.975, -68.1303, 0.66", "-42.3821, 192.324, -68.7918, 0.59", "-42.1012, 193.674, -69.448, 0.52", "-41.8994, 194.5, -69.795, 0.52", "-41.6506, 195.354, -70.0702, 0.52", "-41.2475, 196.549, -70.2632, 0.88", "-40.892, 197.662, -70.3054, 1.33", "-40.5415, 199.023, -70.204, 0.52", "-40.3094, 200.806, -69.9669, 0.44", "-40.3508, 201.727, -69.829, 0.88", "-40.545, 202.83, -69.6735, 1.11", "-40.8863, 204.202, -69.5069, 0.44", "-41.1693, 205.3, -69.4145, 0.29", "-41.3871, 206.264, -69.4149, 0.29", "-41.457, 206.926, -69.4933, 0.29", "-41.3925, 208.145, -69.6963, 0.66", "-41.2126, 209.121, -69.895, 0.66", "-40.946, 210.004, -70.0602, 0.66", "-40.601, 210.943, -70.2247, 0.66", "-40.32, 211.734, -70.3526, 0.66", "-39.9849, 212.802, -70.513, 0.59", "-39.666, 213.998, -70.6693, 0.44", "-39.4993, 214.741, -70.7617, 0.44", "-39.2539, 216.013, -70.926, 0.37", "-39.0271, 217.215, -71.0952, 0.37", "-38.8541, 218.104, -71.2236, 0.74", "-38.6907, 218.914, -71.3569, 1.18", "-38.4847, 219.95, -71.5522, 0.81", "-38.3467, 220.857, -71.7471, 0.37", "-38.2839, 221.727, -71.9607, 0.29", "-38.3135, 222.815, -72.2716, 0.52", "-38.4323, 223.335, -72.4555, 0.66", "-38.6291, 223.739, -72.627, 0.74", "-39.2769, 224.534, -73.0126, 0.37", "-40.0284, 225.207, -73.3965, 0.29", "-40.7741, 225.707, -73.7586, 0.29", "-41.7254, 226.18, -74.229, 0.29", "-42.4762, 226.467, -74.6056, 0.29", "-43.2392, 226.692, -74.9923, 0.29", "-44.461, 226.948, -75.6154, 0.29", "-45.4058, 227.093, -76.0675, 0.29", "-46.3203, 227.217, -76.4632, 0.44", "-47.0072, 227.296, -76.7535, 0.22", "-47.4156, 227.33, -76.9207, 0.44", "-47.8217, 227.342, -77.069, 0.44", "-48.7189, 227.31, -77.3181, 0.37", "-49.8801, 227.39, -77.5297, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.85153, -280.322, 46.7268, 0.44", "-5.39025, -281.982, 46.6133, 0.44", "-5.70376, -282.948, 46.5473, 0.44", "-6.15002, -284.323, 46.4533, 0.52", "-6.37019, -285.001, 46.4069, 0.66", "-6.65464, -285.878, 46.347, 0.66", "-6.9631, -286.828, 46.282, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.85153, -280.322, 46.7268, 0.22", "-3.79238, -280.784, 46.928, 0.22", "-2.38436, -281.398, 47.1955, 0.22", "5.14461, -285.552, 47.4778, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "1.30552, 250.997, -70.9512, 0.22", "-0.275057, 251.874, -70.2336, 0.22", "-1.30085, 252.444, -69.7679, 0.37", "-1.98623, 252.825, -69.4568, 0.44", "-2.92793, 253.347, -69.0292, 0.22", "-4.18922, 254.048, -68.4566, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "1.30552, 250.997, -70.9512, 0.29", "1.63148, 252.269, -70.3302, 0.29", "1.90976, 253.355, -69.8001, 0.22", "2.07778, 254.011, -69.48, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-28.6177, 118.394, -86.9632, 0.66", "-30.6958, 120.279, -86.245, 0.66", "-31.5582, 121.321, -85.9455, 0.44", "-32.283, 122.423, -85.6894, 0.44", "-32.9166, 123.492, -85.4787, 0.44", "-33.6079, 124.827, -85.2371, 0.37", "-34.1921, 126.139, -85.019, 0.37", "-34.8046, 127.981, -84.8602, 0.37", "-35.2881, 130.226, -84.6789, 0.29", "-35.469, 131.647, -84.541, 0.29", "-35.5611, 133.19, -84.3287, 0.66", "-35.5616, 134.326, -84.1155, 0.66", "-35.5279, 135.119, -83.9379, 0.66", "-35.4832, 136.504, -83.6119, 0.37", "-35.4834, 138.152, -83.1779, 0.22", "-35.6706, 140.074, -82.6474, 0.66", "-35.9531, 141.146, -82.36, 0.81", "-36.4001, 142.077, -82.1421, 0.52", "-37.2078, 143.276, -81.924, 0.74", "-37.8799, 144.091, -81.8341, 0.74", "-38.8675, 145.168, -81.7924, 0.29", "-39.9676, 146.329, -81.7544, 0.29", "-41.9282, 148.477, -81.6636, 0.29", "-43.2794, 150.13, -81.5495, 0.29", "-44.01, 151.163, -81.4814, 0.52", "-44.3452, 151.718, -81.4494, 0.52", "-45.3125, 153.667, -81.3769, 0.37", "-45.8231, 154.867, -81.3821, 0.37", "-46.4172, 156.413, -81.4605, 0.37", "-47.0064, 158.105, -81.5779, 0.44", "-47.3992, 159.234, -81.6893, 0.29", "-47.9508, 160.726, -81.93, 0.29", "-48.5311, 162.178, -82.3515, 0.81", "-48.9407, 163.062, -82.6675, 0.96" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-28.6177, 118.394, -86.9632, 0.22", "-29.2663, 118.159, -86.8516, 0.22", "-30.0275, 117.769, -86.7098, 0.22", "-31.1161, 117.21, -86.5071, 0.22", "-31.3515, 117.09, -86.4632, 0.81", "-31.7901, 116.865, -86.3816, 0.81", "-32.6462, 116.426, -86.2221, 0.29", "-33.296, 116.009, -86.0927, 0.29" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-24.1327, 72.8685, 168.877, 0.44", "-28.8868, 74.0453, 176.663, 0.44", "-32.5758, 74.3012, 185.088, 0.44" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-24.1327, 72.8685, 168.877, 0.22", "-30.3476, 74.0909, 178.883, 0.44", "-36.23, 72.2573, 189.055, 0.44" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "58.4805, 83.7007, 142.609, 0.44", "61.1758, 89.151, 153.922, 0.44", "65.6223, 95.3743, 164.339, 0.44" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "58.4805, 83.7007, 142.609, 0.22", "64.181, 88.791, 153.4, 0.44", "71.2551, 94.348, 163.184, 0.44" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "0.300482, 107.293, 13.4686, 0.37", "-1.0594, 108.092, 12.7479, 0.37", "-1.6985, 108.467, 12.4606, 0.37", "-2.4843, 108.973, 11.9838, 0.29", "-3.0952, 109.459, 11.5512, 0.29", "-3.3844, 109.743, 11.3184, 0.29", "-3.76535, 110.189, 10.9728, 0.29", "-4.1805, 110.784, 10.5344, 0.44", "-4.79354, 111.928, 9.67889, 0.59", "-5.08875, 112.756, 9.06255, 0.74", "-5.22794, 113.374, 8.59651, 0.88", "-5.29002, 113.844, 8.22826, 0.88", "-5.30326, 114.686, 7.54073, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "0.300482, 107.293, 13.4686, 0.22", "-0.545419, 107.158, 12.8368, 0.22", "-0.969806, 107.153, 12.4321, 0.22", "-1.58682, 107.212, 11.7295, 0.22", "-1.99474, 107.211, 11.1754, 0.22", "-2.2975, 107.161, 10.7448, 0.22", "-2.65193, 107.102, 10.2408, 0.22", "-3.25064, 107.004, 9.26233, 0.22", "-3.65261, 106.925, 8.48512, 0.22", "-4.10612, 106.81, 7.35531, 0.22", "-4.48363, 106.606, 6.24034, 0.22", "-11.3822, 106.116, 0.0282015, 0.22", "-18.6712, 104.664, -5.59581, 0.22", "-26.241, 102.542, -10.6447, 0.22", "-34.6456, 100.738, -14.2952, 0.22", "-42.3965, 97.8038, -18.6804, 0.22", "-50.0536, 93.6887, -22.3427, 0.22", "-57.558, 88.7795, -25.4071, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.6826, 189.43, -86.3613, 0.22", "-17.5533, 188.39, -86.3427, 0.22", "-17.4663, 187.691, -86.3302, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-17.6826, 189.43, -86.3613, 0.52", "-16.6885, 189.497, -86.7413, 0.52", "-15.9655, 189.545, -87.0177, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-72.8072, 185.938, -59.9628, 0.29", "-74.6769, 188.435, -60.4183, 0.29", "-75.2387, 189.023, -60.5782, 0.29", "-76.2086, 189.86, -60.9151, 0.22", "-77.0695, 190.543, -61.2429, 0.22", "-78.473, 191.651, -61.795, 0.22", "-79.0276, 192.107, -62.0153, 0.22", "-80.1562, 193.005, -62.6542, 0.22", "-80.9157, 193.556, -63.1093, 0.22", "-81.7242, 194.07, -63.633, 0.29", "-82.2012, 194.318, -63.9714, 0.29", "-82.8129, 194.537, -64.4771, 0.29", "-83.8565, 194.853, -65.4557, 0.29", "-85.1338, 195.194, -66.7575, 0.29", "-86.1804, 195.378, -67.8455, 0.29", "-87.0731, 195.427, -68.7948, 0.22", "-88.4268, 195.371, -70.2516, 0.22", "-89.1402, 195.31, -71.0225, 0.37", "-90.1019, 195.243, -72.0284, 0.37", "-90.8636, 195.242, -72.7734, 0.37", "-91.649, 195.322, -73.6194, 0.37", "-92.3401, 195.493, -74.4654, 0.29", "-93.1474, 195.812, -75.6074, 0.22", "-93.8761, 196.222, -76.7874, 0.22", "-94.4365, 196.693, -77.8665, 0.22", "-95.4137, 197.721, -79.9575, 0.22", "-95.7346, 198.073, -80.7046, 0.22", "-96.177, 198.491, -81.8396, 0.22", "-96.7123, 198.81, -83.3087, 0.22", "-97.1395, 198.904, -84.5165, 0.22", "-97.9795, 198.964, -86.7446, 0.22", "-98.7085, 198.877, -88.311, 0.22", "-99.4472, 198.622, -89.8958, 0.22", "-99.9947, 198.238, -91.1612, 0.37", "-100.267, 197.912, -91.8256, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-72.8072, 185.938, -59.9628, 0.22", "-74.4093, 185.859, -60.4239, 0.22", "-75.4279, 185.785, -60.8413, 0.22", "-76.3011, 185.683, -61.3046, 0.22", "-76.7933, 185.619, -61.6209, 0.22", "-77.5923, 185.521, -62.1911, 0.22", "-78.1804, 185.449, -62.6107, 0.22", "-78.9025, 185.328, -63.2645, 0.22", "-79.5792, 185.243, -63.9535, 0.22", "-80.3457, 185.17, -64.781, 0.22", "-80.7361, 185.117, -65.2424, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-6.9631, -286.828, 46.282, 0.37", "-6.55797, -288.963, 46.6622, 0.37", "-6.28627, -290.229, 46.9336, 0.37", "-6.10809, -291.059, 47.1116, 0.52", "-5.99605, -291.581, 47.2235, 0.52", "-5.83411, -292.336, 47.3852, 0.59", "-5.59492, -293.45, 47.6242, 0.96", "-5.48698, -293.806, 47.6337, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.9631, -286.828, 46.282, 0.22", "-6.41031, -287.387, 46.1402, 0.22", "-5.67174, -288.134, 45.9507, 0.29", "-5.22691, -288.583, 45.8366, 0.29", "-4.71705, -289.099, 45.7058, 0.29", "-4.17671, -289.645, 45.5672, 0.37", "-0.1194, -296.31, 43.2871, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-48.9407, 163.062, -82.6675, 0.29", "-49.8027, 163.449, -83.9738, 0.29", "-50.8332, 164.059, -85.4476, 0.29", "-51.5901, 164.629, -86.5506, 0.59", "-52.2872, 165.203, -87.6111, 0.44", "-52.5812, 165.523, -88.2507, 0.44", "-52.8218, 165.848, -89.0575, 0.37", "-52.9808, 166.188, -90.0474, 0.22", "-53.0496, 166.53, -90.9748, 0.81", "-53.0871, 167.174, -92.6177, 1.03", "-53.0936, 168.374, -95.7638, 1.03", "-53.0442, 169.758, -99.6535, 0.81", "-52.938, 170.865, -103.062, 0.29", "-52.8834, 171.232, -104.291, 1.33", "-52.8513, 171.399, -104.851, 1.55" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-48.9407, 163.062, -82.6675, 0.29", "-49.9916, 162.765, -82.6718, 0.29", "-50.6065, 162.627, -82.6257, 0.29", "-51.6819, 162.416, -82.4278, 0.59", "-52.0059, 162.353, -82.32, 0.59", "-52.8462, 162.16, -81.9608, 0.22", "-53.8167, 161.887, -81.4241, 0.22", "-54.3053, 161.703, -81.0098, 0.22", "-55.0457, 161.329, -80.2262, 0.22", "-55.8818, 160.812, -79.2008, 0.66", "-56.2864, 160.52, -78.6828, 0.96", "-56.9529, 159.982, -77.8041, 0.96", "-57.7503, 159.302, -76.7928, 0.22", "-58.1988, 158.876, -76.196, 0.22", "-58.4435, 158.622, -75.8741, 0.52", "-58.8475, 158.207, -75.4115, 0.22", "-59.1885, 157.927, -75.1035, 0.22", "-59.9551, 157.513, -74.7663, 0.52" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-33.296, 116.009, -86.0927, 0.37", "-33.1282, 114.552, -85.2359, 0.37", "-33.0512, 113.52, -84.6479, 0.52", "-32.9673, 112.015, -83.8106, 0.44", "-32.9036, 110.74, -83.131, 0.66", "-32.8213, 109.328, -82.3607, 0.29", "-32.7729, 108.118, -81.6672, 0.29", "-32.8272, 106.71, -80.8075, 0.44", "-32.9175, 105.946, -80.3246, 0.44", "-33.1414, 104.882, -79.6165, 0.66", "-33.6615, 103.121, -78.4123, 0.37", "-34.3978, 101.427, -77.154, 0.37", "-35.2044, 100.069, -76.0749, 0.37", "-35.8371, 99.2996, -75.4793, 0.29", "-36.2988, 98.8806, -75.162, 0.74", "-37.1705, 98.2679, -74.7373, 0.22", "-38.3323, 97.5847, -74.3562, 0.22", "-38.9078, 97.2715, -74.218, 0.22", "-40.6057, 96.3229, -73.8607, 0.22", "-41.7781, 95.6321, -73.609, 0.22", "-43.0037, 94.9141, -73.3403, 0.22", "-43.8552, 94.435, -73.1545, 0.44", "-44.3513, 94.1168, -73.0469, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-33.296, 116.009, -86.0927, 0.81", "-35.4363, 115.871, -86.86, 0.81", "-36.2465, 115.779, -87.1085, 0.81", "-37.2337, 115.694, -87.4469, 0.66", "-38.6099, 115.604, -87.9171, 0.29", "-39.4857, 115.591, -88.2075, 0.37", "-40.4237, 115.607, -88.5088, 0.37", "-41.2024, 115.625, -88.7163, 0.29", "-42.7257, 115.615, -89.1367, 0.44", "-43.7553, 115.598, -89.4323, 0.59", "-44.7123, 115.557, -89.7135, 0.29", "-45.9452, 115.462, -90.0806, 0.59", "-46.9808, 115.324, -90.3967, 0.29", "-48.7122, 114.974, -90.9218, 0.29", "-49.2561, 114.824, -91.0772, 0.22", "-51.4648, 114.11, -91.748, 0.22", "-51.7393, 114.005, -91.8347, 0.44", "-52.2978, 113.774, -92.0158, 0.44", "-53.4159, 113.307, -92.3886, 0.22", "-54.2995, 112.924, -92.6736, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-32.5758, 74.3012, 185.088, 0.44", "-38.3852, 80.3094, 190.221, 0.44", "-45.2954, 84.609, 195.666, 0.44", "-51.2937, 88.613, 202.29, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-32.5758, 74.3012, 185.088, 0.22", "-36.2292, 73.0524, 195.456, 0.44", "-38.6501, 72.8663, 206.231, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-36.23, 72.2573, 189.055, 0.44", "-46.5896, 76.2205, 192.349, 0.44", "-56.1798, 82.0407, 195.166, 0.44", "-65.5492, 87.835, 198.693, 0.44", "-75.1387, 92.2624, 203.403, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-36.23, 72.2573, 189.055, 0.22", "-36.6578, 70.2178, 195.818, 0.44", "-38.3299, 66.9011, 201.908, 0.44", "-39.0229, 63.6844, 208.211, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "65.6223, 95.3743, 164.339, 0.44", "67.9498, 100.502, 171.796, 0.44", "71.3024, 106.526, 178.215, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "65.6223, 95.3743, 164.339, 0.22", "69.1964, 99.1154, 174.218, 0.44", "71.909, 103.879, 183.932, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "71.2551, 94.348, 163.184, 0.44", "80.6284, 103.438, 171.196, 0.44", "90.4324, 114.075, 176.583, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "71.2551, 94.348, 163.184, 0.22", "71.6727, 91.2426, 171.623, 0.44", "70.9027, 87.5785, 179.853, 0.44", "71.3778, 85.5346, 188.588, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.30326, 114.686, 7.54073, 0.37", "-5.54541, 115.751, 6.68852, 0.37", "-5.87449, 116.944, 5.75015, 0.37", "-6.18318, 117.726, 5.06172, 0.37", "-6.48885, 118.341, 4.3905, 0.37", "-6.71816, 118.816, 3.77837, 0.52", "-6.86774, 119.158, 3.31147, 0.52", "-7.02297, 119.597, 2.67265, 0.29", "-7.1728, 120.166, 1.60883, 0.29", "-7.24123, 120.586, 0.47807, 0.29", "-7.26631, 120.928, -0.870399, 0.66", "-7.26493, 121.029, -1.39972, 0.81", "-7.25971, 121.222, -2.51989, 0.59", "-7.28833, 121.597, -4.29905, 0.29", "-7.32452, 121.929, -5.43543, 0.29", "-7.37956, 122.338, -6.46831, 0.74", "-7.4182, 122.772, -7.35209, 0.74", "-7.42338, 123.165, -8.04174, 0.74", "-7.41203, 123.909, -9.16609, 0.44", "-7.39746, 124.565, -9.96546, 0.44", "-7.38068, 125.766, -11.2116, 0.52", "-7.36706, 126.721, -12.0855, 0.52", "-7.22956, 128.186, -13.3729, 0.44", "-7.07806, 128.815, -13.9567, 0.44", "-6.77239, 129.641, -14.7664, 0.66", "-6.37386, 130.594, -15.7202, 0.81", "-6.09805, 131.212, -16.3222, 0.81", "-5.27955, 132.245, -17.5052, 0.29", "-4.26295, 133.137, -18.5725, 0.29", "-3.27434, 133.869, -19.4577, 0.52", "-2.87922, 134.143, -19.7691, 0.74", "-1.97543, 134.716, -20.4218, 0.74", "1.09267, 136.491, -22.4237, 0.66", "1.76551, 136.845, -22.8182, 0.29", "2.7443, 137.298, -23.3241, 0.29", "4.19247, 137.918, -23.9841, 0.29", "5.6571, 138.456, -24.6123, 0.29", "7.1665, 138.929, -25.1816, 0.37", "8.64071, 139.374, -25.6768, 0.52", "10.3774, 139.814, -26.2639, 0.74", "11.472, 140.051, -26.6266, 0.59", "14.5609, 140.636, -27.6193, 0.37", "15.4201, 140.805, -27.8762, 0.37", "16.441, 141.019, -28.1554, 0.37", "17.4449, 141.245, -28.4592, 0.37", "19.1868, 141.656, -29.039, 0.74", "20.0318, 141.894, -29.3807, 0.74", "21.5704, 142.557, -30.1165, 0.37", "22.3127, 142.955, -30.53, 0.37", "24.6128, 144.45, -32.0296, 0.44", "24.9884, 144.764, -32.3106, 0.66", "25.545, 145.415, -32.7923, 0.66", "26.1788, 146.368, -33.4238, 0.44", "26.4595, 146.915, -33.7333, 0.29", "26.9155, 147.924, -34.2447, 0.29", "27.2034, 148.637, -34.5543, 0.37", "28.0136, 150.459, -35.425, 0.52", "28.6105, 151.785, -36.0493, 0.29", "29.2357, 153.164, -36.7152, 0.74", "29.5501, 153.885, -37.0618, 0.74", "30.0133, 155.0, -37.5643, 0.74", "30.8655, 157.312, -38.5699, 0.22", "31.2133, 158.504, -39.0629, 0.22", "31.278, 158.781, -39.1719, 0.74", "31.4877, 159.464, -39.5339, 0.44", "31.7934, 160.254, -40.0044, 0.29", "32.3823, 161.467, -40.7711, 0.22", "32.7566, 162.116, -41.1966, 0.44", "33.2603, 162.836, -41.695, 0.29", "35.1573, 165.444, -43.4151, 0.88", "35.6089, 166.062, -43.8067, 0.88", "35.9785, 166.601, -44.1298, 0.22", "36.4769, 167.33, -44.5076, 0.22", "36.781, 167.833, -44.7102, 0.22", "37.1779, 168.698, -44.977, 0.22", "37.4626, 169.697, -45.2157, 0.22", "37.6676, 170.329, -45.4644, 0.22", "38.1837, 171.451, -46.1983, 0.22", "38.6088, 172.251, -46.8179, 0.22", "38.9905, 172.934, -47.3498, 0.22", "39.4537, 173.748, -47.9449, 0.22", "40.2252, 175.128, -48.856, 0.66", "41.3846, 177.403, -50.1264, 0.88", "42.0535, 178.839, -50.8168, 0.37", "42.6437, 180.009, -51.3183, 0.37", "43.2411, 181.1, -51.733, 0.37", "44.0419, 182.332, -52.1568, 0.29", "45.4257, 184.201, -52.6955, 0.29", "46.2509, 185.166, -52.937, 0.29", "47.8999, 186.633, -53.4296, 0.29", "48.929, 187.284, -53.7838, 0.74", "51.1318, 188.254, -54.6581, 0.37", "51.8328, 188.49, -54.9756, 0.37", "52.638, 188.703, -55.3508, 0.37", "55.018, 189.24, -56.4895, 0.88", "57.9703, 189.806, -57.9768, 0.59", "60.4076, 190.195, -59.2481, 0.37", "61.6187, 190.382, -59.9592, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-5.30326, 114.686, 7.54073, 0.29", "-5.58719, 115.683, 7.3845, 0.29", "-5.76996, 116.363, 7.24016, 0.29", "-5.96741, 117.132, 7.05174, 0.29", "-6.11926, 117.822, 6.85115, 0.22", "-6.26573, 118.609, 6.60828, 0.22", "-6.3099, 118.904, 6.51757, 0.22", "-6.37799, 119.519, 6.29299, 0.74", "-6.41054, 119.783, 6.19129, 0.74", "-6.50998, 120.51, 5.90652, 0.44", "-6.55877, 120.914, 5.753, 0.59", "-6.60623, 121.411, 5.58431, 0.59", "-6.70399, 122.337, 5.29313, 0.29", "-6.79097, 123.161, 5.06789, 0.29", "-6.84456, 123.654, 4.9379, 0.29", "-6.94478, 124.344, 4.74707, 0.29", "-7.07322, 125.177, 4.47632, 0.81", "-7.10404, 125.418, 4.38259, 0.81", "-7.14414, 126.175, 4.06125, 0.29", "-7.14298, 126.643, 3.86403, 0.29", "-7.11625, 127.268, 3.56363, 0.29", "-7.09067, 127.658, 3.31903, 0.29", "-7.05469, 128.125, 2.97637, 0.29", "-7.01282, 128.684, 2.54097, 0.74", "-6.95625, 129.61, 1.79525, 0.22", "-6.91813, 130.457, 1.12745, 0.22", "-6.87965, 131.345, 0.439032, 0.37", "-6.88292, 131.696, 0.163562, 0.37", "-6.90421, 132.159, -0.195157, 0.22", "-6.93709, 132.88, -0.726451, 0.22", "-6.97549, 133.563, -1.17474, 0.52", "-7.04723, 134.455, -1.68666, 0.29", "-7.07859, 134.838, -1.88561, 0.29", "-7.11397, 135.418, -2.2154, 0.29", "-7.17648, 136.313, -2.76608, 0.29", "-7.22684, 136.909, -3.16469, 0.29", "-7.29603, 137.545, -3.61929, 0.29", "-7.39268, 138.126, -4.05919, 0.29", "-7.56848, 138.945, -4.69462, 0.29", "-7.76821, 139.643, -5.29023, 0.29", "-7.84811, 139.893, -5.52022, 0.66", "-7.89675, 140.068, -5.68113, 0.66", "-8.01207, 140.563, -6.10804, 0.22", "-8.11827, 141.153, -6.58433, 0.22", "-8.22027, 141.842, -7.09708, 0.29", "-8.27743, 142.343, -7.46171, 0.29", "-8.33759, 143.141, -8.03673, 0.52", "-8.35057, 143.457, -8.26248, 0.52", "-8.36736, 144.091, -8.70145, 0.29", "-8.40326, 144.836, -9.18939, 0.29", "-8.47794, 145.546, -9.58446, 0.29", "-8.58837, 146.267, -9.93026, 0.29", "-8.68815, 146.8, -10.1492, 0.29", "-8.82835, 147.514, -10.4368, 0.29", "-8.94995, 148.237, -10.7325, 0.29", "-9.04411, 148.979, -11.021, 0.37", "-9.09395, 149.566, -11.2414, 0.37", "-9.10992, 150.309, -11.5809, 0.37", "-9.08665, 151.033, -11.9569, 0.29", "-9.01512, 151.887, -12.453, 0.22", "-8.94496, 152.435, -12.7956, 0.44", "-8.81227, 153.312, -13.3333, 0.81", "-8.55031, 154.996, -14.3192, 0.22", "-8.43719, 155.9, -14.7719, 0.22", "-8.37722, 156.59, -15.0196, 0.74", "-8.35742, 156.98, -15.1013, 0.74", "-8.31567, 158.118, -15.166, 0.22", "-8.26598, 158.949, -15.0447, 0.22", "-8.1343, 160.109, -14.691, 0.29", "-7.95439, 160.961, -14.4086, 0.29", "-7.73996, 161.679, -14.1708, 0.29", "-7.46958, 162.386, -13.9626, 0.29", "-6.96532, 163.501, -13.6671, 0.22", "-6.38608, 164.58, -13.3804, 0.22", "-5.85879, 165.39, -13.2174, 0.22", "-5.51904, 165.857, -13.143, 0.37", "-5.1542, 166.297, -13.0855, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-57.558, 88.7795, -25.4071, 0.22", "-63.6698, 86.9599, -28.4534, 0.22", "-70.2023, 85.6248, -30.7645, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-57.558, 88.7795, -25.4071, 0.22", "-65.1855, 86.1481, -32.3736, 0.22", "-73.6498, 83.5614, -38.3152, 0.22", "-83.2513, 83.3784, -42.788, 0.22", "-92.9146, 85.1415, -46.7018, 0.22", "-103.086, 85.9212, -49.5074, 0.22", "-112.829, 85.5277, -53.6582, 0.22", "-121.934, 84.7169, -59.0378, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.48698, -293.806, 47.6337, 0.22", "-6.37629, -293.921, 46.2874, 0.22", "-7.15031, -293.835, 45.1274, 0.22", "-7.63773, -293.737, 44.4345, 0.22", "-7.94767, -293.708, 44.0052, 0.22", "-8.4266, -293.724, 43.3681, 0.22", "-8.76028, -293.771, 42.9482, 0.22", "-9.15789, -293.859, 42.4642, 0.52", "-9.95574, -294.05, 41.5137, 0.22", "-10.6135, -294.31, 40.7687, 0.22", "-11.0821, -294.573, 40.2743, 0.37", "-11.5968, -294.955, 39.7529, 0.37", "-12.2595, -295.558, 39.0655, 0.29", "-17.4433, -296.246, 30.3957, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.48698, -293.806, 47.6337, 0.96", "-5.6274, -294.488, 47.9072, 0.96", "-6.00985, -296.346, 48.6521, 0.59", "-6.32296, -297.867, 49.262, 0.59", "-6.50317, -298.743, 49.6131, 0.59", "-6.90061, -300.674, 50.3872, 0.52", "-7.4005, -303.102, 51.3609, 0.74" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-52.8513, 171.399, -104.851, 0.29", "-51.7426, 172.336, -105.755, 0.29", "-51.0301, 172.989, -106.361, 0.29", "-50.1407, 174.003, -107.165, 0.74", "-49.1888, 175.374, -108.034, 0.52", "-48.801, 176.117, -108.508, 0.29", "-48.2227, 177.426, -109.345, 0.22", "-48.0389, 177.961, -109.683, 0.22", "-47.7531, 179.191, -110.425, 0.22", "-47.5471, 180.644, -111.208, 0.74", "-47.3898, 182.905, -112.241, 0.29", "-47.3948, 183.837, -112.655, 0.29", "-47.4484, 184.927, -113.117, 0.29", "-47.503, 186.025, -113.552, 0.29", "-47.5357, 187.042, -113.932, 0.74", "-47.5896, 188.226, -114.339, 0.74", "-47.6539, 189.779, -114.757, 0.37", "-47.7459, 191.219, -115.124, 0.29", "-47.8582, 192.842, -115.529, 0.29", "-47.8895, 194.226, -115.879, 0.29" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-52.8513, 171.399, -104.851, 0.22", "-52.2968, 169.535, -105.251, 0.22", "-52.038, 168.392, -105.544, 0.22", "-51.8328, 167.381, -105.834, 0.37", "-51.6915, 166.707, -106.049, 0.37", "-51.4727, 165.616, -106.418, 0.29", "-51.2771, 164.519, -106.803, 0.29", "-51.0967, 163.449, -107.191, 0.29", "-50.9944, 162.676, -107.499, 0.66", "-50.896, 161.406, -108.046, 0.22", "-50.8322, 160.471, -108.479, 0.22", "-50.7811, 159.944, -108.735, 0.37" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-51.2937, 88.613, 202.29, 0.44", "-55.467, 97.066, 206.797, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-51.2937, 88.613, 202.29, 0.22", "-56.9476, 91.0902, 206.591, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-38.6501, 72.8663, 206.231, 0.44", "-47.901, 76.589, 205.942, 0.44", "-57.0693, 80.194, 204.34, 0.44", "-65.8203, 83.9042, 201.309, 0.44", "-75.0503, 85.7597, 197.831, 0.44", "-84.6463, 87.2536, 195.229, 0.44", "-94.0103, 89.729, 192.677, 0.44", "-103.635, 92.2904, 191.638, 0.44" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-38.6501, 72.8663, 206.231, 0.22", "-37.7228, 71.4752, 216.041, 0.44", "-36.1771, 71.0373, 225.864, 0.44" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-75.1387, 92.2624, 203.403, 0.44", "-81.9045, 83.4379, 199.429, 0.44", "-88.9607, 75.8458, 193.899, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-75.1387, 92.2624, 203.403, 0.22", "-75.3214, 98.5104, 206.362, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-39.0229, 63.6844, 208.211, 0.44", "-36.4469, 61.3251, 216.433, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-39.0229, 63.6844, 208.211, 0.22", "-43.0146, 59.0403, 218.509, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "71.3024, 106.526, 178.215, 0.44", "75.8831, 113.235, 184.124, 0.44" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "71.3024, 106.526, 178.215, 0.22", "71.2445, 108.663, 184.529, 0.44" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "71.909, 103.879, 183.932, 0.44", "73.3971, 106.32, 189.793, 0.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "71.909, 103.879, 183.932, 0.22", "75.0235, 106.761, 191.421, 0.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "90.4324, 114.075, 176.583, 0.44", "102.515, 110.339, 177.172, 0.44", "114.374, 107.184, 180.31, 0.44", "126.311, 104.933, 183.994, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "90.4324, 114.075, 176.583, 0.22", "87.8776, 122.54, 179.376, 0.44", "84.3974, 130.987, 180.821, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "71.3778, 85.5346, 188.588, 0.44", "70.4207, 83.6577, 195.695, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "71.3778, 85.5346, 188.588, 0.22", "75.7049, 79.5866, 193.228, 0.44", "80.3655, 74.0972, 198.112, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.4005, -303.102, 51.3609, 0.52", "-7.64311, -304.637, 51.3766, 0.52", "-7.74438, -305.638, 51.2683, 0.74", "-7.74833, -306.358, 51.2636, 0.81", "-7.69785, -307.435, 51.3295, 1.03", "-7.66088, -308.523, 51.4816, 0.74", "-7.6549, -309.741, 51.7375, 0.44", "-7.60888, -311.42, 52.0911, 0.29", "-7.48379, -313.903, 52.7872, 0.29", "-7.42868, -314.665, 53.0669, 0.29", "-7.29385, -315.973, 53.7237, 1.47", "-7.1957, -316.702, 54.2462, 1.47" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.4005, -303.102, 51.3609, 0.37", "-6.74356, -303.561, 51.062, 0.37", "-6.12916, -303.99, 50.7825, 0.37", "-5.52558, -304.411, 50.5079, 0.29", "-4.50159, -305.126, 50.042, 0.29", "-3.98844, -305.484, 49.8085, 0.29", "-3.30741, -305.96, 49.4987, 0.29", "3.35321, -310.718, 47.9351, 0.29" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.1957, -316.702, 54.2462, 1.03", "-7.43423, -317.473, 54.2761, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.1957, -316.702, 54.2462, 0.22", "-8.42729, -315.473, 53.8676, 0.22", "-9.3348, -314.576, 53.4895, 0.22", "-9.99262, -313.876, 53.1496, 0.22", "-10.5641, -313.208, 52.8112, 0.22", "-11.3086, -312.337, 52.3704, 0.22", "-11.9976, -311.532, 51.9624, 0.22", "-12.5728, -310.894, 51.5377, 0.22", "-13.0684, -310.314, 51.0728, 0.22", "-13.4084, -309.856, 50.6747, 0.22", "-21.1771, -302.053, 46.6438, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.43423, -317.473, 54.2761, 0.96", "-7.49728, -318.949, 54.1251, 0.96", "-7.53419, -319.813, 54.0367, 0.96", "-7.60702, -321.519, 53.8623, 1.33", "-7.707, -323.86, 53.6227, 0.22", "-7.7675, -325.276, 53.4778, 0.22", "-7.84567, -327.107, 53.2906, 0.22", "-6.60224, -340.397, 53.247, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.43423, -317.473, 54.2761, 0.22", "-8.31432, -317.136, 54.8689, 0.22", "-9.02828, -316.863, 55.3497, 0.22", "-9.52874, -316.672, 55.6868, 0.22", "-10.4819, -316.307, 56.3287, 0.22", "-10.7005, -316.223, 56.476, 0.22", "-17.09, -314.628, 59.9691, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_86", "dend_23", "dend_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_86", "dend_23", "dend_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_69", "dend_69", "dend_69", "dend_69", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_79", "dend_79", "dend_72", "dend_72", "dend_61", "dend_61", "dend_54", "dend_54", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_76", "dend_76", "dend_76", "dend_76", "dend_73", "dend_73", "dend_73", "dend_65", "dend_65", "dend_62", "dend_62", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_85", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_78", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_57", "dend_56", "dend_56", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BTC_a47bfc03bb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_86, id: dend_86, parent: soma_0
create dend_86
public dend_86
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_108, id: dend_108, parent: dend_86
create dend_108
public dend_108
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_39, id: dend_39, parent: dend_23
create dend_39
public dend_39
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_0
create dend_18
public dend_18
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_105, id: dend_105, parent: dend_87
create dend_105
public dend_105
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_102, id: dend_102, parent: dend_88
create dend_102
public dend_102
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_69, id: dend_69, parent: dend_51
create dend_69
public dend_69
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_99, id: dend_99, parent: dend_89
create dend_99
public dend_99
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_42
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_94, id: dend_94, parent: dend_90
create dend_94
public dend_94
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_79, id: dend_79, parent: dend_71
create dend_79
public dend_79
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_76, id: dend_76, parent: dend_72
create dend_76
public dend_76
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_111
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_79, dend_79, dend_72, dend_72, dend_61, dend_61, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_80, dend_80, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_65, dend_65, dend_62, dend_62, dend_58, dend_58, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_85, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_78, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_60, dend_60, dend_59, dend_59, dend_57, dend_56, dend_56, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_86(0), soma_0(0.450001137941537)
    connect dend_23(0), soma_0(0.450001137941537)
    connect dend_0(0), soma_0(0.450001137941537)
    connect axon_0(0), soma_0(1.0)
    connect dend_108(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_39(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_105(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_102(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_69(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_99(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_94(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_79(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_76(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.88047, -10.716, -1.11504, 1.92098 ) }
    soma_0 { pt3dadd( -1.70946, -9.6452, -1.01124, 2.92873 ) }
    soma_0 { pt3dadd( -1.53845, -8.57443, -0.907436, 4.88462 ) }
    soma_0 { pt3dadd( -1.36745, -7.50365, -0.803634, 6.96834 ) }
    soma_0 { pt3dadd( -1.19644, -6.43288, -0.699833, 8.71039 ) }
    soma_0 { pt3dadd( -1.02543, -5.3621, -0.596031, 9.75846 ) }
    soma_0 { pt3dadd( -0.854423, -4.29132, -0.492229, 10.7595 ) }
    soma_0 { pt3dadd( -0.683416, -3.22055, -0.388427, 11.4328 ) }
    soma_0 { pt3dadd( -0.512408, -2.14977, -0.284625, 11.7309 ) }
    soma_0 { pt3dadd( -0.341401, -1.079, -0.180824, 11.6952 ) }
    soma_0 { pt3dadd( -0.170393, -0.00821902, -0.0770218, 11.6235 ) }
    soma_0 { pt3dadd( 6.14341E-4, 1.06256, 0.0267799, 11.5198 ) }
    soma_0 { pt3dadd( 0.171622, 2.13333, 0.130582, 11.2257 ) }
    soma_0 { pt3dadd( 0.342629, 3.20411, 0.234383, 10.7284 ) }
    soma_0 { pt3dadd( 0.513637, 4.27489, 0.338185, 9.45222 ) }
    soma_0 { pt3dadd( 0.684644, 5.34566, 0.441987, 7.57235 ) }
    soma_0 { pt3dadd( 0.855652, 6.41644, 0.545789, 5.71519 ) }
    soma_0 { pt3dadd( 1.02666, 7.48721, 0.649591, 4.19151 ) }
    soma_0 { pt3dadd( 1.19767, 8.55799, 0.753392, 3.44771 ) }
    soma_0 { pt3dadd( 1.36867, 9.62877, 0.857194, 2.95035 ) }
    soma_0 { pt3dadd( 1.53968, 10.6995, 0.960996, 1.95307 ) }
    // Section: dend_86, id: dend_86, parent: soma_0 (entry count 21/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 1.39356, 0.697574, -10.5931, 2.8 ) }
    dend_86 { pt3dadd( 1.39356, 0.697574, -10.5931, 2.8 ) }
    dend_86 { pt3dadd( 4.51464, 0.961252, -15.9243, 2.28 ) }
    dend_86 { pt3dadd( 5.05196, 0.980593, -16.8333, 2.28 ) }
    dend_86 { pt3dadd( 5.69874, 0.930132, -18.1238, 2.58 ) }
    dend_86 { pt3dadd( 6.82212, 0.786767, -20.7629, 2.8 ) }
    dend_86 { pt3dadd( 7.83469, 0.633749, -23.6437, 2.58 ) }
    dend_86 { pt3dadd( 8.15336, 0.576012, -24.854, 2.43 ) }
    dend_86 { pt3dadd( 8.81083, 0.378124, -28.0791, 2.43 ) }
    dend_86 { pt3dadd( 9.6476, -0.072096, -33.6682, 1.77 ) }
    dend_86 { pt3dadd( 9.79115, -0.252922, -35.5715, 1.77 ) }
    dend_86 { pt3dadd( 9.73985, -0.504141, -37.8211, 1.84 ) }
    dend_86 { pt3dadd( 9.50594, -0.692427, -39.5221, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.483558, 10.851, 3.03697, 2.06 ) }
    dend_23 { pt3dadd( 0.483558, 10.851, 3.03697, 2.06 ) }
    dend_23 { pt3dadd( 0.23985, 11.5829, 3.50686, 2.06 ) }
    dend_23 { pt3dadd( -0.250334, 13.3426, 4.5945, 2.06 ) }
    dend_23 { pt3dadd( -0.448684, 14.2635, 5.09467, 2.06 ) }
    dend_23 { pt3dadd( -0.64045, 15.4338, 5.68455, 2.06 ) }
    dend_23 { pt3dadd( -0.766233, 16.3327, 6.12591, 2.28 ) }
    dend_23 { pt3dadd( -0.925609, 17.8097, 6.79351, 2.5 ) }
    dend_23 { pt3dadd( -1.00994, 19.2787, 7.41094, 2.65 ) }
    dend_23 { pt3dadd( -1.03545, 21.0035, 8.03628, 2.73 ) }
    dend_23 { pt3dadd( -0.986344, 22.1639, 8.46861, 2.95 ) }
    dend_23 { pt3dadd( -0.883839, 23.123, 8.83583, 3.02 ) }
    dend_23 { pt3dadd( -0.611192, 24.5036, 9.44526, 2.43 ) }
    dend_23 { pt3dadd( -0.182778, 25.839, 10.1494, 1.92 ) }
    dend_23 { pt3dadd( 0.0742324, 26.4094, 10.5473, 1.77 ) }
    dend_23 { pt3dadd( 0.572861, 27.3576, 11.3175, 1.77 ) }
    dend_23 { pt3dadd( 1.01169, 28.1636, 12.022, 1.92 ) }
    dend_23 { pt3dadd( 1.83974, 29.7242, 13.4449, 1.69 ) }
    dend_23 { pt3dadd( 2.46932, 31.0212, 14.655, 1.92 ) }
    dend_23 { pt3dadd( 3.17263, 32.758, 16.2785, 1.62 ) }
    dend_23 { pt3dadd( 3.42281, 33.5749, 17.0044, 1.62 ) }
    dend_23 { pt3dadd( 3.59691, 34.475, 17.7301, 1.62 ) }
    dend_23 { pt3dadd( 3.69028, 35.6239, 18.5815, 1.77 ) }
    dend_23 { pt3dadd( 3.69579, 36.5815, 19.2387, 2.06 ) }
    dend_23 { pt3dadd( 3.69076, 37.6602, 19.9603, 2.06 ) }
    dend_23 { pt3dadd( 3.73289, 38.5453, 20.5482, 2.06 ) }
    dend_23 { pt3dadd( 3.80102, 39.3644, 21.1226, 2.21 ) }
    dend_23 { pt3dadd( 4.03453, 41.111, 22.3733, 1.92 ) }
    dend_23 { pt3dadd( 4.30106, 42.5213, 23.4227, 1.77 ) }
    dend_23 { pt3dadd( 4.4975, 43.3252, 24.0474, 1.77 ) }
    dend_23 { pt3dadd( 4.76976, 44.2341, 24.7447, 1.99 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.95644, -10.6424, -0.843029, 1.84 ) }
    dend_0 { pt3dadd( -1.95644, -10.6424, -0.843029, 1.84 ) }
    dend_0 { pt3dadd( -2.07845, -11.5276, -0.763976, 1.4 ) }
    dend_0 { pt3dadd( -2.17126, -13.1481, -0.630502, 1.03 ) }
    dend_0 { pt3dadd( -2.12148, -14.6556, -0.471625, 0.96 ) }
    dend_0 { pt3dadd( -2.04797, -15.3131, -0.393994, 1.18 ) }
    dend_0 { pt3dadd( -1.91066, -16.0612, -0.300427, 1.25 ) }
    dend_0 { pt3dadd( -1.6699, -16.8083, -0.200541, 1.25 ) }
    dend_0 { pt3dadd( -1.27948, -17.5473, -0.094665, 1.25 ) }
    dend_0 { pt3dadd( -0.617694, -18.3884, 0.0292451, 1.69 ) }
    dend_0 { pt3dadd( -0.214843, -18.8205, 0.0823312, 1.92 ) }
    dend_0 { pt3dadd( 0.177532, -19.2411, 0.152817, 1.92 ) }
    dend_0 { pt3dadd( 0.823561, -20.0036, 0.356956, 1.33 ) }
    dend_0 { pt3dadd( 1.22786, -20.5806, 0.552307, 1.03 ) }
    dend_0 { pt3dadd( 1.64478, -21.3378, 0.867253, 1.03 ) }
    dend_0 { pt3dadd( 1.95875, -22.0669, 1.18643, 1.4 ) }
    dend_0 { pt3dadd( 2.4111, -23.3958, 1.77433, 1.4 ) }
    dend_0 { pt3dadd( 2.80211, -24.9195, 2.4423, 1.4 ) }
    dend_0 { pt3dadd( 2.97699, -25.9036, 2.85689, 1.25 ) }
    dend_0 { pt3dadd( 3.10901, -27.1612, 3.3472, 0.66 ) }
    dend_0 { pt3dadd( 3.143, -28.2496, 3.70872, 0.74 ) }
    dend_0 { pt3dadd( 3.1186, -29.3471, 3.96827, 1.03 ) }
    dend_0 { pt3dadd( 3.07057, -30.0557, 4.02295, 1.25 ) }
    dend_0 { pt3dadd( 3.00963, -30.6957, 3.98058, 1.25 ) }
    dend_0 { pt3dadd( 2.91798, -31.3795, 3.85802, 1.25 ) }
    dend_0 { pt3dadd( 2.75585, -32.337, 3.59307, 1.11 ) }
    dend_0 { pt3dadd( 2.52652, -33.4752, 3.24012, 1.11 ) }
    dend_0 { pt3dadd( 2.28672, -34.6156, 2.8688, 1.33 ) }
    dend_0 { pt3dadd( 2.10036, -35.5605, 2.55939, 1.33 ) }
    dend_0 { pt3dadd( 1.87236, -36.8898, 2.20916, 1.33 ) }
    dend_0 { pt3dadd( 1.72052, -38.014, 1.96756, 0.88 ) }
    dend_0 { pt3dadd( 1.62887, -39.0961, 1.84468, 1.03 ) }
    dend_0 { pt3dadd( 1.58563, -40.6227, 1.89177, 0.66 ) }
    dend_0 { pt3dadd( 1.65602, -41.6803, 2.11616, 0.66 ) }
    dend_0 { pt3dadd( 2.02363, -43.3439, 2.8659, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 2.22258, -43.9396, 3.24291, 0.96 ) }
    dend_0 { pt3dadd( 2.77954, -45.4161, 4.32096, 1.18 ) }
    dend_0 { pt3dadd( 3.05623, -46.1508, 4.87823, 1.4 ) }
    dend_0 { pt3dadd( 3.18577, -46.5723, 5.18505, 1.4 ) }
    dend_0 { pt3dadd( 3.4241, -47.9366, 5.96575, 0.88 ) }
    dend_0 { pt3dadd( 3.43064, -49.1126, 6.39391, 0.88 ) }
    dend_0 { pt3dadd( 3.32307, -50.0425, 6.61602, 1.18 ) }
    dend_0 { pt3dadd( 3.12751, -51.0429, 6.73785, 1.03 ) }
    dend_0 { pt3dadd( 2.85794, -52.18, 6.77592, 0.88 ) }
    dend_0 { pt3dadd( 2.5551, -53.3129, 6.74135, 0.88 ) }
    dend_0 { pt3dadd( 2.35983, -54.0194, 6.6537, 1.18 ) }
    dend_0 { pt3dadd( 2.1799, -54.8747, 6.50071, 1.18 ) }
    dend_0 { pt3dadd( 2.11552, -55.5968, 6.34642, 1.18 ) }
    dend_0 { pt3dadd( 2.17788, -56.7565, 6.05909, 1.18 ) }
    dend_0 { pt3dadd( 2.29331, -57.4375, 5.86186, 1.18 ) }
    dend_0 { pt3dadd( 2.48573, -58.2165, 5.62439, 1.18 ) }
    dend_0 { pt3dadd( 2.84397, -59.4605, 5.25692, 0.74 ) }
    dend_0 { pt3dadd( 3.19491, -60.6823, 4.92187, 0.74 ) }
    dend_0 { pt3dadd( 3.50711, -61.9867, 4.61005, 1.03 ) }
    dend_0 { pt3dadd( 3.67362, -63.0599, 4.41033, 0.96 ) }
    dend_0 { pt3dadd( 3.71376, -63.7977, 4.31225, 0.88 ) }
    dend_0 { pt3dadd( 3.67196, -64.6887, 4.22061, 0.88 ) }
    dend_0 { pt3dadd( 3.5255, -65.6724, 4.14596, 0.96 ) }
    dend_0 { pt3dadd( 3.27168, -66.7945, 4.11018, 0.96 ) }
    dend_0 { pt3dadd( 2.95691, -68.0362, 4.16146, 0.96 ) }
    dend_0 { pt3dadd( 2.6927, -69.2774, 4.30534, 1.03 ) }
    dend_0 { pt3dadd( 2.57841, -70.181, 4.48315, 0.81 ) }
    dend_0 { pt3dadd( 2.56421, -70.7456, 4.63445, 0.81 ) }
    dend_0 { pt3dadd( 2.59254, -71.4382, 4.85186, 0.81 ) }
    dend_0 { pt3dadd( 2.65133, -72.4583, 5.19668, 0.74 ) }
    dend_0 { pt3dadd( 2.65248, -73.5449, 5.57194, 0.66 ) }
    dend_0 { pt3dadd( 2.52415, -74.9503, 6.02222, 0.74 ) }
    dend_0 { pt3dadd( 2.36551, -75.7957, 6.26103, 0.74 ) }
    dend_0 { pt3dadd( 2.02615, -77.0396, 6.50998, 0.74 ) }
    dend_0 { pt3dadd( 1.66103, -78.0689, 6.63164, 0.66 ) }
    dend_0 { pt3dadd( 1.11682, -79.2996, 6.61859, 0.66 ) }
    dend_0 { pt3dadd( 0.6264, -80.2208, 6.50572, 0.66 ) }
    dend_0 { pt3dadd( -0.0693516, -81.3548, 6.21798, 0.81 ) }
    dend_0 { pt3dadd( -0.610465, -82.1686, 5.9045, 1.18 ) }
    dend_0 { pt3dadd( -0.890246, -82.5885, 5.69304, 1.4 ) }
    dend_0 { pt3dadd( -1.55897, -83.665, 5.06993, 1.25 ) }
    dend_0 { pt3dadd( -1.81203, -84.1237, 4.78725, 0.96 ) }
    dend_0 { pt3dadd( -2.09273, -84.7527, 4.42056, 0.96 ) }
    dend_0 { pt3dadd( -2.37011, -85.8042, 3.92438, 0.66 ) }
    dend_0 { pt3dadd( -2.42009, -86.594, 3.68119, 0.74 ) }
    dend_0 { pt3dadd( -2.37189, -87.3854, 3.53429, 0.81 ) }
    dend_0 { pt3dadd( -2.23887, -88.3766, 3.42247, 0.81 ) }
    dend_0 { pt3dadd( -2.0112, -89.6732, 3.31623, 0.81 ) }
    dend_0 { pt3dadd( -1.65761, -91.417, 3.22691, 0.66 ) }
    dend_0 { pt3dadd( -1.25849, -93.2808, 3.16978, 0.66 ) }
    dend_0 { pt3dadd( -0.921944, -95.0654, 3.121, 0.74 ) }
    dend_0 { pt3dadd( -0.791465, -96.1109, 3.10265, 0.81 ) }
    dend_0 { pt3dadd( -0.747825, -97.3627, 3.09611, 0.88 ) }
    dend_0 { pt3dadd( -0.79941, -97.9672, 3.11602, 0.96 ) }
    dend_0 { pt3dadd( -0.969212, -98.6938, 3.1782, 0.96 ) }
    dend_0 { pt3dadd( -1.46184, -99.9343, 3.32993, 0.74 ) }
    dend_0 { pt3dadd( -2.1618, -101.28, 3.52683, 0.74 ) }
    dend_0 { pt3dadd( -2.59403, -102.071, 3.65078, 1.03 ) }
    dend_0 { pt3dadd( -3.08318, -103.086, 3.80497, 1.33 ) }
    dend_0 { pt3dadd( -3.32387, -103.728, 3.89794, 1.33 ) }
    dend_0 { pt3dadd( -3.51517, -104.583, 4.02612, 1.33 ) }
    dend_0 { pt3dadd( -3.56081, -106.092, 4.26959, 0.81 ) }
    dend_0 { pt3dadd( -3.40934, -107.199, 4.45744, 0.81 ) }
    dend_0 { pt3dadd( -3.01445, -108.87, 4.74071, 0.81 ) }
    dend_0 { pt3dadd( -2.74584, -109.825, 4.88556, 0.81 ) }
    dend_0 { pt3dadd( -2.39227, -111.009, 5.06614, 0.81 ) }
    dend_0 { pt3dadd( -2.04766, -112.196, 5.25595, 0.59 ) }
    dend_0 { pt3dadd( -1.78176, -113.336, 5.43449, 0.52 ) }
    dend_0 { pt3dadd( -1.71332, -113.994, 5.51381, 0.52 ) }
    dend_0 { pt3dadd( -1.73822, -115.335, 5.57489, 0.52 ) }
    dend_0 { pt3dadd( -1.81695, -116.106, 5.56139, 0.81 ) }
    dend_0 { pt3dadd( -1.96899, -116.982, 5.49893, 0.81 ) }
    dend_0 { pt3dadd( -2.26082, -118.254, 5.36581, 0.74 ) }
    dend_0 { pt3dadd( -2.63421, -119.703, 5.18702, 0.81 ) }
    dend_0 { pt3dadd( -3.0498, -121.169, 5.00396, 0.81 ) }
    dend_0 { pt3dadd( -3.30875, -122.012, 4.89407, 0.96 ) }
    dend_0 { pt3dadd( -3.56108, -122.774, 4.82222, 0.96 ) }
    dend_0 { pt3dadd( -3.83752, -123.594, 4.82376, 1.03 ) }
    dend_0 { pt3dadd( -4.03978, -124.209, 4.92267, 1.03 ) }
    dend_0 { pt3dadd( -4.29878, -125.106, 5.20891, 0.81 ) }
    dend_0 { pt3dadd( -4.50384, -125.977, 5.56372, 0.74 ) }
    dend_0 { pt3dadd( -4.7499, -127.392, 6.14985, 0.66 ) }
    dend_0 { pt3dadd( -4.94191, -129.063, 6.82927, 0.66 ) }
    dend_0 { pt3dadd( -5.03603, -130.421, 7.34315, 0.52 ) }
    dend_0 { pt3dadd( -5.09526, -131.947, 7.84121, 0.52 ) }
    dend_0 { pt3dadd( -5.11445, -132.89, 8.07507, 0.74 ) }
    dend_0 { pt3dadd( -5.15013, -134.14, 8.30018, 0.96 ) }
    dend_0 { pt3dadd( -5.2019, -135.013, 8.39956, 1.03 ) }
    dend_0 { pt3dadd( -5.30946, -135.98, 8.47336, 1.03 ) }
    dend_0 { pt3dadd( -5.46653, -137.027, 8.5597, 0.74 ) }
    dend_0 { pt3dadd( -5.66461, -138.145, 8.72632, 0.52 ) }
    dend_0 { pt3dadd( -5.84821, -139.153, 8.9446, 0.52 ) }
    dend_0 { pt3dadd( -6.11814, -140.582, 9.30218, 0.88 ) }
    dend_0 { pt3dadd( -6.30223, -141.55, 9.53147, 0.74 ) }
    dend_0 { pt3dadd( -6.49807, -142.764, 9.79046, 0.44 ) }
    dend_0 { pt3dadd( -6.60087, -143.604, 9.93503, 0.59 ) }
    dend_0 { pt3dadd( -6.66776, -144.634, 10.0504, 0.59 ) }
    dend_0 { pt3dadd( -6.64873, -146.193, 10.0822, 0.59 ) }
    dend_0 { pt3dadd( -6.51713, -147.44, 10.0135, 0.81 ) }
    dend_0 { pt3dadd( -6.26772, -148.636, 9.91006, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -6.04477, -149.391, 9.83484, 0.96 ) }
    dend_0 { pt3dadd( -5.76957, -150.14, 9.75206, 0.96 ) }
    dend_0 { pt3dadd( -5.32515, -151.203, 9.64527, 0.74 ) }
    dend_0 { pt3dadd( -4.88675, -152.318, 9.55943, 0.74 ) }
    dend_0 { pt3dadd( -4.53915, -153.446, 9.52713, 0.74 ) }
    dend_0 { pt3dadd( -4.32199, -154.402, 9.56065, 0.74 ) }
    dend_0 { pt3dadd( -4.12939, -155.561, 9.65534, 0.74 ) }
    dend_0 { pt3dadd( -3.97826, -156.872, 9.80907, 0.81 ) }
    dend_0 { pt3dadd( -3.84415, -158.911, 10.0783, 0.81 ) }
    dend_0 { pt3dadd( -3.8049, -160.587, 10.3373, 0.74 ) }
    dend_0 { pt3dadd( -3.81268, -161.956, 10.5916, 0.81 ) }
    dend_0 { pt3dadd( -3.82367, -162.542, 10.7262, 1.03 ) }
    dend_0 { pt3dadd( -3.84195, -163.237, 10.9375, 1.03 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 13/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.53968, 10.6995, 0.960996, 0.524172 ) }
    axon_0 { pt3dadd( 3.90527, 25.5118, 0.960996, 0.524172 ) }
    axon_0 { pt3dadd( 6.27086, 40.3241, 0.960996, 0.524172 ) }
    // Section: dend_108, id: dend_108, parent: dend_86 (entry count 16/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 9.50594, -0.692427, -39.5221, 0.88 ) }
    dend_108 { pt3dadd( 9.55028, -0.851688, -40.7294, 0.88 ) }
    dend_108 { pt3dadd( 9.54102, -1.77632, -46.5834, 0.88 ) }
    dend_108 { pt3dadd( 9.49698, -1.9252, -47.385, 0.88 ) }
    dend_108 { pt3dadd( 9.27307, -2.37542, -49.4556, 1.25 ) }
    dend_108 { pt3dadd( 8.97384, -2.82615, -51.4282, 1.03 ) }
    dend_108 { pt3dadd( 8.62051, -3.27495, -53.3544, 0.81 ) }
    dend_108 { pt3dadd( 8.3712, -3.51141, -54.5045, 0.81 ) }
    dend_108 { pt3dadd( 7.98124, -3.77599, -55.8634, 1.03 ) }
    dend_108 { pt3dadd( 7.65815, -3.9036, -57.1614, 1.4 ) }
    dend_108 { pt3dadd( 7.28398, -3.99258, -58.9583, 1.4 ) }
    dend_108 { pt3dadd( 7.08111, -4.0164, -60.4899, 1.11 ) }
    dend_108 { pt3dadd( 7.02785, -4.01375, -61.6937, 0.88 ) }
    dend_108 { pt3dadd( 7.0345, -4.03852, -63.1979, 1.11 ) }
    dend_108 { pt3dadd( 7.08759, -4.12637, -65.7671, 1.11 ) }
    dend_108 { pt3dadd( 7.09926, -4.22094, -67.8317, 0.88 ) }
    dend_108 { pt3dadd( 7.04472, -4.30598, -69.3432, 0.74 ) }
    dend_108 { pt3dadd( 6.96703, -4.35183, -70.2111, 0.88 ) }
    dend_108 { pt3dadd( 6.7069, -4.42046, -71.758, 0.59 ) }
    dend_108 { pt3dadd( 6.32726, -4.40823, -73.239, 0.52 ) }
    dend_108 { pt3dadd( 6.02834, -4.29312, -74.0638, 0.74 ) }
    dend_108 { pt3dadd( 5.49045, -3.91129, -75.3875, 0.88 ) }
    dend_108 { pt3dadd( 5.21405, -3.67844, -76.0665, 1.11 ) }
    dend_108 { pt3dadd( 4.84842, -3.36661, -76.9619, 1.25 ) }
    dend_108 { pt3dadd( 4.36039, -3.00122, -78.2145, 1.62 ) }
    dend_108 { pt3dadd( 3.91843, -2.8006, -79.5621, 1.4 ) }
    dend_108 { pt3dadd( 3.74711, -2.78952, -80.3704, 1.18 ) }
    dend_108 { pt3dadd( 3.62422, -2.87081, -81.5085, 0.66 ) }
    dend_108 { pt3dadd( 3.59683, -2.90579, -82.1091, 0.66 ) }
    dend_108 { pt3dadd( 3.57479, -2.88272, -83.2396, 0.66 ) }
    dend_108 { pt3dadd( 3.54892, -2.72716, -84.4548, 0.81 ) }
    dend_108 { pt3dadd( 3.50105, -2.36644, -86.2534, 0.66 ) }
    dend_108 { pt3dadd( 3.44565, -2.09578, -87.4268, 0.81 ) }
    dend_108 { pt3dadd( 3.37673, -1.82068, -88.6775, 0.66 ) }
    dend_108 { pt3dadd( 3.29258, -1.5316, -90.5989, 0.66 ) }
    dend_108 { pt3dadd( 3.21058, -1.42431, -91.603, 0.52 ) }
    dend_108 { pt3dadd( 3.10322, -1.36333, -92.4586, 0.88 ) }
    dend_108 { pt3dadd( 2.89743, -1.31091, -93.7992, 1.03 ) }
    dend_108 { pt3dadd( 2.66469, -1.29501, -95.3104, 1.4 ) }
    dend_108 { pt3dadd( 2.19102, -1.31543, -98.6632, 0.88 ) }
    dend_108 { pt3dadd( 1.95445, -1.28822, -100.336, 0.52 ) }
    dend_108 { pt3dadd( 1.81946, -1.20792, -101.174, 1.18 ) }
    dend_108 { pt3dadd( 1.71738, -1.09393, -101.713, 1.47 ) }
    dend_108 { pt3dadd( 1.6117, -0.92943, -102.171, 1.47 ) }
    dend_108 { pt3dadd( 1.31751, -0.374801, -103.232, 1.03 ) }
    dend_108 { pt3dadd( 1.11325, 0.205548, -104.063, 1.25 ) }
    dend_108 { pt3dadd( 0.886787, 1.33917, -105.839, 0.96 ) }
    dend_108 { pt3dadd( 0.822088, 1.76742, -106.615, 0.81 ) }
    dend_108 { pt3dadd( 0.77308, 2.14951, -107.44, 1.03 ) }
    dend_108 { pt3dadd( 0.74733, 2.41842, -108.053, 1.03 ) }
    dend_108 { pt3dadd( 0.749005, 3.19383, -109.781, 1.18 ) }
    dend_108 { pt3dadd( 0.839119, 3.8945, -111.333, 0.96 ) }
    dend_108 { pt3dadd( 0.935772, 4.3489, -112.321, 1.33 ) }
    dend_108 { pt3dadd( 1.19491, 5.35921, -114.394, 1.47 ) }
    dend_108 { pt3dadd( 1.40269, 6.22465, -115.954, 1.33 ) }
    dend_108 { pt3dadd( 1.54405, 6.90087, -116.953, 0.52 ) }
    dend_108 { pt3dadd( 1.73944, 8.00692, -118.198, 1.33 ) }
    dend_108 { pt3dadd( 1.82033, 8.5235, -118.62, 1.33 ) }
    dend_108 { pt3dadd( 2.01331, 9.88313, -119.472, 0.88 ) }
    dend_108 { pt3dadd( 2.10717, 11.0227, -119.958, 0.66 ) }
    dend_108 { pt3dadd( 2.13412, 11.7421, -120.187, 0.96 ) }
    dend_108 { pt3dadd( 2.14979, 12.4854, -120.391, 1.18 ) }
    dend_108 { pt3dadd( 2.18801, 13.2852, -120.554, 1.33 ) }
    dend_108 { pt3dadd( 2.33217, 14.4232, -120.796, 0.88 ) }
    dend_108 { pt3dadd( 2.60192, 15.4376, -121.049, 0.52 ) }
    dend_108 { pt3dadd( 3.12378, 16.6309, -121.446, 0.52 ) }
    dend_108 { pt3dadd( 3.70001, 17.523, -121.827, 0.52 ) }
    dend_108 { pt3dadd( 4.22426, 18.0363, -122.138, 1.18 ) }
    dend_108 { pt3dadd( 5.00737, 18.5022, -122.564, 0.96 ) }
    dend_108 { pt3dadd( 5.65184, 18.7038, -122.916, 0.52 ) }
    dend_108 { pt3dadd( 6.18824, 18.7634, -123.27, 0.29 ) }
    dend_108 { pt3dadd( 6.99501, 18.6933, -123.991, 0.29 ) }
    dend_108 { pt3dadd( 7.93453, 18.4446, -125.047, 0.37 ) }
    dend_108 { pt3dadd( 8.37437, 18.2811, -125.666, 0.52 ) }
    dend_108 { pt3dadd( 9.08947, 17.9899, -126.783, 1.25 ) }
    dend_108 { pt3dadd( 9.89767, 17.637, -128.154, 1.55 ) }
    dend_108 { pt3dadd( 10.9961, 17.1432, -130.134, 1.18 ) }
    dend_108 { pt3dadd( 11.4361, 16.9537, -130.96, 0.88 ) }
    dend_108 { pt3dadd( 12.5504, 16.5103, -133.025, 1.11 ) }
    dend_108 { pt3dadd( 12.8768, 16.4064, -133.567, 1.11 ) }
    dend_108 { pt3dadd( 13.2546, 16.334, -134.086, 0.59 ) }
    dend_108 { pt3dadd( 13.9373, 16.3232, -134.812, 0.37 ) }
    dend_108 { pt3dadd( 14.7869, 16.4642, -135.584, 0.74 ) }
    dend_108 { pt3dadd( 15.1185, 16.5779, -135.901, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_108 { pt3dadd( 15.602, 16.8802, -136.452, 0.37 ) }
    dend_108 { pt3dadd( 15.9141, 17.2791, -137.044, 0.37 ) }
    dend_108 { pt3dadd( 15.9486, 17.7347, -137.679, 0.66 ) }
    dend_108 { pt3dadd( 15.6531, 18.3439, -138.703, 0.52 ) }
    dend_108 { pt3dadd( 15.2941, 18.7398, -139.474, 0.52 ) }
    dend_108 { pt3dadd( 14.9351, 19.0282, -140.132, 0.52 ) }
    dend_108 { pt3dadd( 14.7887, 19.1197, -140.38, 0.88 ) }
    dend_108 { pt3dadd( 13.8576, 19.6263, -142.146, 1.11 ) }
    dend_108 { pt3dadd( 13.0349, 20.0377, -143.92, 0.44 ) }
    dend_108 { pt3dadd( 12.8691, 20.1256, -144.315, 0.59 ) }
    dend_108 { pt3dadd( 12.3861, 20.4316, -145.584, 1.25 ) }
    dend_108 { pt3dadd( 12.0879, 20.6524, -146.445, 1.4 ) }
    dend_108 { pt3dadd( 11.0002, 21.5351, -149.743, 1.18 ) }
    dend_108 { pt3dadd( 10.3533, 22.0696, -151.804, 0.52 ) }
    dend_108 { pt3dadd( 10.19, 22.1938, -152.358, 0.52 ) }
    dend_108 { pt3dadd( 9.90941, 22.3798, -153.309, 0.44 ) }
    dend_108 { pt3dadd( 9.41397, 22.6629, -154.907, 0.66 ) }
    dend_108 { pt3dadd( 8.98235, 22.886, -156.196, 0.88 ) }
    dend_108 { pt3dadd( 8.54106, 23.0967, -157.374, 0.66 ) }
    dend_108 { pt3dadd( 8.12386, 23.347, -158.57, 0.44 ) }
    dend_108 { pt3dadd( 7.83562, 23.5812, -159.446, 0.37 ) }
    dend_108 { pt3dadd( 7.68139, 23.7901, -159.941, 0.52 ) }
    dend_108 { pt3dadd( 7.57852, 24.1235, -160.315, 0.66 ) }
    dend_108 { pt3dadd( 7.48974, 24.8279, -160.845, 0.66 ) }
    dend_108 { pt3dadd( 7.39179, 26.0796, -161.625, 0.66 ) }
    dend_108 { pt3dadd( 7.37019, 26.8338, -162.036, 0.29 ) }
    dend_108 { pt3dadd( 7.37796, 27.6823, -162.496, 0.29 ) }
    dend_108 { pt3dadd( 7.40026, 28.7239, -163.075, 0.88 ) }
    dend_108 { pt3dadd( 7.42738, 30.081, -163.802, 0.37 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 29/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 9.50594, -0.692427, -39.5221, 1.84 ) }
    dend_87 { pt3dadd( 10.4544, 1.32696, -40.7759, 1.84 ) }
    dend_87 { pt3dadd( 11.1547, 2.8025, -41.6661, 1.25 ) }
    dend_87 { pt3dadd( 11.505, 3.63488, -42.1613, 1.25 ) }
    dend_87 { pt3dadd( 11.9397, 4.91021, -42.8892, 1.18 ) }
    dend_87 { pt3dadd( 12.2082, 6.0398, -43.5379, 1.18 ) }
    dend_87 { pt3dadd( 12.3911, 7.24269, -44.2585, 1.33 ) }
    dend_87 { pt3dadd( 12.4564, 8.22886, -44.8407, 1.69 ) }
    dend_87 { pt3dadd( 12.3884, 9.13194, -45.5033, 1.69 ) }
    dend_87 { pt3dadd( 12.2195, 9.91334, -46.1477, 1.55 ) }
    dend_87 { pt3dadd( 11.7992, 11.0447, -47.2538, 1.33 ) }
    dend_87 { pt3dadd( 11.3329, 11.9412, -48.5915, 1.25 ) }
    dend_87 { pt3dadd( 10.9915, 12.455, -49.6248, 1.47 ) }
    dend_87 { pt3dadd( 10.4093, 13.2574, -51.4754, 1.92 ) }
    dend_87 { pt3dadd( 10.0028, 13.8195, -52.8242, 2.28 ) }
    dend_87 { pt3dadd( 9.451, 14.6213, -54.7496, 2.73 ) }
    dend_87 { pt3dadd( 8.15958, 16.6596, -59.4243, 1.33 ) }
    dend_87 { pt3dadd( 7.83768, 17.24, -60.6682, 1.18 ) }
    dend_87 { pt3dadd( 7.6406, 17.783, -61.7426, 1.18 ) }
    dend_87 { pt3dadd( 7.54071, 18.3757, -62.7911, 1.4 ) }
    dend_87 { pt3dadd( 7.55128, 18.9707, -63.7849, 1.62 ) }
    dend_87 { pt3dadd( 7.7761, 20.059, -65.5001, 1.69 ) }
    dend_87 { pt3dadd( 8.23766, 21.2196, -67.315, 1.69 ) }
    dend_87 { pt3dadd( 9.39434, 23.2825, -70.9139, 1.33 ) }
    dend_87 { pt3dadd( 10.0388, 24.24, -72.7844, 1.55 ) }
    dend_87 { pt3dadd( 10.6251, 24.9571, -74.3557, 1.92 ) }
    dend_87 { pt3dadd( 11.0844, 25.4132, -75.4723, 2.21 ) }
    dend_87 { pt3dadd( 11.5408, 25.7558, -76.439, 2.43 ) }
    dend_87 { pt3dadd( 11.5736, 25.7739, -76.4968, 2.43 ) }
    // Section: dend_39, id: dend_39, parent: dend_23 (entry count 58/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.76976, 44.2341, 24.7447, 0.88 ) }
    dend_39 { pt3dadd( 6.21373, 43.541, 24.7237, 0.88 ) }
    dend_39 { pt3dadd( 6.88358, 43.1998, 24.7672, 0.88 ) }
    dend_39 { pt3dadd( 8.06231, 42.5955, 24.972, 0.88 ) }
    dend_39 { pt3dadd( 8.96281, 42.1681, 25.1961, 0.88 ) }
    dend_39 { pt3dadd( 11.2226, 41.1872, 25.9183, 0.74 ) }
    dend_39 { pt3dadd( 12.3262, 40.7595, 26.3245, 0.96 ) }
    dend_39 { pt3dadd( 13.1637, 40.4537, 26.7108, 1.11 ) }
    dend_39 { pt3dadd( 14.0982, 40.2488, 27.288, 1.25 ) }
    dend_39 { pt3dadd( 14.7875, 40.2058, 27.8356, 1.77 ) }
    dend_39 { pt3dadd( 15.2574, 40.2809, 28.3227, 1.92 ) }
    dend_39 { pt3dadd( 15.5331, 40.3993, 28.7012, 2.06 ) }
    dend_39 { pt3dadd( 15.9671, 40.6716, 29.245, 1.55 ) }
    dend_39 { pt3dadd( 16.6314, 41.1716, 29.9359, 1.25 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 72/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 4.76976, 44.2341, 24.7447, 0.96 ) }
    dend_24 { pt3dadd( 6.27205, 45.4495, 23.9897, 0.96 ) }
    dend_24 { pt3dadd( 7.39086, 46.2721, 23.5533, 0.88 ) }
    dend_24 { pt3dadd( 8.25443, 46.8563, 23.2842, 0.88 ) }
    dend_24 { pt3dadd( 9.39539, 47.5676, 23.0016, 1.18 ) }
    dend_24 { pt3dadd( 10.0731, 47.9621, 22.8709, 1.18 ) }
    dend_24 { pt3dadd( 11.0402, 48.5411, 22.696, 1.18 ) }
    dend_24 { pt3dadd( 11.6863, 48.9134, 22.6417, 1.4 ) }
    dend_24 { pt3dadd( 12.1589, 49.2339, 22.6261, 1.4 ) }
    dend_24 { pt3dadd( 12.6198, 49.691, 22.5951, 0.81 ) }
    dend_24 { pt3dadd( 12.9621, 50.3265, 22.5319, 0.81 ) }
    dend_24 { pt3dadd( 13.1923, 51.6029, 22.2782, 0.66 ) }
    dend_24 { pt3dadd( 13.0959, 52.7905, 21.978, 0.66 ) }
    dend_24 { pt3dadd( 12.9096, 53.6982, 21.7307, 0.74 ) }
    dend_24 { pt3dadd( 12.6848, 54.6065, 21.4592, 0.74 ) }
    dend_24 { pt3dadd( 12.4416, 55.606, 21.1273, 0.59 ) }
    dend_24 { pt3dadd( 12.2235, 56.6342, 20.7323, 0.59 ) }
    dend_24 { pt3dadd( 12.0589, 57.799, 20.2597, 0.81 ) }
    dend_24 { pt3dadd( 12.0364, 58.6733, 19.8943, 1.03 ) }
    dend_24 { pt3dadd( 12.1257, 59.8084, 19.4778, 1.03 ) }
    dend_24 { pt3dadd( 12.3311, 61.1714, 19.0877, 0.74 ) }
    dend_24 { pt3dadd( 12.57, 62.3674, 18.8228, 0.52 ) }
    dend_24 { pt3dadd( 12.7686, 63.3722, 18.6863, 0.52 ) }
    dend_24 { pt3dadd( 12.8882, 64.2264, 18.6424, 0.52 ) }
    dend_24 { pt3dadd( 12.9653, 65.5446, 18.6906, 0.88 ) }
    dend_24 { pt3dadd( 12.9684, 66.6226, 18.7884, 1.18 ) }
    dend_24 { pt3dadd( 12.9688, 67.1886, 18.855, 1.18 ) }
    dend_24 { pt3dadd( 13.0451, 68.2429, 18.9719, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( 13.3587, 69.6046, 19.0406, 0.52 ) }
    dend_24 { pt3dadd( 13.7349, 70.3468, 19.0351, 0.52 ) }
    dend_24 { pt3dadd( 14.4133, 71.2227, 18.9884, 0.66 ) }
    dend_24 { pt3dadd( 15.2113, 72.0597, 18.9278, 0.66 ) }
    dend_24 { pt3dadd( 16.2103, 73.0299, 18.861, 0.66 ) }
    dend_24 { pt3dadd( 17.0717, 73.846, 18.8053, 0.66 ) }
    dend_24 { pt3dadd( 18.1475, 74.9313, 18.7497, 1.11 ) }
    dend_24 { pt3dadd( 18.4576, 75.3239, 18.7354, 1.11 ) }
    dend_24 { pt3dadd( 18.7663, 75.931, 18.7234, 1.11 ) }
    dend_24 { pt3dadd( 19.0243, 77.0763, 18.6748, 0.74 ) }
    dend_24 { pt3dadd( 19.017, 77.9565, 18.6097, 0.74 ) }
    dend_24 { pt3dadd( 18.8634, 78.921, 18.4974, 0.88 ) }
    dend_24 { pt3dadd( 18.6524, 79.7697, 18.3559, 1.11 ) }
    dend_24 { pt3dadd( 18.4166, 80.6808, 18.1589, 1.11 ) }
    dend_24 { pt3dadd( 18.2636, 81.3381, 17.9969, 0.74 ) }
    dend_24 { pt3dadd( 18.1132, 82.2099, 17.7587, 0.74 ) }
    dend_24 { pt3dadd( 18.0546, 83.1166, 17.4951, 0.59 ) }
    dend_24 { pt3dadd( 18.1515, 84.2346, 17.1559, 0.44 ) }
    dend_24 { pt3dadd( 18.4431, 85.2492, 16.847, 0.44 ) }
    dend_24 { pt3dadd( 18.8879, 86.1243, 16.5956, 0.66 ) }
    dend_24 { pt3dadd( 19.3078, 86.751, 16.48, 0.81 ) }
    dend_24 { pt3dadd( 19.7402, 87.295, 16.4393, 0.81 ) }
    dend_24 { pt3dadd( 20.3252, 87.9793, 16.463, 0.81 ) }
    dend_24 { pt3dadd( 20.9984, 88.7723, 16.5724, 0.52 ) }
    dend_24 { pt3dadd( 21.5466, 89.5028, 16.7134, 0.52 ) }
    dend_24 { pt3dadd( 22.3833, 90.8946, 16.9801, 1.11 ) }
    dend_24 { pt3dadd( 22.6804, 91.552, 17.116, 1.11 ) }
    dend_24 { pt3dadd( 22.89, 92.1305, 17.2433, 1.11 ) }
    dend_24 { pt3dadd( 23.0939, 92.7664, 17.3872, 1.11 ) }
    dend_24 { pt3dadd( 23.4019, 93.714, 17.5336, 0.81 ) }
    dend_24 { pt3dadd( 23.7661, 94.833, 17.6292, 0.81 ) }
    dend_24 { pt3dadd( 24.2689, 96.498, 17.653, 0.66 ) }
    dend_24 { pt3dadd( 24.5904, 97.6913, 17.5971, 0.74 ) }
    dend_24 { pt3dadd( 24.9038, 99.062, 17.4668, 0.66 ) }
    dend_24 { pt3dadd( 25.3188, 101.334, 17.11, 0.81 ) }
    dend_24 { pt3dadd( 25.4678, 102.709, 16.8097, 0.81 ) }
    dend_24 { pt3dadd( 25.4584, 104.208, 16.3308, 0.81 ) }
    dend_24 { pt3dadd( 25.2791, 105.467, 15.7497, 0.81 ) }
    dend_24 { pt3dadd( 25.0801, 106.218, 15.3126, 1.03 ) }
    dend_24 { pt3dadd( 24.8551, 106.862, 14.8241, 1.03 ) }
    dend_24 { pt3dadd( 24.5871, 107.572, 14.2163, 0.66 ) }
    dend_24 { pt3dadd( 24.2876, 108.541, 13.3053, 0.96 ) }
    dend_24 { pt3dadd( 24.1169, 109.409, 12.5037, 0.96 ) }
    dend_24 { pt3dadd( 24.0513, 110.134, 11.9134, 1.03 ) }
    dend_24 { pt3dadd( 24.0295, 112.02, 10.4825, 0.59 ) }
    dend_24 { pt3dadd( 24.0468, 112.936, 9.7802, 0.66 ) }
    dend_24 { pt3dadd( 24.0536, 113.476, 9.33023, 0.66 ) }
    dend_24 { pt3dadd( 24.0297, 114.337, 8.56796, 0.66 ) }
    dend_24 { pt3dadd( 23.9504, 115.102, 7.82946, 0.66 ) }
    dend_24 { pt3dadd( 23.7188, 116.301, 6.50883, 0.66 ) }
    dend_24 { pt3dadd( 23.3164, 117.622, 4.94083, 0.66 ) }
    dend_24 { pt3dadd( 22.9115, 118.61, 3.68998, 0.81 ) }
    dend_24 { pt3dadd( 22.5135, 119.39, 2.67508, 0.81 ) }
    dend_24 { pt3dadd( 22.0405, 120.148, 1.68702, 0.81 ) }
    dend_24 { pt3dadd( 21.2243, 121.317, 0.289009, 0.59 ) }
    dend_24 { pt3dadd( 20.6287, 122.169, -0.523777, 0.44 ) }
    dend_24 { pt3dadd( 19.9948, 123.099, -1.17996, 0.44 ) }
    dend_24 { pt3dadd( 19.5658, 123.726, -1.51849, 0.66 ) }
    dend_24 { pt3dadd( 18.9876, 124.558, -1.86901, 0.66 ) }
    dend_24 { pt3dadd( 18.3254, 125.514, -2.18049, 0.66 ) }
    dend_24 { pt3dadd( 17.5924, 126.58, -2.45903, 0.88 ) }
    dend_24 { pt3dadd( 16.8275, 127.74, -2.78532, 0.81 ) }
    dend_24 { pt3dadd( 16.2495, 128.657, -3.05709, 0.81 ) }
    dend_24 { pt3dadd( 15.7586, 129.493, -3.30562, 0.66 ) }
    dend_24 { pt3dadd( 15.4616, 130.03, -3.46436, 0.81 ) }
    dend_24 { pt3dadd( 15.0341, 130.897, -3.70554, 0.81 ) }
    dend_24 { pt3dadd( 14.7544, 131.632, -3.87983, 0.74 ) }
    dend_24 { pt3dadd( 14.527, 132.662, -4.0752, 0.59 ) }
    dend_24 { pt3dadd( 14.3803, 133.84, -4.25134, 0.59 ) }
    dend_24 { pt3dadd( 14.3124, 134.5, -4.35351, 0.59 ) }
    dend_24 { pt3dadd( 14.1657, 135.765, -4.64869, 0.59 ) }
    dend_24 { pt3dadd( 13.9585, 137.195, -5.12505, 0.59 ) }
    dend_24 { pt3dadd( 13.7696, 138.171, -5.53942, 0.59 ) }
    dend_24 { pt3dadd( 13.5062, 139.144, -6.07212, 0.66 ) }
    dend_24 { pt3dadd( 13.0479, 140.305, -6.81114, 0.66 ) }
    dend_24 { pt3dadd( 12.2475, 141.996, -8.03438, 0.96 ) }
    dend_24 { pt3dadd( 11.7138, 142.891, -8.79393, 1.11 ) }
    dend_24 { pt3dadd( 11.402, 143.324, -9.22431, 0.81 ) }
    dend_24 { pt3dadd( 10.9474, 143.887, -9.84757, 0.59 ) }
    dend_24 { pt3dadd( 10.0129, 145.035, -11.1668, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_0 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.84195, -163.237, 10.9375, 0.29 ) }
    dend_18 { pt3dadd( -3.16253, -162.425, 10.4868, 0.29 ) }
    dend_18 { pt3dadd( -2.78509, -161.874, 10.2237, 0.29 ) }
    dend_18 { pt3dadd( -2.21247, -160.866, 9.82555, 0.29 ) }
    dend_18 { pt3dadd( -1.67926, -159.752, 9.47599, 0.29 ) }
    dend_18 { pt3dadd( -1.31554, -158.866, 9.24062, 0.44 ) }
    dend_18 { pt3dadd( -0.96416, -157.857, 9.01868, 0.44 ) }
    dend_18 { pt3dadd( -0.698965, -156.743, 8.85753, 0.37 ) }
    dend_18 { pt3dadd( -0.468649, -155.493, 8.71666, 0.37 ) }
    dend_18 { pt3dadd( -0.27242, -153.807, 8.59443, 0.59 ) }
    dend_18 { pt3dadd( -0.212008, -152.908, 8.56348, 0.59 ) }
    dend_18 { pt3dadd( -0.18146, -151.956, 8.55183, 0.37 ) }
    dend_18 { pt3dadd( -0.19253, -151.142, 8.57034, 0.37 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.84195, -163.237, 10.9375, 0.52 ) }
    dend_1 { pt3dadd( -2.77054, -164.931, 11.4196, 0.52 ) }
    dend_1 { pt3dadd( -1.72874, -166.749, 11.8253, 0.52 ) }
    dend_1 { pt3dadd( -1.17373, -167.803, 12.0118, 0.52 ) }
    dend_1 { pt3dadd( -0.525273, -169.186, 12.2334, 0.52 ) }
    dend_1 { pt3dadd( 0.234839, -170.903, 12.3735, 0.74 ) }
    dend_1 { pt3dadd( 0.75891, -172.181, 12.3941, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( 1.08009, -173.143, 12.3368, 1.18 ) }
    dend_1 { pt3dadd( 1.31332, -174.135, 12.225, 1.33 ) }
    dend_1 { pt3dadd( 1.48844, -175.5, 12.0681, 1.47 ) }
    dend_1 { pt3dadd( 1.52107, -178.112, 11.7967, 0.74 ) }
    dend_1 { pt3dadd( 1.25919, -180.168, 11.6637, 0.74 ) }
    dend_1 { pt3dadd( 0.910896, -181.432, 11.6826, 0.59 ) }
    dend_1 { pt3dadd( 0.467058, -182.683, 11.8199, 0.59 ) }
    dend_1 { pt3dadd( -0.155592, -184.282, 12.1253, 0.59 ) }
    dend_1 { pt3dadd( -0.579279, -185.428, 12.4227, 0.59 ) }
    dend_1 { pt3dadd( -0.95863, -186.594, 12.8059, 0.59 ) }
    dend_1 { pt3dadd( -1.34147, -188.293, 13.3439, 0.52 ) }
    dend_1 { pt3dadd( -1.52405, -190.243, 13.8535, 0.59 ) }
    dend_1 { pt3dadd( -1.50083, -191.515, 14.1269, 0.59 ) }
    dend_1 { pt3dadd( -1.3166, -193.352, 14.4335, 0.88 ) }
    dend_1 { pt3dadd( -1.1031, -194.748, 14.6139, 1.25 ) }
    dend_1 { pt3dadd( -0.908354, -195.712, 14.7121, 1.25 ) }
    dend_1 { pt3dadd( -0.658053, -196.856, 14.828, 1.25 ) }
    dend_1 { pt3dadd( -0.408457, -198.011, 14.9911, 0.96 ) }
    dend_1 { pt3dadd( -0.114997, -199.271, 15.2315, 0.96 ) }
    dend_1 { pt3dadd( 0.292879, -200.92, 15.6361, 0.74 ) }
    dend_1 { pt3dadd( 0.775028, -202.876, 16.1855, 0.74 ) }
    dend_1 { pt3dadd( 1.15878, -204.507, 16.6715, 0.66 ) }
    dend_1 { pt3dadd( 1.57359, -206.389, 17.2501, 0.66 ) }
    dend_1 { pt3dadd( 1.85295, -207.798, 17.6874, 0.66 ) }
    dend_1 { pt3dadd( 2.16719, -209.773, 18.2965, 0.59 ) }
    dend_1 { pt3dadd( 2.26816, -210.871, 18.6169, 0.81 ) }
    dend_1 { pt3dadd( 2.2634, -212.207, 18.9479, 0.81 ) }
    dend_1 { pt3dadd( 2.12246, -213.722, 19.2653, 0.81 ) }
    dend_1 { pt3dadd( 1.84161, -215.095, 19.5088, 0.66 ) }
    dend_1 { pt3dadd( 1.45156, -216.259, 19.7107, 0.66 ) }
    dend_1 { pt3dadd( 0.854925, -217.523, 19.9699, 0.66 ) }
    dend_1 { pt3dadd( 0.160638, -218.771, 20.2697, 0.74 ) }
    dend_1 { pt3dadd( -0.49049, -219.894, 20.5732, 0.88 ) }
    dend_1 { pt3dadd( -1.03617, -220.944, 20.8741, 0.88 ) }
    dend_1 { pt3dadd( -1.45398, -222.01, 21.1916, 0.74 ) }
    dend_1 { pt3dadd( -1.86789, -224.042, 21.8488, 0.74 ) }
    dend_1 { pt3dadd( -1.91808, -225.059, 22.2134, 0.74 ) }
    dend_1 { pt3dadd( -1.79715, -226.846, 22.8661, 0.59 ) }
    dend_1 { pt3dadd( -1.49301, -228.841, 23.5746, 0.59 ) }
    dend_1 { pt3dadd( -1.18827, -230.211, 24.0572, 0.59 ) }
    dend_1 { pt3dadd( -0.747292, -231.988, 24.642, 0.59 ) }
    dend_1 { pt3dadd( -0.540494, -232.901, 24.9025, 0.96 ) }
    dend_1 { pt3dadd( -0.457277, -233.841, 25.1884, 0.96 ) }
    dend_1 { pt3dadd( -0.572776, -234.69, 25.5056, 0.96 ) }
    dend_1 { pt3dadd( -0.923309, -235.975, 25.9981, 0.52 ) }
    dend_1 { pt3dadd( -1.40256, -237.175, 26.4628, 0.52 ) }
    dend_1 { pt3dadd( -1.96187, -238.238, 26.8703, 0.52 ) }
    dend_1 { pt3dadd( -3.27304, -240.378, 27.7492, 0.74 ) }
    dend_1 { pt3dadd( -4.56602, -242.074, 28.6184, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.27086, 40.3241, 0.960996, 0.181933 ) }
    axon_1 { pt3dadd( 8.63644, 55.1364, 0.960996, 0.181933 ) }
    axon_1 { pt3dadd( 11.002, 69.9487, 0.960996, 0.181933 ) }
    // Section: dend_105, id: dend_105, parent: dend_87 (entry count 52/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 11.5736, 25.7739, -76.4968, 1.47 ) }
    dend_105 { pt3dadd( 10.4418, 25.8281, -78.886, 1.47 ) }
    dend_105 { pt3dadd( 8.19889, 26.3765, -83.057, 1.03 ) }
    dend_105 { pt3dadd( 7.51982, 26.6771, -84.4031, 1.03 ) }
    dend_105 { pt3dadd( 7.07546, 27.0474, -85.7281, 1.03 ) }
    dend_105 { pt3dadd( 6.72502, 27.5165, -87.2323, 0.81 ) }
    dend_105 { pt3dadd( 6.5777, 27.8539, -88.2833, 0.66 ) }
    dend_105 { pt3dadd( 6.57488, 28.5506, -90.0505, 1.03 ) }
    dend_105 { pt3dadd( 6.86974, 29.3212, -91.8382, 1.03 ) }
    dend_105 { pt3dadd( 8.3074, 31.1898, -96.546, 0.96 ) }
    dend_105 { pt3dadd( 8.91559, 31.6522, -97.9327, 0.96 ) }
    dend_105 { pt3dadd( 9.90445, 32.0671, -99.7173, 0.74 ) }
    dend_105 { pt3dadd( 10.6564, 32.2206, -101.029, 0.59 ) }
    dend_105 { pt3dadd( 11.1509, 32.2816, -101.875, 0.81 ) }
    dend_105 { pt3dadd( 11.7361, 32.3415, -102.899, 1.03 ) }
    dend_105 { pt3dadd( 12.5928, 32.4823, -104.585, 1.18 ) }
    dend_105 { pt3dadd( 13.4795, 32.8273, -107.239, 1.47 ) }
    dend_105 { pt3dadd( 14.3616, 33.5611, -111.811, 1.18 ) }
    dend_105 { pt3dadd( 14.5159, 33.8707, -113.598, 1.11 ) }
    dend_105 { pt3dadd( 14.5262, 34.0423, -114.743, 1.11 ) }
    dend_105 { pt3dadd( 14.2981, 34.4924, -118.295, 1.11 ) }
    dend_105 { pt3dadd( 13.8559, 34.8134, -121.458, 0.81 ) }
    dend_105 { pt3dadd( 13.6315, 34.8526, -122.496, 0.81 ) }
    dend_105 { pt3dadd( 13.3886, 34.8251, -123.505, 1.11 ) }
    dend_105 { pt3dadd( 12.3633, 34.5316, -127.981, 0.81 ) }
    dend_105 { pt3dadd( 12.0222, 34.4252, -129.569, 0.81 ) }
    dend_105 { pt3dadd( 11.5702, 34.3264, -131.545, 0.96 ) }
    dend_105 { pt3dadd( 11.0864, 34.2387, -133.848, 0.81 ) }
    dend_105 { pt3dadd( 10.6288, 34.2371, -136.275, 0.52 ) }
    dend_105 { pt3dadd( 10.4149, 34.3043, -137.373, 0.52 ) }
    dend_105 { pt3dadd( 10.0857, 34.6079, -138.83, 0.74 ) }
    dend_105 { pt3dadd( 9.68598, 35.507, -141.651, 1.33 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 84/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 11.5736, 25.7739, -76.4968, 2.43 ) }
    dend_88 { pt3dadd( 11.2249, 26.1597, -76.7721, 2.43 ) }
    dend_88 { pt3dadd( 10.0445, 27.2643, -77.5439, 0.88 ) }
    dend_88 { pt3dadd( 9.03897, 28.1362, -78.1103, 0.88 ) }
    dend_88 { pt3dadd( 8.36762, 28.7381, -78.4499, 0.88 ) }
    dend_88 { pt3dadd( 7.6305, 29.4602, -78.8075, 0.74 ) }
    dend_88 { pt3dadd( 6.85021, 30.3483, -79.2201, 0.88 ) }
    dend_88 { pt3dadd( 6.38579, 30.9449, -79.4827, 1.03 ) }
    dend_88 { pt3dadd( 5.81154, 31.8616, -79.8746, 1.03 ) }
    dend_88 { pt3dadd( 5.29286, 33.0812, -80.3431, 1.92 ) }
    dend_88 { pt3dadd( 5.05526, 33.8432, -80.6328, 1.55 ) }
    dend_88 { pt3dadd( 4.69208, 35.205, -81.1498, 1.11 ) }
    dend_88 { pt3dadd( 4.35055, 36.4768, -81.6323, 0.96 ) }
    dend_88 { pt3dadd( 3.98142, 37.6069, -82.1221, 0.96 ) }
    dend_88 { pt3dadd( 3.65425, 38.3666, -82.4903, 0.96 ) }
    dend_88 { pt3dadd( 3.30278, 38.9434, -82.8166, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_88 { pt3dadd( 2.69244, 39.6809, -83.2685, 0.96 ) }
    dend_88 { pt3dadd( 2.0914, 40.26, -83.6344, 0.96 ) }
    dend_88 { pt3dadd( 1.16111, 41.0472, -84.1455, 0.88 ) }
    dend_88 { pt3dadd( 0.488559, 41.5653, -84.5168, 1.33 ) }
    dend_88 { pt3dadd( -0.0775443, 42.0262, -84.8761, 1.55 ) }
    dend_88 { pt3dadd( -0.407337, 42.3458, -85.1267, 1.77 ) }
    dend_88 { pt3dadd( -0.7734, 42.8199, -85.479, 1.77 ) }
    dend_88 { pt3dadd( -0.852182, 42.9556, -85.5708, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 8/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 16.6314, 41.1716, 29.9359, 0.29 ) }
    dend_51 { pt3dadd( 16.6295, 41.0371, 30.6478, 0.29 ) }
    dend_51 { pt3dadd( 16.7342, 40.799, 32.018, 0.29 ) }
    dend_51 { pt3dadd( 16.8477, 40.5676, 33.0966, 0.29 ) }
    dend_51 { pt3dadd( 16.975, 40.3432, 33.9844, 0.29 ) }
    dend_51 { pt3dadd( 17.2629, 40.0021, 35.6299, 0.29 ) }
    dend_51 { pt3dadd( 17.5282, 39.7968, 36.9086, 0.29 ) }
    dend_51 { pt3dadd( 17.8671, 39.5831, 38.3517, 0.29 ) }
    dend_51 { pt3dadd( 18.0558, 39.4743, 39.0177, 0.66 ) }
    dend_51 { pt3dadd( 18.3329, 39.3351, 39.8408, 0.29 ) }
    dend_51 { pt3dadd( 19.0453, 39.1609, 41.6312, 0.29 ) }
    dend_51 { pt3dadd( 19.3544, 39.1893, 42.3301, 0.52 ) }
    dend_51 { pt3dadd( 19.791, 39.3195, 43.2923, 0.22 ) }
    dend_51 { pt3dadd( 20.1065, 39.4766, 43.9602, 0.22 ) }
    dend_51 { pt3dadd( 20.4178, 39.684, 44.5938, 0.22 ) }
    dend_51 { pt3dadd( 20.9775, 40.1386, 45.6924, 0.22 ) }
    dend_51 { pt3dadd( 21.5549, 40.6515, 46.7955, 0.22 ) }
    dend_51 { pt3dadd( 21.8516, 40.9673, 47.3908, 0.29 ) }
    dend_51 { pt3dadd( 22.242, 41.4982, 48.2096, 0.29 ) }
    dend_51 { pt3dadd( 22.4599, 41.8553, 48.711, 0.29 ) }
    dend_51 { pt3dadd( 22.5814, 42.0735, 49.0237, 0.44 ) }
    dend_51 { pt3dadd( 22.9148, 42.7273, 50.0499, 0.22 ) }
    dend_51 { pt3dadd( 23.1217, 43.1883, 50.7243, 0.37 ) }
    dend_51 { pt3dadd( 23.3126, 43.6541, 51.4224, 0.66 ) }
    dend_51 { pt3dadd( 23.5407, 44.2596, 52.3504, 0.81 ) }
    dend_51 { pt3dadd( 23.7417, 44.8456, 53.1843, 0.44 ) }
    dend_51 { pt3dadd( 23.8877, 45.2961, 53.8346, 0.52 ) }
    dend_51 { pt3dadd( 25.6667, 48.6281, 60.7724, 0.52 ) }
    dend_51 { pt3dadd( 26.532, 52.6343, 67.5533, 0.52 ) }
    dend_51 { pt3dadd( 28.3427, 56.31, 74.3243, 0.52 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 16.6314, 41.1716, 29.9359, 1.47 ) }
    dend_40 { pt3dadd( 16.647, 41.9712, 30.3269, 1.47 ) }
    dend_40 { pt3dadd( 16.668, 42.9764, 30.795, 0.66 ) }
    dend_40 { pt3dadd( 16.7152, 43.7781, 31.161, 0.59 ) }
    dend_40 { pt3dadd( 16.7917, 44.4632, 31.4932, 0.59 ) }
    dend_40 { pt3dadd( 16.8811, 45.2641, 31.8814, 0.74 ) }
    dend_40 { pt3dadd( 16.9472, 45.8572, 32.169, 0.88 ) }
    dend_40 { pt3dadd( 16.9738, 46.2167, 32.3214, 1.11 ) }
    dend_40 { pt3dadd( 16.9853, 46.7557, 32.5745, 1.33 ) }
    dend_40 { pt3dadd( 17.0378, 47.2816, 32.8079, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 10.0129, 145.035, -11.1668, 0.37 ) }
    dend_36 { pt3dadd( 9.78861, 146.194, -11.3512, 0.37 ) }
    dend_36 { pt3dadd( 9.69832, 146.928, -11.4677, 0.44 ) }
    dend_36 { pt3dadd( 9.64508, 147.973, -11.6155, 0.44 ) }
    dend_36 { pt3dadd( 9.65949, 148.923, -11.7491, 0.44 ) }
    dend_36 { pt3dadd( 9.76586, 150.469, -11.9524, 0.52 ) }
    dend_36 { pt3dadd( 9.87545, 151.492, -12.0371, 0.52 ) }
    dend_36 { pt3dadd( 9.97381, 151.991, -12.0494, 0.66 ) }
    dend_36 { pt3dadd( 10.3169, 153.192, -12.0068, 0.66 ) }
    dend_36 { pt3dadd( 10.6822, 154.22, -11.9084, 0.81 ) }
    dend_36 { pt3dadd( 10.9699, 154.925, -11.7883, 0.88 ) }
    dend_36 { pt3dadd( 11.4989, 156.001, -11.562, 0.96 ) }
    dend_36 { pt3dadd( 11.9647, 156.82, -11.3966, 0.96 ) }
    dend_36 { pt3dadd( 12.6352, 157.802, -11.2716, 0.59 ) }
    dend_36 { pt3dadd( 13.3283, 158.692, -11.2469, 0.44 ) }
    dend_36 { pt3dadd( 13.8485, 159.346, -11.307, 0.44 ) }
    dend_36 { pt3dadd( 14.8409, 160.659, -11.5857, 0.66 ) }
    dend_36 { pt3dadd( 15.1647, 161.146, -11.7421, 0.66 ) }
    dend_36 { pt3dadd( 15.9214, 162.554, -12.3122, 0.44 ) }
    dend_36 { pt3dadd( 16.289, 163.547, -12.7537, 0.44 ) }
    dend_36 { pt3dadd( 16.5812, 164.796, -13.2896, 0.59 ) }
    dend_36 { pt3dadd( 16.6918, 165.657, -13.6067, 0.59 ) }
    dend_36 { pt3dadd( 16.7671, 166.847, -13.945, 0.37 ) }
    dend_36 { pt3dadd( 16.8372, 167.998, -14.2194, 0.37 ) }
    dend_36 { pt3dadd( 16.9395, 169.438, -14.492, 0.52 ) }
    dend_36 { pt3dadd( 17.0902, 170.636, -14.6948, 0.52 ) }
    dend_36 { pt3dadd( 17.3649, 172.25, -14.9364, 0.52 ) }
    dend_36 { pt3dadd( 17.6273, 173.676, -15.1346, 0.44 ) }
    dend_36 { pt3dadd( 17.8756, 175.184, -15.332, 0.66 ) }
    dend_36 { pt3dadd( 17.9326, 175.728, -15.3991, 0.88 ) }
    dend_36 { pt3dadd( 17.9795, 177.087, -15.5815, 0.52 ) }
    dend_36 { pt3dadd( 17.9538, 177.95, -15.7074, 0.44 ) }
    dend_36 { pt3dadd( 17.8525, 179.339, -15.9016, 0.44 ) }
    dend_36 { pt3dadd( 17.7807, 180.737, -16.05, 0.66 ) }
    dend_36 { pt3dadd( 17.8061, 181.678, -16.1022, 0.96 ) }
    dend_36 { pt3dadd( 17.9222, 182.684, -16.1243, 0.96 ) }
    dend_36 { pt3dadd( 18.0994, 183.505, -16.0894, 0.96 ) }
    dend_36 { pt3dadd( 18.535, 185.015, -15.9567, 0.37 ) }
    dend_36 { pt3dadd( 18.9795, 186.496, -15.7948, 0.29 ) }
    dend_36 { pt3dadd( 19.4343, 187.792, -15.6237, 0.44 ) }
    dend_36 { pt3dadd( 19.6755, 188.46, -15.5267, 0.44 ) }
    dend_36 { pt3dadd( 20.0958, 189.774, -15.3323, 0.37 ) }
    dend_36 { pt3dadd( 20.2753, 190.455, -15.2288, 0.37 ) }
    dend_36 { pt3dadd( 20.5576, 192.53, -14.9146, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 92/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.0129, 145.035, -11.1668, 0.52 ) }
    dend_25 { pt3dadd( 9.14876, 145.161, -11.918, 0.52 ) }
    dend_25 { pt3dadd( 8.23651, 145.504, -12.8027, 0.44 ) }
    dend_25 { pt3dadd( 7.90796, 145.696, -13.1513, 0.37 ) }
    dend_25 { pt3dadd( 7.65691, 145.864, -13.4184, 0.37 ) }
    dend_25 { pt3dadd( 7.18626, 146.179, -13.8973, 0.59 ) }
    dend_25 { pt3dadd( 6.97871, 146.299, -14.1141, 0.66 ) }
    dend_25 { pt3dadd( 6.63157, 146.501, -14.5381, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( 6.30253, 146.655, -15.0118, 0.59 ) }
    dend_25 { pt3dadd( 6.00931, 146.748, -15.4789, 0.59 ) }
    dend_25 { pt3dadd( 5.71855, 146.82, -16.023, 0.59 ) }
    dend_25 { pt3dadd( 5.2974, 146.926, -16.9363, 0.44 ) }
    dend_25 { pt3dadd( 4.91089, 147.062, -17.8583, 0.44 ) }
    dend_25 { pt3dadd( 4.6136, 147.218, -18.6554, 0.44 ) }
    dend_25 { pt3dadd( 4.41656, 147.347, -19.272, 0.44 ) }
    dend_25 { pt3dadd( 4.18405, 147.577, -20.1793, 0.59 ) }
    dend_25 { pt3dadd( 4.05726, 147.797, -20.8187, 0.74 ) }
    dend_25 { pt3dadd( 3.9824, 148.039, -21.2656, 0.88 ) }
    dend_25 { pt3dadd( 3.92793, 148.301, -21.6123, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 11/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.19253, -151.142, 8.57034, 0.37 ) }
    dend_22 { pt3dadd( -0.515138, -149.582, 8.45546, 0.37 ) }
    dend_22 { pt3dadd( -0.761296, -147.72, 8.36195, 0.37 ) }
    dend_22 { pt3dadd( -0.92101, -145.562, 8.25964, 0.37 ) }
    dend_22 { pt3dadd( -0.988218, -143.972, 8.15137, 0.37 ) }
    dend_22 { pt3dadd( -1.05686, -142.323, 8.00952, 0.37 ) }
    dend_22 { pt3dadd( -1.13039, -140.942, 7.87162, 0.37 ) }
    dend_22 { pt3dadd( -1.20176, -139.603, 7.71223, 0.37 ) }
    dend_22 { pt3dadd( -1.25055, -138.53, 7.56163, 0.37 ) }
    dend_22 { pt3dadd( -1.24198, -137.363, 7.4022, 0.37 ) }
    dend_22 { pt3dadd( -1.20978, -136.259, 7.25816, 0.37 ) }
    dend_22 { pt3dadd( -1.15913, -134.859, 7.0874, 0.37 ) }
    dend_22 { pt3dadd( -1.08787, -133.449, 6.94379, 0.59 ) }
    dend_22 { pt3dadd( -1.00311, -132.441, 6.85416, 0.81 ) }
    dend_22 { pt3dadd( -0.704312, -130.249, 6.71894, 0.29 ) }
    dend_22 { pt3dadd( -0.499901, -129.182, 6.65448, 0.88 ) }
    dend_22 { pt3dadd( -0.298204, -128.374, 6.58286, 0.96 ) }
    dend_22 { pt3dadd( -0.0645841, -127.645, 6.4716, 0.44 ) }
    dend_22 { pt3dadd( 0.46473, -126.244, 6.14338, 0.37 ) }
    dend_22 { pt3dadd( 1.00022, -125.084, 5.66028, 0.37 ) }
    dend_22 { pt3dadd( 1.45064, -124.188, 5.13527, 0.37 ) }
    dend_22 { pt3dadd( 1.81688, -123.483, 4.67919, 0.37 ) }
    dend_22 { pt3dadd( 2.38266, -122.287, 3.92104, 0.52 ) }
    dend_22 { pt3dadd( 2.61395, -121.705, 3.56803, 0.52 ) }
    dend_22 { pt3dadd( 3.32902, -119.463, 2.36478, 0.52 ) }
    dend_22 { pt3dadd( 3.59676, -118.25, 1.77625, 0.52 ) }
    dend_22 { pt3dadd( 3.75026, -117.101, 1.29378, 0.59 ) }
    dend_22 { pt3dadd( 3.84006, -115.766, 0.803976, 0.29 ) }
    dend_22 { pt3dadd( 3.88393, -114.379, 0.356295, 0.29 ) }
    dend_22 { pt3dadd( 3.93702, -113.164, -0.0339468, 0.37 ) }
    dend_22 { pt3dadd( 4.01686, -111.764, -0.467804, 0.59 ) }
    dend_22 { pt3dadd( 4.14732, -110.901, -0.784688, 0.74 ) }
    dend_22 { pt3dadd( 4.33986, -110.112, -1.08963, 0.74 ) }
    dend_22 { pt3dadd( 4.67903, -109.038, -1.49288, 0.66 ) }
    dend_22 { pt3dadd( 5.17821, -107.509, -1.96, 0.59 ) }
    dend_22 { pt3dadd( 5.43109, -106.584, -2.16438, 0.59 ) }
    dend_22 { pt3dadd( 5.63536, -105.431, -2.29288, 0.44 ) }
    dend_22 { pt3dadd( 5.76388, -104.147, -2.3527, 0.37 ) }
    dend_22 { pt3dadd( 5.83126, -102.737, -2.34047, 0.37 ) }
    dend_22 { pt3dadd( 5.87596, -101.474, -2.2967, 0.29 ) }
    dend_22 { pt3dadd( 5.95162, -100.228, -2.22077, 0.29 ) }
    dend_22 { pt3dadd( 6.14619, -98.4784, -2.12623, 0.29 ) }
    dend_22 { pt3dadd( 6.37884, -97.3204, -2.12875, 0.74 ) }
    dend_22 { pt3dadd( 6.60935, -96.6065, -2.19987, 0.74 ) }
    dend_22 { pt3dadd( 7.18887, -95.2445, -2.49596, 0.37 ) }
    dend_22 { pt3dadd( 7.73263, -94.126, -2.88225, 0.59 ) }
    dend_22 { pt3dadd( 8.00278, -93.5657, -3.13393, 0.59 ) }
    dend_22 { pt3dadd( 8.73763, -91.9492, -3.98194, 0.37 ) }
    dend_22 { pt3dadd( 9.11031, -91.0103, -4.49664, 0.37 ) }
    dend_22 { pt3dadd( 9.51892, -89.789, -5.1508, 0.37 ) }
    dend_22 { pt3dadd( 9.74431, -88.9356, -5.55309, 0.52 ) }
    dend_22 { pt3dadd( 9.97259, -87.99, -5.95174, 0.29 ) }
    dend_22 { pt3dadd( 10.1991, -87.0006, -6.26592, 0.29 ) }
    dend_22 { pt3dadd( 10.3845, -86.1908, -6.42641, 0.29 ) }
    dend_22 { pt3dadd( 10.6409, -85.312, -6.57723, 0.29 ) }
    dend_22 { pt3dadd( 10.9038, -84.5149, -6.7121, 0.37 ) }
    dend_22 { pt3dadd( 11.2127, -83.5524, -6.88233, 0.37 ) }
    dend_22 { pt3dadd( 11.4792, -82.5839, -7.06055, 0.44 ) }
    dend_22 { pt3dadd( 11.7056, -81.5354, -7.24239, 0.44 ) }
    dend_22 { pt3dadd( 11.9025, -80.6089, -7.38684, 0.44 ) }
    dend_22 { pt3dadd( 12.1922, -79.4406, -7.56486, 0.29 ) }
    dend_22 { pt3dadd( 12.475, -78.627, -7.69537, 0.29 ) }
    dend_22 { pt3dadd( 13.033, -77.3821, -7.88927, 0.29 ) }
    dend_22 { pt3dadd( 13.5627, -76.3821, -8.02126, 0.74 ) }
    dend_22 { pt3dadd( 14.1, -75.4468, -8.10081, 0.74 ) }
    dend_22 { pt3dadd( 14.6192, -74.6287, -8.11585, 0.74 ) }
    dend_22 { pt3dadd( 15.3676, -73.5946, -8.08325, 0.52 ) }
    dend_22 { pt3dadd( 16.1289, -72.5996, -8.00127, 0.52 ) }
    dend_22 { pt3dadd( 17.2746, -71.1648, -7.82836, 0.52 ) }
    dend_22 { pt3dadd( 17.971, -70.2392, -7.70276, 0.66 ) }
    dend_22 { pt3dadd( 18.6231, -69.2147, -7.58019, 0.44 ) }
    dend_22 { pt3dadd( 19.0469, -68.3996, -7.49508, 0.44 ) }
    dend_22 { pt3dadd( 19.4025, -67.5041, -7.4431, 0.81 ) }
    dend_22 { pt3dadd( 19.6209, -66.7732, -7.45905, 0.81 ) }
    dend_22 { pt3dadd( 19.7797, -65.6737, -7.60092, 0.37 ) }
    dend_22 { pt3dadd( 19.8343, -64.4045, -7.97308, 0.37 ) }
    dend_22 { pt3dadd( 19.8288, -63.2106, -8.38012, 0.37 ) }
    dend_22 { pt3dadd( 19.8253, -62.0869, -8.7936, 0.37 ) }
    dend_22 { pt3dadd( 19.8503, -61.0596, -9.17651, 0.52 ) }
    dend_22 { pt3dadd( 19.927, -60.209, -9.51635, 0.52 ) }
    dend_22 { pt3dadd( 20.3831, -57.8682, -10.5316, 0.37 ) }
    dend_22 { pt3dadd( 21.1574, -55.6737, -11.5381, 0.29 ) }
    dend_22 { pt3dadd( 21.7114, -54.5559, -12.0652, 0.29 ) }
    dend_22 { pt3dadd( 22.1062, -53.9026, -12.3762, 0.29 ) }
    dend_22 { pt3dadd( 22.8889, -52.7012, -12.9455, 0.66 ) }
    dend_22 { pt3dadd( 23.3467, -52.0047, -13.2461, 0.81 ) }
    dend_22 { pt3dadd( 24.2745, -50.5597, -13.7243, 0.44 ) }
    dend_22 { pt3dadd( 24.8064, -49.7401, -13.9299, 0.59 ) }
    dend_22 { pt3dadd( 25.091, -49.231, -13.9845, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 25.5999, -48.1832, -14.0002, 0.29 ) }
    dend_22 { pt3dadd( 26.0839, -47.101, -13.9263, 0.29 ) }
    dend_22 { pt3dadd( 26.5815, -46.0249, -13.8029, 0.29 ) }
    dend_22 { pt3dadd( 27.4059, -44.2807, -13.5739, 0.29 ) }
    dend_22 { pt3dadd( 28.1678, -42.5556, -13.3835, 0.29 ) }
    dend_22 { pt3dadd( 28.7839, -41.0763, -13.2422, 0.29 ) }
    dend_22 { pt3dadd( 29.5597, -39.2173, -13.0748, 0.29 ) }
    dend_22 { pt3dadd( 30.5294, -36.8607, -12.8776, 0.29 ) }
    dend_22 { pt3dadd( 30.9328, -35.8391, -12.8282, 0.29 ) }
    dend_22 { pt3dadd( 31.6216, -33.9475, -12.8279, 0.29 ) }
    dend_22 { pt3dadd( 32.1619, -32.4492, -12.9207, 0.59 ) }
    dend_22 { pt3dadd( 32.3861, -31.8095, -13.004, 0.59 ) }
    dend_22 { pt3dadd( 32.7981, -30.5754, -13.2457, 0.29 ) }
    dend_22 { pt3dadd( 33.288, -29.1167, -13.5973, 0.66 ) }
    dend_22 { pt3dadd( 33.6367, -28.2415, -13.8392, 0.66 ) }
    dend_22 { pt3dadd( 34.1808, -27.1494, -14.2, 0.37 ) }
    dend_22 { pt3dadd( 34.7521, -26.0536, -14.6482, 0.22 ) }
    dend_22 { pt3dadd( 35.1557, -25.2456, -14.9962, 0.22 ) }
    dend_22 { pt3dadd( 35.491, -24.5511, -15.2948, 0.22 ) }
    dend_22 { pt3dadd( 35.9105, -23.6752, -15.635, 0.44 ) }
    dend_22 { pt3dadd( 36.4804, -22.4732, -16.0443, 0.29 ) }
    dend_22 { pt3dadd( 37.0813, -21.267, -16.3869, 0.29 ) }
    dend_22 { pt3dadd( 37.7007, -20.0463, -16.7298, 0.37 ) }
    dend_22 { pt3dadd( 38.0883, -19.2534, -16.8487, 0.66 ) }
    dend_22 { pt3dadd( 38.3064, -18.7086, -16.8103, 0.66 ) }
    dend_22 { pt3dadd( 38.7243, -17.3501, -16.4517, 0.29 ) }
    dend_22 { pt3dadd( 39.0187, -16.1367, -15.9184, 0.74 ) }
    dend_22 { pt3dadd( 39.1441, -15.354, -15.448, 0.88 ) }
    dend_22 { pt3dadd( 39.4542, -12.5132, -13.503, 0.37 ) }
    dend_22 { pt3dadd( 39.6023, -10.7227, -12.2214, 0.29 ) }
    dend_22 { pt3dadd( 39.6913, -9.37055, -11.2021, 0.29 ) }
    dend_22 { pt3dadd( 39.7535, -7.68968, -9.86065, 0.29 ) }
    dend_22 { pt3dadd( 39.7446, -5.58233, -8.14762, 0.22 ) }
    dend_22 { pt3dadd( 39.7323, -4.69753, -7.44323, 0.22 ) }
    dend_22 { pt3dadd( 39.7038, -3.91591, -6.9517, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 35/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.19253, -151.142, 8.57034, 0.29 ) }
    dend_19 { pt3dadd( -0.699437, -150.827, 8.38266, 0.29 ) }
    dend_19 { pt3dadd( -1.35249, -150.421, 8.14087, 0.29 ) }
    dend_19 { pt3dadd( -2.51601, -149.697, 7.71008, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 39/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.56602, -242.074, 28.6184, 0.59 ) }
    dend_3 { pt3dadd( -4.50419, -243.011, 29.155, 0.59 ) }
    dend_3 { pt3dadd( -4.49123, -244.068, 29.6299, 0.59 ) }
    dend_3 { pt3dadd( -4.49307, -245.013, 29.9821, 1.03 ) }
    dend_3 { pt3dadd( -4.49787, -245.526, 30.136, 1.11 ) }
    dend_3 { pt3dadd( -4.50159, -246.041, 30.3145, 1.11 ) }
    dend_3 { pt3dadd( -4.48504, -247.695, 30.9686, 0.81 ) }
    dend_3 { pt3dadd( -4.47816, -248.873, 31.4735, 0.74 ) }
    dend_3 { pt3dadd( -4.42786, -250.187, 32.0819, 0.59 ) }
    dend_3 { pt3dadd( -4.29902, -251.612, 32.8189, 0.59 ) }
    dend_3 { pt3dadd( -4.02746, -253.456, 33.9705, 0.66 ) }
    dend_3 { pt3dadd( -3.8282, -254.397, 34.664, 0.74 ) }
    dend_3 { pt3dadd( -3.69006, -254.885, 35.0796, 1.03 ) }
    dend_3 { pt3dadd( -3.52907, -255.379, 35.5545, 0.81 ) }
    dend_3 { pt3dadd( -3.30187, -256.026, 36.2201, 0.52 ) }
    dend_3 { pt3dadd( -3.04978, -256.647, 36.9111, 0.81 ) }
    dend_3 { pt3dadd( -2.77344, -257.36, 37.5619, 0.59 ) }
    dend_3 { pt3dadd( -2.60335, -257.945, 38.0108, 0.52 ) }
    dend_3 { pt3dadd( -2.5493, -258.23, 38.1901, 0.74 ) }
    dend_3 { pt3dadd( -2.53191, -258.662, 38.4108, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.56602, -242.074, 28.6184, 0.29 ) }
    dend_2 { pt3dadd( -5.57527, -241.495, 28.3425, 0.29 ) }
    dend_2 { pt3dadd( -6.61594, -241.05, 28.0277, 0.29 ) }
    dend_2 { pt3dadd( -7.71486, -240.727, 27.6828, 0.29 ) }
    dend_2 { pt3dadd( -9.14932, -240.521, 27.2232, 0.22 ) }
    dend_2 { pt3dadd( -10.8294, -240.55, 26.6774, 0.22 ) }
    dend_2 { pt3dadd( -12.0189, -240.796, 26.2859, 0.22 ) }
    dend_2 { pt3dadd( -13.1486, -241.264, 25.8695, 0.22 ) }
    dend_2 { pt3dadd( -14.1183, -242.013, 25.4973, 0.22 ) }
    dend_2 { pt3dadd( -14.921, -243.059, 25.1841, 0.22 ) }
    dend_2 { pt3dadd( -15.3324, -243.784, 25.0205, 0.22 ) }
    dend_2 { pt3dadd( -15.7084, -244.934, 24.8617, 0.22 ) }
    dend_2 { pt3dadd( -26.7966, -248.897, 21.7706, 0.22 ) }
    dend_2 { pt3dadd( -38.0656, -250.499, 17.589, 0.22 ) }
    dend_2 { pt3dadd( -49.6697, -252.152, 14.4787, 0.22 ) }
    dend_2 { pt3dadd( -60.8191, -255.126, 10.6789, 0.22 ) }
    dend_2 { pt3dadd( -71.3443, -256.347, 4.78956, 0.22 ) }
    dend_2 { pt3dadd( -80.4248, -257.578, -3.14695, 0.22 ) }
    dend_2 { pt3dadd( -88.8454, -256.909, -11.8394, 0.22 ) }
    dend_2 { pt3dadd( -97.7408, -258.765, -19.8737, 0.22 ) }
    dend_2 { pt3dadd( -108.207, -261.858, -25.2158, 0.22 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 80/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 9.68598, 35.507, -141.651, 0.74 ) }
    dend_107 { pt3dadd( 9.45633, 35.8023, -141.858, 0.74 ) }
    dend_107 { pt3dadd( 8.82943, 36.9453, -142.417, 0.74 ) }
    dend_107 { pt3dadd( 7.6599, 39.0777, -143.458, 0.52 ) }
    dend_107 { pt3dadd( 7.30735, 39.7205, -143.772, 1.03 ) }
    dend_107 { pt3dadd( 7.00855, 40.2653, -144.038, 1.03 ) }
    dend_107 { pt3dadd( 6.66769, 40.8868, -144.341, 0.22 ) }
    dend_107 { pt3dadd( 6.06549, 42.2702, -144.934, 0.22 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 88/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 9.68598, 35.507, -141.651, 0.96 ) }
    dend_106 { pt3dadd( 10.3277, 35.4356, -144.015, 0.96 ) }
    dend_106 { pt3dadd( 10.5035, 35.4269, -144.899, 0.66 ) }
    dend_106 { pt3dadd( 10.6444, 35.4588, -146.004, 0.44 ) }
    dend_106 { pt3dadd( 10.9811, 35.6475, -148.942, 0.29 ) }
    dend_106 { pt3dadd( 11.4498, 36.0409, -152.95, 1.18 ) }
    dend_106 { pt3dadd( 11.9325, 36.5927, -157.457, 0.59 ) }
    dend_106 { pt3dadd( 12.0378, 36.812, -159.067, 0.44 ) }
    dend_106 { pt3dadd( 12.1486, 37.2322, -161.919, 1.03 ) }
    dend_106 { pt3dadd( 12.1663, 37.7928, -165.057, 0.59 ) }
    dend_106 { pt3dadd( 12.1359, 38.0551, -166.118, 0.52 ) }
    dend_106 { pt3dadd( 12.012, 38.9608, -168.814, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_106 { pt3dadd( 11.9779, 39.5197, -170.31, 1.11 ) }
    // Section: dend_102, id: dend_102, parent: dend_88 (entry count 1/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -0.852182, 42.9556, -85.5708, 0.96 ) }
    dend_102 { pt3dadd( -0.340744, 44.8589, -87.9165, 0.96 ) }
    dend_102 { pt3dadd( 0.126404, 46.0368, -89.4772, 0.74 ) }
    dend_102 { pt3dadd( 0.383516, 46.4306, -90.1515, 0.74 ) }
    dend_102 { pt3dadd( 0.738674, 46.7815, -90.946, 0.88 ) }
    dend_102 { pt3dadd( 1.24522, 47.1126, -91.9503, 0.88 ) }
    dend_102 { pt3dadd( 1.76906, 47.3268, -92.914, 1.03 ) }
    dend_102 { pt3dadd( 2.77124, 47.4691, -94.3692, 1.33 ) }
    dend_102 { pt3dadd( 4.05604, 47.4993, -95.9763, 1.03 ) }
    dend_102 { pt3dadd( 4.96797, 47.5099, -97.0327, 1.33 ) }
    dend_102 { pt3dadd( 5.83641, 47.5531, -98.0011, 1.55 ) }
    dend_102 { pt3dadd( 7.57935, 47.8184, -99.8638, 1.33 ) }
    dend_102 { pt3dadd( 8.3595, 48.0794, -100.663, 0.81 ) }
    dend_102 { pt3dadd( 9.02717, 48.5044, -101.261, 0.81 ) }
    dend_102 { pt3dadd( 10.0029, 49.4307, -102.03, 1.03 ) }
    dend_102 { pt3dadd( 10.8445, 50.3753, -102.749, 1.03 ) }
    dend_102 { pt3dadd( 11.5656, 51.3014, -103.446, 1.25 ) }
    dend_102 { pt3dadd( 12.0596, 51.9785, -103.987, 1.33 ) }
    dend_102 { pt3dadd( 12.6491, 52.8102, -104.715, 1.4 ) }
    dend_102 { pt3dadd( 13.0023, 53.2925, -105.188, 1.4 ) }
    dend_102 { pt3dadd( 14.7226, 55.3704, -107.548, 1.33 ) }
    dend_102 { pt3dadd( 15.4582, 56.1117, -108.563, 1.18 ) }
    dend_102 { pt3dadd( 16.2213, 56.7708, -109.703, 1.18 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 24/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -0.852182, 42.9556, -85.5708, 1.55 ) }
    dend_89 { pt3dadd( -0.869146, 43.7422, -85.6525, 1.55 ) }
    dend_89 { pt3dadd( -0.817707, 44.532, -85.7807, 0.88 ) }
    dend_89 { pt3dadd( -0.732475, 45.249, -85.8842, 0.88 ) }
    dend_89 { pt3dadd( -0.615415, 45.9578, -85.9421, 1.03 ) }
    dend_89 { pt3dadd( -0.433289, 46.9211, -85.9833, 1.03 ) }
    dend_89 { pt3dadd( -0.234124, 47.9441, -86.0027, 1.03 ) }
    dend_89 { pt3dadd( -0.0153309, 48.9191, -85.9972, 1.03 ) }
    dend_89 { pt3dadd( 0.176111, 49.7825, -85.9763, 1.11 ) }
    dend_89 { pt3dadd( 0.425858, 51.0263, -85.9351, 1.18 ) }
    dend_89 { pt3dadd( 0.603626, 52.0714, -85.8938, 0.74 ) }
    dend_89 { pt3dadd( 0.74915, 53.1159, -85.8441, 0.74 ) }
    dend_89 { pt3dadd( 0.880717, 54.0174, -85.7991, 0.74 ) }
    dend_89 { pt3dadd( 1.07634, 55.2215, -85.7512, 0.88 ) }
    dend_89 { pt3dadd( 1.21218, 56.0063, -85.7398, 1.11 ) }
    dend_89 { pt3dadd( 1.32023, 56.6119, -85.7177, 1.33 ) }
    dend_89 { pt3dadd( 1.41618, 57.1528, -85.6646, 1.47 ) }
    dend_89 { pt3dadd( 1.55424, 57.979, -85.5048, 0.81 ) }
    dend_89 { pt3dadd( 1.64243, 58.5889, -85.3138, 0.81 ) }
    dend_89 { pt3dadd( 1.7364, 59.2531, -85.0312, 1.03 ) }
    dend_89 { pt3dadd( 1.88741, 60.2197, -84.5595, 1.11 ) }
    dend_89 { pt3dadd( 2.01504, 60.9204, -84.2019, 0.88 ) }
    dend_89 { pt3dadd( 2.17912, 61.6091, -83.8477, 0.74 ) }
    dend_89 { pt3dadd( 2.38909, 62.2723, -83.5431, 0.59 ) }
    dend_89 { pt3dadd( 2.72934, 62.9392, -83.3144, 0.88 ) }
    dend_89 { pt3dadd( 3.12061, 63.4735, -83.2387, 0.96 ) }
    dend_89 { pt3dadd( 3.45396, 63.8618, -83.2509, 0.96 ) }
    dend_89 { pt3dadd( 3.88876, 64.3754, -83.304, 0.88 ) }
    dend_89 { pt3dadd( 4.31777, 64.9328, -83.3944, 0.74 ) }
    dend_89 { pt3dadd( 4.6462, 65.4589, -83.4866, 0.96 ) }
    dend_89 { pt3dadd( 4.92863, 66.0805, -83.5782, 0.66 ) }
    dend_89 { pt3dadd( 5.25801, 67.072, -83.6928, 0.66 ) }
    dend_89 { pt3dadd( 5.59316, 68.3528, -83.7704, 1.11 ) }
    dend_89 { pt3dadd( 5.71448, 68.8927, -83.767, 1.33 ) }
    dend_89 { pt3dadd( 5.90868, 69.8741, -83.7314, 1.33 ) }
    dend_89 { pt3dadd( 6.14678, 71.245, -83.6531, 0.74 ) }
    dend_89 { pt3dadd( 6.33824, 72.4467, -83.5519, 0.74 ) }
    dend_89 { pt3dadd( 6.48954, 73.4369, -83.4393, 1.03 ) }
    dend_89 { pt3dadd( 6.6241, 74.2114, -83.3258, 1.25 ) }
    // Section: dend_69, id: dend_69, parent: dend_51 (entry count 63/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 28.3427, 56.31, 74.3243, 0.44 ) }
    dend_69 { pt3dadd( 21.09, 58.8182, 85.1625, 0.44 ) }
    dend_69 { pt3dadd( 16.0323, 63.1928, 96.6844, 0.44 ) }
    dend_69 { pt3dadd( 9.69194, 66.0194, 108.013, 0.44 ) }
    dend_69 { pt3dadd( 3.7, 68.3701, 119.628, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 28.3427, 56.31, 74.3243, 0.22 ) }
    dend_52 { pt3dadd( 33.3111, 58.7959, 83.1321, 0.44 ) }
    dend_52 { pt3dadd( 36.9279, 61.0882, 92.602, 0.44 ) }
    dend_52 { pt3dadd( 42.3093, 64.2194, 100.984, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 72/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 17.0378, 47.2816, 32.8079, 1.18 ) }
    dend_42 { pt3dadd( 16.8677, 48.3654, 34.9125, 1.18 ) }
    dend_42 { pt3dadd( 16.5531, 50.7609, 38.6048, 0.59 ) }
    dend_42 { pt3dadd( 16.518, 51.2447, 39.2437, 0.59 ) }
    dend_42 { pt3dadd( 16.5181, 51.8265, 39.9504, 0.52 ) }
    dend_42 { pt3dadd( 16.5661, 52.5666, 40.7875, 0.74 ) }
    dend_42 { pt3dadd( 16.6684, 53.3691, 41.6058, 0.59 ) }
    dend_42 { pt3dadd( 16.9124, 54.3824, 42.317, 0.59 ) }
    dend_42 { pt3dadd( 17.1776, 55.2517, 42.77, 0.74 ) }
    dend_42 { pt3dadd( 17.4312, 55.9558, 43.1704, 0.74 ) }
    dend_42 { pt3dadd( 18.205, 57.7144, 44.2927, 1.62 ) }
    dend_42 { pt3dadd( 18.8146, 58.8657, 45.1106, 2.21 ) }
    dend_42 { pt3dadd( 19.3936, 59.8448, 45.8215, 2.06 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 85/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 17.0378, 47.2816, 32.8079, 0.29 ) }
    dend_41 { pt3dadd( 17.1862, 46.0263, 32.9354, 0.29 ) }
    dend_41 { pt3dadd( 17.2769, 45.2594, 33.0133, 0.44 ) }
    dend_41 { pt3dadd( 17.3175, 44.9157, 33.0482, 0.59 ) }
    dend_41 { pt3dadd( 17.4325, 43.9436, 33.1469, 0.52 ) }
    dend_41 { pt3dadd( 18.1589, 36.3569, 33.0488, 0.52 ) }
    dend_41 { pt3dadd( 18.9259, 28.9674, 31.4402, 0.52 ) }
    dend_41 { pt3dadd( 19.4468, 21.3645, 31.0862, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 93/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.5576, 192.53, -14.9146, 0.37 ) }
    dend_38 { pt3dadd( 20.3635, 193.504, -14.8334, 0.37 ) }
    dend_38 { pt3dadd( 20.3313, 194.022, -14.7445, 0.29 ) }
    dend_38 { pt3dadd( 20.3365, 194.642, -14.5748, 0.29 ) }
    dend_38 { pt3dadd( 20.3565, 195.36, -14.3189, 0.29 ) }
    dend_38 { pt3dadd( 20.3781, 196.381, -13.9363, 0.29 ) }
    dend_38 { pt3dadd( 20.3839, 197.212, -13.6266, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( 20.4231, 198.183, -13.2581, 0.29 ) }
    dend_38 { pt3dadd( 20.4328, 199.304, -12.8548, 0.59 ) }
    dend_38 { pt3dadd( 20.3726, 200.191, -12.5604, 0.37 ) }
    dend_38 { pt3dadd( 20.2602, 200.8, -12.3929, 0.37 ) }
    dend_38 { pt3dadd( 20.1409, 201.216, -12.3054, 0.74 ) }
    dend_38 { pt3dadd( 19.9572, 201.776, -12.2366, 0.74 ) }
    dend_38 { pt3dadd( 19.5676, 202.971, -12.1835, 0.44 ) }
    dend_38 { pt3dadd( 19.2966, 203.876, -12.1937, 0.44 ) }
    dend_38 { pt3dadd( 19.0702, 204.779, -12.1952, 0.44 ) }
    dend_38 { pt3dadd( 18.9324, 205.342, -12.1487, 0.44 ) }
    dend_38 { pt3dadd( 18.6868, 206.292, -12.0228, 0.44 ) }
    dend_38 { pt3dadd( 18.4925, 207.007, -11.9053, 0.44 ) }
    dend_38 { pt3dadd( 18.3049, 207.715, -11.7764, 0.37 ) }
    dend_38 { pt3dadd( 17.9611, 209.062, -11.5376, 0.37 ) }
    dend_38 { pt3dadd( 17.604, 210.459, -11.2887, 0.29 ) }
    dend_38 { pt3dadd( 17.3812, 211.312, -11.1427, 0.29 ) }
    dend_38 { pt3dadd( 17.1542, 212.106, -11.0125, 0.29 ) }
    dend_38 { pt3dadd( 16.8683, 213.104, -10.9137, 0.29 ) }
    dend_38 { pt3dadd( 16.6478, 213.898, -10.8947, 0.29 ) }
    dend_38 { pt3dadd( 16.3763, 214.844, -10.9225, 0.29 ) }
    dend_38 { pt3dadd( 16.1415, 215.614, -10.9544, 0.29 ) }
    dend_38 { pt3dadd( 15.8438, 216.515, -10.9378, 0.29 ) }
    dend_38 { pt3dadd( 15.3608, 217.817, -10.8358, 0.29 ) }
    dend_38 { pt3dadd( 15.1169, 218.395, -10.7611, 0.29 ) }
    dend_38 { pt3dadd( 14.7141, 219.303, -10.6066, 0.29 ) }
    dend_38 { pt3dadd( 14.3918, 220.095, -10.4398, 0.29 ) }
    dend_38 { pt3dadd( 14.0876, 221.074, -10.2175, 0.29 ) }
    dend_38 { pt3dadd( 13.9343, 221.819, -10.0536, 0.29 ) }
    dend_38 { pt3dadd( 13.8829, 222.162, -9.99249, 0.66 ) }
    dend_38 { pt3dadd( 13.8417, 222.564, -9.96628, 0.66 ) }
    dend_38 { pt3dadd( 13.7749, 223.392, -9.98022, 0.29 ) }
    dend_38 { pt3dadd( 13.7163, 224.132, -10.0276, 0.29 ) }
    dend_38 { pt3dadd( 13.6495, 225.051, -10.0971, 0.29 ) }
    dend_38 { pt3dadd( 13.6004, 226.148, -10.165, 0.29 ) }
    dend_38 { pt3dadd( 13.5796, 226.841, -10.2098, 0.29 ) }
    dend_38 { pt3dadd( 13.5561, 227.635, -10.2609, 0.74 ) }
    dend_38 { pt3dadd( 13.5499, 228.125, -10.2877, 0.74 ) }
    dend_38 { pt3dadd( 13.5846, 229.173, -10.3203, 0.29 ) }
    dend_38 { pt3dadd( 13.6507, 229.926, -10.3216, 0.29 ) }
    dend_38 { pt3dadd( 13.7655, 230.767, -10.3015, 0.29 ) }
    dend_38 { pt3dadd( 13.875, 231.505, -10.2787, 0.29 ) }
    dend_38 { pt3dadd( 14.0404, 232.738, -10.2242, 0.29 ) }
    dend_38 { pt3dadd( 14.1157, 233.46, -10.1937, 0.81 ) }
    dend_38 { pt3dadd( 14.18, 234.108, -10.2, 0.81 ) }
    dend_38 { pt3dadd( 14.313, 235.038, -10.2391, 0.37 ) }
    dend_38 { pt3dadd( 14.4964, 235.928, -10.2967, 0.29 ) }
    dend_38 { pt3dadd( 14.6925, 236.695, -10.3884, 0.29 ) }
    dend_38 { pt3dadd( 14.8791, 237.427, -10.5493, 0.29 ) }
    dend_38 { pt3dadd( 15.1413, 238.634, -10.9469, 0.44 ) }
    dend_38 { pt3dadd( 15.2412, 239.198, -11.2043, 0.44 ) }
    dend_38 { pt3dadd( 15.3117, 239.699, -11.4773, 0.44 ) }
    dend_38 { pt3dadd( 15.4319, 240.443, -11.9422, 0.37 ) }
    dend_38 { pt3dadd( 15.5672, 241.13, -12.3988, 0.29 ) }
    dend_38 { pt3dadd( 15.704, 241.709, -12.7868, 0.29 ) }
    dend_38 { pt3dadd( 15.87, 242.263, -13.1751, 0.29 ) }
    dend_38 { pt3dadd( 16.0876, 242.771, -13.577, 0.59 ) }
    dend_38 { pt3dadd( 16.5561, 243.515, -14.1977, 0.96 ) }
    dend_38 { pt3dadd( 16.792, 243.806, -14.4351, 0.96 ) }
    dend_38 { pt3dadd( 17.3351, 244.383, -14.8895, 0.81 ) }
    dend_38 { pt3dadd( 18.1717, 245.233, -15.5212, 0.29 ) }
    dend_38 { pt3dadd( 18.5929, 245.667, -15.8201, 0.29 ) }
    dend_38 { pt3dadd( 19.1753, 246.316, -16.233, 0.29 ) }
    dend_38 { pt3dadd( 19.5122, 246.764, -16.4652, 0.52 ) }
    dend_38 { pt3dadd( 19.9783, 247.494, -16.7717, 0.52 ) }
    dend_38 { pt3dadd( 20.2585, 247.991, -16.9233, 0.52 ) }
    dend_38 { pt3dadd( 20.4909, 248.41, -17.0123, 0.44 ) }
    dend_38 { pt3dadd( 20.9867, 249.293, -17.1597, 0.66 ) }
    dend_38 { pt3dadd( 21.4176, 250.056, -17.2675, 0.37 ) }
    dend_38 { pt3dadd( 21.7348, 250.621, -17.3456, 0.37 ) }
    dend_38 { pt3dadd( 22.0653, 251.262, -17.4419, 0.37 ) }
    dend_38 { pt3dadd( 22.3503, 251.929, -17.6417, 0.29 ) }
    dend_38 { pt3dadd( 22.5629, 252.649, -18.0011, 0.29 ) }
    dend_38 { pt3dadd( 22.6405, 253.271, -18.3838, 0.37 ) }
    dend_38 { pt3dadd( 22.6678, 254.053, -18.8845, 0.52 ) }
    dend_38 { pt3dadd( 22.6512, 254.816, -19.3538, 0.59 ) }
    dend_38 { pt3dadd( 22.6087, 256.029, -20.0771, 0.29 ) }
    dend_38 { pt3dadd( 22.6151, 256.711, -20.4857, 0.29 ) }
    dend_38 { pt3dadd( 22.7338, 258.075, -21.3089, 0.44 ) }
    dend_38 { pt3dadd( 22.8622, 258.718, -21.669, 0.59 ) }
    dend_38 { pt3dadd( 23.0419, 259.308, -21.9598, 0.59 ) }
    dend_38 { pt3dadd( 23.2656, 259.899, -22.2143, 0.29 ) }
    dend_38 { pt3dadd( 23.7118, 260.993, -22.6548, 0.37 ) }
    dend_38 { pt3dadd( 23.9686, 261.703, -22.9463, 0.37 ) }
    dend_38 { pt3dadd( 24.2196, 262.496, -23.2656, 0.59 ) }
    dend_38 { pt3dadd( 24.3725, 263.062, -23.4672, 0.59 ) }
    dend_38 { pt3dadd( 24.5154, 263.672, -23.6558, 0.59 ) }
    dend_38 { pt3dadd( 24.7693, 264.957, -23.9596, 0.37 ) }
    dend_38 { pt3dadd( 25.0158, 266.384, -24.1958, 0.29 ) }
    dend_38 { pt3dadd( 25.2125, 267.463, -24.3255, 0.29 ) }
    dend_38 { pt3dadd( 25.355, 268.193, -24.3954, 0.52 ) }
    dend_38 { pt3dadd( 25.5142, 268.937, -24.453, 0.52 ) }
    dend_38 { pt3dadd( 25.6402, 269.49, -24.4783, 0.44 ) }
    dend_38 { pt3dadd( 25.7715, 270.099, -24.4942, 0.29 ) }
    dend_38 { pt3dadd( 25.8669, 270.714, -24.5354, 0.29 ) }
    dend_38 { pt3dadd( 25.8881, 271.398, -24.6208, 0.44 ) }
    dend_38 { pt3dadd( 25.8273, 272.13, -24.7565, 0.44 ) }
    dend_38 { pt3dadd( 25.7152, 272.804, -24.9135, 0.52 ) }
    dend_38 { pt3dadd( 25.5007, 273.819, -25.1962, 0.29 ) }
    dend_38 { pt3dadd( 25.2923, 274.626, -25.4398, 0.29 ) }
    dend_38 { pt3dadd( 25.0763, 275.388, -25.685, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( 24.9396, 275.879, -25.8493, 0.52 ) }
    dend_38 { pt3dadd( 24.8127, 276.427, -26.0527, 0.52 ) }
    dend_38 { pt3dadd( 24.7584, 276.866, -26.2397, 0.52 ) }
    dend_38 { pt3dadd( 24.8091, 277.691, -26.5978, 0.37 ) }
    dend_38 { pt3dadd( 24.9127, 278.173, -26.8008, 0.37 ) }
    dend_38 { pt3dadd( 25.1388, 278.897, -27.0934, 0.37 ) }
    dend_38 { pt3dadd( 25.5063, 279.936, -27.4979, 0.22 ) }
    dend_38 { pt3dadd( 25.8209, 280.862, -27.8504, 0.22 ) }
    dend_38 { pt3dadd( 26.2123, 282.078, -28.2939, 0.22 ) }
    dend_38 { pt3dadd( 26.4556, 282.893, -28.5466, 0.37 ) }
    dend_38 { pt3dadd( 26.6521, 283.696, -28.7552, 0.52 ) }
    dend_38 { pt3dadd( 26.7276, 284.085, -28.849, 0.52 ) }
    dend_38 { pt3dadd( 26.8618, 285.184, -29.086, 0.22 ) }
    dend_38 { pt3dadd( 26.8852, 286.011, -29.2345, 0.22 ) }
    dend_38 { pt3dadd( 26.7542, 287.573, -29.4825, 0.66 ) }
    dend_38 { pt3dadd( 26.7016, 287.916, -29.5161, 0.66 ) }
    dend_38 { pt3dadd( 26.5237, 288.945, -29.5452, 0.52 ) }
    dend_38 { pt3dadd( 26.4164, 289.647, -29.5175, 0.74 ) }
    dend_38 { pt3dadd( 26.2505, 290.77, -29.3685, 0.29 ) }
    dend_38 { pt3dadd( 26.0936, 291.635, -29.1676, 0.29 ) }
    dend_38 { pt3dadd( 25.9155, 292.489, -28.891, 0.29 ) }
    dend_38 { pt3dadd( 25.7557, 293.262, -28.6169, 0.29 ) }
    dend_38 { pt3dadd( 25.5878, 294.025, -28.3315, 0.29 ) }
    dend_38 { pt3dadd( 25.4251, 294.828, -28.0698, 0.44 ) }
    dend_38 { pt3dadd( 25.2962, 295.654, -27.8585, 0.29 ) }
    dend_38 { pt3dadd( 25.2293, 296.189, -27.7422, 0.29 ) }
    dend_38 { pt3dadd( 25.0902, 297.219, -27.5844, 0.29 ) }
    dend_38 { pt3dadd( 24.9582, 298.011, -27.5107, 0.22 ) }
    dend_38 { pt3dadd( 24.732, 299.366, -27.4889, 0.22 ) }
    dend_38 { pt3dadd( 24.5237, 300.672, -27.5732, 0.22 ) }
    dend_38 { pt3dadd( 24.4222, 301.363, -27.6598, 0.22 ) }
    dend_38 { pt3dadd( 24.3356, 302.043, -27.7746, 0.29 ) }
    dend_38 { pt3dadd( 24.2174, 303.099, -28.023, 0.29 ) }
    dend_38 { pt3dadd( 24.1421, 303.926, -28.305, 0.29 ) }
    dend_38 { pt3dadd( 24.1072, 304.488, -28.5465, 0.29 ) }
    dend_38 { pt3dadd( 24.1006, 304.992, -28.777, 0.29 ) }
    dend_38 { pt3dadd( 24.1588, 305.976, -29.1831, 0.29 ) }
    dend_38 { pt3dadd( 24.293, 307.332, -29.6778, 0.22 ) }
    dend_38 { pt3dadd( 24.405, 308.301, -30.0008, 0.37 ) }
    dend_38 { pt3dadd( 24.4892, 308.996, -30.2262, 0.22 ) }
    dend_38 { pt3dadd( 24.6242, 310.071, -30.5763, 0.22 ) }
    dend_38 { pt3dadd( 24.7539, 311.307, -30.9879, 0.22 ) }
    dend_38 { pt3dadd( 24.8018, 312.004, -31.2226, 0.29 ) }
    dend_38 { pt3dadd( 24.8158, 312.319, -31.3292, 0.29 ) }
    dend_38 { pt3dadd( 24.8466, 313.54, -31.8038, 0.22 ) }
    dend_38 { pt3dadd( 24.8442, 314.266, -32.144, 0.22 ) }
    dend_38 { pt3dadd( 24.8271, 314.933, -32.506, 0.37 ) }
    dend_38 { pt3dadd( 24.8242, 315.61, -32.9178, 0.37 ) }
    dend_38 { pt3dadd( 24.8794, 316.319, -33.3912, 0.22 ) }
    dend_38 { pt3dadd( 24.9874, 317.216, -34.0151, 0.37 ) }
    dend_38 { pt3dadd( 25.0927, 317.941, -34.5273, 0.22 ) }
    dend_38 { pt3dadd( 25.2264, 318.626, -35.0085, 0.22 ) }
    dend_38 { pt3dadd( 25.4197, 319.421, -35.5338, 0.52 ) }
    dend_38 { pt3dadd( 25.7545, 320.631, -36.3226, 0.29 ) }
    dend_38 { pt3dadd( 25.9258, 321.247, -36.7315, 0.29 ) }
    dend_38 { pt3dadd( 26.0708, 321.808, -37.0983, 0.29 ) }
    dend_38 { pt3dadd( 26.2076, 322.355, -37.4488, 0.29 ) }
    dend_38 { pt3dadd( 26.3313, 323.078, -37.8779, 0.29 ) }
    dend_38 { pt3dadd( 26.3741, 323.905, -38.3248, 0.29 ) }
    dend_38 { pt3dadd( 26.2854, 324.749, -38.7364, 0.29 ) }
    dend_38 { pt3dadd( 26.0932, 325.56, -39.1445, 0.29 ) }
    dend_38 { pt3dadd( 25.9145, 326.034, -39.3855, 0.29 ) }
    dend_38 { pt3dadd( 25.6122, 326.685, -39.7272, 0.29 ) }
    dend_38 { pt3dadd( 25.4917, 326.897, -39.8378, 0.29 ) }
    dend_38 { pt3dadd( 24.9664, 327.738, -40.2278, 0.29 ) }
    dend_38 { pt3dadd( 24.611, 328.284, -40.4691, 1.33 ) }
    dend_38 { pt3dadd( 24.4234, 328.577, -40.6009, 1.69 ) }
    dend_38 { pt3dadd( 23.7603, 329.625, -41.0754, 0.22 ) }
    dend_38 { pt3dadd( 23.4218, 330.161, -41.3296, 0.22 ) }
    dend_38 { pt3dadd( 23.188, 330.527, -41.5074, 0.37 ) }
    dend_38 { pt3dadd( 22.8085, 331.085, -41.7868, 0.37 ) }
    dend_38 { pt3dadd( 22.368, 331.661, -42.0858, 0.37 ) }
    dend_38 { pt3dadd( 22.1377, 331.907, -42.2236, 0.37 ) }
    dend_38 { pt3dadd( 21.3302, 332.577, -42.6378, 0.22 ) }
    dend_38 { pt3dadd( 20.9123, 332.86, -42.8761, 0.22 ) }
    dend_38 { pt3dadd( 20.2186, 333.163, -43.2252, 0.22 ) }
    dend_38 { pt3dadd( 19.6183, 333.304, -43.5213, 0.29 ) }
    dend_38 { pt3dadd( 19.1736, 333.367, -43.7359, 0.29 ) }
    dend_38 { pt3dadd( 18.6284, 333.402, -43.99, 0.22 ) }
    dend_38 { pt3dadd( 17.6411, 333.351, -44.414, 0.22 ) }
    dend_38 { pt3dadd( 16.3532, 333.16, -44.9718, 0.22 ) }
    dend_38 { pt3dadd( 15.177, 332.883, -45.4902, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 20.5576, 192.53, -14.9146, 0.22 ) }
    dend_37 { pt3dadd( 22.2975, 193.126, -14.8487, 0.22 ) }
    dend_37 { pt3dadd( 23.0815, 193.359, -14.8193, 0.22 ) }
    dend_37 { pt3dadd( 25.072, 193.949, -14.7449, 0.22 ) }
    dend_37 { pt3dadd( 26.1875, 194.28, -14.7032, 0.22 ) }
    dend_37 { pt3dadd( 26.8495, 194.477, -14.6785, 0.22 ) }
    dend_37 { pt3dadd( 27.7982, 194.758, -14.643, 0.37 ) }
    dend_37 { pt3dadd( 28.9375, 194.955, -14.5949, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 90/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.92793, 148.301, -21.6123, 0.29 ) }
    dend_31 { pt3dadd( 4.89516, 148.517, -24.331, 0.29 ) }
    dend_31 { pt3dadd( 5.17708, 148.672, -25.468, 0.29 ) }
    dend_31 { pt3dadd( 5.28717, 148.841, -26.4069, 0.44 ) }
    dend_31 { pt3dadd( 5.3887, 149.446, -28.9145, 0.59 ) }
    dend_31 { pt3dadd( 5.40467, 150.176, -31.1757, 0.44 ) }
    dend_31 { pt3dadd( 5.37409, 150.698, -32.4352, 0.37 ) }
    dend_31 { pt3dadd( 5.23464, 151.197, -33.3334, 0.37 ) }
    dend_31 { pt3dadd( 4.94429, 152.002, -34.4869, 0.37 ) }
    dend_31 { pt3dadd( 4.70899, 152.565, -35.1444, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 4.07458, 153.918, -36.4461, 0.52 ) }
    dend_31 { pt3dadd( 3.62366, 154.766, -37.2304, 0.52 ) }
    dend_31 { pt3dadd( 3.25186, 155.467, -37.9031, 0.52 ) }
    dend_31 { pt3dadd( 2.90505, 156.148, -38.5433, 0.52 ) }
    dend_31 { pt3dadd( 2.44269, 157.053, -39.3497, 0.59 ) }
    dend_31 { pt3dadd( 2.1086, 157.695, -39.9243, 0.44 ) }
    dend_31 { pt3dadd( 1.6336, 158.691, -40.7864, 0.59 ) }
    dend_31 { pt3dadd( 1.25794, 159.768, -41.7046, 0.66 ) }
    dend_31 { pt3dadd( 1.11217, 160.514, -42.2909, 0.66 ) }
    dend_31 { pt3dadd( 1.10568, 161.295, -42.8675, 0.37 ) }
    dend_31 { pt3dadd( 1.21052, 162.09, -43.6197, 0.37 ) }
    dend_31 { pt3dadd( 1.31697, 162.768, -44.3713, 0.37 ) }
    dend_31 { pt3dadd( 1.36802, 163.114, -44.8733, 0.81 ) }
    dend_31 { pt3dadd( 1.37933, 163.383, -45.4153, 1.03 ) }
    dend_31 { pt3dadd( 1.25638, 163.744, -46.6688, 1.03 ) }
    dend_31 { pt3dadd( 0.461122, 164.134, -50.0845, 0.37 ) }
    dend_31 { pt3dadd( 0.108355, 164.15, -51.0312, 0.29 ) }
    dend_31 { pt3dadd( -0.414378, 164.112, -52.1056, 0.29 ) }
    dend_31 { pt3dadd( -0.799384, 164.071, -52.7616, 0.44 ) }
    dend_31 { pt3dadd( -1.62165, 164.018, -53.8858, 0.44 ) }
    dend_31 { pt3dadd( -2.45328, 164.031, -54.7424, 0.44 ) }
    dend_31 { pt3dadd( -3.19594, 164.182, -55.3012, 0.44 ) }
    dend_31 { pt3dadd( -3.7962, 164.361, -55.7343, 0.59 ) }
    dend_31 { pt3dadd( -4.31067, 164.511, -56.0695, 0.59 ) }
    dend_31 { pt3dadd( -5.38524, 164.794, -56.716, 0.37 ) }
    dend_31 { pt3dadd( -6.22129, 164.995, -57.1974, 0.37 ) }
    dend_31 { pt3dadd( -7.11592, 165.206, -57.7129, 0.37 ) }
    dend_31 { pt3dadd( -8.29265, 165.489, -58.3929, 0.37 ) }
    dend_31 { pt3dadd( -9.57524, 165.826, -59.1205, 0.37 ) }
    dend_31 { pt3dadd( -10.428, 166.082, -59.5874, 0.37 ) }
    dend_31 { pt3dadd( -11.6826, 166.483, -60.2252, 0.37 ) }
    dend_31 { pt3dadd( -12.916, 166.899, -60.7874, 0.37 ) }
    dend_31 { pt3dadd( -14.0296, 167.312, -61.2894, 0.37 ) }
    dend_31 { pt3dadd( -14.7906, 167.635, -61.6516, 0.74 ) }
    dend_31 { pt3dadd( -15.4261, 167.938, -61.9664, 0.74 ) }
    dend_31 { pt3dadd( -16.9468, 168.685, -62.7541, 0.37 ) }
    dend_31 { pt3dadd( -17.9669, 169.195, -63.2987, 0.37 ) }
    dend_31 { pt3dadd( -19.0433, 169.744, -63.9066, 0.37 ) }
    dend_31 { pt3dadd( -19.6911, 170.125, -64.3005, 0.37 ) }
    dend_31 { pt3dadd( -20.5851, 170.714, -64.8888, 0.29 ) }
    dend_31 { pt3dadd( -21.258, 171.268, -65.3817, 0.29 ) }
    dend_31 { pt3dadd( -21.7313, 171.862, -65.7956, 0.44 ) }
    dend_31 { pt3dadd( -21.9834, 172.29, -66.0255, 0.59 ) }
    dend_31 { pt3dadd( -22.299, 172.92, -66.251, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 44/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.92793, 148.301, -21.6123, 0.59 ) }
    dend_26 { pt3dadd( 1.29055, 149.327, -20.8672, 0.59 ) }
    dend_26 { pt3dadd( 0.228742, 149.939, -20.6348, 0.59 ) }
    dend_26 { pt3dadd( -0.891442, 150.696, -20.4931, 0.59 ) }
    dend_26 { pt3dadd( -1.7319, 151.318, -20.4491, 0.59 ) }
    dend_26 { pt3dadd( -2.64535, 152.015, -20.4759, 0.59 ) }
    dend_26 { pt3dadd( -4.06836, 153.082, -20.6394, 0.52 ) }
    dend_26 { pt3dadd( -5.00044, 153.862, -20.8938, 0.52 ) }
    dend_26 { pt3dadd( -6.06889, 154.776, -21.2432, 0.66 ) }
    dend_26 { pt3dadd( -6.63354, 155.246, -21.4365, 0.66 ) }
    dend_26 { pt3dadd( -7.46273, 155.88, -21.6994, 0.52 ) }
    dend_26 { pt3dadd( -8.86199, 156.841, -22.0528, 0.52 ) }
    dend_26 { pt3dadd( -9.77749, 157.457, -22.2197, 0.52 ) }
    dend_26 { pt3dadd( -10.5149, 158.013, -22.3026, 0.52 ) }
    dend_26 { pt3dadd( -11.1389, 158.561, -22.3863, 0.74 ) }
    dend_26 { pt3dadd( -11.7982, 159.164, -22.5206, 0.74 ) }
    dend_26 { pt3dadd( -12.6819, 159.969, -22.7994, 0.37 ) }
    dend_26 { pt3dadd( -13.3749, 160.544, -23.1592, 0.37 ) }
    dend_26 { pt3dadd( -14.2755, 161.173, -23.8029, 0.37 ) }
    dend_26 { pt3dadd( -15.7099, 162.006, -24.8535, 0.37 ) }
    dend_26 { pt3dadd( -16.7764, 162.576, -25.6388, 0.29 ) }
    dend_26 { pt3dadd( -17.7519, 163.104, -26.3133, 0.37 ) }
    dend_26 { pt3dadd( -18.7619, 163.668, -26.8886, 0.44 ) }
    dend_26 { pt3dadd( -19.4954, 164.103, -27.2259, 0.66 ) }
    dend_26 { pt3dadd( -20.6167, 164.827, -27.6544, 0.59 ) }
    dend_26 { pt3dadd( -21.4617, 165.437, -27.9105, 0.44 ) }
    dend_26 { pt3dadd( -22.577, 166.323, -28.2495, 0.44 ) }
    dend_26 { pt3dadd( -23.6802, 167.194, -28.6407, 0.44 ) }
    dend_26 { pt3dadd( -24.6443, 167.882, -29.046, 0.44 ) }
    dend_26 { pt3dadd( -25.8658, 168.618, -29.5484, 0.37 ) }
    dend_26 { pt3dadd( -26.7357, 169.072, -29.9149, 0.37 ) }
    dend_26 { pt3dadd( -27.5853, 169.441, -30.2851, 0.37 ) }
    dend_26 { pt3dadd( -29.5173, 170.16, -31.1862, 0.37 ) }
    dend_26 { pt3dadd( -30.3645, 170.464, -31.6538, 0.37 ) }
    dend_26 { pt3dadd( -31.964, 171.15, -32.6364, 0.29 ) }
    dend_26 { pt3dadd( -33.1336, 171.815, -33.4507, 0.29 ) }
    dend_26 { pt3dadd( -34.3636, 172.709, -34.4404, 0.29 ) }
    dend_26 { pt3dadd( -34.7724, 173.073, -34.8205, 0.81 ) }
    dend_26 { pt3dadd( -35.6818, 174.075, -36.0318, 0.81 ) }
    dend_26 { pt3dadd( -36.5122, 175.002, -37.4614, 0.37 ) }
    dend_26 { pt3dadd( -37.3542, 175.866, -39.1522, 0.29 ) }
    dend_26 { pt3dadd( -37.762, 176.224, -39.9751, 0.29 ) }
    dend_26 { pt3dadd( -38.2279, 176.553, -40.8219, 0.29 ) }
    dend_26 { pt3dadd( -39.8369, 177.346, -43.4195, 0.29 ) }
    dend_26 { pt3dadd( -41.3356, 177.739, -45.5144, 0.29 ) }
    dend_26 { pt3dadd( -41.9511, 177.784, -46.3257, 0.52 ) }
    dend_26 { pt3dadd( -42.328, 177.776, -46.7954, 0.52 ) }
    dend_26 { pt3dadd( -43.2355, 177.733, -47.8716, 0.29 ) }
    dend_26 { pt3dadd( -44.2233, 177.691, -48.904, 0.29 ) }
    dend_26 { pt3dadd( -45.4379, 177.65, -49.8294, 0.29 ) }
    dend_26 { pt3dadd( -46.4302, 177.626, -50.4975, 0.52 ) }
    dend_26 { pt3dadd( -46.771, 177.613, -50.7364, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.51601, -149.697, 7.71008, 0.22 ) }
    dend_21 { pt3dadd( -3.13782, -149.778, 7.27135, 0.22 ) }
    dend_21 { pt3dadd( -3.91046, -149.879, 6.72619, 0.22 ) }
    dend_21 { pt3dadd( -12.2885, -150.963, 1.57893, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.51601, -149.697, 7.71008, 0.22 ) }
    dend_20 { pt3dadd( -3.23686, -149.722, 7.23279, 0.22 ) }
    dend_20 { pt3dadd( -3.98518, -149.748, 6.73731, 0.22 ) }
    dend_20 { pt3dadd( -4.66788, -149.772, 6.28527, 0.22 ) }
    dend_20 { pt3dadd( -5.54788, -149.803, 5.70259, 0.22 ) }
    dend_20 { pt3dadd( -6.77519, -149.845, 4.88996, 0.22 ) }
    dend_20 { pt3dadd( -7.31812, -149.864, 4.53047, 0.22 ) }
    dend_20 { pt3dadd( -15.4246, -151.089, -0.685695, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.53191, -258.662, 38.4108, 0.96 ) }
    dend_5 { pt3dadd( -2.25565, -260.45, 38.3534, 0.96 ) }
    dend_5 { pt3dadd( -2.12209, -261.763, 38.4529, 0.74 ) }
    dend_5 { pt3dadd( -2.06444, -262.829, 38.6105, 0.66 ) }
    dend_5 { pt3dadd( -2.05808, -263.94, 38.8353, 1.11 ) }
    dend_5 { pt3dadd( -2.0752, -264.563, 38.9956, 1.25 ) }
    dend_5 { pt3dadd( -2.17416, -266.497, 39.5446, 0.88 ) }
    dend_5 { pt3dadd( -2.29474, -267.507, 39.9301, 0.29 ) }
    dend_5 { pt3dadd( -2.50204, -268.536, 40.3538, 0.29 ) }
    dend_5 { pt3dadd( -2.82878, -269.735, 40.9308, 0.29 ) }
    dend_5 { pt3dadd( -3.11792, -270.671, 41.424, 0.59 ) }
    dend_5 { pt3dadd( -3.33861, -271.359, 41.7967, 0.66 ) }
    dend_5 { pt3dadd( -3.6301, -272.255, 42.2566, 0.29 ) }
    dend_5 { pt3dadd( -3.79634, -272.79, 42.5537, 0.29 ) }
    dend_5 { pt3dadd( -4.2322, -274.458, 43.4852, 1.11 ) }
    dend_5 { pt3dadd( -4.39983, -275.256, 43.9431, 1.25 ) }
    dend_5 { pt3dadd( -4.66348, -276.671, 44.7566, 0.74 ) }
    dend_5 { pt3dadd( -4.73144, -277.126, 45.0269, 1.03 ) }
    dend_5 { pt3dadd( -4.79822, -277.874, 45.4747, 1.03 ) }
    dend_5 { pt3dadd( -4.84376, -278.911, 46.0733, 0.88 ) }
    dend_5 { pt3dadd( -4.85153, -280.322, 46.7268, 0.52 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 29/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -2.53191, -258.662, 38.4108, 0.22 ) }
    dend_4 { pt3dadd( -2.38661, -260.086, 38.3846, 0.22 ) }
    dend_4 { pt3dadd( -2.24972, -261.464, 38.3763, 0.22 ) }
    dend_4 { pt3dadd( -2.12078, -262.461, 38.417, 0.22 ) }
    dend_4 { pt3dadd( -1.93155, -263.606, 38.5103, 0.22 ) }
    dend_4 { pt3dadd( -1.6315, -265.133, 38.7172, 0.22 ) }
    dend_4 { pt3dadd( -1.43789, -266.21, 38.9036, 0.22 ) }
    dend_4 { pt3dadd( -1.25409, -267.305, 39.1806, 0.22 ) }
    dend_4 { pt3dadd( -1.1319, -268.298, 39.5093, 0.22 ) }
    dend_4 { pt3dadd( -1.11459, -268.909, 39.6919, 0.22 ) }
    dend_4 { pt3dadd( -1.3325, -270.406, 39.9706, 0.22 ) }
    dend_4 { pt3dadd( -1.80459, -271.503, 39.9221, 0.22 ) }
    dend_4 { pt3dadd( -2.38635, -272.408, 39.7047, 0.22 ) }
    dend_4 { pt3dadd( -2.85067, -272.922, 39.4323, 0.22 ) }
    dend_4 { pt3dadd( -4.14685, -274.139, 38.5312, 0.22 ) }
    dend_4 { pt3dadd( -5.23019, -275.006, 37.6561, 0.22 ) }
    dend_4 { pt3dadd( -5.90265, -275.395, 36.9722, 0.22 ) }
    dend_4 { pt3dadd( -6.3539, -285.867, 37.4109, 0.22 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 47/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 16.2213, 56.7708, -109.703, 0.37 ) }
    dend_104 { pt3dadd( 16.4335, 56.1047, -109.429, 0.37 ) }
    dend_104 { pt3dadd( 17.0244, 54.4122, -108.728, 0.29 ) }
    dend_104 { pt3dadd( 17.4204, 53.3561, -108.307, 0.44 ) }
    dend_104 { pt3dadd( 17.7797, 52.4193, -107.961, 0.37 ) }
    dend_104 { pt3dadd( 18.7561, 50.0158, -106.945, 0.96 ) }
    dend_104 { pt3dadd( 19.2131, 48.9677, -106.467, 0.81 ) }
    dend_104 { pt3dadd( 19.6359, 48.0682, -105.993, 0.59 ) }
    dend_104 { pt3dadd( 20.0504, 47.3098, -105.539, 0.59 ) }
    dend_104 { pt3dadd( 20.5825, 46.4032, -104.994, 0.44 ) }
    dend_104 { pt3dadd( 21.6559, 44.5784, -103.885, 0.66 ) }
    dend_104 { pt3dadd( 22.0139, 43.9703, -103.51, 0.66 ) }
    dend_104 { pt3dadd( 22.3418, 43.4219, -103.115, 0.66 ) }
    dend_104 { pt3dadd( 22.9297, 42.4939, -102.417, 0.37 ) }
    dend_104 { pt3dadd( 23.5923, 41.4163, -101.646, 0.37 ) }
    dend_104 { pt3dadd( 24.5418, 39.8157, -100.617, 0.74 ) }
    dend_104 { pt3dadd( 25.3215, 38.4674, -99.8764, 0.44 ) }
    dend_104 { pt3dadd( 26.3015, 36.7879, -99.0323, 0.37 ) }
    dend_104 { pt3dadd( 27.1812, 35.3034, -98.3664, 0.29 ) }
    dend_104 { pt3dadd( 27.8857, 34.1271, -97.8972, 0.44 ) }
    dend_104 { pt3dadd( 28.6084, 32.9381, -97.5004, 0.52 ) }
    dend_104 { pt3dadd( 29.1027, 32.0722, -97.3044, 0.59 ) }
    dend_104 { pt3dadd( 29.6918, 30.9016, -97.1241, 0.59 ) }
    dend_104 { pt3dadd( 30.369, 29.4443, -96.9454, 0.44 ) }
    dend_104 { pt3dadd( 30.87, 28.3011, -96.789, 0.96 ) }
    dend_104 { pt3dadd( 31.0745, 27.7869, -96.7496, 1.18 ) }
    dend_104 { pt3dadd( 31.3217, 27.1086, -96.7336, 1.18 ) }
    dend_104 { pt3dadd( 31.666, 26.0869, -96.7536, 0.81 ) }
    dend_104 { pt3dadd( 32.0211, 24.9733, -96.8203, 0.66 ) }
    dend_104 { pt3dadd( 32.4098, 23.8482, -96.9235, 0.66 ) }
    dend_104 { pt3dadd( 33.2457, 21.6019, -97.1809, 0.29 ) }
    dend_104 { pt3dadd( 33.6536, 20.5335, -97.3328, 0.29 ) }
    dend_104 { pt3dadd( 33.7342, 20.3298, -97.3706, 0.44 ) }
    dend_104 { pt3dadd( 34.0654, 19.5291, -97.5714, 0.15 ) }
    dend_104 { pt3dadd( 34.4034, 18.6772, -97.8387, 0.15 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 82/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 16.2213, 56.7708, -109.703, 1.03 ) }
    dend_103 { pt3dadd( 16.9473, 57.3109, -111.364, 1.03 ) }
    dend_103 { pt3dadd( 17.5262, 57.9286, -112.958, 1.18 ) }
    dend_103 { pt3dadd( 18.161, 58.8552, -114.979, 1.4 ) }
    dend_103 { pt3dadd( 19.5763, 61.1688, -119.47, 1.18 ) }
    dend_103 { pt3dadd( 20.1848, 62.2195, -121.296, 1.03 ) }
    dend_103 { pt3dadd( 20.6957, 63.092, -122.685, 1.03 ) }
    dend_103 { pt3dadd( 21.7874, 64.8474, -125.237, 0.96 ) }
    dend_103 { pt3dadd( 22.7493, 66.3649, -127.174, 0.88 ) }
    dend_103 { pt3dadd( 23.2276, 67.133, -128.017, 0.88 ) }
    dend_103 { pt3dadd( 23.7525, 68.0963, -128.844, 1.33 ) }
    dend_103 { pt3dadd( 24.5347, 69.6091, -130.16, 0.96 ) }
    dend_103 { pt3dadd( 25.1886, 70.9784, -131.446, 0.81 ) }
    dend_103 { pt3dadd( 26.0469, 72.9935, -133.461, 0.81 ) }
    dend_103 { pt3dadd( 26.5608, 74.6854, -135.225, 0.81 ) }
    dend_103 { pt3dadd( 26.7172, 75.6471, -136.244, 0.66 ) }
    dend_103 { pt3dadd( 26.7727, 77.3089, -137.924, 0.66 ) }
    dend_103 { pt3dadd( 26.6172, 79.3375, -139.865, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_103 { pt3dadd( 26.4144, 80.611, -141.033, 1.03 ) }
    dend_103 { pt3dadd( 26.0497, 81.9712, -142.188, 0.74 ) }
    dend_103 { pt3dadd( 25.4536, 83.5541, -143.449, 0.74 ) }
    dend_103 { pt3dadd( 24.9261, 84.767, -144.407, 1.11 ) }
    dend_103 { pt3dadd( 24.0881, 86.5689, -145.7, 1.47 ) }
    dend_103 { pt3dadd( 23.9139, 86.916, -145.966, 1.47 ) }
    dend_103 { pt3dadd( 22.6218, 89.2679, -147.804, 0.66 ) }
    dend_103 { pt3dadd( 21.6877, 90.9393, -149.216, 0.88 ) }
    dend_103 { pt3dadd( 20.9686, 92.3522, -150.391, 0.96 ) }
    dend_103 { pt3dadd( 20.3658, 93.7321, -151.498, 1.18 ) }
    dend_103 { pt3dadd( 19.4216, 96.2546, -153.272, 1.4 ) }
    dend_103 { pt3dadd( 18.9224, 97.974, -154.345, 0.66 ) }
    dend_103 { pt3dadd( 18.2984, 101.156, -156.089, 0.96 ) }
    dend_103 { pt3dadd( 18.0833, 102.641, -156.814, 0.52 ) }
    dend_103 { pt3dadd( 17.8308, 104.614, -157.641, 0.52 ) }
    dend_103 { pt3dadd( 17.6026, 106.338, -158.259, 0.81 ) }
    dend_103 { pt3dadd( 17.3497, 107.915, -158.694, 0.96 ) }
    dend_103 { pt3dadd( 17.0695, 109.465, -159.069, 0.96 ) }
    dend_103 { pt3dadd( 16.7748, 111.076, -159.364, 0.74 ) }
    dend_103 { pt3dadd( 16.2356, 113.94, -159.841, 0.66 ) }
    dend_103 { pt3dadd( 15.9743, 115.543, -160.071, 0.66 ) }
    dend_103 { pt3dadd( 15.7427, 117.396, -160.337, 0.74 ) }
    dend_103 { pt3dadd( 15.5581, 119.48, -160.638, 0.74 ) }
    dend_103 { pt3dadd( 15.4482, 121.449, -160.941, 0.74 ) }
    dend_103 { pt3dadd( 15.376, 124.07, -161.368, 1.11 ) }
    dend_103 { pt3dadd( 15.3533, 125.396, -161.576, 1.18 ) }
    dend_103 { pt3dadd( 15.3247, 126.392, -161.758, 1.18 ) }
    dend_103 { pt3dadd( 15.1544, 128.32, -162.147, 0.96 ) }
    dend_103 { pt3dadd( 14.6432, 131.197, -162.759, 0.74 ) }
    dend_103 { pt3dadd( 14.1961, 132.898, -163.113, 0.66 ) }
    dend_103 { pt3dadd( 13.6129, 134.502, -163.43, 0.52 ) }
    dend_103 { pt3dadd( 12.9658, 135.876, -163.671, 0.52 ) }
    dend_103 { pt3dadd( 11.8705, 137.752, -163.94, 0.81 ) }
    dend_103 { pt3dadd( 11.1002, 138.835, -164.045, 1.03 ) }
    dend_103 { pt3dadd( 10.2882, 139.808, -164.15, 0.66 ) }
    dend_103 { pt3dadd( 9.08069, 141.154, -164.338, 0.81 ) }
    dend_103 { pt3dadd( 8.09623, 142.236, -164.51, 0.81 ) }
    dend_103 { pt3dadd( 6.99425, 143.471, -164.716, 0.81 ) }
    dend_103 { pt3dadd( 6.02456, 144.587, -164.9, 0.66 ) }
    dend_103 { pt3dadd( 5.0876, 145.637, -165.097, 0.66 ) }
    dend_103 { pt3dadd( 3.6386, 147.166, -165.421, 0.81 ) }
    dend_103 { pt3dadd( 2.71167, 148.064, -165.63, 0.81 ) }
    dend_103 { pt3dadd( 1.3521, 149.271, -165.941, 0.66 ) }
    dend_103 { pt3dadd( 0.105598, 150.305, -166.302, 0.81 ) }
    dend_103 { pt3dadd( -1.06038, 151.23, -166.683, 0.66 ) }
    dend_103 { pt3dadd( -2.15991, 152.183, -167.225, 0.66 ) }
    dend_103 { pt3dadd( -3.19247, 153.208, -167.949, 0.66 ) }
    dend_103 { pt3dadd( -4.14232, 154.423, -168.876, 0.88 ) }
    dend_103 { pt3dadd( -4.96491, 156.109, -170.254, 0.88 ) }
    dend_103 { pt3dadd( -5.10667, 157.13, -171.116, 1.03 ) }
    dend_103 { pt3dadd( -4.67223, 160.091, -174.118, 0.37 ) }
    dend_103 { pt3dadd( -4.38216, 160.724, -175.103, 0.37 ) }
    dend_103 { pt3dadd( -3.94617, 161.299, -176.288, 0.29 ) }
    dend_103 { pt3dadd( -3.4594, 161.811, -177.817, 0.29 ) }
    dend_103 { pt3dadd( -2.75096, 162.507, -180.388, 1.03 ) }
    dend_103 { pt3dadd( -1.71249, 163.63, -184.944, 1.62 ) }
    dend_103 { pt3dadd( -0.525307, 165.157, -191.37, 1.18 ) }
    dend_103 { pt3dadd( -0.20446, 165.745, -193.746, 0.81 ) }
    dend_103 { pt3dadd( 0.417087, 167.893, -201.634, 0.52 ) }
    dend_103 { pt3dadd( 0.459505, 168.283, -202.87, 0.52 ) }
    dend_103 { pt3dadd( 0.436757, 169.08, -204.97, 0.52 ) }
    dend_103 { pt3dadd( 0.324085, 169.857, -206.394, 0.52 ) }
    dend_103 { pt3dadd( 0.126196, 170.908, -207.584, 0.52 ) }
    dend_103 { pt3dadd( -0.199922, 172.845, -209.123, 0.74 ) }
    dend_103 { pt3dadd( -0.306207, 174.229, -209.803, 0.44 ) }
    dend_103 { pt3dadd( -0.363871, 175.514, -210.407, 0.44 ) }
    dend_103 { pt3dadd( -0.385499, 176.676, -210.894, 0.66 ) }
    dend_103 { pt3dadd( -0.393218, 178.58, -211.59, 0.37 ) }
    dend_103 { pt3dadd( -0.374833, 179.856, -211.983, 0.37 ) }
    dend_103 { pt3dadd( -0.432222, 182.005, -212.556, 0.52 ) }
    dend_103 { pt3dadd( -0.707711, 184.406, -213.118, 0.52 ) }
    dend_103 { pt3dadd( -1.01693, 186.205, -213.429, 0.74 ) }
    dend_103 { pt3dadd( -1.20666, 187.174, -213.548, 0.74 ) }
    dend_103 { pt3dadd( -1.55444, 188.917, -213.665, 0.52 ) }
    dend_103 { pt3dadd( -1.86859, 190.647, -213.656, 0.74 ) }
    dend_103 { pt3dadd( -2.38921, 193.527, -213.431, 0.29 ) }
    dend_103 { pt3dadd( -2.74414, 195.312, -213.243, 0.52 ) }
    dend_103 { pt3dadd( -3.12979, 196.902, -213.051, 0.66 ) }
    dend_103 { pt3dadd( -3.41091, 197.994, -212.9, 0.66 ) }
    dend_103 { pt3dadd( -3.89619, 200.247, -212.538, 0.44 ) }
    dend_103 { pt3dadd( -4.10053, 201.755, -212.285, 0.44 ) }
    dend_103 { pt3dadd( -4.20252, 203.28, -212.051, 0.44 ) }
    dend_103 { pt3dadd( -4.25428, 205.427, -211.913, 0.59 ) }
    dend_103 { pt3dadd( -4.23236, 207.381, -212.019, 0.96 ) }
    dend_103 { pt3dadd( -4.12679, 209.541, -212.502, 0.37 ) }
    dend_103 { pt3dadd( -3.96299, 211.295, -213.157, 0.37 ) }
    dend_103 { pt3dadd( -3.74219, 212.807, -213.882, 0.81 ) }
    dend_103 { pt3dadd( -3.24344, 215.531, -215.352, 0.44 ) }
    dend_103 { pt3dadd( -2.85429, 217.581, -216.525, 0.44 ) }
    dend_103 { pt3dadd( -2.49444, 219.655, -217.86, 0.44 ) }
    dend_103 { pt3dadd( -2.30179, 221.178, -218.929, 0.74 ) }
    dend_103 { pt3dadd( -2.17171, 222.477, -219.877, 0.74 ) }
    dend_103 { pt3dadd( -2.00519, 224.074, -220.99, 0.22 ) }
    dend_103 { pt3dadd( -1.81711, 225.637, -221.754, 0.22 ) }
    // Section: dend_99, id: dend_99, parent: dend_89 (entry count 94/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 6.6241, 74.2114, -83.3258, 0.44 ) }
    dend_99 { pt3dadd( 7.32084, 76.3999, -83.1708, 0.44 ) }
    dend_99 { pt3dadd( 7.83727, 78.214, -83.1585, 0.44 ) }
    dend_99 { pt3dadd( 8.58097, 81.019, -83.3587, 0.81 ) }
    dend_99 { pt3dadd( 8.98614, 82.4945, -83.5745, 0.81 ) }
    dend_99 { pt3dadd( 9.3872, 83.9866, -83.8888, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_99 { pt3dadd( 9.61103, 84.8941, -84.1098, 1.03 ) }
    dend_99 { pt3dadd( 9.88087, 86.5862, -84.5614, 0.88 ) }
    dend_99 { pt3dadd( 10.0547, 88.032, -85.0446, 0.74 ) }
    dend_99 { pt3dadd( 10.2413, 89.5189, -85.6035, 0.96 ) }
    dend_99 { pt3dadd( 10.4126, 90.8677, -86.102, 0.96 ) }
    dend_99 { pt3dadd( 10.6205, 92.5469, -86.6691, 0.52 ) }
    dend_99 { pt3dadd( 10.8071, 94.0557, -87.0162, 0.52 ) }
    dend_99 { pt3dadd( 10.8849, 94.7251, -87.0364, 0.74 ) }
    dend_99 { pt3dadd( 11.0385, 95.9267, -86.7702, 0.44 ) }
    dend_99 { pt3dadd( 11.2027, 97.2698, -86.1995, 0.81 ) }
    dend_99 { pt3dadd( 11.3398, 98.4606, -85.5238, 0.81 ) }
    dend_99 { pt3dadd( 11.4826, 100.361, -84.2557, 0.88 ) }
    dend_99 { pt3dadd( 11.4869, 102.218, -82.9005, 1.11 ) }
    dend_99 { pt3dadd( 11.3356, 104.161, -81.4646, 1.11 ) }
    dend_99 { pt3dadd( 11.1225, 105.59, -80.4267, 0.52 ) }
    dend_99 { pt3dadd( 10.992, 106.351, -79.872, 0.52 ) }
    dend_99 { pt3dadd( 10.8161, 107.358, -79.1714, 0.52 ) }
    dend_99 { pt3dadd( 10.7409, 108.309, -78.573, 0.52 ) }
    dend_99 { pt3dadd( 10.8626, 109.353, -77.933, 0.52 ) }
    dend_99 { pt3dadd( 11.26, 110.393, -77.2585, 0.52 ) }
    dend_99 { pt3dadd( 11.9956, 111.678, -76.3709, 0.74 ) }
    dend_99 { pt3dadd( 12.6097, 112.639, -75.7538, 0.66 ) }
    dend_99 { pt3dadd( 13.8166, 114.54, -74.6711, 0.52 ) }
    dend_99 { pt3dadd( 14.4561, 115.661, -74.1266, 0.52 ) }
    dend_99 { pt3dadd( 15.0254, 116.926, -73.6144, 0.52 ) }
    dend_99 { pt3dadd( 15.4242, 118.398, -73.1457, 0.66 ) }
    dend_99 { pt3dadd( 15.5567, 119.811, -72.7882, 0.66 ) }
    dend_99 { pt3dadd( 15.4984, 121.355, -72.4071, 0.37 ) }
    dend_99 { pt3dadd( 15.2741, 122.93, -72.0221, 0.37 ) }
    dend_99 { pt3dadd( 15.0495, 124.101, -71.6983, 0.37 ) }
    dend_99 { pt3dadd( 14.5975, 126.074, -71.0737, 0.74 ) }
    dend_99 { pt3dadd( 14.1475, 127.771, -70.4552, 0.96 ) }
    dend_99 { pt3dadd( 13.6583, 129.205, -69.89, 0.96 ) }
    dend_99 { pt3dadd( 12.9826, 130.678, -69.1703, 0.44 ) }
    dend_99 { pt3dadd( 12.2969, 131.854, -68.4941, 0.37 ) }
    dend_99 { pt3dadd( 11.5508, 132.955, -67.7936, 0.74 ) }
    dend_99 { pt3dadd( 10.7999, 133.905, -67.1582, 0.29 ) }
    dend_99 { pt3dadd( 9.4153, 135.455, -66.107, 0.29 ) }
    dend_99 { pt3dadd( 7.23324, 137.607, -64.7537, 1.03 ) }
    dend_99 { pt3dadd( 6.14386, 138.576, -64.203, 0.96 ) }
    dend_99 { pt3dadd( 5.17204, 139.459, -63.8059, 0.44 ) }
    dend_99 { pt3dadd( 4.55896, 140.094, -63.6031, 0.44 ) }
    dend_99 { pt3dadd( 3.84874, 141.01, -63.4284, 0.44 ) }
    dend_99 { pt3dadd( 2.57357, 143.095, -63.0861, 0.52 ) }
    dend_99 { pt3dadd( 1.90447, 144.438, -62.9406, 0.74 ) }
    dend_99 { pt3dadd( 0.942074, 146.812, -62.6121, 0.37 ) }
    dend_99 { pt3dadd( 0.571262, 148.059, -62.3716, 0.37 ) }
    dend_99 { pt3dadd( 0.311301, 149.503, -62.0196, 0.37 ) }
    dend_99 { pt3dadd( 0.140572, 152.088, -61.3105, 0.52 ) }
    dend_99 { pt3dadd( 0.161949, 153.344, -60.9172, 0.52 ) }
    dend_99 { pt3dadd( 0.215963, 154.58, -60.5367, 0.52 ) }
    dend_99 { pt3dadd( 0.304498, 156.215, -60.076, 0.52 ) }
    dend_99 { pt3dadd( 0.368189, 157.98, -59.6577, 0.74 ) }
    dend_99 { pt3dadd( 0.372106, 159.183, -59.4217, 0.74 ) }
    dend_99 { pt3dadd( 0.305095, 161.056, -59.1443, 0.44 ) }
    dend_99 { pt3dadd( 0.192073, 162.611, -58.8734, 0.44 ) }
    dend_99 { pt3dadd( 0.0910966, 163.737, -58.6485, 0.59 ) }
    dend_99 { pt3dadd( -0.0150254, 165.385, -58.2891, 0.59 ) }
    dend_99 { pt3dadd( -0.0524306, 166.744, -57.9342, 0.74 ) }
    dend_99 { pt3dadd( -0.0325992, 168.349, -57.4529, 0.81 ) }
    dend_99 { pt3dadd( 0.132594, 170.29, -56.7591, 0.52 ) }
    dend_99 { pt3dadd( 0.308697, 171.515, -56.2426, 0.52 ) }
    dend_99 { pt3dadd( 0.638997, 173.204, -55.4553, 0.52 ) }
    dend_99 { pt3dadd( 0.96135, 174.364, -54.8855, 0.52 ) }
    dend_99 { pt3dadd( 1.25672, 175.158, -54.547, 0.52 ) }
    dend_99 { pt3dadd( 2.05399, 176.938, -53.9905, 0.74 ) }
    dend_99 { pt3dadd( 2.92292, 178.771, -53.6573, 0.59 ) }
    dend_99 { pt3dadd( 3.67227, 180.481, -53.5496, 0.59 ) }
    dend_99 { pt3dadd( 4.07559, 181.678, -53.6155, 0.96 ) }
    dend_99 { pt3dadd( 4.48461, 183.545, -53.9044, 0.59 ) }
    dend_99 { pt3dadd( 4.68614, 185.448, -54.3161, 0.59 ) }
    dend_99 { pt3dadd( 4.68391, 187.024, -54.7459, 0.44 ) }
    dend_99 { pt3dadd( 4.55908, 188.323, -55.1289, 0.44 ) }
    dend_99 { pt3dadd( 4.269, 190.041, -55.636, 0.44 ) }
    dend_99 { pt3dadd( 3.96233, 191.523, -56.0177, 0.37 ) }
    dend_99 { pt3dadd( 3.57239, 193.364, -56.3761, 0.29 ) }
    dend_99 { pt3dadd( 3.41952, 194.238, -56.5057, 0.44 ) }
    dend_99 { pt3dadd( 3.24428, 196.085, -56.7005, 0.44 ) }
    dend_99 { pt3dadd( 3.24745, 196.876, -56.755, 0.29 ) }
    dend_99 { pt3dadd( 3.4024, 198.229, -56.7934, 0.29 ) }
    dend_99 { pt3dadd( 3.62784, 199.351, -56.7834, 0.44 ) }
    dend_99 { pt3dadd( 3.96936, 200.512, -56.7245, 0.44 ) }
    dend_99 { pt3dadd( 4.4173, 201.703, -56.6178, 0.44 ) }
    dend_99 { pt3dadd( 5.03912, 203.131, -56.4301, 0.29 ) }
    dend_99 { pt3dadd( 5.45999, 204.115, -56.2817, 0.29 ) }
    dend_99 { pt3dadd( 5.76292, 204.856, -56.1928, 0.44 ) }
    dend_99 { pt3dadd( 6.21192, 206.074, -56.1045, 0.44 ) }
    dend_99 { pt3dadd( 6.58683, 207.286, -56.0965, 0.22 ) }
    dend_99 { pt3dadd( 6.82488, 208.51, -56.2221, 0.29 ) }
    dend_99 { pt3dadd( 6.8528, 209.395, -56.4257, 0.29 ) }
    dend_99 { pt3dadd( 6.63609, 210.655, -56.869, 0.29 ) }
    dend_99 { pt3dadd( 6.39875, 211.521, -57.2481, 0.59 ) }
    dend_99 { pt3dadd( 6.1644, 212.298, -57.6455, 0.59 ) }
    dend_99 { pt3dadd( 5.83268, 213.506, -58.3754, 0.29 ) }
    dend_99 { pt3dadd( 5.65708, 214.489, -59.1198, 0.29 ) }
    dend_99 { pt3dadd( 5.59681, 215.479, -59.9663, 0.44 ) }
    dend_99 { pt3dadd( 5.62341, 216.765, -61.032, 0.44 ) }
    dend_99 { pt3dadd( 5.731, 218.142, -62.1167, 0.74 ) }
    dend_99 { pt3dadd( 5.90052, 219.372, -63.0385, 1.11 ) }
    dend_99 { pt3dadd( 6.31504, 221.637, -64.688, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_99 { pt3dadd( 6.46793, 222.491, -65.2995, 0.66 ) }
    dend_99 { pt3dadd( 6.68868, 224.552, -66.8003, 0.44 ) }
    dend_99 { pt3dadd( 6.71076, 225.696, -67.6533, 0.37 ) }
    dend_99 { pt3dadd( 6.64322, 227.006, -68.5898, 0.37 ) }
    dend_99 { pt3dadd( 6.39278, 228.926, -69.8642, 0.96 ) }
    dend_99 { pt3dadd( 6.20482, 229.885, -70.4389, 1.4 ) }
    dend_99 { pt3dadd( 5.72469, 231.991, -71.6781, 0.59 ) }
    dend_99 { pt3dadd( 5.26164, 233.831, -72.7381, 0.37 ) }
    dend_99 { pt3dadd( 4.90972, 235.105, -73.3711, 0.37 ) }
    dend_99 { pt3dadd( 4.56487, 236.316, -73.8499, 0.29 ) }
    dend_99 { pt3dadd( 4.11322, 238.0, -74.255, 0.44 ) }
    dend_99 { pt3dadd( 3.84394, 239.143, -74.3279, 0.44 ) }
    dend_99 { pt3dadd( 3.50755, 240.777, -74.1493, 0.29 ) }
    dend_99 { pt3dadd( 3.04034, 242.99, -73.7391, 0.44 ) }
    dend_99 { pt3dadd( 2.74388, 244.387, -73.4086, 0.44 ) }
    dend_99 { pt3dadd( 2.21453, 247.024, -72.6229, 0.88 ) }
    dend_99 { pt3dadd( 1.62134, 249.7, -71.5922, 0.44 ) }
    dend_99 { pt3dadd( 1.30552, 250.997, -70.9512, 0.37 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 18/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 6.6241, 74.2114, -83.3258, 0.52 ) }
    dend_90 { pt3dadd( 5.49058, 74.9318, -83.3548, 0.52 ) }
    dend_90 { pt3dadd( 4.69949, 75.4137, -83.4099, 0.44 ) }
    dend_90 { pt3dadd( 4.14645, 75.7862, -83.4874, 0.44 ) }
    dend_90 { pt3dadd( 3.6442, 76.1736, -83.5781, 0.59 ) }
    dend_90 { pt3dadd( 3.2579, 76.508, -83.6658, 0.74 ) }
    dend_90 { pt3dadd( 2.70498, 77.0249, -83.8455, 0.44 ) }
    dend_90 { pt3dadd( 2.2467, 77.4959, -84.0818, 0.29 ) }
    dend_90 { pt3dadd( 1.67643, 78.1102, -84.4591, 0.44 ) }
    dend_90 { pt3dadd( 1.29269, 78.5172, -84.7426, 0.37 ) }
    dend_90 { pt3dadd( 0.844302, 79.0173, -85.121, 0.37 ) }
    dend_90 { pt3dadd( 0.126857, 79.9181, -85.82, 0.74 ) }
    dend_90 { pt3dadd( -0.290585, 80.5256, -86.2855, 0.88 ) }
    dend_90 { pt3dadd( -0.455474, 80.7925, -86.4782, 0.88 ) }
    dend_90 { pt3dadd( -0.727562, 81.27, -86.8003, 0.37 ) }
    dend_90 { pt3dadd( -0.99688, 81.8221, -87.1272, 0.37 ) }
    dend_90 { pt3dadd( -1.25605, 82.5006, -87.4135, 0.37 ) }
    dend_90 { pt3dadd( -1.38584, 82.8966, -87.507, 0.52 ) }
    dend_90 { pt3dadd( -1.55489, 83.3246, -87.5734, 0.52 ) }
    dend_90 { pt3dadd( -1.86505, 83.8913, -87.6434, 0.66 ) }
    dend_90 { pt3dadd( -2.20322, 84.3548, -87.7003, 0.66 ) }
    dend_90 { pt3dadd( -2.66998, 84.8494, -87.7462, 0.66 ) }
    dend_90 { pt3dadd( -3.04885, 85.1901, -87.7777, 0.37 ) }
    dend_90 { pt3dadd( -3.50632, 85.5577, -87.8121, 0.44 ) }
    dend_90 { pt3dadd( -4.28039, 86.1465, -87.8712, 0.44 ) }
    dend_90 { pt3dadd( -4.80043, 86.5185, -87.9122, 0.59 ) }
    dend_90 { pt3dadd( -5.40209, 86.9288, -87.9682, 0.66 ) }
    dend_90 { pt3dadd( -5.82127, 87.2142, -88.0158, 0.66 ) }
    dend_90 { pt3dadd( -6.43135, 87.6303, -88.0948, 0.37 ) }
    dend_90 { pt3dadd( -7.32615, 88.2402, -88.2663, 0.29 ) }
    dend_90 { pt3dadd( -7.83872, 88.574, -88.4101, 0.29 ) }
    dend_90 { pt3dadd( -8.37232, 88.9133, -88.6113, 0.29 ) }
    dend_90 { pt3dadd( -8.86555, 89.2097, -88.8717, 0.37 ) }
    dend_90 { pt3dadd( -9.30707, 89.4613, -89.1874, 0.52 ) }
    dend_90 { pt3dadd( -9.88051, 89.77, -89.6871, 0.52 ) }
    dend_90 { pt3dadd( -10.3146, 90.0174, -90.1171, 0.66 ) }
    dend_90 { pt3dadd( -10.6638, 90.2623, -90.5085, 0.66 ) }
    dend_90 { pt3dadd( -11.1222, 90.6608, -91.0637, 0.44 ) }
    dend_90 { pt3dadd( -11.6219, 91.1674, -91.6785, 0.29 ) }
    dend_90 { pt3dadd( -11.925, 91.5282, -92.0227, 0.29 ) }
    dend_90 { pt3dadd( -12.3665, 92.1027, -92.4168, 0.29 ) }
    dend_90 { pt3dadd( -12.8137, 92.6945, -92.7059, 0.44 ) }
    dend_90 { pt3dadd( -13.2275, 93.2212, -92.8824, 0.74 ) }
    dend_90 { pt3dadd( -13.5413, 93.6016, -92.9528, 0.74 ) }
    dend_90 { pt3dadd( -14.1832, 94.3027, -92.9834, 0.52 ) }
    dend_90 { pt3dadd( -14.7632, 94.8609, -92.9592, 0.52 ) }
    dend_90 { pt3dadd( -15.4086, 95.4096, -92.8891, 0.74 ) }
    dend_90 { pt3dadd( -15.8866, 95.791, -92.8114, 0.74 ) }
    dend_90 { pt3dadd( -16.2208, 96.0649, -92.7685, 0.88 ) }
    dend_90 { pt3dadd( -16.6788, 96.5023, -92.7212, 0.88 ) }
    dend_90 { pt3dadd( -17.2726, 97.2441, -92.6821, 0.37 ) }
    dend_90 { pt3dadd( -17.5609, 97.7692, -92.7065, 0.37 ) }
    dend_90 { pt3dadd( -17.6832, 98.1105, -92.7505, 0.66 ) }
    dend_90 { pt3dadd( -17.8825, 99.1101, -92.9175, 0.44 ) }
    dend_90 { pt3dadd( -17.9354, 99.7369, -93.0481, 0.74 ) }
    dend_90 { pt3dadd( -17.943, 100.369, -93.2049, 0.74 ) }
    dend_90 { pt3dadd( -17.9398, 101.107, -93.391, 1.03 ) }
    dend_90 { pt3dadd( -17.943, 101.543, -93.4713, 0.74 ) }
    dend_90 { pt3dadd( -17.9781, 102.279, -93.5457, 0.59 ) }
    dend_90 { pt3dadd( -18.0602, 102.958, -93.5516, 0.52 ) }
    dend_90 { pt3dadd( -18.1856, 103.516, -93.5337, 0.44 ) }
    dend_90 { pt3dadd( -18.4712, 104.389, -93.4756, 0.44 ) }
    dend_90 { pt3dadd( -18.8984, 105.467, -93.3694, 0.52 ) }
    dend_90 { pt3dadd( -19.2153, 106.174, -93.2943, 0.52 ) }
    dend_90 { pt3dadd( -19.5534, 106.873, -93.1962, 0.52 ) }
    dend_90 { pt3dadd( -19.9176, 107.597, -93.0593, 0.52 ) }
    dend_90 { pt3dadd( -20.2304, 108.164, -92.9313, 0.52 ) }
    dend_90 { pt3dadd( -20.4174, 108.453, -92.8614, 0.66 ) }
    dend_90 { pt3dadd( -20.8572, 108.996, -92.72, 0.66 ) }
    dend_90 { pt3dadd( -21.506, 109.7, -92.4002, 0.37 ) }
    dend_90 { pt3dadd( -21.8949, 110.112, -92.1361, 0.37 ) }
    dend_90 { pt3dadd( -22.3454, 110.592, -91.7514, 0.37 ) }
    dend_90 { pt3dadd( -22.695, 110.99, -91.4052, 0.37 ) }
    dend_90 { pt3dadd( -22.9886, 111.353, -91.0916, 0.37 ) }
    dend_90 { pt3dadd( -23.7045, 112.409, -90.2415, 0.74 ) }
    dend_90 { pt3dadd( -24.0483, 113.018, -89.8404, 0.59 ) }
    dend_90 { pt3dadd( -24.1369, 113.206, -89.7425, 1.03 ) }
    dend_90 { pt3dadd( -24.3657, 113.755, -89.5037, 0.74 ) }
    dend_90 { pt3dadd( -24.6264, 114.345, -89.2771, 0.74 ) }
    dend_90 { pt3dadd( -25.0171, 115.082, -89.0511, 0.37 ) }
    dend_90 { pt3dadd( -25.4176, 115.68, -88.8931, 0.52 ) }
    dend_90 { pt3dadd( -25.7525, 116.071, -88.7505, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_90 { pt3dadd( -25.8758, 116.199, -88.6875, 0.37 ) }
    dend_90 { pt3dadd( -26.4673, 116.749, -88.3716, 0.37 ) }
    dend_90 { pt3dadd( -27.016, 117.212, -88.0616, 1.55 ) }
    dend_90 { pt3dadd( -27.4468, 117.536, -87.8055, 1.55 ) }
    dend_90 { pt3dadd( -27.9359, 117.893, -87.4713, 0.81 ) }
    dend_90 { pt3dadd( -28.6177, 118.394, -86.9632, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 6/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 3.7, 68.3701, 119.628, 0.44 ) }
    dend_71 { pt3dadd( -1.22658, 72.1599, 127.209, 0.44 ) }
    dend_71 { pt3dadd( -6.9225, 75.2396, 134.549, 0.44 ) }
    dend_71 { pt3dadd( -11.1492, 77.1748, 143.154, 0.44 ) }
    dend_71 { pt3dadd( -15.9945, 77.3111, 151.653, 0.44 ) }
    dend_71 { pt3dadd( -20.2958, 76.0475, 160.373, 0.44 ) }
    dend_71 { pt3dadd( -24.1327, 72.8685, 168.877, 0.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 13/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 3.7, 68.3701, 119.628, 0.22 ) }
    dend_70 { pt3dadd( -0.75756, 69.4578, 130.273, 0.44 ) }
    dend_70 { pt3dadd( -4.02764, 68.9248, 141.369, 0.44 ) }
    dend_70 { pt3dadd( -5.98067, 69.7674, 152.758, 0.44 ) }
    dend_70 { pt3dadd( -7.88745, 68.6641, 164.128, 0.44 ) }
    dend_70 { pt3dadd( -10.5191, 69.4027, 175.387, 0.44 ) }
    dend_70 { pt3dadd( -12.5915, 71.4733, 186.616, 0.44 ) }
    dend_70 { pt3dadd( -15.2779, 72.8514, 197.81, 0.44 ) }
    dend_70 { pt3dadd( -19.3806, 72.3964, 208.629, 0.44 ) }
    dend_70 { pt3dadd( -22.9957, 71.2777, 219.574, 0.44 ) }
    dend_70 { pt3dadd( -27.6245, 69.8625, 230.096, 0.44 ) }
    dend_70 { pt3dadd( -32.8376, 69.1903, 240.414, 0.44 ) }
    dend_70 { pt3dadd( -39.1303, 70.1933, 250.099, 0.44 ) }
    dend_70 { pt3dadd( -46.4964, 71.335, 258.982, 0.44 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 27/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 42.3093, 64.2194, 100.984, 0.44 ) }
    dend_68 { pt3dadd( 47.4844, 67.352, 112.536, 0.44 ) }
    dend_68 { pt3dadd( 52.3966, 70.8355, 124.109, 0.44 ) }
    dend_68 { pt3dadd( 56.0825, 72.6214, 136.439, 0.44 ) }
    dend_68 { pt3dadd( 59.5887, 72.9202, 148.927, 0.44 ) }
    dend_68 { pt3dadd( 62.5573, 75.5945, 161.299, 0.44 ) }
    dend_68 { pt3dadd( 63.5102, 78.698, 173.878, 0.44 ) }
    dend_68 { pt3dadd( 63.9948, 80.578, 186.706, 0.44 ) }
    dend_68 { pt3dadd( 62.3216, 81.7866, 199.511, 0.44 ) }
    dend_68 { pt3dadd( 62.2288, 81.0066, 212.465, 0.44 ) }
    dend_68 { pt3dadd( 62.1704, 82.854, 225.305, 0.44 ) }
    dend_68 { pt3dadd( 61.638, 82.6899, 238.268, 0.44 ) }
    dend_68 { pt3dadd( 62.3662, 84.4675, 251.099, 0.44 ) }
    dend_68 { pt3dadd( 62.4614, 88.2981, 263.517, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 41/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 42.3093, 64.2194, 100.984, 0.22 ) }
    dend_53 { pt3dadd( 46.38, 66.5818, 109.655, 0.44 ) }
    dend_53 { pt3dadd( 51.8188, 71.0096, 116.764, 0.44 ) }
    dend_53 { pt3dadd( 54.7541, 75.6225, 125.035, 0.44 ) }
    dend_53 { pt3dadd( 56.447, 80.2465, 133.605, 0.44 ) }
    dend_53 { pt3dadd( 58.4805, 83.7007, 142.609, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_42 (entry count 47/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 19.3936, 59.8448, 45.8215, 1.03 ) }
    dend_50 { pt3dadd( 19.5026, 60.4379, 46.2923, 1.03 ) }
    dend_50 { pt3dadd( 19.6626, 61.1576, 46.9266, 0.44 ) }
    dend_50 { pt3dadd( 19.8969, 61.7983, 47.5617, 0.52 ) }
    dend_50 { pt3dadd( 20.3034, 62.5389, 48.3865, 0.96 ) }
    dend_50 { pt3dadd( 21.0359, 63.45, 49.5744, 1.25 ) }
    dend_50 { pt3dadd( 21.4053, 63.7437, 50.038, 1.4 ) }
    dend_50 { pt3dadd( 21.761, 63.9164, 50.4103, 1.18 ) }
    dend_50 { pt3dadd( 22.7089, 64.1897, 51.2026, 0.29 ) }
    dend_50 { pt3dadd( 23.4499, 64.3465, 51.7325, 0.29 ) }
    dend_50 { pt3dadd( 24.3541, 64.5315, 52.2603, 0.66 ) }
    dend_50 { pt3dadd( 25.6282, 64.8331, 52.897, 0.37 ) }
    dend_50 { pt3dadd( 26.3537, 65.1251, 53.2688, 0.37 ) }
    dend_50 { pt3dadd( 26.9634, 65.578, 53.6399, 0.37 ) }
    dend_50 { pt3dadd( 27.4759, 66.3444, 54.0804, 0.37 ) }
    dend_50 { pt3dadd( 27.8286, 67.203, 54.5126, 0.74 ) }
    dend_50 { pt3dadd( 27.9929, 67.8317, 54.7996, 1.11 ) }
    dend_50 { pt3dadd( 28.1085, 68.5328, 55.1185, 1.11 ) }
    dend_50 { pt3dadd( 28.1672, 69.0195, 55.3333, 1.11 ) }
    dend_50 { pt3dadd( 28.2302, 69.5576, 55.5541, 1.11 ) }
    dend_50 { pt3dadd( 28.3392, 70.3267, 55.8151, 0.88 ) }
    dend_50 { pt3dadd( 28.4982, 71.2774, 56.1381, 1.18 ) }
    dend_50 { pt3dadd( 28.6421, 72.0045, 56.3737, 1.18 ) }
    dend_50 { pt3dadd( 28.8163, 72.7221, 56.5953, 1.03 ) }
    dend_50 { pt3dadd( 29.0377, 73.517, 56.8467, 0.59 ) }
    dend_50 { pt3dadd( 29.2674, 74.3169, 57.0885, 0.37 ) }
    dend_50 { pt3dadd( 29.7039, 75.6001, 57.4682, 0.29 ) }
    dend_50 { pt3dadd( 30.0179, 76.3113, 57.7479, 0.52 ) }
    dend_50 { pt3dadd( 30.2194, 76.6864, 57.9442, 0.66 ) }
    dend_50 { pt3dadd( 30.7772, 77.5199, 58.5077, 0.37 ) }
    dend_50 { pt3dadd( 31.4229, 78.3255, 59.1641, 0.37 ) }
    dend_50 { pt3dadd( 32.0067, 78.9562, 59.7374, 0.59 ) }
    dend_50 { pt3dadd( 32.9952, 79.9317, 60.6454, 1.18 ) }
    dend_50 { pt3dadd( 33.6553, 80.5544, 61.2269, 0.88 ) }
    dend_50 { pt3dadd( 34.3062, 81.1386, 61.7519, 0.29 ) }
    dend_50 { pt3dadd( 34.6921, 81.4593, 62.0344, 0.29 ) }
    dend_50 { pt3dadd( 35.2473, 81.9333, 62.415, 0.52 ) }
    dend_50 { pt3dadd( 35.5967, 82.2912, 62.6304, 0.59 ) }
    dend_50 { pt3dadd( 36.1506, 83.0454, 62.9209, 0.52 ) }
    dend_50 { pt3dadd( 36.546, 83.8251, 63.1266, 0.81 ) }
    dend_50 { pt3dadd( 36.7728, 84.5375, 63.3073, 0.96 ) }
    dend_50 { pt3dadd( 37.0171, 85.4915, 63.5751, 1.11 ) }
    dend_50 { pt3dadd( 37.1823, 86.1326, 63.8084, 1.33 ) }
    dend_50 { pt3dadd( 37.4991, 87.1242, 64.2817, 1.99 ) }
    dend_50 { pt3dadd( 37.9097, 88.0754, 64.8969, 2.21 ) }
    dend_50 { pt3dadd( 38.7274, 89.3676, 66.0175, 0.96 ) }
    dend_50 { pt3dadd( 39.2531, 89.9045, 66.6268, 0.66 ) }
    dend_50 { pt3dadd( 40.2149, 90.6445, 67.6851, 0.29 ) }
    dend_50 { pt3dadd( 41.0399, 91.0874, 68.5283, 0.29 ) }
    dend_50 { pt3dadd( 41.9471, 91.383, 69.3828, 0.29 ) }
    dend_50 { pt3dadd( 42.4562, 91.4492, 69.8395, 0.29 ) }
    dend_50 { pt3dadd( 43.1282, 91.3948, 70.3681, 0.22 ) }
    dend_50 { pt3dadd( 49.1579, 97.5038, 75.073, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 0/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.3936, 59.8448, 45.8215, 0.96 ) }
    dend_43 { pt3dadd( 17.6758, 63.4543, 47.1696, 0.96 ) }
    dend_43 { pt3dadd( 17.1439, 64.429, 47.4777, 0.44 ) }
    dend_43 { pt3dadd( 16.3462, 65.5189, 48.0185, 0.37 ) }
    dend_43 { pt3dadd( 15.6429, 66.2988, 48.5921, 0.29 ) }
    dend_43 { pt3dadd( 15.0909, 66.8857, 49.0532, 0.37 ) }
    dend_43 { pt3dadd( 14.6563, 67.3472, 49.4028, 0.37 ) }
    dend_43 { pt3dadd( 14.0092, 68.0204, 49.8696, 0.37 ) }
    dend_43 { pt3dadd( 11.7301, 70.2415, 51.4527, 1.18 ) }
    dend_43 { pt3dadd( 9.93474, 71.9364, 52.6229, 1.18 ) }
    dend_43 { pt3dadd( 9.05627, 72.7543, 53.1525, 0.88 ) }
    dend_43 { pt3dadd( 8.21126, 73.6126, 53.581, 0.88 ) }
    dend_43 { pt3dadd( 7.50539, 74.4112, 53.8372, 0.81 ) }
    dend_43 { pt3dadd( 6.95058, 75.1342, 53.8933, 1.18 ) }
    dend_43 { pt3dadd( 6.30857, 76.098, 53.7062, 1.18 ) }
    dend_43 { pt3dadd( 5.53278, 77.3649, 53.2941, 0.74 ) }
    dend_43 { pt3dadd( 4.57982, 78.884, 52.6362, 0.52 ) }
    dend_43 { pt3dadd( 4.01257, 79.7152, 52.1822, 0.29 ) }
    dend_43 { pt3dadd( 3.44353, 80.4599, 51.6741, 0.29 ) }
    dend_43 { pt3dadd( 3.12208, 80.8592, 51.3324, 0.96 ) }
    dend_43 { pt3dadd( 2.80983, 81.2458, 50.9221, 1.18 ) }
    dend_43 { pt3dadd( 2.02593, 82.2354, 49.5723, 0.22 ) }
    dend_43 { pt3dadd( 1.51724, 82.7909, 48.6269, 0.22 ) }
    dend_43 { pt3dadd( 1.11168, 83.1991, 47.7914, 0.59 ) }
    dend_43 { pt3dadd( 0.716127, 83.5716, 46.9541, 0.52 ) }
    dend_43 { pt3dadd( 0.332823, 83.9184, 46.165, 0.52 ) }
    dend_43 { pt3dadd( -0.207373, 84.4371, 45.0644, 0.66 ) }
    dend_43 { pt3dadd( -0.379795, 84.6387, 44.702, 0.66 ) }
    dend_43 { pt3dadd( -0.773242, 85.1738, 43.7727, 0.29 ) }
    dend_43 { pt3dadd( -0.945813, 85.3969, 43.4133, 0.29 ) }
    dend_43 { pt3dadd( -1.32372, 85.8716, 42.7489, 0.29 ) }
    dend_43 { pt3dadd( -1.49342, 86.0957, 42.4714, 0.74 ) }
    dend_43 { pt3dadd( -1.9095, 86.7321, 41.687, 0.74 ) }
    dend_43 { pt3dadd( -2.12221, 87.1669, 41.0557, 0.59 ) }
    dend_43 { pt3dadd( -2.26267, 87.6204, 40.219, 0.29 ) }
    dend_43 { pt3dadd( -2.36404, 88.0241, 39.3939, 1.03 ) }
    dend_43 { pt3dadd( -2.4335, 88.3346, 38.7145, 1.03 ) }
    dend_43 { pt3dadd( -2.55387, 89.0326, 37.2164, 0.88 ) }
    dend_43 { pt3dadd( -2.64247, 89.8334, 35.5821, 0.88 ) }
    dend_43 { pt3dadd( -2.74716, 91.007, 33.3641, 0.37 ) }
    dend_43 { pt3dadd( -2.7199, 91.4136, 32.5294, 0.88 ) }
    dend_43 { pt3dadd( -2.67282, 91.7178, 31.9272, 1.33 ) }
    dend_43 { pt3dadd( -2.55672, 92.3828, 30.7446, 0.37 ) }
    dend_43 { pt3dadd( -2.51034, 92.6652, 30.3163, 0.22 ) }
    dend_43 { pt3dadd( -2.38851, 93.3368, 29.4332, 0.22 ) }
    dend_43 { pt3dadd( -1.68728, 96.5394, 25.5141, 0.66 ) }
    dend_43 { pt3dadd( -1.48445, 97.0427, 24.7512, 0.29 ) }
    dend_43 { pt3dadd( -1.24559, 97.5031, 23.9835, 0.22 ) }
    dend_43 { pt3dadd( -1.0991, 97.7587, 23.5192, 0.22 ) }
    dend_43 { pt3dadd( -0.659104, 98.5277, 22.0815, 1.11 ) }
    dend_43 { pt3dadd( -0.425938, 98.9577, 21.289, 1.11 ) }
    dend_43 { pt3dadd( 0.336569, 101.051, 18.2206, 0.37 ) }
    dend_43 { pt3dadd( 0.460889, 101.421, 17.674, 0.29 ) }
    dend_43 { pt3dadd( 0.588559, 101.866, 17.0785, 0.29 ) }
    dend_43 { pt3dadd( 0.706136, 102.514, 16.3418, 0.29 ) }
    dend_43 { pt3dadd( 0.733555, 103.51, 15.4657, 0.29 ) }
    dend_43 { pt3dadd( 0.655838, 104.54, 14.7584, 0.29 ) }
    dend_43 { pt3dadd( 0.56824, 105.006, 14.5331, 0.29 ) }
    dend_43 { pt3dadd( 0.397528, 106.007, 14.0222, 0.66 ) }
    dend_43 { pt3dadd( 0.333281, 106.58, 13.752, 0.81 ) }
    dend_43 { pt3dadd( 0.300482, 107.293, 13.4686, 0.96 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -22.299, 172.92, -66.251, 0.29 ) }
    dend_33 { pt3dadd( -21.7783, 174.507, -66.8575, 0.29 ) }
    dend_33 { pt3dadd( -21.5092, 175.121, -67.1796, 0.29 ) }
    dend_33 { pt3dadd( -21.1771, 175.802, -67.5812, 0.29 ) }
    dend_33 { pt3dadd( -20.9027, 176.369, -67.9196, 0.52 ) }
    dend_33 { pt3dadd( -20.5777, 177.079, -68.349, 0.52 ) }
    dend_33 { pt3dadd( -20.2916, 177.771, -68.7668, 0.66 ) }
    dend_33 { pt3dadd( -19.9885, 178.742, -69.3904, 0.29 ) }
    dend_33 { pt3dadd( -19.8855, 179.185, -69.7277, 0.29 ) }
    dend_33 { pt3dadd( -19.795, 179.739, -70.215, 0.37 ) }
    dend_33 { pt3dadd( -19.7492, 180.119, -70.5754, 0.37 ) }
    dend_33 { pt3dadd( -19.7095, 180.479, -70.9664, 0.29 ) }
    dend_33 { pt3dadd( -19.6558, 181.259, -71.87, 0.29 ) }
    dend_33 { pt3dadd( -19.6488, 181.601, -72.2816, 0.29 ) }
    dend_33 { pt3dadd( -19.641, 182.026, -72.8536, 0.29 ) }
    dend_33 { pt3dadd( -19.6415, 182.464, -73.512, 0.74 ) }
    dend_33 { pt3dadd( -19.6704, 183.444, -75.203, 0.37 ) }
    dend_33 { pt3dadd( -19.6681, 183.668, -75.7097, 0.29 ) }
    dend_33 { pt3dadd( -19.6599, 183.833, -76.1496, 0.29 ) }
    dend_33 { pt3dadd( -19.6284, 184.095, -76.8384, 0.29 ) }
    dend_33 { pt3dadd( -19.5939, 184.302, -77.3418, 0.29 ) }
    dend_33 { pt3dadd( -19.5328, 184.675, -78.1766, 0.52 ) }
    dend_33 { pt3dadd( -19.3368, 185.751, -80.3401, 0.44 ) }
    dend_33 { pt3dadd( -19.2739, 185.931, -80.7103, 0.29 ) }
    dend_33 { pt3dadd( -19.0176, 186.555, -81.9544, 0.81 ) }
    dend_33 { pt3dadd( -18.6562, 187.337, -83.3984, 0.29 ) }
    dend_33 { pt3dadd( -18.5089, 187.631, -83.8977, 0.29 ) }
    dend_33 { pt3dadd( -18.1952, 188.264, -84.8372, 0.96 ) }
    dend_33 { pt3dadd( -17.6826, 189.43, -86.3613, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -22.299, 172.92, -66.251, 0.29 ) }
    dend_32 { pt3dadd( -24.2488, 172.815, -66.7006, 0.29 ) }
    dend_32 { pt3dadd( -25.5683, 173.037, -66.9844, 0.29 ) }
    dend_32 { pt3dadd( -26.7032, 173.455, -67.2378, 0.29 ) }
    dend_32 { pt3dadd( -27.5756, 173.84, -67.4598, 0.29 ) }
    dend_32 { pt3dadd( -28.9431, 174.429, -67.8702, 0.29 ) }
    dend_32 { pt3dadd( -29.8174, 174.768, -68.2048, 0.29 ) }
    dend_32 { pt3dadd( -30.9785, 175.264, -68.8077, 0.29 ) }
    dend_32 { pt3dadd( -32.0331, 175.742, -69.4271, 0.66 ) }
    dend_32 { pt3dadd( -32.9307, 176.147, -70.0184, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_32 { pt3dadd( -34.1618, 176.661, -70.9419, 0.29 ) }
    dend_32 { pt3dadd( -35.4029, 177.124, -72.022, 0.29 ) }
    dend_32 { pt3dadd( -36.0769, 177.359, -72.661, 0.29 ) }
    dend_32 { pt3dadd( -36.6433, 177.591, -73.3152, 0.29 ) }
    dend_32 { pt3dadd( -37.0081, 177.829, -73.8442, 0.29 ) }
    dend_32 { pt3dadd( -37.284, 178.201, -74.3904, 0.29 ) }
    dend_32 { pt3dadd( -37.4445, 178.613, -74.8265, 0.44 ) }
    dend_32 { pt3dadd( -37.5577, 179.112, -75.2951, 0.29 ) }
    dend_32 { pt3dadd( -37.6921, 180.253, -76.7418, 0.29 ) }
    dend_32 { pt3dadd( -37.733, 180.622, -77.3018, 0.29 ) }
    dend_32 { pt3dadd( -37.8193, 181.069, -78.0665, 0.29 ) }
    dend_32 { pt3dadd( -37.914, 181.353, -78.6096, 0.29 ) }
    dend_32 { pt3dadd( -38.2885, 182.086, -80.1377, 0.74 ) }
    dend_32 { pt3dadd( -39.2803, 183.309, -82.7922, 0.29 ) }
    dend_32 { pt3dadd( -40.0296, 183.96, -84.1673, 0.29 ) }
    dend_32 { pt3dadd( -40.6979, 184.462, -85.125, 0.29 ) }
    dend_32 { pt3dadd( -41.2926, 184.876, -85.7726, 0.29 ) }
    dend_32 { pt3dadd( -42.442, 185.626, -86.6598, 0.29 ) }
    dend_32 { pt3dadd( -44.0922, 186.618, -87.3609, 0.29 ) }
    dend_32 { pt3dadd( -44.9319, 187.123, -87.4752, 0.37 ) }
    dend_32 { pt3dadd( -45.9576, 187.753, -87.4629, 0.37 ) }
    dend_32 { pt3dadd( -46.836, 188.34, -87.3628, 0.37 ) }
    dend_32 { pt3dadd( -47.4437, 188.787, -87.1937, 0.81 ) }
    dend_32 { pt3dadd( -48.3959, 189.548, -86.7872, 0.52 ) }
    dend_32 { pt3dadd( -49.6823, 190.682, -86.1424, 0.29 ) }
    dend_32 { pt3dadd( -50.4105, 191.348, -85.7616, 0.29 ) }
    dend_32 { pt3dadd( -51.1756, 192.042, -85.3658, 0.74 ) }
    dend_32 { pt3dadd( -52.8929, 193.58, -84.5463, 0.37 ) }
    dend_32 { pt3dadd( -53.5387, 194.178, -84.2607, 0.29 ) }
    dend_32 { pt3dadd( -54.159, 194.789, -84.0408, 0.22 ) }
    dend_32 { pt3dadd( -55.1067, 195.784, -83.8584, 0.22 ) }
    dend_32 { pt3dadd( -55.5643, 196.306, -83.8435, 0.22 ) }
    dend_32 { pt3dadd( -56.0956, 196.963, -83.9582, 0.44 ) }
    dend_32 { pt3dadd( -56.3513, 197.298, -84.0941, 0.44 ) }
    dend_32 { pt3dadd( -56.9118, 198.038, -84.46, 0.29 ) }
    dend_32 { pt3dadd( -57.7304, 199.112, -85.0543, 0.29 ) }
    dend_32 { pt3dadd( -58.2991, 199.89, -85.5714, 0.29 ) }
    dend_32 { pt3dadd( -58.6056, 200.305, -85.8822, 0.29 ) }
    dend_32 { pt3dadd( -59.0603, 200.863, -86.3656, 0.22 ) }
    dend_32 { pt3dadd( -59.5109, 201.379, -86.9363, 0.22 ) }
    dend_32 { pt3dadd( -59.9932, 201.917, -87.7255, 0.22 ) }
    dend_32 { pt3dadd( -60.5559, 202.604, -89.0336, 0.44 ) }
    dend_32 { pt3dadd( -60.6977, 202.879, -89.6446, 0.44 ) }
    dend_32 { pt3dadd( -60.7927, 203.171, -90.3371, 0.22 ) }
    dend_32 { pt3dadd( -60.8877, 203.89, -92.1094, 0.22 ) }
    dend_32 { pt3dadd( -60.8283, 204.558, -93.7019, 0.66 ) }
    dend_32 { pt3dadd( -60.7294, 204.893, -94.4609, 1.03 ) }
    dend_32 { pt3dadd( -60.3231, 205.881, -96.726, 0.88 ) }
    dend_32 { pt3dadd( -60.1961, 206.201, -97.4135, 0.59 ) }
    dend_32 { pt3dadd( -59.9247, 206.797, -98.6386, 0.59 ) }
    dend_32 { pt3dadd( -59.4463, 207.701, -100.467, 0.74 ) }
    dend_32 { pt3dadd( -58.5058, 209.22, -103.396, 0.66 ) }
    dend_32 { pt3dadd( -57.8445, 210.293, -105.3, 0.52 ) }
    dend_32 { pt3dadd( -57.4135, 211.016, -106.463, 0.74 ) }
    dend_32 { pt3dadd( -56.6639, 212.327, -108.348, 1.55 ) }
    dend_32 { pt3dadd( -56.2273, 213.165, -109.378, 1.77 ) }
    dend_32 { pt3dadd( -55.8773, 213.973, -110.2, 1.92 ) }
    dend_32 { pt3dadd( -55.2327, 215.936, -111.601, 0.88 ) }
    dend_32 { pt3dadd( -55.0948, 216.48, -111.884, 0.44 ) }
    dend_32 { pt3dadd( -54.9118, 217.492, -112.319, 0.29 ) }
    dend_32 { pt3dadd( -54.8557, 218.75, -112.755, 0.96 ) }
    dend_32 { pt3dadd( -54.8638, 219.773, -113.065, 0.96 ) }
    dend_32 { pt3dadd( -54.9274, 221.625, -113.552, 0.37 ) }
    dend_32 { pt3dadd( -54.9567, 222.792, -113.765, 0.37 ) }
    dend_32 { pt3dadd( -54.9796, 223.645, -113.925, 0.37 ) }
    dend_32 { pt3dadd( -55.054, 224.656, -114.144, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -46.771, 177.613, -50.7364, 0.22 ) }
    dend_28 { pt3dadd( -47.7349, 177.032, -51.7875, 0.22 ) }
    dend_28 { pt3dadd( -48.1995, 176.792, -52.1296, 0.22 ) }
    dend_28 { pt3dadd( -48.7158, 176.566, -52.4261, 0.22 ) }
    dend_28 { pt3dadd( -49.2384, 176.385, -52.6844, 0.29 ) }
    dend_28 { pt3dadd( -50.0082, 176.175, -53.0388, 0.29 ) }
    dend_28 { pt3dadd( -50.5055, 176.048, -53.2616, 0.22 ) }
    dend_28 { pt3dadd( -51.6305, 175.812, -53.647, 0.59 ) }
    dend_28 { pt3dadd( -52.1602, 175.732, -53.8181, 0.66 ) }
    dend_28 { pt3dadd( -53.0285, 175.669, -54.1224, 0.22 ) }
    dend_28 { pt3dadd( -53.946, 175.736, -54.5048, 0.22 ) }
    dend_28 { pt3dadd( -54.911, 175.98, -54.9955, 0.44 ) }
    dend_28 { pt3dadd( -55.4665, 176.22, -55.3467, 0.22 ) }
    dend_28 { pt3dadd( -56.0618, 176.599, -55.8337, 0.22 ) }
    dend_28 { pt3dadd( -56.6805, 177.104, -56.4129, 0.22 ) }
    dend_28 { pt3dadd( -57.3841, 177.764, -57.1539, 0.22 ) }
    dend_28 { pt3dadd( -57.6893, 178.062, -57.503, 0.22 ) }
    dend_28 { pt3dadd( -57.98, 178.317, -57.837, 0.44 ) }
    dend_28 { pt3dadd( -58.1362, 178.409, -58.0115, 0.44 ) }
    dend_28 { pt3dadd( -58.8537, 178.652, -58.7454, 0.22 ) }
    dend_28 { pt3dadd( -59.4893, 178.792, -59.3051, 0.22 ) }
    dend_28 { pt3dadd( -59.9606, 178.872, -59.6739, 0.22 ) }
    dend_28 { pt3dadd( -60.5543, 178.981, -60.0925, 0.22 ) }
    dend_28 { pt3dadd( -61.5318, 179.183, -60.6836, 0.22 ) }
    dend_28 { pt3dadd( -62.1463, 179.329, -60.9985, 0.22 ) }
    dend_28 { pt3dadd( -62.8159, 179.506, -61.2628, 0.22 ) }
    dend_28 { pt3dadd( -63.6643, 179.779, -61.5203, 0.22 ) }
    dend_28 { pt3dadd( -64.3422, 180.022, -61.654, 0.22 ) }
    dend_28 { pt3dadd( -65.3221, 180.409, -61.7277, 0.22 ) }
    dend_28 { pt3dadd( -65.9681, 180.691, -61.7041, 0.37 ) }
    dend_28 { pt3dadd( -66.6134, 180.999, -61.6446, 0.22 ) }
    dend_28 { pt3dadd( -67.1068, 181.253, -61.5675, 0.44 ) }
    dend_28 { pt3dadd( -67.9143, 181.697, -61.3982, 0.37 ) }
    dend_28 { pt3dadd( -68.6504, 182.15, -61.1739, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_28 { pt3dadd( -68.9466, 182.369, -61.0533, 0.37 ) }
    dend_28 { pt3dadd( -69.3502, 182.7, -60.8764, 0.29 ) }
    dend_28 { pt3dadd( -69.9865, 183.277, -60.6432, 0.44 ) }
    dend_28 { pt3dadd( -70.7643, 183.998, -60.3598, 0.22 ) }
    dend_28 { pt3dadd( -71.1904, 184.409, -60.2378, 0.22 ) }
    dend_28 { pt3dadd( -71.7386, 184.924, -60.1195, 0.22 ) }
    dend_28 { pt3dadd( -72.1173, 185.267, -60.0517, 0.22 ) }
    dend_28 { pt3dadd( -72.8072, 185.938, -59.9628, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -46.771, 177.613, -50.7364, 0.37 ) }
    dend_27 { pt3dadd( -46.9308, 177.84, -51.7507, 0.37 ) }
    dend_27 { pt3dadd( -47.1334, 178.239, -53.2431, 0.37 ) }
    dend_27 { pt3dadd( -47.2513, 178.558, -54.2385, 0.37 ) }
    dend_27 { pt3dadd( -47.3276, 178.893, -55.0832, 0.37 ) }
    dend_27 { pt3dadd( -47.3935, 179.516, -56.4135, 0.37 ) }
    dend_27 { pt3dadd( -47.3886, 179.851, -57.0335, 0.29 ) }
    dend_27 { pt3dadd( -47.2971, 180.335, -57.9923, 0.66 ) }
    dend_27 { pt3dadd( -47.2233, 180.559, -58.4526, 0.81 ) }
    dend_27 { pt3dadd( -47.0582, 180.94, -59.2231, 0.59 ) }
    dend_27 { pt3dadd( -46.8861, 181.278, -59.8824, 0.59 ) }
    dend_27 { pt3dadd( -46.6334, 181.747, -60.7481, 0.74 ) }
    dend_27 { pt3dadd( -45.6534, 183.53, -63.856, 0.44 ) }
    dend_27 { pt3dadd( -45.481, 183.831, -64.3459, 0.44 ) }
    dend_27 { pt3dadd( -45.3351, 184.07, -64.6928, 0.44 ) }
    dend_27 { pt3dadd( -45.0463, 184.536, -65.2248, 0.44 ) }
    dend_27 { pt3dadd( -44.5958, 185.321, -65.8273, 0.44 ) }
    dend_27 { pt3dadd( -44.0891, 186.296, -66.3111, 0.37 ) }
    dend_27 { pt3dadd( -43.6597, 187.263, -66.6315, 0.37 ) }
    dend_27 { pt3dadd( -43.3411, 188.125, -66.9447, 0.37 ) }
    dend_27 { pt3dadd( -43.0025, 189.239, -67.3844, 0.37 ) }
    dend_27 { pt3dadd( -42.7669, 190.229, -67.8032, 0.52 ) }
    dend_27 { pt3dadd( -42.6254, 190.975, -68.1303, 0.66 ) }
    dend_27 { pt3dadd( -42.3821, 192.324, -68.7918, 0.59 ) }
    dend_27 { pt3dadd( -42.1012, 193.674, -69.448, 0.52 ) }
    dend_27 { pt3dadd( -41.8994, 194.5, -69.795, 0.52 ) }
    dend_27 { pt3dadd( -41.6506, 195.354, -70.0702, 0.52 ) }
    dend_27 { pt3dadd( -41.2475, 196.549, -70.2632, 0.88 ) }
    dend_27 { pt3dadd( -40.892, 197.662, -70.3054, 1.33 ) }
    dend_27 { pt3dadd( -40.5415, 199.023, -70.204, 0.52 ) }
    dend_27 { pt3dadd( -40.3094, 200.806, -69.9669, 0.44 ) }
    dend_27 { pt3dadd( -40.3508, 201.727, -69.829, 0.88 ) }
    dend_27 { pt3dadd( -40.545, 202.83, -69.6735, 1.11 ) }
    dend_27 { pt3dadd( -40.8863, 204.202, -69.5069, 0.44 ) }
    dend_27 { pt3dadd( -41.1693, 205.3, -69.4145, 0.29 ) }
    dend_27 { pt3dadd( -41.3871, 206.264, -69.4149, 0.29 ) }
    dend_27 { pt3dadd( -41.457, 206.926, -69.4933, 0.29 ) }
    dend_27 { pt3dadd( -41.3925, 208.145, -69.6963, 0.66 ) }
    dend_27 { pt3dadd( -41.2126, 209.121, -69.895, 0.66 ) }
    dend_27 { pt3dadd( -40.946, 210.004, -70.0602, 0.66 ) }
    dend_27 { pt3dadd( -40.601, 210.943, -70.2247, 0.66 ) }
    dend_27 { pt3dadd( -40.32, 211.734, -70.3526, 0.66 ) }
    dend_27 { pt3dadd( -39.9849, 212.802, -70.513, 0.59 ) }
    dend_27 { pt3dadd( -39.666, 213.998, -70.6693, 0.44 ) }
    dend_27 { pt3dadd( -39.4993, 214.741, -70.7617, 0.44 ) }
    dend_27 { pt3dadd( -39.2539, 216.013, -70.926, 0.37 ) }
    dend_27 { pt3dadd( -39.0271, 217.215, -71.0952, 0.37 ) }
    dend_27 { pt3dadd( -38.8541, 218.104, -71.2236, 0.74 ) }
    dend_27 { pt3dadd( -38.6907, 218.914, -71.3569, 1.18 ) }
    dend_27 { pt3dadd( -38.4847, 219.95, -71.5522, 0.81 ) }
    dend_27 { pt3dadd( -38.3467, 220.857, -71.7471, 0.37 ) }
    dend_27 { pt3dadd( -38.2839, 221.727, -71.9607, 0.29 ) }
    dend_27 { pt3dadd( -38.3135, 222.815, -72.2716, 0.52 ) }
    dend_27 { pt3dadd( -38.4323, 223.335, -72.4555, 0.66 ) }
    dend_27 { pt3dadd( -38.6291, 223.739, -72.627, 0.74 ) }
    dend_27 { pt3dadd( -39.2769, 224.534, -73.0126, 0.37 ) }
    dend_27 { pt3dadd( -40.0284, 225.207, -73.3965, 0.29 ) }
    dend_27 { pt3dadd( -40.7741, 225.707, -73.7586, 0.29 ) }
    dend_27 { pt3dadd( -41.7254, 226.18, -74.229, 0.29 ) }
    dend_27 { pt3dadd( -42.4762, 226.467, -74.6056, 0.29 ) }
    dend_27 { pt3dadd( -43.2392, 226.692, -74.9923, 0.29 ) }
    dend_27 { pt3dadd( -44.461, 226.948, -75.6154, 0.29 ) }
    dend_27 { pt3dadd( -45.4058, 227.093, -76.0675, 0.29 ) }
    dend_27 { pt3dadd( -46.3203, 227.217, -76.4632, 0.44 ) }
    dend_27 { pt3dadd( -47.0072, 227.296, -76.7535, 0.22 ) }
    dend_27 { pt3dadd( -47.4156, 227.33, -76.9207, 0.44 ) }
    dend_27 { pt3dadd( -47.8217, 227.342, -77.069, 0.44 ) }
    dend_27 { pt3dadd( -48.7189, 227.31, -77.3181, 0.37 ) }
    dend_27 { pt3dadd( -49.8801, 227.39, -77.5297, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.85153, -280.322, 46.7268, 0.44 ) }
    dend_7 { pt3dadd( -5.39025, -281.982, 46.6133, 0.44 ) }
    dend_7 { pt3dadd( -5.70376, -282.948, 46.5473, 0.44 ) }
    dend_7 { pt3dadd( -6.15002, -284.323, 46.4533, 0.52 ) }
    dend_7 { pt3dadd( -6.37019, -285.001, 46.4069, 0.66 ) }
    dend_7 { pt3dadd( -6.65464, -285.878, 46.347, 0.66 ) }
    dend_7 { pt3dadd( -6.9631, -286.828, 46.282, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.85153, -280.322, 46.7268, 0.22 ) }
    dend_6 { pt3dadd( -3.79238, -280.784, 46.928, 0.22 ) }
    dend_6 { pt3dadd( -2.38436, -281.398, 47.1955, 0.22 ) }
    dend_6 { pt3dadd( 5.14461, -285.552, 47.4778, 0.22 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 88/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 1.30552, 250.997, -70.9512, 0.22 ) }
    dend_101 { pt3dadd( -0.275057, 251.874, -70.2336, 0.22 ) }
    dend_101 { pt3dadd( -1.30085, 252.444, -69.7679, 0.37 ) }
    dend_101 { pt3dadd( -1.98623, 252.825, -69.4568, 0.44 ) }
    dend_101 { pt3dadd( -2.92793, 253.347, -69.0292, 0.22 ) }
    dend_101 { pt3dadd( -4.18922, 254.048, -68.4566, 0.22 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 94/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 1.30552, 250.997, -70.9512, 0.29 ) }
    dend_100 { pt3dadd( 1.63148, 252.269, -70.3302, 0.29 ) }
    dend_100 { pt3dadd( 1.90976, 253.355, -69.8001, 0.22 ) }
    dend_100 { pt3dadd( 2.07778, 254.011, -69.48, 0.22 ) }
    // Section: dend_94, id: dend_94, parent: dend_90 (entry count 98/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -28.6177, 118.394, -86.9632, 0.66 ) }
    dend_94 { pt3dadd( -30.6958, 120.279, -86.245, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_94 { pt3dadd( -31.5582, 121.321, -85.9455, 0.44 ) }
    dend_94 { pt3dadd( -32.283, 122.423, -85.6894, 0.44 ) }
    dend_94 { pt3dadd( -32.9166, 123.492, -85.4787, 0.44 ) }
    dend_94 { pt3dadd( -33.6079, 124.827, -85.2371, 0.37 ) }
    dend_94 { pt3dadd( -34.1921, 126.139, -85.019, 0.37 ) }
    dend_94 { pt3dadd( -34.8046, 127.981, -84.8602, 0.37 ) }
    dend_94 { pt3dadd( -35.2881, 130.226, -84.6789, 0.29 ) }
    dend_94 { pt3dadd( -35.469, 131.647, -84.541, 0.29 ) }
    dend_94 { pt3dadd( -35.5611, 133.19, -84.3287, 0.66 ) }
    dend_94 { pt3dadd( -35.5616, 134.326, -84.1155, 0.66 ) }
    dend_94 { pt3dadd( -35.5279, 135.119, -83.9379, 0.66 ) }
    dend_94 { pt3dadd( -35.4832, 136.504, -83.6119, 0.37 ) }
    dend_94 { pt3dadd( -35.4834, 138.152, -83.1779, 0.22 ) }
    dend_94 { pt3dadd( -35.6706, 140.074, -82.6474, 0.66 ) }
    dend_94 { pt3dadd( -35.9531, 141.146, -82.36, 0.81 ) }
    dend_94 { pt3dadd( -36.4001, 142.077, -82.1421, 0.52 ) }
    dend_94 { pt3dadd( -37.2078, 143.276, -81.924, 0.74 ) }
    dend_94 { pt3dadd( -37.8799, 144.091, -81.8341, 0.74 ) }
    dend_94 { pt3dadd( -38.8675, 145.168, -81.7924, 0.29 ) }
    dend_94 { pt3dadd( -39.9676, 146.329, -81.7544, 0.29 ) }
    dend_94 { pt3dadd( -41.9282, 148.477, -81.6636, 0.29 ) }
    dend_94 { pt3dadd( -43.2794, 150.13, -81.5495, 0.29 ) }
    dend_94 { pt3dadd( -44.01, 151.163, -81.4814, 0.52 ) }
    dend_94 { pt3dadd( -44.3452, 151.718, -81.4494, 0.52 ) }
    dend_94 { pt3dadd( -45.3125, 153.667, -81.3769, 0.37 ) }
    dend_94 { pt3dadd( -45.8231, 154.867, -81.3821, 0.37 ) }
    dend_94 { pt3dadd( -46.4172, 156.413, -81.4605, 0.37 ) }
    dend_94 { pt3dadd( -47.0064, 158.105, -81.5779, 0.44 ) }
    dend_94 { pt3dadd( -47.3992, 159.234, -81.6893, 0.29 ) }
    dend_94 { pt3dadd( -47.9508, 160.726, -81.93, 0.29 ) }
    dend_94 { pt3dadd( -48.5311, 162.178, -82.3515, 0.81 ) }
    dend_94 { pt3dadd( -48.9407, 163.062, -82.6675, 0.96 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 32/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -28.6177, 118.394, -86.9632, 0.22 ) }
    dend_91 { pt3dadd( -29.2663, 118.159, -86.8516, 0.22 ) }
    dend_91 { pt3dadd( -30.0275, 117.769, -86.7098, 0.22 ) }
    dend_91 { pt3dadd( -31.1161, 117.21, -86.5071, 0.22 ) }
    dend_91 { pt3dadd( -31.3515, 117.09, -86.4632, 0.81 ) }
    dend_91 { pt3dadd( -31.7901, 116.865, -86.3816, 0.81 ) }
    dend_91 { pt3dadd( -32.6462, 116.426, -86.2221, 0.29 ) }
    dend_91 { pt3dadd( -33.296, 116.009, -86.0927, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_71 (entry count 40/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -24.1327, 72.8685, 168.877, 0.44 ) }
    dend_79 { pt3dadd( -28.8868, 74.0453, 176.663, 0.44 ) }
    dend_79 { pt3dadd( -32.5758, 74.3012, 185.088, 0.44 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 43/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -24.1327, 72.8685, 168.877, 0.22 ) }
    dend_72 { pt3dadd( -30.3476, 74.0909, 178.883, 0.44 ) }
    dend_72 { pt3dadd( -36.23, 72.2573, 189.055, 0.44 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 46/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 58.4805, 83.7007, 142.609, 0.44 ) }
    dend_61 { pt3dadd( 61.1758, 89.151, 153.922, 0.44 ) }
    dend_61 { pt3dadd( 65.6223, 95.3743, 164.339, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 49/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 58.4805, 83.7007, 142.609, 0.22 ) }
    dend_54 { pt3dadd( 64.181, 88.791, 153.4, 0.44 ) }
    dend_54 { pt3dadd( 71.2551, 94.348, 163.184, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 0.300482, 107.293, 13.4686, 0.37 ) }
    dend_47 { pt3dadd( -1.0594, 108.092, 12.7479, 0.37 ) }
    dend_47 { pt3dadd( -1.6985, 108.467, 12.4606, 0.37 ) }
    dend_47 { pt3dadd( -2.4843, 108.973, 11.9838, 0.29 ) }
    dend_47 { pt3dadd( -3.0952, 109.459, 11.5512, 0.29 ) }
    dend_47 { pt3dadd( -3.3844, 109.743, 11.3184, 0.29 ) }
    dend_47 { pt3dadd( -3.76535, 110.189, 10.9728, 0.29 ) }
    dend_47 { pt3dadd( -4.1805, 110.784, 10.5344, 0.44 ) }
    dend_47 { pt3dadd( -4.79354, 111.928, 9.67889, 0.59 ) }
    dend_47 { pt3dadd( -5.08875, 112.756, 9.06255, 0.74 ) }
    dend_47 { pt3dadd( -5.22794, 113.374, 8.59651, 0.88 ) }
    dend_47 { pt3dadd( -5.29002, 113.844, 8.22826, 0.88 ) }
    dend_47 { pt3dadd( -5.30326, 114.686, 7.54073, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 0.300482, 107.293, 13.4686, 0.22 ) }
    dend_44 { pt3dadd( -0.545419, 107.158, 12.8368, 0.22 ) }
    dend_44 { pt3dadd( -0.969806, 107.153, 12.4321, 0.22 ) }
    dend_44 { pt3dadd( -1.58682, 107.212, 11.7295, 0.22 ) }
    dend_44 { pt3dadd( -1.99474, 107.211, 11.1754, 0.22 ) }
    dend_44 { pt3dadd( -2.2975, 107.161, 10.7448, 0.22 ) }
    dend_44 { pt3dadd( -2.65193, 107.102, 10.2408, 0.22 ) }
    dend_44 { pt3dadd( -3.25064, 107.004, 9.26233, 0.22 ) }
    dend_44 { pt3dadd( -3.65261, 106.925, 8.48512, 0.22 ) }
    dend_44 { pt3dadd( -4.10612, 106.81, 7.35531, 0.22 ) }
    dend_44 { pt3dadd( -4.48363, 106.606, 6.24034, 0.22 ) }
    dend_44 { pt3dadd( -11.3822, 106.116, 0.0282015, 0.22 ) }
    dend_44 { pt3dadd( -18.6712, 104.664, -5.59581, 0.22 ) }
    dend_44 { pt3dadd( -26.241, 102.542, -10.6447, 0.22 ) }
    dend_44 { pt3dadd( -34.6456, 100.738, -14.2952, 0.22 ) }
    dend_44 { pt3dadd( -42.3965, 97.8038, -18.6804, 0.22 ) }
    dend_44 { pt3dadd( -50.0536, 93.6887, -22.3427, 0.22 ) }
    dend_44 { pt3dadd( -57.558, 88.7795, -25.4071, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 83/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.6826, 189.43, -86.3613, 0.22 ) }
    dend_35 { pt3dadd( -17.5533, 188.39, -86.3427, 0.22 ) }
    dend_35 { pt3dadd( -17.4663, 187.691, -86.3302, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -17.6826, 189.43, -86.3613, 0.52 ) }
    dend_34 { pt3dadd( -16.6885, 189.497, -86.7413, 0.52 ) }
    dend_34 { pt3dadd( -15.9655, 189.545, -87.0177, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -72.8072, 185.938, -59.9628, 0.29 ) }
    dend_30 { pt3dadd( -74.6769, 188.435, -60.4183, 0.29 ) }
    dend_30 { pt3dadd( -75.2387, 189.023, -60.5782, 0.29 ) }
    dend_30 { pt3dadd( -76.2086, 189.86, -60.9151, 0.22 ) }
    dend_30 { pt3dadd( -77.0695, 190.543, -61.2429, 0.22 ) }
    dend_30 { pt3dadd( -78.473, 191.651, -61.795, 0.22 ) }
    dend_30 { pt3dadd( -79.0276, 192.107, -62.0153, 0.22 ) }
    dend_30 { pt3dadd( -80.1562, 193.005, -62.6542, 0.22 ) }
    dend_30 { pt3dadd( -80.9157, 193.556, -63.1093, 0.22 ) }
    dend_30 { pt3dadd( -81.7242, 194.07, -63.633, 0.29 ) }
    dend_30 { pt3dadd( -82.2012, 194.318, -63.9714, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_30 { pt3dadd( -82.8129, 194.537, -64.4771, 0.29 ) }
    dend_30 { pt3dadd( -83.8565, 194.853, -65.4557, 0.29 ) }
    dend_30 { pt3dadd( -85.1338, 195.194, -66.7575, 0.29 ) }
    dend_30 { pt3dadd( -86.1804, 195.378, -67.8455, 0.29 ) }
    dend_30 { pt3dadd( -87.0731, 195.427, -68.7948, 0.22 ) }
    dend_30 { pt3dadd( -88.4268, 195.371, -70.2516, 0.22 ) }
    dend_30 { pt3dadd( -89.1402, 195.31, -71.0225, 0.37 ) }
    dend_30 { pt3dadd( -90.1019, 195.243, -72.0284, 0.37 ) }
    dend_30 { pt3dadd( -90.8636, 195.242, -72.7734, 0.37 ) }
    dend_30 { pt3dadd( -91.649, 195.322, -73.6194, 0.37 ) }
    dend_30 { pt3dadd( -92.3401, 195.493, -74.4654, 0.29 ) }
    dend_30 { pt3dadd( -93.1474, 195.812, -75.6074, 0.22 ) }
    dend_30 { pt3dadd( -93.8761, 196.222, -76.7874, 0.22 ) }
    dend_30 { pt3dadd( -94.4365, 196.693, -77.8665, 0.22 ) }
    dend_30 { pt3dadd( -95.4137, 197.721, -79.9575, 0.22 ) }
    dend_30 { pt3dadd( -95.7346, 198.073, -80.7046, 0.22 ) }
    dend_30 { pt3dadd( -96.177, 198.491, -81.8396, 0.22 ) }
    dend_30 { pt3dadd( -96.7123, 198.81, -83.3087, 0.22 ) }
    dend_30 { pt3dadd( -97.1395, 198.904, -84.5165, 0.22 ) }
    dend_30 { pt3dadd( -97.9795, 198.964, -86.7446, 0.22 ) }
    dend_30 { pt3dadd( -98.7085, 198.877, -88.311, 0.22 ) }
    dend_30 { pt3dadd( -99.4472, 198.622, -89.8958, 0.22 ) }
    dend_30 { pt3dadd( -99.9947, 198.238, -91.1612, 0.37 ) }
    dend_30 { pt3dadd( -100.267, 197.912, -91.8256, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -72.8072, 185.938, -59.9628, 0.22 ) }
    dend_29 { pt3dadd( -74.4093, 185.859, -60.4239, 0.22 ) }
    dend_29 { pt3dadd( -75.4279, 185.785, -60.8413, 0.22 ) }
    dend_29 { pt3dadd( -76.3011, 185.683, -61.3046, 0.22 ) }
    dend_29 { pt3dadd( -76.7933, 185.619, -61.6209, 0.22 ) }
    dend_29 { pt3dadd( -77.5923, 185.521, -62.1911, 0.22 ) }
    dend_29 { pt3dadd( -78.1804, 185.449, -62.6107, 0.22 ) }
    dend_29 { pt3dadd( -78.9025, 185.328, -63.2645, 0.22 ) }
    dend_29 { pt3dadd( -79.5792, 185.243, -63.9535, 0.22 ) }
    dend_29 { pt3dadd( -80.3457, 185.17, -64.781, 0.22 ) }
    dend_29 { pt3dadd( -80.7361, 185.117, -65.2424, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -6.9631, -286.828, 46.282, 0.37 ) }
    dend_9 { pt3dadd( -6.55797, -288.963, 46.6622, 0.37 ) }
    dend_9 { pt3dadd( -6.28627, -290.229, 46.9336, 0.37 ) }
    dend_9 { pt3dadd( -6.10809, -291.059, 47.1116, 0.52 ) }
    dend_9 { pt3dadd( -5.99605, -291.581, 47.2235, 0.52 ) }
    dend_9 { pt3dadd( -5.83411, -292.336, 47.3852, 0.59 ) }
    dend_9 { pt3dadd( -5.59492, -293.45, 47.6242, 0.96 ) }
    dend_9 { pt3dadd( -5.48698, -293.806, 47.6337, 1.18 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 43/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.9631, -286.828, 46.282, 0.22 ) }
    dend_8 { pt3dadd( -6.41031, -287.387, 46.1402, 0.22 ) }
    dend_8 { pt3dadd( -5.67174, -288.134, 45.9507, 0.29 ) }
    dend_8 { pt3dadd( -5.22691, -288.583, 45.8366, 0.29 ) }
    dend_8 { pt3dadd( -4.71705, -289.099, 45.7058, 0.29 ) }
    dend_8 { pt3dadd( -4.17671, -289.645, 45.5672, 0.37 ) }
    dend_8 { pt3dadd( -0.1194, -296.31, 43.2871, 0.37 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 50/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -48.9407, 163.062, -82.6675, 0.29 ) }
    dend_96 { pt3dadd( -49.8027, 163.449, -83.9738, 0.29 ) }
    dend_96 { pt3dadd( -50.8332, 164.059, -85.4476, 0.29 ) }
    dend_96 { pt3dadd( -51.5901, 164.629, -86.5506, 0.59 ) }
    dend_96 { pt3dadd( -52.2872, 165.203, -87.6111, 0.44 ) }
    dend_96 { pt3dadd( -52.5812, 165.523, -88.2507, 0.44 ) }
    dend_96 { pt3dadd( -52.8218, 165.848, -89.0575, 0.37 ) }
    dend_96 { pt3dadd( -52.9808, 166.188, -90.0474, 0.22 ) }
    dend_96 { pt3dadd( -53.0496, 166.53, -90.9748, 0.81 ) }
    dend_96 { pt3dadd( -53.0871, 167.174, -92.6177, 1.03 ) }
    dend_96 { pt3dadd( -53.0936, 168.374, -95.7638, 1.03 ) }
    dend_96 { pt3dadd( -53.0442, 169.758, -99.6535, 0.81 ) }
    dend_96 { pt3dadd( -52.938, 170.865, -103.062, 0.29 ) }
    dend_96 { pt3dadd( -52.8834, 171.232, -104.291, 1.33 ) }
    dend_96 { pt3dadd( -52.8513, 171.399, -104.851, 1.55 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 65/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -48.9407, 163.062, -82.6675, 0.29 ) }
    dend_95 { pt3dadd( -49.9916, 162.765, -82.6718, 0.29 ) }
    dend_95 { pt3dadd( -50.6065, 162.627, -82.6257, 0.29 ) }
    dend_95 { pt3dadd( -51.6819, 162.416, -82.4278, 0.59 ) }
    dend_95 { pt3dadd( -52.0059, 162.353, -82.32, 0.59 ) }
    dend_95 { pt3dadd( -52.8462, 162.16, -81.9608, 0.22 ) }
    dend_95 { pt3dadd( -53.8167, 161.887, -81.4241, 0.22 ) }
    dend_95 { pt3dadd( -54.3053, 161.703, -81.0098, 0.22 ) }
    dend_95 { pt3dadd( -55.0457, 161.329, -80.2262, 0.22 ) }
    dend_95 { pt3dadd( -55.8818, 160.812, -79.2008, 0.66 ) }
    dend_95 { pt3dadd( -56.2864, 160.52, -78.6828, 0.96 ) }
    dend_95 { pt3dadd( -56.9529, 159.982, -77.8041, 0.96 ) }
    dend_95 { pt3dadd( -57.7503, 159.302, -76.7928, 0.22 ) }
    dend_95 { pt3dadd( -58.1988, 158.876, -76.196, 0.22 ) }
    dend_95 { pt3dadd( -58.4435, 158.622, -75.8741, 0.52 ) }
    dend_95 { pt3dadd( -58.8475, 158.207, -75.4115, 0.22 ) }
    dend_95 { pt3dadd( -59.1885, 157.927, -75.1035, 0.22 ) }
    dend_95 { pt3dadd( -59.9551, 157.513, -74.7663, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 83/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -33.296, 116.009, -86.0927, 0.37 ) }
    dend_93 { pt3dadd( -33.1282, 114.552, -85.2359, 0.37 ) }
    dend_93 { pt3dadd( -33.0512, 113.52, -84.6479, 0.52 ) }
    dend_93 { pt3dadd( -32.9673, 112.015, -83.8106, 0.44 ) }
    dend_93 { pt3dadd( -32.9036, 110.74, -83.131, 0.66 ) }
    dend_93 { pt3dadd( -32.8213, 109.328, -82.3607, 0.29 ) }
    dend_93 { pt3dadd( -32.7729, 108.118, -81.6672, 0.29 ) }
    dend_93 { pt3dadd( -32.8272, 106.71, -80.8075, 0.44 ) }
    dend_93 { pt3dadd( -32.9175, 105.946, -80.3246, 0.44 ) }
    dend_93 { pt3dadd( -33.1414, 104.882, -79.6165, 0.66 ) }
    dend_93 { pt3dadd( -33.6615, 103.121, -78.4123, 0.37 ) }
    dend_93 { pt3dadd( -34.3978, 101.427, -77.154, 0.37 ) }
    dend_93 { pt3dadd( -35.2044, 100.069, -76.0749, 0.37 ) }
    dend_93 { pt3dadd( -35.8371, 99.2996, -75.4793, 0.29 ) }
    dend_93 { pt3dadd( -36.2988, 98.8806, -75.162, 0.74 ) }
    dend_93 { pt3dadd( -37.1705, 98.2679, -74.7373, 0.22 ) }
    dend_93 { pt3dadd( -38.3323, 97.5847, -74.3562, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_93 { pt3dadd( -38.9078, 97.2715, -74.218, 0.22 ) }
    dend_93 { pt3dadd( -40.6057, 96.3229, -73.8607, 0.22 ) }
    dend_93 { pt3dadd( -41.7781, 95.6321, -73.609, 0.22 ) }
    dend_93 { pt3dadd( -43.0037, 94.9141, -73.3403, 0.22 ) }
    dend_93 { pt3dadd( -43.8552, 94.435, -73.1545, 0.44 ) }
    dend_93 { pt3dadd( -44.3513, 94.1168, -73.0469, 0.44 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 6/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -33.296, 116.009, -86.0927, 0.81 ) }
    dend_92 { pt3dadd( -35.4363, 115.871, -86.86, 0.81 ) }
    dend_92 { pt3dadd( -36.2465, 115.779, -87.1085, 0.81 ) }
    dend_92 { pt3dadd( -37.2337, 115.694, -87.4469, 0.66 ) }
    dend_92 { pt3dadd( -38.6099, 115.604, -87.9171, 0.29 ) }
    dend_92 { pt3dadd( -39.4857, 115.591, -88.2075, 0.37 ) }
    dend_92 { pt3dadd( -40.4237, 115.607, -88.5088, 0.37 ) }
    dend_92 { pt3dadd( -41.2024, 115.625, -88.7163, 0.29 ) }
    dend_92 { pt3dadd( -42.7257, 115.615, -89.1367, 0.44 ) }
    dend_92 { pt3dadd( -43.7553, 115.598, -89.4323, 0.59 ) }
    dend_92 { pt3dadd( -44.7123, 115.557, -89.7135, 0.29 ) }
    dend_92 { pt3dadd( -45.9452, 115.462, -90.0806, 0.59 ) }
    dend_92 { pt3dadd( -46.9808, 115.324, -90.3967, 0.29 ) }
    dend_92 { pt3dadd( -48.7122, 114.974, -90.9218, 0.29 ) }
    dend_92 { pt3dadd( -49.2561, 114.824, -91.0772, 0.22 ) }
    dend_92 { pt3dadd( -51.4648, 114.11, -91.748, 0.22 ) }
    dend_92 { pt3dadd( -51.7393, 114.005, -91.8347, 0.44 ) }
    dend_92 { pt3dadd( -52.2978, 113.774, -92.0158, 0.44 ) }
    dend_92 { pt3dadd( -53.4159, 113.307, -92.3886, 0.22 ) }
    dend_92 { pt3dadd( -54.2995, 112.924, -92.6736, 0.37 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 26/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -32.5758, 74.3012, 185.088, 0.44 ) }
    dend_83 { pt3dadd( -38.3852, 80.3094, 190.221, 0.44 ) }
    dend_83 { pt3dadd( -45.2954, 84.609, 195.666, 0.44 ) }
    dend_83 { pt3dadd( -51.2937, 88.613, 202.29, 0.44 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 30/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -32.5758, 74.3012, 185.088, 0.22 ) }
    dend_80 { pt3dadd( -36.2292, 73.0524, 195.456, 0.44 ) }
    dend_80 { pt3dadd( -38.6501, 72.8663, 206.231, 0.44 ) }
    // Section: dend_76, id: dend_76, parent: dend_72 (entry count 33/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -36.23, 72.2573, 189.055, 0.44 ) }
    dend_76 { pt3dadd( -46.5896, 76.2205, 192.349, 0.44 ) }
    dend_76 { pt3dadd( -56.1798, 82.0407, 195.166, 0.44 ) }
    dend_76 { pt3dadd( -65.5492, 87.835, 198.693, 0.44 ) }
    dend_76 { pt3dadd( -75.1387, 92.2624, 203.403, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 38/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -36.23, 72.2573, 189.055, 0.22 ) }
    dend_73 { pt3dadd( -36.6578, 70.2178, 195.818, 0.44 ) }
    dend_73 { pt3dadd( -38.3299, 66.9011, 201.908, 0.44 ) }
    dend_73 { pt3dadd( -39.0229, 63.6844, 208.211, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 42/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 65.6223, 95.3743, 164.339, 0.44 ) }
    dend_65 { pt3dadd( 67.9498, 100.502, 171.796, 0.44 ) }
    dend_65 { pt3dadd( 71.3024, 106.526, 178.215, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 45/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 65.6223, 95.3743, 164.339, 0.22 ) }
    dend_62 { pt3dadd( 69.1964, 99.1154, 174.218, 0.44 ) }
    dend_62 { pt3dadd( 71.909, 103.879, 183.932, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 71.2551, 94.348, 163.184, 0.44 ) }
    dend_58 { pt3dadd( 80.6284, 103.438, 171.196, 0.44 ) }
    dend_58 { pt3dadd( 90.4324, 114.075, 176.583, 0.44 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 71.2551, 94.348, 163.184, 0.22 ) }
    dend_55 { pt3dadd( 71.6727, 91.2426, 171.623, 0.44 ) }
    dend_55 { pt3dadd( 70.9027, 87.5785, 179.853, 0.44 ) }
    dend_55 { pt3dadd( 71.3778, 85.5346, 188.588, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.30326, 114.686, 7.54073, 0.37 ) }
    dend_49 { pt3dadd( -5.54541, 115.751, 6.68852, 0.37 ) }
    dend_49 { pt3dadd( -5.87449, 116.944, 5.75015, 0.37 ) }
    dend_49 { pt3dadd( -6.18318, 117.726, 5.06172, 0.37 ) }
    dend_49 { pt3dadd( -6.48885, 118.341, 4.3905, 0.37 ) }
    dend_49 { pt3dadd( -6.71816, 118.816, 3.77837, 0.52 ) }
    dend_49 { pt3dadd( -6.86774, 119.158, 3.31147, 0.52 ) }
    dend_49 { pt3dadd( -7.02297, 119.597, 2.67265, 0.29 ) }
    dend_49 { pt3dadd( -7.1728, 120.166, 1.60883, 0.29 ) }
    dend_49 { pt3dadd( -7.24123, 120.586, 0.47807, 0.29 ) }
    dend_49 { pt3dadd( -7.26631, 120.928, -0.870399, 0.66 ) }
    dend_49 { pt3dadd( -7.26493, 121.029, -1.39972, 0.81 ) }
    dend_49 { pt3dadd( -7.25971, 121.222, -2.51989, 0.59 ) }
    dend_49 { pt3dadd( -7.28833, 121.597, -4.29905, 0.29 ) }
    dend_49 { pt3dadd( -7.32452, 121.929, -5.43543, 0.29 ) }
    dend_49 { pt3dadd( -7.37956, 122.338, -6.46831, 0.74 ) }
    dend_49 { pt3dadd( -7.4182, 122.772, -7.35209, 0.74 ) }
    dend_49 { pt3dadd( -7.42338, 123.165, -8.04174, 0.74 ) }
    dend_49 { pt3dadd( -7.41203, 123.909, -9.16609, 0.44 ) }
    dend_49 { pt3dadd( -7.39746, 124.565, -9.96546, 0.44 ) }
    dend_49 { pt3dadd( -7.38068, 125.766, -11.2116, 0.52 ) }
    dend_49 { pt3dadd( -7.36706, 126.721, -12.0855, 0.52 ) }
    dend_49 { pt3dadd( -7.22956, 128.186, -13.3729, 0.44 ) }
    dend_49 { pt3dadd( -7.07806, 128.815, -13.9567, 0.44 ) }
    dend_49 { pt3dadd( -6.77239, 129.641, -14.7664, 0.66 ) }
    dend_49 { pt3dadd( -6.37386, 130.594, -15.7202, 0.81 ) }
    dend_49 { pt3dadd( -6.09805, 131.212, -16.3222, 0.81 ) }
    dend_49 { pt3dadd( -5.27955, 132.245, -17.5052, 0.29 ) }
    dend_49 { pt3dadd( -4.26295, 133.137, -18.5725, 0.29 ) }
    dend_49 { pt3dadd( -3.27434, 133.869, -19.4577, 0.52 ) }
    dend_49 { pt3dadd( -2.87922, 134.143, -19.7691, 0.74 ) }
    dend_49 { pt3dadd( -1.97543, 134.716, -20.4218, 0.74 ) }
    dend_49 { pt3dadd( 1.09267, 136.491, -22.4237, 0.66 ) }
    dend_49 { pt3dadd( 1.76551, 136.845, -22.8182, 0.29 ) }
    dend_49 { pt3dadd( 2.7443, 137.298, -23.3241, 0.29 ) }
    dend_49 { pt3dadd( 4.19247, 137.918, -23.9841, 0.29 ) }
    dend_49 { pt3dadd( 5.6571, 138.456, -24.6123, 0.29 ) }
    dend_49 { pt3dadd( 7.1665, 138.929, -25.1816, 0.37 ) }
    dend_49 { pt3dadd( 8.64071, 139.374, -25.6768, 0.52 ) }
    dend_49 { pt3dadd( 10.3774, 139.814, -26.2639, 0.74 ) }
    dend_49 { pt3dadd( 11.472, 140.051, -26.6266, 0.59 ) }
    dend_49 { pt3dadd( 14.5609, 140.636, -27.6193, 0.37 ) }
    dend_49 { pt3dadd( 15.4201, 140.805, -27.8762, 0.37 ) }
    dend_49 { pt3dadd( 16.441, 141.019, -28.1554, 0.37 ) }
    dend_49 { pt3dadd( 17.4449, 141.245, -28.4592, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_49 { pt3dadd( 19.1868, 141.656, -29.039, 0.74 ) }
    dend_49 { pt3dadd( 20.0318, 141.894, -29.3807, 0.74 ) }
    dend_49 { pt3dadd( 21.5704, 142.557, -30.1165, 0.37 ) }
    dend_49 { pt3dadd( 22.3127, 142.955, -30.53, 0.37 ) }
    dend_49 { pt3dadd( 24.6128, 144.45, -32.0296, 0.44 ) }
    dend_49 { pt3dadd( 24.9884, 144.764, -32.3106, 0.66 ) }
    dend_49 { pt3dadd( 25.545, 145.415, -32.7923, 0.66 ) }
    dend_49 { pt3dadd( 26.1788, 146.368, -33.4238, 0.44 ) }
    dend_49 { pt3dadd( 26.4595, 146.915, -33.7333, 0.29 ) }
    dend_49 { pt3dadd( 26.9155, 147.924, -34.2447, 0.29 ) }
    dend_49 { pt3dadd( 27.2034, 148.637, -34.5543, 0.37 ) }
    dend_49 { pt3dadd( 28.0136, 150.459, -35.425, 0.52 ) }
    dend_49 { pt3dadd( 28.6105, 151.785, -36.0493, 0.29 ) }
    dend_49 { pt3dadd( 29.2357, 153.164, -36.7152, 0.74 ) }
    dend_49 { pt3dadd( 29.5501, 153.885, -37.0618, 0.74 ) }
    dend_49 { pt3dadd( 30.0133, 155.0, -37.5643, 0.74 ) }
    dend_49 { pt3dadd( 30.8655, 157.312, -38.5699, 0.22 ) }
    dend_49 { pt3dadd( 31.2133, 158.504, -39.0629, 0.22 ) }
    dend_49 { pt3dadd( 31.278, 158.781, -39.1719, 0.74 ) }
    dend_49 { pt3dadd( 31.4877, 159.464, -39.5339, 0.44 ) }
    dend_49 { pt3dadd( 31.7934, 160.254, -40.0044, 0.29 ) }
    dend_49 { pt3dadd( 32.3823, 161.467, -40.7711, 0.22 ) }
    dend_49 { pt3dadd( 32.7566, 162.116, -41.1966, 0.44 ) }
    dend_49 { pt3dadd( 33.2603, 162.836, -41.695, 0.29 ) }
    dend_49 { pt3dadd( 35.1573, 165.444, -43.4151, 0.88 ) }
    dend_49 { pt3dadd( 35.6089, 166.062, -43.8067, 0.88 ) }
    dend_49 { pt3dadd( 35.9785, 166.601, -44.1298, 0.22 ) }
    dend_49 { pt3dadd( 36.4769, 167.33, -44.5076, 0.22 ) }
    dend_49 { pt3dadd( 36.781, 167.833, -44.7102, 0.22 ) }
    dend_49 { pt3dadd( 37.1779, 168.698, -44.977, 0.22 ) }
    dend_49 { pt3dadd( 37.4626, 169.697, -45.2157, 0.22 ) }
    dend_49 { pt3dadd( 37.6676, 170.329, -45.4644, 0.22 ) }
    dend_49 { pt3dadd( 38.1837, 171.451, -46.1983, 0.22 ) }
    dend_49 { pt3dadd( 38.6088, 172.251, -46.8179, 0.22 ) }
    dend_49 { pt3dadd( 38.9905, 172.934, -47.3498, 0.22 ) }
    dend_49 { pt3dadd( 39.4537, 173.748, -47.9449, 0.22 ) }
    dend_49 { pt3dadd( 40.2252, 175.128, -48.856, 0.66 ) }
    dend_49 { pt3dadd( 41.3846, 177.403, -50.1264, 0.88 ) }
    dend_49 { pt3dadd( 42.0535, 178.839, -50.8168, 0.37 ) }
    dend_49 { pt3dadd( 42.6437, 180.009, -51.3183, 0.37 ) }
    dend_49 { pt3dadd( 43.2411, 181.1, -51.733, 0.37 ) }
    dend_49 { pt3dadd( 44.0419, 182.332, -52.1568, 0.29 ) }
    dend_49 { pt3dadd( 45.4257, 184.201, -52.6955, 0.29 ) }
    dend_49 { pt3dadd( 46.2509, 185.166, -52.937, 0.29 ) }
    dend_49 { pt3dadd( 47.8999, 186.633, -53.4296, 0.29 ) }
    dend_49 { pt3dadd( 48.929, 187.284, -53.7838, 0.74 ) }
    dend_49 { pt3dadd( 51.1318, 188.254, -54.6581, 0.37 ) }
    dend_49 { pt3dadd( 51.8328, 188.49, -54.9756, 0.37 ) }
    dend_49 { pt3dadd( 52.638, 188.703, -55.3508, 0.37 ) }
    dend_49 { pt3dadd( 55.018, 189.24, -56.4895, 0.88 ) }
    dend_49 { pt3dadd( 57.9703, 189.806, -57.9768, 0.59 ) }
    dend_49 { pt3dadd( 60.4076, 190.195, -59.2481, 0.37 ) }
    dend_49 { pt3dadd( 61.6187, 190.382, -59.9592, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -5.30326, 114.686, 7.54073, 0.29 ) }
    dend_48 { pt3dadd( -5.58719, 115.683, 7.3845, 0.29 ) }
    dend_48 { pt3dadd( -5.76996, 116.363, 7.24016, 0.29 ) }
    dend_48 { pt3dadd( -5.96741, 117.132, 7.05174, 0.29 ) }
    dend_48 { pt3dadd( -6.11926, 117.822, 6.85115, 0.22 ) }
    dend_48 { pt3dadd( -6.26573, 118.609, 6.60828, 0.22 ) }
    dend_48 { pt3dadd( -6.3099, 118.904, 6.51757, 0.22 ) }
    dend_48 { pt3dadd( -6.37799, 119.519, 6.29299, 0.74 ) }
    dend_48 { pt3dadd( -6.41054, 119.783, 6.19129, 0.74 ) }
    dend_48 { pt3dadd( -6.50998, 120.51, 5.90652, 0.44 ) }
    dend_48 { pt3dadd( -6.55877, 120.914, 5.753, 0.59 ) }
    dend_48 { pt3dadd( -6.60623, 121.411, 5.58431, 0.59 ) }
    dend_48 { pt3dadd( -6.70399, 122.337, 5.29313, 0.29 ) }
    dend_48 { pt3dadd( -6.79097, 123.161, 5.06789, 0.29 ) }
    dend_48 { pt3dadd( -6.84456, 123.654, 4.9379, 0.29 ) }
    dend_48 { pt3dadd( -6.94478, 124.344, 4.74707, 0.29 ) }
    dend_48 { pt3dadd( -7.07322, 125.177, 4.47632, 0.81 ) }
    dend_48 { pt3dadd( -7.10404, 125.418, 4.38259, 0.81 ) }
    dend_48 { pt3dadd( -7.14414, 126.175, 4.06125, 0.29 ) }
    dend_48 { pt3dadd( -7.14298, 126.643, 3.86403, 0.29 ) }
    dend_48 { pt3dadd( -7.11625, 127.268, 3.56363, 0.29 ) }
    dend_48 { pt3dadd( -7.09067, 127.658, 3.31903, 0.29 ) }
    dend_48 { pt3dadd( -7.05469, 128.125, 2.97637, 0.29 ) }
    dend_48 { pt3dadd( -7.01282, 128.684, 2.54097, 0.74 ) }
    dend_48 { pt3dadd( -6.95625, 129.61, 1.79525, 0.22 ) }
    dend_48 { pt3dadd( -6.91813, 130.457, 1.12745, 0.22 ) }
    dend_48 { pt3dadd( -6.87965, 131.345, 0.439032, 0.37 ) }
    dend_48 { pt3dadd( -6.88292, 131.696, 0.163562, 0.37 ) }
    dend_48 { pt3dadd( -6.90421, 132.159, -0.195157, 0.22 ) }
    dend_48 { pt3dadd( -6.93709, 132.88, -0.726451, 0.22 ) }
    dend_48 { pt3dadd( -6.97549, 133.563, -1.17474, 0.52 ) }
    dend_48 { pt3dadd( -7.04723, 134.455, -1.68666, 0.29 ) }
    dend_48 { pt3dadd( -7.07859, 134.838, -1.88561, 0.29 ) }
    dend_48 { pt3dadd( -7.11397, 135.418, -2.2154, 0.29 ) }
    dend_48 { pt3dadd( -7.17648, 136.313, -2.76608, 0.29 ) }
    dend_48 { pt3dadd( -7.22684, 136.909, -3.16469, 0.29 ) }
    dend_48 { pt3dadd( -7.29603, 137.545, -3.61929, 0.29 ) }
    dend_48 { pt3dadd( -7.39268, 138.126, -4.05919, 0.29 ) }
    dend_48 { pt3dadd( -7.56848, 138.945, -4.69462, 0.29 ) }
    dend_48 { pt3dadd( -7.76821, 139.643, -5.29023, 0.29 ) }
    dend_48 { pt3dadd( -7.84811, 139.893, -5.52022, 0.66 ) }
    dend_48 { pt3dadd( -7.89675, 140.068, -5.68113, 0.66 ) }
    dend_48 { pt3dadd( -8.01207, 140.563, -6.10804, 0.22 ) }
    dend_48 { pt3dadd( -8.11827, 141.153, -6.58433, 0.22 ) }
    dend_48 { pt3dadd( -8.22027, 141.842, -7.09708, 0.29 ) }
    dend_48 { pt3dadd( -8.27743, 142.343, -7.46171, 0.29 ) }
    dend_48 { pt3dadd( -8.33759, 143.141, -8.03673, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_48 { pt3dadd( -8.35057, 143.457, -8.26248, 0.52 ) }
    dend_48 { pt3dadd( -8.36736, 144.091, -8.70145, 0.29 ) }
    dend_48 { pt3dadd( -8.40326, 144.836, -9.18939, 0.29 ) }
    dend_48 { pt3dadd( -8.47794, 145.546, -9.58446, 0.29 ) }
    dend_48 { pt3dadd( -8.58837, 146.267, -9.93026, 0.29 ) }
    dend_48 { pt3dadd( -8.68815, 146.8, -10.1492, 0.29 ) }
    dend_48 { pt3dadd( -8.82835, 147.514, -10.4368, 0.29 ) }
    dend_48 { pt3dadd( -8.94995, 148.237, -10.7325, 0.29 ) }
    dend_48 { pt3dadd( -9.04411, 148.979, -11.021, 0.37 ) }
    dend_48 { pt3dadd( -9.09395, 149.566, -11.2414, 0.37 ) }
    dend_48 { pt3dadd( -9.10992, 150.309, -11.5809, 0.37 ) }
    dend_48 { pt3dadd( -9.08665, 151.033, -11.9569, 0.29 ) }
    dend_48 { pt3dadd( -9.01512, 151.887, -12.453, 0.22 ) }
    dend_48 { pt3dadd( -8.94496, 152.435, -12.7956, 0.44 ) }
    dend_48 { pt3dadd( -8.81227, 153.312, -13.3333, 0.81 ) }
    dend_48 { pt3dadd( -8.55031, 154.996, -14.3192, 0.22 ) }
    dend_48 { pt3dadd( -8.43719, 155.9, -14.7719, 0.22 ) }
    dend_48 { pt3dadd( -8.37722, 156.59, -15.0196, 0.74 ) }
    dend_48 { pt3dadd( -8.35742, 156.98, -15.1013, 0.74 ) }
    dend_48 { pt3dadd( -8.31567, 158.118, -15.166, 0.22 ) }
    dend_48 { pt3dadd( -8.26598, 158.949, -15.0447, 0.22 ) }
    dend_48 { pt3dadd( -8.1343, 160.109, -14.691, 0.29 ) }
    dend_48 { pt3dadd( -7.95439, 160.961, -14.4086, 0.29 ) }
    dend_48 { pt3dadd( -7.73996, 161.679, -14.1708, 0.29 ) }
    dend_48 { pt3dadd( -7.46958, 162.386, -13.9626, 0.29 ) }
    dend_48 { pt3dadd( -6.96532, 163.501, -13.6671, 0.22 ) }
    dend_48 { pt3dadd( -6.38608, 164.58, -13.3804, 0.22 ) }
    dend_48 { pt3dadd( -5.85879, 165.39, -13.2174, 0.22 ) }
    dend_48 { pt3dadd( -5.51904, 165.857, -13.143, 0.37 ) }
    dend_48 { pt3dadd( -5.1542, 166.297, -13.0855, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -57.558, 88.7795, -25.4071, 0.22 ) }
    dend_46 { pt3dadd( -63.6698, 86.9599, -28.4534, 0.22 ) }
    dend_46 { pt3dadd( -70.2023, 85.6248, -30.7645, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 33/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -57.558, 88.7795, -25.4071, 0.22 ) }
    dend_45 { pt3dadd( -65.1855, 86.1481, -32.3736, 0.22 ) }
    dend_45 { pt3dadd( -73.6498, 83.5614, -38.3152, 0.22 ) }
    dend_45 { pt3dadd( -83.2513, 83.3784, -42.788, 0.22 ) }
    dend_45 { pt3dadd( -92.9146, 85.1415, -46.7018, 0.22 ) }
    dend_45 { pt3dadd( -103.086, 85.9212, -49.5074, 0.22 ) }
    dend_45 { pt3dadd( -112.829, 85.5277, -53.6582, 0.22 ) }
    dend_45 { pt3dadd( -121.934, 84.7169, -59.0378, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 41/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.48698, -293.806, 47.6337, 0.22 ) }
    dend_17 { pt3dadd( -6.37629, -293.921, 46.2874, 0.22 ) }
    dend_17 { pt3dadd( -7.15031, -293.835, 45.1274, 0.22 ) }
    dend_17 { pt3dadd( -7.63773, -293.737, 44.4345, 0.22 ) }
    dend_17 { pt3dadd( -7.94767, -293.708, 44.0052, 0.22 ) }
    dend_17 { pt3dadd( -8.4266, -293.724, 43.3681, 0.22 ) }
    dend_17 { pt3dadd( -8.76028, -293.771, 42.9482, 0.22 ) }
    dend_17 { pt3dadd( -9.15789, -293.859, 42.4642, 0.52 ) }
    dend_17 { pt3dadd( -9.95574, -294.05, 41.5137, 0.22 ) }
    dend_17 { pt3dadd( -10.6135, -294.31, 40.7687, 0.22 ) }
    dend_17 { pt3dadd( -11.0821, -294.573, 40.2743, 0.37 ) }
    dend_17 { pt3dadd( -11.5968, -294.955, 39.7529, 0.37 ) }
    dend_17 { pt3dadd( -12.2595, -295.558, 39.0655, 0.29 ) }
    dend_17 { pt3dadd( -17.4433, -296.246, 30.3957, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.48698, -293.806, 47.6337, 0.96 ) }
    dend_10 { pt3dadd( -5.6274, -294.488, 47.9072, 0.96 ) }
    dend_10 { pt3dadd( -6.00985, -296.346, 48.6521, 0.59 ) }
    dend_10 { pt3dadd( -6.32296, -297.867, 49.262, 0.59 ) }
    dend_10 { pt3dadd( -6.50317, -298.743, 49.6131, 0.59 ) }
    dend_10 { pt3dadd( -6.90061, -300.674, 50.3872, 0.52 ) }
    dend_10 { pt3dadd( -7.4005, -303.102, 51.3609, 0.74 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 62/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -52.8513, 171.399, -104.851, 0.29 ) }
    dend_98 { pt3dadd( -51.7426, 172.336, -105.755, 0.29 ) }
    dend_98 { pt3dadd( -51.0301, 172.989, -106.361, 0.29 ) }
    dend_98 { pt3dadd( -50.1407, 174.003, -107.165, 0.74 ) }
    dend_98 { pt3dadd( -49.1888, 175.374, -108.034, 0.52 ) }
    dend_98 { pt3dadd( -48.801, 176.117, -108.508, 0.29 ) }
    dend_98 { pt3dadd( -48.2227, 177.426, -109.345, 0.22 ) }
    dend_98 { pt3dadd( -48.0389, 177.961, -109.683, 0.22 ) }
    dend_98 { pt3dadd( -47.7531, 179.191, -110.425, 0.22 ) }
    dend_98 { pt3dadd( -47.5471, 180.644, -111.208, 0.74 ) }
    dend_98 { pt3dadd( -47.3898, 182.905, -112.241, 0.29 ) }
    dend_98 { pt3dadd( -47.3948, 183.837, -112.655, 0.29 ) }
    dend_98 { pt3dadd( -47.4484, 184.927, -113.117, 0.29 ) }
    dend_98 { pt3dadd( -47.503, 186.025, -113.552, 0.29 ) }
    dend_98 { pt3dadd( -47.5357, 187.042, -113.932, 0.74 ) }
    dend_98 { pt3dadd( -47.5896, 188.226, -114.339, 0.74 ) }
    dend_98 { pt3dadd( -47.6539, 189.779, -114.757, 0.37 ) }
    dend_98 { pt3dadd( -47.7459, 191.219, -115.124, 0.29 ) }
    dend_98 { pt3dadd( -47.8582, 192.842, -115.529, 0.29 ) }
    dend_98 { pt3dadd( -47.8895, 194.226, -115.879, 0.29 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 82/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -52.8513, 171.399, -104.851, 0.22 ) }
    dend_97 { pt3dadd( -52.2968, 169.535, -105.251, 0.22 ) }
    dend_97 { pt3dadd( -52.038, 168.392, -105.544, 0.22 ) }
    dend_97 { pt3dadd( -51.8328, 167.381, -105.834, 0.37 ) }
    dend_97 { pt3dadd( -51.6915, 166.707, -106.049, 0.37 ) }
    dend_97 { pt3dadd( -51.4727, 165.616, -106.418, 0.29 ) }
    dend_97 { pt3dadd( -51.2771, 164.519, -106.803, 0.29 ) }
    dend_97 { pt3dadd( -51.0967, 163.449, -107.191, 0.29 ) }
    dend_97 { pt3dadd( -50.9944, 162.676, -107.499, 0.66 ) }
    dend_97 { pt3dadd( -50.896, 161.406, -108.046, 0.22 ) }
    dend_97 { pt3dadd( -50.8322, 160.471, -108.479, 0.22 ) }
    dend_97 { pt3dadd( -50.7811, 159.944, -108.735, 0.37 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 94/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -51.2937, 88.613, 202.29, 0.44 ) }
    dend_85 { pt3dadd( -55.467, 97.066, 206.797, 0.44 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 96/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -51.2937, 88.613, 202.29, 0.22 ) }
    dend_84 { pt3dadd( -56.9476, 91.0902, 206.591, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 98/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -38.6501, 72.8663, 206.231, 0.44 ) }
    dend_82 { pt3dadd( -47.901, 76.589, 205.942, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_82 { pt3dadd( -57.0693, 80.194, 204.34, 0.44 ) }
    dend_82 { pt3dadd( -65.8203, 83.9042, 201.309, 0.44 ) }
    dend_82 { pt3dadd( -75.0503, 85.7597, 197.831, 0.44 ) }
    dend_82 { pt3dadd( -84.6463, 87.2536, 195.229, 0.44 ) }
    dend_82 { pt3dadd( -94.0103, 89.729, 192.677, 0.44 ) }
    dend_82 { pt3dadd( -103.635, 92.2904, 191.638, 0.44 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 6/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -38.6501, 72.8663, 206.231, 0.22 ) }
    dend_81 { pt3dadd( -37.7228, 71.4752, 216.041, 0.44 ) }
    dend_81 { pt3dadd( -36.1771, 71.0373, 225.864, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 9/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -75.1387, 92.2624, 203.403, 0.44 ) }
    dend_78 { pt3dadd( -81.9045, 83.4379, 199.429, 0.44 ) }
    dend_78 { pt3dadd( -88.9607, 75.8458, 193.899, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 12/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -75.1387, 92.2624, 203.403, 0.22 ) }
    dend_77 { pt3dadd( -75.3214, 98.5104, 206.362, 0.44 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 14/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -39.0229, 63.6844, 208.211, 0.44 ) }
    dend_75 { pt3dadd( -36.4469, 61.3251, 216.433, 0.44 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 16/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -39.0229, 63.6844, 208.211, 0.22 ) }
    dend_74 { pt3dadd( -43.0146, 59.0403, 218.509, 0.44 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 71.3024, 106.526, 178.215, 0.44 ) }
    dend_67 { pt3dadd( 75.8831, 113.235, 184.124, 0.44 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 20/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 71.3024, 106.526, 178.215, 0.22 ) }
    dend_66 { pt3dadd( 71.2445, 108.663, 184.529, 0.44 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 22/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 71.909, 103.879, 183.932, 0.44 ) }
    dend_64 { pt3dadd( 73.3971, 106.32, 189.793, 0.44 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 24/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 71.909, 103.879, 183.932, 0.22 ) }
    dend_63 { pt3dadd( 75.0235, 106.761, 191.421, 0.44 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 26/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 90.4324, 114.075, 176.583, 0.44 ) }
    dend_60 { pt3dadd( 102.515, 110.339, 177.172, 0.44 ) }
    dend_60 { pt3dadd( 114.374, 107.184, 180.31, 0.44 ) }
    dend_60 { pt3dadd( 126.311, 104.933, 183.994, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 30/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 90.4324, 114.075, 176.583, 0.22 ) }
    dend_59 { pt3dadd( 87.8776, 122.54, 179.376, 0.44 ) }
    dend_59 { pt3dadd( 84.3974, 130.987, 180.821, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 33/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 71.3778, 85.5346, 188.588, 0.44 ) }
    dend_57 { pt3dadd( 70.4207, 83.6577, 195.695, 0.44 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 35/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 71.3778, 85.5346, 188.588, 0.22 ) }
    dend_56 { pt3dadd( 75.7049, 79.5866, 193.228, 0.44 ) }
    dend_56 { pt3dadd( 80.3655, 74.0972, 198.112, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 38/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.4005, -303.102, 51.3609, 0.52 ) }
    dend_12 { pt3dadd( -7.64311, -304.637, 51.3766, 0.52 ) }
    dend_12 { pt3dadd( -7.74438, -305.638, 51.2683, 0.74 ) }
    dend_12 { pt3dadd( -7.74833, -306.358, 51.2636, 0.81 ) }
    dend_12 { pt3dadd( -7.69785, -307.435, 51.3295, 1.03 ) }
    dend_12 { pt3dadd( -7.66088, -308.523, 51.4816, 0.74 ) }
    dend_12 { pt3dadd( -7.6549, -309.741, 51.7375, 0.44 ) }
    dend_12 { pt3dadd( -7.60888, -311.42, 52.0911, 0.29 ) }
    dend_12 { pt3dadd( -7.48379, -313.903, 52.7872, 0.29 ) }
    dend_12 { pt3dadd( -7.42868, -314.665, 53.0669, 0.29 ) }
    dend_12 { pt3dadd( -7.29385, -315.973, 53.7237, 1.47 ) }
    dend_12 { pt3dadd( -7.1957, -316.702, 54.2462, 1.47 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.4005, -303.102, 51.3609, 0.37 ) }
    dend_11 { pt3dadd( -6.74356, -303.561, 51.062, 0.37 ) }
    dend_11 { pt3dadd( -6.12916, -303.99, 50.7825, 0.37 ) }
    dend_11 { pt3dadd( -5.52558, -304.411, 50.5079, 0.29 ) }
    dend_11 { pt3dadd( -4.50159, -305.126, 50.042, 0.29 ) }
    dend_11 { pt3dadd( -3.98844, -305.484, 49.8085, 0.29 ) }
    dend_11 { pt3dadd( -3.30741, -305.96, 49.4987, 0.29 ) }
    dend_11 { pt3dadd( 3.35321, -310.718, 47.9351, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.1957, -316.702, 54.2462, 1.03 ) }
    dend_14 { pt3dadd( -7.43423, -317.473, 54.2761, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 60/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.1957, -316.702, 54.2462, 0.22 ) }
    dend_13 { pt3dadd( -8.42729, -315.473, 53.8676, 0.22 ) }
    dend_13 { pt3dadd( -9.3348, -314.576, 53.4895, 0.22 ) }
    dend_13 { pt3dadd( -9.99262, -313.876, 53.1496, 0.22 ) }
    dend_13 { pt3dadd( -10.5641, -313.208, 52.8112, 0.22 ) }
    dend_13 { pt3dadd( -11.3086, -312.337, 52.3704, 0.22 ) }
    dend_13 { pt3dadd( -11.9976, -311.532, 51.9624, 0.22 ) }
    dend_13 { pt3dadd( -12.5728, -310.894, 51.5377, 0.22 ) }
    dend_13 { pt3dadd( -13.0684, -310.314, 51.0728, 0.22 ) }
    dend_13 { pt3dadd( -13.4084, -309.856, 50.6747, 0.22 ) }
    dend_13 { pt3dadd( -21.1771, -302.053, 46.6438, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.43423, -317.473, 54.2761, 0.96 ) }
    dend_16 { pt3dadd( -7.49728, -318.949, 54.1251, 0.96 ) }
    dend_16 { pt3dadd( -7.53419, -319.813, 54.0367, 0.96 ) }
    dend_16 { pt3dadd( -7.60702, -321.519, 53.8623, 1.33 ) }
    dend_16 { pt3dadd( -7.707, -323.86, 53.6227, 0.22 ) }
    dend_16 { pt3dadd( -7.7675, -325.276, 53.4778, 0.22 ) }
    dend_16 { pt3dadd( -7.84567, -327.107, 53.2906, 0.22 ) }
    dend_16 { pt3dadd( -6.60224, -340.397, 53.247, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 79/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.43423, -317.473, 54.2761, 0.22 ) }
    dend_15 { pt3dadd( -8.31432, -317.136, 54.8689, 0.22 ) }
    dend_15 { pt3dadd( -9.02828, -316.863, 55.3497, 0.22 ) }
    dend_15 { pt3dadd( -9.52874, -316.672, 55.6868, 0.22 ) }
    dend_15 { pt3dadd( -10.4819, -316.307, 56.3287, 0.22 ) }
    dend_15 { pt3dadd( -10.7005, -316.223, 56.476, 0.22 ) }
    dend_15 { pt3dadd( -17.09, -314.628, 59.9691, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_86 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_108 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_87 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_105 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_69 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_26 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_104 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_103 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_99 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_90 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_71 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_70 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_68 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_53 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_43 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_32 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_27 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_94 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_44 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_30 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_76 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_49 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_48 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_45 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_82 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_86 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_88 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_89 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_102 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_107 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_47 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_106 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_19 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_91 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_61 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_37 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_92 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_65 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_93 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_62 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_79 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_66 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_55 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_67 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_64 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_72 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_63 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_58 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_46 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_57 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_56 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_80 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_59 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_73 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_95 OneSecGrp_SectionRef_72.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_83 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_33 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_75 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_34 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_84 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_96 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_74 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_85 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_81 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_28 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_60 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_97 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_29 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_77 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_98 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_9 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_8 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_78 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_10 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_17 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_11 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_12 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_14 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_100 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_101 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_15 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_13 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_16 OneSecGrp_SectionRef_111.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_79, dend_79, dend_72, dend_72, dend_61, dend_61, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_80, dend_80, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_65, dend_65, dend_62, dend_62, dend_58, dend_58, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_85, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_78, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_60, dend_60, dend_59, dend_59, dend_57, dend_56, dend_56, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_45 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_0 nseg = 9
    dend_108 nseg = 7
    dend_87 nseg = 3
    dend_24 nseg = 7
    dend_1 nseg = 5
    dend_105 nseg = 3
    dend_51 nseg = 3
    dend_36 nseg = 3
    dend_22 nseg = 9
    dend_2 nseg = 7
    dend_69 nseg = 3
    dend_38 nseg = 9
    dend_31 nseg = 3
    dend_26 nseg = 3
    dend_104 nseg = 3
    dend_103 nseg = 11
    dend_99 nseg = 9
    dend_90 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 7
    dend_68 nseg = 9
    dend_53 nseg = 3
    dend_50 nseg = 3
    dend_43 nseg = 3
    dend_32 nseg = 5
    dend_27 nseg = 3
    dend_94 nseg = 3
    dend_44 nseg = 3
    dend_30 nseg = 3
    dend_76 nseg = 3
    dend_49 nseg = 7
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_82 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BTC_a47bfc03bb_0_0


