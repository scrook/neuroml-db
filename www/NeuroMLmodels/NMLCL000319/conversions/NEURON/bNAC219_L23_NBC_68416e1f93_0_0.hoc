// Cell: bNAC219_L23_NBC_68416e1f93_0_0
/*
{
  "id" : "bNAC219_L23_NBC_68416e1f93_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.3022, -4.91444, 0.0966793, 4.52114", "-9.29583, -4.38505, 0.0928107, 5.29403", "-8.28943, -3.85565, 0.0889422, 6.87895", "-7.28303, -3.32626, 0.0850736, 8.2055", "-6.27664, -2.79687, 0.0812051, 9.69593", "-5.27024, -2.26748, 0.0773365, 11.1864", "-4.26385, -1.73809, 0.073468, 12.1576", "-3.25745, -1.20869, 0.0695994, 12.1028", "-2.25106, -0.679302, 0.0657309, 12.5691", "-1.24466, -0.14991, 0.0618623, 13.5271", "-0.238266, 0.379482, 0.0579938, 14.6432", "0.76813, 0.908874, 0.0541252, 15.6577", "1.77453, 1.43827, 0.0502567, 15.7754", "2.78092, 1.96766, 0.0463882, 15.433", "3.78732, 2.49705, 0.0425196, 14.9368", "4.79371, 3.02644, 0.0386511, 14.4352", "5.80011, 3.55583, 0.0347825, 13.7953", "6.8065, 4.08523, 0.030914, 12.9353", "7.8129, 4.61462, 0.0270454, 10.4207", "8.81929, 5.14401, 0.0231769, 6.43383", "9.82569, 5.6734, 0.0193083, 3.7421" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.0327, 0.453743, 12.0695, 1.38", "1.90365, 2.54035, 8.33387, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.5927, -1.21701, -10.1505, 1.66", "5.08076, -1.74996, -12.5388, 1.66", "7.64483, -4.54991, -25.0864, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.7473, 1.29425, 5.4595, 1.66", "-10.4995, 1.81218, 6.7325, 1.66", "-13.3991, 2.50422, 8.70238, 1.66", "-15.556, 2.86723, 9.94163, 1.66", "-18.2647, 3.32313, 11.498, 1.66", "-21.2551, 3.82646, 13.2163, 1.66", "-25.4771, 4.53702, 15.642, 1.66", "-28.2188, 4.90667, 17.2175, 1.66", "-32.5375, 5.26689, 19.4599, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-10.3073, -6.10625, 1.9395, 2.77", "-13.5292, -7.00869, 0.799228, 2.77", "-18.8927, -8.511, -1.09903, 2.77", "-23.3201, -9.75108, -2.66594, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.2873, -5.5015, 6.9695, 1.11", "-13.0231, -7.03108, 8.28111, 1.11", "-14.6311, -8.4382, 9.45064, 1.11", "-16.4821, -10.0595, 10.8084, 1.11", "-17.5813, -11.0045, 11.6002, 1.38", "-19.5144, -12.6526, 13.0695, 0.83", "-21.108, -14.034, 14.3495, 1.11", "-21.7332, -14.5996, 14.8983, 1.11", "-23.2045, -15.8985, 16.2005, 1.11", "-23.8615, -16.4967, 16.8171, 1.11", "-25.2283, -17.7891, 18.221, 1.11", "-26.0049, -18.5862, 19.051, 1.11", "-26.4846, -19.1238, 19.5917, 1.11", "-27.2703, -20.0065, 20.4491, 1.66", "-29.1234, -22.0142, 22.4196, 1.66", "-30.6453, -23.6534, 24.0386, 1.38", "-32.293, -25.5016, 25.7232, 1.38", "-33.4838, -26.8946, 26.9647, 1.38", "-34.8907, -28.6384, 28.5406, 1.11", "-36.0666, -30.173, 29.9372, 1.11", "-37.8303, -32.5503, 32.1569, 1.11", "-39.6811, -35.1557, 34.6082, 0.83", "-40.784, -36.7696, 36.1526, 0.83", "-42.4022, -39.2645, 38.4569, 1.38", "-43.2702, -40.6984, 39.7258, 1.38", "-44.2239, -42.3196, 41.1023, 0.83", "-45.1316, -43.8251, 42.3588, 0.83", "-45.7952, -44.903, 43.2687, 1.11", "-46.612, -46.2165, 44.3191, 0.83", "-47.3317, -47.3525, 45.1829, 1.11", "-47.9865, -48.3899, 45.98, 0.55", "-48.7168, -49.539, 46.8516, 1.11", "-49.5602, -50.8307, 47.8719, 0.55", "-50.3408, -51.9864, 48.7847, 1.94", "-51.3884, -53.5262, 50.0251, 0.55", "-52.0373, -54.491, 50.814, 0.55", "-52.8204, -55.7107, 51.8009, 0.55", "-53.54, -56.9409, 52.7876, 1.11", "-54.5816, -58.9504, 54.261, 0.28", "-54.8946, -59.6844, 54.715, 1.11", "-55.3944, -61.241, 55.6784, 0.28", "-55.5569, -61.9417, 56.1298, 0.55", "-55.775, -63.2156, 57.0176, 0.28", "-55.8783, -63.9847, 57.54, 0.28", "-56.0541, -65.7087, 58.706, 1.66", "-56.4099, -68.8438, 60.8073, 0.28", "-56.5471, -69.9842, 61.5712, 0.28", "-56.716, -71.1583, 62.428, 0.83", "-56.9445, -72.6329, 63.6232, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.7273, -6.39325, 11.6495, 2.77", "-4.13737, -7.7768, 11.6495, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.6827, -2.775, 1.6195, 2.49", "9.99255, -3.39118, 1.81019, 2.22", "12.0764, -4.37149, 2.11357, 2.22", "13.4246, -5.00568, 2.30984, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.0827, 8.87925, -4.97829E-4, 2.22", "6.23062, 10.4486, -0.475416, 2.22", "6.42427, 12.5032, -1.09718, 2.22", "6.62332, 14.615, -1.73626, 2.22", "6.93131, 17.8826, -2.72509, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.82569, 5.6734, 0.0193083, 0.831077", "23.101, 12.6566, 0.0193083, 0.831077", "36.3764, 19.6398, 0.0193083, 0.831077" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "1.90365, 2.54035, 8.33387, 0.83", "0.95538, 8.82663, 6.34809, 0.83", "0.47952, 11.9134, 5.44477, 0.83", "0.121989, 14.1487, 4.80148, 0.83", "-0.137857, 15.638, 4.38618, 1.38", "-0.838047, 19.39, 3.5259, 0.83", "-1.33652, 22.061, 2.91346, 1.38", "-2.20187, 25.9285, 2.34986, 0.83", "-3.11681, 29.7986, 1.81939, 0.83", "-3.52096, 31.3874, 1.63209, 0.83", "-4.20587, 34.2804, 1.2353, 1.94" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "1.90365, 2.54035, 8.33387, 1.38", "3.29017, 4.43081, 10.2874, 1.38", "5.06972, 6.85712, 12.7945, 1.38", "6.72534, 9.11448, 15.1271, 1.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.64483, -4.54991, -25.0864, 0.83", "8.15093, -2.13977, -29.6113, 0.83", "8.48669, -0.540832, -32.6133, 0.83", "8.91085, 1.47915, -36.4056, 0.83", "9.04549, 2.12032, -37.6095, 0.55", "9.44055, 4.00177, -41.1417, 0.55", "9.79725, 5.70056, -44.3311, 0.55", "10.4045, 9.62665, -51.7937, 0.55", "10.4412, 14.8897, -58.4528, 0.55", "11.2035, 19.6796, -65.4034, 0.55", "13.1567, 25.8755, -70.9184, 0.55", "16.6604, 32.6526, -74.7721, 0.55", "20.3748, 38.8164, -79.3415, 0.55", "25.706, 43.7047, -83.7803, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.64483, -4.54991, -25.0864, 1.66", "7.09562, -7.39577, -28.0239, 1.66", "6.61962, -9.86229, -30.5699, 1.11" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-32.5375, 5.26689, 19.4599, 0.55", "-34.5719, 4.6472, 19.6992, 0.55", "-39.9921, 2.88573, 20.2503, 0.55", "-40.971, 2.59415, 20.3332, 0.55", "-43.6837, 1.85174, 20.5328, 0.55", "-44.4338, 1.64274, 20.5839, 0.83", "-47.2844, 0.807796, 20.8199, 0.55", "-50.304, -0.127168, 21.0614, 1.11", "-53.6702, -1.19333, 21.3173, 0.55", "-55.904, -1.91157, 21.4269, 1.94", "-57.9376, -2.53282, 21.4676, 1.94", "-60.3858, -3.25791, 21.4602, 0.55", "-61.8722, -3.73182, 21.3672, 0.55", "-64.265, -4.48925, 21.0944, 0.28", "-66.6806, -5.24009, 20.682, 1.94", "-70.1557, -6.18589, 19.9693, 0.55", "-71.2054, -6.4421, 19.7405, 1.66", "-75.087, -7.24364, 18.7922, 0.55", "-77.513, -7.66416, 18.2597, 1.11", "-81.2763, -8.23095, 17.4854, 0.55", "-82.9605, -8.45374, 17.1957, 0.55", "-84.7712, -8.67019, 16.9156, 1.38", "-90.4317, -9.26205, 16.1773, 0.28", "-96.0905, -9.7353, 15.6159, 0.28", "-97.5046, -9.85764, 15.4955, 1.38", "-102.347, -10.3024, 15.1887, 0.28", "-105.087, -10.5585, 15.027, 0.83", "-106.88, -10.7065, 14.9399, 0.28", "-109.387, -10.9521, 14.9549, 0.55", "-111.033, -11.1194, 14.9845, 0.28", "-113.147, -11.322, 15.0744, 1.94" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-32.5375, 5.26689, 19.4599, 0.83", "-37.7826, 5.09054, 21.9865, 0.83", "-41.1409, 5.03736, 23.3824, 1.66", "-44.159, 5.06897, 24.5037, 1.11", "-47.2911, 5.18878, 25.5582, 1.11", "-50.6964, 5.50567, 26.6474, 1.11", "-53.5429, 5.84466, 27.5578, 1.11", "-55.984, 6.2354, 28.2161, 0.83", "-58.7617, 6.7775, 28.9755, 1.11", "-61.465, 7.3717, 29.8187, 1.38", "-66.513, 8.55042, 31.7028, 0.55", "-68.6676, 9.05882, 32.6118, 0.55", "-71.4368, 9.64975, 33.839, 0.55", "-74.2694, 10.1762, 35.1864, 1.66", "-77.2165, 10.5924, 36.6408, 1.66", "-81.1319, 10.9678, 38.5719, 1.11", "-83.5526, 11.077, 39.7723, 1.66", "-86.9611, 11.2172, 41.513, 0.83", "-89.3086, 11.2584, 42.7109, 1.11", "-91.0402, 11.2483, 43.5978, 0.55", "-93.3456, 11.1272, 44.7027, 0.83", "-95.7762, 10.8226, 45.8684, 1.38", "-98.5259, 10.2676, 47.4202, 0.55", "-100.105, 9.75715, 48.6087, 0.55", "-100.718, 9.48387, 49.1223, 0.28", "-101.93, 8.80557, 50.2753, 0.55", "-104.407, 7.18537, 52.8829, 0.28", "-106.186, 5.93973, 54.8315, 1.66", "-109.821, 3.30198, 58.9846, 0.28", "-110.561, 2.82331, 59.8885, 1.11", "-112.39, 1.77913, 62.1886, 0.28", "-113.461, 1.29424, 63.6478, 0.83", "-115.109, 0.773916, 65.9177, 0.28", "-115.575, 0.680176, 66.5586, 0.83", "-118.232, 0.443242, 70.2699, 0.28", "-119.445, 0.436047, 71.9847, 1.66", "-122.931, 0.590176, 76.848, 0.55", "-124.247, 0.669836, 78.6394, 0.28", "-125.788, 0.788176, 80.6565, 1.11", "-127.77, 0.891266, 83.0829, 0.55", "-129.809, 0.925266, 85.3475, 0.55", "-131.597, 0.883186, 87.1431, 1.11", "-134.601, 0.672926, 89.8805, 0.28", "-135.423, 0.540136, 90.6283, 0.28", "-138.255, -0.248303, 93.2066, 1.38", "-141.255, -1.50886, 95.9336, 0.55", "-142.796, -2.42035, 97.3822, 0.28", "-143.88, -3.25966, 98.413, 1.11", "-146.502, -5.73003, 100.874, 0.28", "-148.131, -7.44734, 102.436, 1.38", "-149.673, -9.29311, 103.929, 0.55", "-150.96, -11.0425, 105.196, 1.11", "-152.735, -13.5857, 106.952, 0.28", "-154.166, -15.6829, 108.276, 0.28", "-155.578, -17.6761, 109.456, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.3201, -9.75108, -2.66594, 1.38", "-27.2332, -9.97434, -2.26267, 1.38", "-29.2056, -9.9304, -2.23224, 1.38", "-34.6894, -9.5161, -2.04988, 1.38", "-36.6049, -9.27146, -1.94665, 1.38", "-38.8712, -8.87698, -1.76885, 1.11", "-41.3815, -8.38526, -1.45329, 1.11", "-47.081, -6.91173, -0.609232, 1.11", "-50.1621, -5.93677, -0.0296878, 1.11", "-53.8301, -4.54251, 0.784811, 0.83", "-56.9434, -3.27779, 1.54997, 0.83", "-59.985, -2.00859, 2.37991, 1.38", "-62.1362, -1.10114, 3.01641, 0.55", "-64.1698, -0.217344, 3.67805, 0.55", "-66.5934, 0.788186, 4.34314, 0.55", "-69.1378, 1.79622, 4.96759, 1.66", "-71.8875, 2.84406, 5.52247, 0.55", "-73.1521, 3.43708, 5.69788, 1.11", "-75.938, 5.01383, 6.04477, 0.55", "-77.2655, 5.9793, 6.18313, 0.83", "-78.5085, 7.02475, 6.27954, 0.28", "-79.8712, 8.31862, 6.34613, 0.83", "-84.3022, 13.0648, 6.42922, 0.28", "-86.0269, 15.0708, 6.50562, 1.11", "-88.6651, 18.448, 6.81944, 0.55", "-90.4539, 20.8946, 7.17591, 2.22", "-91.7578, 22.764, 7.5392, 0.55", "-93.8459, 25.8934, 8.19456, 0.28", "-95.1768, 27.8443, 8.73641, 0.83", "-97.5663, 31.4032, 9.84186, 0.28", "-97.9989, 32.0832, 10.0787, 1.94", "-98.8481, 33.6076, 10.6271, 0.55", "-100.913, 37.5417, 12.0561, 0.28", "-101.874, 39.3673, 12.6448, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.3201, -9.75108, -2.66594, 1.66", "-24.3621, -13.0386, -1.96079, 1.66", "-25.9363, -18.0046, -0.895587, 1.66", "-28.0778, -24.7606, 0.553566, 1.66", "-29.2768, -28.5435, 1.36498, 1.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.13737, -7.7768, 11.6495, 0.83", "-3.22728, -7.17736, 15.2076, 0.83", "-1.76226, -5.93546, 21.1481, 0.83", "-0.798905, -5.11883, 25.0544, 0.83", "0.111837, -4.34679, 28.7473, 0.83", "1.32795, -3.31589, 33.6785, 0.83", "1.73719, -2.96899, 35.3379, 1.38", "1.7852, -2.87157, 35.6441, 1.38" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "13.4246, -5.00568, 2.30984, 0.83", "17.9909, -6.65144, 2.42108, 0.83", "22.4086, -8.16332, 2.67524, 0.83", "28.1136, -10.1813, 2.96535, 0.83", "32.4343, -11.7777, 3.1679, 0.83", "35.2135, -12.7943, 3.33711, 1.11", "37.3316, -13.5718, 3.50712, 0.83", "40.1049, -14.4968, 3.89422, 1.11", "42.3927, -15.2678, 4.29234, 1.11", "45.8274, -16.7259, 5.05473, 0.83", "48.5703, -18.19, 5.67096, 0.83", "49.9496, -19.0479, 5.95408, 0.83", "52.6255, -20.8572, 6.51225, 1.38", "54.5751, -22.2894, 6.95919, 0.83", "56.5238, -23.7762, 7.41666, 0.83", "58.3148, -25.149, 7.79848, 0.55", "59.8474, -26.2908, 8.06292, 0.83", "61.9061, -27.7478, 8.36926, 0.83", "63.8342, -29.0164, 8.67315, 0.83", "66.254, -30.5086, 9.08566, 0.83", "70.7484, -33.1621, 9.93355, 0.83", "72.918, -34.4023, 10.3657, 1.11", "75.3654, -35.726, 10.8285, 1.11", "77.6037, -36.961, 11.12, 0.55", "78.3047, -37.3442, 11.2025, 0.55", "80.5132, -38.6918, 11.428, 1.11", "82.2444, -39.8617, 11.4686, 0.55", "83.761, -40.9062, 11.42, 0.55", "87.047, -43.0859, 10.9076, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.4246, -5.00568, 2.30984, 0.83", "14.5391, -5.86419, 4.10101, 0.83", "17.1847, -7.90207, 8.3528, 0.83", "18.8778, -9.20619, 11.0737, 0.83", "19.7726, -9.89544, 12.5118, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "6.93131, 17.8826, -2.72509, 1.38", "5.13324, 19.7656, -2.57859, 1.38", "3.38522, 21.5961, -2.43616, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.93131, 17.8826, -2.72509, 1.94", "10.8335, 21.5807, -4.6653, 1.94", "12.4214, 23.0855, -5.45479, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.3764, 19.6398, 0.0193083, 0.55", "49.6517, 26.623, 0.0193083, 0.55", "62.9271, 33.6062, 0.0193083, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.20587, 34.2804, 1.2353, 0.83", "-5.89216, 34.9828, -0.944848, 0.83", "-8.25274, 35.966, -3.99677, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.20587, 34.2804, 1.2353, 0.55", "-3.24841, 38.6768, 1.57776, 0.55", "-2.72275, 40.7314, 1.82884, 0.55", "-2.01938, 43.3167, 2.19165, 1.11", "-0.645671, 48.5141, 2.91832, 0.83", "-0.0705138, 50.72, 3.21286, 0.28", "0.26331, 51.9111, 3.37106, 0.83", "1.15576, 54.7971, 3.73093, 0.28", "2.09011, 57.6558, 4.12655, 0.83", "2.92882, 60.0585, 4.50134, 0.28", "4.08107, 63.4538, 5.04745, 1.38", "4.71179, 65.4867, 5.3339, 0.28", "4.98501, 66.4012, 5.43542, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "6.72534, 9.11448, 15.1271, 0.83", "10.5209, 11.7976, 21.1511, 0.83", "12.371, 13.2836, 24.1697, 0.83", "14.1153, 14.8708, 26.9658, 1.38", "16.4172, 17.2973, 30.8855, 1.11", "17.687, 18.7648, 33.0633, 1.11", "18.4144, 19.6649, 34.2986, 1.11", "20.2209, 22.2712, 37.4846, 0.83", "21.817, 24.708, 40.0823, 1.11", "23.337, 27.0748, 42.3773, 0.55", "24.101, 28.3593, 43.5233, 1.11", "25.8846, 31.4552, 46.2333, 1.11", "28.1446, 35.2212, 49.5814, 1.66", "30.5833, 38.9043, 52.965, 0.83", "31.9193, 40.7779, 54.7682, 1.66" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "25.706, 43.7047, -83.7803, 0.28", "29.0539, 51.7564, -93.4771, 0.28", "32.7728, 58.4629, -103.98, 0.28", "36.7483, 65.5254, -114.163, 0.28", "39.2929, 74.6926, -123.132, 0.28", "40.4566, 83.1295, -133.017, 0.28", "43.1081, 90.9345, -143.111, 0.28", "45.1098, 99.3361, -152.892, 0.28", "46.0013, 108.113, -162.52, 0.28", "45.875, 117.219, -171.889, 0.28", "47.3037, 124.95, -182.277, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "25.706, 43.7047, -83.7803, 0.28", "28.7619, 50.1639, -91.5562, 0.28", "30.5641, 56.2769, -99.9451, 0.28", "32.6266, 61.4902, -108.844, 0.28", "36.0195, 64.9735, -118.149, 0.28", "38.1847, 69.3146, -127.463, 0.28", "40.4545, 73.4935, -136.825, 0.28", "40.7075, 78.3069, -146.147, 0.28", "40.3239, 84.0789, -154.917, 0.28", "39.5761, 89.5583, -163.839, 0.28", "38.3045, 93.2104, -173.571, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.61962, -9.86229, -30.5699, 0.55", "8.13312, -11.6884, -40.7907, 0.55", "8.65533, -12.3184, -44.3172, 0.55", "9.07126, -12.8203, -47.126, 0.55", "11.7429, -15.6603, -59.7426, 0.55", "13.2845, -18.3977, -72.5689, 0.55", "13.6894, -20.6616, -85.5692, 0.55", "15.7006, -24.4953, -98.0581, 0.55", "20.0161, -26.1166, -110.422, 0.55", "23.7558, -26.3371, -123.07, 0.55", "26.01, -25.9894, -136.063, 0.55", "29.5479, -28.0126, -148.616, 0.55", "34.5575, -33.0638, -159.773, 0.55", "38.9329, -38.9904, -170.786, 0.55", "45.4192, -45.0393, -180.626, 0.55", "51.5896, -51.8067, -190.221, 0.55", "56.6077, -59.159, -200.076, 0.55", "62.0501, -65.3278, -210.466, 0.55", "65.3533, -74.3636, -219.697, 0.55", "70.1962, -85.3583, -225.618, 0.55", "75.2563, -95.6636, -232.468, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.61962, -9.86229, -30.5699, 0.55", "6.41769, -10.5849, -31.7005, 0.55", "5.58515, -13.5638, -36.3615, 0.55", "4.89458, -16.0348, -40.2276, 0.55", "4.33595, -20.9453, -48.6902, 0.55", "4.72204, -23.6454, -58.0768, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-29.2768, -28.5435, 1.36498, 0.55", "-30.9942, -31.9641, -0.185726, 0.55", "-32.8622, -35.9126, -1.81485, 0.28", "-33.6432, -37.8815, -2.51664, 0.28", "-34.3437, -40.0337, -3.31088, 0.28", "-35.4458, -44.1587, -4.8755, 0.55", "-36.1507, -46.7967, -5.87607, 0.55", "-36.9828, -50.8241, -7.17406, 0.55", "-37.5625, -54.2465, -8.16601, 0.55", "-37.965, -57.6899, -9.2621, 0.55", "-38.0353, -59.3617, -9.8308, 0.28", "-39.2533, -69.0329, -12.1062, 0.28", "-38.9617, -78.6732, -14.772, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-29.2768, -28.5435, 1.36498, 1.11", "-29.986, -34.3771, 2.17441, 1.11", "-30.6763, -40.0544, 2.96215, 1.11", "-31.3652, -45.7208, 3.74836, 1.11", "-31.9641, -50.6453, 4.43165, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.7852, -2.87157, 35.6441, 0.55", "2.48549, -3.64171, 38.4174, 0.55", "2.69328, -3.83777, 39.1696, 0.83", "5.2347, -5.85008, 47.428, 0.28", "5.66919, -6.18942, 48.8921, 0.83", "6.62897, -6.98499, 52.284, 0.55", "7.13869, -7.40275, 54.2291, 1.11", "8.41257, -8.37825, 59.2355, 0.55", "9.22865, -8.95202, 62.3854, 1.38", "10.7711, -10.0204, 68.2334, 0.55", "11.592, -10.5877, 71.3175, 1.38", "13.2779, -11.6687, 77.6266, 0.28", "13.7737, -11.9695, 79.4316, 1.11", "14.405, -12.3737, 81.7206, 0.55", "15.2264, -12.8365, 84.4945, 1.66", "16.4391, -13.314, 88.0987, 0.55", "17.3643, -13.5392, 90.6915, 0.83", "18.3949, -13.697, 93.409, 0.28", "18.9314, -13.7492, 94.8672, 1.11", "20.0711, -13.776, 98.0409, 0.55", "20.7489, -13.7113, 99.9287, 1.38", "22.9788, -13.2524, 106.076, 0.28", "23.8918, -13.0519, 108.536, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "1.7852, -2.87157, 35.6441, 1.38", "3.20553, -3.14924, 37.7169, 1.38", "7.67915, -4.02382, 44.2457, 1.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "87.047, -43.0859, 10.9076, 0.28", "89.6419, -41.8817, 10.9451, 0.28", "91.6217, -40.9629, 10.9737, 0.55", "93.2666, -40.1996, 10.9974, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "87.047, -43.0859, 10.9076, 0.83", "89.235, -44.5501, 11.2575, 0.83", "91.5907, -46.1492, 11.652, 1.94", "93.4409, -47.4212, 11.9745, 1.11", "98.3567, -50.7842, 12.8137, 0.83", "102.282, -53.4341, 13.4512, 0.83", "104.958, -55.2076, 13.8562, 1.38", "107.641, -56.8518, 14.199, 0.55", "110.264, -58.365, 14.4924, 1.94", "113.067, -59.9399, 14.8068, 0.55", "115.04, -60.9807, 15.0474, 0.55", "117.326, -62.1142, 15.338, 1.11", "122.358, -64.549, 16.1323, 0.55", "123.404, -65.0029, 16.3446, 0.55", "126.898, -66.454, 17.2223, 1.11", "129.28, -67.4309, 18.0172, 0.55", "130.988, -68.1267, 18.6703, 0.55", "134.675, -69.5776, 20.2871, 0.83", "138.282, -70.9089, 22.0478, 0.28", "140.151, -71.5184, 22.9292, 1.38", "143.329, -72.4376, 24.3119, 0.55", "146.258, -73.1341, 25.4688, 0.55", "148.012, -73.497, 26.1236, 0.83", "150.878, -73.9545, 27.0674, 0.55", "153.158, -74.2554, 27.7451, 0.55", "155.986, -74.4877, 28.5326, 1.66", "160.813, -74.7528, 29.8048, 0.55", "163.322, -74.8946, 30.5696, 0.28", "165.945, -75.0342, 31.449, 0.83", "169.273, -75.0496, 32.8228, 0.55", "172.968, -74.9447, 34.5462, 0.55", "174.479, -74.8847, 35.3006, 1.38", "179.298, -74.7047, 37.8297, 0.28", "182.446, -74.5215, 39.5769, 1.11", "189.2, -74.0996, 43.5863, 0.28", "190.272, -74.0048, 44.2706, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.7726, -9.89544, 12.5118, 0.28", "21.3703, -12.3325, 14.205, 0.28", "21.5219, -12.5555, 14.3571, 0.83", "22.6714, -14.1858, 15.366, 0.83", "24.069, -16.1199, 16.4354, 0.28", "24.8657, -17.144, 16.9832, 0.83", "26.3769, -19.1386, 17.9963, 0.28", "26.8979, -19.8588, 18.3046, 0.55", "28.5327, -22.2193, 19.3028, 0.28", "29.5035, -23.6736, 19.8807, 0.55", "31.4086, -26.5934, 21.0075, 0.28", "33.3046, -29.6486, 22.2679, 0.28", "34.8615, -32.1954, 23.2984, 1.11", "37.2443, -36.2621, 24.9879, 0.55", "38.3719, -38.2775, 25.8583, 1.66", "39.4389, -40.2857, 26.7533, 0.28", "40.2903, -42.0345, 27.5231, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.7726, -9.89544, 12.5118, 0.55", "23.1929, -10.5888, 18.137, 0.55", "29.3867, -11.8443, 28.3236, 0.55", "31.6228, -12.2976, 32.0012, 0.55", "33.5608, -12.6904, 35.1886, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.38522, 21.5961, -2.43616, 0.55", "1.70613, 23.7047, -2.7049, 0.55", "-1.28325, 27.4587, -3.18336, 0.55", "-3.36039, 30.0671, -3.51581, 0.55", "-5.04039, 32.1768, -3.7847, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.38522, 21.5961, -2.43616, 0.83", "-0.966729, 23.9221, -5.36523, 0.83", "-2.61712, 24.8299, -6.35219, 0.83", "-4.62859, 26.0974, -7.39837, 0.83", "-7.90809, 28.2088, -9.05032, 0.83", "-12.9078, 31.3983, -11.4199, 0.83", "-14.6048, 32.4262, -12.1921, 1.38", "-17.4729, 34.2039, -13.3487, 0.83", "-21.0257, 36.5393, -14.9305, 0.83", "-24.143, 38.7301, -16.5005, 0.83", "-25.9209, 40.0462, -17.5106, 1.38", "-28.9788, 42.5382, -19.6066, 0.55", "-31.3036, 44.5926, -21.6067, 0.83", "-33.5357, 46.7111, -24.0276, 0.83", "-35.3218, 48.5362, -26.466, 0.83", "-36.9352, 50.4736, -29.0696, 1.38", "-39.3134, 53.7002, -33.5253, 0.55", "-39.6501, 54.1944, -34.2146, 0.55", "-40.4628, 55.3061, -35.7477, 1.11", "-42.2659, 57.6144, -38.5729, 0.55", "-43.2957, 58.9663, -39.911, 0.55", "-44.7542, 60.8803, -41.3465, 1.11", "-46.2407, 62.7999, -42.2931, 0.55", "-48.0773, 65.2266, -43.1516, 1.11", "-49.4995, 67.1171, -43.6546, 0.28", "-50.8774, 68.9874, -43.9858, 0.83", "-52.8242, 71.6502, -44.3879, 0.28", "-54.8363, 74.5188, -44.6385, 0.28", "-56.7667, 77.4629, -44.7795, 1.11", "-63.7387, 82.8708, -51.3481, 1.11", "-70.015, 88.2907, -58.5756, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "12.4214, 23.0855, -5.45479, 1.11", "14.3743, 23.8962, -4.51059, 1.11", "18.3007, 25.5248, -2.43345, 0.83", "22.1947, 27.1291, -0.292065, 0.83", "25.4447, 28.4136, 1.58437, 0.83", "26.9839, 28.9973, 2.47128, 0.55", "30.0749, 30.1676, 4.28561, 1.11", "32.7291, 31.19, 5.95767, 0.55", "34.7374, 31.9301, 7.26278, 1.38", "37.1035, 32.8376, 8.86684, 0.55", "38.8181, 33.5356, 10.0056, 0.55", "41.8391, 34.8891, 12.0183, 0.83", "44.2136, 36.0668, 13.5331, 0.28", "45.1053, 36.5507, 14.109, 0.83", "46.9133, 37.6529, 15.2811, 0.28", "49.4803, 39.3083, 16.9161, 1.11", "51.9663, 40.9546, 18.5971, 0.28", "53.3662, 41.8776, 19.6005, 1.66", "56.5024, 43.9256, 22.0777, 0.55", "57.87, 44.7846, 23.2013, 0.55", "59.0472, 45.474, 24.1657, 0.55", "62.0019, 47.0753, 26.5578, 1.38", "64.1008, 48.1019, 28.1715, 0.28", "66.4386, 49.1157, 30.0354, 0.83", "68.4592, 49.8702, 31.7234, 1.11", "69.6839, 50.2612, 32.7393, 1.11", "70.703, 50.5502, 33.5463, 0.28", "71.9796, 50.8414, 34.5297, 0.83", "77.6078, 51.9038, 38.8595, 0.28", "80.2493, 52.2948, 40.9639, 1.38", "81.5296, 52.453, 42.0376, 0.28", "83.0116, 52.6714, 43.348, 1.11", "85.7513, 53.1902, 45.9773, 0.28", "86.0815, 53.2718, 46.3088, 0.55", "88.4373, 54.0367, 48.6918, 0.28", "89.2852, 54.4297, 49.6541, 1.38", "92.6918, 56.465, 53.9563, 0.28", "94.3595, 57.844, 56.5942, 0.83", "95.1832, 58.6561, 58.0207, 0.28", "95.7036, 59.2024, 58.9597, 1.11", "97.8253, 61.5723, 62.8896, 0.28", "98.4926, 62.3432, 64.1523, 1.11", "102.89, 67.5872, 72.457, 0.28", "103.556, 68.4, 73.6891, 1.38", "105.38, 70.7141, 77.0282, 0.28", "105.864, 71.3251, 77.9022, 1.38", "107.654, 73.559, 81.0147, 0.28", "107.942, 73.9142, 81.4917, 0.83", "110.272, 76.8953, 84.6046, 0.55", "111.01, 78.002, 85.7527, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.4214, 23.0855, -5.45479, 1.38", "13.686, 24.9457, -8.08529, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "31.9193, 40.7779, 54.7682, 0.55", "34.0355, 40.5508, 55.7105, 0.55", "36.4735, 40.3334, 56.7469, 0.55", "41.1945, 40.017, 58.5877, 0.55", "44.063, 39.8764, 59.675, 1.11", "49.1147, 39.6035, 61.2433, 0.55", "52.8163, 39.4208, 62.2826, 0.55", "55.0061, 39.3068, 62.8339, 0.28", "57.3162, 39.265, 63.3657, 0.83", "61.0274, 39.2376, 64.0941, 0.55", "66.0943, 39.2222, 65.0776, 0.83", "70.2859, 39.2575, 65.8706, 0.28", "75.1149, 39.3517, 66.9215, 0.83", "79.6597, 39.5105, 68.011, 0.28", "80.3643, 39.5489, 68.207, 0.28", "82.7088, 39.7782, 68.9248, 0.83", "85.2529, 40.1883, 69.8374, 0.28", "87.2428, 40.6026, 70.5827, 0.83", "89.5854, 41.2488, 71.6161, 0.28", "91.4059, 41.7525, 72.3541, 0.83", "93.0473, 42.2404, 73.0269, 0.28", "95.2578, 42.9623, 73.9287, 0.83", "98.7354, 44.1773, 75.5188, 0.28", "100.39, 44.7884, 76.3735, 0.55", "103.713, 46.2464, 78.3111, 0.28" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "31.9193, 40.7779, 54.7682, 0.83", "32.6073, 41.9257, 56.0909, 0.83", "33.2562, 43.0048, 57.4679, 0.83", "33.9207, 44.0956, 58.9104, 0.55", "34.1562, 44.4699, 59.5187, 0.55", "34.774, 45.4086, 61.1377, 0.83", "35.2887, 46.1894, 62.5229, 0.55", "35.7688, 46.8776, 63.8232, 0.83", "36.0275, 47.2619, 64.5035, 1.38", "37.5128, 49.6715, 68.4957, 0.55", "38.2365, 50.9654, 70.4827, 1.38", "38.9771, 52.5119, 72.5544, 0.55", "39.1082, 52.8481, 72.9303, 1.11", "39.597, 54.4716, 74.4631, 0.55", "39.7985, 55.4289, 75.2299, 0.83", "39.8773, 56.0683, 75.6301, 0.83", "39.9777, 57.7772, 76.6693, 0.55", "40.0345, 59.8059, 77.8667, 0.83", "40.0463, 61.4686, 78.898, 1.11", "40.0272, 62.951, 79.8901, 0.55", "40.0205, 63.2616, 80.1068, 0.83", "40.0022, 64.5305, 81.0379, 0.28", "39.9912, 66.037, 82.1739, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-38.9617, -78.6732, -14.772, 0.28", "-40.0839, -85.5153, -16.2991, 0.28", "-39.9702, -92.5627, -17.2154, 0.28", "-39.73, -99.6654, -17.5385, 0.28", "-39.1627, -106.641, -18.7344, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-38.9617, -78.6732, -14.772, 0.28", "-40.181, -86.1681, -16.7017, 0.28", "-41.0108, -93.7759, -18.4034, 0.28", "-40.6077, -101.545, -19.43, 0.28", "-39.9935, -109.238, -20.8155, 0.28", "-38.6978, -116.867, -22.0562, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-31.9641, -50.6453, 4.43165, 1.11", "-32.3663, -52.4246, 6.11567, 1.11", "-32.8737, -54.2353, 8.00889, 1.11", "-33.8257, -57.6326, 11.5611, 1.11", "-34.3744, -59.5903, 13.6081, 1.11", "-34.8912, -61.4347, 15.5366, 1.11", "-35.4193, -63.3199, 17.5077, 1.38", "-36.3095, -66.434, 20.9696, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-31.9641, -50.6453, 4.43165, 0.83", "-32.4995, -54.9671, 4.95852, 0.83", "-33.3834, -60.2294, 5.56276, 0.83", "-34.342, -65.4267, 6.17408, 0.83", "-36.5097, -76.4776, 7.49303, 0.83", "-37.9697, -84.1288, 8.43544, 0.83", "-39.1957, -90.3331, 9.2164, 0.83", "-40.4771, -96.1389, 10.1222, 0.83", "-41.3811, -100.481, 10.94, 0.83", "-41.9339, -103.287, 11.4869, 0.83", "-42.7271, -107.316, 12.5742, 0.83", "-44.1838, -116.251, 15.3011, 0.83", "-45.2338, -122.629, 17.462, 0.55", "-45.7173, -127.309, 19.2565, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.67915, -4.02382, 44.2457, 0.55", "6.73874, -4.53482, 48.6631, 0.55", "5.37619, -5.16592, 55.5104, 1.11", "4.20708, -5.70372, 61.4386, 0.83", "3.07129, -6.13951, 66.7601, 1.66", "0.81815, -6.78106, 76.8512, 1.11", "0.00976771, -6.95374, 80.3768, 1.38", "-2.27355, -7.12203, 89.346, 0.83", "-3.26386, -7.17204, 92.9485, 1.66", "-5.29356, -7.27617, 99.4674, 0.83", "-6.30936, -7.37074, 102.29, 0.83", "-7.6355, -7.65423, 105.31, 1.38", "-8.93677, -7.99229, 107.769, 1.38", "-11.3935, -8.56514, 111.395, 0.83", "-14.4591, -9.23861, 115.25, 0.55", "-15.1635, -9.43024, 116.085, 0.55", "-16.9804, -10.0366, 118.324, 0.83", "-19.0828, -10.8704, 121.105, 0.55", "-19.9057, -11.2409, 122.396, 0.55", "-22.0823, -12.2898, 126.206, 1.11", "-24.7908, -13.6911, 131.303, 0.55", "-26.3769, -14.4921, 134.276, 0.83", "-28.3498, -15.4907, 137.804, 1.38", "-31.4799, -17.2519, 143.642, 0.55", "-32.2369, -17.713, 145.098, 0.83", "-34.0145, -18.8219, 148.48, 0.83", "-35.6916, -19.615, 151.138, 0.55", "-37.1385, -20.0847, 153.099, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.67915, -4.02382, 44.2457, 0.83", "10.1665, -4.76479, 46.5696, 0.83", "12.5792, -5.51099, 48.9064, 0.83", "15.4599, -6.40192, 51.6965, 0.83", "17.7172, -7.10007, 53.8829, 0.83", "20.6171, -7.99696, 56.6916, 0.83", "24.048, -9.05808, 60.0145, 1.66", "27.0795, -10.0638, 63.2985, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.04039, 32.1768, -3.7847, 0.55", "-4.09371, 33.8484, -1.88697, 0.55", "-2.86947, 36.1226, 0.456448, 0.28", "-2.67757, 36.4978, 0.822189, 0.83", "-0.0326623, 41.533, 5.46444, 0.28", "0.43453, 42.3972, 6.21917, 1.38", "4.21973, 49.3584, 11.6442, 0.28", "4.85569, 50.5289, 12.4452, 1.66", "6.87881, 54.1732, 14.6465, 0.28", "7.92178, 55.972, 15.6344, 0.28", "8.73192, 57.308, 16.2235, 1.66", "11.3713, 61.5491, 17.8794, 0.28", "12.83, 63.7802, 18.5263, 1.38", "14.2849, 65.9535, 19.1535, 0.28", "14.971, 66.9693, 19.401, 0.55", "16.3934, 69.2237, 20.0464, 0.28", "16.861, 69.9768, 20.2975, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.04039, 32.1768, -3.7847, 0.28", "-7.82767, 33.9829, -3.2152, 0.28", "-8.38452, 34.357, -3.15145, 0.83", "-9.64136, 35.2288, -3.0235, 0.28", "-10.3499, 35.7796, -2.87336, 0.83", "-11.6507, 36.8303, -2.5538, 0.28", "-12.1587, 37.2547, -2.42012, 0.83", "-14.5038, 39.4482, -1.74976, 0.28", "-15.0549, 39.9951, -1.57948, 0.83", "-19.9176, 44.4682, 0.219481, 0.28", "-20.0904, 44.619, 0.290352, 1.38", "-20.5226, 44.9908, 0.494706, 1.38", "-21.4925, 45.8044, 0.996706, 0.28", "-21.8668, 46.1314, 1.1994, 0.55", "-26.1441, 49.8915, 3.37969, 0.28", "-26.9128, 50.5341, 3.7579, 1.11", "-29.0392, 52.2695, 4.79841, 0.28", "-29.3929, 52.5489, 4.96987, 0.83", "-32.1598, 54.682, 6.28619, 0.28", "-32.2845, 54.7883, 6.34306, 0.55", "-36.5281, 58.9677, 7.70692, 0.55", "-40.2365, 63.2713, 9.97312, 0.55", "-43.5528, 68.2768, 11.2596, 0.55", "-46.3055, 73.7324, 12.0279, 0.55", "-50.0434, 78.5939, 11.9922, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.686, 24.9457, -8.08529, 0.83", "17.2698, 24.4379, -9.60532, 0.83", "21.6854, 23.9359, -11.2985, 0.83", "23.6983, 23.8564, -11.9553, 0.83", "27.5847, 23.8182, -13.1521, 0.55", "29.1943, 23.9112, -13.5797, 0.55", "32.2985, 24.154, -14.3627, 0.83", "36.033, 24.6392, -15.1372, 0.83", "39.8281, 25.3178, -15.904, 0.83", "42.0994, 25.7424, -16.3369, 1.11", "47.4292, 26.8056, -17.1663, 1.11", "50.5451, 27.4678, -17.7055, 0.55", "52.6401, 27.9271, -18.0758, 0.55", "54.4819, 28.3114, -18.4389, 1.11", "57.319, 28.8316, -19.0153, 0.55", "59.4836, 29.2448, -19.4254, 0.55", "62.2892, 29.7562, -19.9355, 1.11", "64.0968, 30.1313, -20.1789, 0.55", "66.2971, 30.5537, -20.4086, 0.28", "69.1075, 31.0564, -20.5842, 0.83", "74.4426, 31.8217, -20.578, 0.28", "76.2946, 31.9727, -20.4609, 0.55", "78.364, 31.9794, -20.1663, 0.28", "79.7285, 31.8855, -19.9071, 0.28", "81.6057, 31.5806, -19.4336, 1.11", "84.8188, 30.8361, -18.4931, 0.55", "87.569, 29.9673, -17.535, 1.66", "91.1046, 28.7378, -16.2855, 0.28", "92.5988, 28.1909, -15.767, 0.28", "95.1759, 27.2868, -14.8425, 0.83", "105.191, 27.4043, -14.4111, 0.83", "114.974, 26.4917, -12.3972, 0.83", "124.699, 27.5599, -10.2091, 0.83", "134.01, 28.3616, -6.58054, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.686, 24.9457, -8.08529, 1.11", "13.8341, 26.936, -8.38314, 1.11", "14.1165, 29.2661, -8.79116, 0.83", "14.4815, 31.077, -9.13305, 0.83", "14.9762, 33.2653, -9.5827, 1.38", "15.8724, 37.422, -10.6267, 0.83", "16.34, 39.7125, -11.304, 0.83", "16.6568, 41.2228, -11.825, 0.83", "17.3862, 45.0096, -13.5129, 0.83", "17.6241, 46.3312, -14.192, 0.83", "18.0893, 49.46, -16.0284, 0.83", "18.312, 51.4536, -17.2952, 1.11", "18.4252, 52.8101, -18.152, 1.11", "18.7213, 56.3561, -20.263, 0.83", "18.9187, 58.2822, -21.3642, 0.83", "19.2445, 60.4608, -22.5309, 1.11", "19.4436, 61.7218, -23.1537, 0.28", "19.6973, 63.4741, -23.9913, 0.83", "19.996, 67.9849, -25.8433, 0.83", "20.0702, 70.8062, -26.7852, 1.66", "20.0651, 74.409, -27.8628, 0.55", "20.0252, 76.9676, -28.5463, 0.55", "19.937, 79.6906, -29.2188, 0.55", "19.4415, 89.1042, -31.602, 0.28", "19.3379, 90.7932, -32.0296, 1.66", "19.1742, 95.2581, -33.1025, 0.28", "19.1696, 95.8033, -33.2188, 0.83", "19.1959, 97.2691, -33.5184, 0.28", "19.3079, 101.059, -34.2407, 1.66", "19.535, 105.803, -35.1835, 0.28", "19.5809, 107.2, -35.4373, 1.38", "19.7276, 114.208, -36.4682, 0.28", "19.6829, 115.591, -36.6317, 1.66", "19.3568, 119.46, -36.9474, 0.28", "19.2563, 120.071, -37.0091, 0.83", "18.1933, 124.748, -37.6619, 0.28", "17.9793, 125.586, -37.8004, 0.83", "15.9634, 132.549, -39.273, 0.28", "15.3825, 134.409, -39.716, 1.11", "12.2021, 143.408, -42.1931, 0.28", "12.1044, 143.661, -42.2701, 0.83", "13.8682, 153.511, -43.4569, 0.83", "16.0266, 163.353, -43.749, 0.83", "18.448, 172.89, -45.8477, 0.83", "22.0427, 182.232, -46.822, 0.83", "26.1069, 191.288, -48.3596, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.0795, -10.0638, 63.2985, 0.28", "27.9422, -11.1586, 64.1341, 0.28", "28.3214, -11.6579, 64.5751, 0.83", "29.198, -12.7188, 65.6406, 0.28", "29.5593, -13.1185, 66.1245, 0.83", "30.8461, -14.5911, 68.0757, 0.28", "31.0539, -14.8495, 68.434, 0.83", "31.8965, -15.9722, 70.202, 0.28", "32.6629, -17.0003, 71.9079, 0.83", "33.5318, -18.2133, 74.0033, 0.28", "34.2893, -19.3626, 76.0176, 1.38", "34.897, -20.3463, 77.7949, 0.28", "35.3055, -21.0255, 79.0787, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.0795, -10.0638, 63.2985, 0.55", "30.9191, -10.4648, 67.0452, 0.55", "31.4991, -10.5129, 67.6544, 0.28", "33.542, -10.7073, 69.8331, 0.83", "37.5619, -11.1197, 74.1097, 0.83", "40.8083, -11.4284, 77.464, 0.83", "42.8629, -11.6061, 79.5291, 1.38", "46.7574, -11.8206, 83.4136, 0.55", "47.9576, -11.8701, 84.5633, 0.55", "50.9628, -11.9575, 87.2383, 0.55", "53.9227, -12.001, 89.6137, 1.11", "57.0563, -12.0318, 91.842, 0.55", "59.8144, -12.0141, 93.6583, 1.38", "62.7776, -11.977, 95.4227, 1.11", "65.9937, -11.8601, 97.256, 0.55", "69.3055, -11.6461, 99.0909, 0.55", "71.0704, -11.4956, 100.089, 0.55", "72.5724, -11.3301, 100.988, 0.83", "74.7001, -11.0371, 102.349, 0.83", "76.0401, -10.792, 103.373, 0.83", "78.332, -10.2268, 105.516, 0.55", "79.3522, -9.90601, 106.645, 0.83", "81.0439, -9.21184, 108.63, 0.55", "81.6129, -8.94355, 109.342, 0.83", "83.8784, -7.74215, 112.229, 0.55", "84.8777, -7.2669, 113.378, 0.55", "86.338, -6.59249, 114.956, 0.55", "86.7422, -6.41042, 115.357, 0.83", "89.0629, -5.45644, 117.529, 0.55", "91.6931, -4.47625, 119.873, 1.11", "95.7868, -3.04245, 123.345, 0.55", "97.7522, -2.40295, 124.959, 1.11", "101.016, -1.39855, 127.586, 0.55", "102.941, -0.85169, 129.109, 0.83", "105.218, -0.259255, 130.834, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_NBC_68416e1f93_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_46
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_27
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4999996128858968)
    connect dend_39(0), soma_0(0.4999996128858968)
    connect dend_36(0), soma_0(0.4999996128858968)
    connect dend_27(0), soma_0(0.4999996128858968)
    connect dend_26(0), soma_0(0.4999996128858968)
    connect dend_18(0), soma_0(0.4999996128858968)
    connect dend_11(0), soma_0(0.4999996128858968)
    connect dend_0(0), soma_0(0.4999996128858968)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.3022, -4.91444, 0.0966793, 4.52114 ) }
    soma_0 { pt3dadd( -9.29583, -4.38505, 0.0928107, 5.29403 ) }
    soma_0 { pt3dadd( -8.28943, -3.85565, 0.0889422, 6.87895 ) }
    soma_0 { pt3dadd( -7.28303, -3.32626, 0.0850736, 8.2055 ) }
    soma_0 { pt3dadd( -6.27664, -2.79687, 0.0812051, 9.69593 ) }
    soma_0 { pt3dadd( -5.27024, -2.26748, 0.0773365, 11.1864 ) }
    soma_0 { pt3dadd( -4.26385, -1.73809, 0.073468, 12.1576 ) }
    soma_0 { pt3dadd( -3.25745, -1.20869, 0.0695994, 12.1028 ) }
    soma_0 { pt3dadd( -2.25106, -0.679302, 0.0657309, 12.5691 ) }
    soma_0 { pt3dadd( -1.24466, -0.14991, 0.0618623, 13.5271 ) }
    soma_0 { pt3dadd( -0.238266, 0.379482, 0.0579938, 14.6432 ) }
    soma_0 { pt3dadd( 0.76813, 0.908874, 0.0541252, 15.6577 ) }
    soma_0 { pt3dadd( 1.77453, 1.43827, 0.0502567, 15.7754 ) }
    soma_0 { pt3dadd( 2.78092, 1.96766, 0.0463882, 15.433 ) }
    soma_0 { pt3dadd( 3.78732, 2.49705, 0.0425196, 14.9368 ) }
    soma_0 { pt3dadd( 4.79371, 3.02644, 0.0386511, 14.4352 ) }
    soma_0 { pt3dadd( 5.80011, 3.55583, 0.0347825, 13.7953 ) }
    soma_0 { pt3dadd( 6.8065, 4.08523, 0.030914, 12.9353 ) }
    soma_0 { pt3dadd( 7.8129, 4.61462, 0.0270454, 10.4207 ) }
    soma_0 { pt3dadd( 8.81929, 5.14401, 0.0231769, 6.43383 ) }
    soma_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 3.7421 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.0327, 0.453743, 12.0695, 1.38 ) }
    dend_46 { pt3dadd( 1.90365, 2.54035, 8.33387, 1.38 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.5927, -1.21701, -10.1505, 1.66 ) }
    dend_39 { pt3dadd( 5.08076, -1.74996, -12.5388, 1.66 ) }
    dend_39 { pt3dadd( 7.64483, -4.54991, -25.0864, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 26/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.7473, 1.29425, 5.4595, 1.66 ) }
    dend_36 { pt3dadd( -10.4995, 1.81218, 6.7325, 1.66 ) }
    dend_36 { pt3dadd( -13.3991, 2.50422, 8.70238, 1.66 ) }
    dend_36 { pt3dadd( -15.556, 2.86723, 9.94163, 1.66 ) }
    dend_36 { pt3dadd( -18.2647, 3.32313, 11.498, 1.66 ) }
    dend_36 { pt3dadd( -21.2551, 3.82646, 13.2163, 1.66 ) }
    dend_36 { pt3dadd( -25.4771, 4.53702, 15.642, 1.66 ) }
    dend_36 { pt3dadd( -28.2188, 4.90667, 17.2175, 1.66 ) }
    dend_36 { pt3dadd( -32.5375, 5.26689, 19.4599, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -10.3073, -6.10625, 1.9395, 2.77 ) }
    dend_27 { pt3dadd( -13.5292, -7.00869, 0.799228, 2.77 ) }
    dend_27 { pt3dadd( -18.8927, -8.511, -1.09903, 2.77 ) }
    dend_27 { pt3dadd( -23.3201, -9.75108, -2.66594, 2.49 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 39/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.2873, -5.5015, 6.9695, 1.11 ) }
    dend_26 { pt3dadd( -13.0231, -7.03108, 8.28111, 1.11 ) }
    dend_26 { pt3dadd( -14.6311, -8.4382, 9.45064, 1.11 ) }
    dend_26 { pt3dadd( -16.4821, -10.0595, 10.8084, 1.11 ) }
    dend_26 { pt3dadd( -17.5813, -11.0045, 11.6002, 1.38 ) }
    dend_26 { pt3dadd( -19.5144, -12.6526, 13.0695, 0.83 ) }
    dend_26 { pt3dadd( -21.108, -14.034, 14.3495, 1.11 ) }
    dend_26 { pt3dadd( -21.7332, -14.5996, 14.8983, 1.11 ) }
    dend_26 { pt3dadd( -23.2045, -15.8985, 16.2005, 1.11 ) }
    dend_26 { pt3dadd( -23.8615, -16.4967, 16.8171, 1.11 ) }
    dend_26 { pt3dadd( -25.2283, -17.7891, 18.221, 1.11 ) }
    dend_26 { pt3dadd( -26.0049, -18.5862, 19.051, 1.11 ) }
    dend_26 { pt3dadd( -26.4846, -19.1238, 19.5917, 1.11 ) }
    dend_26 { pt3dadd( -27.2703, -20.0065, 20.4491, 1.66 ) }
    dend_26 { pt3dadd( -29.1234, -22.0142, 22.4196, 1.66 ) }
    dend_26 { pt3dadd( -30.6453, -23.6534, 24.0386, 1.38 ) }
    dend_26 { pt3dadd( -32.293, -25.5016, 25.7232, 1.38 ) }
    dend_26 { pt3dadd( -33.4838, -26.8946, 26.9647, 1.38 ) }
    dend_26 { pt3dadd( -34.8907, -28.6384, 28.5406, 1.11 ) }
    dend_26 { pt3dadd( -36.0666, -30.173, 29.9372, 1.11 ) }
    dend_26 { pt3dadd( -37.8303, -32.5503, 32.1569, 1.11 ) }
    dend_26 { pt3dadd( -39.6811, -35.1557, 34.6082, 0.83 ) }
    dend_26 { pt3dadd( -40.784, -36.7696, 36.1526, 0.83 ) }
    dend_26 { pt3dadd( -42.4022, -39.2645, 38.4569, 1.38 ) }
    dend_26 { pt3dadd( -43.2702, -40.6984, 39.7258, 1.38 ) }
    dend_26 { pt3dadd( -44.2239, -42.3196, 41.1023, 0.83 ) }
    dend_26 { pt3dadd( -45.1316, -43.8251, 42.3588, 0.83 ) }
    dend_26 { pt3dadd( -45.7952, -44.903, 43.2687, 1.11 ) }
    dend_26 { pt3dadd( -46.612, -46.2165, 44.3191, 0.83 ) }
    dend_26 { pt3dadd( -47.3317, -47.3525, 45.1829, 1.11 ) }
    dend_26 { pt3dadd( -47.9865, -48.3899, 45.98, 0.55 ) }
    dend_26 { pt3dadd( -48.7168, -49.539, 46.8516, 1.11 ) }
    dend_26 { pt3dadd( -49.5602, -50.8307, 47.8719, 0.55 ) }
    dend_26 { pt3dadd( -50.3408, -51.9864, 48.7847, 1.94 ) }
    dend_26 { pt3dadd( -51.3884, -53.5262, 50.0251, 0.55 ) }
    dend_26 { pt3dadd( -52.0373, -54.491, 50.814, 0.55 ) }
    dend_26 { pt3dadd( -52.8204, -55.7107, 51.8009, 0.55 ) }
    dend_26 { pt3dadd( -53.54, -56.9409, 52.7876, 1.11 ) }
    dend_26 { pt3dadd( -54.5816, -58.9504, 54.261, 0.28 ) }
    dend_26 { pt3dadd( -54.8946, -59.6844, 54.715, 1.11 ) }
    dend_26 { pt3dadd( -55.3944, -61.241, 55.6784, 0.28 ) }
    dend_26 { pt3dadd( -55.5569, -61.9417, 56.1298, 0.55 ) }
    dend_26 { pt3dadd( -55.775, -63.2156, 57.0176, 0.28 ) }
    dend_26 { pt3dadd( -55.8783, -63.9847, 57.54, 0.28 ) }
    dend_26 { pt3dadd( -56.0541, -65.7087, 58.706, 1.66 ) }
    dend_26 { pt3dadd( -56.4099, -68.8438, 60.8073, 0.28 ) }
    dend_26 { pt3dadd( -56.5471, -69.9842, 61.5712, 0.28 ) }
    dend_26 { pt3dadd( -56.716, -71.1583, 62.428, 0.83 ) }
    dend_26 { pt3dadd( -56.9445, -72.6329, 63.6232, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 88/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.7273, -6.39325, 11.6495, 2.77 ) }
    dend_18 { pt3dadd( -4.13737, -7.7768, 11.6495, 2.77 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.6827, -2.775, 1.6195, 2.49 ) }
    dend_11 { pt3dadd( 9.99255, -3.39118, 1.81019, 2.22 ) }
    dend_11 { pt3dadd( 12.0764, -4.37149, 2.11357, 2.22 ) }
    dend_11 { pt3dadd( 13.4246, -5.00568, 2.30984, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 94/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.0827, 8.87925, -4.97829E-4, 2.22 ) }
    dend_0 { pt3dadd( 6.23062, 10.4486, -0.475416, 2.22 ) }
    dend_0 { pt3dadd( 6.42427, 12.5032, -1.09718, 2.22 ) }
    dend_0 { pt3dadd( 6.62332, 14.615, -1.73626, 2.22 ) }
    dend_0 { pt3dadd( 6.93131, 17.8826, -2.72509, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 99/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 0.831077 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 23.101, 12.6566, 0.0193083, 0.831077 ) }
    axon_0 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.831077 ) }
    // Section: dend_51, id: dend_51, parent: dend_46 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 1.90365, 2.54035, 8.33387, 0.83 ) }
    dend_51 { pt3dadd( 0.95538, 8.82663, 6.34809, 0.83 ) }
    dend_51 { pt3dadd( 0.47952, 11.9134, 5.44477, 0.83 ) }
    dend_51 { pt3dadd( 0.121989, 14.1487, 4.80148, 0.83 ) }
    dend_51 { pt3dadd( -0.137857, 15.638, 4.38618, 1.38 ) }
    dend_51 { pt3dadd( -0.838047, 19.39, 3.5259, 0.83 ) }
    dend_51 { pt3dadd( -1.33652, 22.061, 2.91346, 1.38 ) }
    dend_51 { pt3dadd( -2.20187, 25.9285, 2.34986, 0.83 ) }
    dend_51 { pt3dadd( -3.11681, 29.7986, 1.81939, 0.83 ) }
    dend_51 { pt3dadd( -3.52096, 31.3874, 1.63209, 0.83 ) }
    dend_51 { pt3dadd( -4.20587, 34.2804, 1.2353, 1.94 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 1.90365, 2.54035, 8.33387, 1.38 ) }
    dend_47 { pt3dadd( 3.29017, 4.43081, 10.2874, 1.38 ) }
    dend_47 { pt3dadd( 5.06972, 6.85712, 12.7945, 1.38 ) }
    dend_47 { pt3dadd( 6.72534, 9.11448, 15.1271, 1.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.64483, -4.54991, -25.0864, 0.83 ) }
    dend_43 { pt3dadd( 8.15093, -2.13977, -29.6113, 0.83 ) }
    dend_43 { pt3dadd( 8.48669, -0.540832, -32.6133, 0.83 ) }
    dend_43 { pt3dadd( 8.91085, 1.47915, -36.4056, 0.83 ) }
    dend_43 { pt3dadd( 9.04549, 2.12032, -37.6095, 0.55 ) }
    dend_43 { pt3dadd( 9.44055, 4.00177, -41.1417, 0.55 ) }
    dend_43 { pt3dadd( 9.79725, 5.70056, -44.3311, 0.55 ) }
    dend_43 { pt3dadd( 10.4045, 9.62665, -51.7937, 0.55 ) }
    dend_43 { pt3dadd( 10.4412, 14.8897, -58.4528, 0.55 ) }
    dend_43 { pt3dadd( 11.2035, 19.6796, -65.4034, 0.55 ) }
    dend_43 { pt3dadd( 13.1567, 25.8755, -70.9184, 0.55 ) }
    dend_43 { pt3dadd( 16.6604, 32.6526, -74.7721, 0.55 ) }
    dend_43 { pt3dadd( 20.3748, 38.8164, -79.3415, 0.55 ) }
    dend_43 { pt3dadd( 25.706, 43.7047, -83.7803, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.64483, -4.54991, -25.0864, 1.66 ) }
    dend_40 { pt3dadd( 7.09562, -7.39577, -28.0239, 1.66 ) }
    dend_40 { pt3dadd( 6.61962, -9.86229, -30.5699, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 34/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -32.5375, 5.26689, 19.4599, 0.55 ) }
    dend_38 { pt3dadd( -34.5719, 4.6472, 19.6992, 0.55 ) }
    dend_38 { pt3dadd( -39.9921, 2.88573, 20.2503, 0.55 ) }
    dend_38 { pt3dadd( -40.971, 2.59415, 20.3332, 0.55 ) }
    dend_38 { pt3dadd( -43.6837, 1.85174, 20.5328, 0.55 ) }
    dend_38 { pt3dadd( -44.4338, 1.64274, 20.5839, 0.83 ) }
    dend_38 { pt3dadd( -47.2844, 0.807796, 20.8199, 0.55 ) }
    dend_38 { pt3dadd( -50.304, -0.127168, 21.0614, 1.11 ) }
    dend_38 { pt3dadd( -53.6702, -1.19333, 21.3173, 0.55 ) }
    dend_38 { pt3dadd( -55.904, -1.91157, 21.4269, 1.94 ) }
    dend_38 { pt3dadd( -57.9376, -2.53282, 21.4676, 1.94 ) }
    dend_38 { pt3dadd( -60.3858, -3.25791, 21.4602, 0.55 ) }
    dend_38 { pt3dadd( -61.8722, -3.73182, 21.3672, 0.55 ) }
    dend_38 { pt3dadd( -64.265, -4.48925, 21.0944, 0.28 ) }
    dend_38 { pt3dadd( -66.6806, -5.24009, 20.682, 1.94 ) }
    dend_38 { pt3dadd( -70.1557, -6.18589, 19.9693, 0.55 ) }
    dend_38 { pt3dadd( -71.2054, -6.4421, 19.7405, 1.66 ) }
    dend_38 { pt3dadd( -75.087, -7.24364, 18.7922, 0.55 ) }
    dend_38 { pt3dadd( -77.513, -7.66416, 18.2597, 1.11 ) }
    dend_38 { pt3dadd( -81.2763, -8.23095, 17.4854, 0.55 ) }
    dend_38 { pt3dadd( -82.9605, -8.45374, 17.1957, 0.55 ) }
    dend_38 { pt3dadd( -84.7712, -8.67019, 16.9156, 1.38 ) }
    dend_38 { pt3dadd( -90.4317, -9.26205, 16.1773, 0.28 ) }
    dend_38 { pt3dadd( -96.0905, -9.7353, 15.6159, 0.28 ) }
    dend_38 { pt3dadd( -97.5046, -9.85764, 15.4955, 1.38 ) }
    dend_38 { pt3dadd( -102.347, -10.3024, 15.1887, 0.28 ) }
    dend_38 { pt3dadd( -105.087, -10.5585, 15.027, 0.83 ) }
    dend_38 { pt3dadd( -106.88, -10.7065, 14.9399, 0.28 ) }
    dend_38 { pt3dadd( -109.387, -10.9521, 14.9549, 0.55 ) }
    dend_38 { pt3dadd( -111.033, -11.1194, 14.9845, 0.28 ) }
    dend_38 { pt3dadd( -113.147, -11.322, 15.0744, 1.94 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -32.5375, 5.26689, 19.4599, 0.83 ) }
    dend_37 { pt3dadd( -37.7826, 5.09054, 21.9865, 0.83 ) }
    dend_37 { pt3dadd( -41.1409, 5.03736, 23.3824, 1.66 ) }
    dend_37 { pt3dadd( -44.159, 5.06897, 24.5037, 1.11 ) }
    dend_37 { pt3dadd( -47.2911, 5.18878, 25.5582, 1.11 ) }
    dend_37 { pt3dadd( -50.6964, 5.50567, 26.6474, 1.11 ) }
    dend_37 { pt3dadd( -53.5429, 5.84466, 27.5578, 1.11 ) }
    dend_37 { pt3dadd( -55.984, 6.2354, 28.2161, 0.83 ) }
    dend_37 { pt3dadd( -58.7617, 6.7775, 28.9755, 1.11 ) }
    dend_37 { pt3dadd( -61.465, 7.3717, 29.8187, 1.38 ) }
    dend_37 { pt3dadd( -66.513, 8.55042, 31.7028, 0.55 ) }
    dend_37 { pt3dadd( -68.6676, 9.05882, 32.6118, 0.55 ) }
    dend_37 { pt3dadd( -71.4368, 9.64975, 33.839, 0.55 ) }
    dend_37 { pt3dadd( -74.2694, 10.1762, 35.1864, 1.66 ) }
    dend_37 { pt3dadd( -77.2165, 10.5924, 36.6408, 1.66 ) }
    dend_37 { pt3dadd( -81.1319, 10.9678, 38.5719, 1.11 ) }
    dend_37 { pt3dadd( -83.5526, 11.077, 39.7723, 1.66 ) }
    dend_37 { pt3dadd( -86.9611, 11.2172, 41.513, 0.83 ) }
    dend_37 { pt3dadd( -89.3086, 11.2584, 42.7109, 1.11 ) }
    dend_37 { pt3dadd( -91.0402, 11.2483, 43.5978, 0.55 ) }
    dend_37 { pt3dadd( -93.3456, 11.1272, 44.7027, 0.83 ) }
    dend_37 { pt3dadd( -95.7762, 10.8226, 45.8684, 1.38 ) }
    dend_37 { pt3dadd( -98.5259, 10.2676, 47.4202, 0.55 ) }
    dend_37 { pt3dadd( -100.105, 9.75715, 48.6087, 0.55 ) }
    dend_37 { pt3dadd( -100.718, 9.48387, 49.1223, 0.28 ) }
    dend_37 { pt3dadd( -101.93, 8.80557, 50.2753, 0.55 ) }
    dend_37 { pt3dadd( -104.407, 7.18537, 52.8829, 0.28 ) }
    dend_37 { pt3dadd( -106.186, 5.93973, 54.8315, 1.66 ) }
    dend_37 { pt3dadd( -109.821, 3.30198, 58.9846, 0.28 ) }
    dend_37 { pt3dadd( -110.561, 2.82331, 59.8885, 1.11 ) }
    dend_37 { pt3dadd( -112.39, 1.77913, 62.1886, 0.28 ) }
    dend_37 { pt3dadd( -113.461, 1.29424, 63.6478, 0.83 ) }
    dend_37 { pt3dadd( -115.109, 0.773916, 65.9177, 0.28 ) }
    dend_37 { pt3dadd( -115.575, 0.680176, 66.5586, 0.83 ) }
    dend_37 { pt3dadd( -118.232, 0.443242, 70.2699, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( -119.445, 0.436047, 71.9847, 1.66 ) }
    dend_37 { pt3dadd( -122.931, 0.590176, 76.848, 0.55 ) }
    dend_37 { pt3dadd( -124.247, 0.669836, 78.6394, 0.28 ) }
    dend_37 { pt3dadd( -125.788, 0.788176, 80.6565, 1.11 ) }
    dend_37 { pt3dadd( -127.77, 0.891266, 83.0829, 0.55 ) }
    dend_37 { pt3dadd( -129.809, 0.925266, 85.3475, 0.55 ) }
    dend_37 { pt3dadd( -131.597, 0.883186, 87.1431, 1.11 ) }
    dend_37 { pt3dadd( -134.601, 0.672926, 89.8805, 0.28 ) }
    dend_37 { pt3dadd( -135.423, 0.540136, 90.6283, 0.28 ) }
    dend_37 { pt3dadd( -138.255, -0.248303, 93.2066, 1.38 ) }
    dend_37 { pt3dadd( -141.255, -1.50886, 95.9336, 0.55 ) }
    dend_37 { pt3dadd( -142.796, -2.42035, 97.3822, 0.28 ) }
    dend_37 { pt3dadd( -143.88, -3.25966, 98.413, 1.11 ) }
    dend_37 { pt3dadd( -146.502, -5.73003, 100.874, 0.28 ) }
    dend_37 { pt3dadd( -148.131, -7.44734, 102.436, 1.38 ) }
    dend_37 { pt3dadd( -149.673, -9.29311, 103.929, 0.55 ) }
    dend_37 { pt3dadd( -150.96, -11.0425, 105.196, 1.11 ) }
    dend_37 { pt3dadd( -152.735, -13.5857, 106.952, 0.28 ) }
    dend_37 { pt3dadd( -154.166, -15.6829, 108.276, 0.28 ) }
    dend_37 { pt3dadd( -155.578, -17.6761, 109.456, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_27 (entry count 20/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.3201, -9.75108, -2.66594, 1.38 ) }
    dend_35 { pt3dadd( -27.2332, -9.97434, -2.26267, 1.38 ) }
    dend_35 { pt3dadd( -29.2056, -9.9304, -2.23224, 1.38 ) }
    dend_35 { pt3dadd( -34.6894, -9.5161, -2.04988, 1.38 ) }
    dend_35 { pt3dadd( -36.6049, -9.27146, -1.94665, 1.38 ) }
    dend_35 { pt3dadd( -38.8712, -8.87698, -1.76885, 1.11 ) }
    dend_35 { pt3dadd( -41.3815, -8.38526, -1.45329, 1.11 ) }
    dend_35 { pt3dadd( -47.081, -6.91173, -0.609232, 1.11 ) }
    dend_35 { pt3dadd( -50.1621, -5.93677, -0.0296878, 1.11 ) }
    dend_35 { pt3dadd( -53.8301, -4.54251, 0.784811, 0.83 ) }
    dend_35 { pt3dadd( -56.9434, -3.27779, 1.54997, 0.83 ) }
    dend_35 { pt3dadd( -59.985, -2.00859, 2.37991, 1.38 ) }
    dend_35 { pt3dadd( -62.1362, -1.10114, 3.01641, 0.55 ) }
    dend_35 { pt3dadd( -64.1698, -0.217344, 3.67805, 0.55 ) }
    dend_35 { pt3dadd( -66.5934, 0.788186, 4.34314, 0.55 ) }
    dend_35 { pt3dadd( -69.1378, 1.79622, 4.96759, 1.66 ) }
    dend_35 { pt3dadd( -71.8875, 2.84406, 5.52247, 0.55 ) }
    dend_35 { pt3dadd( -73.1521, 3.43708, 5.69788, 1.11 ) }
    dend_35 { pt3dadd( -75.938, 5.01383, 6.04477, 0.55 ) }
    dend_35 { pt3dadd( -77.2655, 5.9793, 6.18313, 0.83 ) }
    dend_35 { pt3dadd( -78.5085, 7.02475, 6.27954, 0.28 ) }
    dend_35 { pt3dadd( -79.8712, 8.31862, 6.34613, 0.83 ) }
    dend_35 { pt3dadd( -84.3022, 13.0648, 6.42922, 0.28 ) }
    dend_35 { pt3dadd( -86.0269, 15.0708, 6.50562, 1.11 ) }
    dend_35 { pt3dadd( -88.6651, 18.448, 6.81944, 0.55 ) }
    dend_35 { pt3dadd( -90.4539, 20.8946, 7.17591, 2.22 ) }
    dend_35 { pt3dadd( -91.7578, 22.764, 7.5392, 0.55 ) }
    dend_35 { pt3dadd( -93.8459, 25.8934, 8.19456, 0.28 ) }
    dend_35 { pt3dadd( -95.1768, 27.8443, 8.73641, 0.83 ) }
    dend_35 { pt3dadd( -97.5663, 31.4032, 9.84186, 0.28 ) }
    dend_35 { pt3dadd( -97.9989, 32.0832, 10.0787, 1.94 ) }
    dend_35 { pt3dadd( -98.8481, 33.6076, 10.6271, 0.55 ) }
    dend_35 { pt3dadd( -100.913, 37.5417, 12.0561, 0.28 ) }
    dend_35 { pt3dadd( -101.874, 39.3673, 12.6448, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.3201, -9.75108, -2.66594, 1.66 ) }
    dend_28 { pt3dadd( -24.3621, -13.0386, -1.96079, 1.66 ) }
    dend_28 { pt3dadd( -25.9363, -18.0046, -0.895587, 1.66 ) }
    dend_28 { pt3dadd( -28.0778, -24.7606, 0.553566, 1.66 ) }
    dend_28 { pt3dadd( -29.2768, -28.5435, 1.36498, 1.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 59/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.13737, -7.7768, 11.6495, 0.83 ) }
    dend_19 { pt3dadd( -3.22728, -7.17736, 15.2076, 0.83 ) }
    dend_19 { pt3dadd( -1.76226, -5.93546, 21.1481, 0.83 ) }
    dend_19 { pt3dadd( -0.798905, -5.11883, 25.0544, 0.83 ) }
    dend_19 { pt3dadd( 0.111837, -4.34679, 28.7473, 0.83 ) }
    dend_19 { pt3dadd( 1.32795, -3.31589, 33.6785, 0.83 ) }
    dend_19 { pt3dadd( 1.73719, -2.96899, 35.3379, 1.38 ) }
    dend_19 { pt3dadd( 1.7852, -2.87157, 35.6441, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 13.4246, -5.00568, 2.30984, 0.83 ) }
    dend_15 { pt3dadd( 17.9909, -6.65144, 2.42108, 0.83 ) }
    dend_15 { pt3dadd( 22.4086, -8.16332, 2.67524, 0.83 ) }
    dend_15 { pt3dadd( 28.1136, -10.1813, 2.96535, 0.83 ) }
    dend_15 { pt3dadd( 32.4343, -11.7777, 3.1679, 0.83 ) }
    dend_15 { pt3dadd( 35.2135, -12.7943, 3.33711, 1.11 ) }
    dend_15 { pt3dadd( 37.3316, -13.5718, 3.50712, 0.83 ) }
    dend_15 { pt3dadd( 40.1049, -14.4968, 3.89422, 1.11 ) }
    dend_15 { pt3dadd( 42.3927, -15.2678, 4.29234, 1.11 ) }
    dend_15 { pt3dadd( 45.8274, -16.7259, 5.05473, 0.83 ) }
    dend_15 { pt3dadd( 48.5703, -18.19, 5.67096, 0.83 ) }
    dend_15 { pt3dadd( 49.9496, -19.0479, 5.95408, 0.83 ) }
    dend_15 { pt3dadd( 52.6255, -20.8572, 6.51225, 1.38 ) }
    dend_15 { pt3dadd( 54.5751, -22.2894, 6.95919, 0.83 ) }
    dend_15 { pt3dadd( 56.5238, -23.7762, 7.41666, 0.83 ) }
    dend_15 { pt3dadd( 58.3148, -25.149, 7.79848, 0.55 ) }
    dend_15 { pt3dadd( 59.8474, -26.2908, 8.06292, 0.83 ) }
    dend_15 { pt3dadd( 61.9061, -27.7478, 8.36926, 0.83 ) }
    dend_15 { pt3dadd( 63.8342, -29.0164, 8.67315, 0.83 ) }
    dend_15 { pt3dadd( 66.254, -30.5086, 9.08566, 0.83 ) }
    dend_15 { pt3dadd( 70.7484, -33.1621, 9.93355, 0.83 ) }
    dend_15 { pt3dadd( 72.918, -34.4023, 10.3657, 1.11 ) }
    dend_15 { pt3dadd( 75.3654, -35.726, 10.8285, 1.11 ) }
    dend_15 { pt3dadd( 77.6037, -36.961, 11.12, 0.55 ) }
    dend_15 { pt3dadd( 78.3047, -37.3442, 11.2025, 0.55 ) }
    dend_15 { pt3dadd( 80.5132, -38.6918, 11.428, 1.11 ) }
    dend_15 { pt3dadd( 82.2444, -39.8617, 11.4686, 0.55 ) }
    dend_15 { pt3dadd( 83.761, -40.9062, 11.42, 0.55 ) }
    dend_15 { pt3dadd( 87.047, -43.0859, 10.9076, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.4246, -5.00568, 2.30984, 0.83 ) }
    dend_12 { pt3dadd( 14.5391, -5.86419, 4.10101, 0.83 ) }
    dend_12 { pt3dadd( 17.1847, -7.90207, 8.3528, 0.83 ) }
    dend_12 { pt3dadd( 18.8778, -9.20619, 11.0737, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 19.7726, -9.89544, 12.5118, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 1/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 6.93131, 17.8826, -2.72509, 1.38 ) }
    dend_6 { pt3dadd( 5.13324, 19.7656, -2.57859, 1.38 ) }
    dend_6 { pt3dadd( 3.38522, 21.5961, -2.43616, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 4/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.93131, 17.8826, -2.72509, 1.94 ) }
    dend_1 { pt3dadd( 10.8335, 21.5807, -4.6653, 1.94 ) }
    dend_1 { pt3dadd( 12.4214, 23.0855, -5.45479, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 7/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.55 ) }
    axon_1 { pt3dadd( 49.6517, 26.623, 0.0193083, 0.55 ) }
    axon_1 { pt3dadd( 62.9271, 33.6062, 0.0193083, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.20587, 34.2804, 1.2353, 0.83 ) }
    dend_53 { pt3dadd( -5.89216, 34.9828, -0.944848, 0.83 ) }
    dend_53 { pt3dadd( -8.25274, 35.966, -3.99677, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.20587, 34.2804, 1.2353, 0.55 ) }
    dend_52 { pt3dadd( -3.24841, 38.6768, 1.57776, 0.55 ) }
    dend_52 { pt3dadd( -2.72275, 40.7314, 1.82884, 0.55 ) }
    dend_52 { pt3dadd( -2.01938, 43.3167, 2.19165, 1.11 ) }
    dend_52 { pt3dadd( -0.645671, 48.5141, 2.91832, 0.83 ) }
    dend_52 { pt3dadd( -0.0705138, 50.72, 3.21286, 0.28 ) }
    dend_52 { pt3dadd( 0.26331, 51.9111, 3.37106, 0.83 ) }
    dend_52 { pt3dadd( 1.15576, 54.7971, 3.73093, 0.28 ) }
    dend_52 { pt3dadd( 2.09011, 57.6558, 4.12655, 0.83 ) }
    dend_52 { pt3dadd( 2.92882, 60.0585, 4.50134, 0.28 ) }
    dend_52 { pt3dadd( 4.08107, 63.4538, 5.04745, 1.38 ) }
    dend_52 { pt3dadd( 4.71179, 65.4867, 5.3339, 0.28 ) }
    dend_52 { pt3dadd( 4.98501, 66.4012, 5.43542, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 6.72534, 9.11448, 15.1271, 0.83 ) }
    dend_48 { pt3dadd( 10.5209, 11.7976, 21.1511, 0.83 ) }
    dend_48 { pt3dadd( 12.371, 13.2836, 24.1697, 0.83 ) }
    dend_48 { pt3dadd( 14.1153, 14.8708, 26.9658, 1.38 ) }
    dend_48 { pt3dadd( 16.4172, 17.2973, 30.8855, 1.11 ) }
    dend_48 { pt3dadd( 17.687, 18.7648, 33.0633, 1.11 ) }
    dend_48 { pt3dadd( 18.4144, 19.6649, 34.2986, 1.11 ) }
    dend_48 { pt3dadd( 20.2209, 22.2712, 37.4846, 0.83 ) }
    dend_48 { pt3dadd( 21.817, 24.708, 40.0823, 1.11 ) }
    dend_48 { pt3dadd( 23.337, 27.0748, 42.3773, 0.55 ) }
    dend_48 { pt3dadd( 24.101, 28.3593, 43.5233, 1.11 ) }
    dend_48 { pt3dadd( 25.8846, 31.4552, 46.2333, 1.11 ) }
    dend_48 { pt3dadd( 28.1446, 35.2212, 49.5814, 1.66 ) }
    dend_48 { pt3dadd( 30.5833, 38.9043, 52.965, 0.83 ) }
    dend_48 { pt3dadd( 31.9193, 40.7779, 54.7682, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 25.706, 43.7047, -83.7803, 0.28 ) }
    dend_45 { pt3dadd( 29.0539, 51.7564, -93.4771, 0.28 ) }
    dend_45 { pt3dadd( 32.7728, 58.4629, -103.98, 0.28 ) }
    dend_45 { pt3dadd( 36.7483, 65.5254, -114.163, 0.28 ) }
    dend_45 { pt3dadd( 39.2929, 74.6926, -123.132, 0.28 ) }
    dend_45 { pt3dadd( 40.4566, 83.1295, -133.017, 0.28 ) }
    dend_45 { pt3dadd( 43.1081, 90.9345, -143.111, 0.28 ) }
    dend_45 { pt3dadd( 45.1098, 99.3361, -152.892, 0.28 ) }
    dend_45 { pt3dadd( 46.0013, 108.113, -162.52, 0.28 ) }
    dend_45 { pt3dadd( 45.875, 117.219, -171.889, 0.28 ) }
    dend_45 { pt3dadd( 47.3037, 124.95, -182.277, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 52/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 25.706, 43.7047, -83.7803, 0.28 ) }
    dend_44 { pt3dadd( 28.7619, 50.1639, -91.5562, 0.28 ) }
    dend_44 { pt3dadd( 30.5641, 56.2769, -99.9451, 0.28 ) }
    dend_44 { pt3dadd( 32.6266, 61.4902, -108.844, 0.28 ) }
    dend_44 { pt3dadd( 36.0195, 64.9735, -118.149, 0.28 ) }
    dend_44 { pt3dadd( 38.1847, 69.3146, -127.463, 0.28 ) }
    dend_44 { pt3dadd( 40.4545, 73.4935, -136.825, 0.28 ) }
    dend_44 { pt3dadd( 40.7075, 78.3069, -146.147, 0.28 ) }
    dend_44 { pt3dadd( 40.3239, 84.0789, -154.917, 0.28 ) }
    dend_44 { pt3dadd( 39.5761, 89.5583, -163.839, 0.28 ) }
    dend_44 { pt3dadd( 38.3045, 93.2104, -173.571, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.61962, -9.86229, -30.5699, 0.55 ) }
    dend_42 { pt3dadd( 8.13312, -11.6884, -40.7907, 0.55 ) }
    dend_42 { pt3dadd( 8.65533, -12.3184, -44.3172, 0.55 ) }
    dend_42 { pt3dadd( 9.07126, -12.8203, -47.126, 0.55 ) }
    dend_42 { pt3dadd( 11.7429, -15.6603, -59.7426, 0.55 ) }
    dend_42 { pt3dadd( 13.2845, -18.3977, -72.5689, 0.55 ) }
    dend_42 { pt3dadd( 13.6894, -20.6616, -85.5692, 0.55 ) }
    dend_42 { pt3dadd( 15.7006, -24.4953, -98.0581, 0.55 ) }
    dend_42 { pt3dadd( 20.0161, -26.1166, -110.422, 0.55 ) }
    dend_42 { pt3dadd( 23.7558, -26.3371, -123.07, 0.55 ) }
    dend_42 { pt3dadd( 26.01, -25.9894, -136.063, 0.55 ) }
    dend_42 { pt3dadd( 29.5479, -28.0126, -148.616, 0.55 ) }
    dend_42 { pt3dadd( 34.5575, -33.0638, -159.773, 0.55 ) }
    dend_42 { pt3dadd( 38.9329, -38.9904, -170.786, 0.55 ) }
    dend_42 { pt3dadd( 45.4192, -45.0393, -180.626, 0.55 ) }
    dend_42 { pt3dadd( 51.5896, -51.8067, -190.221, 0.55 ) }
    dend_42 { pt3dadd( 56.6077, -59.159, -200.076, 0.55 ) }
    dend_42 { pt3dadd( 62.0501, -65.3278, -210.466, 0.55 ) }
    dend_42 { pt3dadd( 65.3533, -74.3636, -219.697, 0.55 ) }
    dend_42 { pt3dadd( 70.1962, -85.3583, -225.618, 0.55 ) }
    dend_42 { pt3dadd( 75.2563, -95.6636, -232.468, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 84/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.61962, -9.86229, -30.5699, 0.55 ) }
    dend_41 { pt3dadd( 6.41769, -10.5849, -31.7005, 0.55 ) }
    dend_41 { pt3dadd( 5.58515, -13.5638, -36.3615, 0.55 ) }
    dend_41 { pt3dadd( 4.89458, -16.0348, -40.2276, 0.55 ) }
    dend_41 { pt3dadd( 4.33595, -20.9453, -48.6902, 0.55 ) }
    dend_41 { pt3dadd( 4.72204, -23.6454, -58.0768, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -29.2768, -28.5435, 1.36498, 0.55 ) }
    dend_32 { pt3dadd( -30.9942, -31.9641, -0.185726, 0.55 ) }
    dend_32 { pt3dadd( -32.8622, -35.9126, -1.81485, 0.28 ) }
    dend_32 { pt3dadd( -33.6432, -37.8815, -2.51664, 0.28 ) }
    dend_32 { pt3dadd( -34.3437, -40.0337, -3.31088, 0.28 ) }
    dend_32 { pt3dadd( -35.4458, -44.1587, -4.8755, 0.55 ) }
    dend_32 { pt3dadd( -36.1507, -46.7967, -5.87607, 0.55 ) }
    dend_32 { pt3dadd( -36.9828, -50.8241, -7.17406, 0.55 ) }
    dend_32 { pt3dadd( -37.5625, -54.2465, -8.16601, 0.55 ) }
    dend_32 { pt3dadd( -37.965, -57.6899, -9.2621, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -38.0353, -59.3617, -9.8308, 0.28 ) }
    dend_32 { pt3dadd( -39.2533, -69.0329, -12.1062, 0.28 ) }
    dend_32 { pt3dadd( -38.9617, -78.6732, -14.772, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -29.2768, -28.5435, 1.36498, 1.11 ) }
    dend_29 { pt3dadd( -29.986, -34.3771, 2.17441, 1.11 ) }
    dend_29 { pt3dadd( -30.6763, -40.0544, 2.96215, 1.11 ) }
    dend_29 { pt3dadd( -31.3652, -45.7208, 3.74836, 1.11 ) }
    dend_29 { pt3dadd( -31.9641, -50.6453, 4.43165, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 8/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.7852, -2.87157, 35.6441, 0.55 ) }
    dend_25 { pt3dadd( 2.48549, -3.64171, 38.4174, 0.55 ) }
    dend_25 { pt3dadd( 2.69328, -3.83777, 39.1696, 0.83 ) }
    dend_25 { pt3dadd( 5.2347, -5.85008, 47.428, 0.28 ) }
    dend_25 { pt3dadd( 5.66919, -6.18942, 48.8921, 0.83 ) }
    dend_25 { pt3dadd( 6.62897, -6.98499, 52.284, 0.55 ) }
    dend_25 { pt3dadd( 7.13869, -7.40275, 54.2291, 1.11 ) }
    dend_25 { pt3dadd( 8.41257, -8.37825, 59.2355, 0.55 ) }
    dend_25 { pt3dadd( 9.22865, -8.95202, 62.3854, 1.38 ) }
    dend_25 { pt3dadd( 10.7711, -10.0204, 68.2334, 0.55 ) }
    dend_25 { pt3dadd( 11.592, -10.5877, 71.3175, 1.38 ) }
    dend_25 { pt3dadd( 13.2779, -11.6687, 77.6266, 0.28 ) }
    dend_25 { pt3dadd( 13.7737, -11.9695, 79.4316, 1.11 ) }
    dend_25 { pt3dadd( 14.405, -12.3737, 81.7206, 0.55 ) }
    dend_25 { pt3dadd( 15.2264, -12.8365, 84.4945, 1.66 ) }
    dend_25 { pt3dadd( 16.4391, -13.314, 88.0987, 0.55 ) }
    dend_25 { pt3dadd( 17.3643, -13.5392, 90.6915, 0.83 ) }
    dend_25 { pt3dadd( 18.3949, -13.697, 93.409, 0.28 ) }
    dend_25 { pt3dadd( 18.9314, -13.7492, 94.8672, 1.11 ) }
    dend_25 { pt3dadd( 20.0711, -13.776, 98.0409, 0.55 ) }
    dend_25 { pt3dadd( 20.7489, -13.7113, 99.9287, 1.38 ) }
    dend_25 { pt3dadd( 22.9788, -13.2524, 106.076, 0.28 ) }
    dend_25 { pt3dadd( 23.8918, -13.0519, 108.536, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 1.7852, -2.87157, 35.6441, 1.38 ) }
    dend_20 { pt3dadd( 3.20553, -3.14924, 37.7169, 1.38 ) }
    dend_20 { pt3dadd( 7.67915, -4.02382, 44.2457, 1.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 34/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 87.047, -43.0859, 10.9076, 0.28 ) }
    dend_17 { pt3dadd( 89.6419, -41.8817, 10.9451, 0.28 ) }
    dend_17 { pt3dadd( 91.6217, -40.9629, 10.9737, 0.55 ) }
    dend_17 { pt3dadd( 93.2666, -40.1996, 10.9974, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 87.047, -43.0859, 10.9076, 0.83 ) }
    dend_16 { pt3dadd( 89.235, -44.5501, 11.2575, 0.83 ) }
    dend_16 { pt3dadd( 91.5907, -46.1492, 11.652, 1.94 ) }
    dend_16 { pt3dadd( 93.4409, -47.4212, 11.9745, 1.11 ) }
    dend_16 { pt3dadd( 98.3567, -50.7842, 12.8137, 0.83 ) }
    dend_16 { pt3dadd( 102.282, -53.4341, 13.4512, 0.83 ) }
    dend_16 { pt3dadd( 104.958, -55.2076, 13.8562, 1.38 ) }
    dend_16 { pt3dadd( 107.641, -56.8518, 14.199, 0.55 ) }
    dend_16 { pt3dadd( 110.264, -58.365, 14.4924, 1.94 ) }
    dend_16 { pt3dadd( 113.067, -59.9399, 14.8068, 0.55 ) }
    dend_16 { pt3dadd( 115.04, -60.9807, 15.0474, 0.55 ) }
    dend_16 { pt3dadd( 117.326, -62.1142, 15.338, 1.11 ) }
    dend_16 { pt3dadd( 122.358, -64.549, 16.1323, 0.55 ) }
    dend_16 { pt3dadd( 123.404, -65.0029, 16.3446, 0.55 ) }
    dend_16 { pt3dadd( 126.898, -66.454, 17.2223, 1.11 ) }
    dend_16 { pt3dadd( 129.28, -67.4309, 18.0172, 0.55 ) }
    dend_16 { pt3dadd( 130.988, -68.1267, 18.6703, 0.55 ) }
    dend_16 { pt3dadd( 134.675, -69.5776, 20.2871, 0.83 ) }
    dend_16 { pt3dadd( 138.282, -70.9089, 22.0478, 0.28 ) }
    dend_16 { pt3dadd( 140.151, -71.5184, 22.9292, 1.38 ) }
    dend_16 { pt3dadd( 143.329, -72.4376, 24.3119, 0.55 ) }
    dend_16 { pt3dadd( 146.258, -73.1341, 25.4688, 0.55 ) }
    dend_16 { pt3dadd( 148.012, -73.497, 26.1236, 0.83 ) }
    dend_16 { pt3dadd( 150.878, -73.9545, 27.0674, 0.55 ) }
    dend_16 { pt3dadd( 153.158, -74.2554, 27.7451, 0.55 ) }
    dend_16 { pt3dadd( 155.986, -74.4877, 28.5326, 1.66 ) }
    dend_16 { pt3dadd( 160.813, -74.7528, 29.8048, 0.55 ) }
    dend_16 { pt3dadd( 163.322, -74.8946, 30.5696, 0.28 ) }
    dend_16 { pt3dadd( 165.945, -75.0342, 31.449, 0.83 ) }
    dend_16 { pt3dadd( 169.273, -75.0496, 32.8228, 0.55 ) }
    dend_16 { pt3dadd( 172.968, -74.9447, 34.5462, 0.55 ) }
    dend_16 { pt3dadd( 174.479, -74.8847, 35.3006, 1.38 ) }
    dend_16 { pt3dadd( 179.298, -74.7047, 37.8297, 0.28 ) }
    dend_16 { pt3dadd( 182.446, -74.5215, 39.5769, 1.11 ) }
    dend_16 { pt3dadd( 189.2, -74.0996, 43.5863, 0.28 ) }
    dend_16 { pt3dadd( 190.272, -74.0048, 44.2706, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.7726, -9.89544, 12.5118, 0.28 ) }
    dend_14 { pt3dadd( 21.3703, -12.3325, 14.205, 0.28 ) }
    dend_14 { pt3dadd( 21.5219, -12.5555, 14.3571, 0.83 ) }
    dend_14 { pt3dadd( 22.6714, -14.1858, 15.366, 0.83 ) }
    dend_14 { pt3dadd( 24.069, -16.1199, 16.4354, 0.28 ) }
    dend_14 { pt3dadd( 24.8657, -17.144, 16.9832, 0.83 ) }
    dend_14 { pt3dadd( 26.3769, -19.1386, 17.9963, 0.28 ) }
    dend_14 { pt3dadd( 26.8979, -19.8588, 18.3046, 0.55 ) }
    dend_14 { pt3dadd( 28.5327, -22.2193, 19.3028, 0.28 ) }
    dend_14 { pt3dadd( 29.5035, -23.6736, 19.8807, 0.55 ) }
    dend_14 { pt3dadd( 31.4086, -26.5934, 21.0075, 0.28 ) }
    dend_14 { pt3dadd( 33.3046, -29.6486, 22.2679, 0.28 ) }
    dend_14 { pt3dadd( 34.8615, -32.1954, 23.2984, 1.11 ) }
    dend_14 { pt3dadd( 37.2443, -36.2621, 24.9879, 0.55 ) }
    dend_14 { pt3dadd( 38.3719, -38.2775, 25.8583, 1.66 ) }
    dend_14 { pt3dadd( 39.4389, -40.2857, 26.7533, 0.28 ) }
    dend_14 { pt3dadd( 40.2903, -42.0345, 27.5231, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.7726, -9.89544, 12.5118, 0.55 ) }
    dend_13 { pt3dadd( 23.1929, -10.5888, 18.137, 0.55 ) }
    dend_13 { pt3dadd( 29.3867, -11.8443, 28.3236, 0.55 ) }
    dend_13 { pt3dadd( 31.6228, -12.2976, 32.0012, 0.55 ) }
    dend_13 { pt3dadd( 33.5608, -12.6904, 35.1886, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.38522, 21.5961, -2.43616, 0.55 ) }
    dend_8 { pt3dadd( 1.70613, 23.7047, -2.7049, 0.55 ) }
    dend_8 { pt3dadd( -1.28325, 27.4587, -3.18336, 0.55 ) }
    dend_8 { pt3dadd( -3.36039, 30.0671, -3.51581, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -5.04039, 32.1768, -3.7847, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.38522, 21.5961, -2.43616, 0.83 ) }
    dend_7 { pt3dadd( -0.966729, 23.9221, -5.36523, 0.83 ) }
    dend_7 { pt3dadd( -2.61712, 24.8299, -6.35219, 0.83 ) }
    dend_7 { pt3dadd( -4.62859, 26.0974, -7.39837, 0.83 ) }
    dend_7 { pt3dadd( -7.90809, 28.2088, -9.05032, 0.83 ) }
    dend_7 { pt3dadd( -12.9078, 31.3983, -11.4199, 0.83 ) }
    dend_7 { pt3dadd( -14.6048, 32.4262, -12.1921, 1.38 ) }
    dend_7 { pt3dadd( -17.4729, 34.2039, -13.3487, 0.83 ) }
    dend_7 { pt3dadd( -21.0257, 36.5393, -14.9305, 0.83 ) }
    dend_7 { pt3dadd( -24.143, 38.7301, -16.5005, 0.83 ) }
    dend_7 { pt3dadd( -25.9209, 40.0462, -17.5106, 1.38 ) }
    dend_7 { pt3dadd( -28.9788, 42.5382, -19.6066, 0.55 ) }
    dend_7 { pt3dadd( -31.3036, 44.5926, -21.6067, 0.83 ) }
    dend_7 { pt3dadd( -33.5357, 46.7111, -24.0276, 0.83 ) }
    dend_7 { pt3dadd( -35.3218, 48.5362, -26.466, 0.83 ) }
    dend_7 { pt3dadd( -36.9352, 50.4736, -29.0696, 1.38 ) }
    dend_7 { pt3dadd( -39.3134, 53.7002, -33.5253, 0.55 ) }
    dend_7 { pt3dadd( -39.6501, 54.1944, -34.2146, 0.55 ) }
    dend_7 { pt3dadd( -40.4628, 55.3061, -35.7477, 1.11 ) }
    dend_7 { pt3dadd( -42.2659, 57.6144, -38.5729, 0.55 ) }
    dend_7 { pt3dadd( -43.2957, 58.9663, -39.911, 0.55 ) }
    dend_7 { pt3dadd( -44.7542, 60.8803, -41.3465, 1.11 ) }
    dend_7 { pt3dadd( -46.2407, 62.7999, -42.2931, 0.55 ) }
    dend_7 { pt3dadd( -48.0773, 65.2266, -43.1516, 1.11 ) }
    dend_7 { pt3dadd( -49.4995, 67.1171, -43.6546, 0.28 ) }
    dend_7 { pt3dadd( -50.8774, 68.9874, -43.9858, 0.83 ) }
    dend_7 { pt3dadd( -52.8242, 71.6502, -44.3879, 0.28 ) }
    dend_7 { pt3dadd( -54.8363, 74.5188, -44.6385, 0.28 ) }
    dend_7 { pt3dadd( -56.7667, 77.4629, -44.7795, 1.11 ) }
    dend_7 { pt3dadd( -63.7387, 82.8708, -51.3481, 1.11 ) }
    dend_7 { pt3dadd( -70.015, 88.2907, -58.5756, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 12.4214, 23.0855, -5.45479, 1.11 ) }
    dend_5 { pt3dadd( 14.3743, 23.8962, -4.51059, 1.11 ) }
    dend_5 { pt3dadd( 18.3007, 25.5248, -2.43345, 0.83 ) }
    dend_5 { pt3dadd( 22.1947, 27.1291, -0.292065, 0.83 ) }
    dend_5 { pt3dadd( 25.4447, 28.4136, 1.58437, 0.83 ) }
    dend_5 { pt3dadd( 26.9839, 28.9973, 2.47128, 0.55 ) }
    dend_5 { pt3dadd( 30.0749, 30.1676, 4.28561, 1.11 ) }
    dend_5 { pt3dadd( 32.7291, 31.19, 5.95767, 0.55 ) }
    dend_5 { pt3dadd( 34.7374, 31.9301, 7.26278, 1.38 ) }
    dend_5 { pt3dadd( 37.1035, 32.8376, 8.86684, 0.55 ) }
    dend_5 { pt3dadd( 38.8181, 33.5356, 10.0056, 0.55 ) }
    dend_5 { pt3dadd( 41.8391, 34.8891, 12.0183, 0.83 ) }
    dend_5 { pt3dadd( 44.2136, 36.0668, 13.5331, 0.28 ) }
    dend_5 { pt3dadd( 45.1053, 36.5507, 14.109, 0.83 ) }
    dend_5 { pt3dadd( 46.9133, 37.6529, 15.2811, 0.28 ) }
    dend_5 { pt3dadd( 49.4803, 39.3083, 16.9161, 1.11 ) }
    dend_5 { pt3dadd( 51.9663, 40.9546, 18.5971, 0.28 ) }
    dend_5 { pt3dadd( 53.3662, 41.8776, 19.6005, 1.66 ) }
    dend_5 { pt3dadd( 56.5024, 43.9256, 22.0777, 0.55 ) }
    dend_5 { pt3dadd( 57.87, 44.7846, 23.2013, 0.55 ) }
    dend_5 { pt3dadd( 59.0472, 45.474, 24.1657, 0.55 ) }
    dend_5 { pt3dadd( 62.0019, 47.0753, 26.5578, 1.38 ) }
    dend_5 { pt3dadd( 64.1008, 48.1019, 28.1715, 0.28 ) }
    dend_5 { pt3dadd( 66.4386, 49.1157, 30.0354, 0.83 ) }
    dend_5 { pt3dadd( 68.4592, 49.8702, 31.7234, 1.11 ) }
    dend_5 { pt3dadd( 69.6839, 50.2612, 32.7393, 1.11 ) }
    dend_5 { pt3dadd( 70.703, 50.5502, 33.5463, 0.28 ) }
    dend_5 { pt3dadd( 71.9796, 50.8414, 34.5297, 0.83 ) }
    dend_5 { pt3dadd( 77.6078, 51.9038, 38.8595, 0.28 ) }
    dend_5 { pt3dadd( 80.2493, 52.2948, 40.9639, 1.38 ) }
    dend_5 { pt3dadd( 81.5296, 52.453, 42.0376, 0.28 ) }
    dend_5 { pt3dadd( 83.0116, 52.6714, 43.348, 1.11 ) }
    dend_5 { pt3dadd( 85.7513, 53.1902, 45.9773, 0.28 ) }
    dend_5 { pt3dadd( 86.0815, 53.2718, 46.3088, 0.55 ) }
    dend_5 { pt3dadd( 88.4373, 54.0367, 48.6918, 0.28 ) }
    dend_5 { pt3dadd( 89.2852, 54.4297, 49.6541, 1.38 ) }
    dend_5 { pt3dadd( 92.6918, 56.465, 53.9563, 0.28 ) }
    dend_5 { pt3dadd( 94.3595, 57.844, 56.5942, 0.83 ) }
    dend_5 { pt3dadd( 95.1832, 58.6561, 58.0207, 0.28 ) }
    dend_5 { pt3dadd( 95.7036, 59.2024, 58.9597, 1.11 ) }
    dend_5 { pt3dadd( 97.8253, 61.5723, 62.8896, 0.28 ) }
    dend_5 { pt3dadd( 98.4926, 62.3432, 64.1523, 1.11 ) }
    dend_5 { pt3dadd( 102.89, 67.5872, 72.457, 0.28 ) }
    dend_5 { pt3dadd( 103.556, 68.4, 73.6891, 1.38 ) }
    dend_5 { pt3dadd( 105.38, 70.7141, 77.0282, 0.28 ) }
    dend_5 { pt3dadd( 105.864, 71.3251, 77.9022, 1.38 ) }
    dend_5 { pt3dadd( 107.654, 73.559, 81.0147, 0.28 ) }
    dend_5 { pt3dadd( 107.942, 73.9142, 81.4917, 0.83 ) }
    dend_5 { pt3dadd( 110.272, 76.8953, 84.6046, 0.55 ) }
    dend_5 { pt3dadd( 111.01, 78.002, 85.7527, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 82/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.4214, 23.0855, -5.45479, 1.38 ) }
    dend_2 { pt3dadd( 13.686, 24.9457, -8.08529, 1.38 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 84/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 31.9193, 40.7779, 54.7682, 0.55 ) }
    dend_50 { pt3dadd( 34.0355, 40.5508, 55.7105, 0.55 ) }
    dend_50 { pt3dadd( 36.4735, 40.3334, 56.7469, 0.55 ) }
    dend_50 { pt3dadd( 41.1945, 40.017, 58.5877, 0.55 ) }
    dend_50 { pt3dadd( 44.063, 39.8764, 59.675, 1.11 ) }
    dend_50 { pt3dadd( 49.1147, 39.6035, 61.2433, 0.55 ) }
    dend_50 { pt3dadd( 52.8163, 39.4208, 62.2826, 0.55 ) }
    dend_50 { pt3dadd( 55.0061, 39.3068, 62.8339, 0.28 ) }
    dend_50 { pt3dadd( 57.3162, 39.265, 63.3657, 0.83 ) }
    dend_50 { pt3dadd( 61.0274, 39.2376, 64.0941, 0.55 ) }
    dend_50 { pt3dadd( 66.0943, 39.2222, 65.0776, 0.83 ) }
    dend_50 { pt3dadd( 70.2859, 39.2575, 65.8706, 0.28 ) }
    dend_50 { pt3dadd( 75.1149, 39.3517, 66.9215, 0.83 ) }
    dend_50 { pt3dadd( 79.6597, 39.5105, 68.011, 0.28 ) }
    dend_50 { pt3dadd( 80.3643, 39.5489, 68.207, 0.28 ) }
    dend_50 { pt3dadd( 82.7088, 39.7782, 68.9248, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 85.2529, 40.1883, 69.8374, 0.28 ) }
    dend_50 { pt3dadd( 87.2428, 40.6026, 70.5827, 0.83 ) }
    dend_50 { pt3dadd( 89.5854, 41.2488, 71.6161, 0.28 ) }
    dend_50 { pt3dadd( 91.4059, 41.7525, 72.3541, 0.83 ) }
    dend_50 { pt3dadd( 93.0473, 42.2404, 73.0269, 0.28 ) }
    dend_50 { pt3dadd( 95.2578, 42.9623, 73.9287, 0.83 ) }
    dend_50 { pt3dadd( 98.7354, 44.1773, 75.5188, 0.28 ) }
    dend_50 { pt3dadd( 100.39, 44.7884, 76.3735, 0.55 ) }
    dend_50 { pt3dadd( 103.713, 46.2464, 78.3111, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 9/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 31.9193, 40.7779, 54.7682, 0.83 ) }
    dend_49 { pt3dadd( 32.6073, 41.9257, 56.0909, 0.83 ) }
    dend_49 { pt3dadd( 33.2562, 43.0048, 57.4679, 0.83 ) }
    dend_49 { pt3dadd( 33.9207, 44.0956, 58.9104, 0.55 ) }
    dend_49 { pt3dadd( 34.1562, 44.4699, 59.5187, 0.55 ) }
    dend_49 { pt3dadd( 34.774, 45.4086, 61.1377, 0.83 ) }
    dend_49 { pt3dadd( 35.2887, 46.1894, 62.5229, 0.55 ) }
    dend_49 { pt3dadd( 35.7688, 46.8776, 63.8232, 0.83 ) }
    dend_49 { pt3dadd( 36.0275, 47.2619, 64.5035, 1.38 ) }
    dend_49 { pt3dadd( 37.5128, 49.6715, 68.4957, 0.55 ) }
    dend_49 { pt3dadd( 38.2365, 50.9654, 70.4827, 1.38 ) }
    dend_49 { pt3dadd( 38.9771, 52.5119, 72.5544, 0.55 ) }
    dend_49 { pt3dadd( 39.1082, 52.8481, 72.9303, 1.11 ) }
    dend_49 { pt3dadd( 39.597, 54.4716, 74.4631, 0.55 ) }
    dend_49 { pt3dadd( 39.7985, 55.4289, 75.2299, 0.83 ) }
    dend_49 { pt3dadd( 39.8773, 56.0683, 75.6301, 0.83 ) }
    dend_49 { pt3dadd( 39.9777, 57.7772, 76.6693, 0.55 ) }
    dend_49 { pt3dadd( 40.0345, 59.8059, 77.8667, 0.83 ) }
    dend_49 { pt3dadd( 40.0463, 61.4686, 78.898, 1.11 ) }
    dend_49 { pt3dadd( 40.0272, 62.951, 79.8901, 0.55 ) }
    dend_49 { pt3dadd( 40.0205, 63.2616, 80.1068, 0.83 ) }
    dend_49 { pt3dadd( 40.0022, 64.5305, 81.0379, 0.28 ) }
    dend_49 { pt3dadd( 39.9912, 66.037, 82.1739, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -38.9617, -78.6732, -14.772, 0.28 ) }
    dend_34 { pt3dadd( -40.0839, -85.5153, -16.2991, 0.28 ) }
    dend_34 { pt3dadd( -39.9702, -92.5627, -17.2154, 0.28 ) }
    dend_34 { pt3dadd( -39.73, -99.6654, -17.5385, 0.28 ) }
    dend_34 { pt3dadd( -39.1627, -106.641, -18.7344, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 37/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -38.9617, -78.6732, -14.772, 0.28 ) }
    dend_33 { pt3dadd( -40.181, -86.1681, -16.7017, 0.28 ) }
    dend_33 { pt3dadd( -41.0108, -93.7759, -18.4034, 0.28 ) }
    dend_33 { pt3dadd( -40.6077, -101.545, -19.43, 0.28 ) }
    dend_33 { pt3dadd( -39.9935, -109.238, -20.8155, 0.28 ) }
    dend_33 { pt3dadd( -38.6978, -116.867, -22.0562, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -31.9641, -50.6453, 4.43165, 1.11 ) }
    dend_31 { pt3dadd( -32.3663, -52.4246, 6.11567, 1.11 ) }
    dend_31 { pt3dadd( -32.8737, -54.2353, 8.00889, 1.11 ) }
    dend_31 { pt3dadd( -33.8257, -57.6326, 11.5611, 1.11 ) }
    dend_31 { pt3dadd( -34.3744, -59.5903, 13.6081, 1.11 ) }
    dend_31 { pt3dadd( -34.8912, -61.4347, 15.5366, 1.11 ) }
    dend_31 { pt3dadd( -35.4193, -63.3199, 17.5077, 1.38 ) }
    dend_31 { pt3dadd( -36.3095, -66.434, 20.9696, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -31.9641, -50.6453, 4.43165, 0.83 ) }
    dend_30 { pt3dadd( -32.4995, -54.9671, 4.95852, 0.83 ) }
    dend_30 { pt3dadd( -33.3834, -60.2294, 5.56276, 0.83 ) }
    dend_30 { pt3dadd( -34.342, -65.4267, 6.17408, 0.83 ) }
    dend_30 { pt3dadd( -36.5097, -76.4776, 7.49303, 0.83 ) }
    dend_30 { pt3dadd( -37.9697, -84.1288, 8.43544, 0.83 ) }
    dend_30 { pt3dadd( -39.1957, -90.3331, 9.2164, 0.83 ) }
    dend_30 { pt3dadd( -40.4771, -96.1389, 10.1222, 0.83 ) }
    dend_30 { pt3dadd( -41.3811, -100.481, 10.94, 0.83 ) }
    dend_30 { pt3dadd( -41.9339, -103.287, 11.4869, 0.83 ) }
    dend_30 { pt3dadd( -42.7271, -107.316, 12.5742, 0.83 ) }
    dend_30 { pt3dadd( -44.1838, -116.251, 15.3011, 0.83 ) }
    dend_30 { pt3dadd( -45.2338, -122.629, 17.462, 0.55 ) }
    dend_30 { pt3dadd( -45.7173, -127.309, 19.2565, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 65/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.67915, -4.02382, 44.2457, 0.55 ) }
    dend_24 { pt3dadd( 6.73874, -4.53482, 48.6631, 0.55 ) }
    dend_24 { pt3dadd( 5.37619, -5.16592, 55.5104, 1.11 ) }
    dend_24 { pt3dadd( 4.20708, -5.70372, 61.4386, 0.83 ) }
    dend_24 { pt3dadd( 3.07129, -6.13951, 66.7601, 1.66 ) }
    dend_24 { pt3dadd( 0.81815, -6.78106, 76.8512, 1.11 ) }
    dend_24 { pt3dadd( 0.00976771, -6.95374, 80.3768, 1.38 ) }
    dend_24 { pt3dadd( -2.27355, -7.12203, 89.346, 0.83 ) }
    dend_24 { pt3dadd( -3.26386, -7.17204, 92.9485, 1.66 ) }
    dend_24 { pt3dadd( -5.29356, -7.27617, 99.4674, 0.83 ) }
    dend_24 { pt3dadd( -6.30936, -7.37074, 102.29, 0.83 ) }
    dend_24 { pt3dadd( -7.6355, -7.65423, 105.31, 1.38 ) }
    dend_24 { pt3dadd( -8.93677, -7.99229, 107.769, 1.38 ) }
    dend_24 { pt3dadd( -11.3935, -8.56514, 111.395, 0.83 ) }
    dend_24 { pt3dadd( -14.4591, -9.23861, 115.25, 0.55 ) }
    dend_24 { pt3dadd( -15.1635, -9.43024, 116.085, 0.55 ) }
    dend_24 { pt3dadd( -16.9804, -10.0366, 118.324, 0.83 ) }
    dend_24 { pt3dadd( -19.0828, -10.8704, 121.105, 0.55 ) }
    dend_24 { pt3dadd( -19.9057, -11.2409, 122.396, 0.55 ) }
    dend_24 { pt3dadd( -22.0823, -12.2898, 126.206, 1.11 ) }
    dend_24 { pt3dadd( -24.7908, -13.6911, 131.303, 0.55 ) }
    dend_24 { pt3dadd( -26.3769, -14.4921, 134.276, 0.83 ) }
    dend_24 { pt3dadd( -28.3498, -15.4907, 137.804, 1.38 ) }
    dend_24 { pt3dadd( -31.4799, -17.2519, 143.642, 0.55 ) }
    dend_24 { pt3dadd( -32.2369, -17.713, 145.098, 0.83 ) }
    dend_24 { pt3dadd( -34.0145, -18.8219, 148.48, 0.83 ) }
    dend_24 { pt3dadd( -35.6916, -19.615, 151.138, 0.55 ) }
    dend_24 { pt3dadd( -37.1385, -20.0847, 153.099, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 93/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.67915, -4.02382, 44.2457, 0.83 ) }
    dend_21 { pt3dadd( 10.1665, -4.76479, 46.5696, 0.83 ) }
    dend_21 { pt3dadd( 12.5792, -5.51099, 48.9064, 0.83 ) }
    dend_21 { pt3dadd( 15.4599, -6.40192, 51.6965, 0.83 ) }
    dend_21 { pt3dadd( 17.7172, -7.10007, 53.8829, 0.83 ) }
    dend_21 { pt3dadd( 20.6171, -7.99696, 56.6916, 0.83 ) }
    dend_21 { pt3dadd( 24.048, -9.05808, 60.0145, 1.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 27.0795, -10.0638, 63.2985, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.04039, 32.1768, -3.7847, 0.55 ) }
    dend_10 { pt3dadd( -4.09371, 33.8484, -1.88697, 0.55 ) }
    dend_10 { pt3dadd( -2.86947, 36.1226, 0.456448, 0.28 ) }
    dend_10 { pt3dadd( -2.67757, 36.4978, 0.822189, 0.83 ) }
    dend_10 { pt3dadd( -0.0326623, 41.533, 5.46444, 0.28 ) }
    dend_10 { pt3dadd( 0.43453, 42.3972, 6.21917, 1.38 ) }
    dend_10 { pt3dadd( 4.21973, 49.3584, 11.6442, 0.28 ) }
    dend_10 { pt3dadd( 4.85569, 50.5289, 12.4452, 1.66 ) }
    dend_10 { pt3dadd( 6.87881, 54.1732, 14.6465, 0.28 ) }
    dend_10 { pt3dadd( 7.92178, 55.972, 15.6344, 0.28 ) }
    dend_10 { pt3dadd( 8.73192, 57.308, 16.2235, 1.66 ) }
    dend_10 { pt3dadd( 11.3713, 61.5491, 17.8794, 0.28 ) }
    dend_10 { pt3dadd( 12.83, 63.7802, 18.5263, 1.38 ) }
    dend_10 { pt3dadd( 14.2849, 65.9535, 19.1535, 0.28 ) }
    dend_10 { pt3dadd( 14.971, 66.9693, 19.401, 0.55 ) }
    dend_10 { pt3dadd( 16.3934, 69.2237, 20.0464, 0.28 ) }
    dend_10 { pt3dadd( 16.861, 69.9768, 20.2975, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.04039, 32.1768, -3.7847, 0.28 ) }
    dend_9 { pt3dadd( -7.82767, 33.9829, -3.2152, 0.28 ) }
    dend_9 { pt3dadd( -8.38452, 34.357, -3.15145, 0.83 ) }
    dend_9 { pt3dadd( -9.64136, 35.2288, -3.0235, 0.28 ) }
    dend_9 { pt3dadd( -10.3499, 35.7796, -2.87336, 0.83 ) }
    dend_9 { pt3dadd( -11.6507, 36.8303, -2.5538, 0.28 ) }
    dend_9 { pt3dadd( -12.1587, 37.2547, -2.42012, 0.83 ) }
    dend_9 { pt3dadd( -14.5038, 39.4482, -1.74976, 0.28 ) }
    dend_9 { pt3dadd( -15.0549, 39.9951, -1.57948, 0.83 ) }
    dend_9 { pt3dadd( -19.9176, 44.4682, 0.219481, 0.28 ) }
    dend_9 { pt3dadd( -20.0904, 44.619, 0.290352, 1.38 ) }
    dend_9 { pt3dadd( -20.5226, 44.9908, 0.494706, 1.38 ) }
    dend_9 { pt3dadd( -21.4925, 45.8044, 0.996706, 0.28 ) }
    dend_9 { pt3dadd( -21.8668, 46.1314, 1.1994, 0.55 ) }
    dend_9 { pt3dadd( -26.1441, 49.8915, 3.37969, 0.28 ) }
    dend_9 { pt3dadd( -26.9128, 50.5341, 3.7579, 1.11 ) }
    dend_9 { pt3dadd( -29.0392, 52.2695, 4.79841, 0.28 ) }
    dend_9 { pt3dadd( -29.3929, 52.5489, 4.96987, 0.83 ) }
    dend_9 { pt3dadd( -32.1598, 54.682, 6.28619, 0.28 ) }
    dend_9 { pt3dadd( -32.2845, 54.7883, 6.34306, 0.55 ) }
    dend_9 { pt3dadd( -36.5281, 58.9677, 7.70692, 0.55 ) }
    dend_9 { pt3dadd( -40.2365, 63.2713, 9.97312, 0.55 ) }
    dend_9 { pt3dadd( -43.5528, 68.2768, 11.2596, 0.55 ) }
    dend_9 { pt3dadd( -46.3055, 73.7324, 12.0279, 0.55 ) }
    dend_9 { pt3dadd( -50.0434, 78.5939, 11.9922, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.686, 24.9457, -8.08529, 0.83 ) }
    dend_4 { pt3dadd( 17.2698, 24.4379, -9.60532, 0.83 ) }
    dend_4 { pt3dadd( 21.6854, 23.9359, -11.2985, 0.83 ) }
    dend_4 { pt3dadd( 23.6983, 23.8564, -11.9553, 0.83 ) }
    dend_4 { pt3dadd( 27.5847, 23.8182, -13.1521, 0.55 ) }
    dend_4 { pt3dadd( 29.1943, 23.9112, -13.5797, 0.55 ) }
    dend_4 { pt3dadd( 32.2985, 24.154, -14.3627, 0.83 ) }
    dend_4 { pt3dadd( 36.033, 24.6392, -15.1372, 0.83 ) }
    dend_4 { pt3dadd( 39.8281, 25.3178, -15.904, 0.83 ) }
    dend_4 { pt3dadd( 42.0994, 25.7424, -16.3369, 1.11 ) }
    dend_4 { pt3dadd( 47.4292, 26.8056, -17.1663, 1.11 ) }
    dend_4 { pt3dadd( 50.5451, 27.4678, -17.7055, 0.55 ) }
    dend_4 { pt3dadd( 52.6401, 27.9271, -18.0758, 0.55 ) }
    dend_4 { pt3dadd( 54.4819, 28.3114, -18.4389, 1.11 ) }
    dend_4 { pt3dadd( 57.319, 28.8316, -19.0153, 0.55 ) }
    dend_4 { pt3dadd( 59.4836, 29.2448, -19.4254, 0.55 ) }
    dend_4 { pt3dadd( 62.2892, 29.7562, -19.9355, 1.11 ) }
    dend_4 { pt3dadd( 64.0968, 30.1313, -20.1789, 0.55 ) }
    dend_4 { pt3dadd( 66.2971, 30.5537, -20.4086, 0.28 ) }
    dend_4 { pt3dadd( 69.1075, 31.0564, -20.5842, 0.83 ) }
    dend_4 { pt3dadd( 74.4426, 31.8217, -20.578, 0.28 ) }
    dend_4 { pt3dadd( 76.2946, 31.9727, -20.4609, 0.55 ) }
    dend_4 { pt3dadd( 78.364, 31.9794, -20.1663, 0.28 ) }
    dend_4 { pt3dadd( 79.7285, 31.8855, -19.9071, 0.28 ) }
    dend_4 { pt3dadd( 81.6057, 31.5806, -19.4336, 1.11 ) }
    dend_4 { pt3dadd( 84.8188, 30.8361, -18.4931, 0.55 ) }
    dend_4 { pt3dadd( 87.569, 29.9673, -17.535, 1.66 ) }
    dend_4 { pt3dadd( 91.1046, 28.7378, -16.2855, 0.28 ) }
    dend_4 { pt3dadd( 92.5988, 28.1909, -15.767, 0.28 ) }
    dend_4 { pt3dadd( 95.1759, 27.2868, -14.8425, 0.83 ) }
    dend_4 { pt3dadd( 105.191, 27.4043, -14.4111, 0.83 ) }
    dend_4 { pt3dadd( 114.974, 26.4917, -12.3972, 0.83 ) }
    dend_4 { pt3dadd( 124.699, 27.5599, -10.2091, 0.83 ) }
    dend_4 { pt3dadd( 134.01, 28.3616, -6.58054, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.686, 24.9457, -8.08529, 1.11 ) }
    dend_3 { pt3dadd( 13.8341, 26.936, -8.38314, 1.11 ) }
    dend_3 { pt3dadd( 14.1165, 29.2661, -8.79116, 0.83 ) }
    dend_3 { pt3dadd( 14.4815, 31.077, -9.13305, 0.83 ) }
    dend_3 { pt3dadd( 14.9762, 33.2653, -9.5827, 1.38 ) }
    dend_3 { pt3dadd( 15.8724, 37.422, -10.6267, 0.83 ) }
    dend_3 { pt3dadd( 16.34, 39.7125, -11.304, 0.83 ) }
    dend_3 { pt3dadd( 16.6568, 41.2228, -11.825, 0.83 ) }
    dend_3 { pt3dadd( 17.3862, 45.0096, -13.5129, 0.83 ) }
    dend_3 { pt3dadd( 17.6241, 46.3312, -14.192, 0.83 ) }
    dend_3 { pt3dadd( 18.0893, 49.46, -16.0284, 0.83 ) }
    dend_3 { pt3dadd( 18.312, 51.4536, -17.2952, 1.11 ) }
    dend_3 { pt3dadd( 18.4252, 52.8101, -18.152, 1.11 ) }
    dend_3 { pt3dadd( 18.7213, 56.3561, -20.263, 0.83 ) }
    dend_3 { pt3dadd( 18.9187, 58.2822, -21.3642, 0.83 ) }
    dend_3 { pt3dadd( 19.2445, 60.4608, -22.5309, 1.11 ) }
    dend_3 { pt3dadd( 19.4436, 61.7218, -23.1537, 0.28 ) }
    dend_3 { pt3dadd( 19.6973, 63.4741, -23.9913, 0.83 ) }
    dend_3 { pt3dadd( 19.996, 67.9849, -25.8433, 0.83 ) }
    dend_3 { pt3dadd( 20.0702, 70.8062, -26.7852, 1.66 ) }
    dend_3 { pt3dadd( 20.0651, 74.409, -27.8628, 0.55 ) }
    dend_3 { pt3dadd( 20.0252, 76.9676, -28.5463, 0.55 ) }
    dend_3 { pt3dadd( 19.937, 79.6906, -29.2188, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( 19.4415, 89.1042, -31.602, 0.28 ) }
    dend_3 { pt3dadd( 19.3379, 90.7932, -32.0296, 1.66 ) }
    dend_3 { pt3dadd( 19.1742, 95.2581, -33.1025, 0.28 ) }
    dend_3 { pt3dadd( 19.1696, 95.8033, -33.2188, 0.83 ) }
    dend_3 { pt3dadd( 19.1959, 97.2691, -33.5184, 0.28 ) }
    dend_3 { pt3dadd( 19.3079, 101.059, -34.2407, 1.66 ) }
    dend_3 { pt3dadd( 19.535, 105.803, -35.1835, 0.28 ) }
    dend_3 { pt3dadd( 19.5809, 107.2, -35.4373, 1.38 ) }
    dend_3 { pt3dadd( 19.7276, 114.208, -36.4682, 0.28 ) }
    dend_3 { pt3dadd( 19.6829, 115.591, -36.6317, 1.66 ) }
    dend_3 { pt3dadd( 19.3568, 119.46, -36.9474, 0.28 ) }
    dend_3 { pt3dadd( 19.2563, 120.071, -37.0091, 0.83 ) }
    dend_3 { pt3dadd( 18.1933, 124.748, -37.6619, 0.28 ) }
    dend_3 { pt3dadd( 17.9793, 125.586, -37.8004, 0.83 ) }
    dend_3 { pt3dadd( 15.9634, 132.549, -39.273, 0.28 ) }
    dend_3 { pt3dadd( 15.3825, 134.409, -39.716, 1.11 ) }
    dend_3 { pt3dadd( 12.2021, 143.408, -42.1931, 0.28 ) }
    dend_3 { pt3dadd( 12.1044, 143.661, -42.2701, 0.83 ) }
    dend_3 { pt3dadd( 13.8682, 153.511, -43.4569, 0.83 ) }
    dend_3 { pt3dadd( 16.0266, 163.353, -43.749, 0.83 ) }
    dend_3 { pt3dadd( 18.448, 172.89, -45.8477, 0.83 ) }
    dend_3 { pt3dadd( 22.0427, 182.232, -46.822, 0.83 ) }
    dend_3 { pt3dadd( 26.1069, 191.288, -48.3596, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.0795, -10.0638, 63.2985, 0.28 ) }
    dend_23 { pt3dadd( 27.9422, -11.1586, 64.1341, 0.28 ) }
    dend_23 { pt3dadd( 28.3214, -11.6579, 64.5751, 0.83 ) }
    dend_23 { pt3dadd( 29.198, -12.7188, 65.6406, 0.28 ) }
    dend_23 { pt3dadd( 29.5593, -13.1185, 66.1245, 0.83 ) }
    dend_23 { pt3dadd( 30.8461, -14.5911, 68.0757, 0.28 ) }
    dend_23 { pt3dadd( 31.0539, -14.8495, 68.434, 0.83 ) }
    dend_23 { pt3dadd( 31.8965, -15.9722, 70.202, 0.28 ) }
    dend_23 { pt3dadd( 32.6629, -17.0003, 71.9079, 0.83 ) }
    dend_23 { pt3dadd( 33.5318, -18.2133, 74.0033, 0.28 ) }
    dend_23 { pt3dadd( 34.2893, -19.3626, 76.0176, 1.38 ) }
    dend_23 { pt3dadd( 34.897, -20.3463, 77.7949, 0.28 ) }
    dend_23 { pt3dadd( 35.3055, -21.0255, 79.0787, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.0795, -10.0638, 63.2985, 0.55 ) }
    dend_22 { pt3dadd( 30.9191, -10.4648, 67.0452, 0.55 ) }
    dend_22 { pt3dadd( 31.4991, -10.5129, 67.6544, 0.28 ) }
    dend_22 { pt3dadd( 33.542, -10.7073, 69.8331, 0.83 ) }
    dend_22 { pt3dadd( 37.5619, -11.1197, 74.1097, 0.83 ) }
    dend_22 { pt3dadd( 40.8083, -11.4284, 77.464, 0.83 ) }
    dend_22 { pt3dadd( 42.8629, -11.6061, 79.5291, 1.38 ) }
    dend_22 { pt3dadd( 46.7574, -11.8206, 83.4136, 0.55 ) }
    dend_22 { pt3dadd( 47.9576, -11.8701, 84.5633, 0.55 ) }
    dend_22 { pt3dadd( 50.9628, -11.9575, 87.2383, 0.55 ) }
    dend_22 { pt3dadd( 53.9227, -12.001, 89.6137, 1.11 ) }
    dend_22 { pt3dadd( 57.0563, -12.0318, 91.842, 0.55 ) }
    dend_22 { pt3dadd( 59.8144, -12.0141, 93.6583, 1.38 ) }
    dend_22 { pt3dadd( 62.7776, -11.977, 95.4227, 1.11 ) }
    dend_22 { pt3dadd( 65.9937, -11.8601, 97.256, 0.55 ) }
    dend_22 { pt3dadd( 69.3055, -11.6461, 99.0909, 0.55 ) }
    dend_22 { pt3dadd( 71.0704, -11.4956, 100.089, 0.55 ) }
    dend_22 { pt3dadd( 72.5724, -11.3301, 100.988, 0.83 ) }
    dend_22 { pt3dadd( 74.7001, -11.0371, 102.349, 0.83 ) }
    dend_22 { pt3dadd( 76.0401, -10.792, 103.373, 0.83 ) }
    dend_22 { pt3dadd( 78.332, -10.2268, 105.516, 0.55 ) }
    dend_22 { pt3dadd( 79.3522, -9.90601, 106.645, 0.83 ) }
    dend_22 { pt3dadd( 81.0439, -9.21184, 108.63, 0.55 ) }
    dend_22 { pt3dadd( 81.6129, -8.94355, 109.342, 0.83 ) }
    dend_22 { pt3dadd( 83.8784, -7.74215, 112.229, 0.55 ) }
    dend_22 { pt3dadd( 84.8777, -7.2669, 113.378, 0.55 ) }
    dend_22 { pt3dadd( 86.338, -6.59249, 114.956, 0.55 ) }
    dend_22 { pt3dadd( 86.7422, -6.41042, 115.357, 0.83 ) }
    dend_22 { pt3dadd( 89.0629, -5.45644, 117.529, 0.55 ) }
    dend_22 { pt3dadd( 91.6931, -4.47625, 119.873, 1.11 ) }
    dend_22 { pt3dadd( 95.7868, -3.04245, 123.345, 0.55 ) }
    dend_22 { pt3dadd( 97.7522, -2.40295, 124.959, 1.11 ) }
    dend_22 { pt3dadd( 101.016, -1.39855, 127.586, 0.55 ) }
    dend_22 { pt3dadd( 102.941, -0.85169, 129.109, 0.83 ) }
    dend_22 { pt3dadd( 105.218, -0.259255, 130.834, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_38 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_45 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_44 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_5 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_50 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_4 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_3 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_22 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_18 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_11 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_47 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_40 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_8 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_51 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_21 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_31 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_23 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_49 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 5
    dend_43 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 9
    dend_35 nseg = 5
    dend_15 nseg = 5
    dend_48 nseg = 3
    dend_45 nseg = 7
    dend_44 nseg = 5
    dend_42 nseg = 13
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 5
    dend_14 nseg = 3
    dend_7 nseg = 5
    dend_5 nseg = 7
    dend_50 nseg = 3
    dend_30 nseg = 3
    dend_24 nseg = 7
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_4 nseg = 7
    dend_3 nseg = 9
    dend_22 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_NBC_68416e1f93_0_0


